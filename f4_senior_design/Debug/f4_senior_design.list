
f4_senior_design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000231b0  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000023dc  08023380  08023380  00024380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00006996  0802575c  0802575c  0002675c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002b4  0802c0f4  0802c0f4  0002d0f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 00042904  0802c3a8  0802c3a8  0002d3a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000060  0806ecac  0806ecac  0006fcac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806ed0c  0806ed0c  00070320  2**0
                  CONTENTS
  8 .ARM          00000008  0806ed0c  0806ed0c  0006fd0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0806ed14  0806ed14  00070320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0806ed14  0806ed14  0006fd14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   0000000c  0806ed2c  0806ed2c  0006fd2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         00000104  20000000  0806ed38  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000120  0806ee3c  00070120  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000220  0806ef3c  00070220  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          000037d4  20000320  0806f03c  00070320  2**2
                  ALLOC
 16 ._user_heap_stack 00000604  20003af4  0806f03c  00070af4  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00070320  2**0
                  CONTENTS, READONLY
 18 .debug_info   0007ce4d  00000000  00000000  00070350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0000df41  00000000  00000000  000ed19d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002a30  00000000  00000000  000fb0e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 00001f80  00000000  00000000  000fdb10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  0002d2f0  00000000  00000000  000ffa90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   00034155  00000000  00000000  0012cd80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    000fbf76  00000000  00000000  00160ed5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  0025ce4b  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000bd78  00000000  00000000  0025cf10  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  00268c88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000320 	.word	0x20000320
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08023368 	.word	0x08023368

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000324 	.word	0x20000324
 800020c:	08023368 	.word	0x08023368

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_d2f>:
 8000b5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b60:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b64:	bf24      	itt	cs
 8000b66:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b6a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b6e:	d90d      	bls.n	8000b8c <__aeabi_d2f+0x30>
 8000b70:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b74:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b78:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b7c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b80:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b84:	bf08      	it	eq
 8000b86:	f020 0001 	biceq.w	r0, r0, #1
 8000b8a:	4770      	bx	lr
 8000b8c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b90:	d121      	bne.n	8000bd6 <__aeabi_d2f+0x7a>
 8000b92:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b96:	bfbc      	itt	lt
 8000b98:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b9c:	4770      	bxlt	lr
 8000b9e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ba2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba6:	f1c2 0218 	rsb	r2, r2, #24
 8000baa:	f1c2 0c20 	rsb	ip, r2, #32
 8000bae:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bb2:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb6:	bf18      	it	ne
 8000bb8:	f040 0001 	orrne.w	r0, r0, #1
 8000bbc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc8:	ea40 000c 	orr.w	r0, r0, ip
 8000bcc:	fa23 f302 	lsr.w	r3, r3, r2
 8000bd0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd4:	e7cc      	b.n	8000b70 <__aeabi_d2f+0x14>
 8000bd6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bda:	d107      	bne.n	8000bec <__aeabi_d2f+0x90>
 8000bdc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000be0:	bf1e      	ittt	ne
 8000be2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000be6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bea:	4770      	bxne	lr
 8000bec:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000bf0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000bf4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b96a 	b.w	8000ee8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9d08      	ldr	r5, [sp, #32]
 8000c32:	460c      	mov	r4, r1
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d14e      	bne.n	8000cd6 <__udivmoddi4+0xaa>
 8000c38:	4694      	mov	ip, r2
 8000c3a:	458c      	cmp	ip, r1
 8000c3c:	4686      	mov	lr, r0
 8000c3e:	fab2 f282 	clz	r2, r2
 8000c42:	d962      	bls.n	8000d0a <__udivmoddi4+0xde>
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0320 	rsb	r3, r2, #32
 8000c4a:	4091      	lsls	r1, r2
 8000c4c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c50:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c54:	4319      	orrs	r1, r3
 8000c56:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c5a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c5e:	fa1f f68c 	uxth.w	r6, ip
 8000c62:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c6a:	fb07 1114 	mls	r1, r7, r4, r1
 8000c6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c72:	fb04 f106 	mul.w	r1, r4, r6
 8000c76:	4299      	cmp	r1, r3
 8000c78:	d90a      	bls.n	8000c90 <__udivmoddi4+0x64>
 8000c7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7e:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c82:	f080 8112 	bcs.w	8000eaa <__udivmoddi4+0x27e>
 8000c86:	4299      	cmp	r1, r3
 8000c88:	f240 810f 	bls.w	8000eaa <__udivmoddi4+0x27e>
 8000c8c:	3c02      	subs	r4, #2
 8000c8e:	4463      	add	r3, ip
 8000c90:	1a59      	subs	r1, r3, r1
 8000c92:	fa1f f38e 	uxth.w	r3, lr
 8000c96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c9a:	fb07 1110 	mls	r1, r7, r0, r1
 8000c9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ca2:	fb00 f606 	mul.w	r6, r0, r6
 8000ca6:	429e      	cmp	r6, r3
 8000ca8:	d90a      	bls.n	8000cc0 <__udivmoddi4+0x94>
 8000caa:	eb1c 0303 	adds.w	r3, ip, r3
 8000cae:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cb2:	f080 80fc 	bcs.w	8000eae <__udivmoddi4+0x282>
 8000cb6:	429e      	cmp	r6, r3
 8000cb8:	f240 80f9 	bls.w	8000eae <__udivmoddi4+0x282>
 8000cbc:	4463      	add	r3, ip
 8000cbe:	3802      	subs	r0, #2
 8000cc0:	1b9b      	subs	r3, r3, r6
 8000cc2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	b11d      	cbz	r5, 8000cd2 <__udivmoddi4+0xa6>
 8000cca:	40d3      	lsrs	r3, r2
 8000ccc:	2200      	movs	r2, #0
 8000cce:	e9c5 3200 	strd	r3, r2, [r5]
 8000cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd6:	428b      	cmp	r3, r1
 8000cd8:	d905      	bls.n	8000ce6 <__udivmoddi4+0xba>
 8000cda:	b10d      	cbz	r5, 8000ce0 <__udivmoddi4+0xb4>
 8000cdc:	e9c5 0100 	strd	r0, r1, [r5]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	4608      	mov	r0, r1
 8000ce4:	e7f5      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000ce6:	fab3 f183 	clz	r1, r3
 8000cea:	2900      	cmp	r1, #0
 8000cec:	d146      	bne.n	8000d7c <__udivmoddi4+0x150>
 8000cee:	42a3      	cmp	r3, r4
 8000cf0:	d302      	bcc.n	8000cf8 <__udivmoddi4+0xcc>
 8000cf2:	4290      	cmp	r0, r2
 8000cf4:	f0c0 80f0 	bcc.w	8000ed8 <__udivmoddi4+0x2ac>
 8000cf8:	1a86      	subs	r6, r0, r2
 8000cfa:	eb64 0303 	sbc.w	r3, r4, r3
 8000cfe:	2001      	movs	r0, #1
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	d0e6      	beq.n	8000cd2 <__udivmoddi4+0xa6>
 8000d04:	e9c5 6300 	strd	r6, r3, [r5]
 8000d08:	e7e3      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000d0a:	2a00      	cmp	r2, #0
 8000d0c:	f040 8090 	bne.w	8000e30 <__udivmoddi4+0x204>
 8000d10:	eba1 040c 	sub.w	r4, r1, ip
 8000d14:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d18:	fa1f f78c 	uxth.w	r7, ip
 8000d1c:	2101      	movs	r1, #1
 8000d1e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d26:	fb08 4416 	mls	r4, r8, r6, r4
 8000d2a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d2e:	fb07 f006 	mul.w	r0, r7, r6
 8000d32:	4298      	cmp	r0, r3
 8000d34:	d908      	bls.n	8000d48 <__udivmoddi4+0x11c>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d3e:	d202      	bcs.n	8000d46 <__udivmoddi4+0x11a>
 8000d40:	4298      	cmp	r0, r3
 8000d42:	f200 80cd 	bhi.w	8000ee0 <__udivmoddi4+0x2b4>
 8000d46:	4626      	mov	r6, r4
 8000d48:	1a1c      	subs	r4, r3, r0
 8000d4a:	fa1f f38e 	uxth.w	r3, lr
 8000d4e:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d52:	fb08 4410 	mls	r4, r8, r0, r4
 8000d56:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d5a:	fb00 f707 	mul.w	r7, r0, r7
 8000d5e:	429f      	cmp	r7, r3
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0x148>
 8000d62:	eb1c 0303 	adds.w	r3, ip, r3
 8000d66:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d6a:	d202      	bcs.n	8000d72 <__udivmoddi4+0x146>
 8000d6c:	429f      	cmp	r7, r3
 8000d6e:	f200 80b0 	bhi.w	8000ed2 <__udivmoddi4+0x2a6>
 8000d72:	4620      	mov	r0, r4
 8000d74:	1bdb      	subs	r3, r3, r7
 8000d76:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d7a:	e7a5      	b.n	8000cc8 <__udivmoddi4+0x9c>
 8000d7c:	f1c1 0620 	rsb	r6, r1, #32
 8000d80:	408b      	lsls	r3, r1
 8000d82:	fa22 f706 	lsr.w	r7, r2, r6
 8000d86:	431f      	orrs	r7, r3
 8000d88:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d8c:	fa04 f301 	lsl.w	r3, r4, r1
 8000d90:	ea43 030c 	orr.w	r3, r3, ip
 8000d94:	40f4      	lsrs	r4, r6
 8000d96:	fa00 f801 	lsl.w	r8, r0, r1
 8000d9a:	0c38      	lsrs	r0, r7, #16
 8000d9c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000da0:	fbb4 fef0 	udiv	lr, r4, r0
 8000da4:	fa1f fc87 	uxth.w	ip, r7
 8000da8:	fb00 441e 	mls	r4, r0, lr, r4
 8000dac:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000db0:	fb0e f90c 	mul.w	r9, lr, ip
 8000db4:	45a1      	cmp	r9, r4
 8000db6:	fa02 f201 	lsl.w	r2, r2, r1
 8000dba:	d90a      	bls.n	8000dd2 <__udivmoddi4+0x1a6>
 8000dbc:	193c      	adds	r4, r7, r4
 8000dbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dc2:	f080 8084 	bcs.w	8000ece <__udivmoddi4+0x2a2>
 8000dc6:	45a1      	cmp	r9, r4
 8000dc8:	f240 8081 	bls.w	8000ece <__udivmoddi4+0x2a2>
 8000dcc:	f1ae 0e02 	sub.w	lr, lr, #2
 8000dd0:	443c      	add	r4, r7
 8000dd2:	eba4 0409 	sub.w	r4, r4, r9
 8000dd6:	fa1f f983 	uxth.w	r9, r3
 8000dda:	fbb4 f3f0 	udiv	r3, r4, r0
 8000dde:	fb00 4413 	mls	r4, r0, r3, r4
 8000de2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000de6:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dea:	45a4      	cmp	ip, r4
 8000dec:	d907      	bls.n	8000dfe <__udivmoddi4+0x1d2>
 8000dee:	193c      	adds	r4, r7, r4
 8000df0:	f103 30ff 	add.w	r0, r3, #4294967295
 8000df4:	d267      	bcs.n	8000ec6 <__udivmoddi4+0x29a>
 8000df6:	45a4      	cmp	ip, r4
 8000df8:	d965      	bls.n	8000ec6 <__udivmoddi4+0x29a>
 8000dfa:	3b02      	subs	r3, #2
 8000dfc:	443c      	add	r4, r7
 8000dfe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e02:	fba0 9302 	umull	r9, r3, r0, r2
 8000e06:	eba4 040c 	sub.w	r4, r4, ip
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	46ce      	mov	lr, r9
 8000e0e:	469c      	mov	ip, r3
 8000e10:	d351      	bcc.n	8000eb6 <__udivmoddi4+0x28a>
 8000e12:	d04e      	beq.n	8000eb2 <__udivmoddi4+0x286>
 8000e14:	b155      	cbz	r5, 8000e2c <__udivmoddi4+0x200>
 8000e16:	ebb8 030e 	subs.w	r3, r8, lr
 8000e1a:	eb64 040c 	sbc.w	r4, r4, ip
 8000e1e:	fa04 f606 	lsl.w	r6, r4, r6
 8000e22:	40cb      	lsrs	r3, r1
 8000e24:	431e      	orrs	r6, r3
 8000e26:	40cc      	lsrs	r4, r1
 8000e28:	e9c5 6400 	strd	r6, r4, [r5]
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	e750      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000e30:	f1c2 0320 	rsb	r3, r2, #32
 8000e34:	fa20 f103 	lsr.w	r1, r0, r3
 8000e38:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e3c:	fa24 f303 	lsr.w	r3, r4, r3
 8000e40:	4094      	lsls	r4, r2
 8000e42:	430c      	orrs	r4, r1
 8000e44:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e48:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e4c:	fa1f f78c 	uxth.w	r7, ip
 8000e50:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e54:	fb08 3110 	mls	r1, r8, r0, r3
 8000e58:	0c23      	lsrs	r3, r4, #16
 8000e5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5e:	fb00 f107 	mul.w	r1, r0, r7
 8000e62:	4299      	cmp	r1, r3
 8000e64:	d908      	bls.n	8000e78 <__udivmoddi4+0x24c>
 8000e66:	eb1c 0303 	adds.w	r3, ip, r3
 8000e6a:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e6e:	d22c      	bcs.n	8000eca <__udivmoddi4+0x29e>
 8000e70:	4299      	cmp	r1, r3
 8000e72:	d92a      	bls.n	8000eca <__udivmoddi4+0x29e>
 8000e74:	3802      	subs	r0, #2
 8000e76:	4463      	add	r3, ip
 8000e78:	1a5b      	subs	r3, r3, r1
 8000e7a:	b2a4      	uxth	r4, r4
 8000e7c:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e80:	fb08 3311 	mls	r3, r8, r1, r3
 8000e84:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e88:	fb01 f307 	mul.w	r3, r1, r7
 8000e8c:	42a3      	cmp	r3, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x276>
 8000e90:	eb1c 0404 	adds.w	r4, ip, r4
 8000e94:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e98:	d213      	bcs.n	8000ec2 <__udivmoddi4+0x296>
 8000e9a:	42a3      	cmp	r3, r4
 8000e9c:	d911      	bls.n	8000ec2 <__udivmoddi4+0x296>
 8000e9e:	3902      	subs	r1, #2
 8000ea0:	4464      	add	r4, ip
 8000ea2:	1ae4      	subs	r4, r4, r3
 8000ea4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ea8:	e739      	b.n	8000d1e <__udivmoddi4+0xf2>
 8000eaa:	4604      	mov	r4, r0
 8000eac:	e6f0      	b.n	8000c90 <__udivmoddi4+0x64>
 8000eae:	4608      	mov	r0, r1
 8000eb0:	e706      	b.n	8000cc0 <__udivmoddi4+0x94>
 8000eb2:	45c8      	cmp	r8, r9
 8000eb4:	d2ae      	bcs.n	8000e14 <__udivmoddi4+0x1e8>
 8000eb6:	ebb9 0e02 	subs.w	lr, r9, r2
 8000eba:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ebe:	3801      	subs	r0, #1
 8000ec0:	e7a8      	b.n	8000e14 <__udivmoddi4+0x1e8>
 8000ec2:	4631      	mov	r1, r6
 8000ec4:	e7ed      	b.n	8000ea2 <__udivmoddi4+0x276>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	e799      	b.n	8000dfe <__udivmoddi4+0x1d2>
 8000eca:	4630      	mov	r0, r6
 8000ecc:	e7d4      	b.n	8000e78 <__udivmoddi4+0x24c>
 8000ece:	46d6      	mov	lr, sl
 8000ed0:	e77f      	b.n	8000dd2 <__udivmoddi4+0x1a6>
 8000ed2:	4463      	add	r3, ip
 8000ed4:	3802      	subs	r0, #2
 8000ed6:	e74d      	b.n	8000d74 <__udivmoddi4+0x148>
 8000ed8:	4606      	mov	r6, r0
 8000eda:	4623      	mov	r3, r4
 8000edc:	4608      	mov	r0, r1
 8000ede:	e70f      	b.n	8000d00 <__udivmoddi4+0xd4>
 8000ee0:	3e02      	subs	r6, #2
 8000ee2:	4463      	add	r3, ip
 8000ee4:	e730      	b.n	8000d48 <__udivmoddi4+0x11c>
 8000ee6:	bf00      	nop

08000ee8 <__aeabi_idiv0>:
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop

08000eec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b082      	sub	sp, #8
 8000ef0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ef2:	f001 fd43 	bl	800297c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ef6:	f000 f8fb 	bl	80010f0 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000efa:	f000 fba5 	bl	8001648 <MX_GPIO_Init>
  MX_DMA_Init();
 8000efe:	f000 fb6d 	bl	80015dc <MX_DMA_Init>
  MX_SPI2_Init();
 8000f02:	f000 f9fb 	bl	80012fc <MX_SPI2_Init>
  MX_CRC_Init();
 8000f06:	f000 f9b7 	bl	8001278 <MX_CRC_Init>
  MX_TIM3_Init();
 8000f0a:	f000 faa3 	bl	8001454 <MX_TIM3_Init>
  MX_ADC1_Init();
 8000f0e:	f000 f961 	bl	80011d4 <MX_ADC1_Init>
  MX_TIM2_Init();
 8000f12:	f000 fa29 	bl	8001368 <MX_TIM2_Init>
  MX_I2C2_Init();
 8000f16:	f000 f9c3 	bl	80012a0 <MX_I2C2_Init>
  MX_TIM4_Init();
 8000f1a:	f000 fae9 	bl	80014f0 <MX_TIM4_Init>
  MX_TouchGFX_Init();
 8000f1e:	f007 f885 	bl	800802c <MX_TouchGFX_Init>

	  //HAL_TIM_PWM_Init(&htim2);



	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f22:	2000      	movs	r0, #0
 8000f24:	f001 f9ae 	bl	8002284 <Displ_Init>
	  touchgfxSignalVSync();
 8000f28:	f00b fd34 	bl	800c994 <touchgfxSignalVSync>
	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f2c:	2000      	movs	r0, #0
 8000f2e:	f001 f9a9 	bl	8002284 <Displ_Init>
	  touchgfxSignalVSync();
 8000f32:	f00b fd2f 	bl	800c994 <touchgfxSignalVSync>


	  Displ_BackLight('I');  					// initialize backlight
 8000f36:	2049      	movs	r0, #73	@ 0x49
 8000f38:	f001 fa4a 	bl	80023d0 <Displ_BackLight>
	  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 8000f3c:	485e      	ldr	r0, [pc, #376]	@ (80010b8 <main+0x1cc>)
 8000f3e:	f006 f895 	bl	800706c <HAL_TIM_Base_Start_IT>
	  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f42:	2201      	movs	r2, #1
 8000f44:	495d      	ldr	r1, [pc, #372]	@ (80010bc <main+0x1d0>)
 8000f46:	485e      	ldr	r0, [pc, #376]	@ (80010c0 <main+0x1d4>)
 8000f48:	f001 ff02 	bl	8002d50 <HAL_ADC_Start_DMA>
	  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000f4c:	2100      	movs	r1, #0
 8000f4e:	485d      	ldr	r0, [pc, #372]	@ (80010c4 <main+0x1d8>)
 8000f50:	f006 f956 	bl	8007200 <HAL_TIM_PWM_Start>

	  HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 8000f54:	2104      	movs	r1, #4
 8000f56:	485c      	ldr	r0, [pc, #368]	@ (80010c8 <main+0x1dc>)
 8000f58:	f006 f952 	bl	8007200 <HAL_TIM_PWM_Start>
	  htim4.Instance->CCR2 = 10;
 8000f5c:	4b5a      	ldr	r3, [pc, #360]	@ (80010c8 <main+0x1dc>)
 8000f5e:	681b      	ldr	r3, [r3, #0]
 8000f60:	220a      	movs	r2, #10
 8000f62:	639a      	str	r2, [r3, #56]	@ 0x38
	  htim2.Instance->CCR1 = 15000;
 8000f64:	4b57      	ldr	r3, [pc, #348]	@ (80010c4 <main+0x1d8>)
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	f643 2298 	movw	r2, #15000	@ 0x3a98
 8000f6c:	635a      	str	r2, [r3, #52]	@ 0x34
//	  }

	  while (1)
	  {

		  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f6e:	2201      	movs	r2, #1
 8000f70:	4952      	ldr	r1, [pc, #328]	@ (80010bc <main+0x1d0>)
 8000f72:	4853      	ldr	r0, [pc, #332]	@ (80010c0 <main+0x1d4>)
 8000f74:	f001 feec 	bl	8002d50 <HAL_ADC_Start_DMA>
		  HAL_I2C_Master_Transmit (&hi2c2, 0xB8, i2c_buffer, 3, 100);
 8000f78:	2364      	movs	r3, #100	@ 0x64
 8000f7a:	9300      	str	r3, [sp, #0]
 8000f7c:	2303      	movs	r3, #3
 8000f7e:	4a53      	ldr	r2, [pc, #332]	@ (80010cc <main+0x1e0>)
 8000f80:	21b8      	movs	r1, #184	@ 0xb8
 8000f82:	4853      	ldr	r0, [pc, #332]	@ (80010d0 <main+0x1e4>)
 8000f84:	f003 fb30 	bl	80045e8 <HAL_I2C_Master_Transmit>
		  HAL_I2C_Master_Receive (&hi2c2, 0xB9, i2c_return, 8, 100);
 8000f88:	2364      	movs	r3, #100	@ 0x64
 8000f8a:	9300      	str	r3, [sp, #0]
 8000f8c:	2308      	movs	r3, #8
 8000f8e:	4a51      	ldr	r2, [pc, #324]	@ (80010d4 <main+0x1e8>)
 8000f90:	21b9      	movs	r1, #185	@ 0xb9
 8000f92:	484f      	ldr	r0, [pc, #316]	@ (80010d0 <main+0x1e4>)
 8000f94:	f003 fc26 	bl	80047e4 <HAL_I2C_Master_Receive>
		  temp = ((i2c_return[4] << 8) + i2c_return[5]);
 8000f98:	4b4e      	ldr	r3, [pc, #312]	@ (80010d4 <main+0x1e8>)
 8000f9a:	791b      	ldrb	r3, [r3, #4]
 8000f9c:	021b      	lsls	r3, r3, #8
 8000f9e:	4a4d      	ldr	r2, [pc, #308]	@ (80010d4 <main+0x1e8>)
 8000fa0:	7952      	ldrb	r2, [r2, #5]
 8000fa2:	4413      	add	r3, r2
 8000fa4:	ee07 3a90 	vmov	s15, r3
 8000fa8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fac:	4b4a      	ldr	r3, [pc, #296]	@ (80010d8 <main+0x1ec>)
 8000fae:	edc3 7a00 	vstr	s15, [r3]
		  hum = ((i2c_return[2] << 8) + i2c_return[3]);
 8000fb2:	4b48      	ldr	r3, [pc, #288]	@ (80010d4 <main+0x1e8>)
 8000fb4:	789b      	ldrb	r3, [r3, #2]
 8000fb6:	021b      	lsls	r3, r3, #8
 8000fb8:	4a46      	ldr	r2, [pc, #280]	@ (80010d4 <main+0x1e8>)
 8000fba:	78d2      	ldrb	r2, [r2, #3]
 8000fbc:	4413      	add	r3, r2
 8000fbe:	ee07 3a90 	vmov	s15, r3
 8000fc2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fc6:	4b45      	ldr	r3, [pc, #276]	@ (80010dc <main+0x1f0>)
 8000fc8:	edc3 7a00 	vstr	s15, [r3]
		  temp = floor(temp)/10.0;
 8000fcc:	4b42      	ldr	r3, [pc, #264]	@ (80010d8 <main+0x1ec>)
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	4618      	mov	r0, r3
 8000fd2:	f7ff fad1 	bl	8000578 <__aeabi_f2d>
 8000fd6:	4602      	mov	r2, r0
 8000fd8:	460b      	mov	r3, r1
 8000fda:	ec43 2b10 	vmov	d0, r2, r3
 8000fde:	f021 f91f 	bl	8022220 <floor>
 8000fe2:	ec51 0b10 	vmov	r0, r1, d0
 8000fe6:	f04f 0200 	mov.w	r2, #0
 8000fea:	4b3d      	ldr	r3, [pc, #244]	@ (80010e0 <main+0x1f4>)
 8000fec:	f7ff fc46 	bl	800087c <__aeabi_ddiv>
 8000ff0:	4602      	mov	r2, r0
 8000ff2:	460b      	mov	r3, r1
 8000ff4:	4610      	mov	r0, r2
 8000ff6:	4619      	mov	r1, r3
 8000ff8:	f7ff fdb0 	bl	8000b5c <__aeabi_d2f>
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	4a36      	ldr	r2, [pc, #216]	@ (80010d8 <main+0x1ec>)
 8001000:	6013      	str	r3, [r2, #0]
		  hum = floor(hum)/10.0;
 8001002:	4b36      	ldr	r3, [pc, #216]	@ (80010dc <main+0x1f0>)
 8001004:	681b      	ldr	r3, [r3, #0]
 8001006:	4618      	mov	r0, r3
 8001008:	f7ff fab6 	bl	8000578 <__aeabi_f2d>
 800100c:	4602      	mov	r2, r0
 800100e:	460b      	mov	r3, r1
 8001010:	ec43 2b10 	vmov	d0, r2, r3
 8001014:	f021 f904 	bl	8022220 <floor>
 8001018:	ec51 0b10 	vmov	r0, r1, d0
 800101c:	f04f 0200 	mov.w	r2, #0
 8001020:	4b2f      	ldr	r3, [pc, #188]	@ (80010e0 <main+0x1f4>)
 8001022:	f7ff fc2b 	bl	800087c <__aeabi_ddiv>
 8001026:	4602      	mov	r2, r0
 8001028:	460b      	mov	r3, r1
 800102a:	4610      	mov	r0, r2
 800102c:	4619      	mov	r1, r3
 800102e:	f7ff fd95 	bl	8000b5c <__aeabi_d2f>
 8001032:	4603      	mov	r3, r0
 8001034:	4a29      	ldr	r2, [pc, #164]	@ (80010dc <main+0x1f0>)
 8001036:	6013      	str	r3, [r2, #0]

		  //htim4.Instance->CCR2 = (value_adc/4096.0) * 100;
		  if (temp < 23){
 8001038:	4b27      	ldr	r3, [pc, #156]	@ (80010d8 <main+0x1ec>)
 800103a:	edd3 7a00 	vldr	s15, [r3]
 800103e:	eeb3 7a07 	vmov.f32	s14, #55	@ 0x41b80000  23.0
 8001042:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800104a:	d503      	bpl.n	8001054 <main+0x168>
			  htim4.Instance->CCR2 = 10;
 800104c:	4b1e      	ldr	r3, [pc, #120]	@ (80010c8 <main+0x1dc>)
 800104e:	681b      	ldr	r3, [r3, #0]
 8001050:	220a      	movs	r2, #10
 8001052:	639a      	str	r2, [r3, #56]	@ 0x38
		  }
		  if (temp > 24){
 8001054:	4b20      	ldr	r3, [pc, #128]	@ (80010d8 <main+0x1ec>)
 8001056:	edd3 7a00 	vldr	s15, [r3]
 800105a:	eeb3 7a08 	vmov.f32	s14, #56	@ 0x41c00000  24.0
 800105e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001062:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001066:	dd03      	ble.n	8001070 <main+0x184>
			  htim4.Instance->CCR2 = 0;
 8001068:	4b17      	ldr	r3, [pc, #92]	@ (80010c8 <main+0x1dc>)
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	2200      	movs	r2, #0
 800106e:	639a      	str	r2, [r3, #56]	@ 0x38
//			  htim2.Instance->CCR1 = 0;
//
//		  }
		  //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,1);

		  if (hum <=50){
 8001070:	4b1a      	ldr	r3, [pc, #104]	@ (80010dc <main+0x1f0>)
 8001072:	edd3 7a00 	vldr	s15, [r3]
 8001076:	ed9f 7a1b 	vldr	s14, [pc, #108]	@ 80010e4 <main+0x1f8>
 800107a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800107e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001082:	d805      	bhi.n	8001090 <main+0x1a4>
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,1);
 8001084:	2201      	movs	r2, #1
 8001086:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800108a:	4817      	ldr	r0, [pc, #92]	@ (80010e8 <main+0x1fc>)
 800108c:	f003 f91c 	bl	80042c8 <HAL_GPIO_WritePin>
		  }
		  if (hum >=80){
 8001090:	4b12      	ldr	r3, [pc, #72]	@ (80010dc <main+0x1f0>)
 8001092:	edd3 7a00 	vldr	s15, [r3]
 8001096:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 80010ec <main+0x200>
 800109a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800109e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80010a2:	db05      	blt.n	80010b0 <main+0x1c4>
				  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,0);
 80010a4:	2200      	movs	r2, #0
 80010a6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80010aa:	480f      	ldr	r0, [pc, #60]	@ (80010e8 <main+0x1fc>)
 80010ac:	f003 f90c 	bl	80042c8 <HAL_GPIO_WritePin>



    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80010b0:	f006 ffc4 	bl	800803c <MX_TouchGFX_Process>
		  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 80010b4:	e75b      	b.n	8000f6e <main+0x82>
 80010b6:	bf00      	nop
 80010b8:	20000540 	.word	0x20000540
 80010bc:	200005d0 	.word	0x200005d0
 80010c0:	2000033c 	.word	0x2000033c
 80010c4:	200004f8 	.word	0x200004f8
 80010c8:	20000588 	.word	0x20000588
 80010cc:	20000004 	.word	0x20000004
 80010d0:	200003ec 	.word	0x200003ec
 80010d4:	200005dc 	.word	0x200005dc
 80010d8:	200005d4 	.word	0x200005d4
 80010dc:	200005d8 	.word	0x200005d8
 80010e0:	40240000 	.word	0x40240000
 80010e4:	42480000 	.word	0x42480000
 80010e8:	40020000 	.word	0x40020000
 80010ec:	42a00000 	.word	0x42a00000

080010f0 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010f0:	b580      	push	{r7, lr}
 80010f2:	b094      	sub	sp, #80	@ 0x50
 80010f4:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010f6:	f107 031c 	add.w	r3, r7, #28
 80010fa:	2234      	movs	r2, #52	@ 0x34
 80010fc:	2100      	movs	r1, #0
 80010fe:	4618      	mov	r0, r3
 8001100:	f021 fb19 	bl	8022736 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001104:	f107 0308 	add.w	r3, r7, #8
 8001108:	2200      	movs	r2, #0
 800110a:	601a      	str	r2, [r3, #0]
 800110c:	605a      	str	r2, [r3, #4]
 800110e:	609a      	str	r2, [r3, #8]
 8001110:	60da      	str	r2, [r3, #12]
 8001112:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001114:	2300      	movs	r3, #0
 8001116:	607b      	str	r3, [r7, #4]
 8001118:	4b2c      	ldr	r3, [pc, #176]	@ (80011cc <SystemClock_Config+0xdc>)
 800111a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800111c:	4a2b      	ldr	r2, [pc, #172]	@ (80011cc <SystemClock_Config+0xdc>)
 800111e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001122:	6413      	str	r3, [r2, #64]	@ 0x40
 8001124:	4b29      	ldr	r3, [pc, #164]	@ (80011cc <SystemClock_Config+0xdc>)
 8001126:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001128:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800112c:	607b      	str	r3, [r7, #4]
 800112e:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001130:	2300      	movs	r3, #0
 8001132:	603b      	str	r3, [r7, #0]
 8001134:	4b26      	ldr	r3, [pc, #152]	@ (80011d0 <SystemClock_Config+0xe0>)
 8001136:	681b      	ldr	r3, [r3, #0]
 8001138:	4a25      	ldr	r2, [pc, #148]	@ (80011d0 <SystemClock_Config+0xe0>)
 800113a:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800113e:	6013      	str	r3, [r2, #0]
 8001140:	4b23      	ldr	r3, [pc, #140]	@ (80011d0 <SystemClock_Config+0xe0>)
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001148:	603b      	str	r3, [r7, #0]
 800114a:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800114c:	2302      	movs	r3, #2
 800114e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001150:	2301      	movs	r3, #1
 8001152:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001154:	2310      	movs	r3, #16
 8001156:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001158:	2302      	movs	r3, #2
 800115a:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800115c:	2300      	movs	r3, #0
 800115e:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001160:	2308      	movs	r3, #8
 8001162:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001164:	23b4      	movs	r3, #180	@ 0xb4
 8001166:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001168:	2302      	movs	r3, #2
 800116a:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800116c:	2302      	movs	r3, #2
 800116e:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001170:	2302      	movs	r3, #2
 8001172:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001174:	f107 031c 	add.w	r3, r7, #28
 8001178:	4618      	mov	r0, r3
 800117a:	f004 fc71 	bl	8005a60 <HAL_RCC_OscConfig>
 800117e:	4603      	mov	r3, r0
 8001180:	2b00      	cmp	r3, #0
 8001182:	d001      	beq.n	8001188 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001184:	f000 fb54 	bl	8001830 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001188:	f004 f8e4 	bl	8005354 <HAL_PWREx_EnableOverDrive>
 800118c:	4603      	mov	r3, r0
 800118e:	2b00      	cmp	r3, #0
 8001190:	d001      	beq.n	8001196 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8001192:	f000 fb4d 	bl	8001830 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001196:	230f      	movs	r3, #15
 8001198:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800119a:	2302      	movs	r3, #2
 800119c:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800119e:	2300      	movs	r3, #0
 80011a0:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80011a2:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80011a6:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011a8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011ac:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011ae:	f107 0308 	add.w	r3, r7, #8
 80011b2:	2105      	movs	r1, #5
 80011b4:	4618      	mov	r0, r3
 80011b6:	f004 f91d 	bl	80053f4 <HAL_RCC_ClockConfig>
 80011ba:	4603      	mov	r3, r0
 80011bc:	2b00      	cmp	r3, #0
 80011be:	d001      	beq.n	80011c4 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 80011c0:	f000 fb36 	bl	8001830 <Error_Handler>
  }
}
 80011c4:	bf00      	nop
 80011c6:	3750      	adds	r7, #80	@ 0x50
 80011c8:	46bd      	mov	sp, r7
 80011ca:	bd80      	pop	{r7, pc}
 80011cc:	40023800 	.word	0x40023800
 80011d0:	40007000 	.word	0x40007000

080011d4 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80011d4:	b580      	push	{r7, lr}
 80011d6:	b084      	sub	sp, #16
 80011d8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80011da:	463b      	mov	r3, r7
 80011dc:	2200      	movs	r2, #0
 80011de:	601a      	str	r2, [r3, #0]
 80011e0:	605a      	str	r2, [r3, #4]
 80011e2:	609a      	str	r2, [r3, #8]
 80011e4:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80011e6:	4b21      	ldr	r3, [pc, #132]	@ (800126c <MX_ADC1_Init+0x98>)
 80011e8:	4a21      	ldr	r2, [pc, #132]	@ (8001270 <MX_ADC1_Init+0x9c>)
 80011ea:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80011ec:	4b1f      	ldr	r3, [pc, #124]	@ (800126c <MX_ADC1_Init+0x98>)
 80011ee:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80011f2:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80011f4:	4b1d      	ldr	r3, [pc, #116]	@ (800126c <MX_ADC1_Init+0x98>)
 80011f6:	2200      	movs	r2, #0
 80011f8:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80011fa:	4b1c      	ldr	r3, [pc, #112]	@ (800126c <MX_ADC1_Init+0x98>)
 80011fc:	2200      	movs	r2, #0
 80011fe:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001200:	4b1a      	ldr	r3, [pc, #104]	@ (800126c <MX_ADC1_Init+0x98>)
 8001202:	2201      	movs	r2, #1
 8001204:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001206:	4b19      	ldr	r3, [pc, #100]	@ (800126c <MX_ADC1_Init+0x98>)
 8001208:	2200      	movs	r2, #0
 800120a:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800120e:	4b17      	ldr	r3, [pc, #92]	@ (800126c <MX_ADC1_Init+0x98>)
 8001210:	2200      	movs	r2, #0
 8001212:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001214:	4b15      	ldr	r3, [pc, #84]	@ (800126c <MX_ADC1_Init+0x98>)
 8001216:	4a17      	ldr	r2, [pc, #92]	@ (8001274 <MX_ADC1_Init+0xa0>)
 8001218:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800121a:	4b14      	ldr	r3, [pc, #80]	@ (800126c <MX_ADC1_Init+0x98>)
 800121c:	2200      	movs	r2, #0
 800121e:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001220:	4b12      	ldr	r3, [pc, #72]	@ (800126c <MX_ADC1_Init+0x98>)
 8001222:	2201      	movs	r2, #1
 8001224:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001226:	4b11      	ldr	r3, [pc, #68]	@ (800126c <MX_ADC1_Init+0x98>)
 8001228:	2200      	movs	r2, #0
 800122a:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800122e:	4b0f      	ldr	r3, [pc, #60]	@ (800126c <MX_ADC1_Init+0x98>)
 8001230:	2201      	movs	r2, #1
 8001232:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001234:	480d      	ldr	r0, [pc, #52]	@ (800126c <MX_ADC1_Init+0x98>)
 8001236:	f001 fc37 	bl	8002aa8 <HAL_ADC_Init>
 800123a:	4603      	mov	r3, r0
 800123c:	2b00      	cmp	r3, #0
 800123e:	d001      	beq.n	8001244 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001240:	f000 faf6 	bl	8001830 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 8001244:	230a      	movs	r3, #10
 8001246:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001248:	2301      	movs	r3, #1
 800124a:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 800124c:	2300      	movs	r3, #0
 800124e:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001250:	463b      	mov	r3, r7
 8001252:	4619      	mov	r1, r3
 8001254:	4805      	ldr	r0, [pc, #20]	@ (800126c <MX_ADC1_Init+0x98>)
 8001256:	f001 feb3 	bl	8002fc0 <HAL_ADC_ConfigChannel>
 800125a:	4603      	mov	r3, r0
 800125c:	2b00      	cmp	r3, #0
 800125e:	d001      	beq.n	8001264 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001260:	f000 fae6 	bl	8001830 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001264:	bf00      	nop
 8001266:	3710      	adds	r7, #16
 8001268:	46bd      	mov	sp, r7
 800126a:	bd80      	pop	{r7, pc}
 800126c:	2000033c 	.word	0x2000033c
 8001270:	40012000 	.word	0x40012000
 8001274:	0f000001 	.word	0x0f000001

08001278 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001278:	b580      	push	{r7, lr}
 800127a:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 800127c:	4b06      	ldr	r3, [pc, #24]	@ (8001298 <MX_CRC_Init+0x20>)
 800127e:	4a07      	ldr	r2, [pc, #28]	@ (800129c <MX_CRC_Init+0x24>)
 8001280:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001282:	4805      	ldr	r0, [pc, #20]	@ (8001298 <MX_CRC_Init+0x20>)
 8001284:	f002 fac5 	bl	8003812 <HAL_CRC_Init>
 8001288:	4603      	mov	r3, r0
 800128a:	2b00      	cmp	r3, #0
 800128c:	d001      	beq.n	8001292 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800128e:	f000 facf 	bl	8001830 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001292:	bf00      	nop
 8001294:	bd80      	pop	{r7, pc}
 8001296:	bf00      	nop
 8001298:	200003e4 	.word	0x200003e4
 800129c:	40023000 	.word	0x40023000

080012a0 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80012a0:	b580      	push	{r7, lr}
 80012a2:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80012a4:	4b12      	ldr	r3, [pc, #72]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012a6:	4a13      	ldr	r2, [pc, #76]	@ (80012f4 <MX_I2C2_Init+0x54>)
 80012a8:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 80012aa:	4b11      	ldr	r3, [pc, #68]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012ac:	4a12      	ldr	r2, [pc, #72]	@ (80012f8 <MX_I2C2_Init+0x58>)
 80012ae:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012b0:	4b0f      	ldr	r3, [pc, #60]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012b2:	2200      	movs	r2, #0
 80012b4:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 80012b6:	4b0e      	ldr	r3, [pc, #56]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012b8:	2200      	movs	r2, #0
 80012ba:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012bc:	4b0c      	ldr	r3, [pc, #48]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012be:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80012c2:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012c4:	4b0a      	ldr	r3, [pc, #40]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012c6:	2200      	movs	r2, #0
 80012c8:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 80012ca:	4b09      	ldr	r3, [pc, #36]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012cc:	2200      	movs	r2, #0
 80012ce:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012d0:	4b07      	ldr	r3, [pc, #28]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012d6:	4b06      	ldr	r3, [pc, #24]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012d8:	2200      	movs	r2, #0
 80012da:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80012dc:	4804      	ldr	r0, [pc, #16]	@ (80012f0 <MX_I2C2_Init+0x50>)
 80012de:	f003 f83f 	bl	8004360 <HAL_I2C_Init>
 80012e2:	4603      	mov	r3, r0
 80012e4:	2b00      	cmp	r3, #0
 80012e6:	d001      	beq.n	80012ec <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 80012e8:	f000 faa2 	bl	8001830 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 80012ec:	bf00      	nop
 80012ee:	bd80      	pop	{r7, pc}
 80012f0:	200003ec 	.word	0x200003ec
 80012f4:	40005800 	.word	0x40005800
 80012f8:	000186a0 	.word	0x000186a0

080012fc <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 80012fc:	b580      	push	{r7, lr}
 80012fe:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001300:	4b17      	ldr	r3, [pc, #92]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001302:	4a18      	ldr	r2, [pc, #96]	@ (8001364 <MX_SPI2_Init+0x68>)
 8001304:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001306:	4b16      	ldr	r3, [pc, #88]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001308:	f44f 7282 	mov.w	r2, #260	@ 0x104
 800130c:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800130e:	4b14      	ldr	r3, [pc, #80]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001310:	2200      	movs	r2, #0
 8001312:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001314:	4b12      	ldr	r3, [pc, #72]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001316:	2200      	movs	r2, #0
 8001318:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800131a:	4b11      	ldr	r3, [pc, #68]	@ (8001360 <MX_SPI2_Init+0x64>)
 800131c:	2200      	movs	r2, #0
 800131e:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001320:	4b0f      	ldr	r3, [pc, #60]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001322:	2200      	movs	r2, #0
 8001324:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001326:	4b0e      	ldr	r3, [pc, #56]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001328:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800132c:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800132e:	4b0c      	ldr	r3, [pc, #48]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001330:	2200      	movs	r2, #0
 8001332:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001334:	4b0a      	ldr	r3, [pc, #40]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001336:	2200      	movs	r2, #0
 8001338:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800133a:	4b09      	ldr	r3, [pc, #36]	@ (8001360 <MX_SPI2_Init+0x64>)
 800133c:	2200      	movs	r2, #0
 800133e:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001340:	4b07      	ldr	r3, [pc, #28]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001342:	2200      	movs	r2, #0
 8001344:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 8001346:	4b06      	ldr	r3, [pc, #24]	@ (8001360 <MX_SPI2_Init+0x64>)
 8001348:	220a      	movs	r2, #10
 800134a:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 800134c:	4804      	ldr	r0, [pc, #16]	@ (8001360 <MX_SPI2_Init+0x64>)
 800134e:	f004 fe25 	bl	8005f9c <HAL_SPI_Init>
 8001352:	4603      	mov	r3, r0
 8001354:	2b00      	cmp	r3, #0
 8001356:	d001      	beq.n	800135c <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8001358:	f000 fa6a 	bl	8001830 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 800135c:	bf00      	nop
 800135e:	bd80      	pop	{r7, pc}
 8001360:	20000440 	.word	0x20000440
 8001364:	40003800 	.word	0x40003800

08001368 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001368:	b580      	push	{r7, lr}
 800136a:	b08e      	sub	sp, #56	@ 0x38
 800136c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800136e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001372:	2200      	movs	r2, #0
 8001374:	601a      	str	r2, [r3, #0]
 8001376:	605a      	str	r2, [r3, #4]
 8001378:	609a      	str	r2, [r3, #8]
 800137a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800137c:	f107 0320 	add.w	r3, r7, #32
 8001380:	2200      	movs	r2, #0
 8001382:	601a      	str	r2, [r3, #0]
 8001384:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001386:	1d3b      	adds	r3, r7, #4
 8001388:	2200      	movs	r2, #0
 800138a:	601a      	str	r2, [r3, #0]
 800138c:	605a      	str	r2, [r3, #4]
 800138e:	609a      	str	r2, [r3, #8]
 8001390:	60da      	str	r2, [r3, #12]
 8001392:	611a      	str	r2, [r3, #16]
 8001394:	615a      	str	r2, [r3, #20]
 8001396:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8001398:	4b2d      	ldr	r3, [pc, #180]	@ (8001450 <MX_TIM2_Init+0xe8>)
 800139a:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800139e:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 59999;
 80013a0:	4b2b      	ldr	r3, [pc, #172]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013a2:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80013a6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013a8:	4b29      	ldr	r3, [pc, #164]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013aa:	2200      	movs	r2, #0
 80013ac:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 29999;
 80013ae:	4b28      	ldr	r3, [pc, #160]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013b0:	f247 522f 	movw	r2, #29999	@ 0x752f
 80013b4:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013b6:	4b26      	ldr	r3, [pc, #152]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013b8:	2200      	movs	r2, #0
 80013ba:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80013bc:	4b24      	ldr	r3, [pc, #144]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013be:	2200      	movs	r2, #0
 80013c0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80013c2:	4823      	ldr	r0, [pc, #140]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013c4:	f005 fe02 	bl	8006fcc <HAL_TIM_Base_Init>
 80013c8:	4603      	mov	r3, r0
 80013ca:	2b00      	cmp	r3, #0
 80013cc:	d001      	beq.n	80013d2 <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 80013ce:	f000 fa2f 	bl	8001830 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80013d2:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80013d6:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80013d8:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80013dc:	4619      	mov	r1, r3
 80013de:	481c      	ldr	r0, [pc, #112]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013e0:	f006 f988 	bl	80076f4 <HAL_TIM_ConfigClockSource>
 80013e4:	4603      	mov	r3, r0
 80013e6:	2b00      	cmp	r3, #0
 80013e8:	d001      	beq.n	80013ee <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 80013ea:	f000 fa21 	bl	8001830 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80013ee:	4818      	ldr	r0, [pc, #96]	@ (8001450 <MX_TIM2_Init+0xe8>)
 80013f0:	f005 feac 	bl	800714c <HAL_TIM_PWM_Init>
 80013f4:	4603      	mov	r3, r0
 80013f6:	2b00      	cmp	r3, #0
 80013f8:	d001      	beq.n	80013fe <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 80013fa:	f000 fa19 	bl	8001830 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80013fe:	2300      	movs	r3, #0
 8001400:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001402:	2300      	movs	r3, #0
 8001404:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001406:	f107 0320 	add.w	r3, r7, #32
 800140a:	4619      	mov	r1, r3
 800140c:	4810      	ldr	r0, [pc, #64]	@ (8001450 <MX_TIM2_Init+0xe8>)
 800140e:	f006 fd7d 	bl	8007f0c <HAL_TIMEx_MasterConfigSynchronization>
 8001412:	4603      	mov	r3, r0
 8001414:	2b00      	cmp	r3, #0
 8001416:	d001      	beq.n	800141c <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 8001418:	f000 fa0a 	bl	8001830 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800141c:	2360      	movs	r3, #96	@ 0x60
 800141e:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001420:	2300      	movs	r3, #0
 8001422:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001424:	2300      	movs	r3, #0
 8001426:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001428:	2300      	movs	r3, #0
 800142a:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800142c:	1d3b      	adds	r3, r7, #4
 800142e:	2200      	movs	r2, #0
 8001430:	4619      	mov	r1, r3
 8001432:	4807      	ldr	r0, [pc, #28]	@ (8001450 <MX_TIM2_Init+0xe8>)
 8001434:	f006 f89c 	bl	8007570 <HAL_TIM_PWM_ConfigChannel>
 8001438:	4603      	mov	r3, r0
 800143a:	2b00      	cmp	r3, #0
 800143c:	d001      	beq.n	8001442 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 800143e:	f000 f9f7 	bl	8001830 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001442:	4803      	ldr	r0, [pc, #12]	@ (8001450 <MX_TIM2_Init+0xe8>)
 8001444:	f000 fc3a 	bl	8001cbc <HAL_TIM_MspPostInit>

}
 8001448:	bf00      	nop
 800144a:	3738      	adds	r7, #56	@ 0x38
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}
 8001450:	200004f8 	.word	0x200004f8

08001454 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001454:	b580      	push	{r7, lr}
 8001456:	b086      	sub	sp, #24
 8001458:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800145a:	f107 0308 	add.w	r3, r7, #8
 800145e:	2200      	movs	r2, #0
 8001460:	601a      	str	r2, [r3, #0]
 8001462:	605a      	str	r2, [r3, #4]
 8001464:	609a      	str	r2, [r3, #8]
 8001466:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001468:	463b      	mov	r3, r7
 800146a:	2200      	movs	r2, #0
 800146c:	601a      	str	r2, [r3, #0]
 800146e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001470:	4b1d      	ldr	r3, [pc, #116]	@ (80014e8 <MX_TIM3_Init+0x94>)
 8001472:	4a1e      	ldr	r2, [pc, #120]	@ (80014ec <MX_TIM3_Init+0x98>)
 8001474:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9999;
 8001476:	4b1c      	ldr	r3, [pc, #112]	@ (80014e8 <MX_TIM3_Init+0x94>)
 8001478:	f242 720f 	movw	r2, #9999	@ 0x270f
 800147c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800147e:	4b1a      	ldr	r3, [pc, #104]	@ (80014e8 <MX_TIM3_Init+0x94>)
 8001480:	2200      	movs	r2, #0
 8001482:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 299;
 8001484:	4b18      	ldr	r3, [pc, #96]	@ (80014e8 <MX_TIM3_Init+0x94>)
 8001486:	f240 122b 	movw	r2, #299	@ 0x12b
 800148a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800148c:	4b16      	ldr	r3, [pc, #88]	@ (80014e8 <MX_TIM3_Init+0x94>)
 800148e:	2200      	movs	r2, #0
 8001490:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001492:	4b15      	ldr	r3, [pc, #84]	@ (80014e8 <MX_TIM3_Init+0x94>)
 8001494:	2200      	movs	r2, #0
 8001496:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 8001498:	4813      	ldr	r0, [pc, #76]	@ (80014e8 <MX_TIM3_Init+0x94>)
 800149a:	f005 fd97 	bl	8006fcc <HAL_TIM_Base_Init>
 800149e:	4603      	mov	r3, r0
 80014a0:	2b00      	cmp	r3, #0
 80014a2:	d001      	beq.n	80014a8 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80014a4:	f000 f9c4 	bl	8001830 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014a8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014ac:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80014ae:	f107 0308 	add.w	r3, r7, #8
 80014b2:	4619      	mov	r1, r3
 80014b4:	480c      	ldr	r0, [pc, #48]	@ (80014e8 <MX_TIM3_Init+0x94>)
 80014b6:	f006 f91d 	bl	80076f4 <HAL_TIM_ConfigClockSource>
 80014ba:	4603      	mov	r3, r0
 80014bc:	2b00      	cmp	r3, #0
 80014be:	d001      	beq.n	80014c4 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80014c0:	f000 f9b6 	bl	8001830 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014c4:	2300      	movs	r3, #0
 80014c6:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014c8:	2300      	movs	r3, #0
 80014ca:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80014cc:	463b      	mov	r3, r7
 80014ce:	4619      	mov	r1, r3
 80014d0:	4805      	ldr	r0, [pc, #20]	@ (80014e8 <MX_TIM3_Init+0x94>)
 80014d2:	f006 fd1b 	bl	8007f0c <HAL_TIMEx_MasterConfigSynchronization>
 80014d6:	4603      	mov	r3, r0
 80014d8:	2b00      	cmp	r3, #0
 80014da:	d001      	beq.n	80014e0 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80014dc:	f000 f9a8 	bl	8001830 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80014e0:	bf00      	nop
 80014e2:	3718      	adds	r7, #24
 80014e4:	46bd      	mov	sp, r7
 80014e6:	bd80      	pop	{r7, pc}
 80014e8:	20000540 	.word	0x20000540
 80014ec:	40000400 	.word	0x40000400

080014f0 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80014f0:	b580      	push	{r7, lr}
 80014f2:	b08e      	sub	sp, #56	@ 0x38
 80014f4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80014f6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80014fa:	2200      	movs	r2, #0
 80014fc:	601a      	str	r2, [r3, #0]
 80014fe:	605a      	str	r2, [r3, #4]
 8001500:	609a      	str	r2, [r3, #8]
 8001502:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001504:	f107 0320 	add.w	r3, r7, #32
 8001508:	2200      	movs	r2, #0
 800150a:	601a      	str	r2, [r3, #0]
 800150c:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800150e:	1d3b      	adds	r3, r7, #4
 8001510:	2200      	movs	r2, #0
 8001512:	601a      	str	r2, [r3, #0]
 8001514:	605a      	str	r2, [r3, #4]
 8001516:	609a      	str	r2, [r3, #8]
 8001518:	60da      	str	r2, [r3, #12]
 800151a:	611a      	str	r2, [r3, #16]
 800151c:	615a      	str	r2, [r3, #20]
 800151e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001520:	4b2c      	ldr	r3, [pc, #176]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001522:	4a2d      	ldr	r2, [pc, #180]	@ (80015d8 <MX_TIM4_Init+0xe8>)
 8001524:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 44999;
 8001526:	4b2b      	ldr	r3, [pc, #172]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001528:	f64a 72c7 	movw	r2, #44999	@ 0xafc7
 800152c:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800152e:	4b29      	ldr	r3, [pc, #164]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001530:	2200      	movs	r2, #0
 8001532:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 19;
 8001534:	4b27      	ldr	r3, [pc, #156]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001536:	2213      	movs	r2, #19
 8001538:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800153a:	4b26      	ldr	r3, [pc, #152]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 800153c:	2200      	movs	r2, #0
 800153e:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001540:	4b24      	ldr	r3, [pc, #144]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001542:	2200      	movs	r2, #0
 8001544:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001546:	4823      	ldr	r0, [pc, #140]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001548:	f005 fd40 	bl	8006fcc <HAL_TIM_Base_Init>
 800154c:	4603      	mov	r3, r0
 800154e:	2b00      	cmp	r3, #0
 8001550:	d001      	beq.n	8001556 <MX_TIM4_Init+0x66>
  {
    Error_Handler();
 8001552:	f000 f96d 	bl	8001830 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001556:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800155a:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800155c:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001560:	4619      	mov	r1, r3
 8001562:	481c      	ldr	r0, [pc, #112]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001564:	f006 f8c6 	bl	80076f4 <HAL_TIM_ConfigClockSource>
 8001568:	4603      	mov	r3, r0
 800156a:	2b00      	cmp	r3, #0
 800156c:	d001      	beq.n	8001572 <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 800156e:	f000 f95f 	bl	8001830 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001572:	4818      	ldr	r0, [pc, #96]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001574:	f005 fdea 	bl	800714c <HAL_TIM_PWM_Init>
 8001578:	4603      	mov	r3, r0
 800157a:	2b00      	cmp	r3, #0
 800157c:	d001      	beq.n	8001582 <MX_TIM4_Init+0x92>
  {
    Error_Handler();
 800157e:	f000 f957 	bl	8001830 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001582:	2300      	movs	r3, #0
 8001584:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001586:	2300      	movs	r3, #0
 8001588:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800158a:	f107 0320 	add.w	r3, r7, #32
 800158e:	4619      	mov	r1, r3
 8001590:	4810      	ldr	r0, [pc, #64]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 8001592:	f006 fcbb 	bl	8007f0c <HAL_TIMEx_MasterConfigSynchronization>
 8001596:	4603      	mov	r3, r0
 8001598:	2b00      	cmp	r3, #0
 800159a:	d001      	beq.n	80015a0 <MX_TIM4_Init+0xb0>
  {
    Error_Handler();
 800159c:	f000 f948 	bl	8001830 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80015a0:	2360      	movs	r3, #96	@ 0x60
 80015a2:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80015a4:	2300      	movs	r3, #0
 80015a6:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80015a8:	2300      	movs	r3, #0
 80015aa:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80015ac:	2300      	movs	r3, #0
 80015ae:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80015b0:	1d3b      	adds	r3, r7, #4
 80015b2:	2204      	movs	r2, #4
 80015b4:	4619      	mov	r1, r3
 80015b6:	4807      	ldr	r0, [pc, #28]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 80015b8:	f005 ffda 	bl	8007570 <HAL_TIM_PWM_ConfigChannel>
 80015bc:	4603      	mov	r3, r0
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d001      	beq.n	80015c6 <MX_TIM4_Init+0xd6>
  {
    Error_Handler();
 80015c2:	f000 f935 	bl	8001830 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80015c6:	4803      	ldr	r0, [pc, #12]	@ (80015d4 <MX_TIM4_Init+0xe4>)
 80015c8:	f000 fb78 	bl	8001cbc <HAL_TIM_MspPostInit>

}
 80015cc:	bf00      	nop
 80015ce:	3738      	adds	r7, #56	@ 0x38
 80015d0:	46bd      	mov	sp, r7
 80015d2:	bd80      	pop	{r7, pc}
 80015d4:	20000588 	.word	0x20000588
 80015d8:	40000800 	.word	0x40000800

080015dc <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80015dc:	b580      	push	{r7, lr}
 80015de:	b082      	sub	sp, #8
 80015e0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015e2:	2300      	movs	r3, #0
 80015e4:	607b      	str	r3, [r7, #4]
 80015e6:	4b17      	ldr	r3, [pc, #92]	@ (8001644 <MX_DMA_Init+0x68>)
 80015e8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015ea:	4a16      	ldr	r2, [pc, #88]	@ (8001644 <MX_DMA_Init+0x68>)
 80015ec:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80015f0:	6313      	str	r3, [r2, #48]	@ 0x30
 80015f2:	4b14      	ldr	r3, [pc, #80]	@ (8001644 <MX_DMA_Init+0x68>)
 80015f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015f6:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80015fa:	607b      	str	r3, [r7, #4]
 80015fc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 80015fe:	2300      	movs	r3, #0
 8001600:	603b      	str	r3, [r7, #0]
 8001602:	4b10      	ldr	r3, [pc, #64]	@ (8001644 <MX_DMA_Init+0x68>)
 8001604:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001606:	4a0f      	ldr	r2, [pc, #60]	@ (8001644 <MX_DMA_Init+0x68>)
 8001608:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800160c:	6313      	str	r3, [r2, #48]	@ 0x30
 800160e:	4b0d      	ldr	r3, [pc, #52]	@ (8001644 <MX_DMA_Init+0x68>)
 8001610:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001612:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001616:	603b      	str	r3, [r7, #0]
 8001618:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 800161a:	2200      	movs	r2, #0
 800161c:	2100      	movs	r1, #0
 800161e:	200f      	movs	r0, #15
 8001620:	f002 f8a5 	bl	800376e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8001624:	200f      	movs	r0, #15
 8001626:	f002 f8be 	bl	80037a6 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800162a:	2200      	movs	r2, #0
 800162c:	2100      	movs	r1, #0
 800162e:	2038      	movs	r0, #56	@ 0x38
 8001630:	f002 f89d 	bl	800376e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8001634:	2038      	movs	r0, #56	@ 0x38
 8001636:	f002 f8b6 	bl	80037a6 <HAL_NVIC_EnableIRQ>

}
 800163a:	bf00      	nop
 800163c:	3708      	adds	r7, #8
 800163e:	46bd      	mov	sp, r7
 8001640:	bd80      	pop	{r7, pc}
 8001642:	bf00      	nop
 8001644:	40023800 	.word	0x40023800

08001648 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001648:	b580      	push	{r7, lr}
 800164a:	b08a      	sub	sp, #40	@ 0x28
 800164c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800164e:	f107 0314 	add.w	r3, r7, #20
 8001652:	2200      	movs	r2, #0
 8001654:	601a      	str	r2, [r3, #0]
 8001656:	605a      	str	r2, [r3, #4]
 8001658:	609a      	str	r2, [r3, #8]
 800165a:	60da      	str	r2, [r3, #12]
 800165c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800165e:	2300      	movs	r3, #0
 8001660:	613b      	str	r3, [r7, #16]
 8001662:	4b67      	ldr	r3, [pc, #412]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 8001664:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001666:	4a66      	ldr	r2, [pc, #408]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 8001668:	f043 0304 	orr.w	r3, r3, #4
 800166c:	6313      	str	r3, [r2, #48]	@ 0x30
 800166e:	4b64      	ldr	r3, [pc, #400]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 8001670:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001672:	f003 0304 	and.w	r3, r3, #4
 8001676:	613b      	str	r3, [r7, #16]
 8001678:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800167a:	2300      	movs	r3, #0
 800167c:	60fb      	str	r3, [r7, #12]
 800167e:	4b60      	ldr	r3, [pc, #384]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 8001680:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001682:	4a5f      	ldr	r2, [pc, #380]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 8001684:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001688:	6313      	str	r3, [r2, #48]	@ 0x30
 800168a:	4b5d      	ldr	r3, [pc, #372]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 800168c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800168e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001692:	60fb      	str	r3, [r7, #12]
 8001694:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001696:	2300      	movs	r3, #0
 8001698:	60bb      	str	r3, [r7, #8]
 800169a:	4b59      	ldr	r3, [pc, #356]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 800169c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800169e:	4a58      	ldr	r2, [pc, #352]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 80016a0:	f043 0301 	orr.w	r3, r3, #1
 80016a4:	6313      	str	r3, [r2, #48]	@ 0x30
 80016a6:	4b56      	ldr	r3, [pc, #344]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 80016a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016aa:	f003 0301 	and.w	r3, r3, #1
 80016ae:	60bb      	str	r3, [r7, #8]
 80016b0:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016b2:	2300      	movs	r3, #0
 80016b4:	607b      	str	r3, [r7, #4]
 80016b6:	4b52      	ldr	r3, [pc, #328]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 80016b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ba:	4a51      	ldr	r2, [pc, #324]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 80016bc:	f043 0302 	orr.w	r3, r3, #2
 80016c0:	6313      	str	r3, [r2, #48]	@ 0x30
 80016c2:	4b4f      	ldr	r3, [pc, #316]	@ (8001800 <MX_GPIO_Init+0x1b8>)
 80016c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016c6:	f003 0302 	and.w	r3, r3, #2
 80016ca:	607b      	str	r3, [r7, #4]
 80016cc:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|GPIO_PIN_10, GPIO_PIN_RESET);
 80016ce:	2200      	movs	r2, #0
 80016d0:	f44f 619c 	mov.w	r1, #1248	@ 0x4e0
 80016d4:	484b      	ldr	r0, [pc, #300]	@ (8001804 <MX_GPIO_Init+0x1bc>)
 80016d6:	f002 fdf7 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 80016da:	2201      	movs	r2, #1
 80016dc:	2180      	movs	r1, #128	@ 0x80
 80016de:	484a      	ldr	r0, [pc, #296]	@ (8001808 <MX_GPIO_Init+0x1c0>)
 80016e0:	f002 fdf2 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 80016e4:	2201      	movs	r2, #1
 80016e6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80016ea:	4846      	ldr	r0, [pc, #280]	@ (8001804 <MX_GPIO_Init+0x1bc>)
 80016ec:	f002 fdec 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DISPL_RST_Pin|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 80016f0:	2200      	movs	r2, #0
 80016f2:	f44f 7150 	mov.w	r1, #832	@ 0x340
 80016f6:	4845      	ldr	r0, [pc, #276]	@ (800180c <MX_GPIO_Init+0x1c4>)
 80016f8:	f002 fde6 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80016fc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001700:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001702:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001706:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001708:	2300      	movs	r3, #0
 800170a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800170c:	f107 0314 	add.w	r3, r7, #20
 8001710:	4619      	mov	r1, r3
 8001712:	483d      	ldr	r0, [pc, #244]	@ (8001808 <MX_GPIO_Init+0x1c0>)
 8001714:	f002 fc2c 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
  GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8001718:	230c      	movs	r3, #12
 800171a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800171c:	2302      	movs	r3, #2
 800171e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001720:	2300      	movs	r3, #0
 8001722:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001724:	2303      	movs	r3, #3
 8001726:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001728:	2307      	movs	r3, #7
 800172a:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800172c:	f107 0314 	add.w	r3, r7, #20
 8001730:	4619      	mov	r1, r3
 8001732:	4834      	ldr	r0, [pc, #208]	@ (8001804 <MX_GPIO_Init+0x1bc>)
 8001734:	f002 fc1c 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin DISPL_LED_Pin DISPL_DC_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|TOUCH_CS_Pin;
 8001738:	f44f 7338 	mov.w	r3, #736	@ 0x2e0
 800173c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800173e:	2301      	movs	r3, #1
 8001740:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001742:	2300      	movs	r3, #0
 8001744:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001746:	2300      	movs	r3, #0
 8001748:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800174a:	f107 0314 	add.w	r3, r7, #20
 800174e:	4619      	mov	r1, r3
 8001750:	482c      	ldr	r0, [pc, #176]	@ (8001804 <MX_GPIO_Init+0x1bc>)
 8001752:	f002 fc0d 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_CS_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin;
 8001756:	2380      	movs	r3, #128	@ 0x80
 8001758:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800175a:	2301      	movs	r3, #1
 800175c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800175e:	2300      	movs	r3, #0
 8001760:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001762:	2300      	movs	r3, #0
 8001764:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_CS_GPIO_Port, &GPIO_InitStruct);
 8001766:	f107 0314 	add.w	r3, r7, #20
 800176a:	4619      	mov	r1, r3
 800176c:	4826      	ldr	r0, [pc, #152]	@ (8001808 <MX_GPIO_Init+0x1c0>)
 800176e:	f002 fbff 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8001772:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001776:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001778:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 800177c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800177e:	2301      	movs	r3, #1
 8001780:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8001782:	f107 0314 	add.w	r3, r7, #20
 8001786:	4619      	mov	r1, r3
 8001788:	481e      	ldr	r0, [pc, #120]	@ (8001804 <MX_GPIO_Init+0x1bc>)
 800178a:	f002 fbf1 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 800178e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001792:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001794:	2301      	movs	r3, #1
 8001796:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001798:	2300      	movs	r3, #0
 800179a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800179c:	2302      	movs	r3, #2
 800179e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017a0:	f107 0314 	add.w	r3, r7, #20
 80017a4:	4619      	mov	r1, r3
 80017a6:	4817      	ldr	r0, [pc, #92]	@ (8001804 <MX_GPIO_Init+0x1bc>)
 80017a8:	f002 fbe2 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 80017ac:	2340      	movs	r3, #64	@ 0x40
 80017ae:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017b0:	2301      	movs	r3, #1
 80017b2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017b4:	2300      	movs	r3, #0
 80017b6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017b8:	2300      	movs	r3, #0
 80017ba:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 80017bc:	f107 0314 	add.w	r3, r7, #20
 80017c0:	4619      	mov	r1, r3
 80017c2:	4812      	ldr	r0, [pc, #72]	@ (800180c <MX_GPIO_Init+0x1c4>)
 80017c4:	f002 fbd4 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80017c8:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80017cc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017ce:	2301      	movs	r3, #1
 80017d0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017d2:	2300      	movs	r3, #0
 80017d4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80017d6:	2303      	movs	r3, #3
 80017d8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017da:	f107 0314 	add.w	r3, r7, #20
 80017de:	4619      	mov	r1, r3
 80017e0:	480a      	ldr	r0, [pc, #40]	@ (800180c <MX_GPIO_Init+0x1c4>)
 80017e2:	f002 fbc5 	bl	8003f70 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80017e6:	2200      	movs	r2, #0
 80017e8:	2100      	movs	r1, #0
 80017ea:	2017      	movs	r0, #23
 80017ec:	f001 ffbf 	bl	800376e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80017f0:	2017      	movs	r0, #23
 80017f2:	f001 ffd8 	bl	80037a6 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80017f6:	bf00      	nop
 80017f8:	3728      	adds	r7, #40	@ 0x28
 80017fa:	46bd      	mov	sp, r7
 80017fc:	bd80      	pop	{r7, pc}
 80017fe:	bf00      	nop
 8001800:	40023800 	.word	0x40023800
 8001804:	40020000 	.word	0x40020000
 8001808:	40020800 	.word	0x40020800
 800180c:	40020400 	.word	0x40020400

08001810 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
	void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
	{
 8001810:	b580      	push	{r7, lr}
 8001812:	b082      	sub	sp, #8
 8001814:	af00      	add	r7, sp, #0
 8001816:	6078      	str	r0, [r7, #4]
	  // Check which version of the timer triggered this callback and toggle LED
		if (htim==&TGFX_T){
 8001818:	687b      	ldr	r3, [r7, #4]
 800181a:	4a04      	ldr	r2, [pc, #16]	@ (800182c <HAL_TIM_PeriodElapsedCallback+0x1c>)
 800181c:	4293      	cmp	r3, r2
 800181e:	d101      	bne.n	8001824 <HAL_TIM_PeriodElapsedCallback+0x14>
			  //Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
			  touchgfxSignalVSync();
 8001820:	f00b f8b8 	bl	800c994 <touchgfxSignalVSync>
		}
	}
 8001824:	bf00      	nop
 8001826:	3708      	adds	r7, #8
 8001828:	46bd      	mov	sp, r7
 800182a:	bd80      	pop	{r7, pc}
 800182c:	20000540 	.word	0x20000540

08001830 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001830:	b480      	push	{r7}
 8001832:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001834:	b672      	cpsid	i
}
 8001836:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	  /* User can add his own implementation to report the HAL error return state */
	  __disable_irq();
	  while (1)
 8001838:	bf00      	nop
 800183a:	e7fd      	b.n	8001838 <Error_Handler+0x8>

0800183c <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800183c:	b480      	push	{r7}
 800183e:	b083      	sub	sp, #12
 8001840:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001842:	2300      	movs	r3, #0
 8001844:	607b      	str	r3, [r7, #4]
 8001846:	4b10      	ldr	r3, [pc, #64]	@ (8001888 <HAL_MspInit+0x4c>)
 8001848:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800184a:	4a0f      	ldr	r2, [pc, #60]	@ (8001888 <HAL_MspInit+0x4c>)
 800184c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001850:	6453      	str	r3, [r2, #68]	@ 0x44
 8001852:	4b0d      	ldr	r3, [pc, #52]	@ (8001888 <HAL_MspInit+0x4c>)
 8001854:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001856:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800185a:	607b      	str	r3, [r7, #4]
 800185c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800185e:	2300      	movs	r3, #0
 8001860:	603b      	str	r3, [r7, #0]
 8001862:	4b09      	ldr	r3, [pc, #36]	@ (8001888 <HAL_MspInit+0x4c>)
 8001864:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001866:	4a08      	ldr	r2, [pc, #32]	@ (8001888 <HAL_MspInit+0x4c>)
 8001868:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800186c:	6413      	str	r3, [r2, #64]	@ 0x40
 800186e:	4b06      	ldr	r3, [pc, #24]	@ (8001888 <HAL_MspInit+0x4c>)
 8001870:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001872:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001876:	603b      	str	r3, [r7, #0]
 8001878:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800187a:	bf00      	nop
 800187c:	370c      	adds	r7, #12
 800187e:	46bd      	mov	sp, r7
 8001880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001884:	4770      	bx	lr
 8001886:	bf00      	nop
 8001888:	40023800 	.word	0x40023800

0800188c <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 800188c:	b580      	push	{r7, lr}
 800188e:	b08a      	sub	sp, #40	@ 0x28
 8001890:	af00      	add	r7, sp, #0
 8001892:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001894:	f107 0314 	add.w	r3, r7, #20
 8001898:	2200      	movs	r2, #0
 800189a:	601a      	str	r2, [r3, #0]
 800189c:	605a      	str	r2, [r3, #4]
 800189e:	609a      	str	r2, [r3, #8]
 80018a0:	60da      	str	r2, [r3, #12]
 80018a2:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	4a33      	ldr	r2, [pc, #204]	@ (8001978 <HAL_ADC_MspInit+0xec>)
 80018aa:	4293      	cmp	r3, r2
 80018ac:	d15f      	bne.n	800196e <HAL_ADC_MspInit+0xe2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80018ae:	2300      	movs	r3, #0
 80018b0:	613b      	str	r3, [r7, #16]
 80018b2:	4b32      	ldr	r3, [pc, #200]	@ (800197c <HAL_ADC_MspInit+0xf0>)
 80018b4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018b6:	4a31      	ldr	r2, [pc, #196]	@ (800197c <HAL_ADC_MspInit+0xf0>)
 80018b8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80018bc:	6453      	str	r3, [r2, #68]	@ 0x44
 80018be:	4b2f      	ldr	r3, [pc, #188]	@ (800197c <HAL_ADC_MspInit+0xf0>)
 80018c0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018c2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80018c6:	613b      	str	r3, [r7, #16]
 80018c8:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018ca:	2300      	movs	r3, #0
 80018cc:	60fb      	str	r3, [r7, #12]
 80018ce:	4b2b      	ldr	r3, [pc, #172]	@ (800197c <HAL_ADC_MspInit+0xf0>)
 80018d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018d2:	4a2a      	ldr	r2, [pc, #168]	@ (800197c <HAL_ADC_MspInit+0xf0>)
 80018d4:	f043 0304 	orr.w	r3, r3, #4
 80018d8:	6313      	str	r3, [r2, #48]	@ 0x30
 80018da:	4b28      	ldr	r3, [pc, #160]	@ (800197c <HAL_ADC_MspInit+0xf0>)
 80018dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018de:	f003 0304 	and.w	r3, r3, #4
 80018e2:	60fb      	str	r3, [r7, #12]
 80018e4:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC0     ------> ADC1_IN10
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80018e6:	2301      	movs	r3, #1
 80018e8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80018ea:	2303      	movs	r3, #3
 80018ec:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018ee:	2300      	movs	r3, #0
 80018f0:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018f2:	f107 0314 	add.w	r3, r7, #20
 80018f6:	4619      	mov	r1, r3
 80018f8:	4821      	ldr	r0, [pc, #132]	@ (8001980 <HAL_ADC_MspInit+0xf4>)
 80018fa:	f002 fb39 	bl	8003f70 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 80018fe:	4b21      	ldr	r3, [pc, #132]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001900:	4a21      	ldr	r2, [pc, #132]	@ (8001988 <HAL_ADC_MspInit+0xfc>)
 8001902:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8001904:	4b1f      	ldr	r3, [pc, #124]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001906:	2200      	movs	r2, #0
 8001908:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800190a:	4b1e      	ldr	r3, [pc, #120]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 800190c:	2200      	movs	r2, #0
 800190e:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001910:	4b1c      	ldr	r3, [pc, #112]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001912:	2200      	movs	r2, #0
 8001914:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001916:	4b1b      	ldr	r3, [pc, #108]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001918:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800191c:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800191e:	4b19      	ldr	r3, [pc, #100]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001920:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001924:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001926:	4b17      	ldr	r3, [pc, #92]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001928:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800192c:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 800192e:	4b15      	ldr	r3, [pc, #84]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001930:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001934:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8001936:	4b13      	ldr	r3, [pc, #76]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001938:	2200      	movs	r2, #0
 800193a:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800193c:	4b11      	ldr	r3, [pc, #68]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 800193e:	2200      	movs	r2, #0
 8001940:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001942:	4810      	ldr	r0, [pc, #64]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001944:	f001 ff82 	bl	800384c <HAL_DMA_Init>
 8001948:	4603      	mov	r3, r0
 800194a:	2b00      	cmp	r3, #0
 800194c:	d001      	beq.n	8001952 <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 800194e:	f7ff ff6f 	bl	8001830 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	4a0b      	ldr	r2, [pc, #44]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 8001956:	639a      	str	r2, [r3, #56]	@ 0x38
 8001958:	4a0a      	ldr	r2, [pc, #40]	@ (8001984 <HAL_ADC_MspInit+0xf8>)
 800195a:	687b      	ldr	r3, [r7, #4]
 800195c:	6393      	str	r3, [r2, #56]	@ 0x38

    /* ADC1 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 800195e:	2200      	movs	r2, #0
 8001960:	2100      	movs	r1, #0
 8001962:	2012      	movs	r0, #18
 8001964:	f001 ff03 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 8001968:	2012      	movs	r0, #18
 800196a:	f001 ff1c 	bl	80037a6 <HAL_NVIC_EnableIRQ>

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 800196e:	bf00      	nop
 8001970:	3728      	adds	r7, #40	@ 0x28
 8001972:	46bd      	mov	sp, r7
 8001974:	bd80      	pop	{r7, pc}
 8001976:	bf00      	nop
 8001978:	40012000 	.word	0x40012000
 800197c:	40023800 	.word	0x40023800
 8001980:	40020800 	.word	0x40020800
 8001984:	20000384 	.word	0x20000384
 8001988:	40026410 	.word	0x40026410

0800198c <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 800198c:	b480      	push	{r7}
 800198e:	b085      	sub	sp, #20
 8001990:	af00      	add	r7, sp, #0
 8001992:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	681b      	ldr	r3, [r3, #0]
 8001998:	4a0b      	ldr	r2, [pc, #44]	@ (80019c8 <HAL_CRC_MspInit+0x3c>)
 800199a:	4293      	cmp	r3, r2
 800199c:	d10d      	bne.n	80019ba <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800199e:	2300      	movs	r3, #0
 80019a0:	60fb      	str	r3, [r7, #12]
 80019a2:	4b0a      	ldr	r3, [pc, #40]	@ (80019cc <HAL_CRC_MspInit+0x40>)
 80019a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019a6:	4a09      	ldr	r2, [pc, #36]	@ (80019cc <HAL_CRC_MspInit+0x40>)
 80019a8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80019ac:	6313      	str	r3, [r2, #48]	@ 0x30
 80019ae:	4b07      	ldr	r3, [pc, #28]	@ (80019cc <HAL_CRC_MspInit+0x40>)
 80019b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019b2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80019b6:	60fb      	str	r3, [r7, #12]
 80019b8:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 80019ba:	bf00      	nop
 80019bc:	3714      	adds	r7, #20
 80019be:	46bd      	mov	sp, r7
 80019c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c4:	4770      	bx	lr
 80019c6:	bf00      	nop
 80019c8:	40023000 	.word	0x40023000
 80019cc:	40023800 	.word	0x40023800

080019d0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80019d0:	b580      	push	{r7, lr}
 80019d2:	b08a      	sub	sp, #40	@ 0x28
 80019d4:	af00      	add	r7, sp, #0
 80019d6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019d8:	f107 0314 	add.w	r3, r7, #20
 80019dc:	2200      	movs	r2, #0
 80019de:	601a      	str	r2, [r3, #0]
 80019e0:	605a      	str	r2, [r3, #4]
 80019e2:	609a      	str	r2, [r3, #8]
 80019e4:	60da      	str	r2, [r3, #12]
 80019e6:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C2)
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	681b      	ldr	r3, [r3, #0]
 80019ec:	4a29      	ldr	r2, [pc, #164]	@ (8001a94 <HAL_I2C_MspInit+0xc4>)
 80019ee:	4293      	cmp	r3, r2
 80019f0:	d14b      	bne.n	8001a8a <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80019f2:	2300      	movs	r3, #0
 80019f4:	613b      	str	r3, [r7, #16]
 80019f6:	4b28      	ldr	r3, [pc, #160]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 80019f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019fa:	4a27      	ldr	r2, [pc, #156]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 80019fc:	f043 0302 	orr.w	r3, r3, #2
 8001a00:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a02:	4b25      	ldr	r3, [pc, #148]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 8001a04:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a06:	f003 0302 	and.w	r3, r3, #2
 8001a0a:	613b      	str	r3, [r7, #16]
 8001a0c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a0e:	2300      	movs	r3, #0
 8001a10:	60fb      	str	r3, [r7, #12]
 8001a12:	4b21      	ldr	r3, [pc, #132]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 8001a14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a16:	4a20      	ldr	r2, [pc, #128]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 8001a18:	f043 0304 	orr.w	r3, r3, #4
 8001a1c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a1e:	4b1e      	ldr	r3, [pc, #120]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 8001a20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a22:	f003 0304 	and.w	r3, r3, #4
 8001a26:	60fb      	str	r3, [r7, #12]
 8001a28:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PC12     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001a2a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001a2e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a30:	2312      	movs	r3, #18
 8001a32:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a34:	2301      	movs	r3, #1
 8001a36:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a38:	2303      	movs	r3, #3
 8001a3a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a3c:	2304      	movs	r3, #4
 8001a3e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a40:	f107 0314 	add.w	r3, r7, #20
 8001a44:	4619      	mov	r1, r3
 8001a46:	4815      	ldr	r0, [pc, #84]	@ (8001a9c <HAL_I2C_MspInit+0xcc>)
 8001a48:	f002 fa92 	bl	8003f70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001a4c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001a50:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a52:	2312      	movs	r3, #18
 8001a54:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a56:	2301      	movs	r3, #1
 8001a58:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a5a:	2303      	movs	r3, #3
 8001a5c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a5e:	2304      	movs	r3, #4
 8001a60:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a62:	f107 0314 	add.w	r3, r7, #20
 8001a66:	4619      	mov	r1, r3
 8001a68:	480d      	ldr	r0, [pc, #52]	@ (8001aa0 <HAL_I2C_MspInit+0xd0>)
 8001a6a:	f002 fa81 	bl	8003f70 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001a6e:	2300      	movs	r3, #0
 8001a70:	60bb      	str	r3, [r7, #8]
 8001a72:	4b09      	ldr	r3, [pc, #36]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 8001a74:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a76:	4a08      	ldr	r2, [pc, #32]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 8001a78:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001a7c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a7e:	4b06      	ldr	r3, [pc, #24]	@ (8001a98 <HAL_I2C_MspInit+0xc8>)
 8001a80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a82:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001a86:	60bb      	str	r3, [r7, #8]
 8001a88:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8001a8a:	bf00      	nop
 8001a8c:	3728      	adds	r7, #40	@ 0x28
 8001a8e:	46bd      	mov	sp, r7
 8001a90:	bd80      	pop	{r7, pc}
 8001a92:	bf00      	nop
 8001a94:	40005800 	.word	0x40005800
 8001a98:	40023800 	.word	0x40023800
 8001a9c:	40020400 	.word	0x40020400
 8001aa0:	40020800 	.word	0x40020800

08001aa4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	b08a      	sub	sp, #40	@ 0x28
 8001aa8:	af00      	add	r7, sp, #0
 8001aaa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aac:	f107 0314 	add.w	r3, r7, #20
 8001ab0:	2200      	movs	r2, #0
 8001ab2:	601a      	str	r2, [r3, #0]
 8001ab4:	605a      	str	r2, [r3, #4]
 8001ab6:	609a      	str	r2, [r3, #8]
 8001ab8:	60da      	str	r2, [r3, #12]
 8001aba:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	681b      	ldr	r3, [r3, #0]
 8001ac0:	4a4b      	ldr	r2, [pc, #300]	@ (8001bf0 <HAL_SPI_MspInit+0x14c>)
 8001ac2:	4293      	cmp	r3, r2
 8001ac4:	f040 8090 	bne.w	8001be8 <HAL_SPI_MspInit+0x144>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001ac8:	2300      	movs	r3, #0
 8001aca:	613b      	str	r3, [r7, #16]
 8001acc:	4b49      	ldr	r3, [pc, #292]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001ace:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ad0:	4a48      	ldr	r2, [pc, #288]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001ad2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001ad6:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ad8:	4b46      	ldr	r3, [pc, #280]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001ada:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001adc:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001ae0:	613b      	str	r3, [r7, #16]
 8001ae2:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	60fb      	str	r3, [r7, #12]
 8001ae8:	4b42      	ldr	r3, [pc, #264]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001aea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001aec:	4a41      	ldr	r2, [pc, #260]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001aee:	f043 0304 	orr.w	r3, r3, #4
 8001af2:	6313      	str	r3, [r2, #48]	@ 0x30
 8001af4:	4b3f      	ldr	r3, [pc, #252]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001af6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001af8:	f003 0304 	and.w	r3, r3, #4
 8001afc:	60fb      	str	r3, [r7, #12]
 8001afe:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b00:	2300      	movs	r3, #0
 8001b02:	60bb      	str	r3, [r7, #8]
 8001b04:	4b3b      	ldr	r3, [pc, #236]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001b06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b08:	4a3a      	ldr	r2, [pc, #232]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001b0a:	f043 0302 	orr.w	r3, r3, #2
 8001b0e:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b10:	4b38      	ldr	r3, [pc, #224]	@ (8001bf4 <HAL_SPI_MspInit+0x150>)
 8001b12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b14:	f003 0302 	and.w	r3, r3, #2
 8001b18:	60bb      	str	r3, [r7, #8]
 8001b1a:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = DISPL_MOSI_Pin;
 8001b1c:	2302      	movs	r3, #2
 8001b1e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b20:	2302      	movs	r3, #2
 8001b22:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b24:	2300      	movs	r3, #0
 8001b26:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b28:	2303      	movs	r3, #3
 8001b2a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 8001b2c:	2307      	movs	r3, #7
 8001b2e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_MOSI_GPIO_Port, &GPIO_InitStruct);
 8001b30:	f107 0314 	add.w	r3, r7, #20
 8001b34:	4619      	mov	r1, r3
 8001b36:	4830      	ldr	r0, [pc, #192]	@ (8001bf8 <HAL_SPI_MspInit+0x154>)
 8001b38:	f002 fa1a 	bl	8003f70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = TOUCH_MISO_Pin;
 8001b3c:	2304      	movs	r3, #4
 8001b3e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b40:	2302      	movs	r3, #2
 8001b42:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b44:	2300      	movs	r3, #0
 8001b46:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b48:	2303      	movs	r3, #3
 8001b4a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b4c:	2305      	movs	r3, #5
 8001b4e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(TOUCH_MISO_GPIO_Port, &GPIO_InitStruct);
 8001b50:	f107 0314 	add.w	r3, r7, #20
 8001b54:	4619      	mov	r1, r3
 8001b56:	4828      	ldr	r0, [pc, #160]	@ (8001bf8 <HAL_SPI_MspInit+0x154>)
 8001b58:	f002 fa0a 	bl	8003f70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DISPL_SCK_Pin;
 8001b5c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001b60:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b62:	2302      	movs	r3, #2
 8001b64:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b66:	2300      	movs	r3, #0
 8001b68:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b6a:	2303      	movs	r3, #3
 8001b6c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b6e:	2305      	movs	r3, #5
 8001b70:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_SCK_GPIO_Port, &GPIO_InitStruct);
 8001b72:	f107 0314 	add.w	r3, r7, #20
 8001b76:	4619      	mov	r1, r3
 8001b78:	4820      	ldr	r0, [pc, #128]	@ (8001bfc <HAL_SPI_MspInit+0x158>)
 8001b7a:	f002 f9f9 	bl	8003f70 <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8001b7e:	4b20      	ldr	r3, [pc, #128]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001b80:	4a20      	ldr	r2, [pc, #128]	@ (8001c04 <HAL_SPI_MspInit+0x160>)
 8001b82:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8001b84:	4b1e      	ldr	r3, [pc, #120]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001b86:	2200      	movs	r2, #0
 8001b88:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001b8a:	4b1d      	ldr	r3, [pc, #116]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001b8c:	2240      	movs	r2, #64	@ 0x40
 8001b8e:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001b90:	4b1b      	ldr	r3, [pc, #108]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001b92:	2200      	movs	r2, #0
 8001b94:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001b96:	4b1a      	ldr	r3, [pc, #104]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001b98:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001b9c:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001b9e:	4b18      	ldr	r3, [pc, #96]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001ba0:	2200      	movs	r2, #0
 8001ba2:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001ba4:	4b16      	ldr	r3, [pc, #88]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001ba6:	2200      	movs	r2, #0
 8001ba8:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8001baa:	4b15      	ldr	r3, [pc, #84]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001bac:	2200      	movs	r2, #0
 8001bae:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001bb0:	4b13      	ldr	r3, [pc, #76]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001bb2:	2200      	movs	r2, #0
 8001bb4:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001bb6:	4b12      	ldr	r3, [pc, #72]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001bb8:	2200      	movs	r2, #0
 8001bba:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8001bbc:	4810      	ldr	r0, [pc, #64]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001bbe:	f001 fe45 	bl	800384c <HAL_DMA_Init>
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d001      	beq.n	8001bcc <HAL_SPI_MspInit+0x128>
    {
      Error_Handler();
 8001bc8:	f7ff fe32 	bl	8001830 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	4a0c      	ldr	r2, [pc, #48]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001bd0:	649a      	str	r2, [r3, #72]	@ 0x48
 8001bd2:	4a0b      	ldr	r2, [pc, #44]	@ (8001c00 <HAL_SPI_MspInit+0x15c>)
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8001bd8:	2200      	movs	r2, #0
 8001bda:	2100      	movs	r1, #0
 8001bdc:	2024      	movs	r0, #36	@ 0x24
 8001bde:	f001 fdc6 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8001be2:	2024      	movs	r0, #36	@ 0x24
 8001be4:	f001 fddf 	bl	80037a6 <HAL_NVIC_EnableIRQ>

  /* USER CODE END SPI2_MspInit 1 */

  }

}
 8001be8:	bf00      	nop
 8001bea:	3728      	adds	r7, #40	@ 0x28
 8001bec:	46bd      	mov	sp, r7
 8001bee:	bd80      	pop	{r7, pc}
 8001bf0:	40003800 	.word	0x40003800
 8001bf4:	40023800 	.word	0x40023800
 8001bf8:	40020800 	.word	0x40020800
 8001bfc:	40020400 	.word	0x40020400
 8001c00:	20000498 	.word	0x20000498
 8001c04:	40026070 	.word	0x40026070

08001c08 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	b086      	sub	sp, #24
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	681b      	ldr	r3, [r3, #0]
 8001c14:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c18:	d10e      	bne.n	8001c38 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001c1a:	2300      	movs	r3, #0
 8001c1c:	617b      	str	r3, [r7, #20]
 8001c1e:	4b24      	ldr	r3, [pc, #144]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c22:	4a23      	ldr	r2, [pc, #140]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c24:	f043 0301 	orr.w	r3, r3, #1
 8001c28:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c2a:	4b21      	ldr	r3, [pc, #132]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c2e:	f003 0301 	and.w	r3, r3, #1
 8001c32:	617b      	str	r3, [r7, #20]
 8001c34:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001c36:	e036      	b.n	8001ca6 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM3)
 8001c38:	687b      	ldr	r3, [r7, #4]
 8001c3a:	681b      	ldr	r3, [r3, #0]
 8001c3c:	4a1d      	ldr	r2, [pc, #116]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xac>)
 8001c3e:	4293      	cmp	r3, r2
 8001c40:	d116      	bne.n	8001c70 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c42:	2300      	movs	r3, #0
 8001c44:	613b      	str	r3, [r7, #16]
 8001c46:	4b1a      	ldr	r3, [pc, #104]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c4a:	4a19      	ldr	r2, [pc, #100]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c4c:	f043 0302 	orr.w	r3, r3, #2
 8001c50:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c52:	4b17      	ldr	r3, [pc, #92]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c56:	f003 0302 	and.w	r3, r3, #2
 8001c5a:	613b      	str	r3, [r7, #16]
 8001c5c:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001c5e:	2200      	movs	r2, #0
 8001c60:	2100      	movs	r1, #0
 8001c62:	201d      	movs	r0, #29
 8001c64:	f001 fd83 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001c68:	201d      	movs	r0, #29
 8001c6a:	f001 fd9c 	bl	80037a6 <HAL_NVIC_EnableIRQ>
}
 8001c6e:	e01a      	b.n	8001ca6 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM4)
 8001c70:	687b      	ldr	r3, [r7, #4]
 8001c72:	681b      	ldr	r3, [r3, #0]
 8001c74:	4a10      	ldr	r2, [pc, #64]	@ (8001cb8 <HAL_TIM_Base_MspInit+0xb0>)
 8001c76:	4293      	cmp	r3, r2
 8001c78:	d115      	bne.n	8001ca6 <HAL_TIM_Base_MspInit+0x9e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	60fb      	str	r3, [r7, #12]
 8001c7e:	4b0c      	ldr	r3, [pc, #48]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c82:	4a0b      	ldr	r2, [pc, #44]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c84:	f043 0304 	orr.w	r3, r3, #4
 8001c88:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c8a:	4b09      	ldr	r3, [pc, #36]	@ (8001cb0 <HAL_TIM_Base_MspInit+0xa8>)
 8001c8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c8e:	f003 0304 	and.w	r3, r3, #4
 8001c92:	60fb      	str	r3, [r7, #12]
 8001c94:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001c96:	2200      	movs	r2, #0
 8001c98:	2100      	movs	r1, #0
 8001c9a:	201e      	movs	r0, #30
 8001c9c:	f001 fd67 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001ca0:	201e      	movs	r0, #30
 8001ca2:	f001 fd80 	bl	80037a6 <HAL_NVIC_EnableIRQ>
}
 8001ca6:	bf00      	nop
 8001ca8:	3718      	adds	r7, #24
 8001caa:	46bd      	mov	sp, r7
 8001cac:	bd80      	pop	{r7, pc}
 8001cae:	bf00      	nop
 8001cb0:	40023800 	.word	0x40023800
 8001cb4:	40000400 	.word	0x40000400
 8001cb8:	40000800 	.word	0x40000800

08001cbc <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001cbc:	b580      	push	{r7, lr}
 8001cbe:	b08a      	sub	sp, #40	@ 0x28
 8001cc0:	af00      	add	r7, sp, #0
 8001cc2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cc4:	f107 0314 	add.w	r3, r7, #20
 8001cc8:	2200      	movs	r2, #0
 8001cca:	601a      	str	r2, [r3, #0]
 8001ccc:	605a      	str	r2, [r3, #4]
 8001cce:	609a      	str	r2, [r3, #8]
 8001cd0:	60da      	str	r2, [r3, #12]
 8001cd2:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001cd4:	687b      	ldr	r3, [r7, #4]
 8001cd6:	681b      	ldr	r3, [r3, #0]
 8001cd8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001cdc:	d11e      	bne.n	8001d1c <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cde:	2300      	movs	r3, #0
 8001ce0:	613b      	str	r3, [r7, #16]
 8001ce2:	4b22      	ldr	r3, [pc, #136]	@ (8001d6c <HAL_TIM_MspPostInit+0xb0>)
 8001ce4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ce6:	4a21      	ldr	r2, [pc, #132]	@ (8001d6c <HAL_TIM_MspPostInit+0xb0>)
 8001ce8:	f043 0301 	orr.w	r3, r3, #1
 8001cec:	6313      	str	r3, [r2, #48]	@ 0x30
 8001cee:	4b1f      	ldr	r3, [pc, #124]	@ (8001d6c <HAL_TIM_MspPostInit+0xb0>)
 8001cf0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cf2:	f003 0301 	and.w	r3, r3, #1
 8001cf6:	613b      	str	r3, [r7, #16]
 8001cf8:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001cfa:	2301      	movs	r3, #1
 8001cfc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cfe:	2302      	movs	r3, #2
 8001d00:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d02:	2300      	movs	r3, #0
 8001d04:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d06:	2300      	movs	r3, #0
 8001d08:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001d0a:	2301      	movs	r3, #1
 8001d0c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d0e:	f107 0314 	add.w	r3, r7, #20
 8001d12:	4619      	mov	r1, r3
 8001d14:	4816      	ldr	r0, [pc, #88]	@ (8001d70 <HAL_TIM_MspPostInit+0xb4>)
 8001d16:	f002 f92b 	bl	8003f70 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8001d1a:	e022      	b.n	8001d62 <HAL_TIM_MspPostInit+0xa6>
  else if(htim->Instance==TIM4)
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	681b      	ldr	r3, [r3, #0]
 8001d20:	4a14      	ldr	r2, [pc, #80]	@ (8001d74 <HAL_TIM_MspPostInit+0xb8>)
 8001d22:	4293      	cmp	r3, r2
 8001d24:	d11d      	bne.n	8001d62 <HAL_TIM_MspPostInit+0xa6>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d26:	2300      	movs	r3, #0
 8001d28:	60fb      	str	r3, [r7, #12]
 8001d2a:	4b10      	ldr	r3, [pc, #64]	@ (8001d6c <HAL_TIM_MspPostInit+0xb0>)
 8001d2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d2e:	4a0f      	ldr	r2, [pc, #60]	@ (8001d6c <HAL_TIM_MspPostInit+0xb0>)
 8001d30:	f043 0302 	orr.w	r3, r3, #2
 8001d34:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d36:	4b0d      	ldr	r3, [pc, #52]	@ (8001d6c <HAL_TIM_MspPostInit+0xb0>)
 8001d38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d3a:	f003 0302 	and.w	r3, r3, #2
 8001d3e:	60fb      	str	r3, [r7, #12]
 8001d40:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001d42:	2380      	movs	r3, #128	@ 0x80
 8001d44:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d46:	2302      	movs	r3, #2
 8001d48:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d4a:	2300      	movs	r3, #0
 8001d4c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d4e:	2300      	movs	r3, #0
 8001d50:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8001d52:	2302      	movs	r3, #2
 8001d54:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d56:	f107 0314 	add.w	r3, r7, #20
 8001d5a:	4619      	mov	r1, r3
 8001d5c:	4806      	ldr	r0, [pc, #24]	@ (8001d78 <HAL_TIM_MspPostInit+0xbc>)
 8001d5e:	f002 f907 	bl	8003f70 <HAL_GPIO_Init>
}
 8001d62:	bf00      	nop
 8001d64:	3728      	adds	r7, #40	@ 0x28
 8001d66:	46bd      	mov	sp, r7
 8001d68:	bd80      	pop	{r7, pc}
 8001d6a:	bf00      	nop
 8001d6c:	40023800 	.word	0x40023800
 8001d70:	40020000 	.word	0x40020000
 8001d74:	40000800 	.word	0x40000800
 8001d78:	40020400 	.word	0x40020400

08001d7c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001d7c:	b480      	push	{r7}
 8001d7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001d80:	bf00      	nop
 8001d82:	e7fd      	b.n	8001d80 <NMI_Handler+0x4>

08001d84 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d84:	b480      	push	{r7}
 8001d86:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001d88:	bf00      	nop
 8001d8a:	e7fd      	b.n	8001d88 <HardFault_Handler+0x4>

08001d8c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001d8c:	b480      	push	{r7}
 8001d8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001d90:	bf00      	nop
 8001d92:	e7fd      	b.n	8001d90 <MemManage_Handler+0x4>

08001d94 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001d94:	b480      	push	{r7}
 8001d96:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001d98:	bf00      	nop
 8001d9a:	e7fd      	b.n	8001d98 <BusFault_Handler+0x4>

08001d9c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001d9c:	b480      	push	{r7}
 8001d9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001da0:	bf00      	nop
 8001da2:	e7fd      	b.n	8001da0 <UsageFault_Handler+0x4>

08001da4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001da4:	b480      	push	{r7}
 8001da6:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001da8:	bf00      	nop
 8001daa:	46bd      	mov	sp, r7
 8001dac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001db0:	4770      	bx	lr

08001db2 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001db2:	b480      	push	{r7}
 8001db4:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001db6:	bf00      	nop
 8001db8:	46bd      	mov	sp, r7
 8001dba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dbe:	4770      	bx	lr

08001dc0 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001dc0:	b480      	push	{r7}
 8001dc2:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001dc4:	bf00      	nop
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dcc:	4770      	bx	lr

08001dce <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001dce:	b580      	push	{r7, lr}
 8001dd0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001dd2:	f000 fe25 	bl	8002a20 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001dd6:	bf00      	nop
 8001dd8:	bd80      	pop	{r7, pc}
	...

08001ddc <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8001ddc:	b580      	push	{r7, lr}
 8001dde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8001de0:	4802      	ldr	r0, [pc, #8]	@ (8001dec <DMA1_Stream4_IRQHandler+0x10>)
 8001de2:	f001 fe5b 	bl	8003a9c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8001de6:	bf00      	nop
 8001de8:	bd80      	pop	{r7, pc}
 8001dea:	bf00      	nop
 8001dec:	20000498 	.word	0x20000498

08001df0 <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1, ADC2 and ADC3 interrupts.
  */
void ADC_IRQHandler(void)
{
 8001df0:	b580      	push	{r7, lr}
 8001df2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN ADC_IRQn 0 */

  /* USER CODE END ADC_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc1);
 8001df4:	4802      	ldr	r0, [pc, #8]	@ (8001e00 <ADC_IRQHandler+0x10>)
 8001df6:	f000 fe9a 	bl	8002b2e <HAL_ADC_IRQHandler>
  /* USER CODE BEGIN ADC_IRQn 1 */

  /* USER CODE END ADC_IRQn 1 */
}
 8001dfa:	bf00      	nop
 8001dfc:	bd80      	pop	{r7, pc}
 8001dfe:	bf00      	nop
 8001e00:	2000033c 	.word	0x2000033c

08001e04 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001e04:	b580      	push	{r7, lr}
 8001e06:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001e08:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001e0c:	f002 fa90 	bl	8004330 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001e10:	bf00      	nop
 8001e12:	bd80      	pop	{r7, pc}

08001e14 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001e14:	b580      	push	{r7, lr}
 8001e16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001e18:	4802      	ldr	r0, [pc, #8]	@ (8001e24 <TIM3_IRQHandler+0x10>)
 8001e1a:	f005 fab9 	bl	8007390 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001e1e:	bf00      	nop
 8001e20:	bd80      	pop	{r7, pc}
 8001e22:	bf00      	nop
 8001e24:	20000540 	.word	0x20000540

08001e28 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001e28:	b580      	push	{r7, lr}
 8001e2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001e2c:	4802      	ldr	r0, [pc, #8]	@ (8001e38 <TIM4_IRQHandler+0x10>)
 8001e2e:	f005 faaf 	bl	8007390 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001e32:	bf00      	nop
 8001e34:	bd80      	pop	{r7, pc}
 8001e36:	bf00      	nop
 8001e38:	20000588 	.word	0x20000588

08001e3c <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8001e3c:	b580      	push	{r7, lr}
 8001e3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8001e40:	4802      	ldr	r0, [pc, #8]	@ (8001e4c <SPI2_IRQHandler+0x10>)
 8001e42:	f004 fded 	bl	8006a20 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8001e46:	bf00      	nop
 8001e48:	bd80      	pop	{r7, pc}
 8001e4a:	bf00      	nop
 8001e4c:	20000440 	.word	0x20000440

08001e50 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8001e50:	b580      	push	{r7, lr}
 8001e52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001e54:	4802      	ldr	r0, [pc, #8]	@ (8001e60 <DMA2_Stream0_IRQHandler+0x10>)
 8001e56:	f001 fe21 	bl	8003a9c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8001e5a:	bf00      	nop
 8001e5c:	bd80      	pop	{r7, pc}
 8001e5e:	bf00      	nop
 8001e60:	20000384 	.word	0x20000384

08001e64 <_getpid>:
 8001e64:	b480      	push	{r7}
 8001e66:	af00      	add	r7, sp, #0
 8001e68:	2301      	movs	r3, #1
 8001e6a:	4618      	mov	r0, r3
 8001e6c:	46bd      	mov	sp, r7
 8001e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e72:	4770      	bx	lr

08001e74 <_kill>:
 8001e74:	b580      	push	{r7, lr}
 8001e76:	b082      	sub	sp, #8
 8001e78:	af00      	add	r7, sp, #0
 8001e7a:	6078      	str	r0, [r7, #4]
 8001e7c:	6039      	str	r1, [r7, #0]
 8001e7e:	f020 fcfd 	bl	802287c <__errno>
 8001e82:	4603      	mov	r3, r0
 8001e84:	2216      	movs	r2, #22
 8001e86:	601a      	str	r2, [r3, #0]
 8001e88:	f04f 33ff 	mov.w	r3, #4294967295
 8001e8c:	4618      	mov	r0, r3
 8001e8e:	3708      	adds	r7, #8
 8001e90:	46bd      	mov	sp, r7
 8001e92:	bd80      	pop	{r7, pc}

08001e94 <_exit>:
 8001e94:	b580      	push	{r7, lr}
 8001e96:	b082      	sub	sp, #8
 8001e98:	af00      	add	r7, sp, #0
 8001e9a:	6078      	str	r0, [r7, #4]
 8001e9c:	f04f 31ff 	mov.w	r1, #4294967295
 8001ea0:	6878      	ldr	r0, [r7, #4]
 8001ea2:	f7ff ffe7 	bl	8001e74 <_kill>
 8001ea6:	bf00      	nop
 8001ea8:	e7fd      	b.n	8001ea6 <_exit+0x12>

08001eaa <_read>:
 8001eaa:	b580      	push	{r7, lr}
 8001eac:	b086      	sub	sp, #24
 8001eae:	af00      	add	r7, sp, #0
 8001eb0:	60f8      	str	r0, [r7, #12]
 8001eb2:	60b9      	str	r1, [r7, #8]
 8001eb4:	607a      	str	r2, [r7, #4]
 8001eb6:	2300      	movs	r3, #0
 8001eb8:	617b      	str	r3, [r7, #20]
 8001eba:	e00a      	b.n	8001ed2 <_read+0x28>
 8001ebc:	f3af 8000 	nop.w
 8001ec0:	4601      	mov	r1, r0
 8001ec2:	68bb      	ldr	r3, [r7, #8]
 8001ec4:	1c5a      	adds	r2, r3, #1
 8001ec6:	60ba      	str	r2, [r7, #8]
 8001ec8:	b2ca      	uxtb	r2, r1
 8001eca:	701a      	strb	r2, [r3, #0]
 8001ecc:	697b      	ldr	r3, [r7, #20]
 8001ece:	3301      	adds	r3, #1
 8001ed0:	617b      	str	r3, [r7, #20]
 8001ed2:	697a      	ldr	r2, [r7, #20]
 8001ed4:	687b      	ldr	r3, [r7, #4]
 8001ed6:	429a      	cmp	r2, r3
 8001ed8:	dbf0      	blt.n	8001ebc <_read+0x12>
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	4618      	mov	r0, r3
 8001ede:	3718      	adds	r7, #24
 8001ee0:	46bd      	mov	sp, r7
 8001ee2:	bd80      	pop	{r7, pc}

08001ee4 <_write>:
 8001ee4:	b580      	push	{r7, lr}
 8001ee6:	b086      	sub	sp, #24
 8001ee8:	af00      	add	r7, sp, #0
 8001eea:	60f8      	str	r0, [r7, #12]
 8001eec:	60b9      	str	r1, [r7, #8]
 8001eee:	607a      	str	r2, [r7, #4]
 8001ef0:	2300      	movs	r3, #0
 8001ef2:	617b      	str	r3, [r7, #20]
 8001ef4:	e009      	b.n	8001f0a <_write+0x26>
 8001ef6:	68bb      	ldr	r3, [r7, #8]
 8001ef8:	1c5a      	adds	r2, r3, #1
 8001efa:	60ba      	str	r2, [r7, #8]
 8001efc:	781b      	ldrb	r3, [r3, #0]
 8001efe:	4618      	mov	r0, r3
 8001f00:	f3af 8000 	nop.w
 8001f04:	697b      	ldr	r3, [r7, #20]
 8001f06:	3301      	adds	r3, #1
 8001f08:	617b      	str	r3, [r7, #20]
 8001f0a:	697a      	ldr	r2, [r7, #20]
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	429a      	cmp	r2, r3
 8001f10:	dbf1      	blt.n	8001ef6 <_write+0x12>
 8001f12:	687b      	ldr	r3, [r7, #4]
 8001f14:	4618      	mov	r0, r3
 8001f16:	3718      	adds	r7, #24
 8001f18:	46bd      	mov	sp, r7
 8001f1a:	bd80      	pop	{r7, pc}

08001f1c <_close>:
 8001f1c:	b480      	push	{r7}
 8001f1e:	b083      	sub	sp, #12
 8001f20:	af00      	add	r7, sp, #0
 8001f22:	6078      	str	r0, [r7, #4]
 8001f24:	f04f 33ff 	mov.w	r3, #4294967295
 8001f28:	4618      	mov	r0, r3
 8001f2a:	370c      	adds	r7, #12
 8001f2c:	46bd      	mov	sp, r7
 8001f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f32:	4770      	bx	lr

08001f34 <_fstat>:
 8001f34:	b480      	push	{r7}
 8001f36:	b083      	sub	sp, #12
 8001f38:	af00      	add	r7, sp, #0
 8001f3a:	6078      	str	r0, [r7, #4]
 8001f3c:	6039      	str	r1, [r7, #0]
 8001f3e:	683b      	ldr	r3, [r7, #0]
 8001f40:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f44:	605a      	str	r2, [r3, #4]
 8001f46:	2300      	movs	r3, #0
 8001f48:	4618      	mov	r0, r3
 8001f4a:	370c      	adds	r7, #12
 8001f4c:	46bd      	mov	sp, r7
 8001f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f52:	4770      	bx	lr

08001f54 <_isatty>:
 8001f54:	b480      	push	{r7}
 8001f56:	b083      	sub	sp, #12
 8001f58:	af00      	add	r7, sp, #0
 8001f5a:	6078      	str	r0, [r7, #4]
 8001f5c:	2301      	movs	r3, #1
 8001f5e:	4618      	mov	r0, r3
 8001f60:	370c      	adds	r7, #12
 8001f62:	46bd      	mov	sp, r7
 8001f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f68:	4770      	bx	lr

08001f6a <_lseek>:
 8001f6a:	b480      	push	{r7}
 8001f6c:	b085      	sub	sp, #20
 8001f6e:	af00      	add	r7, sp, #0
 8001f70:	60f8      	str	r0, [r7, #12]
 8001f72:	60b9      	str	r1, [r7, #8]
 8001f74:	607a      	str	r2, [r7, #4]
 8001f76:	2300      	movs	r3, #0
 8001f78:	4618      	mov	r0, r3
 8001f7a:	3714      	adds	r7, #20
 8001f7c:	46bd      	mov	sp, r7
 8001f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f82:	4770      	bx	lr

08001f84 <_sbrk>:
 8001f84:	b580      	push	{r7, lr}
 8001f86:	b086      	sub	sp, #24
 8001f88:	af00      	add	r7, sp, #0
 8001f8a:	6078      	str	r0, [r7, #4]
 8001f8c:	4a14      	ldr	r2, [pc, #80]	@ (8001fe0 <_sbrk+0x5c>)
 8001f8e:	4b15      	ldr	r3, [pc, #84]	@ (8001fe4 <_sbrk+0x60>)
 8001f90:	1ad3      	subs	r3, r2, r3
 8001f92:	617b      	str	r3, [r7, #20]
 8001f94:	697b      	ldr	r3, [r7, #20]
 8001f96:	613b      	str	r3, [r7, #16]
 8001f98:	4b13      	ldr	r3, [pc, #76]	@ (8001fe8 <_sbrk+0x64>)
 8001f9a:	681b      	ldr	r3, [r3, #0]
 8001f9c:	2b00      	cmp	r3, #0
 8001f9e:	d102      	bne.n	8001fa6 <_sbrk+0x22>
 8001fa0:	4b11      	ldr	r3, [pc, #68]	@ (8001fe8 <_sbrk+0x64>)
 8001fa2:	4a12      	ldr	r2, [pc, #72]	@ (8001fec <_sbrk+0x68>)
 8001fa4:	601a      	str	r2, [r3, #0]
 8001fa6:	4b10      	ldr	r3, [pc, #64]	@ (8001fe8 <_sbrk+0x64>)
 8001fa8:	681a      	ldr	r2, [r3, #0]
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	4413      	add	r3, r2
 8001fae:	693a      	ldr	r2, [r7, #16]
 8001fb0:	429a      	cmp	r2, r3
 8001fb2:	d207      	bcs.n	8001fc4 <_sbrk+0x40>
 8001fb4:	f020 fc62 	bl	802287c <__errno>
 8001fb8:	4603      	mov	r3, r0
 8001fba:	220c      	movs	r2, #12
 8001fbc:	601a      	str	r2, [r3, #0]
 8001fbe:	f04f 33ff 	mov.w	r3, #4294967295
 8001fc2:	e009      	b.n	8001fd8 <_sbrk+0x54>
 8001fc4:	4b08      	ldr	r3, [pc, #32]	@ (8001fe8 <_sbrk+0x64>)
 8001fc6:	681b      	ldr	r3, [r3, #0]
 8001fc8:	60fb      	str	r3, [r7, #12]
 8001fca:	4b07      	ldr	r3, [pc, #28]	@ (8001fe8 <_sbrk+0x64>)
 8001fcc:	681a      	ldr	r2, [r3, #0]
 8001fce:	687b      	ldr	r3, [r7, #4]
 8001fd0:	4413      	add	r3, r2
 8001fd2:	4a05      	ldr	r2, [pc, #20]	@ (8001fe8 <_sbrk+0x64>)
 8001fd4:	6013      	str	r3, [r2, #0]
 8001fd6:	68fb      	ldr	r3, [r7, #12]
 8001fd8:	4618      	mov	r0, r3
 8001fda:	3718      	adds	r7, #24
 8001fdc:	46bd      	mov	sp, r7
 8001fde:	bd80      	pop	{r7, pc}
 8001fe0:	20020000 	.word	0x20020000
 8001fe4:	00000400 	.word	0x00000400
 8001fe8:	200005e4 	.word	0x200005e4
 8001fec:	20003af8 	.word	0x20003af8

08001ff0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001ff0:	b480      	push	{r7}
 8001ff2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001ff4:	4b06      	ldr	r3, [pc, #24]	@ (8002010 <SystemInit+0x20>)
 8001ff6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001ffa:	4a05      	ldr	r2, [pc, #20]	@ (8002010 <SystemInit+0x20>)
 8001ffc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002000:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002004:	bf00      	nop
 8002006:	46bd      	mov	sp, r7
 8002008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800200c:	4770      	bx	lr
 800200e:	bf00      	nop
 8002010:	e000ed00 	.word	0xe000ed00

08002014 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8002014:	b580      	push	{r7, lr}
 8002016:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8002018:	2180      	movs	r1, #128	@ 0x80
 800201a:	4810      	ldr	r0, [pc, #64]	@ (800205c <Displ_Select+0x48>)
 800201c:	f002 f93c 	bl	8004298 <HAL_GPIO_ReadPin>
 8002020:	4603      	mov	r3, r0
 8002022:	2b00      	cmp	r3, #0
 8002024:	d017      	beq.n	8002056 <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 8002026:	2201      	movs	r2, #1
 8002028:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800202c:	480c      	ldr	r0, [pc, #48]	@ (8002060 <Displ_Select+0x4c>)
 800202e:	f002 f94b 	bl	80042c8 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 8002032:	4b0c      	ldr	r3, [pc, #48]	@ (8002064 <Displ_Select+0x50>)
 8002034:	681a      	ldr	r2, [r3, #0]
 8002036:	490b      	ldr	r1, [pc, #44]	@ (8002064 <Displ_Select+0x50>)
 8002038:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 800203c:	4013      	ands	r3, r2
 800203e:	600b      	str	r3, [r1, #0]
 8002040:	4b08      	ldr	r3, [pc, #32]	@ (8002064 <Displ_Select+0x50>)
 8002042:	681b      	ldr	r3, [r3, #0]
 8002044:	4a07      	ldr	r2, [pc, #28]	@ (8002064 <Displ_Select+0x50>)
 8002046:	f043 0308 	orr.w	r3, r3, #8
 800204a:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 800204c:	2200      	movs	r2, #0
 800204e:	2180      	movs	r1, #128	@ 0x80
 8002050:	4802      	ldr	r0, [pc, #8]	@ (800205c <Displ_Select+0x48>)
 8002052:	f002 f939 	bl	80042c8 <HAL_GPIO_WritePin>
		}
	}
}
 8002056:	bf00      	nop
 8002058:	bd80      	pop	{r7, pc}
 800205a:	bf00      	nop
 800205c:	40020800 	.word	0x40020800
 8002060:	40020000 	.word	0x40020000
 8002064:	40003800 	.word	0x40003800

08002068 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8002068:	b580      	push	{r7, lr}
 800206a:	b086      	sub	sp, #24
 800206c:	af00      	add	r7, sp, #0
 800206e:	6039      	str	r1, [r7, #0]
 8002070:	4611      	mov	r1, r2
 8002072:	461a      	mov	r2, r3
 8002074:	4603      	mov	r3, r0
 8002076:	71fb      	strb	r3, [r7, #7]
 8002078:	460b      	mov	r3, r1
 800207a:	80bb      	strh	r3, [r7, #4]
 800207c:	4613      	mov	r3, r2
 800207e:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8002080:	bf00      	nop
 8002082:	4b25      	ldr	r3, [pc, #148]	@ (8002118 <Displ_Transmit+0xb0>)
 8002084:	781b      	ldrb	r3, [r3, #0]
 8002086:	b2db      	uxtb	r3, r3
 8002088:	2b00      	cmp	r3, #0
 800208a:	d0fa      	beq.n	8002082 <Displ_Transmit+0x1a>

	Displ_Select();
 800208c:	f7ff ffc2 	bl	8002014 <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8002090:	79fb      	ldrb	r3, [r7, #7]
 8002092:	461a      	mov	r2, r3
 8002094:	2180      	movs	r1, #128	@ 0x80
 8002096:	4821      	ldr	r0, [pc, #132]	@ (800211c <Displ_Transmit+0xb4>)
 8002098:	f002 f916 	bl	80042c8 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 800209c:	79bb      	ldrb	r3, [r7, #6]
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d016      	beq.n	80020d0 <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 80020a2:	88bb      	ldrh	r3, [r7, #4]
 80020a4:	683a      	ldr	r2, [r7, #0]
 80020a6:	4413      	add	r3, r2
 80020a8:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020aa:	683b      	ldr	r3, [r7, #0]
 80020ac:	617b      	str	r3, [r7, #20]
 80020ae:	e00b      	b.n	80020c8 <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 80020b0:	697b      	ldr	r3, [r7, #20]
 80020b2:	681b      	ldr	r3, [r3, #0]
 80020b4:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 80020b6:	68fb      	ldr	r3, [r7, #12]
 80020b8:	ba5b      	rev16	r3, r3
 80020ba:	60bb      	str	r3, [r7, #8]
  return result;
 80020bc:	68ba      	ldr	r2, [r7, #8]
 80020be:	697b      	ldr	r3, [r7, #20]
 80020c0:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020c2:	697b      	ldr	r3, [r7, #20]
 80020c4:	3304      	adds	r3, #4
 80020c6:	617b      	str	r3, [r7, #20]
 80020c8:	697a      	ldr	r2, [r7, #20]
 80020ca:	693b      	ldr	r3, [r7, #16]
 80020cc:	429a      	cmp	r2, r3
 80020ce:	d3ef      	bcc.n	80020b0 <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 80020d0:	88bb      	ldrh	r3, [r7, #4]
 80020d2:	2b13      	cmp	r3, #19
 80020d4:	d812      	bhi.n	80020fc <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 80020d6:	4b10      	ldr	r3, [pc, #64]	@ (8002118 <Displ_Transmit+0xb0>)
 80020d8:	2200      	movs	r2, #0
 80020da:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 80020dc:	88ba      	ldrh	r2, [r7, #4]
 80020de:	f04f 33ff 	mov.w	r3, #4294967295
 80020e2:	6839      	ldr	r1, [r7, #0]
 80020e4:	480e      	ldr	r0, [pc, #56]	@ (8002120 <Displ_Transmit+0xb8>)
 80020e6:	f003 ffe2 	bl	80060ae <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 80020ea:	4b0b      	ldr	r3, [pc, #44]	@ (8002118 <Displ_Transmit+0xb0>)
 80020ec:	2201      	movs	r2, #1
 80020ee:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 80020f0:	79bb      	ldrb	r3, [r7, #6]
 80020f2:	2b00      	cmp	r3, #0
 80020f4:	d00b      	beq.n	800210e <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 80020f6:	f00a fc47 	bl	800c988 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 80020fa:	e008      	b.n	800210e <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 80020fc:	4b06      	ldr	r3, [pc, #24]	@ (8002118 <Displ_Transmit+0xb0>)
 80020fe:	2200      	movs	r2, #0
 8002100:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 8002102:	88bb      	ldrh	r3, [r7, #4]
 8002104:	461a      	mov	r2, r3
 8002106:	6839      	ldr	r1, [r7, #0]
 8002108:	4805      	ldr	r0, [pc, #20]	@ (8002120 <Displ_Transmit+0xb8>)
 800210a:	f004 fbd7 	bl	80068bc <HAL_SPI_Transmit_DMA>
	}
 800210e:	bf00      	nop
 8002110:	3718      	adds	r7, #24
 8002112:	46bd      	mov	sp, r7
 8002114:	bd80      	pop	{r7, pc}
 8002116:	bf00      	nop
 8002118:	2000000c 	.word	0x2000000c
 800211c:	40020000 	.word	0x40020000
 8002120:	20000440 	.word	0x20000440

08002124 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 8002124:	b580      	push	{r7, lr}
 8002126:	b082      	sub	sp, #8
 8002128:	af00      	add	r7, sp, #0
 800212a:	4603      	mov	r3, r0
 800212c:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 800212e:	1df9      	adds	r1, r7, #7
 8002130:	2300      	movs	r3, #0
 8002132:	2201      	movs	r2, #1
 8002134:	2000      	movs	r0, #0
 8002136:	f7ff ff97 	bl	8002068 <Displ_Transmit>
}
 800213a:	bf00      	nop
 800213c:	3708      	adds	r7, #8
 800213e:	46bd      	mov	sp, r7
 8002140:	bd80      	pop	{r7, pc}

08002142 <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 8002142:	b580      	push	{r7, lr}
 8002144:	b084      	sub	sp, #16
 8002146:	af00      	add	r7, sp, #0
 8002148:	60f8      	str	r0, [r7, #12]
 800214a:	60b9      	str	r1, [r7, #8]
 800214c:	4613      	mov	r3, r2
 800214e:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 8002150:	68bb      	ldr	r3, [r7, #8]
 8002152:	2b00      	cmp	r3, #0
 8002154:	d007      	beq.n	8002166 <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 8002156:	68bb      	ldr	r3, [r7, #8]
 8002158:	b29a      	uxth	r2, r3
 800215a:	79fb      	ldrb	r3, [r7, #7]
 800215c:	68f9      	ldr	r1, [r7, #12]
 800215e:	2001      	movs	r0, #1
 8002160:	f7ff ff82 	bl	8002068 <Displ_Transmit>
 8002164:	e000      	b.n	8002168 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 8002166:	bf00      	nop
}
 8002168:	3710      	adds	r7, #16
 800216a:	46bd      	mov	sp, r7
 800216c:	bd80      	pop	{r7, pc}
	...

08002170 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8002170:	b580      	push	{r7, lr}
 8002172:	af00      	add	r7, sp, #0
	Displ_Select();
 8002174:	f7ff ff4e 	bl	8002014 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8002178:	2200      	movs	r2, #0
 800217a:	2140      	movs	r1, #64	@ 0x40
 800217c:	4819      	ldr	r0, [pc, #100]	@ (80021e4 <ILI9XXX_Init+0x74>)
 800217e:	f002 f8a3 	bl	80042c8 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8002182:	2001      	movs	r0, #1
 8002184:	f000 fc6c 	bl	8002a60 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 8002188:	2201      	movs	r2, #1
 800218a:	2140      	movs	r1, #64	@ 0x40
 800218c:	4815      	ldr	r0, [pc, #84]	@ (80021e4 <ILI9XXX_Init+0x74>)
 800218e:	f002 f89b 	bl	80042c8 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 8002192:	2096      	movs	r0, #150	@ 0x96
 8002194:	f000 fc64 	bl	8002a60 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8002198:	203a      	movs	r0, #58	@ 0x3a
 800219a:	f7ff ffc3 	bl	8002124 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 800219e:	2200      	movs	r2, #0
 80021a0:	2101      	movs	r1, #1
 80021a2:	4811      	ldr	r0, [pc, #68]	@ (80021e8 <ILI9XXX_Init+0x78>)
 80021a4:	f7ff ffcd 	bl	8002142 <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021a8:	20b0      	movs	r0, #176	@ 0xb0
 80021aa:	f7ff ffbb 	bl	8002124 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021ae:	2200      	movs	r2, #0
 80021b0:	2101      	movs	r1, #1
 80021b2:	480e      	ldr	r0, [pc, #56]	@ (80021ec <ILI9XXX_Init+0x7c>)
 80021b4:	f7ff ffc5 	bl	8002142 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021b8:	20b0      	movs	r0, #176	@ 0xb0
 80021ba:	f7ff ffb3 	bl	8002124 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021be:	2200      	movs	r2, #0
 80021c0:	2101      	movs	r1, #1
 80021c2:	480a      	ldr	r0, [pc, #40]	@ (80021ec <ILI9XXX_Init+0x7c>)
 80021c4:	f7ff ffbd 	bl	8002142 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 80021c8:	2011      	movs	r0, #17
 80021ca:	f7ff ffab 	bl	8002124 <Displ_WriteCommand>
	HAL_Delay(120);
 80021ce:	2078      	movs	r0, #120	@ 0x78
 80021d0:	f000 fc46 	bl	8002a60 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 80021d4:	2029      	movs	r0, #41	@ 0x29
 80021d6:	f7ff ffa5 	bl	8002124 <Displ_WriteCommand>
	HAL_Delay(5);
 80021da:	2005      	movs	r0, #5
 80021dc:	f000 fc40 	bl	8002a60 <HAL_Delay>

}
 80021e0:	bf00      	nop
 80021e2:	bd80      	pop	{r7, pc}
 80021e4:	40020400 	.word	0x40020400
 80021e8:	08023380 	.word	0x08023380
 80021ec:	08023384 	.word	0x08023384

080021f0 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 80021f0:	b590      	push	{r4, r7, lr}
 80021f2:	b083      	sub	sp, #12
 80021f4:	af00      	add	r7, sp, #0
 80021f6:	4604      	mov	r4, r0
 80021f8:	4608      	mov	r0, r1
 80021fa:	4611      	mov	r1, r2
 80021fc:	461a      	mov	r2, r3
 80021fe:	4623      	mov	r3, r4
 8002200:	80fb      	strh	r3, [r7, #6]
 8002202:	4603      	mov	r3, r0
 8002204:	80bb      	strh	r3, [r7, #4]
 8002206:	460b      	mov	r3, r1
 8002208:	807b      	strh	r3, [r7, #2]
 800220a:	4613      	mov	r3, r2
 800220c:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 800220e:	887b      	ldrh	r3, [r7, #2]
 8002210:	061a      	lsls	r2, r3, #24
 8002212:	887b      	ldrh	r3, [r7, #2]
 8002214:	021b      	lsls	r3, r3, #8
 8002216:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 800221a:	431a      	orrs	r2, r3
 800221c:	88fb      	ldrh	r3, [r7, #6]
 800221e:	021b      	lsls	r3, r3, #8
 8002220:	b29b      	uxth	r3, r3
 8002222:	4313      	orrs	r3, r2
 8002224:	88fa      	ldrh	r2, [r7, #6]
 8002226:	0a12      	lsrs	r2, r2, #8
 8002228:	b292      	uxth	r2, r2
 800222a:	431a      	orrs	r2, r3
 800222c:	4b14      	ldr	r3, [pc, #80]	@ (8002280 <Displ_SetAddressWindow+0x90>)
 800222e:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 8002230:	202a      	movs	r0, #42	@ 0x2a
 8002232:	f7ff ff77 	bl	8002124 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002236:	2200      	movs	r2, #0
 8002238:	2104      	movs	r1, #4
 800223a:	4811      	ldr	r0, [pc, #68]	@ (8002280 <Displ_SetAddressWindow+0x90>)
 800223c:	f7ff ff81 	bl	8002142 <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 8002240:	883b      	ldrh	r3, [r7, #0]
 8002242:	061a      	lsls	r2, r3, #24
 8002244:	883b      	ldrh	r3, [r7, #0]
 8002246:	021b      	lsls	r3, r3, #8
 8002248:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 800224c:	431a      	orrs	r2, r3
 800224e:	88bb      	ldrh	r3, [r7, #4]
 8002250:	021b      	lsls	r3, r3, #8
 8002252:	b29b      	uxth	r3, r3
 8002254:	4313      	orrs	r3, r2
 8002256:	88ba      	ldrh	r2, [r7, #4]
 8002258:	0a12      	lsrs	r2, r2, #8
 800225a:	b292      	uxth	r2, r2
 800225c:	431a      	orrs	r2, r3
 800225e:	4b08      	ldr	r3, [pc, #32]	@ (8002280 <Displ_SetAddressWindow+0x90>)
 8002260:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 8002262:	202b      	movs	r0, #43	@ 0x2b
 8002264:	f7ff ff5e 	bl	8002124 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002268:	2200      	movs	r2, #0
 800226a:	2104      	movs	r1, #4
 800226c:	4804      	ldr	r0, [pc, #16]	@ (8002280 <Displ_SetAddressWindow+0x90>)
 800226e:	f7ff ff68 	bl	8002142 <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 8002272:	202c      	movs	r0, #44	@ 0x2c
 8002274:	f7ff ff56 	bl	8002124 <Displ_WriteCommand>
}
 8002278:	bf00      	nop
 800227a:	370c      	adds	r7, #12
 800227c:	46bd      	mov	sp, r7
 800227e:	bd90      	pop	{r4, r7, pc}
 8002280:	200005f0 	.word	0x200005f0

08002284 <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 8002284:	b580      	push	{r7, lr}
 8002286:	b082      	sub	sp, #8
 8002288:	af00      	add	r7, sp, #0
 800228a:	4603      	mov	r3, r0
 800228c:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 800228e:	2201      	movs	r2, #1
 8002290:	2180      	movs	r1, #128	@ 0x80
 8002292:	4809      	ldr	r0, [pc, #36]	@ (80022b8 <Displ_Init+0x34>)
 8002294:	f002 f818 	bl	80042c8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 8002298:	2201      	movs	r2, #1
 800229a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800229e:	4807      	ldr	r0, [pc, #28]	@ (80022bc <Displ_Init+0x38>)
 80022a0:	f002 f812 	bl	80042c8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 80022a4:	f7ff ff64 	bl	8002170 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 80022a8:	79fb      	ldrb	r3, [r7, #7]
 80022aa:	4618      	mov	r0, r3
 80022ac:	f000 f808 	bl	80022c0 <Displ_Orientation>
}
 80022b0:	bf00      	nop
 80022b2:	3708      	adds	r7, #8
 80022b4:	46bd      	mov	sp, r7
 80022b6:	bd80      	pop	{r7, pc}
 80022b8:	40020800 	.word	0x40020800
 80022bc:	40020000 	.word	0x40020000

080022c0 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 80022c0:	b580      	push	{r7, lr}
 80022c2:	b082      	sub	sp, #8
 80022c4:	af00      	add	r7, sp, #0
 80022c6:	4603      	mov	r3, r0
 80022c8:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 80022ca:	79fb      	ldrb	r3, [r7, #7]
 80022cc:	2b03      	cmp	r3, #3
 80022ce:	d83b      	bhi.n	8002348 <Displ_Orientation+0x88>
 80022d0:	a201      	add	r2, pc, #4	@ (adr r2, 80022d8 <Displ_Orientation+0x18>)
 80022d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80022d6:	bf00      	nop
 80022d8:	080022e9 	.word	0x080022e9
 80022dc:	08002301 	.word	0x08002301
 80022e0:	08002319 	.word	0x08002319
 80022e4:	08002331 	.word	0x08002331
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 80022e8:	4b1f      	ldr	r3, [pc, #124]	@ (8002368 <Displ_Orientation+0xa8>)
 80022ea:	2288      	movs	r2, #136	@ 0x88
 80022ec:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80022ee:	4b1f      	ldr	r3, [pc, #124]	@ (800236c <Displ_Orientation+0xac>)
 80022f0:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80022f4:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80022f6:	4b1e      	ldr	r3, [pc, #120]	@ (8002370 <Displ_Orientation+0xb0>)
 80022f8:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80022fc:	801a      	strh	r2, [r3, #0]
			break;
 80022fe:	e023      	b.n	8002348 <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 8002300:	4b19      	ldr	r3, [pc, #100]	@ (8002368 <Displ_Orientation+0xa8>)
 8002302:	22e8      	movs	r2, #232	@ 0xe8
 8002304:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8002306:	4b19      	ldr	r3, [pc, #100]	@ (800236c <Displ_Orientation+0xac>)
 8002308:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 800230c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 800230e:	4b18      	ldr	r3, [pc, #96]	@ (8002370 <Displ_Orientation+0xb0>)
 8002310:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002314:	801a      	strh	r2, [r3, #0]
			break;
 8002316:	e017      	b.n	8002348 <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 8002318:	4b13      	ldr	r3, [pc, #76]	@ (8002368 <Displ_Orientation+0xa8>)
 800231a:	2248      	movs	r2, #72	@ 0x48
 800231c:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 800231e:	4b13      	ldr	r3, [pc, #76]	@ (800236c <Displ_Orientation+0xac>)
 8002320:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002324:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8002326:	4b12      	ldr	r3, [pc, #72]	@ (8002370 <Displ_Orientation+0xb0>)
 8002328:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 800232c:	801a      	strh	r2, [r3, #0]
			break;
 800232e:	e00b      	b.n	8002348 <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 8002330:	4b0d      	ldr	r3, [pc, #52]	@ (8002368 <Displ_Orientation+0xa8>)
 8002332:	2228      	movs	r2, #40	@ 0x28
 8002334:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8002336:	4b0d      	ldr	r3, [pc, #52]	@ (800236c <Displ_Orientation+0xac>)
 8002338:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 800233c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 800233e:	4b0c      	ldr	r3, [pc, #48]	@ (8002370 <Displ_Orientation+0xb0>)
 8002340:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002344:	801a      	strh	r2, [r3, #0]
			break;
 8002346:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 8002348:	2036      	movs	r0, #54	@ 0x36
 800234a:	f7ff feeb 	bl	8002124 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 800234e:	2200      	movs	r2, #0
 8002350:	2101      	movs	r1, #1
 8002352:	4805      	ldr	r0, [pc, #20]	@ (8002368 <Displ_Orientation+0xa8>)
 8002354:	f7ff fef5 	bl	8002142 <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 8002358:	4a06      	ldr	r2, [pc, #24]	@ (8002374 <Displ_Orientation+0xb4>)
 800235a:	79fb      	ldrb	r3, [r7, #7]
 800235c:	7013      	strb	r3, [r2, #0]
}
 800235e:	bf00      	nop
 8002360:	3708      	adds	r7, #8
 8002362:	46bd      	mov	sp, r7
 8002364:	bd80      	pop	{r7, pc}
 8002366:	bf00      	nop
 8002368:	200005f4 	.word	0x200005f4
 800236c:	200005ec 	.word	0x200005ec
 8002370:	200005ea 	.word	0x200005ea
 8002374:	200005e8 	.word	0x200005e8

08002378 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8002378:	b480      	push	{r7}
 800237a:	b083      	sub	sp, #12
 800237c:	af00      	add	r7, sp, #0
 800237e:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8002380:	687b      	ldr	r3, [r7, #4]
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	4a05      	ldr	r2, [pc, #20]	@ (800239c <HAL_SPI_ErrorCallback+0x24>)
 8002386:	4293      	cmp	r3, r2
 8002388:	d102      	bne.n	8002390 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 800238a:	4b05      	ldr	r3, [pc, #20]	@ (80023a0 <HAL_SPI_ErrorCallback+0x28>)
 800238c:	2201      	movs	r2, #1
 800238e:	701a      	strb	r2, [r3, #0]
	}
}
 8002390:	bf00      	nop
 8002392:	370c      	adds	r7, #12
 8002394:	46bd      	mov	sp, r7
 8002396:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239a:	4770      	bx	lr
 800239c:	40003800 	.word	0x40003800
 80023a0:	2000000c 	.word	0x2000000c

080023a4 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 80023a4:	b580      	push	{r7, lr}
 80023a6:	b082      	sub	sp, #8
 80023a8:	af00      	add	r7, sp, #0
 80023aa:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	681b      	ldr	r3, [r3, #0]
 80023b0:	4a05      	ldr	r2, [pc, #20]	@ (80023c8 <HAL_SPI_TxCpltCallback+0x24>)
 80023b2:	4293      	cmp	r3, r2
 80023b4:	d104      	bne.n	80023c0 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 80023b6:	4b05      	ldr	r3, [pc, #20]	@ (80023cc <HAL_SPI_TxCpltCallback+0x28>)
 80023b8:	2201      	movs	r2, #1
 80023ba:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 80023bc:	f00a fae4 	bl	800c988 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 80023c0:	bf00      	nop
 80023c2:	3708      	adds	r7, #8
 80023c4:	46bd      	mov	sp, r7
 80023c6:	bd80      	pop	{r7, pc}
 80023c8:	40003800 	.word	0x40003800
 80023cc:	2000000c 	.word	0x2000000c

080023d0 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 80023d0:	b580      	push	{r7, lr}
 80023d2:	b082      	sub	sp, #8
 80023d4:	af00      	add	r7, sp, #0
 80023d6:	4603      	mov	r3, r0
 80023d8:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 80023da:	79fb      	ldrb	r3, [r7, #7]
 80023dc:	2b51      	cmp	r3, #81	@ 0x51
 80023de:	d00a      	beq.n	80023f6 <Displ_BackLight+0x26>
 80023e0:	2b51      	cmp	r3, #81	@ 0x51
 80023e2:	dc16      	bgt.n	8002412 <Displ_BackLight+0x42>
 80023e4:	2b46      	cmp	r3, #70	@ 0x46
 80023e6:	d008      	beq.n	80023fa <Displ_BackLight+0x2a>
 80023e8:	2b46      	cmp	r3, #70	@ 0x46
 80023ea:	dc12      	bgt.n	8002412 <Displ_BackLight+0x42>
 80023ec:	2b30      	cmp	r3, #48	@ 0x30
 80023ee:	d00a      	beq.n	8002406 <Displ_BackLight+0x36>
 80023f0:	2b31      	cmp	r3, #49	@ 0x31
 80023f2:	d002      	beq.n	80023fa <Displ_BackLight+0x2a>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	default:
		break;
 80023f4:	e00d      	b.n	8002412 <Displ_BackLight+0x42>
		__NOP();
 80023f6:	bf00      	nop
		break;
 80023f8:	e00c      	b.n	8002414 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 80023fa:	2201      	movs	r2, #1
 80023fc:	2140      	movs	r1, #64	@ 0x40
 80023fe:	480a      	ldr	r0, [pc, #40]	@ (8002428 <Displ_BackLight+0x58>)
 8002400:	f001 ff62 	bl	80042c8 <HAL_GPIO_WritePin>
		break;
 8002404:	e006      	b.n	8002414 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 8002406:	2200      	movs	r2, #0
 8002408:	2140      	movs	r1, #64	@ 0x40
 800240a:	4807      	ldr	r0, [pc, #28]	@ (8002428 <Displ_BackLight+0x58>)
 800240c:	f001 ff5c 	bl	80042c8 <HAL_GPIO_WritePin>
		break;
 8002410:	e000      	b.n	8002414 <Displ_BackLight+0x44>
		break;
 8002412:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 8002414:	2140      	movs	r1, #64	@ 0x40
 8002416:	4804      	ldr	r0, [pc, #16]	@ (8002428 <Displ_BackLight+0x58>)
 8002418:	f001 ff3e 	bl	8004298 <HAL_GPIO_ReadPin>
 800241c:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 800241e:	4618      	mov	r0, r3
 8002420:	3708      	adds	r7, #8
 8002422:	46bd      	mov	sp, r7
 8002424:	bd80      	pop	{r7, pc}
 8002426:	bf00      	nop
 8002428:	40020000 	.word	0x40020000

0800242c <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 800242c:	b480      	push	{r7}
 800242e:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 8002430:	4b06      	ldr	r3, [pc, #24]	@ (800244c <touchgfxDisplayDriverTransmitActive+0x20>)
 8002432:	781b      	ldrb	r3, [r3, #0]
 8002434:	b2db      	uxtb	r3, r3
 8002436:	2b00      	cmp	r3, #0
 8002438:	bf0c      	ite	eq
 800243a:	2301      	moveq	r3, #1
 800243c:	2300      	movne	r3, #0
 800243e:	b2db      	uxtb	r3, r3
}
 8002440:	4618      	mov	r0, r3
 8002442:	46bd      	mov	sp, r7
 8002444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002448:	4770      	bx	lr
 800244a:	bf00      	nop
 800244c:	2000000c 	.word	0x2000000c

08002450 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 8002450:	b590      	push	{r4, r7, lr}
 8002452:	b085      	sub	sp, #20
 8002454:	af00      	add	r7, sp, #0
 8002456:	60f8      	str	r0, [r7, #12]
 8002458:	4608      	mov	r0, r1
 800245a:	4611      	mov	r1, r2
 800245c:	461a      	mov	r2, r3
 800245e:	4603      	mov	r3, r0
 8002460:	817b      	strh	r3, [r7, #10]
 8002462:	460b      	mov	r3, r1
 8002464:	813b      	strh	r3, [r7, #8]
 8002466:	4613      	mov	r3, r2
 8002468:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 800246a:	897a      	ldrh	r2, [r7, #10]
 800246c:	88fb      	ldrh	r3, [r7, #6]
 800246e:	4413      	add	r3, r2
 8002470:	b29b      	uxth	r3, r3
 8002472:	3b01      	subs	r3, #1
 8002474:	b29c      	uxth	r4, r3
 8002476:	893a      	ldrh	r2, [r7, #8]
 8002478:	8c3b      	ldrh	r3, [r7, #32]
 800247a:	4413      	add	r3, r2
 800247c:	b29b      	uxth	r3, r3
 800247e:	3b01      	subs	r3, #1
 8002480:	b29b      	uxth	r3, r3
 8002482:	8939      	ldrh	r1, [r7, #8]
 8002484:	8978      	ldrh	r0, [r7, #10]
 8002486:	4622      	mov	r2, r4
 8002488:	f7ff feb2 	bl	80021f0 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 800248c:	88fb      	ldrh	r3, [r7, #6]
 800248e:	8c3a      	ldrh	r2, [r7, #32]
 8002490:	fb02 f303 	mul.w	r3, r2, r3
 8002494:	005b      	lsls	r3, r3, #1
 8002496:	2201      	movs	r2, #1
 8002498:	4619      	mov	r1, r3
 800249a:	68f8      	ldr	r0, [r7, #12]
 800249c:	f7ff fe51 	bl	8002142 <Displ_WriteData>
}
 80024a0:	bf00      	nop
 80024a2:	3714      	adds	r7, #20
 80024a4:	46bd      	mov	sp, r7
 80024a6:	bd90      	pop	{r4, r7, pc}

080024a8 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 80024a8:	b480      	push	{r7}
 80024aa:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 80024ac:	4b06      	ldr	r3, [pc, #24]	@ (80024c8 <Touch_HandlePenDownInterrupt+0x20>)
 80024ae:	781b      	ldrb	r3, [r3, #0]
 80024b0:	b2db      	uxtb	r3, r3
 80024b2:	2b00      	cmp	r3, #0
 80024b4:	d002      	beq.n	80024bc <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 80024b6:	4b05      	ldr	r3, [pc, #20]	@ (80024cc <Touch_HandlePenDownInterrupt+0x24>)
 80024b8:	2201      	movs	r2, #1
 80024ba:	701a      	strb	r2, [r3, #0]
	}
}
 80024bc:	bf00      	nop
 80024be:	46bd      	mov	sp, r7
 80024c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024c4:	4770      	bx	lr
 80024c6:	bf00      	nop
 80024c8:	2000000d 	.word	0x2000000d
 80024cc:	200005f5 	.word	0x200005f5

080024d0 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80024d0:	b580      	push	{r7, lr}
 80024d2:	b082      	sub	sp, #8
 80024d4:	af00      	add	r7, sp, #0
 80024d6:	4603      	mov	r3, r0
 80024d8:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 80024da:	88fb      	ldrh	r3, [r7, #6]
 80024dc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80024e0:	d101      	bne.n	80024e6 <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 80024e2:	f7ff ffe1 	bl	80024a8 <Touch_HandlePenDownInterrupt>
	}
}
 80024e6:	bf00      	nop
 80024e8:	3708      	adds	r7, #8
 80024ea:	46bd      	mov	sp, r7
 80024ec:	bd80      	pop	{r7, pc}
	...

080024f0 <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 80024f0:	b580      	push	{r7, lr}
 80024f2:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 80024f4:	2180      	movs	r1, #128	@ 0x80
 80024f6:	4813      	ldr	r0, [pc, #76]	@ (8002544 <Touch_Select+0x54>)
 80024f8:	f001 fece 	bl	8004298 <HAL_GPIO_ReadPin>
 80024fc:	4603      	mov	r3, r0
 80024fe:	2b00      	cmp	r3, #0
 8002500:	d10a      	bne.n	8002518 <Touch_Select+0x28>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 8002502:	bf00      	nop
 8002504:	4b10      	ldr	r3, [pc, #64]	@ (8002548 <Touch_Select+0x58>)
 8002506:	781b      	ldrb	r3, [r3, #0]
 8002508:	b2db      	uxtb	r3, r3
 800250a:	2b00      	cmp	r3, #0
 800250c:	d0fa      	beq.n	8002504 <Touch_Select+0x14>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 800250e:	2201      	movs	r2, #1
 8002510:	2180      	movs	r1, #128	@ 0x80
 8002512:	480c      	ldr	r0, [pc, #48]	@ (8002544 <Touch_Select+0x54>)
 8002514:	f001 fed8 	bl	80042c8 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 8002518:	4b0c      	ldr	r3, [pc, #48]	@ (800254c <Touch_Select+0x5c>)
 800251a:	681a      	ldr	r2, [r3, #0]
 800251c:	490b      	ldr	r1, [pc, #44]	@ (800254c <Touch_Select+0x5c>)
 800251e:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 8002522:	4013      	ands	r3, r2
 8002524:	600b      	str	r3, [r1, #0]
 8002526:	4b09      	ldr	r3, [pc, #36]	@ (800254c <Touch_Select+0x5c>)
 8002528:	681b      	ldr	r3, [r3, #0]
 800252a:	4a08      	ldr	r2, [pc, #32]	@ (800254c <Touch_Select+0x5c>)
 800252c:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 8002530:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 8002532:	2200      	movs	r2, #0
 8002534:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002538:	4805      	ldr	r0, [pc, #20]	@ (8002550 <Touch_Select+0x60>)
 800253a:	f001 fec5 	bl	80042c8 <HAL_GPIO_WritePin>
	}
}
 800253e:	bf00      	nop
 8002540:	bd80      	pop	{r7, pc}
 8002542:	bf00      	nop
 8002544:	40020800 	.word	0x40020800
 8002548:	2000000c 	.word	0x2000000c
 800254c:	40003800 	.word	0x40003800
 8002550:	40020000 	.word	0x40020000

08002554 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 8002554:	b580      	push	{r7, lr}
 8002556:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 8002558:	2201      	movs	r2, #1
 800255a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800255e:	4802      	ldr	r0, [pc, #8]	@ (8002568 <Touch_UnSelect+0x14>)
 8002560:	f001 feb2 	bl	80042c8 <HAL_GPIO_WritePin>
	}
}
 8002564:	bf00      	nop
 8002566:	bd80      	pop	{r7, pc}
 8002568:	40020000 	.word	0x40020000

0800256c <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 800256c:	b580      	push	{r7, lr}
 800256e:	b084      	sub	sp, #16
 8002570:	af00      	add	r7, sp, #0
 8002572:	4603      	mov	r3, r0
 8002574:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 8002576:	2300      	movs	r3, #0
 8002578:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 800257a:	f7ff ffb9 	bl	80024f0 <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 800257e:	4b17      	ldr	r3, [pc, #92]	@ (80025dc <Touch_PollAxis+0x70>)
 8002580:	2200      	movs	r2, #0
 8002582:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 8002584:	2017      	movs	r0, #23
 8002586:	f001 f91c 	bl	80037c2 <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 800258a:	1df9      	adds	r1, r7, #7
 800258c:	230a      	movs	r3, #10
 800258e:	2201      	movs	r2, #1
 8002590:	4813      	ldr	r0, [pc, #76]	@ (80025e0 <Touch_PollAxis+0x74>)
 8002592:	f003 fd8c 	bl	80060ae <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 8002596:	f107 0108 	add.w	r1, r7, #8
 800259a:	230a      	movs	r3, #10
 800259c:	2202      	movs	r2, #2
 800259e:	4810      	ldr	r0, [pc, #64]	@ (80025e0 <Touch_PollAxis+0x74>)
 80025a0:	f003 fec9 	bl	8006336 <HAL_SPI_Receive>
 80025a4:	4603      	mov	r3, r0
 80025a6:	2b00      	cmp	r3, #0
 80025a8:	d105      	bne.n	80025b6 <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 80025aa:	7a3b      	ldrb	r3, [r7, #8]
 80025ac:	021b      	lsls	r3, r3, #8
 80025ae:	7a7a      	ldrb	r2, [r7, #9]
 80025b0:	4413      	add	r3, r2
 80025b2:	60fb      	str	r3, [r7, #12]
 80025b4:	e001      	b.n	80025ba <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 80025b6:	2300      	movs	r3, #0
 80025b8:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80025ba:	2017      	movs	r0, #23
 80025bc:	f001 f91b 	bl	80037f6 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 80025c0:	2017      	movs	r0, #23
 80025c2:	f001 f8f0 	bl	80037a6 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 80025c6:	4b05      	ldr	r3, [pc, #20]	@ (80025dc <Touch_PollAxis+0x70>)
 80025c8:	2201      	movs	r2, #1
 80025ca:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 80025cc:	f7ff ffc2 	bl	8002554 <Touch_UnSelect>
	}

	return poll16;
 80025d0:	68fb      	ldr	r3, [r7, #12]
 80025d2:	b29b      	uxth	r3, r3
}
 80025d4:	4618      	mov	r0, r3
 80025d6:	3710      	adds	r7, #16
 80025d8:	46bd      	mov	sp, r7
 80025da:	bd80      	pop	{r7, pc}
 80025dc:	2000000d 	.word	0x2000000d
 80025e0:	20000440 	.word	0x20000440

080025e4 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 80025e4:	b580      	push	{r7, lr}
 80025e6:	b08a      	sub	sp, #40	@ 0x28
 80025e8:	af00      	add	r7, sp, #0
 80025ea:	60f8      	str	r0, [r7, #12]
 80025ec:	60b9      	str	r1, [r7, #8]
 80025ee:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 80025f0:	2304      	movs	r3, #4
 80025f2:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 80025f4:	2300      	movs	r3, #0
 80025f6:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025f8:	2300      	movs	r3, #0
 80025fa:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80025fe:	e00c      	b.n	800261a <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8002600:	20b0      	movs	r0, #176	@ 0xb0
 8002602:	f7ff ffb3 	bl	800256c <Touch_PollAxis>
 8002606:	4603      	mov	r3, r0
 8002608:	461a      	mov	r2, r3
 800260a:	6a3b      	ldr	r3, [r7, #32]
 800260c:	4413      	add	r3, r2
 800260e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002610:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002614:	3301      	adds	r3, #1
 8002616:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800261a:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800261e:	7ffb      	ldrb	r3, [r7, #31]
 8002620:	2101      	movs	r1, #1
 8002622:	fa01 f303 	lsl.w	r3, r1, r3
 8002626:	429a      	cmp	r2, r3
 8002628:	dbea      	blt.n	8002600 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 800262a:	7ffb      	ldrb	r3, [r7, #31]
 800262c:	6a3a      	ldr	r2, [r7, #32]
 800262e:	fa22 f303 	lsr.w	r3, r2, r3
 8002632:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8002634:	6a3b      	ldr	r3, [r7, #32]
 8002636:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 800263a:	d806      	bhi.n	800264a <Touch_GetXYtouch+0x66>
		*isTouch=0;
 800263c:	687b      	ldr	r3, [r7, #4]
 800263e:	2200      	movs	r2, #0
 8002640:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002642:	2017      	movs	r0, #23
 8002644:	f001 f8d7 	bl	80037f6 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8002648:	e0b2      	b.n	80027b0 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 800264a:	2300      	movs	r3, #0
 800264c:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800264e:	2300      	movs	r3, #0
 8002650:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002654:	e00c      	b.n	8002670 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 8002656:	20d0      	movs	r0, #208	@ 0xd0
 8002658:	f7ff ff88 	bl	800256c <Touch_PollAxis>
 800265c:	4603      	mov	r3, r0
 800265e:	461a      	mov	r2, r3
 8002660:	6a3b      	ldr	r3, [r7, #32]
 8002662:	4413      	add	r3, r2
 8002664:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002666:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800266a:	3301      	adds	r3, #1
 800266c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002670:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002674:	7ffb      	ldrb	r3, [r7, #31]
 8002676:	2101      	movs	r1, #1
 8002678:	fa01 f303 	lsl.w	r3, r1, r3
 800267c:	429a      	cmp	r2, r3
 800267e:	dbea      	blt.n	8002656 <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 8002680:	7ffb      	ldrb	r3, [r7, #31]
 8002682:	6a3a      	ldr	r2, [r7, #32]
 8002684:	fa22 f303 	lsr.w	r3, r2, r3
 8002688:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 800268a:	6a3b      	ldr	r3, [r7, #32]
 800268c:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8002690:	d806      	bhi.n	80026a0 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 8002692:	687b      	ldr	r3, [r7, #4]
 8002694:	2200      	movs	r2, #0
 8002696:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002698:	2017      	movs	r0, #23
 800269a:	f001 f8ac 	bl	80037f6 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 800269e:	e087      	b.n	80027b0 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 80026a0:	6a3b      	ldr	r3, [r7, #32]
 80026a2:	ee07 3a90 	vmov	s15, r3
 80026a6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026aa:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 80027b8 <Touch_GetXYtouch+0x1d4>
 80026ae:	ee67 7a87 	vmul.f32	s15, s15, s14
 80026b2:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 80027bc <Touch_GetXYtouch+0x1d8>
 80026b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80026ba:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80026be:	ee17 3a90 	vmov	r3, s15
 80026c2:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 80026c4:	2300      	movs	r3, #0
 80026c6:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026c8:	2300      	movs	r3, #0
 80026ca:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80026ce:	e00c      	b.n	80026ea <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 80026d0:	2090      	movs	r0, #144	@ 0x90
 80026d2:	f7ff ff4b 	bl	800256c <Touch_PollAxis>
 80026d6:	4603      	mov	r3, r0
 80026d8:	461a      	mov	r2, r3
 80026da:	6a3b      	ldr	r3, [r7, #32]
 80026dc:	4413      	add	r3, r2
 80026de:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026e0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80026e4:	3301      	adds	r3, #1
 80026e6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80026ea:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80026ee:	7ffb      	ldrb	r3, [r7, #31]
 80026f0:	2101      	movs	r1, #1
 80026f2:	fa01 f303 	lsl.w	r3, r1, r3
 80026f6:	429a      	cmp	r2, r3
 80026f8:	dbea      	blt.n	80026d0 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 80026fa:	7ffb      	ldrb	r3, [r7, #31]
 80026fc:	6a3a      	ldr	r2, [r7, #32]
 80026fe:	fa22 f303 	lsr.w	r3, r2, r3
 8002702:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8002704:	6a3b      	ldr	r3, [r7, #32]
 8002706:	ee07 3a90 	vmov	s15, r3
 800270a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800270e:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80027c0 <Touch_GetXYtouch+0x1dc>
 8002712:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002716:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 80027c4 <Touch_GetXYtouch+0x1e0>
 800271a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800271e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002722:	ee17 3a90 	vmov	r3, s15
 8002726:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8002728:	4b27      	ldr	r3, [pc, #156]	@ (80027c8 <Touch_GetXYtouch+0x1e4>)
 800272a:	781b      	ldrb	r3, [r3, #0]
 800272c:	2b03      	cmp	r3, #3
 800272e:	d83b      	bhi.n	80027a8 <Touch_GetXYtouch+0x1c4>
 8002730:	a201      	add	r2, pc, #4	@ (adr r2, 8002738 <Touch_GetXYtouch+0x154>)
 8002732:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002736:	bf00      	nop
 8002738:	08002749 	.word	0x08002749
 800273c:	0800275b 	.word	0x0800275b
 8002740:	08002773 	.word	0x08002773
 8002744:	08002791 	.word	0x08002791
	{
	case TOUCH0:
		*x=touchx;
 8002748:	69bb      	ldr	r3, [r7, #24]
 800274a:	b29a      	uxth	r2, r3
 800274c:	68fb      	ldr	r3, [r7, #12]
 800274e:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 8002750:	697b      	ldr	r3, [r7, #20]
 8002752:	b29a      	uxth	r2, r3
 8002754:	68bb      	ldr	r3, [r7, #8]
 8002756:	801a      	strh	r2, [r3, #0]
		break;
 8002758:	e026      	b.n	80027a8 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 800275a:	697b      	ldr	r3, [r7, #20]
 800275c:	b29a      	uxth	r2, r3
 800275e:	68fb      	ldr	r3, [r7, #12]
 8002760:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 8002762:	69bb      	ldr	r3, [r7, #24]
 8002764:	b29b      	uxth	r3, r3
 8002766:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 800276a:	b29a      	uxth	r2, r3
 800276c:	68bb      	ldr	r3, [r7, #8]
 800276e:	801a      	strh	r2, [r3, #0]
		break;
 8002770:	e01a      	b.n	80027a8 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 8002772:	69bb      	ldr	r3, [r7, #24]
 8002774:	b29b      	uxth	r3, r3
 8002776:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 800277a:	b29a      	uxth	r2, r3
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8002780:	697b      	ldr	r3, [r7, #20]
 8002782:	b29b      	uxth	r3, r3
 8002784:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8002788:	b29a      	uxth	r2, r3
 800278a:	68bb      	ldr	r3, [r7, #8]
 800278c:	801a      	strh	r2, [r3, #0]
		break;
 800278e:	e00b      	b.n	80027a8 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8002790:	697b      	ldr	r3, [r7, #20]
 8002792:	b29b      	uxth	r3, r3
 8002794:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8002798:	b29a      	uxth	r2, r3
 800279a:	68fb      	ldr	r3, [r7, #12]
 800279c:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 800279e:	69bb      	ldr	r3, [r7, #24]
 80027a0:	b29a      	uxth	r2, r3
 80027a2:	68bb      	ldr	r3, [r7, #8]
 80027a4:	801a      	strh	r2, [r3, #0]
		break;
 80027a6:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	2201      	movs	r2, #1
 80027ac:	701a      	strb	r2, [r3, #0]
	return;
 80027ae:	bf00      	nop
}
 80027b0:	3728      	adds	r7, #40	@ 0x28
 80027b2:	46bd      	mov	sp, r7
 80027b4:	bd80      	pop	{r7, pc}
 80027b6:	bf00      	nop
 80027b8:	bc378034 	.word	0xbc378034
 80027bc:	43a80000 	.word	0x43a80000
 80027c0:	3c87fcb9 	.word	0x3c87fcb9
 80027c4:	4225851f 	.word	0x4225851f
 80027c8:	200005e8 	.word	0x200005e8

080027cc <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 80027cc:	b580      	push	{r7, lr}
 80027ce:	b084      	sub	sp, #16
 80027d0:	af00      	add	r7, sp, #0
 80027d2:	4603      	mov	r3, r0
 80027d4:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 80027d6:	4b10      	ldr	r3, [pc, #64]	@ (8002818 <Touch_GotATouch+0x4c>)
 80027d8:	781b      	ldrb	r3, [r3, #0]
 80027da:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 80027dc:	79fb      	ldrb	r3, [r7, #7]
 80027de:	2b02      	cmp	r3, #2
 80027e0:	d10f      	bne.n	8002802 <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 80027e2:	f000 f931 	bl	8002a48 <HAL_GetTick>
 80027e6:	4602      	mov	r2, r0
 80027e8:	4b0c      	ldr	r3, [pc, #48]	@ (800281c <Touch_GotATouch+0x50>)
 80027ea:	681b      	ldr	r3, [r3, #0]
 80027ec:	1ad3      	subs	r3, r2, r3
 80027ee:	2b3b      	cmp	r3, #59	@ 0x3b
 80027f0:	d905      	bls.n	80027fe <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 80027f2:	f000 f929 	bl	8002a48 <HAL_GetTick>
 80027f6:	4603      	mov	r3, r0
 80027f8:	4a08      	ldr	r2, [pc, #32]	@ (800281c <Touch_GotATouch+0x50>)
 80027fa:	6013      	str	r3, [r2, #0]
 80027fc:	e001      	b.n	8002802 <Touch_GotATouch+0x36>
		else
			result=0;
 80027fe:	2300      	movs	r3, #0
 8002800:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 8002802:	79fb      	ldrb	r3, [r7, #7]
 8002804:	2b01      	cmp	r3, #1
 8002806:	d102      	bne.n	800280e <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8002808:	4b03      	ldr	r3, [pc, #12]	@ (8002818 <Touch_GotATouch+0x4c>)
 800280a:	2200      	movs	r2, #0
 800280c:	701a      	strb	r2, [r3, #0]
	return result;
 800280e:	7bfb      	ldrb	r3, [r7, #15]
}
 8002810:	4618      	mov	r0, r3
 8002812:	3710      	adds	r7, #16
 8002814:	46bd      	mov	sp, r7
 8002816:	bd80      	pop	{r7, pc}
 8002818:	200005f5 	.word	0x200005f5
 800281c:	200005f8 	.word	0x200005f8

08002820 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8002820:	b580      	push	{r7, lr}
 8002822:	b084      	sub	sp, #16
 8002824:	af00      	add	r7, sp, #0
 8002826:	6078      	str	r0, [r7, #4]
 8002828:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 800282a:	2300      	movs	r3, #0
 800282c:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 800282e:	2300      	movs	r3, #0
 8002830:	81bb      	strh	r3, [r7, #12]
 8002832:	2300      	movs	r3, #0
 8002834:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8002836:	2000      	movs	r0, #0
 8002838:	f7ff ffc8 	bl	80027cc <Touch_GotATouch>
 800283c:	4603      	mov	r3, r0
 800283e:	2b00      	cmp	r3, #0
 8002840:	d063      	beq.n	800290a <Touch_TouchGFXSampleTouch+0xea>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8002842:	f107 020f 	add.w	r2, r7, #15
 8002846:	f107 010a 	add.w	r1, r7, #10
 800284a:	f107 030c 	add.w	r3, r7, #12
 800284e:	4618      	mov	r0, r3
 8002850:	f7ff fec8 	bl	80025e4 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8002854:	7bfb      	ldrb	r3, [r7, #15]
 8002856:	2b00      	cmp	r3, #0
 8002858:	d126      	bne.n	80028a8 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 800285a:	4b2e      	ldr	r3, [pc, #184]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf4>)
 800285c:	681b      	ldr	r3, [r3, #0]
 800285e:	2b00      	cmp	r3, #0
 8002860:	d053      	beq.n	800290a <Touch_TouchGFXSampleTouch+0xea>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 8002862:	4b2d      	ldr	r3, [pc, #180]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf8>)
 8002864:	781b      	ldrb	r3, [r3, #0]
 8002866:	1e5a      	subs	r2, r3, #1
 8002868:	b2d1      	uxtb	r1, r2
 800286a:	4a2b      	ldr	r2, [pc, #172]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf8>)
 800286c:	7011      	strb	r1, [r2, #0]
 800286e:	2b06      	cmp	r3, #6
 8002870:	d90c      	bls.n	800288c <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 8002872:	4b2a      	ldr	r3, [pc, #168]	@ (800291c <Touch_TouchGFXSampleTouch+0xfc>)
 8002874:	881b      	ldrh	r3, [r3, #0]
 8002876:	461a      	mov	r2, r3
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 800287c:	4b28      	ldr	r3, [pc, #160]	@ (8002920 <Touch_TouchGFXSampleTouch+0x100>)
 800287e:	881b      	ldrh	r3, [r3, #0]
 8002880:	461a      	mov	r2, r3
 8002882:	683b      	ldr	r3, [r7, #0]
 8002884:	601a      	str	r2, [r3, #0]
					isTouch=1;
 8002886:	2301      	movs	r3, #1
 8002888:	73fb      	strb	r3, [r7, #15]
 800288a:	e03e      	b.n	800290a <Touch_TouchGFXSampleTouch+0xea>
				} else if ((repetition==255)) {  // that's -1
 800288c:	4b22      	ldr	r3, [pc, #136]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf8>)
 800288e:	781b      	ldrb	r3, [r3, #0]
 8002890:	2bff      	cmp	r3, #255	@ 0xff
 8002892:	d13a      	bne.n	800290a <Touch_TouchGFXSampleTouch+0xea>
					touchTime=0;					// set display as untouched
 8002894:	4b1f      	ldr	r3, [pc, #124]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf4>)
 8002896:	2200      	movs	r2, #0
 8002898:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 800289a:	2001      	movs	r0, #1
 800289c:	f7ff ff96 	bl	80027cc <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 80028a0:	4b1d      	ldr	r3, [pc, #116]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf8>)
 80028a2:	2205      	movs	r2, #5
 80028a4:	701a      	strb	r2, [r3, #0]
 80028a6:	e030      	b.n	800290a <Touch_TouchGFXSampleTouch+0xea>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 80028a8:	4b1a      	ldr	r3, [pc, #104]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf4>)
 80028aa:	681b      	ldr	r3, [r3, #0]
 80028ac:	2b00      	cmp	r3, #0
 80028ae:	d10e      	bne.n	80028ce <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028b0:	89ba      	ldrh	r2, [r7, #12]
 80028b2:	4b1a      	ldr	r3, [pc, #104]	@ (800291c <Touch_TouchGFXSampleTouch+0xfc>)
 80028b4:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028b6:	897a      	ldrh	r2, [r7, #10]
 80028b8:	4b19      	ldr	r3, [pc, #100]	@ (8002920 <Touch_TouchGFXSampleTouch+0x100>)
 80028ba:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 80028bc:	f000 f8c4 	bl	8002a48 <HAL_GetTick>
 80028c0:	4603      	mov	r3, r0
 80028c2:	4a14      	ldr	r2, [pc, #80]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf4>)
 80028c4:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 80028c6:	4b17      	ldr	r3, [pc, #92]	@ (8002924 <Touch_TouchGFXSampleTouch+0x104>)
 80028c8:	2201      	movs	r2, #1
 80028ca:	701a      	strb	r2, [r3, #0]
 80028cc:	e004      	b.n	80028d8 <Touch_TouchGFXSampleTouch+0xb8>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 80028ce:	f000 f8bb 	bl	8002a48 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
 80028d2:	4b14      	ldr	r3, [pc, #80]	@ (8002924 <Touch_TouchGFXSampleTouch+0x104>)
 80028d4:	2200      	movs	r2, #0
 80028d6:	701a      	strb	r2, [r3, #0]
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 80028d8:	4b12      	ldr	r3, [pc, #72]	@ (8002924 <Touch_TouchGFXSampleTouch+0x104>)
 80028da:	781b      	ldrb	r3, [r3, #0]
 80028dc:	2b00      	cmp	r3, #0
 80028de:	d012      	beq.n	8002906 <Touch_TouchGFXSampleTouch+0xe6>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028e0:	89bb      	ldrh	r3, [r7, #12]
 80028e2:	461a      	mov	r2, r3
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028e8:	897b      	ldrh	r3, [r7, #10]
 80028ea:	461a      	mov	r2, r3
 80028ec:	683b      	ldr	r3, [r7, #0]
 80028ee:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	b29a      	uxth	r2, r3
 80028f6:	4b09      	ldr	r3, [pc, #36]	@ (800291c <Touch_TouchGFXSampleTouch+0xfc>)
 80028f8:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 80028fa:	683b      	ldr	r3, [r7, #0]
 80028fc:	681b      	ldr	r3, [r3, #0]
 80028fe:	b29a      	uxth	r2, r3
 8002900:	4b07      	ldr	r3, [pc, #28]	@ (8002920 <Touch_TouchGFXSampleTouch+0x100>)
 8002902:	801a      	strh	r2, [r3, #0]
 8002904:	e001      	b.n	800290a <Touch_TouchGFXSampleTouch+0xea>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8002906:	2300      	movs	r3, #0
 8002908:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 800290a:	7bfb      	ldrb	r3, [r7, #15]
}
 800290c:	4618      	mov	r0, r3
 800290e:	3710      	adds	r7, #16
 8002910:	46bd      	mov	sp, r7
 8002912:	bd80      	pop	{r7, pc}
 8002914:	20000010 	.word	0x20000010
 8002918:	20000014 	.word	0x20000014
 800291c:	200005fc 	.word	0x200005fc
 8002920:	200005fe 	.word	0x200005fe
 8002924:	20000600 	.word	0x20000600

08002928 <Reset_Handler>:
 8002928:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002960 <LoopFillZerobss+0xe>
 800292c:	f7ff fb60 	bl	8001ff0 <SystemInit>
 8002930:	480c      	ldr	r0, [pc, #48]	@ (8002964 <LoopFillZerobss+0x12>)
 8002932:	490d      	ldr	r1, [pc, #52]	@ (8002968 <LoopFillZerobss+0x16>)
 8002934:	4a0d      	ldr	r2, [pc, #52]	@ (800296c <LoopFillZerobss+0x1a>)
 8002936:	2300      	movs	r3, #0
 8002938:	e002      	b.n	8002940 <LoopCopyDataInit>

0800293a <CopyDataInit>:
 800293a:	58d4      	ldr	r4, [r2, r3]
 800293c:	50c4      	str	r4, [r0, r3]
 800293e:	3304      	adds	r3, #4

08002940 <LoopCopyDataInit>:
 8002940:	18c4      	adds	r4, r0, r3
 8002942:	428c      	cmp	r4, r1
 8002944:	d3f9      	bcc.n	800293a <CopyDataInit>
 8002946:	4a0a      	ldr	r2, [pc, #40]	@ (8002970 <LoopFillZerobss+0x1e>)
 8002948:	4c0a      	ldr	r4, [pc, #40]	@ (8002974 <LoopFillZerobss+0x22>)
 800294a:	2300      	movs	r3, #0
 800294c:	e001      	b.n	8002952 <LoopFillZerobss>

0800294e <FillZerobss>:
 800294e:	6013      	str	r3, [r2, #0]
 8002950:	3204      	adds	r2, #4

08002952 <LoopFillZerobss>:
 8002952:	42a2      	cmp	r2, r4
 8002954:	d3fb      	bcc.n	800294e <FillZerobss>
 8002956:	f01f ff97 	bl	8022888 <__libc_init_array>
 800295a:	f7fe fac7 	bl	8000eec <main>
 800295e:	4770      	bx	lr
 8002960:	20020000 	.word	0x20020000
 8002964:	20000000 	.word	0x20000000
 8002968:	20000104 	.word	0x20000104
 800296c:	0806ed38 	.word	0x0806ed38
 8002970:	20000320 	.word	0x20000320
 8002974:	20003af4 	.word	0x20003af4

08002978 <CAN1_RX0_IRQHandler>:
 8002978:	e7fe      	b.n	8002978 <CAN1_RX0_IRQHandler>
	...

0800297c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800297c:	b580      	push	{r7, lr}
 800297e:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002980:	4b0e      	ldr	r3, [pc, #56]	@ (80029bc <HAL_Init+0x40>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a0d      	ldr	r2, [pc, #52]	@ (80029bc <HAL_Init+0x40>)
 8002986:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800298a:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800298c:	4b0b      	ldr	r3, [pc, #44]	@ (80029bc <HAL_Init+0x40>)
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	4a0a      	ldr	r2, [pc, #40]	@ (80029bc <HAL_Init+0x40>)
 8002992:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002996:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002998:	4b08      	ldr	r3, [pc, #32]	@ (80029bc <HAL_Init+0x40>)
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	4a07      	ldr	r2, [pc, #28]	@ (80029bc <HAL_Init+0x40>)
 800299e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80029a2:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80029a4:	2003      	movs	r0, #3
 80029a6:	f000 fed7 	bl	8003758 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80029aa:	2000      	movs	r0, #0
 80029ac:	f000 f808 	bl	80029c0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80029b0:	f7fe ff44 	bl	800183c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80029b4:	2300      	movs	r3, #0
}
 80029b6:	4618      	mov	r0, r3
 80029b8:	bd80      	pop	{r7, pc}
 80029ba:	bf00      	nop
 80029bc:	40023c00 	.word	0x40023c00

080029c0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80029c0:	b580      	push	{r7, lr}
 80029c2:	b082      	sub	sp, #8
 80029c4:	af00      	add	r7, sp, #0
 80029c6:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80029c8:	4b12      	ldr	r3, [pc, #72]	@ (8002a14 <HAL_InitTick+0x54>)
 80029ca:	681a      	ldr	r2, [r3, #0]
 80029cc:	4b12      	ldr	r3, [pc, #72]	@ (8002a18 <HAL_InitTick+0x58>)
 80029ce:	781b      	ldrb	r3, [r3, #0]
 80029d0:	4619      	mov	r1, r3
 80029d2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80029d6:	fbb3 f3f1 	udiv	r3, r3, r1
 80029da:	fbb2 f3f3 	udiv	r3, r2, r3
 80029de:	4618      	mov	r0, r3
 80029e0:	f000 fefd 	bl	80037de <HAL_SYSTICK_Config>
 80029e4:	4603      	mov	r3, r0
 80029e6:	2b00      	cmp	r3, #0
 80029e8:	d001      	beq.n	80029ee <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80029ea:	2301      	movs	r3, #1
 80029ec:	e00e      	b.n	8002a0c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	2b0f      	cmp	r3, #15
 80029f2:	d80a      	bhi.n	8002a0a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80029f4:	2200      	movs	r2, #0
 80029f6:	6879      	ldr	r1, [r7, #4]
 80029f8:	f04f 30ff 	mov.w	r0, #4294967295
 80029fc:	f000 feb7 	bl	800376e <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002a00:	4a06      	ldr	r2, [pc, #24]	@ (8002a1c <HAL_InitTick+0x5c>)
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002a06:	2300      	movs	r3, #0
 8002a08:	e000      	b.n	8002a0c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002a0a:	2301      	movs	r3, #1
}
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	3708      	adds	r7, #8
 8002a10:	46bd      	mov	sp, r7
 8002a12:	bd80      	pop	{r7, pc}
 8002a14:	20000008 	.word	0x20000008
 8002a18:	2000001c 	.word	0x2000001c
 8002a1c:	20000018 	.word	0x20000018

08002a20 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002a20:	b480      	push	{r7}
 8002a22:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002a24:	4b06      	ldr	r3, [pc, #24]	@ (8002a40 <HAL_IncTick+0x20>)
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	461a      	mov	r2, r3
 8002a2a:	4b06      	ldr	r3, [pc, #24]	@ (8002a44 <HAL_IncTick+0x24>)
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	4413      	add	r3, r2
 8002a30:	4a04      	ldr	r2, [pc, #16]	@ (8002a44 <HAL_IncTick+0x24>)
 8002a32:	6013      	str	r3, [r2, #0]
}
 8002a34:	bf00      	nop
 8002a36:	46bd      	mov	sp, r7
 8002a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a3c:	4770      	bx	lr
 8002a3e:	bf00      	nop
 8002a40:	2000001c 	.word	0x2000001c
 8002a44:	20000604 	.word	0x20000604

08002a48 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002a48:	b480      	push	{r7}
 8002a4a:	af00      	add	r7, sp, #0
  return uwTick;
 8002a4c:	4b03      	ldr	r3, [pc, #12]	@ (8002a5c <HAL_GetTick+0x14>)
 8002a4e:	681b      	ldr	r3, [r3, #0]
}
 8002a50:	4618      	mov	r0, r3
 8002a52:	46bd      	mov	sp, r7
 8002a54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a58:	4770      	bx	lr
 8002a5a:	bf00      	nop
 8002a5c:	20000604 	.word	0x20000604

08002a60 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002a60:	b580      	push	{r7, lr}
 8002a62:	b084      	sub	sp, #16
 8002a64:	af00      	add	r7, sp, #0
 8002a66:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002a68:	f7ff ffee 	bl	8002a48 <HAL_GetTick>
 8002a6c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a78:	d005      	beq.n	8002a86 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002a7a:	4b0a      	ldr	r3, [pc, #40]	@ (8002aa4 <HAL_Delay+0x44>)
 8002a7c:	781b      	ldrb	r3, [r3, #0]
 8002a7e:	461a      	mov	r2, r3
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	4413      	add	r3, r2
 8002a84:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002a86:	bf00      	nop
 8002a88:	f7ff ffde 	bl	8002a48 <HAL_GetTick>
 8002a8c:	4602      	mov	r2, r0
 8002a8e:	68bb      	ldr	r3, [r7, #8]
 8002a90:	1ad3      	subs	r3, r2, r3
 8002a92:	68fa      	ldr	r2, [r7, #12]
 8002a94:	429a      	cmp	r2, r3
 8002a96:	d8f7      	bhi.n	8002a88 <HAL_Delay+0x28>
  {
  }
}
 8002a98:	bf00      	nop
 8002a9a:	bf00      	nop
 8002a9c:	3710      	adds	r7, #16
 8002a9e:	46bd      	mov	sp, r7
 8002aa0:	bd80      	pop	{r7, pc}
 8002aa2:	bf00      	nop
 8002aa4:	2000001c 	.word	0x2000001c

08002aa8 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002aa8:	b580      	push	{r7, lr}
 8002aaa:	b084      	sub	sp, #16
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002ab0:	2300      	movs	r3, #0
 8002ab2:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d101      	bne.n	8002abe <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002aba:	2301      	movs	r3, #1
 8002abc:	e033      	b.n	8002b26 <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d109      	bne.n	8002ada <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002ac6:	6878      	ldr	r0, [r7, #4]
 8002ac8:	f7fe fee0 	bl	800188c <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	2200      	movs	r2, #0
 8002ad0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ade:	f003 0310 	and.w	r3, r3, #16
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	d118      	bne.n	8002b18 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aea:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002aee:	f023 0302 	bic.w	r3, r3, #2
 8002af2:	f043 0202 	orr.w	r2, r3, #2
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002afa:	6878      	ldr	r0, [r7, #4]
 8002afc:	f000 fb92 	bl	8003224 <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	2200      	movs	r2, #0
 8002b04:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b0a:	f023 0303 	bic.w	r3, r3, #3
 8002b0e:	f043 0201 	orr.w	r2, r3, #1
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b16:	e001      	b.n	8002b1c <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002b18:	2301      	movs	r3, #1
 8002b1a:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	2200      	movs	r2, #0
 8002b20:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002b24:	7bfb      	ldrb	r3, [r7, #15]
}
 8002b26:	4618      	mov	r0, r3
 8002b28:	3710      	adds	r7, #16
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	bd80      	pop	{r7, pc}

08002b2e <HAL_ADC_IRQHandler>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
{
 8002b2e:	b580      	push	{r7, lr}
 8002b30:	b086      	sub	sp, #24
 8002b32:	af00      	add	r7, sp, #0
 8002b34:	6078      	str	r0, [r7, #4]
  uint32_t tmp1 = 0U, tmp2 = 0U;
 8002b36:	2300      	movs	r3, #0
 8002b38:	617b      	str	r3, [r7, #20]
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	613b      	str	r3, [r7, #16]

  uint32_t tmp_sr = hadc->Instance->SR;
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	681b      	ldr	r3, [r3, #0]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	60fb      	str	r3, [r7, #12]
  uint32_t tmp_cr1 = hadc->Instance->CR1;
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	685b      	ldr	r3, [r3, #4]
 8002b4c:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
  assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));

  tmp1 = tmp_sr & ADC_FLAG_EOC;
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	f003 0302 	and.w	r3, r3, #2
 8002b54:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_EOC;
 8002b56:	68bb      	ldr	r3, [r7, #8]
 8002b58:	f003 0320 	and.w	r3, r3, #32
 8002b5c:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for regular channels */
  if (tmp1 && tmp2)
 8002b5e:	697b      	ldr	r3, [r7, #20]
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d049      	beq.n	8002bf8 <HAL_ADC_IRQHandler+0xca>
 8002b64:	693b      	ldr	r3, [r7, #16]
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	d046      	beq.n	8002bf8 <HAL_ADC_IRQHandler+0xca>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b6e:	f003 0310 	and.w	r3, r3, #16
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d105      	bne.n	8002b82 <HAL_ADC_IRQHandler+0x54>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b7a:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	689b      	ldr	r3, [r3, #8]
 8002b88:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	d12b      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d127      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002b9e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002ba2:	2b00      	cmp	r3, #0
 8002ba4:	d006      	beq.n	8002bb4 <HAL_ADC_IRQHandler+0x86>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	689b      	ldr	r3, [r3, #8]
 8002bac:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002bb0:	2b00      	cmp	r3, #0
 8002bb2:	d119      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	685a      	ldr	r2, [r3, #4]
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	f022 0220 	bic.w	r2, r2, #32
 8002bc2:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bc8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bd4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d105      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002be0:	f043 0201 	orr.w	r2, r3, #1
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8002be8:	6878      	ldr	r0, [r7, #4]
 8002bea:	f000 f9c1 	bl	8002f70 <HAL_ADC_ConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	f06f 0212 	mvn.w	r2, #18
 8002bf6:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_JEOC;
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	f003 0304 	and.w	r3, r3, #4
 8002bfe:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_JEOC;
 8002c00:	68bb      	ldr	r3, [r7, #8]
 8002c02:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002c06:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for injected channels */
  if (tmp1 && tmp2)
 8002c08:	697b      	ldr	r3, [r7, #20]
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d057      	beq.n	8002cbe <HAL_ADC_IRQHandler+0x190>
 8002c0e:	693b      	ldr	r3, [r7, #16]
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d054      	beq.n	8002cbe <HAL_ADC_IRQHandler+0x190>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c18:	f003 0310 	and.w	r3, r3, #16
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d105      	bne.n	8002c2c <HAL_ADC_IRQHandler+0xfe>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c24:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Determine whether any further conversion upcoming on group injected  */
    /* by external trigger, scan sequence on going or by automatic injected */
    /* conversion from group regular (same conditions as group regular      */
    /* interruption disabling above).                                       */
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	689b      	ldr	r3, [r3, #8]
 8002c32:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d139      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c40:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d006      	beq.n	8002c56 <HAL_ADC_IRQHandler+0x128>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	689b      	ldr	r3, [r3, #8]
 8002c4e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002c52:	2b00      	cmp	r3, #0
 8002c54:	d12b      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	685b      	ldr	r3, [r3, #4]
 8002c5c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d124      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	689b      	ldr	r3, [r3, #8]
 8002c6a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d11d      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
          (hadc->Init.ContinuousConvMode == DISABLE))))
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	7e1b      	ldrb	r3, [r3, #24]
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	d119      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
    {
      /* Disable ADC end of single conversion interrupt on group injected */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	685a      	ldr	r2, [r3, #4]
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002c88:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c8e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c9a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	d105      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ca6:	f043 0201 	orr.w	r2, r3, #1
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Conversion complete callback */
    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->InjectedConvCpltCallback(hadc);
#else
    HAL_ADCEx_InjectedConvCpltCallback(hadc);
 8002cae:	6878      	ldr	r0, [r7, #4]
 8002cb0:	f000 fc36 	bl	8003520 <HAL_ADCEx_InjectedConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear injected group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	f06f 020c 	mvn.w	r2, #12
 8002cbc:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_AWD;
 8002cbe:	68fb      	ldr	r3, [r7, #12]
 8002cc0:	f003 0301 	and.w	r3, r3, #1
 8002cc4:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_AWD;
 8002cc6:	68bb      	ldr	r3, [r7, #8]
 8002cc8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002ccc:	613b      	str	r3, [r7, #16]
  /* Check Analog watchdog flag */
  if (tmp1 && tmp2)
 8002cce:	697b      	ldr	r3, [r7, #20]
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d017      	beq.n	8002d04 <HAL_ADC_IRQHandler+0x1d6>
 8002cd4:	693b      	ldr	r3, [r7, #16]
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d014      	beq.n	8002d04 <HAL_ADC_IRQHandler+0x1d6>
  {
    if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	f003 0301 	and.w	r3, r3, #1
 8002ce4:	2b01      	cmp	r3, #1
 8002ce6:	d10d      	bne.n	8002d04 <HAL_ADC_IRQHandler+0x1d6>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cec:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Level out of window callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
      hadc->LevelOutOfWindowCallback(hadc);
#else
      HAL_ADC_LevelOutOfWindowCallback(hadc);
 8002cf4:	6878      	ldr	r0, [r7, #4]
 8002cf6:	f000 f94f 	bl	8002f98 <HAL_ADC_LevelOutOfWindowCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

      /* Clear the ADC analog watchdog flag */
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	f06f 0201 	mvn.w	r2, #1
 8002d02:	601a      	str	r2, [r3, #0]
    }
  }

  tmp1 = tmp_sr & ADC_FLAG_OVR;
 8002d04:	68fb      	ldr	r3, [r7, #12]
 8002d06:	f003 0320 	and.w	r3, r3, #32
 8002d0a:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_OVR;
 8002d0c:	68bb      	ldr	r3, [r7, #8]
 8002d0e:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002d12:	613b      	str	r3, [r7, #16]
  /* Check Overrun flag */
  if (tmp1 && tmp2)
 8002d14:	697b      	ldr	r3, [r7, #20]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d015      	beq.n	8002d46 <HAL_ADC_IRQHandler+0x218>
 8002d1a:	693b      	ldr	r3, [r7, #16]
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d012      	beq.n	8002d46 <HAL_ADC_IRQHandler+0x218>
    /* Note: On STM32F4, ADC overrun can be set through other parameters    */
    /*       refer to description of parameter "EOCSelection" for more      */
    /*       details.                                                       */

    /* Set ADC error code to overrun */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d24:	f043 0202 	orr.w	r2, r3, #2
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Clear ADC overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	f06f 0220 	mvn.w	r2, #32
 8002d34:	601a      	str	r2, [r3, #0]

    /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ErrorCallback(hadc);
#else
    HAL_ADC_ErrorCallback(hadc);
 8002d36:	6878      	ldr	r0, [r7, #4]
 8002d38:	f000 f938 	bl	8002fac <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear the Overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	f06f 0220 	mvn.w	r2, #32
 8002d44:	601a      	str	r2, [r3, #0]
  }
}
 8002d46:	bf00      	nop
 8002d48:	3718      	adds	r7, #24
 8002d4a:	46bd      	mov	sp, r7
 8002d4c:	bd80      	pop	{r7, pc}
	...

08002d50 <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8002d50:	b580      	push	{r7, lr}
 8002d52:	b086      	sub	sp, #24
 8002d54:	af00      	add	r7, sp, #0
 8002d56:	60f8      	str	r0, [r7, #12]
 8002d58:	60b9      	str	r1, [r7, #8]
 8002d5a:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002d60:	68fb      	ldr	r3, [r7, #12]
 8002d62:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002d66:	2b01      	cmp	r3, #1
 8002d68:	d101      	bne.n	8002d6e <HAL_ADC_Start_DMA+0x1e>
 8002d6a:	2302      	movs	r3, #2
 8002d6c:	e0e9      	b.n	8002f42 <HAL_ADC_Start_DMA+0x1f2>
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	2201      	movs	r2, #1
 8002d72:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	689b      	ldr	r3, [r3, #8]
 8002d7c:	f003 0301 	and.w	r3, r3, #1
 8002d80:	2b01      	cmp	r3, #1
 8002d82:	d018      	beq.n	8002db6 <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	689a      	ldr	r2, [r3, #8]
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f042 0201 	orr.w	r2, r2, #1
 8002d92:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002d94:	4b6d      	ldr	r3, [pc, #436]	@ (8002f4c <HAL_ADC_Start_DMA+0x1fc>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	4a6d      	ldr	r2, [pc, #436]	@ (8002f50 <HAL_ADC_Start_DMA+0x200>)
 8002d9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002d9e:	0c9a      	lsrs	r2, r3, #18
 8002da0:	4613      	mov	r3, r2
 8002da2:	005b      	lsls	r3, r3, #1
 8002da4:	4413      	add	r3, r2
 8002da6:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002da8:	e002      	b.n	8002db0 <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8002daa:	693b      	ldr	r3, [r7, #16]
 8002dac:	3b01      	subs	r3, #1
 8002dae:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002db0:	693b      	ldr	r3, [r7, #16]
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d1f9      	bne.n	8002daa <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8002db6:	68fb      	ldr	r3, [r7, #12]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	689b      	ldr	r3, [r3, #8]
 8002dbc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002dc0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002dc4:	d107      	bne.n	8002dd6 <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	689a      	ldr	r2, [r3, #8]
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002dd4:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	689b      	ldr	r3, [r3, #8]
 8002ddc:	f003 0301 	and.w	r3, r3, #1
 8002de0:	2b01      	cmp	r3, #1
 8002de2:	f040 80a1 	bne.w	8002f28 <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dea:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002dee:	f023 0301 	bic.w	r3, r3, #1
 8002df2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	685b      	ldr	r3, [r3, #4]
 8002e00:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d007      	beq.n	8002e18 <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e0c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002e10:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002e18:	68fb      	ldr	r3, [r7, #12]
 8002e1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e1c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002e20:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002e24:	d106      	bne.n	8002e34 <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002e26:	68fb      	ldr	r3, [r7, #12]
 8002e28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e2a:	f023 0206 	bic.w	r2, r3, #6
 8002e2e:	68fb      	ldr	r3, [r7, #12]
 8002e30:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e32:	e002      	b.n	8002e3a <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002e34:	68fb      	ldr	r3, [r7, #12]
 8002e36:	2200      	movs	r2, #0
 8002e38:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002e42:	4b44      	ldr	r3, [pc, #272]	@ (8002f54 <HAL_ADC_Start_DMA+0x204>)
 8002e44:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002e46:	68fb      	ldr	r3, [r7, #12]
 8002e48:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e4a:	4a43      	ldr	r2, [pc, #268]	@ (8002f58 <HAL_ADC_Start_DMA+0x208>)
 8002e4c:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002e4e:	68fb      	ldr	r3, [r7, #12]
 8002e50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e52:	4a42      	ldr	r2, [pc, #264]	@ (8002f5c <HAL_ADC_Start_DMA+0x20c>)
 8002e54:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002e56:	68fb      	ldr	r3, [r7, #12]
 8002e58:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e5a:	4a41      	ldr	r2, [pc, #260]	@ (8002f60 <HAL_ADC_Start_DMA+0x210>)
 8002e5c:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002e66:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	685a      	ldr	r2, [r3, #4]
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002e76:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8002e78:	68fb      	ldr	r3, [r7, #12]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	689a      	ldr	r2, [r3, #8]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002e86:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	334c      	adds	r3, #76	@ 0x4c
 8002e92:	4619      	mov	r1, r3
 8002e94:	68ba      	ldr	r2, [r7, #8]
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	f000 fd86 	bl	80039a8 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002e9c:	697b      	ldr	r3, [r7, #20]
 8002e9e:	685b      	ldr	r3, [r3, #4]
 8002ea0:	f003 031f 	and.w	r3, r3, #31
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d12a      	bne.n	8002efe <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002ea8:	68fb      	ldr	r3, [r7, #12]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	4a2d      	ldr	r2, [pc, #180]	@ (8002f64 <HAL_ADC_Start_DMA+0x214>)
 8002eae:	4293      	cmp	r3, r2
 8002eb0:	d015      	beq.n	8002ede <HAL_ADC_Start_DMA+0x18e>
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	4a2c      	ldr	r2, [pc, #176]	@ (8002f68 <HAL_ADC_Start_DMA+0x218>)
 8002eb8:	4293      	cmp	r3, r2
 8002eba:	d105      	bne.n	8002ec8 <HAL_ADC_Start_DMA+0x178>
 8002ebc:	4b25      	ldr	r3, [pc, #148]	@ (8002f54 <HAL_ADC_Start_DMA+0x204>)
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	f003 031f 	and.w	r3, r3, #31
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	d00a      	beq.n	8002ede <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002ec8:	68fb      	ldr	r3, [r7, #12]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	4a27      	ldr	r2, [pc, #156]	@ (8002f6c <HAL_ADC_Start_DMA+0x21c>)
 8002ece:	4293      	cmp	r3, r2
 8002ed0:	d136      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
 8002ed2:	4b20      	ldr	r3, [pc, #128]	@ (8002f54 <HAL_ADC_Start_DMA+0x204>)
 8002ed4:	685b      	ldr	r3, [r3, #4]
 8002ed6:	f003 0310 	and.w	r3, r3, #16
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d130      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002ede:	68fb      	ldr	r3, [r7, #12]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	689b      	ldr	r3, [r3, #8]
 8002ee4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d129      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	689a      	ldr	r2, [r3, #8]
 8002ef2:	68fb      	ldr	r3, [r7, #12]
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002efa:	609a      	str	r2, [r3, #8]
 8002efc:	e020      	b.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	4a18      	ldr	r2, [pc, #96]	@ (8002f64 <HAL_ADC_Start_DMA+0x214>)
 8002f04:	4293      	cmp	r3, r2
 8002f06:	d11b      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
 8002f08:	68fb      	ldr	r3, [r7, #12]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	689b      	ldr	r3, [r3, #8]
 8002f0e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d114      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	689a      	ldr	r2, [r3, #8]
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002f24:	609a      	str	r2, [r3, #8]
 8002f26:	e00b      	b.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f2c:	f043 0210 	orr.w	r2, r3, #16
 8002f30:	68fb      	ldr	r3, [r7, #12]
 8002f32:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f38:	f043 0201 	orr.w	r2, r3, #1
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002f40:	2300      	movs	r3, #0
}
 8002f42:	4618      	mov	r0, r3
 8002f44:	3718      	adds	r7, #24
 8002f46:	46bd      	mov	sp, r7
 8002f48:	bd80      	pop	{r7, pc}
 8002f4a:	bf00      	nop
 8002f4c:	20000008 	.word	0x20000008
 8002f50:	431bde83 	.word	0x431bde83
 8002f54:	40012300 	.word	0x40012300
 8002f58:	0800341d 	.word	0x0800341d
 8002f5c:	080034d7 	.word	0x080034d7
 8002f60:	080034f3 	.word	0x080034f3
 8002f64:	40012000 	.word	0x40012000
 8002f68:	40012100 	.word	0x40012100
 8002f6c:	40012200 	.word	0x40012200

08002f70 <HAL_ADC_ConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002f70:	b480      	push	{r7}
 8002f72:	b083      	sub	sp, #12
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvCpltCallback could be implemented in the user file
   */
}
 8002f78:	bf00      	nop
 8002f7a:	370c      	adds	r7, #12
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f82:	4770      	bx	lr

08002f84 <HAL_ADC_ConvHalfCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002f84:	b480      	push	{r7}
 8002f86:	b083      	sub	sp, #12
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
   */
}
 8002f8c:	bf00      	nop
 8002f8e:	370c      	adds	r7, #12
 8002f90:	46bd      	mov	sp, r7
 8002f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f96:	4770      	bx	lr

08002f98 <HAL_ADC_LevelOutOfWindowCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
{
 8002f98:	b480      	push	{r7}
 8002f9a:	b083      	sub	sp, #12
 8002f9c:	af00      	add	r7, sp, #0
 8002f9e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
   */
}
 8002fa0:	bf00      	nop
 8002fa2:	370c      	adds	r7, #12
 8002fa4:	46bd      	mov	sp, r7
 8002fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002faa:	4770      	bx	lr

08002fac <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002fac:	b480      	push	{r7}
 8002fae:	b083      	sub	sp, #12
 8002fb0:	af00      	add	r7, sp, #0
 8002fb2:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8002fb4:	bf00      	nop
 8002fb6:	370c      	adds	r7, #12
 8002fb8:	46bd      	mov	sp, r7
 8002fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fbe:	4770      	bx	lr

08002fc0 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002fc0:	b480      	push	{r7}
 8002fc2:	b085      	sub	sp, #20
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	6078      	str	r0, [r7, #4]
 8002fc8:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002fca:	2300      	movs	r3, #0
 8002fcc:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002fd4:	2b01      	cmp	r3, #1
 8002fd6:	d101      	bne.n	8002fdc <HAL_ADC_ConfigChannel+0x1c>
 8002fd8:	2302      	movs	r3, #2
 8002fda:	e113      	b.n	8003204 <HAL_ADC_ConfigChannel+0x244>
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	2201      	movs	r2, #1
 8002fe0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002fe4:	683b      	ldr	r3, [r7, #0]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	2b09      	cmp	r3, #9
 8002fea:	d925      	bls.n	8003038 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	68d9      	ldr	r1, [r3, #12]
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	b29b      	uxth	r3, r3
 8002ff8:	461a      	mov	r2, r3
 8002ffa:	4613      	mov	r3, r2
 8002ffc:	005b      	lsls	r3, r3, #1
 8002ffe:	4413      	add	r3, r2
 8003000:	3b1e      	subs	r3, #30
 8003002:	2207      	movs	r2, #7
 8003004:	fa02 f303 	lsl.w	r3, r2, r3
 8003008:	43da      	mvns	r2, r3
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	400a      	ands	r2, r1
 8003010:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	68d9      	ldr	r1, [r3, #12]
 8003018:	683b      	ldr	r3, [r7, #0]
 800301a:	689a      	ldr	r2, [r3, #8]
 800301c:	683b      	ldr	r3, [r7, #0]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	b29b      	uxth	r3, r3
 8003022:	4618      	mov	r0, r3
 8003024:	4603      	mov	r3, r0
 8003026:	005b      	lsls	r3, r3, #1
 8003028:	4403      	add	r3, r0
 800302a:	3b1e      	subs	r3, #30
 800302c:	409a      	lsls	r2, r3
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	430a      	orrs	r2, r1
 8003034:	60da      	str	r2, [r3, #12]
 8003036:	e022      	b.n	800307e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	6919      	ldr	r1, [r3, #16]
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	b29b      	uxth	r3, r3
 8003044:	461a      	mov	r2, r3
 8003046:	4613      	mov	r3, r2
 8003048:	005b      	lsls	r3, r3, #1
 800304a:	4413      	add	r3, r2
 800304c:	2207      	movs	r2, #7
 800304e:	fa02 f303 	lsl.w	r3, r2, r3
 8003052:	43da      	mvns	r2, r3
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	400a      	ands	r2, r1
 800305a:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	6919      	ldr	r1, [r3, #16]
 8003062:	683b      	ldr	r3, [r7, #0]
 8003064:	689a      	ldr	r2, [r3, #8]
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	b29b      	uxth	r3, r3
 800306c:	4618      	mov	r0, r3
 800306e:	4603      	mov	r3, r0
 8003070:	005b      	lsls	r3, r3, #1
 8003072:	4403      	add	r3, r0
 8003074:	409a      	lsls	r2, r3
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	430a      	orrs	r2, r1
 800307c:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800307e:	683b      	ldr	r3, [r7, #0]
 8003080:	685b      	ldr	r3, [r3, #4]
 8003082:	2b06      	cmp	r3, #6
 8003084:	d824      	bhi.n	80030d0 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800308c:	683b      	ldr	r3, [r7, #0]
 800308e:	685a      	ldr	r2, [r3, #4]
 8003090:	4613      	mov	r3, r2
 8003092:	009b      	lsls	r3, r3, #2
 8003094:	4413      	add	r3, r2
 8003096:	3b05      	subs	r3, #5
 8003098:	221f      	movs	r2, #31
 800309a:	fa02 f303 	lsl.w	r3, r2, r3
 800309e:	43da      	mvns	r2, r3
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	400a      	ands	r2, r1
 80030a6:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80030ae:	683b      	ldr	r3, [r7, #0]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	b29b      	uxth	r3, r3
 80030b4:	4618      	mov	r0, r3
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	685a      	ldr	r2, [r3, #4]
 80030ba:	4613      	mov	r3, r2
 80030bc:	009b      	lsls	r3, r3, #2
 80030be:	4413      	add	r3, r2
 80030c0:	3b05      	subs	r3, #5
 80030c2:	fa00 f203 	lsl.w	r2, r0, r3
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	430a      	orrs	r2, r1
 80030cc:	635a      	str	r2, [r3, #52]	@ 0x34
 80030ce:	e04c      	b.n	800316a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 80030d0:	683b      	ldr	r3, [r7, #0]
 80030d2:	685b      	ldr	r3, [r3, #4]
 80030d4:	2b0c      	cmp	r3, #12
 80030d6:	d824      	bhi.n	8003122 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80030de:	683b      	ldr	r3, [r7, #0]
 80030e0:	685a      	ldr	r2, [r3, #4]
 80030e2:	4613      	mov	r3, r2
 80030e4:	009b      	lsls	r3, r3, #2
 80030e6:	4413      	add	r3, r2
 80030e8:	3b23      	subs	r3, #35	@ 0x23
 80030ea:	221f      	movs	r2, #31
 80030ec:	fa02 f303 	lsl.w	r3, r2, r3
 80030f0:	43da      	mvns	r2, r3
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	400a      	ands	r2, r1
 80030f8:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003100:	683b      	ldr	r3, [r7, #0]
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	b29b      	uxth	r3, r3
 8003106:	4618      	mov	r0, r3
 8003108:	683b      	ldr	r3, [r7, #0]
 800310a:	685a      	ldr	r2, [r3, #4]
 800310c:	4613      	mov	r3, r2
 800310e:	009b      	lsls	r3, r3, #2
 8003110:	4413      	add	r3, r2
 8003112:	3b23      	subs	r3, #35	@ 0x23
 8003114:	fa00 f203 	lsl.w	r2, r0, r3
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	430a      	orrs	r2, r1
 800311e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003120:	e023      	b.n	800316a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003128:	683b      	ldr	r3, [r7, #0]
 800312a:	685a      	ldr	r2, [r3, #4]
 800312c:	4613      	mov	r3, r2
 800312e:	009b      	lsls	r3, r3, #2
 8003130:	4413      	add	r3, r2
 8003132:	3b41      	subs	r3, #65	@ 0x41
 8003134:	221f      	movs	r2, #31
 8003136:	fa02 f303 	lsl.w	r3, r2, r3
 800313a:	43da      	mvns	r2, r3
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	400a      	ands	r2, r1
 8003142:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800314a:	683b      	ldr	r3, [r7, #0]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	b29b      	uxth	r3, r3
 8003150:	4618      	mov	r0, r3
 8003152:	683b      	ldr	r3, [r7, #0]
 8003154:	685a      	ldr	r2, [r3, #4]
 8003156:	4613      	mov	r3, r2
 8003158:	009b      	lsls	r3, r3, #2
 800315a:	4413      	add	r3, r2
 800315c:	3b41      	subs	r3, #65	@ 0x41
 800315e:	fa00 f203 	lsl.w	r2, r0, r3
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	430a      	orrs	r2, r1
 8003168:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800316a:	4b29      	ldr	r3, [pc, #164]	@ (8003210 <HAL_ADC_ConfigChannel+0x250>)
 800316c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	4a28      	ldr	r2, [pc, #160]	@ (8003214 <HAL_ADC_ConfigChannel+0x254>)
 8003174:	4293      	cmp	r3, r2
 8003176:	d10f      	bne.n	8003198 <HAL_ADC_ConfigChannel+0x1d8>
 8003178:	683b      	ldr	r3, [r7, #0]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	2b12      	cmp	r3, #18
 800317e:	d10b      	bne.n	8003198 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8003180:	68fb      	ldr	r3, [r7, #12]
 8003182:	685b      	ldr	r3, [r3, #4]
 8003184:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	685b      	ldr	r3, [r3, #4]
 8003190:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8003194:	68fb      	ldr	r3, [r7, #12]
 8003196:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	4a1d      	ldr	r2, [pc, #116]	@ (8003214 <HAL_ADC_ConfigChannel+0x254>)
 800319e:	4293      	cmp	r3, r2
 80031a0:	d12b      	bne.n	80031fa <HAL_ADC_ConfigChannel+0x23a>
 80031a2:	683b      	ldr	r3, [r7, #0]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	4a1c      	ldr	r2, [pc, #112]	@ (8003218 <HAL_ADC_ConfigChannel+0x258>)
 80031a8:	4293      	cmp	r3, r2
 80031aa:	d003      	beq.n	80031b4 <HAL_ADC_ConfigChannel+0x1f4>
 80031ac:	683b      	ldr	r3, [r7, #0]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	2b11      	cmp	r3, #17
 80031b2:	d122      	bne.n	80031fa <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 80031b4:	68fb      	ldr	r3, [r7, #12]
 80031b6:	685b      	ldr	r3, [r3, #4]
 80031b8:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80031c0:	68fb      	ldr	r3, [r7, #12]
 80031c2:	685b      	ldr	r3, [r3, #4]
 80031c4:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	4a11      	ldr	r2, [pc, #68]	@ (8003218 <HAL_ADC_ConfigChannel+0x258>)
 80031d2:	4293      	cmp	r3, r2
 80031d4:	d111      	bne.n	80031fa <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80031d6:	4b11      	ldr	r3, [pc, #68]	@ (800321c <HAL_ADC_ConfigChannel+0x25c>)
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	4a11      	ldr	r2, [pc, #68]	@ (8003220 <HAL_ADC_ConfigChannel+0x260>)
 80031dc:	fba2 2303 	umull	r2, r3, r2, r3
 80031e0:	0c9a      	lsrs	r2, r3, #18
 80031e2:	4613      	mov	r3, r2
 80031e4:	009b      	lsls	r3, r3, #2
 80031e6:	4413      	add	r3, r2
 80031e8:	005b      	lsls	r3, r3, #1
 80031ea:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 80031ec:	e002      	b.n	80031f4 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 80031ee:	68bb      	ldr	r3, [r7, #8]
 80031f0:	3b01      	subs	r3, #1
 80031f2:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 80031f4:	68bb      	ldr	r3, [r7, #8]
 80031f6:	2b00      	cmp	r3, #0
 80031f8:	d1f9      	bne.n	80031ee <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	2200      	movs	r2, #0
 80031fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 8003202:	2300      	movs	r3, #0
}
 8003204:	4618      	mov	r0, r3
 8003206:	3714      	adds	r7, #20
 8003208:	46bd      	mov	sp, r7
 800320a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800320e:	4770      	bx	lr
 8003210:	40012300 	.word	0x40012300
 8003214:	40012000 	.word	0x40012000
 8003218:	10000012 	.word	0x10000012
 800321c:	20000008 	.word	0x20000008
 8003220:	431bde83 	.word	0x431bde83

08003224 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 8003224:	b480      	push	{r7}
 8003226:	b085      	sub	sp, #20
 8003228:	af00      	add	r7, sp, #0
 800322a:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800322c:	4b79      	ldr	r3, [pc, #484]	@ (8003414 <ADC_Init+0x1f0>)
 800322e:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	685b      	ldr	r3, [r3, #4]
 8003234:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	685a      	ldr	r2, [r3, #4]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	685b      	ldr	r3, [r3, #4]
 8003244:	431a      	orrs	r2, r3
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	685a      	ldr	r2, [r3, #4]
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003258:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	6859      	ldr	r1, [r3, #4]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	691b      	ldr	r3, [r3, #16]
 8003264:	021a      	lsls	r2, r3, #8
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	430a      	orrs	r2, r1
 800326c:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	685a      	ldr	r2, [r3, #4]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800327c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	6859      	ldr	r1, [r3, #4]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	689a      	ldr	r2, [r3, #8]
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	430a      	orrs	r2, r1
 800328e:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	689a      	ldr	r2, [r3, #8]
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800329e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	6899      	ldr	r1, [r3, #8]
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	68da      	ldr	r2, [r3, #12]
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	430a      	orrs	r2, r1
 80032b0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80032b6:	4a58      	ldr	r2, [pc, #352]	@ (8003418 <ADC_Init+0x1f4>)
 80032b8:	4293      	cmp	r3, r2
 80032ba:	d022      	beq.n	8003302 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	689a      	ldr	r2, [r3, #8]
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80032ca:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	6899      	ldr	r1, [r3, #8]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	430a      	orrs	r2, r1
 80032dc:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	689a      	ldr	r2, [r3, #8]
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80032ec:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	6899      	ldr	r1, [r3, #8]
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	430a      	orrs	r2, r1
 80032fe:	609a      	str	r2, [r3, #8]
 8003300:	e00f      	b.n	8003322 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	689a      	ldr	r2, [r3, #8]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003310:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	689a      	ldr	r2, [r3, #8]
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003320:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	689a      	ldr	r2, [r3, #8]
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	f022 0202 	bic.w	r2, r2, #2
 8003330:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	6899      	ldr	r1, [r3, #8]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	7e1b      	ldrb	r3, [r3, #24]
 800333c:	005a      	lsls	r2, r3, #1
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	430a      	orrs	r2, r1
 8003344:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	f893 3020 	ldrb.w	r3, [r3, #32]
 800334c:	2b00      	cmp	r3, #0
 800334e:	d01b      	beq.n	8003388 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	685a      	ldr	r2, [r3, #4]
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800335e:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	685a      	ldr	r2, [r3, #4]
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	681b      	ldr	r3, [r3, #0]
 800336a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800336e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	6859      	ldr	r1, [r3, #4]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800337a:	3b01      	subs	r3, #1
 800337c:	035a      	lsls	r2, r3, #13
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	430a      	orrs	r2, r1
 8003384:	605a      	str	r2, [r3, #4]
 8003386:	e007      	b.n	8003398 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	685a      	ldr	r2, [r3, #4]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003396:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80033a6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	69db      	ldr	r3, [r3, #28]
 80033b2:	3b01      	subs	r3, #1
 80033b4:	051a      	lsls	r2, r3, #20
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	430a      	orrs	r2, r1
 80033bc:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	689a      	ldr	r2, [r3, #8]
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80033cc:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	6899      	ldr	r1, [r3, #8]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80033da:	025a      	lsls	r2, r3, #9
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	430a      	orrs	r2, r1
 80033e2:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	689a      	ldr	r2, [r3, #8]
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80033f2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	6899      	ldr	r1, [r3, #8]
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	695b      	ldr	r3, [r3, #20]
 80033fe:	029a      	lsls	r2, r3, #10
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	430a      	orrs	r2, r1
 8003406:	609a      	str	r2, [r3, #8]
}
 8003408:	bf00      	nop
 800340a:	3714      	adds	r7, #20
 800340c:	46bd      	mov	sp, r7
 800340e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003412:	4770      	bx	lr
 8003414:	40012300 	.word	0x40012300
 8003418:	0f000001 	.word	0x0f000001

0800341c <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 800341c:	b580      	push	{r7, lr}
 800341e:	b084      	sub	sp, #16
 8003420:	af00      	add	r7, sp, #0
 8003422:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003428:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800342e:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003432:	2b00      	cmp	r3, #0
 8003434:	d13c      	bne.n	80034b0 <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800343a:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	689b      	ldr	r3, [r3, #8]
 8003448:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800344c:	2b00      	cmp	r3, #0
 800344e:	d12b      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003454:	2b00      	cmp	r3, #0
 8003456:	d127      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800345e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003462:	2b00      	cmp	r3, #0
 8003464:	d006      	beq.n	8003474 <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8003466:	68fb      	ldr	r3, [r7, #12]
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	689b      	ldr	r3, [r3, #8]
 800346c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003470:	2b00      	cmp	r3, #0
 8003472:	d119      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	685a      	ldr	r2, [r3, #4]
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	f022 0220 	bic.w	r2, r2, #32
 8003482:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003488:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003494:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003498:	2b00      	cmp	r3, #0
 800349a:	d105      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034a0:	f043 0201 	orr.w	r2, r3, #1
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 80034a8:	68f8      	ldr	r0, [r7, #12]
 80034aa:	f7ff fd61 	bl	8002f70 <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 80034ae:	e00e      	b.n	80034ce <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034b4:	f003 0310 	and.w	r3, r3, #16
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d003      	beq.n	80034c4 <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 80034bc:	68f8      	ldr	r0, [r7, #12]
 80034be:	f7ff fd75 	bl	8002fac <HAL_ADC_ErrorCallback>
}
 80034c2:	e004      	b.n	80034ce <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80034ca:	6878      	ldr	r0, [r7, #4]
 80034cc:	4798      	blx	r3
}
 80034ce:	bf00      	nop
 80034d0:	3710      	adds	r7, #16
 80034d2:	46bd      	mov	sp, r7
 80034d4:	bd80      	pop	{r7, pc}

080034d6 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 80034d6:	b580      	push	{r7, lr}
 80034d8:	b084      	sub	sp, #16
 80034da:	af00      	add	r7, sp, #0
 80034dc:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034e2:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80034e4:	68f8      	ldr	r0, [r7, #12]
 80034e6:	f7ff fd4d 	bl	8002f84 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80034ea:	bf00      	nop
 80034ec:	3710      	adds	r7, #16
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}

080034f2 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 80034f2:	b580      	push	{r7, lr}
 80034f4:	b084      	sub	sp, #16
 80034f6:	af00      	add	r7, sp, #0
 80034f8:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034fe:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	2240      	movs	r2, #64	@ 0x40
 8003504:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 8003506:	68fb      	ldr	r3, [r7, #12]
 8003508:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800350a:	f043 0204 	orr.w	r2, r3, #4
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 8003512:	68f8      	ldr	r0, [r7, #12]
 8003514:	f7ff fd4a 	bl	8002fac <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8003518:	bf00      	nop
 800351a:	3710      	adds	r7, #16
 800351c:	46bd      	mov	sp, r7
 800351e:	bd80      	pop	{r7, pc}

08003520 <HAL_ADCEx_InjectedConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8003520:	b480      	push	{r7}
 8003522:	b083      	sub	sp, #12
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_InjectedConvCpltCallback could be implemented in the user file
   */
}
 8003528:	bf00      	nop
 800352a:	370c      	adds	r7, #12
 800352c:	46bd      	mov	sp, r7
 800352e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003532:	4770      	bx	lr

08003534 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003534:	b480      	push	{r7}
 8003536:	b085      	sub	sp, #20
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	f003 0307 	and.w	r3, r3, #7
 8003542:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003544:	4b0c      	ldr	r3, [pc, #48]	@ (8003578 <__NVIC_SetPriorityGrouping+0x44>)
 8003546:	68db      	ldr	r3, [r3, #12]
 8003548:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800354a:	68ba      	ldr	r2, [r7, #8]
 800354c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003550:	4013      	ands	r3, r2
 8003552:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003558:	68bb      	ldr	r3, [r7, #8]
 800355a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800355c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003560:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003564:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003566:	4a04      	ldr	r2, [pc, #16]	@ (8003578 <__NVIC_SetPriorityGrouping+0x44>)
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	60d3      	str	r3, [r2, #12]
}
 800356c:	bf00      	nop
 800356e:	3714      	adds	r7, #20
 8003570:	46bd      	mov	sp, r7
 8003572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003576:	4770      	bx	lr
 8003578:	e000ed00 	.word	0xe000ed00

0800357c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800357c:	b480      	push	{r7}
 800357e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003580:	4b04      	ldr	r3, [pc, #16]	@ (8003594 <__NVIC_GetPriorityGrouping+0x18>)
 8003582:	68db      	ldr	r3, [r3, #12]
 8003584:	0a1b      	lsrs	r3, r3, #8
 8003586:	f003 0307 	and.w	r3, r3, #7
}
 800358a:	4618      	mov	r0, r3
 800358c:	46bd      	mov	sp, r7
 800358e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003592:	4770      	bx	lr
 8003594:	e000ed00 	.word	0xe000ed00

08003598 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003598:	b480      	push	{r7}
 800359a:	b083      	sub	sp, #12
 800359c:	af00      	add	r7, sp, #0
 800359e:	4603      	mov	r3, r0
 80035a0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80035a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	db0b      	blt.n	80035c2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035aa:	79fb      	ldrb	r3, [r7, #7]
 80035ac:	f003 021f 	and.w	r2, r3, #31
 80035b0:	4907      	ldr	r1, [pc, #28]	@ (80035d0 <__NVIC_EnableIRQ+0x38>)
 80035b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035b6:	095b      	lsrs	r3, r3, #5
 80035b8:	2001      	movs	r0, #1
 80035ba:	fa00 f202 	lsl.w	r2, r0, r2
 80035be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80035c2:	bf00      	nop
 80035c4:	370c      	adds	r7, #12
 80035c6:	46bd      	mov	sp, r7
 80035c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035cc:	4770      	bx	lr
 80035ce:	bf00      	nop
 80035d0:	e000e100 	.word	0xe000e100

080035d4 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80035d4:	b480      	push	{r7}
 80035d6:	b083      	sub	sp, #12
 80035d8:	af00      	add	r7, sp, #0
 80035da:	4603      	mov	r3, r0
 80035dc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80035de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	db12      	blt.n	800360c <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035e6:	79fb      	ldrb	r3, [r7, #7]
 80035e8:	f003 021f 	and.w	r2, r3, #31
 80035ec:	490a      	ldr	r1, [pc, #40]	@ (8003618 <__NVIC_DisableIRQ+0x44>)
 80035ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035f2:	095b      	lsrs	r3, r3, #5
 80035f4:	2001      	movs	r0, #1
 80035f6:	fa00 f202 	lsl.w	r2, r0, r2
 80035fa:	3320      	adds	r3, #32
 80035fc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003600:	f3bf 8f4f 	dsb	sy
}
 8003604:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003606:	f3bf 8f6f 	isb	sy
}
 800360a:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 800360c:	bf00      	nop
 800360e:	370c      	adds	r7, #12
 8003610:	46bd      	mov	sp, r7
 8003612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003616:	4770      	bx	lr
 8003618:	e000e100 	.word	0xe000e100

0800361c <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 800361c:	b480      	push	{r7}
 800361e:	b083      	sub	sp, #12
 8003620:	af00      	add	r7, sp, #0
 8003622:	4603      	mov	r3, r0
 8003624:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003626:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800362a:	2b00      	cmp	r3, #0
 800362c:	db0c      	blt.n	8003648 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800362e:	79fb      	ldrb	r3, [r7, #7]
 8003630:	f003 021f 	and.w	r2, r3, #31
 8003634:	4907      	ldr	r1, [pc, #28]	@ (8003654 <__NVIC_ClearPendingIRQ+0x38>)
 8003636:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800363a:	095b      	lsrs	r3, r3, #5
 800363c:	2001      	movs	r0, #1
 800363e:	fa00 f202 	lsl.w	r2, r0, r2
 8003642:	3360      	adds	r3, #96	@ 0x60
 8003644:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8003648:	bf00      	nop
 800364a:	370c      	adds	r7, #12
 800364c:	46bd      	mov	sp, r7
 800364e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003652:	4770      	bx	lr
 8003654:	e000e100 	.word	0xe000e100

08003658 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003658:	b480      	push	{r7}
 800365a:	b083      	sub	sp, #12
 800365c:	af00      	add	r7, sp, #0
 800365e:	4603      	mov	r3, r0
 8003660:	6039      	str	r1, [r7, #0]
 8003662:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003664:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003668:	2b00      	cmp	r3, #0
 800366a:	db0a      	blt.n	8003682 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800366c:	683b      	ldr	r3, [r7, #0]
 800366e:	b2da      	uxtb	r2, r3
 8003670:	490c      	ldr	r1, [pc, #48]	@ (80036a4 <__NVIC_SetPriority+0x4c>)
 8003672:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003676:	0112      	lsls	r2, r2, #4
 8003678:	b2d2      	uxtb	r2, r2
 800367a:	440b      	add	r3, r1
 800367c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8003680:	e00a      	b.n	8003698 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003682:	683b      	ldr	r3, [r7, #0]
 8003684:	b2da      	uxtb	r2, r3
 8003686:	4908      	ldr	r1, [pc, #32]	@ (80036a8 <__NVIC_SetPriority+0x50>)
 8003688:	79fb      	ldrb	r3, [r7, #7]
 800368a:	f003 030f 	and.w	r3, r3, #15
 800368e:	3b04      	subs	r3, #4
 8003690:	0112      	lsls	r2, r2, #4
 8003692:	b2d2      	uxtb	r2, r2
 8003694:	440b      	add	r3, r1
 8003696:	761a      	strb	r2, [r3, #24]
}
 8003698:	bf00      	nop
 800369a:	370c      	adds	r7, #12
 800369c:	46bd      	mov	sp, r7
 800369e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a2:	4770      	bx	lr
 80036a4:	e000e100 	.word	0xe000e100
 80036a8:	e000ed00 	.word	0xe000ed00

080036ac <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80036ac:	b480      	push	{r7}
 80036ae:	b089      	sub	sp, #36	@ 0x24
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	60f8      	str	r0, [r7, #12]
 80036b4:	60b9      	str	r1, [r7, #8]
 80036b6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	f003 0307 	and.w	r3, r3, #7
 80036be:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80036c0:	69fb      	ldr	r3, [r7, #28]
 80036c2:	f1c3 0307 	rsb	r3, r3, #7
 80036c6:	2b04      	cmp	r3, #4
 80036c8:	bf28      	it	cs
 80036ca:	2304      	movcs	r3, #4
 80036cc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80036ce:	69fb      	ldr	r3, [r7, #28]
 80036d0:	3304      	adds	r3, #4
 80036d2:	2b06      	cmp	r3, #6
 80036d4:	d902      	bls.n	80036dc <NVIC_EncodePriority+0x30>
 80036d6:	69fb      	ldr	r3, [r7, #28]
 80036d8:	3b03      	subs	r3, #3
 80036da:	e000      	b.n	80036de <NVIC_EncodePriority+0x32>
 80036dc:	2300      	movs	r3, #0
 80036de:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80036e0:	f04f 32ff 	mov.w	r2, #4294967295
 80036e4:	69bb      	ldr	r3, [r7, #24]
 80036e6:	fa02 f303 	lsl.w	r3, r2, r3
 80036ea:	43da      	mvns	r2, r3
 80036ec:	68bb      	ldr	r3, [r7, #8]
 80036ee:	401a      	ands	r2, r3
 80036f0:	697b      	ldr	r3, [r7, #20]
 80036f2:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80036f4:	f04f 31ff 	mov.w	r1, #4294967295
 80036f8:	697b      	ldr	r3, [r7, #20]
 80036fa:	fa01 f303 	lsl.w	r3, r1, r3
 80036fe:	43d9      	mvns	r1, r3
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003704:	4313      	orrs	r3, r2
         );
}
 8003706:	4618      	mov	r0, r3
 8003708:	3724      	adds	r7, #36	@ 0x24
 800370a:	46bd      	mov	sp, r7
 800370c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003710:	4770      	bx	lr
	...

08003714 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003714:	b580      	push	{r7, lr}
 8003716:	b082      	sub	sp, #8
 8003718:	af00      	add	r7, sp, #0
 800371a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	3b01      	subs	r3, #1
 8003720:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003724:	d301      	bcc.n	800372a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003726:	2301      	movs	r3, #1
 8003728:	e00f      	b.n	800374a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800372a:	4a0a      	ldr	r2, [pc, #40]	@ (8003754 <SysTick_Config+0x40>)
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	3b01      	subs	r3, #1
 8003730:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003732:	210f      	movs	r1, #15
 8003734:	f04f 30ff 	mov.w	r0, #4294967295
 8003738:	f7ff ff8e 	bl	8003658 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800373c:	4b05      	ldr	r3, [pc, #20]	@ (8003754 <SysTick_Config+0x40>)
 800373e:	2200      	movs	r2, #0
 8003740:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003742:	4b04      	ldr	r3, [pc, #16]	@ (8003754 <SysTick_Config+0x40>)
 8003744:	2207      	movs	r2, #7
 8003746:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003748:	2300      	movs	r3, #0
}
 800374a:	4618      	mov	r0, r3
 800374c:	3708      	adds	r7, #8
 800374e:	46bd      	mov	sp, r7
 8003750:	bd80      	pop	{r7, pc}
 8003752:	bf00      	nop
 8003754:	e000e010 	.word	0xe000e010

08003758 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003758:	b580      	push	{r7, lr}
 800375a:	b082      	sub	sp, #8
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003760:	6878      	ldr	r0, [r7, #4]
 8003762:	f7ff fee7 	bl	8003534 <__NVIC_SetPriorityGrouping>
}
 8003766:	bf00      	nop
 8003768:	3708      	adds	r7, #8
 800376a:	46bd      	mov	sp, r7
 800376c:	bd80      	pop	{r7, pc}

0800376e <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800376e:	b580      	push	{r7, lr}
 8003770:	b086      	sub	sp, #24
 8003772:	af00      	add	r7, sp, #0
 8003774:	4603      	mov	r3, r0
 8003776:	60b9      	str	r1, [r7, #8]
 8003778:	607a      	str	r2, [r7, #4]
 800377a:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 800377c:	2300      	movs	r3, #0
 800377e:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8003780:	f7ff fefc 	bl	800357c <__NVIC_GetPriorityGrouping>
 8003784:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003786:	687a      	ldr	r2, [r7, #4]
 8003788:	68b9      	ldr	r1, [r7, #8]
 800378a:	6978      	ldr	r0, [r7, #20]
 800378c:	f7ff ff8e 	bl	80036ac <NVIC_EncodePriority>
 8003790:	4602      	mov	r2, r0
 8003792:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003796:	4611      	mov	r1, r2
 8003798:	4618      	mov	r0, r3
 800379a:	f7ff ff5d 	bl	8003658 <__NVIC_SetPriority>
}
 800379e:	bf00      	nop
 80037a0:	3718      	adds	r7, #24
 80037a2:	46bd      	mov	sp, r7
 80037a4:	bd80      	pop	{r7, pc}

080037a6 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80037a6:	b580      	push	{r7, lr}
 80037a8:	b082      	sub	sp, #8
 80037aa:	af00      	add	r7, sp, #0
 80037ac:	4603      	mov	r3, r0
 80037ae:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80037b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037b4:	4618      	mov	r0, r3
 80037b6:	f7ff feef 	bl	8003598 <__NVIC_EnableIRQ>
}
 80037ba:	bf00      	nop
 80037bc:	3708      	adds	r7, #8
 80037be:	46bd      	mov	sp, r7
 80037c0:	bd80      	pop	{r7, pc}

080037c2 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80037c2:	b580      	push	{r7, lr}
 80037c4:	b082      	sub	sp, #8
 80037c6:	af00      	add	r7, sp, #0
 80037c8:	4603      	mov	r3, r0
 80037ca:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80037cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037d0:	4618      	mov	r0, r3
 80037d2:	f7ff feff 	bl	80035d4 <__NVIC_DisableIRQ>
}
 80037d6:	bf00      	nop
 80037d8:	3708      	adds	r7, #8
 80037da:	46bd      	mov	sp, r7
 80037dc:	bd80      	pop	{r7, pc}

080037de <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80037de:	b580      	push	{r7, lr}
 80037e0:	b082      	sub	sp, #8
 80037e2:	af00      	add	r7, sp, #0
 80037e4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80037e6:	6878      	ldr	r0, [r7, #4]
 80037e8:	f7ff ff94 	bl	8003714 <SysTick_Config>
 80037ec:	4603      	mov	r3, r0
}
 80037ee:	4618      	mov	r0, r3
 80037f0:	3708      	adds	r7, #8
 80037f2:	46bd      	mov	sp, r7
 80037f4:	bd80      	pop	{r7, pc}

080037f6 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 80037f6:	b580      	push	{r7, lr}
 80037f8:	b082      	sub	sp, #8
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	4603      	mov	r3, r0
 80037fe:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8003800:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003804:	4618      	mov	r0, r3
 8003806:	f7ff ff09 	bl	800361c <__NVIC_ClearPendingIRQ>
}
 800380a:	bf00      	nop
 800380c:	3708      	adds	r7, #8
 800380e:	46bd      	mov	sp, r7
 8003810:	bd80      	pop	{r7, pc}

08003812 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003812:	b580      	push	{r7, lr}
 8003814:	b082      	sub	sp, #8
 8003816:	af00      	add	r7, sp, #0
 8003818:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	2b00      	cmp	r3, #0
 800381e:	d101      	bne.n	8003824 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003820:	2301      	movs	r3, #1
 8003822:	e00e      	b.n	8003842 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	795b      	ldrb	r3, [r3, #5]
 8003828:	b2db      	uxtb	r3, r3
 800382a:	2b00      	cmp	r3, #0
 800382c:	d105      	bne.n	800383a <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	2200      	movs	r2, #0
 8003832:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003834:	6878      	ldr	r0, [r7, #4]
 8003836:	f7fe f8a9 	bl	800198c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	2201      	movs	r2, #1
 800383e:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8003840:	2300      	movs	r3, #0
}
 8003842:	4618      	mov	r0, r3
 8003844:	3708      	adds	r7, #8
 8003846:	46bd      	mov	sp, r7
 8003848:	bd80      	pop	{r7, pc}
	...

0800384c <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800384c:	b580      	push	{r7, lr}
 800384e:	b086      	sub	sp, #24
 8003850:	af00      	add	r7, sp, #0
 8003852:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8003854:	2300      	movs	r3, #0
 8003856:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8003858:	f7ff f8f6 	bl	8002a48 <HAL_GetTick>
 800385c:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	2b00      	cmp	r3, #0
 8003862:	d101      	bne.n	8003868 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8003864:	2301      	movs	r3, #1
 8003866:	e099      	b.n	800399c <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	2202      	movs	r2, #2
 800386c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	2200      	movs	r2, #0
 8003874:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	681a      	ldr	r2, [r3, #0]
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	f022 0201 	bic.w	r2, r2, #1
 8003886:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003888:	e00f      	b.n	80038aa <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800388a:	f7ff f8dd 	bl	8002a48 <HAL_GetTick>
 800388e:	4602      	mov	r2, r0
 8003890:	693b      	ldr	r3, [r7, #16]
 8003892:	1ad3      	subs	r3, r2, r3
 8003894:	2b05      	cmp	r3, #5
 8003896:	d908      	bls.n	80038aa <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2220      	movs	r2, #32
 800389c:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2203      	movs	r2, #3
 80038a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 80038a6:	2303      	movs	r3, #3
 80038a8:	e078      	b.n	800399c <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	681b      	ldr	r3, [r3, #0]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	f003 0301 	and.w	r3, r3, #1
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d1e8      	bne.n	800388a <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80038c0:	697a      	ldr	r2, [r7, #20]
 80038c2:	4b38      	ldr	r3, [pc, #224]	@ (80039a4 <HAL_DMA_Init+0x158>)
 80038c4:	4013      	ands	r3, r2
 80038c6:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	685a      	ldr	r2, [r3, #4]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	689b      	ldr	r3, [r3, #8]
 80038d0:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038d6:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	691b      	ldr	r3, [r3, #16]
 80038dc:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038e2:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	699b      	ldr	r3, [r3, #24]
 80038e8:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038ee:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	6a1b      	ldr	r3, [r3, #32]
 80038f4:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038f6:	697a      	ldr	r2, [r7, #20]
 80038f8:	4313      	orrs	r3, r2
 80038fa:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003900:	2b04      	cmp	r3, #4
 8003902:	d107      	bne.n	8003914 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800390c:	4313      	orrs	r3, r2
 800390e:	697a      	ldr	r2, [r7, #20]
 8003910:	4313      	orrs	r3, r2
 8003912:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	697a      	ldr	r2, [r7, #20]
 800391a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	695b      	ldr	r3, [r3, #20]
 8003922:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003924:	697b      	ldr	r3, [r7, #20]
 8003926:	f023 0307 	bic.w	r3, r3, #7
 800392a:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003930:	697a      	ldr	r2, [r7, #20]
 8003932:	4313      	orrs	r3, r2
 8003934:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800393a:	2b04      	cmp	r3, #4
 800393c:	d117      	bne.n	800396e <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003942:	697a      	ldr	r2, [r7, #20]
 8003944:	4313      	orrs	r3, r2
 8003946:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800394c:	2b00      	cmp	r3, #0
 800394e:	d00e      	beq.n	800396e <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8003950:	6878      	ldr	r0, [r7, #4]
 8003952:	f000 fa91 	bl	8003e78 <DMA_CheckFifoParam>
 8003956:	4603      	mov	r3, r0
 8003958:	2b00      	cmp	r3, #0
 800395a:	d008      	beq.n	800396e <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	2240      	movs	r2, #64	@ 0x40
 8003960:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	2201      	movs	r2, #1
 8003966:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 800396a:	2301      	movs	r3, #1
 800396c:	e016      	b.n	800399c <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	697a      	ldr	r2, [r7, #20]
 8003974:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003976:	6878      	ldr	r0, [r7, #4]
 8003978:	f000 fa48 	bl	8003e0c <DMA_CalcBaseAndBitshift>
 800397c:	4603      	mov	r3, r0
 800397e:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003984:	223f      	movs	r2, #63	@ 0x3f
 8003986:	409a      	lsls	r2, r3
 8003988:	68fb      	ldr	r3, [r7, #12]
 800398a:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	2200      	movs	r2, #0
 8003990:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	2201      	movs	r2, #1
 8003996:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 800399a:	2300      	movs	r3, #0
}
 800399c:	4618      	mov	r0, r3
 800399e:	3718      	adds	r7, #24
 80039a0:	46bd      	mov	sp, r7
 80039a2:	bd80      	pop	{r7, pc}
 80039a4:	f010803f 	.word	0xf010803f

080039a8 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80039a8:	b580      	push	{r7, lr}
 80039aa:	b086      	sub	sp, #24
 80039ac:	af00      	add	r7, sp, #0
 80039ae:	60f8      	str	r0, [r7, #12]
 80039b0:	60b9      	str	r1, [r7, #8]
 80039b2:	607a      	str	r2, [r7, #4]
 80039b4:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80039b6:	2300      	movs	r3, #0
 80039b8:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039be:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80039c6:	2b01      	cmp	r3, #1
 80039c8:	d101      	bne.n	80039ce <HAL_DMA_Start_IT+0x26>
 80039ca:	2302      	movs	r3, #2
 80039cc:	e040      	b.n	8003a50 <HAL_DMA_Start_IT+0xa8>
 80039ce:	68fb      	ldr	r3, [r7, #12]
 80039d0:	2201      	movs	r2, #1
 80039d2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 80039d6:	68fb      	ldr	r3, [r7, #12]
 80039d8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80039dc:	b2db      	uxtb	r3, r3
 80039de:	2b01      	cmp	r3, #1
 80039e0:	d12f      	bne.n	8003a42 <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	2202      	movs	r2, #2
 80039e6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	2200      	movs	r2, #0
 80039ee:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 80039f0:	683b      	ldr	r3, [r7, #0]
 80039f2:	687a      	ldr	r2, [r7, #4]
 80039f4:	68b9      	ldr	r1, [r7, #8]
 80039f6:	68f8      	ldr	r0, [r7, #12]
 80039f8:	f000 f9da 	bl	8003db0 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80039fc:	68fb      	ldr	r3, [r7, #12]
 80039fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a00:	223f      	movs	r2, #63	@ 0x3f
 8003a02:	409a      	lsls	r2, r3
 8003a04:	693b      	ldr	r3, [r7, #16]
 8003a06:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003a08:	68fb      	ldr	r3, [r7, #12]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	681a      	ldr	r2, [r3, #0]
 8003a0e:	68fb      	ldr	r3, [r7, #12]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	f042 0216 	orr.w	r2, r2, #22
 8003a16:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	d007      	beq.n	8003a30 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8003a20:	68fb      	ldr	r3, [r7, #12]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	681a      	ldr	r2, [r3, #0]
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	f042 0208 	orr.w	r2, r2, #8
 8003a2e:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	681a      	ldr	r2, [r3, #0]
 8003a36:	68fb      	ldr	r3, [r7, #12]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	f042 0201 	orr.w	r2, r2, #1
 8003a3e:	601a      	str	r2, [r3, #0]
 8003a40:	e005      	b.n	8003a4e <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8003a42:	68fb      	ldr	r3, [r7, #12]
 8003a44:	2200      	movs	r2, #0
 8003a46:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8003a4a:	2302      	movs	r3, #2
 8003a4c:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8003a4e:	7dfb      	ldrb	r3, [r7, #23]
}
 8003a50:	4618      	mov	r0, r3
 8003a52:	3718      	adds	r7, #24
 8003a54:	46bd      	mov	sp, r7
 8003a56:	bd80      	pop	{r7, pc}

08003a58 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8003a58:	b480      	push	{r7}
 8003a5a:	b083      	sub	sp, #12
 8003a5c:	af00      	add	r7, sp, #0
 8003a5e:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003a66:	b2db      	uxtb	r3, r3
 8003a68:	2b02      	cmp	r3, #2
 8003a6a:	d004      	beq.n	8003a76 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	2280      	movs	r2, #128	@ 0x80
 8003a70:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 8003a72:	2301      	movs	r3, #1
 8003a74:	e00c      	b.n	8003a90 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	2205      	movs	r2, #5
 8003a7a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	681a      	ldr	r2, [r3, #0]
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	f022 0201 	bic.w	r2, r2, #1
 8003a8c:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8003a8e:	2300      	movs	r3, #0
}
 8003a90:	4618      	mov	r0, r3
 8003a92:	370c      	adds	r7, #12
 8003a94:	46bd      	mov	sp, r7
 8003a96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a9a:	4770      	bx	lr

08003a9c <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003a9c:	b580      	push	{r7, lr}
 8003a9e:	b086      	sub	sp, #24
 8003aa0:	af00      	add	r7, sp, #0
 8003aa2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8003aa4:	2300      	movs	r3, #0
 8003aa6:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003aa8:	4b8e      	ldr	r3, [pc, #568]	@ (8003ce4 <HAL_DMA_IRQHandler+0x248>)
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	4a8e      	ldr	r2, [pc, #568]	@ (8003ce8 <HAL_DMA_IRQHandler+0x24c>)
 8003aae:	fba2 2303 	umull	r2, r3, r2, r3
 8003ab2:	0a9b      	lsrs	r3, r3, #10
 8003ab4:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003aba:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003abc:	693b      	ldr	r3, [r7, #16]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ac6:	2208      	movs	r2, #8
 8003ac8:	409a      	lsls	r2, r3
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	4013      	ands	r3, r2
 8003ace:	2b00      	cmp	r3, #0
 8003ad0:	d01a      	beq.n	8003b08 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	f003 0304 	and.w	r3, r3, #4
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	d013      	beq.n	8003b08 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	681a      	ldr	r2, [r3, #0]
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	f022 0204 	bic.w	r2, r2, #4
 8003aee:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003af4:	2208      	movs	r2, #8
 8003af6:	409a      	lsls	r2, r3
 8003af8:	693b      	ldr	r3, [r7, #16]
 8003afa:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b00:	f043 0201 	orr.w	r2, r3, #1
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b0c:	2201      	movs	r2, #1
 8003b0e:	409a      	lsls	r2, r3
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	4013      	ands	r3, r2
 8003b14:	2b00      	cmp	r3, #0
 8003b16:	d012      	beq.n	8003b3e <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	695b      	ldr	r3, [r3, #20]
 8003b1e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	d00b      	beq.n	8003b3e <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b2a:	2201      	movs	r2, #1
 8003b2c:	409a      	lsls	r2, r3
 8003b2e:	693b      	ldr	r3, [r7, #16]
 8003b30:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b36:	f043 0202 	orr.w	r2, r3, #2
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b42:	2204      	movs	r2, #4
 8003b44:	409a      	lsls	r2, r3
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	4013      	ands	r3, r2
 8003b4a:	2b00      	cmp	r3, #0
 8003b4c:	d012      	beq.n	8003b74 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	f003 0302 	and.w	r3, r3, #2
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d00b      	beq.n	8003b74 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b60:	2204      	movs	r2, #4
 8003b62:	409a      	lsls	r2, r3
 8003b64:	693b      	ldr	r3, [r7, #16]
 8003b66:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b6c:	f043 0204 	orr.w	r2, r3, #4
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b78:	2210      	movs	r2, #16
 8003b7a:	409a      	lsls	r2, r3
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	4013      	ands	r3, r2
 8003b80:	2b00      	cmp	r3, #0
 8003b82:	d043      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	f003 0308 	and.w	r3, r3, #8
 8003b8e:	2b00      	cmp	r3, #0
 8003b90:	d03c      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b96:	2210      	movs	r2, #16
 8003b98:	409a      	lsls	r2, r3
 8003b9a:	693b      	ldr	r3, [r7, #16]
 8003b9c:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d018      	beq.n	8003bde <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d108      	bne.n	8003bcc <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d024      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bc6:	6878      	ldr	r0, [r7, #4]
 8003bc8:	4798      	blx	r3
 8003bca:	e01f      	b.n	8003c0c <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bd0:	2b00      	cmp	r3, #0
 8003bd2:	d01b      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bd8:	6878      	ldr	r0, [r7, #4]
 8003bda:	4798      	blx	r3
 8003bdc:	e016      	b.n	8003c0c <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d107      	bne.n	8003bfc <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	681a      	ldr	r2, [r3, #0]
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	f022 0208 	bic.w	r2, r2, #8
 8003bfa:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d003      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c08:	6878      	ldr	r0, [r7, #4]
 8003c0a:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c10:	2220      	movs	r2, #32
 8003c12:	409a      	lsls	r2, r3
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	4013      	ands	r3, r2
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	f000 808f 	beq.w	8003d3c <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	f003 0310 	and.w	r3, r3, #16
 8003c28:	2b00      	cmp	r3, #0
 8003c2a:	f000 8087 	beq.w	8003d3c <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c32:	2220      	movs	r2, #32
 8003c34:	409a      	lsls	r2, r3
 8003c36:	693b      	ldr	r3, [r7, #16]
 8003c38:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003c40:	b2db      	uxtb	r3, r3
 8003c42:	2b05      	cmp	r3, #5
 8003c44:	d136      	bne.n	8003cb4 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	681a      	ldr	r2, [r3, #0]
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	f022 0216 	bic.w	r2, r2, #22
 8003c54:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	695a      	ldr	r2, [r3, #20]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003c64:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	d103      	bne.n	8003c76 <HAL_DMA_IRQHandler+0x1da>
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d007      	beq.n	8003c86 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	681a      	ldr	r2, [r3, #0]
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	f022 0208 	bic.w	r2, r2, #8
 8003c84:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c8a:	223f      	movs	r2, #63	@ 0x3f
 8003c8c:	409a      	lsls	r2, r3
 8003c8e:	693b      	ldr	r3, [r7, #16]
 8003c90:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	2201      	movs	r2, #1
 8003c96:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	2200      	movs	r2, #0
 8003c9e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d07e      	beq.n	8003da8 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003cae:	6878      	ldr	r0, [r7, #4]
 8003cb0:	4798      	blx	r3
        }
        return;
 8003cb2:	e079      	b.n	8003da8 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003cbe:	2b00      	cmp	r3, #0
 8003cc0:	d01d      	beq.n	8003cfe <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	d10d      	bne.n	8003cec <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cd4:	2b00      	cmp	r3, #0
 8003cd6:	d031      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cdc:	6878      	ldr	r0, [r7, #4]
 8003cde:	4798      	blx	r3
 8003ce0:	e02c      	b.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
 8003ce2:	bf00      	nop
 8003ce4:	20000008 	.word	0x20000008
 8003ce8:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	d023      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003cf8:	6878      	ldr	r0, [r7, #4]
 8003cfa:	4798      	blx	r3
 8003cfc:	e01e      	b.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	d10f      	bne.n	8003d2c <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	681a      	ldr	r2, [r3, #0]
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	f022 0210 	bic.w	r2, r2, #16
 8003d1a:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	2201      	movs	r2, #1
 8003d20:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	2200      	movs	r2, #0
 8003d28:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d003      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d38:	6878      	ldr	r0, [r7, #4]
 8003d3a:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d032      	beq.n	8003daa <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d48:	f003 0301 	and.w	r3, r3, #1
 8003d4c:	2b00      	cmp	r3, #0
 8003d4e:	d022      	beq.n	8003d96 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	2205      	movs	r2, #5
 8003d54:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	681a      	ldr	r2, [r3, #0]
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	f022 0201 	bic.w	r2, r2, #1
 8003d66:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003d68:	68bb      	ldr	r3, [r7, #8]
 8003d6a:	3301      	adds	r3, #1
 8003d6c:	60bb      	str	r3, [r7, #8]
 8003d6e:	697a      	ldr	r2, [r7, #20]
 8003d70:	429a      	cmp	r2, r3
 8003d72:	d307      	bcc.n	8003d84 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	681b      	ldr	r3, [r3, #0]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	f003 0301 	and.w	r3, r3, #1
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	d1f2      	bne.n	8003d68 <HAL_DMA_IRQHandler+0x2cc>
 8003d82:	e000      	b.n	8003d86 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003d84:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	2201      	movs	r2, #1
 8003d8a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	2200      	movs	r2, #0
 8003d92:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d005      	beq.n	8003daa <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003da2:	6878      	ldr	r0, [r7, #4]
 8003da4:	4798      	blx	r3
 8003da6:	e000      	b.n	8003daa <HAL_DMA_IRQHandler+0x30e>
        return;
 8003da8:	bf00      	nop
    }
  }
}
 8003daa:	3718      	adds	r7, #24
 8003dac:	46bd      	mov	sp, r7
 8003dae:	bd80      	pop	{r7, pc}

08003db0 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003db0:	b480      	push	{r7}
 8003db2:	b085      	sub	sp, #20
 8003db4:	af00      	add	r7, sp, #0
 8003db6:	60f8      	str	r0, [r7, #12]
 8003db8:	60b9      	str	r1, [r7, #8]
 8003dba:	607a      	str	r2, [r7, #4]
 8003dbc:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	681a      	ldr	r2, [r3, #0]
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003dcc:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003dce:	68fb      	ldr	r3, [r7, #12]
 8003dd0:	681b      	ldr	r3, [r3, #0]
 8003dd2:	683a      	ldr	r2, [r7, #0]
 8003dd4:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	689b      	ldr	r3, [r3, #8]
 8003dda:	2b40      	cmp	r3, #64	@ 0x40
 8003ddc:	d108      	bne.n	8003df0 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003dde:	68fb      	ldr	r3, [r7, #12]
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	687a      	ldr	r2, [r7, #4]
 8003de4:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	68ba      	ldr	r2, [r7, #8]
 8003dec:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003dee:	e007      	b.n	8003e00 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	68ba      	ldr	r2, [r7, #8]
 8003df6:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	687a      	ldr	r2, [r7, #4]
 8003dfe:	60da      	str	r2, [r3, #12]
}
 8003e00:	bf00      	nop
 8003e02:	3714      	adds	r7, #20
 8003e04:	46bd      	mov	sp, r7
 8003e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e0a:	4770      	bx	lr

08003e0c <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003e0c:	b480      	push	{r7}
 8003e0e:	b085      	sub	sp, #20
 8003e10:	af00      	add	r7, sp, #0
 8003e12:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	b2db      	uxtb	r3, r3
 8003e1a:	3b10      	subs	r3, #16
 8003e1c:	4a14      	ldr	r2, [pc, #80]	@ (8003e70 <DMA_CalcBaseAndBitshift+0x64>)
 8003e1e:	fba2 2303 	umull	r2, r3, r2, r3
 8003e22:	091b      	lsrs	r3, r3, #4
 8003e24:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003e26:	4a13      	ldr	r2, [pc, #76]	@ (8003e74 <DMA_CalcBaseAndBitshift+0x68>)
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	4413      	add	r3, r2
 8003e2c:	781b      	ldrb	r3, [r3, #0]
 8003e2e:	461a      	mov	r2, r3
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	2b03      	cmp	r3, #3
 8003e38:	d909      	bls.n	8003e4e <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	681b      	ldr	r3, [r3, #0]
 8003e3e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e42:	f023 0303 	bic.w	r3, r3, #3
 8003e46:	1d1a      	adds	r2, r3, #4
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	659a      	str	r2, [r3, #88]	@ 0x58
 8003e4c:	e007      	b.n	8003e5e <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e56:	f023 0303 	bic.w	r3, r3, #3
 8003e5a:	687a      	ldr	r2, [r7, #4]
 8003e5c:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003e62:	4618      	mov	r0, r3
 8003e64:	3714      	adds	r7, #20
 8003e66:	46bd      	mov	sp, r7
 8003e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e6c:	4770      	bx	lr
 8003e6e:	bf00      	nop
 8003e70:	aaaaaaab 	.word	0xaaaaaaab
 8003e74:	080243e8 	.word	0x080243e8

08003e78 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003e78:	b480      	push	{r7}
 8003e7a:	b085      	sub	sp, #20
 8003e7c:	af00      	add	r7, sp, #0
 8003e7e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003e80:	2300      	movs	r3, #0
 8003e82:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e88:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	699b      	ldr	r3, [r3, #24]
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d11f      	bne.n	8003ed2 <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003e92:	68bb      	ldr	r3, [r7, #8]
 8003e94:	2b03      	cmp	r3, #3
 8003e96:	d856      	bhi.n	8003f46 <DMA_CheckFifoParam+0xce>
 8003e98:	a201      	add	r2, pc, #4	@ (adr r2, 8003ea0 <DMA_CheckFifoParam+0x28>)
 8003e9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e9e:	bf00      	nop
 8003ea0:	08003eb1 	.word	0x08003eb1
 8003ea4:	08003ec3 	.word	0x08003ec3
 8003ea8:	08003eb1 	.word	0x08003eb1
 8003eac:	08003f47 	.word	0x08003f47
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003eb4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003eb8:	2b00      	cmp	r3, #0
 8003eba:	d046      	beq.n	8003f4a <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003ebc:	2301      	movs	r3, #1
 8003ebe:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003ec0:	e043      	b.n	8003f4a <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ec6:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003eca:	d140      	bne.n	8003f4e <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003ecc:	2301      	movs	r3, #1
 8003ece:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003ed0:	e03d      	b.n	8003f4e <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	699b      	ldr	r3, [r3, #24]
 8003ed6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003eda:	d121      	bne.n	8003f20 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003edc:	68bb      	ldr	r3, [r7, #8]
 8003ede:	2b03      	cmp	r3, #3
 8003ee0:	d837      	bhi.n	8003f52 <DMA_CheckFifoParam+0xda>
 8003ee2:	a201      	add	r2, pc, #4	@ (adr r2, 8003ee8 <DMA_CheckFifoParam+0x70>)
 8003ee4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ee8:	08003ef9 	.word	0x08003ef9
 8003eec:	08003eff 	.word	0x08003eff
 8003ef0:	08003ef9 	.word	0x08003ef9
 8003ef4:	08003f11 	.word	0x08003f11
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003ef8:	2301      	movs	r3, #1
 8003efa:	73fb      	strb	r3, [r7, #15]
      break;
 8003efc:	e030      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f02:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d025      	beq.n	8003f56 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003f0a:	2301      	movs	r3, #1
 8003f0c:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003f0e:	e022      	b.n	8003f56 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f14:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003f18:	d11f      	bne.n	8003f5a <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003f1e:	e01c      	b.n	8003f5a <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003f20:	68bb      	ldr	r3, [r7, #8]
 8003f22:	2b02      	cmp	r3, #2
 8003f24:	d903      	bls.n	8003f2e <DMA_CheckFifoParam+0xb6>
 8003f26:	68bb      	ldr	r3, [r7, #8]
 8003f28:	2b03      	cmp	r3, #3
 8003f2a:	d003      	beq.n	8003f34 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003f2c:	e018      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003f2e:	2301      	movs	r3, #1
 8003f30:	73fb      	strb	r3, [r7, #15]
      break;
 8003f32:	e015      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f38:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d00e      	beq.n	8003f5e <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003f40:	2301      	movs	r3, #1
 8003f42:	73fb      	strb	r3, [r7, #15]
      break;
 8003f44:	e00b      	b.n	8003f5e <DMA_CheckFifoParam+0xe6>
      break;
 8003f46:	bf00      	nop
 8003f48:	e00a      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f4a:	bf00      	nop
 8003f4c:	e008      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f4e:	bf00      	nop
 8003f50:	e006      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f52:	bf00      	nop
 8003f54:	e004      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f56:	bf00      	nop
 8003f58:	e002      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;   
 8003f5a:	bf00      	nop
 8003f5c:	e000      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f5e:	bf00      	nop
    }
  } 
  
  return status; 
 8003f60:	7bfb      	ldrb	r3, [r7, #15]
}
 8003f62:	4618      	mov	r0, r3
 8003f64:	3714      	adds	r7, #20
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr
 8003f6e:	bf00      	nop

08003f70 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003f70:	b480      	push	{r7}
 8003f72:	b089      	sub	sp, #36	@ 0x24
 8003f74:	af00      	add	r7, sp, #0
 8003f76:	6078      	str	r0, [r7, #4]
 8003f78:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003f7a:	2300      	movs	r3, #0
 8003f7c:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003f7e:	2300      	movs	r3, #0
 8003f80:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003f82:	2300      	movs	r3, #0
 8003f84:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003f86:	2300      	movs	r3, #0
 8003f88:	61fb      	str	r3, [r7, #28]
 8003f8a:	e165      	b.n	8004258 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003f8c:	2201      	movs	r2, #1
 8003f8e:	69fb      	ldr	r3, [r7, #28]
 8003f90:	fa02 f303 	lsl.w	r3, r2, r3
 8003f94:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003f96:	683b      	ldr	r3, [r7, #0]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	697a      	ldr	r2, [r7, #20]
 8003f9c:	4013      	ands	r3, r2
 8003f9e:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003fa0:	693a      	ldr	r2, [r7, #16]
 8003fa2:	697b      	ldr	r3, [r7, #20]
 8003fa4:	429a      	cmp	r2, r3
 8003fa6:	f040 8154 	bne.w	8004252 <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003faa:	683b      	ldr	r3, [r7, #0]
 8003fac:	685b      	ldr	r3, [r3, #4]
 8003fae:	f003 0303 	and.w	r3, r3, #3
 8003fb2:	2b01      	cmp	r3, #1
 8003fb4:	d005      	beq.n	8003fc2 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003fb6:	683b      	ldr	r3, [r7, #0]
 8003fb8:	685b      	ldr	r3, [r3, #4]
 8003fba:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003fbe:	2b02      	cmp	r3, #2
 8003fc0:	d130      	bne.n	8004024 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	689b      	ldr	r3, [r3, #8]
 8003fc6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003fc8:	69fb      	ldr	r3, [r7, #28]
 8003fca:	005b      	lsls	r3, r3, #1
 8003fcc:	2203      	movs	r2, #3
 8003fce:	fa02 f303 	lsl.w	r3, r2, r3
 8003fd2:	43db      	mvns	r3, r3
 8003fd4:	69ba      	ldr	r2, [r7, #24]
 8003fd6:	4013      	ands	r3, r2
 8003fd8:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003fda:	683b      	ldr	r3, [r7, #0]
 8003fdc:	68da      	ldr	r2, [r3, #12]
 8003fde:	69fb      	ldr	r3, [r7, #28]
 8003fe0:	005b      	lsls	r3, r3, #1
 8003fe2:	fa02 f303 	lsl.w	r3, r2, r3
 8003fe6:	69ba      	ldr	r2, [r7, #24]
 8003fe8:	4313      	orrs	r3, r2
 8003fea:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	69ba      	ldr	r2, [r7, #24]
 8003ff0:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	685b      	ldr	r3, [r3, #4]
 8003ff6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003ff8:	2201      	movs	r2, #1
 8003ffa:	69fb      	ldr	r3, [r7, #28]
 8003ffc:	fa02 f303 	lsl.w	r3, r2, r3
 8004000:	43db      	mvns	r3, r3
 8004002:	69ba      	ldr	r2, [r7, #24]
 8004004:	4013      	ands	r3, r2
 8004006:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004008:	683b      	ldr	r3, [r7, #0]
 800400a:	685b      	ldr	r3, [r3, #4]
 800400c:	091b      	lsrs	r3, r3, #4
 800400e:	f003 0201 	and.w	r2, r3, #1
 8004012:	69fb      	ldr	r3, [r7, #28]
 8004014:	fa02 f303 	lsl.w	r3, r2, r3
 8004018:	69ba      	ldr	r2, [r7, #24]
 800401a:	4313      	orrs	r3, r2
 800401c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	69ba      	ldr	r2, [r7, #24]
 8004022:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004024:	683b      	ldr	r3, [r7, #0]
 8004026:	685b      	ldr	r3, [r3, #4]
 8004028:	f003 0303 	and.w	r3, r3, #3
 800402c:	2b03      	cmp	r3, #3
 800402e:	d017      	beq.n	8004060 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	68db      	ldr	r3, [r3, #12]
 8004034:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004036:	69fb      	ldr	r3, [r7, #28]
 8004038:	005b      	lsls	r3, r3, #1
 800403a:	2203      	movs	r2, #3
 800403c:	fa02 f303 	lsl.w	r3, r2, r3
 8004040:	43db      	mvns	r3, r3
 8004042:	69ba      	ldr	r2, [r7, #24]
 8004044:	4013      	ands	r3, r2
 8004046:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004048:	683b      	ldr	r3, [r7, #0]
 800404a:	689a      	ldr	r2, [r3, #8]
 800404c:	69fb      	ldr	r3, [r7, #28]
 800404e:	005b      	lsls	r3, r3, #1
 8004050:	fa02 f303 	lsl.w	r3, r2, r3
 8004054:	69ba      	ldr	r2, [r7, #24]
 8004056:	4313      	orrs	r3, r2
 8004058:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	69ba      	ldr	r2, [r7, #24]
 800405e:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004060:	683b      	ldr	r3, [r7, #0]
 8004062:	685b      	ldr	r3, [r3, #4]
 8004064:	f003 0303 	and.w	r3, r3, #3
 8004068:	2b02      	cmp	r3, #2
 800406a:	d123      	bne.n	80040b4 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800406c:	69fb      	ldr	r3, [r7, #28]
 800406e:	08da      	lsrs	r2, r3, #3
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	3208      	adds	r2, #8
 8004074:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004078:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800407a:	69fb      	ldr	r3, [r7, #28]
 800407c:	f003 0307 	and.w	r3, r3, #7
 8004080:	009b      	lsls	r3, r3, #2
 8004082:	220f      	movs	r2, #15
 8004084:	fa02 f303 	lsl.w	r3, r2, r3
 8004088:	43db      	mvns	r3, r3
 800408a:	69ba      	ldr	r2, [r7, #24]
 800408c:	4013      	ands	r3, r2
 800408e:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004090:	683b      	ldr	r3, [r7, #0]
 8004092:	691a      	ldr	r2, [r3, #16]
 8004094:	69fb      	ldr	r3, [r7, #28]
 8004096:	f003 0307 	and.w	r3, r3, #7
 800409a:	009b      	lsls	r3, r3, #2
 800409c:	fa02 f303 	lsl.w	r3, r2, r3
 80040a0:	69ba      	ldr	r2, [r7, #24]
 80040a2:	4313      	orrs	r3, r2
 80040a4:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80040a6:	69fb      	ldr	r3, [r7, #28]
 80040a8:	08da      	lsrs	r2, r3, #3
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	3208      	adds	r2, #8
 80040ae:	69b9      	ldr	r1, [r7, #24]
 80040b0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	681b      	ldr	r3, [r3, #0]
 80040b8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80040ba:	69fb      	ldr	r3, [r7, #28]
 80040bc:	005b      	lsls	r3, r3, #1
 80040be:	2203      	movs	r2, #3
 80040c0:	fa02 f303 	lsl.w	r3, r2, r3
 80040c4:	43db      	mvns	r3, r3
 80040c6:	69ba      	ldr	r2, [r7, #24]
 80040c8:	4013      	ands	r3, r2
 80040ca:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80040cc:	683b      	ldr	r3, [r7, #0]
 80040ce:	685b      	ldr	r3, [r3, #4]
 80040d0:	f003 0203 	and.w	r2, r3, #3
 80040d4:	69fb      	ldr	r3, [r7, #28]
 80040d6:	005b      	lsls	r3, r3, #1
 80040d8:	fa02 f303 	lsl.w	r3, r2, r3
 80040dc:	69ba      	ldr	r2, [r7, #24]
 80040de:	4313      	orrs	r3, r2
 80040e0:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	69ba      	ldr	r2, [r7, #24]
 80040e6:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80040e8:	683b      	ldr	r3, [r7, #0]
 80040ea:	685b      	ldr	r3, [r3, #4]
 80040ec:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	f000 80ae 	beq.w	8004252 <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80040f6:	2300      	movs	r3, #0
 80040f8:	60fb      	str	r3, [r7, #12]
 80040fa:	4b5d      	ldr	r3, [pc, #372]	@ (8004270 <HAL_GPIO_Init+0x300>)
 80040fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80040fe:	4a5c      	ldr	r2, [pc, #368]	@ (8004270 <HAL_GPIO_Init+0x300>)
 8004100:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004104:	6453      	str	r3, [r2, #68]	@ 0x44
 8004106:	4b5a      	ldr	r3, [pc, #360]	@ (8004270 <HAL_GPIO_Init+0x300>)
 8004108:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800410a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800410e:	60fb      	str	r3, [r7, #12]
 8004110:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8004112:	4a58      	ldr	r2, [pc, #352]	@ (8004274 <HAL_GPIO_Init+0x304>)
 8004114:	69fb      	ldr	r3, [r7, #28]
 8004116:	089b      	lsrs	r3, r3, #2
 8004118:	3302      	adds	r3, #2
 800411a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800411e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004120:	69fb      	ldr	r3, [r7, #28]
 8004122:	f003 0303 	and.w	r3, r3, #3
 8004126:	009b      	lsls	r3, r3, #2
 8004128:	220f      	movs	r2, #15
 800412a:	fa02 f303 	lsl.w	r3, r2, r3
 800412e:	43db      	mvns	r3, r3
 8004130:	69ba      	ldr	r2, [r7, #24]
 8004132:	4013      	ands	r3, r2
 8004134:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	4a4f      	ldr	r2, [pc, #316]	@ (8004278 <HAL_GPIO_Init+0x308>)
 800413a:	4293      	cmp	r3, r2
 800413c:	d025      	beq.n	800418a <HAL_GPIO_Init+0x21a>
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	4a4e      	ldr	r2, [pc, #312]	@ (800427c <HAL_GPIO_Init+0x30c>)
 8004142:	4293      	cmp	r3, r2
 8004144:	d01f      	beq.n	8004186 <HAL_GPIO_Init+0x216>
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	4a4d      	ldr	r2, [pc, #308]	@ (8004280 <HAL_GPIO_Init+0x310>)
 800414a:	4293      	cmp	r3, r2
 800414c:	d019      	beq.n	8004182 <HAL_GPIO_Init+0x212>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	4a4c      	ldr	r2, [pc, #304]	@ (8004284 <HAL_GPIO_Init+0x314>)
 8004152:	4293      	cmp	r3, r2
 8004154:	d013      	beq.n	800417e <HAL_GPIO_Init+0x20e>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	4a4b      	ldr	r2, [pc, #300]	@ (8004288 <HAL_GPIO_Init+0x318>)
 800415a:	4293      	cmp	r3, r2
 800415c:	d00d      	beq.n	800417a <HAL_GPIO_Init+0x20a>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	4a4a      	ldr	r2, [pc, #296]	@ (800428c <HAL_GPIO_Init+0x31c>)
 8004162:	4293      	cmp	r3, r2
 8004164:	d007      	beq.n	8004176 <HAL_GPIO_Init+0x206>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	4a49      	ldr	r2, [pc, #292]	@ (8004290 <HAL_GPIO_Init+0x320>)
 800416a:	4293      	cmp	r3, r2
 800416c:	d101      	bne.n	8004172 <HAL_GPIO_Init+0x202>
 800416e:	2306      	movs	r3, #6
 8004170:	e00c      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004172:	2307      	movs	r3, #7
 8004174:	e00a      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004176:	2305      	movs	r3, #5
 8004178:	e008      	b.n	800418c <HAL_GPIO_Init+0x21c>
 800417a:	2304      	movs	r3, #4
 800417c:	e006      	b.n	800418c <HAL_GPIO_Init+0x21c>
 800417e:	2303      	movs	r3, #3
 8004180:	e004      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004182:	2302      	movs	r3, #2
 8004184:	e002      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004186:	2301      	movs	r3, #1
 8004188:	e000      	b.n	800418c <HAL_GPIO_Init+0x21c>
 800418a:	2300      	movs	r3, #0
 800418c:	69fa      	ldr	r2, [r7, #28]
 800418e:	f002 0203 	and.w	r2, r2, #3
 8004192:	0092      	lsls	r2, r2, #2
 8004194:	4093      	lsls	r3, r2
 8004196:	69ba      	ldr	r2, [r7, #24]
 8004198:	4313      	orrs	r3, r2
 800419a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 800419c:	4935      	ldr	r1, [pc, #212]	@ (8004274 <HAL_GPIO_Init+0x304>)
 800419e:	69fb      	ldr	r3, [r7, #28]
 80041a0:	089b      	lsrs	r3, r3, #2
 80041a2:	3302      	adds	r3, #2
 80041a4:	69ba      	ldr	r2, [r7, #24]
 80041a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80041aa:	4b3a      	ldr	r3, [pc, #232]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041ac:	689b      	ldr	r3, [r3, #8]
 80041ae:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80041b0:	693b      	ldr	r3, [r7, #16]
 80041b2:	43db      	mvns	r3, r3
 80041b4:	69ba      	ldr	r2, [r7, #24]
 80041b6:	4013      	ands	r3, r2
 80041b8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80041ba:	683b      	ldr	r3, [r7, #0]
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d003      	beq.n	80041ce <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 80041c6:	69ba      	ldr	r2, [r7, #24]
 80041c8:	693b      	ldr	r3, [r7, #16]
 80041ca:	4313      	orrs	r3, r2
 80041cc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80041ce:	4a31      	ldr	r2, [pc, #196]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041d0:	69bb      	ldr	r3, [r7, #24]
 80041d2:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80041d4:	4b2f      	ldr	r3, [pc, #188]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041d6:	68db      	ldr	r3, [r3, #12]
 80041d8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80041da:	693b      	ldr	r3, [r7, #16]
 80041dc:	43db      	mvns	r3, r3
 80041de:	69ba      	ldr	r2, [r7, #24]
 80041e0:	4013      	ands	r3, r2
 80041e2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80041e4:	683b      	ldr	r3, [r7, #0]
 80041e6:	685b      	ldr	r3, [r3, #4]
 80041e8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d003      	beq.n	80041f8 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 80041f0:	69ba      	ldr	r2, [r7, #24]
 80041f2:	693b      	ldr	r3, [r7, #16]
 80041f4:	4313      	orrs	r3, r2
 80041f6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 80041f8:	4a26      	ldr	r2, [pc, #152]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041fa:	69bb      	ldr	r3, [r7, #24]
 80041fc:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 80041fe:	4b25      	ldr	r3, [pc, #148]	@ (8004294 <HAL_GPIO_Init+0x324>)
 8004200:	685b      	ldr	r3, [r3, #4]
 8004202:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004204:	693b      	ldr	r3, [r7, #16]
 8004206:	43db      	mvns	r3, r3
 8004208:	69ba      	ldr	r2, [r7, #24]
 800420a:	4013      	ands	r3, r2
 800420c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800420e:	683b      	ldr	r3, [r7, #0]
 8004210:	685b      	ldr	r3, [r3, #4]
 8004212:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004216:	2b00      	cmp	r3, #0
 8004218:	d003      	beq.n	8004222 <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 800421a:	69ba      	ldr	r2, [r7, #24]
 800421c:	693b      	ldr	r3, [r7, #16]
 800421e:	4313      	orrs	r3, r2
 8004220:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004222:	4a1c      	ldr	r2, [pc, #112]	@ (8004294 <HAL_GPIO_Init+0x324>)
 8004224:	69bb      	ldr	r3, [r7, #24]
 8004226:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004228:	4b1a      	ldr	r3, [pc, #104]	@ (8004294 <HAL_GPIO_Init+0x324>)
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800422e:	693b      	ldr	r3, [r7, #16]
 8004230:	43db      	mvns	r3, r3
 8004232:	69ba      	ldr	r2, [r7, #24]
 8004234:	4013      	ands	r3, r2
 8004236:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004238:	683b      	ldr	r3, [r7, #0]
 800423a:	685b      	ldr	r3, [r3, #4]
 800423c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004240:	2b00      	cmp	r3, #0
 8004242:	d003      	beq.n	800424c <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8004244:	69ba      	ldr	r2, [r7, #24]
 8004246:	693b      	ldr	r3, [r7, #16]
 8004248:	4313      	orrs	r3, r2
 800424a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 800424c:	4a11      	ldr	r2, [pc, #68]	@ (8004294 <HAL_GPIO_Init+0x324>)
 800424e:	69bb      	ldr	r3, [r7, #24]
 8004250:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004252:	69fb      	ldr	r3, [r7, #28]
 8004254:	3301      	adds	r3, #1
 8004256:	61fb      	str	r3, [r7, #28]
 8004258:	69fb      	ldr	r3, [r7, #28]
 800425a:	2b0f      	cmp	r3, #15
 800425c:	f67f ae96 	bls.w	8003f8c <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004260:	bf00      	nop
 8004262:	bf00      	nop
 8004264:	3724      	adds	r7, #36	@ 0x24
 8004266:	46bd      	mov	sp, r7
 8004268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800426c:	4770      	bx	lr
 800426e:	bf00      	nop
 8004270:	40023800 	.word	0x40023800
 8004274:	40013800 	.word	0x40013800
 8004278:	40020000 	.word	0x40020000
 800427c:	40020400 	.word	0x40020400
 8004280:	40020800 	.word	0x40020800
 8004284:	40020c00 	.word	0x40020c00
 8004288:	40021000 	.word	0x40021000
 800428c:	40021400 	.word	0x40021400
 8004290:	40021800 	.word	0x40021800
 8004294:	40013c00 	.word	0x40013c00

08004298 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004298:	b480      	push	{r7}
 800429a:	b085      	sub	sp, #20
 800429c:	af00      	add	r7, sp, #0
 800429e:	6078      	str	r0, [r7, #4]
 80042a0:	460b      	mov	r3, r1
 80042a2:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	691a      	ldr	r2, [r3, #16]
 80042a8:	887b      	ldrh	r3, [r7, #2]
 80042aa:	4013      	ands	r3, r2
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d002      	beq.n	80042b6 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80042b0:	2301      	movs	r3, #1
 80042b2:	73fb      	strb	r3, [r7, #15]
 80042b4:	e001      	b.n	80042ba <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80042b6:	2300      	movs	r3, #0
 80042b8:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80042ba:	7bfb      	ldrb	r3, [r7, #15]
}
 80042bc:	4618      	mov	r0, r3
 80042be:	3714      	adds	r7, #20
 80042c0:	46bd      	mov	sp, r7
 80042c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c6:	4770      	bx	lr

080042c8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80042c8:	b480      	push	{r7}
 80042ca:	b083      	sub	sp, #12
 80042cc:	af00      	add	r7, sp, #0
 80042ce:	6078      	str	r0, [r7, #4]
 80042d0:	460b      	mov	r3, r1
 80042d2:	807b      	strh	r3, [r7, #2]
 80042d4:	4613      	mov	r3, r2
 80042d6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80042d8:	787b      	ldrb	r3, [r7, #1]
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d003      	beq.n	80042e6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80042de:	887a      	ldrh	r2, [r7, #2]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80042e4:	e003      	b.n	80042ee <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80042e6:	887b      	ldrh	r3, [r7, #2]
 80042e8:	041a      	lsls	r2, r3, #16
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	619a      	str	r2, [r3, #24]
}
 80042ee:	bf00      	nop
 80042f0:	370c      	adds	r7, #12
 80042f2:	46bd      	mov	sp, r7
 80042f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f8:	4770      	bx	lr

080042fa <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80042fa:	b480      	push	{r7}
 80042fc:	b085      	sub	sp, #20
 80042fe:	af00      	add	r7, sp, #0
 8004300:	6078      	str	r0, [r7, #4]
 8004302:	460b      	mov	r3, r1
 8004304:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	695b      	ldr	r3, [r3, #20]
 800430a:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800430c:	887a      	ldrh	r2, [r7, #2]
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	4013      	ands	r3, r2
 8004312:	041a      	lsls	r2, r3, #16
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	43d9      	mvns	r1, r3
 8004318:	887b      	ldrh	r3, [r7, #2]
 800431a:	400b      	ands	r3, r1
 800431c:	431a      	orrs	r2, r3
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	619a      	str	r2, [r3, #24]
}
 8004322:	bf00      	nop
 8004324:	3714      	adds	r7, #20
 8004326:	46bd      	mov	sp, r7
 8004328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800432c:	4770      	bx	lr
	...

08004330 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004330:	b580      	push	{r7, lr}
 8004332:	b082      	sub	sp, #8
 8004334:	af00      	add	r7, sp, #0
 8004336:	4603      	mov	r3, r0
 8004338:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800433a:	4b08      	ldr	r3, [pc, #32]	@ (800435c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800433c:	695a      	ldr	r2, [r3, #20]
 800433e:	88fb      	ldrh	r3, [r7, #6]
 8004340:	4013      	ands	r3, r2
 8004342:	2b00      	cmp	r3, #0
 8004344:	d006      	beq.n	8004354 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004346:	4a05      	ldr	r2, [pc, #20]	@ (800435c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004348:	88fb      	ldrh	r3, [r7, #6]
 800434a:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800434c:	88fb      	ldrh	r3, [r7, #6]
 800434e:	4618      	mov	r0, r3
 8004350:	f7fe f8be 	bl	80024d0 <HAL_GPIO_EXTI_Callback>
  }
}
 8004354:	bf00      	nop
 8004356:	3708      	adds	r7, #8
 8004358:	46bd      	mov	sp, r7
 800435a:	bd80      	pop	{r7, pc}
 800435c:	40013c00 	.word	0x40013c00

08004360 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004360:	b580      	push	{r7, lr}
 8004362:	b084      	sub	sp, #16
 8004364:	af00      	add	r7, sp, #0
 8004366:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	2b00      	cmp	r3, #0
 800436c:	d101      	bne.n	8004372 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800436e:	2301      	movs	r3, #1
 8004370:	e12b      	b.n	80045ca <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004378:	b2db      	uxtb	r3, r3
 800437a:	2b00      	cmp	r3, #0
 800437c:	d106      	bne.n	800438c <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	2200      	movs	r2, #0
 8004382:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8004386:	6878      	ldr	r0, [r7, #4]
 8004388:	f7fd fb22 	bl	80019d0 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	2224      	movs	r2, #36	@ 0x24
 8004390:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	681a      	ldr	r2, [r3, #0]
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	f022 0201 	bic.w	r2, r2, #1
 80043a2:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	681a      	ldr	r2, [r3, #0]
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80043b2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	681a      	ldr	r2, [r3, #0]
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80043c2:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80043c4:	f001 f908 	bl	80055d8 <HAL_RCC_GetPCLK1Freq>
 80043c8:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	685b      	ldr	r3, [r3, #4]
 80043ce:	4a81      	ldr	r2, [pc, #516]	@ (80045d4 <HAL_I2C_Init+0x274>)
 80043d0:	4293      	cmp	r3, r2
 80043d2:	d807      	bhi.n	80043e4 <HAL_I2C_Init+0x84>
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	4a80      	ldr	r2, [pc, #512]	@ (80045d8 <HAL_I2C_Init+0x278>)
 80043d8:	4293      	cmp	r3, r2
 80043da:	bf94      	ite	ls
 80043dc:	2301      	movls	r3, #1
 80043de:	2300      	movhi	r3, #0
 80043e0:	b2db      	uxtb	r3, r3
 80043e2:	e006      	b.n	80043f2 <HAL_I2C_Init+0x92>
 80043e4:	68fb      	ldr	r3, [r7, #12]
 80043e6:	4a7d      	ldr	r2, [pc, #500]	@ (80045dc <HAL_I2C_Init+0x27c>)
 80043e8:	4293      	cmp	r3, r2
 80043ea:	bf94      	ite	ls
 80043ec:	2301      	movls	r3, #1
 80043ee:	2300      	movhi	r3, #0
 80043f0:	b2db      	uxtb	r3, r3
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d001      	beq.n	80043fa <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 80043f6:	2301      	movs	r3, #1
 80043f8:	e0e7      	b.n	80045ca <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	4a78      	ldr	r2, [pc, #480]	@ (80045e0 <HAL_I2C_Init+0x280>)
 80043fe:	fba2 2303 	umull	r2, r3, r2, r3
 8004402:	0c9b      	lsrs	r3, r3, #18
 8004404:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	685b      	ldr	r3, [r3, #4]
 800440c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	68ba      	ldr	r2, [r7, #8]
 8004416:	430a      	orrs	r2, r1
 8004418:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	6a1b      	ldr	r3, [r3, #32]
 8004420:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	685b      	ldr	r3, [r3, #4]
 8004428:	4a6a      	ldr	r2, [pc, #424]	@ (80045d4 <HAL_I2C_Init+0x274>)
 800442a:	4293      	cmp	r3, r2
 800442c:	d802      	bhi.n	8004434 <HAL_I2C_Init+0xd4>
 800442e:	68bb      	ldr	r3, [r7, #8]
 8004430:	3301      	adds	r3, #1
 8004432:	e009      	b.n	8004448 <HAL_I2C_Init+0xe8>
 8004434:	68bb      	ldr	r3, [r7, #8]
 8004436:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800443a:	fb02 f303 	mul.w	r3, r2, r3
 800443e:	4a69      	ldr	r2, [pc, #420]	@ (80045e4 <HAL_I2C_Init+0x284>)
 8004440:	fba2 2303 	umull	r2, r3, r2, r3
 8004444:	099b      	lsrs	r3, r3, #6
 8004446:	3301      	adds	r3, #1
 8004448:	687a      	ldr	r2, [r7, #4]
 800444a:	6812      	ldr	r2, [r2, #0]
 800444c:	430b      	orrs	r3, r1
 800444e:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	69db      	ldr	r3, [r3, #28]
 8004456:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800445a:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	685b      	ldr	r3, [r3, #4]
 8004462:	495c      	ldr	r1, [pc, #368]	@ (80045d4 <HAL_I2C_Init+0x274>)
 8004464:	428b      	cmp	r3, r1
 8004466:	d819      	bhi.n	800449c <HAL_I2C_Init+0x13c>
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	1e59      	subs	r1, r3, #1
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	685b      	ldr	r3, [r3, #4]
 8004470:	005b      	lsls	r3, r3, #1
 8004472:	fbb1 f3f3 	udiv	r3, r1, r3
 8004476:	1c59      	adds	r1, r3, #1
 8004478:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800447c:	400b      	ands	r3, r1
 800447e:	2b00      	cmp	r3, #0
 8004480:	d00a      	beq.n	8004498 <HAL_I2C_Init+0x138>
 8004482:	68fb      	ldr	r3, [r7, #12]
 8004484:	1e59      	subs	r1, r3, #1
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	685b      	ldr	r3, [r3, #4]
 800448a:	005b      	lsls	r3, r3, #1
 800448c:	fbb1 f3f3 	udiv	r3, r1, r3
 8004490:	3301      	adds	r3, #1
 8004492:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004496:	e051      	b.n	800453c <HAL_I2C_Init+0x1dc>
 8004498:	2304      	movs	r3, #4
 800449a:	e04f      	b.n	800453c <HAL_I2C_Init+0x1dc>
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	689b      	ldr	r3, [r3, #8]
 80044a0:	2b00      	cmp	r3, #0
 80044a2:	d111      	bne.n	80044c8 <HAL_I2C_Init+0x168>
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	1e58      	subs	r0, r3, #1
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	6859      	ldr	r1, [r3, #4]
 80044ac:	460b      	mov	r3, r1
 80044ae:	005b      	lsls	r3, r3, #1
 80044b0:	440b      	add	r3, r1
 80044b2:	fbb0 f3f3 	udiv	r3, r0, r3
 80044b6:	3301      	adds	r3, #1
 80044b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044bc:	2b00      	cmp	r3, #0
 80044be:	bf0c      	ite	eq
 80044c0:	2301      	moveq	r3, #1
 80044c2:	2300      	movne	r3, #0
 80044c4:	b2db      	uxtb	r3, r3
 80044c6:	e012      	b.n	80044ee <HAL_I2C_Init+0x18e>
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	1e58      	subs	r0, r3, #1
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	6859      	ldr	r1, [r3, #4]
 80044d0:	460b      	mov	r3, r1
 80044d2:	009b      	lsls	r3, r3, #2
 80044d4:	440b      	add	r3, r1
 80044d6:	0099      	lsls	r1, r3, #2
 80044d8:	440b      	add	r3, r1
 80044da:	fbb0 f3f3 	udiv	r3, r0, r3
 80044de:	3301      	adds	r3, #1
 80044e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	bf0c      	ite	eq
 80044e8:	2301      	moveq	r3, #1
 80044ea:	2300      	movne	r3, #0
 80044ec:	b2db      	uxtb	r3, r3
 80044ee:	2b00      	cmp	r3, #0
 80044f0:	d001      	beq.n	80044f6 <HAL_I2C_Init+0x196>
 80044f2:	2301      	movs	r3, #1
 80044f4:	e022      	b.n	800453c <HAL_I2C_Init+0x1dc>
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	689b      	ldr	r3, [r3, #8]
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d10e      	bne.n	800451c <HAL_I2C_Init+0x1bc>
 80044fe:	68fb      	ldr	r3, [r7, #12]
 8004500:	1e58      	subs	r0, r3, #1
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	6859      	ldr	r1, [r3, #4]
 8004506:	460b      	mov	r3, r1
 8004508:	005b      	lsls	r3, r3, #1
 800450a:	440b      	add	r3, r1
 800450c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004510:	3301      	adds	r3, #1
 8004512:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004516:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800451a:	e00f      	b.n	800453c <HAL_I2C_Init+0x1dc>
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	1e58      	subs	r0, r3, #1
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	6859      	ldr	r1, [r3, #4]
 8004524:	460b      	mov	r3, r1
 8004526:	009b      	lsls	r3, r3, #2
 8004528:	440b      	add	r3, r1
 800452a:	0099      	lsls	r1, r3, #2
 800452c:	440b      	add	r3, r1
 800452e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004532:	3301      	adds	r3, #1
 8004534:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004538:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800453c:	6879      	ldr	r1, [r7, #4]
 800453e:	6809      	ldr	r1, [r1, #0]
 8004540:	4313      	orrs	r3, r2
 8004542:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	69da      	ldr	r2, [r3, #28]
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	6a1b      	ldr	r3, [r3, #32]
 8004556:	431a      	orrs	r2, r3
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	430a      	orrs	r2, r1
 800455e:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	689b      	ldr	r3, [r3, #8]
 8004566:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800456a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800456e:	687a      	ldr	r2, [r7, #4]
 8004570:	6911      	ldr	r1, [r2, #16]
 8004572:	687a      	ldr	r2, [r7, #4]
 8004574:	68d2      	ldr	r2, [r2, #12]
 8004576:	4311      	orrs	r1, r2
 8004578:	687a      	ldr	r2, [r7, #4]
 800457a:	6812      	ldr	r2, [r2, #0]
 800457c:	430b      	orrs	r3, r1
 800457e:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	681b      	ldr	r3, [r3, #0]
 8004584:	68db      	ldr	r3, [r3, #12]
 8004586:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	695a      	ldr	r2, [r3, #20]
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	699b      	ldr	r3, [r3, #24]
 8004592:	431a      	orrs	r2, r3
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	430a      	orrs	r2, r1
 800459a:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	681a      	ldr	r2, [r3, #0]
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	f042 0201 	orr.w	r2, r2, #1
 80045aa:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	2200      	movs	r2, #0
 80045b0:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	2220      	movs	r2, #32
 80045b6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	2200      	movs	r2, #0
 80045be:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	2200      	movs	r2, #0
 80045c4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 80045c8:	2300      	movs	r3, #0
}
 80045ca:	4618      	mov	r0, r3
 80045cc:	3710      	adds	r7, #16
 80045ce:	46bd      	mov	sp, r7
 80045d0:	bd80      	pop	{r7, pc}
 80045d2:	bf00      	nop
 80045d4:	000186a0 	.word	0x000186a0
 80045d8:	001e847f 	.word	0x001e847f
 80045dc:	003d08ff 	.word	0x003d08ff
 80045e0:	431bde83 	.word	0x431bde83
 80045e4:	10624dd3 	.word	0x10624dd3

080045e8 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80045e8:	b580      	push	{r7, lr}
 80045ea:	b088      	sub	sp, #32
 80045ec:	af02      	add	r7, sp, #8
 80045ee:	60f8      	str	r0, [r7, #12]
 80045f0:	607a      	str	r2, [r7, #4]
 80045f2:	461a      	mov	r2, r3
 80045f4:	460b      	mov	r3, r1
 80045f6:	817b      	strh	r3, [r7, #10]
 80045f8:	4613      	mov	r3, r2
 80045fa:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80045fc:	f7fe fa24 	bl	8002a48 <HAL_GetTick>
 8004600:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004602:	68fb      	ldr	r3, [r7, #12]
 8004604:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004608:	b2db      	uxtb	r3, r3
 800460a:	2b20      	cmp	r3, #32
 800460c:	f040 80e0 	bne.w	80047d0 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004610:	697b      	ldr	r3, [r7, #20]
 8004612:	9300      	str	r3, [sp, #0]
 8004614:	2319      	movs	r3, #25
 8004616:	2201      	movs	r2, #1
 8004618:	4970      	ldr	r1, [pc, #448]	@ (80047dc <HAL_I2C_Master_Transmit+0x1f4>)
 800461a:	68f8      	ldr	r0, [r7, #12]
 800461c:	f000 fc64 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004620:	4603      	mov	r3, r0
 8004622:	2b00      	cmp	r3, #0
 8004624:	d001      	beq.n	800462a <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8004626:	2302      	movs	r3, #2
 8004628:	e0d3      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800462a:	68fb      	ldr	r3, [r7, #12]
 800462c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004630:	2b01      	cmp	r3, #1
 8004632:	d101      	bne.n	8004638 <HAL_I2C_Master_Transmit+0x50>
 8004634:	2302      	movs	r3, #2
 8004636:	e0cc      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	2201      	movs	r2, #1
 800463c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	f003 0301 	and.w	r3, r3, #1
 800464a:	2b01      	cmp	r3, #1
 800464c:	d007      	beq.n	800465e <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	681a      	ldr	r2, [r3, #0]
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	f042 0201 	orr.w	r2, r2, #1
 800465c:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	681a      	ldr	r2, [r3, #0]
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800466c:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	2221      	movs	r2, #33	@ 0x21
 8004672:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	2210      	movs	r2, #16
 800467a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800467e:	68fb      	ldr	r3, [r7, #12]
 8004680:	2200      	movs	r2, #0
 8004682:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004684:	68fb      	ldr	r3, [r7, #12]
 8004686:	687a      	ldr	r2, [r7, #4]
 8004688:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	893a      	ldrh	r2, [r7, #8]
 800468e:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004694:	b29a      	uxth	r2, r3
 8004696:	68fb      	ldr	r3, [r7, #12]
 8004698:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	4a50      	ldr	r2, [pc, #320]	@ (80047e0 <HAL_I2C_Master_Transmit+0x1f8>)
 800469e:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80046a0:	8979      	ldrh	r1, [r7, #10]
 80046a2:	697b      	ldr	r3, [r7, #20]
 80046a4:	6a3a      	ldr	r2, [r7, #32]
 80046a6:	68f8      	ldr	r0, [r7, #12]
 80046a8:	f000 face 	bl	8004c48 <I2C_MasterRequestWrite>
 80046ac:	4603      	mov	r3, r0
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d001      	beq.n	80046b6 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80046b2:	2301      	movs	r3, #1
 80046b4:	e08d      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046b6:	2300      	movs	r3, #0
 80046b8:	613b      	str	r3, [r7, #16]
 80046ba:	68fb      	ldr	r3, [r7, #12]
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	695b      	ldr	r3, [r3, #20]
 80046c0:	613b      	str	r3, [r7, #16]
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	699b      	ldr	r3, [r3, #24]
 80046c8:	613b      	str	r3, [r7, #16]
 80046ca:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 80046cc:	e066      	b.n	800479c <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80046ce:	697a      	ldr	r2, [r7, #20]
 80046d0:	6a39      	ldr	r1, [r7, #32]
 80046d2:	68f8      	ldr	r0, [r7, #12]
 80046d4:	f000 fd22 	bl	800511c <I2C_WaitOnTXEFlagUntilTimeout>
 80046d8:	4603      	mov	r3, r0
 80046da:	2b00      	cmp	r3, #0
 80046dc:	d00d      	beq.n	80046fa <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80046de:	68fb      	ldr	r3, [r7, #12]
 80046e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80046e2:	2b04      	cmp	r3, #4
 80046e4:	d107      	bne.n	80046f6 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	681a      	ldr	r2, [r3, #0]
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046f4:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80046f6:	2301      	movs	r3, #1
 80046f8:	e06b      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046fe:	781a      	ldrb	r2, [r3, #0]
 8004700:	68fb      	ldr	r3, [r7, #12]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800470a:	1c5a      	adds	r2, r3, #1
 800470c:	68fb      	ldr	r3, [r7, #12]
 800470e:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004714:	b29b      	uxth	r3, r3
 8004716:	3b01      	subs	r3, #1
 8004718:	b29a      	uxth	r2, r3
 800471a:	68fb      	ldr	r3, [r7, #12]
 800471c:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004722:	3b01      	subs	r3, #1
 8004724:	b29a      	uxth	r2, r3
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	695b      	ldr	r3, [r3, #20]
 8004730:	f003 0304 	and.w	r3, r3, #4
 8004734:	2b04      	cmp	r3, #4
 8004736:	d11b      	bne.n	8004770 <HAL_I2C_Master_Transmit+0x188>
 8004738:	68fb      	ldr	r3, [r7, #12]
 800473a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800473c:	2b00      	cmp	r3, #0
 800473e:	d017      	beq.n	8004770 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004744:	781a      	ldrb	r2, [r3, #0]
 8004746:	68fb      	ldr	r3, [r7, #12]
 8004748:	681b      	ldr	r3, [r3, #0]
 800474a:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004750:	1c5a      	adds	r2, r3, #1
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800475a:	b29b      	uxth	r3, r3
 800475c:	3b01      	subs	r3, #1
 800475e:	b29a      	uxth	r2, r3
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004768:	3b01      	subs	r3, #1
 800476a:	b29a      	uxth	r2, r3
 800476c:	68fb      	ldr	r3, [r7, #12]
 800476e:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004770:	697a      	ldr	r2, [r7, #20]
 8004772:	6a39      	ldr	r1, [r7, #32]
 8004774:	68f8      	ldr	r0, [r7, #12]
 8004776:	f000 fd19 	bl	80051ac <I2C_WaitOnBTFFlagUntilTimeout>
 800477a:	4603      	mov	r3, r0
 800477c:	2b00      	cmp	r3, #0
 800477e:	d00d      	beq.n	800479c <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004784:	2b04      	cmp	r3, #4
 8004786:	d107      	bne.n	8004798 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	681a      	ldr	r2, [r3, #0]
 800478e:	68fb      	ldr	r3, [r7, #12]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004796:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004798:	2301      	movs	r3, #1
 800479a:	e01a      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 800479c:	68fb      	ldr	r3, [r7, #12]
 800479e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	d194      	bne.n	80046ce <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	681a      	ldr	r2, [r3, #0]
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	681b      	ldr	r3, [r3, #0]
 80047ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047b2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80047b4:	68fb      	ldr	r3, [r7, #12]
 80047b6:	2220      	movs	r2, #32
 80047b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	2200      	movs	r2, #0
 80047c0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	2200      	movs	r2, #0
 80047c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 80047cc:	2300      	movs	r3, #0
 80047ce:	e000      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 80047d0:	2302      	movs	r3, #2
  }
}
 80047d2:	4618      	mov	r0, r3
 80047d4:	3718      	adds	r7, #24
 80047d6:	46bd      	mov	sp, r7
 80047d8:	bd80      	pop	{r7, pc}
 80047da:	bf00      	nop
 80047dc:	00100002 	.word	0x00100002
 80047e0:	ffff0000 	.word	0xffff0000

080047e4 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80047e4:	b580      	push	{r7, lr}
 80047e6:	b08c      	sub	sp, #48	@ 0x30
 80047e8:	af02      	add	r7, sp, #8
 80047ea:	60f8      	str	r0, [r7, #12]
 80047ec:	607a      	str	r2, [r7, #4]
 80047ee:	461a      	mov	r2, r3
 80047f0:	460b      	mov	r3, r1
 80047f2:	817b      	strh	r3, [r7, #10]
 80047f4:	4613      	mov	r3, r2
 80047f6:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80047f8:	f7fe f926 	bl	8002a48 <HAL_GetTick>
 80047fc:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004804:	b2db      	uxtb	r3, r3
 8004806:	2b20      	cmp	r3, #32
 8004808:	f040 8217 	bne.w	8004c3a <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800480c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800480e:	9300      	str	r3, [sp, #0]
 8004810:	2319      	movs	r3, #25
 8004812:	2201      	movs	r2, #1
 8004814:	497c      	ldr	r1, [pc, #496]	@ (8004a08 <HAL_I2C_Master_Receive+0x224>)
 8004816:	68f8      	ldr	r0, [r7, #12]
 8004818:	f000 fb66 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 800481c:	4603      	mov	r3, r0
 800481e:	2b00      	cmp	r3, #0
 8004820:	d001      	beq.n	8004826 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 8004822:	2302      	movs	r3, #2
 8004824:	e20a      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004826:	68fb      	ldr	r3, [r7, #12]
 8004828:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800482c:	2b01      	cmp	r3, #1
 800482e:	d101      	bne.n	8004834 <HAL_I2C_Master_Receive+0x50>
 8004830:	2302      	movs	r3, #2
 8004832:	e203      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
 8004834:	68fb      	ldr	r3, [r7, #12]
 8004836:	2201      	movs	r2, #1
 8004838:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800483c:	68fb      	ldr	r3, [r7, #12]
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f003 0301 	and.w	r3, r3, #1
 8004846:	2b01      	cmp	r3, #1
 8004848:	d007      	beq.n	800485a <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	681a      	ldr	r2, [r3, #0]
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	f042 0201 	orr.w	r2, r2, #1
 8004858:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	681a      	ldr	r2, [r3, #0]
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004868:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 800486a:	68fb      	ldr	r3, [r7, #12]
 800486c:	2222      	movs	r2, #34	@ 0x22
 800486e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	2210      	movs	r2, #16
 8004876:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	2200      	movs	r2, #0
 800487e:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	687a      	ldr	r2, [r7, #4]
 8004884:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	893a      	ldrh	r2, [r7, #8]
 800488a:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800488c:	68fb      	ldr	r3, [r7, #12]
 800488e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004890:	b29a      	uxth	r2, r3
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004896:	68fb      	ldr	r3, [r7, #12]
 8004898:	4a5c      	ldr	r2, [pc, #368]	@ (8004a0c <HAL_I2C_Master_Receive+0x228>)
 800489a:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 800489c:	8979      	ldrh	r1, [r7, #10]
 800489e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048a0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80048a2:	68f8      	ldr	r0, [r7, #12]
 80048a4:	f000 fa52 	bl	8004d4c <I2C_MasterRequestRead>
 80048a8:	4603      	mov	r3, r0
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d001      	beq.n	80048b2 <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80048ae:	2301      	movs	r3, #1
 80048b0:	e1c4      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d113      	bne.n	80048e2 <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80048ba:	2300      	movs	r3, #0
 80048bc:	623b      	str	r3, [r7, #32]
 80048be:	68fb      	ldr	r3, [r7, #12]
 80048c0:	681b      	ldr	r3, [r3, #0]
 80048c2:	695b      	ldr	r3, [r3, #20]
 80048c4:	623b      	str	r3, [r7, #32]
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	699b      	ldr	r3, [r3, #24]
 80048cc:	623b      	str	r3, [r7, #32]
 80048ce:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	681a      	ldr	r2, [r3, #0]
 80048d6:	68fb      	ldr	r3, [r7, #12]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80048de:	601a      	str	r2, [r3, #0]
 80048e0:	e198      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 80048e2:	68fb      	ldr	r3, [r7, #12]
 80048e4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048e6:	2b01      	cmp	r3, #1
 80048e8:	d11b      	bne.n	8004922 <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	681a      	ldr	r2, [r3, #0]
 80048f0:	68fb      	ldr	r3, [r7, #12]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80048f8:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80048fa:	2300      	movs	r3, #0
 80048fc:	61fb      	str	r3, [r7, #28]
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	695b      	ldr	r3, [r3, #20]
 8004904:	61fb      	str	r3, [r7, #28]
 8004906:	68fb      	ldr	r3, [r7, #12]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	699b      	ldr	r3, [r3, #24]
 800490c:	61fb      	str	r3, [r7, #28]
 800490e:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004910:	68fb      	ldr	r3, [r7, #12]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	681a      	ldr	r2, [r3, #0]
 8004916:	68fb      	ldr	r3, [r7, #12]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800491e:	601a      	str	r2, [r3, #0]
 8004920:	e178      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004926:	2b02      	cmp	r3, #2
 8004928:	d11b      	bne.n	8004962 <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800492a:	68fb      	ldr	r3, [r7, #12]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	681a      	ldr	r2, [r3, #0]
 8004930:	68fb      	ldr	r3, [r7, #12]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004938:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800493a:	68fb      	ldr	r3, [r7, #12]
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	681a      	ldr	r2, [r3, #0]
 8004940:	68fb      	ldr	r3, [r7, #12]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004948:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800494a:	2300      	movs	r3, #0
 800494c:	61bb      	str	r3, [r7, #24]
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	681b      	ldr	r3, [r3, #0]
 8004952:	695b      	ldr	r3, [r3, #20]
 8004954:	61bb      	str	r3, [r7, #24]
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	699b      	ldr	r3, [r3, #24]
 800495c:	61bb      	str	r3, [r7, #24]
 800495e:	69bb      	ldr	r3, [r7, #24]
 8004960:	e158      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	681a      	ldr	r2, [r3, #0]
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004970:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004972:	2300      	movs	r3, #0
 8004974:	617b      	str	r3, [r7, #20]
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	695b      	ldr	r3, [r3, #20]
 800497c:	617b      	str	r3, [r7, #20]
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	699b      	ldr	r3, [r3, #24]
 8004984:	617b      	str	r3, [r7, #20]
 8004986:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8004988:	e144      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 800498a:	68fb      	ldr	r3, [r7, #12]
 800498c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800498e:	2b03      	cmp	r3, #3
 8004990:	f200 80f1 	bhi.w	8004b76 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8004994:	68fb      	ldr	r3, [r7, #12]
 8004996:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004998:	2b01      	cmp	r3, #1
 800499a:	d123      	bne.n	80049e4 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800499c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800499e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80049a0:	68f8      	ldr	r0, [r7, #12]
 80049a2:	f000 fc4b 	bl	800523c <I2C_WaitOnRXNEFlagUntilTimeout>
 80049a6:	4603      	mov	r3, r0
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d001      	beq.n	80049b0 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 80049ac:	2301      	movs	r3, #1
 80049ae:	e145      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80049b0:	68fb      	ldr	r3, [r7, #12]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	691a      	ldr	r2, [r3, #16]
 80049b6:	68fb      	ldr	r3, [r7, #12]
 80049b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049ba:	b2d2      	uxtb	r2, r2
 80049bc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80049be:	68fb      	ldr	r3, [r7, #12]
 80049c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049c2:	1c5a      	adds	r2, r3, #1
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049cc:	3b01      	subs	r3, #1
 80049ce:	b29a      	uxth	r2, r3
 80049d0:	68fb      	ldr	r3, [r7, #12]
 80049d2:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80049d8:	b29b      	uxth	r3, r3
 80049da:	3b01      	subs	r3, #1
 80049dc:	b29a      	uxth	r2, r3
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80049e2:	e117      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049e8:	2b02      	cmp	r3, #2
 80049ea:	d14e      	bne.n	8004a8a <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80049ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049ee:	9300      	str	r3, [sp, #0]
 80049f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80049f2:	2200      	movs	r2, #0
 80049f4:	4906      	ldr	r1, [pc, #24]	@ (8004a10 <HAL_I2C_Master_Receive+0x22c>)
 80049f6:	68f8      	ldr	r0, [r7, #12]
 80049f8:	f000 fa76 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 80049fc:	4603      	mov	r3, r0
 80049fe:	2b00      	cmp	r3, #0
 8004a00:	d008      	beq.n	8004a14 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8004a02:	2301      	movs	r3, #1
 8004a04:	e11a      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
 8004a06:	bf00      	nop
 8004a08:	00100002 	.word	0x00100002
 8004a0c:	ffff0000 	.word	0xffff0000
 8004a10:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	681a      	ldr	r2, [r3, #0]
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a22:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	691a      	ldr	r2, [r3, #16]
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a2e:	b2d2      	uxtb	r2, r2
 8004a30:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a36:	1c5a      	adds	r2, r3, #1
 8004a38:	68fb      	ldr	r3, [r7, #12]
 8004a3a:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a40:	3b01      	subs	r3, #1
 8004a42:	b29a      	uxth	r2, r3
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a4c:	b29b      	uxth	r3, r3
 8004a4e:	3b01      	subs	r3, #1
 8004a50:	b29a      	uxth	r2, r3
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a56:	68fb      	ldr	r3, [r7, #12]
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	691a      	ldr	r2, [r3, #16]
 8004a5c:	68fb      	ldr	r3, [r7, #12]
 8004a5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a60:	b2d2      	uxtb	r2, r2
 8004a62:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a64:	68fb      	ldr	r3, [r7, #12]
 8004a66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a68:	1c5a      	adds	r2, r3, #1
 8004a6a:	68fb      	ldr	r3, [r7, #12]
 8004a6c:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a72:	3b01      	subs	r3, #1
 8004a74:	b29a      	uxth	r2, r3
 8004a76:	68fb      	ldr	r3, [r7, #12]
 8004a78:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a7e:	b29b      	uxth	r3, r3
 8004a80:	3b01      	subs	r3, #1
 8004a82:	b29a      	uxth	r2, r3
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004a88:	e0c4      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004a8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004a8c:	9300      	str	r3, [sp, #0]
 8004a8e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004a90:	2200      	movs	r2, #0
 8004a92:	496c      	ldr	r1, [pc, #432]	@ (8004c44 <HAL_I2C_Master_Receive+0x460>)
 8004a94:	68f8      	ldr	r0, [r7, #12]
 8004a96:	f000 fa27 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004a9a:	4603      	mov	r3, r0
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	d001      	beq.n	8004aa4 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 8004aa0:	2301      	movs	r3, #1
 8004aa2:	e0cb      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	681a      	ldr	r2, [r3, #0]
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004ab2:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	691a      	ldr	r2, [r3, #16]
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004abe:	b2d2      	uxtb	r2, r2
 8004ac0:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ac6:	1c5a      	adds	r2, r3, #1
 8004ac8:	68fb      	ldr	r3, [r7, #12]
 8004aca:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004acc:	68fb      	ldr	r3, [r7, #12]
 8004ace:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ad0:	3b01      	subs	r3, #1
 8004ad2:	b29a      	uxth	r2, r3
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004ad8:	68fb      	ldr	r3, [r7, #12]
 8004ada:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004adc:	b29b      	uxth	r3, r3
 8004ade:	3b01      	subs	r3, #1
 8004ae0:	b29a      	uxth	r2, r3
 8004ae2:	68fb      	ldr	r3, [r7, #12]
 8004ae4:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ae6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ae8:	9300      	str	r3, [sp, #0]
 8004aea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004aec:	2200      	movs	r2, #0
 8004aee:	4955      	ldr	r1, [pc, #340]	@ (8004c44 <HAL_I2C_Master_Receive+0x460>)
 8004af0:	68f8      	ldr	r0, [r7, #12]
 8004af2:	f000 f9f9 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004af6:	4603      	mov	r3, r0
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	d001      	beq.n	8004b00 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8004afc:	2301      	movs	r3, #1
 8004afe:	e09d      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	681a      	ldr	r2, [r3, #0]
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004b0e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	691a      	ldr	r2, [r3, #16]
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b1a:	b2d2      	uxtb	r2, r2
 8004b1c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004b1e:	68fb      	ldr	r3, [r7, #12]
 8004b20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b22:	1c5a      	adds	r2, r3, #1
 8004b24:	68fb      	ldr	r3, [r7, #12]
 8004b26:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b2c:	3b01      	subs	r3, #1
 8004b2e:	b29a      	uxth	r2, r3
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004b34:	68fb      	ldr	r3, [r7, #12]
 8004b36:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b38:	b29b      	uxth	r3, r3
 8004b3a:	3b01      	subs	r3, #1
 8004b3c:	b29a      	uxth	r2, r3
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b42:	68fb      	ldr	r3, [r7, #12]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	691a      	ldr	r2, [r3, #16]
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b4c:	b2d2      	uxtb	r2, r2
 8004b4e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004b50:	68fb      	ldr	r3, [r7, #12]
 8004b52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b54:	1c5a      	adds	r2, r3, #1
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004b5a:	68fb      	ldr	r3, [r7, #12]
 8004b5c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b5e:	3b01      	subs	r3, #1
 8004b60:	b29a      	uxth	r2, r3
 8004b62:	68fb      	ldr	r3, [r7, #12]
 8004b64:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b6a:	b29b      	uxth	r3, r3
 8004b6c:	3b01      	subs	r3, #1
 8004b6e:	b29a      	uxth	r2, r3
 8004b70:	68fb      	ldr	r3, [r7, #12]
 8004b72:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004b74:	e04e      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b76:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004b78:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004b7a:	68f8      	ldr	r0, [r7, #12]
 8004b7c:	f000 fb5e 	bl	800523c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004b80:	4603      	mov	r3, r0
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	d001      	beq.n	8004b8a <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8004b86:	2301      	movs	r3, #1
 8004b88:	e058      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	691a      	ldr	r2, [r3, #16]
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b94:	b2d2      	uxtb	r2, r2
 8004b96:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004b98:	68fb      	ldr	r3, [r7, #12]
 8004b9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b9c:	1c5a      	adds	r2, r3, #1
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ba6:	3b01      	subs	r3, #1
 8004ba8:	b29a      	uxth	r2, r3
 8004baa:	68fb      	ldr	r3, [r7, #12]
 8004bac:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 8004bae:	68fb      	ldr	r3, [r7, #12]
 8004bb0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004bb2:	b29b      	uxth	r3, r3
 8004bb4:	3b01      	subs	r3, #1
 8004bb6:	b29a      	uxth	r2, r3
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004bbc:	68fb      	ldr	r3, [r7, #12]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	695b      	ldr	r3, [r3, #20]
 8004bc2:	f003 0304 	and.w	r3, r3, #4
 8004bc6:	2b04      	cmp	r3, #4
 8004bc8:	d124      	bne.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8004bca:	68fb      	ldr	r3, [r7, #12]
 8004bcc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004bce:	2b03      	cmp	r3, #3
 8004bd0:	d107      	bne.n	8004be2 <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004bd2:	68fb      	ldr	r3, [r7, #12]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	681a      	ldr	r2, [r3, #0]
 8004bd8:	68fb      	ldr	r3, [r7, #12]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004be0:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	691a      	ldr	r2, [r3, #16]
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bec:	b2d2      	uxtb	r2, r2
 8004bee:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bf4:	1c5a      	adds	r2, r3, #1
 8004bf6:	68fb      	ldr	r3, [r7, #12]
 8004bf8:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004bfe:	3b01      	subs	r3, #1
 8004c00:	b29a      	uxth	r2, r3
 8004c02:	68fb      	ldr	r3, [r7, #12]
 8004c04:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004c0a:	b29b      	uxth	r3, r3
 8004c0c:	3b01      	subs	r3, #1
 8004c0e:	b29a      	uxth	r2, r3
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	f47f aeb6 	bne.w	800498a <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	2220      	movs	r2, #32
 8004c22:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	2200      	movs	r2, #0
 8004c2a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c2e:	68fb      	ldr	r3, [r7, #12]
 8004c30:	2200      	movs	r2, #0
 8004c32:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004c36:	2300      	movs	r3, #0
 8004c38:	e000      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 8004c3a:	2302      	movs	r3, #2
  }
}
 8004c3c:	4618      	mov	r0, r3
 8004c3e:	3728      	adds	r7, #40	@ 0x28
 8004c40:	46bd      	mov	sp, r7
 8004c42:	bd80      	pop	{r7, pc}
 8004c44:	00010004 	.word	0x00010004

08004c48 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004c48:	b580      	push	{r7, lr}
 8004c4a:	b088      	sub	sp, #32
 8004c4c:	af02      	add	r7, sp, #8
 8004c4e:	60f8      	str	r0, [r7, #12]
 8004c50:	607a      	str	r2, [r7, #4]
 8004c52:	603b      	str	r3, [r7, #0]
 8004c54:	460b      	mov	r3, r1
 8004c56:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004c5c:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004c5e:	697b      	ldr	r3, [r7, #20]
 8004c60:	2b08      	cmp	r3, #8
 8004c62:	d006      	beq.n	8004c72 <I2C_MasterRequestWrite+0x2a>
 8004c64:	697b      	ldr	r3, [r7, #20]
 8004c66:	2b01      	cmp	r3, #1
 8004c68:	d003      	beq.n	8004c72 <I2C_MasterRequestWrite+0x2a>
 8004c6a:	697b      	ldr	r3, [r7, #20]
 8004c6c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004c70:	d108      	bne.n	8004c84 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c72:	68fb      	ldr	r3, [r7, #12]
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	681a      	ldr	r2, [r3, #0]
 8004c78:	68fb      	ldr	r3, [r7, #12]
 8004c7a:	681b      	ldr	r3, [r3, #0]
 8004c7c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004c80:	601a      	str	r2, [r3, #0]
 8004c82:	e00b      	b.n	8004c9c <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8004c84:	68fb      	ldr	r3, [r7, #12]
 8004c86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004c88:	2b12      	cmp	r3, #18
 8004c8a:	d107      	bne.n	8004c9c <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c8c:	68fb      	ldr	r3, [r7, #12]
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	681a      	ldr	r2, [r3, #0]
 8004c92:	68fb      	ldr	r3, [r7, #12]
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004c9a:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c9c:	683b      	ldr	r3, [r7, #0]
 8004c9e:	9300      	str	r3, [sp, #0]
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	2200      	movs	r2, #0
 8004ca4:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004ca8:	68f8      	ldr	r0, [r7, #12]
 8004caa:	f000 f91d 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004cae:	4603      	mov	r3, r0
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d00d      	beq.n	8004cd0 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004cbe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004cc2:	d103      	bne.n	8004ccc <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004cc4:	68fb      	ldr	r3, [r7, #12]
 8004cc6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004cca:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004ccc:	2303      	movs	r3, #3
 8004cce:	e035      	b.n	8004d3c <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004cd0:	68fb      	ldr	r3, [r7, #12]
 8004cd2:	691b      	ldr	r3, [r3, #16]
 8004cd4:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004cd8:	d108      	bne.n	8004cec <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004cda:	897b      	ldrh	r3, [r7, #10]
 8004cdc:	b2db      	uxtb	r3, r3
 8004cde:	461a      	mov	r2, r3
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004ce8:	611a      	str	r2, [r3, #16]
 8004cea:	e01b      	b.n	8004d24 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004cec:	897b      	ldrh	r3, [r7, #10]
 8004cee:	11db      	asrs	r3, r3, #7
 8004cf0:	b2db      	uxtb	r3, r3
 8004cf2:	f003 0306 	and.w	r3, r3, #6
 8004cf6:	b2db      	uxtb	r3, r3
 8004cf8:	f063 030f 	orn	r3, r3, #15
 8004cfc:	b2da      	uxtb	r2, r3
 8004cfe:	68fb      	ldr	r3, [r7, #12]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004d04:	683b      	ldr	r3, [r7, #0]
 8004d06:	687a      	ldr	r2, [r7, #4]
 8004d08:	490e      	ldr	r1, [pc, #56]	@ (8004d44 <I2C_MasterRequestWrite+0xfc>)
 8004d0a:	68f8      	ldr	r0, [r7, #12]
 8004d0c:	f000 f966 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d10:	4603      	mov	r3, r0
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d001      	beq.n	8004d1a <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8004d16:	2301      	movs	r3, #1
 8004d18:	e010      	b.n	8004d3c <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004d1a:	897b      	ldrh	r3, [r7, #10]
 8004d1c:	b2da      	uxtb	r2, r3
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004d24:	683b      	ldr	r3, [r7, #0]
 8004d26:	687a      	ldr	r2, [r7, #4]
 8004d28:	4907      	ldr	r1, [pc, #28]	@ (8004d48 <I2C_MasterRequestWrite+0x100>)
 8004d2a:	68f8      	ldr	r0, [r7, #12]
 8004d2c:	f000 f956 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d30:	4603      	mov	r3, r0
 8004d32:	2b00      	cmp	r3, #0
 8004d34:	d001      	beq.n	8004d3a <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8004d36:	2301      	movs	r3, #1
 8004d38:	e000      	b.n	8004d3c <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8004d3a:	2300      	movs	r3, #0
}
 8004d3c:	4618      	mov	r0, r3
 8004d3e:	3718      	adds	r7, #24
 8004d40:	46bd      	mov	sp, r7
 8004d42:	bd80      	pop	{r7, pc}
 8004d44:	00010008 	.word	0x00010008
 8004d48:	00010002 	.word	0x00010002

08004d4c <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004d4c:	b580      	push	{r7, lr}
 8004d4e:	b088      	sub	sp, #32
 8004d50:	af02      	add	r7, sp, #8
 8004d52:	60f8      	str	r0, [r7, #12]
 8004d54:	607a      	str	r2, [r7, #4]
 8004d56:	603b      	str	r3, [r7, #0]
 8004d58:	460b      	mov	r3, r1
 8004d5a:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004d5c:	68fb      	ldr	r3, [r7, #12]
 8004d5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004d60:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004d62:	68fb      	ldr	r3, [r7, #12]
 8004d64:	681b      	ldr	r3, [r3, #0]
 8004d66:	681a      	ldr	r2, [r3, #0]
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004d70:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004d72:	697b      	ldr	r3, [r7, #20]
 8004d74:	2b08      	cmp	r3, #8
 8004d76:	d006      	beq.n	8004d86 <I2C_MasterRequestRead+0x3a>
 8004d78:	697b      	ldr	r3, [r7, #20]
 8004d7a:	2b01      	cmp	r3, #1
 8004d7c:	d003      	beq.n	8004d86 <I2C_MasterRequestRead+0x3a>
 8004d7e:	697b      	ldr	r3, [r7, #20]
 8004d80:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004d84:	d108      	bne.n	8004d98 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004d86:	68fb      	ldr	r3, [r7, #12]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	681a      	ldr	r2, [r3, #0]
 8004d8c:	68fb      	ldr	r3, [r7, #12]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004d94:	601a      	str	r2, [r3, #0]
 8004d96:	e00b      	b.n	8004db0 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8004d98:	68fb      	ldr	r3, [r7, #12]
 8004d9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d9c:	2b11      	cmp	r3, #17
 8004d9e:	d107      	bne.n	8004db0 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004da0:	68fb      	ldr	r3, [r7, #12]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	681a      	ldr	r2, [r3, #0]
 8004da6:	68fb      	ldr	r3, [r7, #12]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004dae:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004db0:	683b      	ldr	r3, [r7, #0]
 8004db2:	9300      	str	r3, [sp, #0]
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	2200      	movs	r2, #0
 8004db8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004dbc:	68f8      	ldr	r0, [r7, #12]
 8004dbe:	f000 f893 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004dc2:	4603      	mov	r3, r0
 8004dc4:	2b00      	cmp	r3, #0
 8004dc6:	d00d      	beq.n	8004de4 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004dd2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004dd6:	d103      	bne.n	8004de0 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004dd8:	68fb      	ldr	r3, [r7, #12]
 8004dda:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004dde:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004de0:	2303      	movs	r3, #3
 8004de2:	e079      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	691b      	ldr	r3, [r3, #16]
 8004de8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004dec:	d108      	bne.n	8004e00 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004dee:	897b      	ldrh	r3, [r7, #10]
 8004df0:	b2db      	uxtb	r3, r3
 8004df2:	f043 0301 	orr.w	r3, r3, #1
 8004df6:	b2da      	uxtb	r2, r3
 8004df8:	68fb      	ldr	r3, [r7, #12]
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	611a      	str	r2, [r3, #16]
 8004dfe:	e05f      	b.n	8004ec0 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004e00:	897b      	ldrh	r3, [r7, #10]
 8004e02:	11db      	asrs	r3, r3, #7
 8004e04:	b2db      	uxtb	r3, r3
 8004e06:	f003 0306 	and.w	r3, r3, #6
 8004e0a:	b2db      	uxtb	r3, r3
 8004e0c:	f063 030f 	orn	r3, r3, #15
 8004e10:	b2da      	uxtb	r2, r3
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004e18:	683b      	ldr	r3, [r7, #0]
 8004e1a:	687a      	ldr	r2, [r7, #4]
 8004e1c:	4930      	ldr	r1, [pc, #192]	@ (8004ee0 <I2C_MasterRequestRead+0x194>)
 8004e1e:	68f8      	ldr	r0, [r7, #12]
 8004e20:	f000 f8dc 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e24:	4603      	mov	r3, r0
 8004e26:	2b00      	cmp	r3, #0
 8004e28:	d001      	beq.n	8004e2e <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8004e2a:	2301      	movs	r3, #1
 8004e2c:	e054      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004e2e:	897b      	ldrh	r3, [r7, #10]
 8004e30:	b2da      	uxtb	r2, r3
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004e38:	683b      	ldr	r3, [r7, #0]
 8004e3a:	687a      	ldr	r2, [r7, #4]
 8004e3c:	4929      	ldr	r1, [pc, #164]	@ (8004ee4 <I2C_MasterRequestRead+0x198>)
 8004e3e:	68f8      	ldr	r0, [r7, #12]
 8004e40:	f000 f8cc 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e44:	4603      	mov	r3, r0
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	d001      	beq.n	8004e4e <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8004e4a:	2301      	movs	r3, #1
 8004e4c:	e044      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e4e:	2300      	movs	r3, #0
 8004e50:	613b      	str	r3, [r7, #16]
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	695b      	ldr	r3, [r3, #20]
 8004e58:	613b      	str	r3, [r7, #16]
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	699b      	ldr	r3, [r3, #24]
 8004e60:	613b      	str	r3, [r7, #16]
 8004e62:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	681a      	ldr	r2, [r3, #0]
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004e72:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e74:	683b      	ldr	r3, [r7, #0]
 8004e76:	9300      	str	r3, [sp, #0]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	2200      	movs	r2, #0
 8004e7c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004e80:	68f8      	ldr	r0, [r7, #12]
 8004e82:	f000 f831 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004e86:	4603      	mov	r3, r0
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d00d      	beq.n	8004ea8 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004e8c:	68fb      	ldr	r3, [r7, #12]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e96:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004e9a:	d103      	bne.n	8004ea4 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004ea2:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 8004ea4:	2303      	movs	r3, #3
 8004ea6:	e017      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8004ea8:	897b      	ldrh	r3, [r7, #10]
 8004eaa:	11db      	asrs	r3, r3, #7
 8004eac:	b2db      	uxtb	r3, r3
 8004eae:	f003 0306 	and.w	r3, r3, #6
 8004eb2:	b2db      	uxtb	r3, r3
 8004eb4:	f063 030e 	orn	r3, r3, #14
 8004eb8:	b2da      	uxtb	r2, r3
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ec0:	683b      	ldr	r3, [r7, #0]
 8004ec2:	687a      	ldr	r2, [r7, #4]
 8004ec4:	4907      	ldr	r1, [pc, #28]	@ (8004ee4 <I2C_MasterRequestRead+0x198>)
 8004ec6:	68f8      	ldr	r0, [r7, #12]
 8004ec8:	f000 f888 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004ecc:	4603      	mov	r3, r0
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	d001      	beq.n	8004ed6 <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8004ed2:	2301      	movs	r3, #1
 8004ed4:	e000      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8004ed6:	2300      	movs	r3, #0
}
 8004ed8:	4618      	mov	r0, r3
 8004eda:	3718      	adds	r7, #24
 8004edc:	46bd      	mov	sp, r7
 8004ede:	bd80      	pop	{r7, pc}
 8004ee0:	00010008 	.word	0x00010008
 8004ee4:	00010002 	.word	0x00010002

08004ee8 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004ee8:	b580      	push	{r7, lr}
 8004eea:	b084      	sub	sp, #16
 8004eec:	af00      	add	r7, sp, #0
 8004eee:	60f8      	str	r0, [r7, #12]
 8004ef0:	60b9      	str	r1, [r7, #8]
 8004ef2:	603b      	str	r3, [r7, #0]
 8004ef4:	4613      	mov	r3, r2
 8004ef6:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004ef8:	e048      	b.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004efa:	683b      	ldr	r3, [r7, #0]
 8004efc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f00:	d044      	beq.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f02:	f7fd fda1 	bl	8002a48 <HAL_GetTick>
 8004f06:	4602      	mov	r2, r0
 8004f08:	69bb      	ldr	r3, [r7, #24]
 8004f0a:	1ad3      	subs	r3, r2, r3
 8004f0c:	683a      	ldr	r2, [r7, #0]
 8004f0e:	429a      	cmp	r2, r3
 8004f10:	d302      	bcc.n	8004f18 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004f12:	683b      	ldr	r3, [r7, #0]
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d139      	bne.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004f18:	68bb      	ldr	r3, [r7, #8]
 8004f1a:	0c1b      	lsrs	r3, r3, #16
 8004f1c:	b2db      	uxtb	r3, r3
 8004f1e:	2b01      	cmp	r3, #1
 8004f20:	d10d      	bne.n	8004f3e <I2C_WaitOnFlagUntilTimeout+0x56>
 8004f22:	68fb      	ldr	r3, [r7, #12]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	695b      	ldr	r3, [r3, #20]
 8004f28:	43da      	mvns	r2, r3
 8004f2a:	68bb      	ldr	r3, [r7, #8]
 8004f2c:	4013      	ands	r3, r2
 8004f2e:	b29b      	uxth	r3, r3
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	bf0c      	ite	eq
 8004f34:	2301      	moveq	r3, #1
 8004f36:	2300      	movne	r3, #0
 8004f38:	b2db      	uxtb	r3, r3
 8004f3a:	461a      	mov	r2, r3
 8004f3c:	e00c      	b.n	8004f58 <I2C_WaitOnFlagUntilTimeout+0x70>
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	699b      	ldr	r3, [r3, #24]
 8004f44:	43da      	mvns	r2, r3
 8004f46:	68bb      	ldr	r3, [r7, #8]
 8004f48:	4013      	ands	r3, r2
 8004f4a:	b29b      	uxth	r3, r3
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	bf0c      	ite	eq
 8004f50:	2301      	moveq	r3, #1
 8004f52:	2300      	movne	r3, #0
 8004f54:	b2db      	uxtb	r3, r3
 8004f56:	461a      	mov	r2, r3
 8004f58:	79fb      	ldrb	r3, [r7, #7]
 8004f5a:	429a      	cmp	r2, r3
 8004f5c:	d116      	bne.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	2200      	movs	r2, #0
 8004f62:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8004f64:	68fb      	ldr	r3, [r7, #12]
 8004f66:	2220      	movs	r2, #32
 8004f68:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	2200      	movs	r2, #0
 8004f70:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f78:	f043 0220 	orr.w	r2, r3, #32
 8004f7c:	68fb      	ldr	r3, [r7, #12]
 8004f7e:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	2200      	movs	r2, #0
 8004f84:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004f88:	2301      	movs	r3, #1
 8004f8a:	e023      	b.n	8004fd4 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004f8c:	68bb      	ldr	r3, [r7, #8]
 8004f8e:	0c1b      	lsrs	r3, r3, #16
 8004f90:	b2db      	uxtb	r3, r3
 8004f92:	2b01      	cmp	r3, #1
 8004f94:	d10d      	bne.n	8004fb2 <I2C_WaitOnFlagUntilTimeout+0xca>
 8004f96:	68fb      	ldr	r3, [r7, #12]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	695b      	ldr	r3, [r3, #20]
 8004f9c:	43da      	mvns	r2, r3
 8004f9e:	68bb      	ldr	r3, [r7, #8]
 8004fa0:	4013      	ands	r3, r2
 8004fa2:	b29b      	uxth	r3, r3
 8004fa4:	2b00      	cmp	r3, #0
 8004fa6:	bf0c      	ite	eq
 8004fa8:	2301      	moveq	r3, #1
 8004faa:	2300      	movne	r3, #0
 8004fac:	b2db      	uxtb	r3, r3
 8004fae:	461a      	mov	r2, r3
 8004fb0:	e00c      	b.n	8004fcc <I2C_WaitOnFlagUntilTimeout+0xe4>
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	699b      	ldr	r3, [r3, #24]
 8004fb8:	43da      	mvns	r2, r3
 8004fba:	68bb      	ldr	r3, [r7, #8]
 8004fbc:	4013      	ands	r3, r2
 8004fbe:	b29b      	uxth	r3, r3
 8004fc0:	2b00      	cmp	r3, #0
 8004fc2:	bf0c      	ite	eq
 8004fc4:	2301      	moveq	r3, #1
 8004fc6:	2300      	movne	r3, #0
 8004fc8:	b2db      	uxtb	r3, r3
 8004fca:	461a      	mov	r2, r3
 8004fcc:	79fb      	ldrb	r3, [r7, #7]
 8004fce:	429a      	cmp	r2, r3
 8004fd0:	d093      	beq.n	8004efa <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004fd2:	2300      	movs	r3, #0
}
 8004fd4:	4618      	mov	r0, r3
 8004fd6:	3710      	adds	r7, #16
 8004fd8:	46bd      	mov	sp, r7
 8004fda:	bd80      	pop	{r7, pc}

08004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004fdc:	b580      	push	{r7, lr}
 8004fde:	b084      	sub	sp, #16
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	60f8      	str	r0, [r7, #12]
 8004fe4:	60b9      	str	r1, [r7, #8]
 8004fe6:	607a      	str	r2, [r7, #4]
 8004fe8:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004fea:	e071      	b.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	695b      	ldr	r3, [r3, #20]
 8004ff2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004ff6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004ffa:	d123      	bne.n	8005044 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	681a      	ldr	r2, [r3, #0]
 8005002:	68fb      	ldr	r3, [r7, #12]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800500a:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005014:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8005016:	68fb      	ldr	r3, [r7, #12]
 8005018:	2200      	movs	r2, #0
 800501a:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	2220      	movs	r2, #32
 8005020:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	2200      	movs	r2, #0
 8005028:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800502c:	68fb      	ldr	r3, [r7, #12]
 800502e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005030:	f043 0204 	orr.w	r2, r3, #4
 8005034:	68fb      	ldr	r3, [r7, #12]
 8005036:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	2200      	movs	r2, #0
 800503c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8005040:	2301      	movs	r3, #1
 8005042:	e067      	b.n	8005114 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	f1b3 3fff 	cmp.w	r3, #4294967295
 800504a:	d041      	beq.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800504c:	f7fd fcfc 	bl	8002a48 <HAL_GetTick>
 8005050:	4602      	mov	r2, r0
 8005052:	683b      	ldr	r3, [r7, #0]
 8005054:	1ad3      	subs	r3, r2, r3
 8005056:	687a      	ldr	r2, [r7, #4]
 8005058:	429a      	cmp	r2, r3
 800505a:	d302      	bcc.n	8005062 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	2b00      	cmp	r3, #0
 8005060:	d136      	bne.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8005062:	68bb      	ldr	r3, [r7, #8]
 8005064:	0c1b      	lsrs	r3, r3, #16
 8005066:	b2db      	uxtb	r3, r3
 8005068:	2b01      	cmp	r3, #1
 800506a:	d10c      	bne.n	8005086 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 800506c:	68fb      	ldr	r3, [r7, #12]
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	695b      	ldr	r3, [r3, #20]
 8005072:	43da      	mvns	r2, r3
 8005074:	68bb      	ldr	r3, [r7, #8]
 8005076:	4013      	ands	r3, r2
 8005078:	b29b      	uxth	r3, r3
 800507a:	2b00      	cmp	r3, #0
 800507c:	bf14      	ite	ne
 800507e:	2301      	movne	r3, #1
 8005080:	2300      	moveq	r3, #0
 8005082:	b2db      	uxtb	r3, r3
 8005084:	e00b      	b.n	800509e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8005086:	68fb      	ldr	r3, [r7, #12]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	699b      	ldr	r3, [r3, #24]
 800508c:	43da      	mvns	r2, r3
 800508e:	68bb      	ldr	r3, [r7, #8]
 8005090:	4013      	ands	r3, r2
 8005092:	b29b      	uxth	r3, r3
 8005094:	2b00      	cmp	r3, #0
 8005096:	bf14      	ite	ne
 8005098:	2301      	movne	r3, #1
 800509a:	2300      	moveq	r3, #0
 800509c:	b2db      	uxtb	r3, r3
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d016      	beq.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80050a2:	68fb      	ldr	r3, [r7, #12]
 80050a4:	2200      	movs	r2, #0
 80050a6:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80050a8:	68fb      	ldr	r3, [r7, #12]
 80050aa:	2220      	movs	r2, #32
 80050ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	2200      	movs	r2, #0
 80050b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050bc:	f043 0220 	orr.w	r2, r3, #32
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	2200      	movs	r2, #0
 80050c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80050cc:	2301      	movs	r3, #1
 80050ce:	e021      	b.n	8005114 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80050d0:	68bb      	ldr	r3, [r7, #8]
 80050d2:	0c1b      	lsrs	r3, r3, #16
 80050d4:	b2db      	uxtb	r3, r3
 80050d6:	2b01      	cmp	r3, #1
 80050d8:	d10c      	bne.n	80050f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80050da:	68fb      	ldr	r3, [r7, #12]
 80050dc:	681b      	ldr	r3, [r3, #0]
 80050de:	695b      	ldr	r3, [r3, #20]
 80050e0:	43da      	mvns	r2, r3
 80050e2:	68bb      	ldr	r3, [r7, #8]
 80050e4:	4013      	ands	r3, r2
 80050e6:	b29b      	uxth	r3, r3
 80050e8:	2b00      	cmp	r3, #0
 80050ea:	bf14      	ite	ne
 80050ec:	2301      	movne	r3, #1
 80050ee:	2300      	moveq	r3, #0
 80050f0:	b2db      	uxtb	r3, r3
 80050f2:	e00b      	b.n	800510c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	699b      	ldr	r3, [r3, #24]
 80050fa:	43da      	mvns	r2, r3
 80050fc:	68bb      	ldr	r3, [r7, #8]
 80050fe:	4013      	ands	r3, r2
 8005100:	b29b      	uxth	r3, r3
 8005102:	2b00      	cmp	r3, #0
 8005104:	bf14      	ite	ne
 8005106:	2301      	movne	r3, #1
 8005108:	2300      	moveq	r3, #0
 800510a:	b2db      	uxtb	r3, r3
 800510c:	2b00      	cmp	r3, #0
 800510e:	f47f af6d 	bne.w	8004fec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 8005112:	2300      	movs	r3, #0
}
 8005114:	4618      	mov	r0, r3
 8005116:	3710      	adds	r7, #16
 8005118:	46bd      	mov	sp, r7
 800511a:	bd80      	pop	{r7, pc}

0800511c <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800511c:	b580      	push	{r7, lr}
 800511e:	b084      	sub	sp, #16
 8005120:	af00      	add	r7, sp, #0
 8005122:	60f8      	str	r0, [r7, #12]
 8005124:	60b9      	str	r1, [r7, #8]
 8005126:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005128:	e034      	b.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800512a:	68f8      	ldr	r0, [r7, #12]
 800512c:	f000 f8e3 	bl	80052f6 <I2C_IsAcknowledgeFailed>
 8005130:	4603      	mov	r3, r0
 8005132:	2b00      	cmp	r3, #0
 8005134:	d001      	beq.n	800513a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8005136:	2301      	movs	r3, #1
 8005138:	e034      	b.n	80051a4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800513a:	68bb      	ldr	r3, [r7, #8]
 800513c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005140:	d028      	beq.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005142:	f7fd fc81 	bl	8002a48 <HAL_GetTick>
 8005146:	4602      	mov	r2, r0
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	1ad3      	subs	r3, r2, r3
 800514c:	68ba      	ldr	r2, [r7, #8]
 800514e:	429a      	cmp	r2, r3
 8005150:	d302      	bcc.n	8005158 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8005152:	68bb      	ldr	r3, [r7, #8]
 8005154:	2b00      	cmp	r3, #0
 8005156:	d11d      	bne.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	695b      	ldr	r3, [r3, #20]
 800515e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005162:	2b80      	cmp	r3, #128	@ 0x80
 8005164:	d016      	beq.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8005166:	68fb      	ldr	r3, [r7, #12]
 8005168:	2200      	movs	r2, #0
 800516a:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	2220      	movs	r2, #32
 8005170:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005174:	68fb      	ldr	r3, [r7, #12]
 8005176:	2200      	movs	r2, #0
 8005178:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800517c:	68fb      	ldr	r3, [r7, #12]
 800517e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005180:	f043 0220 	orr.w	r2, r3, #32
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8005188:	68fb      	ldr	r3, [r7, #12]
 800518a:	2200      	movs	r2, #0
 800518c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005190:	2301      	movs	r3, #1
 8005192:	e007      	b.n	80051a4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	695b      	ldr	r3, [r3, #20]
 800519a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800519e:	2b80      	cmp	r3, #128	@ 0x80
 80051a0:	d1c3      	bne.n	800512a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80051a2:	2300      	movs	r3, #0
}
 80051a4:	4618      	mov	r0, r3
 80051a6:	3710      	adds	r7, #16
 80051a8:	46bd      	mov	sp, r7
 80051aa:	bd80      	pop	{r7, pc}

080051ac <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80051ac:	b580      	push	{r7, lr}
 80051ae:	b084      	sub	sp, #16
 80051b0:	af00      	add	r7, sp, #0
 80051b2:	60f8      	str	r0, [r7, #12]
 80051b4:	60b9      	str	r1, [r7, #8]
 80051b6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80051b8:	e034      	b.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80051ba:	68f8      	ldr	r0, [r7, #12]
 80051bc:	f000 f89b 	bl	80052f6 <I2C_IsAcknowledgeFailed>
 80051c0:	4603      	mov	r3, r0
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d001      	beq.n	80051ca <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80051c6:	2301      	movs	r3, #1
 80051c8:	e034      	b.n	8005234 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80051ca:	68bb      	ldr	r3, [r7, #8]
 80051cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051d0:	d028      	beq.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051d2:	f7fd fc39 	bl	8002a48 <HAL_GetTick>
 80051d6:	4602      	mov	r2, r0
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	1ad3      	subs	r3, r2, r3
 80051dc:	68ba      	ldr	r2, [r7, #8]
 80051de:	429a      	cmp	r2, r3
 80051e0:	d302      	bcc.n	80051e8 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80051e2:	68bb      	ldr	r3, [r7, #8]
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	d11d      	bne.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 80051e8:	68fb      	ldr	r3, [r7, #12]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	695b      	ldr	r3, [r3, #20]
 80051ee:	f003 0304 	and.w	r3, r3, #4
 80051f2:	2b04      	cmp	r3, #4
 80051f4:	d016      	beq.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	2200      	movs	r2, #0
 80051fa:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80051fc:	68fb      	ldr	r3, [r7, #12]
 80051fe:	2220      	movs	r2, #32
 8005200:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005204:	68fb      	ldr	r3, [r7, #12]
 8005206:	2200      	movs	r2, #0
 8005208:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800520c:	68fb      	ldr	r3, [r7, #12]
 800520e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005210:	f043 0220 	orr.w	r2, r3, #32
 8005214:	68fb      	ldr	r3, [r7, #12]
 8005216:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	2200      	movs	r2, #0
 800521c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005220:	2301      	movs	r3, #1
 8005222:	e007      	b.n	8005234 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005224:	68fb      	ldr	r3, [r7, #12]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	695b      	ldr	r3, [r3, #20]
 800522a:	f003 0304 	and.w	r3, r3, #4
 800522e:	2b04      	cmp	r3, #4
 8005230:	d1c3      	bne.n	80051ba <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8005232:	2300      	movs	r3, #0
}
 8005234:	4618      	mov	r0, r3
 8005236:	3710      	adds	r7, #16
 8005238:	46bd      	mov	sp, r7
 800523a:	bd80      	pop	{r7, pc}

0800523c <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800523c:	b580      	push	{r7, lr}
 800523e:	b084      	sub	sp, #16
 8005240:	af00      	add	r7, sp, #0
 8005242:	60f8      	str	r0, [r7, #12]
 8005244:	60b9      	str	r1, [r7, #8]
 8005246:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005248:	e049      	b.n	80052de <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800524a:	68fb      	ldr	r3, [r7, #12]
 800524c:	681b      	ldr	r3, [r3, #0]
 800524e:	695b      	ldr	r3, [r3, #20]
 8005250:	f003 0310 	and.w	r3, r3, #16
 8005254:	2b10      	cmp	r3, #16
 8005256:	d119      	bne.n	800528c <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	f06f 0210 	mvn.w	r2, #16
 8005260:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	2200      	movs	r2, #0
 8005266:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	2220      	movs	r2, #32
 800526c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	2200      	movs	r2, #0
 8005274:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005280:	68fb      	ldr	r3, [r7, #12]
 8005282:	2200      	movs	r2, #0
 8005284:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8005288:	2301      	movs	r3, #1
 800528a:	e030      	b.n	80052ee <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800528c:	f7fd fbdc 	bl	8002a48 <HAL_GetTick>
 8005290:	4602      	mov	r2, r0
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	1ad3      	subs	r3, r2, r3
 8005296:	68ba      	ldr	r2, [r7, #8]
 8005298:	429a      	cmp	r2, r3
 800529a:	d302      	bcc.n	80052a2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800529c:	68bb      	ldr	r3, [r7, #8]
 800529e:	2b00      	cmp	r3, #0
 80052a0:	d11d      	bne.n	80052de <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80052a2:	68fb      	ldr	r3, [r7, #12]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	695b      	ldr	r3, [r3, #20]
 80052a8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052ac:	2b40      	cmp	r3, #64	@ 0x40
 80052ae:	d016      	beq.n	80052de <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80052b0:	68fb      	ldr	r3, [r7, #12]
 80052b2:	2200      	movs	r2, #0
 80052b4:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80052b6:	68fb      	ldr	r3, [r7, #12]
 80052b8:	2220      	movs	r2, #32
 80052ba:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80052be:	68fb      	ldr	r3, [r7, #12]
 80052c0:	2200      	movs	r2, #0
 80052c2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80052ca:	f043 0220 	orr.w	r2, r3, #32
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	2200      	movs	r2, #0
 80052d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 80052da:	2301      	movs	r3, #1
 80052dc:	e007      	b.n	80052ee <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80052de:	68fb      	ldr	r3, [r7, #12]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	695b      	ldr	r3, [r3, #20]
 80052e4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052e8:	2b40      	cmp	r3, #64	@ 0x40
 80052ea:	d1ae      	bne.n	800524a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80052ec:	2300      	movs	r3, #0
}
 80052ee:	4618      	mov	r0, r3
 80052f0:	3710      	adds	r7, #16
 80052f2:	46bd      	mov	sp, r7
 80052f4:	bd80      	pop	{r7, pc}

080052f6 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 80052f6:	b480      	push	{r7}
 80052f8:	b083      	sub	sp, #12
 80052fa:	af00      	add	r7, sp, #0
 80052fc:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	695b      	ldr	r3, [r3, #20]
 8005304:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005308:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800530c:	d11b      	bne.n	8005346 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005316:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	2200      	movs	r2, #0
 800531c:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	2220      	movs	r2, #32
 8005322:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2200      	movs	r2, #0
 800532a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005332:	f043 0204 	orr.w	r2, r3, #4
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	2200      	movs	r2, #0
 800533e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 8005342:	2301      	movs	r3, #1
 8005344:	e000      	b.n	8005348 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8005346:	2300      	movs	r3, #0
}
 8005348:	4618      	mov	r0, r3
 800534a:	370c      	adds	r7, #12
 800534c:	46bd      	mov	sp, r7
 800534e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005352:	4770      	bx	lr

08005354 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005354:	b580      	push	{r7, lr}
 8005356:	b082      	sub	sp, #8
 8005358:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 800535a:	2300      	movs	r3, #0
 800535c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 800535e:	2300      	movs	r3, #0
 8005360:	603b      	str	r3, [r7, #0]
 8005362:	4b20      	ldr	r3, [pc, #128]	@ (80053e4 <HAL_PWREx_EnableOverDrive+0x90>)
 8005364:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005366:	4a1f      	ldr	r2, [pc, #124]	@ (80053e4 <HAL_PWREx_EnableOverDrive+0x90>)
 8005368:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800536c:	6413      	str	r3, [r2, #64]	@ 0x40
 800536e:	4b1d      	ldr	r3, [pc, #116]	@ (80053e4 <HAL_PWREx_EnableOverDrive+0x90>)
 8005370:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005372:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005376:	603b      	str	r3, [r7, #0]
 8005378:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 800537a:	4b1b      	ldr	r3, [pc, #108]	@ (80053e8 <HAL_PWREx_EnableOverDrive+0x94>)
 800537c:	2201      	movs	r2, #1
 800537e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005380:	f7fd fb62 	bl	8002a48 <HAL_GetTick>
 8005384:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005386:	e009      	b.n	800539c <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005388:	f7fd fb5e 	bl	8002a48 <HAL_GetTick>
 800538c:	4602      	mov	r2, r0
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	1ad3      	subs	r3, r2, r3
 8005392:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005396:	d901      	bls.n	800539c <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8005398:	2303      	movs	r3, #3
 800539a:	e01f      	b.n	80053dc <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800539c:	4b13      	ldr	r3, [pc, #76]	@ (80053ec <HAL_PWREx_EnableOverDrive+0x98>)
 800539e:	685b      	ldr	r3, [r3, #4]
 80053a0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80053a4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80053a8:	d1ee      	bne.n	8005388 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80053aa:	4b11      	ldr	r3, [pc, #68]	@ (80053f0 <HAL_PWREx_EnableOverDrive+0x9c>)
 80053ac:	2201      	movs	r2, #1
 80053ae:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80053b0:	f7fd fb4a 	bl	8002a48 <HAL_GetTick>
 80053b4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053b6:	e009      	b.n	80053cc <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80053b8:	f7fd fb46 	bl	8002a48 <HAL_GetTick>
 80053bc:	4602      	mov	r2, r0
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	1ad3      	subs	r3, r2, r3
 80053c2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80053c6:	d901      	bls.n	80053cc <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 80053c8:	2303      	movs	r3, #3
 80053ca:	e007      	b.n	80053dc <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053cc:	4b07      	ldr	r3, [pc, #28]	@ (80053ec <HAL_PWREx_EnableOverDrive+0x98>)
 80053ce:	685b      	ldr	r3, [r3, #4]
 80053d0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80053d4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80053d8:	d1ee      	bne.n	80053b8 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 80053da:	2300      	movs	r3, #0
}
 80053dc:	4618      	mov	r0, r3
 80053de:	3708      	adds	r7, #8
 80053e0:	46bd      	mov	sp, r7
 80053e2:	bd80      	pop	{r7, pc}
 80053e4:	40023800 	.word	0x40023800
 80053e8:	420e0040 	.word	0x420e0040
 80053ec:	40007000 	.word	0x40007000
 80053f0:	420e0044 	.word	0x420e0044

080053f4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80053f4:	b580      	push	{r7, lr}
 80053f6:	b084      	sub	sp, #16
 80053f8:	af00      	add	r7, sp, #0
 80053fa:	6078      	str	r0, [r7, #4]
 80053fc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	2b00      	cmp	r3, #0
 8005402:	d101      	bne.n	8005408 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005404:	2301      	movs	r3, #1
 8005406:	e0cc      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005408:	4b68      	ldr	r3, [pc, #416]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	f003 030f 	and.w	r3, r3, #15
 8005410:	683a      	ldr	r2, [r7, #0]
 8005412:	429a      	cmp	r2, r3
 8005414:	d90c      	bls.n	8005430 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005416:	4b65      	ldr	r3, [pc, #404]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005418:	683a      	ldr	r2, [r7, #0]
 800541a:	b2d2      	uxtb	r2, r2
 800541c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800541e:	4b63      	ldr	r3, [pc, #396]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	f003 030f 	and.w	r3, r3, #15
 8005426:	683a      	ldr	r2, [r7, #0]
 8005428:	429a      	cmp	r2, r3
 800542a:	d001      	beq.n	8005430 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800542c:	2301      	movs	r3, #1
 800542e:	e0b8      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	f003 0302 	and.w	r3, r3, #2
 8005438:	2b00      	cmp	r3, #0
 800543a:	d020      	beq.n	800547e <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	f003 0304 	and.w	r3, r3, #4
 8005444:	2b00      	cmp	r3, #0
 8005446:	d005      	beq.n	8005454 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005448:	4b59      	ldr	r3, [pc, #356]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800544a:	689b      	ldr	r3, [r3, #8]
 800544c:	4a58      	ldr	r2, [pc, #352]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800544e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8005452:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	f003 0308 	and.w	r3, r3, #8
 800545c:	2b00      	cmp	r3, #0
 800545e:	d005      	beq.n	800546c <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005460:	4b53      	ldr	r3, [pc, #332]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005462:	689b      	ldr	r3, [r3, #8]
 8005464:	4a52      	ldr	r2, [pc, #328]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005466:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800546a:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800546c:	4b50      	ldr	r3, [pc, #320]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800546e:	689b      	ldr	r3, [r3, #8]
 8005470:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	689b      	ldr	r3, [r3, #8]
 8005478:	494d      	ldr	r1, [pc, #308]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800547a:	4313      	orrs	r3, r2
 800547c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	681b      	ldr	r3, [r3, #0]
 8005482:	f003 0301 	and.w	r3, r3, #1
 8005486:	2b00      	cmp	r3, #0
 8005488:	d044      	beq.n	8005514 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	685b      	ldr	r3, [r3, #4]
 800548e:	2b01      	cmp	r3, #1
 8005490:	d107      	bne.n	80054a2 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005492:	4b47      	ldr	r3, [pc, #284]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005494:	681b      	ldr	r3, [r3, #0]
 8005496:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800549a:	2b00      	cmp	r3, #0
 800549c:	d119      	bne.n	80054d2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800549e:	2301      	movs	r3, #1
 80054a0:	e07f      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	685b      	ldr	r3, [r3, #4]
 80054a6:	2b02      	cmp	r3, #2
 80054a8:	d003      	beq.n	80054b2 <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80054ae:	2b03      	cmp	r3, #3
 80054b0:	d107      	bne.n	80054c2 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80054b2:	4b3f      	ldr	r3, [pc, #252]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80054ba:	2b00      	cmp	r3, #0
 80054bc:	d109      	bne.n	80054d2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80054be:	2301      	movs	r3, #1
 80054c0:	e06f      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80054c2:	4b3b      	ldr	r3, [pc, #236]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	f003 0302 	and.w	r3, r3, #2
 80054ca:	2b00      	cmp	r3, #0
 80054cc:	d101      	bne.n	80054d2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80054ce:	2301      	movs	r3, #1
 80054d0:	e067      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80054d2:	4b37      	ldr	r3, [pc, #220]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054d4:	689b      	ldr	r3, [r3, #8]
 80054d6:	f023 0203 	bic.w	r2, r3, #3
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	685b      	ldr	r3, [r3, #4]
 80054de:	4934      	ldr	r1, [pc, #208]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054e0:	4313      	orrs	r3, r2
 80054e2:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80054e4:	f7fd fab0 	bl	8002a48 <HAL_GetTick>
 80054e8:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80054ea:	e00a      	b.n	8005502 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80054ec:	f7fd faac 	bl	8002a48 <HAL_GetTick>
 80054f0:	4602      	mov	r2, r0
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	1ad3      	subs	r3, r2, r3
 80054f6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80054fa:	4293      	cmp	r3, r2
 80054fc:	d901      	bls.n	8005502 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 80054fe:	2303      	movs	r3, #3
 8005500:	e04f      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005502:	4b2b      	ldr	r3, [pc, #172]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005504:	689b      	ldr	r3, [r3, #8]
 8005506:	f003 020c 	and.w	r2, r3, #12
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	685b      	ldr	r3, [r3, #4]
 800550e:	009b      	lsls	r3, r3, #2
 8005510:	429a      	cmp	r2, r3
 8005512:	d1eb      	bne.n	80054ec <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005514:	4b25      	ldr	r3, [pc, #148]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	f003 030f 	and.w	r3, r3, #15
 800551c:	683a      	ldr	r2, [r7, #0]
 800551e:	429a      	cmp	r2, r3
 8005520:	d20c      	bcs.n	800553c <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005522:	4b22      	ldr	r3, [pc, #136]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005524:	683a      	ldr	r2, [r7, #0]
 8005526:	b2d2      	uxtb	r2, r2
 8005528:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800552a:	4b20      	ldr	r3, [pc, #128]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	f003 030f 	and.w	r3, r3, #15
 8005532:	683a      	ldr	r2, [r7, #0]
 8005534:	429a      	cmp	r2, r3
 8005536:	d001      	beq.n	800553c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8005538:	2301      	movs	r3, #1
 800553a:	e032      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	f003 0304 	and.w	r3, r3, #4
 8005544:	2b00      	cmp	r3, #0
 8005546:	d008      	beq.n	800555a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005548:	4b19      	ldr	r3, [pc, #100]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800554a:	689b      	ldr	r3, [r3, #8]
 800554c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	68db      	ldr	r3, [r3, #12]
 8005554:	4916      	ldr	r1, [pc, #88]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005556:	4313      	orrs	r3, r2
 8005558:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	f003 0308 	and.w	r3, r3, #8
 8005562:	2b00      	cmp	r3, #0
 8005564:	d009      	beq.n	800557a <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005566:	4b12      	ldr	r3, [pc, #72]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005568:	689b      	ldr	r3, [r3, #8]
 800556a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	691b      	ldr	r3, [r3, #16]
 8005572:	00db      	lsls	r3, r3, #3
 8005574:	490e      	ldr	r1, [pc, #56]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005576:	4313      	orrs	r3, r2
 8005578:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800557a:	f000 f841 	bl	8005600 <HAL_RCC_GetSysClockFreq>
 800557e:	4602      	mov	r2, r0
 8005580:	4b0b      	ldr	r3, [pc, #44]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005582:	689b      	ldr	r3, [r3, #8]
 8005584:	091b      	lsrs	r3, r3, #4
 8005586:	f003 030f 	and.w	r3, r3, #15
 800558a:	490a      	ldr	r1, [pc, #40]	@ (80055b4 <HAL_RCC_ClockConfig+0x1c0>)
 800558c:	5ccb      	ldrb	r3, [r1, r3]
 800558e:	fa22 f303 	lsr.w	r3, r2, r3
 8005592:	4a09      	ldr	r2, [pc, #36]	@ (80055b8 <HAL_RCC_ClockConfig+0x1c4>)
 8005594:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 8005596:	4b09      	ldr	r3, [pc, #36]	@ (80055bc <HAL_RCC_ClockConfig+0x1c8>)
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	4618      	mov	r0, r3
 800559c:	f7fd fa10 	bl	80029c0 <HAL_InitTick>

  return HAL_OK;
 80055a0:	2300      	movs	r3, #0
}
 80055a2:	4618      	mov	r0, r3
 80055a4:	3710      	adds	r7, #16
 80055a6:	46bd      	mov	sp, r7
 80055a8:	bd80      	pop	{r7, pc}
 80055aa:	bf00      	nop
 80055ac:	40023c00 	.word	0x40023c00
 80055b0:	40023800 	.word	0x40023800
 80055b4:	080243d0 	.word	0x080243d0
 80055b8:	20000008 	.word	0x20000008
 80055bc:	20000018 	.word	0x20000018

080055c0 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80055c0:	b480      	push	{r7}
 80055c2:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80055c4:	4b03      	ldr	r3, [pc, #12]	@ (80055d4 <HAL_RCC_GetHCLKFreq+0x14>)
 80055c6:	681b      	ldr	r3, [r3, #0]
}
 80055c8:	4618      	mov	r0, r3
 80055ca:	46bd      	mov	sp, r7
 80055cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055d0:	4770      	bx	lr
 80055d2:	bf00      	nop
 80055d4:	20000008 	.word	0x20000008

080055d8 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80055d8:	b580      	push	{r7, lr}
 80055da:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80055dc:	f7ff fff0 	bl	80055c0 <HAL_RCC_GetHCLKFreq>
 80055e0:	4602      	mov	r2, r0
 80055e2:	4b05      	ldr	r3, [pc, #20]	@ (80055f8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80055e4:	689b      	ldr	r3, [r3, #8]
 80055e6:	0a9b      	lsrs	r3, r3, #10
 80055e8:	f003 0307 	and.w	r3, r3, #7
 80055ec:	4903      	ldr	r1, [pc, #12]	@ (80055fc <HAL_RCC_GetPCLK1Freq+0x24>)
 80055ee:	5ccb      	ldrb	r3, [r1, r3]
 80055f0:	fa22 f303 	lsr.w	r3, r2, r3
}
 80055f4:	4618      	mov	r0, r3
 80055f6:	bd80      	pop	{r7, pc}
 80055f8:	40023800 	.word	0x40023800
 80055fc:	080243e0 	.word	0x080243e0

08005600 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005600:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005604:	b0ae      	sub	sp, #184	@ 0xb8
 8005606:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8005608:	2300      	movs	r3, #0
 800560a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 800560e:	2300      	movs	r3, #0
 8005610:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 8005614:	2300      	movs	r3, #0
 8005616:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 800561a:	2300      	movs	r3, #0
 800561c:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 8005620:	2300      	movs	r3, #0
 8005622:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005626:	4bcb      	ldr	r3, [pc, #812]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 8005628:	689b      	ldr	r3, [r3, #8]
 800562a:	f003 030c 	and.w	r3, r3, #12
 800562e:	2b0c      	cmp	r3, #12
 8005630:	f200 8206 	bhi.w	8005a40 <HAL_RCC_GetSysClockFreq+0x440>
 8005634:	a201      	add	r2, pc, #4	@ (adr r2, 800563c <HAL_RCC_GetSysClockFreq+0x3c>)
 8005636:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800563a:	bf00      	nop
 800563c:	08005671 	.word	0x08005671
 8005640:	08005a41 	.word	0x08005a41
 8005644:	08005a41 	.word	0x08005a41
 8005648:	08005a41 	.word	0x08005a41
 800564c:	08005679 	.word	0x08005679
 8005650:	08005a41 	.word	0x08005a41
 8005654:	08005a41 	.word	0x08005a41
 8005658:	08005a41 	.word	0x08005a41
 800565c:	08005681 	.word	0x08005681
 8005660:	08005a41 	.word	0x08005a41
 8005664:	08005a41 	.word	0x08005a41
 8005668:	08005a41 	.word	0x08005a41
 800566c:	08005871 	.word	0x08005871
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8005670:	4bb9      	ldr	r3, [pc, #740]	@ (8005958 <HAL_RCC_GetSysClockFreq+0x358>)
 8005672:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005676:	e1e7      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8005678:	4bb8      	ldr	r3, [pc, #736]	@ (800595c <HAL_RCC_GetSysClockFreq+0x35c>)
 800567a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800567e:	e1e3      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005680:	4bb4      	ldr	r3, [pc, #720]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 8005682:	685b      	ldr	r3, [r3, #4]
 8005684:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005688:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800568c:	4bb1      	ldr	r3, [pc, #708]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800568e:	685b      	ldr	r3, [r3, #4]
 8005690:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005694:	2b00      	cmp	r3, #0
 8005696:	d071      	beq.n	800577c <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005698:	4bae      	ldr	r3, [pc, #696]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800569a:	685b      	ldr	r3, [r3, #4]
 800569c:	099b      	lsrs	r3, r3, #6
 800569e:	2200      	movs	r2, #0
 80056a0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80056a4:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80056a8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80056ac:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80056b0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80056b4:	2300      	movs	r3, #0
 80056b6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80056ba:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80056be:	4622      	mov	r2, r4
 80056c0:	462b      	mov	r3, r5
 80056c2:	f04f 0000 	mov.w	r0, #0
 80056c6:	f04f 0100 	mov.w	r1, #0
 80056ca:	0159      	lsls	r1, r3, #5
 80056cc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80056d0:	0150      	lsls	r0, r2, #5
 80056d2:	4602      	mov	r2, r0
 80056d4:	460b      	mov	r3, r1
 80056d6:	4621      	mov	r1, r4
 80056d8:	1a51      	subs	r1, r2, r1
 80056da:	6439      	str	r1, [r7, #64]	@ 0x40
 80056dc:	4629      	mov	r1, r5
 80056de:	eb63 0301 	sbc.w	r3, r3, r1
 80056e2:	647b      	str	r3, [r7, #68]	@ 0x44
 80056e4:	f04f 0200 	mov.w	r2, #0
 80056e8:	f04f 0300 	mov.w	r3, #0
 80056ec:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 80056f0:	4649      	mov	r1, r9
 80056f2:	018b      	lsls	r3, r1, #6
 80056f4:	4641      	mov	r1, r8
 80056f6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80056fa:	4641      	mov	r1, r8
 80056fc:	018a      	lsls	r2, r1, #6
 80056fe:	4641      	mov	r1, r8
 8005700:	1a51      	subs	r1, r2, r1
 8005702:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005704:	4649      	mov	r1, r9
 8005706:	eb63 0301 	sbc.w	r3, r3, r1
 800570a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800570c:	f04f 0200 	mov.w	r2, #0
 8005710:	f04f 0300 	mov.w	r3, #0
 8005714:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8005718:	4649      	mov	r1, r9
 800571a:	00cb      	lsls	r3, r1, #3
 800571c:	4641      	mov	r1, r8
 800571e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005722:	4641      	mov	r1, r8
 8005724:	00ca      	lsls	r2, r1, #3
 8005726:	4610      	mov	r0, r2
 8005728:	4619      	mov	r1, r3
 800572a:	4603      	mov	r3, r0
 800572c:	4622      	mov	r2, r4
 800572e:	189b      	adds	r3, r3, r2
 8005730:	633b      	str	r3, [r7, #48]	@ 0x30
 8005732:	462b      	mov	r3, r5
 8005734:	460a      	mov	r2, r1
 8005736:	eb42 0303 	adc.w	r3, r2, r3
 800573a:	637b      	str	r3, [r7, #52]	@ 0x34
 800573c:	f04f 0200 	mov.w	r2, #0
 8005740:	f04f 0300 	mov.w	r3, #0
 8005744:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8005748:	4629      	mov	r1, r5
 800574a:	024b      	lsls	r3, r1, #9
 800574c:	4621      	mov	r1, r4
 800574e:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005752:	4621      	mov	r1, r4
 8005754:	024a      	lsls	r2, r1, #9
 8005756:	4610      	mov	r0, r2
 8005758:	4619      	mov	r1, r3
 800575a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800575e:	2200      	movs	r2, #0
 8005760:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005764:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005768:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800576c:	f7fb fa46 	bl	8000bfc <__aeabi_uldivmod>
 8005770:	4602      	mov	r2, r0
 8005772:	460b      	mov	r3, r1
 8005774:	4613      	mov	r3, r2
 8005776:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800577a:	e067      	b.n	800584c <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800577c:	4b75      	ldr	r3, [pc, #468]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800577e:	685b      	ldr	r3, [r3, #4]
 8005780:	099b      	lsrs	r3, r3, #6
 8005782:	2200      	movs	r2, #0
 8005784:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8005788:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 800578c:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8005790:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005794:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005796:	2300      	movs	r3, #0
 8005798:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800579a:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 800579e:	4622      	mov	r2, r4
 80057a0:	462b      	mov	r3, r5
 80057a2:	f04f 0000 	mov.w	r0, #0
 80057a6:	f04f 0100 	mov.w	r1, #0
 80057aa:	0159      	lsls	r1, r3, #5
 80057ac:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80057b0:	0150      	lsls	r0, r2, #5
 80057b2:	4602      	mov	r2, r0
 80057b4:	460b      	mov	r3, r1
 80057b6:	4621      	mov	r1, r4
 80057b8:	1a51      	subs	r1, r2, r1
 80057ba:	62b9      	str	r1, [r7, #40]	@ 0x28
 80057bc:	4629      	mov	r1, r5
 80057be:	eb63 0301 	sbc.w	r3, r3, r1
 80057c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80057c4:	f04f 0200 	mov.w	r2, #0
 80057c8:	f04f 0300 	mov.w	r3, #0
 80057cc:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 80057d0:	4649      	mov	r1, r9
 80057d2:	018b      	lsls	r3, r1, #6
 80057d4:	4641      	mov	r1, r8
 80057d6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80057da:	4641      	mov	r1, r8
 80057dc:	018a      	lsls	r2, r1, #6
 80057de:	4641      	mov	r1, r8
 80057e0:	ebb2 0a01 	subs.w	sl, r2, r1
 80057e4:	4649      	mov	r1, r9
 80057e6:	eb63 0b01 	sbc.w	fp, r3, r1
 80057ea:	f04f 0200 	mov.w	r2, #0
 80057ee:	f04f 0300 	mov.w	r3, #0
 80057f2:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80057f6:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80057fa:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80057fe:	4692      	mov	sl, r2
 8005800:	469b      	mov	fp, r3
 8005802:	4623      	mov	r3, r4
 8005804:	eb1a 0303 	adds.w	r3, sl, r3
 8005808:	623b      	str	r3, [r7, #32]
 800580a:	462b      	mov	r3, r5
 800580c:	eb4b 0303 	adc.w	r3, fp, r3
 8005810:	627b      	str	r3, [r7, #36]	@ 0x24
 8005812:	f04f 0200 	mov.w	r2, #0
 8005816:	f04f 0300 	mov.w	r3, #0
 800581a:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 800581e:	4629      	mov	r1, r5
 8005820:	028b      	lsls	r3, r1, #10
 8005822:	4621      	mov	r1, r4
 8005824:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005828:	4621      	mov	r1, r4
 800582a:	028a      	lsls	r2, r1, #10
 800582c:	4610      	mov	r0, r2
 800582e:	4619      	mov	r1, r3
 8005830:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005834:	2200      	movs	r2, #0
 8005836:	673b      	str	r3, [r7, #112]	@ 0x70
 8005838:	677a      	str	r2, [r7, #116]	@ 0x74
 800583a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800583e:	f7fb f9dd 	bl	8000bfc <__aeabi_uldivmod>
 8005842:	4602      	mov	r2, r0
 8005844:	460b      	mov	r3, r1
 8005846:	4613      	mov	r3, r2
 8005848:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800584c:	4b41      	ldr	r3, [pc, #260]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800584e:	685b      	ldr	r3, [r3, #4]
 8005850:	0c1b      	lsrs	r3, r3, #16
 8005852:	f003 0303 	and.w	r3, r3, #3
 8005856:	3301      	adds	r3, #1
 8005858:	005b      	lsls	r3, r3, #1
 800585a:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 800585e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005862:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005866:	fbb2 f3f3 	udiv	r3, r2, r3
 800586a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800586e:	e0eb      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005870:	4b38      	ldr	r3, [pc, #224]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 8005872:	685b      	ldr	r3, [r3, #4]
 8005874:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005878:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800587c:	4b35      	ldr	r3, [pc, #212]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800587e:	685b      	ldr	r3, [r3, #4]
 8005880:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005884:	2b00      	cmp	r3, #0
 8005886:	d06b      	beq.n	8005960 <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005888:	4b32      	ldr	r3, [pc, #200]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800588a:	685b      	ldr	r3, [r3, #4]
 800588c:	099b      	lsrs	r3, r3, #6
 800588e:	2200      	movs	r2, #0
 8005890:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005892:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005894:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005896:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800589a:	663b      	str	r3, [r7, #96]	@ 0x60
 800589c:	2300      	movs	r3, #0
 800589e:	667b      	str	r3, [r7, #100]	@ 0x64
 80058a0:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80058a4:	4622      	mov	r2, r4
 80058a6:	462b      	mov	r3, r5
 80058a8:	f04f 0000 	mov.w	r0, #0
 80058ac:	f04f 0100 	mov.w	r1, #0
 80058b0:	0159      	lsls	r1, r3, #5
 80058b2:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80058b6:	0150      	lsls	r0, r2, #5
 80058b8:	4602      	mov	r2, r0
 80058ba:	460b      	mov	r3, r1
 80058bc:	4621      	mov	r1, r4
 80058be:	1a51      	subs	r1, r2, r1
 80058c0:	61b9      	str	r1, [r7, #24]
 80058c2:	4629      	mov	r1, r5
 80058c4:	eb63 0301 	sbc.w	r3, r3, r1
 80058c8:	61fb      	str	r3, [r7, #28]
 80058ca:	f04f 0200 	mov.w	r2, #0
 80058ce:	f04f 0300 	mov.w	r3, #0
 80058d2:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 80058d6:	4659      	mov	r1, fp
 80058d8:	018b      	lsls	r3, r1, #6
 80058da:	4651      	mov	r1, sl
 80058dc:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80058e0:	4651      	mov	r1, sl
 80058e2:	018a      	lsls	r2, r1, #6
 80058e4:	4651      	mov	r1, sl
 80058e6:	ebb2 0801 	subs.w	r8, r2, r1
 80058ea:	4659      	mov	r1, fp
 80058ec:	eb63 0901 	sbc.w	r9, r3, r1
 80058f0:	f04f 0200 	mov.w	r2, #0
 80058f4:	f04f 0300 	mov.w	r3, #0
 80058f8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80058fc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005900:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005904:	4690      	mov	r8, r2
 8005906:	4699      	mov	r9, r3
 8005908:	4623      	mov	r3, r4
 800590a:	eb18 0303 	adds.w	r3, r8, r3
 800590e:	613b      	str	r3, [r7, #16]
 8005910:	462b      	mov	r3, r5
 8005912:	eb49 0303 	adc.w	r3, r9, r3
 8005916:	617b      	str	r3, [r7, #20]
 8005918:	f04f 0200 	mov.w	r2, #0
 800591c:	f04f 0300 	mov.w	r3, #0
 8005920:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8005924:	4629      	mov	r1, r5
 8005926:	024b      	lsls	r3, r1, #9
 8005928:	4621      	mov	r1, r4
 800592a:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800592e:	4621      	mov	r1, r4
 8005930:	024a      	lsls	r2, r1, #9
 8005932:	4610      	mov	r0, r2
 8005934:	4619      	mov	r1, r3
 8005936:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800593a:	2200      	movs	r2, #0
 800593c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800593e:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005940:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005944:	f7fb f95a 	bl	8000bfc <__aeabi_uldivmod>
 8005948:	4602      	mov	r2, r0
 800594a:	460b      	mov	r3, r1
 800594c:	4613      	mov	r3, r2
 800594e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005952:	e065      	b.n	8005a20 <HAL_RCC_GetSysClockFreq+0x420>
 8005954:	40023800 	.word	0x40023800
 8005958:	00f42400 	.word	0x00f42400
 800595c:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005960:	4b3d      	ldr	r3, [pc, #244]	@ (8005a58 <HAL_RCC_GetSysClockFreq+0x458>)
 8005962:	685b      	ldr	r3, [r3, #4]
 8005964:	099b      	lsrs	r3, r3, #6
 8005966:	2200      	movs	r2, #0
 8005968:	4618      	mov	r0, r3
 800596a:	4611      	mov	r1, r2
 800596c:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005970:	653b      	str	r3, [r7, #80]	@ 0x50
 8005972:	2300      	movs	r3, #0
 8005974:	657b      	str	r3, [r7, #84]	@ 0x54
 8005976:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 800597a:	4642      	mov	r2, r8
 800597c:	464b      	mov	r3, r9
 800597e:	f04f 0000 	mov.w	r0, #0
 8005982:	f04f 0100 	mov.w	r1, #0
 8005986:	0159      	lsls	r1, r3, #5
 8005988:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800598c:	0150      	lsls	r0, r2, #5
 800598e:	4602      	mov	r2, r0
 8005990:	460b      	mov	r3, r1
 8005992:	4641      	mov	r1, r8
 8005994:	1a51      	subs	r1, r2, r1
 8005996:	60b9      	str	r1, [r7, #8]
 8005998:	4649      	mov	r1, r9
 800599a:	eb63 0301 	sbc.w	r3, r3, r1
 800599e:	60fb      	str	r3, [r7, #12]
 80059a0:	f04f 0200 	mov.w	r2, #0
 80059a4:	f04f 0300 	mov.w	r3, #0
 80059a8:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 80059ac:	4659      	mov	r1, fp
 80059ae:	018b      	lsls	r3, r1, #6
 80059b0:	4651      	mov	r1, sl
 80059b2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80059b6:	4651      	mov	r1, sl
 80059b8:	018a      	lsls	r2, r1, #6
 80059ba:	4651      	mov	r1, sl
 80059bc:	1a54      	subs	r4, r2, r1
 80059be:	4659      	mov	r1, fp
 80059c0:	eb63 0501 	sbc.w	r5, r3, r1
 80059c4:	f04f 0200 	mov.w	r2, #0
 80059c8:	f04f 0300 	mov.w	r3, #0
 80059cc:	00eb      	lsls	r3, r5, #3
 80059ce:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80059d2:	00e2      	lsls	r2, r4, #3
 80059d4:	4614      	mov	r4, r2
 80059d6:	461d      	mov	r5, r3
 80059d8:	4643      	mov	r3, r8
 80059da:	18e3      	adds	r3, r4, r3
 80059dc:	603b      	str	r3, [r7, #0]
 80059de:	464b      	mov	r3, r9
 80059e0:	eb45 0303 	adc.w	r3, r5, r3
 80059e4:	607b      	str	r3, [r7, #4]
 80059e6:	f04f 0200 	mov.w	r2, #0
 80059ea:	f04f 0300 	mov.w	r3, #0
 80059ee:	e9d7 4500 	ldrd	r4, r5, [r7]
 80059f2:	4629      	mov	r1, r5
 80059f4:	028b      	lsls	r3, r1, #10
 80059f6:	4621      	mov	r1, r4
 80059f8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80059fc:	4621      	mov	r1, r4
 80059fe:	028a      	lsls	r2, r1, #10
 8005a00:	4610      	mov	r0, r2
 8005a02:	4619      	mov	r1, r3
 8005a04:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005a08:	2200      	movs	r2, #0
 8005a0a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005a0c:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005a0e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005a12:	f7fb f8f3 	bl	8000bfc <__aeabi_uldivmod>
 8005a16:	4602      	mov	r2, r0
 8005a18:	460b      	mov	r3, r1
 8005a1a:	4613      	mov	r3, r2
 8005a1c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 8005a20:	4b0d      	ldr	r3, [pc, #52]	@ (8005a58 <HAL_RCC_GetSysClockFreq+0x458>)
 8005a22:	685b      	ldr	r3, [r3, #4]
 8005a24:	0f1b      	lsrs	r3, r3, #28
 8005a26:	f003 0307 	and.w	r3, r3, #7
 8005a2a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 8005a2e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005a32:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005a36:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a3a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005a3e:	e003      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005a40:	4b06      	ldr	r3, [pc, #24]	@ (8005a5c <HAL_RCC_GetSysClockFreq+0x45c>)
 8005a42:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005a46:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005a48:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 8005a4c:	4618      	mov	r0, r3
 8005a4e:	37b8      	adds	r7, #184	@ 0xb8
 8005a50:	46bd      	mov	sp, r7
 8005a52:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005a56:	bf00      	nop
 8005a58:	40023800 	.word	0x40023800
 8005a5c:	00f42400 	.word	0x00f42400

08005a60 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005a60:	b580      	push	{r7, lr}
 8005a62:	b086      	sub	sp, #24
 8005a64:	af00      	add	r7, sp, #0
 8005a66:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	2b00      	cmp	r3, #0
 8005a6c:	d101      	bne.n	8005a72 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005a6e:	2301      	movs	r3, #1
 8005a70:	e28d      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	f003 0301 	and.w	r3, r3, #1
 8005a7a:	2b00      	cmp	r3, #0
 8005a7c:	f000 8083 	beq.w	8005b86 <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 8005a80:	4b94      	ldr	r3, [pc, #592]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005a82:	689b      	ldr	r3, [r3, #8]
 8005a84:	f003 030c 	and.w	r3, r3, #12
 8005a88:	2b04      	cmp	r3, #4
 8005a8a:	d019      	beq.n	8005ac0 <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005a8c:	4b91      	ldr	r3, [pc, #580]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005a8e:	689b      	ldr	r3, [r3, #8]
 8005a90:	f003 030c 	and.w	r3, r3, #12
        || \
 8005a94:	2b08      	cmp	r3, #8
 8005a96:	d106      	bne.n	8005aa6 <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005a98:	4b8e      	ldr	r3, [pc, #568]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005a9a:	685b      	ldr	r3, [r3, #4]
 8005a9c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005aa0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005aa4:	d00c      	beq.n	8005ac0 <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005aa6:	4b8b      	ldr	r3, [pc, #556]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005aa8:	689b      	ldr	r3, [r3, #8]
 8005aaa:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005aae:	2b0c      	cmp	r3, #12
 8005ab0:	d112      	bne.n	8005ad8 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005ab2:	4b88      	ldr	r3, [pc, #544]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ab4:	685b      	ldr	r3, [r3, #4]
 8005ab6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005aba:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005abe:	d10b      	bne.n	8005ad8 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005ac0:	4b84      	ldr	r3, [pc, #528]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	d05b      	beq.n	8005b84 <HAL_RCC_OscConfig+0x124>
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	685b      	ldr	r3, [r3, #4]
 8005ad0:	2b00      	cmp	r3, #0
 8005ad2:	d157      	bne.n	8005b84 <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8005ad4:	2301      	movs	r3, #1
 8005ad6:	e25a      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	685b      	ldr	r3, [r3, #4]
 8005adc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005ae0:	d106      	bne.n	8005af0 <HAL_RCC_OscConfig+0x90>
 8005ae2:	4b7c      	ldr	r3, [pc, #496]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	4a7b      	ldr	r2, [pc, #492]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ae8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005aec:	6013      	str	r3, [r2, #0]
 8005aee:	e01d      	b.n	8005b2c <HAL_RCC_OscConfig+0xcc>
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	685b      	ldr	r3, [r3, #4]
 8005af4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005af8:	d10c      	bne.n	8005b14 <HAL_RCC_OscConfig+0xb4>
 8005afa:	4b76      	ldr	r3, [pc, #472]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	4a75      	ldr	r2, [pc, #468]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b00:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005b04:	6013      	str	r3, [r2, #0]
 8005b06:	4b73      	ldr	r3, [pc, #460]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	4a72      	ldr	r2, [pc, #456]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b0c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005b10:	6013      	str	r3, [r2, #0]
 8005b12:	e00b      	b.n	8005b2c <HAL_RCC_OscConfig+0xcc>
 8005b14:	4b6f      	ldr	r3, [pc, #444]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	4a6e      	ldr	r2, [pc, #440]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b1a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005b1e:	6013      	str	r3, [r2, #0]
 8005b20:	4b6c      	ldr	r3, [pc, #432]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	4a6b      	ldr	r2, [pc, #428]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b26:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005b2a:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	685b      	ldr	r3, [r3, #4]
 8005b30:	2b00      	cmp	r3, #0
 8005b32:	d013      	beq.n	8005b5c <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b34:	f7fc ff88 	bl	8002a48 <HAL_GetTick>
 8005b38:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b3a:	e008      	b.n	8005b4e <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005b3c:	f7fc ff84 	bl	8002a48 <HAL_GetTick>
 8005b40:	4602      	mov	r2, r0
 8005b42:	693b      	ldr	r3, [r7, #16]
 8005b44:	1ad3      	subs	r3, r2, r3
 8005b46:	2b64      	cmp	r3, #100	@ 0x64
 8005b48:	d901      	bls.n	8005b4e <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 8005b4a:	2303      	movs	r3, #3
 8005b4c:	e21f      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b4e:	4b61      	ldr	r3, [pc, #388]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b50:	681b      	ldr	r3, [r3, #0]
 8005b52:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	d0f0      	beq.n	8005b3c <HAL_RCC_OscConfig+0xdc>
 8005b5a:	e014      	b.n	8005b86 <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b5c:	f7fc ff74 	bl	8002a48 <HAL_GetTick>
 8005b60:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b62:	e008      	b.n	8005b76 <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005b64:	f7fc ff70 	bl	8002a48 <HAL_GetTick>
 8005b68:	4602      	mov	r2, r0
 8005b6a:	693b      	ldr	r3, [r7, #16]
 8005b6c:	1ad3      	subs	r3, r2, r3
 8005b6e:	2b64      	cmp	r3, #100	@ 0x64
 8005b70:	d901      	bls.n	8005b76 <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 8005b72:	2303      	movs	r3, #3
 8005b74:	e20b      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b76:	4b57      	ldr	r3, [pc, #348]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d1f0      	bne.n	8005b64 <HAL_RCC_OscConfig+0x104>
 8005b82:	e000      	b.n	8005b86 <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005b84:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	f003 0302 	and.w	r3, r3, #2
 8005b8e:	2b00      	cmp	r3, #0
 8005b90:	d06f      	beq.n	8005c72 <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 8005b92:	4b50      	ldr	r3, [pc, #320]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b94:	689b      	ldr	r3, [r3, #8]
 8005b96:	f003 030c 	and.w	r3, r3, #12
 8005b9a:	2b00      	cmp	r3, #0
 8005b9c:	d017      	beq.n	8005bce <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005b9e:	4b4d      	ldr	r3, [pc, #308]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ba0:	689b      	ldr	r3, [r3, #8]
 8005ba2:	f003 030c 	and.w	r3, r3, #12
        || \
 8005ba6:	2b08      	cmp	r3, #8
 8005ba8:	d105      	bne.n	8005bb6 <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005baa:	4b4a      	ldr	r3, [pc, #296]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bac:	685b      	ldr	r3, [r3, #4]
 8005bae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d00b      	beq.n	8005bce <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bb6:	4b47      	ldr	r3, [pc, #284]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bb8:	689b      	ldr	r3, [r3, #8]
 8005bba:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005bbe:	2b0c      	cmp	r3, #12
 8005bc0:	d11c      	bne.n	8005bfc <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bc2:	4b44      	ldr	r3, [pc, #272]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bc4:	685b      	ldr	r3, [r3, #4]
 8005bc6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005bca:	2b00      	cmp	r3, #0
 8005bcc:	d116      	bne.n	8005bfc <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005bce:	4b41      	ldr	r3, [pc, #260]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	f003 0302 	and.w	r3, r3, #2
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	d005      	beq.n	8005be6 <HAL_RCC_OscConfig+0x186>
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	68db      	ldr	r3, [r3, #12]
 8005bde:	2b01      	cmp	r3, #1
 8005be0:	d001      	beq.n	8005be6 <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 8005be2:	2301      	movs	r3, #1
 8005be4:	e1d3      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005be6:	4b3b      	ldr	r3, [pc, #236]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	691b      	ldr	r3, [r3, #16]
 8005bf2:	00db      	lsls	r3, r3, #3
 8005bf4:	4937      	ldr	r1, [pc, #220]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bf6:	4313      	orrs	r3, r2
 8005bf8:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005bfa:	e03a      	b.n	8005c72 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	68db      	ldr	r3, [r3, #12]
 8005c00:	2b00      	cmp	r3, #0
 8005c02:	d020      	beq.n	8005c46 <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005c04:	4b34      	ldr	r3, [pc, #208]	@ (8005cd8 <HAL_RCC_OscConfig+0x278>)
 8005c06:	2201      	movs	r2, #1
 8005c08:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c0a:	f7fc ff1d 	bl	8002a48 <HAL_GetTick>
 8005c0e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c10:	e008      	b.n	8005c24 <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005c12:	f7fc ff19 	bl	8002a48 <HAL_GetTick>
 8005c16:	4602      	mov	r2, r0
 8005c18:	693b      	ldr	r3, [r7, #16]
 8005c1a:	1ad3      	subs	r3, r2, r3
 8005c1c:	2b02      	cmp	r3, #2
 8005c1e:	d901      	bls.n	8005c24 <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 8005c20:	2303      	movs	r3, #3
 8005c22:	e1b4      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c24:	4b2b      	ldr	r3, [pc, #172]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	f003 0302 	and.w	r3, r3, #2
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	d0f0      	beq.n	8005c12 <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005c30:	4b28      	ldr	r3, [pc, #160]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	691b      	ldr	r3, [r3, #16]
 8005c3c:	00db      	lsls	r3, r3, #3
 8005c3e:	4925      	ldr	r1, [pc, #148]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c40:	4313      	orrs	r3, r2
 8005c42:	600b      	str	r3, [r1, #0]
 8005c44:	e015      	b.n	8005c72 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005c46:	4b24      	ldr	r3, [pc, #144]	@ (8005cd8 <HAL_RCC_OscConfig+0x278>)
 8005c48:	2200      	movs	r2, #0
 8005c4a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c4c:	f7fc fefc 	bl	8002a48 <HAL_GetTick>
 8005c50:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c52:	e008      	b.n	8005c66 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005c54:	f7fc fef8 	bl	8002a48 <HAL_GetTick>
 8005c58:	4602      	mov	r2, r0
 8005c5a:	693b      	ldr	r3, [r7, #16]
 8005c5c:	1ad3      	subs	r3, r2, r3
 8005c5e:	2b02      	cmp	r3, #2
 8005c60:	d901      	bls.n	8005c66 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8005c62:	2303      	movs	r3, #3
 8005c64:	e193      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c66:	4b1b      	ldr	r3, [pc, #108]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c68:	681b      	ldr	r3, [r3, #0]
 8005c6a:	f003 0302 	and.w	r3, r3, #2
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d1f0      	bne.n	8005c54 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	f003 0308 	and.w	r3, r3, #8
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	d036      	beq.n	8005cec <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	695b      	ldr	r3, [r3, #20]
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d016      	beq.n	8005cb4 <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005c86:	4b15      	ldr	r3, [pc, #84]	@ (8005cdc <HAL_RCC_OscConfig+0x27c>)
 8005c88:	2201      	movs	r2, #1
 8005c8a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005c8c:	f7fc fedc 	bl	8002a48 <HAL_GetTick>
 8005c90:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005c92:	e008      	b.n	8005ca6 <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005c94:	f7fc fed8 	bl	8002a48 <HAL_GetTick>
 8005c98:	4602      	mov	r2, r0
 8005c9a:	693b      	ldr	r3, [r7, #16]
 8005c9c:	1ad3      	subs	r3, r2, r3
 8005c9e:	2b02      	cmp	r3, #2
 8005ca0:	d901      	bls.n	8005ca6 <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 8005ca2:	2303      	movs	r3, #3
 8005ca4:	e173      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005ca6:	4b0b      	ldr	r3, [pc, #44]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ca8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005caa:	f003 0302 	and.w	r3, r3, #2
 8005cae:	2b00      	cmp	r3, #0
 8005cb0:	d0f0      	beq.n	8005c94 <HAL_RCC_OscConfig+0x234>
 8005cb2:	e01b      	b.n	8005cec <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005cb4:	4b09      	ldr	r3, [pc, #36]	@ (8005cdc <HAL_RCC_OscConfig+0x27c>)
 8005cb6:	2200      	movs	r2, #0
 8005cb8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005cba:	f7fc fec5 	bl	8002a48 <HAL_GetTick>
 8005cbe:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005cc0:	e00e      	b.n	8005ce0 <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005cc2:	f7fc fec1 	bl	8002a48 <HAL_GetTick>
 8005cc6:	4602      	mov	r2, r0
 8005cc8:	693b      	ldr	r3, [r7, #16]
 8005cca:	1ad3      	subs	r3, r2, r3
 8005ccc:	2b02      	cmp	r3, #2
 8005cce:	d907      	bls.n	8005ce0 <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8005cd0:	2303      	movs	r3, #3
 8005cd2:	e15c      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
 8005cd4:	40023800 	.word	0x40023800
 8005cd8:	42470000 	.word	0x42470000
 8005cdc:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005ce0:	4b8a      	ldr	r3, [pc, #552]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ce2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005ce4:	f003 0302 	and.w	r3, r3, #2
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d1ea      	bne.n	8005cc2 <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	f003 0304 	and.w	r3, r3, #4
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	f000 8097 	beq.w	8005e28 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005cfa:	2300      	movs	r3, #0
 8005cfc:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005cfe:	4b83      	ldr	r3, [pc, #524]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d02:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d10f      	bne.n	8005d2a <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005d0a:	2300      	movs	r3, #0
 8005d0c:	60bb      	str	r3, [r7, #8]
 8005d0e:	4b7f      	ldr	r3, [pc, #508]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d10:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d12:	4a7e      	ldr	r2, [pc, #504]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d14:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005d18:	6413      	str	r3, [r2, #64]	@ 0x40
 8005d1a:	4b7c      	ldr	r3, [pc, #496]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d1e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d22:	60bb      	str	r3, [r7, #8]
 8005d24:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005d26:	2301      	movs	r3, #1
 8005d28:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d2a:	4b79      	ldr	r3, [pc, #484]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d32:	2b00      	cmp	r3, #0
 8005d34:	d118      	bne.n	8005d68 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005d36:	4b76      	ldr	r3, [pc, #472]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	4a75      	ldr	r2, [pc, #468]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d3c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005d40:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005d42:	f7fc fe81 	bl	8002a48 <HAL_GetTick>
 8005d46:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d48:	e008      	b.n	8005d5c <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005d4a:	f7fc fe7d 	bl	8002a48 <HAL_GetTick>
 8005d4e:	4602      	mov	r2, r0
 8005d50:	693b      	ldr	r3, [r7, #16]
 8005d52:	1ad3      	subs	r3, r2, r3
 8005d54:	2b02      	cmp	r3, #2
 8005d56:	d901      	bls.n	8005d5c <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8005d58:	2303      	movs	r3, #3
 8005d5a:	e118      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d5c:	4b6c      	ldr	r3, [pc, #432]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d64:	2b00      	cmp	r3, #0
 8005d66:	d0f0      	beq.n	8005d4a <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005d68:	687b      	ldr	r3, [r7, #4]
 8005d6a:	689b      	ldr	r3, [r3, #8]
 8005d6c:	2b01      	cmp	r3, #1
 8005d6e:	d106      	bne.n	8005d7e <HAL_RCC_OscConfig+0x31e>
 8005d70:	4b66      	ldr	r3, [pc, #408]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d72:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005d74:	4a65      	ldr	r2, [pc, #404]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d76:	f043 0301 	orr.w	r3, r3, #1
 8005d7a:	6713      	str	r3, [r2, #112]	@ 0x70
 8005d7c:	e01c      	b.n	8005db8 <HAL_RCC_OscConfig+0x358>
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	689b      	ldr	r3, [r3, #8]
 8005d82:	2b05      	cmp	r3, #5
 8005d84:	d10c      	bne.n	8005da0 <HAL_RCC_OscConfig+0x340>
 8005d86:	4b61      	ldr	r3, [pc, #388]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d88:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005d8a:	4a60      	ldr	r2, [pc, #384]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d8c:	f043 0304 	orr.w	r3, r3, #4
 8005d90:	6713      	str	r3, [r2, #112]	@ 0x70
 8005d92:	4b5e      	ldr	r3, [pc, #376]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d94:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005d96:	4a5d      	ldr	r2, [pc, #372]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d98:	f043 0301 	orr.w	r3, r3, #1
 8005d9c:	6713      	str	r3, [r2, #112]	@ 0x70
 8005d9e:	e00b      	b.n	8005db8 <HAL_RCC_OscConfig+0x358>
 8005da0:	4b5a      	ldr	r3, [pc, #360]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005da2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005da4:	4a59      	ldr	r2, [pc, #356]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005da6:	f023 0301 	bic.w	r3, r3, #1
 8005daa:	6713      	str	r3, [r2, #112]	@ 0x70
 8005dac:	4b57      	ldr	r3, [pc, #348]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005dae:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005db0:	4a56      	ldr	r2, [pc, #344]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005db2:	f023 0304 	bic.w	r3, r3, #4
 8005db6:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	689b      	ldr	r3, [r3, #8]
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d015      	beq.n	8005dec <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005dc0:	f7fc fe42 	bl	8002a48 <HAL_GetTick>
 8005dc4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dc6:	e00a      	b.n	8005dde <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005dc8:	f7fc fe3e 	bl	8002a48 <HAL_GetTick>
 8005dcc:	4602      	mov	r2, r0
 8005dce:	693b      	ldr	r3, [r7, #16]
 8005dd0:	1ad3      	subs	r3, r2, r3
 8005dd2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005dd6:	4293      	cmp	r3, r2
 8005dd8:	d901      	bls.n	8005dde <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8005dda:	2303      	movs	r3, #3
 8005ddc:	e0d7      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dde:	4b4b      	ldr	r3, [pc, #300]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005de0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005de2:	f003 0302 	and.w	r3, r3, #2
 8005de6:	2b00      	cmp	r3, #0
 8005de8:	d0ee      	beq.n	8005dc8 <HAL_RCC_OscConfig+0x368>
 8005dea:	e014      	b.n	8005e16 <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005dec:	f7fc fe2c 	bl	8002a48 <HAL_GetTick>
 8005df0:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005df2:	e00a      	b.n	8005e0a <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005df4:	f7fc fe28 	bl	8002a48 <HAL_GetTick>
 8005df8:	4602      	mov	r2, r0
 8005dfa:	693b      	ldr	r3, [r7, #16]
 8005dfc:	1ad3      	subs	r3, r2, r3
 8005dfe:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005e02:	4293      	cmp	r3, r2
 8005e04:	d901      	bls.n	8005e0a <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8005e06:	2303      	movs	r3, #3
 8005e08:	e0c1      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005e0a:	4b40      	ldr	r3, [pc, #256]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e0c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005e0e:	f003 0302 	and.w	r3, r3, #2
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	d1ee      	bne.n	8005df4 <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8005e16:	7dfb      	ldrb	r3, [r7, #23]
 8005e18:	2b01      	cmp	r3, #1
 8005e1a:	d105      	bne.n	8005e28 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005e1c:	4b3b      	ldr	r3, [pc, #236]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e20:	4a3a      	ldr	r2, [pc, #232]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e22:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005e26:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	699b      	ldr	r3, [r3, #24]
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	f000 80ad 	beq.w	8005f8c <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005e32:	4b36      	ldr	r3, [pc, #216]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e34:	689b      	ldr	r3, [r3, #8]
 8005e36:	f003 030c 	and.w	r3, r3, #12
 8005e3a:	2b08      	cmp	r3, #8
 8005e3c:	d060      	beq.n	8005f00 <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	699b      	ldr	r3, [r3, #24]
 8005e42:	2b02      	cmp	r3, #2
 8005e44:	d145      	bne.n	8005ed2 <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005e46:	4b33      	ldr	r3, [pc, #204]	@ (8005f14 <HAL_RCC_OscConfig+0x4b4>)
 8005e48:	2200      	movs	r2, #0
 8005e4a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005e4c:	f7fc fdfc 	bl	8002a48 <HAL_GetTick>
 8005e50:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e52:	e008      	b.n	8005e66 <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005e54:	f7fc fdf8 	bl	8002a48 <HAL_GetTick>
 8005e58:	4602      	mov	r2, r0
 8005e5a:	693b      	ldr	r3, [r7, #16]
 8005e5c:	1ad3      	subs	r3, r2, r3
 8005e5e:	2b02      	cmp	r3, #2
 8005e60:	d901      	bls.n	8005e66 <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8005e62:	2303      	movs	r3, #3
 8005e64:	e093      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e66:	4b29      	ldr	r3, [pc, #164]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d1f0      	bne.n	8005e54 <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	69da      	ldr	r2, [r3, #28]
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	6a1b      	ldr	r3, [r3, #32]
 8005e7a:	431a      	orrs	r2, r3
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e80:	019b      	lsls	r3, r3, #6
 8005e82:	431a      	orrs	r2, r3
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e88:	085b      	lsrs	r3, r3, #1
 8005e8a:	3b01      	subs	r3, #1
 8005e8c:	041b      	lsls	r3, r3, #16
 8005e8e:	431a      	orrs	r2, r3
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005e94:	061b      	lsls	r3, r3, #24
 8005e96:	431a      	orrs	r2, r3
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005e9c:	071b      	lsls	r3, r3, #28
 8005e9e:	491b      	ldr	r1, [pc, #108]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ea0:	4313      	orrs	r3, r2
 8005ea2:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005ea4:	4b1b      	ldr	r3, [pc, #108]	@ (8005f14 <HAL_RCC_OscConfig+0x4b4>)
 8005ea6:	2201      	movs	r2, #1
 8005ea8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005eaa:	f7fc fdcd 	bl	8002a48 <HAL_GetTick>
 8005eae:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005eb0:	e008      	b.n	8005ec4 <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005eb2:	f7fc fdc9 	bl	8002a48 <HAL_GetTick>
 8005eb6:	4602      	mov	r2, r0
 8005eb8:	693b      	ldr	r3, [r7, #16]
 8005eba:	1ad3      	subs	r3, r2, r3
 8005ebc:	2b02      	cmp	r3, #2
 8005ebe:	d901      	bls.n	8005ec4 <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8005ec0:	2303      	movs	r3, #3
 8005ec2:	e064      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ec4:	4b11      	ldr	r3, [pc, #68]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ec6:	681b      	ldr	r3, [r3, #0]
 8005ec8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d0f0      	beq.n	8005eb2 <HAL_RCC_OscConfig+0x452>
 8005ed0:	e05c      	b.n	8005f8c <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005ed2:	4b10      	ldr	r3, [pc, #64]	@ (8005f14 <HAL_RCC_OscConfig+0x4b4>)
 8005ed4:	2200      	movs	r2, #0
 8005ed6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005ed8:	f7fc fdb6 	bl	8002a48 <HAL_GetTick>
 8005edc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ede:	e008      	b.n	8005ef2 <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005ee0:	f7fc fdb2 	bl	8002a48 <HAL_GetTick>
 8005ee4:	4602      	mov	r2, r0
 8005ee6:	693b      	ldr	r3, [r7, #16]
 8005ee8:	1ad3      	subs	r3, r2, r3
 8005eea:	2b02      	cmp	r3, #2
 8005eec:	d901      	bls.n	8005ef2 <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8005eee:	2303      	movs	r3, #3
 8005ef0:	e04d      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ef2:	4b06      	ldr	r3, [pc, #24]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	d1f0      	bne.n	8005ee0 <HAL_RCC_OscConfig+0x480>
 8005efe:	e045      	b.n	8005f8c <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	699b      	ldr	r3, [r3, #24]
 8005f04:	2b01      	cmp	r3, #1
 8005f06:	d107      	bne.n	8005f18 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8005f08:	2301      	movs	r3, #1
 8005f0a:	e040      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
 8005f0c:	40023800 	.word	0x40023800
 8005f10:	40007000 	.word	0x40007000
 8005f14:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005f18:	4b1f      	ldr	r3, [pc, #124]	@ (8005f98 <HAL_RCC_OscConfig+0x538>)
 8005f1a:	685b      	ldr	r3, [r3, #4]
 8005f1c:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	699b      	ldr	r3, [r3, #24]
 8005f22:	2b01      	cmp	r3, #1
 8005f24:	d030      	beq.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005f30:	429a      	cmp	r2, r3
 8005f32:	d129      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005f3e:	429a      	cmp	r2, r3
 8005f40:	d122      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f42:	68fa      	ldr	r2, [r7, #12]
 8005f44:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005f48:	4013      	ands	r3, r2
 8005f4a:	687a      	ldr	r2, [r7, #4]
 8005f4c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005f4e:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005f50:	4293      	cmp	r3, r2
 8005f52:	d119      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f54:	68fb      	ldr	r3, [r7, #12]
 8005f56:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005f5e:	085b      	lsrs	r3, r3, #1
 8005f60:	3b01      	subs	r3, #1
 8005f62:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f64:	429a      	cmp	r2, r3
 8005f66:	d10f      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005f72:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f74:	429a      	cmp	r2, r3
 8005f76:	d107      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f82:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005f84:	429a      	cmp	r2, r3
 8005f86:	d001      	beq.n	8005f8c <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 8005f88:	2301      	movs	r3, #1
 8005f8a:	e000      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 8005f8c:	2300      	movs	r3, #0
}
 8005f8e:	4618      	mov	r0, r3
 8005f90:	3718      	adds	r7, #24
 8005f92:	46bd      	mov	sp, r7
 8005f94:	bd80      	pop	{r7, pc}
 8005f96:	bf00      	nop
 8005f98:	40023800 	.word	0x40023800

08005f9c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005f9c:	b580      	push	{r7, lr}
 8005f9e:	b082      	sub	sp, #8
 8005fa0:	af00      	add	r7, sp, #0
 8005fa2:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	d101      	bne.n	8005fae <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005faa:	2301      	movs	r3, #1
 8005fac:	e07b      	b.n	80060a6 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005fb2:	2b00      	cmp	r3, #0
 8005fb4:	d108      	bne.n	8005fc8 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	685b      	ldr	r3, [r3, #4]
 8005fba:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005fbe:	d009      	beq.n	8005fd4 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	2200      	movs	r2, #0
 8005fc4:	61da      	str	r2, [r3, #28]
 8005fc6:	e005      	b.n	8005fd4 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005fc8:	687b      	ldr	r3, [r7, #4]
 8005fca:	2200      	movs	r2, #0
 8005fcc:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	2200      	movs	r2, #0
 8005fd2:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	2200      	movs	r2, #0
 8005fd8:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005fe0:	b2db      	uxtb	r3, r3
 8005fe2:	2b00      	cmp	r3, #0
 8005fe4:	d106      	bne.n	8005ff4 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	2200      	movs	r2, #0
 8005fea:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005fee:	6878      	ldr	r0, [r7, #4]
 8005ff0:	f7fb fd58 	bl	8001aa4 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005ff4:	687b      	ldr	r3, [r7, #4]
 8005ff6:	2202      	movs	r2, #2
 8005ff8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	681b      	ldr	r3, [r3, #0]
 8006000:	681a      	ldr	r2, [r3, #0]
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	681b      	ldr	r3, [r3, #0]
 8006006:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800600a:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	685b      	ldr	r3, [r3, #4]
 8006010:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	689b      	ldr	r3, [r3, #8]
 8006018:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 800601c:	431a      	orrs	r2, r3
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	68db      	ldr	r3, [r3, #12]
 8006022:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006026:	431a      	orrs	r2, r3
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	691b      	ldr	r3, [r3, #16]
 800602c:	f003 0302 	and.w	r3, r3, #2
 8006030:	431a      	orrs	r2, r3
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	695b      	ldr	r3, [r3, #20]
 8006036:	f003 0301 	and.w	r3, r3, #1
 800603a:	431a      	orrs	r2, r3
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	699b      	ldr	r3, [r3, #24]
 8006040:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006044:	431a      	orrs	r2, r3
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	69db      	ldr	r3, [r3, #28]
 800604a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800604e:	431a      	orrs	r2, r3
 8006050:	687b      	ldr	r3, [r7, #4]
 8006052:	6a1b      	ldr	r3, [r3, #32]
 8006054:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006058:	ea42 0103 	orr.w	r1, r2, r3
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006060:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	681b      	ldr	r3, [r3, #0]
 8006068:	430a      	orrs	r2, r1
 800606a:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	699b      	ldr	r3, [r3, #24]
 8006070:	0c1b      	lsrs	r3, r3, #16
 8006072:	f003 0104 	and.w	r1, r3, #4
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800607a:	f003 0210 	and.w	r2, r3, #16
 800607e:	687b      	ldr	r3, [r7, #4]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	430a      	orrs	r2, r1
 8006084:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	69da      	ldr	r2, [r3, #28]
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8006094:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	2200      	movs	r2, #0
 800609a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	2201      	movs	r2, #1
 80060a0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 80060a4:	2300      	movs	r3, #0
}
 80060a6:	4618      	mov	r0, r3
 80060a8:	3708      	adds	r7, #8
 80060aa:	46bd      	mov	sp, r7
 80060ac:	bd80      	pop	{r7, pc}

080060ae <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80060ae:	b580      	push	{r7, lr}
 80060b0:	b088      	sub	sp, #32
 80060b2:	af00      	add	r7, sp, #0
 80060b4:	60f8      	str	r0, [r7, #12]
 80060b6:	60b9      	str	r1, [r7, #8]
 80060b8:	603b      	str	r3, [r7, #0]
 80060ba:	4613      	mov	r3, r2
 80060bc:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80060be:	f7fc fcc3 	bl	8002a48 <HAL_GetTick>
 80060c2:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 80060c4:	88fb      	ldrh	r3, [r7, #6]
 80060c6:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 80060c8:	68fb      	ldr	r3, [r7, #12]
 80060ca:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80060ce:	b2db      	uxtb	r3, r3
 80060d0:	2b01      	cmp	r3, #1
 80060d2:	d001      	beq.n	80060d8 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 80060d4:	2302      	movs	r3, #2
 80060d6:	e12a      	b.n	800632e <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 80060d8:	68bb      	ldr	r3, [r7, #8]
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d002      	beq.n	80060e4 <HAL_SPI_Transmit+0x36>
 80060de:	88fb      	ldrh	r3, [r7, #6]
 80060e0:	2b00      	cmp	r3, #0
 80060e2:	d101      	bne.n	80060e8 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 80060e4:	2301      	movs	r3, #1
 80060e6:	e122      	b.n	800632e <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80060ee:	2b01      	cmp	r3, #1
 80060f0:	d101      	bne.n	80060f6 <HAL_SPI_Transmit+0x48>
 80060f2:	2302      	movs	r3, #2
 80060f4:	e11b      	b.n	800632e <HAL_SPI_Transmit+0x280>
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	2201      	movs	r2, #1
 80060fa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	2203      	movs	r2, #3
 8006102:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	2200      	movs	r2, #0
 800610a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800610c:	68fb      	ldr	r3, [r7, #12]
 800610e:	68ba      	ldr	r2, [r7, #8]
 8006110:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	88fa      	ldrh	r2, [r7, #6]
 8006116:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	88fa      	ldrh	r2, [r7, #6]
 800611c:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	2200      	movs	r2, #0
 8006122:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	2200      	movs	r2, #0
 8006128:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800612a:	68fb      	ldr	r3, [r7, #12]
 800612c:	2200      	movs	r2, #0
 800612e:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8006130:	68fb      	ldr	r3, [r7, #12]
 8006132:	2200      	movs	r2, #0
 8006134:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	2200      	movs	r2, #0
 800613a:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	689b      	ldr	r3, [r3, #8]
 8006140:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006144:	d10f      	bne.n	8006166 <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	681a      	ldr	r2, [r3, #0]
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006154:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	681a      	ldr	r2, [r3, #0]
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006164:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006170:	2b40      	cmp	r3, #64	@ 0x40
 8006172:	d007      	beq.n	8006184 <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	681a      	ldr	r2, [r3, #0]
 800617a:	68fb      	ldr	r3, [r7, #12]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006182:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006184:	68fb      	ldr	r3, [r7, #12]
 8006186:	68db      	ldr	r3, [r3, #12]
 8006188:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800618c:	d152      	bne.n	8006234 <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	685b      	ldr	r3, [r3, #4]
 8006192:	2b00      	cmp	r3, #0
 8006194:	d002      	beq.n	800619c <HAL_SPI_Transmit+0xee>
 8006196:	8b7b      	ldrh	r3, [r7, #26]
 8006198:	2b01      	cmp	r3, #1
 800619a:	d145      	bne.n	8006228 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061a0:	881a      	ldrh	r2, [r3, #0]
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061ac:	1c9a      	adds	r2, r3, #2
 80061ae:	68fb      	ldr	r3, [r7, #12]
 80061b0:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80061b6:	b29b      	uxth	r3, r3
 80061b8:	3b01      	subs	r3, #1
 80061ba:	b29a      	uxth	r2, r3
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 80061c0:	e032      	b.n	8006228 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80061c2:	68fb      	ldr	r3, [r7, #12]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	689b      	ldr	r3, [r3, #8]
 80061c8:	f003 0302 	and.w	r3, r3, #2
 80061cc:	2b02      	cmp	r3, #2
 80061ce:	d112      	bne.n	80061f6 <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80061d0:	68fb      	ldr	r3, [r7, #12]
 80061d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061d4:	881a      	ldrh	r2, [r3, #0]
 80061d6:	68fb      	ldr	r3, [r7, #12]
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061e0:	1c9a      	adds	r2, r3, #2
 80061e2:	68fb      	ldr	r3, [r7, #12]
 80061e4:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80061e6:	68fb      	ldr	r3, [r7, #12]
 80061e8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80061ea:	b29b      	uxth	r3, r3
 80061ec:	3b01      	subs	r3, #1
 80061ee:	b29a      	uxth	r2, r3
 80061f0:	68fb      	ldr	r3, [r7, #12]
 80061f2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80061f4:	e018      	b.n	8006228 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80061f6:	f7fc fc27 	bl	8002a48 <HAL_GetTick>
 80061fa:	4602      	mov	r2, r0
 80061fc:	69fb      	ldr	r3, [r7, #28]
 80061fe:	1ad3      	subs	r3, r2, r3
 8006200:	683a      	ldr	r2, [r7, #0]
 8006202:	429a      	cmp	r2, r3
 8006204:	d803      	bhi.n	800620e <HAL_SPI_Transmit+0x160>
 8006206:	683b      	ldr	r3, [r7, #0]
 8006208:	f1b3 3fff 	cmp.w	r3, #4294967295
 800620c:	d102      	bne.n	8006214 <HAL_SPI_Transmit+0x166>
 800620e:	683b      	ldr	r3, [r7, #0]
 8006210:	2b00      	cmp	r3, #0
 8006212:	d109      	bne.n	8006228 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	2201      	movs	r2, #1
 8006218:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	2200      	movs	r2, #0
 8006220:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006224:	2303      	movs	r3, #3
 8006226:	e082      	b.n	800632e <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800622c:	b29b      	uxth	r3, r3
 800622e:	2b00      	cmp	r3, #0
 8006230:	d1c7      	bne.n	80061c2 <HAL_SPI_Transmit+0x114>
 8006232:	e053      	b.n	80062dc <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006234:	68fb      	ldr	r3, [r7, #12]
 8006236:	685b      	ldr	r3, [r3, #4]
 8006238:	2b00      	cmp	r3, #0
 800623a:	d002      	beq.n	8006242 <HAL_SPI_Transmit+0x194>
 800623c:	8b7b      	ldrh	r3, [r7, #26]
 800623e:	2b01      	cmp	r3, #1
 8006240:	d147      	bne.n	80062d2 <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006242:	68fb      	ldr	r3, [r7, #12]
 8006244:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006246:	68fb      	ldr	r3, [r7, #12]
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	330c      	adds	r3, #12
 800624c:	7812      	ldrb	r2, [r2, #0]
 800624e:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006250:	68fb      	ldr	r3, [r7, #12]
 8006252:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006254:	1c5a      	adds	r2, r3, #1
 8006256:	68fb      	ldr	r3, [r7, #12]
 8006258:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800625e:	b29b      	uxth	r3, r3
 8006260:	3b01      	subs	r3, #1
 8006262:	b29a      	uxth	r2, r3
 8006264:	68fb      	ldr	r3, [r7, #12]
 8006266:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 8006268:	e033      	b.n	80062d2 <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800626a:	68fb      	ldr	r3, [r7, #12]
 800626c:	681b      	ldr	r3, [r3, #0]
 800626e:	689b      	ldr	r3, [r3, #8]
 8006270:	f003 0302 	and.w	r3, r3, #2
 8006274:	2b02      	cmp	r3, #2
 8006276:	d113      	bne.n	80062a0 <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006278:	68fb      	ldr	r3, [r7, #12]
 800627a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800627c:	68fb      	ldr	r3, [r7, #12]
 800627e:	681b      	ldr	r3, [r3, #0]
 8006280:	330c      	adds	r3, #12
 8006282:	7812      	ldrb	r2, [r2, #0]
 8006284:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006286:	68fb      	ldr	r3, [r7, #12]
 8006288:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800628a:	1c5a      	adds	r2, r3, #1
 800628c:	68fb      	ldr	r3, [r7, #12]
 800628e:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006290:	68fb      	ldr	r3, [r7, #12]
 8006292:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006294:	b29b      	uxth	r3, r3
 8006296:	3b01      	subs	r3, #1
 8006298:	b29a      	uxth	r2, r3
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800629e:	e018      	b.n	80062d2 <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80062a0:	f7fc fbd2 	bl	8002a48 <HAL_GetTick>
 80062a4:	4602      	mov	r2, r0
 80062a6:	69fb      	ldr	r3, [r7, #28]
 80062a8:	1ad3      	subs	r3, r2, r3
 80062aa:	683a      	ldr	r2, [r7, #0]
 80062ac:	429a      	cmp	r2, r3
 80062ae:	d803      	bhi.n	80062b8 <HAL_SPI_Transmit+0x20a>
 80062b0:	683b      	ldr	r3, [r7, #0]
 80062b2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062b6:	d102      	bne.n	80062be <HAL_SPI_Transmit+0x210>
 80062b8:	683b      	ldr	r3, [r7, #0]
 80062ba:	2b00      	cmp	r3, #0
 80062bc:	d109      	bne.n	80062d2 <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80062be:	68fb      	ldr	r3, [r7, #12]
 80062c0:	2201      	movs	r2, #1
 80062c2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80062c6:	68fb      	ldr	r3, [r7, #12]
 80062c8:	2200      	movs	r2, #0
 80062ca:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80062ce:	2303      	movs	r3, #3
 80062d0:	e02d      	b.n	800632e <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 80062d2:	68fb      	ldr	r3, [r7, #12]
 80062d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80062d6:	b29b      	uxth	r3, r3
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d1c6      	bne.n	800626a <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80062dc:	69fa      	ldr	r2, [r7, #28]
 80062de:	6839      	ldr	r1, [r7, #0]
 80062e0:	68f8      	ldr	r0, [r7, #12]
 80062e2:	f000 fe1f 	bl	8006f24 <SPI_EndRxTxTransaction>
 80062e6:	4603      	mov	r3, r0
 80062e8:	2b00      	cmp	r3, #0
 80062ea:	d002      	beq.n	80062f2 <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80062ec:	68fb      	ldr	r3, [r7, #12]
 80062ee:	2220      	movs	r2, #32
 80062f0:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80062f2:	68fb      	ldr	r3, [r7, #12]
 80062f4:	689b      	ldr	r3, [r3, #8]
 80062f6:	2b00      	cmp	r3, #0
 80062f8:	d10a      	bne.n	8006310 <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80062fa:	2300      	movs	r3, #0
 80062fc:	617b      	str	r3, [r7, #20]
 80062fe:	68fb      	ldr	r3, [r7, #12]
 8006300:	681b      	ldr	r3, [r3, #0]
 8006302:	68db      	ldr	r3, [r3, #12]
 8006304:	617b      	str	r3, [r7, #20]
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	681b      	ldr	r3, [r3, #0]
 800630a:	689b      	ldr	r3, [r3, #8]
 800630c:	617b      	str	r3, [r7, #20]
 800630e:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	2201      	movs	r2, #1
 8006314:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006318:	68fb      	ldr	r3, [r7, #12]
 800631a:	2200      	movs	r2, #0
 800631c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006324:	2b00      	cmp	r3, #0
 8006326:	d001      	beq.n	800632c <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8006328:	2301      	movs	r3, #1
 800632a:	e000      	b.n	800632e <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 800632c:	2300      	movs	r3, #0
  }
}
 800632e:	4618      	mov	r0, r3
 8006330:	3720      	adds	r7, #32
 8006332:	46bd      	mov	sp, r7
 8006334:	bd80      	pop	{r7, pc}

08006336 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006336:	b580      	push	{r7, lr}
 8006338:	b088      	sub	sp, #32
 800633a:	af02      	add	r7, sp, #8
 800633c:	60f8      	str	r0, [r7, #12]
 800633e:	60b9      	str	r1, [r7, #8]
 8006340:	603b      	str	r3, [r7, #0]
 8006342:	4613      	mov	r3, r2
 8006344:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800634c:	b2db      	uxtb	r3, r3
 800634e:	2b01      	cmp	r3, #1
 8006350:	d001      	beq.n	8006356 <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 8006352:	2302      	movs	r3, #2
 8006354:	e104      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006356:	68fb      	ldr	r3, [r7, #12]
 8006358:	685b      	ldr	r3, [r3, #4]
 800635a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800635e:	d112      	bne.n	8006386 <HAL_SPI_Receive+0x50>
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	689b      	ldr	r3, [r3, #8]
 8006364:	2b00      	cmp	r3, #0
 8006366:	d10e      	bne.n	8006386 <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006368:	68fb      	ldr	r3, [r7, #12]
 800636a:	2204      	movs	r2, #4
 800636c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006370:	88fa      	ldrh	r2, [r7, #6]
 8006372:	683b      	ldr	r3, [r7, #0]
 8006374:	9300      	str	r3, [sp, #0]
 8006376:	4613      	mov	r3, r2
 8006378:	68ba      	ldr	r2, [r7, #8]
 800637a:	68b9      	ldr	r1, [r7, #8]
 800637c:	68f8      	ldr	r0, [r7, #12]
 800637e:	f000 f8f3 	bl	8006568 <HAL_SPI_TransmitReceive>
 8006382:	4603      	mov	r3, r0
 8006384:	e0ec      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006386:	f7fc fb5f 	bl	8002a48 <HAL_GetTick>
 800638a:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 800638c:	68bb      	ldr	r3, [r7, #8]
 800638e:	2b00      	cmp	r3, #0
 8006390:	d002      	beq.n	8006398 <HAL_SPI_Receive+0x62>
 8006392:	88fb      	ldrh	r3, [r7, #6]
 8006394:	2b00      	cmp	r3, #0
 8006396:	d101      	bne.n	800639c <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 8006398:	2301      	movs	r3, #1
 800639a:	e0e1      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80063a2:	2b01      	cmp	r3, #1
 80063a4:	d101      	bne.n	80063aa <HAL_SPI_Receive+0x74>
 80063a6:	2302      	movs	r3, #2
 80063a8:	e0da      	b.n	8006560 <HAL_SPI_Receive+0x22a>
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	2201      	movs	r2, #1
 80063ae:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	2204      	movs	r2, #4
 80063b6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80063ba:	68fb      	ldr	r3, [r7, #12]
 80063bc:	2200      	movs	r2, #0
 80063be:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80063c0:	68fb      	ldr	r3, [r7, #12]
 80063c2:	68ba      	ldr	r2, [r7, #8]
 80063c4:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	88fa      	ldrh	r2, [r7, #6]
 80063ca:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 80063cc:	68fb      	ldr	r3, [r7, #12]
 80063ce:	88fa      	ldrh	r2, [r7, #6]
 80063d0:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	2200      	movs	r2, #0
 80063d6:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 80063d8:	68fb      	ldr	r3, [r7, #12]
 80063da:	2200      	movs	r2, #0
 80063dc:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 80063de:	68fb      	ldr	r3, [r7, #12]
 80063e0:	2200      	movs	r2, #0
 80063e2:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 80063e4:	68fb      	ldr	r3, [r7, #12]
 80063e6:	2200      	movs	r2, #0
 80063e8:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	2200      	movs	r2, #0
 80063ee:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	689b      	ldr	r3, [r3, #8]
 80063f4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80063f8:	d10f      	bne.n	800641a <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	681b      	ldr	r3, [r3, #0]
 80063fe:	681a      	ldr	r2, [r3, #0]
 8006400:	68fb      	ldr	r3, [r7, #12]
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006408:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800640a:	68fb      	ldr	r3, [r7, #12]
 800640c:	681b      	ldr	r3, [r3, #0]
 800640e:	681a      	ldr	r2, [r3, #0]
 8006410:	68fb      	ldr	r3, [r7, #12]
 8006412:	681b      	ldr	r3, [r3, #0]
 8006414:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006418:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006424:	2b40      	cmp	r3, #64	@ 0x40
 8006426:	d007      	beq.n	8006438 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	681a      	ldr	r2, [r3, #0]
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	681b      	ldr	r3, [r3, #0]
 8006432:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006436:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006438:	68fb      	ldr	r3, [r7, #12]
 800643a:	68db      	ldr	r3, [r3, #12]
 800643c:	2b00      	cmp	r3, #0
 800643e:	d170      	bne.n	8006522 <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 8006440:	e035      	b.n	80064ae <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006442:	68fb      	ldr	r3, [r7, #12]
 8006444:	681b      	ldr	r3, [r3, #0]
 8006446:	689b      	ldr	r3, [r3, #8]
 8006448:	f003 0301 	and.w	r3, r3, #1
 800644c:	2b01      	cmp	r3, #1
 800644e:	d115      	bne.n	800647c <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	f103 020c 	add.w	r2, r3, #12
 8006458:	68fb      	ldr	r3, [r7, #12]
 800645a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800645c:	7812      	ldrb	r2, [r2, #0]
 800645e:	b2d2      	uxtb	r2, r2
 8006460:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006462:	68fb      	ldr	r3, [r7, #12]
 8006464:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006466:	1c5a      	adds	r2, r3, #1
 8006468:	68fb      	ldr	r3, [r7, #12]
 800646a:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006470:	b29b      	uxth	r3, r3
 8006472:	3b01      	subs	r3, #1
 8006474:	b29a      	uxth	r2, r3
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800647a:	e018      	b.n	80064ae <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800647c:	f7fc fae4 	bl	8002a48 <HAL_GetTick>
 8006480:	4602      	mov	r2, r0
 8006482:	697b      	ldr	r3, [r7, #20]
 8006484:	1ad3      	subs	r3, r2, r3
 8006486:	683a      	ldr	r2, [r7, #0]
 8006488:	429a      	cmp	r2, r3
 800648a:	d803      	bhi.n	8006494 <HAL_SPI_Receive+0x15e>
 800648c:	683b      	ldr	r3, [r7, #0]
 800648e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006492:	d102      	bne.n	800649a <HAL_SPI_Receive+0x164>
 8006494:	683b      	ldr	r3, [r7, #0]
 8006496:	2b00      	cmp	r3, #0
 8006498:	d109      	bne.n	80064ae <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800649a:	68fb      	ldr	r3, [r7, #12]
 800649c:	2201      	movs	r2, #1
 800649e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80064a2:	68fb      	ldr	r3, [r7, #12]
 80064a4:	2200      	movs	r2, #0
 80064a6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80064aa:	2303      	movs	r3, #3
 80064ac:	e058      	b.n	8006560 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 80064ae:	68fb      	ldr	r3, [r7, #12]
 80064b0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064b2:	b29b      	uxth	r3, r3
 80064b4:	2b00      	cmp	r3, #0
 80064b6:	d1c4      	bne.n	8006442 <HAL_SPI_Receive+0x10c>
 80064b8:	e038      	b.n	800652c <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80064ba:	68fb      	ldr	r3, [r7, #12]
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	689b      	ldr	r3, [r3, #8]
 80064c0:	f003 0301 	and.w	r3, r3, #1
 80064c4:	2b01      	cmp	r3, #1
 80064c6:	d113      	bne.n	80064f0 <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	68da      	ldr	r2, [r3, #12]
 80064ce:	68fb      	ldr	r3, [r7, #12]
 80064d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064d2:	b292      	uxth	r2, r2
 80064d4:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064da:	1c9a      	adds	r2, r3, #2
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80064e0:	68fb      	ldr	r3, [r7, #12]
 80064e2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064e4:	b29b      	uxth	r3, r3
 80064e6:	3b01      	subs	r3, #1
 80064e8:	b29a      	uxth	r2, r3
 80064ea:	68fb      	ldr	r3, [r7, #12]
 80064ec:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80064ee:	e018      	b.n	8006522 <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80064f0:	f7fc faaa 	bl	8002a48 <HAL_GetTick>
 80064f4:	4602      	mov	r2, r0
 80064f6:	697b      	ldr	r3, [r7, #20]
 80064f8:	1ad3      	subs	r3, r2, r3
 80064fa:	683a      	ldr	r2, [r7, #0]
 80064fc:	429a      	cmp	r2, r3
 80064fe:	d803      	bhi.n	8006508 <HAL_SPI_Receive+0x1d2>
 8006500:	683b      	ldr	r3, [r7, #0]
 8006502:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006506:	d102      	bne.n	800650e <HAL_SPI_Receive+0x1d8>
 8006508:	683b      	ldr	r3, [r7, #0]
 800650a:	2b00      	cmp	r3, #0
 800650c:	d109      	bne.n	8006522 <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	2201      	movs	r2, #1
 8006512:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006516:	68fb      	ldr	r3, [r7, #12]
 8006518:	2200      	movs	r2, #0
 800651a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800651e:	2303      	movs	r3, #3
 8006520:	e01e      	b.n	8006560 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006526:	b29b      	uxth	r3, r3
 8006528:	2b00      	cmp	r3, #0
 800652a:	d1c6      	bne.n	80064ba <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800652c:	697a      	ldr	r2, [r7, #20]
 800652e:	6839      	ldr	r1, [r7, #0]
 8006530:	68f8      	ldr	r0, [r7, #12]
 8006532:	f000 fc91 	bl	8006e58 <SPI_EndRxTransaction>
 8006536:	4603      	mov	r3, r0
 8006538:	2b00      	cmp	r3, #0
 800653a:	d002      	beq.n	8006542 <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800653c:	68fb      	ldr	r3, [r7, #12]
 800653e:	2220      	movs	r2, #32
 8006540:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 8006542:	68fb      	ldr	r3, [r7, #12]
 8006544:	2201      	movs	r2, #1
 8006546:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800654a:	68fb      	ldr	r3, [r7, #12]
 800654c:	2200      	movs	r2, #0
 800654e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006556:	2b00      	cmp	r3, #0
 8006558:	d001      	beq.n	800655e <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 800655a:	2301      	movs	r3, #1
 800655c:	e000      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 800655e:	2300      	movs	r3, #0
  }
}
 8006560:	4618      	mov	r0, r3
 8006562:	3718      	adds	r7, #24
 8006564:	46bd      	mov	sp, r7
 8006566:	bd80      	pop	{r7, pc}

08006568 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 8006568:	b580      	push	{r7, lr}
 800656a:	b08a      	sub	sp, #40	@ 0x28
 800656c:	af00      	add	r7, sp, #0
 800656e:	60f8      	str	r0, [r7, #12]
 8006570:	60b9      	str	r1, [r7, #8]
 8006572:	607a      	str	r2, [r7, #4]
 8006574:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8006576:	2301      	movs	r3, #1
 8006578:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800657a:	f7fc fa65 	bl	8002a48 <HAL_GetTick>
 800657e:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006586:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 8006588:	68fb      	ldr	r3, [r7, #12]
 800658a:	685b      	ldr	r3, [r3, #4]
 800658c:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 800658e:	887b      	ldrh	r3, [r7, #2]
 8006590:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006592:	7ffb      	ldrb	r3, [r7, #31]
 8006594:	2b01      	cmp	r3, #1
 8006596:	d00c      	beq.n	80065b2 <HAL_SPI_TransmitReceive+0x4a>
 8006598:	69bb      	ldr	r3, [r7, #24]
 800659a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800659e:	d106      	bne.n	80065ae <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	689b      	ldr	r3, [r3, #8]
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d102      	bne.n	80065ae <HAL_SPI_TransmitReceive+0x46>
 80065a8:	7ffb      	ldrb	r3, [r7, #31]
 80065aa:	2b04      	cmp	r3, #4
 80065ac:	d001      	beq.n	80065b2 <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 80065ae:	2302      	movs	r3, #2
 80065b0:	e17f      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80065b2:	68bb      	ldr	r3, [r7, #8]
 80065b4:	2b00      	cmp	r3, #0
 80065b6:	d005      	beq.n	80065c4 <HAL_SPI_TransmitReceive+0x5c>
 80065b8:	687b      	ldr	r3, [r7, #4]
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d002      	beq.n	80065c4 <HAL_SPI_TransmitReceive+0x5c>
 80065be:	887b      	ldrh	r3, [r7, #2]
 80065c0:	2b00      	cmp	r3, #0
 80065c2:	d101      	bne.n	80065c8 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 80065c4:	2301      	movs	r3, #1
 80065c6:	e174      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80065ce:	2b01      	cmp	r3, #1
 80065d0:	d101      	bne.n	80065d6 <HAL_SPI_TransmitReceive+0x6e>
 80065d2:	2302      	movs	r3, #2
 80065d4:	e16d      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
 80065d6:	68fb      	ldr	r3, [r7, #12]
 80065d8:	2201      	movs	r2, #1
 80065da:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80065de:	68fb      	ldr	r3, [r7, #12]
 80065e0:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80065e4:	b2db      	uxtb	r3, r3
 80065e6:	2b04      	cmp	r3, #4
 80065e8:	d003      	beq.n	80065f2 <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80065ea:	68fb      	ldr	r3, [r7, #12]
 80065ec:	2205      	movs	r2, #5
 80065ee:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80065f2:	68fb      	ldr	r3, [r7, #12]
 80065f4:	2200      	movs	r2, #0
 80065f6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80065f8:	68fb      	ldr	r3, [r7, #12]
 80065fa:	687a      	ldr	r2, [r7, #4]
 80065fc:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 80065fe:	68fb      	ldr	r3, [r7, #12]
 8006600:	887a      	ldrh	r2, [r7, #2]
 8006602:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006604:	68fb      	ldr	r3, [r7, #12]
 8006606:	887a      	ldrh	r2, [r7, #2]
 8006608:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800660a:	68fb      	ldr	r3, [r7, #12]
 800660c:	68ba      	ldr	r2, [r7, #8]
 800660e:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	887a      	ldrh	r2, [r7, #2]
 8006614:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	887a      	ldrh	r2, [r7, #2]
 800661a:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 800661c:	68fb      	ldr	r3, [r7, #12]
 800661e:	2200      	movs	r2, #0
 8006620:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	2200      	movs	r2, #0
 8006626:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	681b      	ldr	r3, [r3, #0]
 800662e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006632:	2b40      	cmp	r3, #64	@ 0x40
 8006634:	d007      	beq.n	8006646 <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	681b      	ldr	r3, [r3, #0]
 800663a:	681a      	ldr	r2, [r3, #0]
 800663c:	68fb      	ldr	r3, [r7, #12]
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006644:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006646:	68fb      	ldr	r3, [r7, #12]
 8006648:	68db      	ldr	r3, [r3, #12]
 800664a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800664e:	d17e      	bne.n	800674e <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	685b      	ldr	r3, [r3, #4]
 8006654:	2b00      	cmp	r3, #0
 8006656:	d002      	beq.n	800665e <HAL_SPI_TransmitReceive+0xf6>
 8006658:	8afb      	ldrh	r3, [r7, #22]
 800665a:	2b01      	cmp	r3, #1
 800665c:	d16c      	bne.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006662:	881a      	ldrh	r2, [r3, #0]
 8006664:	68fb      	ldr	r3, [r7, #12]
 8006666:	681b      	ldr	r3, [r3, #0]
 8006668:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800666a:	68fb      	ldr	r3, [r7, #12]
 800666c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800666e:	1c9a      	adds	r2, r3, #2
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006674:	68fb      	ldr	r3, [r7, #12]
 8006676:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006678:	b29b      	uxth	r3, r3
 800667a:	3b01      	subs	r3, #1
 800667c:	b29a      	uxth	r2, r3
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006682:	e059      	b.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006684:	68fb      	ldr	r3, [r7, #12]
 8006686:	681b      	ldr	r3, [r3, #0]
 8006688:	689b      	ldr	r3, [r3, #8]
 800668a:	f003 0302 	and.w	r3, r3, #2
 800668e:	2b02      	cmp	r3, #2
 8006690:	d11b      	bne.n	80066ca <HAL_SPI_TransmitReceive+0x162>
 8006692:	68fb      	ldr	r3, [r7, #12]
 8006694:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006696:	b29b      	uxth	r3, r3
 8006698:	2b00      	cmp	r3, #0
 800669a:	d016      	beq.n	80066ca <HAL_SPI_TransmitReceive+0x162>
 800669c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800669e:	2b01      	cmp	r3, #1
 80066a0:	d113      	bne.n	80066ca <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80066a2:	68fb      	ldr	r3, [r7, #12]
 80066a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066a6:	881a      	ldrh	r2, [r3, #0]
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	681b      	ldr	r3, [r3, #0]
 80066ac:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80066ae:	68fb      	ldr	r3, [r7, #12]
 80066b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066b2:	1c9a      	adds	r2, r3, #2
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80066b8:	68fb      	ldr	r3, [r7, #12]
 80066ba:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80066bc:	b29b      	uxth	r3, r3
 80066be:	3b01      	subs	r3, #1
 80066c0:	b29a      	uxth	r2, r3
 80066c2:	68fb      	ldr	r3, [r7, #12]
 80066c4:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80066c6:	2300      	movs	r3, #0
 80066c8:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80066ca:	68fb      	ldr	r3, [r7, #12]
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	689b      	ldr	r3, [r3, #8]
 80066d0:	f003 0301 	and.w	r3, r3, #1
 80066d4:	2b01      	cmp	r3, #1
 80066d6:	d119      	bne.n	800670c <HAL_SPI_TransmitReceive+0x1a4>
 80066d8:	68fb      	ldr	r3, [r7, #12]
 80066da:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80066dc:	b29b      	uxth	r3, r3
 80066de:	2b00      	cmp	r3, #0
 80066e0:	d014      	beq.n	800670c <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	68da      	ldr	r2, [r3, #12]
 80066e8:	68fb      	ldr	r3, [r7, #12]
 80066ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80066ec:	b292      	uxth	r2, r2
 80066ee:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80066f4:	1c9a      	adds	r2, r3, #2
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80066fa:	68fb      	ldr	r3, [r7, #12]
 80066fc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80066fe:	b29b      	uxth	r3, r3
 8006700:	3b01      	subs	r3, #1
 8006702:	b29a      	uxth	r2, r3
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006708:	2301      	movs	r3, #1
 800670a:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800670c:	f7fc f99c 	bl	8002a48 <HAL_GetTick>
 8006710:	4602      	mov	r2, r0
 8006712:	6a3b      	ldr	r3, [r7, #32]
 8006714:	1ad3      	subs	r3, r2, r3
 8006716:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006718:	429a      	cmp	r2, r3
 800671a:	d80d      	bhi.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
 800671c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800671e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006722:	d009      	beq.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	2201      	movs	r2, #1
 8006728:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800672c:	68fb      	ldr	r3, [r7, #12]
 800672e:	2200      	movs	r2, #0
 8006730:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006734:	2303      	movs	r3, #3
 8006736:	e0bc      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006738:	68fb      	ldr	r3, [r7, #12]
 800673a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800673c:	b29b      	uxth	r3, r3
 800673e:	2b00      	cmp	r3, #0
 8006740:	d1a0      	bne.n	8006684 <HAL_SPI_TransmitReceive+0x11c>
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006746:	b29b      	uxth	r3, r3
 8006748:	2b00      	cmp	r3, #0
 800674a:	d19b      	bne.n	8006684 <HAL_SPI_TransmitReceive+0x11c>
 800674c:	e082      	b.n	8006854 <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800674e:	68fb      	ldr	r3, [r7, #12]
 8006750:	685b      	ldr	r3, [r3, #4]
 8006752:	2b00      	cmp	r3, #0
 8006754:	d002      	beq.n	800675c <HAL_SPI_TransmitReceive+0x1f4>
 8006756:	8afb      	ldrh	r3, [r7, #22]
 8006758:	2b01      	cmp	r3, #1
 800675a:	d171      	bne.n	8006840 <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	330c      	adds	r3, #12
 8006766:	7812      	ldrb	r2, [r2, #0]
 8006768:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800676a:	68fb      	ldr	r3, [r7, #12]
 800676c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800676e:	1c5a      	adds	r2, r3, #1
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006774:	68fb      	ldr	r3, [r7, #12]
 8006776:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006778:	b29b      	uxth	r3, r3
 800677a:	3b01      	subs	r3, #1
 800677c:	b29a      	uxth	r2, r3
 800677e:	68fb      	ldr	r3, [r7, #12]
 8006780:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006782:	e05d      	b.n	8006840 <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006784:	68fb      	ldr	r3, [r7, #12]
 8006786:	681b      	ldr	r3, [r3, #0]
 8006788:	689b      	ldr	r3, [r3, #8]
 800678a:	f003 0302 	and.w	r3, r3, #2
 800678e:	2b02      	cmp	r3, #2
 8006790:	d11c      	bne.n	80067cc <HAL_SPI_TransmitReceive+0x264>
 8006792:	68fb      	ldr	r3, [r7, #12]
 8006794:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006796:	b29b      	uxth	r3, r3
 8006798:	2b00      	cmp	r3, #0
 800679a:	d017      	beq.n	80067cc <HAL_SPI_TransmitReceive+0x264>
 800679c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800679e:	2b01      	cmp	r3, #1
 80067a0:	d114      	bne.n	80067cc <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80067a2:	68fb      	ldr	r3, [r7, #12]
 80067a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80067a6:	68fb      	ldr	r3, [r7, #12]
 80067a8:	681b      	ldr	r3, [r3, #0]
 80067aa:	330c      	adds	r3, #12
 80067ac:	7812      	ldrb	r2, [r2, #0]
 80067ae:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 80067b0:	68fb      	ldr	r3, [r7, #12]
 80067b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80067b4:	1c5a      	adds	r2, r3, #1
 80067b6:	68fb      	ldr	r3, [r7, #12]
 80067b8:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80067ba:	68fb      	ldr	r3, [r7, #12]
 80067bc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80067be:	b29b      	uxth	r3, r3
 80067c0:	3b01      	subs	r3, #1
 80067c2:	b29a      	uxth	r2, r3
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80067c8:	2300      	movs	r3, #0
 80067ca:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	689b      	ldr	r3, [r3, #8]
 80067d2:	f003 0301 	and.w	r3, r3, #1
 80067d6:	2b01      	cmp	r3, #1
 80067d8:	d119      	bne.n	800680e <HAL_SPI_TransmitReceive+0x2a6>
 80067da:	68fb      	ldr	r3, [r7, #12]
 80067dc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80067de:	b29b      	uxth	r3, r3
 80067e0:	2b00      	cmp	r3, #0
 80067e2:	d014      	beq.n	800680e <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80067e4:	68fb      	ldr	r3, [r7, #12]
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	68da      	ldr	r2, [r3, #12]
 80067ea:	68fb      	ldr	r3, [r7, #12]
 80067ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80067ee:	b2d2      	uxtb	r2, r2
 80067f0:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80067f2:	68fb      	ldr	r3, [r7, #12]
 80067f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80067f6:	1c5a      	adds	r2, r3, #1
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80067fc:	68fb      	ldr	r3, [r7, #12]
 80067fe:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006800:	b29b      	uxth	r3, r3
 8006802:	3b01      	subs	r3, #1
 8006804:	b29a      	uxth	r2, r3
 8006806:	68fb      	ldr	r3, [r7, #12]
 8006808:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 800680a:	2301      	movs	r3, #1
 800680c:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800680e:	f7fc f91b 	bl	8002a48 <HAL_GetTick>
 8006812:	4602      	mov	r2, r0
 8006814:	6a3b      	ldr	r3, [r7, #32]
 8006816:	1ad3      	subs	r3, r2, r3
 8006818:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800681a:	429a      	cmp	r2, r3
 800681c:	d803      	bhi.n	8006826 <HAL_SPI_TransmitReceive+0x2be>
 800681e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006820:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006824:	d102      	bne.n	800682c <HAL_SPI_TransmitReceive+0x2c4>
 8006826:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006828:	2b00      	cmp	r3, #0
 800682a:	d109      	bne.n	8006840 <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 800682c:	68fb      	ldr	r3, [r7, #12]
 800682e:	2201      	movs	r2, #1
 8006830:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006834:	68fb      	ldr	r3, [r7, #12]
 8006836:	2200      	movs	r2, #0
 8006838:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 800683c:	2303      	movs	r3, #3
 800683e:	e038      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006844:	b29b      	uxth	r3, r3
 8006846:	2b00      	cmp	r3, #0
 8006848:	d19c      	bne.n	8006784 <HAL_SPI_TransmitReceive+0x21c>
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800684e:	b29b      	uxth	r3, r3
 8006850:	2b00      	cmp	r3, #0
 8006852:	d197      	bne.n	8006784 <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006854:	6a3a      	ldr	r2, [r7, #32]
 8006856:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8006858:	68f8      	ldr	r0, [r7, #12]
 800685a:	f000 fb63 	bl	8006f24 <SPI_EndRxTxTransaction>
 800685e:	4603      	mov	r3, r0
 8006860:	2b00      	cmp	r3, #0
 8006862:	d008      	beq.n	8006876 <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006864:	68fb      	ldr	r3, [r7, #12]
 8006866:	2220      	movs	r2, #32
 8006868:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800686a:	68fb      	ldr	r3, [r7, #12]
 800686c:	2200      	movs	r2, #0
 800686e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 8006872:	2301      	movs	r3, #1
 8006874:	e01d      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006876:	68fb      	ldr	r3, [r7, #12]
 8006878:	689b      	ldr	r3, [r3, #8]
 800687a:	2b00      	cmp	r3, #0
 800687c:	d10a      	bne.n	8006894 <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800687e:	2300      	movs	r3, #0
 8006880:	613b      	str	r3, [r7, #16]
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	68db      	ldr	r3, [r3, #12]
 8006888:	613b      	str	r3, [r7, #16]
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	681b      	ldr	r3, [r3, #0]
 800688e:	689b      	ldr	r3, [r3, #8]
 8006890:	613b      	str	r3, [r7, #16]
 8006892:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 8006894:	68fb      	ldr	r3, [r7, #12]
 8006896:	2201      	movs	r2, #1
 8006898:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800689c:	68fb      	ldr	r3, [r7, #12]
 800689e:	2200      	movs	r2, #0
 80068a0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80068a4:	68fb      	ldr	r3, [r7, #12]
 80068a6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80068a8:	2b00      	cmp	r3, #0
 80068aa:	d001      	beq.n	80068b0 <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 80068ac:	2301      	movs	r3, #1
 80068ae:	e000      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 80068b0:	2300      	movs	r3, #0
  }
}
 80068b2:	4618      	mov	r0, r3
 80068b4:	3728      	adds	r7, #40	@ 0x28
 80068b6:	46bd      	mov	sp, r7
 80068b8:	bd80      	pop	{r7, pc}
	...

080068bc <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 80068bc:	b580      	push	{r7, lr}
 80068be:	b084      	sub	sp, #16
 80068c0:	af00      	add	r7, sp, #0
 80068c2:	60f8      	str	r0, [r7, #12]
 80068c4:	60b9      	str	r1, [r7, #8]
 80068c6:	4613      	mov	r3, r2
 80068c8:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80068d0:	b2db      	uxtb	r3, r3
 80068d2:	2b01      	cmp	r3, #1
 80068d4:	d001      	beq.n	80068da <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 80068d6:	2302      	movs	r3, #2
 80068d8:	e097      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 80068da:	68bb      	ldr	r3, [r7, #8]
 80068dc:	2b00      	cmp	r3, #0
 80068de:	d002      	beq.n	80068e6 <HAL_SPI_Transmit_DMA+0x2a>
 80068e0:	88fb      	ldrh	r3, [r7, #6]
 80068e2:	2b00      	cmp	r3, #0
 80068e4:	d101      	bne.n	80068ea <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 80068e6:	2301      	movs	r3, #1
 80068e8:	e08f      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80068ea:	68fb      	ldr	r3, [r7, #12]
 80068ec:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80068f0:	2b01      	cmp	r3, #1
 80068f2:	d101      	bne.n	80068f8 <HAL_SPI_Transmit_DMA+0x3c>
 80068f4:	2302      	movs	r3, #2
 80068f6:	e088      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	2201      	movs	r2, #1
 80068fc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006900:	68fb      	ldr	r3, [r7, #12]
 8006902:	2203      	movs	r2, #3
 8006904:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006908:	68fb      	ldr	r3, [r7, #12]
 800690a:	2200      	movs	r2, #0
 800690c:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	68ba      	ldr	r2, [r7, #8]
 8006912:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	88fa      	ldrh	r2, [r7, #6]
 8006918:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	88fa      	ldrh	r2, [r7, #6]
 800691e:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	2200      	movs	r2, #0
 8006924:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 8006926:	68fb      	ldr	r3, [r7, #12]
 8006928:	2200      	movs	r2, #0
 800692a:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	2200      	movs	r2, #0
 8006930:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 8006932:	68fb      	ldr	r3, [r7, #12]
 8006934:	2200      	movs	r2, #0
 8006936:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006938:	68fb      	ldr	r3, [r7, #12]
 800693a:	2200      	movs	r2, #0
 800693c:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800693e:	68fb      	ldr	r3, [r7, #12]
 8006940:	689b      	ldr	r3, [r3, #8]
 8006942:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006946:	d10f      	bne.n	8006968 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006948:	68fb      	ldr	r3, [r7, #12]
 800694a:	681b      	ldr	r3, [r3, #0]
 800694c:	681a      	ldr	r2, [r3, #0]
 800694e:	68fb      	ldr	r3, [r7, #12]
 8006950:	681b      	ldr	r3, [r3, #0]
 8006952:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006956:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006958:	68fb      	ldr	r3, [r7, #12]
 800695a:	681b      	ldr	r3, [r3, #0]
 800695c:	681a      	ldr	r2, [r3, #0]
 800695e:	68fb      	ldr	r3, [r7, #12]
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006966:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8006968:	68fb      	ldr	r3, [r7, #12]
 800696a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800696c:	4a29      	ldr	r2, [pc, #164]	@ (8006a14 <HAL_SPI_Transmit_DMA+0x158>)
 800696e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006974:	4a28      	ldr	r2, [pc, #160]	@ (8006a18 <HAL_SPI_Transmit_DMA+0x15c>)
 8006976:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8006978:	68fb      	ldr	r3, [r7, #12]
 800697a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800697c:	4a27      	ldr	r2, [pc, #156]	@ (8006a1c <HAL_SPI_Transmit_DMA+0x160>)
 800697e:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006984:	2200      	movs	r2, #0
 8006986:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8006988:	68fb      	ldr	r3, [r7, #12]
 800698a:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 800698c:	68fb      	ldr	r3, [r7, #12]
 800698e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006990:	4619      	mov	r1, r3
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	330c      	adds	r3, #12
 8006998:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 800699a:	68fb      	ldr	r3, [r7, #12]
 800699c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800699e:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80069a0:	f7fd f802 	bl	80039a8 <HAL_DMA_Start_IT>
 80069a4:	4603      	mov	r3, r0
 80069a6:	2b00      	cmp	r3, #0
 80069a8:	d00b      	beq.n	80069c2 <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 80069aa:	68fb      	ldr	r3, [r7, #12]
 80069ac:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80069ae:	f043 0210 	orr.w	r2, r3, #16
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 80069b6:	68fb      	ldr	r3, [r7, #12]
 80069b8:	2200      	movs	r2, #0
 80069ba:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 80069be:	2301      	movs	r3, #1
 80069c0:	e023      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	681b      	ldr	r3, [r3, #0]
 80069c6:	681b      	ldr	r3, [r3, #0]
 80069c8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80069cc:	2b40      	cmp	r3, #64	@ 0x40
 80069ce:	d007      	beq.n	80069e0 <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80069d0:	68fb      	ldr	r3, [r7, #12]
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	681a      	ldr	r2, [r3, #0]
 80069d6:	68fb      	ldr	r3, [r7, #12]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80069de:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	2200      	movs	r2, #0
 80069e4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	681b      	ldr	r3, [r3, #0]
 80069ec:	685a      	ldr	r2, [r3, #4]
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	f042 0220 	orr.w	r2, r2, #32
 80069f6:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	685a      	ldr	r2, [r3, #4]
 80069fe:	68fb      	ldr	r3, [r7, #12]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	f042 0202 	orr.w	r2, r2, #2
 8006a06:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 8006a08:	2300      	movs	r3, #0
}
 8006a0a:	4618      	mov	r0, r3
 8006a0c:	3710      	adds	r7, #16
 8006a0e:	46bd      	mov	sp, r7
 8006a10:	bd80      	pop	{r7, pc}
 8006a12:	bf00      	nop
 8006a14:	08006cc5 	.word	0x08006cc5
 8006a18:	08006c1d 	.word	0x08006c1d
 8006a1c:	08006ce1 	.word	0x08006ce1

08006a20 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8006a20:	b580      	push	{r7, lr}
 8006a22:	b088      	sub	sp, #32
 8006a24:	af00      	add	r7, sp, #0
 8006a26:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	685b      	ldr	r3, [r3, #4]
 8006a2e:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	689b      	ldr	r3, [r3, #8]
 8006a36:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006a38:	69bb      	ldr	r3, [r7, #24]
 8006a3a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d10e      	bne.n	8006a60 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006a42:	69bb      	ldr	r3, [r7, #24]
 8006a44:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006a48:	2b00      	cmp	r3, #0
 8006a4a:	d009      	beq.n	8006a60 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006a4c:	69fb      	ldr	r3, [r7, #28]
 8006a4e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a52:	2b00      	cmp	r3, #0
 8006a54:	d004      	beq.n	8006a60 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a5a:	6878      	ldr	r0, [r7, #4]
 8006a5c:	4798      	blx	r3
    return;
 8006a5e:	e0ce      	b.n	8006bfe <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8006a60:	69bb      	ldr	r3, [r7, #24]
 8006a62:	f003 0302 	and.w	r3, r3, #2
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	d009      	beq.n	8006a7e <HAL_SPI_IRQHandler+0x5e>
 8006a6a:	69fb      	ldr	r3, [r7, #28]
 8006a6c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006a70:	2b00      	cmp	r3, #0
 8006a72:	d004      	beq.n	8006a7e <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006a78:	6878      	ldr	r0, [r7, #4]
 8006a7a:	4798      	blx	r3
    return;
 8006a7c:	e0bf      	b.n	8006bfe <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006a7e:	69bb      	ldr	r3, [r7, #24]
 8006a80:	f003 0320 	and.w	r3, r3, #32
 8006a84:	2b00      	cmp	r3, #0
 8006a86:	d10a      	bne.n	8006a9e <HAL_SPI_IRQHandler+0x7e>
 8006a88:	69bb      	ldr	r3, [r7, #24]
 8006a8a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a8e:	2b00      	cmp	r3, #0
 8006a90:	d105      	bne.n	8006a9e <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8006a92:	69bb      	ldr	r3, [r7, #24]
 8006a94:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a98:	2b00      	cmp	r3, #0
 8006a9a:	f000 80b0 	beq.w	8006bfe <HAL_SPI_IRQHandler+0x1de>
 8006a9e:	69fb      	ldr	r3, [r7, #28]
 8006aa0:	f003 0320 	and.w	r3, r3, #32
 8006aa4:	2b00      	cmp	r3, #0
 8006aa6:	f000 80aa 	beq.w	8006bfe <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006aaa:	69bb      	ldr	r3, [r7, #24]
 8006aac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	d023      	beq.n	8006afc <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006ab4:	687b      	ldr	r3, [r7, #4]
 8006ab6:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006aba:	b2db      	uxtb	r3, r3
 8006abc:	2b03      	cmp	r3, #3
 8006abe:	d011      	beq.n	8006ae4 <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ac4:	f043 0204 	orr.w	r2, r3, #4
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006acc:	2300      	movs	r3, #0
 8006ace:	617b      	str	r3, [r7, #20]
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	681b      	ldr	r3, [r3, #0]
 8006ad4:	68db      	ldr	r3, [r3, #12]
 8006ad6:	617b      	str	r3, [r7, #20]
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	689b      	ldr	r3, [r3, #8]
 8006ade:	617b      	str	r3, [r7, #20]
 8006ae0:	697b      	ldr	r3, [r7, #20]
 8006ae2:	e00b      	b.n	8006afc <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	613b      	str	r3, [r7, #16]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	68db      	ldr	r3, [r3, #12]
 8006aee:	613b      	str	r3, [r7, #16]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	689b      	ldr	r3, [r3, #8]
 8006af6:	613b      	str	r3, [r7, #16]
 8006af8:	693b      	ldr	r3, [r7, #16]
        return;
 8006afa:	e080      	b.n	8006bfe <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006afc:	69bb      	ldr	r3, [r7, #24]
 8006afe:	f003 0320 	and.w	r3, r3, #32
 8006b02:	2b00      	cmp	r3, #0
 8006b04:	d014      	beq.n	8006b30 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b0a:	f043 0201 	orr.w	r2, r3, #1
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006b12:	2300      	movs	r3, #0
 8006b14:	60fb      	str	r3, [r7, #12]
 8006b16:	687b      	ldr	r3, [r7, #4]
 8006b18:	681b      	ldr	r3, [r3, #0]
 8006b1a:	689b      	ldr	r3, [r3, #8]
 8006b1c:	60fb      	str	r3, [r7, #12]
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	681b      	ldr	r3, [r3, #0]
 8006b22:	681a      	ldr	r2, [r3, #0]
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	681b      	ldr	r3, [r3, #0]
 8006b28:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b2c:	601a      	str	r2, [r3, #0]
 8006b2e:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8006b30:	69bb      	ldr	r3, [r7, #24]
 8006b32:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006b36:	2b00      	cmp	r3, #0
 8006b38:	d00c      	beq.n	8006b54 <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b3e:	f043 0208 	orr.w	r2, r3, #8
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006b46:	2300      	movs	r3, #0
 8006b48:	60bb      	str	r3, [r7, #8]
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	689b      	ldr	r3, [r3, #8]
 8006b50:	60bb      	str	r3, [r7, #8]
 8006b52:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	d04f      	beq.n	8006bfc <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	685a      	ldr	r2, [r3, #4]
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	681b      	ldr	r3, [r3, #0]
 8006b66:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006b6a:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	2201      	movs	r2, #1
 8006b70:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8006b74:	69fb      	ldr	r3, [r7, #28]
 8006b76:	f003 0302 	and.w	r3, r3, #2
 8006b7a:	2b00      	cmp	r3, #0
 8006b7c:	d104      	bne.n	8006b88 <HAL_SPI_IRQHandler+0x168>
 8006b7e:	69fb      	ldr	r3, [r7, #28]
 8006b80:	f003 0301 	and.w	r3, r3, #1
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	d034      	beq.n	8006bf2 <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006b88:	687b      	ldr	r3, [r7, #4]
 8006b8a:	681b      	ldr	r3, [r3, #0]
 8006b8c:	685a      	ldr	r2, [r3, #4]
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	f022 0203 	bic.w	r2, r2, #3
 8006b96:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006b9c:	2b00      	cmp	r3, #0
 8006b9e:	d011      	beq.n	8006bc4 <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006ba4:	4a17      	ldr	r2, [pc, #92]	@ (8006c04 <HAL_SPI_IRQHandler+0x1e4>)
 8006ba6:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006bac:	4618      	mov	r0, r3
 8006bae:	f7fc ff53 	bl	8003a58 <HAL_DMA_Abort_IT>
 8006bb2:	4603      	mov	r3, r0
 8006bb4:	2b00      	cmp	r3, #0
 8006bb6:	d005      	beq.n	8006bc4 <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006bbc:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bc8:	2b00      	cmp	r3, #0
 8006bca:	d016      	beq.n	8006bfa <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bd0:	4a0c      	ldr	r2, [pc, #48]	@ (8006c04 <HAL_SPI_IRQHandler+0x1e4>)
 8006bd2:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bd8:	4618      	mov	r0, r3
 8006bda:	f7fc ff3d 	bl	8003a58 <HAL_DMA_Abort_IT>
 8006bde:	4603      	mov	r3, r0
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	d00a      	beq.n	8006bfa <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006be8:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 8006bf0:	e003      	b.n	8006bfa <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8006bf2:	6878      	ldr	r0, [r7, #4]
 8006bf4:	f7fb fbc0 	bl	8002378 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8006bf8:	e000      	b.n	8006bfc <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8006bfa:	bf00      	nop
    return;
 8006bfc:	bf00      	nop
  }
}
 8006bfe:	3720      	adds	r7, #32
 8006c00:	46bd      	mov	sp, r7
 8006c02:	bd80      	pop	{r7, pc}
 8006c04:	08006d21 	.word	0x08006d21

08006c08 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8006c08:	b480      	push	{r7}
 8006c0a:	b083      	sub	sp, #12
 8006c0c:	af00      	add	r7, sp, #0
 8006c0e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8006c10:	bf00      	nop
 8006c12:	370c      	adds	r7, #12
 8006c14:	46bd      	mov	sp, r7
 8006c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c1a:	4770      	bx	lr

08006c1c <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006c1c:	b580      	push	{r7, lr}
 8006c1e:	b086      	sub	sp, #24
 8006c20:	af00      	add	r7, sp, #0
 8006c22:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006c28:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006c2a:	f7fb ff0d 	bl	8002a48 <HAL_GetTick>
 8006c2e:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006c3e:	d03b      	beq.n	8006cb8 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8006c40:	697b      	ldr	r3, [r7, #20]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	685a      	ldr	r2, [r3, #4]
 8006c46:	697b      	ldr	r3, [r7, #20]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	f022 0220 	bic.w	r2, r2, #32
 8006c4e:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8006c50:	697b      	ldr	r3, [r7, #20]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	685a      	ldr	r2, [r3, #4]
 8006c56:	697b      	ldr	r3, [r7, #20]
 8006c58:	681b      	ldr	r3, [r3, #0]
 8006c5a:	f022 0202 	bic.w	r2, r2, #2
 8006c5e:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8006c60:	693a      	ldr	r2, [r7, #16]
 8006c62:	2164      	movs	r1, #100	@ 0x64
 8006c64:	6978      	ldr	r0, [r7, #20]
 8006c66:	f000 f95d 	bl	8006f24 <SPI_EndRxTxTransaction>
 8006c6a:	4603      	mov	r3, r0
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	d005      	beq.n	8006c7c <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c70:	697b      	ldr	r3, [r7, #20]
 8006c72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c74:	f043 0220 	orr.w	r2, r3, #32
 8006c78:	697b      	ldr	r3, [r7, #20]
 8006c7a:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006c7c:	697b      	ldr	r3, [r7, #20]
 8006c7e:	689b      	ldr	r3, [r3, #8]
 8006c80:	2b00      	cmp	r3, #0
 8006c82:	d10a      	bne.n	8006c9a <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006c84:	2300      	movs	r3, #0
 8006c86:	60fb      	str	r3, [r7, #12]
 8006c88:	697b      	ldr	r3, [r7, #20]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	68db      	ldr	r3, [r3, #12]
 8006c8e:	60fb      	str	r3, [r7, #12]
 8006c90:	697b      	ldr	r3, [r7, #20]
 8006c92:	681b      	ldr	r3, [r3, #0]
 8006c94:	689b      	ldr	r3, [r3, #8]
 8006c96:	60fb      	str	r3, [r7, #12]
 8006c98:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8006c9a:	697b      	ldr	r3, [r7, #20]
 8006c9c:	2200      	movs	r2, #0
 8006c9e:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8006ca0:	697b      	ldr	r3, [r7, #20]
 8006ca2:	2201      	movs	r2, #1
 8006ca4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006ca8:	697b      	ldr	r3, [r7, #20]
 8006caa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	d003      	beq.n	8006cb8 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8006cb0:	6978      	ldr	r0, [r7, #20]
 8006cb2:	f7fb fb61 	bl	8002378 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8006cb6:	e002      	b.n	8006cbe <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8006cb8:	6978      	ldr	r0, [r7, #20]
 8006cba:	f7fb fb73 	bl	80023a4 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006cbe:	3718      	adds	r7, #24
 8006cc0:	46bd      	mov	sp, r7
 8006cc2:	bd80      	pop	{r7, pc}

08006cc4 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006cc4:	b580      	push	{r7, lr}
 8006cc6:	b084      	sub	sp, #16
 8006cc8:	af00      	add	r7, sp, #0
 8006cca:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006cd0:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8006cd2:	68f8      	ldr	r0, [r7, #12]
 8006cd4:	f7ff ff98 	bl	8006c08 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006cd8:	bf00      	nop
 8006cda:	3710      	adds	r7, #16
 8006cdc:	46bd      	mov	sp, r7
 8006cde:	bd80      	pop	{r7, pc}

08006ce0 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8006ce0:	b580      	push	{r7, lr}
 8006ce2:	b084      	sub	sp, #16
 8006ce4:	af00      	add	r7, sp, #0
 8006ce6:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006cec:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8006cee:	68fb      	ldr	r3, [r7, #12]
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	685a      	ldr	r2, [r3, #4]
 8006cf4:	68fb      	ldr	r3, [r7, #12]
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	f022 0203 	bic.w	r2, r2, #3
 8006cfc:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006cfe:	68fb      	ldr	r3, [r7, #12]
 8006d00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006d02:	f043 0210 	orr.w	r2, r3, #16
 8006d06:	68fb      	ldr	r3, [r7, #12]
 8006d08:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8006d0a:	68fb      	ldr	r3, [r7, #12]
 8006d0c:	2201      	movs	r2, #1
 8006d0e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006d12:	68f8      	ldr	r0, [r7, #12]
 8006d14:	f7fb fb30 	bl	8002378 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006d18:	bf00      	nop
 8006d1a:	3710      	adds	r7, #16
 8006d1c:	46bd      	mov	sp, r7
 8006d1e:	bd80      	pop	{r7, pc}

08006d20 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006d20:	b580      	push	{r7, lr}
 8006d22:	b084      	sub	sp, #16
 8006d24:	af00      	add	r7, sp, #0
 8006d26:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d2c:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8006d2e:	68fb      	ldr	r3, [r7, #12]
 8006d30:	2200      	movs	r2, #0
 8006d32:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8006d34:	68fb      	ldr	r3, [r7, #12]
 8006d36:	2200      	movs	r2, #0
 8006d38:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006d3a:	68f8      	ldr	r0, [r7, #12]
 8006d3c:	f7fb fb1c 	bl	8002378 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006d40:	bf00      	nop
 8006d42:	3710      	adds	r7, #16
 8006d44:	46bd      	mov	sp, r7
 8006d46:	bd80      	pop	{r7, pc}

08006d48 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006d48:	b580      	push	{r7, lr}
 8006d4a:	b088      	sub	sp, #32
 8006d4c:	af00      	add	r7, sp, #0
 8006d4e:	60f8      	str	r0, [r7, #12]
 8006d50:	60b9      	str	r1, [r7, #8]
 8006d52:	603b      	str	r3, [r7, #0]
 8006d54:	4613      	mov	r3, r2
 8006d56:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006d58:	f7fb fe76 	bl	8002a48 <HAL_GetTick>
 8006d5c:	4602      	mov	r2, r0
 8006d5e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006d60:	1a9b      	subs	r3, r3, r2
 8006d62:	683a      	ldr	r2, [r7, #0]
 8006d64:	4413      	add	r3, r2
 8006d66:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006d68:	f7fb fe6e 	bl	8002a48 <HAL_GetTick>
 8006d6c:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006d6e:	4b39      	ldr	r3, [pc, #228]	@ (8006e54 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	015b      	lsls	r3, r3, #5
 8006d74:	0d1b      	lsrs	r3, r3, #20
 8006d76:	69fa      	ldr	r2, [r7, #28]
 8006d78:	fb02 f303 	mul.w	r3, r2, r3
 8006d7c:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006d7e:	e054      	b.n	8006e2a <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006d80:	683b      	ldr	r3, [r7, #0]
 8006d82:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d86:	d050      	beq.n	8006e2a <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006d88:	f7fb fe5e 	bl	8002a48 <HAL_GetTick>
 8006d8c:	4602      	mov	r2, r0
 8006d8e:	69bb      	ldr	r3, [r7, #24]
 8006d90:	1ad3      	subs	r3, r2, r3
 8006d92:	69fa      	ldr	r2, [r7, #28]
 8006d94:	429a      	cmp	r2, r3
 8006d96:	d902      	bls.n	8006d9e <SPI_WaitFlagStateUntilTimeout+0x56>
 8006d98:	69fb      	ldr	r3, [r7, #28]
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d13d      	bne.n	8006e1a <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	685a      	ldr	r2, [r3, #4]
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006dac:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006dae:	68fb      	ldr	r3, [r7, #12]
 8006db0:	685b      	ldr	r3, [r3, #4]
 8006db2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006db6:	d111      	bne.n	8006ddc <SPI_WaitFlagStateUntilTimeout+0x94>
 8006db8:	68fb      	ldr	r3, [r7, #12]
 8006dba:	689b      	ldr	r3, [r3, #8]
 8006dbc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006dc0:	d004      	beq.n	8006dcc <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	689b      	ldr	r3, [r3, #8]
 8006dc6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006dca:	d107      	bne.n	8006ddc <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	681a      	ldr	r2, [r3, #0]
 8006dd2:	68fb      	ldr	r3, [r7, #12]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006dda:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006ddc:	68fb      	ldr	r3, [r7, #12]
 8006dde:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006de0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006de4:	d10f      	bne.n	8006e06 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006de6:	68fb      	ldr	r3, [r7, #12]
 8006de8:	681b      	ldr	r3, [r3, #0]
 8006dea:	681a      	ldr	r2, [r3, #0]
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006df4:	601a      	str	r2, [r3, #0]
 8006df6:	68fb      	ldr	r3, [r7, #12]
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	681a      	ldr	r2, [r3, #0]
 8006dfc:	68fb      	ldr	r3, [r7, #12]
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006e04:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006e06:	68fb      	ldr	r3, [r7, #12]
 8006e08:	2201      	movs	r2, #1
 8006e0a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006e0e:	68fb      	ldr	r3, [r7, #12]
 8006e10:	2200      	movs	r2, #0
 8006e12:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8006e16:	2303      	movs	r3, #3
 8006e18:	e017      	b.n	8006e4a <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006e1a:	697b      	ldr	r3, [r7, #20]
 8006e1c:	2b00      	cmp	r3, #0
 8006e1e:	d101      	bne.n	8006e24 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006e20:	2300      	movs	r3, #0
 8006e22:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006e24:	697b      	ldr	r3, [r7, #20]
 8006e26:	3b01      	subs	r3, #1
 8006e28:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006e2a:	68fb      	ldr	r3, [r7, #12]
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	689a      	ldr	r2, [r3, #8]
 8006e30:	68bb      	ldr	r3, [r7, #8]
 8006e32:	4013      	ands	r3, r2
 8006e34:	68ba      	ldr	r2, [r7, #8]
 8006e36:	429a      	cmp	r2, r3
 8006e38:	bf0c      	ite	eq
 8006e3a:	2301      	moveq	r3, #1
 8006e3c:	2300      	movne	r3, #0
 8006e3e:	b2db      	uxtb	r3, r3
 8006e40:	461a      	mov	r2, r3
 8006e42:	79fb      	ldrb	r3, [r7, #7]
 8006e44:	429a      	cmp	r2, r3
 8006e46:	d19b      	bne.n	8006d80 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006e48:	2300      	movs	r3, #0
}
 8006e4a:	4618      	mov	r0, r3
 8006e4c:	3720      	adds	r7, #32
 8006e4e:	46bd      	mov	sp, r7
 8006e50:	bd80      	pop	{r7, pc}
 8006e52:	bf00      	nop
 8006e54:	20000008 	.word	0x20000008

08006e58 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006e58:	b580      	push	{r7, lr}
 8006e5a:	b086      	sub	sp, #24
 8006e5c:	af02      	add	r7, sp, #8
 8006e5e:	60f8      	str	r0, [r7, #12]
 8006e60:	60b9      	str	r1, [r7, #8]
 8006e62:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006e64:	68fb      	ldr	r3, [r7, #12]
 8006e66:	685b      	ldr	r3, [r3, #4]
 8006e68:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006e6c:	d111      	bne.n	8006e92 <SPI_EndRxTransaction+0x3a>
 8006e6e:	68fb      	ldr	r3, [r7, #12]
 8006e70:	689b      	ldr	r3, [r3, #8]
 8006e72:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006e76:	d004      	beq.n	8006e82 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006e78:	68fb      	ldr	r3, [r7, #12]
 8006e7a:	689b      	ldr	r3, [r3, #8]
 8006e7c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006e80:	d107      	bne.n	8006e92 <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006e82:	68fb      	ldr	r3, [r7, #12]
 8006e84:	681b      	ldr	r3, [r3, #0]
 8006e86:	681a      	ldr	r2, [r3, #0]
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006e90:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006e92:	68fb      	ldr	r3, [r7, #12]
 8006e94:	685b      	ldr	r3, [r3, #4]
 8006e96:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006e9a:	d12a      	bne.n	8006ef2 <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	689b      	ldr	r3, [r3, #8]
 8006ea0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006ea4:	d012      	beq.n	8006ecc <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	9300      	str	r3, [sp, #0]
 8006eaa:	68bb      	ldr	r3, [r7, #8]
 8006eac:	2200      	movs	r2, #0
 8006eae:	2180      	movs	r1, #128	@ 0x80
 8006eb0:	68f8      	ldr	r0, [r7, #12]
 8006eb2:	f7ff ff49 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006eb6:	4603      	mov	r3, r0
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d02d      	beq.n	8006f18 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006ebc:	68fb      	ldr	r3, [r7, #12]
 8006ebe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ec0:	f043 0220 	orr.w	r2, r3, #32
 8006ec4:	68fb      	ldr	r3, [r7, #12]
 8006ec6:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006ec8:	2303      	movs	r3, #3
 8006eca:	e026      	b.n	8006f1a <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	9300      	str	r3, [sp, #0]
 8006ed0:	68bb      	ldr	r3, [r7, #8]
 8006ed2:	2200      	movs	r2, #0
 8006ed4:	2101      	movs	r1, #1
 8006ed6:	68f8      	ldr	r0, [r7, #12]
 8006ed8:	f7ff ff36 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006edc:	4603      	mov	r3, r0
 8006ede:	2b00      	cmp	r3, #0
 8006ee0:	d01a      	beq.n	8006f18 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006ee2:	68fb      	ldr	r3, [r7, #12]
 8006ee4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ee6:	f043 0220 	orr.w	r2, r3, #32
 8006eea:	68fb      	ldr	r3, [r7, #12]
 8006eec:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006eee:	2303      	movs	r3, #3
 8006ef0:	e013      	b.n	8006f1a <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	9300      	str	r3, [sp, #0]
 8006ef6:	68bb      	ldr	r3, [r7, #8]
 8006ef8:	2200      	movs	r2, #0
 8006efa:	2101      	movs	r1, #1
 8006efc:	68f8      	ldr	r0, [r7, #12]
 8006efe:	f7ff ff23 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006f02:	4603      	mov	r3, r0
 8006f04:	2b00      	cmp	r3, #0
 8006f06:	d007      	beq.n	8006f18 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f08:	68fb      	ldr	r3, [r7, #12]
 8006f0a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f0c:	f043 0220 	orr.w	r2, r3, #32
 8006f10:	68fb      	ldr	r3, [r7, #12]
 8006f12:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006f14:	2303      	movs	r3, #3
 8006f16:	e000      	b.n	8006f1a <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006f18:	2300      	movs	r3, #0
}
 8006f1a:	4618      	mov	r0, r3
 8006f1c:	3710      	adds	r7, #16
 8006f1e:	46bd      	mov	sp, r7
 8006f20:	bd80      	pop	{r7, pc}
	...

08006f24 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006f24:	b580      	push	{r7, lr}
 8006f26:	b088      	sub	sp, #32
 8006f28:	af02      	add	r7, sp, #8
 8006f2a:	60f8      	str	r0, [r7, #12]
 8006f2c:	60b9      	str	r1, [r7, #8]
 8006f2e:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	9300      	str	r3, [sp, #0]
 8006f34:	68bb      	ldr	r3, [r7, #8]
 8006f36:	2201      	movs	r2, #1
 8006f38:	2102      	movs	r1, #2
 8006f3a:	68f8      	ldr	r0, [r7, #12]
 8006f3c:	f7ff ff04 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006f40:	4603      	mov	r3, r0
 8006f42:	2b00      	cmp	r3, #0
 8006f44:	d007      	beq.n	8006f56 <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f4a:	f043 0220 	orr.w	r2, r3, #32
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006f52:	2303      	movs	r3, #3
 8006f54:	e032      	b.n	8006fbc <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006f56:	4b1b      	ldr	r3, [pc, #108]	@ (8006fc4 <SPI_EndRxTxTransaction+0xa0>)
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	4a1b      	ldr	r2, [pc, #108]	@ (8006fc8 <SPI_EndRxTxTransaction+0xa4>)
 8006f5c:	fba2 2303 	umull	r2, r3, r2, r3
 8006f60:	0d5b      	lsrs	r3, r3, #21
 8006f62:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006f66:	fb02 f303 	mul.w	r3, r2, r3
 8006f6a:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f6c:	68fb      	ldr	r3, [r7, #12]
 8006f6e:	685b      	ldr	r3, [r3, #4]
 8006f70:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006f74:	d112      	bne.n	8006f9c <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	9300      	str	r3, [sp, #0]
 8006f7a:	68bb      	ldr	r3, [r7, #8]
 8006f7c:	2200      	movs	r2, #0
 8006f7e:	2180      	movs	r1, #128	@ 0x80
 8006f80:	68f8      	ldr	r0, [r7, #12]
 8006f82:	f7ff fee1 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006f86:	4603      	mov	r3, r0
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	d016      	beq.n	8006fba <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f8c:	68fb      	ldr	r3, [r7, #12]
 8006f8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f90:	f043 0220 	orr.w	r2, r3, #32
 8006f94:	68fb      	ldr	r3, [r7, #12]
 8006f96:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006f98:	2303      	movs	r3, #3
 8006f9a:	e00f      	b.n	8006fbc <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8006f9c:	697b      	ldr	r3, [r7, #20]
 8006f9e:	2b00      	cmp	r3, #0
 8006fa0:	d00a      	beq.n	8006fb8 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8006fa2:	697b      	ldr	r3, [r7, #20]
 8006fa4:	3b01      	subs	r3, #1
 8006fa6:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006fa8:	68fb      	ldr	r3, [r7, #12]
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	689b      	ldr	r3, [r3, #8]
 8006fae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006fb2:	2b80      	cmp	r3, #128	@ 0x80
 8006fb4:	d0f2      	beq.n	8006f9c <SPI_EndRxTxTransaction+0x78>
 8006fb6:	e000      	b.n	8006fba <SPI_EndRxTxTransaction+0x96>
        break;
 8006fb8:	bf00      	nop
  }

  return HAL_OK;
 8006fba:	2300      	movs	r3, #0
}
 8006fbc:	4618      	mov	r0, r3
 8006fbe:	3718      	adds	r7, #24
 8006fc0:	46bd      	mov	sp, r7
 8006fc2:	bd80      	pop	{r7, pc}
 8006fc4:	20000008 	.word	0x20000008
 8006fc8:	165e9f81 	.word	0x165e9f81

08006fcc <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006fcc:	b580      	push	{r7, lr}
 8006fce:	b082      	sub	sp, #8
 8006fd0:	af00      	add	r7, sp, #0
 8006fd2:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d101      	bne.n	8006fde <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006fda:	2301      	movs	r3, #1
 8006fdc:	e041      	b.n	8007062 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006fde:	687b      	ldr	r3, [r7, #4]
 8006fe0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006fe4:	b2db      	uxtb	r3, r3
 8006fe6:	2b00      	cmp	r3, #0
 8006fe8:	d106      	bne.n	8006ff8 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006fea:	687b      	ldr	r3, [r7, #4]
 8006fec:	2200      	movs	r2, #0
 8006fee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006ff2:	6878      	ldr	r0, [r7, #4]
 8006ff4:	f7fa fe08 	bl	8001c08 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ff8:	687b      	ldr	r3, [r7, #4]
 8006ffa:	2202      	movs	r2, #2
 8006ffc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	681a      	ldr	r2, [r3, #0]
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	3304      	adds	r3, #4
 8007008:	4619      	mov	r1, r3
 800700a:	4610      	mov	r0, r2
 800700c:	f000 fc62 	bl	80078d4 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	2201      	movs	r2, #1
 8007014:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	2201      	movs	r2, #1
 800701c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	2201      	movs	r2, #1
 8007024:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	2201      	movs	r2, #1
 800702c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007030:	687b      	ldr	r3, [r7, #4]
 8007032:	2201      	movs	r2, #1
 8007034:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	2201      	movs	r2, #1
 800703c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	2201      	movs	r2, #1
 8007044:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	2201      	movs	r2, #1
 800704c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007050:	687b      	ldr	r3, [r7, #4]
 8007052:	2201      	movs	r2, #1
 8007054:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	2201      	movs	r2, #1
 800705c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8007060:	2300      	movs	r3, #0
}
 8007062:	4618      	mov	r0, r3
 8007064:	3708      	adds	r7, #8
 8007066:	46bd      	mov	sp, r7
 8007068:	bd80      	pop	{r7, pc}
	...

0800706c <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 800706c:	b480      	push	{r7}
 800706e:	b085      	sub	sp, #20
 8007070:	af00      	add	r7, sp, #0
 8007072:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800707a:	b2db      	uxtb	r3, r3
 800707c:	2b01      	cmp	r3, #1
 800707e:	d001      	beq.n	8007084 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8007080:	2301      	movs	r3, #1
 8007082:	e04e      	b.n	8007122 <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	2202      	movs	r2, #2
 8007088:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	68da      	ldr	r2, [r3, #12]
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	681b      	ldr	r3, [r3, #0]
 8007096:	f042 0201 	orr.w	r2, r2, #1
 800709a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	4a23      	ldr	r2, [pc, #140]	@ (8007130 <HAL_TIM_Base_Start_IT+0xc4>)
 80070a2:	4293      	cmp	r3, r2
 80070a4:	d022      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070ae:	d01d      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	4a1f      	ldr	r2, [pc, #124]	@ (8007134 <HAL_TIM_Base_Start_IT+0xc8>)
 80070b6:	4293      	cmp	r3, r2
 80070b8:	d018      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	4a1e      	ldr	r2, [pc, #120]	@ (8007138 <HAL_TIM_Base_Start_IT+0xcc>)
 80070c0:	4293      	cmp	r3, r2
 80070c2:	d013      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	4a1c      	ldr	r2, [pc, #112]	@ (800713c <HAL_TIM_Base_Start_IT+0xd0>)
 80070ca:	4293      	cmp	r3, r2
 80070cc:	d00e      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	681b      	ldr	r3, [r3, #0]
 80070d2:	4a1b      	ldr	r2, [pc, #108]	@ (8007140 <HAL_TIM_Base_Start_IT+0xd4>)
 80070d4:	4293      	cmp	r3, r2
 80070d6:	d009      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	681b      	ldr	r3, [r3, #0]
 80070dc:	4a19      	ldr	r2, [pc, #100]	@ (8007144 <HAL_TIM_Base_Start_IT+0xd8>)
 80070de:	4293      	cmp	r3, r2
 80070e0:	d004      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	4a18      	ldr	r2, [pc, #96]	@ (8007148 <HAL_TIM_Base_Start_IT+0xdc>)
 80070e8:	4293      	cmp	r3, r2
 80070ea:	d111      	bne.n	8007110 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	681b      	ldr	r3, [r3, #0]
 80070f0:	689b      	ldr	r3, [r3, #8]
 80070f2:	f003 0307 	and.w	r3, r3, #7
 80070f6:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80070f8:	68fb      	ldr	r3, [r7, #12]
 80070fa:	2b06      	cmp	r3, #6
 80070fc:	d010      	beq.n	8007120 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	681b      	ldr	r3, [r3, #0]
 8007102:	681a      	ldr	r2, [r3, #0]
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	f042 0201 	orr.w	r2, r2, #1
 800710c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800710e:	e007      	b.n	8007120 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	681a      	ldr	r2, [r3, #0]
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	f042 0201 	orr.w	r2, r2, #1
 800711e:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007120:	2300      	movs	r3, #0
}
 8007122:	4618      	mov	r0, r3
 8007124:	3714      	adds	r7, #20
 8007126:	46bd      	mov	sp, r7
 8007128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800712c:	4770      	bx	lr
 800712e:	bf00      	nop
 8007130:	40010000 	.word	0x40010000
 8007134:	40000400 	.word	0x40000400
 8007138:	40000800 	.word	0x40000800
 800713c:	40000c00 	.word	0x40000c00
 8007140:	40010400 	.word	0x40010400
 8007144:	40014000 	.word	0x40014000
 8007148:	40001800 	.word	0x40001800

0800714c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800714c:	b580      	push	{r7, lr}
 800714e:	b082      	sub	sp, #8
 8007150:	af00      	add	r7, sp, #0
 8007152:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007154:	687b      	ldr	r3, [r7, #4]
 8007156:	2b00      	cmp	r3, #0
 8007158:	d101      	bne.n	800715e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800715a:	2301      	movs	r3, #1
 800715c:	e041      	b.n	80071e2 <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007164:	b2db      	uxtb	r3, r3
 8007166:	2b00      	cmp	r3, #0
 8007168:	d106      	bne.n	8007178 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	2200      	movs	r2, #0
 800716e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8007172:	6878      	ldr	r0, [r7, #4]
 8007174:	f000 f839 	bl	80071ea <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	2202      	movs	r2, #2
 800717c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	681a      	ldr	r2, [r3, #0]
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	3304      	adds	r3, #4
 8007188:	4619      	mov	r1, r3
 800718a:	4610      	mov	r0, r2
 800718c:	f000 fba2 	bl	80078d4 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	2201      	movs	r2, #1
 8007194:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	2201      	movs	r2, #1
 800719c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	2201      	movs	r2, #1
 80071a4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	2201      	movs	r2, #1
 80071ac:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	2201      	movs	r2, #1
 80071b4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	2201      	movs	r2, #1
 80071bc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	2201      	movs	r2, #1
 80071c4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	2201      	movs	r2, #1
 80071cc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	2201      	movs	r2, #1
 80071d4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	2201      	movs	r2, #1
 80071dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 80071e0:	2300      	movs	r3, #0
}
 80071e2:	4618      	mov	r0, r3
 80071e4:	3708      	adds	r7, #8
 80071e6:	46bd      	mov	sp, r7
 80071e8:	bd80      	pop	{r7, pc}

080071ea <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 80071ea:	b480      	push	{r7}
 80071ec:	b083      	sub	sp, #12
 80071ee:	af00      	add	r7, sp, #0
 80071f0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 80071f2:	bf00      	nop
 80071f4:	370c      	adds	r7, #12
 80071f6:	46bd      	mov	sp, r7
 80071f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071fc:	4770      	bx	lr
	...

08007200 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8007200:	b580      	push	{r7, lr}
 8007202:	b084      	sub	sp, #16
 8007204:	af00      	add	r7, sp, #0
 8007206:	6078      	str	r0, [r7, #4]
 8007208:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800720a:	683b      	ldr	r3, [r7, #0]
 800720c:	2b00      	cmp	r3, #0
 800720e:	d109      	bne.n	8007224 <HAL_TIM_PWM_Start+0x24>
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8007216:	b2db      	uxtb	r3, r3
 8007218:	2b01      	cmp	r3, #1
 800721a:	bf14      	ite	ne
 800721c:	2301      	movne	r3, #1
 800721e:	2300      	moveq	r3, #0
 8007220:	b2db      	uxtb	r3, r3
 8007222:	e022      	b.n	800726a <HAL_TIM_PWM_Start+0x6a>
 8007224:	683b      	ldr	r3, [r7, #0]
 8007226:	2b04      	cmp	r3, #4
 8007228:	d109      	bne.n	800723e <HAL_TIM_PWM_Start+0x3e>
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007230:	b2db      	uxtb	r3, r3
 8007232:	2b01      	cmp	r3, #1
 8007234:	bf14      	ite	ne
 8007236:	2301      	movne	r3, #1
 8007238:	2300      	moveq	r3, #0
 800723a:	b2db      	uxtb	r3, r3
 800723c:	e015      	b.n	800726a <HAL_TIM_PWM_Start+0x6a>
 800723e:	683b      	ldr	r3, [r7, #0]
 8007240:	2b08      	cmp	r3, #8
 8007242:	d109      	bne.n	8007258 <HAL_TIM_PWM_Start+0x58>
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800724a:	b2db      	uxtb	r3, r3
 800724c:	2b01      	cmp	r3, #1
 800724e:	bf14      	ite	ne
 8007250:	2301      	movne	r3, #1
 8007252:	2300      	moveq	r3, #0
 8007254:	b2db      	uxtb	r3, r3
 8007256:	e008      	b.n	800726a <HAL_TIM_PWM_Start+0x6a>
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800725e:	b2db      	uxtb	r3, r3
 8007260:	2b01      	cmp	r3, #1
 8007262:	bf14      	ite	ne
 8007264:	2301      	movne	r3, #1
 8007266:	2300      	moveq	r3, #0
 8007268:	b2db      	uxtb	r3, r3
 800726a:	2b00      	cmp	r3, #0
 800726c:	d001      	beq.n	8007272 <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 800726e:	2301      	movs	r3, #1
 8007270:	e07c      	b.n	800736c <HAL_TIM_PWM_Start+0x16c>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007272:	683b      	ldr	r3, [r7, #0]
 8007274:	2b00      	cmp	r3, #0
 8007276:	d104      	bne.n	8007282 <HAL_TIM_PWM_Start+0x82>
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	2202      	movs	r2, #2
 800727c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007280:	e013      	b.n	80072aa <HAL_TIM_PWM_Start+0xaa>
 8007282:	683b      	ldr	r3, [r7, #0]
 8007284:	2b04      	cmp	r3, #4
 8007286:	d104      	bne.n	8007292 <HAL_TIM_PWM_Start+0x92>
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	2202      	movs	r2, #2
 800728c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007290:	e00b      	b.n	80072aa <HAL_TIM_PWM_Start+0xaa>
 8007292:	683b      	ldr	r3, [r7, #0]
 8007294:	2b08      	cmp	r3, #8
 8007296:	d104      	bne.n	80072a2 <HAL_TIM_PWM_Start+0xa2>
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	2202      	movs	r2, #2
 800729c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80072a0:	e003      	b.n	80072aa <HAL_TIM_PWM_Start+0xaa>
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	2202      	movs	r2, #2
 80072a6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	2201      	movs	r2, #1
 80072b0:	6839      	ldr	r1, [r7, #0]
 80072b2:	4618      	mov	r0, r3
 80072b4:	f000 fe04 	bl	8007ec0 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80072b8:	687b      	ldr	r3, [r7, #4]
 80072ba:	681b      	ldr	r3, [r3, #0]
 80072bc:	4a2d      	ldr	r2, [pc, #180]	@ (8007374 <HAL_TIM_PWM_Start+0x174>)
 80072be:	4293      	cmp	r3, r2
 80072c0:	d004      	beq.n	80072cc <HAL_TIM_PWM_Start+0xcc>
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	4a2c      	ldr	r2, [pc, #176]	@ (8007378 <HAL_TIM_PWM_Start+0x178>)
 80072c8:	4293      	cmp	r3, r2
 80072ca:	d101      	bne.n	80072d0 <HAL_TIM_PWM_Start+0xd0>
 80072cc:	2301      	movs	r3, #1
 80072ce:	e000      	b.n	80072d2 <HAL_TIM_PWM_Start+0xd2>
 80072d0:	2300      	movs	r3, #0
 80072d2:	2b00      	cmp	r3, #0
 80072d4:	d007      	beq.n	80072e6 <HAL_TIM_PWM_Start+0xe6>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80072dc:	687b      	ldr	r3, [r7, #4]
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80072e4:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	681b      	ldr	r3, [r3, #0]
 80072ea:	4a22      	ldr	r2, [pc, #136]	@ (8007374 <HAL_TIM_PWM_Start+0x174>)
 80072ec:	4293      	cmp	r3, r2
 80072ee:	d022      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	681b      	ldr	r3, [r3, #0]
 80072f4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80072f8:	d01d      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	4a1f      	ldr	r2, [pc, #124]	@ (800737c <HAL_TIM_PWM_Start+0x17c>)
 8007300:	4293      	cmp	r3, r2
 8007302:	d018      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	4a1d      	ldr	r2, [pc, #116]	@ (8007380 <HAL_TIM_PWM_Start+0x180>)
 800730a:	4293      	cmp	r3, r2
 800730c:	d013      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	4a1c      	ldr	r2, [pc, #112]	@ (8007384 <HAL_TIM_PWM_Start+0x184>)
 8007314:	4293      	cmp	r3, r2
 8007316:	d00e      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	681b      	ldr	r3, [r3, #0]
 800731c:	4a16      	ldr	r2, [pc, #88]	@ (8007378 <HAL_TIM_PWM_Start+0x178>)
 800731e:	4293      	cmp	r3, r2
 8007320:	d009      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	4a18      	ldr	r2, [pc, #96]	@ (8007388 <HAL_TIM_PWM_Start+0x188>)
 8007328:	4293      	cmp	r3, r2
 800732a:	d004      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	4a16      	ldr	r2, [pc, #88]	@ (800738c <HAL_TIM_PWM_Start+0x18c>)
 8007332:	4293      	cmp	r3, r2
 8007334:	d111      	bne.n	800735a <HAL_TIM_PWM_Start+0x15a>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	689b      	ldr	r3, [r3, #8]
 800733c:	f003 0307 	and.w	r3, r3, #7
 8007340:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007342:	68fb      	ldr	r3, [r7, #12]
 8007344:	2b06      	cmp	r3, #6
 8007346:	d010      	beq.n	800736a <HAL_TIM_PWM_Start+0x16a>
    {
      __HAL_TIM_ENABLE(htim);
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	681a      	ldr	r2, [r3, #0]
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	f042 0201 	orr.w	r2, r2, #1
 8007356:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007358:	e007      	b.n	800736a <HAL_TIM_PWM_Start+0x16a>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	681a      	ldr	r2, [r3, #0]
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	681b      	ldr	r3, [r3, #0]
 8007364:	f042 0201 	orr.w	r2, r2, #1
 8007368:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800736a:	2300      	movs	r3, #0
}
 800736c:	4618      	mov	r0, r3
 800736e:	3710      	adds	r7, #16
 8007370:	46bd      	mov	sp, r7
 8007372:	bd80      	pop	{r7, pc}
 8007374:	40010000 	.word	0x40010000
 8007378:	40010400 	.word	0x40010400
 800737c:	40000400 	.word	0x40000400
 8007380:	40000800 	.word	0x40000800
 8007384:	40000c00 	.word	0x40000c00
 8007388:	40014000 	.word	0x40014000
 800738c:	40001800 	.word	0x40001800

08007390 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8007390:	b580      	push	{r7, lr}
 8007392:	b084      	sub	sp, #16
 8007394:	af00      	add	r7, sp, #0
 8007396:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	68db      	ldr	r3, [r3, #12]
 800739e:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	691b      	ldr	r3, [r3, #16]
 80073a6:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80073a8:	68bb      	ldr	r3, [r7, #8]
 80073aa:	f003 0302 	and.w	r3, r3, #2
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d020      	beq.n	80073f4 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	f003 0302 	and.w	r3, r3, #2
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	d01b      	beq.n	80073f4 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	f06f 0202 	mvn.w	r2, #2
 80073c4:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	2201      	movs	r2, #1
 80073ca:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	681b      	ldr	r3, [r3, #0]
 80073d0:	699b      	ldr	r3, [r3, #24]
 80073d2:	f003 0303 	and.w	r3, r3, #3
 80073d6:	2b00      	cmp	r3, #0
 80073d8:	d003      	beq.n	80073e2 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80073da:	6878      	ldr	r0, [r7, #4]
 80073dc:	f000 fa5b 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 80073e0:	e005      	b.n	80073ee <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80073e2:	6878      	ldr	r0, [r7, #4]
 80073e4:	f000 fa4d 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80073e8:	6878      	ldr	r0, [r7, #4]
 80073ea:	f000 fa5e 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80073ee:	687b      	ldr	r3, [r7, #4]
 80073f0:	2200      	movs	r2, #0
 80073f2:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80073f4:	68bb      	ldr	r3, [r7, #8]
 80073f6:	f003 0304 	and.w	r3, r3, #4
 80073fa:	2b00      	cmp	r3, #0
 80073fc:	d020      	beq.n	8007440 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80073fe:	68fb      	ldr	r3, [r7, #12]
 8007400:	f003 0304 	and.w	r3, r3, #4
 8007404:	2b00      	cmp	r3, #0
 8007406:	d01b      	beq.n	8007440 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	681b      	ldr	r3, [r3, #0]
 800740c:	f06f 0204 	mvn.w	r2, #4
 8007410:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	2202      	movs	r2, #2
 8007416:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	681b      	ldr	r3, [r3, #0]
 800741c:	699b      	ldr	r3, [r3, #24]
 800741e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007422:	2b00      	cmp	r3, #0
 8007424:	d003      	beq.n	800742e <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007426:	6878      	ldr	r0, [r7, #4]
 8007428:	f000 fa35 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 800742c:	e005      	b.n	800743a <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800742e:	6878      	ldr	r0, [r7, #4]
 8007430:	f000 fa27 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007434:	6878      	ldr	r0, [r7, #4]
 8007436:	f000 fa38 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	2200      	movs	r2, #0
 800743e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007440:	68bb      	ldr	r3, [r7, #8]
 8007442:	f003 0308 	and.w	r3, r3, #8
 8007446:	2b00      	cmp	r3, #0
 8007448:	d020      	beq.n	800748c <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800744a:	68fb      	ldr	r3, [r7, #12]
 800744c:	f003 0308 	and.w	r3, r3, #8
 8007450:	2b00      	cmp	r3, #0
 8007452:	d01b      	beq.n	800748c <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	681b      	ldr	r3, [r3, #0]
 8007458:	f06f 0208 	mvn.w	r2, #8
 800745c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	2204      	movs	r2, #4
 8007462:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	681b      	ldr	r3, [r3, #0]
 8007468:	69db      	ldr	r3, [r3, #28]
 800746a:	f003 0303 	and.w	r3, r3, #3
 800746e:	2b00      	cmp	r3, #0
 8007470:	d003      	beq.n	800747a <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007472:	6878      	ldr	r0, [r7, #4]
 8007474:	f000 fa0f 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 8007478:	e005      	b.n	8007486 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800747a:	6878      	ldr	r0, [r7, #4]
 800747c:	f000 fa01 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007480:	6878      	ldr	r0, [r7, #4]
 8007482:	f000 fa12 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	2200      	movs	r2, #0
 800748a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800748c:	68bb      	ldr	r3, [r7, #8]
 800748e:	f003 0310 	and.w	r3, r3, #16
 8007492:	2b00      	cmp	r3, #0
 8007494:	d020      	beq.n	80074d8 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007496:	68fb      	ldr	r3, [r7, #12]
 8007498:	f003 0310 	and.w	r3, r3, #16
 800749c:	2b00      	cmp	r3, #0
 800749e:	d01b      	beq.n	80074d8 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	681b      	ldr	r3, [r3, #0]
 80074a4:	f06f 0210 	mvn.w	r2, #16
 80074a8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	2208      	movs	r2, #8
 80074ae:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	69db      	ldr	r3, [r3, #28]
 80074b6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d003      	beq.n	80074c6 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80074be:	6878      	ldr	r0, [r7, #4]
 80074c0:	f000 f9e9 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 80074c4:	e005      	b.n	80074d2 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80074c6:	6878      	ldr	r0, [r7, #4]
 80074c8:	f000 f9db 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80074cc:	6878      	ldr	r0, [r7, #4]
 80074ce:	f000 f9ec 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	2200      	movs	r2, #0
 80074d6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80074d8:	68bb      	ldr	r3, [r7, #8]
 80074da:	f003 0301 	and.w	r3, r3, #1
 80074de:	2b00      	cmp	r3, #0
 80074e0:	d00c      	beq.n	80074fc <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80074e2:	68fb      	ldr	r3, [r7, #12]
 80074e4:	f003 0301 	and.w	r3, r3, #1
 80074e8:	2b00      	cmp	r3, #0
 80074ea:	d007      	beq.n	80074fc <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	681b      	ldr	r3, [r3, #0]
 80074f0:	f06f 0201 	mvn.w	r2, #1
 80074f4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80074f6:	6878      	ldr	r0, [r7, #4]
 80074f8:	f7fa f98a 	bl	8001810 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80074fc:	68bb      	ldr	r3, [r7, #8]
 80074fe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007502:	2b00      	cmp	r3, #0
 8007504:	d00c      	beq.n	8007520 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007506:	68fb      	ldr	r3, [r7, #12]
 8007508:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800750c:	2b00      	cmp	r3, #0
 800750e:	d007      	beq.n	8007520 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007518:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800751a:	6878      	ldr	r0, [r7, #4]
 800751c:	f000 fd7c 	bl	8008018 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007520:	68bb      	ldr	r3, [r7, #8]
 8007522:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007526:	2b00      	cmp	r3, #0
 8007528:	d00c      	beq.n	8007544 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800752a:	68fb      	ldr	r3, [r7, #12]
 800752c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007530:	2b00      	cmp	r3, #0
 8007532:	d007      	beq.n	8007544 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	681b      	ldr	r3, [r3, #0]
 8007538:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800753c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800753e:	6878      	ldr	r0, [r7, #4]
 8007540:	f000 f9bd 	bl	80078be <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007544:	68bb      	ldr	r3, [r7, #8]
 8007546:	f003 0320 	and.w	r3, r3, #32
 800754a:	2b00      	cmp	r3, #0
 800754c:	d00c      	beq.n	8007568 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800754e:	68fb      	ldr	r3, [r7, #12]
 8007550:	f003 0320 	and.w	r3, r3, #32
 8007554:	2b00      	cmp	r3, #0
 8007556:	d007      	beq.n	8007568 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	681b      	ldr	r3, [r3, #0]
 800755c:	f06f 0220 	mvn.w	r2, #32
 8007560:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007562:	6878      	ldr	r0, [r7, #4]
 8007564:	f000 fd4e 	bl	8008004 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007568:	bf00      	nop
 800756a:	3710      	adds	r7, #16
 800756c:	46bd      	mov	sp, r7
 800756e:	bd80      	pop	{r7, pc}

08007570 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8007570:	b580      	push	{r7, lr}
 8007572:	b086      	sub	sp, #24
 8007574:	af00      	add	r7, sp, #0
 8007576:	60f8      	str	r0, [r7, #12]
 8007578:	60b9      	str	r1, [r7, #8]
 800757a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800757c:	2300      	movs	r3, #0
 800757e:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007586:	2b01      	cmp	r3, #1
 8007588:	d101      	bne.n	800758e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800758a:	2302      	movs	r3, #2
 800758c:	e0ae      	b.n	80076ec <HAL_TIM_PWM_ConfigChannel+0x17c>
 800758e:	68fb      	ldr	r3, [r7, #12]
 8007590:	2201      	movs	r2, #1
 8007592:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	2b0c      	cmp	r3, #12
 800759a:	f200 809f 	bhi.w	80076dc <HAL_TIM_PWM_ConfigChannel+0x16c>
 800759e:	a201      	add	r2, pc, #4	@ (adr r2, 80075a4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80075a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075a4:	080075d9 	.word	0x080075d9
 80075a8:	080076dd 	.word	0x080076dd
 80075ac:	080076dd 	.word	0x080076dd
 80075b0:	080076dd 	.word	0x080076dd
 80075b4:	08007619 	.word	0x08007619
 80075b8:	080076dd 	.word	0x080076dd
 80075bc:	080076dd 	.word	0x080076dd
 80075c0:	080076dd 	.word	0x080076dd
 80075c4:	0800765b 	.word	0x0800765b
 80075c8:	080076dd 	.word	0x080076dd
 80075cc:	080076dd 	.word	0x080076dd
 80075d0:	080076dd 	.word	0x080076dd
 80075d4:	0800769b 	.word	0x0800769b
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80075d8:	68fb      	ldr	r3, [r7, #12]
 80075da:	681b      	ldr	r3, [r3, #0]
 80075dc:	68b9      	ldr	r1, [r7, #8]
 80075de:	4618      	mov	r0, r3
 80075e0:	f000 fa24 	bl	8007a2c <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80075e4:	68fb      	ldr	r3, [r7, #12]
 80075e6:	681b      	ldr	r3, [r3, #0]
 80075e8:	699a      	ldr	r2, [r3, #24]
 80075ea:	68fb      	ldr	r3, [r7, #12]
 80075ec:	681b      	ldr	r3, [r3, #0]
 80075ee:	f042 0208 	orr.w	r2, r2, #8
 80075f2:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	681b      	ldr	r3, [r3, #0]
 80075f8:	699a      	ldr	r2, [r3, #24]
 80075fa:	68fb      	ldr	r3, [r7, #12]
 80075fc:	681b      	ldr	r3, [r3, #0]
 80075fe:	f022 0204 	bic.w	r2, r2, #4
 8007602:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8007604:	68fb      	ldr	r3, [r7, #12]
 8007606:	681b      	ldr	r3, [r3, #0]
 8007608:	6999      	ldr	r1, [r3, #24]
 800760a:	68bb      	ldr	r3, [r7, #8]
 800760c:	691a      	ldr	r2, [r3, #16]
 800760e:	68fb      	ldr	r3, [r7, #12]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	430a      	orrs	r2, r1
 8007614:	619a      	str	r2, [r3, #24]
      break;
 8007616:	e064      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	68b9      	ldr	r1, [r7, #8]
 800761e:	4618      	mov	r0, r3
 8007620:	f000 fa74 	bl	8007b0c <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8007624:	68fb      	ldr	r3, [r7, #12]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	699a      	ldr	r2, [r3, #24]
 800762a:	68fb      	ldr	r3, [r7, #12]
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007632:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8007634:	68fb      	ldr	r3, [r7, #12]
 8007636:	681b      	ldr	r3, [r3, #0]
 8007638:	699a      	ldr	r2, [r3, #24]
 800763a:	68fb      	ldr	r3, [r7, #12]
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007642:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8007644:	68fb      	ldr	r3, [r7, #12]
 8007646:	681b      	ldr	r3, [r3, #0]
 8007648:	6999      	ldr	r1, [r3, #24]
 800764a:	68bb      	ldr	r3, [r7, #8]
 800764c:	691b      	ldr	r3, [r3, #16]
 800764e:	021a      	lsls	r2, r3, #8
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	430a      	orrs	r2, r1
 8007656:	619a      	str	r2, [r3, #24]
      break;
 8007658:	e043      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800765a:	68fb      	ldr	r3, [r7, #12]
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	68b9      	ldr	r1, [r7, #8]
 8007660:	4618      	mov	r0, r3
 8007662:	f000 fac9 	bl	8007bf8 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	69da      	ldr	r2, [r3, #28]
 800766c:	68fb      	ldr	r3, [r7, #12]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	f042 0208 	orr.w	r2, r2, #8
 8007674:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8007676:	68fb      	ldr	r3, [r7, #12]
 8007678:	681b      	ldr	r3, [r3, #0]
 800767a:	69da      	ldr	r2, [r3, #28]
 800767c:	68fb      	ldr	r3, [r7, #12]
 800767e:	681b      	ldr	r3, [r3, #0]
 8007680:	f022 0204 	bic.w	r2, r2, #4
 8007684:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8007686:	68fb      	ldr	r3, [r7, #12]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	69d9      	ldr	r1, [r3, #28]
 800768c:	68bb      	ldr	r3, [r7, #8]
 800768e:	691a      	ldr	r2, [r3, #16]
 8007690:	68fb      	ldr	r3, [r7, #12]
 8007692:	681b      	ldr	r3, [r3, #0]
 8007694:	430a      	orrs	r2, r1
 8007696:	61da      	str	r2, [r3, #28]
      break;
 8007698:	e023      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800769a:	68fb      	ldr	r3, [r7, #12]
 800769c:	681b      	ldr	r3, [r3, #0]
 800769e:	68b9      	ldr	r1, [r7, #8]
 80076a0:	4618      	mov	r0, r3
 80076a2:	f000 fb1d 	bl	8007ce0 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	681b      	ldr	r3, [r3, #0]
 80076aa:	69da      	ldr	r2, [r3, #28]
 80076ac:	68fb      	ldr	r3, [r7, #12]
 80076ae:	681b      	ldr	r3, [r3, #0]
 80076b0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80076b4:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	69da      	ldr	r2, [r3, #28]
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80076c4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	69d9      	ldr	r1, [r3, #28]
 80076cc:	68bb      	ldr	r3, [r7, #8]
 80076ce:	691b      	ldr	r3, [r3, #16]
 80076d0:	021a      	lsls	r2, r3, #8
 80076d2:	68fb      	ldr	r3, [r7, #12]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	430a      	orrs	r2, r1
 80076d8:	61da      	str	r2, [r3, #28]
      break;
 80076da:	e002      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 80076dc:	2301      	movs	r3, #1
 80076de:	75fb      	strb	r3, [r7, #23]
      break;
 80076e0:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 80076e2:	68fb      	ldr	r3, [r7, #12]
 80076e4:	2200      	movs	r2, #0
 80076e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80076ea:	7dfb      	ldrb	r3, [r7, #23]
}
 80076ec:	4618      	mov	r0, r3
 80076ee:	3718      	adds	r7, #24
 80076f0:	46bd      	mov	sp, r7
 80076f2:	bd80      	pop	{r7, pc}

080076f4 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80076f4:	b580      	push	{r7, lr}
 80076f6:	b084      	sub	sp, #16
 80076f8:	af00      	add	r7, sp, #0
 80076fa:	6078      	str	r0, [r7, #4]
 80076fc:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80076fe:	2300      	movs	r3, #0
 8007700:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007708:	2b01      	cmp	r3, #1
 800770a:	d101      	bne.n	8007710 <HAL_TIM_ConfigClockSource+0x1c>
 800770c:	2302      	movs	r3, #2
 800770e:	e0b4      	b.n	800787a <HAL_TIM_ConfigClockSource+0x186>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	2201      	movs	r2, #1
 8007714:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007718:	687b      	ldr	r3, [r7, #4]
 800771a:	2202      	movs	r2, #2
 800771c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	681b      	ldr	r3, [r3, #0]
 8007724:	689b      	ldr	r3, [r3, #8]
 8007726:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007728:	68bb      	ldr	r3, [r7, #8]
 800772a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800772e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007730:	68bb      	ldr	r3, [r7, #8]
 8007732:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007736:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	68ba      	ldr	r2, [r7, #8]
 800773e:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8007740:	683b      	ldr	r3, [r7, #0]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007748:	d03e      	beq.n	80077c8 <HAL_TIM_ConfigClockSource+0xd4>
 800774a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800774e:	f200 8087 	bhi.w	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007752:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007756:	f000 8086 	beq.w	8007866 <HAL_TIM_ConfigClockSource+0x172>
 800775a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800775e:	d87f      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007760:	2b70      	cmp	r3, #112	@ 0x70
 8007762:	d01a      	beq.n	800779a <HAL_TIM_ConfigClockSource+0xa6>
 8007764:	2b70      	cmp	r3, #112	@ 0x70
 8007766:	d87b      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007768:	2b60      	cmp	r3, #96	@ 0x60
 800776a:	d050      	beq.n	800780e <HAL_TIM_ConfigClockSource+0x11a>
 800776c:	2b60      	cmp	r3, #96	@ 0x60
 800776e:	d877      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007770:	2b50      	cmp	r3, #80	@ 0x50
 8007772:	d03c      	beq.n	80077ee <HAL_TIM_ConfigClockSource+0xfa>
 8007774:	2b50      	cmp	r3, #80	@ 0x50
 8007776:	d873      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007778:	2b40      	cmp	r3, #64	@ 0x40
 800777a:	d058      	beq.n	800782e <HAL_TIM_ConfigClockSource+0x13a>
 800777c:	2b40      	cmp	r3, #64	@ 0x40
 800777e:	d86f      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007780:	2b30      	cmp	r3, #48	@ 0x30
 8007782:	d064      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 8007784:	2b30      	cmp	r3, #48	@ 0x30
 8007786:	d86b      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007788:	2b20      	cmp	r3, #32
 800778a:	d060      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 800778c:	2b20      	cmp	r3, #32
 800778e:	d867      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007790:	2b00      	cmp	r3, #0
 8007792:	d05c      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 8007794:	2b10      	cmp	r3, #16
 8007796:	d05a      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 8007798:	e062      	b.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800779e:	683b      	ldr	r3, [r7, #0]
 80077a0:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80077a2:	683b      	ldr	r3, [r7, #0]
 80077a4:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80077a6:	683b      	ldr	r3, [r7, #0]
 80077a8:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80077aa:	f000 fb69 	bl	8007e80 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	689b      	ldr	r3, [r3, #8]
 80077b4:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80077b6:	68bb      	ldr	r3, [r7, #8]
 80077b8:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80077bc:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	68ba      	ldr	r2, [r7, #8]
 80077c4:	609a      	str	r2, [r3, #8]
      break;
 80077c6:	e04f      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80077cc:	683b      	ldr	r3, [r7, #0]
 80077ce:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80077d0:	683b      	ldr	r3, [r7, #0]
 80077d2:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80077d4:	683b      	ldr	r3, [r7, #0]
 80077d6:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80077d8:	f000 fb52 	bl	8007e80 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	681b      	ldr	r3, [r3, #0]
 80077e0:	689a      	ldr	r2, [r3, #8]
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80077ea:	609a      	str	r2, [r3, #8]
      break;
 80077ec:	e03c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80077f2:	683b      	ldr	r3, [r7, #0]
 80077f4:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80077f6:	683b      	ldr	r3, [r7, #0]
 80077f8:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80077fa:	461a      	mov	r2, r3
 80077fc:	f000 fac6 	bl	8007d8c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	2150      	movs	r1, #80	@ 0x50
 8007806:	4618      	mov	r0, r3
 8007808:	f000 fb1f 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800780c:	e02c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007812:	683b      	ldr	r3, [r7, #0]
 8007814:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007816:	683b      	ldr	r3, [r7, #0]
 8007818:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800781a:	461a      	mov	r2, r3
 800781c:	f000 fae5 	bl	8007dea <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	2160      	movs	r1, #96	@ 0x60
 8007826:	4618      	mov	r0, r3
 8007828:	f000 fb0f 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800782c:	e01c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007832:	683b      	ldr	r3, [r7, #0]
 8007834:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007836:	683b      	ldr	r3, [r7, #0]
 8007838:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800783a:	461a      	mov	r2, r3
 800783c:	f000 faa6 	bl	8007d8c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	2140      	movs	r1, #64	@ 0x40
 8007846:	4618      	mov	r0, r3
 8007848:	f000 faff 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800784c:	e00c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	681a      	ldr	r2, [r3, #0]
 8007852:	683b      	ldr	r3, [r7, #0]
 8007854:	681b      	ldr	r3, [r3, #0]
 8007856:	4619      	mov	r1, r3
 8007858:	4610      	mov	r0, r2
 800785a:	f000 faf6 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800785e:	e003      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8007860:	2301      	movs	r3, #1
 8007862:	73fb      	strb	r3, [r7, #15]
      break;
 8007864:	e000      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8007866:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	2201      	movs	r2, #1
 800786c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	2200      	movs	r2, #0
 8007874:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007878:	7bfb      	ldrb	r3, [r7, #15]
}
 800787a:	4618      	mov	r0, r3
 800787c:	3710      	adds	r7, #16
 800787e:	46bd      	mov	sp, r7
 8007880:	bd80      	pop	{r7, pc}

08007882 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8007882:	b480      	push	{r7}
 8007884:	b083      	sub	sp, #12
 8007886:	af00      	add	r7, sp, #0
 8007888:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800788a:	bf00      	nop
 800788c:	370c      	adds	r7, #12
 800788e:	46bd      	mov	sp, r7
 8007890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007894:	4770      	bx	lr

08007896 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007896:	b480      	push	{r7}
 8007898:	b083      	sub	sp, #12
 800789a:	af00      	add	r7, sp, #0
 800789c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800789e:	bf00      	nop
 80078a0:	370c      	adds	r7, #12
 80078a2:	46bd      	mov	sp, r7
 80078a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078a8:	4770      	bx	lr

080078aa <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80078aa:	b480      	push	{r7}
 80078ac:	b083      	sub	sp, #12
 80078ae:	af00      	add	r7, sp, #0
 80078b0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80078b2:	bf00      	nop
 80078b4:	370c      	adds	r7, #12
 80078b6:	46bd      	mov	sp, r7
 80078b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078bc:	4770      	bx	lr

080078be <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80078be:	b480      	push	{r7}
 80078c0:	b083      	sub	sp, #12
 80078c2:	af00      	add	r7, sp, #0
 80078c4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80078c6:	bf00      	nop
 80078c8:	370c      	adds	r7, #12
 80078ca:	46bd      	mov	sp, r7
 80078cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078d0:	4770      	bx	lr
	...

080078d4 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80078d4:	b480      	push	{r7}
 80078d6:	b085      	sub	sp, #20
 80078d8:	af00      	add	r7, sp, #0
 80078da:	6078      	str	r0, [r7, #4]
 80078dc:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	4a46      	ldr	r2, [pc, #280]	@ (8007a00 <TIM_Base_SetConfig+0x12c>)
 80078e8:	4293      	cmp	r3, r2
 80078ea:	d013      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80078f2:	d00f      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	4a43      	ldr	r2, [pc, #268]	@ (8007a04 <TIM_Base_SetConfig+0x130>)
 80078f8:	4293      	cmp	r3, r2
 80078fa:	d00b      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	4a42      	ldr	r2, [pc, #264]	@ (8007a08 <TIM_Base_SetConfig+0x134>)
 8007900:	4293      	cmp	r3, r2
 8007902:	d007      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	4a41      	ldr	r2, [pc, #260]	@ (8007a0c <TIM_Base_SetConfig+0x138>)
 8007908:	4293      	cmp	r3, r2
 800790a:	d003      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	4a40      	ldr	r2, [pc, #256]	@ (8007a10 <TIM_Base_SetConfig+0x13c>)
 8007910:	4293      	cmp	r3, r2
 8007912:	d108      	bne.n	8007926 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007914:	68fb      	ldr	r3, [r7, #12]
 8007916:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800791a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800791c:	683b      	ldr	r3, [r7, #0]
 800791e:	685b      	ldr	r3, [r3, #4]
 8007920:	68fa      	ldr	r2, [r7, #12]
 8007922:	4313      	orrs	r3, r2
 8007924:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	4a35      	ldr	r2, [pc, #212]	@ (8007a00 <TIM_Base_SetConfig+0x12c>)
 800792a:	4293      	cmp	r3, r2
 800792c:	d02b      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007934:	d027      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	4a32      	ldr	r2, [pc, #200]	@ (8007a04 <TIM_Base_SetConfig+0x130>)
 800793a:	4293      	cmp	r3, r2
 800793c:	d023      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	4a31      	ldr	r2, [pc, #196]	@ (8007a08 <TIM_Base_SetConfig+0x134>)
 8007942:	4293      	cmp	r3, r2
 8007944:	d01f      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	4a30      	ldr	r2, [pc, #192]	@ (8007a0c <TIM_Base_SetConfig+0x138>)
 800794a:	4293      	cmp	r3, r2
 800794c:	d01b      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800794e:	687b      	ldr	r3, [r7, #4]
 8007950:	4a2f      	ldr	r2, [pc, #188]	@ (8007a10 <TIM_Base_SetConfig+0x13c>)
 8007952:	4293      	cmp	r3, r2
 8007954:	d017      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	4a2e      	ldr	r2, [pc, #184]	@ (8007a14 <TIM_Base_SetConfig+0x140>)
 800795a:	4293      	cmp	r3, r2
 800795c:	d013      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	4a2d      	ldr	r2, [pc, #180]	@ (8007a18 <TIM_Base_SetConfig+0x144>)
 8007962:	4293      	cmp	r3, r2
 8007964:	d00f      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	4a2c      	ldr	r2, [pc, #176]	@ (8007a1c <TIM_Base_SetConfig+0x148>)
 800796a:	4293      	cmp	r3, r2
 800796c:	d00b      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	4a2b      	ldr	r2, [pc, #172]	@ (8007a20 <TIM_Base_SetConfig+0x14c>)
 8007972:	4293      	cmp	r3, r2
 8007974:	d007      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	4a2a      	ldr	r2, [pc, #168]	@ (8007a24 <TIM_Base_SetConfig+0x150>)
 800797a:	4293      	cmp	r3, r2
 800797c:	d003      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	4a29      	ldr	r2, [pc, #164]	@ (8007a28 <TIM_Base_SetConfig+0x154>)
 8007982:	4293      	cmp	r3, r2
 8007984:	d108      	bne.n	8007998 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007986:	68fb      	ldr	r3, [r7, #12]
 8007988:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800798c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800798e:	683b      	ldr	r3, [r7, #0]
 8007990:	68db      	ldr	r3, [r3, #12]
 8007992:	68fa      	ldr	r2, [r7, #12]
 8007994:	4313      	orrs	r3, r2
 8007996:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007998:	68fb      	ldr	r3, [r7, #12]
 800799a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800799e:	683b      	ldr	r3, [r7, #0]
 80079a0:	695b      	ldr	r3, [r3, #20]
 80079a2:	4313      	orrs	r3, r2
 80079a4:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80079a6:	687b      	ldr	r3, [r7, #4]
 80079a8:	68fa      	ldr	r2, [r7, #12]
 80079aa:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80079ac:	683b      	ldr	r3, [r7, #0]
 80079ae:	689a      	ldr	r2, [r3, #8]
 80079b0:	687b      	ldr	r3, [r7, #4]
 80079b2:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80079b4:	683b      	ldr	r3, [r7, #0]
 80079b6:	681a      	ldr	r2, [r3, #0]
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	4a10      	ldr	r2, [pc, #64]	@ (8007a00 <TIM_Base_SetConfig+0x12c>)
 80079c0:	4293      	cmp	r3, r2
 80079c2:	d003      	beq.n	80079cc <TIM_Base_SetConfig+0xf8>
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	4a12      	ldr	r2, [pc, #72]	@ (8007a10 <TIM_Base_SetConfig+0x13c>)
 80079c8:	4293      	cmp	r3, r2
 80079ca:	d103      	bne.n	80079d4 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80079cc:	683b      	ldr	r3, [r7, #0]
 80079ce:	691a      	ldr	r2, [r3, #16]
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	2201      	movs	r2, #1
 80079d8:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80079da:	687b      	ldr	r3, [r7, #4]
 80079dc:	691b      	ldr	r3, [r3, #16]
 80079de:	f003 0301 	and.w	r3, r3, #1
 80079e2:	2b01      	cmp	r3, #1
 80079e4:	d105      	bne.n	80079f2 <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	691b      	ldr	r3, [r3, #16]
 80079ea:	f023 0201 	bic.w	r2, r3, #1
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	611a      	str	r2, [r3, #16]
  }
}
 80079f2:	bf00      	nop
 80079f4:	3714      	adds	r7, #20
 80079f6:	46bd      	mov	sp, r7
 80079f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079fc:	4770      	bx	lr
 80079fe:	bf00      	nop
 8007a00:	40010000 	.word	0x40010000
 8007a04:	40000400 	.word	0x40000400
 8007a08:	40000800 	.word	0x40000800
 8007a0c:	40000c00 	.word	0x40000c00
 8007a10:	40010400 	.word	0x40010400
 8007a14:	40014000 	.word	0x40014000
 8007a18:	40014400 	.word	0x40014400
 8007a1c:	40014800 	.word	0x40014800
 8007a20:	40001800 	.word	0x40001800
 8007a24:	40001c00 	.word	0x40001c00
 8007a28:	40002000 	.word	0x40002000

08007a2c <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007a2c:	b480      	push	{r7}
 8007a2e:	b087      	sub	sp, #28
 8007a30:	af00      	add	r7, sp, #0
 8007a32:	6078      	str	r0, [r7, #4]
 8007a34:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	6a1b      	ldr	r3, [r3, #32]
 8007a3a:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	6a1b      	ldr	r3, [r3, #32]
 8007a40:	f023 0201 	bic.w	r2, r3, #1
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	685b      	ldr	r3, [r3, #4]
 8007a4c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	699b      	ldr	r3, [r3, #24]
 8007a52:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8007a54:	68fb      	ldr	r3, [r7, #12]
 8007a56:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a5a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8007a5c:	68fb      	ldr	r3, [r7, #12]
 8007a5e:	f023 0303 	bic.w	r3, r3, #3
 8007a62:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007a64:	683b      	ldr	r3, [r7, #0]
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	68fa      	ldr	r2, [r7, #12]
 8007a6a:	4313      	orrs	r3, r2
 8007a6c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8007a6e:	697b      	ldr	r3, [r7, #20]
 8007a70:	f023 0302 	bic.w	r3, r3, #2
 8007a74:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8007a76:	683b      	ldr	r3, [r7, #0]
 8007a78:	689b      	ldr	r3, [r3, #8]
 8007a7a:	697a      	ldr	r2, [r7, #20]
 8007a7c:	4313      	orrs	r3, r2
 8007a7e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8007a80:	687b      	ldr	r3, [r7, #4]
 8007a82:	4a20      	ldr	r2, [pc, #128]	@ (8007b04 <TIM_OC1_SetConfig+0xd8>)
 8007a84:	4293      	cmp	r3, r2
 8007a86:	d003      	beq.n	8007a90 <TIM_OC1_SetConfig+0x64>
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	4a1f      	ldr	r2, [pc, #124]	@ (8007b08 <TIM_OC1_SetConfig+0xdc>)
 8007a8c:	4293      	cmp	r3, r2
 8007a8e:	d10c      	bne.n	8007aaa <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8007a90:	697b      	ldr	r3, [r7, #20]
 8007a92:	f023 0308 	bic.w	r3, r3, #8
 8007a96:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8007a98:	683b      	ldr	r3, [r7, #0]
 8007a9a:	68db      	ldr	r3, [r3, #12]
 8007a9c:	697a      	ldr	r2, [r7, #20]
 8007a9e:	4313      	orrs	r3, r2
 8007aa0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8007aa2:	697b      	ldr	r3, [r7, #20]
 8007aa4:	f023 0304 	bic.w	r3, r3, #4
 8007aa8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	4a15      	ldr	r2, [pc, #84]	@ (8007b04 <TIM_OC1_SetConfig+0xd8>)
 8007aae:	4293      	cmp	r3, r2
 8007ab0:	d003      	beq.n	8007aba <TIM_OC1_SetConfig+0x8e>
 8007ab2:	687b      	ldr	r3, [r7, #4]
 8007ab4:	4a14      	ldr	r2, [pc, #80]	@ (8007b08 <TIM_OC1_SetConfig+0xdc>)
 8007ab6:	4293      	cmp	r3, r2
 8007ab8:	d111      	bne.n	8007ade <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8007aba:	693b      	ldr	r3, [r7, #16]
 8007abc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007ac0:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8007ac2:	693b      	ldr	r3, [r7, #16]
 8007ac4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007ac8:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8007aca:	683b      	ldr	r3, [r7, #0]
 8007acc:	695b      	ldr	r3, [r3, #20]
 8007ace:	693a      	ldr	r2, [r7, #16]
 8007ad0:	4313      	orrs	r3, r2
 8007ad2:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8007ad4:	683b      	ldr	r3, [r7, #0]
 8007ad6:	699b      	ldr	r3, [r3, #24]
 8007ad8:	693a      	ldr	r2, [r7, #16]
 8007ada:	4313      	orrs	r3, r2
 8007adc:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007ade:	687b      	ldr	r3, [r7, #4]
 8007ae0:	693a      	ldr	r2, [r7, #16]
 8007ae2:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	68fa      	ldr	r2, [r7, #12]
 8007ae8:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8007aea:	683b      	ldr	r3, [r7, #0]
 8007aec:	685a      	ldr	r2, [r3, #4]
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	697a      	ldr	r2, [r7, #20]
 8007af6:	621a      	str	r2, [r3, #32]
}
 8007af8:	bf00      	nop
 8007afa:	371c      	adds	r7, #28
 8007afc:	46bd      	mov	sp, r7
 8007afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b02:	4770      	bx	lr
 8007b04:	40010000 	.word	0x40010000
 8007b08:	40010400 	.word	0x40010400

08007b0c <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007b0c:	b480      	push	{r7}
 8007b0e:	b087      	sub	sp, #28
 8007b10:	af00      	add	r7, sp, #0
 8007b12:	6078      	str	r0, [r7, #4]
 8007b14:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	6a1b      	ldr	r3, [r3, #32]
 8007b1a:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	6a1b      	ldr	r3, [r3, #32]
 8007b20:	f023 0210 	bic.w	r2, r3, #16
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	685b      	ldr	r3, [r3, #4]
 8007b2c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	699b      	ldr	r3, [r3, #24]
 8007b32:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8007b34:	68fb      	ldr	r3, [r7, #12]
 8007b36:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007b3a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8007b3c:	68fb      	ldr	r3, [r7, #12]
 8007b3e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007b42:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007b44:	683b      	ldr	r3, [r7, #0]
 8007b46:	681b      	ldr	r3, [r3, #0]
 8007b48:	021b      	lsls	r3, r3, #8
 8007b4a:	68fa      	ldr	r2, [r7, #12]
 8007b4c:	4313      	orrs	r3, r2
 8007b4e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8007b50:	697b      	ldr	r3, [r7, #20]
 8007b52:	f023 0320 	bic.w	r3, r3, #32
 8007b56:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007b58:	683b      	ldr	r3, [r7, #0]
 8007b5a:	689b      	ldr	r3, [r3, #8]
 8007b5c:	011b      	lsls	r3, r3, #4
 8007b5e:	697a      	ldr	r2, [r7, #20]
 8007b60:	4313      	orrs	r3, r2
 8007b62:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	4a22      	ldr	r2, [pc, #136]	@ (8007bf0 <TIM_OC2_SetConfig+0xe4>)
 8007b68:	4293      	cmp	r3, r2
 8007b6a:	d003      	beq.n	8007b74 <TIM_OC2_SetConfig+0x68>
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	4a21      	ldr	r2, [pc, #132]	@ (8007bf4 <TIM_OC2_SetConfig+0xe8>)
 8007b70:	4293      	cmp	r3, r2
 8007b72:	d10d      	bne.n	8007b90 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8007b74:	697b      	ldr	r3, [r7, #20]
 8007b76:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007b7a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007b7c:	683b      	ldr	r3, [r7, #0]
 8007b7e:	68db      	ldr	r3, [r3, #12]
 8007b80:	011b      	lsls	r3, r3, #4
 8007b82:	697a      	ldr	r2, [r7, #20]
 8007b84:	4313      	orrs	r3, r2
 8007b86:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8007b88:	697b      	ldr	r3, [r7, #20]
 8007b8a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007b8e:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007b90:	687b      	ldr	r3, [r7, #4]
 8007b92:	4a17      	ldr	r2, [pc, #92]	@ (8007bf0 <TIM_OC2_SetConfig+0xe4>)
 8007b94:	4293      	cmp	r3, r2
 8007b96:	d003      	beq.n	8007ba0 <TIM_OC2_SetConfig+0x94>
 8007b98:	687b      	ldr	r3, [r7, #4]
 8007b9a:	4a16      	ldr	r2, [pc, #88]	@ (8007bf4 <TIM_OC2_SetConfig+0xe8>)
 8007b9c:	4293      	cmp	r3, r2
 8007b9e:	d113      	bne.n	8007bc8 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8007ba0:	693b      	ldr	r3, [r7, #16]
 8007ba2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007ba6:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8007ba8:	693b      	ldr	r3, [r7, #16]
 8007baa:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007bae:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8007bb0:	683b      	ldr	r3, [r7, #0]
 8007bb2:	695b      	ldr	r3, [r3, #20]
 8007bb4:	009b      	lsls	r3, r3, #2
 8007bb6:	693a      	ldr	r2, [r7, #16]
 8007bb8:	4313      	orrs	r3, r2
 8007bba:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007bbc:	683b      	ldr	r3, [r7, #0]
 8007bbe:	699b      	ldr	r3, [r3, #24]
 8007bc0:	009b      	lsls	r3, r3, #2
 8007bc2:	693a      	ldr	r2, [r7, #16]
 8007bc4:	4313      	orrs	r3, r2
 8007bc6:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	693a      	ldr	r2, [r7, #16]
 8007bcc:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	68fa      	ldr	r2, [r7, #12]
 8007bd2:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8007bd4:	683b      	ldr	r3, [r7, #0]
 8007bd6:	685a      	ldr	r2, [r3, #4]
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007bdc:	687b      	ldr	r3, [r7, #4]
 8007bde:	697a      	ldr	r2, [r7, #20]
 8007be0:	621a      	str	r2, [r3, #32]
}
 8007be2:	bf00      	nop
 8007be4:	371c      	adds	r7, #28
 8007be6:	46bd      	mov	sp, r7
 8007be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bec:	4770      	bx	lr
 8007bee:	bf00      	nop
 8007bf0:	40010000 	.word	0x40010000
 8007bf4:	40010400 	.word	0x40010400

08007bf8 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007bf8:	b480      	push	{r7}
 8007bfa:	b087      	sub	sp, #28
 8007bfc:	af00      	add	r7, sp, #0
 8007bfe:	6078      	str	r0, [r7, #4]
 8007c00:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	6a1b      	ldr	r3, [r3, #32]
 8007c06:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	6a1b      	ldr	r3, [r3, #32]
 8007c0c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	685b      	ldr	r3, [r3, #4]
 8007c18:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007c1a:	687b      	ldr	r3, [r7, #4]
 8007c1c:	69db      	ldr	r3, [r3, #28]
 8007c1e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8007c20:	68fb      	ldr	r3, [r7, #12]
 8007c22:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c26:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	f023 0303 	bic.w	r3, r3, #3
 8007c2e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007c30:	683b      	ldr	r3, [r7, #0]
 8007c32:	681b      	ldr	r3, [r3, #0]
 8007c34:	68fa      	ldr	r2, [r7, #12]
 8007c36:	4313      	orrs	r3, r2
 8007c38:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8007c3a:	697b      	ldr	r3, [r7, #20]
 8007c3c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007c40:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8007c42:	683b      	ldr	r3, [r7, #0]
 8007c44:	689b      	ldr	r3, [r3, #8]
 8007c46:	021b      	lsls	r3, r3, #8
 8007c48:	697a      	ldr	r2, [r7, #20]
 8007c4a:	4313      	orrs	r3, r2
 8007c4c:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007c4e:	687b      	ldr	r3, [r7, #4]
 8007c50:	4a21      	ldr	r2, [pc, #132]	@ (8007cd8 <TIM_OC3_SetConfig+0xe0>)
 8007c52:	4293      	cmp	r3, r2
 8007c54:	d003      	beq.n	8007c5e <TIM_OC3_SetConfig+0x66>
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	4a20      	ldr	r2, [pc, #128]	@ (8007cdc <TIM_OC3_SetConfig+0xe4>)
 8007c5a:	4293      	cmp	r3, r2
 8007c5c:	d10d      	bne.n	8007c7a <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8007c5e:	697b      	ldr	r3, [r7, #20]
 8007c60:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007c64:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007c66:	683b      	ldr	r3, [r7, #0]
 8007c68:	68db      	ldr	r3, [r3, #12]
 8007c6a:	021b      	lsls	r3, r3, #8
 8007c6c:	697a      	ldr	r2, [r7, #20]
 8007c6e:	4313      	orrs	r3, r2
 8007c70:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8007c72:	697b      	ldr	r3, [r7, #20]
 8007c74:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007c78:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	4a16      	ldr	r2, [pc, #88]	@ (8007cd8 <TIM_OC3_SetConfig+0xe0>)
 8007c7e:	4293      	cmp	r3, r2
 8007c80:	d003      	beq.n	8007c8a <TIM_OC3_SetConfig+0x92>
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	4a15      	ldr	r2, [pc, #84]	@ (8007cdc <TIM_OC3_SetConfig+0xe4>)
 8007c86:	4293      	cmp	r3, r2
 8007c88:	d113      	bne.n	8007cb2 <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8007c8a:	693b      	ldr	r3, [r7, #16]
 8007c8c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007c90:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007c92:	693b      	ldr	r3, [r7, #16]
 8007c94:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007c98:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8007c9a:	683b      	ldr	r3, [r7, #0]
 8007c9c:	695b      	ldr	r3, [r3, #20]
 8007c9e:	011b      	lsls	r3, r3, #4
 8007ca0:	693a      	ldr	r2, [r7, #16]
 8007ca2:	4313      	orrs	r3, r2
 8007ca4:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8007ca6:	683b      	ldr	r3, [r7, #0]
 8007ca8:	699b      	ldr	r3, [r3, #24]
 8007caa:	011b      	lsls	r3, r3, #4
 8007cac:	693a      	ldr	r2, [r7, #16]
 8007cae:	4313      	orrs	r3, r2
 8007cb0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	693a      	ldr	r2, [r7, #16]
 8007cb6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	68fa      	ldr	r2, [r7, #12]
 8007cbc:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007cbe:	683b      	ldr	r3, [r7, #0]
 8007cc0:	685a      	ldr	r2, [r3, #4]
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	697a      	ldr	r2, [r7, #20]
 8007cca:	621a      	str	r2, [r3, #32]
}
 8007ccc:	bf00      	nop
 8007cce:	371c      	adds	r7, #28
 8007cd0:	46bd      	mov	sp, r7
 8007cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cd6:	4770      	bx	lr
 8007cd8:	40010000 	.word	0x40010000
 8007cdc:	40010400 	.word	0x40010400

08007ce0 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007ce0:	b480      	push	{r7}
 8007ce2:	b087      	sub	sp, #28
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	6078      	str	r0, [r7, #4]
 8007ce8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	6a1b      	ldr	r3, [r3, #32]
 8007cee:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	6a1b      	ldr	r3, [r3, #32]
 8007cf4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	685b      	ldr	r3, [r3, #4]
 8007d00:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	69db      	ldr	r3, [r3, #28]
 8007d06:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007d08:	68fb      	ldr	r3, [r7, #12]
 8007d0a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007d0e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007d10:	68fb      	ldr	r3, [r7, #12]
 8007d12:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007d16:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007d18:	683b      	ldr	r3, [r7, #0]
 8007d1a:	681b      	ldr	r3, [r3, #0]
 8007d1c:	021b      	lsls	r3, r3, #8
 8007d1e:	68fa      	ldr	r2, [r7, #12]
 8007d20:	4313      	orrs	r3, r2
 8007d22:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8007d24:	693b      	ldr	r3, [r7, #16]
 8007d26:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007d2a:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007d2c:	683b      	ldr	r3, [r7, #0]
 8007d2e:	689b      	ldr	r3, [r3, #8]
 8007d30:	031b      	lsls	r3, r3, #12
 8007d32:	693a      	ldr	r2, [r7, #16]
 8007d34:	4313      	orrs	r3, r2
 8007d36:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007d38:	687b      	ldr	r3, [r7, #4]
 8007d3a:	4a12      	ldr	r2, [pc, #72]	@ (8007d84 <TIM_OC4_SetConfig+0xa4>)
 8007d3c:	4293      	cmp	r3, r2
 8007d3e:	d003      	beq.n	8007d48 <TIM_OC4_SetConfig+0x68>
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	4a11      	ldr	r2, [pc, #68]	@ (8007d88 <TIM_OC4_SetConfig+0xa8>)
 8007d44:	4293      	cmp	r3, r2
 8007d46:	d109      	bne.n	8007d5c <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007d48:	697b      	ldr	r3, [r7, #20]
 8007d4a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007d4e:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007d50:	683b      	ldr	r3, [r7, #0]
 8007d52:	695b      	ldr	r3, [r3, #20]
 8007d54:	019b      	lsls	r3, r3, #6
 8007d56:	697a      	ldr	r2, [r7, #20]
 8007d58:	4313      	orrs	r3, r2
 8007d5a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	697a      	ldr	r2, [r7, #20]
 8007d60:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007d62:	687b      	ldr	r3, [r7, #4]
 8007d64:	68fa      	ldr	r2, [r7, #12]
 8007d66:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8007d68:	683b      	ldr	r3, [r7, #0]
 8007d6a:	685a      	ldr	r2, [r3, #4]
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	693a      	ldr	r2, [r7, #16]
 8007d74:	621a      	str	r2, [r3, #32]
}
 8007d76:	bf00      	nop
 8007d78:	371c      	adds	r7, #28
 8007d7a:	46bd      	mov	sp, r7
 8007d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d80:	4770      	bx	lr
 8007d82:	bf00      	nop
 8007d84:	40010000 	.word	0x40010000
 8007d88:	40010400 	.word	0x40010400

08007d8c <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007d8c:	b480      	push	{r7}
 8007d8e:	b087      	sub	sp, #28
 8007d90:	af00      	add	r7, sp, #0
 8007d92:	60f8      	str	r0, [r7, #12]
 8007d94:	60b9      	str	r1, [r7, #8]
 8007d96:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007d98:	68fb      	ldr	r3, [r7, #12]
 8007d9a:	6a1b      	ldr	r3, [r3, #32]
 8007d9c:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007d9e:	68fb      	ldr	r3, [r7, #12]
 8007da0:	6a1b      	ldr	r3, [r3, #32]
 8007da2:	f023 0201 	bic.w	r2, r3, #1
 8007da6:	68fb      	ldr	r3, [r7, #12]
 8007da8:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007daa:	68fb      	ldr	r3, [r7, #12]
 8007dac:	699b      	ldr	r3, [r3, #24]
 8007dae:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007db0:	693b      	ldr	r3, [r7, #16]
 8007db2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007db6:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007db8:	687b      	ldr	r3, [r7, #4]
 8007dba:	011b      	lsls	r3, r3, #4
 8007dbc:	693a      	ldr	r2, [r7, #16]
 8007dbe:	4313      	orrs	r3, r2
 8007dc0:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007dc2:	697b      	ldr	r3, [r7, #20]
 8007dc4:	f023 030a 	bic.w	r3, r3, #10
 8007dc8:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007dca:	697a      	ldr	r2, [r7, #20]
 8007dcc:	68bb      	ldr	r3, [r7, #8]
 8007dce:	4313      	orrs	r3, r2
 8007dd0:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007dd2:	68fb      	ldr	r3, [r7, #12]
 8007dd4:	693a      	ldr	r2, [r7, #16]
 8007dd6:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007dd8:	68fb      	ldr	r3, [r7, #12]
 8007dda:	697a      	ldr	r2, [r7, #20]
 8007ddc:	621a      	str	r2, [r3, #32]
}
 8007dde:	bf00      	nop
 8007de0:	371c      	adds	r7, #28
 8007de2:	46bd      	mov	sp, r7
 8007de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007de8:	4770      	bx	lr

08007dea <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007dea:	b480      	push	{r7}
 8007dec:	b087      	sub	sp, #28
 8007dee:	af00      	add	r7, sp, #0
 8007df0:	60f8      	str	r0, [r7, #12]
 8007df2:	60b9      	str	r1, [r7, #8]
 8007df4:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8007df6:	68fb      	ldr	r3, [r7, #12]
 8007df8:	6a1b      	ldr	r3, [r3, #32]
 8007dfa:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	6a1b      	ldr	r3, [r3, #32]
 8007e00:	f023 0210 	bic.w	r2, r3, #16
 8007e04:	68fb      	ldr	r3, [r7, #12]
 8007e06:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007e08:	68fb      	ldr	r3, [r7, #12]
 8007e0a:	699b      	ldr	r3, [r3, #24]
 8007e0c:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007e0e:	693b      	ldr	r3, [r7, #16]
 8007e10:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007e14:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	031b      	lsls	r3, r3, #12
 8007e1a:	693a      	ldr	r2, [r7, #16]
 8007e1c:	4313      	orrs	r3, r2
 8007e1e:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007e20:	697b      	ldr	r3, [r7, #20]
 8007e22:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8007e26:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007e28:	68bb      	ldr	r3, [r7, #8]
 8007e2a:	011b      	lsls	r3, r3, #4
 8007e2c:	697a      	ldr	r2, [r7, #20]
 8007e2e:	4313      	orrs	r3, r2
 8007e30:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007e32:	68fb      	ldr	r3, [r7, #12]
 8007e34:	693a      	ldr	r2, [r7, #16]
 8007e36:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007e38:	68fb      	ldr	r3, [r7, #12]
 8007e3a:	697a      	ldr	r2, [r7, #20]
 8007e3c:	621a      	str	r2, [r3, #32]
}
 8007e3e:	bf00      	nop
 8007e40:	371c      	adds	r7, #28
 8007e42:	46bd      	mov	sp, r7
 8007e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e48:	4770      	bx	lr

08007e4a <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007e4a:	b480      	push	{r7}
 8007e4c:	b085      	sub	sp, #20
 8007e4e:	af00      	add	r7, sp, #0
 8007e50:	6078      	str	r0, [r7, #4]
 8007e52:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	689b      	ldr	r3, [r3, #8]
 8007e58:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007e60:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007e62:	683a      	ldr	r2, [r7, #0]
 8007e64:	68fb      	ldr	r3, [r7, #12]
 8007e66:	4313      	orrs	r3, r2
 8007e68:	f043 0307 	orr.w	r3, r3, #7
 8007e6c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007e6e:	687b      	ldr	r3, [r7, #4]
 8007e70:	68fa      	ldr	r2, [r7, #12]
 8007e72:	609a      	str	r2, [r3, #8]
}
 8007e74:	bf00      	nop
 8007e76:	3714      	adds	r7, #20
 8007e78:	46bd      	mov	sp, r7
 8007e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e7e:	4770      	bx	lr

08007e80 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007e80:	b480      	push	{r7}
 8007e82:	b087      	sub	sp, #28
 8007e84:	af00      	add	r7, sp, #0
 8007e86:	60f8      	str	r0, [r7, #12]
 8007e88:	60b9      	str	r1, [r7, #8]
 8007e8a:	607a      	str	r2, [r7, #4]
 8007e8c:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007e8e:	68fb      	ldr	r3, [r7, #12]
 8007e90:	689b      	ldr	r3, [r3, #8]
 8007e92:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007e94:	697b      	ldr	r3, [r7, #20]
 8007e96:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007e9a:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007e9c:	683b      	ldr	r3, [r7, #0]
 8007e9e:	021a      	lsls	r2, r3, #8
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	431a      	orrs	r2, r3
 8007ea4:	68bb      	ldr	r3, [r7, #8]
 8007ea6:	4313      	orrs	r3, r2
 8007ea8:	697a      	ldr	r2, [r7, #20]
 8007eaa:	4313      	orrs	r3, r2
 8007eac:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007eae:	68fb      	ldr	r3, [r7, #12]
 8007eb0:	697a      	ldr	r2, [r7, #20]
 8007eb2:	609a      	str	r2, [r3, #8]
}
 8007eb4:	bf00      	nop
 8007eb6:	371c      	adds	r7, #28
 8007eb8:	46bd      	mov	sp, r7
 8007eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ebe:	4770      	bx	lr

08007ec0 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007ec0:	b480      	push	{r7}
 8007ec2:	b087      	sub	sp, #28
 8007ec4:	af00      	add	r7, sp, #0
 8007ec6:	60f8      	str	r0, [r7, #12]
 8007ec8:	60b9      	str	r1, [r7, #8]
 8007eca:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007ecc:	68bb      	ldr	r3, [r7, #8]
 8007ece:	f003 031f 	and.w	r3, r3, #31
 8007ed2:	2201      	movs	r2, #1
 8007ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8007ed8:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007eda:	68fb      	ldr	r3, [r7, #12]
 8007edc:	6a1a      	ldr	r2, [r3, #32]
 8007ede:	697b      	ldr	r3, [r7, #20]
 8007ee0:	43db      	mvns	r3, r3
 8007ee2:	401a      	ands	r2, r3
 8007ee4:	68fb      	ldr	r3, [r7, #12]
 8007ee6:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007ee8:	68fb      	ldr	r3, [r7, #12]
 8007eea:	6a1a      	ldr	r2, [r3, #32]
 8007eec:	68bb      	ldr	r3, [r7, #8]
 8007eee:	f003 031f 	and.w	r3, r3, #31
 8007ef2:	6879      	ldr	r1, [r7, #4]
 8007ef4:	fa01 f303 	lsl.w	r3, r1, r3
 8007ef8:	431a      	orrs	r2, r3
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	621a      	str	r2, [r3, #32]
}
 8007efe:	bf00      	nop
 8007f00:	371c      	adds	r7, #28
 8007f02:	46bd      	mov	sp, r7
 8007f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f08:	4770      	bx	lr
	...

08007f0c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007f0c:	b480      	push	{r7}
 8007f0e:	b085      	sub	sp, #20
 8007f10:	af00      	add	r7, sp, #0
 8007f12:	6078      	str	r0, [r7, #4]
 8007f14:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007f1c:	2b01      	cmp	r3, #1
 8007f1e:	d101      	bne.n	8007f24 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007f20:	2302      	movs	r3, #2
 8007f22:	e05a      	b.n	8007fda <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	2201      	movs	r2, #1
 8007f28:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	2202      	movs	r2, #2
 8007f30:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007f34:	687b      	ldr	r3, [r7, #4]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	685b      	ldr	r3, [r3, #4]
 8007f3a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	681b      	ldr	r3, [r3, #0]
 8007f40:	689b      	ldr	r3, [r3, #8]
 8007f42:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007f44:	68fb      	ldr	r3, [r7, #12]
 8007f46:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007f4a:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007f4c:	683b      	ldr	r3, [r7, #0]
 8007f4e:	681b      	ldr	r3, [r3, #0]
 8007f50:	68fa      	ldr	r2, [r7, #12]
 8007f52:	4313      	orrs	r3, r2
 8007f54:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	681b      	ldr	r3, [r3, #0]
 8007f5a:	68fa      	ldr	r2, [r7, #12]
 8007f5c:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	681b      	ldr	r3, [r3, #0]
 8007f62:	4a21      	ldr	r2, [pc, #132]	@ (8007fe8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007f64:	4293      	cmp	r3, r2
 8007f66:	d022      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007f70:	d01d      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	681b      	ldr	r3, [r3, #0]
 8007f76:	4a1d      	ldr	r2, [pc, #116]	@ (8007fec <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007f78:	4293      	cmp	r3, r2
 8007f7a:	d018      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f7c:	687b      	ldr	r3, [r7, #4]
 8007f7e:	681b      	ldr	r3, [r3, #0]
 8007f80:	4a1b      	ldr	r2, [pc, #108]	@ (8007ff0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007f82:	4293      	cmp	r3, r2
 8007f84:	d013      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	681b      	ldr	r3, [r3, #0]
 8007f8a:	4a1a      	ldr	r2, [pc, #104]	@ (8007ff4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8007f8c:	4293      	cmp	r3, r2
 8007f8e:	d00e      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	4a18      	ldr	r2, [pc, #96]	@ (8007ff8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007f96:	4293      	cmp	r3, r2
 8007f98:	d009      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f9a:	687b      	ldr	r3, [r7, #4]
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	4a17      	ldr	r2, [pc, #92]	@ (8007ffc <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007fa0:	4293      	cmp	r3, r2
 8007fa2:	d004      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007fa4:	687b      	ldr	r3, [r7, #4]
 8007fa6:	681b      	ldr	r3, [r3, #0]
 8007fa8:	4a15      	ldr	r2, [pc, #84]	@ (8008000 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007faa:	4293      	cmp	r3, r2
 8007fac:	d10c      	bne.n	8007fc8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007fae:	68bb      	ldr	r3, [r7, #8]
 8007fb0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007fb4:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007fb6:	683b      	ldr	r3, [r7, #0]
 8007fb8:	685b      	ldr	r3, [r3, #4]
 8007fba:	68ba      	ldr	r2, [r7, #8]
 8007fbc:	4313      	orrs	r3, r2
 8007fbe:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	681b      	ldr	r3, [r3, #0]
 8007fc4:	68ba      	ldr	r2, [r7, #8]
 8007fc6:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	2201      	movs	r2, #1
 8007fcc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	2200      	movs	r2, #0
 8007fd4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8007fd8:	2300      	movs	r3, #0
}
 8007fda:	4618      	mov	r0, r3
 8007fdc:	3714      	adds	r7, #20
 8007fde:	46bd      	mov	sp, r7
 8007fe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe4:	4770      	bx	lr
 8007fe6:	bf00      	nop
 8007fe8:	40010000 	.word	0x40010000
 8007fec:	40000400 	.word	0x40000400
 8007ff0:	40000800 	.word	0x40000800
 8007ff4:	40000c00 	.word	0x40000c00
 8007ff8:	40010400 	.word	0x40010400
 8007ffc:	40014000 	.word	0x40014000
 8008000:	40001800 	.word	0x40001800

08008004 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8008004:	b480      	push	{r7}
 8008006:	b083      	sub	sp, #12
 8008008:	af00      	add	r7, sp, #0
 800800a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 800800c:	bf00      	nop
 800800e:	370c      	adds	r7, #12
 8008010:	46bd      	mov	sp, r7
 8008012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008016:	4770      	bx	lr

08008018 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8008018:	b480      	push	{r7}
 800801a:	b083      	sub	sp, #12
 800801c:	af00      	add	r7, sp, #0
 800801e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8008020:	bf00      	nop
 8008022:	370c      	adds	r7, #12
 8008024:	46bd      	mov	sp, r7
 8008026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800802a:	4770      	bx	lr

0800802c <MX_TouchGFX_Init>:
 800802c:	b580      	push	{r7, lr}
 800802e:	af00      	add	r7, sp, #0
 8008030:	f003 ff1c 	bl	800be6c <touchgfx_components_init>
 8008034:	f003 fef0 	bl	800be18 <touchgfx_init>
 8008038:	bf00      	nop
 800803a:	bd80      	pop	{r7, pc}

0800803c <MX_TouchGFX_Process>:
 800803c:	b580      	push	{r7, lr}
 800803e:	af00      	add	r7, sp, #0
 8008040:	f003 ff1c 	bl	800be7c <touchgfx_taskEntry>
 8008044:	bf00      	nop
 8008046:	bd80      	pop	{r7, pc}

08008048 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8008048:	b480      	push	{r7}
 800804a:	b083      	sub	sp, #12
 800804c:	af00      	add	r7, sp, #0
 800804e:	6078      	str	r0, [r7, #4]
    {
 8008050:	4a04      	ldr	r2, [pc, #16]	@ (8008064 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8008052:	687b      	ldr	r3, [r7, #4]
 8008054:	601a      	str	r2, [r3, #0]
    }
 8008056:	687b      	ldr	r3, [r7, #4]
 8008058:	4618      	mov	r0, r3
 800805a:	370c      	adds	r7, #12
 800805c:	46bd      	mov	sp, r7
 800805e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008062:	4770      	bx	lr
 8008064:	0802440c 	.word	0x0802440c

08008068 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8008068:	b580      	push	{r7, lr}
 800806a:	b082      	sub	sp, #8
 800806c:	af00      	add	r7, sp, #0
 800806e:	6078      	str	r0, [r7, #4]
    }
 8008070:	6878      	ldr	r0, [r7, #4]
 8008072:	f7ff ffe9 	bl	8008048 <_ZN8touchgfx12FontProviderD1Ev>
 8008076:	2104      	movs	r1, #4
 8008078:	6878      	ldr	r0, [r7, #4]
 800807a:	f01a f8a8 	bl	80221ce <_ZdlPvj>
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	4618      	mov	r0, r3
 8008082:	3708      	adds	r7, #8
 8008084:	46bd      	mov	sp, r7
 8008086:	bd80      	pop	{r7, pc}

08008088 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8008088:	b580      	push	{r7, lr}
 800808a:	b082      	sub	sp, #8
 800808c:	af00      	add	r7, sp, #0
 800808e:	6078      	str	r0, [r7, #4]
 8008090:	460b      	mov	r3, r1
 8008092:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8008094:	887b      	ldrh	r3, [r7, #2]
 8008096:	2b00      	cmp	r3, #0
 8008098:	d002      	beq.n	80080a0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 800809a:	2b01      	cmp	r3, #1
 800809c:	d005      	beq.n	80080aa <_ZN23ApplicationFontProvider7getFontEt+0x22>
 800809e:	e009      	b.n	80080b4 <_ZN23ApplicationFontProvider7getFontEt+0x2c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80080a0:	f002 fc00 	bl	800a8a4 <_ZN17TypedTextDatabase8getFontsEv>
 80080a4:	4603      	mov	r3, r0
 80080a6:	681b      	ldr	r3, [r3, #0]
 80080a8:	e005      	b.n	80080b6 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    case Typography::TYPOGRAPHY_00:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80080aa:	f002 fbfb 	bl	800a8a4 <_ZN17TypedTextDatabase8getFontsEv>
 80080ae:	4603      	mov	r3, r0
 80080b0:	685b      	ldr	r3, [r3, #4]
 80080b2:	e000      	b.n	80080b6 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    default:
        return 0;
 80080b4:	2300      	movs	r3, #0
    }
}
 80080b6:	4618      	mov	r0, r3
 80080b8:	3708      	adds	r7, #8
 80080ba:	46bd      	mov	sp, r7
 80080bc:	bd80      	pop	{r7, pc}
	...

080080c0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DEFAULT = 0;       // Asap_Regular_80_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 1; // verdana_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80080c0:	b580      	push	{r7, lr}
 80080c2:	b082      	sub	sp, #8
 80080c4:	af00      	add	r7, sp, #0
 80080c6:	6078      	str	r0, [r7, #4]
 80080c8:	4a05      	ldr	r2, [pc, #20]	@ (80080e0 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	601a      	str	r2, [r3, #0]
 80080ce:	687b      	ldr	r3, [r7, #4]
 80080d0:	4618      	mov	r0, r3
 80080d2:	f7ff ffb9 	bl	8008048 <_ZN8touchgfx12FontProviderD1Ev>
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	4618      	mov	r0, r3
 80080da:	3708      	adds	r7, #8
 80080dc:	46bd      	mov	sp, r7
 80080de:	bd80      	pop	{r7, pc}
 80080e0:	080243f8 	.word	0x080243f8

080080e4 <_ZN23ApplicationFontProviderD0Ev>:
 80080e4:	b580      	push	{r7, lr}
 80080e6:	b082      	sub	sp, #8
 80080e8:	af00      	add	r7, sp, #0
 80080ea:	6078      	str	r0, [r7, #4]
 80080ec:	6878      	ldr	r0, [r7, #4]
 80080ee:	f7ff ffe7 	bl	80080c0 <_ZN23ApplicationFontProviderD1Ev>
 80080f2:	2104      	movs	r1, #4
 80080f4:	6878      	ldr	r0, [r7, #4]
 80080f6:	f01a f86a 	bl	80221ce <_ZdlPvj>
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	4618      	mov	r0, r3
 80080fe:	3708      	adds	r7, #8
 8008100:	46bd      	mov	sp, r7
 8008102:	bd80      	pop	{r7, pc}

08008104 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8008104:	b480      	push	{r7}
 8008106:	b083      	sub	sp, #12
 8008108:	af00      	add	r7, sp, #0
 800810a:	6078      	str	r0, [r7, #4]
    {
 800810c:	4a04      	ldr	r2, [pc, #16]	@ (8008120 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	601a      	str	r2, [r3, #0]
    }
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	4618      	mov	r0, r3
 8008116:	370c      	adds	r7, #12
 8008118:	46bd      	mov	sp, r7
 800811a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800811e:	4770      	bx	lr
 8008120:	080247b0 	.word	0x080247b0

08008124 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8008124:	b580      	push	{r7, lr}
 8008126:	b082      	sub	sp, #8
 8008128:	af00      	add	r7, sp, #0
 800812a:	6078      	str	r0, [r7, #4]
    }
 800812c:	6878      	ldr	r0, [r7, #4]
 800812e:	f7ff ffe9 	bl	8008104 <_ZN8touchgfx4FontD1Ev>
 8008132:	2114      	movs	r1, #20
 8008134:	6878      	ldr	r0, [r7, #4]
 8008136:	f01a f84a 	bl	80221ce <_ZdlPvj>
 800813a:	687b      	ldr	r3, [r7, #4]
 800813c:	4618      	mov	r0, r3
 800813e:	3708      	adds	r7, #8
 8008140:	46bd      	mov	sp, r7
 8008142:	bd80      	pop	{r7, pc}

08008144 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8008144:	b590      	push	{r4, r7, lr}
 8008146:	b087      	sub	sp, #28
 8008148:	af00      	add	r7, sp, #0
 800814a:	6078      	str	r0, [r7, #4]
 800814c:	460b      	mov	r3, r1
 800814e:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8008150:	887b      	ldrh	r3, [r7, #2]
 8008152:	2b00      	cmp	r3, #0
 8008154:	d101      	bne.n	800815a <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8008156:	2300      	movs	r3, #0
 8008158:	e010      	b.n	800817c <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800815a:	2300      	movs	r3, #0
 800815c:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800815e:	2300      	movs	r3, #0
 8008160:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8008162:	687b      	ldr	r3, [r7, #4]
 8008164:	681b      	ldr	r3, [r3, #0]
 8008166:	3308      	adds	r3, #8
 8008168:	681c      	ldr	r4, [r3, #0]
 800816a:	f107 030f 	add.w	r3, r7, #15
 800816e:	f107 0210 	add.w	r2, r7, #16
 8008172:	8879      	ldrh	r1, [r7, #2]
 8008174:	6878      	ldr	r0, [r7, #4]
 8008176:	47a0      	blx	r4
 8008178:	6178      	str	r0, [r7, #20]
        return glyph;
 800817a:	697b      	ldr	r3, [r7, #20]
    }
 800817c:	4618      	mov	r0, r3
 800817e:	371c      	adds	r7, #28
 8008180:	46bd      	mov	sp, r7
 8008182:	bd90      	pop	{r4, r7, pc}

08008184 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8008184:	b480      	push	{r7}
 8008186:	b083      	sub	sp, #12
 8008188:	af00      	add	r7, sp, #0
 800818a:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	89db      	ldrh	r3, [r3, #14]
    }
 8008190:	4618      	mov	r0, r3
 8008192:	370c      	adds	r7, #12
 8008194:	46bd      	mov	sp, r7
 8008196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800819a:	4770      	bx	lr

0800819c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800819c:	b480      	push	{r7}
 800819e:	b083      	sub	sp, #12
 80081a0:	af00      	add	r7, sp, #0
 80081a2:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	8a1b      	ldrh	r3, [r3, #16]
    }
 80081a8:	4618      	mov	r0, r3
 80081aa:	370c      	adds	r7, #12
 80081ac:	46bd      	mov	sp, r7
 80081ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081b2:	4770      	bx	lr

080081b4 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 80081b4:	b480      	push	{r7}
 80081b6:	b083      	sub	sp, #12
 80081b8:	af00      	add	r7, sp, #0
 80081ba:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	88db      	ldrh	r3, [r3, #6]
    }
 80081c0:	4618      	mov	r0, r3
 80081c2:	370c      	adds	r7, #12
 80081c4:	46bd      	mov	sp, r7
 80081c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ca:	4770      	bx	lr

080081cc <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 80081cc:	b480      	push	{r7}
 80081ce:	b083      	sub	sp, #12
 80081d0:	af00      	add	r7, sp, #0
 80081d2:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	889b      	ldrh	r3, [r3, #4]
    }
 80081d8:	4618      	mov	r0, r3
 80081da:	370c      	adds	r7, #12
 80081dc:	46bd      	mov	sp, r7
 80081de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081e2:	4770      	bx	lr

080081e4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 80081e4:	b480      	push	{r7}
 80081e6:	b083      	sub	sp, #12
 80081e8:	af00      	add	r7, sp, #0
 80081ea:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	7a9b      	ldrb	r3, [r3, #10]
 80081f0:	f3c3 0306 	ubfx	r3, r3, #0, #7
 80081f4:	b2db      	uxtb	r3, r3
    }
 80081f6:	4618      	mov	r0, r3
 80081f8:	370c      	adds	r7, #12
 80081fa:	46bd      	mov	sp, r7
 80081fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008200:	4770      	bx	lr

08008202 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8008202:	b480      	push	{r7}
 8008204:	b083      	sub	sp, #12
 8008206:	af00      	add	r7, sp, #0
 8008208:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800820a:	687b      	ldr	r3, [r7, #4]
 800820c:	7a9b      	ldrb	r3, [r3, #10]
 800820e:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8008212:	b2db      	uxtb	r3, r3
    }
 8008214:	4618      	mov	r0, r3
 8008216:	370c      	adds	r7, #12
 8008218:	46bd      	mov	sp, r7
 800821a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800821e:	4770      	bx	lr

08008220 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8008220:	b480      	push	{r7}
 8008222:	b083      	sub	sp, #12
 8008224:	af00      	add	r7, sp, #0
 8008226:	6078      	str	r0, [r7, #4]
    {
        return false;
 8008228:	2300      	movs	r3, #0
    }
 800822a:	4618      	mov	r0, r3
 800822c:	370c      	adds	r7, #12
 800822e:	46bd      	mov	sp, r7
 8008230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008234:	4770      	bx	lr

08008236 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 8008236:	b480      	push	{r7}
 8008238:	b083      	sub	sp, #12
 800823a:	af00      	add	r7, sp, #0
 800823c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800823e:	f04f 0300 	mov.w	r3, #0
 8008242:	ee07 3a90 	vmov	s15, r3
    }
 8008246:	eeb0 0a67 	vmov.f32	s0, s15
 800824a:	370c      	adds	r7, #12
 800824c:	46bd      	mov	sp, r7
 800824e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008252:	4770      	bx	lr

08008254 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8008254:	b580      	push	{r7, lr}
 8008256:	b082      	sub	sp, #8
 8008258:	af00      	add	r7, sp, #0
 800825a:	6078      	str	r0, [r7, #4]
 800825c:	4a05      	ldr	r2, [pc, #20]	@ (8008274 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	601a      	str	r2, [r3, #0]
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	4618      	mov	r0, r3
 8008266:	f7ff ff4d 	bl	8008104 <_ZN8touchgfx4FontD1Ev>
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	4618      	mov	r0, r3
 800826e:	3708      	adds	r7, #8
 8008270:	46bd      	mov	sp, r7
 8008272:	bd80      	pop	{r7, pc}
 8008274:	08025324 	.word	0x08025324

08008278 <_ZN8touchgfx9ConstFontD0Ev>:
 8008278:	b580      	push	{r7, lr}
 800827a:	b082      	sub	sp, #8
 800827c:	af00      	add	r7, sp, #0
 800827e:	6078      	str	r0, [r7, #4]
 8008280:	6878      	ldr	r0, [r7, #4]
 8008282:	f7ff ffe7 	bl	8008254 <_ZN8touchgfx9ConstFontD1Ev>
 8008286:	211c      	movs	r1, #28
 8008288:	6878      	ldr	r0, [r7, #4]
 800828a:	f019 ffa0 	bl	80221ce <_ZdlPvj>
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	4618      	mov	r0, r3
 8008292:	3708      	adds	r7, #8
 8008294:	46bd      	mov	sp, r7
 8008296:	bd80      	pop	{r7, pc}

08008298 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8008298:	b580      	push	{r7, lr}
 800829a:	b082      	sub	sp, #8
 800829c:	af00      	add	r7, sp, #0
 800829e:	6078      	str	r0, [r7, #4]
 80082a0:	4a05      	ldr	r2, [pc, #20]	@ (80082b8 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	601a      	str	r2, [r3, #0]
 80082a6:	687b      	ldr	r3, [r7, #4]
 80082a8:	4618      	mov	r0, r3
 80082aa:	f7ff ffd3 	bl	8008254 <_ZN8touchgfx9ConstFontD1Ev>
 80082ae:	687b      	ldr	r3, [r7, #4]
 80082b0:	4618      	mov	r0, r3
 80082b2:	3708      	adds	r7, #8
 80082b4:	46bd      	mov	sp, r7
 80082b6:	bd80      	pop	{r7, pc}
 80082b8:	08024430 	.word	0x08024430

080082bc <_ZN8touchgfx13GeneratedFontD0Ev>:
 80082bc:	b580      	push	{r7, lr}
 80082be:	b082      	sub	sp, #8
 80082c0:	af00      	add	r7, sp, #0
 80082c2:	6078      	str	r0, [r7, #4]
 80082c4:	6878      	ldr	r0, [r7, #4]
 80082c6:	f7ff ffe7 	bl	8008298 <_ZN8touchgfx13GeneratedFontD1Ev>
 80082ca:	212c      	movs	r1, #44	@ 0x2c
 80082cc:	6878      	ldr	r0, [r7, #4]
 80082ce:	f019 ff7e 	bl	80221ce <_ZdlPvj>
 80082d2:	687b      	ldr	r3, [r7, #4]
 80082d4:	4618      	mov	r0, r3
 80082d6:	3708      	adds	r7, #8
 80082d8:	46bd      	mov	sp, r7
 80082da:	bd80      	pop	{r7, pc}

080082dc <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 80082dc:	b480      	push	{r7}
 80082de:	b083      	sub	sp, #12
 80082e0:	af00      	add	r7, sp, #0
 80082e2:	6078      	str	r0, [r7, #4]
    {
 80082e4:	4a04      	ldr	r2, [pc, #16]	@ (80082f8 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	601a      	str	r2, [r3, #0]
    }
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	4618      	mov	r0, r3
 80082ee:	370c      	adds	r7, #12
 80082f0:	46bd      	mov	sp, r7
 80082f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082f6:	4770      	bx	lr
 80082f8:	08024420 	.word	0x08024420

080082fc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80082fc:	b580      	push	{r7, lr}
 80082fe:	b082      	sub	sp, #8
 8008300:	af00      	add	r7, sp, #0
 8008302:	6078      	str	r0, [r7, #4]
    }
 8008304:	6878      	ldr	r0, [r7, #4]
 8008306:	f7ff ffe9 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
 800830a:	2108      	movs	r1, #8
 800830c:	6878      	ldr	r0, [r7, #4]
 800830e:	f019 ff5e 	bl	80221ce <_ZdlPvj>
 8008312:	687b      	ldr	r3, [r7, #4]
 8008314:	4618      	mov	r0, r3
 8008316:	3708      	adds	r7, #8
 8008318:	46bd      	mov	sp, r7
 800831a:	bd80      	pop	{r7, pc}

0800831c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800831c:	b480      	push	{r7}
 800831e:	b083      	sub	sp, #12
 8008320:	af00      	add	r7, sp, #0
 8008322:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8008324:	687b      	ldr	r3, [r7, #4]
 8008326:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8008328:	4618      	mov	r0, r3
 800832a:	370c      	adds	r7, #12
 800832c:	46bd      	mov	sp, r7
 800832e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008332:	4770      	bx	lr

08008334 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8008334:	b480      	push	{r7}
 8008336:	b083      	sub	sp, #12
 8008338:	af00      	add	r7, sp, #0
 800833a:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8008340:	4618      	mov	r0, r3
 8008342:	370c      	adds	r7, #12
 8008344:	46bd      	mov	sp, r7
 8008346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800834a:	4770      	bx	lr

0800834c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800834c:	b580      	push	{r7, lr}
 800834e:	b08e      	sub	sp, #56	@ 0x38
 8008350:	af0a      	add	r7, sp, #40	@ 0x28
 8008352:	60f8      	str	r0, [r7, #12]
 8008354:	60b9      	str	r1, [r7, #8]
 8008356:	4611      	mov	r1, r2
 8008358:	461a      	mov	r2, r3
 800835a:	460b      	mov	r3, r1
 800835c:	80fb      	strh	r3, [r7, #6]
 800835e:	4613      	mov	r3, r2
 8008360:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8008362:	68f8      	ldr	r0, [r7, #12]
 8008364:	88b9      	ldrh	r1, [r7, #4]
 8008366:	88fa      	ldrh	r2, [r7, #6]
 8008368:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 800836c:	9308      	str	r3, [sp, #32]
 800836e:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8008370:	9307      	str	r3, [sp, #28]
 8008372:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8008376:	9306      	str	r3, [sp, #24]
 8008378:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800837c:	9305      	str	r3, [sp, #20]
 800837e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008382:	9304      	str	r3, [sp, #16]
 8008384:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8008388:	9303      	str	r3, [sp, #12]
 800838a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800838e:	9302      	str	r3, [sp, #8]
 8008390:	7f3b      	ldrb	r3, [r7, #28]
 8008392:	9301      	str	r3, [sp, #4]
 8008394:	8b3b      	ldrh	r3, [r7, #24]
 8008396:	9300      	str	r3, [sp, #0]
 8008398:	460b      	mov	r3, r1
 800839a:	68b9      	ldr	r1, [r7, #8]
 800839c:	f009 fae2 	bl	8011964 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80083a0:	4a09      	ldr	r2, [pc, #36]	@ (80083c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 80083a2:	68fb      	ldr	r3, [r7, #12]
 80083a4:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 80083a6:	68fb      	ldr	r3, [r7, #12]
 80083a8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80083aa:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 80083ac:	68fb      	ldr	r3, [r7, #12]
 80083ae:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80083b0:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 80083b2:	68fb      	ldr	r3, [r7, #12]
 80083b4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80083b6:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 80083b8:	68fb      	ldr	r3, [r7, #12]
 80083ba:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80083bc:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 80083be:	68fb      	ldr	r3, [r7, #12]
 80083c0:	4618      	mov	r0, r3
 80083c2:	3710      	adds	r7, #16
 80083c4:	46bd      	mov	sp, r7
 80083c6:	bd80      	pop	{r7, pc}
 80083c8:	08024430 	.word	0x08024430

080083cc <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80083cc:	b480      	push	{r7}
 80083ce:	b085      	sub	sp, #20
 80083d0:	af00      	add	r7, sp, #0
 80083d2:	6078      	str	r0, [r7, #4]
 80083d4:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	69db      	ldr	r3, [r3, #28]
 80083da:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80083dc:	683b      	ldr	r3, [r7, #0]
 80083de:	889b      	ldrh	r3, [r3, #4]
 80083e0:	0adb      	lsrs	r3, r3, #11
 80083e2:	b29b      	uxth	r3, r3
 80083e4:	009b      	lsls	r3, r3, #2
 80083e6:	68fa      	ldr	r2, [r7, #12]
 80083e8:	4413      	add	r3, r2
 80083ea:	681a      	ldr	r2, [r3, #0]
 80083ec:	683b      	ldr	r3, [r7, #0]
 80083ee:	681b      	ldr	r3, [r3, #0]
 80083f0:	4413      	add	r3, r2
}
 80083f2:	4618      	mov	r0, r3
 80083f4:	3714      	adds	r7, #20
 80083f6:	46bd      	mov	sp, r7
 80083f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083fc:	4770      	bx	lr

080083fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80083fe:	b480      	push	{r7}
 8008400:	b089      	sub	sp, #36	@ 0x24
 8008402:	af00      	add	r7, sp, #0
 8008404:	60f8      	str	r0, [r7, #12]
 8008406:	460b      	mov	r3, r1
 8008408:	607a      	str	r2, [r7, #4]
 800840a:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800840c:	687b      	ldr	r3, [r7, #4]
 800840e:	2b00      	cmp	r3, #0
 8008410:	d003      	beq.n	800841a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8008412:	687b      	ldr	r3, [r7, #4]
 8008414:	7b1b      	ldrb	r3, [r3, #12]
 8008416:	2b00      	cmp	r3, #0
 8008418:	d101      	bne.n	800841e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800841a:	2300      	movs	r3, #0
 800841c:	e031      	b.n	8008482 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800841e:	68fb      	ldr	r3, [r7, #12]
 8008420:	6a1a      	ldr	r2, [r3, #32]
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8008426:	697b      	ldr	r3, [r7, #20]
 8008428:	7b5b      	ldrb	r3, [r3, #13]
 800842a:	021b      	lsls	r3, r3, #8
 800842c:	b21b      	sxth	r3, r3
 800842e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008432:	b219      	sxth	r1, r3
 8008434:	697b      	ldr	r3, [r7, #20]
 8008436:	7adb      	ldrb	r3, [r3, #11]
 8008438:	b21b      	sxth	r3, r3
 800843a:	430b      	orrs	r3, r1
 800843c:	b21b      	sxth	r3, r3
 800843e:	b29b      	uxth	r3, r3
 8008440:	009b      	lsls	r3, r3, #2
 8008442:	4413      	add	r3, r2
 8008444:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	7b1b      	ldrb	r3, [r3, #12]
 800844a:	837b      	strh	r3, [r7, #26]
 800844c:	e013      	b.n	8008476 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800844e:	69fb      	ldr	r3, [r7, #28]
 8008450:	881b      	ldrh	r3, [r3, #0]
 8008452:	897a      	ldrh	r2, [r7, #10]
 8008454:	429a      	cmp	r2, r3
 8008456:	d103      	bne.n	8008460 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8008458:	69fb      	ldr	r3, [r7, #28]
 800845a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800845e:	e010      	b.n	8008482 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8008460:	69fb      	ldr	r3, [r7, #28]
 8008462:	881b      	ldrh	r3, [r3, #0]
 8008464:	897a      	ldrh	r2, [r7, #10]
 8008466:	429a      	cmp	r2, r3
 8008468:	d309      	bcc.n	800847e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800846a:	8b7b      	ldrh	r3, [r7, #26]
 800846c:	3b01      	subs	r3, #1
 800846e:	837b      	strh	r3, [r7, #26]
 8008470:	69fb      	ldr	r3, [r7, #28]
 8008472:	3304      	adds	r3, #4
 8008474:	61fb      	str	r3, [r7, #28]
 8008476:	8b7b      	ldrh	r3, [r7, #26]
 8008478:	2b00      	cmp	r3, #0
 800847a:	d1e8      	bne.n	800844e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800847c:	e000      	b.n	8008480 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800847e:	bf00      	nop
        }
    }
    return 0;
 8008480:	2300      	movs	r3, #0
}
 8008482:	4618      	mov	r0, r3
 8008484:	3724      	adds	r7, #36	@ 0x24
 8008486:	46bd      	mov	sp, r7
 8008488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800848c:	4770      	bx	lr
	...

08008490 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 8008490:	b580      	push	{r7, lr}
 8008492:	af00      	add	r7, sp, #0
 8008494:	4801      	ldr	r0, [pc, #4]	@ (800849c <__tcf_0+0xc>)
 8008496:	f7ff feff 	bl	8008298 <_ZN8touchgfx13GeneratedFontD1Ev>
 800849a:	bd80      	pop	{r7, pc}
 800849c:	20000608 	.word	0x20000608

080084a0 <_Z28getFont_Asap_Regular_80_4bppv>:
{
 80084a0:	b580      	push	{r7, lr}
 80084a2:	b08e      	sub	sp, #56	@ 0x38
 80084a4:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80084a6:	4b21      	ldr	r3, [pc, #132]	@ (800852c <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80084a8:	681b      	ldr	r3, [r3, #0]
 80084aa:	f3bf 8f5b 	dmb	ish
 80084ae:	f003 0301 	and.w	r3, r3, #1
 80084b2:	2b00      	cmp	r3, #0
 80084b4:	bf0c      	ite	eq
 80084b6:	2301      	moveq	r3, #1
 80084b8:	2300      	movne	r3, #0
 80084ba:	b2db      	uxtb	r3, r3
 80084bc:	2b00      	cmp	r3, #0
 80084be:	d030      	beq.n	8008522 <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 80084c0:	481a      	ldr	r0, [pc, #104]	@ (800852c <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80084c2:	f019 fe86 	bl	80221d2 <__cxa_guard_acquire>
 80084c6:	4603      	mov	r3, r0
 80084c8:	2b00      	cmp	r3, #0
 80084ca:	bf14      	ite	ne
 80084cc:	2301      	movne	r3, #1
 80084ce:	2300      	moveq	r3, #0
 80084d0:	b2db      	uxtb	r3, r3
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d025      	beq.n	8008522 <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 80084d6:	2300      	movs	r3, #0
 80084d8:	930c      	str	r3, [sp, #48]	@ 0x30
 80084da:	2300      	movs	r3, #0
 80084dc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80084de:	2300      	movs	r3, #0
 80084e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80084e2:	2300      	movs	r3, #0
 80084e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80084e6:	4b12      	ldr	r3, [pc, #72]	@ (8008530 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 80084e8:	9308      	str	r3, [sp, #32]
 80084ea:	4b12      	ldr	r3, [pc, #72]	@ (8008534 <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 80084ec:	9307      	str	r3, [sp, #28]
 80084ee:	2300      	movs	r3, #0
 80084f0:	9306      	str	r3, [sp, #24]
 80084f2:	2300      	movs	r3, #0
 80084f4:	9305      	str	r3, [sp, #20]
 80084f6:	2301      	movs	r3, #1
 80084f8:	9304      	str	r3, [sp, #16]
 80084fa:	2304      	movs	r3, #4
 80084fc:	9303      	str	r3, [sp, #12]
 80084fe:	2300      	movs	r3, #0
 8008500:	9302      	str	r3, [sp, #8]
 8008502:	2300      	movs	r3, #0
 8008504:	9301      	str	r3, [sp, #4]
 8008506:	2350      	movs	r3, #80	@ 0x50
 8008508:	9300      	str	r3, [sp, #0]
 800850a:	2350      	movs	r3, #80	@ 0x50
 800850c:	220a      	movs	r2, #10
 800850e:	490a      	ldr	r1, [pc, #40]	@ (8008538 <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 8008510:	480a      	ldr	r0, [pc, #40]	@ (800853c <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 8008512:	f7ff ff1b 	bl	800834c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008516:	480a      	ldr	r0, [pc, #40]	@ (8008540 <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 8008518:	f019 ff24 	bl	8022364 <atexit>
 800851c:	4803      	ldr	r0, [pc, #12]	@ (800852c <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800851e:	f019 fe64 	bl	80221ea <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 8008522:	4b06      	ldr	r3, [pc, #24]	@ (800853c <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 8008524:	4618      	mov	r0, r3
 8008526:	46bd      	mov	sp, r7
 8008528:	bd80      	pop	{r7, pc}
 800852a:	bf00      	nop
 800852c:	20000634 	.word	0x20000634
 8008530:	0802c0f4 	.word	0x0802c0f4
 8008534:	0802c3a0 	.word	0x0802c3a0
 8008538:	0802bb34 	.word	0x0802bb34
 800853c:	20000608 	.word	0x20000608
 8008540:	08008491 	.word	0x08008491

08008544 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8008544:	b580      	push	{r7, lr}
 8008546:	af00      	add	r7, sp, #0
 8008548:	4801      	ldr	r0, [pc, #4]	@ (8008550 <__tcf_0+0xc>)
 800854a:	f7ff fea5 	bl	8008298 <_ZN8touchgfx13GeneratedFontD1Ev>
 800854e:	bd80      	pop	{r7, pc}
 8008550:	20000638 	.word	0x20000638

08008554 <_Z23getFont_verdana_30_4bppv>:
{
 8008554:	b580      	push	{r7, lr}
 8008556:	b08e      	sub	sp, #56	@ 0x38
 8008558:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 800855a:	4b21      	ldr	r3, [pc, #132]	@ (80085e0 <_Z23getFont_verdana_30_4bppv+0x8c>)
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	f3bf 8f5b 	dmb	ish
 8008562:	f003 0301 	and.w	r3, r3, #1
 8008566:	2b00      	cmp	r3, #0
 8008568:	bf0c      	ite	eq
 800856a:	2301      	moveq	r3, #1
 800856c:	2300      	movne	r3, #0
 800856e:	b2db      	uxtb	r3, r3
 8008570:	2b00      	cmp	r3, #0
 8008572:	d030      	beq.n	80085d6 <_Z23getFont_verdana_30_4bppv+0x82>
 8008574:	481a      	ldr	r0, [pc, #104]	@ (80085e0 <_Z23getFont_verdana_30_4bppv+0x8c>)
 8008576:	f019 fe2c 	bl	80221d2 <__cxa_guard_acquire>
 800857a:	4603      	mov	r3, r0
 800857c:	2b00      	cmp	r3, #0
 800857e:	bf14      	ite	ne
 8008580:	2301      	movne	r3, #1
 8008582:	2300      	moveq	r3, #0
 8008584:	b2db      	uxtb	r3, r3
 8008586:	2b00      	cmp	r3, #0
 8008588:	d025      	beq.n	80085d6 <_Z23getFont_verdana_30_4bppv+0x82>
 800858a:	2300      	movs	r3, #0
 800858c:	930c      	str	r3, [sp, #48]	@ 0x30
 800858e:	2300      	movs	r3, #0
 8008590:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008592:	2300      	movs	r3, #0
 8008594:	930a      	str	r3, [sp, #40]	@ 0x28
 8008596:	233f      	movs	r3, #63	@ 0x3f
 8008598:	9309      	str	r3, [sp, #36]	@ 0x24
 800859a:	4b12      	ldr	r3, [pc, #72]	@ (80085e4 <_Z23getFont_verdana_30_4bppv+0x90>)
 800859c:	9308      	str	r3, [sp, #32]
 800859e:	4b12      	ldr	r3, [pc, #72]	@ (80085e8 <_Z23getFont_verdana_30_4bppv+0x94>)
 80085a0:	9307      	str	r3, [sp, #28]
 80085a2:	2301      	movs	r3, #1
 80085a4:	9306      	str	r3, [sp, #24]
 80085a6:	2301      	movs	r3, #1
 80085a8:	9305      	str	r3, [sp, #20]
 80085aa:	2301      	movs	r3, #1
 80085ac:	9304      	str	r3, [sp, #16]
 80085ae:	2304      	movs	r3, #4
 80085b0:	9303      	str	r3, [sp, #12]
 80085b2:	2300      	movs	r3, #0
 80085b4:	9302      	str	r3, [sp, #8]
 80085b6:	2300      	movs	r3, #0
 80085b8:	9301      	str	r3, [sp, #4]
 80085ba:	231e      	movs	r3, #30
 80085bc:	9300      	str	r3, [sp, #0]
 80085be:	2324      	movs	r3, #36	@ 0x24
 80085c0:	225f      	movs	r2, #95	@ 0x5f
 80085c2:	490a      	ldr	r1, [pc, #40]	@ (80085ec <_Z23getFont_verdana_30_4bppv+0x98>)
 80085c4:	480a      	ldr	r0, [pc, #40]	@ (80085f0 <_Z23getFont_verdana_30_4bppv+0x9c>)
 80085c6:	f7ff fec1 	bl	800834c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80085ca:	480a      	ldr	r0, [pc, #40]	@ (80085f4 <_Z23getFont_verdana_30_4bppv+0xa0>)
 80085cc:	f019 feca 	bl	8022364 <atexit>
 80085d0:	4803      	ldr	r0, [pc, #12]	@ (80085e0 <_Z23getFont_verdana_30_4bppv+0x8c>)
 80085d2:	f019 fe0a 	bl	80221ea <__cxa_guard_release>
    return verdana_30_4bpp;
 80085d6:	4b06      	ldr	r3, [pc, #24]	@ (80085f0 <_Z23getFont_verdana_30_4bppv+0x9c>)
}
 80085d8:	4618      	mov	r0, r3
 80085da:	46bd      	mov	sp, r7
 80085dc:	bd80      	pop	{r7, pc}
 80085de:	bf00      	nop
 80085e0:	20000664 	.word	0x20000664
 80085e4:	0802c0f8 	.word	0x0802c0f8
 80085e8:	0802c3a4 	.word	0x0802c3a4
 80085ec:	0802bbc0 	.word	0x0802bbc0
 80085f0:	20000638 	.word	0x20000638
 80085f4:	08008545 	.word	0x08008545

080085f8 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 80085f8:	b480      	push	{r7}
 80085fa:	b083      	sub	sp, #12
 80085fc:	af00      	add	r7, sp, #0
 80085fe:	6078      	str	r0, [r7, #4]
 8008600:	6039      	str	r1, [r7, #0]
 8008602:	683b      	ldr	r3, [r7, #0]
 8008604:	4618      	mov	r0, r3
 8008606:	370c      	adds	r7, #12
 8008608:	46bd      	mov	sp, r7
 800860a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800860e:	4770      	bx	lr

08008610 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008610:	b480      	push	{r7}
 8008612:	b083      	sub	sp, #12
 8008614:	af00      	add	r7, sp, #0
 8008616:	6078      	str	r0, [r7, #4]
 8008618:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800861a:	bf00      	nop
 800861c:	370c      	adds	r7, #12
 800861e:	46bd      	mov	sp, r7
 8008620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008624:	4770      	bx	lr

08008626 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008626:	b480      	push	{r7}
 8008628:	b083      	sub	sp, #12
 800862a:	af00      	add	r7, sp, #0
 800862c:	6078      	str	r0, [r7, #4]
 800862e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008630:	bf00      	nop
 8008632:	370c      	adds	r7, #12
 8008634:	46bd      	mov	sp, r7
 8008636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800863a:	4770      	bx	lr

0800863c <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800863c:	b480      	push	{r7}
 800863e:	b083      	sub	sp, #12
 8008640:	af00      	add	r7, sp, #0
 8008642:	6078      	str	r0, [r7, #4]
 8008644:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008646:	bf00      	nop
 8008648:	370c      	adds	r7, #12
 800864a:	46bd      	mov	sp, r7
 800864c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008650:	4770      	bx	lr

08008652 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8008652:	b480      	push	{r7}
 8008654:	b083      	sub	sp, #12
 8008656:	af00      	add	r7, sp, #0
 8008658:	6078      	str	r0, [r7, #4]
 800865a:	460b      	mov	r3, r1
 800865c:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800865e:	bf00      	nop
 8008660:	370c      	adds	r7, #12
 8008662:	46bd      	mov	sp, r7
 8008664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008668:	4770      	bx	lr

0800866a <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800866a:	b480      	push	{r7}
 800866c:	b083      	sub	sp, #12
 800866e:	af00      	add	r7, sp, #0
 8008670:	6078      	str	r0, [r7, #4]
    {
    }
 8008672:	bf00      	nop
 8008674:	370c      	adds	r7, #12
 8008676:	46bd      	mov	sp, r7
 8008678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800867c:	4770      	bx	lr

0800867e <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800867e:	b480      	push	{r7}
 8008680:	b083      	sub	sp, #12
 8008682:	af00      	add	r7, sp, #0
 8008684:	6078      	str	r0, [r7, #4]
    {
    }
 8008686:	bf00      	nop
 8008688:	370c      	adds	r7, #12
 800868a:	46bd      	mov	sp, r7
 800868c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008690:	4770      	bx	lr
	...

08008694 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8008694:	b480      	push	{r7}
 8008696:	b083      	sub	sp, #12
 8008698:	af00      	add	r7, sp, #0
 800869a:	6078      	str	r0, [r7, #4]
    {
 800869c:	4a04      	ldr	r2, [pc, #16]	@ (80086b0 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800869e:	687b      	ldr	r3, [r7, #4]
 80086a0:	601a      	str	r2, [r3, #0]
    }
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	4618      	mov	r0, r3
 80086a6:	370c      	adds	r7, #12
 80086a8:	46bd      	mov	sp, r7
 80086aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086ae:	4770      	bx	lr
 80086b0:	080245b8 	.word	0x080245b8

080086b4 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 80086b4:	b580      	push	{r7, lr}
 80086b6:	b082      	sub	sp, #8
 80086b8:	af00      	add	r7, sp, #0
 80086ba:	6078      	str	r0, [r7, #4]
    }
 80086bc:	6878      	ldr	r0, [r7, #4]
 80086be:	f7ff ffe9 	bl	8008694 <_ZN8touchgfx15UIEventListenerD1Ev>
 80086c2:	2104      	movs	r1, #4
 80086c4:	6878      	ldr	r0, [r7, #4]
 80086c6:	f019 fd82 	bl	80221ce <_ZdlPvj>
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	4618      	mov	r0, r3
 80086ce:	3708      	adds	r7, #8
 80086d0:	46bd      	mov	sp, r7
 80086d2:	bd80      	pop	{r7, pc}

080086d4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 80086d4:	b480      	push	{r7}
 80086d6:	b083      	sub	sp, #12
 80086d8:	af00      	add	r7, sp, #0
 80086da:	6078      	str	r0, [r7, #4]
    {
    }
 80086dc:	bf00      	nop
 80086de:	370c      	adds	r7, #12
 80086e0:	46bd      	mov	sp, r7
 80086e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086e6:	4770      	bx	lr

080086e8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 80086e8:	b480      	push	{r7}
 80086ea:	b083      	sub	sp, #12
 80086ec:	af00      	add	r7, sp, #0
 80086ee:	6078      	str	r0, [r7, #4]
 80086f0:	460b      	mov	r3, r1
 80086f2:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 80086f4:	bf00      	nop
 80086f6:	370c      	adds	r7, #12
 80086f8:	46bd      	mov	sp, r7
 80086fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086fe:	4770      	bx	lr

08008700 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8008700:	b480      	push	{r7}
 8008702:	b083      	sub	sp, #12
 8008704:	af00      	add	r7, sp, #0
 8008706:	6078      	str	r0, [r7, #4]
 8008708:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800870a:	687b      	ldr	r3, [r7, #4]
 800870c:	683a      	ldr	r2, [r7, #0]
 800870e:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 8008712:	6810      	ldr	r0, [r2, #0]
 8008714:	6851      	ldr	r1, [r2, #4]
 8008716:	c303      	stmia	r3!, {r0, r1}
    }
 8008718:	bf00      	nop
 800871a:	370c      	adds	r7, #12
 800871c:	46bd      	mov	sp, r7
 800871e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008722:	4770      	bx	lr

08008724 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 8008724:	b580      	push	{r7, lr}
 8008726:	b082      	sub	sp, #8
 8008728:	af00      	add	r7, sp, #0
 800872a:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	3304      	adds	r3, #4
 8008730:	4618      	mov	r0, r3
 8008732:	f008 f818 	bl	8010766 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 8008736:	bf00      	nop
 8008738:	3708      	adds	r7, #8
 800873a:	46bd      	mov	sp, r7
 800873c:	bd80      	pop	{r7, pc}
	...

08008740 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8008740:	b480      	push	{r7}
 8008742:	b083      	sub	sp, #12
 8008744:	af00      	add	r7, sp, #0
 8008746:	6078      	str	r0, [r7, #4]
    {
 8008748:	4a04      	ldr	r2, [pc, #16]	@ (800875c <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	601a      	str	r2, [r3, #0]
    }
 800874e:	687b      	ldr	r3, [r7, #4]
 8008750:	4618      	mov	r0, r3
 8008752:	370c      	adds	r7, #12
 8008754:	46bd      	mov	sp, r7
 8008756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800875a:	4770      	bx	lr
 800875c:	080245a0 	.word	0x080245a0

08008760 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8008760:	b580      	push	{r7, lr}
 8008762:	b082      	sub	sp, #8
 8008764:	af00      	add	r7, sp, #0
 8008766:	6078      	str	r0, [r7, #4]
    }
 8008768:	6878      	ldr	r0, [r7, #4]
 800876a:	f7ff ffe9 	bl	8008740 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800876e:	2104      	movs	r1, #4
 8008770:	6878      	ldr	r0, [r7, #4]
 8008772:	f019 fd2c 	bl	80221ce <_ZdlPvj>
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	4618      	mov	r0, r3
 800877a:	3708      	adds	r7, #8
 800877c:	46bd      	mov	sp, r7
 800877e:	bd80      	pop	{r7, pc}

08008780 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8008780:	b480      	push	{r7}
 8008782:	af00      	add	r7, sp, #0
    {
        return instance;
 8008784:	4b03      	ldr	r3, [pc, #12]	@ (8008794 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8008786:	681b      	ldr	r3, [r3, #0]
    }
 8008788:	4618      	mov	r0, r3
 800878a:	46bd      	mov	sp, r7
 800878c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008790:	4770      	bx	lr
 8008792:	bf00      	nop
 8008794:	20002dbc 	.word	0x20002dbc

08008798 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8008798:	b480      	push	{r7}
 800879a:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800879c:	4b0b      	ldr	r3, [pc, #44]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800879e:	681b      	ldr	r3, [r3, #0]
 80087a0:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80087a4:	2b00      	cmp	r3, #0
 80087a6:	d008      	beq.n	80087ba <_ZN8touchgfx3HAL3lcdEv+0x22>
 80087a8:	4b08      	ldr	r3, [pc, #32]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087aa:	681b      	ldr	r3, [r3, #0]
 80087ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80087ae:	2b00      	cmp	r3, #0
 80087b0:	d003      	beq.n	80087ba <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80087b2:	4b06      	ldr	r3, [pc, #24]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087b4:	681b      	ldr	r3, [r3, #0]
 80087b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80087b8:	e002      	b.n	80087c0 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 80087ba:	4b04      	ldr	r3, [pc, #16]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087bc:	681b      	ldr	r3, [r3, #0]
 80087be:	689b      	ldr	r3, [r3, #8]
    }
 80087c0:	4618      	mov	r0, r3
 80087c2:	46bd      	mov	sp, r7
 80087c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087c8:	4770      	bx	lr
 80087ca:	bf00      	nop
 80087cc:	20002dbc 	.word	0x20002dbc

080087d0 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 80087d0:	b480      	push	{r7}
 80087d2:	b083      	sub	sp, #12
 80087d4:	af00      	add	r7, sp, #0
 80087d6:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 80087d8:	4a07      	ldr	r2, [pc, #28]	@ (80087f8 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80087da:	687b      	ldr	r3, [r7, #4]
 80087dc:	601a      	str	r2, [r3, #0]
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	2200      	movs	r2, #0
 80087e2:	605a      	str	r2, [r3, #4]
 80087e4:	687b      	ldr	r3, [r7, #4]
 80087e6:	2200      	movs	r2, #0
 80087e8:	721a      	strb	r2, [r3, #8]
    {
    }
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	4618      	mov	r0, r3
 80087ee:	370c      	adds	r7, #12
 80087f0:	46bd      	mov	sp, r7
 80087f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f6:	4770      	bx	lr
 80087f8:	0802457c 	.word	0x0802457c

080087fc <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 80087fc:	b480      	push	{r7}
 80087fe:	b083      	sub	sp, #12
 8008800:	af00      	add	r7, sp, #0
 8008802:	6078      	str	r0, [r7, #4]
    {
 8008804:	4a04      	ldr	r2, [pc, #16]	@ (8008818 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	601a      	str	r2, [r3, #0]
    }
 800880a:	687b      	ldr	r3, [r7, #4]
 800880c:	4618      	mov	r0, r3
 800880e:	370c      	adds	r7, #12
 8008810:	46bd      	mov	sp, r7
 8008812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008816:	4770      	bx	lr
 8008818:	0802457c 	.word	0x0802457c

0800881c <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800881c:	b580      	push	{r7, lr}
 800881e:	b082      	sub	sp, #8
 8008820:	af00      	add	r7, sp, #0
 8008822:	6078      	str	r0, [r7, #4]
    }
 8008824:	6878      	ldr	r0, [r7, #4]
 8008826:	f7ff ffe9 	bl	80087fc <_ZN8touchgfx10TransitionD1Ev>
 800882a:	210c      	movs	r1, #12
 800882c:	6878      	ldr	r0, [r7, #4]
 800882e:	f019 fcce 	bl	80221ce <_ZdlPvj>
 8008832:	687b      	ldr	r3, [r7, #4]
 8008834:	4618      	mov	r0, r3
 8008836:	3708      	adds	r7, #8
 8008838:	46bd      	mov	sp, r7
 800883a:	bd80      	pop	{r7, pc}

0800883c <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800883c:	b480      	push	{r7}
 800883e:	b083      	sub	sp, #12
 8008840:	af00      	add	r7, sp, #0
 8008842:	6078      	str	r0, [r7, #4]
    {
    }
 8008844:	bf00      	nop
 8008846:	370c      	adds	r7, #12
 8008848:	46bd      	mov	sp, r7
 800884a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800884e:	4770      	bx	lr

08008850 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 8008850:	b480      	push	{r7}
 8008852:	b083      	sub	sp, #12
 8008854:	af00      	add	r7, sp, #0
 8008856:	6078      	str	r0, [r7, #4]
    {
    }
 8008858:	bf00      	nop
 800885a:	370c      	adds	r7, #12
 800885c:	46bd      	mov	sp, r7
 800885e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008862:	4770      	bx	lr

08008864 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 8008864:	b480      	push	{r7}
 8008866:	b083      	sub	sp, #12
 8008868:	af00      	add	r7, sp, #0
 800886a:	6078      	str	r0, [r7, #4]
    {
    }
 800886c:	bf00      	nop
 800886e:	370c      	adds	r7, #12
 8008870:	46bd      	mov	sp, r7
 8008872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008876:	4770      	bx	lr

08008878 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8008878:	b580      	push	{r7, lr}
 800887a:	b082      	sub	sp, #8
 800887c:	af00      	add	r7, sp, #0
 800887e:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 8008880:	f007 ff4c 	bl	801071c <_ZN8touchgfx11Application11getInstanceEv>
 8008884:	4603      	mov	r3, r0
 8008886:	681a      	ldr	r2, [r3, #0]
 8008888:	323c      	adds	r2, #60	@ 0x3c
 800888a:	6812      	ldr	r2, [r2, #0]
 800888c:	4618      	mov	r0, r3
 800888e:	4790      	blx	r2
    }
 8008890:	bf00      	nop
 8008892:	3708      	adds	r7, #8
 8008894:	46bd      	mov	sp, r7
 8008896:	bd80      	pop	{r7, pc}

08008898 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8008898:	b480      	push	{r7}
 800889a:	b083      	sub	sp, #12
 800889c:	af00      	add	r7, sp, #0
 800889e:	6078      	str	r0, [r7, #4]
 80088a0:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	683a      	ldr	r2, [r7, #0]
 80088a6:	605a      	str	r2, [r3, #4]
    }
 80088a8:	bf00      	nop
 80088aa:	370c      	adds	r7, #12
 80088ac:	46bd      	mov	sp, r7
 80088ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b2:	4770      	bx	lr

080088b4 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80088b4:	b580      	push	{r7, lr}
 80088b6:	b082      	sub	sp, #8
 80088b8:	af00      	add	r7, sp, #0
 80088ba:	6078      	str	r0, [r7, #4]
 80088bc:	4a05      	ldr	r2, [pc, #20]	@ (80088d4 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80088be:	687b      	ldr	r3, [r7, #4]
 80088c0:	601a      	str	r2, [r3, #0]
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	4618      	mov	r0, r3
 80088c6:	f7ff fee5 	bl	8008694 <_ZN8touchgfx15UIEventListenerD1Ev>
 80088ca:	687b      	ldr	r3, [r7, #4]
 80088cc:	4618      	mov	r0, r3
 80088ce:	3708      	adds	r7, #8
 80088d0:	46bd      	mov	sp, r7
 80088d2:	bd80      	pop	{r7, pc}
 80088d4:	08025268 	.word	0x08025268

080088d8 <_ZN8touchgfx11ApplicationD0Ev>:
 80088d8:	b580      	push	{r7, lr}
 80088da:	b082      	sub	sp, #8
 80088dc:	af00      	add	r7, sp, #0
 80088de:	6078      	str	r0, [r7, #4]
 80088e0:	6878      	ldr	r0, [r7, #4]
 80088e2:	f7ff ffe7 	bl	80088b4 <_ZN8touchgfx11ApplicationD1Ev>
 80088e6:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 80088ea:	6878      	ldr	r0, [r7, #4]
 80088ec:	f019 fc6f 	bl	80221ce <_ZdlPvj>
 80088f0:	687b      	ldr	r3, [r7, #4]
 80088f2:	4618      	mov	r0, r3
 80088f4:	3708      	adds	r7, #8
 80088f6:	46bd      	mov	sp, r7
 80088f8:	bd80      	pop	{r7, pc}
	...

080088fc <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 80088fc:	b580      	push	{r7, lr}
 80088fe:	b082      	sub	sp, #8
 8008900:	af00      	add	r7, sp, #0
 8008902:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	4618      	mov	r0, r3
 8008908:	f007 ffca 	bl	80108a0 <_ZN8touchgfx11ApplicationC1Ev>
 800890c:	4a09      	ldr	r2, [pc, #36]	@ (8008934 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	2200      	movs	r2, #0
 8008916:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	2200      	movs	r2, #0
 800891e:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 8008922:	687b      	ldr	r3, [r7, #4]
 8008924:	4a04      	ldr	r2, [pc, #16]	@ (8008938 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8008926:	6013      	str	r3, [r2, #0]
    }
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	4618      	mov	r0, r3
 800892c:	3708      	adds	r7, #8
 800892e:	46bd      	mov	sp, r7
 8008930:	bd80      	pop	{r7, pc}
 8008932:	bf00      	nop
 8008934:	08024528 	.word	0x08024528
 8008938:	20002e08 	.word	0x20002e08

0800893c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800893c:	b580      	push	{r7, lr}
 800893e:	b082      	sub	sp, #8
 8008940:	af00      	add	r7, sp, #0
 8008942:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8008944:	6878      	ldr	r0, [r7, #4]
 8008946:	f000 f804 	bl	8008952 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800894a:	bf00      	nop
 800894c:	3708      	adds	r7, #8
 800894e:	46bd      	mov	sp, r7
 8008950:	bd80      	pop	{r7, pc}

08008952 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8008952:	b580      	push	{r7, lr}
 8008954:	b082      	sub	sp, #8
 8008956:	af00      	add	r7, sp, #0
 8008958:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008960:	2b00      	cmp	r3, #0
 8008962:	d00f      	beq.n	8008984 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800896a:	687b      	ldr	r3, [r7, #4]
 800896c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	330c      	adds	r3, #12
 8008974:	681b      	ldr	r3, [r3, #0]
 8008976:	4610      	mov	r0, r2
 8008978:	4798      	blx	r3
 800897a:	4603      	mov	r3, r0
 800897c:	2b00      	cmp	r3, #0
 800897e:	d001      	beq.n	8008984 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008980:	2301      	movs	r3, #1
 8008982:	e000      	b.n	8008986 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8008984:	2300      	movs	r3, #0
 8008986:	2b00      	cmp	r3, #0
 8008988:	d00e      	beq.n	80089a8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800898a:	687b      	ldr	r3, [r7, #4]
 800898c:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008990:	687b      	ldr	r3, [r7, #4]
 8008992:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008996:	681b      	ldr	r3, [r3, #0]
 8008998:	3308      	adds	r3, #8
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	4610      	mov	r0, r2
 800899e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	2200      	movs	r2, #0
 80089a4:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 80089a8:	bf00      	nop
 80089aa:	3708      	adds	r7, #8
 80089ac:	46bd      	mov	sp, r7
 80089ae:	bd80      	pop	{r7, pc}

080089b0 <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 80089b0:	b480      	push	{r7}
 80089b2:	b083      	sub	sp, #12
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	6078      	str	r0, [r7, #4]
 80089b8:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	683a      	ldr	r2, [r7, #0]
 80089be:	601a      	str	r2, [r3, #0]
    }
 80089c0:	bf00      	nop
 80089c2:	370c      	adds	r7, #12
 80089c4:	46bd      	mov	sp, r7
 80089c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ca:	4770      	bx	lr

080089cc <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 80089cc:	b580      	push	{r7, lr}
 80089ce:	b082      	sub	sp, #8
 80089d0:	af00      	add	r7, sp, #0
 80089d2:	6078      	str	r0, [r7, #4]
 80089d4:	4a05      	ldr	r2, [pc, #20]	@ (80089ec <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 80089d6:	687b      	ldr	r3, [r7, #4]
 80089d8:	601a      	str	r2, [r3, #0]
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	4618      	mov	r0, r3
 80089de:	f7ff ff69 	bl	80088b4 <_ZN8touchgfx11ApplicationD1Ev>
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	4618      	mov	r0, r3
 80089e6:	3708      	adds	r7, #8
 80089e8:	46bd      	mov	sp, r7
 80089ea:	bd80      	pop	{r7, pc}
 80089ec:	08024528 	.word	0x08024528

080089f0 <_ZN8touchgfx14MVPApplicationD0Ev>:
 80089f0:	b580      	push	{r7, lr}
 80089f2:	b082      	sub	sp, #8
 80089f4:	af00      	add	r7, sp, #0
 80089f6:	6078      	str	r0, [r7, #4]
 80089f8:	6878      	ldr	r0, [r7, #4]
 80089fa:	f7ff ffe7 	bl	80089cc <_ZN8touchgfx14MVPApplicationD1Ev>
 80089fe:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8008a02:	6878      	ldr	r0, [r7, #4]
 8008a04:	f019 fbe3 	bl	80221ce <_ZdlPvj>
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	4618      	mov	r0, r3
 8008a0c:	3708      	adds	r7, #8
 8008a0e:	46bd      	mov	sp, r7
 8008a10:	bd80      	pop	{r7, pc}
	...

08008a14 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8008a14:	b580      	push	{r7, lr}
 8008a16:	b082      	sub	sp, #8
 8008a18:	af00      	add	r7, sp, #0
 8008a1a:	6078      	str	r0, [r7, #4]
 8008a1c:	4a08      	ldr	r2, [pc, #32]	@ (8008a40 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	601a      	str	r2, [r3, #0]
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008a28:	4618      	mov	r0, r3
 8008a2a:	f000 fad3 	bl	8008fd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008a2e:	687b      	ldr	r3, [r7, #4]
 8008a30:	4618      	mov	r0, r3
 8008a32:	f7ff ffcb 	bl	80089cc <_ZN8touchgfx14MVPApplicationD1Ev>
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	4618      	mov	r0, r3
 8008a3a:	3708      	adds	r7, #8
 8008a3c:	46bd      	mov	sp, r7
 8008a3e:	bd80      	pop	{r7, pc}
 8008a40:	080244bc 	.word	0x080244bc

08008a44 <_ZN23FrontendApplicationBaseD0Ev>:
 8008a44:	b580      	push	{r7, lr}
 8008a46:	b082      	sub	sp, #8
 8008a48:	af00      	add	r7, sp, #0
 8008a4a:	6078      	str	r0, [r7, #4]
 8008a4c:	6878      	ldr	r0, [r7, #4]
 8008a4e:	f7ff ffe1 	bl	8008a14 <_ZN23FrontendApplicationBaseD1Ev>
 8008a52:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8008a56:	6878      	ldr	r0, [r7, #4]
 8008a58:	f019 fbb9 	bl	80221ce <_ZdlPvj>
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	4618      	mov	r0, r3
 8008a60:	3708      	adds	r7, #8
 8008a62:	46bd      	mov	sp, r7
 8008a64:	bd80      	pop	{r7, pc}

08008a66 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8008a66:	b580      	push	{r7, lr}
 8008a68:	b082      	sub	sp, #8
 8008a6a:	af00      	add	r7, sp, #0
 8008a6c:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 8008a6e:	6878      	ldr	r0, [r7, #4]
 8008a70:	f000 f888 	bl	8008b84 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 8008a74:	bf00      	nop
 8008a76:	3708      	adds	r7, #8
 8008a78:	46bd      	mov	sp, r7
 8008a7a:	bd80      	pop	{r7, pc}

08008a7c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8008a7c:	b480      	push	{r7}
 8008a7e:	b083      	sub	sp, #12
 8008a80:	af00      	add	r7, sp, #0
 8008a82:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008a84:	687b      	ldr	r3, [r7, #4]
 8008a86:	2201      	movs	r2, #1
 8008a88:	721a      	strb	r2, [r3, #8]
    }
 8008a8a:	bf00      	nop
 8008a8c:	370c      	adds	r7, #12
 8008a8e:	46bd      	mov	sp, r7
 8008a90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a94:	4770      	bx	lr

08008a96 <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 8008a96:	b480      	push	{r7}
 8008a98:	b083      	sub	sp, #12
 8008a9a:	af00      	add	r7, sp, #0
 8008a9c:	6078      	str	r0, [r7, #4]
 8008a9e:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	683a      	ldr	r2, [r7, #0]
 8008aa4:	605a      	str	r2, [r3, #4]
    }
 8008aa6:	bf00      	nop
 8008aa8:	370c      	adds	r7, #12
 8008aaa:	46bd      	mov	sp, r7
 8008aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ab0:	4770      	bx	lr
	...

08008ab4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008ab4:	b580      	push	{r7, lr}
 8008ab6:	b084      	sub	sp, #16
 8008ab8:	af00      	add	r7, sp, #0
 8008aba:	60f8      	str	r0, [r7, #12]
 8008abc:	60b9      	str	r1, [r7, #8]
 8008abe:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008ac0:	68fb      	ldr	r3, [r7, #12]
 8008ac2:	4618      	mov	r0, r3
 8008ac4:	f7ff ff1a 	bl	80088fc <_ZN8touchgfx14MVPApplicationC1Ev>
 8008ac8:	4a19      	ldr	r2, [pc, #100]	@ (8008b30 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 8008aca:	68fb      	ldr	r3, [r7, #12]
 8008acc:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 8008ace:	68fb      	ldr	r3, [r7, #12]
 8008ad0:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008ad4:	4618      	mov	r0, r3
 8008ad6:	f000 f8ab 	bl	8008c30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 8008ada:	68fb      	ldr	r3, [r7, #12]
 8008adc:	687a      	ldr	r2, [r7, #4]
 8008ade:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 8008ae2:	68fb      	ldr	r3, [r7, #12]
 8008ae4:	68ba      	ldr	r2, [r7, #8]
 8008ae6:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8008aea:	f7ff fe49 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 8008aee:	4603      	mov	r3, r0
 8008af0:	681a      	ldr	r2, [r3, #0]
 8008af2:	3208      	adds	r2, #8
 8008af4:	6812      	ldr	r2, [r2, #0]
 8008af6:	2101      	movs	r1, #1
 8008af8:	4618      	mov	r0, r3
 8008afa:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008afc:	2000      	movs	r0, #0
 8008afe:	f001 fe59 	bl	800a7b4 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008b02:	f7ff fe49 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 8008b06:	4603      	mov	r3, r0
 8008b08:	4618      	mov	r0, r3
 8008b0a:	f011 ffc8 	bl	801aa9e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8008b0e:	f7ff fe43 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 8008b12:	4603      	mov	r3, r0
 8008b14:	4618      	mov	r0, r3
 8008b16:	f012 f83d 	bl	801ab94 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8008b1a:	f7ff fe3d 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 8008b1e:	4603      	mov	r3, r0
 8008b20:	4618      	mov	r0, r3
 8008b22:	f012 f843 	bl	801abac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8008b26:	68fb      	ldr	r3, [r7, #12]
 8008b28:	4618      	mov	r0, r3
 8008b2a:	3710      	adds	r7, #16
 8008b2c:	46bd      	mov	sp, r7
 8008b2e:	bd80      	pop	{r7, pc}
 8008b30:	080244bc 	.word	0x080244bc

08008b34 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008b34:	b480      	push	{r7}
 8008b36:	b083      	sub	sp, #12
 8008b38:	af00      	add	r7, sp, #0
 8008b3a:	6078      	str	r0, [r7, #4]
 8008b3c:	6039      	str	r1, [r7, #0]
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	4618      	mov	r0, r3
 8008b42:	370c      	adds	r7, #12
 8008b44:	46bd      	mov	sp, r7
 8008b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b4a:	4770      	bx	lr

08008b4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008b4c:	b580      	push	{r7, lr}
 8008b4e:	b082      	sub	sp, #8
 8008b50:	af00      	add	r7, sp, #0
 8008b52:	6078      	str	r0, [r7, #4]
 8008b54:	6039      	str	r1, [r7, #0]
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	683a      	ldr	r2, [r7, #0]
 8008b5a:	4611      	mov	r1, r2
 8008b5c:	4618      	mov	r0, r3
 8008b5e:	f7ff ffe9 	bl	8008b34 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008b62:	683b      	ldr	r3, [r7, #0]
 8008b64:	685a      	ldr	r2, [r3, #4]
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	605a      	str	r2, [r3, #4]
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	683a      	ldr	r2, [r7, #0]
 8008b6e:	3308      	adds	r3, #8
 8008b70:	3208      	adds	r2, #8
 8008b72:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008b76:	e883 0003 	stmia.w	r3, {r0, r1}
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	4618      	mov	r0, r3
 8008b7e:	3708      	adds	r7, #8
 8008b80:	46bd      	mov	sp, r7
 8008b82:	bd80      	pop	{r7, pc}

08008b84 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:
 */

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 8008b84:	b590      	push	{r4, r7, lr}
 8008b86:	b089      	sub	sp, #36	@ 0x24
 8008b88:	af00      	add	r7, sp, #0
 8008b8a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008b92:	4b10      	ldr	r3, [pc, #64]	@ (8008bd4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 8008b94:	61bb      	str	r3, [r7, #24]
 8008b96:	2300      	movs	r3, #0
 8008b98:	61fb      	str	r3, [r7, #28]
 8008b9a:	f107 0008 	add.w	r0, r7, #8
 8008b9e:	f107 0318 	add.w	r3, r7, #24
 8008ba2:	cb0c      	ldmia	r3, {r2, r3}
 8008ba4:	6879      	ldr	r1, [r7, #4]
 8008ba6:	f000 f85f 	bl	8008c68 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008baa:	f107 0308 	add.w	r3, r7, #8
 8008bae:	4619      	mov	r1, r3
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	f7ff ffcb 	bl	8008b4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008bb6:	f107 0308 	add.w	r3, r7, #8
 8008bba:	4618      	mov	r0, r3
 8008bbc:	f000 fa0a 	bl	8008fd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008bc0:	687b      	ldr	r3, [r7, #4]
 8008bc2:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008bcc:	bf00      	nop
 8008bce:	3724      	adds	r7, #36	@ 0x24
 8008bd0:	46bd      	mov	sp, r7
 8008bd2:	bd90      	pop	{r4, r7, pc}
 8008bd4:	08008bd9 	.word	0x08008bd9

08008bd8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8008bd8:	b580      	push	{r7, lr}
 8008bda:	b084      	sub	sp, #16
 8008bdc:	af02      	add	r7, sp, #8
 8008bde:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008be0:	687b      	ldr	r3, [r7, #4]
 8008be2:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008bec:	461a      	mov	r2, r3
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008bf4:	9300      	str	r3, [sp, #0]
 8008bf6:	4b04      	ldr	r3, [pc, #16]	@ (8008c08 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 8008bf8:	4804      	ldr	r0, [pc, #16]	@ (8008c0c <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 8008bfa:	f000 f867 	bl	8008ccc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008bfe:	bf00      	nop
 8008c00:	3708      	adds	r7, #8
 8008c02:	46bd      	mov	sp, r7
 8008c04:	bd80      	pop	{r7, pc}
 8008c06:	bf00      	nop
 8008c08:	20002dfc 	.word	0x20002dfc
 8008c0c:	20002df8 	.word	0x20002df8

08008c10 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008c10:	b480      	push	{r7}
 8008c12:	b083      	sub	sp, #12
 8008c14:	af00      	add	r7, sp, #0
 8008c16:	6078      	str	r0, [r7, #4]
 8008c18:	4a04      	ldr	r2, [pc, #16]	@ (8008c2c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008c1a:	687b      	ldr	r3, [r7, #4]
 8008c1c:	601a      	str	r2, [r3, #0]
 8008c1e:	687b      	ldr	r3, [r7, #4]
 8008c20:	4618      	mov	r0, r3
 8008c22:	370c      	adds	r7, #12
 8008c24:	46bd      	mov	sp, r7
 8008c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c2a:	4770      	bx	lr
 8008c2c:	080245a0 	.word	0x080245a0

08008c30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8008c30:	b580      	push	{r7, lr}
 8008c32:	b082      	sub	sp, #8
 8008c34:	af00      	add	r7, sp, #0
 8008c36:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8008c38:	687b      	ldr	r3, [r7, #4]
 8008c3a:	4618      	mov	r0, r3
 8008c3c:	f7ff ffe8 	bl	8008c10 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008c40:	4a08      	ldr	r2, [pc, #32]	@ (8008c64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008c42:	687b      	ldr	r3, [r7, #4]
 8008c44:	601a      	str	r2, [r3, #0]
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	2200      	movs	r2, #0
 8008c4a:	605a      	str	r2, [r3, #4]
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	2200      	movs	r2, #0
 8008c50:	609a      	str	r2, [r3, #8]
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	2200      	movs	r2, #0
 8008c56:	60da      	str	r2, [r3, #12]
    {
    }
 8008c58:	687b      	ldr	r3, [r7, #4]
 8008c5a:	4618      	mov	r0, r3
 8008c5c:	3708      	adds	r7, #8
 8008c5e:	46bd      	mov	sp, r7
 8008c60:	bd80      	pop	{r7, pc}
 8008c62:	bf00      	nop
 8008c64:	08024510 	.word	0x08024510

08008c68 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8008c68:	b580      	push	{r7, lr}
 8008c6a:	b084      	sub	sp, #16
 8008c6c:	af00      	add	r7, sp, #0
 8008c6e:	60f8      	str	r0, [r7, #12]
 8008c70:	60b9      	str	r1, [r7, #8]
 8008c72:	4639      	mov	r1, r7
 8008c74:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8008c78:	68fb      	ldr	r3, [r7, #12]
 8008c7a:	4618      	mov	r0, r3
 8008c7c:	f7ff ffc8 	bl	8008c10 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008c80:	4a08      	ldr	r2, [pc, #32]	@ (8008ca4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008c82:	68fb      	ldr	r3, [r7, #12]
 8008c84:	601a      	str	r2, [r3, #0]
 8008c86:	68fb      	ldr	r3, [r7, #12]
 8008c88:	68ba      	ldr	r2, [r7, #8]
 8008c8a:	605a      	str	r2, [r3, #4]
 8008c8c:	68fb      	ldr	r3, [r7, #12]
 8008c8e:	3308      	adds	r3, #8
 8008c90:	463a      	mov	r2, r7
 8008c92:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008c96:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8008c9a:	68fb      	ldr	r3, [r7, #12]
 8008c9c:	4618      	mov	r0, r3
 8008c9e:	3710      	adds	r7, #16
 8008ca0:	46bd      	mov	sp, r7
 8008ca2:	bd80      	pop	{r7, pc}
 8008ca4:	08024510 	.word	0x08024510

08008ca8 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008ca8:	b580      	push	{r7, lr}
 8008caa:	b082      	sub	sp, #8
 8008cac:	af00      	add	r7, sp, #0
 8008cae:	6078      	str	r0, [r7, #4]
 8008cb0:	687b      	ldr	r3, [r7, #4]
 8008cb2:	4618      	mov	r0, r3
 8008cb4:	f7ff fd8c 	bl	80087d0 <_ZN8touchgfx10TransitionC1Ev>
 8008cb8:	4a03      	ldr	r2, [pc, #12]	@ (8008cc8 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008cba:	687b      	ldr	r3, [r7, #4]
 8008cbc:	601a      	str	r2, [r3, #0]
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	4618      	mov	r0, r3
 8008cc2:	3708      	adds	r7, #8
 8008cc4:	46bd      	mov	sp, r7
 8008cc6:	bd80      	pop	{r7, pc}
 8008cc8:	08024498 	.word	0x08024498

08008ccc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008ccc:	b590      	push	{r4, r7, lr}
 8008cce:	b08f      	sub	sp, #60	@ 0x3c
 8008cd0:	af00      	add	r7, sp, #0
 8008cd2:	60f8      	str	r0, [r7, #12]
 8008cd4:	60b9      	str	r1, [r7, #8]
 8008cd6:	607a      	str	r2, [r7, #4]
 8008cd8:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008cda:	687b      	ldr	r3, [r7, #4]
 8008cdc:	689a      	ldr	r2, [r3, #8]
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	689b      	ldr	r3, [r3, #8]
 8008ce2:	681b      	ldr	r3, [r3, #0]
 8008ce4:	3320      	adds	r3, #32
 8008ce6:	681b      	ldr	r3, [r3, #0]
 8008ce8:	4610      	mov	r0, r2
 8008cea:	4798      	blx	r3
 8008cec:	4603      	mov	r3, r0
 8008cee:	f5b3 7f10 	cmp.w	r3, #576	@ 0x240
 8008cf2:	d205      	bcs.n	8008d00 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008cf4:	4b7d      	ldr	r3, [pc, #500]	@ (8008eec <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008cf6:	4a7e      	ldr	r2, [pc, #504]	@ (8008ef0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008cf8:	21a3      	movs	r1, #163	@ 0xa3
 8008cfa:	487e      	ldr	r0, [pc, #504]	@ (8008ef4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008cfc:	f019 fb14 	bl	8022328 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	685a      	ldr	r2, [r3, #4]
 8008d04:	687b      	ldr	r3, [r7, #4]
 8008d06:	685b      	ldr	r3, [r3, #4]
 8008d08:	681b      	ldr	r3, [r3, #0]
 8008d0a:	3320      	adds	r3, #32
 8008d0c:	681b      	ldr	r3, [r3, #0]
 8008d0e:	4610      	mov	r0, r2
 8008d10:	4798      	blx	r3
 8008d12:	4603      	mov	r3, r0
 8008d14:	2b0f      	cmp	r3, #15
 8008d16:	d805      	bhi.n	8008d24 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008d18:	4b77      	ldr	r3, [pc, #476]	@ (8008ef8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008d1a:	4a75      	ldr	r2, [pc, #468]	@ (8008ef0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008d1c:	21a4      	movs	r1, #164	@ 0xa4
 8008d1e:	4875      	ldr	r0, [pc, #468]	@ (8008ef4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008d20:	f019 fb02 	bl	8022328 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008d24:	687b      	ldr	r3, [r7, #4]
 8008d26:	68da      	ldr	r2, [r3, #12]
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	68db      	ldr	r3, [r3, #12]
 8008d2c:	681b      	ldr	r3, [r3, #0]
 8008d2e:	3320      	adds	r3, #32
 8008d30:	681b      	ldr	r3, [r3, #0]
 8008d32:	4610      	mov	r0, r2
 8008d34:	4798      	blx	r3
 8008d36:	4603      	mov	r3, r0
 8008d38:	2b0b      	cmp	r3, #11
 8008d3a:	d805      	bhi.n	8008d48 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008d3c:	4b6f      	ldr	r3, [pc, #444]	@ (8008efc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008d3e:	4a6c      	ldr	r2, [pc, #432]	@ (8008ef0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008d40:	21a5      	movs	r1, #165	@ 0xa5
 8008d42:	486c      	ldr	r0, [pc, #432]	@ (8008ef4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008d44:	f019 faf0 	bl	8022328 <__assert_func>
 8008d48:	68fb      	ldr	r3, [r7, #12]
 8008d4a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008d4c:	68bb      	ldr	r3, [r7, #8]
 8008d4e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008d50:	683b      	ldr	r3, [r7, #0]
 8008d52:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008d54:	f007 fce2 	bl	801071c <_ZN8touchgfx11Application11getInstanceEv>
 8008d58:	4603      	mov	r3, r0
 8008d5a:	4618      	mov	r0, r3
 8008d5c:	f7ff fce2 	bl	8008724 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008d60:	6a3b      	ldr	r3, [r7, #32]
 8008d62:	681b      	ldr	r3, [r3, #0]
 8008d64:	2b00      	cmp	r3, #0
 8008d66:	d008      	beq.n	8008d7a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008d68:	6a3b      	ldr	r3, [r7, #32]
 8008d6a:	681a      	ldr	r2, [r3, #0]
 8008d6c:	6a3b      	ldr	r3, [r7, #32]
 8008d6e:	681b      	ldr	r3, [r3, #0]
 8008d70:	681b      	ldr	r3, [r3, #0]
 8008d72:	330c      	adds	r3, #12
 8008d74:	681b      	ldr	r3, [r3, #0]
 8008d76:	4610      	mov	r0, r2
 8008d78:	4798      	blx	r3
    if (*currentTrans)
 8008d7a:	6a3b      	ldr	r3, [r7, #32]
 8008d7c:	681b      	ldr	r3, [r3, #0]
 8008d7e:	2b00      	cmp	r3, #0
 8008d80:	d007      	beq.n	8008d92 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008d82:	6a3b      	ldr	r3, [r7, #32]
 8008d84:	681a      	ldr	r2, [r3, #0]
 8008d86:	6a3b      	ldr	r3, [r7, #32]
 8008d88:	681b      	ldr	r3, [r3, #0]
 8008d8a:	681b      	ldr	r3, [r3, #0]
 8008d8c:	681b      	ldr	r3, [r3, #0]
 8008d8e:	4610      	mov	r0, r2
 8008d90:	4798      	blx	r3
    if (*currentScreen)
 8008d92:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008d94:	681b      	ldr	r3, [r3, #0]
 8008d96:	2b00      	cmp	r3, #0
 8008d98:	d008      	beq.n	8008dac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008d9a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008d9c:	681a      	ldr	r2, [r3, #0]
 8008d9e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008da0:	681b      	ldr	r3, [r3, #0]
 8008da2:	681b      	ldr	r3, [r3, #0]
 8008da4:	3314      	adds	r3, #20
 8008da6:	681b      	ldr	r3, [r3, #0]
 8008da8:	4610      	mov	r0, r2
 8008daa:	4798      	blx	r3
    if (*currentPresenter)
 8008dac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008dae:	681b      	ldr	r3, [r3, #0]
 8008db0:	2b00      	cmp	r3, #0
 8008db2:	d008      	beq.n	8008dc6 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008db4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008db6:	681a      	ldr	r2, [r3, #0]
 8008db8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008dba:	681b      	ldr	r3, [r3, #0]
 8008dbc:	681b      	ldr	r3, [r3, #0]
 8008dbe:	3304      	adds	r3, #4
 8008dc0:	681b      	ldr	r3, [r3, #0]
 8008dc2:	4610      	mov	r0, r2
 8008dc4:	4798      	blx	r3
    if (*currentScreen)
 8008dc6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008dc8:	681b      	ldr	r3, [r3, #0]
 8008dca:	2b00      	cmp	r3, #0
 8008dcc:	d007      	beq.n	8008dde <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008dce:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008dd0:	681a      	ldr	r2, [r3, #0]
 8008dd2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008dd4:	681b      	ldr	r3, [r3, #0]
 8008dd6:	681b      	ldr	r3, [r3, #0]
 8008dd8:	681b      	ldr	r3, [r3, #0]
 8008dda:	4610      	mov	r0, r2
 8008ddc:	4798      	blx	r3
    if (*currentPresenter)
 8008dde:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008de0:	681b      	ldr	r3, [r3, #0]
 8008de2:	2b00      	cmp	r3, #0
 8008de4:	d008      	beq.n	8008df8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008de6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008de8:	681a      	ldr	r2, [r3, #0]
 8008dea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008dec:	681b      	ldr	r3, [r3, #0]
 8008dee:	681b      	ldr	r3, [r3, #0]
 8008df0:	3308      	adds	r3, #8
 8008df2:	681b      	ldr	r3, [r3, #0]
 8008df4:	4610      	mov	r0, r2
 8008df6:	4798      	blx	r3
}
 8008df8:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008dfa:	687b      	ldr	r3, [r7, #4]
 8008dfc:	68db      	ldr	r3, [r3, #12]
 8008dfe:	2100      	movs	r1, #0
 8008e00:	4618      	mov	r0, r3
 8008e02:	f000 f87d 	bl	8008f00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008e06:	4603      	mov	r3, r0
 8008e08:	4619      	mov	r1, r3
 8008e0a:	200c      	movs	r0, #12
 8008e0c:	f7ff fbf4 	bl	80085f8 <_ZnwjPv>
 8008e10:	4604      	mov	r4, r0
 8008e12:	4620      	mov	r0, r4
 8008e14:	f7ff ff48 	bl	8008ca8 <_ZN8touchgfx12NoTransitionC1Ev>
 8008e18:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008e1a:	687b      	ldr	r3, [r7, #4]
 8008e1c:	689b      	ldr	r3, [r3, #8]
 8008e1e:	2100      	movs	r1, #0
 8008e20:	4618      	mov	r0, r3
 8008e22:	f000 f880 	bl	8008f26 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 8008e26:	4603      	mov	r3, r0
 8008e28:	4619      	mov	r1, r3
 8008e2a:	f44f 7010 	mov.w	r0, #576	@ 0x240
 8008e2e:	f7ff fbe3 	bl	80085f8 <_ZnwjPv>
 8008e32:	4604      	mov	r4, r0
 8008e34:	4620      	mov	r0, r4
 8008e36:	f001 ff37 	bl	800aca8 <_ZN8MainViewC1Ev>
 8008e3a:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008e3c:	687b      	ldr	r3, [r7, #4]
 8008e3e:	685b      	ldr	r3, [r3, #4]
 8008e40:	2100      	movs	r1, #0
 8008e42:	4618      	mov	r0, r3
 8008e44:	f000 f882 	bl	8008f4c <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 8008e48:	4603      	mov	r3, r0
 8008e4a:	4619      	mov	r1, r3
 8008e4c:	2010      	movs	r0, #16
 8008e4e:	f7ff fbd3 	bl	80085f8 <_ZnwjPv>
 8008e52:	4604      	mov	r4, r0
 8008e54:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008e56:	4620      	mov	r0, r4
 8008e58:	f001 fe70 	bl	800ab3c <_ZN13MainPresenterC1ER8MainView>
 8008e5c:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8008e5e:	683b      	ldr	r3, [r7, #0]
 8008e60:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008e62:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008e64:	68bb      	ldr	r3, [r7, #8]
 8008e66:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008e68:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008e6a:	68fb      	ldr	r3, [r7, #12]
 8008e6c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008e6e:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008e70:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008e72:	2b00      	cmp	r3, #0
 8008e74:	d002      	beq.n	8008e7c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008e76:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008e78:	3304      	adds	r3, #4
 8008e7a:	e000      	b.n	8008e7e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8008e7c:	2300      	movs	r3, #0
 8008e7e:	4619      	mov	r1, r3
 8008e80:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8008e82:	f7ff fd95 	bl	80089b0 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008e86:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008e88:	3304      	adds	r3, #4
 8008e8a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008e8c:	4618      	mov	r0, r3
 8008e8e:	f7ff fe02 	bl	8008a96 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008e92:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008e94:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008e96:	4618      	mov	r0, r3
 8008e98:	f000 f86b 	bl	8008f72 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 8008e9c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008e9e:	61fb      	str	r3, [r7, #28]
 8008ea0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008ea2:	61bb      	str	r3, [r7, #24]
 8008ea4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008ea6:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8008ea8:	69fb      	ldr	r3, [r7, #28]
 8008eaa:	681b      	ldr	r3, [r3, #0]
 8008eac:	330c      	adds	r3, #12
 8008eae:	681b      	ldr	r3, [r3, #0]
 8008eb0:	69f8      	ldr	r0, [r7, #28]
 8008eb2:	4798      	blx	r3
    newPresenter->activate();
 8008eb4:	69bb      	ldr	r3, [r7, #24]
 8008eb6:	681b      	ldr	r3, [r3, #0]
 8008eb8:	681b      	ldr	r3, [r3, #0]
 8008eba:	69b8      	ldr	r0, [r7, #24]
 8008ebc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008ebe:	6979      	ldr	r1, [r7, #20]
 8008ec0:	69f8      	ldr	r0, [r7, #28]
 8008ec2:	f009 f8ed 	bl	80120a0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008ec6:	697b      	ldr	r3, [r7, #20]
 8008ec8:	681b      	ldr	r3, [r3, #0]
 8008eca:	3310      	adds	r3, #16
 8008ecc:	681b      	ldr	r3, [r3, #0]
 8008ece:	6978      	ldr	r0, [r7, #20]
 8008ed0:	4798      	blx	r3
    newTransition->invalidate();
 8008ed2:	697b      	ldr	r3, [r7, #20]
 8008ed4:	681b      	ldr	r3, [r3, #0]
 8008ed6:	3314      	adds	r3, #20
 8008ed8:	681b      	ldr	r3, [r3, #0]
 8008eda:	6978      	ldr	r0, [r7, #20]
 8008edc:	4798      	blx	r3
}
 8008ede:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8008ee0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8008ee2:	4618      	mov	r0, r3
 8008ee4:	373c      	adds	r7, #60	@ 0x3c
 8008ee6:	46bd      	mov	sp, r7
 8008ee8:	bd90      	pop	{r4, r7, pc}
 8008eea:	bf00      	nop
 8008eec:	08023388 	.word	0x08023388
 8008ef0:	08023418 	.word	0x08023418
 8008ef4:	080234e4 	.word	0x080234e4
 8008ef8:	08023528 	.word	0x08023528
 8008efc:	080235cc 	.word	0x080235cc

08008f00 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8008f00:	b580      	push	{r7, lr}
 8008f02:	b082      	sub	sp, #8
 8008f04:	af00      	add	r7, sp, #0
 8008f06:	6078      	str	r0, [r7, #4]
 8008f08:	460b      	mov	r3, r1
 8008f0a:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8008f0c:	687b      	ldr	r3, [r7, #4]
 8008f0e:	681b      	ldr	r3, [r3, #0]
 8008f10:	3324      	adds	r3, #36	@ 0x24
 8008f12:	681b      	ldr	r3, [r3, #0]
 8008f14:	887a      	ldrh	r2, [r7, #2]
 8008f16:	4611      	mov	r1, r2
 8008f18:	6878      	ldr	r0, [r7, #4]
 8008f1a:	4798      	blx	r3
 8008f1c:	4603      	mov	r3, r0
    }
 8008f1e:	4618      	mov	r0, r3
 8008f20:	3708      	adds	r7, #8
 8008f22:	46bd      	mov	sp, r7
 8008f24:	bd80      	pop	{r7, pc}

08008f26 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 8008f26:	b580      	push	{r7, lr}
 8008f28:	b082      	sub	sp, #8
 8008f2a:	af00      	add	r7, sp, #0
 8008f2c:	6078      	str	r0, [r7, #4]
 8008f2e:	460b      	mov	r3, r1
 8008f30:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008f32:	687b      	ldr	r3, [r7, #4]
 8008f34:	681b      	ldr	r3, [r3, #0]
 8008f36:	3324      	adds	r3, #36	@ 0x24
 8008f38:	681b      	ldr	r3, [r3, #0]
 8008f3a:	887a      	ldrh	r2, [r7, #2]
 8008f3c:	4611      	mov	r1, r2
 8008f3e:	6878      	ldr	r0, [r7, #4]
 8008f40:	4798      	blx	r3
 8008f42:	4603      	mov	r3, r0
    }
 8008f44:	4618      	mov	r0, r3
 8008f46:	3708      	adds	r7, #8
 8008f48:	46bd      	mov	sp, r7
 8008f4a:	bd80      	pop	{r7, pc}

08008f4c <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 8008f4c:	b580      	push	{r7, lr}
 8008f4e:	b082      	sub	sp, #8
 8008f50:	af00      	add	r7, sp, #0
 8008f52:	6078      	str	r0, [r7, #4]
 8008f54:	460b      	mov	r3, r1
 8008f56:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8008f58:	687b      	ldr	r3, [r7, #4]
 8008f5a:	681b      	ldr	r3, [r3, #0]
 8008f5c:	3324      	adds	r3, #36	@ 0x24
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	887a      	ldrh	r2, [r7, #2]
 8008f62:	4611      	mov	r1, r2
 8008f64:	6878      	ldr	r0, [r7, #4]
 8008f66:	4798      	blx	r3
 8008f68:	4603      	mov	r3, r0
    }
 8008f6a:	4618      	mov	r0, r3
 8008f6c:	3708      	adds	r7, #8
 8008f6e:	46bd      	mov	sp, r7
 8008f70:	bd80      	pop	{r7, pc}

08008f72 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 8008f72:	b480      	push	{r7}
 8008f74:	b083      	sub	sp, #12
 8008f76:	af00      	add	r7, sp, #0
 8008f78:	6078      	str	r0, [r7, #4]
 8008f7a:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 8008f7c:	687b      	ldr	r3, [r7, #4]
 8008f7e:	683a      	ldr	r2, [r7, #0]
 8008f80:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8008f82:	bf00      	nop
 8008f84:	370c      	adds	r7, #12
 8008f86:	46bd      	mov	sp, r7
 8008f88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f8c:	4770      	bx	lr
	...

08008f90 <_ZN8touchgfx12NoTransitionD1Ev>:
 8008f90:	b580      	push	{r7, lr}
 8008f92:	b082      	sub	sp, #8
 8008f94:	af00      	add	r7, sp, #0
 8008f96:	6078      	str	r0, [r7, #4]
 8008f98:	4a05      	ldr	r2, [pc, #20]	@ (8008fb0 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8008f9a:	687b      	ldr	r3, [r7, #4]
 8008f9c:	601a      	str	r2, [r3, #0]
 8008f9e:	687b      	ldr	r3, [r7, #4]
 8008fa0:	4618      	mov	r0, r3
 8008fa2:	f7ff fc2b 	bl	80087fc <_ZN8touchgfx10TransitionD1Ev>
 8008fa6:	687b      	ldr	r3, [r7, #4]
 8008fa8:	4618      	mov	r0, r3
 8008faa:	3708      	adds	r7, #8
 8008fac:	46bd      	mov	sp, r7
 8008fae:	bd80      	pop	{r7, pc}
 8008fb0:	08024498 	.word	0x08024498

08008fb4 <_ZN8touchgfx12NoTransitionD0Ev>:
 8008fb4:	b580      	push	{r7, lr}
 8008fb6:	b082      	sub	sp, #8
 8008fb8:	af00      	add	r7, sp, #0
 8008fba:	6078      	str	r0, [r7, #4]
 8008fbc:	6878      	ldr	r0, [r7, #4]
 8008fbe:	f7ff ffe7 	bl	8008f90 <_ZN8touchgfx12NoTransitionD1Ev>
 8008fc2:	210c      	movs	r1, #12
 8008fc4:	6878      	ldr	r0, [r7, #4]
 8008fc6:	f019 f902 	bl	80221ce <_ZdlPvj>
 8008fca:	687b      	ldr	r3, [r7, #4]
 8008fcc:	4618      	mov	r0, r3
 8008fce:	3708      	adds	r7, #8
 8008fd0:	46bd      	mov	sp, r7
 8008fd2:	bd80      	pop	{r7, pc}

08008fd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008fd4:	b580      	push	{r7, lr}
 8008fd6:	b082      	sub	sp, #8
 8008fd8:	af00      	add	r7, sp, #0
 8008fda:	6078      	str	r0, [r7, #4]
 8008fdc:	4a05      	ldr	r2, [pc, #20]	@ (8008ff4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8008fde:	687b      	ldr	r3, [r7, #4]
 8008fe0:	601a      	str	r2, [r3, #0]
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	4618      	mov	r0, r3
 8008fe6:	f7ff fbab 	bl	8008740 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8008fea:	687b      	ldr	r3, [r7, #4]
 8008fec:	4618      	mov	r0, r3
 8008fee:	3708      	adds	r7, #8
 8008ff0:	46bd      	mov	sp, r7
 8008ff2:	bd80      	pop	{r7, pc}
 8008ff4:	08024510 	.word	0x08024510

08008ff8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8008ff8:	b580      	push	{r7, lr}
 8008ffa:	b082      	sub	sp, #8
 8008ffc:	af00      	add	r7, sp, #0
 8008ffe:	6078      	str	r0, [r7, #4]
 8009000:	6878      	ldr	r0, [r7, #4]
 8009002:	f7ff ffe7 	bl	8008fd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8009006:	2110      	movs	r1, #16
 8009008:	6878      	ldr	r0, [r7, #4]
 800900a:	f019 f8e0 	bl	80221ce <_ZdlPvj>
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	4618      	mov	r0, r3
 8009012:	3708      	adds	r7, #8
 8009014:	46bd      	mov	sp, r7
 8009016:	bd80      	pop	{r7, pc}

08009018 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8009018:	b580      	push	{r7, lr}
 800901a:	b082      	sub	sp, #8
 800901c:	af00      	add	r7, sp, #0
 800901e:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8009020:	687b      	ldr	r3, [r7, #4]
 8009022:	685b      	ldr	r3, [r3, #4]
 8009024:	687a      	ldr	r2, [r7, #4]
 8009026:	68d2      	ldr	r2, [r2, #12]
 8009028:	1052      	asrs	r2, r2, #1
 800902a:	1899      	adds	r1, r3, r2
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	68db      	ldr	r3, [r3, #12]
 8009030:	f003 0301 	and.w	r3, r3, #1
 8009034:	2b00      	cmp	r3, #0
 8009036:	d102      	bne.n	800903e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8009038:	687b      	ldr	r3, [r7, #4]
 800903a:	689b      	ldr	r3, [r3, #8]
 800903c:	e00a      	b.n	8009054 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800903e:	687b      	ldr	r3, [r7, #4]
 8009040:	685b      	ldr	r3, [r3, #4]
 8009042:	687a      	ldr	r2, [r7, #4]
 8009044:	68d2      	ldr	r2, [r2, #12]
 8009046:	1052      	asrs	r2, r2, #1
 8009048:	4413      	add	r3, r2
 800904a:	681b      	ldr	r3, [r3, #0]
 800904c:	687a      	ldr	r2, [r7, #4]
 800904e:	6892      	ldr	r2, [r2, #8]
 8009050:	4413      	add	r3, r2
 8009052:	681b      	ldr	r3, [r3, #0]
 8009054:	4608      	mov	r0, r1
 8009056:	4798      	blx	r3
    }
 8009058:	bf00      	nop
 800905a:	3708      	adds	r7, #8
 800905c:	46bd      	mov	sp, r7
 800905e:	bd80      	pop	{r7, pc}

08009060 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8009060:	b480      	push	{r7}
 8009062:	b083      	sub	sp, #12
 8009064:	af00      	add	r7, sp, #0
 8009066:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 8009068:	687b      	ldr	r3, [r7, #4]
 800906a:	685b      	ldr	r3, [r3, #4]
 800906c:	2b00      	cmp	r3, #0
 800906e:	d010      	beq.n	8009092 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009070:	687b      	ldr	r3, [r7, #4]
 8009072:	689b      	ldr	r3, [r3, #8]
 8009074:	2b00      	cmp	r3, #0
 8009076:	d107      	bne.n	8009088 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	68db      	ldr	r3, [r3, #12]
 800907c:	f003 0301 	and.w	r3, r3, #1
 8009080:	2b00      	cmp	r3, #0
 8009082:	d101      	bne.n	8009088 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009084:	2301      	movs	r3, #1
 8009086:	e000      	b.n	800908a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8009088:	2300      	movs	r3, #0
 800908a:	2b01      	cmp	r3, #1
 800908c:	d001      	beq.n	8009092 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800908e:	2301      	movs	r3, #1
 8009090:	e000      	b.n	8009094 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8009092:	2300      	movs	r3, #0
    }
 8009094:	4618      	mov	r0, r3
 8009096:	370c      	adds	r7, #12
 8009098:	46bd      	mov	sp, r7
 800909a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800909e:	4770      	bx	lr

080090a0 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 80090a0:	b480      	push	{r7}
 80090a2:	b083      	sub	sp, #12
 80090a4:	af00      	add	r7, sp, #0
 80090a6:	6078      	str	r0, [r7, #4]
 80090a8:	6039      	str	r1, [r7, #0]
        : color(col)
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	683a      	ldr	r2, [r7, #0]
 80090ae:	601a      	str	r2, [r3, #0]
    {
    }
 80090b0:	687b      	ldr	r3, [r7, #4]
 80090b2:	4618      	mov	r0, r3
 80090b4:	370c      	adds	r7, #12
 80090b6:	46bd      	mov	sp, r7
 80090b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090bc:	4770      	bx	lr

080090be <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 80090be:	b480      	push	{r7}
 80090c0:	b083      	sub	sp, #12
 80090c2:	af00      	add	r7, sp, #0
 80090c4:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 80090c6:	687b      	ldr	r3, [r7, #4]
 80090c8:	2200      	movs	r2, #0
 80090ca:	801a      	strh	r2, [r3, #0]
 80090cc:	687b      	ldr	r3, [r7, #4]
 80090ce:	2200      	movs	r2, #0
 80090d0:	805a      	strh	r2, [r3, #2]
 80090d2:	687b      	ldr	r3, [r7, #4]
 80090d4:	2200      	movs	r2, #0
 80090d6:	809a      	strh	r2, [r3, #4]
 80090d8:	687b      	ldr	r3, [r7, #4]
 80090da:	2200      	movs	r2, #0
 80090dc:	80da      	strh	r2, [r3, #6]
    {
    }
 80090de:	687b      	ldr	r3, [r7, #4]
 80090e0:	4618      	mov	r0, r3
 80090e2:	370c      	adds	r7, #12
 80090e4:	46bd      	mov	sp, r7
 80090e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090ea:	4770      	bx	lr

080090ec <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 80090ec:	b480      	push	{r7}
 80090ee:	b085      	sub	sp, #20
 80090f0:	af00      	add	r7, sp, #0
 80090f2:	60f8      	str	r0, [r7, #12]
 80090f4:	4608      	mov	r0, r1
 80090f6:	4611      	mov	r1, r2
 80090f8:	461a      	mov	r2, r3
 80090fa:	4603      	mov	r3, r0
 80090fc:	817b      	strh	r3, [r7, #10]
 80090fe:	460b      	mov	r3, r1
 8009100:	813b      	strh	r3, [r7, #8]
 8009102:	4613      	mov	r3, r2
 8009104:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8009106:	68fb      	ldr	r3, [r7, #12]
 8009108:	897a      	ldrh	r2, [r7, #10]
 800910a:	801a      	strh	r2, [r3, #0]
 800910c:	68fb      	ldr	r3, [r7, #12]
 800910e:	893a      	ldrh	r2, [r7, #8]
 8009110:	805a      	strh	r2, [r3, #2]
 8009112:	68fb      	ldr	r3, [r7, #12]
 8009114:	88fa      	ldrh	r2, [r7, #6]
 8009116:	809a      	strh	r2, [r3, #4]
 8009118:	68fb      	ldr	r3, [r7, #12]
 800911a:	8b3a      	ldrh	r2, [r7, #24]
 800911c:	80da      	strh	r2, [r3, #6]
    {
    }
 800911e:	68fb      	ldr	r3, [r7, #12]
 8009120:	4618      	mov	r0, r3
 8009122:	3714      	adds	r7, #20
 8009124:	46bd      	mov	sp, r7
 8009126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800912a:	4770      	bx	lr

0800912c <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800912c:	b480      	push	{r7}
 800912e:	b083      	sub	sp, #12
 8009130:	af00      	add	r7, sp, #0
 8009132:	6078      	str	r0, [r7, #4]
 8009134:	460b      	mov	r3, r1
 8009136:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009138:	687b      	ldr	r3, [r7, #4]
 800913a:	887a      	ldrh	r2, [r7, #2]
 800913c:	801a      	strh	r2, [r3, #0]
    {
    }
 800913e:	687b      	ldr	r3, [r7, #4]
 8009140:	4618      	mov	r0, r3
 8009142:	370c      	adds	r7, #12
 8009144:	46bd      	mov	sp, r7
 8009146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800914a:	4770      	bx	lr

0800914c <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800914c:	b580      	push	{r7, lr}
 800914e:	b082      	sub	sp, #8
 8009150:	af00      	add	r7, sp, #0
 8009152:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8009154:	4a14      	ldr	r2, [pc, #80]	@ (80091a8 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	601a      	str	r2, [r3, #0]
        : rect(),
 800915a:	687b      	ldr	r3, [r7, #4]
 800915c:	3304      	adds	r3, #4
 800915e:	4618      	mov	r0, r3
 8009160:	f7ff ffad 	bl	80090be <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	330c      	adds	r3, #12
 8009168:	4618      	mov	r0, r3
 800916a:	f7ff ffa8 	bl	80090be <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800916e:	687b      	ldr	r3, [r7, #4]
 8009170:	2200      	movs	r2, #0
 8009172:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8009174:	687b      	ldr	r3, [r7, #4]
 8009176:	2200      	movs	r2, #0
 8009178:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800917a:	687b      	ldr	r3, [r7, #4]
 800917c:	2200      	movs	r2, #0
 800917e:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8009180:	687b      	ldr	r3, [r7, #4]
 8009182:	2200      	movs	r2, #0
 8009184:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8009186:	687b      	ldr	r3, [r7, #4]
 8009188:	2200      	movs	r2, #0
 800918a:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 800918c:	687b      	ldr	r3, [r7, #4]
 800918e:	2200      	movs	r2, #0
 8009190:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	2201      	movs	r2, #1
 8009198:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 800919c:	687b      	ldr	r3, [r7, #4]
 800919e:	4618      	mov	r0, r3
 80091a0:	3708      	adds	r7, #8
 80091a2:	46bd      	mov	sp, r7
 80091a4:	bd80      	pop	{r7, pc}
 80091a6:	bf00      	nop
 80091a8:	080252bc 	.word	0x080252bc

080091ac <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 80091ac:	b480      	push	{r7}
 80091ae:	b083      	sub	sp, #12
 80091b0:	af00      	add	r7, sp, #0
 80091b2:	6078      	str	r0, [r7, #4]
    {
 80091b4:	4a04      	ldr	r2, [pc, #16]	@ (80091c8 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	601a      	str	r2, [r3, #0]
    }
 80091ba:	687b      	ldr	r3, [r7, #4]
 80091bc:	4618      	mov	r0, r3
 80091be:	370c      	adds	r7, #12
 80091c0:	46bd      	mov	sp, r7
 80091c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091c6:	4770      	bx	lr
 80091c8:	080252bc 	.word	0x080252bc

080091cc <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 80091cc:	b580      	push	{r7, lr}
 80091ce:	b082      	sub	sp, #8
 80091d0:	af00      	add	r7, sp, #0
 80091d2:	6078      	str	r0, [r7, #4]
    }
 80091d4:	6878      	ldr	r0, [r7, #4]
 80091d6:	f7ff ffe9 	bl	80091ac <_ZN8touchgfx8DrawableD1Ev>
 80091da:	2128      	movs	r1, #40	@ 0x28
 80091dc:	6878      	ldr	r0, [r7, #4]
 80091de:	f018 fff6 	bl	80221ce <_ZdlPvj>
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	4618      	mov	r0, r3
 80091e6:	3708      	adds	r7, #8
 80091e8:	46bd      	mov	sp, r7
 80091ea:	bd80      	pop	{r7, pc}

080091ec <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 80091ec:	b580      	push	{r7, lr}
 80091ee:	b082      	sub	sp, #8
 80091f0:	af00      	add	r7, sp, #0
 80091f2:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 80091f4:	687b      	ldr	r3, [r7, #4]
 80091f6:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80091fa:	2b00      	cmp	r3, #0
 80091fc:	d005      	beq.n	800920a <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	681b      	ldr	r3, [r3, #0]
 8009202:	3314      	adds	r3, #20
 8009204:	681b      	ldr	r3, [r3, #0]
 8009206:	6878      	ldr	r0, [r7, #4]
 8009208:	4798      	blx	r3
        }
    }
 800920a:	bf00      	nop
 800920c:	3708      	adds	r7, #8
 800920e:	46bd      	mov	sp, r7
 8009210:	bd80      	pop	{r7, pc}

08009212 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8009212:	b480      	push	{r7}
 8009214:	b083      	sub	sp, #12
 8009216:	af00      	add	r7, sp, #0
 8009218:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800921a:	2300      	movs	r3, #0
    }
 800921c:	4618      	mov	r0, r3
 800921e:	370c      	adds	r7, #12
 8009220:	46bd      	mov	sp, r7
 8009222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009226:	4770      	bx	lr

08009228 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009228:	b580      	push	{r7, lr}
 800922a:	b084      	sub	sp, #16
 800922c:	af00      	add	r7, sp, #0
 800922e:	60f8      	str	r0, [r7, #12]
 8009230:	4608      	mov	r0, r1
 8009232:	4611      	mov	r1, r2
 8009234:	461a      	mov	r2, r3
 8009236:	4603      	mov	r3, r0
 8009238:	817b      	strh	r3, [r7, #10]
 800923a:	460b      	mov	r3, r1
 800923c:	813b      	strh	r3, [r7, #8]
 800923e:	4613      	mov	r3, r2
 8009240:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8009242:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8009246:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800924a:	4619      	mov	r1, r3
 800924c:	68f8      	ldr	r0, [r7, #12]
 800924e:	f000 f82a 	bl	80092a6 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8009252:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009256:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800925a:	4619      	mov	r1, r3
 800925c:	68f8      	ldr	r0, [r7, #12]
 800925e:	f000 f87e 	bl	800935e <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8009262:	bf00      	nop
 8009264:	3710      	adds	r7, #16
 8009266:	46bd      	mov	sp, r7
 8009268:	bd80      	pop	{r7, pc}

0800926a <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800926a:	b480      	push	{r7}
 800926c:	b083      	sub	sp, #12
 800926e:	af00      	add	r7, sp, #0
 8009270:	6078      	str	r0, [r7, #4]
 8009272:	460b      	mov	r3, r1
 8009274:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009276:	687b      	ldr	r3, [r7, #4]
 8009278:	887a      	ldrh	r2, [r7, #2]
 800927a:	809a      	strh	r2, [r3, #4]
    }
 800927c:	bf00      	nop
 800927e:	370c      	adds	r7, #12
 8009280:	46bd      	mov	sp, r7
 8009282:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009286:	4770      	bx	lr

08009288 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8009288:	b480      	push	{r7}
 800928a:	b083      	sub	sp, #12
 800928c:	af00      	add	r7, sp, #0
 800928e:	6078      	str	r0, [r7, #4]
 8009290:	460b      	mov	r3, r1
 8009292:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009294:	687b      	ldr	r3, [r7, #4]
 8009296:	887a      	ldrh	r2, [r7, #2]
 8009298:	80da      	strh	r2, [r3, #6]
    }
 800929a:	bf00      	nop
 800929c:	370c      	adds	r7, #12
 800929e:	46bd      	mov	sp, r7
 80092a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092a4:	4770      	bx	lr

080092a6 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 80092a6:	b580      	push	{r7, lr}
 80092a8:	b082      	sub	sp, #8
 80092aa:	af00      	add	r7, sp, #0
 80092ac:	6078      	str	r0, [r7, #4]
 80092ae:	460b      	mov	r3, r1
 80092b0:	807b      	strh	r3, [r7, #2]
 80092b2:	4613      	mov	r3, r2
 80092b4:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 80092b6:	687b      	ldr	r3, [r7, #4]
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	3330      	adds	r3, #48	@ 0x30
 80092bc:	681b      	ldr	r3, [r3, #0]
 80092be:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80092c2:	4611      	mov	r1, r2
 80092c4:	6878      	ldr	r0, [r7, #4]
 80092c6:	4798      	blx	r3
        setY(y);
 80092c8:	687b      	ldr	r3, [r7, #4]
 80092ca:	681b      	ldr	r3, [r3, #0]
 80092cc:	3334      	adds	r3, #52	@ 0x34
 80092ce:	681b      	ldr	r3, [r3, #0]
 80092d0:	f9b7 2000 	ldrsh.w	r2, [r7]
 80092d4:	4611      	mov	r1, r2
 80092d6:	6878      	ldr	r0, [r7, #4]
 80092d8:	4798      	blx	r3
    }
 80092da:	bf00      	nop
 80092dc:	3708      	adds	r7, #8
 80092de:	46bd      	mov	sp, r7
 80092e0:	bd80      	pop	{r7, pc}

080092e2 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 80092e2:	b480      	push	{r7}
 80092e4:	b083      	sub	sp, #12
 80092e6:	af00      	add	r7, sp, #0
 80092e8:	6078      	str	r0, [r7, #4]
 80092ea:	460b      	mov	r3, r1
 80092ec:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	887a      	ldrh	r2, [r7, #2]
 80092f2:	811a      	strh	r2, [r3, #8]
    }
 80092f4:	bf00      	nop
 80092f6:	370c      	adds	r7, #12
 80092f8:	46bd      	mov	sp, r7
 80092fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092fe:	4770      	bx	lr

08009300 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8009300:	b480      	push	{r7}
 8009302:	b083      	sub	sp, #12
 8009304:	af00      	add	r7, sp, #0
 8009306:	6078      	str	r0, [r7, #4]
 8009308:	460b      	mov	r3, r1
 800930a:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800930c:	687b      	ldr	r3, [r7, #4]
 800930e:	887a      	ldrh	r2, [r7, #2]
 8009310:	815a      	strh	r2, [r3, #10]
    }
 8009312:	bf00      	nop
 8009314:	370c      	adds	r7, #12
 8009316:	46bd      	mov	sp, r7
 8009318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800931c:	4770      	bx	lr

0800931e <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800931e:	b480      	push	{r7}
 8009320:	b083      	sub	sp, #12
 8009322:	af00      	add	r7, sp, #0
 8009324:	6078      	str	r0, [r7, #4]
    {
    }
 8009326:	bf00      	nop
 8009328:	370c      	adds	r7, #12
 800932a:	46bd      	mov	sp, r7
 800932c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009330:	4770      	bx	lr

08009332 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009332:	b480      	push	{r7}
 8009334:	b083      	sub	sp, #12
 8009336:	af00      	add	r7, sp, #0
 8009338:	6078      	str	r0, [r7, #4]
 800933a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800933c:	bf00      	nop
 800933e:	370c      	adds	r7, #12
 8009340:	46bd      	mov	sp, r7
 8009342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009346:	4770      	bx	lr

08009348 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009348:	b480      	push	{r7}
 800934a:	b083      	sub	sp, #12
 800934c:	af00      	add	r7, sp, #0
 800934e:	6078      	str	r0, [r7, #4]
 8009350:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009352:	bf00      	nop
 8009354:	370c      	adds	r7, #12
 8009356:	46bd      	mov	sp, r7
 8009358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800935c:	4770      	bx	lr

0800935e <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800935e:	b580      	push	{r7, lr}
 8009360:	b082      	sub	sp, #8
 8009362:	af00      	add	r7, sp, #0
 8009364:	6078      	str	r0, [r7, #4]
 8009366:	460b      	mov	r3, r1
 8009368:	807b      	strh	r3, [r7, #2]
 800936a:	4613      	mov	r3, r2
 800936c:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800936e:	687b      	ldr	r3, [r7, #4]
 8009370:	681b      	ldr	r3, [r3, #0]
 8009372:	3338      	adds	r3, #56	@ 0x38
 8009374:	681b      	ldr	r3, [r3, #0]
 8009376:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800937a:	4611      	mov	r1, r2
 800937c:	6878      	ldr	r0, [r7, #4]
 800937e:	4798      	blx	r3
        setHeight(height);
 8009380:	687b      	ldr	r3, [r7, #4]
 8009382:	681b      	ldr	r3, [r3, #0]
 8009384:	333c      	adds	r3, #60	@ 0x3c
 8009386:	681b      	ldr	r3, [r3, #0]
 8009388:	f9b7 2000 	ldrsh.w	r2, [r7]
 800938c:	4611      	mov	r1, r2
 800938e:	6878      	ldr	r0, [r7, #4]
 8009390:	4798      	blx	r3
    }
 8009392:	bf00      	nop
 8009394:	3708      	adds	r7, #8
 8009396:	46bd      	mov	sp, r7
 8009398:	bd80      	pop	{r7, pc}

0800939a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800939a:	b480      	push	{r7}
 800939c:	b083      	sub	sp, #12
 800939e:	af00      	add	r7, sp, #0
 80093a0:	6078      	str	r0, [r7, #4]
 80093a2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80093a4:	bf00      	nop
 80093a6:	370c      	adds	r7, #12
 80093a8:	46bd      	mov	sp, r7
 80093aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093ae:	4770      	bx	lr

080093b0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 80093b0:	b480      	push	{r7}
 80093b2:	b083      	sub	sp, #12
 80093b4:	af00      	add	r7, sp, #0
 80093b6:	6078      	str	r0, [r7, #4]
    {
    }
 80093b8:	bf00      	nop
 80093ba:	370c      	adds	r7, #12
 80093bc:	46bd      	mov	sp, r7
 80093be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093c2:	4770      	bx	lr

080093c4 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 80093c4:	b480      	push	{r7}
 80093c6:	b083      	sub	sp, #12
 80093c8:	af00      	add	r7, sp, #0
 80093ca:	6078      	str	r0, [r7, #4]
 80093cc:	460b      	mov	r3, r1
 80093ce:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 80093d0:	687b      	ldr	r3, [r7, #4]
 80093d2:	78fa      	ldrb	r2, [r7, #3]
 80093d4:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 80093d8:	bf00      	nop
 80093da:	370c      	adds	r7, #12
 80093dc:	46bd      	mov	sp, r7
 80093de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093e2:	4770      	bx	lr

080093e4 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 80093e4:	b480      	push	{r7}
 80093e6:	b083      	sub	sp, #12
 80093e8:	af00      	add	r7, sp, #0
 80093ea:	6078      	str	r0, [r7, #4]
    {
        return visible;
 80093ec:	687b      	ldr	r3, [r7, #4]
 80093ee:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 80093f2:	4618      	mov	r0, r3
 80093f4:	370c      	adds	r7, #12
 80093f6:	46bd      	mov	sp, r7
 80093f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093fc:	4770      	bx	lr

080093fe <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 80093fe:	b480      	push	{r7}
 8009400:	b083      	sub	sp, #12
 8009402:	af00      	add	r7, sp, #0
 8009404:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009406:	687b      	ldr	r3, [r7, #4]
 8009408:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 800940c:	4618      	mov	r0, r3
 800940e:	370c      	adds	r7, #12
 8009410:	46bd      	mov	sp, r7
 8009412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009416:	4770      	bx	lr

08009418 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009418:	b580      	push	{r7, lr}
 800941a:	b082      	sub	sp, #8
 800941c:	af00      	add	r7, sp, #0
 800941e:	6078      	str	r0, [r7, #4]
 8009420:	460b      	mov	r3, r1
 8009422:	807b      	strh	r3, [r7, #2]
 8009424:	4613      	mov	r3, r2
 8009426:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	681b      	ldr	r3, [r3, #0]
 800942c:	3354      	adds	r3, #84	@ 0x54
 800942e:	681b      	ldr	r3, [r3, #0]
 8009430:	8879      	ldrh	r1, [r7, #2]
 8009432:	687a      	ldr	r2, [r7, #4]
 8009434:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009438:	b292      	uxth	r2, r2
 800943a:	1a8a      	subs	r2, r1, r2
 800943c:	b292      	uxth	r2, r2
 800943e:	b210      	sxth	r0, r2
 8009440:	8839      	ldrh	r1, [r7, #0]
 8009442:	687a      	ldr	r2, [r7, #4]
 8009444:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009448:	b292      	uxth	r2, r2
 800944a:	1a8a      	subs	r2, r1, r2
 800944c:	b292      	uxth	r2, r2
 800944e:	b212      	sxth	r2, r2
 8009450:	4601      	mov	r1, r0
 8009452:	6878      	ldr	r0, [r7, #4]
 8009454:	4798      	blx	r3
    }
 8009456:	bf00      	nop
 8009458:	3708      	adds	r7, #8
 800945a:	46bd      	mov	sp, r7
 800945c:	bd80      	pop	{r7, pc}

0800945e <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800945e:	b480      	push	{r7}
 8009460:	b083      	sub	sp, #12
 8009462:	af00      	add	r7, sp, #0
 8009464:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009466:	687b      	ldr	r3, [r7, #4]
 8009468:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800946c:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800946e:	687b      	ldr	r3, [r7, #4]
 8009470:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009474:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009476:	687b      	ldr	r3, [r7, #4]
 8009478:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800947c:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 800947e:	bf00      	nop
 8009480:	370c      	adds	r7, #12
 8009482:	46bd      	mov	sp, r7
 8009484:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009488:	4770      	bx	lr

0800948a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800948a:	b580      	push	{r7, lr}
 800948c:	b084      	sub	sp, #16
 800948e:	af00      	add	r7, sp, #0
 8009490:	60f8      	str	r0, [r7, #12]
 8009492:	60b9      	str	r1, [r7, #8]
 8009494:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 8009496:	68f8      	ldr	r0, [r7, #12]
 8009498:	f7ff ffe1 	bl	800945e <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800949c:	687b      	ldr	r3, [r7, #4]
 800949e:	681a      	ldr	r2, [r3, #0]
 80094a0:	68fb      	ldr	r3, [r7, #12]
 80094a2:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 80094a4:	687b      	ldr	r3, [r7, #4]
 80094a6:	68fa      	ldr	r2, [r7, #12]
 80094a8:	601a      	str	r2, [r3, #0]
    }
 80094aa:	bf00      	nop
 80094ac:	3710      	adds	r7, #16
 80094ae:	46bd      	mov	sp, r7
 80094b0:	bd80      	pop	{r7, pc}

080094b2 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 80094b2:	b580      	push	{r7, lr}
 80094b4:	b084      	sub	sp, #16
 80094b6:	af00      	add	r7, sp, #0
 80094b8:	60f8      	str	r0, [r7, #12]
 80094ba:	607b      	str	r3, [r7, #4]
 80094bc:	460b      	mov	r3, r1
 80094be:	817b      	strh	r3, [r7, #10]
 80094c0:	4613      	mov	r3, r2
 80094c2:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 80094c4:	68fb      	ldr	r3, [r7, #12]
 80094c6:	4618      	mov	r0, r3
 80094c8:	f7ff ff8c 	bl	80093e4 <_ZNK8touchgfx8Drawable9isVisibleEv>
 80094cc:	4603      	mov	r3, r0
 80094ce:	2b00      	cmp	r3, #0
 80094d0:	d008      	beq.n	80094e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80094d2:	68fb      	ldr	r3, [r7, #12]
 80094d4:	4618      	mov	r0, r3
 80094d6:	f7ff ff92 	bl	80093fe <_ZNK8touchgfx8Drawable11isTouchableEv>
 80094da:	4603      	mov	r3, r0
 80094dc:	2b00      	cmp	r3, #0
 80094de:	d001      	beq.n	80094e4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 80094e0:	2301      	movs	r3, #1
 80094e2:	e000      	b.n	80094e6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 80094e4:	2300      	movs	r3, #0
 80094e6:	2b00      	cmp	r3, #0
 80094e8:	d002      	beq.n	80094f0 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 80094ea:	68fa      	ldr	r2, [r7, #12]
 80094ec:	687b      	ldr	r3, [r7, #4]
 80094ee:	601a      	str	r2, [r3, #0]
        }
    }
 80094f0:	bf00      	nop
 80094f2:	3710      	adds	r7, #16
 80094f4:	46bd      	mov	sp, r7
 80094f6:	bd80      	pop	{r7, pc}

080094f8 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 80094f8:	b580      	push	{r7, lr}
 80094fa:	b082      	sub	sp, #8
 80094fc:	af00      	add	r7, sp, #0
 80094fe:	6078      	str	r0, [r7, #4]
    {
 8009500:	4a06      	ldr	r2, [pc, #24]	@ (800951c <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	601a      	str	r2, [r3, #0]
    }
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	3304      	adds	r3, #4
 800950a:	4618      	mov	r0, r3
 800950c:	f000 ff36 	bl	800a37c <_ZN8touchgfx9ContainerD1Ev>
 8009510:	687b      	ldr	r3, [r7, #4]
 8009512:	4618      	mov	r0, r3
 8009514:	3708      	adds	r7, #8
 8009516:	46bd      	mov	sp, r7
 8009518:	bd80      	pop	{r7, pc}
 800951a:	bf00      	nop
 800951c:	080253c8 	.word	0x080253c8

08009520 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8009520:	b580      	push	{r7, lr}
 8009522:	b082      	sub	sp, #8
 8009524:	af00      	add	r7, sp, #0
 8009526:	6078      	str	r0, [r7, #4]
    }
 8009528:	6878      	ldr	r0, [r7, #4]
 800952a:	f7ff ffe5 	bl	80094f8 <_ZN8touchgfx6ScreenD1Ev>
 800952e:	213c      	movs	r1, #60	@ 0x3c
 8009530:	6878      	ldr	r0, [r7, #4]
 8009532:	f018 fe4c 	bl	80221ce <_ZdlPvj>
 8009536:	687b      	ldr	r3, [r7, #4]
 8009538:	4618      	mov	r0, r3
 800953a:	3708      	adds	r7, #8
 800953c:	46bd      	mov	sp, r7
 800953e:	bd80      	pop	{r7, pc}

08009540 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 8009540:	b480      	push	{r7}
 8009542:	b083      	sub	sp, #12
 8009544:	af00      	add	r7, sp, #0
 8009546:	6078      	str	r0, [r7, #4]
    {
    }
 8009548:	bf00      	nop
 800954a:	370c      	adds	r7, #12
 800954c:	46bd      	mov	sp, r7
 800954e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009552:	4770      	bx	lr

08009554 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 8009554:	b480      	push	{r7}
 8009556:	b083      	sub	sp, #12
 8009558:	af00      	add	r7, sp, #0
 800955a:	6078      	str	r0, [r7, #4]
    {
    }
 800955c:	bf00      	nop
 800955e:	370c      	adds	r7, #12
 8009560:	46bd      	mov	sp, r7
 8009562:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009566:	4770      	bx	lr

08009568 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8009568:	b480      	push	{r7}
 800956a:	b083      	sub	sp, #12
 800956c:	af00      	add	r7, sp, #0
 800956e:	6078      	str	r0, [r7, #4]
    {
    }
 8009570:	bf00      	nop
 8009572:	370c      	adds	r7, #12
 8009574:	46bd      	mov	sp, r7
 8009576:	f85d 7b04 	ldr.w	r7, [sp], #4
 800957a:	4770      	bx	lr

0800957c <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800957c:	b480      	push	{r7}
 800957e:	b083      	sub	sp, #12
 8009580:	af00      	add	r7, sp, #0
 8009582:	6078      	str	r0, [r7, #4]
    {
    }
 8009584:	bf00      	nop
 8009586:	370c      	adds	r7, #12
 8009588:	46bd      	mov	sp, r7
 800958a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800958e:	4770      	bx	lr

08009590 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009590:	b480      	push	{r7}
 8009592:	b083      	sub	sp, #12
 8009594:	af00      	add	r7, sp, #0
 8009596:	6078      	str	r0, [r7, #4]
 8009598:	460b      	mov	r3, r1
 800959a:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800959c:	bf00      	nop
 800959e:	370c      	adds	r7, #12
 80095a0:	46bd      	mov	sp, r7
 80095a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095a6:	4770      	bx	lr

080095a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 80095a8:	b580      	push	{r7, lr}
 80095aa:	b082      	sub	sp, #8
 80095ac:	af00      	add	r7, sp, #0
 80095ae:	6078      	str	r0, [r7, #4]
 80095b0:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 80095b2:	687b      	ldr	r3, [r7, #4]
 80095b4:	3304      	adds	r3, #4
 80095b6:	6839      	ldr	r1, [r7, #0]
 80095b8:	4618      	mov	r0, r3
 80095ba:	f003 fcb3 	bl	800cf24 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80095be:	bf00      	nop
 80095c0:	3708      	adds	r7, #8
 80095c2:	46bd      	mov	sp, r7
 80095c4:	bd80      	pop	{r7, pc}
	...

080095c8 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 80095c8:	b580      	push	{r7, lr}
 80095ca:	b082      	sub	sp, #8
 80095cc:	af00      	add	r7, sp, #0
 80095ce:	6078      	str	r0, [r7, #4]
 80095d0:	687b      	ldr	r3, [r7, #4]
 80095d2:	4618      	mov	r0, r3
 80095d4:	f7ff fdba 	bl	800914c <_ZN8touchgfx8DrawableC1Ev>
 80095d8:	4a03      	ldr	r2, [pc, #12]	@ (80095e8 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	601a      	str	r2, [r3, #0]
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	4618      	mov	r0, r3
 80095e2:	3708      	adds	r7, #8
 80095e4:	46bd      	mov	sp, r7
 80095e6:	bd80      	pop	{r7, pc}
 80095e8:	0802470c 	.word	0x0802470c

080095ec <_ZN8touchgfx6WidgetD1Ev>:
 80095ec:	b580      	push	{r7, lr}
 80095ee:	b082      	sub	sp, #8
 80095f0:	af00      	add	r7, sp, #0
 80095f2:	6078      	str	r0, [r7, #4]
 80095f4:	4a05      	ldr	r2, [pc, #20]	@ (800960c <_ZN8touchgfx6WidgetD1Ev+0x20>)
 80095f6:	687b      	ldr	r3, [r7, #4]
 80095f8:	601a      	str	r2, [r3, #0]
 80095fa:	687b      	ldr	r3, [r7, #4]
 80095fc:	4618      	mov	r0, r3
 80095fe:	f7ff fdd5 	bl	80091ac <_ZN8touchgfx8DrawableD1Ev>
 8009602:	687b      	ldr	r3, [r7, #4]
 8009604:	4618      	mov	r0, r3
 8009606:	3708      	adds	r7, #8
 8009608:	46bd      	mov	sp, r7
 800960a:	bd80      	pop	{r7, pc}
 800960c:	0802470c 	.word	0x0802470c

08009610 <_ZN8touchgfx6WidgetD0Ev>:
 8009610:	b580      	push	{r7, lr}
 8009612:	b082      	sub	sp, #8
 8009614:	af00      	add	r7, sp, #0
 8009616:	6078      	str	r0, [r7, #4]
 8009618:	6878      	ldr	r0, [r7, #4]
 800961a:	f7ff ffe7 	bl	80095ec <_ZN8touchgfx6WidgetD1Ev>
 800961e:	2128      	movs	r1, #40	@ 0x28
 8009620:	6878      	ldr	r0, [r7, #4]
 8009622:	f018 fdd4 	bl	80221ce <_ZdlPvj>
 8009626:	687b      	ldr	r3, [r7, #4]
 8009628:	4618      	mov	r0, r3
 800962a:	3708      	adds	r7, #8
 800962c:	46bd      	mov	sp, r7
 800962e:	bd80      	pop	{r7, pc}

08009630 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8009630:	b580      	push	{r7, lr}
 8009632:	b082      	sub	sp, #8
 8009634:	af00      	add	r7, sp, #0
 8009636:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 8009638:	687b      	ldr	r3, [r7, #4]
 800963a:	4618      	mov	r0, r3
 800963c:	2326      	movs	r3, #38	@ 0x26
 800963e:	461a      	mov	r2, r3
 8009640:	2100      	movs	r1, #0
 8009642:	f019 f878 	bl	8022736 <memset>
 8009646:	687b      	ldr	r3, [r7, #4]
 8009648:	4618      	mov	r0, r3
 800964a:	f7ff ffbd 	bl	80095c8 <_ZN8touchgfx6WidgetC1Ev>
 800964e:	4a09      	ldr	r2, [pc, #36]	@ (8009674 <_ZN8touchgfx3BoxC1Ev+0x44>)
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	601a      	str	r2, [r3, #0]
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	22ff      	movs	r2, #255	@ 0xff
 8009658:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 800965c:	687b      	ldr	r3, [r7, #4]
 800965e:	3328      	adds	r3, #40	@ 0x28
 8009660:	2100      	movs	r1, #0
 8009662:	4618      	mov	r0, r3
 8009664:	f7ff fd1c 	bl	80090a0 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8009668:	687b      	ldr	r3, [r7, #4]
 800966a:	4618      	mov	r0, r3
 800966c:	3708      	adds	r7, #8
 800966e:	46bd      	mov	sp, r7
 8009670:	bd80      	pop	{r7, pc}
 8009672:	bf00      	nop
 8009674:	08025038 	.word	0x08025038

08009678 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 8009678:	b480      	push	{r7}
 800967a:	b083      	sub	sp, #12
 800967c:	af00      	add	r7, sp, #0
 800967e:	6078      	str	r0, [r7, #4]
 8009680:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 8009682:	687b      	ldr	r3, [r7, #4]
 8009684:	683a      	ldr	r2, [r7, #0]
 8009686:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 8009688:	bf00      	nop
 800968a:	370c      	adds	r7, #12
 800968c:	46bd      	mov	sp, r7
 800968e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009692:	4770      	bx	lr

08009694 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8009694:	b580      	push	{r7, lr}
 8009696:	b082      	sub	sp, #8
 8009698:	af00      	add	r7, sp, #0
 800969a:	6078      	str	r0, [r7, #4]
 800969c:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800969e:	687b      	ldr	r3, [r7, #4]
 80096a0:	4618      	mov	r0, r3
 80096a2:	2326      	movs	r3, #38	@ 0x26
 80096a4:	461a      	mov	r2, r3
 80096a6:	2100      	movs	r1, #0
 80096a8:	f019 f845 	bl	8022736 <memset>
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	4618      	mov	r0, r3
 80096b0:	f7ff ff8a 	bl	80095c8 <_ZN8touchgfx6WidgetC1Ev>
 80096b4:	4a09      	ldr	r2, [pc, #36]	@ (80096dc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 80096b6:	687b      	ldr	r3, [r7, #4]
 80096b8:	601a      	str	r2, [r3, #0]
 80096ba:	687b      	ldr	r3, [r7, #4]
 80096bc:	683a      	ldr	r2, [r7, #0]
 80096be:	8812      	ldrh	r2, [r2, #0]
 80096c0:	84da      	strh	r2, [r3, #38]	@ 0x26
 80096c2:	687b      	ldr	r3, [r7, #4]
 80096c4:	22ff      	movs	r2, #255	@ 0xff
 80096c6:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 80096ca:	6839      	ldr	r1, [r7, #0]
 80096cc:	6878      	ldr	r0, [r7, #4]
 80096ce:	f005 fad3 	bl	800ec78 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80096d2:	687b      	ldr	r3, [r7, #4]
 80096d4:	4618      	mov	r0, r3
 80096d6:	3708      	adds	r7, #8
 80096d8:	46bd      	mov	sp, r7
 80096da:	bd80      	pop	{r7, pc}
 80096dc:	080251a4 	.word	0x080251a4

080096e0 <_ZN8touchgfx14AbstractButtonC1Ev>:
 */
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 80096e0:	b580      	push	{r7, lr}
 80096e2:	b082      	sub	sp, #8
 80096e4:	af00      	add	r7, sp, #0
 80096e6:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 80096e8:	687b      	ldr	r3, [r7, #4]
 80096ea:	4618      	mov	r0, r3
 80096ec:	2326      	movs	r3, #38	@ 0x26
 80096ee:	461a      	mov	r2, r3
 80096f0:	2100      	movs	r1, #0
 80096f2:	f019 f820 	bl	8022736 <memset>
 80096f6:	687b      	ldr	r3, [r7, #4]
 80096f8:	4618      	mov	r0, r3
 80096fa:	f7ff ff65 	bl	80095c8 <_ZN8touchgfx6WidgetC1Ev>
 80096fe:	4a0a      	ldr	r2, [pc, #40]	@ (8009728 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 8009700:	687b      	ldr	r3, [r7, #4]
 8009702:	601a      	str	r2, [r3, #0]
 8009704:	687b      	ldr	r3, [r7, #4]
 8009706:	2200      	movs	r2, #0
 8009708:	629a      	str	r2, [r3, #40]	@ 0x28
 800970a:	687b      	ldr	r3, [r7, #4]
 800970c:	2200      	movs	r2, #0
 800970e:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    {
        setTouchable(true);
 8009712:	687b      	ldr	r3, [r7, #4]
 8009714:	2101      	movs	r1, #1
 8009716:	4618      	mov	r0, r3
 8009718:	f7ff fe54 	bl	80093c4 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800971c:	687b      	ldr	r3, [r7, #4]
 800971e:	4618      	mov	r0, r3
 8009720:	3708      	adds	r7, #8
 8009722:	46bd      	mov	sp, r7
 8009724:	bd80      	pop	{r7, pc}
 8009726:	bf00      	nop
 8009728:	08024ec4 	.word	0x08024ec4

0800972c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800972c:	b480      	push	{r7}
 800972e:	b083      	sub	sp, #12
 8009730:	af00      	add	r7, sp, #0
 8009732:	6078      	str	r0, [r7, #4]
 8009734:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 8009736:	687b      	ldr	r3, [r7, #4]
 8009738:	683a      	ldr	r2, [r7, #0]
 800973a:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800973c:	bf00      	nop
 800973e:	370c      	adds	r7, #12
 8009740:	46bd      	mov	sp, r7
 8009742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009746:	4770      	bx	lr

08009748 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 8009748:	b580      	push	{r7, lr}
 800974a:	b082      	sub	sp, #8
 800974c:	af00      	add	r7, sp, #0
 800974e:	6078      	str	r0, [r7, #4]
 8009750:	4a05      	ldr	r2, [pc, #20]	@ (8009768 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 8009752:	687b      	ldr	r3, [r7, #4]
 8009754:	601a      	str	r2, [r3, #0]
 8009756:	687b      	ldr	r3, [r7, #4]
 8009758:	4618      	mov	r0, r3
 800975a:	f7ff ff47 	bl	80095ec <_ZN8touchgfx6WidgetD1Ev>
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	4618      	mov	r0, r3
 8009762:	3708      	adds	r7, #8
 8009764:	46bd      	mov	sp, r7
 8009766:	bd80      	pop	{r7, pc}
 8009768:	08024ec4 	.word	0x08024ec4

0800976c <_ZN8touchgfx14AbstractButtonD0Ev>:
 800976c:	b580      	push	{r7, lr}
 800976e:	b082      	sub	sp, #8
 8009770:	af00      	add	r7, sp, #0
 8009772:	6078      	str	r0, [r7, #4]
 8009774:	6878      	ldr	r0, [r7, #4]
 8009776:	f7ff ffe7 	bl	8009748 <_ZN8touchgfx14AbstractButtonD1Ev>
 800977a:	2130      	movs	r1, #48	@ 0x30
 800977c:	6878      	ldr	r0, [r7, #4]
 800977e:	f018 fd26 	bl	80221ce <_ZdlPvj>
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	4618      	mov	r0, r3
 8009786:	3708      	adds	r7, #8
 8009788:	46bd      	mov	sp, r7
 800978a:	bd80      	pop	{r7, pc}

0800978c <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 800978c:	b580      	push	{r7, lr}
 800978e:	b082      	sub	sp, #8
 8009790:	af00      	add	r7, sp, #0
 8009792:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 8009794:	687b      	ldr	r3, [r7, #4]
 8009796:	4618      	mov	r0, r3
 8009798:	f7ff ffa2 	bl	80096e0 <_ZN8touchgfx14AbstractButtonC1Ev>
 800979c:	4a0c      	ldr	r2, [pc, #48]	@ (80097d0 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800979e:	687b      	ldr	r3, [r7, #4]
 80097a0:	601a      	str	r2, [r3, #0]
 80097a2:	687b      	ldr	r3, [r7, #4]
 80097a4:	332e      	adds	r3, #46	@ 0x2e
 80097a6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80097aa:	4618      	mov	r0, r3
 80097ac:	f7ff fcbe 	bl	800912c <_ZN8touchgfx6BitmapC1Et>
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	3330      	adds	r3, #48	@ 0x30
 80097b4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80097b8:	4618      	mov	r0, r3
 80097ba:	f7ff fcb7 	bl	800912c <_ZN8touchgfx6BitmapC1Et>
 80097be:	687b      	ldr	r3, [r7, #4]
 80097c0:	22ff      	movs	r2, #255	@ 0xff
 80097c2:	f883 2032 	strb.w	r2, [r3, #50]	@ 0x32
    {
    }
 80097c6:	687b      	ldr	r3, [r7, #4]
 80097c8:	4618      	mov	r0, r3
 80097ca:	3708      	adds	r7, #8
 80097cc:	46bd      	mov	sp, r7
 80097ce:	bd80      	pop	{r7, pc}
 80097d0:	080250a0 	.word	0x080250a0

080097d4 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
 80097d4:	b580      	push	{r7, lr}
 80097d6:	b084      	sub	sp, #16
 80097d8:	af00      	add	r7, sp, #0
 80097da:	60f8      	str	r0, [r7, #12]
 80097dc:	60b9      	str	r1, [r7, #8]
 80097de:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bitmapPressed;
 80097e0:	68fb      	ldr	r3, [r7, #12]
 80097e2:	687a      	ldr	r2, [r7, #4]
 80097e4:	8812      	ldrh	r2, [r2, #0]
 80097e6:	869a      	strh	r2, [r3, #52]	@ 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80097e8:	68fb      	ldr	r3, [r7, #12]
 80097ea:	687a      	ldr	r2, [r7, #4]
 80097ec:	68b9      	ldr	r1, [r7, #8]
 80097ee:	4618      	mov	r0, r3
 80097f0:	f005 f92c 	bl	800ea4c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 80097f4:	bf00      	nop
 80097f6:	3710      	adds	r7, #16
 80097f8:	46bd      	mov	sp, r7
 80097fa:	bd80      	pop	{r7, pc}

080097fc <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 80097fc:	b480      	push	{r7}
 80097fe:	b083      	sub	sp, #12
 8009800:	af00      	add	r7, sp, #0
 8009802:	6078      	str	r0, [r7, #4]
 8009804:	460b      	mov	r3, r1
 8009806:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8009808:	4a06      	ldr	r2, [pc, #24]	@ (8009824 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	601a      	str	r2, [r3, #0]
 800980e:	687b      	ldr	r3, [r7, #4]
 8009810:	887a      	ldrh	r2, [r7, #2]
 8009812:	809a      	strh	r2, [r3, #4]
    }
 8009814:	687b      	ldr	r3, [r7, #4]
 8009816:	4618      	mov	r0, r3
 8009818:	370c      	adds	r7, #12
 800981a:	46bd      	mov	sp, r7
 800981c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009820:	4770      	bx	lr
 8009822:	bf00      	nop
 8009824:	08024420 	.word	0x08024420

08009828 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8009828:	b580      	push	{r7, lr}
 800982a:	b082      	sub	sp, #8
 800982c:	af00      	add	r7, sp, #0
 800982e:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009830:	687b      	ldr	r3, [r7, #4]
 8009832:	4618      	mov	r0, r3
 8009834:	2326      	movs	r3, #38	@ 0x26
 8009836:	461a      	mov	r2, r3
 8009838:	2100      	movs	r1, #0
 800983a:	f018 ff7c 	bl	8022736 <memset>
 800983e:	687b      	ldr	r3, [r7, #4]
 8009840:	4618      	mov	r0, r3
 8009842:	f7ff fec1 	bl	80095c8 <_ZN8touchgfx6WidgetC1Ev>
 8009846:	4a16      	ldr	r2, [pc, #88]	@ (80098a0 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8009848:	687b      	ldr	r3, [r7, #4]
 800984a:	601a      	str	r2, [r3, #0]
 800984c:	687b      	ldr	r3, [r7, #4]
 800984e:	3328      	adds	r3, #40	@ 0x28
 8009850:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009854:	4618      	mov	r0, r3
 8009856:	f7ff ffd1 	bl	80097fc <_ZN8touchgfx9TypedTextC1Et>
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	3330      	adds	r3, #48	@ 0x30
 800985e:	2100      	movs	r1, #0
 8009860:	4618      	mov	r0, r3
 8009862:	f7ff fc1d 	bl	80090a0 <_ZN8touchgfx9colortypeC1Em>
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	2200      	movs	r2, #0
 800986a:	869a      	strh	r2, [r3, #52]	@ 0x34
 800986c:	687b      	ldr	r3, [r7, #4]
 800986e:	22ff      	movs	r2, #255	@ 0xff
 8009870:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	2200      	movs	r2, #0
 8009878:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 800987c:	687b      	ldr	r3, [r7, #4]
 800987e:	2200      	movs	r2, #0
 8009880:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	2200      	movs	r2, #0
 8009888:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	333c      	adds	r3, #60	@ 0x3c
 8009890:	4618      	mov	r0, r3
 8009892:	f000 f8f0 	bl	8009a76 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 8009896:	687b      	ldr	r3, [r7, #4]
 8009898:	4618      	mov	r0, r3
 800989a:	3708      	adds	r7, #8
 800989c:	46bd      	mov	sp, r7
 800989e:	bd80      	pop	{r7, pc}
 80098a0:	08024fa8 	.word	0x08024fa8

080098a4 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 80098a4:	b590      	push	{r4, r7, lr}
 80098a6:	b087      	sub	sp, #28
 80098a8:	af00      	add	r7, sp, #0
 80098aa:	6178      	str	r0, [r7, #20]
 80098ac:	460b      	mov	r3, r1
 80098ae:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 80098b0:	697b      	ldr	r3, [r7, #20]
 80098b2:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 80098b6:	4611      	mov	r1, r2
 80098b8:	4618      	mov	r0, r3
 80098ba:	f7ff fd12 	bl	80092e2 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 80098be:	697b      	ldr	r3, [r7, #20]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	3384      	adds	r3, #132	@ 0x84
 80098c4:	681b      	ldr	r3, [r3, #0]
 80098c6:	697c      	ldr	r4, [r7, #20]
 80098c8:	463a      	mov	r2, r7
 80098ca:	6979      	ldr	r1, [r7, #20]
 80098cc:	4610      	mov	r0, r2
 80098ce:	4798      	blx	r3
 80098d0:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 80098d4:	463a      	mov	r2, r7
 80098d6:	ca07      	ldmia	r2, {r0, r1, r2}
 80098d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 80098dc:	bf00      	nop
 80098de:	371c      	adds	r7, #28
 80098e0:	46bd      	mov	sp, r7
 80098e2:	bd90      	pop	{r4, r7, pc}

080098e4 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80098e4:	b590      	push	{r4, r7, lr}
 80098e6:	b087      	sub	sp, #28
 80098e8:	af00      	add	r7, sp, #0
 80098ea:	6178      	str	r0, [r7, #20]
 80098ec:	460b      	mov	r3, r1
 80098ee:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 80098f0:	697b      	ldr	r3, [r7, #20]
 80098f2:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 80098f6:	4611      	mov	r1, r2
 80098f8:	4618      	mov	r0, r3
 80098fa:	f7ff fd01 	bl	8009300 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 80098fe:	697b      	ldr	r3, [r7, #20]
 8009900:	681b      	ldr	r3, [r3, #0]
 8009902:	3384      	adds	r3, #132	@ 0x84
 8009904:	681b      	ldr	r3, [r3, #0]
 8009906:	697c      	ldr	r4, [r7, #20]
 8009908:	463a      	mov	r2, r7
 800990a:	6979      	ldr	r1, [r7, #20]
 800990c:	4610      	mov	r0, r2
 800990e:	4798      	blx	r3
 8009910:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009914:	463a      	mov	r2, r7
 8009916:	ca07      	ldmia	r2, {r0, r1, r2}
 8009918:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800991c:	bf00      	nop
 800991e:	371c      	adds	r7, #28
 8009920:	46bd      	mov	sp, r7
 8009922:	bd90      	pop	{r4, r7, pc}

08009924 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 8009924:	b580      	push	{r7, lr}
 8009926:	b082      	sub	sp, #8
 8009928:	af00      	add	r7, sp, #0
 800992a:	6078      	str	r0, [r7, #4]
 800992c:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800992e:	6878      	ldr	r0, [r7, #4]
 8009930:	f7ff fbc5 	bl	80090be <_ZN8touchgfx4RectC1Ev>
    }
 8009934:	6878      	ldr	r0, [r7, #4]
 8009936:	3708      	adds	r7, #8
 8009938:	46bd      	mov	sp, r7
 800993a:	bd80      	pop	{r7, pc}

0800993c <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800993c:	b480      	push	{r7}
 800993e:	b083      	sub	sp, #12
 8009940:	af00      	add	r7, sp, #0
 8009942:	6078      	str	r0, [r7, #4]
 8009944:	460b      	mov	r3, r1
 8009946:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009948:	687b      	ldr	r3, [r7, #4]
 800994a:	78fa      	ldrb	r2, [r7, #3]
 800994c:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 8009950:	bf00      	nop
 8009952:	370c      	adds	r7, #12
 8009954:	46bd      	mov	sp, r7
 8009956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800995a:	4770      	bx	lr

0800995c <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800995c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800995e:	b085      	sub	sp, #20
 8009960:	af00      	add	r7, sp, #0
 8009962:	6078      	str	r0, [r7, #4]
 8009964:	460b      	mov	r3, r1
 8009966:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8009968:	687e      	ldr	r6, [r7, #4]
 800996a:	687b      	ldr	r3, [r7, #4]
 800996c:	681b      	ldr	r3, [r3, #0]
 800996e:	3334      	adds	r3, #52	@ 0x34
 8009970:	681c      	ldr	r4, [r3, #0]
 8009972:	887d      	ldrh	r5, [r7, #2]
 8009974:	6878      	ldr	r0, [r7, #4]
 8009976:	f000 f867 	bl	8009a48 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800997a:	4603      	mov	r3, r0
 800997c:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800997e:	4b1c      	ldr	r3, [pc, #112]	@ (80099f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009980:	681b      	ldr	r3, [r3, #0]
 8009982:	2b00      	cmp	r3, #0
 8009984:	d105      	bne.n	8009992 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 8009986:	4b1b      	ldr	r3, [pc, #108]	@ (80099f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 8009988:	4a1b      	ldr	r2, [pc, #108]	@ (80099f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800998a:	216c      	movs	r1, #108	@ 0x6c
 800998c:	481b      	ldr	r0, [pc, #108]	@ (80099fc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800998e:	f018 fccb 	bl	8022328 <__assert_func>
 8009992:	68fb      	ldr	r3, [r7, #12]
 8009994:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 8009996:	68bb      	ldr	r3, [r7, #8]
 8009998:	889a      	ldrh	r2, [r3, #4]
 800999a:	4b19      	ldr	r3, [pc, #100]	@ (8009a00 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800999c:	881b      	ldrh	r3, [r3, #0]
 800999e:	429a      	cmp	r2, r3
 80099a0:	bf34      	ite	cc
 80099a2:	2301      	movcc	r3, #1
 80099a4:	2300      	movcs	r3, #0
 80099a6:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80099a8:	2b00      	cmp	r3, #0
 80099aa:	d105      	bne.n	80099b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 80099ac:	4b15      	ldr	r3, [pc, #84]	@ (8009a04 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 80099ae:	4a12      	ldr	r2, [pc, #72]	@ (80099f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 80099b0:	216d      	movs	r1, #109	@ 0x6d
 80099b2:	4812      	ldr	r0, [pc, #72]	@ (80099fc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 80099b4:	f018 fcb8 	bl	8022328 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 80099b8:	4b13      	ldr	r3, [pc, #76]	@ (8009a08 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 80099ba:	681a      	ldr	r2, [r3, #0]
 80099bc:	4b0c      	ldr	r3, [pc, #48]	@ (80099f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 80099be:	6819      	ldr	r1, [r3, #0]
 80099c0:	68fb      	ldr	r3, [r7, #12]
 80099c2:	889b      	ldrh	r3, [r3, #4]
 80099c4:	005b      	lsls	r3, r3, #1
 80099c6:	440b      	add	r3, r1
 80099c8:	781b      	ldrb	r3, [r3, #0]
 80099ca:	009b      	lsls	r3, r3, #2
 80099cc:	4413      	add	r3, r2
 80099ce:	681b      	ldr	r3, [r3, #0]
 80099d0:	681a      	ldr	r2, [r3, #0]
 80099d2:	3230      	adds	r2, #48	@ 0x30
 80099d4:	6812      	ldr	r2, [r2, #0]
 80099d6:	4618      	mov	r0, r3
 80099d8:	4790      	blx	r2
 80099da:	4603      	mov	r3, r0
 80099dc:	1aeb      	subs	r3, r5, r3
 80099de:	b29b      	uxth	r3, r3
 80099e0:	b21b      	sxth	r3, r3
 80099e2:	4619      	mov	r1, r3
 80099e4:	4630      	mov	r0, r6
 80099e6:	47a0      	blx	r4
    }
 80099e8:	bf00      	nop
 80099ea:	3714      	adds	r7, #20
 80099ec:	46bd      	mov	sp, r7
 80099ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099f0:	20002e0c 	.word	0x20002e0c
 80099f4:	08023670 	.word	0x08023670
 80099f8:	080236b4 	.word	0x080236b4
 80099fc:	080236f0 	.word	0x080236f0
 8009a00:	20002e10 	.word	0x20002e10
 8009a04:	08023734 	.word	0x08023734
 8009a08:	20002e14 	.word	0x20002e14

08009a0c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8009a0c:	b580      	push	{r7, lr}
 8009a0e:	b082      	sub	sp, #8
 8009a10:	af00      	add	r7, sp, #0
 8009a12:	6078      	str	r0, [r7, #4]
 8009a14:	460b      	mov	r3, r1
 8009a16:	807b      	strh	r3, [r7, #2]
 8009a18:	4613      	mov	r3, r2
 8009a1a:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009a1c:	687a      	ldr	r2, [r7, #4]
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	681b      	ldr	r3, [r3, #0]
 8009a22:	3330      	adds	r3, #48	@ 0x30
 8009a24:	681b      	ldr	r3, [r3, #0]
 8009a26:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 8009a2a:	4610      	mov	r0, r2
 8009a2c:	4798      	blx	r3
        setBaselineY(baselineY);
 8009a2e:	687b      	ldr	r3, [r7, #4]
 8009a30:	681b      	ldr	r3, [r3, #0]
 8009a32:	3364      	adds	r3, #100	@ 0x64
 8009a34:	681b      	ldr	r3, [r3, #0]
 8009a36:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009a3a:	4611      	mov	r1, r2
 8009a3c:	6878      	ldr	r0, [r7, #4]
 8009a3e:	4798      	blx	r3
    }
 8009a40:	bf00      	nop
 8009a42:	3708      	adds	r7, #8
 8009a44:	46bd      	mov	sp, r7
 8009a46:	bd80      	pop	{r7, pc}

08009a48 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 8009a48:	b480      	push	{r7}
 8009a4a:	b083      	sub	sp, #12
 8009a4c:	af00      	add	r7, sp, #0
 8009a4e:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 8009a50:	687b      	ldr	r3, [r7, #4]
 8009a52:	3328      	adds	r3, #40	@ 0x28
    }
 8009a54:	4618      	mov	r0, r3
 8009a56:	370c      	adds	r7, #12
 8009a58:	46bd      	mov	sp, r7
 8009a5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a5e:	4770      	bx	lr

08009a60 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 8009a60:	b480      	push	{r7}
 8009a62:	b083      	sub	sp, #12
 8009a64:	af00      	add	r7, sp, #0
 8009a66:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009a68:	2300      	movs	r3, #0
    }
 8009a6a:	4618      	mov	r0, r3
 8009a6c:	370c      	adds	r7, #12
 8009a6e:	46bd      	mov	sp, r7
 8009a70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a74:	4770      	bx	lr

08009a76 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 8009a76:	b580      	push	{r7, lr}
 8009a78:	b084      	sub	sp, #16
 8009a7a:	af02      	add	r7, sp, #8
 8009a7c:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8009a7e:	6878      	ldr	r0, [r7, #4]
 8009a80:	f04f 33ff 	mov.w	r3, #4294967295
 8009a84:	9300      	str	r3, [sp, #0]
 8009a86:	f04f 33ff 	mov.w	r3, #4294967295
 8009a8a:	2200      	movs	r2, #0
 8009a8c:	2100      	movs	r1, #0
 8009a8e:	f7ff fb2d 	bl	80090ec <_ZN8touchgfx4RectC1Essss>
              text(0)
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	2200      	movs	r2, #0
 8009a96:	609a      	str	r2, [r3, #8]
        {
        }
 8009a98:	687b      	ldr	r3, [r7, #4]
 8009a9a:	4618      	mov	r0, r3
 8009a9c:	3708      	adds	r7, #8
 8009a9e:	46bd      	mov	sp, r7
 8009aa0:	bd80      	pop	{r7, pc}
	...

08009aa4 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8009aa4:	b580      	push	{r7, lr}
 8009aa6:	b082      	sub	sp, #8
 8009aa8:	af00      	add	r7, sp, #0
 8009aaa:	6078      	str	r0, [r7, #4]
 8009aac:	4a08      	ldr	r2, [pc, #32]	@ (8009ad0 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 8009aae:	687b      	ldr	r3, [r7, #4]
 8009ab0:	601a      	str	r2, [r3, #0]
 8009ab2:	687b      	ldr	r3, [r7, #4]
 8009ab4:	3328      	adds	r3, #40	@ 0x28
 8009ab6:	4618      	mov	r0, r3
 8009ab8:	f7fe fc10 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
 8009abc:	687b      	ldr	r3, [r7, #4]
 8009abe:	4618      	mov	r0, r3
 8009ac0:	f7ff fd94 	bl	80095ec <_ZN8touchgfx6WidgetD1Ev>
 8009ac4:	687b      	ldr	r3, [r7, #4]
 8009ac6:	4618      	mov	r0, r3
 8009ac8:	3708      	adds	r7, #8
 8009aca:	46bd      	mov	sp, r7
 8009acc:	bd80      	pop	{r7, pc}
 8009ace:	bf00      	nop
 8009ad0:	08024fa8 	.word	0x08024fa8

08009ad4 <_ZN8touchgfx8TextAreaD0Ev>:
 8009ad4:	b580      	push	{r7, lr}
 8009ad6:	b082      	sub	sp, #8
 8009ad8:	af00      	add	r7, sp, #0
 8009ada:	6078      	str	r0, [r7, #4]
 8009adc:	6878      	ldr	r0, [r7, #4]
 8009ade:	f7ff ffe1 	bl	8009aa4 <_ZN8touchgfx8TextAreaD1Ev>
 8009ae2:	2148      	movs	r1, #72	@ 0x48
 8009ae4:	6878      	ldr	r0, [r7, #4]
 8009ae6:	f018 fb72 	bl	80221ce <_ZdlPvj>
 8009aea:	687b      	ldr	r3, [r7, #4]
 8009aec:	4618      	mov	r0, r3
 8009aee:	3708      	adds	r7, #8
 8009af0:	46bd      	mov	sp, r7
 8009af2:	bd80      	pop	{r7, pc}

08009af4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 8009af4:	b580      	push	{r7, lr}
 8009af6:	b082      	sub	sp, #8
 8009af8:	af00      	add	r7, sp, #0
 8009afa:	6078      	str	r0, [r7, #4]
        : TextArea()
 8009afc:	687b      	ldr	r3, [r7, #4]
 8009afe:	4618      	mov	r0, r3
 8009b00:	f7ff fe92 	bl	8009828 <_ZN8touchgfx8TextAreaC1Ev>
 8009b04:	4a03      	ldr	r2, [pc, #12]	@ (8009b14 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 8009b06:	687b      	ldr	r3, [r7, #4]
 8009b08:	601a      	str	r2, [r3, #0]
    {
    }
 8009b0a:	687b      	ldr	r3, [r7, #4]
 8009b0c:	4618      	mov	r0, r3
 8009b0e:	3708      	adds	r7, #8
 8009b10:	46bd      	mov	sp, r7
 8009b12:	bd80      	pop	{r7, pc}
 8009b14:	08025114 	.word	0x08025114

08009b18 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 8009b18:	b580      	push	{r7, lr}
 8009b1a:	b082      	sub	sp, #8
 8009b1c:	af00      	add	r7, sp, #0
 8009b1e:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 8009b20:	687b      	ldr	r3, [r7, #4]
 8009b22:	4618      	mov	r0, r3
 8009b24:	f7ff fb62 	bl	80091ec <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8009b28:	bf00      	nop
 8009b2a:	3708      	adds	r7, #8
 8009b2c:	46bd      	mov	sp, r7
 8009b2e:	bd80      	pop	{r7, pc}

08009b30 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 8009b30:	b580      	push	{r7, lr}
 8009b32:	b082      	sub	sp, #8
 8009b34:	af00      	add	r7, sp, #0
 8009b36:	6078      	str	r0, [r7, #4]
 8009b38:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 8009b3a:	6878      	ldr	r0, [r7, #4]
 8009b3c:	f7ff ff9b 	bl	8009a76 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8009b40:	6878      	ldr	r0, [r7, #4]
 8009b42:	3708      	adds	r7, #8
 8009b44:	46bd      	mov	sp, r7
 8009b46:	bd80      	pop	{r7, pc}

08009b48 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 8009b48:	b580      	push	{r7, lr}
 8009b4a:	b082      	sub	sp, #8
 8009b4c:	af00      	add	r7, sp, #0
 8009b4e:	6078      	str	r0, [r7, #4]
 8009b50:	4a05      	ldr	r2, [pc, #20]	@ (8009b68 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	601a      	str	r2, [r3, #0]
 8009b56:	687b      	ldr	r3, [r7, #4]
 8009b58:	4618      	mov	r0, r3
 8009b5a:	f7ff ffa3 	bl	8009aa4 <_ZN8touchgfx8TextAreaD1Ev>
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	4618      	mov	r0, r3
 8009b62:	3708      	adds	r7, #8
 8009b64:	46bd      	mov	sp, r7
 8009b66:	bd80      	pop	{r7, pc}
 8009b68:	08025114 	.word	0x08025114

08009b6c <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 8009b6c:	b580      	push	{r7, lr}
 8009b6e:	b082      	sub	sp, #8
 8009b70:	af00      	add	r7, sp, #0
 8009b72:	6078      	str	r0, [r7, #4]
 8009b74:	6878      	ldr	r0, [r7, #4]
 8009b76:	f7ff ffe7 	bl	8009b48 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 8009b7a:	2148      	movs	r1, #72	@ 0x48
 8009b7c:	6878      	ldr	r0, [r7, #4]
 8009b7e:	f018 fb26 	bl	80221ce <_ZdlPvj>
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	4618      	mov	r0, r3
 8009b86:	3708      	adds	r7, #8
 8009b88:	46bd      	mov	sp, r7
 8009b8a:	bd80      	pop	{r7, pc}

08009b8c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 8009b8c:	b580      	push	{r7, lr}
 8009b8e:	b082      	sub	sp, #8
 8009b90:	af00      	add	r7, sp, #0
 8009b92:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	4618      	mov	r0, r3
 8009b98:	f7ff ffac 	bl	8009af4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 8009b9c:	4a05      	ldr	r2, [pc, #20]	@ (8009bb4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 8009b9e:	687b      	ldr	r3, [r7, #4]
 8009ba0:	601a      	str	r2, [r3, #0]
 8009ba2:	687b      	ldr	r3, [r7, #4]
 8009ba4:	2200      	movs	r2, #0
 8009ba6:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 8009ba8:	687b      	ldr	r3, [r7, #4]
 8009baa:	4618      	mov	r0, r3
 8009bac:	3708      	adds	r7, #8
 8009bae:	46bd      	mov	sp, r7
 8009bb0:	bd80      	pop	{r7, pc}
 8009bb2:	bf00      	nop
 8009bb4:	08024664 	.word	0x08024664

08009bb8 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 8009bb8:	b480      	push	{r7}
 8009bba:	b083      	sub	sp, #12
 8009bbc:	af00      	add	r7, sp, #0
 8009bbe:	6078      	str	r0, [r7, #4]
 8009bc0:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	683a      	ldr	r2, [r7, #0]
 8009bc6:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 8009bc8:	bf00      	nop
 8009bca:	370c      	adds	r7, #12
 8009bcc:	46bd      	mov	sp, r7
 8009bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bd2:	4770      	bx	lr

08009bd4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 8009bd4:	b480      	push	{r7}
 8009bd6:	b083      	sub	sp, #12
 8009bd8:	af00      	add	r7, sp, #0
 8009bda:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 8009bdc:	687b      	ldr	r3, [r7, #4]
 8009bde:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 8009be0:	4618      	mov	r0, r3
 8009be2:	370c      	adds	r7, #12
 8009be4:	46bd      	mov	sp, r7
 8009be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bea:	4770      	bx	lr

08009bec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 8009bec:	b580      	push	{r7, lr}
 8009bee:	b082      	sub	sp, #8
 8009bf0:	af00      	add	r7, sp, #0
 8009bf2:	6078      	str	r0, [r7, #4]
 8009bf4:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 8009bf6:	6839      	ldr	r1, [r7, #0]
 8009bf8:	6878      	ldr	r0, [r7, #4]
 8009bfa:	f7ff ffdd 	bl	8009bb8 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 8009bfe:	bf00      	nop
 8009c00:	3708      	adds	r7, #8
 8009c02:	46bd      	mov	sp, r7
 8009c04:	bd80      	pop	{r7, pc}

08009c06 <_ZN12MainViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 8009c06:	b480      	push	{r7}
 8009c08:	b083      	sub	sp, #12
 8009c0a:	af00      	add	r7, sp, #0
 8009c0c:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 8009c0e:	bf00      	nop
 8009c10:	370c      	adds	r7, #12
 8009c12:	46bd      	mov	sp, r7
 8009c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c18:	4770      	bx	lr
	...

08009c1c <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 8009c1c:	b580      	push	{r7, lr}
 8009c1e:	b082      	sub	sp, #8
 8009c20:	af00      	add	r7, sp, #0
 8009c22:	6078      	str	r0, [r7, #4]
 8009c24:	4a05      	ldr	r2, [pc, #20]	@ (8009c3c <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	601a      	str	r2, [r3, #0]
 8009c2a:	687b      	ldr	r3, [r7, #4]
 8009c2c:	4618      	mov	r0, r3
 8009c2e:	f7ff fc63 	bl	80094f8 <_ZN8touchgfx6ScreenD1Ev>
 8009c32:	687b      	ldr	r3, [r7, #4]
 8009c34:	4618      	mov	r0, r3
 8009c36:	3708      	adds	r7, #8
 8009c38:	46bd      	mov	sp, r7
 8009c3a:	bd80      	pop	{r7, pc}
 8009c3c:	08024630 	.word	0x08024630

08009c40 <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 8009c40:	b580      	push	{r7, lr}
 8009c42:	b082      	sub	sp, #8
 8009c44:	af00      	add	r7, sp, #0
 8009c46:	6078      	str	r0, [r7, #4]
 8009c48:	6878      	ldr	r0, [r7, #4]
 8009c4a:	f7ff ffe7 	bl	8009c1c <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 8009c4e:	2140      	movs	r1, #64	@ 0x40
 8009c50:	6878      	ldr	r0, [r7, #4]
 8009c52:	f018 fabc 	bl	80221ce <_ZdlPvj>
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	4618      	mov	r0, r3
 8009c5a:	3708      	adds	r7, #8
 8009c5c:	46bd      	mov	sp, r7
 8009c5e:	bd80      	pop	{r7, pc}

08009c60 <_ZN8touchgfx6ButtonD1Ev>:
class Button : public AbstractButton
 8009c60:	b580      	push	{r7, lr}
 8009c62:	b082      	sub	sp, #8
 8009c64:	af00      	add	r7, sp, #0
 8009c66:	6078      	str	r0, [r7, #4]
 8009c68:	4a05      	ldr	r2, [pc, #20]	@ (8009c80 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 8009c6a:	687b      	ldr	r3, [r7, #4]
 8009c6c:	601a      	str	r2, [r3, #0]
 8009c6e:	687b      	ldr	r3, [r7, #4]
 8009c70:	4618      	mov	r0, r3
 8009c72:	f7ff fd69 	bl	8009748 <_ZN8touchgfx14AbstractButtonD1Ev>
 8009c76:	687b      	ldr	r3, [r7, #4]
 8009c78:	4618      	mov	r0, r3
 8009c7a:	3708      	adds	r7, #8
 8009c7c:	46bd      	mov	sp, r7
 8009c7e:	bd80      	pop	{r7, pc}
 8009c80:	080250a0 	.word	0x080250a0

08009c84 <_ZN8touchgfx6ButtonD0Ev>:
 8009c84:	b580      	push	{r7, lr}
 8009c86:	b082      	sub	sp, #8
 8009c88:	af00      	add	r7, sp, #0
 8009c8a:	6078      	str	r0, [r7, #4]
 8009c8c:	6878      	ldr	r0, [r7, #4]
 8009c8e:	f7ff ffe7 	bl	8009c60 <_ZN8touchgfx6ButtonD1Ev>
 8009c92:	2134      	movs	r1, #52	@ 0x34
 8009c94:	6878      	ldr	r0, [r7, #4]
 8009c96:	f018 fa9a 	bl	80221ce <_ZdlPvj>
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	4618      	mov	r0, r3
 8009c9e:	3708      	adds	r7, #8
 8009ca0:	46bd      	mov	sp, r7
 8009ca2:	bd80      	pop	{r7, pc}

08009ca4 <_ZN8touchgfx12ToggleButtonC1Ev>:
class ToggleButton : public Button
 8009ca4:	b580      	push	{r7, lr}
 8009ca6:	b082      	sub	sp, #8
 8009ca8:	af00      	add	r7, sp, #0
 8009caa:	6078      	str	r0, [r7, #4]
 8009cac:	687b      	ldr	r3, [r7, #4]
 8009cae:	4618      	mov	r0, r3
 8009cb0:	f7ff fd6c 	bl	800978c <_ZN8touchgfx6ButtonC1Ev>
 8009cb4:	4a07      	ldr	r2, [pc, #28]	@ (8009cd4 <_ZN8touchgfx12ToggleButtonC1Ev+0x30>)
 8009cb6:	687b      	ldr	r3, [r7, #4]
 8009cb8:	601a      	str	r2, [r3, #0]
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	3334      	adds	r3, #52	@ 0x34
 8009cbe:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009cc2:	4618      	mov	r0, r3
 8009cc4:	f7ff fa32 	bl	800912c <_ZN8touchgfx6BitmapC1Et>
 8009cc8:	687b      	ldr	r3, [r7, #4]
 8009cca:	4618      	mov	r0, r3
 8009ccc:	3708      	adds	r7, #8
 8009cce:	46bd      	mov	sp, r7
 8009cd0:	bd80      	pop	{r7, pc}
 8009cd2:	bf00      	nop
 8009cd4:	08024f34 	.word	0x08024f34

08009cd8 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 8009cd8:	b590      	push	{r4, r7, lr}
 8009cda:	b0a9      	sub	sp, #164	@ 0xa4
 8009cdc:	af02      	add	r7, sp, #8
 8009cde:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
 8009ce0:	697b      	ldr	r3, [r7, #20]
 8009ce2:	4618      	mov	r0, r3
 8009ce4:	f000 faa0 	bl	800a228 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 8009ce8:	4ad6      	ldr	r2, [pc, #856]	@ (800a044 <_ZN12MainViewBaseC1Ev+0x36c>)
 8009cea:	697b      	ldr	r3, [r7, #20]
 8009cec:	601a      	str	r2, [r3, #0]
 8009cee:	697b      	ldr	r3, [r7, #20]
 8009cf0:	3340      	adds	r3, #64	@ 0x40
 8009cf2:	4618      	mov	r0, r3
 8009cf4:	f7ff fc9c 	bl	8009630 <_ZN8touchgfx3BoxC1Ev>
 8009cf8:	697b      	ldr	r3, [r7, #20]
 8009cfa:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 8009cfe:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009d02:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009d06:	4618      	mov	r0, r3
 8009d08:	f7ff fa10 	bl	800912c <_ZN8touchgfx6BitmapC1Et>
 8009d0c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8009d10:	4619      	mov	r1, r3
 8009d12:	4620      	mov	r0, r4
 8009d14:	f7ff fcbe 	bl	8009694 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8009d18:	697b      	ldr	r3, [r7, #20]
 8009d1a:	3398      	adds	r3, #152	@ 0x98
 8009d1c:	4618      	mov	r0, r3
 8009d1e:	f7ff ffc1 	bl	8009ca4 <_ZN8touchgfx12ToggleButtonC1Ev>
 8009d22:	697b      	ldr	r3, [r7, #20]
 8009d24:	33d0      	adds	r3, #208	@ 0xd0
 8009d26:	4618      	mov	r0, r3
 8009d28:	f7ff ff30 	bl	8009b8c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8009d2c:	697b      	ldr	r3, [r7, #20]
 8009d2e:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 8009d32:	4618      	mov	r0, r3
 8009d34:	f7ff ff2a 	bl	8009b8c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8009d38:	697b      	ldr	r3, [r7, #20]
 8009d3a:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 8009d3e:	4618      	mov	r0, r3
 8009d40:	f7ff ff24 	bl	8009b8c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8009d44:	697b      	ldr	r3, [r7, #20]
 8009d46:	f503 700b 	add.w	r0, r3, #556	@ 0x22c
 8009d4a:	4bbf      	ldr	r3, [pc, #764]	@ (800a048 <_ZN12MainViewBaseC1Ev+0x370>)
 8009d4c:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009d4e:	2300      	movs	r3, #0
 8009d50:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009d52:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8009d56:	cb0c      	ldmia	r3, {r2, r3}
 8009d58:	6979      	ldr	r1, [r7, #20]
 8009d5a:	f000 fa8b 	bl	800a274 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 320, 480);
 8009d5e:	697b      	ldr	r3, [r7, #20]
 8009d60:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 8009d64:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8009d68:	9300      	str	r3, [sp, #0]
 8009d6a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 8009d6e:	2200      	movs	r2, #0
 8009d70:	2100      	movs	r1, #0
 8009d72:	f7ff fa59 	bl	8009228 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8009d76:	697b      	ldr	r3, [r7, #20]
 8009d78:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 8009d7c:	2300      	movs	r3, #0
 8009d7e:	f887 3068 	strb.w	r3, [r7, #104]	@ 0x68
 8009d82:	2300      	movs	r3, #0
 8009d84:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 8009d88:	2300      	movs	r3, #0
 8009d8a:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 8009d8e:	f897 3068 	ldrb.w	r3, [r7, #104]	@ 0x68
 8009d92:	041a      	lsls	r2, r3, #16
 8009d94:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 8009d98:	021b      	lsls	r3, r3, #8
 8009d9a:	431a      	orrs	r2, r3
 8009d9c:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 8009da0:	4313      	orrs	r3, r2
 8009da2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009da6:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 8009daa:	4611      	mov	r1, r2
 8009dac:	4618      	mov	r0, r3
 8009dae:	f7ff f977 	bl	80090a0 <_ZN8touchgfx9colortypeC1Em>
 8009db2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8009db4:	4619      	mov	r1, r3
 8009db6:	4620      	mov	r0, r4
 8009db8:	f7ff fc5e 	bl	8009678 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 8009dbc:	697a      	ldr	r2, [r7, #20]
 8009dbe:	697b      	ldr	r3, [r7, #20]
 8009dc0:	3340      	adds	r3, #64	@ 0x40
 8009dc2:	4619      	mov	r1, r3
 8009dc4:	4610      	mov	r0, r2
 8009dc6:	f7ff fbef 	bl	80095a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    image1.setXY(0, 0);
 8009dca:	697b      	ldr	r3, [r7, #20]
 8009dcc:	336c      	adds	r3, #108	@ 0x6c
 8009dce:	2200      	movs	r2, #0
 8009dd0:	2100      	movs	r1, #0
 8009dd2:	4618      	mov	r0, r3
 8009dd4:	f7ff fa67 	bl	80092a6 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PIC_ID));
 8009dd8:	697b      	ldr	r3, [r7, #20]
 8009dda:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 8009dde:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8009de2:	2102      	movs	r1, #2
 8009de4:	4618      	mov	r0, r3
 8009de6:	f7ff f9a1 	bl	800912c <_ZN8touchgfx6BitmapC1Et>
 8009dea:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8009dee:	4619      	mov	r1, r3
 8009df0:	4620      	mov	r0, r4
 8009df2:	f004 ff41 	bl	800ec78 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(image1);
 8009df6:	697a      	ldr	r2, [r7, #20]
 8009df8:	697b      	ldr	r3, [r7, #20]
 8009dfa:	336c      	adds	r3, #108	@ 0x6c
 8009dfc:	4619      	mov	r1, r3
 8009dfe:	4610      	mov	r0, r2
 8009e00:	f7ff fbd2 	bl	80095a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    toggleButton1.setXY(88, 383);
 8009e04:	697b      	ldr	r3, [r7, #20]
 8009e06:	3398      	adds	r3, #152	@ 0x98
 8009e08:	f240 127f 	movw	r2, #383	@ 0x17f
 8009e0c:	2158      	movs	r1, #88	@ 0x58
 8009e0e:	4618      	mov	r0, r3
 8009e10:	f7ff fa49 	bl	80092a6 <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_OFF_NORMAL_ID));
 8009e14:	697b      	ldr	r3, [r7, #20]
 8009e16:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 8009e1a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8009e1e:	2101      	movs	r1, #1
 8009e20:	4618      	mov	r0, r3
 8009e22:	f7ff f983 	bl	800912c <_ZN8touchgfx6BitmapC1Et>
 8009e26:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8009e2a:	2100      	movs	r1, #0
 8009e2c:	4618      	mov	r0, r3
 8009e2e:	f7ff f97d 	bl	800912c <_ZN8touchgfx6BitmapC1Et>
 8009e32:	f107 0238 	add.w	r2, r7, #56	@ 0x38
 8009e36:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8009e3a:	4619      	mov	r1, r3
 8009e3c:	4620      	mov	r0, r4
 8009e3e:	f7ff fcc9 	bl	80097d4 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.forceState(true);
 8009e42:	697b      	ldr	r3, [r7, #20]
 8009e44:	3398      	adds	r3, #152	@ 0x98
 8009e46:	2101      	movs	r1, #1
 8009e48:	4618      	mov	r0, r3
 8009e4a:	f004 fa2d 	bl	800e2a8 <_ZN8touchgfx12ToggleButton10forceStateEb>
    toggleButton1.setAction(buttonCallback);
 8009e4e:	697b      	ldr	r3, [r7, #20]
 8009e50:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 8009e54:	697b      	ldr	r3, [r7, #20]
 8009e56:	f503 730b 	add.w	r3, r3, #556	@ 0x22c
 8009e5a:	4619      	mov	r1, r3
 8009e5c:	4610      	mov	r0, r2
 8009e5e:	f7ff fc65 	bl	800972c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(toggleButton1);
 8009e62:	697a      	ldr	r2, [r7, #20]
 8009e64:	697b      	ldr	r3, [r7, #20]
 8009e66:	3398      	adds	r3, #152	@ 0x98
 8009e68:	4619      	mov	r1, r3
 8009e6a:	4610      	mov	r0, r2
 8009e6c:	f7ff fb9c 	bl	80095a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    HUMVAL.setPosition(9, 24, 303, 76);
 8009e70:	697b      	ldr	r3, [r7, #20]
 8009e72:	f103 00d0 	add.w	r0, r3, #208	@ 0xd0
 8009e76:	234c      	movs	r3, #76	@ 0x4c
 8009e78:	9300      	str	r3, [sp, #0]
 8009e7a:	f240 132f 	movw	r3, #303	@ 0x12f
 8009e7e:	2218      	movs	r2, #24
 8009e80:	2109      	movs	r1, #9
 8009e82:	f7ff f9d1 	bl	8009228 <_ZN8touchgfx8Drawable11setPositionEssss>
    HUMVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 8009e86:	697b      	ldr	r3, [r7, #20]
 8009e88:	f103 04d0 	add.w	r4, r3, #208	@ 0xd0
 8009e8c:	23ff      	movs	r3, #255	@ 0xff
 8009e8e:	f887 306b 	strb.w	r3, [r7, #107]	@ 0x6b
 8009e92:	23ff      	movs	r3, #255	@ 0xff
 8009e94:	f887 306a 	strb.w	r3, [r7, #106]	@ 0x6a
 8009e98:	23ff      	movs	r3, #255	@ 0xff
 8009e9a:	f887 3069 	strb.w	r3, [r7, #105]	@ 0x69
 8009e9e:	f897 306b 	ldrb.w	r3, [r7, #107]	@ 0x6b
 8009ea2:	041a      	lsls	r2, r3, #16
 8009ea4:	f897 306a 	ldrb.w	r3, [r7, #106]	@ 0x6a
 8009ea8:	021b      	lsls	r3, r3, #8
 8009eaa:	431a      	orrs	r2, r3
 8009eac:	f897 3069 	ldrb.w	r3, [r7, #105]	@ 0x69
 8009eb0:	4313      	orrs	r3, r2
 8009eb2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009eb6:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 8009eba:	4611      	mov	r1, r2
 8009ebc:	4618      	mov	r0, r3
 8009ebe:	f7ff f8ef 	bl	80090a0 <_ZN8touchgfx9colortypeC1Em>
 8009ec2:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8009ec4:	66fc      	str	r4, [r7, #108]	@ 0x6c
 8009ec6:	623b      	str	r3, [r7, #32]
        color = newColor;
 8009ec8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8009eca:	6a3a      	ldr	r2, [r7, #32]
 8009ecc:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 8009ece:	bf00      	nop
    HUMVAL.setLinespacing(0);
 8009ed0:	697b      	ldr	r3, [r7, #20]
 8009ed2:	33d0      	adds	r3, #208	@ 0xd0
 8009ed4:	677b      	str	r3, [r7, #116]	@ 0x74
 8009ed6:	2300      	movs	r3, #0
 8009ed8:	f8a7 3072 	strh.w	r3, [r7, #114]	@ 0x72
        linespace = space;
 8009edc:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8009ede:	f8b7 2072 	ldrh.w	r2, [r7, #114]	@ 0x72
 8009ee2:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 8009ee4:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8009ee6:	681b      	ldr	r3, [r3, #0]
 8009ee8:	3384      	adds	r3, #132	@ 0x84
 8009eea:	681b      	ldr	r3, [r3, #0]
 8009eec:	6f7c      	ldr	r4, [r7, #116]	@ 0x74
 8009eee:	463a      	mov	r2, r7
 8009ef0:	6f79      	ldr	r1, [r7, #116]	@ 0x74
 8009ef2:	4610      	mov	r0, r2
 8009ef4:	4798      	blx	r3
 8009ef6:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009efa:	463a      	mov	r2, r7
 8009efc:	ca07      	ldmia	r2, {r0, r1, r2}
 8009efe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009f02:	bf00      	nop
    HUMVALBuffer[0] = 0;
 8009f04:	697b      	ldr	r3, [r7, #20]
 8009f06:	2200      	movs	r2, #0
 8009f08:	f8a3 21b4 	strh.w	r2, [r3, #436]	@ 0x1b4
    HUMVAL.setWildcard(HUMVALBuffer);
 8009f0c:	697b      	ldr	r3, [r7, #20]
 8009f0e:	f103 02d0 	add.w	r2, r3, #208	@ 0xd0
 8009f12:	697b      	ldr	r3, [r7, #20]
 8009f14:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 8009f18:	4619      	mov	r1, r3
 8009f1a:	4610      	mov	r0, r2
 8009f1c:	f7ff fe66 	bl	8009bec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    HUMVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPPC));
 8009f20:	697b      	ldr	r3, [r7, #20]
 8009f22:	f103 04d0 	add.w	r4, r3, #208	@ 0xd0
 8009f26:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8009f2a:	2103      	movs	r1, #3
 8009f2c:	4618      	mov	r0, r3
 8009f2e:	f7ff fc65 	bl	80097fc <_ZN8touchgfx9TypedTextC1Et>
 8009f32:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8009f36:	4619      	mov	r1, r3
 8009f38:	4620      	mov	r0, r4
 8009f3a:	f004 fd35 	bl	800e9a8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8009f3e:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 8009f42:	4618      	mov	r0, r3
 8009f44:	f7fe f9ca 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(HUMVAL);
 8009f48:	697a      	ldr	r2, [r7, #20]
 8009f4a:	697b      	ldr	r3, [r7, #20]
 8009f4c:	33d0      	adds	r3, #208	@ 0xd0
 8009f4e:	4619      	mov	r1, r3
 8009f50:	4610      	mov	r0, r2
 8009f52:	f7ff fb29 	bl	80095a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TEMPVAL.setPosition(9, 79, 303, 43);
 8009f56:	697b      	ldr	r3, [r7, #20]
 8009f58:	f503 708e 	add.w	r0, r3, #284	@ 0x11c
 8009f5c:	232b      	movs	r3, #43	@ 0x2b
 8009f5e:	9300      	str	r3, [sp, #0]
 8009f60:	f240 132f 	movw	r3, #303	@ 0x12f
 8009f64:	224f      	movs	r2, #79	@ 0x4f
 8009f66:	2109      	movs	r1, #9
 8009f68:	f7ff f95e 	bl	8009228 <_ZN8touchgfx8Drawable11setPositionEssss>
    TEMPVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 8009f6c:	697b      	ldr	r3, [r7, #20]
 8009f6e:	f503 748e 	add.w	r4, r3, #284	@ 0x11c
 8009f72:	23ff      	movs	r3, #255	@ 0xff
 8009f74:	f887 307b 	strb.w	r3, [r7, #123]	@ 0x7b
 8009f78:	23ff      	movs	r3, #255	@ 0xff
 8009f7a:	f887 307a 	strb.w	r3, [r7, #122]	@ 0x7a
 8009f7e:	23ff      	movs	r3, #255	@ 0xff
 8009f80:	f887 3079 	strb.w	r3, [r7, #121]	@ 0x79
 8009f84:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 8009f88:	041a      	lsls	r2, r3, #16
 8009f8a:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 8009f8e:	021b      	lsls	r3, r3, #8
 8009f90:	431a      	orrs	r2, r3
 8009f92:	f897 3079 	ldrb.w	r3, [r7, #121]	@ 0x79
 8009f96:	4313      	orrs	r3, r2
 8009f98:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 8009f9c:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 8009fa0:	4611      	mov	r1, r2
 8009fa2:	4618      	mov	r0, r3
 8009fa4:	f7ff f87c 	bl	80090a0 <_ZN8touchgfx9colortypeC1Em>
 8009fa8:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8009faa:	67fc      	str	r4, [r7, #124]	@ 0x7c
 8009fac:	61fb      	str	r3, [r7, #28]
        color = newColor;
 8009fae:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8009fb0:	69fa      	ldr	r2, [r7, #28]
 8009fb2:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 8009fb4:	bf00      	nop
    TEMPVAL.setLinespacing(0);
 8009fb6:	697b      	ldr	r3, [r7, #20]
 8009fb8:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 8009fbc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8009fc0:	2300      	movs	r3, #0
 8009fc2:	f8a7 3082 	strh.w	r3, [r7, #130]	@ 0x82
        linespace = space;
 8009fc6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8009fca:	f8b7 2082 	ldrh.w	r2, [r7, #130]	@ 0x82
 8009fce:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 8009fd0:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8009fd4:	681b      	ldr	r3, [r3, #0]
 8009fd6:	3384      	adds	r3, #132	@ 0x84
 8009fd8:	681b      	ldr	r3, [r3, #0]
 8009fda:	f8d7 4084 	ldr.w	r4, [r7, #132]	@ 0x84
 8009fde:	463a      	mov	r2, r7
 8009fe0:	f8d7 1084 	ldr.w	r1, [r7, #132]	@ 0x84
 8009fe4:	4610      	mov	r0, r2
 8009fe6:	4798      	blx	r3
 8009fe8:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009fec:	463a      	mov	r2, r7
 8009fee:	ca07      	ldmia	r2, {r0, r1, r2}
 8009ff0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009ff4:	bf00      	nop
    TEMPVALBuffer[0] = 0;
 8009ff6:	697b      	ldr	r3, [r7, #20]
 8009ff8:	2200      	movs	r2, #0
 8009ffa:	f8a3 21dc 	strh.w	r2, [r3, #476]	@ 0x1dc
    TEMPVAL.setWildcard(TEMPVALBuffer);
 8009ffe:	697b      	ldr	r3, [r7, #20]
 800a000:	f503 728e 	add.w	r2, r3, #284	@ 0x11c
 800a004:	697b      	ldr	r3, [r7, #20]
 800a006:	f503 73ee 	add.w	r3, r3, #476	@ 0x1dc
 800a00a:	4619      	mov	r1, r3
 800a00c:	4610      	mov	r0, r2
 800a00e:	f7ff fded 	bl	8009bec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TEMPVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0MT1));
 800a012:	697b      	ldr	r3, [r7, #20]
 800a014:	f503 748e 	add.w	r4, r3, #284	@ 0x11c
 800a018:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800a01c:	2102      	movs	r1, #2
 800a01e:	4618      	mov	r0, r3
 800a020:	f7ff fbec 	bl	80097fc <_ZN8touchgfx9TypedTextC1Et>
 800a024:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800a028:	4619      	mov	r1, r3
 800a02a:	4620      	mov	r0, r4
 800a02c:	f004 fcbc 	bl	800e9a8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a030:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800a034:	4618      	mov	r0, r3
 800a036:	f7fe f951 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(TEMPVAL);
 800a03a:	697a      	ldr	r2, [r7, #20]
 800a03c:	697b      	ldr	r3, [r7, #20]
 800a03e:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800a042:	e003      	b.n	800a04c <_ZN12MainViewBaseC1Ev+0x374>
 800a044:	080245e0 	.word	0x080245e0
 800a048:	0800a1ff 	.word	0x0800a1ff
 800a04c:	4619      	mov	r1, r3
 800a04e:	4610      	mov	r0, r2
 800a050:	f7ff faaa 	bl	80095a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ADCVAL.setPosition(9, 147, 303, 43);
 800a054:	697b      	ldr	r3, [r7, #20]
 800a056:	f503 70b4 	add.w	r0, r3, #360	@ 0x168
 800a05a:	232b      	movs	r3, #43	@ 0x2b
 800a05c:	9300      	str	r3, [sp, #0]
 800a05e:	f240 132f 	movw	r3, #303	@ 0x12f
 800a062:	2293      	movs	r2, #147	@ 0x93
 800a064:	2109      	movs	r1, #9
 800a066:	f7ff f8df 	bl	8009228 <_ZN8touchgfx8Drawable11setPositionEssss>
    ADCVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a06a:	697b      	ldr	r3, [r7, #20]
 800a06c:	f503 74b4 	add.w	r4, r3, #360	@ 0x168
 800a070:	23ff      	movs	r3, #255	@ 0xff
 800a072:	f887 308b 	strb.w	r3, [r7, #139]	@ 0x8b
 800a076:	23ff      	movs	r3, #255	@ 0xff
 800a078:	f887 308a 	strb.w	r3, [r7, #138]	@ 0x8a
 800a07c:	23ff      	movs	r3, #255	@ 0xff
 800a07e:	f887 3089 	strb.w	r3, [r7, #137]	@ 0x89
 800a082:	f897 308b 	ldrb.w	r3, [r7, #139]	@ 0x8b
 800a086:	041a      	lsls	r2, r3, #16
 800a088:	f897 308a 	ldrb.w	r3, [r7, #138]	@ 0x8a
 800a08c:	021b      	lsls	r3, r3, #8
 800a08e:	431a      	orrs	r2, r3
 800a090:	f897 3089 	ldrb.w	r3, [r7, #137]	@ 0x89
 800a094:	4313      	orrs	r3, r2
 800a096:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a09a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800a09e:	4611      	mov	r1, r2
 800a0a0:	4618      	mov	r0, r3
 800a0a2:	f7fe fffd 	bl	80090a0 <_ZN8touchgfx9colortypeC1Em>
 800a0a6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800a0a8:	f8c7 408c 	str.w	r4, [r7, #140]	@ 0x8c
 800a0ac:	61bb      	str	r3, [r7, #24]
        color = newColor;
 800a0ae:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a0b2:	69ba      	ldr	r2, [r7, #24]
 800a0b4:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a0b6:	bf00      	nop
    ADCVAL.setLinespacing(0);
 800a0b8:	697b      	ldr	r3, [r7, #20]
 800a0ba:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800a0be:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800a0c2:	2300      	movs	r3, #0
 800a0c4:	f8a7 3092 	strh.w	r3, [r7, #146]	@ 0x92
        linespace = space;
 800a0c8:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800a0cc:	f8b7 2092 	ldrh.w	r2, [r7, #146]	@ 0x92
 800a0d0:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a0d2:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800a0d6:	681b      	ldr	r3, [r3, #0]
 800a0d8:	3384      	adds	r3, #132	@ 0x84
 800a0da:	681b      	ldr	r3, [r3, #0]
 800a0dc:	f8d7 4094 	ldr.w	r4, [r7, #148]	@ 0x94
 800a0e0:	463a      	mov	r2, r7
 800a0e2:	f8d7 1094 	ldr.w	r1, [r7, #148]	@ 0x94
 800a0e6:	4610      	mov	r0, r2
 800a0e8:	4798      	blx	r3
 800a0ea:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a0ee:	463a      	mov	r2, r7
 800a0f0:	ca07      	ldmia	r2, {r0, r1, r2}
 800a0f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a0f6:	bf00      	nop
    ADCVALBuffer[0] = 0;
 800a0f8:	697b      	ldr	r3, [r7, #20]
 800a0fa:	2200      	movs	r2, #0
 800a0fc:	f8a3 2204 	strh.w	r2, [r3, #516]	@ 0x204
    ADCVAL.setWildcard(ADCVALBuffer);
 800a100:	697b      	ldr	r3, [r7, #20]
 800a102:	f503 72b4 	add.w	r2, r3, #360	@ 0x168
 800a106:	697b      	ldr	r3, [r7, #20]
 800a108:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800a10c:	4619      	mov	r1, r3
 800a10e:	4610      	mov	r0, r2
 800a110:	f7ff fd6c 	bl	8009bec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ADCVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSQP));
 800a114:	697b      	ldr	r3, [r7, #20]
 800a116:	f503 74b4 	add.w	r4, r3, #360	@ 0x168
 800a11a:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800a11e:	2101      	movs	r1, #1
 800a120:	4618      	mov	r0, r3
 800a122:	f7ff fb6b 	bl	80097fc <_ZN8touchgfx9TypedTextC1Et>
 800a126:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800a12a:	4619      	mov	r1, r3
 800a12c:	4620      	mov	r0, r4
 800a12e:	f004 fc3b 	bl	800e9a8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a132:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800a136:	4618      	mov	r0, r3
 800a138:	f7fe f8d0 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(ADCVAL);
 800a13c:	697a      	ldr	r2, [r7, #20]
 800a13e:	697b      	ldr	r3, [r7, #20]
 800a140:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800a144:	4619      	mov	r1, r3
 800a146:	4610      	mov	r0, r2
 800a148:	f7ff fa2e 	bl	80095a8 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800a14c:	697b      	ldr	r3, [r7, #20]
 800a14e:	4618      	mov	r0, r3
 800a150:	379c      	adds	r7, #156	@ 0x9c
 800a152:	46bd      	mov	sp, r7
 800a154:	bd90      	pop	{r4, r7, pc}
 800a156:	bf00      	nop

0800a158 <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 800a158:	b580      	push	{r7, lr}
 800a15a:	b082      	sub	sp, #8
 800a15c:	af00      	add	r7, sp, #0
 800a15e:	6078      	str	r0, [r7, #4]
 800a160:	4a18      	ldr	r2, [pc, #96]	@ (800a1c4 <_ZN12MainViewBaseD1Ev+0x6c>)
 800a162:	687b      	ldr	r3, [r7, #4]
 800a164:	601a      	str	r2, [r3, #0]
{

}
 800a166:	687b      	ldr	r3, [r7, #4]
 800a168:	f503 730b 	add.w	r3, r3, #556	@ 0x22c
 800a16c:	4618      	mov	r0, r3
 800a16e:	f000 f8c1 	bl	800a2f4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800a172:	687b      	ldr	r3, [r7, #4]
 800a174:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800a178:	4618      	mov	r0, r3
 800a17a:	f000 f8dd 	bl	800a338 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800a184:	4618      	mov	r0, r3
 800a186:	f000 f8d7 	bl	800a338 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a18a:	687b      	ldr	r3, [r7, #4]
 800a18c:	33d0      	adds	r3, #208	@ 0xd0
 800a18e:	4618      	mov	r0, r3
 800a190:	f000 f8d2 	bl	800a338 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a194:	687b      	ldr	r3, [r7, #4]
 800a196:	3398      	adds	r3, #152	@ 0x98
 800a198:	4618      	mov	r0, r3
 800a19a:	f000 f955 	bl	800a448 <_ZN8touchgfx12ToggleButtonD1Ev>
 800a19e:	687b      	ldr	r3, [r7, #4]
 800a1a0:	336c      	adds	r3, #108	@ 0x6c
 800a1a2:	4618      	mov	r0, r3
 800a1a4:	f000 f92e 	bl	800a404 <_ZN8touchgfx5ImageD1Ev>
 800a1a8:	687b      	ldr	r3, [r7, #4]
 800a1aa:	3340      	adds	r3, #64	@ 0x40
 800a1ac:	4618      	mov	r0, r3
 800a1ae:	f000 f907 	bl	800a3c0 <_ZN8touchgfx3BoxD1Ev>
 800a1b2:	687b      	ldr	r3, [r7, #4]
 800a1b4:	4618      	mov	r0, r3
 800a1b6:	f7ff fd31 	bl	8009c1c <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800a1ba:	687b      	ldr	r3, [r7, #4]
 800a1bc:	4618      	mov	r0, r3
 800a1be:	3708      	adds	r7, #8
 800a1c0:	46bd      	mov	sp, r7
 800a1c2:	bd80      	pop	{r7, pc}
 800a1c4:	080245e0 	.word	0x080245e0

0800a1c8 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800a1c8:	b580      	push	{r7, lr}
 800a1ca:	b082      	sub	sp, #8
 800a1cc:	af00      	add	r7, sp, #0
 800a1ce:	6078      	str	r0, [r7, #4]
}
 800a1d0:	6878      	ldr	r0, [r7, #4]
 800a1d2:	f7ff ffc1 	bl	800a158 <_ZN12MainViewBaseD1Ev>
 800a1d6:	f44f 710f 	mov.w	r1, #572	@ 0x23c
 800a1da:	6878      	ldr	r0, [r7, #4]
 800a1dc:	f017 fff7 	bl	80221ce <_ZdlPvj>
 800a1e0:	687b      	ldr	r3, [r7, #4]
 800a1e2:	4618      	mov	r0, r3
 800a1e4:	3708      	adds	r7, #8
 800a1e6:	46bd      	mov	sp, r7
 800a1e8:	bd80      	pop	{r7, pc}

0800a1ea <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 800a1ea:	b480      	push	{r7}
 800a1ec:	b083      	sub	sp, #12
 800a1ee:	af00      	add	r7, sp, #0
 800a1f0:	6078      	str	r0, [r7, #4]

}
 800a1f2:	bf00      	nop
 800a1f4:	370c      	adds	r7, #12
 800a1f6:	46bd      	mov	sp, r7
 800a1f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1fc:	4770      	bx	lr

0800a1fe <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800a1fe:	b580      	push	{r7, lr}
 800a200:	b082      	sub	sp, #8
 800a202:	af00      	add	r7, sp, #0
 800a204:	6078      	str	r0, [r7, #4]
 800a206:	6039      	str	r1, [r7, #0]
    if (&src == &toggleButton1)
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	3398      	adds	r3, #152	@ 0x98
 800a20c:	683a      	ldr	r2, [r7, #0]
 800a20e:	429a      	cmp	r2, r3
 800a210:	d105      	bne.n	800a21e <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 800a212:	687b      	ldr	r3, [r7, #4]
 800a214:	681b      	ldr	r3, [r3, #0]
 800a216:	332c      	adds	r3, #44	@ 0x2c
 800a218:	681b      	ldr	r3, [r3, #0]
 800a21a:	6878      	ldr	r0, [r7, #4]
 800a21c:	4798      	blx	r3
    }
}
 800a21e:	bf00      	nop
 800a220:	3708      	adds	r7, #8
 800a222:	46bd      	mov	sp, r7
 800a224:	bd80      	pop	{r7, pc}
	...

0800a228 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 800a228:	b580      	push	{r7, lr}
 800a22a:	b082      	sub	sp, #8
 800a22c:	af00      	add	r7, sp, #0
 800a22e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800a230:	687b      	ldr	r3, [r7, #4]
 800a232:	4618      	mov	r0, r3
 800a234:	f007 fd88 	bl	8011d48 <_ZN8touchgfx6ScreenC1Ev>
 800a238:	4a05      	ldr	r2, [pc, #20]	@ (800a250 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	601a      	str	r2, [r3, #0]
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	2200      	movs	r2, #0
 800a242:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800a244:	687b      	ldr	r3, [r7, #4]
 800a246:	4618      	mov	r0, r3
 800a248:	3708      	adds	r7, #8
 800a24a:	46bd      	mov	sp, r7
 800a24c:	bd80      	pop	{r7, pc}
 800a24e:	bf00      	nop
 800a250:	08024630 	.word	0x08024630

0800a254 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800a254:	b480      	push	{r7}
 800a256:	b083      	sub	sp, #12
 800a258:	af00      	add	r7, sp, #0
 800a25a:	6078      	str	r0, [r7, #4]
 800a25c:	4a04      	ldr	r2, [pc, #16]	@ (800a270 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800a25e:	687b      	ldr	r3, [r7, #4]
 800a260:	601a      	str	r2, [r3, #0]
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	4618      	mov	r0, r3
 800a266:	370c      	adds	r7, #12
 800a268:	46bd      	mov	sp, r7
 800a26a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a26e:	4770      	bx	lr
 800a270:	080246f4 	.word	0x080246f4

0800a274 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800a274:	b580      	push	{r7, lr}
 800a276:	b084      	sub	sp, #16
 800a278:	af00      	add	r7, sp, #0
 800a27a:	60f8      	str	r0, [r7, #12]
 800a27c:	60b9      	str	r1, [r7, #8]
 800a27e:	4639      	mov	r1, r7
 800a280:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800a284:	68fb      	ldr	r3, [r7, #12]
 800a286:	4618      	mov	r0, r3
 800a288:	f7ff ffe4 	bl	800a254 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800a28c:	4a08      	ldr	r2, [pc, #32]	@ (800a2b0 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800a28e:	68fb      	ldr	r3, [r7, #12]
 800a290:	601a      	str	r2, [r3, #0]
 800a292:	68fb      	ldr	r3, [r7, #12]
 800a294:	68ba      	ldr	r2, [r7, #8]
 800a296:	605a      	str	r2, [r3, #4]
 800a298:	68fb      	ldr	r3, [r7, #12]
 800a29a:	3308      	adds	r3, #8
 800a29c:	463a      	mov	r2, r7
 800a29e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a2a2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800a2a6:	68fb      	ldr	r3, [r7, #12]
 800a2a8:	4618      	mov	r0, r3
 800a2aa:	3710      	adds	r7, #16
 800a2ac:	46bd      	mov	sp, r7
 800a2ae:	bd80      	pop	{r7, pc}
 800a2b0:	08024618 	.word	0x08024618

0800a2b4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800a2b4:	b480      	push	{r7}
 800a2b6:	b083      	sub	sp, #12
 800a2b8:	af00      	add	r7, sp, #0
 800a2ba:	6078      	str	r0, [r7, #4]
    }
 800a2bc:	4a04      	ldr	r2, [pc, #16]	@ (800a2d0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800a2be:	687b      	ldr	r3, [r7, #4]
 800a2c0:	601a      	str	r2, [r3, #0]
 800a2c2:	687b      	ldr	r3, [r7, #4]
 800a2c4:	4618      	mov	r0, r3
 800a2c6:	370c      	adds	r7, #12
 800a2c8:	46bd      	mov	sp, r7
 800a2ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2ce:	4770      	bx	lr
 800a2d0:	080246f4 	.word	0x080246f4

0800a2d4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800a2d4:	b580      	push	{r7, lr}
 800a2d6:	b082      	sub	sp, #8
 800a2d8:	af00      	add	r7, sp, #0
 800a2da:	6078      	str	r0, [r7, #4]
    }
 800a2dc:	6878      	ldr	r0, [r7, #4]
 800a2de:	f7ff ffe9 	bl	800a2b4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800a2e2:	2104      	movs	r1, #4
 800a2e4:	6878      	ldr	r0, [r7, #4]
 800a2e6:	f017 ff72 	bl	80221ce <_ZdlPvj>
 800a2ea:	687b      	ldr	r3, [r7, #4]
 800a2ec:	4618      	mov	r0, r3
 800a2ee:	3708      	adds	r7, #8
 800a2f0:	46bd      	mov	sp, r7
 800a2f2:	bd80      	pop	{r7, pc}

0800a2f4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a2f4:	b580      	push	{r7, lr}
 800a2f6:	b082      	sub	sp, #8
 800a2f8:	af00      	add	r7, sp, #0
 800a2fa:	6078      	str	r0, [r7, #4]
 800a2fc:	4a05      	ldr	r2, [pc, #20]	@ (800a314 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800a2fe:	687b      	ldr	r3, [r7, #4]
 800a300:	601a      	str	r2, [r3, #0]
 800a302:	687b      	ldr	r3, [r7, #4]
 800a304:	4618      	mov	r0, r3
 800a306:	f7ff ffd5 	bl	800a2b4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800a30a:	687b      	ldr	r3, [r7, #4]
 800a30c:	4618      	mov	r0, r3
 800a30e:	3708      	adds	r7, #8
 800a310:	46bd      	mov	sp, r7
 800a312:	bd80      	pop	{r7, pc}
 800a314:	08024618 	.word	0x08024618

0800a318 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800a318:	b580      	push	{r7, lr}
 800a31a:	b082      	sub	sp, #8
 800a31c:	af00      	add	r7, sp, #0
 800a31e:	6078      	str	r0, [r7, #4]
 800a320:	6878      	ldr	r0, [r7, #4]
 800a322:	f7ff ffe7 	bl	800a2f4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800a326:	2110      	movs	r1, #16
 800a328:	6878      	ldr	r0, [r7, #4]
 800a32a:	f017 ff50 	bl	80221ce <_ZdlPvj>
 800a32e:	687b      	ldr	r3, [r7, #4]
 800a330:	4618      	mov	r0, r3
 800a332:	3708      	adds	r7, #8
 800a334:	46bd      	mov	sp, r7
 800a336:	bd80      	pop	{r7, pc}

0800a338 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800a338:	b580      	push	{r7, lr}
 800a33a:	b082      	sub	sp, #8
 800a33c:	af00      	add	r7, sp, #0
 800a33e:	6078      	str	r0, [r7, #4]
 800a340:	4a05      	ldr	r2, [pc, #20]	@ (800a358 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	601a      	str	r2, [r3, #0]
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	4618      	mov	r0, r3
 800a34a:	f7ff fbfd 	bl	8009b48 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a34e:	687b      	ldr	r3, [r7, #4]
 800a350:	4618      	mov	r0, r3
 800a352:	3708      	adds	r7, #8
 800a354:	46bd      	mov	sp, r7
 800a356:	bd80      	pop	{r7, pc}
 800a358:	08024664 	.word	0x08024664

0800a35c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800a35c:	b580      	push	{r7, lr}
 800a35e:	b082      	sub	sp, #8
 800a360:	af00      	add	r7, sp, #0
 800a362:	6078      	str	r0, [r7, #4]
 800a364:	6878      	ldr	r0, [r7, #4]
 800a366:	f7ff ffe7 	bl	800a338 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800a36a:	214c      	movs	r1, #76	@ 0x4c
 800a36c:	6878      	ldr	r0, [r7, #4]
 800a36e:	f017 ff2e 	bl	80221ce <_ZdlPvj>
 800a372:	687b      	ldr	r3, [r7, #4]
 800a374:	4618      	mov	r0, r3
 800a376:	3708      	adds	r7, #8
 800a378:	46bd      	mov	sp, r7
 800a37a:	bd80      	pop	{r7, pc}

0800a37c <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800a37c:	b580      	push	{r7, lr}
 800a37e:	b082      	sub	sp, #8
 800a380:	af00      	add	r7, sp, #0
 800a382:	6078      	str	r0, [r7, #4]
 800a384:	4a05      	ldr	r2, [pc, #20]	@ (800a39c <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a386:	687b      	ldr	r3, [r7, #4]
 800a388:	601a      	str	r2, [r3, #0]
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	4618      	mov	r0, r3
 800a38e:	f7fe ff0d 	bl	80091ac <_ZN8touchgfx8DrawableD1Ev>
 800a392:	687b      	ldr	r3, [r7, #4]
 800a394:	4618      	mov	r0, r3
 800a396:	3708      	adds	r7, #8
 800a398:	46bd      	mov	sp, r7
 800a39a:	bd80      	pop	{r7, pc}
 800a39c:	08024cdc 	.word	0x08024cdc

0800a3a0 <_ZN8touchgfx9ContainerD0Ev>:
 800a3a0:	b580      	push	{r7, lr}
 800a3a2:	b082      	sub	sp, #8
 800a3a4:	af00      	add	r7, sp, #0
 800a3a6:	6078      	str	r0, [r7, #4]
 800a3a8:	6878      	ldr	r0, [r7, #4]
 800a3aa:	f7ff ffe7 	bl	800a37c <_ZN8touchgfx9ContainerD1Ev>
 800a3ae:	212c      	movs	r1, #44	@ 0x2c
 800a3b0:	6878      	ldr	r0, [r7, #4]
 800a3b2:	f017 ff0c 	bl	80221ce <_ZdlPvj>
 800a3b6:	687b      	ldr	r3, [r7, #4]
 800a3b8:	4618      	mov	r0, r3
 800a3ba:	3708      	adds	r7, #8
 800a3bc:	46bd      	mov	sp, r7
 800a3be:	bd80      	pop	{r7, pc}

0800a3c0 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800a3c0:	b580      	push	{r7, lr}
 800a3c2:	b082      	sub	sp, #8
 800a3c4:	af00      	add	r7, sp, #0
 800a3c6:	6078      	str	r0, [r7, #4]
 800a3c8:	4a05      	ldr	r2, [pc, #20]	@ (800a3e0 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	601a      	str	r2, [r3, #0]
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	4618      	mov	r0, r3
 800a3d2:	f7ff f90b 	bl	80095ec <_ZN8touchgfx6WidgetD1Ev>
 800a3d6:	687b      	ldr	r3, [r7, #4]
 800a3d8:	4618      	mov	r0, r3
 800a3da:	3708      	adds	r7, #8
 800a3dc:	46bd      	mov	sp, r7
 800a3de:	bd80      	pop	{r7, pc}
 800a3e0:	08025038 	.word	0x08025038

0800a3e4 <_ZN8touchgfx3BoxD0Ev>:
 800a3e4:	b580      	push	{r7, lr}
 800a3e6:	b082      	sub	sp, #8
 800a3e8:	af00      	add	r7, sp, #0
 800a3ea:	6078      	str	r0, [r7, #4]
 800a3ec:	6878      	ldr	r0, [r7, #4]
 800a3ee:	f7ff ffe7 	bl	800a3c0 <_ZN8touchgfx3BoxD1Ev>
 800a3f2:	212c      	movs	r1, #44	@ 0x2c
 800a3f4:	6878      	ldr	r0, [r7, #4]
 800a3f6:	f017 feea 	bl	80221ce <_ZdlPvj>
 800a3fa:	687b      	ldr	r3, [r7, #4]
 800a3fc:	4618      	mov	r0, r3
 800a3fe:	3708      	adds	r7, #8
 800a400:	46bd      	mov	sp, r7
 800a402:	bd80      	pop	{r7, pc}

0800a404 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800a404:	b580      	push	{r7, lr}
 800a406:	b082      	sub	sp, #8
 800a408:	af00      	add	r7, sp, #0
 800a40a:	6078      	str	r0, [r7, #4]
 800a40c:	4a05      	ldr	r2, [pc, #20]	@ (800a424 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800a40e:	687b      	ldr	r3, [r7, #4]
 800a410:	601a      	str	r2, [r3, #0]
 800a412:	687b      	ldr	r3, [r7, #4]
 800a414:	4618      	mov	r0, r3
 800a416:	f7ff f8e9 	bl	80095ec <_ZN8touchgfx6WidgetD1Ev>
 800a41a:	687b      	ldr	r3, [r7, #4]
 800a41c:	4618      	mov	r0, r3
 800a41e:	3708      	adds	r7, #8
 800a420:	46bd      	mov	sp, r7
 800a422:	bd80      	pop	{r7, pc}
 800a424:	080251a4 	.word	0x080251a4

0800a428 <_ZN8touchgfx5ImageD0Ev>:
 800a428:	b580      	push	{r7, lr}
 800a42a:	b082      	sub	sp, #8
 800a42c:	af00      	add	r7, sp, #0
 800a42e:	6078      	str	r0, [r7, #4]
 800a430:	6878      	ldr	r0, [r7, #4]
 800a432:	f7ff ffe7 	bl	800a404 <_ZN8touchgfx5ImageD1Ev>
 800a436:	212c      	movs	r1, #44	@ 0x2c
 800a438:	6878      	ldr	r0, [r7, #4]
 800a43a:	f017 fec8 	bl	80221ce <_ZdlPvj>
 800a43e:	687b      	ldr	r3, [r7, #4]
 800a440:	4618      	mov	r0, r3
 800a442:	3708      	adds	r7, #8
 800a444:	46bd      	mov	sp, r7
 800a446:	bd80      	pop	{r7, pc}

0800a448 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800a448:	b580      	push	{r7, lr}
 800a44a:	b082      	sub	sp, #8
 800a44c:	af00      	add	r7, sp, #0
 800a44e:	6078      	str	r0, [r7, #4]
 800a450:	4a05      	ldr	r2, [pc, #20]	@ (800a468 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	601a      	str	r2, [r3, #0]
 800a456:	687b      	ldr	r3, [r7, #4]
 800a458:	4618      	mov	r0, r3
 800a45a:	f7ff fc01 	bl	8009c60 <_ZN8touchgfx6ButtonD1Ev>
 800a45e:	687b      	ldr	r3, [r7, #4]
 800a460:	4618      	mov	r0, r3
 800a462:	3708      	adds	r7, #8
 800a464:	46bd      	mov	sp, r7
 800a466:	bd80      	pop	{r7, pc}
 800a468:	08024f34 	.word	0x08024f34

0800a46c <_ZN8touchgfx12ToggleButtonD0Ev>:
 800a46c:	b580      	push	{r7, lr}
 800a46e:	b082      	sub	sp, #8
 800a470:	af00      	add	r7, sp, #0
 800a472:	6078      	str	r0, [r7, #4]
 800a474:	6878      	ldr	r0, [r7, #4]
 800a476:	f7ff ffe7 	bl	800a448 <_ZN8touchgfx12ToggleButtonD1Ev>
 800a47a:	2138      	movs	r1, #56	@ 0x38
 800a47c:	6878      	ldr	r0, [r7, #4]
 800a47e:	f017 fea6 	bl	80221ce <_ZdlPvj>
 800a482:	687b      	ldr	r3, [r7, #4]
 800a484:	4618      	mov	r0, r3
 800a486:	3708      	adds	r7, #8
 800a488:	46bd      	mov	sp, r7
 800a48a:	bd80      	pop	{r7, pc}

0800a48c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a48c:	b580      	push	{r7, lr}
 800a48e:	b082      	sub	sp, #8
 800a490:	af00      	add	r7, sp, #0
 800a492:	6078      	str	r0, [r7, #4]
 800a494:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	685b      	ldr	r3, [r3, #4]
 800a49a:	687a      	ldr	r2, [r7, #4]
 800a49c:	68d2      	ldr	r2, [r2, #12]
 800a49e:	1052      	asrs	r2, r2, #1
 800a4a0:	1898      	adds	r0, r3, r2
 800a4a2:	687b      	ldr	r3, [r7, #4]
 800a4a4:	68db      	ldr	r3, [r3, #12]
 800a4a6:	f003 0301 	and.w	r3, r3, #1
 800a4aa:	2b00      	cmp	r3, #0
 800a4ac:	d102      	bne.n	800a4b4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800a4ae:	687b      	ldr	r3, [r7, #4]
 800a4b0:	689b      	ldr	r3, [r3, #8]
 800a4b2:	e00a      	b.n	800a4ca <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800a4b4:	687b      	ldr	r3, [r7, #4]
 800a4b6:	685b      	ldr	r3, [r3, #4]
 800a4b8:	687a      	ldr	r2, [r7, #4]
 800a4ba:	68d2      	ldr	r2, [r2, #12]
 800a4bc:	1052      	asrs	r2, r2, #1
 800a4be:	4413      	add	r3, r2
 800a4c0:	681b      	ldr	r3, [r3, #0]
 800a4c2:	687a      	ldr	r2, [r7, #4]
 800a4c4:	6892      	ldr	r2, [r2, #8]
 800a4c6:	4413      	add	r3, r2
 800a4c8:	681b      	ldr	r3, [r3, #0]
 800a4ca:	6839      	ldr	r1, [r7, #0]
 800a4cc:	4798      	blx	r3
    }
 800a4ce:	bf00      	nop
 800a4d0:	3708      	adds	r7, #8
 800a4d2:	46bd      	mov	sp, r7
 800a4d4:	bd80      	pop	{r7, pc}

0800a4d6 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800a4d6:	b480      	push	{r7}
 800a4d8:	b083      	sub	sp, #12
 800a4da:	af00      	add	r7, sp, #0
 800a4dc:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800a4de:	687b      	ldr	r3, [r7, #4]
 800a4e0:	685b      	ldr	r3, [r3, #4]
 800a4e2:	2b00      	cmp	r3, #0
 800a4e4:	d010      	beq.n	800a508 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	689b      	ldr	r3, [r3, #8]
 800a4ea:	2b00      	cmp	r3, #0
 800a4ec:	d107      	bne.n	800a4fe <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	68db      	ldr	r3, [r3, #12]
 800a4f2:	f003 0301 	and.w	r3, r3, #1
 800a4f6:	2b00      	cmp	r3, #0
 800a4f8:	d101      	bne.n	800a4fe <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800a4fa:	2301      	movs	r3, #1
 800a4fc:	e000      	b.n	800a500 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800a4fe:	2300      	movs	r3, #0
 800a500:	2b01      	cmp	r3, #1
 800a502:	d001      	beq.n	800a508 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800a504:	2301      	movs	r3, #1
 800a506:	e000      	b.n	800a50a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800a508:	2300      	movs	r3, #0
    }
 800a50a:	4618      	mov	r0, r3
 800a50c:	370c      	adds	r7, #12
 800a50e:	46bd      	mov	sp, r7
 800a510:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a514:	4770      	bx	lr
	...

0800a518 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800a518:	b480      	push	{r7}
 800a51a:	af00      	add	r7, sp, #0
    return bitmap_database;
 800a51c:	4b02      	ldr	r3, [pc, #8]	@ (800a528 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800a51e:	4618      	mov	r0, r3
 800a520:	46bd      	mov	sp, r7
 800a522:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a526:	4770      	bx	lr
 800a528:	0802476c 	.word	0x0802476c

0800a52c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800a52c:	b480      	push	{r7}
 800a52e:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800a530:	2303      	movs	r3, #3
}
 800a532:	4618      	mov	r0, r3
 800a534:	46bd      	mov	sp, r7
 800a536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a53a:	4770      	bx	lr

0800a53c <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800a53c:	b480      	push	{r7}
 800a53e:	b085      	sub	sp, #20
 800a540:	af00      	add	r7, sp, #0
 800a542:	60f8      	str	r0, [r7, #12]
 800a544:	460b      	mov	r3, r1
 800a546:	607a      	str	r2, [r7, #4]
 800a548:	817b      	strh	r3, [r7, #10]
        return 0;
 800a54a:	2300      	movs	r3, #0
    }
 800a54c:	4618      	mov	r0, r3
 800a54e:	3714      	adds	r7, #20
 800a550:	46bd      	mov	sp, r7
 800a552:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a556:	4770      	bx	lr

0800a558 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800a558:	b480      	push	{r7}
 800a55a:	b083      	sub	sp, #12
 800a55c:	af00      	add	r7, sp, #0
 800a55e:	6078      	str	r0, [r7, #4]
        return 0;
 800a560:	2300      	movs	r3, #0
    }
 800a562:	4618      	mov	r0, r3
 800a564:	370c      	adds	r7, #12
 800a566:	46bd      	mov	sp, r7
 800a568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a56c:	4770      	bx	lr

0800a56e <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800a56e:	b480      	push	{r7}
 800a570:	b083      	sub	sp, #12
 800a572:	af00      	add	r7, sp, #0
 800a574:	6078      	str	r0, [r7, #4]
        return 0;
 800a576:	2300      	movs	r3, #0
    }
 800a578:	4618      	mov	r0, r3
 800a57a:	370c      	adds	r7, #12
 800a57c:	46bd      	mov	sp, r7
 800a57e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a582:	4770      	bx	lr

0800a584 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800a584:	b480      	push	{r7}
 800a586:	b085      	sub	sp, #20
 800a588:	af00      	add	r7, sp, #0
 800a58a:	60f8      	str	r0, [r7, #12]
 800a58c:	60b9      	str	r1, [r7, #8]
 800a58e:	4613      	mov	r3, r2
 800a590:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800a592:	4a07      	ldr	r2, [pc, #28]	@ (800a5b0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800a594:	68fb      	ldr	r3, [r7, #12]
 800a596:	6013      	str	r3, [r2, #0]
        fonts = f;
 800a598:	4a06      	ldr	r2, [pc, #24]	@ (800a5b4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800a59a:	68bb      	ldr	r3, [r7, #8]
 800a59c:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800a59e:	4a06      	ldr	r2, [pc, #24]	@ (800a5b8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800a5a0:	88fb      	ldrh	r3, [r7, #6]
 800a5a2:	8013      	strh	r3, [r2, #0]
    }
 800a5a4:	bf00      	nop
 800a5a6:	3714      	adds	r7, #20
 800a5a8:	46bd      	mov	sp, r7
 800a5aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5ae:	4770      	bx	lr
 800a5b0:	20002e0c 	.word	0x20002e0c
 800a5b4:	20002e14 	.word	0x20002e14
 800a5b8:	20002e10 	.word	0x20002e10

0800a5bc <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a5bc:	b40e      	push	{r1, r2, r3}
 800a5be:	b580      	push	{r7, lr}
 800a5c0:	b085      	sub	sp, #20
 800a5c2:	af00      	add	r7, sp, #0
 800a5c4:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800a5c6:	f107 0320 	add.w	r3, r7, #32
 800a5ca:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800a5cc:	68bb      	ldr	r3, [r7, #8]
 800a5ce:	69fa      	ldr	r2, [r7, #28]
 800a5d0:	2100      	movs	r1, #0
 800a5d2:	6878      	ldr	r0, [r7, #4]
 800a5d4:	f006 ffee 	bl	80115b4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800a5d8:	4603      	mov	r3, r0
 800a5da:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800a5dc:	89fb      	ldrh	r3, [r7, #14]
}
 800a5de:	4618      	mov	r0, r3
 800a5e0:	3714      	adds	r7, #20
 800a5e2:	46bd      	mov	sp, r7
 800a5e4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800a5e8:	b003      	add	sp, #12
 800a5ea:	4770      	bx	lr

0800a5ec <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800a5ec:	b40c      	push	{r2, r3}
 800a5ee:	b580      	push	{r7, lr}
 800a5f0:	b084      	sub	sp, #16
 800a5f2:	af00      	add	r7, sp, #0
 800a5f4:	6078      	str	r0, [r7, #4]
 800a5f6:	460b      	mov	r3, r1
 800a5f8:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800a5fa:	f107 031c 	add.w	r3, r7, #28
 800a5fe:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800a600:	78f9      	ldrb	r1, [r7, #3]
 800a602:	68bb      	ldr	r3, [r7, #8]
 800a604:	69ba      	ldr	r2, [r7, #24]
 800a606:	6878      	ldr	r0, [r7, #4]
 800a608:	f006 ffd4 	bl	80115b4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800a60c:	4603      	mov	r3, r0
 800a60e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800a610:	89fb      	ldrh	r3, [r7, #14]
}
 800a612:	4618      	mov	r0, r3
 800a614:	3710      	adds	r7, #16
 800a616:	46bd      	mov	sp, r7
 800a618:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800a61c:	b002      	add	sp, #8
 800a61e:	4770      	bx	lr

0800a620 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800a620:	b580      	push	{r7, lr}
 800a622:	b08a      	sub	sp, #40	@ 0x28
 800a624:	af00      	add	r7, sp, #0
 800a626:	6078      	str	r0, [r7, #4]
 800a628:	460b      	mov	r3, r1
 800a62a:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800a62c:	687b      	ldr	r3, [r7, #4]
 800a62e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800a630:	2b00      	cmp	r3, #0
 800a632:	d016      	beq.n	800a662 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800a634:	687b      	ldr	r3, [r7, #4]
 800a636:	3322      	adds	r3, #34	@ 0x22
 800a638:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800a63a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a63c:	8adb      	ldrh	r3, [r3, #22]
 800a63e:	2b00      	cmp	r3, #0
 800a640:	d105      	bne.n	800a64e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800a642:	4b43      	ldr	r3, [pc, #268]	@ (800a750 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800a644:	4a43      	ldr	r2, [pc, #268]	@ (800a754 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800a646:	21c5      	movs	r1, #197	@ 0xc5
 800a648:	4843      	ldr	r0, [pc, #268]	@ (800a758 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a64a:	f017 fe6d 	bl	8022328 <__assert_func>
            return buffer[pos];
 800a64e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a650:	8a9b      	ldrh	r3, [r3, #20]
 800a652:	461a      	mov	r2, r3
 800a654:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a656:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800a65a:	2b00      	cmp	r3, #0
 800a65c:	d001      	beq.n	800a662 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800a65e:	2301      	movs	r3, #1
 800a660:	e000      	b.n	800a664 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800a662:	2300      	movs	r3, #0
 800a664:	2b00      	cmp	r3, #0
 800a666:	d06a      	beq.n	800a73e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800a668:	6878      	ldr	r0, [r7, #4]
 800a66a:	f008 fa72 	bl	8012b52 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800a66e:	687b      	ldr	r3, [r7, #4]
 800a670:	3322      	adds	r3, #34	@ 0x22
 800a672:	623b      	str	r3, [r7, #32]
 800a674:	2301      	movs	r3, #1
 800a676:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800a678:	6a3b      	ldr	r3, [r7, #32]
 800a67a:	8adb      	ldrh	r3, [r3, #22]
 800a67c:	8bfa      	ldrh	r2, [r7, #30]
 800a67e:	429a      	cmp	r2, r3
 800a680:	d305      	bcc.n	800a68e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800a682:	4b36      	ldr	r3, [pc, #216]	@ (800a75c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800a684:	4a36      	ldr	r2, [pc, #216]	@ (800a760 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800a686:	21cb      	movs	r1, #203	@ 0xcb
 800a688:	4833      	ldr	r0, [pc, #204]	@ (800a758 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a68a:	f017 fe4d 	bl	8022328 <__assert_func>
            const uint16_t index = pos + offset;
 800a68e:	6a3b      	ldr	r3, [r7, #32]
 800a690:	8a9a      	ldrh	r2, [r3, #20]
 800a692:	8bfb      	ldrh	r3, [r7, #30]
 800a694:	4413      	add	r3, r2
 800a696:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800a698:	8bbb      	ldrh	r3, [r7, #28]
 800a69a:	2b09      	cmp	r3, #9
 800a69c:	d801      	bhi.n	800a6a2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800a69e:	8bbb      	ldrh	r3, [r7, #28]
 800a6a0:	e001      	b.n	800a6a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800a6a2:	8bbb      	ldrh	r3, [r7, #28]
 800a6a4:	3b0a      	subs	r3, #10
 800a6a6:	6a3a      	ldr	r2, [r7, #32]
 800a6a8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800a6ac:	f640 123f 	movw	r2, #2367	@ 0x93f
 800a6b0:	4293      	cmp	r3, r2
 800a6b2:	bf0c      	ite	eq
 800a6b4:	2301      	moveq	r3, #1
 800a6b6:	2300      	movne	r3, #0
 800a6b8:	b2db      	uxtb	r3, r3
 800a6ba:	2b00      	cmp	r3, #0
 800a6bc:	d03f      	beq.n	800a73e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800a6be:	687b      	ldr	r3, [r7, #4]
 800a6c0:	3322      	adds	r3, #34	@ 0x22
 800a6c2:	687a      	ldr	r2, [r7, #4]
 800a6c4:	3222      	adds	r2, #34	@ 0x22
 800a6c6:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800a6c8:	68ba      	ldr	r2, [r7, #8]
 800a6ca:	8ad2      	ldrh	r2, [r2, #22]
 800a6cc:	2a00      	cmp	r2, #0
 800a6ce:	d105      	bne.n	800a6dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800a6d0:	4b1f      	ldr	r3, [pc, #124]	@ (800a750 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800a6d2:	4a20      	ldr	r2, [pc, #128]	@ (800a754 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800a6d4:	21c5      	movs	r1, #197	@ 0xc5
 800a6d6:	4820      	ldr	r0, [pc, #128]	@ (800a758 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a6d8:	f017 fe26 	bl	8022328 <__assert_func>
            return buffer[pos];
 800a6dc:	68ba      	ldr	r2, [r7, #8]
 800a6de:	8a92      	ldrh	r2, [r2, #20]
 800a6e0:	4611      	mov	r1, r2
 800a6e2:	68ba      	ldr	r2, [r7, #8]
 800a6e4:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800a6e8:	613b      	str	r3, [r7, #16]
 800a6ea:	4613      	mov	r3, r2
 800a6ec:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800a6ee:	693b      	ldr	r3, [r7, #16]
 800a6f0:	8adb      	ldrh	r3, [r3, #22]
 800a6f2:	2b01      	cmp	r3, #1
 800a6f4:	d806      	bhi.n	800a704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800a6f6:	4b1b      	ldr	r3, [pc, #108]	@ (800a764 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800a6f8:	4a1b      	ldr	r2, [pc, #108]	@ (800a768 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800a6fa:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800a6fe:	4816      	ldr	r0, [pc, #88]	@ (800a758 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800a700:	f017 fe12 	bl	8022328 <__assert_func>
            const uint16_t index = pos + 1;
 800a704:	693b      	ldr	r3, [r7, #16]
 800a706:	8a9b      	ldrh	r3, [r3, #20]
 800a708:	3301      	adds	r3, #1
 800a70a:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800a70c:	89bb      	ldrh	r3, [r7, #12]
 800a70e:	2b09      	cmp	r3, #9
 800a710:	d801      	bhi.n	800a716 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800a712:	89bb      	ldrh	r3, [r7, #12]
 800a714:	e000      	b.n	800a718 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800a716:	2300      	movs	r3, #0
 800a718:	693a      	ldr	r2, [r7, #16]
 800a71a:	89f9      	ldrh	r1, [r7, #14]
 800a71c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800a720:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800a722:	687b      	ldr	r3, [r7, #4]
 800a724:	3322      	adds	r3, #34	@ 0x22
 800a726:	61bb      	str	r3, [r7, #24]
 800a728:	f640 133f 	movw	r3, #2367	@ 0x93f
 800a72c:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800a72e:	69bb      	ldr	r3, [r7, #24]
 800a730:	8a9b      	ldrh	r3, [r3, #20]
 800a732:	4619      	mov	r1, r3
 800a734:	69bb      	ldr	r3, [r7, #24]
 800a736:	8afa      	ldrh	r2, [r7, #22]
 800a738:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800a73c:	bf00      	nop
        }
    }
    return getNextChar();
 800a73e:	6878      	ldr	r0, [r7, #4]
 800a740:	f008 f90a 	bl	8012958 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800a744:	4603      	mov	r3, r0
}
 800a746:	4618      	mov	r0, r3
 800a748:	3728      	adds	r7, #40	@ 0x28
 800a74a:	46bd      	mov	sp, r7
 800a74c:	bd80      	pop	{r7, pc}
 800a74e:	bf00      	nop
 800a750:	08023774 	.word	0x08023774
 800a754:	08023780 	.word	0x08023780
 800a758:	0802382c 	.word	0x0802382c
 800a75c:	08023874 	.word	0x08023874
 800a760:	08023884 	.word	0x08023884
 800a764:	08023958 	.word	0x08023958
 800a768:	08023964 	.word	0x08023964

0800a76c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800a76c:	b580      	push	{r7, lr}
 800a76e:	b082      	sub	sp, #8
 800a770:	af00      	add	r7, sp, #0
 800a772:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800a774:	6878      	ldr	r0, [r7, #4]
 800a776:	f008 f8b6 	bl	80128e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800a77a:	bf00      	nop
 800a77c:	3708      	adds	r7, #8
 800a77e:	46bd      	mov	sp, r7
 800a780:	bd80      	pop	{r7, pc}

0800a782 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800a782:	b580      	push	{r7, lr}
 800a784:	b088      	sub	sp, #32
 800a786:	af02      	add	r7, sp, #8
 800a788:	60f8      	str	r0, [r7, #12]
 800a78a:	1d38      	adds	r0, r7, #4
 800a78c:	e880 0006 	stmia.w	r0, {r1, r2}
 800a790:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800a792:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800a796:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800a798:	1d39      	adds	r1, r7, #4
 800a79a:	697b      	ldr	r3, [r7, #20]
 800a79c:	9301      	str	r3, [sp, #4]
 800a79e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a7a0:	9300      	str	r3, [sp, #0]
 800a7a2:	6a3b      	ldr	r3, [r7, #32]
 800a7a4:	683a      	ldr	r2, [r7, #0]
 800a7a6:	68f8      	ldr	r0, [r7, #12]
 800a7a8:	f005 fb60 	bl	800fe6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800a7ac:	bf00      	nop
 800a7ae:	3718      	adds	r7, #24
 800a7b0:	46bd      	mov	sp, r7
 800a7b2:	bd80      	pop	{r7, pc}

0800a7b4 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800a7b4:	b590      	push	{r4, r7, lr}
 800a7b6:	b085      	sub	sp, #20
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	4603      	mov	r3, r0
 800a7bc:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800a7be:	2300      	movs	r3, #0
 800a7c0:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800a7c2:	88fb      	ldrh	r3, [r7, #6]
 800a7c4:	2b00      	cmp	r3, #0
 800a7c6:	d127      	bne.n	800a818 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800a7c8:	88fb      	ldrh	r3, [r7, #6]
 800a7ca:	4a1e      	ldr	r2, [pc, #120]	@ (800a844 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a7cc:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a7d0:	2b00      	cmp	r3, #0
 800a7d2:	d016      	beq.n	800a802 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800a7d4:	88fb      	ldrh	r3, [r7, #6]
 800a7d6:	4a1b      	ldr	r2, [pc, #108]	@ (800a844 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800a7d8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a7dc:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800a7de:	68bb      	ldr	r3, [r7, #8]
 800a7e0:	681b      	ldr	r3, [r3, #0]
 800a7e2:	68ba      	ldr	r2, [r7, #8]
 800a7e4:	4413      	add	r3, r2
 800a7e6:	4a18      	ldr	r2, [pc, #96]	@ (800a848 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a7e8:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800a7ea:	68bb      	ldr	r3, [r7, #8]
 800a7ec:	685b      	ldr	r3, [r3, #4]
 800a7ee:	68ba      	ldr	r2, [r7, #8]
 800a7f0:	4413      	add	r3, r2
 800a7f2:	4a16      	ldr	r2, [pc, #88]	@ (800a84c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a7f4:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800a7f6:	68bb      	ldr	r3, [r7, #8]
 800a7f8:	689b      	ldr	r3, [r3, #8]
 800a7fa:	68ba      	ldr	r2, [r7, #8]
 800a7fc:	4413      	add	r3, r2
 800a7fe:	60fb      	str	r3, [r7, #12]
 800a800:	e00a      	b.n	800a818 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800a802:	4b11      	ldr	r3, [pc, #68]	@ (800a848 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800a804:	4a12      	ldr	r2, [pc, #72]	@ (800a850 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800a806:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800a808:	4a12      	ldr	r2, [pc, #72]	@ (800a854 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800a80a:	4b10      	ldr	r3, [pc, #64]	@ (800a84c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800a80c:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800a80e:	88fb      	ldrh	r3, [r7, #6]
 800a810:	4a11      	ldr	r2, [pc, #68]	@ (800a858 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800a812:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800a816:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800a818:	68fb      	ldr	r3, [r7, #12]
 800a81a:	2b00      	cmp	r3, #0
 800a81c:	d00d      	beq.n	800a83a <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800a81e:	4a0f      	ldr	r2, [pc, #60]	@ (800a85c <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800a820:	88fb      	ldrh	r3, [r7, #6]
 800a822:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800a824:	f000 f83e 	bl	800a8a4 <_ZN17TypedTextDatabase8getFontsEv>
 800a828:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800a82a:	f000 f833 	bl	800a894 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800a82e:	4603      	mov	r3, r0
 800a830:	461a      	mov	r2, r3
 800a832:	4621      	mov	r1, r4
 800a834:	68f8      	ldr	r0, [r7, #12]
 800a836:	f7ff fea5 	bl	800a584 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800a83a:	bf00      	nop
 800a83c:	3714      	adds	r7, #20
 800a83e:	46bd      	mov	sp, r7
 800a840:	bd90      	pop	{r4, r7, pc}
 800a842:	bf00      	nop
 800a844:	20000668 	.word	0x20000668
 800a848:	20000670 	.word	0x20000670
 800a84c:	20000674 	.word	0x20000674
 800a850:	0806ecbc 	.word	0x0806ecbc
 800a854:	0806ecac 	.word	0x0806ecac
 800a858:	0806ed08 	.word	0x0806ed08
 800a85c:	2000066c 	.word	0x2000066c

0800a860 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800a860:	b480      	push	{r7}
 800a862:	b083      	sub	sp, #12
 800a864:	af00      	add	r7, sp, #0
 800a866:	6078      	str	r0, [r7, #4]
 800a868:	460b      	mov	r3, r1
 800a86a:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800a86c:	4b07      	ldr	r3, [pc, #28]	@ (800a88c <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800a86e:	681a      	ldr	r2, [r3, #0]
 800a870:	4b07      	ldr	r3, [pc, #28]	@ (800a890 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800a872:	6819      	ldr	r1, [r3, #0]
 800a874:	887b      	ldrh	r3, [r7, #2]
 800a876:	009b      	lsls	r3, r3, #2
 800a878:	440b      	add	r3, r1
 800a87a:	681b      	ldr	r3, [r3, #0]
 800a87c:	005b      	lsls	r3, r3, #1
 800a87e:	4413      	add	r3, r2
}
 800a880:	4618      	mov	r0, r3
 800a882:	370c      	adds	r7, #12
 800a884:	46bd      	mov	sp, r7
 800a886:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a88a:	4770      	bx	lr
 800a88c:	20000670 	.word	0x20000670
 800a890:	20000674 	.word	0x20000674

0800a894 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800a894:	b480      	push	{r7}
 800a896:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800a898:	2304      	movs	r3, #4
}
 800a89a:	4618      	mov	r0, r3
 800a89c:	46bd      	mov	sp, r7
 800a89e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8a2:	4770      	bx	lr

0800a8a4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800a8a4:	b480      	push	{r7}
 800a8a6:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800a8a8:	4b02      	ldr	r3, [pc, #8]	@ (800a8b4 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800a8aa:	4618      	mov	r0, r3
 800a8ac:	46bd      	mov	sp, r7
 800a8ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8b2:	4770      	bx	lr
 800a8b4:	20000678 	.word	0x20000678

0800a8b8 <_Z41__static_initialization_and_destruction_0ii>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800a8b8:	b580      	push	{r7, lr}
 800a8ba:	b082      	sub	sp, #8
 800a8bc:	af00      	add	r7, sp, #0
 800a8be:	6078      	str	r0, [r7, #4]
 800a8c0:	6039      	str	r1, [r7, #0]
 800a8c2:	687b      	ldr	r3, [r7, #4]
 800a8c4:	2b01      	cmp	r3, #1
 800a8c6:	d10e      	bne.n	800a8e6 <_Z41__static_initialization_and_destruction_0ii+0x2e>
 800a8c8:	683b      	ldr	r3, [r7, #0]
 800a8ca:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800a8ce:	4293      	cmp	r3, r2
 800a8d0:	d109      	bne.n	800a8e6 <_Z41__static_initialization_and_destruction_0ii+0x2e>
    &(getFont_Asap_Regular_80_4bpp()),
 800a8d2:	f7fd fde5 	bl	80084a0 <_Z28getFont_Asap_Regular_80_4bppv>
 800a8d6:	4603      	mov	r3, r0
};
 800a8d8:	4a05      	ldr	r2, [pc, #20]	@ (800a8f0 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800a8da:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_30_4bpp())
 800a8dc:	f7fd fe3a 	bl	8008554 <_Z23getFont_verdana_30_4bppv>
 800a8e0:	4603      	mov	r3, r0
};
 800a8e2:	4a03      	ldr	r2, [pc, #12]	@ (800a8f0 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800a8e4:	6053      	str	r3, [r2, #4]
} // namespace TypedTextDatabase
 800a8e6:	bf00      	nop
 800a8e8:	3708      	adds	r7, #8
 800a8ea:	46bd      	mov	sp, r7
 800a8ec:	bd80      	pop	{r7, pc}
 800a8ee:	bf00      	nop
 800a8f0:	20000678 	.word	0x20000678

0800a8f4 <_GLOBAL__sub_I_touchgfx_fonts>:
 800a8f4:	b580      	push	{r7, lr}
 800a8f6:	af00      	add	r7, sp, #0
 800a8f8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a8fc:	2001      	movs	r0, #1
 800a8fe:	f7ff ffdb 	bl	800a8b8 <_Z41__static_initialization_and_destruction_0ii>
 800a902:	bd80      	pop	{r7, pc}

0800a904 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800a904:	b580      	push	{r7, lr}
 800a906:	b082      	sub	sp, #8
 800a908:	af00      	add	r7, sp, #0
 800a90a:	6078      	str	r0, [r7, #4]
 800a90c:	4a05      	ldr	r2, [pc, #20]	@ (800a924 <_ZN19FrontendApplicationD1Ev+0x20>)
 800a90e:	687b      	ldr	r3, [r7, #4]
 800a910:	601a      	str	r2, [r3, #0]
 800a912:	687b      	ldr	r3, [r7, #4]
 800a914:	4618      	mov	r0, r3
 800a916:	f7fe f87d 	bl	8008a14 <_ZN23FrontendApplicationBaseD1Ev>
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	4618      	mov	r0, r3
 800a91e:	3708      	adds	r7, #8
 800a920:	46bd      	mov	sp, r7
 800a922:	bd80      	pop	{r7, pc}
 800a924:	08024814 	.word	0x08024814

0800a928 <_ZN19FrontendApplicationD0Ev>:
 800a928:	b580      	push	{r7, lr}
 800a92a:	b082      	sub	sp, #8
 800a92c:	af00      	add	r7, sp, #0
 800a92e:	6078      	str	r0, [r7, #4]
 800a930:	6878      	ldr	r0, [r7, #4]
 800a932:	f7ff ffe7 	bl	800a904 <_ZN19FrontendApplicationD1Ev>
 800a936:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800a93a:	6878      	ldr	r0, [r7, #4]
 800a93c:	f017 fc47 	bl	80221ce <_ZdlPvj>
 800a940:	687b      	ldr	r3, [r7, #4]
 800a942:	4618      	mov	r0, r3
 800a944:	3708      	adds	r7, #8
 800a946:	46bd      	mov	sp, r7
 800a948:	bd80      	pop	{r7, pc}

0800a94a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800a94a:	b580      	push	{r7, lr}
 800a94c:	b082      	sub	sp, #8
 800a94e:	af00      	add	r7, sp, #0
 800a950:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800a952:	687b      	ldr	r3, [r7, #4]
 800a954:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800a958:	4618      	mov	r0, r3
 800a95a:	f000 fa81 	bl	800ae60 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800a95e:	687b      	ldr	r3, [r7, #4]
 800a960:	4618      	mov	r0, r3
 800a962:	f005 ff5d 	bl	8010820 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800a966:	bf00      	nop
 800a968:	3708      	adds	r7, #8
 800a96a:	46bd      	mov	sp, r7
 800a96c:	bd80      	pop	{r7, pc}
	...

0800a970 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800a970:	b580      	push	{r7, lr}
 800a972:	b084      	sub	sp, #16
 800a974:	af00      	add	r7, sp, #0
 800a976:	60f8      	str	r0, [r7, #12]
 800a978:	60b9      	str	r1, [r7, #8]
 800a97a:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800a97c:	68fb      	ldr	r3, [r7, #12]
 800a97e:	687a      	ldr	r2, [r7, #4]
 800a980:	68b9      	ldr	r1, [r7, #8]
 800a982:	4618      	mov	r0, r3
 800a984:	f7fe f896 	bl	8008ab4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800a988:	4a03      	ldr	r2, [pc, #12]	@ (800a998 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800a98a:	68fb      	ldr	r3, [r7, #12]
 800a98c:	601a      	str	r2, [r3, #0]
{
}
 800a98e:	68fb      	ldr	r3, [r7, #12]
 800a990:	4618      	mov	r0, r3
 800a992:	3710      	adds	r7, #16
 800a994:	46bd      	mov	sp, r7
 800a996:	bd80      	pop	{r7, pc}
 800a998:	08024814 	.word	0x08024814

0800a99c <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800a99c:	b480      	push	{r7}
 800a99e:	b083      	sub	sp, #12
 800a9a0:	af00      	add	r7, sp, #0
 800a9a2:	6078      	str	r0, [r7, #4]
    {
    }
 800a9a4:	bf00      	nop
 800a9a6:	370c      	adds	r7, #12
 800a9a8:	46bd      	mov	sp, r7
 800a9aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9ae:	4770      	bx	lr

0800a9b0 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800a9b0:	b480      	push	{r7}
 800a9b2:	b083      	sub	sp, #12
 800a9b4:	af00      	add	r7, sp, #0
 800a9b6:	6078      	str	r0, [r7, #4]
    {
    }
 800a9b8:	bf00      	nop
 800a9ba:	370c      	adds	r7, #12
 800a9bc:	46bd      	mov	sp, r7
 800a9be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9c2:	4770      	bx	lr

0800a9c4 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800a9c4:	b480      	push	{r7}
 800a9c6:	b083      	sub	sp, #12
 800a9c8:	af00      	add	r7, sp, #0
 800a9ca:	6078      	str	r0, [r7, #4]
    {
 800a9cc:	4a04      	ldr	r2, [pc, #16]	@ (800a9e0 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800a9ce:	687b      	ldr	r3, [r7, #4]
 800a9d0:	601a      	str	r2, [r3, #0]
    }
 800a9d2:	687b      	ldr	r3, [r7, #4]
 800a9d4:	4618      	mov	r0, r3
 800a9d6:	370c      	adds	r7, #12
 800a9d8:	46bd      	mov	sp, r7
 800a9da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9de:	4770      	bx	lr
 800a9e0:	080248c4 	.word	0x080248c4

0800a9e4 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800a9e4:	b580      	push	{r7, lr}
 800a9e6:	b082      	sub	sp, #8
 800a9e8:	af00      	add	r7, sp, #0
 800a9ea:	6078      	str	r0, [r7, #4]
    }
 800a9ec:	6878      	ldr	r0, [r7, #4]
 800a9ee:	f7ff ffe9 	bl	800a9c4 <_ZN8touchgfx9PresenterD1Ev>
 800a9f2:	2104      	movs	r1, #4
 800a9f4:	6878      	ldr	r0, [r7, #4]
 800a9f6:	f017 fbea 	bl	80221ce <_ZdlPvj>
 800a9fa:	687b      	ldr	r3, [r7, #4]
 800a9fc:	4618      	mov	r0, r3
 800a9fe:	3708      	adds	r7, #8
 800aa00:	46bd      	mov	sp, r7
 800aa02:	bd80      	pop	{r7, pc}

0800aa04 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800aa04:	b480      	push	{r7}
 800aa06:	b083      	sub	sp, #12
 800aa08:	af00      	add	r7, sp, #0
 800aa0a:	6078      	str	r0, [r7, #4]
    {
 800aa0c:	4a04      	ldr	r2, [pc, #16]	@ (800aa20 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	601a      	str	r2, [r3, #0]
    }
 800aa12:	687b      	ldr	r3, [r7, #4]
 800aa14:	4618      	mov	r0, r3
 800aa16:	370c      	adds	r7, #12
 800aa18:	46bd      	mov	sp, r7
 800aa1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa1e:	4770      	bx	lr
 800aa20:	080248c4 	.word	0x080248c4

0800aa24 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800aa24:	b480      	push	{r7}
 800aa26:	b083      	sub	sp, #12
 800aa28:	af00      	add	r7, sp, #0
 800aa2a:	6078      	str	r0, [r7, #4]
 800aa2c:	4a06      	ldr	r2, [pc, #24]	@ (800aa48 <_ZN13ModelListenerC1Ev+0x24>)
 800aa2e:	687b      	ldr	r3, [r7, #4]
 800aa30:	601a      	str	r2, [r3, #0]
 800aa32:	687b      	ldr	r3, [r7, #4]
 800aa34:	2200      	movs	r2, #0
 800aa36:	605a      	str	r2, [r3, #4]
 800aa38:	687b      	ldr	r3, [r7, #4]
 800aa3a:	4618      	mov	r0, r3
 800aa3c:	370c      	adds	r7, #12
 800aa3e:	46bd      	mov	sp, r7
 800aa40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa44:	4770      	bx	lr
 800aa46:	bf00      	nop
 800aa48:	080248a8 	.word	0x080248a8

0800aa4c <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800aa4c:	b480      	push	{r7}
 800aa4e:	b083      	sub	sp, #12
 800aa50:	af00      	add	r7, sp, #0
 800aa52:	6078      	str	r0, [r7, #4]
 800aa54:	4a04      	ldr	r2, [pc, #16]	@ (800aa68 <_ZN13ModelListenerD1Ev+0x1c>)
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	601a      	str	r2, [r3, #0]
 800aa5a:	687b      	ldr	r3, [r7, #4]
 800aa5c:	4618      	mov	r0, r3
 800aa5e:	370c      	adds	r7, #12
 800aa60:	46bd      	mov	sp, r7
 800aa62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa66:	4770      	bx	lr
 800aa68:	080248a8 	.word	0x080248a8

0800aa6c <_ZN13ModelListenerD0Ev>:
 800aa6c:	b580      	push	{r7, lr}
 800aa6e:	b082      	sub	sp, #8
 800aa70:	af00      	add	r7, sp, #0
 800aa72:	6078      	str	r0, [r7, #4]
 800aa74:	6878      	ldr	r0, [r7, #4]
 800aa76:	f7ff ffe9 	bl	800aa4c <_ZN13ModelListenerD1Ev>
 800aa7a:	2108      	movs	r1, #8
 800aa7c:	6878      	ldr	r0, [r7, #4]
 800aa7e:	f017 fba6 	bl	80221ce <_ZdlPvj>
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	4618      	mov	r0, r3
 800aa86:	3708      	adds	r7, #8
 800aa88:	46bd      	mov	sp, r7
 800aa8a:	bd80      	pop	{r7, pc}

0800aa8c <_ZN13ModelListener16notifyADCChangedEm>:


    virtual void notifyADCChanged(uint32_t newVal) {}
 800aa8c:	b480      	push	{r7}
 800aa8e:	b083      	sub	sp, #12
 800aa90:	af00      	add	r7, sp, #0
 800aa92:	6078      	str	r0, [r7, #4]
 800aa94:	6039      	str	r1, [r7, #0]
 800aa96:	bf00      	nop
 800aa98:	370c      	adds	r7, #12
 800aa9a:	46bd      	mov	sp, r7
 800aa9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aaa0:	4770      	bx	lr

0800aaa2 <_ZN13ModelListener24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp) {}
 800aaa2:	b480      	push	{r7}
 800aaa4:	b083      	sub	sp, #12
 800aaa6:	af00      	add	r7, sp, #0
 800aaa8:	6078      	str	r0, [r7, #4]
 800aaaa:	ed87 0a00 	vstr	s0, [r7]
 800aaae:	bf00      	nop
 800aab0:	370c      	adds	r7, #12
 800aab2:	46bd      	mov	sp, r7
 800aab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aab8:	4770      	bx	lr

0800aaba <_ZN13ModelListener21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity) {}
 800aaba:	b480      	push	{r7}
 800aabc:	b083      	sub	sp, #12
 800aabe:	af00      	add	r7, sp, #0
 800aac0:	6078      	str	r0, [r7, #4]
 800aac2:	ed87 0a00 	vstr	s0, [r7]
 800aac6:	bf00      	nop
 800aac8:	370c      	adds	r7, #12
 800aaca:	46bd      	mov	sp, r7
 800aacc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aad0:	4770      	bx	lr
	...

0800aad4 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800aad4:	b580      	push	{r7, lr}
 800aad6:	b082      	sub	sp, #8
 800aad8:	af00      	add	r7, sp, #0
 800aada:	6078      	str	r0, [r7, #4]
 800aadc:	4a09      	ldr	r2, [pc, #36]	@ (800ab04 <_ZN13MainPresenterD1Ev+0x30>)
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	601a      	str	r2, [r3, #0]
 800aae2:	4a09      	ldr	r2, [pc, #36]	@ (800ab08 <_ZN13MainPresenterD1Ev+0x34>)
 800aae4:	687b      	ldr	r3, [r7, #4]
 800aae6:	605a      	str	r2, [r3, #4]
 800aae8:	687b      	ldr	r3, [r7, #4]
 800aaea:	3304      	adds	r3, #4
 800aaec:	4618      	mov	r0, r3
 800aaee:	f7ff ffad 	bl	800aa4c <_ZN13ModelListenerD1Ev>
 800aaf2:	687b      	ldr	r3, [r7, #4]
 800aaf4:	4618      	mov	r0, r3
 800aaf6:	f7ff ff65 	bl	800a9c4 <_ZN8touchgfx9PresenterD1Ev>
 800aafa:	687b      	ldr	r3, [r7, #4]
 800aafc:	4618      	mov	r0, r3
 800aafe:	3708      	adds	r7, #8
 800ab00:	46bd      	mov	sp, r7
 800ab02:	bd80      	pop	{r7, pc}
 800ab04:	08024868 	.word	0x08024868
 800ab08:	0802488c 	.word	0x0802488c

0800ab0c <_ZThn4_N13MainPresenterD1Ev>:
 800ab0c:	f1a0 0004 	sub.w	r0, r0, #4
 800ab10:	e7e0      	b.n	800aad4 <_ZN13MainPresenterD1Ev>
 800ab12:	bf00      	nop

0800ab14 <_ZN13MainPresenterD0Ev>:
 800ab14:	b580      	push	{r7, lr}
 800ab16:	b082      	sub	sp, #8
 800ab18:	af00      	add	r7, sp, #0
 800ab1a:	6078      	str	r0, [r7, #4]
 800ab1c:	6878      	ldr	r0, [r7, #4]
 800ab1e:	f7ff ffd9 	bl	800aad4 <_ZN13MainPresenterD1Ev>
 800ab22:	2110      	movs	r1, #16
 800ab24:	6878      	ldr	r0, [r7, #4]
 800ab26:	f017 fb52 	bl	80221ce <_ZdlPvj>
 800ab2a:	687b      	ldr	r3, [r7, #4]
 800ab2c:	4618      	mov	r0, r3
 800ab2e:	3708      	adds	r7, #8
 800ab30:	46bd      	mov	sp, r7
 800ab32:	bd80      	pop	{r7, pc}

0800ab34 <_ZThn4_N13MainPresenterD0Ev>:
 800ab34:	f1a0 0004 	sub.w	r0, r0, #4
 800ab38:	e7ec      	b.n	800ab14 <_ZN13MainPresenterD0Ev>
	...

0800ab3c <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800ab3c:	b580      	push	{r7, lr}
 800ab3e:	b082      	sub	sp, #8
 800ab40:	af00      	add	r7, sp, #0
 800ab42:	6078      	str	r0, [r7, #4]
 800ab44:	6039      	str	r1, [r7, #0]
    : view(v)
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	4618      	mov	r0, r3
 800ab4a:	f7ff ff5b 	bl	800aa04 <_ZN8touchgfx9PresenterC1Ev>
 800ab4e:	687b      	ldr	r3, [r7, #4]
 800ab50:	3304      	adds	r3, #4
 800ab52:	4618      	mov	r0, r3
 800ab54:	f7ff ff66 	bl	800aa24 <_ZN13ModelListenerC1Ev>
 800ab58:	4a06      	ldr	r2, [pc, #24]	@ (800ab74 <_ZN13MainPresenterC1ER8MainView+0x38>)
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	601a      	str	r2, [r3, #0]
 800ab5e:	4a06      	ldr	r2, [pc, #24]	@ (800ab78 <_ZN13MainPresenterC1ER8MainView+0x3c>)
 800ab60:	687b      	ldr	r3, [r7, #4]
 800ab62:	605a      	str	r2, [r3, #4]
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	683a      	ldr	r2, [r7, #0]
 800ab68:	60da      	str	r2, [r3, #12]
{
}
 800ab6a:	687b      	ldr	r3, [r7, #4]
 800ab6c:	4618      	mov	r0, r3
 800ab6e:	3708      	adds	r7, #8
 800ab70:	46bd      	mov	sp, r7
 800ab72:	bd80      	pop	{r7, pc}
 800ab74:	08024868 	.word	0x08024868
 800ab78:	0802488c 	.word	0x0802488c

0800ab7c <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800ab7c:	b480      	push	{r7}
 800ab7e:	b083      	sub	sp, #12
 800ab80:	af00      	add	r7, sp, #0
 800ab82:	6078      	str	r0, [r7, #4]
}
 800ab84:	bf00      	nop
 800ab86:	370c      	adds	r7, #12
 800ab88:	46bd      	mov	sp, r7
 800ab8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab8e:	4770      	bx	lr

0800ab90 <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 800ab90:	b480      	push	{r7}
 800ab92:	b083      	sub	sp, #12
 800ab94:	af00      	add	r7, sp, #0
 800ab96:	6078      	str	r0, [r7, #4]
}
 800ab98:	bf00      	nop
 800ab9a:	370c      	adds	r7, #12
 800ab9c:	46bd      	mov	sp, r7
 800ab9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aba2:	4770      	bx	lr

0800aba4 <_ZN13MainPresenter16notifyADCChangedEm>:


void MainPresenter::notifyADCChanged(uint32_t newVal){
 800aba4:	b580      	push	{r7, lr}
 800aba6:	b082      	sub	sp, #8
 800aba8:	af00      	add	r7, sp, #0
 800abaa:	6078      	str	r0, [r7, #4]
 800abac:	6039      	str	r1, [r7, #0]
	view.setVal(newVal);
 800abae:	687b      	ldr	r3, [r7, #4]
 800abb0:	68da      	ldr	r2, [r3, #12]
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	68db      	ldr	r3, [r3, #12]
 800abb6:	681b      	ldr	r3, [r3, #0]
 800abb8:	3338      	adds	r3, #56	@ 0x38
 800abba:	681b      	ldr	r3, [r3, #0]
 800abbc:	6839      	ldr	r1, [r7, #0]
 800abbe:	4610      	mov	r0, r2
 800abc0:	4798      	blx	r3
}
 800abc2:	bf00      	nop
 800abc4:	3708      	adds	r7, #8
 800abc6:	46bd      	mov	sp, r7
 800abc8:	bd80      	pop	{r7, pc}

0800abca <_ZThn4_N13MainPresenter16notifyADCChangedEm>:

    virtual void notifyADCChanged(uint32_t newVal);
 800abca:	f1a0 0004 	sub.w	r0, r0, #4
 800abce:	f7ff bfe9 	b.w	800aba4 <_ZN13MainPresenter16notifyADCChangedEm>

0800abd2 <_ZN13MainPresenter24notifyTemperatureChangedEf>:

void MainPresenter::notifyTemperatureChanged(float newTemp){
 800abd2:	b580      	push	{r7, lr}
 800abd4:	b082      	sub	sp, #8
 800abd6:	af00      	add	r7, sp, #0
 800abd8:	6078      	str	r0, [r7, #4]
 800abda:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(newTemp);
 800abde:	687b      	ldr	r3, [r7, #4]
 800abe0:	68da      	ldr	r2, [r3, #12]
 800abe2:	687b      	ldr	r3, [r7, #4]
 800abe4:	68db      	ldr	r3, [r3, #12]
 800abe6:	681b      	ldr	r3, [r3, #0]
 800abe8:	3340      	adds	r3, #64	@ 0x40
 800abea:	681b      	ldr	r3, [r3, #0]
 800abec:	ed97 0a00 	vldr	s0, [r7]
 800abf0:	4610      	mov	r0, r2
 800abf2:	4798      	blx	r3

}
 800abf4:	bf00      	nop
 800abf6:	3708      	adds	r7, #8
 800abf8:	46bd      	mov	sp, r7
 800abfa:	bd80      	pop	{r7, pc}

0800abfc <_ZThn4_N13MainPresenter24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp);
 800abfc:	f1a0 0004 	sub.w	r0, r0, #4
 800ac00:	f7ff bfe7 	b.w	800abd2 <_ZN13MainPresenter24notifyTemperatureChangedEf>

0800ac04 <_ZN13MainPresenter21notifyHumidityChangedEf>:

void MainPresenter::notifyHumidityChanged(float newHumidity){
 800ac04:	b580      	push	{r7, lr}
 800ac06:	b082      	sub	sp, #8
 800ac08:	af00      	add	r7, sp, #0
 800ac0a:	6078      	str	r0, [r7, #4]
 800ac0c:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(newHumidity);
 800ac10:	687b      	ldr	r3, [r7, #4]
 800ac12:	68da      	ldr	r2, [r3, #12]
 800ac14:	687b      	ldr	r3, [r7, #4]
 800ac16:	68db      	ldr	r3, [r3, #12]
 800ac18:	681b      	ldr	r3, [r3, #0]
 800ac1a:	333c      	adds	r3, #60	@ 0x3c
 800ac1c:	681b      	ldr	r3, [r3, #0]
 800ac1e:	ed97 0a00 	vldr	s0, [r7]
 800ac22:	4610      	mov	r0, r2
 800ac24:	4798      	blx	r3
}
 800ac26:	bf00      	nop
 800ac28:	3708      	adds	r7, #8
 800ac2a:	46bd      	mov	sp, r7
 800ac2c:	bd80      	pop	{r7, pc}

0800ac2e <_ZThn4_N13MainPresenter21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity);
 800ac2e:	f1a0 0004 	sub.w	r0, r0, #4
 800ac32:	f7ff bfe7 	b.w	800ac04 <_ZN13MainPresenter21notifyHumidityChangedEf>

0800ac36 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800ac36:	b580      	push	{r7, lr}
 800ac38:	b084      	sub	sp, #16
 800ac3a:	af00      	add	r7, sp, #0
 800ac3c:	60f8      	str	r0, [r7, #12]
 800ac3e:	460b      	mov	r3, r1
 800ac40:	607a      	str	r2, [r7, #4]
 800ac42:	ed87 0a00 	vstr	s0, [r7]
 800ac46:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800ac48:	463b      	mov	r3, r7
 800ac4a:	8979      	ldrh	r1, [r7, #10]
 800ac4c:	687a      	ldr	r2, [r7, #4]
 800ac4e:	68f8      	ldr	r0, [r7, #12]
 800ac50:	f008 ff34 	bl	8013abc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800ac54:	4603      	mov	r3, r0
    }
 800ac56:	4618      	mov	r0, r3
 800ac58:	3710      	adds	r7, #16
 800ac5a:	46bd      	mov	sp, r7
 800ac5c:	bd80      	pop	{r7, pc}
	...

0800ac60 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 800ac60:	b580      	push	{r7, lr}
 800ac62:	b082      	sub	sp, #8
 800ac64:	af00      	add	r7, sp, #0
 800ac66:	6078      	str	r0, [r7, #4]
 800ac68:	4a05      	ldr	r2, [pc, #20]	@ (800ac80 <_ZN8MainViewD1Ev+0x20>)
 800ac6a:	687b      	ldr	r3, [r7, #4]
 800ac6c:	601a      	str	r2, [r3, #0]
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	4618      	mov	r0, r3
 800ac72:	f7ff fa71 	bl	800a158 <_ZN12MainViewBaseD1Ev>
 800ac76:	687b      	ldr	r3, [r7, #4]
 800ac78:	4618      	mov	r0, r3
 800ac7a:	3708      	adds	r7, #8
 800ac7c:	46bd      	mov	sp, r7
 800ac7e:	bd80      	pop	{r7, pc}
 800ac80:	080248dc 	.word	0x080248dc

0800ac84 <_ZN8MainViewD0Ev>:
 800ac84:	b580      	push	{r7, lr}
 800ac86:	b082      	sub	sp, #8
 800ac88:	af00      	add	r7, sp, #0
 800ac8a:	6078      	str	r0, [r7, #4]
 800ac8c:	6878      	ldr	r0, [r7, #4]
 800ac8e:	f7ff ffe7 	bl	800ac60 <_ZN8MainViewD1Ev>
 800ac92:	f44f 7110 	mov.w	r1, #576	@ 0x240
 800ac96:	6878      	ldr	r0, [r7, #4]
 800ac98:	f017 fa99 	bl	80221ce <_ZdlPvj>
 800ac9c:	687b      	ldr	r3, [r7, #4]
 800ac9e:	4618      	mov	r0, r3
 800aca0:	3708      	adds	r7, #8
 800aca2:	46bd      	mov	sp, r7
 800aca4:	bd80      	pop	{r7, pc}
	...

0800aca8 <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800aca8:	b580      	push	{r7, lr}
 800acaa:	b082      	sub	sp, #8
 800acac:	af00      	add	r7, sp, #0
 800acae:	6078      	str	r0, [r7, #4]
 800acb0:	687b      	ldr	r3, [r7, #4]
 800acb2:	4618      	mov	r0, r3
 800acb4:	f7ff f810 	bl	8009cd8 <_ZN12MainViewBaseC1Ev>
 800acb8:	4a05      	ldr	r2, [pc, #20]	@ (800acd0 <_ZN8MainViewC1Ev+0x28>)
 800acba:	687b      	ldr	r3, [r7, #4]
 800acbc:	601a      	str	r2, [r3, #0]
 800acbe:	687b      	ldr	r3, [r7, #4]
 800acc0:	2200      	movs	r2, #0
 800acc2:	f883 223c 	strb.w	r2, [r3, #572]	@ 0x23c
 800acc6:	687b      	ldr	r3, [r7, #4]
 800acc8:	4618      	mov	r0, r3
 800acca:	3708      	adds	r7, #8
 800accc:	46bd      	mov	sp, r7
 800acce:	bd80      	pop	{r7, pc}
 800acd0:	080248dc 	.word	0x080248dc

0800acd4 <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 800acd4:	b580      	push	{r7, lr}
 800acd6:	b082      	sub	sp, #8
 800acd8:	af00      	add	r7, sp, #0
 800acda:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 800acdc:	6878      	ldr	r0, [r7, #4]
 800acde:	f000 f855 	bl	800ad8c <_ZN8MainView17updateGFXElementsEv>
    MainViewBase::setupScreen();
 800ace2:	687b      	ldr	r3, [r7, #4]
 800ace4:	4618      	mov	r0, r3
 800ace6:	f7ff fa80 	bl	800a1ea <_ZN12MainViewBase11setupScreenEv>

}
 800acea:	bf00      	nop
 800acec:	3708      	adds	r7, #8
 800acee:	46bd      	mov	sp, r7
 800acf0:	bd80      	pop	{r7, pc}

0800acf2 <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 800acf2:	b580      	push	{r7, lr}
 800acf4:	b082      	sub	sp, #8
 800acf6:	af00      	add	r7, sp, #0
 800acf8:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	f893 323c 	ldrb.w	r3, [r3, #572]	@ 0x23c
 800ad00:	1c5a      	adds	r2, r3, #1
 800ad02:	b2d1      	uxtb	r1, r2
 800ad04:	687a      	ldr	r2, [r7, #4]
 800ad06:	f882 123c 	strb.w	r1, [r2, #572]	@ 0x23c
 800ad0a:	2b2a      	cmp	r3, #42	@ 0x2a
 800ad0c:	d804      	bhi.n	800ad18 <_ZN8MainView13increaseValueEv+0x26>
 800ad0e:	687b      	ldr	r3, [r7, #4]
 800ad10:	f503 730f 	add.w	r3, r3, #572	@ 0x23c
 800ad14:	781a      	ldrb	r2, [r3, #0]
 800ad16:	e000      	b.n	800ad1a <_ZN8MainView13increaseValueEv+0x28>
 800ad18:	222a      	movs	r2, #42	@ 0x2a
 800ad1a:	687b      	ldr	r3, [r7, #4]
 800ad1c:	f883 223c 	strb.w	r2, [r3, #572]	@ 0x23c
    updateGFXElements();
 800ad20:	6878      	ldr	r0, [r7, #4]
 800ad22:	f000 f833 	bl	800ad8c <_ZN8MainView17updateGFXElementsEv>
}
 800ad26:	bf00      	nop
 800ad28:	3708      	adds	r7, #8
 800ad2a:	46bd      	mov	sp, r7
 800ad2c:	bd80      	pop	{r7, pc}

0800ad2e <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 800ad2e:	b580      	push	{r7, lr}
 800ad30:	b082      	sub	sp, #8
 800ad32:	af00      	add	r7, sp, #0
 800ad34:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 800ad36:	687b      	ldr	r3, [r7, #4]
 800ad38:	f893 323c 	ldrb.w	r3, [r3, #572]	@ 0x23c
 800ad3c:	1e5a      	subs	r2, r3, #1
 800ad3e:	b2d1      	uxtb	r1, r2
 800ad40:	687a      	ldr	r2, [r7, #4]
 800ad42:	f882 123c 	strb.w	r1, [r2, #572]	@ 0x23c
 800ad46:	2b00      	cmp	r3, #0
 800ad48:	d004      	beq.n	800ad54 <_ZN8MainView13decreaseValueEv+0x26>
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	f503 730f 	add.w	r3, r3, #572	@ 0x23c
 800ad50:	781a      	ldrb	r2, [r3, #0]
 800ad52:	e000      	b.n	800ad56 <_ZN8MainView13decreaseValueEv+0x28>
 800ad54:	2200      	movs	r2, #0
 800ad56:	687b      	ldr	r3, [r7, #4]
 800ad58:	f883 223c 	strb.w	r2, [r3, #572]	@ 0x23c
    updateGFXElements();
 800ad5c:	6878      	ldr	r0, [r7, #4]
 800ad5e:	f000 f815 	bl	800ad8c <_ZN8MainView17updateGFXElementsEv>
}
 800ad62:	bf00      	nop
 800ad64:	3708      	adds	r7, #8
 800ad66:	46bd      	mov	sp, r7
 800ad68:	bd80      	pop	{r7, pc}
	...

0800ad6c <_ZN8MainView12ToggleLightsEv>:

void MainView::ToggleLights(){
 800ad6c:	b580      	push	{r7, lr}
 800ad6e:	b082      	sub	sp, #8
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
 800ad74:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800ad78:	4803      	ldr	r0, [pc, #12]	@ (800ad88 <_ZN8MainView12ToggleLightsEv+0x1c>)
 800ad7a:	f7f9 fabe 	bl	80042fa <HAL_GPIO_TogglePin>


}
 800ad7e:	bf00      	nop
 800ad80:	3708      	adds	r7, #8
 800ad82:	46bd      	mov	sp, r7
 800ad84:	bd80      	pop	{r7, pc}
 800ad86:	bf00      	nop
 800ad88:	40020400 	.word	0x40020400

0800ad8c <_ZN8MainView17updateGFXElementsEv>:
void MainView::updateGFXElements()
{
 800ad8c:	b480      	push	{r7}
 800ad8e:	b083      	sub	sp, #12
 800ad90:	af00      	add	r7, sp, #0
 800ad92:	6078      	str	r0, [r7, #4]
//    }
//    // Invalidate all GFX area, which will result in it being redrawn in next tick.
//    countTxt.invalidate();
//    buttonUp.invalidate();
//    buttonDown.invalidate();
}
 800ad94:	bf00      	nop
 800ad96:	370c      	adds	r7, #12
 800ad98:	46bd      	mov	sp, r7
 800ad9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad9e:	4770      	bx	lr

0800ada0 <_ZN8MainView6setValEm>:

void MainView::setVal(uint32_t val){
 800ada0:	b580      	push	{r7, lr}
 800ada2:	b082      	sub	sp, #8
 800ada4:	af00      	add	r7, sp, #0
 800ada6:	6078      	str	r0, [r7, #4]
 800ada8:	6039      	str	r1, [r7, #0]

	Unicode::snprintf(ADCVALBuffer, ADCVAL_SIZE, "%d", val);
 800adaa:	687b      	ldr	r3, [r7, #4]
 800adac:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800adb0:	683b      	ldr	r3, [r7, #0]
 800adb2:	4a07      	ldr	r2, [pc, #28]	@ (800add0 <_ZN8MainView6setValEm+0x30>)
 800adb4:	2114      	movs	r1, #20
 800adb6:	f008 fc81 	bl	80136bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ADCVAL.invalidate();
 800adba:	687b      	ldr	r3, [r7, #4]
 800adbc:	f503 73b4 	add.w	r3, r3, #360	@ 0x168
 800adc0:	4618      	mov	r0, r3
 800adc2:	f006 fd21 	bl	8011808 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800adc6:	bf00      	nop
 800adc8:	3708      	adds	r7, #8
 800adca:	46bd      	mov	sp, r7
 800adcc:	bd80      	pop	{r7, pc}
 800adce:	bf00      	nop
 800add0:	08023a18 	.word	0x08023a18

0800add4 <_ZN8MainView14setTemperatureEf>:

void MainView::setTemperature(float temp){
 800add4:	b580      	push	{r7, lr}
 800add6:	b082      	sub	sp, #8
 800add8:	af00      	add	r7, sp, #0
 800adda:	6078      	str	r0, [r7, #4]
 800addc:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(TEMPVALBuffer, TEMPVAL_SIZE, "%.1f", temp);
 800ade0:	687b      	ldr	r3, [r7, #4]
 800ade2:	f503 73ee 	add.w	r3, r3, #476	@ 0x1dc
 800ade6:	ed97 0a00 	vldr	s0, [r7]
 800adea:	4a07      	ldr	r2, [pc, #28]	@ (800ae08 <_ZN8MainView14setTemperatureEf+0x34>)
 800adec:	2114      	movs	r1, #20
 800adee:	4618      	mov	r0, r3
 800adf0:	f7ff ff21 	bl	800ac36 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	TEMPVAL.invalidate();
 800adf4:	687b      	ldr	r3, [r7, #4]
 800adf6:	f503 738e 	add.w	r3, r3, #284	@ 0x11c
 800adfa:	4618      	mov	r0, r3
 800adfc:	f006 fd04 	bl	8011808 <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800ae00:	bf00      	nop
 800ae02:	3708      	adds	r7, #8
 800ae04:	46bd      	mov	sp, r7
 800ae06:	bd80      	pop	{r7, pc}
 800ae08:	08023a1c 	.word	0x08023a1c

0800ae0c <_ZN8MainView11setHumidityEf>:

void MainView::setHumidity(float humidity){
 800ae0c:	b580      	push	{r7, lr}
 800ae0e:	b082      	sub	sp, #8
 800ae10:	af00      	add	r7, sp, #0
 800ae12:	6078      	str	r0, [r7, #4]
 800ae14:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(HUMVALBuffer, HUMVAL_SIZE, "%.1f", humidity);
 800ae18:	687b      	ldr	r3, [r7, #4]
 800ae1a:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ae1e:	ed97 0a00 	vldr	s0, [r7]
 800ae22:	4a07      	ldr	r2, [pc, #28]	@ (800ae40 <_ZN8MainView11setHumidityEf+0x34>)
 800ae24:	2114      	movs	r1, #20
 800ae26:	4618      	mov	r0, r3
 800ae28:	f7ff ff05 	bl	800ac36 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	HUMVAL.invalidate();
 800ae2c:	687b      	ldr	r3, [r7, #4]
 800ae2e:	33d0      	adds	r3, #208	@ 0xd0
 800ae30:	4618      	mov	r0, r3
 800ae32:	f006 fce9 	bl	8011808 <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800ae36:	bf00      	nop
 800ae38:	3708      	adds	r7, #8
 800ae3a:	46bd      	mov	sp, r7
 800ae3c:	bd80      	pop	{r7, pc}
 800ae3e:	bf00      	nop
 800ae40:	08023a1c 	.word	0x08023a1c

0800ae44 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 800ae44:	b480      	push	{r7}
 800ae46:	b083      	sub	sp, #12
 800ae48:	af00      	add	r7, sp, #0
 800ae4a:	6078      	str	r0, [r7, #4]
 800ae4c:	687b      	ldr	r3, [r7, #4]
 800ae4e:	2200      	movs	r2, #0
 800ae50:	601a      	str	r2, [r3, #0]
{
}
 800ae52:	687b      	ldr	r3, [r7, #4]
 800ae54:	4618      	mov	r0, r3
 800ae56:	370c      	adds	r7, #12
 800ae58:	46bd      	mov	sp, r7
 800ae5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae5e:	4770      	bx	lr

0800ae60 <_ZN5Model4tickEv>:

void Model::tick()
{
 800ae60:	b580      	push	{r7, lr}
 800ae62:	b086      	sub	sp, #24
 800ae64:	af00      	add	r7, sp, #0
 800ae66:	6078      	str	r0, [r7, #4]

	float humidity = hum;
 800ae68:	4b18      	ldr	r3, [pc, #96]	@ (800aecc <_ZN5Model4tickEv+0x6c>)
 800ae6a:	681b      	ldr	r3, [r3, #0]
 800ae6c:	617b      	str	r3, [r7, #20]
	float temperature = temp;
 800ae6e:	4b18      	ldr	r3, [pc, #96]	@ (800aed0 <_ZN5Model4tickEv+0x70>)
 800ae70:	681b      	ldr	r3, [r3, #0]
 800ae72:	613b      	str	r3, [r7, #16]
	uint32_t val = htim4.Instance->CCR2;
 800ae74:	4b17      	ldr	r3, [pc, #92]	@ (800aed4 <_ZN5Model4tickEv+0x74>)
 800ae76:	681b      	ldr	r3, [r3, #0]
 800ae78:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ae7a:	60fb      	str	r3, [r7, #12]

	if (modelListener != 0) {
 800ae7c:	687b      	ldr	r3, [r7, #4]
 800ae7e:	681b      	ldr	r3, [r3, #0]
 800ae80:	2b00      	cmp	r3, #0
 800ae82:	d01f      	beq.n	800aec4 <_ZN5Model4tickEv+0x64>
		modelListener -> notifyADCChanged(val);
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	681a      	ldr	r2, [r3, #0]
 800ae88:	687b      	ldr	r3, [r7, #4]
 800ae8a:	681b      	ldr	r3, [r3, #0]
 800ae8c:	681b      	ldr	r3, [r3, #0]
 800ae8e:	3308      	adds	r3, #8
 800ae90:	681b      	ldr	r3, [r3, #0]
 800ae92:	68f9      	ldr	r1, [r7, #12]
 800ae94:	4610      	mov	r0, r2
 800ae96:	4798      	blx	r3
		modelListener -> notifyTemperatureChanged(temperature);
 800ae98:	687b      	ldr	r3, [r7, #4]
 800ae9a:	681a      	ldr	r2, [r3, #0]
 800ae9c:	687b      	ldr	r3, [r7, #4]
 800ae9e:	681b      	ldr	r3, [r3, #0]
 800aea0:	681b      	ldr	r3, [r3, #0]
 800aea2:	330c      	adds	r3, #12
 800aea4:	681b      	ldr	r3, [r3, #0]
 800aea6:	ed97 0a04 	vldr	s0, [r7, #16]
 800aeaa:	4610      	mov	r0, r2
 800aeac:	4798      	blx	r3
		modelListener -> notifyHumidityChanged(humidity);
 800aeae:	687b      	ldr	r3, [r7, #4]
 800aeb0:	681a      	ldr	r2, [r3, #0]
 800aeb2:	687b      	ldr	r3, [r7, #4]
 800aeb4:	681b      	ldr	r3, [r3, #0]
 800aeb6:	681b      	ldr	r3, [r3, #0]
 800aeb8:	3310      	adds	r3, #16
 800aeba:	681b      	ldr	r3, [r3, #0]
 800aebc:	ed97 0a05 	vldr	s0, [r7, #20]
 800aec0:	4610      	mov	r0, r2
 800aec2:	4798      	blx	r3


	}


}
 800aec4:	bf00      	nop
 800aec6:	3718      	adds	r7, #24
 800aec8:	46bd      	mov	sp, r7
 800aeca:	bd80      	pop	{r7, pc}
 800aecc:	200005d8 	.word	0x200005d8
 800aed0:	200005d4 	.word	0x200005d4
 800aed4:	20000588 	.word	0x20000588

0800aed8 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800aed8:	b480      	push	{r7}
 800aeda:	b083      	sub	sp, #12
 800aedc:	af00      	add	r7, sp, #0
 800aede:	6078      	str	r0, [r7, #4]
    {
 800aee0:	4a04      	ldr	r2, [pc, #16]	@ (800aef4 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	601a      	str	r2, [r3, #0]
    }
 800aee6:	687b      	ldr	r3, [r7, #4]
 800aee8:	4618      	mov	r0, r3
 800aeea:	370c      	adds	r7, #12
 800aeec:	46bd      	mov	sp, r7
 800aeee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aef2:	4770      	bx	lr
 800aef4:	08024940 	.word	0x08024940

0800aef8 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800aef8:	b580      	push	{r7, lr}
 800aefa:	b082      	sub	sp, #8
 800aefc:	af00      	add	r7, sp, #0
 800aefe:	6078      	str	r0, [r7, #4]
    }
 800af00:	6878      	ldr	r0, [r7, #4]
 800af02:	f7ff ffe9 	bl	800aed8 <_ZN8touchgfx15TouchControllerD1Ev>
 800af06:	2104      	movs	r1, #4
 800af08:	6878      	ldr	r0, [r7, #4]
 800af0a:	f017 f960 	bl	80221ce <_ZdlPvj>
 800af0e:	687b      	ldr	r3, [r7, #4]
 800af10:	4618      	mov	r0, r3
 800af12:	3708      	adds	r7, #8
 800af14:	46bd      	mov	sp, r7
 800af16:	bd80      	pop	{r7, pc}

0800af18 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 800af18:	b480      	push	{r7}
 800af1a:	b083      	sub	sp, #12
 800af1c:	af00      	add	r7, sp, #0
 800af1e:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800af20:	bf00      	nop
 800af22:	370c      	adds	r7, #12
 800af24:	46bd      	mov	sp, r7
 800af26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af2a:	4770      	bx	lr

0800af2c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800af2c:	b580      	push	{r7, lr}
 800af2e:	b084      	sub	sp, #16
 800af30:	af00      	add	r7, sp, #0
 800af32:	60f8      	str	r0, [r7, #12]
 800af34:	60b9      	str	r1, [r7, #8]
 800af36:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

	return((bool) Touch_TouchGFXSampleTouch(&x,&y));
 800af38:	6879      	ldr	r1, [r7, #4]
 800af3a:	68b8      	ldr	r0, [r7, #8]
 800af3c:	f7f7 fc70 	bl	8002820 <Touch_TouchGFXSampleTouch>
 800af40:	4603      	mov	r3, r0
 800af42:	2b00      	cmp	r3, #0
 800af44:	bf14      	ite	ne
 800af46:	2301      	movne	r3, #1
 800af48:	2300      	moveq	r3, #0
 800af4a:	b2db      	uxtb	r3, r3
}
 800af4c:	4618      	mov	r0, r3
 800af4e:	3710      	adds	r7, #16
 800af50:	46bd      	mov	sp, r7
 800af52:	bd80      	pop	{r7, pc}

0800af54 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800af54:	b580      	push	{r7, lr}
 800af56:	b082      	sub	sp, #8
 800af58:	af00      	add	r7, sp, #0
 800af5a:	6078      	str	r0, [r7, #4]
 800af5c:	4a05      	ldr	r2, [pc, #20]	@ (800af74 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800af5e:	687b      	ldr	r3, [r7, #4]
 800af60:	601a      	str	r2, [r3, #0]
 800af62:	687b      	ldr	r3, [r7, #4]
 800af64:	4618      	mov	r0, r3
 800af66:	f7ff ffb7 	bl	800aed8 <_ZN8touchgfx15TouchControllerD1Ev>
 800af6a:	687b      	ldr	r3, [r7, #4]
 800af6c:	4618      	mov	r0, r3
 800af6e:	3708      	adds	r7, #8
 800af70:	46bd      	mov	sp, r7
 800af72:	bd80      	pop	{r7, pc}
 800af74:	08024928 	.word	0x08024928

0800af78 <_ZN20STM32TouchControllerD0Ev>:
 800af78:	b580      	push	{r7, lr}
 800af7a:	b082      	sub	sp, #8
 800af7c:	af00      	add	r7, sp, #0
 800af7e:	6078      	str	r0, [r7, #4]
 800af80:	6878      	ldr	r0, [r7, #4]
 800af82:	f7ff ffe7 	bl	800af54 <_ZN20STM32TouchControllerD1Ev>
 800af86:	2104      	movs	r1, #4
 800af88:	6878      	ldr	r0, [r7, #4]
 800af8a:	f017 f920 	bl	80221ce <_ZdlPvj>
 800af8e:	687b      	ldr	r3, [r7, #4]
 800af90:	4618      	mov	r0, r3
 800af92:	3708      	adds	r7, #8
 800af94:	46bd      	mov	sp, r7
 800af96:	bd80      	pop	{r7, pc}

0800af98 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800af98:	b480      	push	{r7}
 800af9a:	af00      	add	r7, sp, #0

}
 800af9c:	bf00      	nop
 800af9e:	46bd      	mov	sp, r7
 800afa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afa4:	4770      	bx	lr
	...

0800afa8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800afa8:	b480      	push	{r7}
 800afaa:	b083      	sub	sp, #12
 800afac:	af00      	add	r7, sp, #0
 800afae:	4603      	mov	r3, r0
 800afb0:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800afb2:	79fb      	ldrb	r3, [r7, #7]
 800afb4:	2b03      	cmp	r3, #3
 800afb6:	d80c      	bhi.n	800afd2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800afb8:	a201      	add	r2, pc, #4	@ (adr r2, 800afc0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800afba:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800afbe:	bf00      	nop
 800afc0:	0800afd1 	.word	0x0800afd1
 800afc4:	0800afd1 	.word	0x0800afd1
 800afc8:	0800afd1 	.word	0x0800afd1
 800afcc:	0800afd1 	.word	0x0800afd1
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800afd0:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800afd2:	bf00      	nop
 800afd4:	370c      	adds	r7, #12
 800afd6:	46bd      	mov	sp, r7
 800afd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afdc:	4770      	bx	lr
 800afde:	bf00      	nop

0800afe0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800afe0:	b480      	push	{r7}
 800afe2:	b083      	sub	sp, #12
 800afe4:	af00      	add	r7, sp, #0
 800afe6:	4603      	mov	r3, r0
 800afe8:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800afea:	79fb      	ldrb	r3, [r7, #7]
 800afec:	2b03      	cmp	r3, #3
 800afee:	d80c      	bhi.n	800b00a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800aff0:	a201      	add	r2, pc, #4	@ (adr r2, 800aff8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800aff2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aff6:	bf00      	nop
 800aff8:	0800b009 	.word	0x0800b009
 800affc:	0800b009 	.word	0x0800b009
 800b000:	0800b009 	.word	0x0800b009
 800b004:	0800b009 	.word	0x0800b009
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800b008:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800b00a:	bf00      	nop
 800b00c:	370c      	adds	r7, #12
 800b00e:	46bd      	mov	sp, r7
 800b010:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b014:	4770      	bx	lr
 800b016:	bf00      	nop

0800b018 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800b018:	b480      	push	{r7}
 800b01a:	b083      	sub	sp, #12
 800b01c:	af00      	add	r7, sp, #0
 800b01e:	4603      	mov	r3, r0
 800b020:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800b022:	79fb      	ldrb	r3, [r7, #7]
 800b024:	2b03      	cmp	r3, #3
 800b026:	d80c      	bhi.n	800b042 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800b028:	a201      	add	r2, pc, #4	@ (adr r2, 800b030 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800b02a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b02e:	bf00      	nop
 800b030:	0800b041 	.word	0x0800b041
 800b034:	0800b041 	.word	0x0800b041
 800b038:	0800b041 	.word	0x0800b041
 800b03c:	0800b041 	.word	0x0800b041
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800b040:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800b042:	bf00      	nop
 800b044:	370c      	adds	r7, #12
 800b046:	46bd      	mov	sp, r7
 800b048:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b04c:	4770      	bx	lr
 800b04e:	bf00      	nop

0800b050 <_ZN8touchgfx3HALD1Ev>:
 800b050:	b480      	push	{r7}
 800b052:	b083      	sub	sp, #12
 800b054:	af00      	add	r7, sp, #0
 800b056:	6078      	str	r0, [r7, #4]
 800b058:	4a04      	ldr	r2, [pc, #16]	@ (800b06c <_ZN8touchgfx3HALD1Ev+0x1c>)
 800b05a:	687b      	ldr	r3, [r7, #4]
 800b05c:	601a      	str	r2, [r3, #0]
 800b05e:	687b      	ldr	r3, [r7, #4]
 800b060:	4618      	mov	r0, r3
 800b062:	370c      	adds	r7, #12
 800b064:	46bd      	mov	sp, r7
 800b066:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b06a:	4770      	bx	lr
 800b06c:	08024d78 	.word	0x08024d78

0800b070 <_ZN8touchgfx3HALD0Ev>:
 800b070:	b580      	push	{r7, lr}
 800b072:	b082      	sub	sp, #8
 800b074:	af00      	add	r7, sp, #0
 800b076:	6078      	str	r0, [r7, #4]
 800b078:	6878      	ldr	r0, [r7, #4]
 800b07a:	f7ff ffe9 	bl	800b050 <_ZN8touchgfx3HALD1Ev>
 800b07e:	217c      	movs	r1, #124	@ 0x7c
 800b080:	6878      	ldr	r0, [r7, #4]
 800b082:	f017 f8a4 	bl	80221ce <_ZdlPvj>
 800b086:	687b      	ldr	r3, [r7, #4]
 800b088:	4618      	mov	r0, r3
 800b08a:	3708      	adds	r7, #8
 800b08c:	46bd      	mov	sp, r7
 800b08e:	bd80      	pop	{r7, pc}

0800b090 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
 800b090:	b480      	push	{r7}
 800b092:	b083      	sub	sp, #12
 800b094:	af00      	add	r7, sp, #0
 800b096:	6078      	str	r0, [r7, #4]
 800b098:	460b      	mov	r3, r1
 800b09a:	70fb      	strb	r3, [r7, #3]
 800b09c:	687b      	ldr	r3, [r7, #4]
 800b09e:	78fa      	ldrb	r2, [r7, #3]
 800b0a0:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800b0a4:	687b      	ldr	r3, [r7, #4]
 800b0a6:	2201      	movs	r2, #1
 800b0a8:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
 800b0ac:	bf00      	nop
 800b0ae:	370c      	adds	r7, #12
 800b0b0:	46bd      	mov	sp, r7
 800b0b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0b6:	4770      	bx	lr

0800b0b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
 800b0b8:	b580      	push	{r7, lr}
 800b0ba:	b082      	sub	sp, #8
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
 800b0c0:	460b      	mov	r3, r1
 800b0c2:	807b      	strh	r3, [r7, #2]
 800b0c4:	4613      	mov	r3, r2
 800b0c6:	803b      	strh	r3, [r7, #0]
 800b0c8:	4b0c      	ldr	r3, [pc, #48]	@ (800b0fc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800b0ca:	881b      	ldrh	r3, [r3, #0]
 800b0cc:	887a      	ldrh	r2, [r7, #2]
 800b0ce:	429a      	cmp	r2, r3
 800b0d0:	d304      	bcc.n	800b0dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800b0d2:	4b0b      	ldr	r3, [pc, #44]	@ (800b100 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800b0d4:	881b      	ldrh	r3, [r3, #0]
 800b0d6:	883a      	ldrh	r2, [r7, #0]
 800b0d8:	429a      	cmp	r2, r3
 800b0da:	d205      	bcs.n	800b0e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800b0dc:	4b09      	ldr	r3, [pc, #36]	@ (800b104 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800b0de:	4a0a      	ldr	r2, [pc, #40]	@ (800b108 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800b0e0:	219e      	movs	r1, #158	@ 0x9e
 800b0e2:	480a      	ldr	r0, [pc, #40]	@ (800b10c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800b0e4:	f017 f920 	bl	8022328 <__assert_func>
 800b0e8:	4a09      	ldr	r2, [pc, #36]	@ (800b110 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800b0ea:	887b      	ldrh	r3, [r7, #2]
 800b0ec:	8013      	strh	r3, [r2, #0]
 800b0ee:	4a09      	ldr	r2, [pc, #36]	@ (800b114 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800b0f0:	883b      	ldrh	r3, [r7, #0]
 800b0f2:	8013      	strh	r3, [r2, #0]
 800b0f4:	bf00      	nop
 800b0f6:	3708      	adds	r7, #8
 800b0f8:	46bd      	mov	sp, r7
 800b0fa:	bd80      	pop	{r7, pc}
 800b0fc:	20002db0 	.word	0x20002db0
 800b100:	20002db2 	.word	0x20002db2
 800b104:	08023a24 	.word	0x08023a24
 800b108:	08023a88 	.word	0x08023a88
 800b10c:	08023acc 	.word	0x08023acc
 800b110:	20002db6 	.word	0x20002db6
 800b114:	20002db8 	.word	0x20002db8

0800b118 <_ZN8touchgfx3HAL11getBlitCapsEv>:
 800b118:	b580      	push	{r7, lr}
 800b11a:	b082      	sub	sp, #8
 800b11c:	af00      	add	r7, sp, #0
 800b11e:	6078      	str	r0, [r7, #4]
 800b120:	687b      	ldr	r3, [r7, #4]
 800b122:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800b126:	2b00      	cmp	r3, #0
 800b128:	d009      	beq.n	800b13e <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
 800b12a:	687b      	ldr	r3, [r7, #4]
 800b12c:	685a      	ldr	r2, [r3, #4]
 800b12e:	687b      	ldr	r3, [r7, #4]
 800b130:	685b      	ldr	r3, [r3, #4]
 800b132:	681b      	ldr	r3, [r3, #0]
 800b134:	681b      	ldr	r3, [r3, #0]
 800b136:	4610      	mov	r0, r2
 800b138:	4798      	blx	r3
 800b13a:	4603      	mov	r3, r0
 800b13c:	e000      	b.n	800b140 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
 800b13e:	2300      	movs	r3, #0
 800b140:	4618      	mov	r0, r3
 800b142:	3708      	adds	r7, #8
 800b144:	46bd      	mov	sp, r7
 800b146:	bd80      	pop	{r7, pc}

0800b148 <_ZN8touchgfx3HAL15backPorchExitedEv>:
 800b148:	b580      	push	{r7, lr}
 800b14a:	b082      	sub	sp, #8
 800b14c:	af00      	add	r7, sp, #0
 800b14e:	6078      	str	r0, [r7, #4]
 800b150:	6878      	ldr	r0, [r7, #4]
 800b152:	f002 ff17 	bl	800df84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	681b      	ldr	r3, [r3, #0]
 800b15a:	33ac      	adds	r3, #172	@ 0xac
 800b15c:	681b      	ldr	r3, [r3, #0]
 800b15e:	6878      	ldr	r0, [r7, #4]
 800b160:	4798      	blx	r3
 800b162:	bf00      	nop
 800b164:	3708      	adds	r7, #8
 800b166:	46bd      	mov	sp, r7
 800b168:	bd80      	pop	{r7, pc}

0800b16a <_ZN8touchgfx3HAL9sampleKeyERh>:
 800b16a:	b480      	push	{r7}
 800b16c:	b083      	sub	sp, #12
 800b16e:	af00      	add	r7, sp, #0
 800b170:	6078      	str	r0, [r7, #4]
 800b172:	6039      	str	r1, [r7, #0]
 800b174:	2300      	movs	r3, #0
 800b176:	4618      	mov	r0, r3
 800b178:	370c      	adds	r7, #12
 800b17a:	46bd      	mov	sp, r7
 800b17c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b180:	4770      	bx	lr
	...

0800b184 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
 800b184:	b580      	push	{r7, lr}
 800b186:	b084      	sub	sp, #16
 800b188:	af00      	add	r7, sp, #0
 800b18a:	60f8      	str	r0, [r7, #12]
 800b18c:	60b9      	str	r1, [r7, #8]
 800b18e:	607a      	str	r2, [r7, #4]
 800b190:	603b      	str	r3, [r7, #0]
 800b192:	68bb      	ldr	r3, [r7, #8]
 800b194:	2b00      	cmp	r3, #0
 800b196:	d106      	bne.n	800b1a6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800b198:	4b0f      	ldr	r3, [pc, #60]	@ (800b1d8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800b19a:	4a10      	ldr	r2, [pc, #64]	@ (800b1dc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800b19c:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800b1a0:	480f      	ldr	r0, [pc, #60]	@ (800b1e0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800b1a2:	f017 f8c1 	bl	8022328 <__assert_func>
 800b1a6:	68fb      	ldr	r3, [r7, #12]
 800b1a8:	68ba      	ldr	r2, [r7, #8]
 800b1aa:	63da      	str	r2, [r3, #60]	@ 0x3c
 800b1ac:	68fb      	ldr	r3, [r7, #12]
 800b1ae:	687a      	ldr	r2, [r7, #4]
 800b1b0:	641a      	str	r2, [r3, #64]	@ 0x40
 800b1b2:	687b      	ldr	r3, [r7, #4]
 800b1b4:	2b00      	cmp	r3, #0
 800b1b6:	bf14      	ite	ne
 800b1b8:	2301      	movne	r3, #1
 800b1ba:	2300      	moveq	r3, #0
 800b1bc:	b2da      	uxtb	r2, r3
 800b1be:	4b09      	ldr	r3, [pc, #36]	@ (800b1e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800b1c0:	701a      	strb	r2, [r3, #0]
 800b1c2:	68fb      	ldr	r3, [r7, #12]
 800b1c4:	681b      	ldr	r3, [r3, #0]
 800b1c6:	338c      	adds	r3, #140	@ 0x8c
 800b1c8:	681b      	ldr	r3, [r3, #0]
 800b1ca:	6839      	ldr	r1, [r7, #0]
 800b1cc:	68f8      	ldr	r0, [r7, #12]
 800b1ce:	4798      	blx	r3
 800b1d0:	bf00      	nop
 800b1d2:	3710      	adds	r7, #16
 800b1d4:	46bd      	mov	sp, r7
 800b1d6:	bd80      	pop	{r7, pc}
 800b1d8:	08023b10 	.word	0x08023b10
 800b1dc:	08023b48 	.word	0x08023b48
 800b1e0:	08023acc 	.word	0x08023acc
 800b1e4:	20002dba 	.word	0x20002dba

0800b1e8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
 800b1e8:	b480      	push	{r7}
 800b1ea:	b083      	sub	sp, #12
 800b1ec:	af00      	add	r7, sp, #0
 800b1ee:	6078      	str	r0, [r7, #4]
 800b1f0:	6039      	str	r1, [r7, #0]
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	683a      	ldr	r2, [r7, #0]
 800b1f6:	645a      	str	r2, [r3, #68]	@ 0x44
 800b1f8:	683b      	ldr	r3, [r7, #0]
 800b1fa:	2b00      	cmp	r3, #0
 800b1fc:	bf14      	ite	ne
 800b1fe:	2301      	movne	r3, #1
 800b200:	2300      	moveq	r3, #0
 800b202:	b2da      	uxtb	r2, r3
 800b204:	4b03      	ldr	r3, [pc, #12]	@ (800b214 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800b206:	701a      	strb	r2, [r3, #0]
 800b208:	bf00      	nop
 800b20a:	370c      	adds	r7, #12
 800b20c:	46bd      	mov	sp, r7
 800b20e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b212:	4770      	bx	lr
 800b214:	20002dbb 	.word	0x20002dbb

0800b218 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
 800b218:	b480      	push	{r7}
 800b21a:	b083      	sub	sp, #12
 800b21c:	af00      	add	r7, sp, #0
 800b21e:	6078      	str	r0, [r7, #4]
 800b220:	2300      	movs	r3, #0
 800b222:	4618      	mov	r0, r3
 800b224:	370c      	adds	r7, #12
 800b226:	46bd      	mov	sp, r7
 800b228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b22c:	4770      	bx	lr

0800b22e <_ZN8touchgfx3HAL9taskDelayEt>:
 800b22e:	b580      	push	{r7, lr}
 800b230:	b082      	sub	sp, #8
 800b232:	af00      	add	r7, sp, #0
 800b234:	6078      	str	r0, [r7, #4]
 800b236:	460b      	mov	r3, r1
 800b238:	807b      	strh	r3, [r7, #2]
 800b23a:	687b      	ldr	r3, [r7, #4]
 800b23c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b23e:	2b00      	cmp	r3, #0
 800b240:	d004      	beq.n	800b24c <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800b246:	887a      	ldrh	r2, [r7, #2]
 800b248:	4610      	mov	r0, r2
 800b24a:	4798      	blx	r3
 800b24c:	bf00      	nop
 800b24e:	3708      	adds	r7, #8
 800b250:	46bd      	mov	sp, r7
 800b252:	bd80      	pop	{r7, pc}

0800b254 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800b254:	b480      	push	{r7}
 800b256:	b083      	sub	sp, #12
 800b258:	af00      	add	r7, sp, #0
 800b25a:	6078      	str	r0, [r7, #4]
 800b25c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800b260:	4618      	mov	r0, r3
 800b262:	370c      	adds	r7, #12
 800b264:	46bd      	mov	sp, r7
 800b266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b26a:	4770      	bx	lr

0800b26c <_ZN8touchgfx3HAL10getDMATypeEv>:
 800b26c:	b580      	push	{r7, lr}
 800b26e:	b082      	sub	sp, #8
 800b270:	af00      	add	r7, sp, #0
 800b272:	6078      	str	r0, [r7, #4]
 800b274:	687b      	ldr	r3, [r7, #4]
 800b276:	685a      	ldr	r2, [r3, #4]
 800b278:	687b      	ldr	r3, [r7, #4]
 800b27a:	685b      	ldr	r3, [r3, #4]
 800b27c:	681b      	ldr	r3, [r3, #0]
 800b27e:	3318      	adds	r3, #24
 800b280:	681b      	ldr	r3, [r3, #0]
 800b282:	4610      	mov	r0, r2
 800b284:	4798      	blx	r3
 800b286:	4603      	mov	r3, r0
 800b288:	4618      	mov	r0, r3
 800b28a:	3708      	adds	r7, #8
 800b28c:	46bd      	mov	sp, r7
 800b28e:	bd80      	pop	{r7, pc}

0800b290 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
 800b290:	b480      	push	{r7}
 800b292:	b085      	sub	sp, #20
 800b294:	af00      	add	r7, sp, #0
 800b296:	6078      	str	r0, [r7, #4]
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800b29e:	687b      	ldr	r3, [r7, #4]
 800b2a0:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800b2a4:	429a      	cmp	r2, r3
 800b2a6:	d011      	beq.n	800b2cc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
 800b2a8:	4b14      	ldr	r3, [pc, #80]	@ (800b2fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b2aa:	781b      	ldrb	r3, [r3, #0]
 800b2ac:	2b00      	cmp	r3, #0
 800b2ae:	d11e      	bne.n	800b2ee <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800b2b0:	4b13      	ldr	r3, [pc, #76]	@ (800b300 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b2b2:	881b      	ldrh	r3, [r3, #0]
 800b2b4:	81bb      	strh	r3, [r7, #12]
 800b2b6:	4b13      	ldr	r3, [pc, #76]	@ (800b304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b2b8:	881a      	ldrh	r2, [r3, #0]
 800b2ba:	4b11      	ldr	r3, [pc, #68]	@ (800b300 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b2bc:	801a      	strh	r2, [r3, #0]
 800b2be:	4a11      	ldr	r2, [pc, #68]	@ (800b304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b2c0:	89bb      	ldrh	r3, [r7, #12]
 800b2c2:	8013      	strh	r3, [r2, #0]
 800b2c4:	4b0d      	ldr	r3, [pc, #52]	@ (800b2fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b2c6:	2201      	movs	r2, #1
 800b2c8:	701a      	strb	r2, [r3, #0]
 800b2ca:	e010      	b.n	800b2ee <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800b2cc:	4b0b      	ldr	r3, [pc, #44]	@ (800b2fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b2ce:	781b      	ldrb	r3, [r3, #0]
 800b2d0:	2b00      	cmp	r3, #0
 800b2d2:	d00c      	beq.n	800b2ee <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800b2d4:	4b0a      	ldr	r3, [pc, #40]	@ (800b300 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b2d6:	881b      	ldrh	r3, [r3, #0]
 800b2d8:	81fb      	strh	r3, [r7, #14]
 800b2da:	4b0a      	ldr	r3, [pc, #40]	@ (800b304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b2dc:	881a      	ldrh	r2, [r3, #0]
 800b2de:	4b08      	ldr	r3, [pc, #32]	@ (800b300 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800b2e0:	801a      	strh	r2, [r3, #0]
 800b2e2:	4a08      	ldr	r2, [pc, #32]	@ (800b304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800b2e4:	89fb      	ldrh	r3, [r7, #14]
 800b2e6:	8013      	strh	r3, [r2, #0]
 800b2e8:	4b04      	ldr	r3, [pc, #16]	@ (800b2fc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800b2ea:	2200      	movs	r2, #0
 800b2ec:	701a      	strb	r2, [r3, #0]
 800b2ee:	bf00      	nop
 800b2f0:	3714      	adds	r7, #20
 800b2f2:	46bd      	mov	sp, r7
 800b2f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2f8:	4770      	bx	lr
 800b2fa:	bf00      	nop
 800b2fc:	20002db4 	.word	0x20002db4
 800b300:	20002db2 	.word	0x20002db2
 800b304:	20002db0 	.word	0x20002db0

0800b308 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800b308:	b480      	push	{r7}
 800b30a:	b083      	sub	sp, #12
 800b30c:	af00      	add	r7, sp, #0
 800b30e:	6078      	str	r0, [r7, #4]
 800b310:	bf00      	nop
 800b312:	370c      	adds	r7, #12
 800b314:	46bd      	mov	sp, r7
 800b316:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b31a:	4770      	bx	lr

0800b31c <_ZN8touchgfx3HAL10FlushCacheEv>:
 800b31c:	b480      	push	{r7}
 800b31e:	b083      	sub	sp, #12
 800b320:	af00      	add	r7, sp, #0
 800b322:	6078      	str	r0, [r7, #4]
 800b324:	bf00      	nop
 800b326:	370c      	adds	r7, #12
 800b328:	46bd      	mov	sp, r7
 800b32a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32e:	4770      	bx	lr

0800b330 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
 800b330:	b580      	push	{r7, lr}
 800b332:	b082      	sub	sp, #8
 800b334:	af00      	add	r7, sp, #0
 800b336:	6078      	str	r0, [r7, #4]
 800b338:	687b      	ldr	r3, [r7, #4]
 800b33a:	4618      	mov	r0, r3
 800b33c:	f002 f880 	bl	800d440 <_ZN8touchgfx3HAL16flushFrameBufferEv>
 800b340:	bf00      	nop
 800b342:	3708      	adds	r7, #8
 800b344:	46bd      	mov	sp, r7
 800b346:	bd80      	pop	{r7, pc}

0800b348 <_ZN20TouchGFXGeneratedHALD1Ev>:
 800b348:	b580      	push	{r7, lr}
 800b34a:	b082      	sub	sp, #8
 800b34c:	af00      	add	r7, sp, #0
 800b34e:	6078      	str	r0, [r7, #4]
 800b350:	4a05      	ldr	r2, [pc, #20]	@ (800b368 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	601a      	str	r2, [r3, #0]
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	4618      	mov	r0, r3
 800b35a:	f7ff fe79 	bl	800b050 <_ZN8touchgfx3HALD1Ev>
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	4618      	mov	r0, r3
 800b362:	3708      	adds	r7, #8
 800b364:	46bd      	mov	sp, r7
 800b366:	bd80      	pop	{r7, pc}
 800b368:	08024ba4 	.word	0x08024ba4

0800b36c <_ZN20TouchGFXGeneratedHALD0Ev>:
 800b36c:	b580      	push	{r7, lr}
 800b36e:	b082      	sub	sp, #8
 800b370:	af00      	add	r7, sp, #0
 800b372:	6078      	str	r0, [r7, #4]
 800b374:	6878      	ldr	r0, [r7, #4]
 800b376:	f7ff ffe7 	bl	800b348 <_ZN20TouchGFXGeneratedHALD1Ev>
 800b37a:	217c      	movs	r1, #124	@ 0x7c
 800b37c:	6878      	ldr	r0, [r7, #4]
 800b37e:	f016 ff26 	bl	80221ce <_ZdlPvj>
 800b382:	687b      	ldr	r3, [r7, #4]
 800b384:	4618      	mov	r0, r3
 800b386:	3708      	adds	r7, #8
 800b388:	46bd      	mov	sp, r7
 800b38a:	bd80      	pop	{r7, pc}

0800b38c <_ZN11TouchGFXHAL16flushFrameBufferEv>:
 800b38c:	b580      	push	{r7, lr}
 800b38e:	b082      	sub	sp, #8
 800b390:	af00      	add	r7, sp, #0
 800b392:	6078      	str	r0, [r7, #4]
 800b394:	687b      	ldr	r3, [r7, #4]
 800b396:	4618      	mov	r0, r3
 800b398:	f7ff ffca 	bl	800b330 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
 800b39c:	bf00      	nop
 800b39e:	3708      	adds	r7, #8
 800b3a0:	46bd      	mov	sp, r7
 800b3a2:	bd80      	pop	{r7, pc}

0800b3a4 <_ZN11TouchGFXHAL10initializeEv>:
 800b3a4:	b580      	push	{r7, lr}
 800b3a6:	b082      	sub	sp, #8
 800b3a8:	af00      	add	r7, sp, #0
 800b3aa:	6078      	str	r0, [r7, #4]
 800b3ac:	687b      	ldr	r3, [r7, #4]
 800b3ae:	4618      	mov	r0, r3
 800b3b0:	f001 f9b8 	bl	800c724 <_ZN20TouchGFXGeneratedHAL10initializeEv>
 800b3b4:	bf00      	nop
 800b3b6:	3708      	adds	r7, #8
 800b3b8:	46bd      	mov	sp, r7
 800b3ba:	bd80      	pop	{r7, pc}

0800b3bc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 800b3bc:	b580      	push	{r7, lr}
 800b3be:	b082      	sub	sp, #8
 800b3c0:	af00      	add	r7, sp, #0
 800b3c2:	6078      	str	r0, [r7, #4]
 800b3c4:	687b      	ldr	r3, [r7, #4]
 800b3c6:	4618      	mov	r0, r3
 800b3c8:	f001 fa2a 	bl	800c820 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800b3cc:	4603      	mov	r3, r0
 800b3ce:	4618      	mov	r0, r3
 800b3d0:	3708      	adds	r7, #8
 800b3d2:	46bd      	mov	sp, r7
 800b3d4:	bd80      	pop	{r7, pc}

0800b3d6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 800b3d6:	b580      	push	{r7, lr}
 800b3d8:	b082      	sub	sp, #8
 800b3da:	af00      	add	r7, sp, #0
 800b3dc:	6078      	str	r0, [r7, #4]
 800b3de:	6039      	str	r1, [r7, #0]
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	6839      	ldr	r1, [r7, #0]
 800b3e4:	4618      	mov	r0, r3
 800b3e6:	f001 fa26 	bl	800c836 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
 800b3ea:	bf00      	nop
 800b3ec:	3708      	adds	r7, #8
 800b3ee:	46bd      	mov	sp, r7
 800b3f0:	bd80      	pop	{r7, pc}

0800b3f2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 800b3f2:	b580      	push	{r7, lr}
 800b3f4:	b082      	sub	sp, #8
 800b3f6:	af00      	add	r7, sp, #0
 800b3f8:	6078      	str	r0, [r7, #4]
 800b3fa:	6039      	str	r1, [r7, #0]
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	6839      	ldr	r1, [r7, #0]
 800b400:	4618      	mov	r0, r3
 800b402:	f001 fa23 	bl	800c84c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 800b406:	bf00      	nop
 800b408:	3708      	adds	r7, #8
 800b40a:	46bd      	mov	sp, r7
 800b40c:	bd80      	pop	{r7, pc}

0800b40e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
 800b40e:	b580      	push	{r7, lr}
 800b410:	b084      	sub	sp, #16
 800b412:	af00      	add	r7, sp, #0
 800b414:	60f8      	str	r0, [r7, #12]
 800b416:	60b9      	str	r1, [r7, #8]
 800b418:	607a      	str	r2, [r7, #4]
 800b41a:	603b      	str	r3, [r7, #0]
 800b41c:	68f8      	ldr	r0, [r7, #12]
 800b41e:	683b      	ldr	r3, [r7, #0]
 800b420:	687a      	ldr	r2, [r7, #4]
 800b422:	68b9      	ldr	r1, [r7, #8]
 800b424:	f001 fa55 	bl	800c8d2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800b428:	4603      	mov	r3, r0
 800b42a:	4618      	mov	r0, r3
 800b42c:	3710      	adds	r7, #16
 800b42e:	46bd      	mov	sp, r7
 800b430:	bd80      	pop	{r7, pc}

0800b432 <_ZN11TouchGFXHAL19configureInterruptsEv>:
 800b432:	b580      	push	{r7, lr}
 800b434:	b082      	sub	sp, #8
 800b436:	af00      	add	r7, sp, #0
 800b438:	6078      	str	r0, [r7, #4]
 800b43a:	687b      	ldr	r3, [r7, #4]
 800b43c:	4618      	mov	r0, r3
 800b43e:	f001 f9a1 	bl	800c784 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 800b442:	bf00      	nop
 800b444:	3708      	adds	r7, #8
 800b446:	46bd      	mov	sp, r7
 800b448:	bd80      	pop	{r7, pc}

0800b44a <_ZN11TouchGFXHAL16enableInterruptsEv>:
 800b44a:	b580      	push	{r7, lr}
 800b44c:	b082      	sub	sp, #8
 800b44e:	af00      	add	r7, sp, #0
 800b450:	6078      	str	r0, [r7, #4]
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	4618      	mov	r0, r3
 800b456:	f001 f99f 	bl	800c798 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
 800b45a:	bf00      	nop
 800b45c:	3708      	adds	r7, #8
 800b45e:	46bd      	mov	sp, r7
 800b460:	bd80      	pop	{r7, pc}

0800b462 <_ZN11TouchGFXHAL17disableInterruptsEv>:
 800b462:	b580      	push	{r7, lr}
 800b464:	b082      	sub	sp, #8
 800b466:	af00      	add	r7, sp, #0
 800b468:	6078      	str	r0, [r7, #4]
 800b46a:	687b      	ldr	r3, [r7, #4]
 800b46c:	4618      	mov	r0, r3
 800b46e:	f001 f99d 	bl	800c7ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
 800b472:	bf00      	nop
 800b474:	3708      	adds	r7, #8
 800b476:	46bd      	mov	sp, r7
 800b478:	bd80      	pop	{r7, pc}

0800b47a <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
 800b47a:	b580      	push	{r7, lr}
 800b47c:	b082      	sub	sp, #8
 800b47e:	af00      	add	r7, sp, #0
 800b480:	6078      	str	r0, [r7, #4]
 800b482:	687b      	ldr	r3, [r7, #4]
 800b484:	4618      	mov	r0, r3
 800b486:	f001 f99b 	bl	800c7c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 800b48a:	bf00      	nop
 800b48c:	3708      	adds	r7, #8
 800b48e:	46bd      	mov	sp, r7
 800b490:	bd80      	pop	{r7, pc}

0800b492 <_ZN11TouchGFXHAL10beginFrameEv>:
 800b492:	b580      	push	{r7, lr}
 800b494:	b082      	sub	sp, #8
 800b496:	af00      	add	r7, sp, #0
 800b498:	6078      	str	r0, [r7, #4]
 800b49a:	687b      	ldr	r3, [r7, #4]
 800b49c:	4618      	mov	r0, r3
 800b49e:	f001 f999 	bl	800c7d4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800b4a2:	4603      	mov	r3, r0
 800b4a4:	4618      	mov	r0, r3
 800b4a6:	3708      	adds	r7, #8
 800b4a8:	46bd      	mov	sp, r7
 800b4aa:	bd80      	pop	{r7, pc}

0800b4ac <_ZN11TouchGFXHAL8endFrameEv>:
 800b4ac:	b580      	push	{r7, lr}
 800b4ae:	b082      	sub	sp, #8
 800b4b0:	af00      	add	r7, sp, #0
 800b4b2:	6078      	str	r0, [r7, #4]
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	4618      	mov	r0, r3
 800b4b8:	f001 f999 	bl	800c7ee <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 800b4bc:	bf00      	nop
 800b4be:	3708      	adds	r7, #8
 800b4c0:	46bd      	mov	sp, r7
 800b4c2:	bd80      	pop	{r7, pc}

0800b4c4 <_ZN11TouchGFXHALD1Ev>:
 800b4c4:	b580      	push	{r7, lr}
 800b4c6:	b082      	sub	sp, #8
 800b4c8:	af00      	add	r7, sp, #0
 800b4ca:	6078      	str	r0, [r7, #4]
 800b4cc:	4a05      	ldr	r2, [pc, #20]	@ (800b4e4 <_ZN11TouchGFXHALD1Ev+0x20>)
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	601a      	str	r2, [r3, #0]
 800b4d2:	687b      	ldr	r3, [r7, #4]
 800b4d4:	4618      	mov	r0, r3
 800b4d6:	f7ff ff37 	bl	800b348 <_ZN20TouchGFXGeneratedHALD1Ev>
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	4618      	mov	r0, r3
 800b4de:	3708      	adds	r7, #8
 800b4e0:	46bd      	mov	sp, r7
 800b4e2:	bd80      	pop	{r7, pc}
 800b4e4:	08024958 	.word	0x08024958

0800b4e8 <_ZN11TouchGFXHALD0Ev>:
 800b4e8:	b580      	push	{r7, lr}
 800b4ea:	b082      	sub	sp, #8
 800b4ec:	af00      	add	r7, sp, #0
 800b4ee:	6078      	str	r0, [r7, #4]
 800b4f0:	6878      	ldr	r0, [r7, #4]
 800b4f2:	f7ff ffe7 	bl	800b4c4 <_ZN11TouchGFXHALD1Ev>
 800b4f6:	217c      	movs	r1, #124	@ 0x7c
 800b4f8:	6878      	ldr	r0, [r7, #4]
 800b4fa:	f016 fe68 	bl	80221ce <_ZdlPvj>
 800b4fe:	687b      	ldr	r3, [r7, #4]
 800b500:	4618      	mov	r0, r3
 800b502:	3708      	adds	r7, #8
 800b504:	46bd      	mov	sp, r7
 800b506:	bd80      	pop	{r7, pc}

0800b508 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800b508:	b480      	push	{r7}
 800b50a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b50c:	4b05      	ldr	r3, [pc, #20]	@ (800b524 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800b50e:	2200      	movs	r2, #0
 800b510:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800b512:	4b05      	ldr	r3, [pc, #20]	@ (800b528 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800b514:	2200      	movs	r2, #0
 800b516:	601a      	str	r2, [r3, #0]
}
 800b518:	bf00      	nop
 800b51a:	46bd      	mov	sp, r7
 800b51c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b520:	4770      	bx	lr
 800b522:	bf00      	nop
 800b524:	20000680 	.word	0x20000680
 800b528:	20000684 	.word	0x20000684

0800b52c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800b52c:	b480      	push	{r7}
 800b52e:	af00      	add	r7, sp, #0
    while (fb_sem);
 800b530:	bf00      	nop
 800b532:	4b08      	ldr	r3, [pc, #32]	@ (800b554 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800b534:	681b      	ldr	r3, [r3, #0]
 800b536:	2b00      	cmp	r3, #0
 800b538:	bf14      	ite	ne
 800b53a:	2301      	movne	r3, #1
 800b53c:	2300      	moveq	r3, #0
 800b53e:	b2db      	uxtb	r3, r3
 800b540:	2b00      	cmp	r3, #0
 800b542:	d1f6      	bne.n	800b532 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800b544:	4b03      	ldr	r3, [pc, #12]	@ (800b554 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800b546:	2201      	movs	r2, #1
 800b548:	601a      	str	r2, [r3, #0]
}
 800b54a:	bf00      	nop
 800b54c:	46bd      	mov	sp, r7
 800b54e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b552:	4770      	bx	lr
 800b554:	20000680 	.word	0x20000680

0800b558 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800b558:	b480      	push	{r7}
 800b55a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b55c:	4b03      	ldr	r3, [pc, #12]	@ (800b56c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800b55e:	2200      	movs	r2, #0
 800b560:	601a      	str	r2, [r3, #0]
}
 800b562:	bf00      	nop
 800b564:	46bd      	mov	sp, r7
 800b566:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b56a:	4770      	bx	lr
 800b56c:	20000680 	.word	0x20000680

0800b570 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800b570:	b480      	push	{r7}
 800b572:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800b574:	4b03      	ldr	r3, [pc, #12]	@ (800b584 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800b576:	2201      	movs	r2, #1
 800b578:	601a      	str	r2, [r3, #0]
}
 800b57a:	bf00      	nop
 800b57c:	46bd      	mov	sp, r7
 800b57e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b582:	4770      	bx	lr
 800b584:	20000680 	.word	0x20000680

0800b588 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800b588:	b480      	push	{r7}
 800b58a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800b58c:	4b03      	ldr	r3, [pc, #12]	@ (800b59c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800b58e:	2200      	movs	r2, #0
 800b590:	601a      	str	r2, [r3, #0]
}
 800b592:	bf00      	nop
 800b594:	46bd      	mov	sp, r7
 800b596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b59a:	4770      	bx	lr
 800b59c:	20000680 	.word	0x20000680

0800b5a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800b5a0:	b480      	push	{r7}
 800b5a2:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800b5a4:	4b03      	ldr	r3, [pc, #12]	@ (800b5b4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800b5a6:	2201      	movs	r2, #1
 800b5a8:	601a      	str	r2, [r3, #0]
}
 800b5aa:	bf00      	nop
 800b5ac:	46bd      	mov	sp, r7
 800b5ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5b2:	4770      	bx	lr
 800b5b4:	20000684 	.word	0x20000684

0800b5b8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800b5b8:	b480      	push	{r7}
 800b5ba:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800b5bc:	4b03      	ldr	r3, [pc, #12]	@ (800b5cc <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800b5be:	2200      	movs	r2, #0
 800b5c0:	601a      	str	r2, [r3, #0]
}
 800b5c2:	bf00      	nop
 800b5c4:	46bd      	mov	sp, r7
 800b5c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ca:	4770      	bx	lr
 800b5cc:	20000684 	.word	0x20000684

0800b5d0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800b5d0:	b480      	push	{r7}
 800b5d2:	af00      	add	r7, sp, #0
    return vsync_sem;
 800b5d4:	4b05      	ldr	r3, [pc, #20]	@ (800b5ec <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800b5d6:	681b      	ldr	r3, [r3, #0]
 800b5d8:	2b00      	cmp	r3, #0
 800b5da:	bf14      	ite	ne
 800b5dc:	2301      	movne	r3, #1
 800b5de:	2300      	moveq	r3, #0
 800b5e0:	b2db      	uxtb	r3, r3
}
 800b5e2:	4618      	mov	r0, r3
 800b5e4:	46bd      	mov	sp, r7
 800b5e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ea:	4770      	bx	lr
 800b5ec:	20000684 	.word	0x20000684

0800b5f0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800b5f0:	b580      	push	{r7, lr}
 800b5f2:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800b5f4:	4b0a      	ldr	r3, [pc, #40]	@ (800b620 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800b5f6:	681b      	ldr	r3, [r3, #0]
 800b5f8:	2b00      	cmp	r3, #0
 800b5fa:	bf14      	ite	ne
 800b5fc:	2301      	movne	r3, #1
 800b5fe:	2300      	moveq	r3, #0
 800b600:	b2db      	uxtb	r3, r3
 800b602:	2b00      	cmp	r3, #0
 800b604:	d00a      	beq.n	800b61c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800b606:	4b06      	ldr	r3, [pc, #24]	@ (800b620 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800b608:	2200      	movs	r2, #0
 800b60a:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800b60c:	f7fd f8b8 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 800b610:	4603      	mov	r3, r0
 800b612:	681a      	ldr	r2, [r3, #0]
 800b614:	3270      	adds	r2, #112	@ 0x70
 800b616:	6812      	ldr	r2, [r2, #0]
 800b618:	4618      	mov	r0, r3
 800b61a:	4790      	blx	r2
    }
}
 800b61c:	bf00      	nop
 800b61e:	bd80      	pop	{r7, pc}
 800b620:	20000684 	.word	0x20000684

0800b624 <_ZN8touchgfx9colortypeC1Ev>:
 800b624:	b480      	push	{r7}
 800b626:	b083      	sub	sp, #12
 800b628:	af00      	add	r7, sp, #0
 800b62a:	6078      	str	r0, [r7, #4]
 800b62c:	687b      	ldr	r3, [r7, #4]
 800b62e:	2200      	movs	r2, #0
 800b630:	601a      	str	r2, [r3, #0]
 800b632:	687b      	ldr	r3, [r7, #4]
 800b634:	4618      	mov	r0, r3
 800b636:	370c      	adds	r7, #12
 800b638:	46bd      	mov	sp, r7
 800b63a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b63e:	4770      	bx	lr

0800b640 <_ZN8touchgfx9DMA_QueueD1Ev>:
 800b640:	b480      	push	{r7}
 800b642:	b083      	sub	sp, #12
 800b644:	af00      	add	r7, sp, #0
 800b646:	6078      	str	r0, [r7, #4]
 800b648:	4a04      	ldr	r2, [pc, #16]	@ (800b65c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	601a      	str	r2, [r3, #0]
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	4618      	mov	r0, r3
 800b652:	370c      	adds	r7, #12
 800b654:	46bd      	mov	sp, r7
 800b656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b65a:	4770      	bx	lr
 800b65c:	08024a80 	.word	0x08024a80

0800b660 <_ZN8touchgfx9DMA_QueueD0Ev>:
 800b660:	b580      	push	{r7, lr}
 800b662:	b082      	sub	sp, #8
 800b664:	af00      	add	r7, sp, #0
 800b666:	6078      	str	r0, [r7, #4]
 800b668:	6878      	ldr	r0, [r7, #4]
 800b66a:	f7ff ffe9 	bl	800b640 <_ZN8touchgfx9DMA_QueueD1Ev>
 800b66e:	2104      	movs	r1, #4
 800b670:	6878      	ldr	r0, [r7, #4]
 800b672:	f016 fdac 	bl	80221ce <_ZdlPvj>
 800b676:	687b      	ldr	r3, [r7, #4]
 800b678:	4618      	mov	r0, r3
 800b67a:	3708      	adds	r7, #8
 800b67c:	46bd      	mov	sp, r7
 800b67e:	bd80      	pop	{r7, pc}

0800b680 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800b680:	b480      	push	{r7}
 800b682:	b083      	sub	sp, #12
 800b684:	af00      	add	r7, sp, #0
 800b686:	6078      	str	r0, [r7, #4]
 800b688:	bf00      	nop
 800b68a:	370c      	adds	r7, #12
 800b68c:	46bd      	mov	sp, r7
 800b68e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b692:	4770      	bx	lr

0800b694 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800b694:	b480      	push	{r7}
 800b696:	b083      	sub	sp, #12
 800b698:	af00      	add	r7, sp, #0
 800b69a:	6078      	str	r0, [r7, #4]
 800b69c:	2300      	movs	r3, #0
 800b69e:	4618      	mov	r0, r3
 800b6a0:	370c      	adds	r7, #12
 800b6a2:	46bd      	mov	sp, r7
 800b6a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6a8:	4770      	bx	lr
	...

0800b6ac <_ZN8touchgfx13DMA_InterfaceD1Ev>:
 800b6ac:	b480      	push	{r7}
 800b6ae:	b083      	sub	sp, #12
 800b6b0:	af00      	add	r7, sp, #0
 800b6b2:	6078      	str	r0, [r7, #4]
 800b6b4:	4a04      	ldr	r2, [pc, #16]	@ (800b6c8 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800b6b6:	687b      	ldr	r3, [r7, #4]
 800b6b8:	601a      	str	r2, [r3, #0]
 800b6ba:	687b      	ldr	r3, [r7, #4]
 800b6bc:	4618      	mov	r0, r3
 800b6be:	370c      	adds	r7, #12
 800b6c0:	46bd      	mov	sp, r7
 800b6c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6c6:	4770      	bx	lr
 800b6c8:	08024e50 	.word	0x08024e50

0800b6cc <_ZN8touchgfx13DMA_InterfaceD0Ev>:
 800b6cc:	b580      	push	{r7, lr}
 800b6ce:	b082      	sub	sp, #8
 800b6d0:	af00      	add	r7, sp, #0
 800b6d2:	6078      	str	r0, [r7, #4]
 800b6d4:	6878      	ldr	r0, [r7, #4]
 800b6d6:	f7ff ffe9 	bl	800b6ac <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800b6da:	210c      	movs	r1, #12
 800b6dc:	6878      	ldr	r0, [r7, #4]
 800b6de:	f016 fd76 	bl	80221ce <_ZdlPvj>
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	4618      	mov	r0, r3
 800b6e6:	3708      	adds	r7, #8
 800b6e8:	46bd      	mov	sp, r7
 800b6ea:	bd80      	pop	{r7, pc}

0800b6ec <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
 800b6ec:	b480      	push	{r7}
 800b6ee:	b083      	sub	sp, #12
 800b6f0:	af00      	add	r7, sp, #0
 800b6f2:	6078      	str	r0, [r7, #4]
 800b6f4:	6039      	str	r1, [r7, #0]
 800b6f6:	4a09      	ldr	r2, [pc, #36]	@ (800b71c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800b6f8:	687b      	ldr	r3, [r7, #4]
 800b6fa:	601a      	str	r2, [r3, #0]
 800b6fc:	687b      	ldr	r3, [r7, #4]
 800b6fe:	683a      	ldr	r2, [r7, #0]
 800b700:	605a      	str	r2, [r3, #4]
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	2200      	movs	r2, #0
 800b706:	721a      	strb	r2, [r3, #8]
 800b708:	687b      	ldr	r3, [r7, #4]
 800b70a:	2200      	movs	r2, #0
 800b70c:	725a      	strb	r2, [r3, #9]
 800b70e:	687b      	ldr	r3, [r7, #4]
 800b710:	4618      	mov	r0, r3
 800b712:	370c      	adds	r7, #12
 800b714:	46bd      	mov	sp, r7
 800b716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b71a:	4770      	bx	lr
 800b71c:	08024e50 	.word	0x08024e50

0800b720 <_ZN8STM32DMA18signalDMAInterruptEv>:
 800b720:	b480      	push	{r7}
 800b722:	b083      	sub	sp, #12
 800b724:	af00      	add	r7, sp, #0
 800b726:	6078      	str	r0, [r7, #4]
 800b728:	bf00      	nop
 800b72a:	370c      	adds	r7, #12
 800b72c:	46bd      	mov	sp, r7
 800b72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b732:	4770      	bx	lr

0800b734 <_ZN8STM32DMA5flushEv>:
 800b734:	b480      	push	{r7}
 800b736:	b083      	sub	sp, #12
 800b738:	af00      	add	r7, sp, #0
 800b73a:	6078      	str	r0, [r7, #4]
 800b73c:	bf00      	nop
 800b73e:	370c      	adds	r7, #12
 800b740:	46bd      	mov	sp, r7
 800b742:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b746:	4770      	bx	lr

0800b748 <_ZN8touchgfx6BlitOpC1Ev>:
 800b748:	b580      	push	{r7, lr}
 800b74a:	b082      	sub	sp, #8
 800b74c:	af00      	add	r7, sp, #0
 800b74e:	6078      	str	r0, [r7, #4]
 800b750:	687b      	ldr	r3, [r7, #4]
 800b752:	330c      	adds	r3, #12
 800b754:	4618      	mov	r0, r3
 800b756:	f7ff ff65 	bl	800b624 <_ZN8touchgfx9colortypeC1Ev>
 800b75a:	687b      	ldr	r3, [r7, #4]
 800b75c:	4618      	mov	r0, r3
 800b75e:	3708      	adds	r7, #8
 800b760:	46bd      	mov	sp, r7
 800b762:	bd80      	pop	{r7, pc}

0800b764 <_ZN8STM32DMAC1Ev>:
 800b764:	b580      	push	{r7, lr}
 800b766:	b082      	sub	sp, #8
 800b768:	af00      	add	r7, sp, #0
 800b76a:	6078      	str	r0, [r7, #4]
 800b76c:	687a      	ldr	r2, [r7, #4]
 800b76e:	687b      	ldr	r3, [r7, #4]
 800b770:	330c      	adds	r3, #12
 800b772:	4619      	mov	r1, r3
 800b774:	4610      	mov	r0, r2
 800b776:	f7ff ffb9 	bl	800b6ec <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800b77a:	4a0b      	ldr	r2, [pc, #44]	@ (800b7a8 <_ZN8STM32DMAC1Ev+0x44>)
 800b77c:	687b      	ldr	r3, [r7, #4]
 800b77e:	601a      	str	r2, [r3, #0]
 800b780:	687b      	ldr	r3, [r7, #4]
 800b782:	f103 000c 	add.w	r0, r3, #12
 800b786:	687b      	ldr	r3, [r7, #4]
 800b788:	3320      	adds	r3, #32
 800b78a:	2201      	movs	r2, #1
 800b78c:	4619      	mov	r1, r3
 800b78e:	f002 fd33 	bl	800e1f8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800b792:	687b      	ldr	r3, [r7, #4]
 800b794:	3320      	adds	r3, #32
 800b796:	4618      	mov	r0, r3
 800b798:	f7ff ffd6 	bl	800b748 <_ZN8touchgfx6BlitOpC1Ev>
 800b79c:	687b      	ldr	r3, [r7, #4]
 800b79e:	4618      	mov	r0, r3
 800b7a0:	3708      	adds	r7, #8
 800b7a2:	46bd      	mov	sp, r7
 800b7a4:	bd80      	pop	{r7, pc}
 800b7a6:	bf00      	nop
 800b7a8:	08024a30 	.word	0x08024a30

0800b7ac <_ZN8STM32DMA11getBlitCapsEv>:
 800b7ac:	b480      	push	{r7}
 800b7ae:	b083      	sub	sp, #12
 800b7b0:	af00      	add	r7, sp, #0
 800b7b2:	6078      	str	r0, [r7, #4]
 800b7b4:	2300      	movs	r3, #0
 800b7b6:	4618      	mov	r0, r3
 800b7b8:	370c      	adds	r7, #12
 800b7ba:	46bd      	mov	sp, r7
 800b7bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7c0:	4770      	bx	lr
	...

0800b7c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 800b7c4:	b580      	push	{r7, lr}
 800b7c6:	b082      	sub	sp, #8
 800b7c8:	af00      	add	r7, sp, #0
 800b7ca:	6078      	str	r0, [r7, #4]
 800b7cc:	6039      	str	r1, [r7, #0]
 800b7ce:	4b03      	ldr	r3, [pc, #12]	@ (800b7dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800b7d0:	4a03      	ldr	r2, [pc, #12]	@ (800b7e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800b7d2:	2122      	movs	r1, #34	@ 0x22
 800b7d4:	4803      	ldr	r0, [pc, #12]	@ (800b7e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800b7d6:	f016 fda7 	bl	8022328 <__assert_func>
 800b7da:	bf00      	nop
 800b7dc:	08023b98 	.word	0x08023b98
 800b7e0:	08023bbc 	.word	0x08023bbc
 800b7e4:	08023bfc 	.word	0x08023bfc

0800b7e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 800b7e8:	b580      	push	{r7, lr}
 800b7ea:	b082      	sub	sp, #8
 800b7ec:	af00      	add	r7, sp, #0
 800b7ee:	6078      	str	r0, [r7, #4]
 800b7f0:	6039      	str	r1, [r7, #0]
 800b7f2:	4b03      	ldr	r3, [pc, #12]	@ (800b800 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800b7f4:	4a03      	ldr	r2, [pc, #12]	@ (800b804 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800b7f6:	2127      	movs	r1, #39	@ 0x27
 800b7f8:	4803      	ldr	r0, [pc, #12]	@ (800b808 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800b7fa:	f016 fd95 	bl	8022328 <__assert_func>
 800b7fe:	bf00      	nop
 800b800:	08023b98 	.word	0x08023b98
 800b804:	08023c28 	.word	0x08023c28
 800b808:	08023bfc 	.word	0x08023bfc

0800b80c <_ZN8STM32DMAD1Ev>:
 800b80c:	b580      	push	{r7, lr}
 800b80e:	b082      	sub	sp, #8
 800b810:	af00      	add	r7, sp, #0
 800b812:	6078      	str	r0, [r7, #4]
 800b814:	4a08      	ldr	r2, [pc, #32]	@ (800b838 <_ZN8STM32DMAD1Ev+0x2c>)
 800b816:	687b      	ldr	r3, [r7, #4]
 800b818:	601a      	str	r2, [r3, #0]
 800b81a:	687b      	ldr	r3, [r7, #4]
 800b81c:	330c      	adds	r3, #12
 800b81e:	4618      	mov	r0, r3
 800b820:	f000 f81c 	bl	800b85c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b824:	687b      	ldr	r3, [r7, #4]
 800b826:	4618      	mov	r0, r3
 800b828:	f7ff ff40 	bl	800b6ac <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800b82c:	687b      	ldr	r3, [r7, #4]
 800b82e:	4618      	mov	r0, r3
 800b830:	3708      	adds	r7, #8
 800b832:	46bd      	mov	sp, r7
 800b834:	bd80      	pop	{r7, pc}
 800b836:	bf00      	nop
 800b838:	08024a30 	.word	0x08024a30

0800b83c <_ZN8STM32DMAD0Ev>:
 800b83c:	b580      	push	{r7, lr}
 800b83e:	b082      	sub	sp, #8
 800b840:	af00      	add	r7, sp, #0
 800b842:	6078      	str	r0, [r7, #4]
 800b844:	6878      	ldr	r0, [r7, #4]
 800b846:	f7ff ffe1 	bl	800b80c <_ZN8STM32DMAD1Ev>
 800b84a:	2144      	movs	r1, #68	@ 0x44
 800b84c:	6878      	ldr	r0, [r7, #4]
 800b84e:	f016 fcbe 	bl	80221ce <_ZdlPvj>
 800b852:	687b      	ldr	r3, [r7, #4]
 800b854:	4618      	mov	r0, r3
 800b856:	3708      	adds	r7, #8
 800b858:	46bd      	mov	sp, r7
 800b85a:	bd80      	pop	{r7, pc}

0800b85c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800b85c:	b580      	push	{r7, lr}
 800b85e:	b082      	sub	sp, #8
 800b860:	af00      	add	r7, sp, #0
 800b862:	6078      	str	r0, [r7, #4]
 800b864:	4a05      	ldr	r2, [pc, #20]	@ (800b87c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800b866:	687b      	ldr	r3, [r7, #4]
 800b868:	601a      	str	r2, [r3, #0]
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	4618      	mov	r0, r3
 800b86e:	f7ff fee7 	bl	800b640 <_ZN8touchgfx9DMA_QueueD1Ev>
 800b872:	687b      	ldr	r3, [r7, #4]
 800b874:	4618      	mov	r0, r3
 800b876:	3708      	adds	r7, #8
 800b878:	46bd      	mov	sp, r7
 800b87a:	bd80      	pop	{r7, pc}
 800b87c:	08024ea0 	.word	0x08024ea0

0800b880 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800b880:	b580      	push	{r7, lr}
 800b882:	b082      	sub	sp, #8
 800b884:	af00      	add	r7, sp, #0
 800b886:	6078      	str	r0, [r7, #4]
 800b888:	6878      	ldr	r0, [r7, #4]
 800b88a:	f7ff ffe7 	bl	800b85c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800b88e:	2114      	movs	r1, #20
 800b890:	6878      	ldr	r0, [r7, #4]
 800b892:	f016 fc9c 	bl	80221ce <_ZdlPvj>
 800b896:	687b      	ldr	r3, [r7, #4]
 800b898:	4618      	mov	r0, r3
 800b89a:	3708      	adds	r7, #8
 800b89c:	46bd      	mov	sp, r7
 800b89e:	bd80      	pop	{r7, pc}

0800b8a0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800b8a0:	b480      	push	{r7}
 800b8a2:	b083      	sub	sp, #12
 800b8a4:	af00      	add	r7, sp, #0
 800b8a6:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800b8a8:	4a04      	ldr	r2, [pc, #16]	@ (800b8bc <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800b8aa:	687b      	ldr	r3, [r7, #4]
 800b8ac:	6013      	str	r3, [r2, #0]
    }
 800b8ae:	bf00      	nop
 800b8b0:	370c      	adds	r7, #12
 800b8b2:	46bd      	mov	sp, r7
 800b8b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8b8:	4770      	bx	lr
 800b8ba:	bf00      	nop
 800b8bc:	20002e18 	.word	0x20002e18

0800b8c0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800b8c0:	b480      	push	{r7}
 800b8c2:	b085      	sub	sp, #20
 800b8c4:	af00      	add	r7, sp, #0
 800b8c6:	60f8      	str	r0, [r7, #12]
 800b8c8:	60b9      	str	r1, [r7, #8]
 800b8ca:	607a      	str	r2, [r7, #4]
 800b8cc:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800b8ce:	4a0b      	ldr	r2, [pc, #44]	@ (800b8fc <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800b8d0:	68fb      	ldr	r3, [r7, #12]
 800b8d2:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800b8d4:	68fb      	ldr	r3, [r7, #12]
 800b8d6:	68ba      	ldr	r2, [r7, #8]
 800b8d8:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800b8da:	68fb      	ldr	r3, [r7, #12]
 800b8dc:	687a      	ldr	r2, [r7, #4]
 800b8de:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800b8e0:	68fb      	ldr	r3, [r7, #12]
 800b8e2:	683a      	ldr	r2, [r7, #0]
 800b8e4:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800b8e6:	68fb      	ldr	r3, [r7, #12]
 800b8e8:	69ba      	ldr	r2, [r7, #24]
 800b8ea:	611a      	str	r2, [r3, #16]
    {
    }
 800b8ec:	68fb      	ldr	r3, [r7, #12]
 800b8ee:	4618      	mov	r0, r3
 800b8f0:	3714      	adds	r7, #20
 800b8f2:	46bd      	mov	sp, r7
 800b8f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8f8:	4770      	bx	lr
 800b8fa:	bf00      	nop
 800b8fc:	08024b68 	.word	0x08024b68

0800b900 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800b900:	b480      	push	{r7}
 800b902:	b083      	sub	sp, #12
 800b904:	af00      	add	r7, sp, #0
 800b906:	6078      	str	r0, [r7, #4]
    {
 800b908:	4a04      	ldr	r2, [pc, #16]	@ (800b91c <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800b90a:	687b      	ldr	r3, [r7, #4]
 800b90c:	601a      	str	r2, [r3, #0]
    }
 800b90e:	687b      	ldr	r3, [r7, #4]
 800b910:	4618      	mov	r0, r3
 800b912:	370c      	adds	r7, #12
 800b914:	46bd      	mov	sp, r7
 800b916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b91a:	4770      	bx	lr
 800b91c:	08024b68 	.word	0x08024b68

0800b920 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800b920:	b580      	push	{r7, lr}
 800b922:	b082      	sub	sp, #8
 800b924:	af00      	add	r7, sp, #0
 800b926:	6078      	str	r0, [r7, #4]
    }
 800b928:	6878      	ldr	r0, [r7, #4]
 800b92a:	f7ff ffe9 	bl	800b900 <_ZN8touchgfx7MVPHeapD1Ev>
 800b92e:	2114      	movs	r1, #20
 800b930:	6878      	ldr	r0, [r7, #4]
 800b932:	f016 fc4c 	bl	80221ce <_ZdlPvj>
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	4618      	mov	r0, r3
 800b93a:	3708      	adds	r7, #8
 800b93c:	46bd      	mov	sp, r7
 800b93e:	bd80      	pop	{r7, pc}

0800b940 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800b940:	b480      	push	{r7}
 800b942:	b083      	sub	sp, #12
 800b944:	af00      	add	r7, sp, #0
 800b946:	6078      	str	r0, [r7, #4]
    {
 800b948:	4a04      	ldr	r2, [pc, #16]	@ (800b95c <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800b94a:	687b      	ldr	r3, [r7, #4]
 800b94c:	601a      	str	r2, [r3, #0]
    }
 800b94e:	687b      	ldr	r3, [r7, #4]
 800b950:	4618      	mov	r0, r3
 800b952:	370c      	adds	r7, #12
 800b954:	46bd      	mov	sp, r7
 800b956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b95a:	4770      	bx	lr
 800b95c:	08025210 	.word	0x08025210

0800b960 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800b960:	b580      	push	{r7, lr}
 800b962:	b082      	sub	sp, #8
 800b964:	af00      	add	r7, sp, #0
 800b966:	6078      	str	r0, [r7, #4]
    }
 800b968:	6878      	ldr	r0, [r7, #4]
 800b96a:	f7ff ffe9 	bl	800b940 <_ZN8touchgfx3LCDD1Ev>
 800b96e:	210c      	movs	r1, #12
 800b970:	6878      	ldr	r0, [r7, #4]
 800b972:	f016 fc2c 	bl	80221ce <_ZdlPvj>
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	4618      	mov	r0, r3
 800b97a:	3708      	adds	r7, #8
 800b97c:	46bd      	mov	sp, r7
 800b97e:	bd80      	pop	{r7, pc}

0800b980 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800b980:	b480      	push	{r7}
 800b982:	b083      	sub	sp, #12
 800b984:	af00      	add	r7, sp, #0
 800b986:	6078      	str	r0, [r7, #4]
            : startX(0),
 800b988:	687b      	ldr	r3, [r7, #4]
 800b98a:	2200      	movs	r2, #0
 800b98c:	801a      	strh	r2, [r3, #0]
              startY(0),
 800b98e:	687b      	ldr	r3, [r7, #4]
 800b990:	2200      	movs	r2, #0
 800b992:	805a      	strh	r2, [r3, #2]
              downX(0),
 800b994:	687b      	ldr	r3, [r7, #4]
 800b996:	2200      	movs	r2, #0
 800b998:	809a      	strh	r2, [r3, #4]
              downY(0),
 800b99a:	687b      	ldr	r3, [r7, #4]
 800b99c:	2200      	movs	r2, #0
 800b99e:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800b9a0:	687b      	ldr	r3, [r7, #4]
 800b9a2:	2200      	movs	r2, #0
 800b9a4:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800b9a6:	687b      	ldr	r3, [r7, #4]
 800b9a8:	2200      	movs	r2, #0
 800b9aa:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800b9ac:	687b      	ldr	r3, [r7, #4]
 800b9ae:	2200      	movs	r2, #0
 800b9b0:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800b9b2:	687b      	ldr	r3, [r7, #4]
 800b9b4:	2200      	movs	r2, #0
 800b9b6:	739a      	strb	r2, [r3, #14]
        {
        }
 800b9b8:	687b      	ldr	r3, [r7, #4]
 800b9ba:	4618      	mov	r0, r3
 800b9bc:	370c      	adds	r7, #12
 800b9be:	46bd      	mov	sp, r7
 800b9c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9c4:	4770      	bx	lr

0800b9c6 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800b9c6:	b580      	push	{r7, lr}
 800b9c8:	b082      	sub	sp, #8
 800b9ca:	af00      	add	r7, sp, #0
 800b9cc:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800b9ce:	687b      	ldr	r3, [r7, #4]
 800b9d0:	4618      	mov	r0, r3
 800b9d2:	f7ff ffd5 	bl	800b980 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800b9d6:	687b      	ldr	r3, [r7, #4]
 800b9d8:	2200      	movs	r2, #0
 800b9da:	611a      	str	r2, [r3, #16]
 800b9dc:	687b      	ldr	r3, [r7, #4]
 800b9de:	2200      	movs	r2, #0
 800b9e0:	829a      	strh	r2, [r3, #20]
    {
    }
 800b9e2:	687b      	ldr	r3, [r7, #4]
 800b9e4:	4618      	mov	r0, r3
 800b9e6:	3708      	adds	r7, #8
 800b9e8:	46bd      	mov	sp, r7
 800b9ea:	bd80      	pop	{r7, pc}

0800b9ec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800b9ec:	b580      	push	{r7, lr}
 800b9ee:	b084      	sub	sp, #16
 800b9f0:	af00      	add	r7, sp, #0
 800b9f2:	60f8      	str	r0, [r7, #12]
 800b9f4:	60b9      	str	r1, [r7, #8]
 800b9f6:	607a      	str	r2, [r7, #4]
 800b9f8:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800b9fa:	4a55      	ldr	r2, [pc, #340]	@ (800bb50 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800b9fc:	68fb      	ldr	r3, [r7, #12]
 800b9fe:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800ba00:	68fb      	ldr	r3, [r7, #12]
 800ba02:	68ba      	ldr	r2, [r7, #8]
 800ba04:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800ba06:	68fb      	ldr	r3, [r7, #12]
 800ba08:	687a      	ldr	r2, [r7, #4]
 800ba0a:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800ba0c:	68fb      	ldr	r3, [r7, #12]
 800ba0e:	683a      	ldr	r2, [r7, #0]
 800ba10:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800ba12:	68fb      	ldr	r3, [r7, #12]
 800ba14:	2200      	movs	r2, #0
 800ba16:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800ba18:	68fb      	ldr	r3, [r7, #12]
 800ba1a:	2200      	movs	r2, #0
 800ba1c:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800ba1e:	68fb      	ldr	r3, [r7, #12]
 800ba20:	2200      	movs	r2, #0
 800ba22:	619a      	str	r2, [r3, #24]
          gestures(),
 800ba24:	68fb      	ldr	r3, [r7, #12]
 800ba26:	331c      	adds	r3, #28
 800ba28:	4618      	mov	r0, r3
 800ba2a:	f7ff ffcc 	bl	800b9c6 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800ba2e:	68fb      	ldr	r3, [r7, #12]
 800ba30:	2200      	movs	r2, #0
 800ba32:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800ba36:	68fb      	ldr	r3, [r7, #12]
 800ba38:	2200      	movs	r2, #0
 800ba3a:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800ba3c:	68fb      	ldr	r3, [r7, #12]
 800ba3e:	2200      	movs	r2, #0
 800ba40:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800ba42:	68fb      	ldr	r3, [r7, #12]
 800ba44:	2200      	movs	r2, #0
 800ba46:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800ba48:	68fb      	ldr	r3, [r7, #12]
 800ba4a:	2200      	movs	r2, #0
 800ba4c:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800ba4e:	68fb      	ldr	r3, [r7, #12]
 800ba50:	2200      	movs	r2, #0
 800ba52:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800ba56:	68fb      	ldr	r3, [r7, #12]
 800ba58:	2201      	movs	r2, #1
 800ba5a:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800ba5e:	68fb      	ldr	r3, [r7, #12]
 800ba60:	2200      	movs	r2, #0
 800ba62:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800ba66:	68fb      	ldr	r3, [r7, #12]
 800ba68:	2200      	movs	r2, #0
 800ba6a:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800ba6e:	68fb      	ldr	r3, [r7, #12]
 800ba70:	2200      	movs	r2, #0
 800ba72:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800ba74:	68fb      	ldr	r3, [r7, #12]
 800ba76:	3350      	adds	r3, #80	@ 0x50
 800ba78:	4618      	mov	r0, r3
 800ba7a:	f7fd fb20 	bl	80090be <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800ba7e:	68fb      	ldr	r3, [r7, #12]
 800ba80:	2200      	movs	r2, #0
 800ba82:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800ba86:	68fb      	ldr	r3, [r7, #12]
 800ba88:	2200      	movs	r2, #0
 800ba8a:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800ba8c:	68fb      	ldr	r3, [r7, #12]
 800ba8e:	2200      	movs	r2, #0
 800ba90:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800ba92:	68fb      	ldr	r3, [r7, #12]
 800ba94:	2200      	movs	r2, #0
 800ba96:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800ba98:	68fb      	ldr	r3, [r7, #12]
 800ba9a:	2201      	movs	r2, #1
 800ba9c:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800baa0:	68fb      	ldr	r3, [r7, #12]
 800baa2:	2200      	movs	r2, #0
 800baa4:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800baa8:	68fb      	ldr	r3, [r7, #12]
 800baaa:	2200      	movs	r2, #0
 800baac:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800bab0:	68fb      	ldr	r3, [r7, #12]
 800bab2:	2201      	movs	r2, #1
 800bab4:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800bab8:	68fb      	ldr	r3, [r7, #12]
 800baba:	2200      	movs	r2, #0
 800babc:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800bac0:	68fb      	ldr	r3, [r7, #12]
 800bac2:	2200      	movs	r2, #0
 800bac4:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800bac8:	68fb      	ldr	r3, [r7, #12]
 800baca:	2200      	movs	r2, #0
 800bacc:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800bad0:	68fb      	ldr	r3, [r7, #12]
 800bad2:	2200      	movs	r2, #0
 800bad4:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800bad8:	68fb      	ldr	r3, [r7, #12]
 800bada:	2200      	movs	r2, #0
 800badc:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800bae0:	68fb      	ldr	r3, [r7, #12]
 800bae2:	2200      	movs	r2, #0
 800bae4:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800bae6:	68fb      	ldr	r3, [r7, #12]
 800bae8:	2200      	movs	r2, #0
 800baea:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800baee:	68fb      	ldr	r3, [r7, #12]
 800baf0:	2200      	movs	r2, #0
 800baf2:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800baf6:	68fb      	ldr	r3, [r7, #12]
 800baf8:	2201      	movs	r2, #1
 800bafa:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800bafe:	68fb      	ldr	r3, [r7, #12]
 800bb00:	2201      	movs	r2, #1
 800bb02:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800bb06:	4a13      	ldr	r2, [pc, #76]	@ (800bb54 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800bb08:	68fb      	ldr	r3, [r7, #12]
 800bb0a:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800bb0c:	4a12      	ldr	r2, [pc, #72]	@ (800bb58 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800bb0e:	8b3b      	ldrh	r3, [r7, #24]
 800bb10:	8013      	strh	r3, [r2, #0]
 800bb12:	4b11      	ldr	r3, [pc, #68]	@ (800bb58 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800bb14:	881a      	ldrh	r2, [r3, #0]
 800bb16:	4b11      	ldr	r3, [pc, #68]	@ (800bb5c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800bb18:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800bb1a:	4a11      	ldr	r2, [pc, #68]	@ (800bb60 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800bb1c:	8bbb      	ldrh	r3, [r7, #28]
 800bb1e:	8013      	strh	r3, [r2, #0]
 800bb20:	4b0f      	ldr	r3, [pc, #60]	@ (800bb60 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800bb22:	881a      	ldrh	r2, [r3, #0]
 800bb24:	4b0f      	ldr	r3, [pc, #60]	@ (800bb64 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800bb26:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800bb28:	4b0f      	ldr	r3, [pc, #60]	@ (800bb68 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800bb2a:	2200      	movs	r2, #0
 800bb2c:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800bb2e:	8b3a      	ldrh	r2, [r7, #24]
 800bb30:	8bbb      	ldrh	r3, [r7, #28]
 800bb32:	429a      	cmp	r2, r3
 800bb34:	bf34      	ite	cc
 800bb36:	2301      	movcc	r3, #1
 800bb38:	2300      	movcs	r3, #0
 800bb3a:	b2db      	uxtb	r3, r3
 800bb3c:	461a      	mov	r2, r3
 800bb3e:	68fb      	ldr	r3, [r7, #12]
 800bb40:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800bb44:	68fb      	ldr	r3, [r7, #12]
 800bb46:	4618      	mov	r0, r3
 800bb48:	3710      	adds	r7, #16
 800bb4a:	46bd      	mov	sp, r7
 800bb4c:	bd80      	pop	{r7, pc}
 800bb4e:	bf00      	nop
 800bb50:	08024d78 	.word	0x08024d78
 800bb54:	20002dbc 	.word	0x20002dbc
 800bb58:	20002db0 	.word	0x20002db0
 800bb5c:	20002db6 	.word	0x20002db6
 800bb60:	20002db2 	.word	0x20002db2
 800bb64:	20002db8 	.word	0x20002db8
 800bb68:	20002db4 	.word	0x20002db4

0800bb6c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800bb6c:	b580      	push	{r7, lr}
 800bb6e:	b082      	sub	sp, #8
 800bb70:	af00      	add	r7, sp, #0
 800bb72:	6078      	str	r0, [r7, #4]
 800bb74:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 800bb76:	683b      	ldr	r3, [r7, #0]
 800bb78:	4618      	mov	r0, r3
 800bb7a:	f7fd f803 	bl	8008b84 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800bb7e:	bf00      	nop
 800bb80:	3708      	adds	r7, #8
 800bb82:	46bd      	mov	sp, r7
 800bb84:	bd80      	pop	{r7, pc}
	...

0800bb88 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800bb88:	b580      	push	{r7, lr}
 800bb8a:	b086      	sub	sp, #24
 800bb8c:	af02      	add	r7, sp, #8
 800bb8e:	60f8      	str	r0, [r7, #12]
 800bb90:	60b9      	str	r1, [r7, #8]
 800bb92:	607a      	str	r2, [r7, #4]
 800bb94:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800bb96:	68f8      	ldr	r0, [r7, #12]
 800bb98:	69bb      	ldr	r3, [r7, #24]
 800bb9a:	9300      	str	r3, [sp, #0]
 800bb9c:	683b      	ldr	r3, [r7, #0]
 800bb9e:	687a      	ldr	r2, [r7, #4]
 800bba0:	68b9      	ldr	r1, [r7, #8]
 800bba2:	f7ff fe8d 	bl	800b8c0 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800bba6:	4a04      	ldr	r2, [pc, #16]	@ (800bbb8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800bba8:	68fb      	ldr	r3, [r7, #12]
 800bbaa:	601a      	str	r2, [r3, #0]
    {

    }
 800bbac:	68fb      	ldr	r3, [r7, #12]
 800bbae:	4618      	mov	r0, r3
 800bbb0:	3710      	adds	r7, #16
 800bbb2:	46bd      	mov	sp, r7
 800bbb4:	bd80      	pop	{r7, pc}
 800bbb6:	bf00      	nop
 800bbb8:	08024b54 	.word	0x08024b54

0800bbbc <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800bbbc:	b580      	push	{r7, lr}
 800bbbe:	af00      	add	r7, sp, #0
 800bbc0:	4801      	ldr	r0, [pc, #4]	@ (800bbc8 <__tcf_0+0xc>)
 800bbc2:	f000 f969 	bl	800be98 <_ZN12FrontendHeapD1Ev>
 800bbc6:	bd80      	pop	{r7, pc}
 800bbc8:	20000688 	.word	0x20000688

0800bbcc <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800bbcc:	b580      	push	{r7, lr}
 800bbce:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800bbd0:	4b11      	ldr	r3, [pc, #68]	@ (800bc18 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800bbd2:	681b      	ldr	r3, [r3, #0]
 800bbd4:	f3bf 8f5b 	dmb	ish
 800bbd8:	f003 0301 	and.w	r3, r3, #1
 800bbdc:	2b00      	cmp	r3, #0
 800bbde:	bf0c      	ite	eq
 800bbe0:	2301      	moveq	r3, #1
 800bbe2:	2300      	movne	r3, #0
 800bbe4:	b2db      	uxtb	r3, r3
 800bbe6:	2b00      	cmp	r3, #0
 800bbe8:	d013      	beq.n	800bc12 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800bbea:	480b      	ldr	r0, [pc, #44]	@ (800bc18 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800bbec:	f016 faf1 	bl	80221d2 <__cxa_guard_acquire>
 800bbf0:	4603      	mov	r3, r0
 800bbf2:	2b00      	cmp	r3, #0
 800bbf4:	bf14      	ite	ne
 800bbf6:	2301      	movne	r3, #1
 800bbf8:	2300      	moveq	r3, #0
 800bbfa:	b2db      	uxtb	r3, r3
 800bbfc:	2b00      	cmp	r3, #0
 800bbfe:	d008      	beq.n	800bc12 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800bc00:	4806      	ldr	r0, [pc, #24]	@ (800bc1c <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800bc02:	f000 f867 	bl	800bcd4 <_ZN12FrontendHeapC1Ev>
 800bc06:	4806      	ldr	r0, [pc, #24]	@ (800bc20 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800bc08:	f016 fbac 	bl	8022364 <atexit>
 800bc0c:	4802      	ldr	r0, [pc, #8]	@ (800bc18 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800bc0e:	f016 faec 	bl	80221ea <__cxa_guard_release>
        return instance;
 800bc12:	4b02      	ldr	r3, [pc, #8]	@ (800bc1c <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800bc14:	4618      	mov	r0, r3
 800bc16:	bd80      	pop	{r7, pc}
 800bc18:	20000a70 	.word	0x20000a70
 800bc1c:	20000688 	.word	0x20000688
 800bc20:	0800bbbd 	.word	0x0800bbbd

0800bc24 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800bc24:	b580      	push	{r7, lr}
 800bc26:	b082      	sub	sp, #8
 800bc28:	af00      	add	r7, sp, #0
 800bc2a:	6078      	str	r0, [r7, #4]
 800bc2c:	4a05      	ldr	r2, [pc, #20]	@ (800bc44 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800bc2e:	687b      	ldr	r3, [r7, #4]
 800bc30:	601a      	str	r2, [r3, #0]
 800bc32:	687b      	ldr	r3, [r7, #4]
 800bc34:	4618      	mov	r0, r3
 800bc36:	f7ff fe63 	bl	800b900 <_ZN8touchgfx7MVPHeapD1Ev>
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	4618      	mov	r0, r3
 800bc3e:	3708      	adds	r7, #8
 800bc40:	46bd      	mov	sp, r7
 800bc42:	bd80      	pop	{r7, pc}
 800bc44:	08024b54 	.word	0x08024b54

0800bc48 <_ZN16FrontendHeapBaseD0Ev>:
 800bc48:	b580      	push	{r7, lr}
 800bc4a:	b082      	sub	sp, #8
 800bc4c:	af00      	add	r7, sp, #0
 800bc4e:	6078      	str	r0, [r7, #4]
 800bc50:	6878      	ldr	r0, [r7, #4]
 800bc52:	f7ff ffe7 	bl	800bc24 <_ZN16FrontendHeapBaseD1Ev>
 800bc56:	2114      	movs	r1, #20
 800bc58:	6878      	ldr	r0, [r7, #4]
 800bc5a:	f016 fab8 	bl	80221ce <_ZdlPvj>
 800bc5e:	687b      	ldr	r3, [r7, #4]
 800bc60:	4618      	mov	r0, r3
 800bc62:	3708      	adds	r7, #8
 800bc64:	46bd      	mov	sp, r7
 800bc66:	bd80      	pop	{r7, pc}

0800bc68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800bc68:	b580      	push	{r7, lr}
 800bc6a:	b082      	sub	sp, #8
 800bc6c:	af00      	add	r7, sp, #0
 800bc6e:	6078      	str	r0, [r7, #4]
 800bc70:	687b      	ldr	r3, [r7, #4]
 800bc72:	4618      	mov	r0, r3
 800bc74:	f001 f942 	bl	800cefc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800bc78:	4a03      	ldr	r2, [pc, #12]	@ (800bc88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800bc7a:	687b      	ldr	r3, [r7, #4]
 800bc7c:	601a      	str	r2, [r3, #0]
 800bc7e:	687b      	ldr	r3, [r7, #4]
 800bc80:	4618      	mov	r0, r3
 800bc82:	3708      	adds	r7, #8
 800bc84:	46bd      	mov	sp, r7
 800bc86:	bd80      	pop	{r7, pc}
 800bc88:	08024b20 	.word	0x08024b20

0800bc8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800bc8c:	b580      	push	{r7, lr}
 800bc8e:	b082      	sub	sp, #8
 800bc90:	af00      	add	r7, sp, #0
 800bc92:	6078      	str	r0, [r7, #4]
 800bc94:	687b      	ldr	r3, [r7, #4]
 800bc96:	4618      	mov	r0, r3
 800bc98:	f001 f930 	bl	800cefc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800bc9c:	4a03      	ldr	r2, [pc, #12]	@ (800bcac <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800bc9e:	687b      	ldr	r3, [r7, #4]
 800bca0:	601a      	str	r2, [r3, #0]
 800bca2:	687b      	ldr	r3, [r7, #4]
 800bca4:	4618      	mov	r0, r3
 800bca6:	3708      	adds	r7, #8
 800bca8:	46bd      	mov	sp, r7
 800bcaa:	bd80      	pop	{r7, pc}
 800bcac:	08024aec 	.word	0x08024aec

0800bcb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800bcb0:	b580      	push	{r7, lr}
 800bcb2:	b082      	sub	sp, #8
 800bcb4:	af00      	add	r7, sp, #0
 800bcb6:	6078      	str	r0, [r7, #4]
 800bcb8:	687b      	ldr	r3, [r7, #4]
 800bcba:	4618      	mov	r0, r3
 800bcbc:	f001 f91e 	bl	800cefc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800bcc0:	4a03      	ldr	r2, [pc, #12]	@ (800bcd0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800bcc2:	687b      	ldr	r3, [r7, #4]
 800bcc4:	601a      	str	r2, [r3, #0]
 800bcc6:	687b      	ldr	r3, [r7, #4]
 800bcc8:	4618      	mov	r0, r3
 800bcca:	3708      	adds	r7, #8
 800bccc:	46bd      	mov	sp, r7
 800bcce:	bd80      	pop	{r7, pc}
 800bcd0:	08024ab8 	.word	0x08024ab8

0800bcd4 <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800bcd4:	b590      	push	{r4, r7, lr}
 800bcd6:	b085      	sub	sp, #20
 800bcd8:	af02      	add	r7, sp, #8
 800bcda:	6078      	str	r0, [r7, #4]
        app(model, *this)
 800bcdc:	6878      	ldr	r0, [r7, #4]
 800bcde:	687b      	ldr	r3, [r7, #4]
 800bce0:	f103 0114 	add.w	r1, r3, #20
 800bce4:	687b      	ldr	r3, [r7, #4]
 800bce6:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800bcea:	687b      	ldr	r3, [r7, #4]
 800bcec:	f503 741d 	add.w	r4, r3, #628	@ 0x274
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800bcf0:	687b      	ldr	r3, [r7, #4]
 800bcf2:	f503 7322 	add.w	r3, r3, #648	@ 0x288
        app(model, *this)
 800bcf6:	9300      	str	r3, [sp, #0]
 800bcf8:	4623      	mov	r3, r4
 800bcfa:	f7ff ff45 	bl	800bb88 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800bcfe:	4a18      	ldr	r2, [pc, #96]	@ (800bd60 <_ZN12FrontendHeapC1Ev+0x8c>)
 800bd00:	687b      	ldr	r3, [r7, #4]
 800bd02:	601a      	str	r2, [r3, #0]
 800bd04:	687b      	ldr	r3, [r7, #4]
 800bd06:	3314      	adds	r3, #20
 800bd08:	4618      	mov	r0, r3
 800bd0a:	f7ff ffad 	bl	800bc68 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800bd0e:	687b      	ldr	r3, [r7, #4]
 800bd10:	332c      	adds	r3, #44	@ 0x2c
 800bd12:	4618      	mov	r0, r3
 800bd14:	f7ff ffba 	bl	800bc8c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800bd18:	687b      	ldr	r3, [r7, #4]
 800bd1a:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800bd1e:	4618      	mov	r0, r3
 800bd20:	f7ff ffc6 	bl	800bcb0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800bd24:	687b      	ldr	r3, [r7, #4]
 800bd26:	f503 7022 	add.w	r0, r3, #648	@ 0x288
 800bd2a:	687b      	ldr	r3, [r7, #4]
 800bd2c:	f503 7379 	add.w	r3, r3, #996	@ 0x3e4
 800bd30:	687a      	ldr	r2, [r7, #4]
 800bd32:	4619      	mov	r1, r3
 800bd34:	f7fe fe1c 	bl	800a970 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800bd38:	687b      	ldr	r3, [r7, #4]
 800bd3a:	f503 7379 	add.w	r3, r3, #996	@ 0x3e4
 800bd3e:	4618      	mov	r0, r3
 800bd40:	f7ff f880 	bl	800ae44 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800bd44:	687a      	ldr	r2, [r7, #4]
 800bd46:	687b      	ldr	r3, [r7, #4]
 800bd48:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 800bd4c:	4619      	mov	r1, r3
 800bd4e:	4610      	mov	r0, r2
 800bd50:	f7ff ff0c 	bl	800bb6c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800bd54:	687b      	ldr	r3, [r7, #4]
 800bd56:	4618      	mov	r0, r3
 800bd58:	370c      	adds	r7, #12
 800bd5a:	46bd      	mov	sp, r7
 800bd5c:	bd90      	pop	{r4, r7, pc}
 800bd5e:	bf00      	nop
 800bd60:	08024aa4 	.word	0x08024aa4

0800bd64 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800bd64:	b580      	push	{r7, lr}
 800bd66:	b086      	sub	sp, #24
 800bd68:	af02      	add	r7, sp, #8
 800bd6a:	60f8      	str	r0, [r7, #12]
 800bd6c:	60b9      	str	r1, [r7, #8]
 800bd6e:	607a      	str	r2, [r7, #4]
 800bd70:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800bd72:	68f8      	ldr	r0, [r7, #12]
 800bd74:	8bbb      	ldrh	r3, [r7, #28]
 800bd76:	9301      	str	r3, [sp, #4]
 800bd78:	8b3b      	ldrh	r3, [r7, #24]
 800bd7a:	9300      	str	r3, [sp, #0]
 800bd7c:	683b      	ldr	r3, [r7, #0]
 800bd7e:	687a      	ldr	r2, [r7, #4]
 800bd80:	68b9      	ldr	r1, [r7, #8]
 800bd82:	f7ff fe33 	bl	800b9ec <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800bd86:	4a04      	ldr	r2, [pc, #16]	@ (800bd98 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800bd88:	68fb      	ldr	r3, [r7, #12]
 800bd8a:	601a      	str	r2, [r3, #0]
    {
    }
 800bd8c:	68fb      	ldr	r3, [r7, #12]
 800bd8e:	4618      	mov	r0, r3
 800bd90:	3710      	adds	r7, #16
 800bd92:	46bd      	mov	sp, r7
 800bd94:	bd80      	pop	{r7, pc}
 800bd96:	bf00      	nop
 800bd98:	08024ba4 	.word	0x08024ba4

0800bd9c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800bd9c:	b580      	push	{r7, lr}
 800bd9e:	b086      	sub	sp, #24
 800bda0:	af02      	add	r7, sp, #8
 800bda2:	60f8      	str	r0, [r7, #12]
 800bda4:	60b9      	str	r1, [r7, #8]
 800bda6:	607a      	str	r2, [r7, #4]
 800bda8:	603b      	str	r3, [r7, #0]
 800bdaa:	68f8      	ldr	r0, [r7, #12]
 800bdac:	8bbb      	ldrh	r3, [r7, #28]
 800bdae:	9301      	str	r3, [sp, #4]
 800bdb0:	8b3b      	ldrh	r3, [r7, #24]
 800bdb2:	9300      	str	r3, [sp, #0]
 800bdb4:	683b      	ldr	r3, [r7, #0]
 800bdb6:	687a      	ldr	r2, [r7, #4]
 800bdb8:	68b9      	ldr	r1, [r7, #8]
 800bdba:	f7ff ffd3 	bl	800bd64 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800bdbe:	4a04      	ldr	r2, [pc, #16]	@ (800bdd0 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800bdc0:	68fb      	ldr	r3, [r7, #12]
 800bdc2:	601a      	str	r2, [r3, #0]
    {
    }
 800bdc4:	68fb      	ldr	r3, [r7, #12]
 800bdc6:	4618      	mov	r0, r3
 800bdc8:	3710      	adds	r7, #16
 800bdca:	46bd      	mov	sp, r7
 800bdcc:	bd80      	pop	{r7, pc}
 800bdce:	bf00      	nop
 800bdd0:	08024958 	.word	0x08024958

0800bdd4 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800bdd4:	b480      	push	{r7}
 800bdd6:	b083      	sub	sp, #12
 800bdd8:	af00      	add	r7, sp, #0
 800bdda:	6078      	str	r0, [r7, #4]
 800bddc:	4a04      	ldr	r2, [pc, #16]	@ (800bdf0 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800bdde:	687b      	ldr	r3, [r7, #4]
 800bde0:	601a      	str	r2, [r3, #0]
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	4618      	mov	r0, r3
 800bde6:	370c      	adds	r7, #12
 800bde8:	46bd      	mov	sp, r7
 800bdea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdee:	4770      	bx	lr
 800bdf0:	08024940 	.word	0x08024940

0800bdf4 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800bdf4:	b580      	push	{r7, lr}
 800bdf6:	b082      	sub	sp, #8
 800bdf8:	af00      	add	r7, sp, #0
 800bdfa:	6078      	str	r0, [r7, #4]
 800bdfc:	687b      	ldr	r3, [r7, #4]
 800bdfe:	4618      	mov	r0, r3
 800be00:	f7ff ffe8 	bl	800bdd4 <_ZN8touchgfx15TouchControllerC1Ev>
 800be04:	4a03      	ldr	r2, [pc, #12]	@ (800be14 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800be06:	687b      	ldr	r3, [r7, #4]
 800be08:	601a      	str	r2, [r3, #0]
 800be0a:	687b      	ldr	r3, [r7, #4]
 800be0c:	4618      	mov	r0, r3
 800be0e:	3708      	adds	r7, #8
 800be10:	46bd      	mov	sp, r7
 800be12:	bd80      	pop	{r7, pc}
 800be14:	08024928 	.word	0x08024928

0800be18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 800be18:	b590      	push	{r4, r7, lr}
 800be1a:	b085      	sub	sp, #20
 800be1c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800be1e:	f7fe fb7b 	bl	800a518 <_ZN14BitmapDatabase11getInstanceEv>
 800be22:	4604      	mov	r4, r0
 800be24:	f7fe fb82 	bl	800a52c <_ZN14BitmapDatabase15getInstanceSizeEv>
 800be28:	4603      	mov	r3, r0
 800be2a:	4619      	mov	r1, r3
 800be2c:	2300      	movs	r3, #0
 800be2e:	9300      	str	r3, [sp, #0]
 800be30:	2300      	movs	r3, #0
 800be32:	2200      	movs	r2, #0
 800be34:	4620      	mov	r0, r4
 800be36:	f007 fee3 	bl	8013c00 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800be3a:	4809      	ldr	r0, [pc, #36]	@ (800be60 <touchgfx_init+0x48>)
 800be3c:	f7ff fd30 	bl	800b8a0 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800be40:	2000      	movs	r0, #0
 800be42:	f7fe fcb7 	bl	800a7b4 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800be46:	4807      	ldr	r0, [pc, #28]	@ (800be64 <touchgfx_init+0x4c>)
 800be48:	f007 fe42 	bl	8013ad0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800be4c:	f7ff febe 	bl	800bbcc <_ZN12FrontendHeap11getInstanceEv>
 800be50:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800be52:	4805      	ldr	r0, [pc, #20]	@ (800be68 <touchgfx_init+0x50>)
 800be54:	f7ff faa6 	bl	800b3a4 <_ZN11TouchGFXHAL10initializeEv>
}
 800be58:	bf00      	nop
 800be5a:	370c      	adds	r7, #12
 800be5c:	46bd      	mov	sp, r7
 800be5e:	bd90      	pop	{r4, r7, pc}
 800be60:	20000b48 	.word	0x20000b48
 800be64:	20000020 	.word	0x20000020
 800be68:	20000b4c 	.word	0x20000b4c

0800be6c <touchgfx_components_init>:

void touchgfx_components_init()
{
 800be6c:	b480      	push	{r7}
 800be6e:	af00      	add	r7, sp, #0
}
 800be70:	bf00      	nop
 800be72:	46bd      	mov	sp, r7
 800be74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be78:	4770      	bx	lr
	...

0800be7c <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800be7c:	b580      	push	{r7, lr}
 800be7e:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800be80:	f7ff fba6 	bl	800b5d0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800be84:	4603      	mov	r3, r0
 800be86:	2b00      	cmp	r3, #0
 800be88:	d002      	beq.n	800be90 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800be8a:	4802      	ldr	r0, [pc, #8]	@ (800be94 <touchgfx_taskEntry+0x18>)
 800be8c:	f7ff f95c 	bl	800b148 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800be90:	bf00      	nop
 800be92:	bd80      	pop	{r7, pc}
 800be94:	20000b4c 	.word	0x20000b4c

0800be98 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800be98:	b580      	push	{r7, lr}
 800be9a:	b082      	sub	sp, #8
 800be9c:	af00      	add	r7, sp, #0
 800be9e:	6078      	str	r0, [r7, #4]
 800bea0:	4a10      	ldr	r2, [pc, #64]	@ (800bee4 <_ZN12FrontendHeapD1Ev+0x4c>)
 800bea2:	687b      	ldr	r3, [r7, #4]
 800bea4:	601a      	str	r2, [r3, #0]
 800bea6:	687b      	ldr	r3, [r7, #4]
 800bea8:	f503 7322 	add.w	r3, r3, #648	@ 0x288
 800beac:	4618      	mov	r0, r3
 800beae:	f7fe fd29 	bl	800a904 <_ZN19FrontendApplicationD1Ev>
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800beb8:	4618      	mov	r0, r3
 800beba:	f000 f827 	bl	800bf0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bebe:	687b      	ldr	r3, [r7, #4]
 800bec0:	332c      	adds	r3, #44	@ 0x2c
 800bec2:	4618      	mov	r0, r3
 800bec4:	f000 f844 	bl	800bf50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bec8:	687b      	ldr	r3, [r7, #4]
 800beca:	3314      	adds	r3, #20
 800becc:	4618      	mov	r0, r3
 800bece:	f000 f863 	bl	800bf98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bed2:	687b      	ldr	r3, [r7, #4]
 800bed4:	4618      	mov	r0, r3
 800bed6:	f7ff fea5 	bl	800bc24 <_ZN16FrontendHeapBaseD1Ev>
 800beda:	687b      	ldr	r3, [r7, #4]
 800bedc:	4618      	mov	r0, r3
 800bede:	3708      	adds	r7, #8
 800bee0:	46bd      	mov	sp, r7
 800bee2:	bd80      	pop	{r7, pc}
 800bee4:	08024aa4 	.word	0x08024aa4

0800bee8 <_ZN12FrontendHeapD0Ev>:
 800bee8:	b580      	push	{r7, lr}
 800beea:	b082      	sub	sp, #8
 800beec:	af00      	add	r7, sp, #0
 800beee:	6078      	str	r0, [r7, #4]
 800bef0:	6878      	ldr	r0, [r7, #4]
 800bef2:	f7ff ffd1 	bl	800be98 <_ZN12FrontendHeapD1Ev>
 800bef6:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 800befa:	6878      	ldr	r0, [r7, #4]
 800befc:	f016 f967 	bl	80221ce <_ZdlPvj>
 800bf00:	687b      	ldr	r3, [r7, #4]
 800bf02:	4618      	mov	r0, r3
 800bf04:	3708      	adds	r7, #8
 800bf06:	46bd      	mov	sp, r7
 800bf08:	bd80      	pop	{r7, pc}
	...

0800bf0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800bf0c:	b580      	push	{r7, lr}
 800bf0e:	b082      	sub	sp, #8
 800bf10:	af00      	add	r7, sp, #0
 800bf12:	6078      	str	r0, [r7, #4]
 800bf14:	4a05      	ldr	r2, [pc, #20]	@ (800bf2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bf16:	687b      	ldr	r3, [r7, #4]
 800bf18:	601a      	str	r2, [r3, #0]
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	4618      	mov	r0, r3
 800bf1e:	f000 ffec 	bl	800cefa <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bf22:	687b      	ldr	r3, [r7, #4]
 800bf24:	4618      	mov	r0, r3
 800bf26:	3708      	adds	r7, #8
 800bf28:	46bd      	mov	sp, r7
 800bf2a:	bd80      	pop	{r7, pc}
 800bf2c:	08024ab8 	.word	0x08024ab8

0800bf30 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800bf30:	b580      	push	{r7, lr}
 800bf32:	b082      	sub	sp, #8
 800bf34:	af00      	add	r7, sp, #0
 800bf36:	6078      	str	r0, [r7, #4]
 800bf38:	6878      	ldr	r0, [r7, #4]
 800bf3a:	f7ff ffe7 	bl	800bf0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bf3e:	2114      	movs	r1, #20
 800bf40:	6878      	ldr	r0, [r7, #4]
 800bf42:	f016 f944 	bl	80221ce <_ZdlPvj>
 800bf46:	687b      	ldr	r3, [r7, #4]
 800bf48:	4618      	mov	r0, r3
 800bf4a:	3708      	adds	r7, #8
 800bf4c:	46bd      	mov	sp, r7
 800bf4e:	bd80      	pop	{r7, pc}

0800bf50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800bf50:	b580      	push	{r7, lr}
 800bf52:	b082      	sub	sp, #8
 800bf54:	af00      	add	r7, sp, #0
 800bf56:	6078      	str	r0, [r7, #4]
 800bf58:	4a05      	ldr	r2, [pc, #20]	@ (800bf70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bf5a:	687b      	ldr	r3, [r7, #4]
 800bf5c:	601a      	str	r2, [r3, #0]
 800bf5e:	687b      	ldr	r3, [r7, #4]
 800bf60:	4618      	mov	r0, r3
 800bf62:	f000 ffca 	bl	800cefa <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bf66:	687b      	ldr	r3, [r7, #4]
 800bf68:	4618      	mov	r0, r3
 800bf6a:	3708      	adds	r7, #8
 800bf6c:	46bd      	mov	sp, r7
 800bf6e:	bd80      	pop	{r7, pc}
 800bf70:	08024aec 	.word	0x08024aec

0800bf74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800bf74:	b580      	push	{r7, lr}
 800bf76:	b082      	sub	sp, #8
 800bf78:	af00      	add	r7, sp, #0
 800bf7a:	6078      	str	r0, [r7, #4]
 800bf7c:	6878      	ldr	r0, [r7, #4]
 800bf7e:	f7ff ffe7 	bl	800bf50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bf82:	f44f 7112 	mov.w	r1, #584	@ 0x248
 800bf86:	6878      	ldr	r0, [r7, #4]
 800bf88:	f016 f921 	bl	80221ce <_ZdlPvj>
 800bf8c:	687b      	ldr	r3, [r7, #4]
 800bf8e:	4618      	mov	r0, r3
 800bf90:	3708      	adds	r7, #8
 800bf92:	46bd      	mov	sp, r7
 800bf94:	bd80      	pop	{r7, pc}
	...

0800bf98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800bf98:	b580      	push	{r7, lr}
 800bf9a:	b082      	sub	sp, #8
 800bf9c:	af00      	add	r7, sp, #0
 800bf9e:	6078      	str	r0, [r7, #4]
 800bfa0:	4a05      	ldr	r2, [pc, #20]	@ (800bfb8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800bfa2:	687b      	ldr	r3, [r7, #4]
 800bfa4:	601a      	str	r2, [r3, #0]
 800bfa6:	687b      	ldr	r3, [r7, #4]
 800bfa8:	4618      	mov	r0, r3
 800bfaa:	f000 ffa6 	bl	800cefa <_ZN8touchgfx17AbstractPartitionD1Ev>
 800bfae:	687b      	ldr	r3, [r7, #4]
 800bfb0:	4618      	mov	r0, r3
 800bfb2:	3708      	adds	r7, #8
 800bfb4:	46bd      	mov	sp, r7
 800bfb6:	bd80      	pop	{r7, pc}
 800bfb8:	08024b20 	.word	0x08024b20

0800bfbc <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800bfbc:	b580      	push	{r7, lr}
 800bfbe:	b082      	sub	sp, #8
 800bfc0:	af00      	add	r7, sp, #0
 800bfc2:	6078      	str	r0, [r7, #4]
 800bfc4:	6878      	ldr	r0, [r7, #4]
 800bfc6:	f7ff ffe7 	bl	800bf98 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800bfca:	2118      	movs	r1, #24
 800bfcc:	6878      	ldr	r0, [r7, #4]
 800bfce:	f016 f8fe 	bl	80221ce <_ZdlPvj>
 800bfd2:	687b      	ldr	r3, [r7, #4]
 800bfd4:	4618      	mov	r0, r3
 800bfd6:	3708      	adds	r7, #8
 800bfd8:	46bd      	mov	sp, r7
 800bfda:	bd80      	pop	{r7, pc}

0800bfdc <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800bfdc:	b580      	push	{r7, lr}
 800bfde:	b082      	sub	sp, #8
 800bfe0:	af00      	add	r7, sp, #0
 800bfe2:	6078      	str	r0, [r7, #4]
 800bfe4:	4a05      	ldr	r2, [pc, #20]	@ (800bffc <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800bfe6:	687b      	ldr	r3, [r7, #4]
 800bfe8:	601a      	str	r2, [r3, #0]
 800bfea:	687b      	ldr	r3, [r7, #4]
 800bfec:	4618      	mov	r0, r3
 800bfee:	f7ff fca7 	bl	800b940 <_ZN8touchgfx3LCDD1Ev>
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	4618      	mov	r0, r3
 800bff6:	3708      	adds	r7, #8
 800bff8:	46bd      	mov	sp, r7
 800bffa:	bd80      	pop	{r7, pc}
 800bffc:	08025698 	.word	0x08025698

0800c000 <_ZN8touchgfx8LCD16bppD0Ev>:
 800c000:	b580      	push	{r7, lr}
 800c002:	b082      	sub	sp, #8
 800c004:	af00      	add	r7, sp, #0
 800c006:	6078      	str	r0, [r7, #4]
 800c008:	6878      	ldr	r0, [r7, #4]
 800c00a:	f7ff ffe7 	bl	800bfdc <_ZN8touchgfx8LCD16bppD1Ev>
 800c00e:	218c      	movs	r1, #140	@ 0x8c
 800c010:	6878      	ldr	r0, [r7, #4]
 800c012:	f016 f8dc 	bl	80221ce <_ZdlPvj>
 800c016:	687b      	ldr	r3, [r7, #4]
 800c018:	4618      	mov	r0, r3
 800c01a:	3708      	adds	r7, #8
 800c01c:	46bd      	mov	sp, r7
 800c01e:	bd80      	pop	{r7, pc}

0800c020 <_Z41__static_initialization_and_destruction_0ii>:
 800c020:	b580      	push	{r7, lr}
 800c022:	b084      	sub	sp, #16
 800c024:	af02      	add	r7, sp, #8
 800c026:	6078      	str	r0, [r7, #4]
 800c028:	6039      	str	r1, [r7, #0]
 800c02a:	687b      	ldr	r3, [r7, #4]
 800c02c:	2b01      	cmp	r3, #1
 800c02e:	d119      	bne.n	800c064 <_Z41__static_initialization_and_destruction_0ii+0x44>
 800c030:	683b      	ldr	r3, [r7, #0]
 800c032:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c036:	4293      	cmp	r3, r2
 800c038:	d114      	bne.n	800c064 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800c03a:	4818      	ldr	r0, [pc, #96]	@ (800c09c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800c03c:	f7ff feda 	bl	800bdf4 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800c040:	4817      	ldr	r0, [pc, #92]	@ (800c0a0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800c042:	f7ff fb8f 	bl	800b764 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800c046:	4817      	ldr	r0, [pc, #92]	@ (800c0a4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800c048:	f00c fed6 	bl	8018df8 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 800c04c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800c050:	9301      	str	r3, [sp, #4]
 800c052:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800c056:	9300      	str	r3, [sp, #0]
 800c058:	4b10      	ldr	r3, [pc, #64]	@ (800c09c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800c05a:	4a12      	ldr	r2, [pc, #72]	@ (800c0a4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800c05c:	4910      	ldr	r1, [pc, #64]	@ (800c0a0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800c05e:	4812      	ldr	r0, [pc, #72]	@ (800c0a8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800c060:	f7ff fe9c 	bl	800bd9c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800c064:	687b      	ldr	r3, [r7, #4]
 800c066:	2b00      	cmp	r3, #0
 800c068:	d113      	bne.n	800c092 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800c06a:	683b      	ldr	r3, [r7, #0]
 800c06c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c070:	4293      	cmp	r3, r2
 800c072:	d10e      	bne.n	800c092 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800c074:	480c      	ldr	r0, [pc, #48]	@ (800c0a8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800c076:	f7ff fa25 	bl	800b4c4 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800c07a:	480c      	ldr	r0, [pc, #48]	@ (800c0ac <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800c07c:	f7fc f820 	bl	80080c0 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800c080:	4808      	ldr	r0, [pc, #32]	@ (800c0a4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800c082:	f7ff ffab 	bl	800bfdc <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800c086:	4806      	ldr	r0, [pc, #24]	@ (800c0a0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800c088:	f7ff fbc0 	bl	800b80c <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800c08c:	4803      	ldr	r0, [pc, #12]	@ (800c09c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800c08e:	f7fe ff61 	bl	800af54 <_ZN20STM32TouchControllerD1Ev>
}
 800c092:	bf00      	nop
 800c094:	3708      	adds	r7, #8
 800c096:	46bd      	mov	sp, r7
 800c098:	bd80      	pop	{r7, pc}
 800c09a:	bf00      	nop
 800c09c:	20000a74 	.word	0x20000a74
 800c0a0:	20000a78 	.word	0x20000a78
 800c0a4:	20000abc 	.word	0x20000abc
 800c0a8:	20000b4c 	.word	0x20000b4c
 800c0ac:	20000020 	.word	0x20000020

0800c0b0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800c0b0:	b480      	push	{r7}
 800c0b2:	b083      	sub	sp, #12
 800c0b4:	af00      	add	r7, sp, #0
 800c0b6:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800c0b8:	2301      	movs	r3, #1
    }
 800c0ba:	4618      	mov	r0, r3
 800c0bc:	370c      	adds	r7, #12
 800c0be:	46bd      	mov	sp, r7
 800c0c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0c4:	4770      	bx	lr

0800c0c6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800c0c6:	b480      	push	{r7}
 800c0c8:	b083      	sub	sp, #12
 800c0ca:	af00      	add	r7, sp, #0
 800c0cc:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800c0ce:	230c      	movs	r3, #12
    }
 800c0d0:	4618      	mov	r0, r3
 800c0d2:	370c      	adds	r7, #12
 800c0d4:	46bd      	mov	sp, r7
 800c0d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0da:	4770      	bx	lr

0800c0dc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800c0dc:	b480      	push	{r7}
 800c0de:	b083      	sub	sp, #12
 800c0e0:	af00      	add	r7, sp, #0
 800c0e2:	6078      	str	r0, [r7, #4]
 800c0e4:	460b      	mov	r3, r1
 800c0e6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800c0e8:	887a      	ldrh	r2, [r7, #2]
 800c0ea:	4613      	mov	r3, r2
 800c0ec:	005b      	lsls	r3, r3, #1
 800c0ee:	4413      	add	r3, r2
 800c0f0:	009b      	lsls	r3, r3, #2
 800c0f2:	3308      	adds	r3, #8
 800c0f4:	687a      	ldr	r2, [r7, #4]
 800c0f6:	4413      	add	r3, r2
    }
 800c0f8:	4618      	mov	r0, r3
 800c0fa:	370c      	adds	r7, #12
 800c0fc:	46bd      	mov	sp, r7
 800c0fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c102:	4770      	bx	lr

0800c104 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800c104:	b480      	push	{r7}
 800c106:	b083      	sub	sp, #12
 800c108:	af00      	add	r7, sp, #0
 800c10a:	6078      	str	r0, [r7, #4]
 800c10c:	460b      	mov	r3, r1
 800c10e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800c110:	887a      	ldrh	r2, [r7, #2]
 800c112:	4613      	mov	r3, r2
 800c114:	005b      	lsls	r3, r3, #1
 800c116:	4413      	add	r3, r2
 800c118:	009b      	lsls	r3, r3, #2
 800c11a:	3308      	adds	r3, #8
 800c11c:	687a      	ldr	r2, [r7, #4]
 800c11e:	4413      	add	r3, r2
    }
 800c120:	4618      	mov	r0, r3
 800c122:	370c      	adds	r7, #12
 800c124:	46bd      	mov	sp, r7
 800c126:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c12a:	4770      	bx	lr

0800c12c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800c12c:	b480      	push	{r7}
 800c12e:	b083      	sub	sp, #12
 800c130:	af00      	add	r7, sp, #0
 800c132:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800c134:	2301      	movs	r3, #1
    }
 800c136:	4618      	mov	r0, r3
 800c138:	370c      	adds	r7, #12
 800c13a:	46bd      	mov	sp, r7
 800c13c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c140:	4770      	bx	lr

0800c142 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800c142:	b480      	push	{r7}
 800c144:	b083      	sub	sp, #12
 800c146:	af00      	add	r7, sp, #0
 800c148:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800c14a:	f44f 7310 	mov.w	r3, #576	@ 0x240
    }
 800c14e:	4618      	mov	r0, r3
 800c150:	370c      	adds	r7, #12
 800c152:	46bd      	mov	sp, r7
 800c154:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c158:	4770      	bx	lr

0800c15a <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800c15a:	b480      	push	{r7}
 800c15c:	b083      	sub	sp, #12
 800c15e:	af00      	add	r7, sp, #0
 800c160:	6078      	str	r0, [r7, #4]
 800c162:	460b      	mov	r3, r1
 800c164:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c166:	887a      	ldrh	r2, [r7, #2]
 800c168:	4613      	mov	r3, r2
 800c16a:	00db      	lsls	r3, r3, #3
 800c16c:	4413      	add	r3, r2
 800c16e:	019b      	lsls	r3, r3, #6
 800c170:	3308      	adds	r3, #8
 800c172:	687a      	ldr	r2, [r7, #4]
 800c174:	4413      	add	r3, r2
    }
 800c176:	4618      	mov	r0, r3
 800c178:	370c      	adds	r7, #12
 800c17a:	46bd      	mov	sp, r7
 800c17c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c180:	4770      	bx	lr

0800c182 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800c182:	b480      	push	{r7}
 800c184:	b083      	sub	sp, #12
 800c186:	af00      	add	r7, sp, #0
 800c188:	6078      	str	r0, [r7, #4]
 800c18a:	460b      	mov	r3, r1
 800c18c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c18e:	887a      	ldrh	r2, [r7, #2]
 800c190:	4613      	mov	r3, r2
 800c192:	00db      	lsls	r3, r3, #3
 800c194:	4413      	add	r3, r2
 800c196:	019b      	lsls	r3, r3, #6
 800c198:	3308      	adds	r3, #8
 800c19a:	687a      	ldr	r2, [r7, #4]
 800c19c:	4413      	add	r3, r2
    }
 800c19e:	4618      	mov	r0, r3
 800c1a0:	370c      	adds	r7, #12
 800c1a2:	46bd      	mov	sp, r7
 800c1a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1a8:	4770      	bx	lr

0800c1aa <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800c1aa:	b480      	push	{r7}
 800c1ac:	b083      	sub	sp, #12
 800c1ae:	af00      	add	r7, sp, #0
 800c1b0:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800c1b2:	2301      	movs	r3, #1
    }
 800c1b4:	4618      	mov	r0, r3
 800c1b6:	370c      	adds	r7, #12
 800c1b8:	46bd      	mov	sp, r7
 800c1ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1be:	4770      	bx	lr

0800c1c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800c1c0:	b480      	push	{r7}
 800c1c2:	b083      	sub	sp, #12
 800c1c4:	af00      	add	r7, sp, #0
 800c1c6:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800c1c8:	2310      	movs	r3, #16
    }
 800c1ca:	4618      	mov	r0, r3
 800c1cc:	370c      	adds	r7, #12
 800c1ce:	46bd      	mov	sp, r7
 800c1d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1d4:	4770      	bx	lr

0800c1d6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800c1d6:	b480      	push	{r7}
 800c1d8:	b083      	sub	sp, #12
 800c1da:	af00      	add	r7, sp, #0
 800c1dc:	6078      	str	r0, [r7, #4]
 800c1de:	460b      	mov	r3, r1
 800c1e0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c1e2:	887b      	ldrh	r3, [r7, #2]
 800c1e4:	011b      	lsls	r3, r3, #4
 800c1e6:	3308      	adds	r3, #8
 800c1e8:	687a      	ldr	r2, [r7, #4]
 800c1ea:	4413      	add	r3, r2
    }
 800c1ec:	4618      	mov	r0, r3
 800c1ee:	370c      	adds	r7, #12
 800c1f0:	46bd      	mov	sp, r7
 800c1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1f6:	4770      	bx	lr

0800c1f8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800c1f8:	b480      	push	{r7}
 800c1fa:	b083      	sub	sp, #12
 800c1fc:	af00      	add	r7, sp, #0
 800c1fe:	6078      	str	r0, [r7, #4]
 800c200:	460b      	mov	r3, r1
 800c202:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800c204:	887b      	ldrh	r3, [r7, #2]
 800c206:	011b      	lsls	r3, r3, #4
 800c208:	3308      	adds	r3, #8
 800c20a:	687a      	ldr	r2, [r7, #4]
 800c20c:	4413      	add	r3, r2
    }
 800c20e:	4618      	mov	r0, r3
 800c210:	370c      	adds	r7, #12
 800c212:	46bd      	mov	sp, r7
 800c214:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c218:	4770      	bx	lr

0800c21a <_GLOBAL__sub_I_touchgfx_init>:
 800c21a:	b580      	push	{r7, lr}
 800c21c:	af00      	add	r7, sp, #0
 800c21e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c222:	2001      	movs	r0, #1
 800c224:	f7ff fefc 	bl	800c020 <_Z41__static_initialization_and_destruction_0ii>
 800c228:	bd80      	pop	{r7, pc}

0800c22a <_GLOBAL__sub_D_touchgfx_init>:
 800c22a:	b580      	push	{r7, lr}
 800c22c:	af00      	add	r7, sp, #0
 800c22e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c232:	2000      	movs	r0, #0
 800c234:	f7ff fef4 	bl	800c020 <_Z41__static_initialization_and_destruction_0ii>
 800c238:	bd80      	pop	{r7, pc}

0800c23a <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800c23a:	b480      	push	{r7}
 800c23c:	b083      	sub	sp, #12
 800c23e:	af00      	add	r7, sp, #0
 800c240:	6078      	str	r0, [r7, #4]
        return color;
 800c242:	687b      	ldr	r3, [r7, #4]
 800c244:	681b      	ldr	r3, [r3, #0]
    }
 800c246:	4618      	mov	r0, r3
 800c248:	370c      	adds	r7, #12
 800c24a:	46bd      	mov	sp, r7
 800c24c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c250:	4770      	bx	lr
	...

0800c254 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800c254:	b480      	push	{r7}
 800c256:	b083      	sub	sp, #12
 800c258:	af00      	add	r7, sp, #0
 800c25a:	6078      	str	r0, [r7, #4]
    {
 800c25c:	4a04      	ldr	r2, [pc, #16]	@ (800c270 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800c25e:	687b      	ldr	r3, [r7, #4]
 800c260:	601a      	str	r2, [r3, #0]
    }
 800c262:	687b      	ldr	r3, [r7, #4]
 800c264:	4618      	mov	r0, r3
 800c266:	370c      	adds	r7, #12
 800c268:	46bd      	mov	sp, r7
 800c26a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c26e:	4770      	bx	lr
 800c270:	08024c7c 	.word	0x08024c7c

0800c274 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800c274:	b580      	push	{r7, lr}
 800c276:	b082      	sub	sp, #8
 800c278:	af00      	add	r7, sp, #0
 800c27a:	6078      	str	r0, [r7, #4]
    }
 800c27c:	6878      	ldr	r0, [r7, #4]
 800c27e:	f7ff ffe9 	bl	800c254 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800c282:	2104      	movs	r1, #4
 800c284:	6878      	ldr	r0, [r7, #4]
 800c286:	f015 ffa2 	bl	80221ce <_ZdlPvj>
 800c28a:	687b      	ldr	r3, [r7, #4]
 800c28c:	4618      	mov	r0, r3
 800c28e:	3708      	adds	r7, #8
 800c290:	46bd      	mov	sp, r7
 800c292:	bd80      	pop	{r7, pc}

0800c294 <_ZN8touchgfx3HAL5vSyncEv>:
    /**
     * Called by the VSync interrupt.
     *
     * Called by the VSync interrupt for counting of LCD refreshes.
     */
    void vSync()
 800c294:	b480      	push	{r7}
 800c296:	b083      	sub	sp, #12
 800c298:	af00      	add	r7, sp, #0
 800c29a:	6078      	str	r0, [r7, #4]
    {
        vSyncCnt++;
 800c29c:	687b      	ldr	r3, [r7, #4]
 800c29e:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800c2a2:	3301      	adds	r3, #1
 800c2a4:	b2da      	uxtb	r2, r3
 800c2a6:	687b      	ldr	r3, [r7, #4]
 800c2a8:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800c2ac:	bf00      	nop
 800c2ae:	370c      	adds	r7, #12
 800c2b0:	46bd      	mov	sp, r7
 800c2b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2b6:	4770      	bx	lr

0800c2b8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
     * Sets a framebuffer allocator. The framebuffer allocator is only used in partial
     * framebuffer mode.
     *
     * @param [in] allocator pointer to a framebuffer allocator object.
     */
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800c2b8:	b480      	push	{r7}
 800c2ba:	b083      	sub	sp, #12
 800c2bc:	af00      	add	r7, sp, #0
 800c2be:	6078      	str	r0, [r7, #4]
 800c2c0:	6039      	str	r1, [r7, #0]
    {
        frameBufferAllocator = allocator;
 800c2c2:	687b      	ldr	r3, [r7, #4]
 800c2c4:	683a      	ldr	r2, [r7, #0]
 800c2c6:	619a      	str	r2, [r3, #24]
    }
 800c2c8:	bf00      	nop
 800c2ca:	370c      	adds	r7, #12
 800c2cc:	46bd      	mov	sp, r7
 800c2ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2d2:	4770      	bx	lr

0800c2d4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    /**
     * Gets the framebuffer allocator.
     *
     * @return The framebuffer allocator.
     */
    FrameBufferAllocator* getFrameBufferAllocator()
 800c2d4:	b480      	push	{r7}
 800c2d6:	b083      	sub	sp, #12
 800c2d8:	af00      	add	r7, sp, #0
 800c2da:	6078      	str	r0, [r7, #4]
    {
        return frameBufferAllocator;
 800c2dc:	687b      	ldr	r3, [r7, #4]
 800c2de:	699b      	ldr	r3, [r3, #24]
    }
 800c2e0:	4618      	mov	r0, r3
 800c2e2:	370c      	adds	r7, #12
 800c2e4:	46bd      	mov	sp, r7
 800c2e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2ea:	4770      	bx	lr

0800c2ec <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
     *
     * @param  s The desired strategy to use.
     *
     * @return true if the desired strategy will be used, false otherwise.
     */
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800c2ec:	b580      	push	{r7, lr}
 800c2ee:	b082      	sub	sp, #8
 800c2f0:	af00      	add	r7, sp, #0
 800c2f2:	6078      	str	r0, [r7, #4]
 800c2f4:	460b      	mov	r3, r1
 800c2f6:	70fb      	strb	r3, [r7, #3]
    {
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800c2f8:	78fb      	ldrb	r3, [r7, #3]
 800c2fa:	2b00      	cmp	r3, #0
 800c2fc:	d002      	beq.n	800c304 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800c2fe:	78fb      	ldrb	r3, [r7, #3]
 800c300:	2b02      	cmp	r3, #2
 800c302:	d105      	bne.n	800c310 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
        {
            refreshStrategy = s;
 800c304:	687b      	ldr	r3, [r7, #4]
 800c306:	78fa      	ldrb	r2, [r7, #3]
 800c308:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800c30c:	2301      	movs	r3, #1
 800c30e:	e027      	b.n	800c360 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800c310:	78fb      	ldrb	r3, [r7, #3]
 800c312:	2b01      	cmp	r3, #1
 800c314:	d123      	bne.n	800c35e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
        {
            // Perform sanity checks. This strategy requires
            //   - task delay function
            //   - a TFT controller (+ an impl of getTFTCurrentLine())
            //   - single buffering
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800c316:	687b      	ldr	r3, [r7, #4]
 800c318:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800c31a:	2b00      	cmp	r3, #0
 800c31c:	d014      	beq.n	800c348 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800c31e:	687b      	ldr	r3, [r7, #4]
 800c320:	681b      	ldr	r3, [r3, #0]
 800c322:	339c      	adds	r3, #156	@ 0x9c
 800c324:	681b      	ldr	r3, [r3, #0]
 800c326:	6878      	ldr	r0, [r7, #4]
 800c328:	4798      	blx	r3
 800c32a:	4603      	mov	r3, r0
 800c32c:	461a      	mov	r2, r3
 800c32e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800c332:	429a      	cmp	r2, r3
 800c334:	d008      	beq.n	800c348 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800c336:	4b0c      	ldr	r3, [pc, #48]	@ (800c368 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800c338:	781b      	ldrb	r3, [r3, #0]
 800c33a:	f083 0301 	eor.w	r3, r3, #1
 800c33e:	b2db      	uxtb	r3, r3
 800c340:	2b00      	cmp	r3, #0
 800c342:	d001      	beq.n	800c348 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800c344:	2301      	movs	r3, #1
 800c346:	e000      	b.n	800c34a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800c348:	2300      	movs	r3, #0
 800c34a:	2b00      	cmp	r3, #0
 800c34c:	d005      	beq.n	800c35a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
            {
                refreshStrategy = s;
 800c34e:	687b      	ldr	r3, [r7, #4]
 800c350:	78fa      	ldrb	r2, [r7, #3]
 800c352:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800c356:	2301      	movs	r3, #1
 800c358:	e002      	b.n	800c360 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            }
            return false;
 800c35a:	2300      	movs	r3, #0
 800c35c:	e000      	b.n	800c360 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        // Unknown strategy
        return false;
 800c35e:	2300      	movs	r3, #0
    }
 800c360:	4618      	mov	r0, r3
 800c362:	3708      	adds	r7, #8
 800c364:	46bd      	mov	sp, r7
 800c366:	bd80      	pop	{r7, pc}
 800c368:	20002dba 	.word	0x20002dba

0800c36c <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800c36c:	b480      	push	{r7}
 800c36e:	af00      	add	r7, sp, #0
}
 800c370:	bf00      	nop
 800c372:	46bd      	mov	sp, r7
 800c374:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c378:	4770      	bx	lr

0800c37a <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800c37a:	b480      	push	{r7}
 800c37c:	b083      	sub	sp, #12
 800c37e:	af00      	add	r7, sp, #0
 800c380:	6078      	str	r0, [r7, #4]
 800c382:	6039      	str	r1, [r7, #0]
}
 800c384:	bf00      	nop
 800c386:	370c      	adds	r7, #12
 800c388:	46bd      	mov	sp, r7
 800c38a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c38e:	4770      	bx	lr

0800c390 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800c390:	b480      	push	{r7}
 800c392:	b08d      	sub	sp, #52	@ 0x34
 800c394:	af00      	add	r7, sp, #0
 800c396:	60f8      	str	r0, [r7, #12]
 800c398:	60b9      	str	r1, [r7, #8]
 800c39a:	607a      	str	r2, [r7, #4]
 800c39c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800c39e:	68fb      	ldr	r3, [r7, #12]
 800c3a0:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800c3a2:	68bb      	ldr	r3, [r7, #8]
 800c3a4:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800c3a6:	687b      	ldr	r3, [r7, #4]
 800c3a8:	005b      	lsls	r3, r3, #1
 800c3aa:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c3ac:	4413      	add	r3, r2
 800c3ae:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800c3b0:	78fb      	ldrb	r3, [r7, #3]
 800c3b2:	2bff      	cmp	r3, #255	@ 0xff
 800c3b4:	d112      	bne.n	800c3dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800c3b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c3b8:	1c9a      	adds	r2, r3, #2
 800c3ba:	62ba      	str	r2, [r7, #40]	@ 0x28
 800c3bc:	881a      	ldrh	r2, [r3, #0]
 800c3be:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c3c0:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800c3c2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c3c4:	3302      	adds	r3, #2
 800c3c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c3c8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c3ca:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c3cc:	429a      	cmp	r2, r3
 800c3ce:	bf34      	ite	cc
 800c3d0:	2301      	movcc	r3, #1
 800c3d2:	2300      	movcs	r3, #0
 800c3d4:	b2db      	uxtb	r3, r3
 800c3d6:	2b00      	cmp	r3, #0
 800c3d8:	d1ed      	bne.n	800c3b6 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800c3da:	e079      	b.n	800c4d0 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800c3dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c3de:	1c9a      	adds	r2, r3, #2
 800c3e0:	62ba      	str	r2, [r7, #40]	@ 0x28
 800c3e2:	881a      	ldrh	r2, [r3, #0]
 800c3e4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c3e6:	881b      	ldrh	r3, [r3, #0]
 800c3e8:	847a      	strh	r2, [r7, #34]	@ 0x22
 800c3ea:	843b      	strh	r3, [r7, #32]
 800c3ec:	78fb      	ldrb	r3, [r7, #3]
 800c3ee:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800c3f0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c3f2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c3f6:	f023 0307 	bic.w	r3, r3, #7
 800c3fa:	b299      	uxth	r1, r3
 800c3fc:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c3fe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c402:	b29a      	uxth	r2, r3
 800c404:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800c406:	f003 031f 	and.w	r3, r3, #31
 800c40a:	b29b      	uxth	r3, r3
 800c40c:	83b9      	strh	r1, [r7, #28]
 800c40e:	837a      	strh	r2, [r7, #26]
 800c410:	833b      	strh	r3, [r7, #24]
 800c412:	8c3b      	ldrh	r3, [r7, #32]
 800c414:	82fb      	strh	r3, [r7, #22]
 800c416:	7ffb      	ldrb	r3, [r7, #31]
 800c418:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800c41a:	7d7b      	ldrb	r3, [r7, #21]
 800c41c:	43db      	mvns	r3, r3
 800c41e:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800c420:	8bbb      	ldrh	r3, [r7, #28]
 800c422:	7d7a      	ldrb	r2, [r7, #21]
 800c424:	fb03 f202 	mul.w	r2, r3, r2
 800c428:	8afb      	ldrh	r3, [r7, #22]
 800c42a:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800c42e:	7d39      	ldrb	r1, [r7, #20]
 800c430:	fb01 f303 	mul.w	r3, r1, r3
 800c434:	4413      	add	r3, r2
 800c436:	4a29      	ldr	r2, [pc, #164]	@ (800c4dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c438:	fb82 1203 	smull	r1, r2, r2, r3
 800c43c:	441a      	add	r2, r3
 800c43e:	11d2      	asrs	r2, r2, #7
 800c440:	17db      	asrs	r3, r3, #31
 800c442:	1ad3      	subs	r3, r2, r3
 800c444:	b21b      	sxth	r3, r3
 800c446:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c44a:	f023 0307 	bic.w	r3, r3, #7
 800c44e:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800c450:	8b7b      	ldrh	r3, [r7, #26]
 800c452:	7d79      	ldrb	r1, [r7, #21]
 800c454:	fb03 f101 	mul.w	r1, r3, r1
 800c458:	8afb      	ldrh	r3, [r7, #22]
 800c45a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c45e:	7d38      	ldrb	r0, [r7, #20]
 800c460:	fb00 f303 	mul.w	r3, r0, r3
 800c464:	440b      	add	r3, r1
 800c466:	491d      	ldr	r1, [pc, #116]	@ (800c4dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c468:	fb81 0103 	smull	r0, r1, r1, r3
 800c46c:	4419      	add	r1, r3
 800c46e:	11c9      	asrs	r1, r1, #7
 800c470:	17db      	asrs	r3, r3, #31
 800c472:	1acb      	subs	r3, r1, r3
 800c474:	b21b      	sxth	r3, r3
 800c476:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c47a:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800c47c:	4313      	orrs	r3, r2
 800c47e:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800c480:	8b3b      	ldrh	r3, [r7, #24]
 800c482:	7d79      	ldrb	r1, [r7, #21]
 800c484:	fb03 f101 	mul.w	r1, r3, r1
 800c488:	8afb      	ldrh	r3, [r7, #22]
 800c48a:	f003 031f 	and.w	r3, r3, #31
 800c48e:	7d38      	ldrb	r0, [r7, #20]
 800c490:	fb00 f303 	mul.w	r3, r0, r3
 800c494:	440b      	add	r3, r1
 800c496:	4911      	ldr	r1, [pc, #68]	@ (800c4dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800c498:	fb81 0103 	smull	r0, r1, r1, r3
 800c49c:	4419      	add	r1, r3
 800c49e:	11c9      	asrs	r1, r1, #7
 800c4a0:	17db      	asrs	r3, r3, #31
 800c4a2:	1acb      	subs	r3, r1, r3
 800c4a4:	b21b      	sxth	r3, r3
 800c4a6:	f003 031f 	and.w	r3, r3, #31
 800c4aa:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800c4ac:	4313      	orrs	r3, r2
 800c4ae:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800c4b0:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800c4b2:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800c4b4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c4b6:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800c4b8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c4ba:	3302      	adds	r3, #2
 800c4bc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c4be:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c4c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c4c2:	429a      	cmp	r2, r3
 800c4c4:	bf34      	ite	cc
 800c4c6:	2301      	movcc	r3, #1
 800c4c8:	2300      	movcs	r3, #0
 800c4ca:	b2db      	uxtb	r3, r3
 800c4cc:	2b00      	cmp	r3, #0
 800c4ce:	d185      	bne.n	800c3dc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800c4d0:	bf00      	nop
 800c4d2:	3734      	adds	r7, #52	@ 0x34
 800c4d4:	46bd      	mov	sp, r7
 800c4d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c4da:	4770      	bx	lr
 800c4dc:	80808081 	.word	0x80808081

0800c4e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800c4e0:	b590      	push	{r4, r7, lr}
 800c4e2:	b093      	sub	sp, #76	@ 0x4c
 800c4e4:	af00      	add	r7, sp, #0
 800c4e6:	60f8      	str	r0, [r7, #12]
 800c4e8:	60b9      	str	r1, [r7, #8]
 800c4ea:	607a      	str	r2, [r7, #4]
 800c4ec:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800c4ee:	68fb      	ldr	r3, [r7, #12]
 800c4f0:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800c4f2:	68bb      	ldr	r3, [r7, #8]
 800c4f4:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800c4f6:	687b      	ldr	r3, [r7, #4]
 800c4f8:	005b      	lsls	r3, r3, #1
 800c4fa:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800c4fc:	4413      	add	r3, r2
 800c4fe:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800c500:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c502:	681b      	ldr	r3, [r3, #0]
 800c504:	0e1b      	lsrs	r3, r3, #24
 800c506:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800c50a:	78fb      	ldrb	r3, [r7, #3]
 800c50c:	b29a      	uxth	r2, r3
 800c50e:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800c512:	b29b      	uxth	r3, r3
 800c514:	fb12 f303 	smulbb	r3, r2, r3
 800c518:	b29b      	uxth	r3, r3
 800c51a:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800c51c:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800c51e:	3301      	adds	r3, #1
 800c520:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800c522:	0a12      	lsrs	r2, r2, #8
 800c524:	b292      	uxth	r2, r2
 800c526:	4413      	add	r3, r2
 800c528:	121b      	asrs	r3, r3, #8
 800c52a:	b2db      	uxtb	r3, r3
 800c52c:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800c530:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c534:	2bff      	cmp	r3, #255	@ 0xff
 800c536:	d133      	bne.n	800c5a0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800c538:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c53a:	681a      	ldr	r2, [r3, #0]
 800c53c:	f107 0318 	add.w	r3, r7, #24
 800c540:	4611      	mov	r1, r2
 800c542:	4618      	mov	r0, r3
 800c544:	f7fc fdac 	bl	80090a0 <_ZN8touchgfx9colortypeC1Em>
 800c548:	69bb      	ldr	r3, [r7, #24]
 800c54a:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800c54c:	f107 0314 	add.w	r3, r7, #20
 800c550:	4618      	mov	r0, r3
 800c552:	f7ff fe72 	bl	800c23a <_ZNK8touchgfx9colortypecvmEv>
 800c556:	4603      	mov	r3, r0
 800c558:	0a1b      	lsrs	r3, r3, #8
 800c55a:	b29b      	uxth	r3, r3
 800c55c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c560:	f023 0307 	bic.w	r3, r3, #7
 800c564:	b29c      	uxth	r4, r3
 800c566:	f107 0314 	add.w	r3, r7, #20
 800c56a:	4618      	mov	r0, r3
 800c56c:	f7ff fe65 	bl	800c23a <_ZNK8touchgfx9colortypecvmEv>
 800c570:	4603      	mov	r3, r0
 800c572:	095b      	lsrs	r3, r3, #5
 800c574:	b29b      	uxth	r3, r3
 800c576:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c57a:	b29b      	uxth	r3, r3
 800c57c:	4323      	orrs	r3, r4
 800c57e:	b29c      	uxth	r4, r3
 800c580:	f107 0314 	add.w	r3, r7, #20
 800c584:	4618      	mov	r0, r3
 800c586:	f7ff fe58 	bl	800c23a <_ZNK8touchgfx9colortypecvmEv>
 800c58a:	4603      	mov	r3, r0
 800c58c:	08db      	lsrs	r3, r3, #3
 800c58e:	b29b      	uxth	r3, r3
 800c590:	f003 031f 	and.w	r3, r3, #31
 800c594:	b29b      	uxth	r3, r3
 800c596:	4323      	orrs	r3, r4
 800c598:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800c59a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c59c:	801a      	strh	r2, [r3, #0]
 800c59e:	e0a9      	b.n	800c6f4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800c5a0:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c5a4:	2b00      	cmp	r3, #0
 800c5a6:	f000 80a5 	beq.w	800c6f4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800c5aa:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c5ac:	681b      	ldr	r3, [r3, #0]
 800c5ae:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800c5b0:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c5b2:	0c1b      	lsrs	r3, r3, #16
 800c5b4:	b2d8      	uxtb	r0, r3
 800c5b6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c5b8:	0a1b      	lsrs	r3, r3, #8
 800c5ba:	b2d9      	uxtb	r1, r3
 800c5bc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c5be:	b2da      	uxtb	r2, r3
 800c5c0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c5c2:	881b      	ldrh	r3, [r3, #0]
 800c5c4:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800c5c8:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800c5cc:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800c5d0:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800c5d2:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800c5d6:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800c5da:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800c5de:	43db      	mvns	r3, r3
 800c5e0:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800c5e4:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c5e6:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800c5e8:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800c5ea:	0a1b      	lsrs	r3, r3, #8
 800c5ec:	b29b      	uxth	r3, r3
 800c5ee:	b2db      	uxtb	r3, r3
 800c5f0:	f023 0307 	bic.w	r3, r3, #7
 800c5f4:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800c5f8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800c5fc:	095b      	lsrs	r3, r3, #5
 800c5fe:	b2da      	uxtb	r2, r3
 800c600:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800c604:	4313      	orrs	r3, r2
 800c606:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800c608:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800c60c:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c60e:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800c610:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800c612:	08db      	lsrs	r3, r3, #3
 800c614:	b29b      	uxth	r3, r3
 800c616:	b2db      	uxtb	r3, r3
 800c618:	f023 0303 	bic.w	r3, r3, #3
 800c61c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800c620:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800c624:	099b      	lsrs	r3, r3, #6
 800c626:	b2da      	uxtb	r2, r3
 800c628:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800c62c:	4313      	orrs	r3, r2
 800c62e:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800c630:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800c634:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800c636:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800c638:	8c3b      	ldrh	r3, [r7, #32]
 800c63a:	b2db      	uxtb	r3, r3
 800c63c:	00db      	lsls	r3, r3, #3
 800c63e:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800c640:	7ffb      	ldrb	r3, [r7, #31]
 800c642:	095b      	lsrs	r3, r3, #5
 800c644:	b2da      	uxtb	r2, r3
 800c646:	7ffb      	ldrb	r3, [r7, #31]
 800c648:	4313      	orrs	r3, r2
 800c64a:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800c64c:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800c64e:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800c652:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800c656:	fb03 f202 	mul.w	r2, r3, r2
 800c65a:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800c65e:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800c662:	fb01 f303 	mul.w	r3, r1, r3
 800c666:	4413      	add	r3, r2
 800c668:	4a2d      	ldr	r2, [pc, #180]	@ (800c720 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c66a:	fb82 1203 	smull	r1, r2, r2, r3
 800c66e:	441a      	add	r2, r3
 800c670:	11d2      	asrs	r2, r2, #7
 800c672:	17db      	asrs	r3, r3, #31
 800c674:	1ad3      	subs	r3, r2, r3
 800c676:	021b      	lsls	r3, r3, #8
 800c678:	b21b      	sxth	r3, r3
 800c67a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800c67e:	f023 0307 	bic.w	r3, r3, #7
 800c682:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800c684:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800c688:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800c68c:	fb03 f101 	mul.w	r1, r3, r1
 800c690:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800c694:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800c698:	fb00 f303 	mul.w	r3, r0, r3
 800c69c:	440b      	add	r3, r1
 800c69e:	4920      	ldr	r1, [pc, #128]	@ (800c720 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c6a0:	fb81 0103 	smull	r0, r1, r1, r3
 800c6a4:	4419      	add	r1, r3
 800c6a6:	11c9      	asrs	r1, r1, #7
 800c6a8:	17db      	asrs	r3, r3, #31
 800c6aa:	1acb      	subs	r3, r1, r3
 800c6ac:	00db      	lsls	r3, r3, #3
 800c6ae:	b21b      	sxth	r3, r3
 800c6b0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c6b4:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800c6b6:	4313      	orrs	r3, r2
 800c6b8:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800c6ba:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800c6be:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800c6c2:	fb03 f101 	mul.w	r1, r3, r1
 800c6c6:	7fbb      	ldrb	r3, [r7, #30]
 800c6c8:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800c6cc:	fb00 f303 	mul.w	r3, r0, r3
 800c6d0:	440b      	add	r3, r1
 800c6d2:	4913      	ldr	r1, [pc, #76]	@ (800c720 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800c6d4:	fb81 0103 	smull	r0, r1, r1, r3
 800c6d8:	4419      	add	r1, r3
 800c6da:	11c9      	asrs	r1, r1, #7
 800c6dc:	17db      	asrs	r3, r3, #31
 800c6de:	1acb      	subs	r3, r1, r3
 800c6e0:	10db      	asrs	r3, r3, #3
 800c6e2:	b21b      	sxth	r3, r3
 800c6e4:	f003 031f 	and.w	r3, r3, #31
 800c6e8:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800c6ea:	4313      	orrs	r3, r2
 800c6ec:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800c6ee:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800c6f0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c6f2:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800c6f4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800c6f6:	3304      	adds	r3, #4
 800c6f8:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800c6fa:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800c6fc:	3302      	adds	r3, #2
 800c6fe:	647b      	str	r3, [r7, #68]	@ 0x44
 800c700:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800c702:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800c704:	429a      	cmp	r2, r3
 800c706:	bf34      	ite	cc
 800c708:	2301      	movcc	r3, #1
 800c70a:	2300      	movcs	r3, #0
 800c70c:	b2db      	uxtb	r3, r3
 800c70e:	2b00      	cmp	r3, #0
 800c710:	f47f aef6 	bne.w	800c500 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800c714:	bf00      	nop
 800c716:	bf00      	nop
 800c718:	374c      	adds	r7, #76	@ 0x4c
 800c71a:	46bd      	mov	sp, r7
 800c71c:	bd90      	pop	{r4, r7, pc}
 800c71e:	bf00      	nop
 800c720:	80808081 	.word	0x80808081

0800c724 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800c724:	b5b0      	push	{r4, r5, r7, lr}
 800c726:	b082      	sub	sp, #8
 800c728:	af00      	add	r7, sp, #0
 800c72a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800c72c:	687b      	ldr	r3, [r7, #4]
 800c72e:	4618      	mov	r0, r3
 800c730:	f000 fedb 	bl	800d4ea <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800c734:	687d      	ldr	r5, [r7, #4]
 800c736:	687b      	ldr	r3, [r7, #4]
 800c738:	681b      	ldr	r3, [r3, #0]
 800c73a:	3364      	adds	r3, #100	@ 0x64
 800c73c:	681c      	ldr	r4, [r3, #0]
 800c73e:	f003 ffed 	bl	801071c <_ZN8touchgfx11Application11getInstanceEv>
 800c742:	4603      	mov	r3, r0
 800c744:	4619      	mov	r1, r3
 800c746:	4628      	mov	r0, r5
 800c748:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800c74a:	687b      	ldr	r3, [r7, #4]
 800c74c:	681b      	ldr	r3, [r3, #0]
 800c74e:	3380      	adds	r3, #128	@ 0x80
 800c750:	681b      	ldr	r3, [r3, #0]
 800c752:	6878      	ldr	r0, [r7, #4]
 800c754:	4798      	blx	r3
    enableInterrupts();
 800c756:	687b      	ldr	r3, [r7, #4]
 800c758:	681b      	ldr	r3, [r3, #0]
 800c75a:	3378      	adds	r3, #120	@ 0x78
 800c75c:	681b      	ldr	r3, [r3, #0]
 800c75e:	6878      	ldr	r0, [r7, #4]
 800c760:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800c762:	687b      	ldr	r3, [r7, #4]
 800c764:	4906      	ldr	r1, [pc, #24]	@ (800c780 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800c766:	4618      	mov	r0, r3
 800c768:	f7ff fda6 	bl	800c2b8 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800c76c:	687b      	ldr	r3, [r7, #4]
 800c76e:	2102      	movs	r1, #2
 800c770:	4618      	mov	r0, r3
 800c772:	f7ff fdbb 	bl	800c2ec <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800c776:	bf00      	nop
 800c778:	3708      	adds	r7, #8
 800c77a:	46bd      	mov	sp, r7
 800c77c:	bdb0      	pop	{r4, r5, r7, pc}
 800c77e:	bf00      	nop
 800c780:	20000bc8 	.word	0x20000bc8

0800c784 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800c784:	b480      	push	{r7}
 800c786:	b083      	sub	sp, #12
 800c788:	af00      	add	r7, sp, #0
 800c78a:	6078      	str	r0, [r7, #4]
}
 800c78c:	bf00      	nop
 800c78e:	370c      	adds	r7, #12
 800c790:	46bd      	mov	sp, r7
 800c792:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c796:	4770      	bx	lr

0800c798 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800c798:	b480      	push	{r7}
 800c79a:	b083      	sub	sp, #12
 800c79c:	af00      	add	r7, sp, #0
 800c79e:	6078      	str	r0, [r7, #4]
}
 800c7a0:	bf00      	nop
 800c7a2:	370c      	adds	r7, #12
 800c7a4:	46bd      	mov	sp, r7
 800c7a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7aa:	4770      	bx	lr

0800c7ac <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800c7ac:	b480      	push	{r7}
 800c7ae:	b083      	sub	sp, #12
 800c7b0:	af00      	add	r7, sp, #0
 800c7b2:	6078      	str	r0, [r7, #4]
}
 800c7b4:	bf00      	nop
 800c7b6:	370c      	adds	r7, #12
 800c7b8:	46bd      	mov	sp, r7
 800c7ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7be:	4770      	bx	lr

0800c7c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800c7c0:	b480      	push	{r7}
 800c7c2:	b083      	sub	sp, #12
 800c7c4:	af00      	add	r7, sp, #0
 800c7c6:	6078      	str	r0, [r7, #4]
}
 800c7c8:	bf00      	nop
 800c7ca:	370c      	adds	r7, #12
 800c7cc:	46bd      	mov	sp, r7
 800c7ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7d2:	4770      	bx	lr

0800c7d4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800c7d4:	b580      	push	{r7, lr}
 800c7d6:	b082      	sub	sp, #8
 800c7d8:	af00      	add	r7, sp, #0
 800c7da:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800c7dc:	687b      	ldr	r3, [r7, #4]
 800c7de:	4618      	mov	r0, r3
 800c7e0:	f000 fe6a 	bl	800d4b8 <_ZN8touchgfx3HAL10beginFrameEv>
 800c7e4:	4603      	mov	r3, r0
}
 800c7e6:	4618      	mov	r0, r3
 800c7e8:	3708      	adds	r7, #8
 800c7ea:	46bd      	mov	sp, r7
 800c7ec:	bd80      	pop	{r7, pc}

0800c7ee <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800c7ee:	b580      	push	{r7, lr}
 800c7f0:	b082      	sub	sp, #8
 800c7f2:	af00      	add	r7, sp, #0
 800c7f4:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800c7f6:	bf00      	nop
 800c7f8:	f7f5 fe18 	bl	800242c <touchgfxDisplayDriverTransmitActive>
 800c7fc:	4603      	mov	r3, r0
 800c7fe:	2b00      	cmp	r3, #0
 800c800:	bf14      	ite	ne
 800c802:	2301      	movne	r3, #1
 800c804:	2300      	moveq	r3, #0
 800c806:	b2db      	uxtb	r3, r3
 800c808:	2b00      	cmp	r3, #0
 800c80a:	d1f5      	bne.n	800c7f8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800c80c:	687b      	ldr	r3, [r7, #4]
 800c80e:	4618      	mov	r0, r3
 800c810:	f000 fe5e 	bl	800d4d0 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800c814:	f7fe fed0 	bl	800b5b8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800c818:	bf00      	nop
 800c81a:	3708      	adds	r7, #8
 800c81c:	46bd      	mov	sp, r7
 800c81e:	bd80      	pop	{r7, pc}

0800c820 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800c820:	b480      	push	{r7}
 800c822:	b083      	sub	sp, #12
 800c824:	af00      	add	r7, sp, #0
 800c826:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800c828:	2300      	movs	r3, #0
}
 800c82a:	4618      	mov	r0, r3
 800c82c:	370c      	adds	r7, #12
 800c82e:	46bd      	mov	sp, r7
 800c830:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c834:	4770      	bx	lr

0800c836 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800c836:	b480      	push	{r7}
 800c838:	b083      	sub	sp, #12
 800c83a:	af00      	add	r7, sp, #0
 800c83c:	6078      	str	r0, [r7, #4]
 800c83e:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800c840:	bf00      	nop
 800c842:	370c      	adds	r7, #12
 800c844:	46bd      	mov	sp, r7
 800c846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c84a:	4770      	bx	lr

0800c84c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800c84c:	b580      	push	{r7, lr}
 800c84e:	b088      	sub	sp, #32
 800c850:	af02      	add	r7, sp, #8
 800c852:	6078      	str	r0, [r7, #4]
 800c854:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800c856:	687b      	ldr	r3, [r7, #4]
 800c858:	6839      	ldr	r1, [r7, #0]
 800c85a:	4618      	mov	r0, r3
 800c85c:	f000 fdf6 	bl	800d44c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800c860:	687b      	ldr	r3, [r7, #4]
 800c862:	699a      	ldr	r2, [r3, #24]
 800c864:	687b      	ldr	r3, [r7, #4]
 800c866:	699b      	ldr	r3, [r3, #24]
 800c868:	681b      	ldr	r3, [r3, #0]
 800c86a:	3304      	adds	r3, #4
 800c86c:	681b      	ldr	r3, [r3, #0]
 800c86e:	4610      	mov	r0, r2
 800c870:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800c872:	f7f5 fddb 	bl	800242c <touchgfxDisplayDriverTransmitActive>
 800c876:	4603      	mov	r3, r0
 800c878:	2b00      	cmp	r3, #0
 800c87a:	bf0c      	ite	eq
 800c87c:	2301      	moveq	r3, #1
 800c87e:	2300      	movne	r3, #0
 800c880:	b2db      	uxtb	r3, r3
 800c882:	2b00      	cmp	r3, #0
 800c884:	d021      	beq.n	800c8ca <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800c886:	f107 030c 	add.w	r3, r7, #12
 800c88a:	4618      	mov	r0, r3
 800c88c:	f7fc fc17 	bl	80090be <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800c890:	687b      	ldr	r3, [r7, #4]
 800c892:	699a      	ldr	r2, [r3, #24]
 800c894:	687b      	ldr	r3, [r7, #4]
 800c896:	699b      	ldr	r3, [r3, #24]
 800c898:	681b      	ldr	r3, [r3, #0]
 800c89a:	330c      	adds	r3, #12
 800c89c:	681b      	ldr	r3, [r3, #0]
 800c89e:	f107 010c 	add.w	r1, r7, #12
 800c8a2:	4610      	mov	r0, r2
 800c8a4:	4798      	blx	r3
 800c8a6:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800c8a8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800c8ac:	b299      	uxth	r1, r3
 800c8ae:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800c8b2:	b29a      	uxth	r2, r3
 800c8b4:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800c8b8:	b298      	uxth	r0, r3
 800c8ba:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800c8be:	b29b      	uxth	r3, r3
 800c8c0:	9300      	str	r3, [sp, #0]
 800c8c2:	4603      	mov	r3, r0
 800c8c4:	6978      	ldr	r0, [r7, #20]
 800c8c6:	f7f5 fdc3 	bl	8002450 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800c8ca:	bf00      	nop
 800c8cc:	3718      	adds	r7, #24
 800c8ce:	46bd      	mov	sp, r7
 800c8d0:	bd80      	pop	{r7, pc}

0800c8d2 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800c8d2:	b580      	push	{r7, lr}
 800c8d4:	b084      	sub	sp, #16
 800c8d6:	af00      	add	r7, sp, #0
 800c8d8:	60f8      	str	r0, [r7, #12]
 800c8da:	60b9      	str	r1, [r7, #8]
 800c8dc:	607a      	str	r2, [r7, #4]
 800c8de:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800c8e0:	68f8      	ldr	r0, [r7, #12]
 800c8e2:	683b      	ldr	r3, [r7, #0]
 800c8e4:	687a      	ldr	r2, [r7, #4]
 800c8e6:	68b9      	ldr	r1, [r7, #8]
 800c8e8:	f000 ff21 	bl	800d72e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800c8ec:	4603      	mov	r3, r0
}
 800c8ee:	4618      	mov	r0, r3
 800c8f0:	3710      	adds	r7, #16
 800c8f2:	46bd      	mov	sp, r7
 800c8f4:	bd80      	pop	{r7, pc}

0800c8f6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800c8f6:	b480      	push	{r7}
 800c8f8:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800c8fa:	bf00      	nop
 800c8fc:	46bd      	mov	sp, r7
 800c8fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c902:	4770      	bx	lr

0800c904 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800c904:	b480      	push	{r7}
 800c906:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800c908:	bf00      	nop
 800c90a:	46bd      	mov	sp, r7
 800c90c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c910:	4770      	bx	lr

0800c912 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800c912:	b580      	push	{r7, lr}
 800c914:	b086      	sub	sp, #24
 800c916:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800c918:	f7fb ff32 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 800c91c:	4603      	mov	r3, r0
 800c91e:	4618      	mov	r0, r3
 800c920:	f7ff fcd8 	bl	800c2d4 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800c924:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800c926:	68fb      	ldr	r3, [r7, #12]
 800c928:	681b      	ldr	r3, [r3, #0]
 800c92a:	3318      	adds	r3, #24
 800c92c:	681b      	ldr	r3, [r3, #0]
 800c92e:	68f8      	ldr	r0, [r7, #12]
 800c930:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800c932:	68fb      	ldr	r3, [r7, #12]
 800c934:	681b      	ldr	r3, [r3, #0]
 800c936:	3308      	adds	r3, #8
 800c938:	681b      	ldr	r3, [r3, #0]
 800c93a:	68f8      	ldr	r0, [r7, #12]
 800c93c:	4798      	blx	r3
 800c93e:	4603      	mov	r3, r0
 800c940:	2b00      	cmp	r3, #0
 800c942:	d01d      	beq.n	800c980 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800c944:	463b      	mov	r3, r7
 800c946:	4618      	mov	r0, r3
 800c948:	f7fc fbb9 	bl	80090be <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800c94c:	68fb      	ldr	r3, [r7, #12]
 800c94e:	681b      	ldr	r3, [r3, #0]
 800c950:	330c      	adds	r3, #12
 800c952:	681b      	ldr	r3, [r3, #0]
 800c954:	463a      	mov	r2, r7
 800c956:	4611      	mov	r1, r2
 800c958:	68f8      	ldr	r0, [r7, #12]
 800c95a:	4798      	blx	r3
 800c95c:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800c95e:	f9b7 3000 	ldrsh.w	r3, [r7]
 800c962:	b299      	uxth	r1, r3
 800c964:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800c968:	b29a      	uxth	r2, r3
 800c96a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800c96e:	b298      	uxth	r0, r3
 800c970:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800c974:	b29b      	uxth	r3, r3
 800c976:	9300      	str	r3, [sp, #0]
 800c978:	4603      	mov	r3, r0
 800c97a:	68b8      	ldr	r0, [r7, #8]
 800c97c:	f7f5 fd68 	bl	8002450 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800c980:	bf00      	nop
 800c982:	3710      	adds	r7, #16
 800c984:	46bd      	mov	sp, r7
 800c986:	bd80      	pop	{r7, pc}

0800c988 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800c988:	b580      	push	{r7, lr}
 800c98a:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800c98c:	f7ff ffc1 	bl	800c912 <_ZN8touchgfx16startNewTransferEv>
}
 800c990:	bf00      	nop
 800c992:	bd80      	pop	{r7, pc}

0800c994 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800c994:	b580      	push	{r7, lr}
 800c996:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800c998:	f7fb fef2 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 800c99c:	4603      	mov	r3, r0
 800c99e:	4618      	mov	r0, r3
 800c9a0:	f7ff fc78 	bl	800c294 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800c9a4:	f7fe fdfc 	bl	800b5a0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800c9a8:	bf00      	nop
 800c9aa:	bd80      	pop	{r7, pc}

0800c9ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800c9ac:	b480      	push	{r7}
 800c9ae:	b083      	sub	sp, #12
 800c9b0:	af00      	add	r7, sp, #0
 800c9b2:	6078      	str	r0, [r7, #4]
 800c9b4:	4a04      	ldr	r2, [pc, #16]	@ (800c9c8 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800c9b6:	687b      	ldr	r3, [r7, #4]
 800c9b8:	601a      	str	r2, [r3, #0]
 800c9ba:	687b      	ldr	r3, [r7, #4]
 800c9bc:	4618      	mov	r0, r3
 800c9be:	370c      	adds	r7, #12
 800c9c0:	46bd      	mov	sp, r7
 800c9c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9c6:	4770      	bx	lr
 800c9c8:	08024c7c 	.word	0x08024c7c

0800c9cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800c9cc:	b5b0      	push	{r4, r5, r7, lr}
 800c9ce:	b084      	sub	sp, #16
 800c9d0:	af00      	add	r7, sp, #0
 800c9d2:	6078      	str	r0, [r7, #4]
    {
 800c9d4:	687b      	ldr	r3, [r7, #4]
 800c9d6:	4618      	mov	r0, r3
 800c9d8:	f7ff ffe8 	bl	800c9ac <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800c9dc:	4a1a      	ldr	r2, [pc, #104]	@ (800ca48 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 800c9de:	687b      	ldr	r3, [r7, #4]
 800c9e0:	601a      	str	r2, [r3, #0]
 800c9e2:	687b      	ldr	r3, [r7, #4]
 800c9e4:	f503 5307 	add.w	r3, r3, #8640	@ 0x21c0
 800c9e8:	3308      	adds	r3, #8
 800c9ea:	2402      	movs	r4, #2
 800c9ec:	461d      	mov	r5, r3
 800c9ee:	e004      	b.n	800c9fa <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 800c9f0:	4628      	mov	r0, r5
 800c9f2:	f7fc fb64 	bl	80090be <_ZN8touchgfx4RectC1Ev>
 800c9f6:	3c01      	subs	r4, #1
 800c9f8:	3508      	adds	r5, #8
 800c9fa:	2c00      	cmp	r4, #0
 800c9fc:	daf8      	bge.n	800c9f0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800c9fe:	687b      	ldr	r3, [r7, #4]
 800ca00:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ca04:	461a      	mov	r2, r3
 800ca06:	f04f 33ff 	mov.w	r3, #4294967295
 800ca0a:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        drawingBlock = -1;
 800ca0e:	687b      	ldr	r3, [r7, #4]
 800ca10:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ca14:	461a      	mov	r2, r3
 800ca16:	f04f 33ff 	mov.w	r3, #4294967295
 800ca1a:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 800ca1e:	2300      	movs	r3, #0
 800ca20:	60fb      	str	r3, [r7, #12]
 800ca22:	e008      	b.n	800ca36 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800ca24:	687a      	ldr	r2, [r7, #4]
 800ca26:	68fb      	ldr	r3, [r7, #12]
 800ca28:	4413      	add	r3, r2
 800ca2a:	3304      	adds	r3, #4
 800ca2c:	2200      	movs	r2, #0
 800ca2e:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800ca30:	68fb      	ldr	r3, [r7, #12]
 800ca32:	3301      	adds	r3, #1
 800ca34:	60fb      	str	r3, [r7, #12]
 800ca36:	68fb      	ldr	r3, [r7, #12]
 800ca38:	2b02      	cmp	r3, #2
 800ca3a:	d9f3      	bls.n	800ca24 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 800ca3c:	687b      	ldr	r3, [r7, #4]
 800ca3e:	4618      	mov	r0, r3
 800ca40:	3710      	adds	r7, #16
 800ca42:	46bd      	mov	sp, r7
 800ca44:	bdb0      	pop	{r4, r5, r7, pc}
 800ca46:	bf00      	nop
 800ca48:	08024b78 	.word	0x08024b78

0800ca4c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800ca4c:	b580      	push	{r7, lr}
 800ca4e:	b082      	sub	sp, #8
 800ca50:	af00      	add	r7, sp, #0
 800ca52:	6078      	str	r0, [r7, #4]
 800ca54:	4a05      	ldr	r2, [pc, #20]	@ (800ca6c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 800ca56:	687b      	ldr	r3, [r7, #4]
 800ca58:	601a      	str	r2, [r3, #0]
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	4618      	mov	r0, r3
 800ca5e:	f7ff fbf9 	bl	800c254 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	4618      	mov	r0, r3
 800ca66:	3708      	adds	r7, #8
 800ca68:	46bd      	mov	sp, r7
 800ca6a:	bd80      	pop	{r7, pc}
 800ca6c:	08024b78 	.word	0x08024b78

0800ca70 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 800ca70:	b580      	push	{r7, lr}
 800ca72:	b082      	sub	sp, #8
 800ca74:	af00      	add	r7, sp, #0
 800ca76:	6078      	str	r0, [r7, #4]
 800ca78:	6878      	ldr	r0, [r7, #4]
 800ca7a:	f7ff ffe7 	bl	800ca4c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 800ca7e:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 800ca82:	6878      	ldr	r0, [r7, #4]
 800ca84:	f015 fba3 	bl	80221ce <_ZdlPvj>
 800ca88:	687b      	ldr	r3, [r7, #4]
 800ca8a:	4618      	mov	r0, r3
 800ca8c:	3708      	adds	r7, #8
 800ca8e:	46bd      	mov	sp, r7
 800ca90:	bd80      	pop	{r7, pc}
	...

0800ca94 <_Z41__static_initialization_and_destruction_0ii>:
 800ca94:	b580      	push	{r7, lr}
 800ca96:	b082      	sub	sp, #8
 800ca98:	af00      	add	r7, sp, #0
 800ca9a:	6078      	str	r0, [r7, #4]
 800ca9c:	6039      	str	r1, [r7, #0]
 800ca9e:	687b      	ldr	r3, [r7, #4]
 800caa0:	2b01      	cmp	r3, #1
 800caa2:	d107      	bne.n	800cab4 <_Z41__static_initialization_and_destruction_0ii+0x20>
 800caa4:	683b      	ldr	r3, [r7, #0]
 800caa6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800caaa:	4293      	cmp	r3, r2
 800caac:	d102      	bne.n	800cab4 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 800caae:	4809      	ldr	r0, [pc, #36]	@ (800cad4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800cab0:	f7ff ff8c 	bl	800c9cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 800cab4:	687b      	ldr	r3, [r7, #4]
 800cab6:	2b00      	cmp	r3, #0
 800cab8:	d107      	bne.n	800caca <_Z41__static_initialization_and_destruction_0ii+0x36>
 800caba:	683b      	ldr	r3, [r7, #0]
 800cabc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800cac0:	4293      	cmp	r3, r2
 800cac2:	d102      	bne.n	800caca <_Z41__static_initialization_and_destruction_0ii+0x36>
 800cac4:	4803      	ldr	r0, [pc, #12]	@ (800cad4 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800cac6:	f7ff ffc1 	bl	800ca4c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 800caca:	bf00      	nop
 800cacc:	3708      	adds	r7, #8
 800cace:	46bd      	mov	sp, r7
 800cad0:	bd80      	pop	{r7, pc}
 800cad2:	bf00      	nop
 800cad4:	20000bc8 	.word	0x20000bc8

0800cad8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800cad8:	b580      	push	{r7, lr}
 800cada:	b086      	sub	sp, #24
 800cadc:	af00      	add	r7, sp, #0
 800cade:	60f8      	str	r0, [r7, #12]
 800cae0:	4608      	mov	r0, r1
 800cae2:	4611      	mov	r1, r2
 800cae4:	461a      	mov	r2, r3
 800cae6:	4603      	mov	r3, r0
 800cae8:	817b      	strh	r3, [r7, #10]
 800caea:	460b      	mov	r3, r1
 800caec:	813b      	strh	r3, [r7, #8]
 800caee:	4613      	mov	r3, r2
 800caf0:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800caf2:	68fb      	ldr	r3, [r7, #12]
 800caf4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800caf8:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cafc:	3301      	adds	r3, #1
 800cafe:	68fa      	ldr	r2, [r7, #12]
 800cb00:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800cb04:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        if (drawingBlock == blocks)
 800cb08:	68fb      	ldr	r3, [r7, #12]
 800cb0a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb0e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cb12:	2b03      	cmp	r3, #3
 800cb14:	d109      	bne.n	800cb2a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800cb16:	68fb      	ldr	r3, [r7, #12]
 800cb18:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb1c:	461a      	mov	r2, r3
 800cb1e:	2300      	movs	r3, #0
 800cb20:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 800cb24:	e001      	b.n	800cb2a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800cb26:	f7ff fee6 	bl	800c8f6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800cb2a:	68fb      	ldr	r3, [r7, #12]
 800cb2c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb30:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cb34:	68fa      	ldr	r2, [r7, #12]
 800cb36:	4413      	add	r3, r2
 800cb38:	791b      	ldrb	r3, [r3, #4]
 800cb3a:	b2db      	uxtb	r3, r3
 800cb3c:	2b00      	cmp	r3, #0
 800cb3e:	bf14      	ite	ne
 800cb40:	2301      	movne	r3, #1
 800cb42:	2300      	moveq	r3, #0
 800cb44:	b2db      	uxtb	r3, r3
 800cb46:	2b00      	cmp	r3, #0
 800cb48:	d1ed      	bne.n	800cb26 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800cb4a:	68fb      	ldr	r3, [r7, #12]
 800cb4c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb50:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cb54:	68fa      	ldr	r2, [r7, #12]
 800cb56:	4413      	add	r3, r2
 800cb58:	791b      	ldrb	r3, [r3, #4]
 800cb5a:	b2db      	uxtb	r3, r3
 800cb5c:	2b00      	cmp	r3, #0
 800cb5e:	d005      	beq.n	800cb6c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800cb60:	4b38      	ldr	r3, [pc, #224]	@ (800cc44 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800cb62:	4a39      	ldr	r2, [pc, #228]	@ (800cc48 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800cb64:	21aa      	movs	r1, #170	@ 0xaa
 800cb66:	4839      	ldr	r0, [pc, #228]	@ (800cc4c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800cb68:	f015 fbde 	bl	8022328 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800cb6c:	68fb      	ldr	r3, [r7, #12]
 800cb6e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb72:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cb76:	68fa      	ldr	r2, [r7, #12]
 800cb78:	4413      	add	r3, r2
 800cb7a:	2201      	movs	r2, #1
 800cb7c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800cb7e:	88fb      	ldrh	r3, [r7, #6]
 800cb80:	005b      	lsls	r3, r3, #1
 800cb82:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800cb84:	697b      	ldr	r3, [r7, #20]
 800cb86:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800cb8a:	fbb2 f3f3 	udiv	r3, r2, r3
 800cb8e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800cb90:	68fb      	ldr	r3, [r7, #12]
 800cb92:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cb96:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cb9a:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800cb9e:	fb02 f303 	mul.w	r3, r2, r3
 800cba2:	3308      	adds	r3, #8
 800cba4:	68fa      	ldr	r2, [r7, #12]
 800cba6:	441a      	add	r2, r3
 800cba8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800cbaa:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800cbac:	68fb      	ldr	r3, [r7, #12]
 800cbae:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cbb2:	f8d3 21e4 	ldr.w	r2, [r3, #484]	@ 0x1e4
 800cbb6:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800cbba:	68fb      	ldr	r3, [r7, #12]
 800cbbc:	f202 4239 	addw	r2, r2, #1081	@ 0x439
 800cbc0:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800cbc4:	68fb      	ldr	r3, [r7, #12]
 800cbc6:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cbca:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cbce:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800cbd2:	68fa      	ldr	r2, [r7, #12]
 800cbd4:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cbd8:	00db      	lsls	r3, r3, #3
 800cbda:	4413      	add	r3, r2
 800cbdc:	460a      	mov	r2, r1
 800cbde:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800cbe0:	68fb      	ldr	r3, [r7, #12]
 800cbe2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cbe6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cbea:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800cbee:	68fa      	ldr	r2, [r7, #12]
 800cbf0:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cbf4:	00db      	lsls	r3, r3, #3
 800cbf6:	4413      	add	r3, r2
 800cbf8:	460a      	mov	r2, r1
 800cbfa:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800cbfc:	8c3a      	ldrh	r2, [r7, #32]
 800cbfe:	693b      	ldr	r3, [r7, #16]
 800cc00:	429a      	cmp	r2, r3
 800cc02:	bfa8      	it	ge
 800cc04:	461a      	movge	r2, r3
 800cc06:	68fb      	ldr	r3, [r7, #12]
 800cc08:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc0c:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cc10:	b211      	sxth	r1, r2
 800cc12:	68fa      	ldr	r2, [r7, #12]
 800cc14:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cc18:	00db      	lsls	r3, r3, #3
 800cc1a:	4413      	add	r3, r2
 800cc1c:	460a      	mov	r2, r1
 800cc1e:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800cc20:	68fb      	ldr	r3, [r7, #12]
 800cc22:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc26:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cc2a:	68fa      	ldr	r2, [r7, #12]
 800cc2c:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cc30:	00db      	lsls	r3, r3, #3
 800cc32:	4413      	add	r3, r2
 800cc34:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800cc38:	b29b      	uxth	r3, r3
    }
 800cc3a:	4618      	mov	r0, r3
 800cc3c:	3718      	adds	r7, #24
 800cc3e:	46bd      	mov	sp, r7
 800cc40:	bd80      	pop	{r7, pc}
 800cc42:	bf00      	nop
 800cc44:	08023ddc 	.word	0x08023ddc
 800cc48:	08023dfc 	.word	0x08023dfc
 800cc4c:	08023f30 	.word	0x08023f30

0800cc50 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800cc50:	b580      	push	{r7, lr}
 800cc52:	b082      	sub	sp, #8
 800cc54:	af00      	add	r7, sp, #0
 800cc56:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800cc58:	687b      	ldr	r3, [r7, #4]
 800cc5a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc5e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cc62:	687a      	ldr	r2, [r7, #4]
 800cc64:	4413      	add	r3, r2
 800cc66:	791b      	ldrb	r3, [r3, #4]
 800cc68:	b2db      	uxtb	r3, r3
 800cc6a:	2b01      	cmp	r3, #1
 800cc6c:	d005      	beq.n	800cc7a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800cc6e:	4b0a      	ldr	r3, [pc, #40]	@ (800cc98 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800cc70:	4a0a      	ldr	r2, [pc, #40]	@ (800cc9c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800cc72:	21b9      	movs	r1, #185	@ 0xb9
 800cc74:	480a      	ldr	r0, [pc, #40]	@ (800cca0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800cc76:	f015 fb57 	bl	8022328 <__assert_func>
        state[drawingBlock] = DRAWN;
 800cc7a:	687b      	ldr	r3, [r7, #4]
 800cc7c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cc80:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800cc84:	687a      	ldr	r2, [r7, #4]
 800cc86:	4413      	add	r3, r2
 800cc88:	2202      	movs	r2, #2
 800cc8a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800cc8c:	f7ff fe3a 	bl	800c904 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800cc90:	bf00      	nop
 800cc92:	3708      	adds	r7, #8
 800cc94:	46bd      	mov	sp, r7
 800cc96:	bd80      	pop	{r7, pc}
 800cc98:	08023f84 	.word	0x08023f84
 800cc9c:	08023fa8 	.word	0x08023fa8
 800cca0:	08023f30 	.word	0x08023f30

0800cca4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800cca4:	b480      	push	{r7}
 800cca6:	b085      	sub	sp, #20
 800cca8:	af00      	add	r7, sp, #0
 800ccaa:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800ccac:	2300      	movs	r3, #0
 800ccae:	60fb      	str	r3, [r7, #12]
 800ccb0:	e011      	b.n	800ccd6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800ccb2:	687a      	ldr	r2, [r7, #4]
 800ccb4:	68fb      	ldr	r3, [r7, #12]
 800ccb6:	4413      	add	r3, r2
 800ccb8:	3304      	adds	r3, #4
 800ccba:	781b      	ldrb	r3, [r3, #0]
 800ccbc:	b2db      	uxtb	r3, r3
 800ccbe:	2b02      	cmp	r3, #2
 800ccc0:	bf0c      	ite	eq
 800ccc2:	2301      	moveq	r3, #1
 800ccc4:	2300      	movne	r3, #0
 800ccc6:	b2db      	uxtb	r3, r3
 800ccc8:	2b00      	cmp	r3, #0
 800ccca:	d001      	beq.n	800ccd0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800cccc:	2301      	movs	r3, #1
 800ccce:	e006      	b.n	800ccde <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800ccd0:	68fb      	ldr	r3, [r7, #12]
 800ccd2:	3301      	adds	r3, #1
 800ccd4:	60fb      	str	r3, [r7, #12]
 800ccd6:	68fb      	ldr	r3, [r7, #12]
 800ccd8:	2b02      	cmp	r3, #2
 800ccda:	d9ea      	bls.n	800ccb2 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800ccdc:	2300      	movs	r3, #0
    }
 800ccde:	4618      	mov	r0, r3
 800cce0:	3714      	adds	r7, #20
 800cce2:	46bd      	mov	sp, r7
 800cce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cce8:	4770      	bx	lr
	...

0800ccec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800ccec:	b580      	push	{r7, lr}
 800ccee:	b082      	sub	sp, #8
 800ccf0:	af00      	add	r7, sp, #0
 800ccf2:	6078      	str	r0, [r7, #4]
 800ccf4:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800ccf6:	687b      	ldr	r3, [r7, #4]
 800ccf8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ccfc:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cd00:	3301      	adds	r3, #1
 800cd02:	687a      	ldr	r2, [r7, #4]
 800cd04:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800cd08:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        if (sendingBlock == blocks)
 800cd0c:	687b      	ldr	r3, [r7, #4]
 800cd0e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd12:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cd16:	2b03      	cmp	r3, #3
 800cd18:	d106      	bne.n	800cd28 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800cd1a:	687b      	ldr	r3, [r7, #4]
 800cd1c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd20:	461a      	mov	r2, r3
 800cd22:	2300      	movs	r3, #0
 800cd24:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 800cd28:	687b      	ldr	r3, [r7, #4]
 800cd2a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd2e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cd32:	687a      	ldr	r2, [r7, #4]
 800cd34:	4413      	add	r3, r2
 800cd36:	791b      	ldrb	r3, [r3, #4]
 800cd38:	b2db      	uxtb	r3, r3
 800cd3a:	2b02      	cmp	r3, #2
 800cd3c:	d005      	beq.n	800cd4a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800cd3e:	4b16      	ldr	r3, [pc, #88]	@ (800cd98 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800cd40:	4a16      	ldr	r2, [pc, #88]	@ (800cd9c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800cd42:	21dd      	movs	r1, #221	@ 0xdd
 800cd44:	4816      	ldr	r0, [pc, #88]	@ (800cda0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800cd46:	f015 faef 	bl	8022328 <__assert_func>
        rect = blockRect[sendingBlock];
 800cd4a:	687b      	ldr	r3, [r7, #4]
 800cd4c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd50:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cd54:	683a      	ldr	r2, [r7, #0]
 800cd56:	6879      	ldr	r1, [r7, #4]
 800cd58:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cd5c:	00db      	lsls	r3, r3, #3
 800cd5e:	440b      	add	r3, r1
 800cd60:	cb03      	ldmia	r3!, {r0, r1}
 800cd62:	6010      	str	r0, [r2, #0]
 800cd64:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd6c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cd70:	687a      	ldr	r2, [r7, #4]
 800cd72:	4413      	add	r3, r2
 800cd74:	2203      	movs	r2, #3
 800cd76:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800cd78:	687b      	ldr	r3, [r7, #4]
 800cd7a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cd7e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cd82:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800cd86:	fb02 f303 	mul.w	r3, r2, r3
 800cd8a:	3308      	adds	r3, #8
 800cd8c:	687a      	ldr	r2, [r7, #4]
 800cd8e:	4413      	add	r3, r2
    }
 800cd90:	4618      	mov	r0, r3
 800cd92:	3708      	adds	r7, #8
 800cd94:	46bd      	mov	sp, r7
 800cd96:	bd80      	pop	{r7, pc}
 800cd98:	0802407c 	.word	0x0802407c
 800cd9c:	0802409c 	.word	0x0802409c
 800cda0:	08023f30 	.word	0x08023f30

0800cda4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800cda4:	b580      	push	{r7, lr}
 800cda6:	b084      	sub	sp, #16
 800cda8:	af00      	add	r7, sp, #0
 800cdaa:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800cdac:	687b      	ldr	r3, [r7, #4]
 800cdae:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800cdb2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800cdb6:	3301      	adds	r3, #1
 800cdb8:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800cdba:	68fb      	ldr	r3, [r7, #12]
 800cdbc:	2b03      	cmp	r3, #3
 800cdbe:	d101      	bne.n	800cdc4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800cdc0:	2300      	movs	r3, #0
 800cdc2:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800cdc4:	687a      	ldr	r2, [r7, #4]
 800cdc6:	68fb      	ldr	r3, [r7, #12]
 800cdc8:	4413      	add	r3, r2
 800cdca:	3304      	adds	r3, #4
 800cdcc:	781b      	ldrb	r3, [r3, #0]
 800cdce:	b2db      	uxtb	r3, r3
 800cdd0:	2b02      	cmp	r3, #2
 800cdd2:	d005      	beq.n	800cde0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800cdd4:	4b07      	ldr	r3, [pc, #28]	@ (800cdf4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800cdd6:	4a08      	ldr	r2, [pc, #32]	@ (800cdf8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800cdd8:	21ea      	movs	r1, #234	@ 0xea
 800cdda:	4808      	ldr	r0, [pc, #32]	@ (800cdfc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800cddc:	f015 faa4 	bl	8022328 <__assert_func>
        return blockRect[nextSendingBlock];
 800cde0:	68fb      	ldr	r3, [r7, #12]
 800cde2:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800cde6:	00db      	lsls	r3, r3, #3
 800cde8:	687a      	ldr	r2, [r7, #4]
 800cdea:	4413      	add	r3, r2
    }
 800cdec:	4618      	mov	r0, r3
 800cdee:	3710      	adds	r7, #16
 800cdf0:	46bd      	mov	sp, r7
 800cdf2:	bd80      	pop	{r7, pc}
 800cdf4:	0802419c 	.word	0x0802419c
 800cdf8:	080241c0 	.word	0x080241c0
 800cdfc:	08023f30 	.word	0x08023f30

0800ce00 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800ce00:	b480      	push	{r7}
 800ce02:	b085      	sub	sp, #20
 800ce04:	af00      	add	r7, sp, #0
 800ce06:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800ce08:	687b      	ldr	r3, [r7, #4]
 800ce0a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ce0e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800ce12:	3301      	adds	r3, #1
 800ce14:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800ce16:	68fb      	ldr	r3, [r7, #12]
 800ce18:	2b03      	cmp	r3, #3
 800ce1a:	d101      	bne.n	800ce20 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800ce1c:	2300      	movs	r3, #0
 800ce1e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800ce20:	687a      	ldr	r2, [r7, #4]
 800ce22:	68fb      	ldr	r3, [r7, #12]
 800ce24:	4413      	add	r3, r2
 800ce26:	3304      	adds	r3, #4
 800ce28:	781b      	ldrb	r3, [r3, #0]
 800ce2a:	b2db      	uxtb	r3, r3
 800ce2c:	2b00      	cmp	r3, #0
 800ce2e:	bf0c      	ite	eq
 800ce30:	2301      	moveq	r3, #1
 800ce32:	2300      	movne	r3, #0
 800ce34:	b2db      	uxtb	r3, r3
    }
 800ce36:	4618      	mov	r0, r3
 800ce38:	3714      	adds	r7, #20
 800ce3a:	46bd      	mov	sp, r7
 800ce3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce40:	4770      	bx	lr
	...

0800ce44 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800ce44:	b580      	push	{r7, lr}
 800ce46:	b082      	sub	sp, #8
 800ce48:	af00      	add	r7, sp, #0
 800ce4a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800ce4c:	687b      	ldr	r3, [r7, #4]
 800ce4e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ce52:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800ce56:	687a      	ldr	r2, [r7, #4]
 800ce58:	4413      	add	r3, r2
 800ce5a:	791b      	ldrb	r3, [r3, #4]
 800ce5c:	b2db      	uxtb	r3, r3
 800ce5e:	2b03      	cmp	r3, #3
 800ce60:	d005      	beq.n	800ce6e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800ce62:	4b09      	ldr	r3, [pc, #36]	@ (800ce88 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800ce64:	4a09      	ldr	r2, [pc, #36]	@ (800ce8c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800ce66:	21ff      	movs	r1, #255	@ 0xff
 800ce68:	4809      	ldr	r0, [pc, #36]	@ (800ce90 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800ce6a:	f015 fa5d 	bl	8022328 <__assert_func>
        state[sendingBlock] = EMPTY;
 800ce6e:	687b      	ldr	r3, [r7, #4]
 800ce70:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800ce74:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800ce78:	687a      	ldr	r2, [r7, #4]
 800ce7a:	4413      	add	r3, r2
 800ce7c:	2200      	movs	r2, #0
 800ce7e:	711a      	strb	r2, [r3, #4]
    }
 800ce80:	bf00      	nop
 800ce82:	3708      	adds	r7, #8
 800ce84:	46bd      	mov	sp, r7
 800ce86:	bd80      	pop	{r7, pc}
 800ce88:	080242a0 	.word	0x080242a0
 800ce8c:	080242c0 	.word	0x080242c0
 800ce90:	08023f30 	.word	0x08023f30

0800ce94 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800ce94:	b580      	push	{r7, lr}
 800ce96:	af00      	add	r7, sp, #0
 800ce98:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ce9c:	2001      	movs	r0, #1
 800ce9e:	f7ff fdf9 	bl	800ca94 <_Z41__static_initialization_and_destruction_0ii>
 800cea2:	bd80      	pop	{r7, pc}

0800cea4 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800cea4:	b580      	push	{r7, lr}
 800cea6:	af00      	add	r7, sp, #0
 800cea8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ceac:	2000      	movs	r0, #0
 800ceae:	f7ff fdf1 	bl	800ca94 <_Z41__static_initialization_and_destruction_0ii>
 800ceb2:	bd80      	pop	{r7, pc}

0800ceb4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800ceb4:	8880      	ldrh	r0, [r0, #4]
 800ceb6:	4770      	bx	lr

0800ceb8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800ceb8:	b570      	push	{r4, r5, r6, lr}
 800ceba:	6803      	ldr	r3, [r0, #0]
 800cebc:	4605      	mov	r5, r0
 800cebe:	460c      	mov	r4, r1
 800cec0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cec2:	2100      	movs	r1, #0
 800cec4:	4798      	blx	r3
 800cec6:	682b      	ldr	r3, [r5, #0]
 800cec8:	4606      	mov	r6, r0
 800ceca:	6a1b      	ldr	r3, [r3, #32]
 800cecc:	4628      	mov	r0, r5
 800cece:	4798      	blx	r3
 800ced0:	1ba4      	subs	r4, r4, r6
 800ced2:	b2a4      	uxth	r4, r4
 800ced4:	fbb4 f0f0 	udiv	r0, r4, r0
 800ced8:	bd70      	pop	{r4, r5, r6, pc}

0800ceda <_ZN8touchgfx17AbstractPartition5clearEv>:
 800ceda:	2300      	movs	r3, #0
 800cedc:	8083      	strh	r3, [r0, #4]
 800cede:	4770      	bx	lr

0800cee0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800cee0:	b510      	push	{r4, lr}
 800cee2:	6803      	ldr	r3, [r0, #0]
 800cee4:	8881      	ldrh	r1, [r0, #4]
 800cee6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cee8:	4604      	mov	r4, r0
 800ceea:	4798      	blx	r3
 800ceec:	88a3      	ldrh	r3, [r4, #4]
 800ceee:	3301      	adds	r3, #1
 800cef0:	80a3      	strh	r3, [r4, #4]
 800cef2:	bd10      	pop	{r4, pc}

0800cef4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800cef4:	6803      	ldr	r3, [r0, #0]
 800cef6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800cef8:	4718      	bx	r3

0800cefa <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800cefa:	4770      	bx	lr

0800cefc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800cefc:	4a02      	ldr	r2, [pc, #8]	@ (800cf08 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800cefe:	6002      	str	r2, [r0, #0]
 800cf00:	2200      	movs	r2, #0
 800cf02:	8082      	strh	r2, [r0, #4]
 800cf04:	4770      	bx	lr
 800cf06:	bf00      	nop
 800cf08:	08024ca8 	.word	0x08024ca8

0800cf0c <_ZN8touchgfx9Container13getFirstChildEv>:
 800cf0c:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800cf0e:	4770      	bx	lr

0800cf10 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800cf10:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cf12:	2000      	movs	r0, #0
 800cf14:	b12b      	cbz	r3, 800cf22 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800cf16:	b920      	cbnz	r0, 800cf22 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800cf18:	1a5a      	subs	r2, r3, r1
 800cf1a:	4250      	negs	r0, r2
 800cf1c:	4150      	adcs	r0, r2
 800cf1e:	699b      	ldr	r3, [r3, #24]
 800cf20:	e7f8      	b.n	800cf14 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800cf22:	4770      	bx	lr

0800cf24 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800cf24:	2300      	movs	r3, #0
 800cf26:	6148      	str	r0, [r1, #20]
 800cf28:	618b      	str	r3, [r1, #24]
 800cf2a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cf2c:	b913      	cbnz	r3, 800cf34 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800cf2e:	6281      	str	r1, [r0, #40]	@ 0x28
 800cf30:	4770      	bx	lr
 800cf32:	4613      	mov	r3, r2
 800cf34:	699a      	ldr	r2, [r3, #24]
 800cf36:	2a00      	cmp	r2, #0
 800cf38:	d1fb      	bne.n	800cf32 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800cf3a:	6199      	str	r1, [r3, #24]
 800cf3c:	4770      	bx	lr

0800cf3e <_ZN8touchgfx9Container9removeAllEv>:
 800cf3e:	2200      	movs	r2, #0
 800cf40:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cf42:	b123      	cbz	r3, 800cf4e <_ZN8touchgfx9Container9removeAllEv+0x10>
 800cf44:	6999      	ldr	r1, [r3, #24]
 800cf46:	6281      	str	r1, [r0, #40]	@ 0x28
 800cf48:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800cf4c:	e7f8      	b.n	800cf40 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800cf4e:	4770      	bx	lr

0800cf50 <_ZN8touchgfx9Container6unlinkEv>:
 800cf50:	2300      	movs	r3, #0
 800cf52:	6283      	str	r3, [r0, #40]	@ 0x28
 800cf54:	4770      	bx	lr

0800cf56 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800cf56:	2200      	movs	r2, #0
 800cf58:	8002      	strh	r2, [r0, #0]
 800cf5a:	8042      	strh	r2, [r0, #2]
 800cf5c:	8082      	strh	r2, [r0, #4]
 800cf5e:	80c2      	strh	r2, [r0, #6]
 800cf60:	4770      	bx	lr

0800cf62 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800cf62:	b570      	push	{r4, r5, r6, lr}
 800cf64:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800cf66:	460d      	mov	r5, r1
 800cf68:	4616      	mov	r6, r2
 800cf6a:	b13c      	cbz	r4, 800cf7c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800cf6c:	6823      	ldr	r3, [r4, #0]
 800cf6e:	4620      	mov	r0, r4
 800cf70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800cf72:	4632      	mov	r2, r6
 800cf74:	4629      	mov	r1, r5
 800cf76:	4798      	blx	r3
 800cf78:	69a4      	ldr	r4, [r4, #24]
 800cf7a:	e7f6      	b.n	800cf6a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800cf7c:	bd70      	pop	{r4, r5, r6, pc}

0800cf7e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800cf7e:	b538      	push	{r3, r4, r5, lr}
 800cf80:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800cf82:	460d      	mov	r5, r1
 800cf84:	b134      	cbz	r4, 800cf94 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800cf86:	682b      	ldr	r3, [r5, #0]
 800cf88:	4621      	mov	r1, r4
 800cf8a:	689b      	ldr	r3, [r3, #8]
 800cf8c:	4628      	mov	r0, r5
 800cf8e:	4798      	blx	r3
 800cf90:	69a4      	ldr	r4, [r4, #24]
 800cf92:	e7f7      	b.n	800cf84 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800cf94:	bd38      	pop	{r3, r4, r5, pc}

0800cf96 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800cf96:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cf98:	b19b      	cbz	r3, 800cfc2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800cf9a:	428b      	cmp	r3, r1
 800cf9c:	d109      	bne.n	800cfb2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800cf9e:	699a      	ldr	r2, [r3, #24]
 800cfa0:	2100      	movs	r1, #0
 800cfa2:	6159      	str	r1, [r3, #20]
 800cfa4:	6282      	str	r2, [r0, #40]	@ 0x28
 800cfa6:	b902      	cbnz	r2, 800cfaa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800cfa8:	4770      	bx	lr
 800cfaa:	6199      	str	r1, [r3, #24]
 800cfac:	4770      	bx	lr
 800cfae:	4613      	mov	r3, r2
 800cfb0:	b13a      	cbz	r2, 800cfc2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800cfb2:	699a      	ldr	r2, [r3, #24]
 800cfb4:	428a      	cmp	r2, r1
 800cfb6:	d1fa      	bne.n	800cfae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800cfb8:	698a      	ldr	r2, [r1, #24]
 800cfba:	619a      	str	r2, [r3, #24]
 800cfbc:	2300      	movs	r3, #0
 800cfbe:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800cfc2:	4770      	bx	lr

0800cfc4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800cfc4:	b410      	push	{r4}
 800cfc6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800cfc8:	4604      	mov	r4, r0
 800cfca:	b92b      	cbnz	r3, 800cfd8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800cfcc:	6803      	ldr	r3, [r0, #0]
 800cfce:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cfd2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800cfd4:	4611      	mov	r1, r2
 800cfd6:	4718      	bx	r3
 800cfd8:	b941      	cbnz	r1, 800cfec <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800cfda:	6193      	str	r3, [r2, #24]
 800cfdc:	6282      	str	r2, [r0, #40]	@ 0x28
 800cfde:	6154      	str	r4, [r2, #20]
 800cfe0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800cfe4:	4770      	bx	lr
 800cfe6:	4603      	mov	r3, r0
 800cfe8:	2800      	cmp	r0, #0
 800cfea:	d0f9      	beq.n	800cfe0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800cfec:	4299      	cmp	r1, r3
 800cfee:	6998      	ldr	r0, [r3, #24]
 800cff0:	d1f9      	bne.n	800cfe6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800cff2:	6190      	str	r0, [r2, #24]
 800cff4:	618a      	str	r2, [r1, #24]
 800cff6:	e7f2      	b.n	800cfde <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800cff8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800cff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cffc:	461f      	mov	r7, r3
 800cffe:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800d002:	460d      	mov	r5, r1
 800d004:	4616      	mov	r6, r2
 800d006:	b103      	cbz	r3, 800d00a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800d008:	6038      	str	r0, [r7, #0]
 800d00a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d00c:	b314      	cbz	r4, 800d054 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800d00e:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d012:	b1eb      	cbz	r3, 800d050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d014:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800d018:	428d      	cmp	r5, r1
 800d01a:	db19      	blt.n	800d050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d01c:	8923      	ldrh	r3, [r4, #8]
 800d01e:	b289      	uxth	r1, r1
 800d020:	440b      	add	r3, r1
 800d022:	b21b      	sxth	r3, r3
 800d024:	429d      	cmp	r5, r3
 800d026:	da13      	bge.n	800d050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d028:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800d02c:	4296      	cmp	r6, r2
 800d02e:	db0f      	blt.n	800d050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d030:	8963      	ldrh	r3, [r4, #10]
 800d032:	b292      	uxth	r2, r2
 800d034:	4413      	add	r3, r2
 800d036:	b21b      	sxth	r3, r3
 800d038:	429e      	cmp	r6, r3
 800d03a:	da09      	bge.n	800d050 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800d03c:	6823      	ldr	r3, [r4, #0]
 800d03e:	1ab2      	subs	r2, r6, r2
 800d040:	1a69      	subs	r1, r5, r1
 800d042:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800d046:	b212      	sxth	r2, r2
 800d048:	463b      	mov	r3, r7
 800d04a:	b209      	sxth	r1, r1
 800d04c:	4620      	mov	r0, r4
 800d04e:	47c0      	blx	r8
 800d050:	69a4      	ldr	r4, [r4, #24]
 800d052:	e7db      	b.n	800d00c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800d054:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d058 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800d058:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d05c:	4c6e      	ldr	r4, [pc, #440]	@ (800d218 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800d05e:	b0a1      	sub	sp, #132	@ 0x84
 800d060:	6824      	ldr	r4, [r4, #0]
 800d062:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800d064:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800d068:	9303      	str	r3, [sp, #12]
 800d06a:	2400      	movs	r4, #0
 800d06c:	802c      	strh	r4, [r5, #0]
 800d06e:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800d070:	802c      	strh	r4, [r5, #0]
 800d072:	601c      	str	r4, [r3, #0]
 800d074:	4606      	mov	r6, r0
 800d076:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800d07a:	f7ff ffbd 	bl	800cff8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d07e:	f1b9 0f03 	cmp.w	r9, #3
 800d082:	f340 80c2 	ble.w	800d20a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800d086:	4631      	mov	r1, r6
 800d088:	a80c      	add	r0, sp, #48	@ 0x30
 800d08a:	f004 fc59 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d08e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800d092:	9306      	str	r3, [sp, #24]
 800d094:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800d098:	9307      	str	r3, [sp, #28]
 800d09a:	9b03      	ldr	r3, [sp, #12]
 800d09c:	f8d3 a000 	ldr.w	sl, [r3]
 800d0a0:	f1ba 0f00 	cmp.w	sl, #0
 800d0a4:	f000 80b4 	beq.w	800d210 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800d0a8:	4651      	mov	r1, sl
 800d0aa:	a810      	add	r0, sp, #64	@ 0x40
 800d0ac:	f004 fc48 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d0b0:	9b01      	ldr	r3, [sp, #4]
 800d0b2:	9a06      	ldr	r2, [sp, #24]
 800d0b4:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800d0b8:	189d      	adds	r5, r3, r2
 800d0ba:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800d0be:	9a07      	ldr	r2, [sp, #28]
 800d0c0:	2002      	movs	r0, #2
 800d0c2:	fb91 f1f0 	sdiv	r1, r1, r0
 800d0c6:	4419      	add	r1, r3
 800d0c8:	1a6d      	subs	r5, r5, r1
 800d0ca:	9b02      	ldr	r3, [sp, #8]
 800d0cc:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800d0d0:	4413      	add	r3, r2
 800d0d2:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800d0d6:	fb92 f2f0 	sdiv	r2, r2, r0
 800d0da:	440a      	add	r2, r1
 800d0dc:	1a9b      	subs	r3, r3, r2
 800d0de:	435b      	muls	r3, r3
 800d0e0:	fb05 3505 	mla	r5, r5, r5, r3
 800d0e4:	4f4d      	ldr	r7, [pc, #308]	@ (800d21c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800d0e6:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d0e8:	ac10      	add	r4, sp, #64	@ 0x40
 800d0ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d0ec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d0ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d0f0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800d0f2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800d0f4:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800d0f8:	f1b9 0f0c 	cmp.w	r9, #12
 800d0fc:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800d100:	f04f 0303 	mov.w	r3, #3
 800d104:	bfc8      	it	gt
 800d106:	4698      	movgt	r8, r3
 800d108:	f8cd 9000 	str.w	r9, [sp]
 800d10c:	f04f 0400 	mov.w	r4, #0
 800d110:	bfdc      	itt	le
 800d112:	f109 32ff 	addle.w	r2, r9, #4294967295
 800d116:	fb92 f8f3 	sdivle	r8, r2, r3
 800d11a:	1c63      	adds	r3, r4, #1
 800d11c:	aa10      	add	r2, sp, #64	@ 0x40
 800d11e:	f004 0401 	and.w	r4, r4, #1
 800d122:	9308      	str	r3, [sp, #32]
 800d124:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800d128:	9b00      	ldr	r3, [sp, #0]
 800d12a:	fb93 f3f8 	sdiv	r3, r3, r8
 800d12e:	b29b      	uxth	r3, r3
 800d130:	3404      	adds	r4, #4
 800d132:	f04f 0b00 	mov.w	fp, #0
 800d136:	9304      	str	r3, [sp, #16]
 800d138:	9a04      	ldr	r2, [sp, #16]
 800d13a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d13e:	fb13 f302 	smulbb	r3, r3, r2
 800d142:	9a01      	ldr	r2, [sp, #4]
 800d144:	b29b      	uxth	r3, r3
 800d146:	1899      	adds	r1, r3, r2
 800d148:	9305      	str	r3, [sp, #20]
 800d14a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800d14e:	b209      	sxth	r1, r1
 800d150:	4299      	cmp	r1, r3
 800d152:	db4d      	blt.n	800d1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d154:	8932      	ldrh	r2, [r6, #8]
 800d156:	4413      	add	r3, r2
 800d158:	b21b      	sxth	r3, r3
 800d15a:	4299      	cmp	r1, r3
 800d15c:	da48      	bge.n	800d1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d15e:	9b04      	ldr	r3, [sp, #16]
 800d160:	6827      	ldr	r7, [r4, #0]
 800d162:	fb17 f703 	smulbb	r7, r7, r3
 800d166:	9b02      	ldr	r3, [sp, #8]
 800d168:	b2bf      	uxth	r7, r7
 800d16a:	18fa      	adds	r2, r7, r3
 800d16c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800d170:	b212      	sxth	r2, r2
 800d172:	429a      	cmp	r2, r3
 800d174:	db3c      	blt.n	800d1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d176:	8970      	ldrh	r0, [r6, #10]
 800d178:	4403      	add	r3, r0
 800d17a:	b21b      	sxth	r3, r3
 800d17c:	429a      	cmp	r2, r3
 800d17e:	da37      	bge.n	800d1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d180:	2300      	movs	r3, #0
 800d182:	930b      	str	r3, [sp, #44]	@ 0x2c
 800d184:	4630      	mov	r0, r6
 800d186:	ab0b      	add	r3, sp, #44	@ 0x2c
 800d188:	f7ff ff36 	bl	800cff8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800d18c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800d18e:	b37a      	cbz	r2, 800d1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d190:	4552      	cmp	r2, sl
 800d192:	d02d      	beq.n	800d1f0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800d194:	4611      	mov	r1, r2
 800d196:	a80e      	add	r0, sp, #56	@ 0x38
 800d198:	9209      	str	r2, [sp, #36]	@ 0x24
 800d19a:	f004 fbd1 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800d19e:	9a06      	ldr	r2, [sp, #24]
 800d1a0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800d1a4:	9b01      	ldr	r3, [sp, #4]
 800d1a6:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800d1aa:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800d1ae:	4413      	add	r3, r2
 800d1b0:	f04f 0e02 	mov.w	lr, #2
 800d1b4:	fb91 f1fe 	sdiv	r1, r1, lr
 800d1b8:	4401      	add	r1, r0
 800d1ba:	1a58      	subs	r0, r3, r1
 800d1bc:	9a07      	ldr	r2, [sp, #28]
 800d1be:	9b02      	ldr	r3, [sp, #8]
 800d1c0:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800d1c4:	fb9c fcfe 	sdiv	ip, ip, lr
 800d1c8:	4413      	add	r3, r2
 800d1ca:	448c      	add	ip, r1
 800d1cc:	eba3 030c 	sub.w	r3, r3, ip
 800d1d0:	435b      	muls	r3, r3
 800d1d2:	fb00 3300 	mla	r3, r0, r0, r3
 800d1d6:	42ab      	cmp	r3, r5
 800d1d8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800d1da:	d208      	bcs.n	800d1ee <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800d1dc:	9803      	ldr	r0, [sp, #12]
 800d1de:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800d1e0:	6001      	str	r1, [r0, #0]
 800d1e2:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800d1e4:	9805      	ldr	r0, [sp, #20]
 800d1e6:	8008      	strh	r0, [r1, #0]
 800d1e8:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800d1ea:	461d      	mov	r5, r3
 800d1ec:	800f      	strh	r7, [r1, #0]
 800d1ee:	4692      	mov	sl, r2
 800d1f0:	f10b 0b01 	add.w	fp, fp, #1
 800d1f4:	f1bb 0f04 	cmp.w	fp, #4
 800d1f8:	f104 0408 	add.w	r4, r4, #8
 800d1fc:	d19c      	bne.n	800d138 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800d1fe:	9b00      	ldr	r3, [sp, #0]
 800d200:	9c08      	ldr	r4, [sp, #32]
 800d202:	444b      	add	r3, r9
 800d204:	4544      	cmp	r4, r8
 800d206:	9300      	str	r3, [sp, #0]
 800d208:	d187      	bne.n	800d11a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800d20a:	b021      	add	sp, #132	@ 0x84
 800d20c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d210:	f04f 35ff 	mov.w	r5, #4294967295
 800d214:	e766      	b.n	800d0e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800d216:	bf00      	nop
 800d218:	20002dbc 	.word	0x20002dbc
 800d21c:	08024390 	.word	0x08024390

0800d220 <_ZN8touchgfx4RectaNERKS0_>:
 800d220:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d224:	f9b1 7000 	ldrsh.w	r7, [r1]
 800d228:	888c      	ldrh	r4, [r1, #4]
 800d22a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800d22e:	443c      	add	r4, r7
 800d230:	b2a4      	uxth	r4, r4
 800d232:	fa0f f884 	sxth.w	r8, r4
 800d236:	45c1      	cmp	r9, r8
 800d238:	da2f      	bge.n	800d29a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d23a:	8882      	ldrh	r2, [r0, #4]
 800d23c:	444a      	add	r2, r9
 800d23e:	b292      	uxth	r2, r2
 800d240:	fa0f fe82 	sxth.w	lr, r2
 800d244:	4577      	cmp	r7, lr
 800d246:	da28      	bge.n	800d29a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d248:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800d24c:	88cb      	ldrh	r3, [r1, #6]
 800d24e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800d252:	442b      	add	r3, r5
 800d254:	b21b      	sxth	r3, r3
 800d256:	429e      	cmp	r6, r3
 800d258:	da1f      	bge.n	800d29a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d25a:	88c3      	ldrh	r3, [r0, #6]
 800d25c:	4433      	add	r3, r6
 800d25e:	b29b      	uxth	r3, r3
 800d260:	fa0f fc83 	sxth.w	ip, r3
 800d264:	4565      	cmp	r5, ip
 800d266:	da18      	bge.n	800d29a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800d268:	454f      	cmp	r7, r9
 800d26a:	bfb8      	it	lt
 800d26c:	464f      	movlt	r7, r9
 800d26e:	42b5      	cmp	r5, r6
 800d270:	bfb8      	it	lt
 800d272:	4635      	movlt	r5, r6
 800d274:	45f0      	cmp	r8, lr
 800d276:	bfd8      	it	le
 800d278:	4622      	movle	r2, r4
 800d27a:	1bd2      	subs	r2, r2, r7
 800d27c:	8082      	strh	r2, [r0, #4]
 800d27e:	884a      	ldrh	r2, [r1, #2]
 800d280:	88c9      	ldrh	r1, [r1, #6]
 800d282:	8007      	strh	r7, [r0, #0]
 800d284:	440a      	add	r2, r1
 800d286:	b292      	uxth	r2, r2
 800d288:	b211      	sxth	r1, r2
 800d28a:	458c      	cmp	ip, r1
 800d28c:	bfa8      	it	ge
 800d28e:	4613      	movge	r3, r2
 800d290:	1b5b      	subs	r3, r3, r5
 800d292:	80c3      	strh	r3, [r0, #6]
 800d294:	8045      	strh	r5, [r0, #2]
 800d296:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d29a:	2300      	movs	r3, #0
 800d29c:	8003      	strh	r3, [r0, #0]
 800d29e:	8043      	strh	r3, [r0, #2]
 800d2a0:	8083      	strh	r3, [r0, #4]
 800d2a2:	80c3      	strh	r3, [r0, #6]
 800d2a4:	e7f7      	b.n	800d296 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800d2a6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800d2aa:	2b00      	cmp	r3, #0
 800d2ac:	dd06      	ble.n	800d2bc <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800d2ae:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800d2b2:	2800      	cmp	r0, #0
 800d2b4:	bfcc      	ite	gt
 800d2b6:	2000      	movgt	r0, #0
 800d2b8:	2001      	movle	r0, #1
 800d2ba:	4770      	bx	lr
 800d2bc:	2001      	movs	r0, #1
 800d2be:	4770      	bx	lr

0800d2c0 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800d2c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d2c4:	2300      	movs	r3, #0
 800d2c6:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800d2c8:	8003      	strh	r3, [r0, #0]
 800d2ca:	4604      	mov	r4, r0
 800d2cc:	8043      	strh	r3, [r0, #2]
 800d2ce:	8083      	strh	r3, [r0, #4]
 800d2d0:	80c3      	strh	r3, [r0, #6]
 800d2d2:	2d00      	cmp	r5, #0
 800d2d4:	d040      	beq.n	800d358 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800d2d6:	1d28      	adds	r0, r5, #4
 800d2d8:	f7ff ffe5 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d2dc:	b988      	cbnz	r0, 800d302 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800d2de:	4620      	mov	r0, r4
 800d2e0:	f7ff ffe1 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d2e4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800d2e8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800d2ec:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800d2f0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800d2f4:	b138      	cbz	r0, 800d306 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800d2f6:	8022      	strh	r2, [r4, #0]
 800d2f8:	8063      	strh	r3, [r4, #2]
 800d2fa:	f8a4 e004 	strh.w	lr, [r4, #4]
 800d2fe:	f8a4 c006 	strh.w	ip, [r4, #6]
 800d302:	69ad      	ldr	r5, [r5, #24]
 800d304:	e7e5      	b.n	800d2d2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800d306:	f9b4 0000 	ldrsh.w	r0, [r4]
 800d30a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800d30e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800d312:	4290      	cmp	r0, r2
 800d314:	4607      	mov	r7, r0
 800d316:	bfa8      	it	ge
 800d318:	4617      	movge	r7, r2
 800d31a:	4472      	add	r2, lr
 800d31c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800d320:	8027      	strh	r7, [r4, #0]
 800d322:	4299      	cmp	r1, r3
 800d324:	460e      	mov	r6, r1
 800d326:	4440      	add	r0, r8
 800d328:	bfa8      	it	ge
 800d32a:	461e      	movge	r6, r3
 800d32c:	4471      	add	r1, lr
 800d32e:	4463      	add	r3, ip
 800d330:	b200      	sxth	r0, r0
 800d332:	b212      	sxth	r2, r2
 800d334:	b209      	sxth	r1, r1
 800d336:	b21b      	sxth	r3, r3
 800d338:	4290      	cmp	r0, r2
 800d33a:	bfac      	ite	ge
 800d33c:	ebc7 0200 	rsbge	r2, r7, r0
 800d340:	ebc7 0202 	rsblt	r2, r7, r2
 800d344:	4299      	cmp	r1, r3
 800d346:	bfac      	ite	ge
 800d348:	ebc6 0301 	rsbge	r3, r6, r1
 800d34c:	ebc6 0303 	rsblt	r3, r6, r3
 800d350:	8066      	strh	r6, [r4, #2]
 800d352:	80a2      	strh	r2, [r4, #4]
 800d354:	80e3      	strh	r3, [r4, #6]
 800d356:	e7d4      	b.n	800d302 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800d358:	4620      	mov	r0, r4
 800d35a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d35e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800d35e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800d362:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800d366:	b383      	cbz	r3, 800d3ca <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800d368:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d36a:	b374      	cbz	r4, 800d3ca <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800d36c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800d370:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800d374:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800d378:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800d37c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d380:	b303      	cbz	r3, 800d3c4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800d382:	4668      	mov	r0, sp
 800d384:	1d21      	adds	r1, r4, #4
 800d386:	f8ad 5000 	strh.w	r5, [sp]
 800d38a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800d38e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800d392:	f8ad 8006 	strh.w	r8, [sp, #6]
 800d396:	f7ff ff43 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 800d39a:	4668      	mov	r0, sp
 800d39c:	f7ff ff83 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d3a0:	b980      	cbnz	r0, 800d3c4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800d3a2:	f8bd 3000 	ldrh.w	r3, [sp]
 800d3a6:	88a2      	ldrh	r2, [r4, #4]
 800d3a8:	1a9b      	subs	r3, r3, r2
 800d3aa:	f8ad 3000 	strh.w	r3, [sp]
 800d3ae:	88e2      	ldrh	r2, [r4, #6]
 800d3b0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d3b4:	1a9b      	subs	r3, r3, r2
 800d3b6:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d3ba:	6823      	ldr	r3, [r4, #0]
 800d3bc:	4669      	mov	r1, sp
 800d3be:	689b      	ldr	r3, [r3, #8]
 800d3c0:	4620      	mov	r0, r4
 800d3c2:	4798      	blx	r3
 800d3c4:	69a4      	ldr	r4, [r4, #24]
 800d3c6:	2c00      	cmp	r4, #0
 800d3c8:	d1d8      	bne.n	800d37c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800d3ca:	b002      	add	sp, #8
 800d3cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d3d0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800d3d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d3d2:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800d3d6:	460d      	mov	r5, r1
 800d3d8:	4616      	mov	r6, r2
 800d3da:	b323      	cbz	r3, 800d426 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d3dc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d3de:	b314      	cbz	r4, 800d426 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800d3e0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800d3e4:	b1eb      	cbz	r3, 800d422 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d3e6:	6828      	ldr	r0, [r5, #0]
 800d3e8:	6869      	ldr	r1, [r5, #4]
 800d3ea:	466b      	mov	r3, sp
 800d3ec:	c303      	stmia	r3!, {r0, r1}
 800d3ee:	4668      	mov	r0, sp
 800d3f0:	1d21      	adds	r1, r4, #4
 800d3f2:	f7ff ff15 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 800d3f6:	4668      	mov	r0, sp
 800d3f8:	f7ff ff55 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d3fc:	b988      	cbnz	r0, 800d422 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800d3fe:	f8bd 3000 	ldrh.w	r3, [sp]
 800d402:	88a2      	ldrh	r2, [r4, #4]
 800d404:	1a9b      	subs	r3, r3, r2
 800d406:	f8ad 3000 	strh.w	r3, [sp]
 800d40a:	88e2      	ldrh	r2, [r4, #6]
 800d40c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d410:	1a9b      	subs	r3, r3, r2
 800d412:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d416:	6823      	ldr	r3, [r4, #0]
 800d418:	4632      	mov	r2, r6
 800d41a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800d41c:	4669      	mov	r1, sp
 800d41e:	4620      	mov	r0, r4
 800d420:	4798      	blx	r3
 800d422:	69a4      	ldr	r4, [r4, #24]
 800d424:	e7db      	b.n	800d3de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800d426:	b002      	add	sp, #8
 800d428:	bd70      	pop	{r4, r5, r6, pc}

0800d42a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800d42a:	b513      	push	{r0, r1, r4, lr}
 800d42c:	6803      	ldr	r3, [r0, #0]
 800d42e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800d432:	2300      	movs	r3, #0
 800d434:	e9cd 3300 	strd	r3, r3, [sp]
 800d438:	466b      	mov	r3, sp
 800d43a:	47a0      	blx	r4
 800d43c:	b002      	add	sp, #8
 800d43e:	bd10      	pop	{r4, pc}

0800d440 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800d440:	2301      	movs	r3, #1
 800d442:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d446:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d44a:	4770      	bx	lr

0800d44c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800d44c:	2301      	movs	r3, #1
 800d44e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800d452:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800d456:	4770      	bx	lr

0800d458 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800d458:	6843      	ldr	r3, [r0, #4]
 800d45a:	2201      	movs	r2, #1
 800d45c:	725a      	strb	r2, [r3, #9]
 800d45e:	6840      	ldr	r0, [r0, #4]
 800d460:	6803      	ldr	r3, [r0, #0]
 800d462:	691b      	ldr	r3, [r3, #16]
 800d464:	4718      	bx	r3

0800d466 <_ZN8touchgfx3HAL8flushDMAEv>:
 800d466:	6840      	ldr	r0, [r0, #4]
 800d468:	6803      	ldr	r3, [r0, #0]
 800d46a:	689b      	ldr	r3, [r3, #8]
 800d46c:	4718      	bx	r3

0800d46e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800d46e:	b530      	push	{r4, r5, lr}
 800d470:	b08b      	sub	sp, #44	@ 0x2c
 800d472:	6804      	ldr	r4, [r0, #0]
 800d474:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800d478:	9509      	str	r5, [sp, #36]	@ 0x24
 800d47a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800d47e:	9508      	str	r5, [sp, #32]
 800d480:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800d484:	9507      	str	r5, [sp, #28]
 800d486:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800d48a:	9506      	str	r5, [sp, #24]
 800d48c:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800d490:	9505      	str	r5, [sp, #20]
 800d492:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800d496:	9504      	str	r5, [sp, #16]
 800d498:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800d49c:	9503      	str	r5, [sp, #12]
 800d49e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800d4a2:	9502      	str	r5, [sp, #8]
 800d4a4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800d4a8:	e9cd 3500 	strd	r3, r5, [sp]
 800d4ac:	4613      	mov	r3, r2
 800d4ae:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800d4b0:	2200      	movs	r2, #0
 800d4b2:	47a0      	blx	r4
 800d4b4:	b00b      	add	sp, #44	@ 0x2c
 800d4b6:	bd30      	pop	{r4, r5, pc}

0800d4b8 <_ZN8touchgfx3HAL10beginFrameEv>:
 800d4b8:	4b04      	ldr	r3, [pc, #16]	@ (800d4cc <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800d4ba:	781b      	ldrb	r3, [r3, #0]
 800d4bc:	b123      	cbz	r3, 800d4c8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800d4be:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800d4c2:	f080 0001 	eor.w	r0, r0, #1
 800d4c6:	4770      	bx	lr
 800d4c8:	2001      	movs	r0, #1
 800d4ca:	4770      	bx	lr
 800d4cc:	20002dba 	.word	0x20002dba

0800d4d0 <_ZN8touchgfx3HAL8endFrameEv>:
 800d4d0:	b510      	push	{r4, lr}
 800d4d2:	4604      	mov	r4, r0
 800d4d4:	6840      	ldr	r0, [r0, #4]
 800d4d6:	6803      	ldr	r3, [r0, #0]
 800d4d8:	689b      	ldr	r3, [r3, #8]
 800d4da:	4798      	blx	r3
 800d4dc:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800d4e0:	b113      	cbz	r3, 800d4e8 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800d4e2:	2301      	movs	r3, #1
 800d4e4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800d4e8:	bd10      	pop	{r4, pc}

0800d4ea <_ZN8touchgfx3HAL10initializeEv>:
 800d4ea:	b510      	push	{r4, lr}
 800d4ec:	4604      	mov	r4, r0
 800d4ee:	f7fe f80b 	bl	800b508 <_ZN8touchgfx10OSWrappers10initializeEv>
 800d4f2:	f7fd fd51 	bl	800af98 <_ZN8touchgfx4GPIO4initEv>
 800d4f6:	6860      	ldr	r0, [r4, #4]
 800d4f8:	6803      	ldr	r3, [r0, #0]
 800d4fa:	68db      	ldr	r3, [r3, #12]
 800d4fc:	4798      	blx	r3
 800d4fe:	68e0      	ldr	r0, [r4, #12]
 800d500:	6803      	ldr	r3, [r0, #0]
 800d502:	689b      	ldr	r3, [r3, #8]
 800d504:	4798      	blx	r3
 800d506:	6823      	ldr	r3, [r4, #0]
 800d508:	4620      	mov	r0, r4
 800d50a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800d50c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d510:	4718      	bx	r3

0800d512 <_ZN8touchgfx3HAL9taskEntryEv>:
 800d512:	b508      	push	{r3, lr}
 800d514:	6803      	ldr	r3, [r0, #0]
 800d516:	4604      	mov	r4, r0
 800d518:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d51c:	4798      	blx	r3
 800d51e:	6823      	ldr	r3, [r4, #0]
 800d520:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800d522:	4620      	mov	r0, r4
 800d524:	4798      	blx	r3
 800d526:	f7fe f863 	bl	800b5f0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800d52a:	6823      	ldr	r3, [r4, #0]
 800d52c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800d52e:	e7f8      	b.n	800d522 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800d530 <_ZN8touchgfx3HAL4tickEv>:
 800d530:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d532:	6803      	ldr	r3, [r0, #0]
 800d534:	4d5b      	ldr	r5, [pc, #364]	@ (800d6a4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800d536:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800d53a:	4604      	mov	r4, r0
 800d53c:	4798      	blx	r3
 800d53e:	2800      	cmp	r0, #0
 800d540:	f000 8095 	beq.w	800d66e <_ZN8touchgfx3HAL4tickEv+0x13e>
 800d544:	2001      	movs	r0, #1
 800d546:	f7fd fd2f 	bl	800afa8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d54a:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800d54e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d552:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800d556:	2600      	movs	r6, #0
 800d558:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800d55c:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800d560:	b133      	cbz	r3, 800d570 <_ZN8touchgfx3HAL4tickEv+0x40>
 800d562:	6823      	ldr	r3, [r4, #0]
 800d564:	4620      	mov	r0, r4
 800d566:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800d56a:	4798      	blx	r3
 800d56c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800d570:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800d574:	6862      	ldr	r2, [r4, #4]
 800d576:	f083 0301 	eor.w	r3, r3, #1
 800d57a:	7253      	strb	r3, [r2, #9]
 800d57c:	2601      	movs	r6, #1
 800d57e:	702e      	strb	r6, [r5, #0]
 800d580:	f003 f8cc 	bl	801071c <_ZN8touchgfx11Application11getInstanceEv>
 800d584:	6803      	ldr	r3, [r0, #0]
 800d586:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d588:	4798      	blx	r3
 800d58a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d58e:	b90b      	cbnz	r3, 800d594 <_ZN8touchgfx3HAL4tickEv+0x64>
 800d590:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800d594:	f003 f8c2 	bl	801071c <_ZN8touchgfx11Application11getInstanceEv>
 800d598:	6803      	ldr	r3, [r0, #0]
 800d59a:	695b      	ldr	r3, [r3, #20]
 800d59c:	4798      	blx	r3
 800d59e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d5a0:	6803      	ldr	r3, [r0, #0]
 800d5a2:	691b      	ldr	r3, [r3, #16]
 800d5a4:	4798      	blx	r3
 800d5a6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800d5aa:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800d5ae:	3b01      	subs	r3, #1
 800d5b0:	b2db      	uxtb	r3, r3
 800d5b2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800d5b6:	b10a      	cbz	r2, 800d5bc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800d5b8:	2b00      	cmp	r3, #0
 800d5ba:	d1eb      	bne.n	800d594 <_ZN8touchgfx3HAL4tickEv+0x64>
 800d5bc:	4a3a      	ldr	r2, [pc, #232]	@ (800d6a8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800d5be:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800d5c2:	7813      	ldrb	r3, [r2, #0]
 800d5c4:	3301      	adds	r3, #1
 800d5c6:	b25b      	sxtb	r3, r3
 800d5c8:	4299      	cmp	r1, r3
 800d5ca:	7013      	strb	r3, [r2, #0]
 800d5cc:	dc10      	bgt.n	800d5f0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d5ce:	68e0      	ldr	r0, [r4, #12]
 800d5d0:	2300      	movs	r3, #0
 800d5d2:	7013      	strb	r3, [r2, #0]
 800d5d4:	6803      	ldr	r3, [r0, #0]
 800d5d6:	aa03      	add	r2, sp, #12
 800d5d8:	68db      	ldr	r3, [r3, #12]
 800d5da:	a902      	add	r1, sp, #8
 800d5dc:	4798      	blx	r3
 800d5de:	6823      	ldr	r3, [r4, #0]
 800d5e0:	2800      	cmp	r0, #0
 800d5e2:	d050      	beq.n	800d686 <_ZN8touchgfx3HAL4tickEv+0x156>
 800d5e4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800d5e8:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800d5ec:	4620      	mov	r0, r4
 800d5ee:	4798      	blx	r3
 800d5f0:	6960      	ldr	r0, [r4, #20]
 800d5f2:	2300      	movs	r3, #0
 800d5f4:	f88d 3007 	strb.w	r3, [sp, #7]
 800d5f8:	b158      	cbz	r0, 800d612 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d5fa:	6803      	ldr	r3, [r0, #0]
 800d5fc:	f10d 0107 	add.w	r1, sp, #7
 800d600:	68db      	ldr	r3, [r3, #12]
 800d602:	4798      	blx	r3
 800d604:	b128      	cbz	r0, 800d612 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800d606:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800d608:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800d60c:	6803      	ldr	r3, [r0, #0]
 800d60e:	68db      	ldr	r3, [r3, #12]
 800d610:	4798      	blx	r3
 800d612:	f104 001c 	add.w	r0, r4, #28
 800d616:	f014 fd25 	bl	8022064 <_ZN8touchgfx8Gestures4tickEv>
 800d61a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800d61e:	b30b      	cbz	r3, 800d664 <_ZN8touchgfx3HAL4tickEv+0x134>
 800d620:	6920      	ldr	r0, [r4, #16]
 800d622:	6803      	ldr	r3, [r0, #0]
 800d624:	691b      	ldr	r3, [r3, #16]
 800d626:	4798      	blx	r3
 800d628:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d62a:	4606      	mov	r6, r0
 800d62c:	b903      	cbnz	r3, 800d630 <_ZN8touchgfx3HAL4tickEv+0x100>
 800d62e:	6760      	str	r0, [r4, #116]	@ 0x74
 800d630:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d632:	4a1e      	ldr	r2, [pc, #120]	@ (800d6ac <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800d634:	1af3      	subs	r3, r6, r3
 800d636:	4293      	cmp	r3, r2
 800d638:	d914      	bls.n	800d664 <_ZN8touchgfx3HAL4tickEv+0x134>
 800d63a:	6920      	ldr	r0, [r4, #16]
 800d63c:	6803      	ldr	r3, [r0, #0]
 800d63e:	699b      	ldr	r3, [r3, #24]
 800d640:	4798      	blx	r3
 800d642:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800d644:	2264      	movs	r2, #100	@ 0x64
 800d646:	1af3      	subs	r3, r6, r3
 800d648:	fbb3 f3f2 	udiv	r3, r3, r2
 800d64c:	fbb0 f0f3 	udiv	r0, r0, r3
 800d650:	2800      	cmp	r0, #0
 800d652:	dc1d      	bgt.n	800d690 <_ZN8touchgfx3HAL4tickEv+0x160>
 800d654:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800d658:	6920      	ldr	r0, [r4, #16]
 800d65a:	6803      	ldr	r3, [r0, #0]
 800d65c:	2100      	movs	r1, #0
 800d65e:	69db      	ldr	r3, [r3, #28]
 800d660:	4798      	blx	r3
 800d662:	6766      	str	r6, [r4, #116]	@ 0x74
 800d664:	f003 f85a 	bl	801071c <_ZN8touchgfx11Application11getInstanceEv>
 800d668:	6803      	ldr	r3, [r0, #0]
 800d66a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800d66c:	4798      	blx	r3
 800d66e:	6823      	ldr	r3, [r4, #0]
 800d670:	4620      	mov	r0, r4
 800d672:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800d676:	4798      	blx	r3
 800d678:	2001      	movs	r0, #1
 800d67a:	f7fd fcb1 	bl	800afe0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d67e:	2300      	movs	r3, #0
 800d680:	702b      	strb	r3, [r5, #0]
 800d682:	b004      	add	sp, #16
 800d684:	bd70      	pop	{r4, r5, r6, pc}
 800d686:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800d68a:	4620      	mov	r0, r4
 800d68c:	4798      	blx	r3
 800d68e:	e7af      	b.n	800d5f0 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800d690:	2863      	cmp	r0, #99	@ 0x63
 800d692:	bfcb      	itete	gt
 800d694:	2300      	movgt	r3, #0
 800d696:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800d69a:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800d69e:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800d6a2:	e7d9      	b.n	800d658 <_ZN8touchgfx3HAL4tickEv+0x128>
 800d6a4:	20002dc0 	.word	0x20002dc0
 800d6a8:	20002dc1 	.word	0x20002dc1
 800d6ac:	05f5e100 	.word	0x05f5e100

0800d6b0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800d6b0:	b510      	push	{r4, lr}
 800d6b2:	4604      	mov	r4, r0
 800d6b4:	f7fd ff50 	bl	800b558 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800d6b8:	6863      	ldr	r3, [r4, #4]
 800d6ba:	2200      	movs	r2, #0
 800d6bc:	729a      	strb	r2, [r3, #10]
 800d6be:	bd10      	pop	{r4, pc}

0800d6c0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800d6c0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800d6c2:	301c      	adds	r0, #28
 800d6c4:	f014 bccc 	b.w	8022060 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800d6c8 <_ZN8touchgfx3HAL5touchEll>:
 800d6c8:	b530      	push	{r4, r5, lr}
 800d6ca:	b087      	sub	sp, #28
 800d6cc:	4604      	mov	r4, r0
 800d6ce:	a804      	add	r0, sp, #16
 800d6d0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800d6d4:	f002 fe14 	bl	8010300 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800d6d8:	9b04      	ldr	r3, [sp, #16]
 800d6da:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d6de:	a906      	add	r1, sp, #24
 800d6e0:	9b05      	ldr	r3, [sp, #20]
 800d6e2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800d6e6:	a803      	add	r0, sp, #12
 800d6e8:	f002 fe5c 	bl	80103a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800d6ec:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800d6f0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d6f4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d6f8:	f104 001c 	add.w	r0, r4, #28
 800d6fc:	b189      	cbz	r1, 800d722 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800d6fe:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800d702:	9300      	str	r3, [sp, #0]
 800d704:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800d708:	4613      	mov	r3, r2
 800d70a:	462a      	mov	r2, r5
 800d70c:	f014 fcb8 	bl	8022080 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800d710:	b128      	cbz	r0, 800d71e <_ZN8touchgfx3HAL5touchEll+0x56>
 800d712:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d716:	6623      	str	r3, [r4, #96]	@ 0x60
 800d718:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d71c:	6663      	str	r3, [r4, #100]	@ 0x64
 800d71e:	b007      	add	sp, #28
 800d720:	bd30      	pop	{r4, r5, pc}
 800d722:	f014 fced 	bl	8022100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d726:	2301      	movs	r3, #1
 800d728:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800d72c:	e7f1      	b.n	800d712 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800d72e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800d72e:	b510      	push	{r4, lr}
 800d730:	2b00      	cmp	r3, #0
 800d732:	d046      	beq.n	800d7c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d734:	ea81 0002 	eor.w	r0, r1, r2
 800d738:	07c4      	lsls	r4, r0, #31
 800d73a:	d508      	bpl.n	800d74e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800d73c:	440b      	add	r3, r1
 800d73e:	3a01      	subs	r2, #1
 800d740:	428b      	cmp	r3, r1
 800d742:	d93e      	bls.n	800d7c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d744:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d748:	f801 0b01 	strb.w	r0, [r1], #1
 800d74c:	e7f8      	b.n	800d740 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800d74e:	07d0      	lsls	r0, r2, #31
 800d750:	bf42      	ittt	mi
 800d752:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800d756:	f801 0b01 	strbmi.w	r0, [r1], #1
 800d75a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800d75e:	2b01      	cmp	r3, #1
 800d760:	d911      	bls.n	800d786 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d762:	ea81 0402 	eor.w	r4, r1, r2
 800d766:	07a4      	lsls	r4, r4, #30
 800d768:	4610      	mov	r0, r2
 800d76a:	d022      	beq.n	800d7b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800d76c:	f023 0401 	bic.w	r4, r3, #1
 800d770:	440c      	add	r4, r1
 800d772:	428c      	cmp	r4, r1
 800d774:	4602      	mov	r2, r0
 800d776:	d904      	bls.n	800d782 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800d778:	8812      	ldrh	r2, [r2, #0]
 800d77a:	f821 2b02 	strh.w	r2, [r1], #2
 800d77e:	3002      	adds	r0, #2
 800d780:	e7f7      	b.n	800d772 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800d782:	f003 0301 	and.w	r3, r3, #1
 800d786:	f023 0003 	bic.w	r0, r3, #3
 800d78a:	4408      	add	r0, r1
 800d78c:	4288      	cmp	r0, r1
 800d78e:	4614      	mov	r4, r2
 800d790:	d904      	bls.n	800d79c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800d792:	6824      	ldr	r4, [r4, #0]
 800d794:	f841 4b04 	str.w	r4, [r1], #4
 800d798:	3204      	adds	r2, #4
 800d79a:	e7f7      	b.n	800d78c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800d79c:	f003 0303 	and.w	r3, r3, #3
 800d7a0:	440b      	add	r3, r1
 800d7a2:	3a01      	subs	r2, #1
 800d7a4:	428b      	cmp	r3, r1
 800d7a6:	d90c      	bls.n	800d7c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800d7a8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800d7ac:	f801 0b01 	strb.w	r0, [r1], #1
 800d7b0:	e7f8      	b.n	800d7a4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800d7b2:	0790      	lsls	r0, r2, #30
 800d7b4:	d0e7      	beq.n	800d786 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d7b6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800d7ba:	f821 0b02 	strh.w	r0, [r1], #2
 800d7be:	3b02      	subs	r3, #2
 800d7c0:	e7e1      	b.n	800d786 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800d7c2:	2001      	movs	r0, #1
 800d7c4:	bd10      	pop	{r4, pc}

0800d7c6 <_ZN8touchgfx3HAL7noTouchEv>:
 800d7c6:	b510      	push	{r4, lr}
 800d7c8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800d7cc:	4604      	mov	r4, r0
 800d7ce:	b153      	cbz	r3, 800d7e6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800d7d0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800d7d4:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800d7d8:	2101      	movs	r1, #1
 800d7da:	301c      	adds	r0, #28
 800d7dc:	f014 fc90 	bl	8022100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800d7e0:	2300      	movs	r3, #0
 800d7e2:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800d7e6:	bd10      	pop	{r4, pc}

0800d7e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800d7e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d7ec:	b085      	sub	sp, #20
 800d7ee:	ad04      	add	r5, sp, #16
 800d7f0:	4604      	mov	r4, r0
 800d7f2:	2000      	movs	r0, #0
 800d7f4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800d7f8:	69a0      	ldr	r0, [r4, #24]
 800d7fa:	6806      	ldr	r6, [r0, #0]
 800d7fc:	9501      	str	r5, [sp, #4]
 800d7fe:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800d802:	9500      	str	r5, [sp, #0]
 800d804:	6835      	ldr	r5, [r6, #0]
 800d806:	4699      	mov	r9, r3
 800d808:	460f      	mov	r7, r1
 800d80a:	4690      	mov	r8, r2
 800d80c:	47a8      	blx	r5
 800d80e:	4d10      	ldr	r5, [pc, #64]	@ (800d850 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800d810:	4606      	mov	r6, r0
 800d812:	f8a5 9000 	strh.w	r9, [r5]
 800d816:	f7fa ffbf 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800d81a:	6803      	ldr	r3, [r0, #0]
 800d81c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d81e:	4798      	blx	r3
 800d820:	b128      	cbz	r0, 800d82e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800d822:	2801      	cmp	r0, #1
 800d824:	d00b      	beq.n	800d83e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800d826:	4630      	mov	r0, r6
 800d828:	b005      	add	sp, #20
 800d82a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d82e:	882b      	ldrh	r3, [r5, #0]
 800d830:	fb08 7203 	mla	r2, r8, r3, r7
 800d834:	9b03      	ldr	r3, [sp, #12]
 800d836:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800d83a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800d83c:	e7f3      	b.n	800d826 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d83e:	882a      	ldrh	r2, [r5, #0]
 800d840:	9b03      	ldr	r3, [sp, #12]
 800d842:	fb08 7202 	mla	r2, r8, r2, r7
 800d846:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800d84a:	1a9a      	subs	r2, r3, r2
 800d84c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800d84e:	e7ea      	b.n	800d826 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800d850:	20002db6 	.word	0x20002db6

0800d854 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800d854:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d856:	b08b      	sub	sp, #44	@ 0x2c
 800d858:	4617      	mov	r7, r2
 800d85a:	4604      	mov	r4, r0
 800d85c:	460e      	mov	r6, r1
 800d85e:	461d      	mov	r5, r3
 800d860:	f7fa ff9a 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800d864:	6803      	ldr	r3, [r0, #0]
 800d866:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d868:	4798      	blx	r3
 800d86a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800d86e:	9007      	str	r0, [sp, #28]
 800d870:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d874:	4b0d      	ldr	r3, [pc, #52]	@ (800d8ac <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800d876:	6822      	ldr	r2, [r4, #0]
 800d878:	881b      	ldrh	r3, [r3, #0]
 800d87a:	9306      	str	r3, [sp, #24]
 800d87c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800d880:	9305      	str	r3, [sp, #20]
 800d882:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800d886:	9304      	str	r3, [sp, #16]
 800d888:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d88c:	9303      	str	r3, [sp, #12]
 800d88e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800d892:	9302      	str	r3, [sp, #8]
 800d894:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800d898:	e9cd 5300 	strd	r5, r3, [sp]
 800d89c:	4631      	mov	r1, r6
 800d89e:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800d8a0:	463b      	mov	r3, r7
 800d8a2:	2200      	movs	r2, #0
 800d8a4:	4620      	mov	r0, r4
 800d8a6:	47a8      	blx	r5
 800d8a8:	b00b      	add	sp, #44	@ 0x2c
 800d8aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8ac:	20002db6 	.word	0x20002db6

0800d8b0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800d8b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d8b4:	4698      	mov	r8, r3
 800d8b6:	6803      	ldr	r3, [r0, #0]
 800d8b8:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800d8ba:	4b15      	ldr	r3, [pc, #84]	@ (800d910 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800d8bc:	b08b      	sub	sp, #44	@ 0x2c
 800d8be:	4617      	mov	r7, r2
 800d8c0:	f8b3 9000 	ldrh.w	r9, [r3]
 800d8c4:	460e      	mov	r6, r1
 800d8c6:	4604      	mov	r4, r0
 800d8c8:	f7fa ff66 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800d8cc:	6803      	ldr	r3, [r0, #0]
 800d8ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d8d0:	4798      	blx	r3
 800d8d2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800d8d6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800d8da:	2302      	movs	r3, #2
 800d8dc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800d8e0:	2301      	movs	r3, #1
 800d8e2:	9305      	str	r3, [sp, #20]
 800d8e4:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800d8e8:	9304      	str	r3, [sp, #16]
 800d8ea:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800d8ee:	9303      	str	r3, [sp, #12]
 800d8f0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800d8f4:	9302      	str	r3, [sp, #8]
 800d8f6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800d8fa:	2200      	movs	r2, #0
 800d8fc:	e9cd 8300 	strd	r8, r3, [sp]
 800d900:	4631      	mov	r1, r6
 800d902:	463b      	mov	r3, r7
 800d904:	4620      	mov	r0, r4
 800d906:	47a8      	blx	r5
 800d908:	b00b      	add	sp, #44	@ 0x2c
 800d90a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d90e:	bf00      	nop
 800d910:	20002db6 	.word	0x20002db6

0800d914 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800d914:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d918:	4698      	mov	r8, r3
 800d91a:	6803      	ldr	r3, [r0, #0]
 800d91c:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800d91e:	4b11      	ldr	r3, [pc, #68]	@ (800d964 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800d920:	b087      	sub	sp, #28
 800d922:	f8b3 9000 	ldrh.w	r9, [r3]
 800d926:	460e      	mov	r6, r1
 800d928:	4617      	mov	r7, r2
 800d92a:	4604      	mov	r4, r0
 800d92c:	f7fa ff34 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800d930:	6803      	ldr	r3, [r0, #0]
 800d932:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d934:	4798      	blx	r3
 800d936:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800d93a:	f8cd 900c 	str.w	r9, [sp, #12]
 800d93e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800d942:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800d946:	9302      	str	r3, [sp, #8]
 800d948:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800d94c:	9301      	str	r3, [sp, #4]
 800d94e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800d952:	9300      	str	r3, [sp, #0]
 800d954:	463a      	mov	r2, r7
 800d956:	4643      	mov	r3, r8
 800d958:	4631      	mov	r1, r6
 800d95a:	4620      	mov	r0, r4
 800d95c:	47a8      	blx	r5
 800d95e:	b007      	add	sp, #28
 800d960:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d964:	20002db6 	.word	0x20002db6

0800d968 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800d968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d96c:	4604      	mov	r4, r0
 800d96e:	b08f      	sub	sp, #60	@ 0x3c
 800d970:	4610      	mov	r0, r2
 800d972:	460d      	mov	r5, r1
 800d974:	4691      	mov	r9, r2
 800d976:	461e      	mov	r6, r3
 800d978:	f006 f8c2 	bl	8013b00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d97c:	2800      	cmp	r0, #0
 800d97e:	f000 809d 	beq.w	800dabc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800d982:	6823      	ldr	r3, [r4, #0]
 800d984:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800db20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800d988:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800d98a:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800db24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800d98e:	4f61      	ldr	r7, [pc, #388]	@ (800db14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800d990:	4620      	mov	r0, r4
 800d992:	4798      	blx	r3
 800d994:	6823      	ldr	r3, [r4, #0]
 800d996:	4620      	mov	r0, r4
 800d998:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800d99a:	4798      	blx	r3
 800d99c:	f8bb 3000 	ldrh.w	r3, [fp]
 800d9a0:	9301      	str	r3, [sp, #4]
 800d9a2:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800d9a6:	f8ba 3000 	ldrh.w	r3, [sl]
 800d9aa:	9302      	str	r3, [sp, #8]
 800d9ac:	883b      	ldrh	r3, [r7, #0]
 800d9ae:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800d9b2:	9303      	str	r3, [sp, #12]
 800d9b4:	4b58      	ldr	r3, [pc, #352]	@ (800db18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800d9b6:	9305      	str	r3, [sp, #20]
 800d9b8:	881a      	ldrh	r2, [r3, #0]
 800d9ba:	9204      	str	r2, [sp, #16]
 800d9bc:	4640      	mov	r0, r8
 800d9be:	f006 f933 	bl	8013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d9c2:	8038      	strh	r0, [r7, #0]
 800d9c4:	4640      	mov	r0, r8
 800d9c6:	f006 f963 	bl	8013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d9ca:	9b05      	ldr	r3, [sp, #20]
 800d9cc:	b280      	uxth	r0, r0
 800d9ce:	8018      	strh	r0, [r3, #0]
 800d9d0:	4b52      	ldr	r3, [pc, #328]	@ (800db1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800d9d2:	781b      	ldrb	r3, [r3, #0]
 800d9d4:	2b00      	cmp	r3, #0
 800d9d6:	d174      	bne.n	800dac2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800d9d8:	883b      	ldrh	r3, [r7, #0]
 800d9da:	f8ab 3000 	strh.w	r3, [fp]
 800d9de:	f8aa 0000 	strh.w	r0, [sl]
 800d9e2:	4648      	mov	r0, r9
 800d9e4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800d9e8:	f006 f88a 	bl	8013b00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800d9ec:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800d9f0:	2200      	movs	r2, #0
 800d9f2:	4611      	mov	r1, r2
 800d9f4:	4628      	mov	r0, r5
 800d9f6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800d9fa:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800d9fe:	f7fb fc52 	bl	80092a6 <_ZN8touchgfx8Drawable5setXYEss>
 800da02:	2301      	movs	r3, #1
 800da04:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800da08:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800da0c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800da10:	2b00      	cmp	r3, #0
 800da12:	dd5c      	ble.n	800dace <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800da14:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800da18:	2b00      	cmp	r3, #0
 800da1a:	dd58      	ble.n	800dace <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800da1c:	462a      	mov	r2, r5
 800da1e:	ab0a      	add	r3, sp, #40	@ 0x28
 800da20:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800da24:	6851      	ldr	r1, [r2, #4]
 800da26:	c303      	stmia	r3!, {r0, r1}
 800da28:	4631      	mov	r1, r6
 800da2a:	a80a      	add	r0, sp, #40	@ 0x28
 800da2c:	f7ff fbf8 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 800da30:	4b38      	ldr	r3, [pc, #224]	@ (800db14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800da32:	f9b3 2000 	ldrsh.w	r2, [r3]
 800da36:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800da3a:	2100      	movs	r1, #0
 800da3c:	aa0a      	add	r2, sp, #40	@ 0x28
 800da3e:	4b36      	ldr	r3, [pc, #216]	@ (800db18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800da40:	910c      	str	r1, [sp, #48]	@ 0x30
 800da42:	e892 0003 	ldmia.w	r2, {r0, r1}
 800da46:	f9b3 3000 	ldrsh.w	r3, [r3]
 800da4a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800da4e:	ab08      	add	r3, sp, #32
 800da50:	e883 0003 	stmia.w	r3, {r0, r1}
 800da54:	4618      	mov	r0, r3
 800da56:	a90c      	add	r1, sp, #48	@ 0x30
 800da58:	f7ff fbe2 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 800da5c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800da5e:	2b00      	cmp	r3, #0
 800da60:	d13c      	bne.n	800dadc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800da62:	2000      	movs	r0, #0
 800da64:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800da68:	2600      	movs	r6, #0
 800da6a:	682a      	ldr	r2, [r5, #0]
 800da6c:	696b      	ldr	r3, [r5, #20]
 800da6e:	616e      	str	r6, [r5, #20]
 800da70:	9305      	str	r3, [sp, #20]
 800da72:	6892      	ldr	r2, [r2, #8]
 800da74:	a908      	add	r1, sp, #32
 800da76:	4628      	mov	r0, r5
 800da78:	4790      	blx	r2
 800da7a:	9b05      	ldr	r3, [sp, #20]
 800da7c:	616b      	str	r3, [r5, #20]
 800da7e:	4652      	mov	r2, sl
 800da80:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800da84:	4649      	mov	r1, r9
 800da86:	4628      	mov	r0, r5
 800da88:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800da8c:	f7fb fc0b 	bl	80092a6 <_ZN8touchgfx8Drawable5setXYEss>
 800da90:	4b23      	ldr	r3, [pc, #140]	@ (800db20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800da92:	9a01      	ldr	r2, [sp, #4]
 800da94:	801a      	strh	r2, [r3, #0]
 800da96:	4b23      	ldr	r3, [pc, #140]	@ (800db24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800da98:	9a02      	ldr	r2, [sp, #8]
 800da9a:	801a      	strh	r2, [r3, #0]
 800da9c:	4b1d      	ldr	r3, [pc, #116]	@ (800db14 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800da9e:	9a03      	ldr	r2, [sp, #12]
 800daa0:	801a      	strh	r2, [r3, #0]
 800daa2:	4b1d      	ldr	r3, [pc, #116]	@ (800db18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800daa4:	9a04      	ldr	r2, [sp, #16]
 800daa6:	801a      	strh	r2, [r3, #0]
 800daa8:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800daac:	6823      	ldr	r3, [r4, #0]
 800daae:	4620      	mov	r0, r4
 800dab0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800dab2:	4798      	blx	r3
 800dab4:	6823      	ldr	r3, [r4, #0]
 800dab6:	4620      	mov	r0, r4
 800dab8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800daba:	4798      	blx	r3
 800dabc:	b00f      	add	sp, #60	@ 0x3c
 800dabe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dac2:	883b      	ldrh	r3, [r7, #0]
 800dac4:	f8ab 0000 	strh.w	r0, [fp]
 800dac8:	f8aa 3000 	strh.w	r3, [sl]
 800dacc:	e789      	b.n	800d9e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800dace:	462a      	mov	r2, r5
 800dad0:	ab0a      	add	r3, sp, #40	@ 0x28
 800dad2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800dad6:	6851      	ldr	r1, [r2, #4]
 800dad8:	c303      	stmia	r3!, {r0, r1}
 800dada:	e7a9      	b.n	800da30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800dadc:	a807      	add	r0, sp, #28
 800dade:	f006 fa19 	bl	8013f14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800dae2:	4606      	mov	r6, r0
 800dae4:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800dae6:	6803      	ldr	r3, [r0, #0]
 800dae8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800daea:	4798      	blx	r3
 800daec:	4286      	cmp	r6, r0
 800daee:	d1b8      	bne.n	800da62 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800daf0:	f7fa fe52 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800daf4:	6803      	ldr	r3, [r0, #0]
 800daf6:	4606      	mov	r6, r0
 800daf8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800dafa:	9305      	str	r3, [sp, #20]
 800dafc:	a807      	add	r0, sp, #28
 800dafe:	f006 fa09 	bl	8013f14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800db02:	9b05      	ldr	r3, [sp, #20]
 800db04:	4601      	mov	r1, r0
 800db06:	4630      	mov	r0, r6
 800db08:	4798      	blx	r3
 800db0a:	f080 0001 	eor.w	r0, r0, #1
 800db0e:	b2c0      	uxtb	r0, r0
 800db10:	e7a8      	b.n	800da64 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800db12:	bf00      	nop
 800db14:	20002db0 	.word	0x20002db0
 800db18:	20002db2 	.word	0x20002db2
 800db1c:	20002db4 	.word	0x20002db4
 800db20:	20002db6 	.word	0x20002db6
 800db24:	20002db8 	.word	0x20002db8

0800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800db28:	b510      	push	{r4, lr}
 800db2a:	4b07      	ldr	r3, [pc, #28]	@ (800db48 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800db2c:	781b      	ldrb	r3, [r3, #0]
 800db2e:	4604      	mov	r4, r0
 800db30:	b13b      	cbz	r3, 800db42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800db32:	6803      	ldr	r3, [r0, #0]
 800db34:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800db36:	4798      	blx	r3
 800db38:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800db3a:	4283      	cmp	r3, r0
 800db3c:	d101      	bne.n	800db42 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800db3e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800db40:	bd10      	pop	{r4, pc}
 800db42:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800db44:	e7fc      	b.n	800db40 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800db46:	bf00      	nop
 800db48:	20002dba 	.word	0x20002dba

0800db4c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800db4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db50:	b08a      	sub	sp, #40	@ 0x28
 800db52:	461d      	mov	r5, r3
 800db54:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800db58:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800db5c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800db60:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db64:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800db68:	f8ad 301a 	strh.w	r3, [sp, #26]
 800db6c:	2400      	movs	r4, #0
 800db6e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800db72:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800db76:	f8ad 301c 	strh.w	r3, [sp, #28]
 800db7a:	4690      	mov	r8, r2
 800db7c:	4607      	mov	r7, r0
 800db7e:	9404      	str	r4, [sp, #16]
 800db80:	f88d 4020 	strb.w	r4, [sp, #32]
 800db84:	f7ff ffd0 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800db88:	fb06 8505 	mla	r5, r6, r5, r8
 800db8c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800db90:	6878      	ldr	r0, [r7, #4]
 800db92:	9505      	str	r5, [sp, #20]
 800db94:	f8ad 601e 	strh.w	r6, [sp, #30]
 800db98:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800db9c:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800dba0:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800dba4:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800dba8:	6803      	ldr	r3, [r0, #0]
 800dbaa:	a901      	add	r1, sp, #4
 800dbac:	685b      	ldr	r3, [r3, #4]
 800dbae:	4798      	blx	r3
 800dbb0:	b00a      	add	sp, #40	@ 0x28
 800dbb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800dbb6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800dbb6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dbba:	b08b      	sub	sp, #44	@ 0x2c
 800dbbc:	2400      	movs	r4, #0
 800dbbe:	461d      	mov	r5, r3
 800dbc0:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800dbc4:	4688      	mov	r8, r1
 800dbc6:	4691      	mov	r9, r2
 800dbc8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800dbcc:	9404      	str	r4, [sp, #16]
 800dbce:	4607      	mov	r7, r0
 800dbd0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800dbd4:	f7ff ffa8 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dbd8:	fb06 9505 	mla	r5, r6, r5, r9
 800dbdc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800dbe0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dbe4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800dbe8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800dbec:	6878      	ldr	r0, [r7, #4]
 800dbee:	9505      	str	r5, [sp, #20]
 800dbf0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dbf4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800dbf8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800dbfc:	f8cd 8010 	str.w	r8, [sp, #16]
 800dc00:	f8ad 4020 	strh.w	r4, [sp, #32]
 800dc04:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800dc08:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800dc0c:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800dc10:	6803      	ldr	r3, [r0, #0]
 800dc12:	a901      	add	r1, sp, #4
 800dc14:	685b      	ldr	r3, [r3, #4]
 800dc16:	4798      	blx	r3
 800dc18:	b00b      	add	sp, #44	@ 0x2c
 800dc1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800dc20 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800dc20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc24:	b08a      	sub	sp, #40	@ 0x28
 800dc26:	4698      	mov	r8, r3
 800dc28:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800dc2c:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800dc30:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800dc34:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800dc38:	2300      	movs	r3, #0
 800dc3a:	2d0b      	cmp	r5, #11
 800dc3c:	4606      	mov	r6, r0
 800dc3e:	9304      	str	r3, [sp, #16]
 800dc40:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800dc44:	d138      	bne.n	800dcb8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800dc46:	2380      	movs	r3, #128	@ 0x80
 800dc48:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800dc4c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800dc50:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dc54:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800dc58:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dc5c:	f88d 0020 	strb.w	r0, [sp, #32]
 800dc60:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800dc64:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dc68:	4630      	mov	r0, r6
 800dc6a:	9203      	str	r2, [sp, #12]
 800dc6c:	f7ff ff5c 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dc70:	2c0b      	cmp	r4, #11
 800dc72:	bf98      	it	ls
 800dc74:	4b1b      	ldrls	r3, [pc, #108]	@ (800dce4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800dc76:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800dc7a:	bf98      	it	ls
 800dc7c:	5d19      	ldrbls	r1, [r3, r4]
 800dc7e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800dc82:	bf88      	it	hi
 800dc84:	2100      	movhi	r1, #0
 800dc86:	fb02 8307 	mla	r3, r2, r7, r8
 800dc8a:	10c9      	asrs	r1, r1, #3
 800dc8c:	fb01 0003 	mla	r0, r1, r3, r0
 800dc90:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800dc94:	9005      	str	r0, [sp, #20]
 800dc96:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800dc9a:	6870      	ldr	r0, [r6, #4]
 800dc9c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800dca0:	2300      	movs	r3, #0
 800dca2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800dca6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800dcaa:	6803      	ldr	r3, [r0, #0]
 800dcac:	a901      	add	r1, sp, #4
 800dcae:	685b      	ldr	r3, [r3, #4]
 800dcb0:	4798      	blx	r3
 800dcb2:	b00a      	add	sp, #40	@ 0x28
 800dcb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dcb8:	2d02      	cmp	r5, #2
 800dcba:	d109      	bne.n	800dcd0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800dcbc:	28ff      	cmp	r0, #255	@ 0xff
 800dcbe:	d105      	bne.n	800dccc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800dcc0:	f1bc 0f00 	cmp.w	ip, #0
 800dcc4:	bf14      	ite	ne
 800dcc6:	2340      	movne	r3, #64	@ 0x40
 800dcc8:	2320      	moveq	r3, #32
 800dcca:	e7bd      	b.n	800dc48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800dccc:	2340      	movs	r3, #64	@ 0x40
 800dcce:	e7bb      	b.n	800dc48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800dcd0:	28ff      	cmp	r0, #255	@ 0xff
 800dcd2:	d105      	bne.n	800dce0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800dcd4:	f1bc 0f00 	cmp.w	ip, #0
 800dcd8:	bf14      	ite	ne
 800dcda:	2304      	movne	r3, #4
 800dcdc:	2301      	moveq	r3, #1
 800dcde:	e7b3      	b.n	800dc48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800dce0:	2304      	movs	r3, #4
 800dce2:	e7b1      	b.n	800dc48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800dce4:	08024d64 	.word	0x08024d64

0800dce8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800dce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dcec:	b08b      	sub	sp, #44	@ 0x2c
 800dcee:	461d      	mov	r5, r3
 800dcf0:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800dcf4:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800dcf8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800dcfc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800dd00:	bf14      	ite	ne
 800dd02:	2308      	movne	r3, #8
 800dd04:	2302      	moveq	r3, #2
 800dd06:	2400      	movs	r4, #0
 800dd08:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800dd0c:	4688      	mov	r8, r1
 800dd0e:	4693      	mov	fp, r2
 800dd10:	9404      	str	r4, [sp, #16]
 800dd12:	4607      	mov	r7, r0
 800dd14:	f7ff ff08 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dd18:	2e0b      	cmp	r6, #11
 800dd1a:	bf98      	it	ls
 800dd1c:	4b15      	ldrls	r3, [pc, #84]	@ (800dd74 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800dd1e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800dd22:	bf98      	it	ls
 800dd24:	5d9c      	ldrbls	r4, [r3, r6]
 800dd26:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800dd2a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800dd2e:	fb05 b50a 	mla	r5, r5, sl, fp
 800dd32:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800dd36:	f8ad 301a 	strh.w	r3, [sp, #26]
 800dd3a:	10e4      	asrs	r4, r4, #3
 800dd3c:	fb04 0405 	mla	r4, r4, r5, r0
 800dd40:	2300      	movs	r3, #0
 800dd42:	6878      	ldr	r0, [r7, #4]
 800dd44:	9405      	str	r4, [sp, #20]
 800dd46:	f8ad 301c 	strh.w	r3, [sp, #28]
 800dd4a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800dd4e:	f8cd 8010 	str.w	r8, [sp, #16]
 800dd52:	f88d 9020 	strb.w	r9, [sp, #32]
 800dd56:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800dd5a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800dd5e:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800dd62:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800dd66:	6803      	ldr	r3, [r0, #0]
 800dd68:	a901      	add	r1, sp, #4
 800dd6a:	685b      	ldr	r3, [r3, #4]
 800dd6c:	4798      	blx	r3
 800dd6e:	b00b      	add	sp, #44	@ 0x2c
 800dd70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd74:	08024d64 	.word	0x08024d64

0800dd78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800dd78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dd7c:	461e      	mov	r6, r3
 800dd7e:	4b0a      	ldr	r3, [pc, #40]	@ (800dda8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800dd80:	460f      	mov	r7, r1
 800dd82:	881d      	ldrh	r5, [r3, #0]
 800dd84:	4690      	mov	r8, r2
 800dd86:	f7fa fd07 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800dd8a:	6803      	ldr	r3, [r0, #0]
 800dd8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800dd8e:	4798      	blx	r3
 800dd90:	280b      	cmp	r0, #11
 800dd92:	bf9a      	itte	ls
 800dd94:	4b05      	ldrls	r3, [pc, #20]	@ (800ddac <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800dd96:	5c1c      	ldrbls	r4, [r3, r0]
 800dd98:	2400      	movhi	r4, #0
 800dd9a:	fb08 7005 	mla	r0, r8, r5, r7
 800dd9e:	10e4      	asrs	r4, r4, #3
 800dda0:	fb04 6000 	mla	r0, r4, r0, r6
 800dda4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dda8:	20002db6 	.word	0x20002db6
 800ddac:	08024d64 	.word	0x08024d64

0800ddb0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800ddb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddb2:	b08b      	sub	sp, #44	@ 0x2c
 800ddb4:	461f      	mov	r7, r3
 800ddb6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800ddba:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ddbe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800ddc2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ddc6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800ddca:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ddce:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800ddd2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ddd6:	2500      	movs	r5, #0
 800ddd8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800dddc:	f88d 3020 	strb.w	r3, [sp, #32]
 800dde0:	4604      	mov	r4, r0
 800dde2:	4616      	mov	r6, r2
 800dde4:	9504      	str	r5, [sp, #16]
 800dde6:	f7ff fe9f 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ddea:	463a      	mov	r2, r7
 800ddec:	4631      	mov	r1, r6
 800ddee:	4603      	mov	r3, r0
 800ddf0:	4620      	mov	r0, r4
 800ddf2:	f7ff ffc1 	bl	800dd78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ddf6:	4b0e      	ldr	r3, [pc, #56]	@ (800de30 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800ddf8:	9005      	str	r0, [sp, #20]
 800ddfa:	881b      	ldrh	r3, [r3, #0]
 800ddfc:	f8ad 301e 	strh.w	r3, [sp, #30]
 800de00:	f7fa fcca 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800de04:	6803      	ldr	r3, [r0, #0]
 800de06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de08:	4798      	blx	r3
 800de0a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800de0c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800de10:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800de14:	9304      	str	r3, [sp, #16]
 800de16:	6860      	ldr	r0, [r4, #4]
 800de18:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800de1c:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800de20:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800de24:	6803      	ldr	r3, [r0, #0]
 800de26:	a901      	add	r1, sp, #4
 800de28:	685b      	ldr	r3, [r3, #4]
 800de2a:	4798      	blx	r3
 800de2c:	b00b      	add	sp, #44	@ 0x2c
 800de2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de30:	20002db6 	.word	0x20002db6

0800de34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800de34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800de36:	b08d      	sub	sp, #52	@ 0x34
 800de38:	466b      	mov	r3, sp
 800de3a:	e883 0006 	stmia.w	r3, {r1, r2}
 800de3e:	2300      	movs	r3, #0
 800de40:	9306      	str	r3, [sp, #24]
 800de42:	6803      	ldr	r3, [r0, #0]
 800de44:	f8bd 6000 	ldrh.w	r6, [sp]
 800de48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de4a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800de4e:	2501      	movs	r5, #1
 800de50:	9503      	str	r5, [sp, #12]
 800de52:	4604      	mov	r4, r0
 800de54:	4798      	blx	r3
 800de56:	463a      	mov	r2, r7
 800de58:	4631      	mov	r1, r6
 800de5a:	4603      	mov	r3, r0
 800de5c:	4620      	mov	r0, r4
 800de5e:	f7ff ff8b 	bl	800dd78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800de62:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800de64:	9307      	str	r3, [sp, #28]
 800de66:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800de6a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800de6e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800de72:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800de76:	4b0f      	ldr	r3, [pc, #60]	@ (800deb4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800de78:	9004      	str	r0, [sp, #16]
 800de7a:	881b      	ldrh	r3, [r3, #0]
 800de7c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800de80:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800de84:	f7fa fc88 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800de88:	6803      	ldr	r3, [r0, #0]
 800de8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800de8c:	4798      	blx	r3
 800de8e:	23ff      	movs	r3, #255	@ 0xff
 800de90:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800de94:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800de98:	6860      	ldr	r0, [r4, #4]
 800de9a:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800de9e:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800dea2:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800dea6:	6803      	ldr	r3, [r0, #0]
 800dea8:	a903      	add	r1, sp, #12
 800deaa:	685b      	ldr	r3, [r3, #4]
 800deac:	4798      	blx	r3
 800deae:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800deb0:	b00d      	add	sp, #52	@ 0x34
 800deb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800deb4:	20002db6 	.word	0x20002db6

0800deb8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800deb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800debc:	b08c      	sub	sp, #48	@ 0x30
 800debe:	461e      	mov	r6, r3
 800dec0:	466d      	mov	r5, sp
 800dec2:	2300      	movs	r3, #0
 800dec4:	e885 0006 	stmia.w	r5, {r1, r2}
 800dec8:	9306      	str	r3, [sp, #24]
 800deca:	6803      	ldr	r3, [r0, #0]
 800decc:	f8bd 7000 	ldrh.w	r7, [sp]
 800ded0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800ded2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ded6:	2501      	movs	r5, #1
 800ded8:	9503      	str	r5, [sp, #12]
 800deda:	4604      	mov	r4, r0
 800dedc:	4798      	blx	r3
 800dede:	4642      	mov	r2, r8
 800dee0:	4639      	mov	r1, r7
 800dee2:	4603      	mov	r3, r0
 800dee4:	4620      	mov	r0, r4
 800dee6:	f7ff ff47 	bl	800dd78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800deea:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800deee:	f8ad 3020 	strh.w	r3, [sp, #32]
 800def2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800def6:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800defa:	4b11      	ldr	r3, [pc, #68]	@ (800df40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800defc:	9004      	str	r0, [sp, #16]
 800defe:	881b      	ldrh	r3, [r3, #0]
 800df00:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800df04:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800df06:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800df0a:	9607      	str	r6, [sp, #28]
 800df0c:	f7fa fc44 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800df10:	6803      	ldr	r3, [r0, #0]
 800df12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800df14:	4798      	blx	r3
 800df16:	23ff      	movs	r3, #255	@ 0xff
 800df18:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800df1c:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800df20:	6860      	ldr	r0, [r4, #4]
 800df22:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800df26:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800df2a:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800df2e:	6803      	ldr	r3, [r0, #0]
 800df30:	a903      	add	r1, sp, #12
 800df32:	685b      	ldr	r3, [r3, #4]
 800df34:	4798      	blx	r3
 800df36:	4630      	mov	r0, r6
 800df38:	b00c      	add	sp, #48	@ 0x30
 800df3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df3e:	bf00      	nop
 800df40:	20002db6 	.word	0x20002db6

0800df44 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800df44:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df46:	b085      	sub	sp, #20
 800df48:	ac02      	add	r4, sp, #8
 800df4a:	e884 0006 	stmia.w	r4, {r1, r2}
 800df4e:	4605      	mov	r5, r0
 800df50:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800df54:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800df58:	f7ff fde6 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800df5c:	463a      	mov	r2, r7
 800df5e:	4603      	mov	r3, r0
 800df60:	4631      	mov	r1, r6
 800df62:	4628      	mov	r0, r5
 800df64:	f7ff ff08 	bl	800dd78 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800df68:	4a05      	ldr	r2, [pc, #20]	@ (800df80 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800df6a:	682b      	ldr	r3, [r5, #0]
 800df6c:	8812      	ldrh	r2, [r2, #0]
 800df6e:	9200      	str	r2, [sp, #0]
 800df70:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800df72:	e894 0006 	ldmia.w	r4, {r1, r2}
 800df76:	4603      	mov	r3, r0
 800df78:	4628      	mov	r0, r5
 800df7a:	47b0      	blx	r6
 800df7c:	b005      	add	sp, #20
 800df7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df80:	20002db6 	.word	0x20002db6

0800df84 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800df84:	b570      	push	{r4, r5, r6, lr}
 800df86:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800df8a:	4604      	mov	r4, r0
 800df8c:	b19b      	cbz	r3, 800dfb6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800df8e:	2002      	movs	r0, #2
 800df90:	f7fd f842 	bl	800b018 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800df94:	2300      	movs	r3, #0
 800df96:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800df9a:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800df9e:	6823      	ldr	r3, [r4, #0]
 800dfa0:	4620      	mov	r0, r4
 800dfa2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800dfa6:	f7ff fdbf 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800dfaa:	462b      	mov	r3, r5
 800dfac:	4601      	mov	r1, r0
 800dfae:	4620      	mov	r0, r4
 800dfb0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dfb4:	4718      	bx	r3
 800dfb6:	bd70      	pop	{r4, r5, r6, pc}

0800dfb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800dfb8:	b538      	push	{r3, r4, r5, lr}
 800dfba:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800dfbe:	428b      	cmp	r3, r1
 800dfc0:	4604      	mov	r4, r0
 800dfc2:	460d      	mov	r5, r1
 800dfc4:	d006      	beq.n	800dfd4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800dfc6:	6803      	ldr	r3, [r0, #0]
 800dfc8:	b929      	cbnz	r1, 800dfd6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800dfca:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800dfce:	4798      	blx	r3
 800dfd0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800dfd4:	bd38      	pop	{r3, r4, r5, pc}
 800dfd6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800dfda:	e7f8      	b.n	800dfce <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800dfdc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800dfdc:	b510      	push	{r4, lr}
 800dfde:	4b0d      	ldr	r3, [pc, #52]	@ (800e014 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800dfe0:	781b      	ldrb	r3, [r3, #0]
 800dfe2:	4604      	mov	r4, r0
 800dfe4:	b95b      	cbnz	r3, 800dffe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800dfe6:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800dfea:	2b02      	cmp	r3, #2
 800dfec:	d007      	beq.n	800dffe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800dfee:	6840      	ldr	r0, [r0, #4]
 800dff0:	f000 f90e 	bl	800e210 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800dff4:	b118      	cbz	r0, 800dffe <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800dff6:	6862      	ldr	r2, [r4, #4]
 800dff8:	7a53      	ldrb	r3, [r2, #9]
 800dffa:	2b00      	cmp	r3, #0
 800dffc:	d0fc      	beq.n	800dff8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800dffe:	f7fd fa95 	bl	800b52c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800e002:	4620      	mov	r0, r4
 800e004:	2100      	movs	r1, #0
 800e006:	f7ff ffd7 	bl	800dfb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800e00a:	4620      	mov	r0, r4
 800e00c:	f7ff fd8c 	bl	800db28 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e010:	bd10      	pop	{r4, pc}
 800e012:	bf00      	nop
 800e014:	20002dba 	.word	0x20002dba

0800e018 <_ZN8touchgfx13DMA_Interface5flushEv>:
 800e018:	6803      	ldr	r3, [r0, #0]
 800e01a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e01c:	4718      	bx	r3

0800e01e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800e01e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800e022:	1a13      	subs	r3, r2, r0
 800e024:	4258      	negs	r0, r3
 800e026:	4158      	adcs	r0, r3
 800e028:	4770      	bx	lr

0800e02a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800e02a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800e02e:	1a9b      	subs	r3, r3, r2
 800e030:	2b00      	cmp	r3, #0
 800e032:	bfdc      	itt	le
 800e034:	6882      	ldrle	r2, [r0, #8]
 800e036:	189b      	addle	r3, r3, r2
 800e038:	2b01      	cmp	r3, #1
 800e03a:	bfcc      	ite	gt
 800e03c:	2000      	movgt	r0, #0
 800e03e:	2001      	movle	r0, #1
 800e040:	4770      	bx	lr

0800e042 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800e042:	6902      	ldr	r2, [r0, #16]
 800e044:	6843      	ldr	r3, [r0, #4]
 800e046:	2024      	movs	r0, #36	@ 0x24
 800e048:	fb00 3002 	mla	r0, r0, r2, r3
 800e04c:	4770      	bx	lr

0800e04e <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800e04e:	6803      	ldr	r3, [r0, #0]
 800e050:	691b      	ldr	r3, [r3, #16]
 800e052:	4718      	bx	r3

0800e054 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800e054:	b570      	push	{r4, r5, r6, lr}
 800e056:	2301      	movs	r3, #1
 800e058:	7203      	strb	r3, [r0, #8]
 800e05a:	4604      	mov	r4, r0
 800e05c:	6840      	ldr	r0, [r0, #4]
 800e05e:	6803      	ldr	r3, [r0, #0]
 800e060:	699b      	ldr	r3, [r3, #24]
 800e062:	4798      	blx	r3
 800e064:	6803      	ldr	r3, [r0, #0]
 800e066:	2b40      	cmp	r3, #64	@ 0x40
 800e068:	4605      	mov	r5, r0
 800e06a:	d00c      	beq.n	800e086 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e06c:	d810      	bhi.n	800e090 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800e06e:	2b04      	cmp	r3, #4
 800e070:	d01d      	beq.n	800e0ae <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800e072:	d804      	bhi.n	800e07e <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800e074:	2b01      	cmp	r3, #1
 800e076:	d006      	beq.n	800e086 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e078:	2b02      	cmp	r3, #2
 800e07a:	d02c      	beq.n	800e0d6 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800e07c:	bd70      	pop	{r4, r5, r6, pc}
 800e07e:	2b08      	cmp	r3, #8
 800e080:	d01d      	beq.n	800e0be <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800e082:	2b20      	cmp	r3, #32
 800e084:	d1fa      	bne.n	800e07c <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800e086:	6823      	ldr	r3, [r4, #0]
 800e088:	4620      	mov	r0, r4
 800e08a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e08c:	4798      	blx	r3
 800e08e:	e013      	b.n	800e0b8 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800e090:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800e094:	d0f7      	beq.n	800e086 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e096:	d804      	bhi.n	800e0a2 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800e098:	2b80      	cmp	r3, #128	@ 0x80
 800e09a:	d0f4      	beq.n	800e086 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e09c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800e0a0:	e7f0      	b.n	800e084 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800e0a2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800e0a6:	d0ee      	beq.n	800e086 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800e0a8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800e0ac:	e7e5      	b.n	800e07a <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800e0ae:	6823      	ldr	r3, [r4, #0]
 800e0b0:	7f01      	ldrb	r1, [r0, #28]
 800e0b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e0b4:	4620      	mov	r0, r4
 800e0b6:	4798      	blx	r3
 800e0b8:	6823      	ldr	r3, [r4, #0]
 800e0ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e0bc:	e006      	b.n	800e0cc <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800e0be:	6823      	ldr	r3, [r4, #0]
 800e0c0:	7f01      	ldrb	r1, [r0, #28]
 800e0c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e0c4:	4620      	mov	r0, r4
 800e0c6:	4798      	blx	r3
 800e0c8:	6823      	ldr	r3, [r4, #0]
 800e0ca:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e0cc:	4629      	mov	r1, r5
 800e0ce:	4620      	mov	r0, r4
 800e0d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e0d4:	4718      	bx	r3
 800e0d6:	6823      	ldr	r3, [r4, #0]
 800e0d8:	4620      	mov	r0, r4
 800e0da:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800e0dc:	4798      	blx	r3
 800e0de:	e7f3      	b.n	800e0c8 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800e0e0 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800e0e0:	4770      	bx	lr

0800e0e2 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800e0e2:	4770      	bx	lr

0800e0e4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800e0e4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800e0e8:	1ad2      	subs	r2, r2, r3
 800e0ea:	2a00      	cmp	r2, #0
 800e0ec:	b510      	push	{r4, lr}
 800e0ee:	bfdc      	itt	le
 800e0f0:	6884      	ldrle	r4, [r0, #8]
 800e0f2:	1912      	addle	r2, r2, r4
 800e0f4:	2a01      	cmp	r2, #1
 800e0f6:	dd16      	ble.n	800e126 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800e0f8:	6842      	ldr	r2, [r0, #4]
 800e0fa:	2424      	movs	r4, #36	@ 0x24
 800e0fc:	fb04 2303 	mla	r3, r4, r3, r2
 800e100:	f101 0220 	add.w	r2, r1, #32
 800e104:	f851 4b04 	ldr.w	r4, [r1], #4
 800e108:	f843 4b04 	str.w	r4, [r3], #4
 800e10c:	4291      	cmp	r1, r2
 800e10e:	d1f9      	bne.n	800e104 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800e110:	780a      	ldrb	r2, [r1, #0]
 800e112:	701a      	strb	r2, [r3, #0]
 800e114:	68c3      	ldr	r3, [r0, #12]
 800e116:	6882      	ldr	r2, [r0, #8]
 800e118:	f3bf 8f5b 	dmb	ish
 800e11c:	3301      	adds	r3, #1
 800e11e:	429a      	cmp	r2, r3
 800e120:	bfd8      	it	le
 800e122:	1a9b      	suble	r3, r3, r2
 800e124:	60c3      	str	r3, [r0, #12]
 800e126:	bd10      	pop	{r4, pc}

0800e128 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800e128:	6903      	ldr	r3, [r0, #16]
 800e12a:	6882      	ldr	r2, [r0, #8]
 800e12c:	f3bf 8f5b 	dmb	ish
 800e130:	3301      	adds	r3, #1
 800e132:	429a      	cmp	r2, r3
 800e134:	bfd8      	it	le
 800e136:	1a9b      	suble	r3, r3, r2
 800e138:	6103      	str	r3, [r0, #16]
 800e13a:	4770      	bx	lr

0800e13c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800e13c:	b570      	push	{r4, r5, r6, lr}
 800e13e:	4604      	mov	r4, r0
 800e140:	460e      	mov	r6, r1
 800e142:	6860      	ldr	r0, [r4, #4]
 800e144:	6803      	ldr	r3, [r0, #0]
 800e146:	685b      	ldr	r3, [r3, #4]
 800e148:	4798      	blx	r3
 800e14a:	2800      	cmp	r0, #0
 800e14c:	d1f9      	bne.n	800e142 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800e14e:	4d0d      	ldr	r5, [pc, #52]	@ (800e184 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800e150:	6828      	ldr	r0, [r5, #0]
 800e152:	6803      	ldr	r3, [r0, #0]
 800e154:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e156:	4798      	blx	r3
 800e158:	f7fd fa0a 	bl	800b570 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800e15c:	6828      	ldr	r0, [r5, #0]
 800e15e:	2101      	movs	r1, #1
 800e160:	f7ff ff2a 	bl	800dfb8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800e164:	6860      	ldr	r0, [r4, #4]
 800e166:	6803      	ldr	r3, [r0, #0]
 800e168:	4631      	mov	r1, r6
 800e16a:	689b      	ldr	r3, [r3, #8]
 800e16c:	4798      	blx	r3
 800e16e:	6823      	ldr	r3, [r4, #0]
 800e170:	4620      	mov	r0, r4
 800e172:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e174:	4798      	blx	r3
 800e176:	6828      	ldr	r0, [r5, #0]
 800e178:	6803      	ldr	r3, [r0, #0]
 800e17a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e17e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800e180:	4718      	bx	r3
 800e182:	bf00      	nop
 800e184:	20002dbc 	.word	0x20002dbc

0800e188 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800e188:	b508      	push	{r3, lr}
 800e18a:	f7fd f9cf 	bl	800b52c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800e18e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800e192:	f7fd b9e1 	b.w	800b558 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800e196 <_ZN8touchgfx13DMA_Interface5startEv>:
 800e196:	b510      	push	{r4, lr}
 800e198:	4604      	mov	r4, r0
 800e19a:	6840      	ldr	r0, [r0, #4]
 800e19c:	6803      	ldr	r3, [r0, #0]
 800e19e:	681b      	ldr	r3, [r3, #0]
 800e1a0:	4798      	blx	r3
 800e1a2:	b948      	cbnz	r0, 800e1b8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e1a4:	7a63      	ldrb	r3, [r4, #9]
 800e1a6:	b13b      	cbz	r3, 800e1b8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e1a8:	7a23      	ldrb	r3, [r4, #8]
 800e1aa:	b92b      	cbnz	r3, 800e1b8 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800e1ac:	6823      	ldr	r3, [r4, #0]
 800e1ae:	4620      	mov	r0, r4
 800e1b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e1b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e1b6:	4718      	bx	r3
 800e1b8:	bd10      	pop	{r4, pc}

0800e1ba <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800e1ba:	b570      	push	{r4, r5, r6, lr}
 800e1bc:	4604      	mov	r4, r0
 800e1be:	6840      	ldr	r0, [r0, #4]
 800e1c0:	6803      	ldr	r3, [r0, #0]
 800e1c2:	681b      	ldr	r3, [r3, #0]
 800e1c4:	4798      	blx	r3
 800e1c6:	4605      	mov	r5, r0
 800e1c8:	b930      	cbnz	r0, 800e1d8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800e1ca:	7a23      	ldrb	r3, [r4, #8]
 800e1cc:	b123      	cbz	r3, 800e1d8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800e1ce:	6860      	ldr	r0, [r4, #4]
 800e1d0:	6803      	ldr	r3, [r0, #0]
 800e1d2:	695b      	ldr	r3, [r3, #20]
 800e1d4:	4798      	blx	r3
 800e1d6:	7225      	strb	r5, [r4, #8]
 800e1d8:	6860      	ldr	r0, [r4, #4]
 800e1da:	6803      	ldr	r3, [r0, #0]
 800e1dc:	681b      	ldr	r3, [r3, #0]
 800e1de:	4798      	blx	r3
 800e1e0:	b928      	cbnz	r0, 800e1ee <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800e1e2:	6823      	ldr	r3, [r4, #0]
 800e1e4:	4620      	mov	r0, r4
 800e1e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e1e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1ec:	4718      	bx	r3
 800e1ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e1f2:	f7fd b9c9 	b.w	800b588 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800e1f8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800e1f8:	b510      	push	{r4, lr}
 800e1fa:	4c04      	ldr	r4, [pc, #16]	@ (800e20c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800e1fc:	6082      	str	r2, [r0, #8]
 800e1fe:	2200      	movs	r2, #0
 800e200:	e9c0 4100 	strd	r4, r1, [r0]
 800e204:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800e208:	bd10      	pop	{r4, pc}
 800e20a:	bf00      	nop
 800e20c:	08024ea0 	.word	0x08024ea0

0800e210 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800e210:	6840      	ldr	r0, [r0, #4]
 800e212:	6803      	ldr	r3, [r0, #0]
 800e214:	681b      	ldr	r3, [r3, #0]
 800e216:	4718      	bx	r3

0800e218 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800e218:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800e21c:	4770      	bx	lr

0800e21e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800e21e:	b510      	push	{r4, lr}
 800e220:	4604      	mov	r4, r0
 800e222:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800e224:	b150      	cbz	r0, 800e23c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e226:	6803      	ldr	r3, [r0, #0]
 800e228:	68db      	ldr	r3, [r3, #12]
 800e22a:	4798      	blx	r3
 800e22c:	b130      	cbz	r0, 800e23c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800e22e:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800e230:	6803      	ldr	r3, [r0, #0]
 800e232:	4621      	mov	r1, r4
 800e234:	689b      	ldr	r3, [r3, #8]
 800e236:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e23a:	4718      	bx	r3
 800e23c:	bd10      	pop	{r4, pc}

0800e23e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800e23e:	b570      	push	{r4, r5, r6, lr}
 800e240:	790b      	ldrb	r3, [r1, #4]
 800e242:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 800e246:	2b00      	cmp	r3, #0
 800e248:	bf0c      	ite	eq
 800e24a:	2301      	moveq	r3, #1
 800e24c:	2300      	movne	r3, #0
 800e24e:	4604      	mov	r4, r0
 800e250:	460e      	mov	r6, r1
 800e252:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800e256:	d109      	bne.n	800e26c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800e258:	b14d      	cbz	r5, 800e26e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800e25a:	7933      	ldrb	r3, [r6, #4]
 800e25c:	2b01      	cmp	r3, #1
 800e25e:	d10c      	bne.n	800e27a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800e260:	6823      	ldr	r3, [r4, #0]
 800e262:	4620      	mov	r0, r4
 800e264:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800e266:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e26a:	4718      	bx	r3
 800e26c:	b12d      	cbz	r5, 800e27a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800e26e:	6823      	ldr	r3, [r4, #0]
 800e270:	4620      	mov	r0, r4
 800e272:	695b      	ldr	r3, [r3, #20]
 800e274:	4798      	blx	r3
 800e276:	2d00      	cmp	r5, #0
 800e278:	d1ef      	bne.n	800e25a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800e27a:	bd70      	pop	{r4, r5, r6, pc}

0800e27c <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800e27c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800e280:	b133      	cbz	r3, 800e290 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800e282:	790b      	ldrb	r3, [r1, #4]
 800e284:	2b01      	cmp	r3, #1
 800e286:	bf01      	itttt	eq
 800e288:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 800e28a:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 800e28c:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 800e28e:	8603      	strheq	r3, [r0, #48]	@ 0x30
 800e290:	f7ff bfd5 	b.w	800e23e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800e294 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800e294:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800e298:	b12a      	cbz	r2, 800e2a6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e29a:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800e29e:	b112      	cbz	r2, 800e2a6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800e2a0:	6803      	ldr	r3, [r0, #0]
 800e2a2:	695b      	ldr	r3, [r3, #20]
 800e2a4:	4718      	bx	r3
 800e2a6:	4770      	bx	lr

0800e2a8 <_ZN8touchgfx12ToggleButton10forceStateEb>:
 800e2a8:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
 800e2aa:	b129      	cbz	r1, 800e2b8 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 800e2ac:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
 800e2ae:	429a      	cmp	r2, r3
 800e2b0:	d007      	beq.n	800e2c2 <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 800e2b2:	8602      	strh	r2, [r0, #48]	@ 0x30
 800e2b4:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800e2b6:	4770      	bx	lr
 800e2b8:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800e2ba:	429a      	cmp	r2, r3
 800e2bc:	bf1c      	itt	ne
 800e2be:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
 800e2c0:	8603      	strhne	r3, [r0, #48]	@ 0x30
 800e2c2:	4770      	bx	lr

0800e2c4 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800e2c4:	2000      	movs	r0, #0
 800e2c6:	4770      	bx	lr

0800e2c8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800e2c8:	4b07      	ldr	r3, [pc, #28]	@ (800e2e8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800e2ca:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e2cc:	881b      	ldrh	r3, [r3, #0]
 800e2ce:	4293      	cmp	r3, r2
 800e2d0:	bf81      	itttt	hi
 800e2d2:	4b06      	ldrhi	r3, [pc, #24]	@ (800e2ec <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800e2d4:	681b      	ldrhi	r3, [r3, #0]
 800e2d6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800e2da:	7858      	ldrbhi	r0, [r3, #1]
 800e2dc:	bf8c      	ite	hi
 800e2de:	f000 0003 	andhi.w	r0, r0, #3
 800e2e2:	2000      	movls	r0, #0
 800e2e4:	4770      	bx	lr
 800e2e6:	bf00      	nop
 800e2e8:	20002e10 	.word	0x20002e10
 800e2ec:	20002e0c 	.word	0x20002e0c

0800e2f0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800e2f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2f4:	4b10      	ldr	r3, [pc, #64]	@ (800e338 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800e2f6:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e2f8:	881b      	ldrh	r3, [r3, #0]
 800e2fa:	428b      	cmp	r3, r1
 800e2fc:	4604      	mov	r4, r0
 800e2fe:	d918      	bls.n	800e332 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800e300:	6803      	ldr	r3, [r0, #0]
 800e302:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800e304:	4b0d      	ldr	r3, [pc, #52]	@ (800e33c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800e306:	6818      	ldr	r0, [r3, #0]
 800e308:	f7fc faaa 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800e30c:	6823      	ldr	r3, [r4, #0]
 800e30e:	4606      	mov	r6, r0
 800e310:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e312:	4620      	mov	r0, r4
 800e314:	4798      	blx	r3
 800e316:	6823      	ldr	r3, [r4, #0]
 800e318:	4607      	mov	r7, r0
 800e31a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e31e:	4620      	mov	r0, r4
 800e320:	4798      	blx	r3
 800e322:	463a      	mov	r2, r7
 800e324:	4603      	mov	r3, r0
 800e326:	4631      	mov	r1, r6
 800e328:	4620      	mov	r0, r4
 800e32a:	46ac      	mov	ip, r5
 800e32c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e330:	4760      	bx	ip
 800e332:	2000      	movs	r0, #0
 800e334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e338:	20002e10 	.word	0x20002e10
 800e33c:	20002e18 	.word	0x20002e18

0800e340 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e340:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e344:	4b17      	ldr	r3, [pc, #92]	@ (800e3a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e346:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e348:	881b      	ldrh	r3, [r3, #0]
 800e34a:	428b      	cmp	r3, r1
 800e34c:	4604      	mov	r4, r0
 800e34e:	d926      	bls.n	800e39e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800e350:	4b15      	ldr	r3, [pc, #84]	@ (800e3a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e352:	681b      	ldr	r3, [r3, #0]
 800e354:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e358:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e35c:	4b13      	ldr	r3, [pc, #76]	@ (800e3ac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e35e:	7855      	ldrb	r5, [r2, #1]
 800e360:	681b      	ldr	r3, [r3, #0]
 800e362:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800e366:	6833      	ldr	r3, [r6, #0]
 800e368:	69df      	ldr	r7, [r3, #28]
 800e36a:	4b11      	ldr	r3, [pc, #68]	@ (800e3b0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e36c:	6818      	ldr	r0, [r3, #0]
 800e36e:	f7fc fa77 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800e372:	6823      	ldr	r3, [r4, #0]
 800e374:	4680      	mov	r8, r0
 800e376:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e378:	4620      	mov	r0, r4
 800e37a:	4798      	blx	r3
 800e37c:	6823      	ldr	r3, [r4, #0]
 800e37e:	4681      	mov	r9, r0
 800e380:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e384:	4620      	mov	r0, r4
 800e386:	4798      	blx	r3
 800e388:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800e38c:	9000      	str	r0, [sp, #0]
 800e38e:	464b      	mov	r3, r9
 800e390:	4642      	mov	r2, r8
 800e392:	4629      	mov	r1, r5
 800e394:	4630      	mov	r0, r6
 800e396:	47b8      	blx	r7
 800e398:	b003      	add	sp, #12
 800e39a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e39e:	2000      	movs	r0, #0
 800e3a0:	e7fa      	b.n	800e398 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800e3a2:	bf00      	nop
 800e3a4:	20002e10 	.word	0x20002e10
 800e3a8:	20002e0c 	.word	0x20002e0c
 800e3ac:	20002e14 	.word	0x20002e14
 800e3b0:	20002e18 	.word	0x20002e18

0800e3b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e3b4:	b40e      	push	{r1, r2, r3}
 800e3b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e3ba:	4b2f      	ldr	r3, [pc, #188]	@ (800e478 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800e3bc:	881a      	ldrh	r2, [r3, #0]
 800e3be:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800e3c0:	429a      	cmp	r2, r3
 800e3c2:	b09d      	sub	sp, #116	@ 0x74
 800e3c4:	4604      	mov	r4, r0
 800e3c6:	d954      	bls.n	800e472 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800e3c8:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800e47c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800e3cc:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800e480 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e3d0:	aa26      	add	r2, sp, #152	@ 0x98
 800e3d2:	9202      	str	r2, [sp, #8]
 800e3d4:	f8d9 2000 	ldr.w	r2, [r9]
 800e3d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e3dc:	f8d8 3000 	ldr.w	r3, [r8]
 800e3e0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e3e4:	682b      	ldr	r3, [r5, #0]
 800e3e6:	4628      	mov	r0, r5
 800e3e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e3ea:	4798      	blx	r3
 800e3ec:	b207      	sxth	r7, r0
 800e3ee:	4606      	mov	r6, r0
 800e3f0:	a803      	add	r0, sp, #12
 800e3f2:	f003 fe5b 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 800e3f6:	682b      	ldr	r3, [r5, #0]
 800e3f8:	4628      	mov	r0, r5
 800e3fa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e3fc:	4798      	blx	r3
 800e3fe:	682b      	ldr	r3, [r5, #0]
 800e400:	4682      	mov	sl, r0
 800e402:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e404:	4628      	mov	r0, r5
 800e406:	4798      	blx	r3
 800e408:	4653      	mov	r3, sl
 800e40a:	9000      	str	r0, [sp, #0]
 800e40c:	9a02      	ldr	r2, [sp, #8]
 800e40e:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800e410:	a803      	add	r0, sp, #12
 800e412:	f003 fea6 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e416:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e418:	f8d9 3000 	ldr.w	r3, [r9]
 800e41c:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800e420:	8925      	ldrh	r5, [r4, #8]
 800e422:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e426:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e42a:	eba5 050c 	sub.w	r5, r5, ip
 800e42e:	784a      	ldrb	r2, [r1, #1]
 800e430:	f8d8 3000 	ldr.w	r3, [r8]
 800e434:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800e438:	b22d      	sxth	r5, r5
 800e43a:	9500      	str	r5, [sp, #0]
 800e43c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e440:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e444:	a803      	add	r0, sp, #12
 800e446:	f001 fce1 	bl	800fe0c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e44a:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800e44e:	18b9      	adds	r1, r7, r2
 800e450:	2900      	cmp	r1, #0
 800e452:	b203      	sxth	r3, r0
 800e454:	dd0b      	ble.n	800e46e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e456:	3b01      	subs	r3, #1
 800e458:	fb13 f302 	smulbb	r3, r3, r2
 800e45c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e460:	b21f      	sxth	r7, r3
 800e462:	4638      	mov	r0, r7
 800e464:	b01d      	add	sp, #116	@ 0x74
 800e466:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e46a:	b003      	add	sp, #12
 800e46c:	4770      	bx	lr
 800e46e:	2b00      	cmp	r3, #0
 800e470:	dcf7      	bgt.n	800e462 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e472:	2700      	movs	r7, #0
 800e474:	e7f5      	b.n	800e462 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e476:	bf00      	nop
 800e478:	20002e10 	.word	0x20002e10
 800e47c:	20002e0c 	.word	0x20002e0c
 800e480:	20002e14 	.word	0x20002e14

0800e484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e484:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e488:	4bbc      	ldr	r3, [pc, #752]	@ (800e77c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e48a:	460c      	mov	r4, r1
 800e48c:	881b      	ldrh	r3, [r3, #0]
 800e48e:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800e490:	428b      	cmp	r3, r1
 800e492:	b0a9      	sub	sp, #164	@ 0xa4
 800e494:	4680      	mov	r8, r0
 800e496:	d809      	bhi.n	800e4ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e498:	2300      	movs	r3, #0
 800e49a:	f04f 32ff 	mov.w	r2, #4294967295
 800e49e:	e9c0 3200 	strd	r3, r2, [r0]
 800e4a2:	6083      	str	r3, [r0, #8]
 800e4a4:	4640      	mov	r0, r8
 800e4a6:	b029      	add	sp, #164	@ 0xa4
 800e4a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4ac:	4eb4      	ldr	r6, [pc, #720]	@ (800e780 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800e4ae:	6833      	ldr	r3, [r6, #0]
 800e4b0:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e4b4:	4bb3      	ldr	r3, [pc, #716]	@ (800e784 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800e4b6:	681b      	ldr	r3, [r3, #0]
 800e4b8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e4bc:	4bb2      	ldr	r3, [pc, #712]	@ (800e788 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e4be:	6818      	ldr	r0, [r3, #0]
 800e4c0:	f7fc f9ce 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800e4c4:	682b      	ldr	r3, [r5, #0]
 800e4c6:	4681      	mov	r9, r0
 800e4c8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e4ca:	4628      	mov	r0, r5
 800e4cc:	4798      	blx	r3
 800e4ce:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800e4d0:	b203      	sxth	r3, r0
 800e4d2:	4407      	add	r7, r0
 800e4d4:	9304      	str	r3, [sp, #16]
 800e4d6:	b2bb      	uxth	r3, r7
 800e4d8:	9303      	str	r3, [sp, #12]
 800e4da:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800e4de:	4682      	mov	sl, r0
 800e4e0:	a80f      	add	r0, sp, #60	@ 0x3c
 800e4e2:	2b00      	cmp	r3, #0
 800e4e4:	f040 80a6 	bne.w	800e634 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800e4e8:	f003 fde0 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 800e4ec:	682b      	ldr	r3, [r5, #0]
 800e4ee:	4628      	mov	r0, r5
 800e4f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e4f2:	4798      	blx	r3
 800e4f4:	682b      	ldr	r3, [r5, #0]
 800e4f6:	4606      	mov	r6, r0
 800e4f8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e4fa:	4628      	mov	r0, r5
 800e4fc:	4798      	blx	r3
 800e4fe:	6823      	ldr	r3, [r4, #0]
 800e500:	4607      	mov	r7, r0
 800e502:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e504:	4620      	mov	r0, r4
 800e506:	4798      	blx	r3
 800e508:	6823      	ldr	r3, [r4, #0]
 800e50a:	4683      	mov	fp, r0
 800e50c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e510:	4620      	mov	r0, r4
 800e512:	4798      	blx	r3
 800e514:	463b      	mov	r3, r7
 800e516:	e9cd b000 	strd	fp, r0, [sp]
 800e51a:	4649      	mov	r1, r9
 800e51c:	4632      	mov	r2, r6
 800e51e:	a80f      	add	r0, sp, #60	@ 0x3c
 800e520:	f003 fe34 	bl	801218c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e524:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e528:	f8df b254 	ldr.w	fp, [pc, #596]	@ 800e780 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e52c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e530:	f04f 0600 	mov.w	r6, #0
 800e534:	bf0c      	ite	eq
 800e536:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800e53a:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800e53e:	4637      	mov	r7, r6
 800e540:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e542:	f8db 3000 	ldr.w	r3, [fp]
 800e546:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e54a:	4629      	mov	r1, r5
 800e54c:	785b      	ldrb	r3, [r3, #1]
 800e54e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800e552:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e556:	a80f      	add	r0, sp, #60	@ 0x3c
 800e558:	f001 f95f 	bl	800f81a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e55c:	9b03      	ldr	r3, [sp, #12]
 800e55e:	4286      	cmp	r6, r0
 800e560:	bfb8      	it	lt
 800e562:	4606      	movlt	r6, r0
 800e564:	3701      	adds	r7, #1
 800e566:	eba9 0903 	sub.w	r9, r9, r3
 800e56a:	a80f      	add	r0, sp, #60	@ 0x3c
 800e56c:	b236      	sxth	r6, r6
 800e56e:	b2bf      	uxth	r7, r7
 800e570:	fa0f f989 	sxth.w	r9, r9
 800e574:	f003 fdc1 	bl	80120fa <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e578:	b918      	cbnz	r0, 800e582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e57a:	7a2b      	ldrb	r3, [r5, #8]
 800e57c:	444b      	add	r3, r9
 800e57e:	2b00      	cmp	r3, #0
 800e580:	dcde      	bgt.n	800e540 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800e582:	9b03      	ldr	r3, [sp, #12]
 800e584:	9a04      	ldr	r2, [sp, #16]
 800e586:	f895 9009 	ldrb.w	r9, [r5, #9]
 800e58a:	fb13 f707 	smulbb	r7, r3, r7
 800e58e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800e590:	1aff      	subs	r7, r7, r3
 800e592:	b2bf      	uxth	r7, r7
 800e594:	b23b      	sxth	r3, r7
 800e596:	429a      	cmp	r2, r3
 800e598:	bfa8      	it	ge
 800e59a:	4657      	movge	r7, sl
 800e59c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e5a0:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e5a4:	6823      	ldr	r3, [r4, #0]
 800e5a6:	bf08      	it	eq
 800e5a8:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800e5ac:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e5ae:	bf18      	it	ne
 800e5b0:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800e5b4:	4620      	mov	r0, r4
 800e5b6:	4798      	blx	r3
 800e5b8:	444f      	add	r7, r9
 800e5ba:	fa1f f987 	uxth.w	r9, r7
 800e5be:	2801      	cmp	r0, #1
 800e5c0:	fa0f f789 	sxth.w	r7, r9
 800e5c4:	b2b3      	uxth	r3, r6
 800e5c6:	f000 80e1 	beq.w	800e78c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800e5ca:	2802      	cmp	r0, #2
 800e5cc:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800e5d0:	f000 80e2 	beq.w	800e798 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800e5d4:	7aea      	ldrb	r2, [r5, #11]
 800e5d6:	7b2d      	ldrb	r5, [r5, #12]
 800e5d8:	b236      	sxth	r6, r6
 800e5da:	1ab6      	subs	r6, r6, r2
 800e5dc:	442a      	add	r2, r5
 800e5de:	4413      	add	r3, r2
 800e5e0:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800e5e4:	fa1f fa86 	uxth.w	sl, r6
 800e5e8:	b29b      	uxth	r3, r3
 800e5ea:	2a02      	cmp	r2, #2
 800e5ec:	fa0f fb8a 	sxth.w	fp, sl
 800e5f0:	b21e      	sxth	r6, r3
 800e5f2:	f000 80d5 	beq.w	800e7a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800e5f6:	2a03      	cmp	r2, #3
 800e5f8:	f000 80dd 	beq.w	800e7b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800e5fc:	2a01      	cmp	r2, #1
 800e5fe:	f040 80e5 	bne.w	800e7cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800e602:	8925      	ldrh	r5, [r4, #8]
 800e604:	4633      	mov	r3, r6
 800e606:	eba5 0909 	sub.w	r9, r5, r9
 800e60a:	463e      	mov	r6, r7
 800e60c:	465d      	mov	r5, fp
 800e60e:	461f      	mov	r7, r3
 800e610:	fa0f fb89 	sxth.w	fp, r9
 800e614:	4b5c      	ldr	r3, [pc, #368]	@ (800e788 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e616:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e618:	6818      	ldr	r0, [r3, #0]
 800e61a:	f7fc f921 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800e61e:	f8a8 b000 	strh.w	fp, [r8]
 800e622:	f8a8 5002 	strh.w	r5, [r8, #2]
 800e626:	f8a8 6004 	strh.w	r6, [r8, #4]
 800e62a:	f8a8 7006 	strh.w	r7, [r8, #6]
 800e62e:	f8c8 0008 	str.w	r0, [r8, #8]
 800e632:	e737      	b.n	800e4a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e634:	f003 fd3a 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 800e638:	682b      	ldr	r3, [r5, #0]
 800e63a:	4628      	mov	r0, r5
 800e63c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800e63e:	4798      	blx	r3
 800e640:	682b      	ldr	r3, [r5, #0]
 800e642:	4607      	mov	r7, r0
 800e644:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800e646:	4628      	mov	r0, r5
 800e648:	4798      	blx	r3
 800e64a:	6823      	ldr	r3, [r4, #0]
 800e64c:	4683      	mov	fp, r0
 800e64e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e650:	4620      	mov	r0, r4
 800e652:	4798      	blx	r3
 800e654:	6822      	ldr	r2, [r4, #0]
 800e656:	9005      	str	r0, [sp, #20]
 800e658:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800e65c:	4620      	mov	r0, r4
 800e65e:	4790      	blx	r2
 800e660:	9b05      	ldr	r3, [sp, #20]
 800e662:	9001      	str	r0, [sp, #4]
 800e664:	463a      	mov	r2, r7
 800e666:	4649      	mov	r1, r9
 800e668:	9300      	str	r3, [sp, #0]
 800e66a:	a80f      	add	r0, sp, #60	@ 0x3c
 800e66c:	465b      	mov	r3, fp
 800e66e:	f003 fd8d 	bl	801218c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e672:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e676:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800e67a:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e67c:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800e680:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e684:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e688:	bf0a      	itet	eq
 800e68a:	464a      	moveq	r2, r9
 800e68c:	461a      	movne	r2, r3
 800e68e:	4699      	moveq	r9, r3
 800e690:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800e694:	1ad2      	subs	r2, r2, r3
 800e696:	6833      	ldr	r3, [r6, #0]
 800e698:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800e69c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e6a0:	af0f      	add	r7, sp, #60	@ 0x3c
 800e6a2:	7859      	ldrb	r1, [r3, #1]
 800e6a4:	9707      	str	r7, [sp, #28]
 800e6a6:	2300      	movs	r3, #0
 800e6a8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e6ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e6b0:	f88d 1020 	strb.w	r1, [sp, #32]
 800e6b4:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800e6b8:	9509      	str	r5, [sp, #36]	@ 0x24
 800e6ba:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800e6be:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800e6c2:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800e6c6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800e6ca:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800e6ce:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800e6d2:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800e6d6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e6da:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e6de:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800e6e2:	b350      	cbz	r0, 800e73a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e6e4:	682b      	ldr	r3, [r5, #0]
 800e6e6:	4628      	mov	r0, r5
 800e6e8:	695b      	ldr	r3, [r3, #20]
 800e6ea:	4798      	blx	r3
 800e6ec:	4607      	mov	r7, r0
 800e6ee:	b320      	cbz	r0, 800e73a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e6f0:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e6f2:	6803      	ldr	r3, [r0, #0]
 800e6f4:	4639      	mov	r1, r7
 800e6f6:	68db      	ldr	r3, [r3, #12]
 800e6f8:	4798      	blx	r3
 800e6fa:	4606      	mov	r6, r0
 800e6fc:	b1e8      	cbz	r0, 800e73a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e6fe:	7b43      	ldrb	r3, [r0, #13]
 800e700:	7a82      	ldrb	r2, [r0, #10]
 800e702:	005b      	lsls	r3, r3, #1
 800e704:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800e708:	4313      	orrs	r3, r2
 800e70a:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800e70e:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800e712:	2b06      	cmp	r3, #6
 800e714:	d111      	bne.n	800e73a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e716:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800e718:	6803      	ldr	r3, [r0, #0]
 800e71a:	4632      	mov	r2, r6
 800e71c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800e71e:	4639      	mov	r1, r7
 800e720:	4798      	blx	r3
 800e722:	7b73      	ldrb	r3, [r6, #13]
 800e724:	005b      	lsls	r3, r3, #1
 800e726:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800e72a:	7ab3      	ldrb	r3, [r6, #10]
 800e72c:	4313      	orrs	r3, r2
 800e72e:	4418      	add	r0, r3
 800e730:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800e734:	4418      	add	r0, r3
 800e736:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800e73a:	2600      	movs	r6, #0
 800e73c:	4637      	mov	r7, r6
 800e73e:	a806      	add	r0, sp, #24
 800e740:	f001 fa60 	bl	800fc04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e744:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800e748:	9b03      	ldr	r3, [sp, #12]
 800e74a:	4286      	cmp	r6, r0
 800e74c:	eba9 0903 	sub.w	r9, r9, r3
 800e750:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e754:	bfb8      	it	lt
 800e756:	4606      	movlt	r6, r0
 800e758:	3701      	adds	r7, #1
 800e75a:	b236      	sxth	r6, r6
 800e75c:	b2bf      	uxth	r7, r7
 800e75e:	fa0f f989 	sxth.w	r9, r9
 800e762:	2b00      	cmp	r3, #0
 800e764:	f43f af0d 	beq.w	800e582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e768:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 800e76c:	2b00      	cmp	r3, #0
 800e76e:	f47f af08 	bne.w	800e582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e772:	7a2b      	ldrb	r3, [r5, #8]
 800e774:	444b      	add	r3, r9
 800e776:	2b00      	cmp	r3, #0
 800e778:	dce1      	bgt.n	800e73e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800e77a:	e702      	b.n	800e582 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e77c:	20002e10 	.word	0x20002e10
 800e780:	20002e0c 	.word	0x20002e0c
 800e784:	20002e14 	.word	0x20002e14
 800e788:	20002e18 	.word	0x20002e18
 800e78c:	ebaa 0606 	sub.w	r6, sl, r6
 800e790:	2002      	movs	r0, #2
 800e792:	fb96 f6f0 	sdiv	r6, r6, r0
 800e796:	e71d      	b.n	800e5d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e798:	441e      	add	r6, r3
 800e79a:	ebaa 0606 	sub.w	r6, sl, r6
 800e79e:	e719      	b.n	800e5d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e7a0:	8925      	ldrh	r5, [r4, #8]
 800e7a2:	1aed      	subs	r5, r5, r3
 800e7a4:	eba5 050a 	sub.w	r5, r5, sl
 800e7a8:	fa0f fb85 	sxth.w	fp, r5
 800e7ac:	8965      	ldrh	r5, [r4, #10]
 800e7ae:	eba5 0509 	sub.w	r5, r5, r9
 800e7b2:	b22d      	sxth	r5, r5
 800e7b4:	e72e      	b.n	800e614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e7b6:	8965      	ldrh	r5, [r4, #10]
 800e7b8:	1aed      	subs	r5, r5, r3
 800e7ba:	eba5 050a 	sub.w	r5, r5, sl
 800e7be:	4633      	mov	r3, r6
 800e7c0:	b22d      	sxth	r5, r5
 800e7c2:	463e      	mov	r6, r7
 800e7c4:	f04f 0b00 	mov.w	fp, #0
 800e7c8:	461f      	mov	r7, r3
 800e7ca:	e723      	b.n	800e614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e7cc:	2500      	movs	r5, #0
 800e7ce:	e721      	b.n	800e614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800e7d0 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e7d0:	b513      	push	{r0, r1, r4, lr}
 800e7d2:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 800e7d6:	4604      	mov	r4, r0
 800e7d8:	b1fb      	cbz	r3, 800e81a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e7da:	4b16      	ldr	r3, [pc, #88]	@ (800e834 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e7dc:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800e7de:	881b      	ldrh	r3, [r3, #0]
 800e7e0:	428b      	cmp	r3, r1
 800e7e2:	d91a      	bls.n	800e81a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e7e4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e7e8:	2b00      	cmp	r3, #0
 800e7ea:	dd16      	ble.n	800e81a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e7ec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e7f0:	2b00      	cmp	r3, #0
 800e7f2:	dd12      	ble.n	800e81a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e7f4:	4b10      	ldr	r3, [pc, #64]	@ (800e838 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e7f6:	6818      	ldr	r0, [r3, #0]
 800e7f8:	f7fc f832 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800e7fc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e800:	6822      	ldr	r2, [r4, #0]
 800e802:	2b00      	cmp	r3, #0
 800e804:	db06      	blt.n	800e814 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e806:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e80a:	2b00      	cmp	r3, #0
 800e80c:	db02      	blt.n	800e814 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e80e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e810:	4298      	cmp	r0, r3
 800e812:	d004      	beq.n	800e81e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e814:	6953      	ldr	r3, [r2, #20]
 800e816:	4620      	mov	r0, r4
 800e818:	4798      	blx	r3
 800e81a:	b002      	add	sp, #8
 800e81c:	bd10      	pop	{r4, pc}
 800e81e:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 800e822:	c903      	ldmia	r1, {r0, r1}
 800e824:	466b      	mov	r3, sp
 800e826:	e883 0003 	stmia.w	r3, {r0, r1}
 800e82a:	6912      	ldr	r2, [r2, #16]
 800e82c:	4619      	mov	r1, r3
 800e82e:	4620      	mov	r0, r4
 800e830:	4790      	blx	r2
 800e832:	e7f2      	b.n	800e81a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e834:	20002e10 	.word	0x20002e10
 800e838:	20002e18 	.word	0x20002e18

0800e83c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e83c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e840:	4b44      	ldr	r3, [pc, #272]	@ (800e954 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e842:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e844:	881b      	ldrh	r3, [r3, #0]
 800e846:	4293      	cmp	r3, r2
 800e848:	b08e      	sub	sp, #56	@ 0x38
 800e84a:	4604      	mov	r4, r0
 800e84c:	d97e      	bls.n	800e94c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e84e:	6808      	ldr	r0, [r1, #0]
 800e850:	4d41      	ldr	r5, [pc, #260]	@ (800e958 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e852:	6849      	ldr	r1, [r1, #4]
 800e854:	ab05      	add	r3, sp, #20
 800e856:	c303      	stmia	r3!, {r0, r1}
 800e858:	4611      	mov	r1, r2
 800e85a:	6828      	ldr	r0, [r5, #0]
 800e85c:	f7fc f800 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800e860:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 800e864:	2b00      	cmp	r3, #0
 800e866:	db11      	blt.n	800e88c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e868:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 800e86c:	2b00      	cmp	r3, #0
 800e86e:	db0d      	blt.n	800e88c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e870:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e872:	4298      	cmp	r0, r3
 800e874:	d10a      	bne.n	800e88c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e876:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 800e87a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e87e:	ab09      	add	r3, sp, #36	@ 0x24
 800e880:	e883 0003 	stmia.w	r3, {r0, r1}
 800e884:	4619      	mov	r1, r3
 800e886:	a805      	add	r0, sp, #20
 800e888:	f7fe fcca 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 800e88c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e890:	2b00      	cmp	r3, #0
 800e892:	dd5b      	ble.n	800e94c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e894:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e898:	2b00      	cmp	r3, #0
 800e89a:	dd57      	ble.n	800e94c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e89c:	4f2f      	ldr	r7, [pc, #188]	@ (800e95c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e89e:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e8a0:	683b      	ldr	r3, [r7, #0]
 800e8a2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e8a6:	4b2e      	ldr	r3, [pc, #184]	@ (800e960 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e8a8:	681b      	ldr	r3, [r3, #0]
 800e8aa:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e8ae:	2e00      	cmp	r6, #0
 800e8b0:	d04c      	beq.n	800e94c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e8b2:	6823      	ldr	r3, [r4, #0]
 800e8b4:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 800e8b8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800e8ba:	4620      	mov	r0, r4
 800e8bc:	4798      	blx	r3
 800e8be:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800e8c0:	683b      	ldr	r3, [r7, #0]
 800e8c2:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 800e8c6:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 800e8ca:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 800e8ce:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 800e8d0:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e8d4:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 800e8d8:	785b      	ldrb	r3, [r3, #1]
 800e8da:	9609      	str	r6, [sp, #36]	@ 0x24
 800e8dc:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e8e0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800e8e4:	4b1f      	ldr	r3, [pc, #124]	@ (800e964 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e8e6:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 800e8ea:	681b      	ldr	r3, [r3, #0]
 800e8ec:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 800e8f0:	910b      	str	r1, [sp, #44]	@ 0x2c
 800e8f2:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 800e8f6:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 800e8fa:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 800e8fe:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 800e902:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800e906:	b10a      	cbz	r2, 800e90c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e908:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 800e90a:	b906      	cbnz	r6, 800e90e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e90c:	689e      	ldr	r6, [r3, #8]
 800e90e:	af07      	add	r7, sp, #28
 800e910:	4621      	mov	r1, r4
 800e912:	4638      	mov	r0, r7
 800e914:	f003 f814 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e918:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800e91a:	6828      	ldr	r0, [r5, #0]
 800e91c:	f7fb ffa0 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800e920:	6823      	ldr	r3, [r4, #0]
 800e922:	4605      	mov	r5, r0
 800e924:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800e926:	4620      	mov	r0, r4
 800e928:	4798      	blx	r3
 800e92a:	6823      	ldr	r3, [r4, #0]
 800e92c:	4680      	mov	r8, r0
 800e92e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800e932:	4620      	mov	r0, r4
 800e934:	4798      	blx	r3
 800e936:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e93a:	ab09      	add	r3, sp, #36	@ 0x24
 800e93c:	9300      	str	r3, [sp, #0]
 800e93e:	9501      	str	r5, [sp, #4]
 800e940:	ab05      	add	r3, sp, #20
 800e942:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e946:	4630      	mov	r0, r6
 800e948:	f7fb ff1b 	bl	800a782 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e94c:	b00e      	add	sp, #56	@ 0x38
 800e94e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e952:	bf00      	nop
 800e954:	20002e10 	.word	0x20002e10
 800e958:	20002e18 	.word	0x20002e18
 800e95c:	20002e0c 	.word	0x20002e0c
 800e960:	20002e14 	.word	0x20002e14
 800e964:	20002dbc 	.word	0x20002dbc

0800e968 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e968:	b538      	push	{r3, r4, r5, lr}
 800e96a:	4b0e      	ldr	r3, [pc, #56]	@ (800e9a4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e96c:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800e96e:	881b      	ldrh	r3, [r3, #0]
 800e970:	429a      	cmp	r2, r3
 800e972:	4604      	mov	r4, r0
 800e974:	d214      	bcs.n	800e9a0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e976:	6803      	ldr	r3, [r0, #0]
 800e978:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800e97a:	4798      	blx	r3
 800e97c:	6823      	ldr	r3, [r4, #0]
 800e97e:	4605      	mov	r5, r0
 800e980:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800e982:	4620      	mov	r0, r4
 800e984:	4798      	blx	r3
 800e986:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800e98a:	b22d      	sxth	r5, r5
 800e98c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800e990:	4601      	mov	r1, r0
 800e992:	bf06      	itte	eq
 800e994:	4602      	moveq	r2, r0
 800e996:	4629      	moveq	r1, r5
 800e998:	462a      	movne	r2, r5
 800e99a:	4620      	mov	r0, r4
 800e99c:	f7fa fcdf 	bl	800935e <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e9a0:	bd38      	pop	{r3, r4, r5, pc}
 800e9a2:	bf00      	nop
 800e9a4:	20002e10 	.word	0x20002e10

0800e9a8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e9a8:	b530      	push	{r4, r5, lr}
 800e9aa:	888b      	ldrh	r3, [r1, #4]
 800e9ac:	8583      	strh	r3, [r0, #44]	@ 0x2c
 800e9ae:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e9b2:	b085      	sub	sp, #20
 800e9b4:	4604      	mov	r4, r0
 800e9b6:	b923      	cbnz	r3, 800e9c2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e9b8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e9bc:	b90b      	cbnz	r3, 800e9c2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e9be:	f7ff ffd3 	bl	800e968 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e9c2:	6823      	ldr	r3, [r4, #0]
 800e9c4:	466d      	mov	r5, sp
 800e9c6:	4621      	mov	r1, r4
 800e9c8:	4628      	mov	r0, r5
 800e9ca:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800e9ce:	4798      	blx	r3
 800e9d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e9d4:	343c      	adds	r4, #60	@ 0x3c
 800e9d6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e9da:	b005      	add	sp, #20
 800e9dc:	bd30      	pop	{r4, r5, pc}

0800e9de <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e9de:	2300      	movs	r3, #0
 800e9e0:	8083      	strh	r3, [r0, #4]
 800e9e2:	80c3      	strh	r3, [r0, #6]
 800e9e4:	8003      	strh	r3, [r0, #0]
 800e9e6:	8043      	strh	r3, [r0, #2]
 800e9e8:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800e9ec:	2bff      	cmp	r3, #255	@ 0xff
 800e9ee:	bf01      	itttt	eq
 800e9f0:	890b      	ldrheq	r3, [r1, #8]
 800e9f2:	8083      	strheq	r3, [r0, #4]
 800e9f4:	894b      	ldrheq	r3, [r1, #10]
 800e9f6:	80c3      	strheq	r3, [r0, #6]
 800e9f8:	4770      	bx	lr
	...

0800e9fc <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e9fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e9fe:	4604      	mov	r4, r0
 800ea00:	6808      	ldr	r0, [r1, #0]
 800ea02:	6849      	ldr	r1, [r1, #4]
 800ea04:	466b      	mov	r3, sp
 800ea06:	c303      	stmia	r3!, {r0, r1}
 800ea08:	6823      	ldr	r3, [r4, #0]
 800ea0a:	4669      	mov	r1, sp
 800ea0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ea0e:	4620      	mov	r0, r4
 800ea10:	4798      	blx	r3
 800ea12:	4b08      	ldr	r3, [pc, #32]	@ (800ea34 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ea14:	681b      	ldr	r3, [r3, #0]
 800ea16:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ea1a:	b10a      	cbz	r2, 800ea20 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ea1c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800ea1e:	b900      	cbnz	r0, 800ea22 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ea20:	6898      	ldr	r0, [r3, #8]
 800ea22:	6803      	ldr	r3, [r0, #0]
 800ea24:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800ea26:	6a1d      	ldr	r5, [r3, #32]
 800ea28:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800ea2c:	4669      	mov	r1, sp
 800ea2e:	47a8      	blx	r5
 800ea30:	b003      	add	sp, #12
 800ea32:	bd30      	pop	{r4, r5, pc}
 800ea34:	20002dbc 	.word	0x20002dbc

0800ea38 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800ea38:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800ea3c:	b12a      	cbz	r2, 800ea4a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ea3e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ea42:	b112      	cbz	r2, 800ea4a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ea44:	6803      	ldr	r3, [r0, #0]
 800ea46:	695b      	ldr	r3, [r3, #20]
 800ea48:	4718      	bx	r3
 800ea4a:	4770      	bx	lr

0800ea4c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800ea4c:	b570      	push	{r4, r5, r6, lr}
 800ea4e:	880b      	ldrh	r3, [r1, #0]
 800ea50:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800ea52:	4605      	mov	r5, r0
 800ea54:	8813      	ldrh	r3, [r2, #0]
 800ea56:	f825 3f30 	strh.w	r3, [r5, #48]!
 800ea5a:	4604      	mov	r4, r0
 800ea5c:	4628      	mov	r0, r5
 800ea5e:	f005 f8e3 	bl	8013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ea62:	4606      	mov	r6, r0
 800ea64:	4628      	mov	r0, r5
 800ea66:	f005 f913 	bl	8013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ea6a:	6823      	ldr	r3, [r4, #0]
 800ea6c:	4605      	mov	r5, r0
 800ea6e:	4631      	mov	r1, r6
 800ea70:	4620      	mov	r0, r4
 800ea72:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ea74:	4798      	blx	r3
 800ea76:	6823      	ldr	r3, [r4, #0]
 800ea78:	4629      	mov	r1, r5
 800ea7a:	4620      	mov	r0, r4
 800ea7c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800ea7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ea82:	4718      	bx	r3

0800ea84 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800ea84:	b510      	push	{r4, lr}
 800ea86:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 800ea8a:	2bff      	cmp	r3, #255	@ 0xff
 800ea8c:	4604      	mov	r4, r0
 800ea8e:	d006      	beq.n	800ea9e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800ea90:	2300      	movs	r3, #0
 800ea92:	8003      	strh	r3, [r0, #0]
 800ea94:	8043      	strh	r3, [r0, #2]
 800ea96:	8083      	strh	r3, [r0, #4]
 800ea98:	80c3      	strh	r3, [r0, #6]
 800ea9a:	4620      	mov	r0, r4
 800ea9c:	bd10      	pop	{r4, pc}
 800ea9e:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 800eaa2:	b11b      	cbz	r3, 800eaac <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800eaa4:	3130      	adds	r1, #48	@ 0x30
 800eaa6:	f005 f927 	bl	8013cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800eaaa:	e7f6      	b.n	800ea9a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800eaac:	312e      	adds	r1, #46	@ 0x2e
 800eaae:	e7fa      	b.n	800eaa6 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800eab0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800eab0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eab4:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800eab8:	b08a      	sub	sp, #40	@ 0x28
 800eaba:	4604      	mov	r4, r0
 800eabc:	4688      	mov	r8, r1
 800eabe:	2b00      	cmp	r3, #0
 800eac0:	d066      	beq.n	800eb90 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800eac2:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 800eac4:	f8ad 3014 	strh.w	r3, [sp, #20]
 800eac8:	a805      	add	r0, sp, #20
 800eaca:	f005 f8ad 	bl	8013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800eace:	4607      	mov	r7, r0
 800ead0:	a805      	add	r0, sp, #20
 800ead2:	f005 f8dd 	bl	8013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ead6:	f9b8 6000 	ldrsh.w	r6, [r8]
 800eada:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800eade:	4432      	add	r2, r6
 800eae0:	b292      	uxth	r2, r2
 800eae2:	2300      	movs	r3, #0
 800eae4:	fa0f fc82 	sxth.w	ip, r2
 800eae8:	459c      	cmp	ip, r3
 800eaea:	9306      	str	r3, [sp, #24]
 800eaec:	dd52      	ble.n	800eb94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800eaee:	42b7      	cmp	r7, r6
 800eaf0:	dd50      	ble.n	800eb94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800eaf2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800eaf6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800eafa:	442b      	add	r3, r5
 800eafc:	b29b      	uxth	r3, r3
 800eafe:	b219      	sxth	r1, r3
 800eb00:	2900      	cmp	r1, #0
 800eb02:	dd47      	ble.n	800eb94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800eb04:	42a8      	cmp	r0, r5
 800eb06:	dd45      	ble.n	800eb94 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800eb08:	4567      	cmp	r7, ip
 800eb0a:	bfb8      	it	lt
 800eb0c:	b2ba      	uxthlt	r2, r7
 800eb0e:	4288      	cmp	r0, r1
 800eb10:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800eb14:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800eb18:	bfb8      	it	lt
 800eb1a:	b283      	uxthlt	r3, r0
 800eb1c:	1b92      	subs	r2, r2, r6
 800eb1e:	1b5b      	subs	r3, r3, r5
 800eb20:	f8ad 201c 	strh.w	r2, [sp, #28]
 800eb24:	f8ad 301e 	strh.w	r3, [sp, #30]
 800eb28:	f8ad 6018 	strh.w	r6, [sp, #24]
 800eb2c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800eb30:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800eb34:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800eb38:	429a      	cmp	r2, r3
 800eb3a:	d026      	beq.n	800eb8a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800eb3c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800eb40:	2b00      	cmp	r3, #0
 800eb42:	dd22      	ble.n	800eb8a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800eb44:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800eb48:	2b00      	cmp	r3, #0
 800eb4a:	dd1e      	ble.n	800eb8a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800eb4c:	2300      	movs	r3, #0
 800eb4e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800eb52:	6823      	ldr	r3, [r4, #0]
 800eb54:	a908      	add	r1, sp, #32
 800eb56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800eb58:	4620      	mov	r0, r4
 800eb5a:	4798      	blx	r3
 800eb5c:	4b0f      	ldr	r3, [pc, #60]	@ (800eb9c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800eb5e:	681b      	ldr	r3, [r3, #0]
 800eb60:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800eb64:	b10a      	cbz	r2, 800eb6a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800eb66:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800eb68:	b900      	cbnz	r0, 800eb6c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800eb6a:	6898      	ldr	r0, [r3, #8]
 800eb6c:	6801      	ldr	r1, [r0, #0]
 800eb6e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 800eb72:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800eb76:	2501      	movs	r5, #1
 800eb78:	9502      	str	r5, [sp, #8]
 800eb7a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 800eb7e:	9401      	str	r4, [sp, #4]
 800eb80:	ac06      	add	r4, sp, #24
 800eb82:	9400      	str	r4, [sp, #0]
 800eb84:	688c      	ldr	r4, [r1, #8]
 800eb86:	a905      	add	r1, sp, #20
 800eb88:	47a0      	blx	r4
 800eb8a:	b00a      	add	sp, #40	@ 0x28
 800eb8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eb90:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 800eb92:	e797      	b.n	800eac4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800eb94:	2300      	movs	r3, #0
 800eb96:	9307      	str	r3, [sp, #28]
 800eb98:	e7ca      	b.n	800eb30 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800eb9a:	bf00      	nop
 800eb9c:	20002dbc 	.word	0x20002dbc

0800eba0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800eba0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eba4:	4b2f      	ldr	r3, [pc, #188]	@ (800ec64 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800eba6:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800eba8:	881b      	ldrh	r3, [r3, #0]
 800ebaa:	4293      	cmp	r3, r2
 800ebac:	b08d      	sub	sp, #52	@ 0x34
 800ebae:	4604      	mov	r4, r0
 800ebb0:	460f      	mov	r7, r1
 800ebb2:	d954      	bls.n	800ec5e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800ebb4:	4b2c      	ldr	r3, [pc, #176]	@ (800ec68 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800ebb6:	6819      	ldr	r1, [r3, #0]
 800ebb8:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800ebbc:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800ebc0:	4a2a      	ldr	r2, [pc, #168]	@ (800ec6c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800ebc2:	6812      	ldr	r2, [r2, #0]
 800ebc4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800ebc8:	2900      	cmp	r1, #0
 800ebca:	d048      	beq.n	800ec5e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800ebcc:	785a      	ldrb	r2, [r3, #1]
 800ebce:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800ebd2:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 800ebd6:	4b26      	ldr	r3, [pc, #152]	@ (800ec70 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800ebd8:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 800ebdc:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 800ebe0:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 800ebe4:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 800ebe6:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 800ebea:	9107      	str	r1, [sp, #28]
 800ebec:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800ebf0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ebf4:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 800ebf8:	681a      	ldr	r2, [r3, #0]
 800ebfa:	f88d 8020 	strb.w	r8, [sp, #32]
 800ebfe:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 800ec02:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 800ec06:	9609      	str	r6, [sp, #36]	@ 0x24
 800ec08:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 800ec0c:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 800ec10:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 800ec14:	b10b      	cbz	r3, 800ec1a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800ec16:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 800ec18:	b905      	cbnz	r5, 800ec1c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800ec1a:	6895      	ldr	r5, [r2, #8]
 800ec1c:	ae05      	add	r6, sp, #20
 800ec1e:	4621      	mov	r1, r4
 800ec20:	4630      	mov	r0, r6
 800ec22:	f002 fe8d 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ec26:	4b13      	ldr	r3, [pc, #76]	@ (800ec74 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800ec28:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800ec2a:	6818      	ldr	r0, [r3, #0]
 800ec2c:	f7fb fe18 	bl	800a860 <_ZNK8touchgfx5Texts7getTextEt>
 800ec30:	6823      	ldr	r3, [r4, #0]
 800ec32:	4680      	mov	r8, r0
 800ec34:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800ec36:	4620      	mov	r0, r4
 800ec38:	4798      	blx	r3
 800ec3a:	6823      	ldr	r3, [r4, #0]
 800ec3c:	4681      	mov	r9, r0
 800ec3e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800ec42:	4620      	mov	r0, r4
 800ec44:	4798      	blx	r3
 800ec46:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800ec4a:	ab07      	add	r3, sp, #28
 800ec4c:	9300      	str	r3, [sp, #0]
 800ec4e:	f8cd 8004 	str.w	r8, [sp, #4]
 800ec52:	463b      	mov	r3, r7
 800ec54:	e896 0006 	ldmia.w	r6, {r1, r2}
 800ec58:	4628      	mov	r0, r5
 800ec5a:	f7fb fd92 	bl	800a782 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ec5e:	b00d      	add	sp, #52	@ 0x34
 800ec60:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ec64:	20002e10 	.word	0x20002e10
 800ec68:	20002e0c 	.word	0x20002e0c
 800ec6c:	20002e14 	.word	0x20002e14
 800ec70:	20002dbc 	.word	0x20002dbc
 800ec74:	20002e18 	.word	0x20002e18

0800ec78 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800ec78:	b570      	push	{r4, r5, r6, lr}
 800ec7a:	880b      	ldrh	r3, [r1, #0]
 800ec7c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 800ec7e:	4604      	mov	r4, r0
 800ec80:	4608      	mov	r0, r1
 800ec82:	460d      	mov	r5, r1
 800ec84:	f004 ffd0 	bl	8013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ec88:	4606      	mov	r6, r0
 800ec8a:	4628      	mov	r0, r5
 800ec8c:	f005 f800 	bl	8013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ec90:	6823      	ldr	r3, [r4, #0]
 800ec92:	4605      	mov	r5, r0
 800ec94:	4631      	mov	r1, r6
 800ec96:	4620      	mov	r0, r4
 800ec98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ec9a:	4798      	blx	r3
 800ec9c:	6823      	ldr	r3, [r4, #0]
 800ec9e:	4629      	mov	r1, r5
 800eca0:	4620      	mov	r0, r4
 800eca2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800eca4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eca8:	4718      	bx	r3

0800ecaa <_ZNK8touchgfx5Image12getSolidRectEv>:
 800ecaa:	b510      	push	{r4, lr}
 800ecac:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 800ecb0:	2bff      	cmp	r3, #255	@ 0xff
 800ecb2:	4604      	mov	r4, r0
 800ecb4:	d006      	beq.n	800ecc4 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800ecb6:	2300      	movs	r3, #0
 800ecb8:	8003      	strh	r3, [r0, #0]
 800ecba:	8043      	strh	r3, [r0, #2]
 800ecbc:	8083      	strh	r3, [r0, #4]
 800ecbe:	80c3      	strh	r3, [r0, #6]
 800ecc0:	4620      	mov	r0, r4
 800ecc2:	bd10      	pop	{r4, pc}
 800ecc4:	3126      	adds	r1, #38	@ 0x26
 800ecc6:	f005 f817 	bl	8013cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ecca:	e7f9      	b.n	800ecc0 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800eccc <_ZNK8touchgfx5Image17invalidateContentEv>:
 800eccc:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 800ecd0:	b12a      	cbz	r2, 800ecde <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ecd2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ecd6:	b112      	cbz	r2, 800ecde <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800ecd8:	6803      	ldr	r3, [r0, #0]
 800ecda:	695b      	ldr	r3, [r3, #20]
 800ecdc:	4718      	bx	r3
 800ecde:	4770      	bx	lr

0800ece0 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800ece0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ece4:	4604      	mov	r4, r0
 800ece6:	b088      	sub	sp, #32
 800ece8:	f854 3b26 	ldr.w	r3, [r4], #38
 800ecec:	2500      	movs	r5, #0
 800ecee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ecf0:	460f      	mov	r7, r1
 800ecf2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800ecf6:	a904      	add	r1, sp, #16
 800ecf8:	4606      	mov	r6, r0
 800ecfa:	4798      	blx	r3
 800ecfc:	4620      	mov	r0, r4
 800ecfe:	f004 ff93 	bl	8013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ed02:	4680      	mov	r8, r0
 800ed04:	4620      	mov	r0, r4
 800ed06:	f004 ffc3 	bl	8013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ed0a:	9506      	str	r5, [sp, #24]
 800ed0c:	ad06      	add	r5, sp, #24
 800ed0e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800ed12:	4639      	mov	r1, r7
 800ed14:	4628      	mov	r0, r5
 800ed16:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ed1a:	f7fe fa81 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 800ed1e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ed22:	2b00      	cmp	r3, #0
 800ed24:	dd19      	ble.n	800ed5a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ed26:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ed2a:	2b00      	cmp	r3, #0
 800ed2c:	dd15      	ble.n	800ed5a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800ed2e:	4b0c      	ldr	r3, [pc, #48]	@ (800ed60 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800ed30:	681b      	ldr	r3, [r3, #0]
 800ed32:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ed36:	b10a      	cbz	r2, 800ed3c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800ed38:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800ed3a:	b900      	cbnz	r0, 800ed3e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800ed3c:	6898      	ldr	r0, [r3, #8]
 800ed3e:	6801      	ldr	r1, [r0, #0]
 800ed40:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800ed44:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800ed48:	2701      	movs	r7, #1
 800ed4a:	9702      	str	r7, [sp, #8]
 800ed4c:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 800ed50:	e9cd 5600 	strd	r5, r6, [sp]
 800ed54:	688d      	ldr	r5, [r1, #8]
 800ed56:	4621      	mov	r1, r4
 800ed58:	47a8      	blx	r5
 800ed5a:	b008      	add	sp, #32
 800ed5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ed60:	20002dbc 	.word	0x20002dbc

0800ed64 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800ed64:	b510      	push	{r4, lr}
 800ed66:	6803      	ldr	r3, [r0, #0]
 800ed68:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ed6a:	460c      	mov	r4, r1
 800ed6c:	4798      	blx	r3
 800ed6e:	1b03      	subs	r3, r0, r4
 800ed70:	4258      	negs	r0, r3
 800ed72:	4158      	adcs	r0, r3
 800ed74:	bd10      	pop	{r4, pc}
	...

0800ed78 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800ed78:	4b01      	ldr	r3, [pc, #4]	@ (800ed80 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800ed7a:	6019      	str	r1, [r3, #0]
 800ed7c:	4770      	bx	lr
 800ed7e:	bf00      	nop
 800ed80:	20002dc4 	.word	0x20002dc4

0800ed84 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ed84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed88:	4696      	mov	lr, r2
 800ed8a:	4605      	mov	r5, r0
 800ed8c:	4614      	mov	r4, r2
 800ed8e:	460e      	mov	r6, r1
 800ed90:	461f      	mov	r7, r3
 800ed92:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed96:	b097      	sub	sp, #92	@ 0x5c
 800ed98:	f10d 0c1c 	add.w	ip, sp, #28
 800ed9c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800eda0:	f8de 3000 	ldr.w	r3, [lr]
 800eda4:	f8cc 3000 	str.w	r3, [ip]
 800eda8:	f104 0e14 	add.w	lr, r4, #20
 800edac:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800edb0:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800edb4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800edb8:	f8de 3000 	ldr.w	r3, [lr]
 800edbc:	f8cc 3000 	str.w	r3, [ip]
 800edc0:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800edc4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800edc8:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800edcc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800edd0:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800edd4:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800edd8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800eddc:	f8de 3000 	ldr.w	r3, [lr]
 800ede0:	f8cc 3000 	str.w	r3, [ip]
 800ede4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ede6:	682b      	ldr	r3, [r5, #0]
 800ede8:	9201      	str	r2, [sp, #4]
 800edea:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800edee:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800edf0:	9200      	str	r2, [sp, #0]
 800edf2:	f8cd 8008 	str.w	r8, [sp, #8]
 800edf6:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800edfa:	aa07      	add	r2, sp, #28
 800edfc:	463b      	mov	r3, r7
 800edfe:	4631      	mov	r1, r6
 800ee00:	4628      	mov	r0, r5
 800ee02:	47d8      	blx	fp
 800ee04:	46a6      	mov	lr, r4
 800ee06:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ee0a:	f10d 0c1c 	add.w	ip, sp, #28
 800ee0e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee12:	f8de 3000 	ldr.w	r3, [lr]
 800ee16:	f8cc 3000 	str.w	r3, [ip]
 800ee1a:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ee1e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ee22:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ee26:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee2a:	343c      	adds	r4, #60	@ 0x3c
 800ee2c:	f8de 3000 	ldr.w	r3, [lr]
 800ee30:	f8cc 3000 	str.w	r3, [ip]
 800ee34:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ee36:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ee3a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ee3e:	6823      	ldr	r3, [r4, #0]
 800ee40:	f8cc 3000 	str.w	r3, [ip]
 800ee44:	682b      	ldr	r3, [r5, #0]
 800ee46:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ee4a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ee4c:	9201      	str	r2, [sp, #4]
 800ee4e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ee50:	9200      	str	r2, [sp, #0]
 800ee52:	f8cd 8008 	str.w	r8, [sp, #8]
 800ee56:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800ee58:	aa07      	add	r2, sp, #28
 800ee5a:	463b      	mov	r3, r7
 800ee5c:	4631      	mov	r1, r6
 800ee5e:	4628      	mov	r0, r5
 800ee60:	47a0      	blx	r4
 800ee62:	b017      	add	sp, #92	@ 0x5c
 800ee64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ee68 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800ee68:	2000      	movs	r0, #0
 800ee6a:	4770      	bx	lr

0800ee6c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800ee6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee70:	b08d      	sub	sp, #52	@ 0x34
 800ee72:	4688      	mov	r8, r1
 800ee74:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800ee76:	f8d3 c000 	ldr.w	ip, [r3]
 800ee7a:	680f      	ldr	r7, [r1, #0]
 800ee7c:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800ee80:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800ee84:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800ee88:	edd3 6a07 	vldr	s13, [r3, #28]
 800ee8c:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800ee8e:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800ee92:	f9b1 9000 	ldrsh.w	r9, [r1]
 800ee96:	f9ba 1000 	ldrsh.w	r1, [sl]
 800ee9a:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800ee9e:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800eea2:	eba7 070c 	sub.w	r7, r7, ip
 800eea6:	42bc      	cmp	r4, r7
 800eea8:	bfa8      	it	ge
 800eeaa:	463c      	movge	r4, r7
 800eeac:	ee07 4a90 	vmov	s15, r4
 800eeb0:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800eeb4:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800eeb8:	ee25 4a04 	vmul.f32	s8, s10, s8
 800eebc:	ee65 4a24 	vmul.f32	s9, s10, s9
 800eec0:	ee25 5a27 	vmul.f32	s10, s10, s15
 800eec4:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800eec8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800eecc:	eb09 0e0c 	add.w	lr, r9, ip
 800eed0:	4571      	cmp	r1, lr
 800eed2:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800eed6:	ee32 1a05 	vadd.f32	s2, s4, s10
 800eeda:	ee36 0a84 	vadd.f32	s0, s13, s8
 800eede:	ee61 1a87 	vmul.f32	s3, s3, s14
 800eee2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800eee6:	f340 808d 	ble.w	800f004 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800eeea:	eba1 060e 	sub.w	r6, r1, lr
 800eeee:	fb96 f5f4 	sdiv	r5, r6, r4
 800eef2:	ee07 5a10 	vmov	s14, r5
 800eef6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800eefa:	2d00      	cmp	r5, #0
 800eefc:	fb04 6615 	mls	r6, r4, r5, r6
 800ef00:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ef04:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ef08:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ef0c:	dd13      	ble.n	800ef36 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800ef0e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ef12:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ef16:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ef1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ef1e:	bf18      	it	ne
 800ef20:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ef24:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ef28:	bf08      	it	eq
 800ef2a:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ef2e:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ef32:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ef36:	fb05 f204 	mul.w	r2, r5, r4
 800ef3a:	1abf      	subs	r7, r7, r2
 800ef3c:	4494      	add	ip, r2
 800ef3e:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ef42:	4411      	add	r1, r2
 800ef44:	eb09 020c 	add.w	r2, r9, ip
 800ef48:	443a      	add	r2, r7
 800ef4a:	b209      	sxth	r1, r1
 800ef4c:	428a      	cmp	r2, r1
 800ef4e:	bfc4      	itt	gt
 800ef50:	eba1 0209 	subgt.w	r2, r1, r9
 800ef54:	eba2 070c 	subgt.w	r7, r2, ip
 800ef58:	2f00      	cmp	r7, #0
 800ef5a:	dd50      	ble.n	800effe <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800ef5c:	fb97 f1f4 	sdiv	r1, r7, r4
 800ef60:	fb04 7211 	mls	r2, r4, r1, r7
 800ef64:	b90a      	cbnz	r2, 800ef6a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800ef66:	3901      	subs	r1, #1
 800ef68:	4622      	mov	r2, r4
 800ef6a:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800ef6e:	6840      	ldr	r0, [r0, #4]
 800ef70:	900b      	str	r0, [sp, #44]	@ 0x2c
 800ef72:	f8d0 a000 	ldr.w	sl, [r0]
 800ef76:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800ef78:	9008      	str	r0, [sp, #32]
 800ef7a:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800ef7e:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800ef80:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800ef84:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800ef88:	695b      	ldr	r3, [r3, #20]
 800ef8a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800ef8c:	445b      	add	r3, fp
 800ef8e:	eef0 6a42 	vmov.f32	s13, s4
 800ef92:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ef96:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ef9a:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ef9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800efa2:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800efa6:	9307      	str	r3, [sp, #28]
 800efa8:	ee17 7a90 	vmov	r7, s15
 800efac:	ee73 7a42 	vsub.f32	s15, s6, s4
 800efb0:	eeb0 7a61 	vmov.f32	s14, s3
 800efb4:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800efb8:	ee16 3a90 	vmov	r3, s13
 800efbc:	fb97 f7f4 	sdiv	r7, r7, r4
 800efc0:	ee17 ca90 	vmov	ip, s15
 800efc4:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800efc8:	fb9c fcf4 	sdiv	ip, ip, r4
 800efcc:	fb0c 3306 	mla	r3, ip, r6, r3
 800efd0:	9302      	str	r3, [sp, #8]
 800efd2:	ee17 3a10 	vmov	r3, s14
 800efd6:	44b6      	add	lr, r6
 800efd8:	fb04 e505 	mla	r5, r4, r5, lr
 800efdc:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800efe0:	fb07 3706 	mla	r7, r7, r6, r3
 800efe4:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800efe8:	e9cd 4700 	strd	r4, r7, [sp]
 800efec:	2900      	cmp	r1, #0
 800efee:	bfcc      	ite	gt
 800eff0:	46a1      	movgt	r9, r4
 800eff2:	4691      	movle	r9, r2
 800eff4:	eba9 0306 	sub.w	r3, r9, r6
 800eff8:	f8da 4008 	ldr.w	r4, [sl, #8]
 800effc:	47a0      	blx	r4
 800effe:	b00d      	add	sp, #52	@ 0x34
 800f000:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f004:	2500      	movs	r5, #0
 800f006:	462e      	mov	r6, r5
 800f008:	e799      	b.n	800ef3e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f00c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f00c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f010:	b0db      	sub	sp, #364	@ 0x16c
 800f012:	461d      	mov	r5, r3
 800f014:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800f018:	930a      	str	r3, [sp, #40]	@ 0x28
 800f01a:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800f01e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800f020:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800f024:	9310      	str	r3, [sp, #64]	@ 0x40
 800f026:	6803      	ldr	r3, [r0, #0]
 800f028:	910f      	str	r1, [sp, #60]	@ 0x3c
 800f02a:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800f02c:	9009      	str	r0, [sp, #36]	@ 0x24
 800f02e:	4614      	mov	r4, r2
 800f030:	4629      	mov	r1, r5
 800f032:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800f036:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800f03a:	47b8      	blx	r7
 800f03c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f03e:	6058      	str	r0, [r3, #4]
 800f040:	2800      	cmp	r0, #0
 800f042:	f000 83a1 	beq.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f046:	682b      	ldr	r3, [r5, #0]
 800f048:	9314      	str	r3, [sp, #80]	@ 0x50
 800f04a:	686b      	ldr	r3, [r5, #4]
 800f04c:	9315      	str	r3, [sp, #84]	@ 0x54
 800f04e:	4bc4      	ldr	r3, [pc, #784]	@ (800f360 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f050:	ed94 7a02 	vldr	s14, [r4, #8]
 800f054:	7819      	ldrb	r1, [r3, #0]
 800f056:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f05a:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800f05e:	2900      	cmp	r1, #0
 800f060:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f064:	bf16      	itet	ne
 800f066:	4619      	movne	r1, r3
 800f068:	4611      	moveq	r1, r2
 800f06a:	4613      	movne	r3, r2
 800f06c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f070:	9116      	str	r1, [sp, #88]	@ 0x58
 800f072:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800f076:	f240 8387 	bls.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f07a:	ed94 7a07 	vldr	s14, [r4, #28]
 800f07e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f086:	f240 837f 	bls.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f08a:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800f08e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800f092:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f096:	f240 8377 	bls.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f09a:	6822      	ldr	r2, [r4, #0]
 800f09c:	4bb1      	ldr	r3, [pc, #708]	@ (800f364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800f09e:	429a      	cmp	r2, r3
 800f0a0:	f2c0 8372 	blt.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0a4:	49b0      	ldr	r1, [pc, #704]	@ (800f368 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800f0a6:	6963      	ldr	r3, [r4, #20]
 800f0a8:	428a      	cmp	r2, r1
 800f0aa:	f300 836d 	bgt.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0ae:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f0b2:	48ae      	ldr	r0, [pc, #696]	@ (800f36c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f0b4:	33ff      	adds	r3, #255	@ 0xff
 800f0b6:	4283      	cmp	r3, r0
 800f0b8:	f200 8366 	bhi.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0bc:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800f0be:	4dac      	ldr	r5, [pc, #688]	@ (800f370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f0c0:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f0c4:	33ff      	adds	r3, #255	@ 0xff
 800f0c6:	42ab      	cmp	r3, r5
 800f0c8:	f200 835e 	bhi.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0cc:	6862      	ldr	r2, [r4, #4]
 800f0ce:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800f0d2:	33ff      	adds	r3, #255	@ 0xff
 800f0d4:	4283      	cmp	r3, r0
 800f0d6:	f200 8357 	bhi.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0da:	69a1      	ldr	r1, [r4, #24]
 800f0dc:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800f0e0:	33ff      	adds	r3, #255	@ 0xff
 800f0e2:	4283      	cmp	r3, r0
 800f0e4:	f200 8350 	bhi.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0e8:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f0ea:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800f0ee:	30ff      	adds	r0, #255	@ 0xff
 800f0f0:	42a8      	cmp	r0, r5
 800f0f2:	f200 8349 	bhi.w	800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f0f6:	428a      	cmp	r2, r1
 800f0f8:	f280 8110 	bge.w	800f31c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f0fc:	429a      	cmp	r2, r3
 800f0fe:	f300 8119 	bgt.w	800f334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f102:	4299      	cmp	r1, r3
 800f104:	f280 811d 	bge.w	800f342 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f108:	2502      	movs	r5, #2
 800f10a:	2701      	movs	r7, #1
 800f10c:	46a9      	mov	r9, r5
 800f10e:	46b8      	mov	r8, r7
 800f110:	f04f 0a00 	mov.w	sl, #0
 800f114:	4621      	mov	r1, r4
 800f116:	a849      	add	r0, sp, #292	@ 0x124
 800f118:	f003 fd3a 	bl	8012b90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f11c:	4622      	mov	r2, r4
 800f11e:	4653      	mov	r3, sl
 800f120:	a949      	add	r1, sp, #292	@ 0x124
 800f122:	f8cd 9000 	str.w	r9, [sp]
 800f126:	a819      	add	r0, sp, #100	@ 0x64
 800f128:	f003 fe62 	bl	8012df0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f12c:	4622      	mov	r2, r4
 800f12e:	4653      	mov	r3, sl
 800f130:	a949      	add	r1, sp, #292	@ 0x124
 800f132:	f8cd 8000 	str.w	r8, [sp]
 800f136:	a829      	add	r0, sp, #164	@ 0xa4
 800f138:	f003 fe5a 	bl	8012df0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f13c:	4643      	mov	r3, r8
 800f13e:	4622      	mov	r2, r4
 800f140:	a949      	add	r1, sp, #292	@ 0x124
 800f142:	f8cd 9000 	str.w	r9, [sp]
 800f146:	a839      	add	r0, sp, #228	@ 0xe4
 800f148:	f003 fe52 	bl	8012df0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f14c:	42af      	cmp	r7, r5
 800f14e:	bfb5      	itete	lt
 800f150:	2300      	movlt	r3, #0
 800f152:	2301      	movge	r3, #1
 800f154:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f156:	930e      	strge	r3, [sp, #56]	@ 0x38
 800f158:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f15a:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f15e:	af12      	add	r7, sp, #72	@ 0x48
 800f160:	bfb9      	ittee	lt
 800f162:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800f164:	ac19      	addlt	r4, sp, #100	@ 0x64
 800f166:	ad19      	addge	r5, sp, #100	@ 0x64
 800f168:	ac29      	addge	r4, sp, #164	@ 0xa4
 800f16a:	e887 0003 	stmia.w	r7, {r0, r1}
 800f16e:	b928      	cbnz	r0, 800f17c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f170:	4b80      	ldr	r3, [pc, #512]	@ (800f374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f172:	6818      	ldr	r0, [r3, #0]
 800f174:	6803      	ldr	r3, [r0, #0]
 800f176:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f178:	4798      	blx	r3
 800f17a:	6038      	str	r0, [r7, #0]
 800f17c:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f17e:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f182:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f186:	930c      	str	r3, [sp, #48]	@ 0x30
 800f188:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f18a:	6963      	ldr	r3, [r4, #20]
 800f18c:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800f18e:	440b      	add	r3, r1
 800f190:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f194:	4408      	add	r0, r1
 800f196:	b200      	sxth	r0, r0
 800f198:	4283      	cmp	r3, r0
 800f19a:	900d      	str	r0, [sp, #52]	@ 0x34
 800f19c:	f280 80dd 	bge.w	800f35a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f1a0:	428b      	cmp	r3, r1
 800f1a2:	da08      	bge.n	800f1b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f1a4:	2a00      	cmp	r2, #0
 800f1a6:	dd06      	ble.n	800f1b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f1a8:	1acb      	subs	r3, r1, r3
 800f1aa:	429a      	cmp	r2, r3
 800f1ac:	f2c0 80e4 	blt.w	800f378 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f1b0:	2b00      	cmp	r3, #0
 800f1b2:	f300 80e2 	bgt.w	800f37a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f1b6:	6967      	ldr	r7, [r4, #20]
 800f1b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f1ba:	443b      	add	r3, r7
 800f1bc:	461f      	mov	r7, r3
 800f1be:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f1c0:	1bdf      	subs	r7, r3, r7
 800f1c2:	4297      	cmp	r7, r2
 800f1c4:	bfa8      	it	ge
 800f1c6:	4617      	movge	r7, r2
 800f1c8:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f1cc:	2f00      	cmp	r7, #0
 800f1ce:	f340 8166 	ble.w	800f49e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f1d2:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f1d4:	6829      	ldr	r1, [r5, #0]
 800f1d6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f1da:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f1de:	6820      	ldr	r0, [r4, #0]
 800f1e0:	4411      	add	r1, r2
 800f1e2:	4299      	cmp	r1, r3
 800f1e4:	dd1a      	ble.n	800f21c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f1e6:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f1ea:	440b      	add	r3, r1
 800f1ec:	4402      	add	r2, r0
 800f1ee:	b21b      	sxth	r3, r3
 800f1f0:	429a      	cmp	r2, r3
 800f1f2:	dc13      	bgt.n	800f21c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f1f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f1f6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f1f8:	681b      	ldr	r3, [r3, #0]
 800f1fa:	9206      	str	r2, [sp, #24]
 800f1fc:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f1fe:	9205      	str	r2, [sp, #20]
 800f200:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f202:	9500      	str	r5, [sp, #0]
 800f204:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f208:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f20a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f20c:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f210:	a912      	add	r1, sp, #72	@ 0x48
 800f212:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f216:	aa49      	add	r2, sp, #292	@ 0x124
 800f218:	4623      	mov	r3, r4
 800f21a:	47c8      	blx	r9
 800f21c:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f220:	441a      	add	r2, r3
 800f222:	6963      	ldr	r3, [r4, #20]
 800f224:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f228:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f22c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f230:	68a1      	ldr	r1, [r4, #8]
 800f232:	ed94 6a08 	vldr	s12, [r4, #32]
 800f236:	6022      	str	r2, [r4, #0]
 800f238:	3301      	adds	r3, #1
 800f23a:	6163      	str	r3, [r4, #20]
 800f23c:	69a3      	ldr	r3, [r4, #24]
 800f23e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f242:	3b01      	subs	r3, #1
 800f244:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f248:	61a3      	str	r3, [r4, #24]
 800f24a:	6923      	ldr	r3, [r4, #16]
 800f24c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f250:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f254:	edd4 6a07 	vldr	s13, [r4, #28]
 800f258:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f25c:	440b      	add	r3, r1
 800f25e:	68e1      	ldr	r1, [r4, #12]
 800f260:	6123      	str	r3, [r4, #16]
 800f262:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f266:	428b      	cmp	r3, r1
 800f268:	edc4 6a07 	vstr	s13, [r4, #28]
 800f26c:	db15      	blt.n	800f29a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f26e:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f272:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f276:	3201      	adds	r2, #1
 800f278:	edc4 6a07 	vstr	s13, [r4, #28]
 800f27c:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f280:	6022      	str	r2, [r4, #0]
 800f282:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f286:	1a5b      	subs	r3, r3, r1
 800f288:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f28c:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f290:	6123      	str	r3, [r4, #16]
 800f292:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f296:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f29a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f29e:	441a      	add	r2, r3
 800f2a0:	696b      	ldr	r3, [r5, #20]
 800f2a2:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f2a6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f2aa:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f2ae:	68a9      	ldr	r1, [r5, #8]
 800f2b0:	ed95 6a08 	vldr	s12, [r5, #32]
 800f2b4:	602a      	str	r2, [r5, #0]
 800f2b6:	3301      	adds	r3, #1
 800f2b8:	616b      	str	r3, [r5, #20]
 800f2ba:	69ab      	ldr	r3, [r5, #24]
 800f2bc:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f2c0:	3b01      	subs	r3, #1
 800f2c2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f2c6:	61ab      	str	r3, [r5, #24]
 800f2c8:	692b      	ldr	r3, [r5, #16]
 800f2ca:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f2ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f2d2:	edd5 6a07 	vldr	s13, [r5, #28]
 800f2d6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f2da:	440b      	add	r3, r1
 800f2dc:	68e9      	ldr	r1, [r5, #12]
 800f2de:	612b      	str	r3, [r5, #16]
 800f2e0:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f2e4:	428b      	cmp	r3, r1
 800f2e6:	edc5 6a07 	vstr	s13, [r5, #28]
 800f2ea:	db15      	blt.n	800f318 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f2ec:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f2f0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f2f4:	3201      	adds	r2, #1
 800f2f6:	edc5 6a07 	vstr	s13, [r5, #28]
 800f2fa:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f2fe:	602a      	str	r2, [r5, #0]
 800f300:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f304:	1a5b      	subs	r3, r3, r1
 800f306:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f30a:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f30e:	612b      	str	r3, [r5, #16]
 800f310:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f314:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f318:	3f01      	subs	r7, #1
 800f31a:	e757      	b.n	800f1cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f31c:	4299      	cmp	r1, r3
 800f31e:	dc13      	bgt.n	800f348 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f320:	429a      	cmp	r2, r3
 800f322:	da14      	bge.n	800f34e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f324:	2502      	movs	r5, #2
 800f326:	2703      	movs	r7, #3
 800f328:	46a9      	mov	r9, r5
 800f32a:	f04f 0800 	mov.w	r8, #0
 800f32e:	f04f 0a01 	mov.w	sl, #1
 800f332:	e6ef      	b.n	800f114 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f334:	2501      	movs	r5, #1
 800f336:	2700      	movs	r7, #0
 800f338:	46a9      	mov	r9, r5
 800f33a:	46b8      	mov	r8, r7
 800f33c:	f04f 0a02 	mov.w	sl, #2
 800f340:	e6e8      	b.n	800f114 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f342:	2501      	movs	r5, #1
 800f344:	2702      	movs	r7, #2
 800f346:	e6e1      	b.n	800f10c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f348:	2500      	movs	r5, #0
 800f34a:	2701      	movs	r7, #1
 800f34c:	e7f4      	b.n	800f338 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f34e:	2702      	movs	r7, #2
 800f350:	2503      	movs	r5, #3
 800f352:	f04f 0900 	mov.w	r9, #0
 800f356:	46b8      	mov	r8, r7
 800f358:	e7e9      	b.n	800f32e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f35a:	4613      	mov	r3, r2
 800f35c:	e728      	b.n	800f1b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f35e:	bf00      	nop
 800f360:	20002db4 	.word	0x20002db4
 800f364:	fffd8f01 	.word	0xfffd8f01
 800f368:	00027100 	.word	0x00027100
 800f36c:	0004e1ff 	.word	0x0004e1ff
 800f370:	0004e1fe 	.word	0x0004e1fe
 800f374:	20002dbc 	.word	0x20002dbc
 800f378:	4613      	mov	r3, r2
 800f37a:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f37c:	9111      	str	r1, [sp, #68]	@ 0x44
 800f37e:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800f382:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800f386:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800f388:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800f38c:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800f390:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800f394:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800f398:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800f39c:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800f3a0:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800f3a4:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800f3a8:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800f3ac:	469e      	mov	lr, r3
 800f3ae:	469c      	mov	ip, r3
 800f3b0:	f04f 0900 	mov.w	r9, #0
 800f3b4:	f1bc 0f00 	cmp.w	ip, #0
 800f3b8:	d147      	bne.n	800f44a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f3ba:	eb03 0c07 	add.w	ip, r3, r7
 800f3be:	1ad7      	subs	r7, r2, r3
 800f3c0:	f1b9 0f00 	cmp.w	r9, #0
 800f3c4:	d009      	beq.n	800f3da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f3c6:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800f3ca:	9029      	str	r0, [sp, #164]	@ 0xa4
 800f3cc:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800f3d0:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800f3d4:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800f3d8:	912d      	str	r1, [sp, #180]	@ 0xb4
 800f3da:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f3dc:	9111      	str	r1, [sp, #68]	@ 0x44
 800f3de:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f3e2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f3e6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f3ea:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f3ee:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f3f2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f3f6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f3fa:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f3fe:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f402:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f406:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f40a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f40e:	f04f 0800 	mov.w	r8, #0
 800f412:	f1be 0f00 	cmp.w	lr, #0
 800f416:	d031      	beq.n	800f47c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f418:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f41a:	4431      	add	r1, r6
 800f41c:	4549      	cmp	r1, r9
 800f41e:	4450      	add	r0, sl
 800f420:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f424:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f428:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f42c:	db08      	blt.n	800f440 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f42e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f432:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f436:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f43a:	3001      	adds	r0, #1
 800f43c:	eba1 0109 	sub.w	r1, r1, r9
 800f440:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f444:	f04f 0801 	mov.w	r8, #1
 800f448:	e7e3      	b.n	800f412 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f44a:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f44c:	4431      	add	r1, r6
 800f44e:	4541      	cmp	r1, r8
 800f450:	4450      	add	r0, sl
 800f452:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f456:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f45a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f45e:	db08      	blt.n	800f472 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f460:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f464:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f468:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f46c:	3001      	adds	r0, #1
 800f46e:	eba1 0108 	sub.w	r1, r1, r8
 800f472:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f476:	f04f 0901 	mov.w	r9, #1
 800f47a:	e79b      	b.n	800f3b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f47c:	449c      	add	ip, r3
 800f47e:	1aff      	subs	r7, r7, r3
 800f480:	f1b8 0f00 	cmp.w	r8, #0
 800f484:	d009      	beq.n	800f49a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f486:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f48a:	9019      	str	r0, [sp, #100]	@ 0x64
 800f48c:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f490:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f494:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f498:	911d      	str	r1, [sp, #116]	@ 0x74
 800f49a:	1ad2      	subs	r2, r2, r3
 800f49c:	e68b      	b.n	800f1b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f49e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f4a0:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800f4a2:	2b00      	cmp	r3, #0
 800f4a4:	f000 80d1 	beq.w	800f64a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f4a8:	ad19      	add	r5, sp, #100	@ 0x64
 800f4aa:	ac39      	add	r4, sp, #228	@ 0xe4
 800f4ac:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f4ae:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f4b2:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f4b6:	930c      	str	r3, [sp, #48]	@ 0x30
 800f4b8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f4ba:	6963      	ldr	r3, [r4, #20]
 800f4bc:	440b      	add	r3, r1
 800f4be:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f4c2:	4408      	add	r0, r1
 800f4c4:	b200      	sxth	r0, r0
 800f4c6:	4283      	cmp	r3, r0
 800f4c8:	900d      	str	r0, [sp, #52]	@ 0x34
 800f4ca:	f280 80c1 	bge.w	800f650 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f4ce:	428b      	cmp	r3, r1
 800f4d0:	da08      	bge.n	800f4e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f4d2:	2a00      	cmp	r2, #0
 800f4d4:	dd06      	ble.n	800f4e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f4d6:	1acb      	subs	r3, r1, r3
 800f4d8:	429a      	cmp	r2, r3
 800f4da:	f2c0 80bb 	blt.w	800f654 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f4de:	2b00      	cmp	r3, #0
 800f4e0:	f300 80b9 	bgt.w	800f656 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f4e4:	6967      	ldr	r7, [r4, #20]
 800f4e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f4e8:	443b      	add	r3, r7
 800f4ea:	461f      	mov	r7, r3
 800f4ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f4ee:	1bdf      	subs	r7, r3, r7
 800f4f0:	4297      	cmp	r7, r2
 800f4f2:	bfa8      	it	ge
 800f4f4:	4617      	movge	r7, r2
 800f4f6:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f4fa:	2f00      	cmp	r7, #0
 800f4fc:	f340 813c 	ble.w	800f778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f500:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f502:	6829      	ldr	r1, [r5, #0]
 800f504:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f508:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f50c:	6820      	ldr	r0, [r4, #0]
 800f50e:	4411      	add	r1, r2
 800f510:	4299      	cmp	r1, r3
 800f512:	dd1a      	ble.n	800f54a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f514:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f518:	440b      	add	r3, r1
 800f51a:	4402      	add	r2, r0
 800f51c:	b21b      	sxth	r3, r3
 800f51e:	429a      	cmp	r2, r3
 800f520:	dc13      	bgt.n	800f54a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f522:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f524:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f526:	681b      	ldr	r3, [r3, #0]
 800f528:	9206      	str	r2, [sp, #24]
 800f52a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f52c:	9205      	str	r2, [sp, #20]
 800f52e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f530:	9500      	str	r5, [sp, #0]
 800f532:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f536:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f538:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f53a:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f53e:	a912      	add	r1, sp, #72	@ 0x48
 800f540:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f544:	aa49      	add	r2, sp, #292	@ 0x124
 800f546:	4623      	mov	r3, r4
 800f548:	47c8      	blx	r9
 800f54a:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f54e:	441a      	add	r2, r3
 800f550:	6963      	ldr	r3, [r4, #20]
 800f552:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f556:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f55a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f55e:	68a1      	ldr	r1, [r4, #8]
 800f560:	ed94 6a08 	vldr	s12, [r4, #32]
 800f564:	6022      	str	r2, [r4, #0]
 800f566:	3301      	adds	r3, #1
 800f568:	6163      	str	r3, [r4, #20]
 800f56a:	69a3      	ldr	r3, [r4, #24]
 800f56c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f570:	3b01      	subs	r3, #1
 800f572:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f576:	61a3      	str	r3, [r4, #24]
 800f578:	6923      	ldr	r3, [r4, #16]
 800f57a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f57e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f582:	edd4 6a07 	vldr	s13, [r4, #28]
 800f586:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f58a:	440b      	add	r3, r1
 800f58c:	68e1      	ldr	r1, [r4, #12]
 800f58e:	6123      	str	r3, [r4, #16]
 800f590:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f594:	428b      	cmp	r3, r1
 800f596:	edc4 6a07 	vstr	s13, [r4, #28]
 800f59a:	db15      	blt.n	800f5c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f59c:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f5a0:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f5a4:	3201      	adds	r2, #1
 800f5a6:	edc4 6a07 	vstr	s13, [r4, #28]
 800f5aa:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f5ae:	6022      	str	r2, [r4, #0]
 800f5b0:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f5b4:	1a5b      	subs	r3, r3, r1
 800f5b6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f5ba:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f5be:	6123      	str	r3, [r4, #16]
 800f5c0:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f5c4:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f5c8:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f5cc:	441a      	add	r2, r3
 800f5ce:	696b      	ldr	r3, [r5, #20]
 800f5d0:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f5d4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f5d8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f5dc:	68a9      	ldr	r1, [r5, #8]
 800f5de:	ed95 6a08 	vldr	s12, [r5, #32]
 800f5e2:	602a      	str	r2, [r5, #0]
 800f5e4:	3301      	adds	r3, #1
 800f5e6:	616b      	str	r3, [r5, #20]
 800f5e8:	69ab      	ldr	r3, [r5, #24]
 800f5ea:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f5ee:	3b01      	subs	r3, #1
 800f5f0:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f5f4:	61ab      	str	r3, [r5, #24]
 800f5f6:	692b      	ldr	r3, [r5, #16]
 800f5f8:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f5fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f600:	edd5 6a07 	vldr	s13, [r5, #28]
 800f604:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f608:	440b      	add	r3, r1
 800f60a:	68e9      	ldr	r1, [r5, #12]
 800f60c:	612b      	str	r3, [r5, #16]
 800f60e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f612:	428b      	cmp	r3, r1
 800f614:	edc5 6a07 	vstr	s13, [r5, #28]
 800f618:	db15      	blt.n	800f646 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f61a:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f61e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f622:	3201      	adds	r2, #1
 800f624:	edc5 6a07 	vstr	s13, [r5, #28]
 800f628:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f62c:	602a      	str	r2, [r5, #0]
 800f62e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f632:	1a5b      	subs	r3, r3, r1
 800f634:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f638:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f63c:	612b      	str	r3, [r5, #16]
 800f63e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f642:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f646:	3f01      	subs	r7, #1
 800f648:	e757      	b.n	800f4fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f64a:	ad39      	add	r5, sp, #228	@ 0xe4
 800f64c:	ac19      	add	r4, sp, #100	@ 0x64
 800f64e:	e72d      	b.n	800f4ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f650:	4613      	mov	r3, r2
 800f652:	e744      	b.n	800f4de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f654:	4613      	mov	r3, r2
 800f656:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f65a:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f65c:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f660:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f664:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f668:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f66c:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f670:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f674:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f678:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f67a:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f67e:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f682:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f686:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f68a:	960e      	str	r6, [sp, #56]	@ 0x38
 800f68c:	469e      	mov	lr, r3
 800f68e:	461f      	mov	r7, r3
 800f690:	f04f 0900 	mov.w	r9, #0
 800f694:	2f00      	cmp	r7, #0
 800f696:	d146      	bne.n	800f726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f698:	449c      	add	ip, r3
 800f69a:	1ad7      	subs	r7, r2, r3
 800f69c:	f1b9 0f00 	cmp.w	r9, #0
 800f6a0:	d009      	beq.n	800f6b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f6a2:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f6a6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f6a8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f6aa:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f6ae:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f6b2:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f6b6:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f6b8:	910e      	str	r1, [sp, #56]	@ 0x38
 800f6ba:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f6be:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f6c2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f6c6:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f6ca:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f6ce:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f6d2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f6d6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f6da:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f6de:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f6e2:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f6e6:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f6ea:	f04f 0800 	mov.w	r8, #0
 800f6ee:	f1be 0f00 	cmp.w	lr, #0
 800f6f2:	d030      	beq.n	800f756 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f6f4:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f6f6:	4431      	add	r1, r6
 800f6f8:	4549      	cmp	r1, r9
 800f6fa:	4450      	add	r0, sl
 800f6fc:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f700:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f704:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f708:	db08      	blt.n	800f71c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f70a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f70e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f712:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f716:	3001      	adds	r0, #1
 800f718:	eba1 0109 	sub.w	r1, r1, r9
 800f71c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f720:	f04f 0801 	mov.w	r8, #1
 800f724:	e7e3      	b.n	800f6ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f726:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f728:	4431      	add	r1, r6
 800f72a:	4541      	cmp	r1, r8
 800f72c:	4450      	add	r0, sl
 800f72e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f732:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f736:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f73a:	db08      	blt.n	800f74e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f73c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f740:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f744:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f748:	3001      	adds	r0, #1
 800f74a:	eba1 0108 	sub.w	r1, r1, r8
 800f74e:	3f01      	subs	r7, #1
 800f750:	f04f 0901 	mov.w	r9, #1
 800f754:	e79e      	b.n	800f694 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f756:	449c      	add	ip, r3
 800f758:	1aff      	subs	r7, r7, r3
 800f75a:	f1b8 0f00 	cmp.w	r8, #0
 800f75e:	d009      	beq.n	800f774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f760:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f764:	9019      	str	r0, [sp, #100]	@ 0x64
 800f766:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f76a:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f76e:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f772:	911d      	str	r1, [sp, #116]	@ 0x74
 800f774:	1ad2      	subs	r2, r2, r3
 800f776:	e6b5      	b.n	800f4e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f778:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f77a:	681b      	ldr	r3, [r3, #0]
 800f77c:	b923      	cbnz	r3, 800f788 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f77e:	4b04      	ldr	r3, [pc, #16]	@ (800f790 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f780:	6818      	ldr	r0, [r3, #0]
 800f782:	6803      	ldr	r3, [r0, #0]
 800f784:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f786:	4798      	blx	r3
 800f788:	b05b      	add	sp, #364	@ 0x16c
 800f78a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f78e:	bf00      	nop
 800f790:	20002dbc 	.word	0x20002dbc

0800f794 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 800f794:	b570      	push	{r4, r5, r6, lr}
 800f796:	4604      	mov	r4, r0
 800f798:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800f79c:	9805      	ldr	r0, [sp, #20]
 800f79e:	6061      	str	r1, [r4, #4]
 800f7a0:	2500      	movs	r5, #0
 800f7a2:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800f7a6:	8263      	strh	r3, [r4, #18]
 800f7a8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f7ac:	8025      	strh	r5, [r4, #0]
 800f7ae:	7221      	strb	r1, [r4, #8]
 800f7b0:	7266      	strb	r6, [r4, #9]
 800f7b2:	60e0      	str	r0, [r4, #12]
 800f7b4:	8222      	strh	r2, [r4, #16]
 800f7b6:	82a3      	strh	r3, [r4, #20]
 800f7b8:	82e5      	strh	r5, [r4, #22]
 800f7ba:	8325      	strh	r5, [r4, #24]
 800f7bc:	8365      	strh	r5, [r4, #26]
 800f7be:	83a5      	strh	r5, [r4, #28]
 800f7c0:	83e5      	strh	r5, [r4, #30]
 800f7c2:	8425      	strh	r5, [r4, #32]
 800f7c4:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 800f7c8:	b32e      	cbz	r6, 800f816 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f7ca:	6803      	ldr	r3, [r0, #0]
 800f7cc:	695b      	ldr	r3, [r3, #20]
 800f7ce:	4798      	blx	r3
 800f7d0:	4606      	mov	r6, r0
 800f7d2:	b300      	cbz	r0, 800f816 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f7d4:	68e0      	ldr	r0, [r4, #12]
 800f7d6:	6803      	ldr	r3, [r0, #0]
 800f7d8:	4631      	mov	r1, r6
 800f7da:	68db      	ldr	r3, [r3, #12]
 800f7dc:	4798      	blx	r3
 800f7de:	4605      	mov	r5, r0
 800f7e0:	b1c8      	cbz	r0, 800f816 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f7e2:	7b43      	ldrb	r3, [r0, #13]
 800f7e4:	7a82      	ldrb	r2, [r0, #10]
 800f7e6:	005b      	lsls	r3, r3, #1
 800f7e8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800f7ec:	4313      	orrs	r3, r2
 800f7ee:	8423      	strh	r3, [r4, #32]
 800f7f0:	7a63      	ldrb	r3, [r4, #9]
 800f7f2:	2b06      	cmp	r3, #6
 800f7f4:	d10f      	bne.n	800f816 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 800f7f6:	68e0      	ldr	r0, [r4, #12]
 800f7f8:	6803      	ldr	r3, [r0, #0]
 800f7fa:	462a      	mov	r2, r5
 800f7fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f7fe:	4631      	mov	r1, r6
 800f800:	4798      	blx	r3
 800f802:	7b6b      	ldrb	r3, [r5, #13]
 800f804:	005b      	lsls	r3, r3, #1
 800f806:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800f80a:	7aab      	ldrb	r3, [r5, #10]
 800f80c:	4313      	orrs	r3, r2
 800f80e:	4418      	add	r0, r3
 800f810:	8c23      	ldrh	r3, [r4, #32]
 800f812:	4418      	add	r0, r3
 800f814:	8420      	strh	r0, [r4, #32]
 800f816:	4620      	mov	r0, r4
 800f818:	bd70      	pop	{r4, r5, r6, pc}

0800f81a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800f81a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f81e:	2400      	movs	r4, #0
 800f820:	b085      	sub	sp, #20
 800f822:	4681      	mov	r9, r0
 800f824:	4688      	mov	r8, r1
 800f826:	4692      	mov	sl, r2
 800f828:	469b      	mov	fp, r3
 800f82a:	4627      	mov	r7, r4
 800f82c:	4625      	mov	r5, r4
 800f82e:	4626      	mov	r6, r4
 800f830:	4554      	cmp	r4, sl
 800f832:	da2a      	bge.n	800f88a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f834:	2300      	movs	r3, #0
 800f836:	9303      	str	r3, [sp, #12]
 800f838:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f83c:	429d      	cmp	r5, r3
 800f83e:	d004      	beq.n	800f84a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800f840:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f844:	429d      	cmp	r5, r3
 800f846:	bf18      	it	ne
 800f848:	462f      	movne	r7, r5
 800f84a:	ab03      	add	r3, sp, #12
 800f84c:	4642      	mov	r2, r8
 800f84e:	4659      	mov	r1, fp
 800f850:	4648      	mov	r0, r9
 800f852:	f002 ffb3 	bl	80127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800f856:	4605      	mov	r5, r0
 800f858:	b1b8      	cbz	r0, 800f88a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f85a:	280a      	cmp	r0, #10
 800f85c:	d015      	beq.n	800f88a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800f85e:	9a03      	ldr	r2, [sp, #12]
 800f860:	b18a      	cbz	r2, 800f886 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800f862:	7b50      	ldrb	r0, [r2, #13]
 800f864:	7a93      	ldrb	r3, [r2, #10]
 800f866:	8895      	ldrh	r5, [r2, #4]
 800f868:	0040      	lsls	r0, r0, #1
 800f86a:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 800f86e:	4303      	orrs	r3, r0
 800f870:	9301      	str	r3, [sp, #4]
 800f872:	f8d8 3000 	ldr.w	r3, [r8]
 800f876:	4639      	mov	r1, r7
 800f878:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f87a:	4640      	mov	r0, r8
 800f87c:	4798      	blx	r3
 800f87e:	9b01      	ldr	r3, [sp, #4]
 800f880:	4418      	add	r0, r3
 800f882:	4406      	add	r6, r0
 800f884:	b2b6      	uxth	r6, r6
 800f886:	3401      	adds	r4, #1
 800f888:	e7d2      	b.n	800f830 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800f88a:	4630      	mov	r0, r6
 800f88c:	b005      	add	sp, #20
 800f88e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f892 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800f892:	2a02      	cmp	r2, #2
 800f894:	b530      	push	{r4, r5, lr}
 800f896:	d011      	beq.n	800f8bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800f898:	2a03      	cmp	r2, #3
 800f89a:	d01c      	beq.n	800f8d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800f89c:	2a01      	cmp	r2, #1
 800f89e:	d10c      	bne.n	800f8ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f8a0:	888b      	ldrh	r3, [r1, #4]
 800f8a2:	8801      	ldrh	r1, [r0, #0]
 800f8a4:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800f8a8:	8844      	ldrh	r4, [r0, #2]
 800f8aa:	8004      	strh	r4, [r0, #0]
 800f8ac:	1a5b      	subs	r3, r3, r1
 800f8ae:	1a9b      	subs	r3, r3, r2
 800f8b0:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f8b4:	8043      	strh	r3, [r0, #2]
 800f8b6:	8081      	strh	r1, [r0, #4]
 800f8b8:	80c2      	strh	r2, [r0, #6]
 800f8ba:	bd30      	pop	{r4, r5, pc}
 800f8bc:	88cb      	ldrh	r3, [r1, #6]
 800f8be:	8842      	ldrh	r2, [r0, #2]
 800f8c0:	1a9b      	subs	r3, r3, r2
 800f8c2:	88c2      	ldrh	r2, [r0, #6]
 800f8c4:	1a9b      	subs	r3, r3, r2
 800f8c6:	888a      	ldrh	r2, [r1, #4]
 800f8c8:	8801      	ldrh	r1, [r0, #0]
 800f8ca:	8043      	strh	r3, [r0, #2]
 800f8cc:	1a52      	subs	r2, r2, r1
 800f8ce:	8881      	ldrh	r1, [r0, #4]
 800f8d0:	1a52      	subs	r2, r2, r1
 800f8d2:	8002      	strh	r2, [r0, #0]
 800f8d4:	e7f1      	b.n	800f8ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800f8d6:	88cb      	ldrh	r3, [r1, #6]
 800f8d8:	8841      	ldrh	r1, [r0, #2]
 800f8da:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800f8de:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f8e2:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800f8e6:	8045      	strh	r5, [r0, #2]
 800f8e8:	1a5b      	subs	r3, r3, r1
 800f8ea:	1a9b      	subs	r3, r3, r2
 800f8ec:	8003      	strh	r3, [r0, #0]
 800f8ee:	8082      	strh	r2, [r0, #4]
 800f8f0:	80c4      	strh	r4, [r0, #6]
 800f8f2:	e7e2      	b.n	800f8ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800f8f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800f8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8f8:	b09f      	sub	sp, #124	@ 0x7c
 800f8fa:	920f      	str	r2, [sp, #60]	@ 0x3c
 800f8fc:	9312      	str	r3, [sp, #72]	@ 0x48
 800f8fe:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f900:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800f902:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800f904:	8812      	ldrh	r2, [r2, #0]
 800f906:	889b      	ldrh	r3, [r3, #4]
 800f908:	900e      	str	r0, [sp, #56]	@ 0x38
 800f90a:	4413      	add	r3, r2
 800f90c:	6828      	ldr	r0, [r5, #0]
 800f90e:	9117      	str	r1, [sp, #92]	@ 0x5c
 800f910:	b21b      	sxth	r3, r3
 800f912:	9311      	str	r3, [sp, #68]	@ 0x44
 800f914:	6803      	ldr	r3, [r0, #0]
 800f916:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 800f91a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800f91c:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 800f920:	4798      	blx	r3
 800f922:	682b      	ldr	r3, [r5, #0]
 800f924:	9013      	str	r0, [sp, #76]	@ 0x4c
 800f926:	7b1a      	ldrb	r2, [r3, #12]
 800f928:	7adb      	ldrb	r3, [r3, #11]
 800f92a:	9215      	str	r2, [sp, #84]	@ 0x54
 800f92c:	9316      	str	r3, [sp, #88]	@ 0x58
 800f92e:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 800f932:	2c00      	cmp	r4, #0
 800f934:	d067      	beq.n	800fa06 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800f936:	7c2b      	ldrb	r3, [r5, #16]
 800f938:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 800f93a:	2b06      	cmp	r3, #6
 800f93c:	bf14      	ite	ne
 800f93e:	2301      	movne	r3, #1
 800f940:	2302      	moveq	r3, #2
 800f942:	4413      	add	r3, r2
 800f944:	f04f 0900 	mov.w	r9, #0
 800f948:	9310      	str	r3, [sp, #64]	@ 0x40
 800f94a:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 800f94e:	464c      	mov	r4, r9
 800f950:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 800f954:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f956:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f958:	4293      	cmp	r3, r2
 800f95a:	f280 808b 	bge.w	800fa74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800f95e:	2300      	movs	r3, #0
 800f960:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 800f964:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 800f968:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f96c:	429c      	cmp	r4, r3
 800f96e:	d006      	beq.n	800f97e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 800f970:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f972:	f242 020b 	movw	r2, #8203	@ 0x200b
 800f976:	4294      	cmp	r4, r2
 800f978:	bf18      	it	ne
 800f97a:	4623      	movne	r3, r4
 800f97c:	930c      	str	r3, [sp, #48]	@ 0x30
 800f97e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f980:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 800f982:	682a      	ldr	r2, [r5, #0]
 800f984:	428b      	cmp	r3, r1
 800f986:	db40      	blt.n	800fa0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800f988:	6813      	ldr	r3, [r2, #0]
 800f98a:	4610      	mov	r0, r2
 800f98c:	695b      	ldr	r3, [r3, #20]
 800f98e:	4798      	blx	r3
 800f990:	4604      	mov	r4, r0
 800f992:	6828      	ldr	r0, [r5, #0]
 800f994:	6803      	ldr	r3, [r0, #0]
 800f996:	aa1d      	add	r2, sp, #116	@ 0x74
 800f998:	689f      	ldr	r7, [r3, #8]
 800f99a:	4621      	mov	r1, r4
 800f99c:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800f9a0:	47b8      	blx	r7
 800f9a2:	901c      	str	r0, [sp, #112]	@ 0x70
 800f9a4:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800f9a8:	429c      	cmp	r4, r3
 800f9aa:	f000 80ea 	beq.w	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f9ae:	f242 030b 	movw	r3, #8203	@ 0x200b
 800f9b2:	429c      	cmp	r4, r3
 800f9b4:	f000 80e5 	beq.w	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800f9b8:	2c00      	cmp	r4, #0
 800f9ba:	f000 810c 	beq.w	800fbd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800f9be:	2c0a      	cmp	r4, #10
 800f9c0:	d05e      	beq.n	800fa80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800f9c2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800f9c4:	b36a      	cbz	r2, 800fa22 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800f9c6:	8894      	ldrh	r4, [r2, #4]
 800f9c8:	f1bb 0f00 	cmp.w	fp, #0
 800f9cc:	d03a      	beq.n	800fa44 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 800f9ce:	f892 900d 	ldrb.w	r9, [r2, #13]
 800f9d2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800f9d6:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 800f9da:	f892 900a 	ldrb.w	r9, [r2, #10]
 800f9de:	f1bb 0f01 	cmp.w	fp, #1
 800f9e2:	ea49 0903 	orr.w	r9, r9, r3
 800f9e6:	d133      	bne.n	800fa50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 800f9e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f9ea:	eba6 0609 	sub.w	r6, r6, r9
 800f9ee:	2b00      	cmp	r3, #0
 800f9f0:	d14d      	bne.n	800fa8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800f9f2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800f9f4:	eb09 0306 	add.w	r3, r9, r6
 800f9f8:	4413      	add	r3, r2
 800f9fa:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800f9fc:	f9b2 2000 	ldrsh.w	r2, [r2]
 800fa00:	4293      	cmp	r3, r2
 800fa02:	da4e      	bge.n	800faa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fa04:	e036      	b.n	800fa74 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 800fa06:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800fa08:	e79c      	b.n	800f944 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 800fa0a:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 800fa0e:	9301      	str	r3, [sp, #4]
 800fa10:	ab1d      	add	r3, sp, #116	@ 0x74
 800fa12:	9300      	str	r3, [sp, #0]
 800fa14:	4659      	mov	r1, fp
 800fa16:	ab1c      	add	r3, sp, #112	@ 0x70
 800fa18:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800fa1a:	f002 ff18 	bl	801284e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800fa1e:	4604      	mov	r4, r0
 800fa20:	e7c0      	b.n	800f9a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800fa22:	6828      	ldr	r0, [r5, #0]
 800fa24:	6803      	ldr	r3, [r0, #0]
 800fa26:	691b      	ldr	r3, [r3, #16]
 800fa28:	4798      	blx	r3
 800fa2a:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fa2e:	4298      	cmp	r0, r3
 800fa30:	f000 80a7 	beq.w	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fa34:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fa38:	4298      	cmp	r0, r3
 800fa3a:	f000 80a2 	beq.w	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fa3e:	f1bb 0f00 	cmp.w	fp, #0
 800fa42:	d100      	bne.n	800fa46 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800fa44:	444e      	add	r6, r9
 800fa46:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fa48:	2a00      	cmp	r2, #0
 800fa4a:	d1c0      	bne.n	800f9ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800fa4c:	4691      	mov	r9, r2
 800fa4e:	e098      	b.n	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fa50:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800fa52:	2b00      	cmp	r3, #0
 800fa54:	f000 80c1 	beq.w	800fbda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 800fa58:	f1bb 0f00 	cmp.w	fp, #0
 800fa5c:	d117      	bne.n	800fa8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 800fa5e:	6828      	ldr	r0, [r5, #0]
 800fa60:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fa62:	6803      	ldr	r3, [r0, #0]
 800fa64:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fa66:	4798      	blx	r3
 800fa68:	4406      	add	r6, r0
 800fa6a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800fa6c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 800fa6e:	1af3      	subs	r3, r6, r3
 800fa70:	4293      	cmp	r3, r2
 800fa72:	dd16      	ble.n	800faa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 800fa74:	2c00      	cmp	r4, #0
 800fa76:	f000 80ae 	beq.w	800fbd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800fa7a:	2c0a      	cmp	r4, #10
 800fa7c:	f040 809c 	bne.w	800fbb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 800fa80:	240a      	movs	r4, #10
 800fa82:	fab4 f084 	clz	r0, r4
 800fa86:	0940      	lsrs	r0, r0, #5
 800fa88:	b01f      	add	sp, #124	@ 0x7c
 800fa8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa8e:	6828      	ldr	r0, [r5, #0]
 800fa90:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800fa92:	6803      	ldr	r3, [r0, #0]
 800fa94:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fa96:	4798      	blx	r3
 800fa98:	f1bb 0f01 	cmp.w	fp, #1
 800fa9c:	eba6 0600 	sub.w	r6, r6, r0
 800faa0:	d0a7      	beq.n	800f9f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800faa2:	981c      	ldr	r0, [sp, #112]	@ 0x70
 800faa4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800faa6:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800faaa:	f9b3 8000 	ldrsh.w	r8, [r3]
 800faae:	7b43      	ldrb	r3, [r0, #13]
 800fab0:	015b      	lsls	r3, r3, #5
 800fab2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800fab6:	7983      	ldrb	r3, [r0, #6]
 800fab8:	4431      	add	r1, r6
 800faba:	4313      	orrs	r3, r2
 800fabc:	440b      	add	r3, r1
 800fabe:	4543      	cmp	r3, r8
 800fac0:	db5f      	blt.n	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fac2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 800fac4:	4299      	cmp	r1, r3
 800fac6:	da5c      	bge.n	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fac8:	6828      	ldr	r0, [r5, #0]
 800faca:	6803      	ldr	r3, [r0, #0]
 800facc:	45b0      	cmp	r8, r6
 800face:	bfc8      	it	gt
 800fad0:	eba8 0806 	subgt.w	r8, r8, r6
 800fad4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800fad6:	bfcc      	ite	gt
 800fad8:	fa1f f888 	uxthgt.w	r8, r8
 800fadc:	f04f 0800 	movle.w	r8, #0
 800fae0:	4798      	blx	r3
 800fae2:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 800fae4:	7b53      	ldrb	r3, [r2, #13]
 800fae6:	00d9      	lsls	r1, r3, #3
 800fae8:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 800faec:	7a11      	ldrb	r1, [r2, #8]
 800faee:	4339      	orrs	r1, r7
 800faf0:	065f      	lsls	r7, r3, #25
 800faf2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 800faf4:	bf44      	itt	mi
 800faf6:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 800fafa:	b209      	sxthmi	r1, r1
 800fafc:	19c7      	adds	r7, r0, r7
 800fafe:	1a7f      	subs	r7, r7, r1
 800fb00:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 800fb02:	b2bf      	uxth	r7, r7
 800fb04:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800fb08:	fa0f fa87 	sxth.w	sl, r7
 800fb0c:	4551      	cmp	r1, sl
 800fb0e:	dd3c      	ble.n	800fb8a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800fb10:	011b      	lsls	r3, r3, #4
 800fb12:	79d0      	ldrb	r0, [r2, #7]
 800fb14:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800fb18:	4303      	orrs	r3, r0
 800fb1a:	449a      	add	sl, r3
 800fb1c:	4551      	cmp	r1, sl
 800fb1e:	dc30      	bgt.n	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fb20:	1bcf      	subs	r7, r1, r7
 800fb22:	b23f      	sxth	r7, r7
 800fb24:	468a      	mov	sl, r1
 800fb26:	9219      	str	r2, [sp, #100]	@ 0x64
 800fb28:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800fb2a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800fb2c:	6828      	ldr	r0, [r5, #0]
 800fb2e:	2a00      	cmp	r2, #0
 800fb30:	d12d      	bne.n	800fb8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800fb32:	9318      	str	r3, [sp, #96]	@ 0x60
 800fb34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800fb36:	6819      	ldr	r1, [r3, #0]
 800fb38:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 800fb3a:	6801      	ldr	r1, [r0, #0]
 800fb3c:	9314      	str	r3, [sp, #80]	@ 0x50
 800fb3e:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 800fb40:	4788      	blx	r1
 800fb42:	79a9      	ldrb	r1, [r5, #6]
 800fb44:	910b      	str	r1, [sp, #44]	@ 0x2c
 800fb46:	7ba9      	ldrb	r1, [r5, #14]
 800fb48:	910a      	str	r1, [sp, #40]	@ 0x28
 800fb4a:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 800fb4e:	9109      	str	r1, [sp, #36]	@ 0x24
 800fb50:	68a9      	ldr	r1, [r5, #8]
 800fb52:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 800fb54:	9306      	str	r3, [sp, #24]
 800fb56:	b2bf      	uxth	r7, r7
 800fb58:	e9cd 8702 	strd	r8, r7, [sp, #8]
 800fb5c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 800fb5e:	9304      	str	r3, [sp, #16]
 800fb60:	44b0      	add	r8, r6
 800fb62:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800fb66:	fa0f f388 	sxth.w	r3, r8
 800fb6a:	9300      	str	r3, [sp, #0]
 800fb6c:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 800fb6e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800fb70:	9205      	str	r2, [sp, #20]
 800fb72:	f8cd a004 	str.w	sl, [sp, #4]
 800fb76:	681a      	ldr	r2, [r3, #0]
 800fb78:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 800fb7a:	685b      	ldr	r3, [r3, #4]
 800fb7c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 800fb7e:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 800fb80:	47b8      	blx	r7
 800fb82:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800fb84:	3301      	adds	r3, #1
 800fb86:	930d      	str	r3, [sp, #52]	@ 0x34
 800fb88:	e6e4      	b.n	800f954 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 800fb8a:	2700      	movs	r7, #0
 800fb8c:	e7cb      	b.n	800fb26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 800fb8e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800fb90:	f8d2 c008 	ldr.w	ip, [r2, #8]
 800fb94:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 800fb96:	f8dc 1000 	ldr.w	r1, [ip]
 800fb9a:	e9cd 6204 	strd	r6, r2, [sp, #16]
 800fb9e:	79aa      	ldrb	r2, [r5, #6]
 800fba0:	9203      	str	r2, [sp, #12]
 800fba2:	7baa      	ldrb	r2, [r5, #14]
 800fba4:	9202      	str	r2, [sp, #8]
 800fba6:	68aa      	ldr	r2, [r5, #8]
 800fba8:	e9cd 0200 	strd	r0, r2, [sp]
 800fbac:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 800fbae:	688f      	ldr	r7, [r1, #8]
 800fbb0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800fbb2:	4660      	mov	r0, ip
 800fbb4:	47b8      	blx	r7
 800fbb6:	e7e4      	b.n	800fb82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800fbb8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800fbba:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 800fbbc:	3501      	adds	r5, #1
 800fbbe:	429d      	cmp	r5, r3
 800fbc0:	f6bf af5f 	bge.w	800fa82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fbc4:	4659      	mov	r1, fp
 800fbc6:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 800fbc8:	f7fa fd2a 	bl	800a620 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800fbcc:	4604      	mov	r4, r0
 800fbce:	b110      	cbz	r0, 800fbd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 800fbd0:	280a      	cmp	r0, #10
 800fbd2:	d1f2      	bne.n	800fbba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 800fbd4:	e754      	b.n	800fa80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 800fbd6:	2400      	movs	r4, #0
 800fbd8:	e753      	b.n	800fa82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 800fbda:	f1bb 0f00 	cmp.w	fp, #0
 800fbde:	f43f af44 	beq.w	800fa6a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 800fbe2:	e75e      	b.n	800faa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

0800fbe4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800fbe4:	b530      	push	{r4, r5, lr}
 800fbe6:	8ac4      	ldrh	r4, [r0, #22]
 800fbe8:	8b45      	ldrh	r5, [r0, #26]
 800fbea:	8343      	strh	r3, [r0, #26]
 800fbec:	442c      	add	r4, r5
 800fbee:	1ae4      	subs	r4, r4, r3
 800fbf0:	82c4      	strh	r4, [r0, #22]
 800fbf2:	8b83      	ldrh	r3, [r0, #28]
 800fbf4:	8b04      	ldrh	r4, [r0, #24]
 800fbf6:	4422      	add	r2, r4
 800fbf8:	440c      	add	r4, r1
 800fbfa:	1a59      	subs	r1, r3, r1
 800fbfc:	83c2      	strh	r2, [r0, #30]
 800fbfe:	8304      	strh	r4, [r0, #24]
 800fc00:	8381      	strh	r1, [r0, #28]
 800fc02:	bd30      	pop	{r4, r5, pc}

0800fc04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 800fc04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc08:	4604      	mov	r4, r0
 800fc0a:	8a47      	ldrh	r7, [r0, #18]
 800fc0c:	68c0      	ldr	r0, [r0, #12]
 800fc0e:	6803      	ldr	r3, [r0, #0]
 800fc10:	b085      	sub	sp, #20
 800fc12:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fc14:	4798      	blx	r3
 800fc16:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 800fc1a:	7a63      	ldrb	r3, [r4, #9]
 800fc1c:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 800fc20:	42b7      	cmp	r7, r6
 800fc22:	f103 33ff 	add.w	r3, r3, #4294967295
 800fc26:	bfac      	ite	ge
 800fc28:	f04f 0900 	movge.w	r9, #0
 800fc2c:	f04f 0901 	movlt.w	r9, #1
 800fc30:	2b05      	cmp	r3, #5
 800fc32:	d804      	bhi.n	800fc3e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 800fc34:	e8df f003 	tbb	[pc, r3]
 800fc38:	470e0854 	.word	0x470e0854
 800fc3c:	4c4c      	.short	0x4c4c
 800fc3e:	2500      	movs	r5, #0
 800fc40:	46a9      	mov	r9, r5
 800fc42:	462e      	mov	r6, r5
 800fc44:	462f      	mov	r7, r5
 800fc46:	e00d      	b.n	800fc64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fc48:	42b7      	cmp	r7, r6
 800fc4a:	bfb4      	ite	lt
 800fc4c:	2600      	movlt	r6, #0
 800fc4e:	2601      	movge	r6, #1
 800fc50:	2500      	movs	r5, #0
 800fc52:	e7f7      	b.n	800fc44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800fc54:	42b7      	cmp	r7, r6
 800fc56:	464d      	mov	r5, r9
 800fc58:	f04f 0900 	mov.w	r9, #0
 800fc5c:	bfb4      	ite	lt
 800fc5e:	2600      	movlt	r6, #0
 800fc60:	2601      	movge	r6, #1
 800fc62:	464f      	mov	r7, r9
 800fc64:	f04f 0800 	mov.w	r8, #0
 800fc68:	f8a4 8016 	strh.w	r8, [r4, #22]
 800fc6c:	f8a4 8018 	strh.w	r8, [r4, #24]
 800fc70:	f8cd 8004 	str.w	r8, [sp, #4]
 800fc74:	2300      	movs	r3, #0
 800fc76:	9303      	str	r3, [sp, #12]
 800fc78:	8823      	ldrh	r3, [r4, #0]
 800fc7a:	2b20      	cmp	r3, #32
 800fc7c:	d034      	beq.n	800fce8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 800fc7e:	f242 010b 	movw	r1, #8203	@ 0x200b
 800fc82:	1a5a      	subs	r2, r3, r1
 800fc84:	f1d2 0a00 	rsbs	sl, r2, #0
 800fc88:	eb4a 0a02 	adc.w	sl, sl, r2
 800fc8c:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 800fc90:	4293      	cmp	r3, r2
 800fc92:	d009      	beq.n	800fca8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800fc94:	428b      	cmp	r3, r1
 800fc96:	9a01      	ldr	r2, [sp, #4]
 800fc98:	bf18      	it	ne
 800fc9a:	461a      	movne	r2, r3
 800fc9c:	9201      	str	r2, [sp, #4]
 800fc9e:	bf0c      	ite	eq
 800fca0:	f04f 0a01 	moveq.w	sl, #1
 800fca4:	f04f 0a00 	movne.w	sl, #0
 800fca8:	ab03      	add	r3, sp, #12
 800fcaa:	68e2      	ldr	r2, [r4, #12]
 800fcac:	7a21      	ldrb	r1, [r4, #8]
 800fcae:	6860      	ldr	r0, [r4, #4]
 800fcb0:	f002 fd84 	bl	80127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800fcb4:	8020      	strh	r0, [r4, #0]
 800fcb6:	b9d8      	cbnz	r0, 800fcf0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 800fcb8:	8ba2      	ldrh	r2, [r4, #28]
 800fcba:	2300      	movs	r3, #0
 800fcbc:	4611      	mov	r1, r2
 800fcbe:	4620      	mov	r0, r4
 800fcc0:	f7ff ff90 	bl	800fbe4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fcc4:	e06e      	b.n	800fda4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800fcc6:	2500      	movs	r5, #0
 800fcc8:	46a9      	mov	r9, r5
 800fcca:	462e      	mov	r6, r5
 800fccc:	2701      	movs	r7, #1
 800fcce:	e7c9      	b.n	800fc64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fcd0:	42b7      	cmp	r7, r6
 800fcd2:	f04f 0500 	mov.w	r5, #0
 800fcd6:	bfb4      	ite	lt
 800fcd8:	2700      	movlt	r7, #0
 800fcda:	2701      	movge	r7, #1
 800fcdc:	462e      	mov	r6, r5
 800fcde:	e7c1      	b.n	800fc64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 800fce0:	2500      	movs	r5, #0
 800fce2:	46a9      	mov	r9, r5
 800fce4:	2601      	movs	r6, #1
 800fce6:	e7ad      	b.n	800fc44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 800fce8:	9301      	str	r3, [sp, #4]
 800fcea:	f04f 0a01 	mov.w	sl, #1
 800fcee:	e7db      	b.n	800fca8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 800fcf0:	8b63      	ldrh	r3, [r4, #26]
 800fcf2:	280a      	cmp	r0, #10
 800fcf4:	f103 0301 	add.w	r3, r3, #1
 800fcf8:	8363      	strh	r3, [r4, #26]
 800fcfa:	d0dd      	beq.n	800fcb8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 800fcfc:	9a03      	ldr	r2, [sp, #12]
 800fcfe:	bb62      	cbnz	r2, 800fd5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 800fd00:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 800fd04:	4298      	cmp	r0, r3
 800fd06:	d003      	beq.n	800fd10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800fd08:	f242 030b 	movw	r3, #8203	@ 0x200b
 800fd0c:	4298      	cmp	r0, r3
 800fd0e:	d1b1      	bne.n	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fd10:	8823      	ldrh	r3, [r4, #0]
 800fd12:	8ba1      	ldrh	r1, [r4, #28]
 800fd14:	2b20      	cmp	r3, #32
 800fd16:	d003      	beq.n	800fd20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 800fd18:	f242 000b 	movw	r0, #8203	@ 0x200b
 800fd1c:	4283      	cmp	r3, r0
 800fd1e:	d131      	bne.n	800fd84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 800fd20:	f1ba 0f00 	cmp.w	sl, #0
 800fd24:	bf0a      	itet	eq
 800fd26:	4688      	moveq	r8, r1
 800fd28:	4650      	movne	r0, sl
 800fd2a:	2001      	moveq	r0, #1
 800fd2c:	440a      	add	r2, r1
 800fd2e:	8b23      	ldrh	r3, [r4, #24]
 800fd30:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800fd34:	b292      	uxth	r2, r2
 800fd36:	83a2      	strh	r2, [r4, #28]
 800fd38:	4413      	add	r3, r2
 800fd3a:	f1b9 0f00 	cmp.w	r9, #0
 800fd3e:	d102      	bne.n	800fd46 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 800fd40:	2d00      	cmp	r5, #0
 800fd42:	d042      	beq.n	800fdca <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 800fd44:	b300      	cbz	r0, 800fd88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 800fd46:	8c21      	ldrh	r1, [r4, #32]
 800fd48:	4419      	add	r1, r3
 800fd4a:	458c      	cmp	ip, r1
 800fd4c:	da37      	bge.n	800fdbe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800fd4e:	8ae1      	ldrh	r1, [r4, #22]
 800fd50:	2900      	cmp	r1, #0
 800fd52:	d034      	beq.n	800fdbe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 800fd54:	4563      	cmp	r3, ip
 800fd56:	dd8d      	ble.n	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fd58:	e01d      	b.n	800fd96 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 800fd5a:	8893      	ldrh	r3, [r2, #4]
 800fd5c:	8023      	strh	r3, [r4, #0]
 800fd5e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 800fd62:	9901      	ldr	r1, [sp, #4]
 800fd64:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 800fd68:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 800fd6c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 800fd70:	ea4b 0b00 	orr.w	fp, fp, r0
 800fd74:	68e0      	ldr	r0, [r4, #12]
 800fd76:	6803      	ldr	r3, [r0, #0]
 800fd78:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fd7a:	4798      	blx	r3
 800fd7c:	eb0b 0200 	add.w	r2, fp, r0
 800fd80:	b292      	uxth	r2, r2
 800fd82:	e7c5      	b.n	800fd10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 800fd84:	2000      	movs	r0, #0
 800fd86:	e7d1      	b.n	800fd2c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 800fd88:	4563      	cmp	r3, ip
 800fd8a:	f77f af73 	ble.w	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fd8e:	8ae3      	ldrh	r3, [r4, #22]
 800fd90:	2b00      	cmp	r3, #0
 800fd92:	f43f af6f 	beq.w	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fd96:	2301      	movs	r3, #1
 800fd98:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 800fd9c:	8c22      	ldrh	r2, [r4, #32]
 800fd9e:	8be3      	ldrh	r3, [r4, #30]
 800fda0:	4413      	add	r3, r2
 800fda2:	83e3      	strh	r3, [r4, #30]
 800fda4:	68e0      	ldr	r0, [r4, #12]
 800fda6:	6803      	ldr	r3, [r0, #0]
 800fda8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fdaa:	4798      	blx	r3
 800fdac:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 800fdb0:	4418      	add	r0, r3
 800fdb2:	8a63      	ldrh	r3, [r4, #18]
 800fdb4:	1a18      	subs	r0, r3, r0
 800fdb6:	8260      	strh	r0, [r4, #18]
 800fdb8:	b005      	add	sp, #20
 800fdba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fdbe:	2300      	movs	r3, #0
 800fdc0:	4611      	mov	r1, r2
 800fdc2:	4620      	mov	r0, r4
 800fdc4:	f7ff ff0e 	bl	800fbe4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800fdc8:	e754      	b.n	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fdca:	4563      	cmp	r3, ip
 800fdcc:	dd14      	ble.n	800fdf8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 800fdce:	b117      	cbz	r7, 800fdd6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 800fdd0:	2301      	movs	r3, #1
 800fdd2:	460a      	mov	r2, r1
 800fdd4:	e772      	b.n	800fcbc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 800fdd6:	2e00      	cmp	r6, #0
 800fdd8:	f43f af4c 	beq.w	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fddc:	2800      	cmp	r0, #0
 800fdde:	f47f af49 	bne.w	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fde2:	f1ba 0f00 	cmp.w	sl, #0
 800fde6:	d002      	beq.n	800fdee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 800fde8:	2301      	movs	r3, #1
 800fdea:	4642      	mov	r2, r8
 800fdec:	e767      	b.n	800fcbe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 800fdee:	8ae3      	ldrh	r3, [r4, #22]
 800fdf0:	2b00      	cmp	r3, #0
 800fdf2:	f43f af3f 	beq.w	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fdf6:	e7d5      	b.n	800fda4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 800fdf8:	2800      	cmp	r0, #0
 800fdfa:	f47f af3b 	bne.w	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fdfe:	f1ba 0f00 	cmp.w	sl, #0
 800fe02:	f43f af37 	beq.w	800fc74 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 800fe06:	2301      	movs	r3, #1
 800fe08:	4642      	mov	r2, r8
 800fe0a:	e7da      	b.n	800fdc2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0800fe0c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800fe0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe0e:	4605      	mov	r5, r0
 800fe10:	b08f      	sub	sp, #60	@ 0x3c
 800fe12:	4617      	mov	r7, r2
 800fe14:	461c      	mov	r4, r3
 800fe16:	460e      	mov	r6, r1
 800fe18:	b1d1      	cbz	r1, 800fe50 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800fe1a:	681b      	ldr	r3, [r3, #0]
 800fe1c:	4620      	mov	r0, r4
 800fe1e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fe20:	4798      	blx	r3
 800fe22:	4240      	negs	r0, r0
 800fe24:	b200      	sxth	r0, r0
 800fe26:	e9cd 4001 	strd	r4, r0, [sp, #4]
 800fe2a:	9603      	str	r6, [sp, #12]
 800fe2c:	9700      	str	r7, [sp, #0]
 800fe2e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800fe32:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 800fe36:	4629      	mov	r1, r5
 800fe38:	a805      	add	r0, sp, #20
 800fe3a:	f7ff fcab 	bl	800f794 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800fe3e:	2401      	movs	r4, #1
 800fe40:	a805      	add	r0, sp, #20
 800fe42:	f7ff fedf 	bl	800fc04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800fe46:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fe4a:	b163      	cbz	r3, 800fe66 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 800fe4c:	3401      	adds	r4, #1
 800fe4e:	e7f7      	b.n	800fe40 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800fe50:	f002 fd82 	bl	8012958 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fe54:	2401      	movs	r4, #1
 800fe56:	280a      	cmp	r0, #10
 800fe58:	4628      	mov	r0, r5
 800fe5a:	bf08      	it	eq
 800fe5c:	3401      	addeq	r4, #1
 800fe5e:	f002 fd7b 	bl	8012958 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800fe62:	2800      	cmp	r0, #0
 800fe64:	d1f7      	bne.n	800fe56 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 800fe66:	b2a0      	uxth	r0, r4
 800fe68:	b00f      	add	sp, #60	@ 0x3c
 800fe6a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fe6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800fe6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe70:	b0e3      	sub	sp, #396	@ 0x18c
 800fe72:	461c      	mov	r4, r3
 800fe74:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 800fe76:	4683      	mov	fp, r0
 800fe78:	4688      	mov	r8, r1
 800fe7a:	2b00      	cmp	r3, #0
 800fe7c:	f000 8112 	beq.w	80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fe80:	6823      	ldr	r3, [r4, #0]
 800fe82:	2b00      	cmp	r3, #0
 800fe84:	f000 810e 	beq.w	80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fe88:	7ba3      	ldrb	r3, [r4, #14]
 800fe8a:	2b00      	cmp	r3, #0
 800fe8c:	f000 810a 	beq.w	80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fe90:	6810      	ldr	r0, [r2, #0]
 800fe92:	6851      	ldr	r1, [r2, #4]
 800fe94:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 800fe98:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800fe9c:	ad0a      	add	r5, sp, #40	@ 0x28
 800fe9e:	462b      	mov	r3, r5
 800fea0:	c303      	stmia	r3!, {r0, r1}
 800fea2:	2100      	movs	r1, #0
 800fea4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 800fea8:	910c      	str	r1, [sp, #48]	@ 0x30
 800feaa:	79a2      	ldrb	r2, [r4, #6]
 800feac:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800feb0:	a90c      	add	r1, sp, #48	@ 0x30
 800feb2:	4628      	mov	r0, r5
 800feb4:	f7ff fced 	bl	800f892 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800feb8:	a90c      	add	r1, sp, #48	@ 0x30
 800feba:	4608      	mov	r0, r1
 800febc:	79a2      	ldrb	r2, [r4, #6]
 800febe:	f7ff fce8 	bl	800f892 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800fec2:	a817      	add	r0, sp, #92	@ 0x5c
 800fec4:	f002 f8f2 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 800fec8:	6820      	ldr	r0, [r4, #0]
 800feca:	6803      	ldr	r3, [r0, #0]
 800fecc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fece:	4798      	blx	r3
 800fed0:	4606      	mov	r6, r0
 800fed2:	6820      	ldr	r0, [r4, #0]
 800fed4:	6803      	ldr	r3, [r0, #0]
 800fed6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800fed8:	4798      	blx	r3
 800feda:	4633      	mov	r3, r6
 800fedc:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800fede:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800fee0:	9000      	str	r0, [sp, #0]
 800fee2:	a817      	add	r0, sp, #92	@ 0x5c
 800fee4:	f002 f93d 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fee8:	6820      	ldr	r0, [r4, #0]
 800feea:	f894 a004 	ldrb.w	sl, [r4, #4]
 800feee:	6803      	ldr	r3, [r0, #0]
 800fef0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fef2:	4798      	blx	r3
 800fef4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 800fef8:	6823      	ldr	r3, [r4, #0]
 800fefa:	4607      	mov	r7, r0
 800fefc:	4406      	add	r6, r0
 800fefe:	a830      	add	r0, sp, #192	@ 0xc0
 800ff00:	f893 9009 	ldrb.w	r9, [r3, #9]
 800ff04:	f002 f8d2 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 800ff08:	7c23      	ldrb	r3, [r4, #16]
 800ff0a:	b17b      	cbz	r3, 800ff2c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 800ff0c:	6820      	ldr	r0, [r4, #0]
 800ff0e:	6803      	ldr	r3, [r0, #0]
 800ff10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800ff12:	4798      	blx	r3
 800ff14:	9009      	str	r0, [sp, #36]	@ 0x24
 800ff16:	6820      	ldr	r0, [r4, #0]
 800ff18:	6802      	ldr	r2, [r0, #0]
 800ff1a:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 800ff1c:	4790      	blx	r2
 800ff1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ff20:	9000      	str	r0, [sp, #0]
 800ff22:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 800ff24:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 800ff26:	a830      	add	r0, sp, #192	@ 0xc0
 800ff28:	f002 f91b 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ff2c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 800ff30:	7be2      	ldrb	r2, [r4, #15]
 800ff32:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 800ff36:	1a8a      	subs	r2, r1, r2
 800ff38:	7c21      	ldrb	r1, [r4, #16]
 800ff3a:	9103      	str	r1, [sp, #12]
 800ff3c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 800ff40:	9102      	str	r1, [sp, #8]
 800ff42:	6821      	ldr	r1, [r4, #0]
 800ff44:	9101      	str	r1, [sp, #4]
 800ff46:	7961      	ldrb	r1, [r4, #5]
 800ff48:	9100      	str	r1, [sp, #0]
 800ff4a:	b292      	uxth	r2, r2
 800ff4c:	a930      	add	r1, sp, #192	@ 0xc0
 800ff4e:	a80e      	add	r0, sp, #56	@ 0x38
 800ff50:	f7ff fc20 	bl	800f794 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 800ff54:	2e00      	cmp	r6, #0
 800ff56:	dc5b      	bgt.n	8010010 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 800ff58:	af17      	add	r7, sp, #92	@ 0x5c
 800ff5a:	f04f 0900 	mov.w	r9, #0
 800ff5e:	7c23      	ldrb	r3, [r4, #16]
 800ff60:	2b00      	cmp	r3, #0
 800ff62:	f000 80b1 	beq.w	80100c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 800ff66:	a80e      	add	r0, sp, #56	@ 0x38
 800ff68:	f7ff fe4c 	bl	800fc04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ff6c:	f1ba 0f00 	cmp.w	sl, #0
 800ff70:	f000 80a5 	beq.w	80100be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800ff74:	7c23      	ldrb	r3, [r4, #16]
 800ff76:	9309      	str	r3, [sp, #36]	@ 0x24
 800ff78:	2264      	movs	r2, #100	@ 0x64
 800ff7a:	4639      	mov	r1, r7
 800ff7c:	a849      	add	r0, sp, #292	@ 0x124
 800ff7e:	f012 fcaa 	bl	80228d6 <memcpy>
 800ff82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ff84:	2b00      	cmp	r3, #0
 800ff86:	f000 80a7 	beq.w	80100d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 800ff8a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 800ff8e:	7922      	ldrb	r2, [r4, #4]
 800ff90:	2a01      	cmp	r2, #1
 800ff92:	f040 808a 	bne.w	80100aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 800ff96:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 800ff9a:	1ac0      	subs	r0, r0, r3
 800ff9c:	2302      	movs	r3, #2
 800ff9e:	fb90 f0f3 	sdiv	r0, r0, r3
 800ffa2:	b200      	sxth	r0, r0
 800ffa4:	7c23      	ldrb	r3, [r4, #16]
 800ffa6:	2b00      	cmp	r3, #0
 800ffa8:	f000 808b 	beq.w	80100c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800ffac:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 800ffb0:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 800ffb4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800ffb8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800ffbc:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 800ffc0:	4410      	add	r0, r2
 800ffc2:	b200      	sxth	r0, r0
 800ffc4:	9000      	str	r0, [sp, #0]
 800ffc6:	e9cd 9703 	strd	r9, r7, [sp, #12]
 800ffca:	e9cd 5401 	strd	r5, r4, [sp, #4]
 800ffce:	4642      	mov	r2, r8
 800ffd0:	2100      	movs	r1, #0
 800ffd2:	4658      	mov	r0, fp
 800ffd4:	f7ff fc8e 	bl	800f8f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800ffd8:	2800      	cmp	r0, #0
 800ffda:	d163      	bne.n	80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800ffdc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 800ffe0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 800ffe4:	b2b2      	uxth	r2, r6
 800ffe6:	4413      	add	r3, r2
 800ffe8:	1a8a      	subs	r2, r1, r2
 800ffea:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 800ffee:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 800fff2:	b21b      	sxth	r3, r3
 800fff4:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800fff8:	2a00      	cmp	r2, #0
 800fffa:	d153      	bne.n	80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 800fffc:	6822      	ldr	r2, [r4, #0]
 800fffe:	8869      	ldrh	r1, [r5, #2]
 8010000:	7a12      	ldrb	r2, [r2, #8]
 8010002:	1a9b      	subs	r3, r3, r2
 8010004:	88ea      	ldrh	r2, [r5, #6]
 8010006:	440a      	add	r2, r1
 8010008:	b212      	sxth	r2, r2
 801000a:	4293      	cmp	r3, r2
 801000c:	dda7      	ble.n	800ff5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801000e:	e049      	b.n	80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010010:	7c23      	ldrb	r3, [r4, #16]
 8010012:	444f      	add	r7, r9
 8010014:	b1c3      	cbz	r3, 8010048 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8010016:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 801001a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801001e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010022:	443b      	add	r3, r7
 8010024:	4293      	cmp	r3, r2
 8010026:	da97      	bge.n	800ff58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8010028:	a80e      	add	r0, sp, #56	@ 0x38
 801002a:	f7ff fdeb 	bl	800fc04 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801002e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8010032:	3b01      	subs	r3, #1
 8010034:	b29b      	uxth	r3, r3
 8010036:	454b      	cmp	r3, r9
 8010038:	9309      	str	r3, [sp, #36]	@ 0x24
 801003a:	d021      	beq.n	8010080 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801003c:	7961      	ldrb	r1, [r4, #5]
 801003e:	a817      	add	r0, sp, #92	@ 0x5c
 8010040:	f7fa faee 	bl	800a620 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010044:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010046:	e7f4      	b.n	8010032 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8010048:	fa1f f986 	uxth.w	r9, r6
 801004c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010050:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8010054:	443b      	add	r3, r7
 8010056:	4293      	cmp	r3, r2
 8010058:	f6bf af7e 	bge.w	800ff58 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801005c:	a817      	add	r0, sp, #92	@ 0x5c
 801005e:	f002 fc7b 	bl	8012958 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010062:	b1f8      	cbz	r0, 80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8010064:	280a      	cmp	r0, #10
 8010066:	d1f1      	bne.n	801004c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8010068:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801006c:	444b      	add	r3, r9
 801006e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8010072:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8010076:	eba3 0309 	sub.w	r3, r3, r9
 801007a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801007e:	e7e5      	b.n	801004c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8010080:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8010084:	b2b3      	uxth	r3, r6
 8010086:	441a      	add	r2, r3
 8010088:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801008c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8010090:	1ad3      	subs	r3, r2, r3
 8010092:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8010096:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801009a:	b11b      	cbz	r3, 80100a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801009c:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 80100a0:	2b00      	cmp	r3, #0
 80100a2:	d0ba      	beq.n	801001a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80100a4:	b063      	add	sp, #396	@ 0x18c
 80100a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100aa:	2a02      	cmp	r2, #2
 80100ac:	d105      	bne.n	80100ba <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80100ae:	7be2      	ldrb	r2, [r4, #15]
 80100b0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 80100b4:	1a80      	subs	r0, r0, r2
 80100b6:	1ac0      	subs	r0, r0, r3
 80100b8:	e773      	b.n	800ffa2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80100ba:	2000      	movs	r0, #0
 80100bc:	e772      	b.n	800ffa4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80100be:	7be0      	ldrb	r0, [r4, #15]
 80100c0:	e770      	b.n	800ffa4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80100c2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 80100c6:	e773      	b.n	800ffb0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80100c8:	f1ba 0f00 	cmp.w	sl, #0
 80100cc:	d0f7      	beq.n	80100be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80100ce:	2264      	movs	r2, #100	@ 0x64
 80100d0:	4639      	mov	r1, r7
 80100d2:	a849      	add	r0, sp, #292	@ 0x124
 80100d4:	f012 fbff 	bl	80228d6 <memcpy>
 80100d8:	2300      	movs	r3, #0
 80100da:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 80100de:	6821      	ldr	r1, [r4, #0]
 80100e0:	a849      	add	r0, sp, #292	@ 0x124
 80100e2:	f7ff fb9a 	bl	800f81a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80100e6:	b203      	sxth	r3, r0
 80100e8:	e751      	b.n	800ff8e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080100ea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80100ea:	2b03      	cmp	r3, #3
 80100ec:	d818      	bhi.n	8010120 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80100ee:	e8df f003 	tbb	[pc, r3]
 80100f2:	0602      	.short	0x0602
 80100f4:	130d      	.short	0x130d
 80100f6:	f9b0 2000 	ldrsh.w	r2, [r0]
 80100fa:	1850      	adds	r0, r2, r1
 80100fc:	4770      	bx	lr
 80100fe:	8803      	ldrh	r3, [r0, #0]
 8010100:	8880      	ldrh	r0, [r0, #4]
 8010102:	4418      	add	r0, r3
 8010104:	b200      	sxth	r0, r0
 8010106:	1a80      	subs	r0, r0, r2
 8010108:	3801      	subs	r0, #1
 801010a:	4770      	bx	lr
 801010c:	8803      	ldrh	r3, [r0, #0]
 801010e:	8880      	ldrh	r0, [r0, #4]
 8010110:	4418      	add	r0, r3
 8010112:	b200      	sxth	r0, r0
 8010114:	1a40      	subs	r0, r0, r1
 8010116:	e7f7      	b.n	8010108 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010118:	f9b0 0000 	ldrsh.w	r0, [r0]
 801011c:	4410      	add	r0, r2
 801011e:	4770      	bx	lr
 8010120:	2000      	movs	r0, #0
 8010122:	4770      	bx	lr

08010124 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010124:	2b03      	cmp	r3, #3
 8010126:	d817      	bhi.n	8010158 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010128:	e8df f003 	tbb	[pc, r3]
 801012c:	10090602 	.word	0x10090602
 8010130:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010134:	1850      	adds	r0, r2, r1
 8010136:	4770      	bx	lr
 8010138:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801013c:	e7fa      	b.n	8010134 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801013e:	8843      	ldrh	r3, [r0, #2]
 8010140:	88c0      	ldrh	r0, [r0, #6]
 8010142:	4418      	add	r0, r3
 8010144:	b200      	sxth	r0, r0
 8010146:	1a80      	subs	r0, r0, r2
 8010148:	3801      	subs	r0, #1
 801014a:	4770      	bx	lr
 801014c:	8843      	ldrh	r3, [r0, #2]
 801014e:	88c0      	ldrh	r0, [r0, #6]
 8010150:	4418      	add	r0, r3
 8010152:	b200      	sxth	r0, r0
 8010154:	1a40      	subs	r0, r0, r1
 8010156:	e7f7      	b.n	8010148 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010158:	2000      	movs	r0, #0
 801015a:	4770      	bx	lr

0801015c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801015c:	4b01      	ldr	r3, [pc, #4]	@ (8010164 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801015e:	2200      	movs	r2, #0
 8010160:	601a      	str	r2, [r3, #0]
 8010162:	4770      	bx	lr
 8010164:	20002dc4 	.word	0x20002dc4

08010168 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010168:	4603      	mov	r3, r0
 801016a:	b1c8      	cbz	r0, 80101a0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801016c:	0c02      	lsrs	r2, r0, #16
 801016e:	0412      	lsls	r2, r2, #16
 8010170:	b9a2      	cbnz	r2, 801019c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010172:	0403      	lsls	r3, r0, #16
 8010174:	2010      	movs	r0, #16
 8010176:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 801017a:	bf04      	itt	eq
 801017c:	021b      	lsleq	r3, r3, #8
 801017e:	3008      	addeq	r0, #8
 8010180:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8010184:	bf04      	itt	eq
 8010186:	011b      	lsleq	r3, r3, #4
 8010188:	3004      	addeq	r0, #4
 801018a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 801018e:	bf04      	itt	eq
 8010190:	009b      	lsleq	r3, r3, #2
 8010192:	3002      	addeq	r0, #2
 8010194:	2b00      	cmp	r3, #0
 8010196:	db04      	blt.n	80101a2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010198:	3001      	adds	r0, #1
 801019a:	4770      	bx	lr
 801019c:	2000      	movs	r0, #0
 801019e:	e7ea      	b.n	8010176 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80101a0:	2020      	movs	r0, #32
 80101a2:	4770      	bx	lr

080101a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80101a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101a8:	b087      	sub	sp, #28
 80101aa:	460d      	mov	r5, r1
 80101ac:	4616      	mov	r6, r2
 80101ae:	4698      	mov	r8, r3
 80101b0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 80101b4:	4601      	mov	r1, r0
 80101b6:	b120      	cbz	r0, 80101c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80101b8:	b11a      	cbz	r2, 80101c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80101ba:	2d1f      	cmp	r5, #31
 80101bc:	d801      	bhi.n	80101c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80101be:	2b1f      	cmp	r3, #31
 80101c0:	d904      	bls.n	80101cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 80101c2:	2000      	movs	r0, #0
 80101c4:	6038      	str	r0, [r7, #0]
 80101c6:	b007      	add	sp, #28
 80101c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101cc:	b97d      	cbnz	r5, 80101ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 80101ce:	b143      	cbz	r3, 80101e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 80101d0:	4602      	mov	r2, r0
 80101d2:	e9cd 4700 	strd	r4, r7, [sp]
 80101d6:	462b      	mov	r3, r5
 80101d8:	4641      	mov	r1, r8
 80101da:	4630      	mov	r0, r6
 80101dc:	f7ff ffe2 	bl	80101a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80101e0:	e7f1      	b.n	80101c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80101e2:	f04f 33ff 	mov.w	r3, #4294967295
 80101e6:	603b      	str	r3, [r7, #0]
 80101e8:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80101ec:	e7eb      	b.n	80101c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80101ee:	fa32 fa05 	lsrs.w	sl, r2, r5
 80101f2:	d106      	bne.n	8010202 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80101f4:	4346      	muls	r6, r0
 80101f6:	fbb6 f0f4 	udiv	r0, r6, r4
 80101fa:	fb04 6610 	mls	r6, r4, r0, r6
 80101fe:	603e      	str	r6, [r7, #0]
 8010200:	e7e1      	b.n	80101c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8010202:	2201      	movs	r2, #1
 8010204:	40aa      	lsls	r2, r5
 8010206:	3a01      	subs	r2, #1
 8010208:	4016      	ands	r6, r2
 801020a:	fa00 fb05 	lsl.w	fp, r0, r5
 801020e:	4630      	mov	r0, r6
 8010210:	fbbb f9f4 	udiv	r9, fp, r4
 8010214:	fb0a f309 	mul.w	r3, sl, r9
 8010218:	9303      	str	r3, [sp, #12]
 801021a:	f7ff ffa5 	bl	8010168 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801021e:	462b      	mov	r3, r5
 8010220:	460a      	mov	r2, r1
 8010222:	e9cd 4700 	strd	r4, r7, [sp]
 8010226:	4601      	mov	r1, r0
 8010228:	4630      	mov	r0, r6
 801022a:	f7ff ffbb 	bl	80101a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801022e:	fb04 b919 	mls	r9, r4, r9, fp
 8010232:	4606      	mov	r6, r0
 8010234:	4648      	mov	r0, r9
 8010236:	eb05 0108 	add.w	r1, r5, r8
 801023a:	f7ff ff95 	bl	8010168 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801023e:	ab05      	add	r3, sp, #20
 8010240:	e9cd 4300 	strd	r4, r3, [sp]
 8010244:	464a      	mov	r2, r9
 8010246:	4603      	mov	r3, r0
 8010248:	4650      	mov	r0, sl
 801024a:	f7ff ffab 	bl	80101a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801024e:	6839      	ldr	r1, [r7, #0]
 8010250:	9a05      	ldr	r2, [sp, #20]
 8010252:	9b03      	ldr	r3, [sp, #12]
 8010254:	4411      	add	r1, r2
 8010256:	fbb1 f2f4 	udiv	r2, r1, r4
 801025a:	18d3      	adds	r3, r2, r3
 801025c:	441e      	add	r6, r3
 801025e:	fb04 1412 	mls	r4, r4, r2, r1
 8010262:	4430      	add	r0, r6
 8010264:	603c      	str	r4, [r7, #0]
 8010266:	e7ae      	b.n	80101c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08010268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010268:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801026c:	b085      	sub	sp, #20
 801026e:	f1b0 0900 	subs.w	r9, r0, #0
 8010272:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8010274:	461d      	mov	r5, r3
 8010276:	bfbf      	itttt	lt
 8010278:	6823      	ldrlt	r3, [r4, #0]
 801027a:	425b      	neglt	r3, r3
 801027c:	f1c9 0900 	rsblt	r9, r9, #0
 8010280:	6023      	strlt	r3, [r4, #0]
 8010282:	bfb4      	ite	lt
 8010284:	f04f 36ff 	movlt.w	r6, #4294967295
 8010288:	2601      	movge	r6, #1
 801028a:	2a00      	cmp	r2, #0
 801028c:	4617      	mov	r7, r2
 801028e:	da04      	bge.n	801029a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010290:	6823      	ldr	r3, [r4, #0]
 8010292:	425b      	negs	r3, r3
 8010294:	4257      	negs	r7, r2
 8010296:	4276      	negs	r6, r6
 8010298:	6023      	str	r3, [r4, #0]
 801029a:	2d00      	cmp	r5, #0
 801029c:	4638      	mov	r0, r7
 801029e:	bfba      	itte	lt
 80102a0:	426d      	neglt	r5, r5
 80102a2:	f04f 38ff 	movlt.w	r8, #4294967295
 80102a6:	f04f 0801 	movge.w	r8, #1
 80102aa:	f7ff ff5d 	bl	8010168 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80102ae:	ab03      	add	r3, sp, #12
 80102b0:	e9cd 5300 	strd	r5, r3, [sp]
 80102b4:	463a      	mov	r2, r7
 80102b6:	4603      	mov	r3, r0
 80102b8:	4648      	mov	r0, r9
 80102ba:	f7ff ff73 	bl	80101a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80102be:	6823      	ldr	r3, [r4, #0]
 80102c0:	9a03      	ldr	r2, [sp, #12]
 80102c2:	4546      	cmp	r6, r8
 80102c4:	441a      	add	r2, r3
 80102c6:	fb92 f3f5 	sdiv	r3, r2, r5
 80102ca:	4418      	add	r0, r3
 80102cc:	bf18      	it	ne
 80102ce:	4240      	negne	r0, r0
 80102d0:	fb05 2313 	mls	r3, r5, r3, r2
 80102d4:	1c72      	adds	r2, r6, #1
 80102d6:	6023      	str	r3, [r4, #0]
 80102d8:	d105      	bne.n	80102e6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80102da:	2b00      	cmp	r3, #0
 80102dc:	f1c3 0200 	rsb	r2, r3, #0
 80102e0:	db0b      	blt.n	80102fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80102e2:	6022      	str	r2, [r4, #0]
 80102e4:	e006      	b.n	80102f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80102e6:	2e01      	cmp	r6, #1
 80102e8:	d104      	bne.n	80102f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80102ea:	2b00      	cmp	r3, #0
 80102ec:	da02      	bge.n	80102f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80102ee:	442b      	add	r3, r5
 80102f0:	3801      	subs	r0, #1
 80102f2:	6023      	str	r3, [r4, #0]
 80102f4:	b005      	add	sp, #20
 80102f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80102fa:	3801      	subs	r0, #1
 80102fc:	1b52      	subs	r2, r2, r5
 80102fe:	e7f0      	b.n	80102e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08010300 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010300:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010304:	4c1c      	ldr	r4, [pc, #112]	@ (8010378 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010306:	6807      	ldr	r7, [r0, #0]
 8010308:	69a3      	ldr	r3, [r4, #24]
 801030a:	4605      	mov	r5, r0
 801030c:	b92b      	cbnz	r3, 801031a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801030e:	6840      	ldr	r0, [r0, #4]
 8010310:	e9c5 7000 	strd	r7, r0, [r5]
 8010314:	b004      	add	sp, #16
 8010316:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801031a:	68a2      	ldr	r2, [r4, #8]
 801031c:	6820      	ldr	r0, [r4, #0]
 801031e:	ae04      	add	r6, sp, #16
 8010320:	f04f 0802 	mov.w	r8, #2
 8010324:	fb93 f1f8 	sdiv	r1, r3, r8
 8010328:	440a      	add	r2, r1
 801032a:	f846 2d04 	str.w	r2, [r6, #-4]!
 801032e:	69e1      	ldr	r1, [r4, #28]
 8010330:	9600      	str	r6, [sp, #0]
 8010332:	463a      	mov	r2, r7
 8010334:	f7ff ff98 	bl	8010268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010338:	69a3      	ldr	r3, [r4, #24]
 801033a:	686a      	ldr	r2, [r5, #4]
 801033c:	6a21      	ldr	r1, [r4, #32]
 801033e:	9600      	str	r6, [sp, #0]
 8010340:	4607      	mov	r7, r0
 8010342:	6860      	ldr	r0, [r4, #4]
 8010344:	f7ff ff90 	bl	8010268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010348:	6962      	ldr	r2, [r4, #20]
 801034a:	69a3      	ldr	r3, [r4, #24]
 801034c:	fb93 f8f8 	sdiv	r8, r3, r8
 8010350:	4442      	add	r2, r8
 8010352:	9203      	str	r2, [sp, #12]
 8010354:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8010356:	682a      	ldr	r2, [r5, #0]
 8010358:	9600      	str	r6, [sp, #0]
 801035a:	4407      	add	r7, r0
 801035c:	68e0      	ldr	r0, [r4, #12]
 801035e:	f7ff ff83 	bl	8010268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010362:	9600      	str	r6, [sp, #0]
 8010364:	4680      	mov	r8, r0
 8010366:	69a3      	ldr	r3, [r4, #24]
 8010368:	686a      	ldr	r2, [r5, #4]
 801036a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 801036c:	6920      	ldr	r0, [r4, #16]
 801036e:	f7ff ff7b 	bl	8010268 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010372:	4440      	add	r0, r8
 8010374:	e7cc      	b.n	8010310 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010376:	bf00      	nop
 8010378:	20002dc8 	.word	0x20002dc8

0801037c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801037c:	4b07      	ldr	r3, [pc, #28]	@ (801039c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801037e:	781b      	ldrb	r3, [r3, #0]
 8010380:	2b01      	cmp	r3, #1
 8010382:	d109      	bne.n	8010398 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010384:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010388:	f9b0 2000 	ldrsh.w	r2, [r0]
 801038c:	8003      	strh	r3, [r0, #0]
 801038e:	4b04      	ldr	r3, [pc, #16]	@ (80103a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010390:	881b      	ldrh	r3, [r3, #0]
 8010392:	3b01      	subs	r3, #1
 8010394:	1a9b      	subs	r3, r3, r2
 8010396:	800b      	strh	r3, [r1, #0]
 8010398:	4770      	bx	lr
 801039a:	bf00      	nop
 801039c:	20002db4 	.word	0x20002db4
 80103a0:	20002db0 	.word	0x20002db0

080103a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 80103a4:	b510      	push	{r4, lr}
 80103a6:	4b07      	ldr	r3, [pc, #28]	@ (80103c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 80103a8:	781b      	ldrb	r3, [r3, #0]
 80103aa:	2b01      	cmp	r3, #1
 80103ac:	d108      	bne.n	80103c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 80103ae:	4b06      	ldr	r3, [pc, #24]	@ (80103c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 80103b0:	880c      	ldrh	r4, [r1, #0]
 80103b2:	881b      	ldrh	r3, [r3, #0]
 80103b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80103b8:	3b01      	subs	r3, #1
 80103ba:	1b1b      	subs	r3, r3, r4
 80103bc:	8003      	strh	r3, [r0, #0]
 80103be:	800a      	strh	r2, [r1, #0]
 80103c0:	bd10      	pop	{r4, pc}
 80103c2:	bf00      	nop
 80103c4:	20002db4 	.word	0x20002db4
 80103c8:	20002db0 	.word	0x20002db0

080103cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 80103cc:	b510      	push	{r4, lr}
 80103ce:	4b0a      	ldr	r3, [pc, #40]	@ (80103f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80103d0:	781b      	ldrb	r3, [r3, #0]
 80103d2:	2b01      	cmp	r3, #1
 80103d4:	d10e      	bne.n	80103f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80103d6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80103da:	8843      	ldrh	r3, [r0, #2]
 80103dc:	f9b0 4000 	ldrsh.w	r4, [r0]
 80103e0:	8044      	strh	r4, [r0, #2]
 80103e2:	18ca      	adds	r2, r1, r3
 80103e4:	4b05      	ldr	r3, [pc, #20]	@ (80103fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80103e6:	881b      	ldrh	r3, [r3, #0]
 80103e8:	1a9b      	subs	r3, r3, r2
 80103ea:	8003      	strh	r3, [r0, #0]
 80103ec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80103f0:	80c3      	strh	r3, [r0, #6]
 80103f2:	8081      	strh	r1, [r0, #4]
 80103f4:	bd10      	pop	{r4, pc}
 80103f6:	bf00      	nop
 80103f8:	20002db4 	.word	0x20002db4
 80103fc:	20002db0 	.word	0x20002db0

08010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010400:	4b08      	ldr	r3, [pc, #32]	@ (8010424 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010402:	781b      	ldrb	r3, [r3, #0]
 8010404:	2b01      	cmp	r3, #1
 8010406:	d10c      	bne.n	8010422 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010408:	8803      	ldrh	r3, [r0, #0]
 801040a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801040e:	8842      	ldrh	r2, [r0, #2]
 8010410:	8002      	strh	r2, [r0, #0]
 8010412:	185a      	adds	r2, r3, r1
 8010414:	4b04      	ldr	r3, [pc, #16]	@ (8010428 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010416:	881b      	ldrh	r3, [r3, #0]
 8010418:	1a9b      	subs	r3, r3, r2
 801041a:	8043      	strh	r3, [r0, #2]
 801041c:	88c3      	ldrh	r3, [r0, #6]
 801041e:	8083      	strh	r3, [r0, #4]
 8010420:	80c1      	strh	r1, [r0, #6]
 8010422:	4770      	bx	lr
 8010424:	20002db4 	.word	0x20002db4
 8010428:	20002db0 	.word	0x20002db0

0801042c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801042c:	b510      	push	{r4, lr}
 801042e:	4b07      	ldr	r3, [pc, #28]	@ (801044c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010430:	781b      	ldrb	r3, [r3, #0]
 8010432:	2b01      	cmp	r3, #1
 8010434:	d108      	bne.n	8010448 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010436:	f9b1 3000 	ldrsh.w	r3, [r1]
 801043a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801043e:	8003      	strh	r3, [r0, #0]
 8010440:	8893      	ldrh	r3, [r2, #4]
 8010442:	3b01      	subs	r3, #1
 8010444:	1b1b      	subs	r3, r3, r4
 8010446:	800b      	strh	r3, [r1, #0]
 8010448:	bd10      	pop	{r4, pc}
 801044a:	bf00      	nop
 801044c:	20002db4 	.word	0x20002db4

08010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010450:	b510      	push	{r4, lr}
 8010452:	4b0a      	ldr	r3, [pc, #40]	@ (801047c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010454:	781b      	ldrb	r3, [r3, #0]
 8010456:	2b01      	cmp	r3, #1
 8010458:	460a      	mov	r2, r1
 801045a:	d10d      	bne.n	8010478 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801045c:	8881      	ldrh	r1, [r0, #4]
 801045e:	8803      	ldrh	r3, [r0, #0]
 8010460:	440b      	add	r3, r1
 8010462:	4601      	mov	r1, r0
 8010464:	3b01      	subs	r3, #1
 8010466:	f821 3b02 	strh.w	r3, [r1], #2
 801046a:	f7ff ffdf 	bl	801042c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801046e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010472:	88c2      	ldrh	r2, [r0, #6]
 8010474:	8082      	strh	r2, [r0, #4]
 8010476:	80c3      	strh	r3, [r0, #6]
 8010478:	bd10      	pop	{r4, pc}
 801047a:	bf00      	nop
 801047c:	20002db4 	.word	0x20002db4

08010480 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010480:	4b06      	ldr	r3, [pc, #24]	@ (801049c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010482:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010486:	4b06      	ldr	r3, [pc, #24]	@ (80104a0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010488:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 801048c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010490:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8010494:	2100      	movs	r1, #0
 8010496:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 801049a:	4770      	bx	lr
 801049c:	20002db0 	.word	0x20002db0
 80104a0:	20002db2 	.word	0x20002db2

080104a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80104a4:	4b03      	ldr	r3, [pc, #12]	@ (80104b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80104a6:	6818      	ldr	r0, [r3, #0]
 80104a8:	b110      	cbz	r0, 80104b0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80104aa:	6803      	ldr	r3, [r0, #0]
 80104ac:	699b      	ldr	r3, [r3, #24]
 80104ae:	4718      	bx	r3
 80104b0:	4770      	bx	lr
 80104b2:	bf00      	nop
 80104b4:	20002df8 	.word	0x20002df8

080104b8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80104b8:	4770      	bx	lr
	...

080104bc <_ZN8touchgfx11Application4drawEv>:
 80104bc:	b507      	push	{r0, r1, r2, lr}
 80104be:	4b09      	ldr	r3, [pc, #36]	@ (80104e4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80104c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80104c4:	4b08      	ldr	r3, [pc, #32]	@ (80104e8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80104c6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80104ca:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104ce:	f8ad 3006 	strh.w	r3, [sp, #6]
 80104d2:	6803      	ldr	r3, [r0, #0]
 80104d4:	2100      	movs	r1, #0
 80104d6:	9100      	str	r1, [sp, #0]
 80104d8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80104da:	4669      	mov	r1, sp
 80104dc:	4798      	blx	r3
 80104de:	b003      	add	sp, #12
 80104e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80104e4:	20002db0 	.word	0x20002db0
 80104e8:	20002db2 	.word	0x20002db2

080104ec <_ZN8touchgfx11Application10invalidateEv>:
 80104ec:	4b09      	ldr	r3, [pc, #36]	@ (8010514 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80104ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80104f2:	4b09      	ldr	r3, [pc, #36]	@ (8010518 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80104f4:	b082      	sub	sp, #8
 80104f6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80104fa:	f8ad 2004 	strh.w	r2, [sp, #4]
 80104fe:	2100      	movs	r1, #0
 8010500:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010504:	9100      	str	r1, [sp, #0]
 8010506:	6803      	ldr	r3, [r0, #0]
 8010508:	aa02      	add	r2, sp, #8
 801050a:	e912 0006 	ldmdb	r2, {r1, r2}
 801050e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010510:	b002      	add	sp, #8
 8010512:	4718      	bx	r3
 8010514:	20002db0 	.word	0x20002db0
 8010518:	20002db2 	.word	0x20002db2

0801051c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801051c:	4b03      	ldr	r3, [pc, #12]	@ (801052c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801051e:	6818      	ldr	r0, [r3, #0]
 8010520:	b110      	cbz	r0, 8010528 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010522:	6803      	ldr	r3, [r0, #0]
 8010524:	69db      	ldr	r3, [r3, #28]
 8010526:	4718      	bx	r3
 8010528:	4770      	bx	lr
 801052a:	bf00      	nop
 801052c:	20002df8 	.word	0x20002df8

08010530 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010530:	4b03      	ldr	r3, [pc, #12]	@ (8010540 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010532:	6818      	ldr	r0, [r3, #0]
 8010534:	b110      	cbz	r0, 801053c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010536:	6803      	ldr	r3, [r0, #0]
 8010538:	6a1b      	ldr	r3, [r3, #32]
 801053a:	4718      	bx	r3
 801053c:	4770      	bx	lr
 801053e:	bf00      	nop
 8010540:	20002df8 	.word	0x20002df8

08010544 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010544:	2300      	movs	r3, #0
 8010546:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801054a:	4770      	bx	lr

0801054c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801054c:	4b03      	ldr	r3, [pc, #12]	@ (801055c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801054e:	6818      	ldr	r0, [r3, #0]
 8010550:	b110      	cbz	r0, 8010558 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010552:	6803      	ldr	r3, [r0, #0]
 8010554:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010556:	4718      	bx	r3
 8010558:	4770      	bx	lr
 801055a:	bf00      	nop
 801055c:	20002df8 	.word	0x20002df8

08010560 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010560:	b510      	push	{r4, lr}
 8010562:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010566:	888a      	ldrh	r2, [r1, #4]
 8010568:	f9b0 3000 	ldrsh.w	r3, [r0]
 801056c:	4422      	add	r2, r4
 801056e:	b212      	sxth	r2, r2
 8010570:	4293      	cmp	r3, r2
 8010572:	da15      	bge.n	80105a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010574:	8882      	ldrh	r2, [r0, #4]
 8010576:	4413      	add	r3, r2
 8010578:	b21b      	sxth	r3, r3
 801057a:	429c      	cmp	r4, r3
 801057c:	da10      	bge.n	80105a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801057e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010582:	88c9      	ldrh	r1, [r1, #6]
 8010584:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010588:	4419      	add	r1, r3
 801058a:	b209      	sxth	r1, r1
 801058c:	428a      	cmp	r2, r1
 801058e:	da07      	bge.n	80105a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010590:	88c0      	ldrh	r0, [r0, #6]
 8010592:	4410      	add	r0, r2
 8010594:	b200      	sxth	r0, r0
 8010596:	4283      	cmp	r3, r0
 8010598:	bfac      	ite	ge
 801059a:	2000      	movge	r0, #0
 801059c:	2001      	movlt	r0, #1
 801059e:	bd10      	pop	{r4, pc}
 80105a0:	2000      	movs	r0, #0
 80105a2:	e7fc      	b.n	801059e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080105a4 <_ZN8touchgfx4Rect10restrictToEss>:
 80105a4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80105a8:	2b00      	cmp	r3, #0
 80105aa:	b510      	push	{r4, lr}
 80105ac:	da04      	bge.n	80105b8 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80105ae:	8884      	ldrh	r4, [r0, #4]
 80105b0:	4423      	add	r3, r4
 80105b2:	8083      	strh	r3, [r0, #4]
 80105b4:	2300      	movs	r3, #0
 80105b6:	8003      	strh	r3, [r0, #0]
 80105b8:	f9b0 4000 	ldrsh.w	r4, [r0]
 80105bc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80105c0:	1b09      	subs	r1, r1, r4
 80105c2:	428b      	cmp	r3, r1
 80105c4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80105c8:	bfc8      	it	gt
 80105ca:	8081      	strhgt	r1, [r0, #4]
 80105cc:	2b00      	cmp	r3, #0
 80105ce:	da04      	bge.n	80105da <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80105d0:	88c1      	ldrh	r1, [r0, #6]
 80105d2:	440b      	add	r3, r1
 80105d4:	80c3      	strh	r3, [r0, #6]
 80105d6:	2300      	movs	r3, #0
 80105d8:	8043      	strh	r3, [r0, #2]
 80105da:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80105de:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80105e2:	1a52      	subs	r2, r2, r1
 80105e4:	4293      	cmp	r3, r2
 80105e6:	bfc8      	it	gt
 80105e8:	80c2      	strhgt	r2, [r0, #6]
 80105ea:	bd10      	pop	{r4, pc}

080105ec <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80105ec:	b510      	push	{r4, lr}
 80105ee:	4b10      	ldr	r3, [pc, #64]	@ (8010630 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80105f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80105f4:	4b0f      	ldr	r3, [pc, #60]	@ (8010634 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80105f6:	460c      	mov	r4, r1
 80105f8:	4620      	mov	r0, r4
 80105fa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80105fe:	f7ff ffd1 	bl	80105a4 <_ZN8touchgfx4Rect10restrictToEss>
 8010602:	4b0d      	ldr	r3, [pc, #52]	@ (8010638 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8010604:	6818      	ldr	r0, [r3, #0]
 8010606:	b190      	cbz	r0, 801062e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010608:	6803      	ldr	r3, [r0, #0]
 801060a:	4621      	mov	r1, r4
 801060c:	689b      	ldr	r3, [r3, #8]
 801060e:	4798      	blx	r3
 8010610:	4b0a      	ldr	r3, [pc, #40]	@ (801063c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8010612:	6818      	ldr	r0, [r3, #0]
 8010614:	b118      	cbz	r0, 801061e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8010616:	6803      	ldr	r3, [r0, #0]
 8010618:	4621      	mov	r1, r4
 801061a:	689b      	ldr	r3, [r3, #8]
 801061c:	4798      	blx	r3
 801061e:	4b08      	ldr	r3, [pc, #32]	@ (8010640 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010620:	6818      	ldr	r0, [r3, #0]
 8010622:	6803      	ldr	r3, [r0, #0]
 8010624:	4621      	mov	r1, r4
 8010626:	69db      	ldr	r3, [r3, #28]
 8010628:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801062c:	4718      	bx	r3
 801062e:	bd10      	pop	{r4, pc}
 8010630:	20002db2 	.word	0x20002db2
 8010634:	20002db0 	.word	0x20002db0
 8010638:	20002df8 	.word	0x20002df8
 801063c:	20002df4 	.word	0x20002df4
 8010640:	20002dbc 	.word	0x20002dbc

08010644 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8010644:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010646:	4606      	mov	r6, r0
 8010648:	4608      	mov	r0, r1
 801064a:	460f      	mov	r7, r1
 801064c:	f7fc fe2b 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010650:	b9e8      	cbnz	r0, 801068e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8010652:	f9b7 5000 	ldrsh.w	r5, [r7]
 8010656:	f9b6 4000 	ldrsh.w	r4, [r6]
 801065a:	42a5      	cmp	r5, r4
 801065c:	db17      	blt.n	801068e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801065e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8010662:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8010666:	429a      	cmp	r2, r3
 8010668:	db11      	blt.n	801068e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801066a:	88b9      	ldrh	r1, [r7, #4]
 801066c:	440d      	add	r5, r1
 801066e:	88b1      	ldrh	r1, [r6, #4]
 8010670:	440c      	add	r4, r1
 8010672:	b22d      	sxth	r5, r5
 8010674:	b224      	sxth	r4, r4
 8010676:	42a5      	cmp	r5, r4
 8010678:	dc09      	bgt.n	801068e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801067a:	88f8      	ldrh	r0, [r7, #6]
 801067c:	4410      	add	r0, r2
 801067e:	88f2      	ldrh	r2, [r6, #6]
 8010680:	4413      	add	r3, r2
 8010682:	b200      	sxth	r0, r0
 8010684:	b21b      	sxth	r3, r3
 8010686:	4298      	cmp	r0, r3
 8010688:	bfcc      	ite	gt
 801068a:	2000      	movgt	r0, #0
 801068c:	2001      	movle	r0, #1
 801068e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08010690 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8010690:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010692:	4604      	mov	r4, r0
 8010694:	4608      	mov	r0, r1
 8010696:	460d      	mov	r5, r1
 8010698:	f7fc fe05 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801069c:	b978      	cbnz	r0, 80106be <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801069e:	4620      	mov	r0, r4
 80106a0:	f7fc fe01 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80106a4:	f9b5 6000 	ldrsh.w	r6, [r5]
 80106a8:	b150      	cbz	r0, 80106c0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80106aa:	8026      	strh	r6, [r4, #0]
 80106ac:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80106b0:	8063      	strh	r3, [r4, #2]
 80106b2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80106b6:	80a3      	strh	r3, [r4, #4]
 80106b8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80106bc:	80e3      	strh	r3, [r4, #6]
 80106be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80106c0:	f9b4 1000 	ldrsh.w	r1, [r4]
 80106c4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80106c8:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80106cc:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80106d0:	88ed      	ldrh	r5, [r5, #6]
 80106d2:	42b1      	cmp	r1, r6
 80106d4:	460f      	mov	r7, r1
 80106d6:	bfa8      	it	ge
 80106d8:	4637      	movge	r7, r6
 80106da:	4293      	cmp	r3, r2
 80106dc:	4618      	mov	r0, r3
 80106de:	4466      	add	r6, ip
 80106e0:	bfa8      	it	ge
 80106e2:	4610      	movge	r0, r2
 80106e4:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80106e8:	8027      	strh	r7, [r4, #0]
 80106ea:	442a      	add	r2, r5
 80106ec:	88e5      	ldrh	r5, [r4, #6]
 80106ee:	8060      	strh	r0, [r4, #2]
 80106f0:	4461      	add	r1, ip
 80106f2:	442b      	add	r3, r5
 80106f4:	b236      	sxth	r6, r6
 80106f6:	b209      	sxth	r1, r1
 80106f8:	b212      	sxth	r2, r2
 80106fa:	b21b      	sxth	r3, r3
 80106fc:	428e      	cmp	r6, r1
 80106fe:	bfac      	ite	ge
 8010700:	ebc7 0106 	rsbge	r1, r7, r6
 8010704:	ebc7 0101 	rsblt	r1, r7, r1
 8010708:	429a      	cmp	r2, r3
 801070a:	bfac      	ite	ge
 801070c:	ebc0 0202 	rsbge	r2, r0, r2
 8010710:	ebc0 0203 	rsblt	r2, r0, r3
 8010714:	80a1      	strh	r1, [r4, #4]
 8010716:	80e2      	strh	r2, [r4, #6]
 8010718:	e7d1      	b.n	80106be <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801071c <_ZN8touchgfx11Application11getInstanceEv>:
 801071c:	4b01      	ldr	r3, [pc, #4]	@ (8010724 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801071e:	6818      	ldr	r0, [r3, #0]
 8010720:	4770      	bx	lr
 8010722:	bf00      	nop
 8010724:	20002e08 	.word	0x20002e08

08010728 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8010728:	b510      	push	{r4, lr}
 801072a:	2300      	movs	r3, #0
 801072c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8010730:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010734:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8010738:	4604      	mov	r4, r0
 801073a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801073e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8010742:	429a      	cmp	r2, r3
 8010744:	d90e      	bls.n	8010764 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8010746:	18e2      	adds	r2, r4, r3
 8010748:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 801074c:	b122      	cbz	r2, 8010758 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801074e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8010752:	6803      	ldr	r3, [r0, #0]
 8010754:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010756:	4798      	blx	r3
 8010758:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801075c:	3301      	adds	r3, #1
 801075e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8010762:	e7ea      	b.n	801073a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8010764:	bd10      	pop	{r4, pc}

08010766 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8010766:	2300      	movs	r3, #0
 8010768:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801076c:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8010770:	30a4      	adds	r0, #164	@ 0xa4
 8010772:	f802 3b01 	strb.w	r3, [r2], #1
 8010776:	4282      	cmp	r2, r0
 8010778:	d1fb      	bne.n	8010772 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801077a:	4770      	bx	lr

0801077c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801077c:	b570      	push	{r4, r5, r6, lr}
 801077e:	4c0b      	ldr	r4, [pc, #44]	@ (80107ac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010780:	4605      	mov	r5, r0
 8010782:	6820      	ldr	r0, [r4, #0]
 8010784:	460e      	mov	r6, r1
 8010786:	b110      	cbz	r0, 801078e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8010788:	6803      	ldr	r3, [r0, #0]
 801078a:	695b      	ldr	r3, [r3, #20]
 801078c:	4798      	blx	r3
 801078e:	1d28      	adds	r0, r5, #4
 8010790:	f7ff ffe9 	bl	8010766 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010794:	6026      	str	r6, [r4, #0]
 8010796:	6833      	ldr	r3, [r6, #0]
 8010798:	4630      	mov	r0, r6
 801079a:	68db      	ldr	r3, [r3, #12]
 801079c:	4798      	blx	r3
 801079e:	682b      	ldr	r3, [r5, #0]
 80107a0:	4628      	mov	r0, r5
 80107a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80107a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107a8:	4718      	bx	r3
 80107aa:	bf00      	nop
 80107ac:	20002df8 	.word	0x20002df8

080107b0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80107b0:	2300      	movs	r3, #0
 80107b2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 80107b6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 80107ba:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107bc:	461a      	mov	r2, r3
 80107be:	461c      	mov	r4, r3
 80107c0:	461d      	mov	r5, r3
 80107c2:	459c      	cmp	ip, r3
 80107c4:	dd1a      	ble.n	80107fc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80107c6:	18c6      	adds	r6, r0, r3
 80107c8:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 80107cc:	b16e      	cbz	r6, 80107ea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80107ce:	429a      	cmp	r2, r3
 80107d0:	d008      	beq.n	80107e4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80107d2:	fa1f fe82 	uxth.w	lr, r2
 80107d6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80107da:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80107de:	1887      	adds	r7, r0, r2
 80107e0:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 80107e4:	3201      	adds	r2, #1
 80107e6:	3301      	adds	r3, #1
 80107e8:	e7eb      	b.n	80107c2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80107ea:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 80107ee:	4299      	cmp	r1, r3
 80107f0:	bfa8      	it	ge
 80107f2:	3501      	addge	r5, #1
 80107f4:	429e      	cmp	r6, r3
 80107f6:	bfc8      	it	gt
 80107f8:	3401      	addgt	r4, #1
 80107fa:	e7f4      	b.n	80107e6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80107fc:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8010800:	1b49      	subs	r1, r1, r5
 8010802:	1b1b      	subs	r3, r3, r4
 8010804:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8010808:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801080c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8010810:	4293      	cmp	r3, r2
 8010812:	dd03      	ble.n	801081c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8010814:	3b01      	subs	r3, #1
 8010816:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801081a:	e7f7      	b.n	801080c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801081c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08010820 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010820:	b570      	push	{r4, r5, r6, lr}
 8010822:	4d16      	ldr	r5, [pc, #88]	@ (801087c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8010824:	4604      	mov	r4, r0
 8010826:	6828      	ldr	r0, [r5, #0]
 8010828:	b140      	cbz	r0, 801083c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801082a:	7a03      	ldrb	r3, [r0, #8]
 801082c:	b933      	cbnz	r3, 801083c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801082e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010832:	6803      	ldr	r3, [r0, #0]
 8010834:	689b      	ldr	r3, [r3, #8]
 8010836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801083a:	4718      	bx	r3
 801083c:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8010840:	4e0f      	ldr	r6, [pc, #60]	@ (8010880 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8010842:	b973      	cbnz	r3, 8010862 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010844:	b168      	cbz	r0, 8010862 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010846:	7a03      	ldrb	r3, [r0, #8]
 8010848:	b15b      	cbz	r3, 8010862 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801084a:	6830      	ldr	r0, [r6, #0]
 801084c:	b110      	cbz	r0, 8010854 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801084e:	6803      	ldr	r3, [r0, #0]
 8010850:	691b      	ldr	r3, [r3, #16]
 8010852:	4798      	blx	r3
 8010854:	6828      	ldr	r0, [r5, #0]
 8010856:	6803      	ldr	r3, [r0, #0]
 8010858:	68db      	ldr	r3, [r3, #12]
 801085a:	4798      	blx	r3
 801085c:	2301      	movs	r3, #1
 801085e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8010862:	3404      	adds	r4, #4
 8010864:	4620      	mov	r0, r4
 8010866:	f7ff ff5f 	bl	8010728 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801086a:	4620      	mov	r0, r4
 801086c:	f7ff ffa0 	bl	80107b0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8010870:	6830      	ldr	r0, [r6, #0]
 8010872:	b110      	cbz	r0, 801087a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8010874:	6803      	ldr	r3, [r0, #0]
 8010876:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010878:	e7dd      	b.n	8010836 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801087a:	bd70      	pop	{r4, r5, r6, pc}
 801087c:	20002dfc 	.word	0x20002dfc
 8010880:	20002df8 	.word	0x20002df8

08010884 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8010884:	4603      	mov	r3, r0
 8010886:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 801088a:	2200      	movs	r2, #0
 801088c:	801a      	strh	r2, [r3, #0]
 801088e:	805a      	strh	r2, [r3, #2]
 8010890:	809a      	strh	r2, [r3, #4]
 8010892:	80da      	strh	r2, [r3, #6]
 8010894:	3308      	adds	r3, #8
 8010896:	428b      	cmp	r3, r1
 8010898:	d1f8      	bne.n	801088c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801089a:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801089e:	4770      	bx	lr

080108a0 <_ZN8touchgfx11ApplicationC1Ev>:
 80108a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80108a2:	4606      	mov	r6, r0
 80108a4:	4b1c      	ldr	r3, [pc, #112]	@ (8010918 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80108a6:	f846 3b04 	str.w	r3, [r6], #4
 80108aa:	4604      	mov	r4, r0
 80108ac:	2500      	movs	r5, #0
 80108ae:	22a8      	movs	r2, #168	@ 0xa8
 80108b0:	2100      	movs	r1, #0
 80108b2:	4630      	mov	r0, r6
 80108b4:	f011 ff3f 	bl	8022736 <memset>
 80108b8:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80108bc:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80108c0:	f7ff ffe0 	bl	8010884 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80108c4:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80108c8:	f7ff ffdc 	bl	8010884 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80108cc:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 80108d0:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 80108d4:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 80108d8:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 80108dc:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 80108e0:	490e      	ldr	r1, [pc, #56]	@ (801091c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80108e2:	480f      	ldr	r0, [pc, #60]	@ (8010920 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80108e4:	4f0f      	ldr	r7, [pc, #60]	@ (8010924 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80108e6:	f011 fb49 	bl	8021f7c <CRC_Lock>
 80108ea:	4b0f      	ldr	r3, [pc, #60]	@ (8010928 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80108ec:	b158      	cbz	r0, 8010906 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80108ee:	801d      	strh	r5, [r3, #0]
 80108f0:	4a0e      	ldr	r2, [pc, #56]	@ (801092c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80108f2:	2300      	movs	r3, #0
 80108f4:	6013      	str	r3, [r2, #0]
 80108f6:	4a0e      	ldr	r2, [pc, #56]	@ (8010930 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80108f8:	603b      	str	r3, [r7, #0]
 80108fa:	4630      	mov	r0, r6
 80108fc:	6013      	str	r3, [r2, #0]
 80108fe:	f7ff ff32 	bl	8010766 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8010902:	4620      	mov	r0, r4
 8010904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010906:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801090a:	2002      	movs	r0, #2
 801090c:	801a      	strh	r2, [r3, #0]
 801090e:	6038      	str	r0, [r7, #0]
 8010910:	f001 fa52 	bl	8011db8 <_ZN8touchgfx6Screen4drawEv>
 8010914:	e7ec      	b.n	80108f0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8010916:	bf00      	nop
 8010918:	08025268 	.word	0x08025268
 801091c:	b5e8b5cd 	.word	0xb5e8b5cd
 8010920:	f407a5c2 	.word	0xf407a5c2
 8010924:	20002df8 	.word	0x20002df8
 8010928:	20000024 	.word	0x20000024
 801092c:	20002e08 	.word	0x20002e08
 8010930:	20002dfc 	.word	0x20002dfc

08010934 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8010934:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8010938:	3b01      	subs	r3, #1
 801093a:	b29b      	uxth	r3, r3
 801093c:	428b      	cmp	r3, r1
 801093e:	b510      	push	{r4, lr}
 8010940:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8010944:	d908      	bls.n	8010958 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8010946:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801094a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801094e:	681a      	ldr	r2, [r3, #0]
 8010950:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8010954:	685a      	ldr	r2, [r3, #4]
 8010956:	6062      	str	r2, [r4, #4]
 8010958:	bd10      	pop	{r4, pc}
	...

0801095c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801095c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010960:	4b8f      	ldr	r3, [pc, #572]	@ (8010ba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8010962:	b08f      	sub	sp, #60	@ 0x3c
 8010964:	ac0a      	add	r4, sp, #40	@ 0x28
 8010966:	e884 0006 	stmia.w	r4, {r1, r2}
 801096a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801096e:	4b8d      	ldr	r3, [pc, #564]	@ (8010ba4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8010970:	4683      	mov	fp, r0
 8010972:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010976:	4620      	mov	r0, r4
 8010978:	f7ff fe14 	bl	80105a4 <_ZN8touchgfx4Rect10restrictToEss>
 801097c:	4620      	mov	r0, r4
 801097e:	f7fc fc92 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010982:	2800      	cmp	r0, #0
 8010984:	d16a      	bne.n	8010a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010986:	9403      	str	r4, [sp, #12]
 8010988:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 801098c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010990:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8010994:	35a4      	adds	r5, #164	@ 0xa4
 8010996:	9301      	str	r3, [sp, #4]
 8010998:	b15c      	cbz	r4, 80109b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801099a:	4629      	mov	r1, r5
 801099c:	9803      	ldr	r0, [sp, #12]
 801099e:	f7ff fe51 	bl	8010644 <_ZNK8touchgfx4Rect8includesERKS0_>
 80109a2:	3c01      	subs	r4, #1
 80109a4:	b118      	cbz	r0, 80109ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80109a6:	b2a1      	uxth	r1, r4
 80109a8:	9801      	ldr	r0, [sp, #4]
 80109aa:	f7ff ffc3 	bl	8010934 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80109ae:	3d08      	subs	r5, #8
 80109b0:	e7f2      	b.n	8010998 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80109b2:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80109b6:	f8cd a010 	str.w	sl, [sp, #16]
 80109ba:	f10a 33ff 	add.w	r3, sl, #4294967295
 80109be:	9302      	str	r3, [sp, #8]
 80109c0:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80109c4:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 80109c8:	9306      	str	r3, [sp, #24]
 80109ca:	445c      	add	r4, fp
 80109cc:	2500      	movs	r5, #0
 80109ce:	4626      	mov	r6, r4
 80109d0:	f8cd a014 	str.w	sl, [sp, #20]
 80109d4:	462f      	mov	r7, r5
 80109d6:	9b05      	ldr	r3, [sp, #20]
 80109d8:	2b00      	cmp	r3, #0
 80109da:	d073      	beq.n	8010ac4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80109dc:	9903      	ldr	r1, [sp, #12]
 80109de:	4630      	mov	r0, r6
 80109e0:	f7ff fdbe 	bl	8010560 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80109e4:	b350      	cbz	r0, 8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80109e6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 80109ea:	f9b6 c000 	ldrsh.w	ip, [r6]
 80109ee:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80109f2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80109f6:	45e6      	cmp	lr, ip
 80109f8:	db33      	blt.n	8010a62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80109fa:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80109fe:	88b3      	ldrh	r3, [r6, #4]
 8010a00:	4472      	add	r2, lr
 8010a02:	4463      	add	r3, ip
 8010a04:	b212      	sxth	r2, r2
 8010a06:	b21b      	sxth	r3, r3
 8010a08:	429a      	cmp	r2, r3
 8010a0a:	dc2a      	bgt.n	8010a62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010a0c:	88f3      	ldrh	r3, [r6, #6]
 8010a0e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010a12:	fa1f f289 	uxth.w	r2, r9
 8010a16:	4413      	add	r3, r2
 8010a18:	b29b      	uxth	r3, r3
 8010a1a:	45c8      	cmp	r8, r9
 8010a1c:	fa1f fc88 	uxth.w	ip, r8
 8010a20:	fa0f fe83 	sxth.w	lr, r3
 8010a24:	db0f      	blt.n	8010a46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8010a26:	eba3 030c 	sub.w	r3, r3, ip
 8010a2a:	1ac9      	subs	r1, r1, r3
 8010a2c:	b209      	sxth	r1, r1
 8010a2e:	2900      	cmp	r1, #0
 8010a30:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010a34:	dd12      	ble.n	8010a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010a36:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8010a3a:	4605      	mov	r5, r0
 8010a3c:	9b05      	ldr	r3, [sp, #20]
 8010a3e:	3b01      	subs	r3, #1
 8010a40:	9305      	str	r3, [sp, #20]
 8010a42:	3e08      	subs	r6, #8
 8010a44:	e7c7      	b.n	80109d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8010a46:	4461      	add	r1, ip
 8010a48:	b209      	sxth	r1, r1
 8010a4a:	4571      	cmp	r1, lr
 8010a4c:	dc38      	bgt.n	8010ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010a4e:	eba2 020c 	sub.w	r2, r2, ip
 8010a52:	b212      	sxth	r2, r2
 8010a54:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010a58:	2a00      	cmp	r2, #0
 8010a5a:	dcee      	bgt.n	8010a3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010a5c:	b00f      	add	sp, #60	@ 0x3c
 8010a5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a62:	45c8      	cmp	r8, r9
 8010a64:	db2c      	blt.n	8010ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010a66:	88f3      	ldrh	r3, [r6, #6]
 8010a68:	4499      	add	r9, r3
 8010a6a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8010a6e:	4498      	add	r8, r3
 8010a70:	fa0f f989 	sxth.w	r9, r9
 8010a74:	fa0f f888 	sxth.w	r8, r8
 8010a78:	45c1      	cmp	r9, r8
 8010a7a:	db21      	blt.n	8010ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010a7c:	88b3      	ldrh	r3, [r6, #4]
 8010a7e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8010a82:	fa1f f28c 	uxth.w	r2, ip
 8010a86:	4413      	add	r3, r2
 8010a88:	b29b      	uxth	r3, r3
 8010a8a:	45e6      	cmp	lr, ip
 8010a8c:	fa1f f88e 	uxth.w	r8, lr
 8010a90:	fa0f f983 	sxth.w	r9, r3
 8010a94:	db0a      	blt.n	8010aac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8010a96:	eba3 0308 	sub.w	r3, r3, r8
 8010a9a:	1ac9      	subs	r1, r1, r3
 8010a9c:	b209      	sxth	r1, r1
 8010a9e:	2900      	cmp	r1, #0
 8010aa0:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8010aa4:	ddda      	ble.n	8010a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010aa6:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010aaa:	e7c6      	b.n	8010a3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010aac:	4441      	add	r1, r8
 8010aae:	b209      	sxth	r1, r1
 8010ab0:	4549      	cmp	r1, r9
 8010ab2:	dc05      	bgt.n	8010ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010ab4:	eba2 0208 	sub.w	r2, r2, r8
 8010ab8:	b212      	sxth	r2, r2
 8010aba:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8010abe:	e7cb      	b.n	8010a58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8010ac0:	4607      	mov	r7, r0
 8010ac2:	e7bb      	b.n	8010a3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8010ac4:	2d00      	cmp	r5, #0
 8010ac6:	d181      	bne.n	80109cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8010ac8:	2f00      	cmp	r7, #0
 8010aca:	f000 81dd 	beq.w	8010e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010ace:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8010ad2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8010ad6:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8010ada:	b2b3      	uxth	r3, r6
 8010adc:	9305      	str	r3, [sp, #20]
 8010ade:	9a05      	ldr	r2, [sp, #20]
 8010ae0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010ae4:	4413      	add	r3, r2
 8010ae6:	b2ba      	uxth	r2, r7
 8010ae8:	4492      	add	sl, r2
 8010aea:	b29b      	uxth	r3, r3
 8010aec:	fa1f fa8a 	uxth.w	sl, sl
 8010af0:	fa0f f883 	sxth.w	r8, r3
 8010af4:	fa0f f98a 	sxth.w	r9, sl
 8010af8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010afc:	9b04      	ldr	r3, [sp, #16]
 8010afe:	2b00      	cmp	r3, #0
 8010b00:	d052      	beq.n	8010ba8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8010b02:	9903      	ldr	r1, [sp, #12]
 8010b04:	4620      	mov	r0, r4
 8010b06:	f7ff fd2b 	bl	8010560 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010b0a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010b0e:	b1c0      	cbz	r0, 8010b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010b10:	f9b4 e000 	ldrsh.w	lr, [r4]
 8010b14:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010b18:	4576      	cmp	r6, lr
 8010b1a:	dc22      	bgt.n	8010b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010b1c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010b20:	44f4      	add	ip, lr
 8010b22:	fa0f fc8c 	sxth.w	ip, ip
 8010b26:	45e0      	cmp	r8, ip
 8010b28:	db1b      	blt.n	8010b62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010b2a:	428f      	cmp	r7, r1
 8010b2c:	fa1f fc81 	uxth.w	ip, r1
 8010b30:	88e1      	ldrh	r1, [r4, #6]
 8010b32:	dc0d      	bgt.n	8010b50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8010b34:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010b38:	eba1 010c 	sub.w	r1, r1, ip
 8010b3c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010b40:	80e1      	strh	r1, [r4, #6]
 8010b42:	4628      	mov	r0, r5
 8010b44:	9904      	ldr	r1, [sp, #16]
 8010b46:	3901      	subs	r1, #1
 8010b48:	9104      	str	r1, [sp, #16]
 8010b4a:	3c08      	subs	r4, #8
 8010b4c:	4605      	mov	r5, r0
 8010b4e:	e7d3      	b.n	8010af8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8010b50:	4461      	add	r1, ip
 8010b52:	b209      	sxth	r1, r1
 8010b54:	4549      	cmp	r1, r9
 8010b56:	dcf5      	bgt.n	8010b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010b58:	eba2 0c0c 	sub.w	ip, r2, ip
 8010b5c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010b60:	e7ef      	b.n	8010b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010b62:	428f      	cmp	r7, r1
 8010b64:	dcee      	bgt.n	8010b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010b66:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8010b6a:	4461      	add	r1, ip
 8010b6c:	b209      	sxth	r1, r1
 8010b6e:	4589      	cmp	r9, r1
 8010b70:	dbe8      	blt.n	8010b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010b72:	4576      	cmp	r6, lr
 8010b74:	fa1f fc8e 	uxth.w	ip, lr
 8010b78:	88a1      	ldrh	r1, [r4, #4]
 8010b7a:	dc07      	bgt.n	8010b8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8010b7c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010b80:	eba1 010c 	sub.w	r1, r1, ip
 8010b84:	f8a4 8000 	strh.w	r8, [r4]
 8010b88:	80a1      	strh	r1, [r4, #4]
 8010b8a:	e7da      	b.n	8010b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010b8c:	4461      	add	r1, ip
 8010b8e:	b209      	sxth	r1, r1
 8010b90:	4588      	cmp	r8, r1
 8010b92:	dbd7      	blt.n	8010b44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010b94:	9905      	ldr	r1, [sp, #20]
 8010b96:	eba1 0c0c 	sub.w	ip, r1, ip
 8010b9a:	f8a4 c004 	strh.w	ip, [r4, #4]
 8010b9e:	e7d0      	b.n	8010b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010ba0:	20002db2 	.word	0x20002db2
 8010ba4:	20002db0 	.word	0x20002db0
 8010ba8:	2d00      	cmp	r5, #0
 8010baa:	f000 816d 	beq.w	8010e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010bae:	9b06      	ldr	r3, [sp, #24]
 8010bb0:	445b      	add	r3, fp
 8010bb2:	461c      	mov	r4, r3
 8010bb4:	9b02      	ldr	r3, [sp, #8]
 8010bb6:	3301      	adds	r3, #1
 8010bb8:	f000 8166 	beq.w	8010e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8010bbc:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8010bc0:	4629      	mov	r1, r5
 8010bc2:	9803      	ldr	r0, [sp, #12]
 8010bc4:	f7ff fd3e 	bl	8010644 <_ZNK8touchgfx4Rect8includesERKS0_>
 8010bc8:	b120      	cbz	r0, 8010bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8010bca:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010bce:	9801      	ldr	r0, [sp, #4]
 8010bd0:	f7ff feb0 	bl	8010934 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010bd4:	9903      	ldr	r1, [sp, #12]
 8010bd6:	4628      	mov	r0, r5
 8010bd8:	f7ff fcc2 	bl	8010560 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010bdc:	2800      	cmp	r0, #0
 8010bde:	f000 809c 	beq.w	8010d1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010be2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8010be6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010bea:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010bee:	9309      	str	r3, [sp, #36]	@ 0x24
 8010bf0:	fa1f f189 	uxth.w	r1, r9
 8010bf4:	eb01 0c03 	add.w	ip, r1, r3
 8010bf8:	fa1f fa8c 	uxth.w	sl, ip
 8010bfc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010c00:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8010c04:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8010c08:	b283      	uxth	r3, r0
 8010c0a:	eb03 050c 	add.w	r5, r3, ip
 8010c0e:	b2ad      	uxth	r5, r5
 8010c10:	9505      	str	r5, [sp, #20]
 8010c12:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010c16:	9504      	str	r5, [sp, #16]
 8010c18:	4548      	cmp	r0, r9
 8010c1a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010c1e:	f340 8099 	ble.w	8010d54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8010c22:	1a5b      	subs	r3, r3, r1
 8010c24:	b29b      	uxth	r3, r3
 8010c26:	4596      	cmp	lr, r2
 8010c28:	fa0f f08a 	sxth.w	r0, sl
 8010c2c:	b21e      	sxth	r6, r3
 8010c2e:	dd2e      	ble.n	8010c8e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8010c30:	9f02      	ldr	r7, [sp, #8]
 8010c32:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8010c36:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8010c3a:	9f04      	ldr	r7, [sp, #16]
 8010c3c:	1a3f      	subs	r7, r7, r0
 8010c3e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8010c42:	fa1f fe8e 	uxth.w	lr, lr
 8010c46:	b292      	uxth	r2, r2
 8010c48:	ebae 0102 	sub.w	r1, lr, r2
 8010c4c:	44a6      	add	lr, r4
 8010c4e:	4402      	add	r2, r0
 8010c50:	b289      	uxth	r1, r1
 8010c52:	fa0f fe8e 	sxth.w	lr, lr
 8010c56:	b212      	sxth	r2, r2
 8010c58:	b20d      	sxth	r5, r1
 8010c5a:	ebae 0202 	sub.w	r2, lr, r2
 8010c5e:	436f      	muls	r7, r5
 8010c60:	4372      	muls	r2, r6
 8010c62:	4297      	cmp	r7, r2
 8010c64:	db09      	blt.n	8010c7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8010c66:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8010c6a:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8010c6e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8010c72:	449c      	add	ip, r3
 8010c74:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010c78:	e686      	b.n	8010988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010c7a:	4421      	add	r1, r4
 8010c7c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8010c80:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8010c84:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010c88:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010c8c:	e67c      	b.n	8010988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010c8e:	9f04      	ldr	r7, [sp, #16]
 8010c90:	42b8      	cmp	r0, r7
 8010c92:	da27      	bge.n	8010ce4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8010c94:	9902      	ldr	r1, [sp, #8]
 8010c96:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8010c9a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8010c9e:	eb05 010e 	add.w	r1, r5, lr
 8010ca2:	fa1f f881 	uxth.w	r8, r1
 8010ca6:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8010caa:	4411      	add	r1, r2
 8010cac:	eba1 0108 	sub.w	r1, r1, r8
 8010cb0:	b289      	uxth	r1, r1
 8010cb2:	fa0f f988 	sxth.w	r9, r8
 8010cb6:	eba2 020e 	sub.w	r2, r2, lr
 8010cba:	fa0f f881 	sxth.w	r8, r1
 8010cbe:	1a3f      	subs	r7, r7, r0
 8010cc0:	4372      	muls	r2, r6
 8010cc2:	fb08 f707 	mul.w	r7, r8, r7
 8010cc6:	42ba      	cmp	r2, r7
 8010cc8:	dc06      	bgt.n	8010cd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8010cca:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8010cce:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8010cd2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8010cd6:	e7ca      	b.n	8010c6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8010cd8:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8010cdc:	4429      	add	r1, r5
 8010cde:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010ce2:	e651      	b.n	8010988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010ce4:	9805      	ldr	r0, [sp, #20]
 8010ce6:	ebaa 0000 	sub.w	r0, sl, r0
 8010cea:	b280      	uxth	r0, r0
 8010cec:	2d06      	cmp	r5, #6
 8010cee:	fa0f fe80 	sxth.w	lr, r0
 8010cf2:	d817      	bhi.n	8010d24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8010cf4:	9b04      	ldr	r3, [sp, #16]
 8010cf6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8010cfa:	1c6b      	adds	r3, r5, #1
 8010cfc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8010d00:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8010d04:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010d08:	9b01      	ldr	r3, [sp, #4]
 8010d0a:	9801      	ldr	r0, [sp, #4]
 8010d0c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010d10:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8010d14:	805a      	strh	r2, [r3, #2]
 8010d16:	809e      	strh	r6, [r3, #4]
 8010d18:	80d9      	strh	r1, [r3, #6]
 8010d1a:	9b02      	ldr	r3, [sp, #8]
 8010d1c:	3b01      	subs	r3, #1
 8010d1e:	9302      	str	r3, [sp, #8]
 8010d20:	3c08      	subs	r4, #8
 8010d22:	e747      	b.n	8010bb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8010d24:	9a02      	ldr	r2, [sp, #8]
 8010d26:	45b6      	cmp	lr, r6
 8010d28:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010d2c:	db0d      	blt.n	8010d4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8010d2e:	449c      	add	ip, r3
 8010d30:	fa1f fc8c 	uxth.w	ip, ip
 8010d34:	445a      	add	r2, fp
 8010d36:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010d3a:	448c      	add	ip, r1
 8010d3c:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8010d40:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010d44:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8010d48:	e61e      	b.n	8010988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010d4a:	445a      	add	r2, fp
 8010d4c:	4484      	add	ip, r0
 8010d4e:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8010d52:	e78f      	b.n	8010c74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010d54:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8010d58:	fa1f f18e 	uxth.w	r1, lr
 8010d5c:	eb01 0806 	add.w	r8, r1, r6
 8010d60:	b293      	uxth	r3, r2
 8010d62:	fa1f f888 	uxth.w	r8, r8
 8010d66:	9306      	str	r3, [sp, #24]
 8010d68:	fa0f f388 	sxth.w	r3, r8
 8010d6c:	9307      	str	r3, [sp, #28]
 8010d6e:	9f06      	ldr	r7, [sp, #24]
 8010d70:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010d74:	443b      	add	r3, r7
 8010d76:	b29b      	uxth	r3, r3
 8010d78:	4596      	cmp	lr, r2
 8010d7a:	9308      	str	r3, [sp, #32]
 8010d7c:	da24      	bge.n	8010dc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8010d7e:	9905      	ldr	r1, [sp, #20]
 8010d80:	eba3 0308 	sub.w	r3, r3, r8
 8010d84:	ebaa 0401 	sub.w	r4, sl, r1
 8010d88:	b2a4      	uxth	r4, r4
 8010d8a:	b29b      	uxth	r3, r3
 8010d8c:	b225      	sxth	r5, r4
 8010d8e:	b219      	sxth	r1, r3
 8010d90:	eba2 020e 	sub.w	r2, r2, lr
 8010d94:	eba9 0000 	sub.w	r0, r9, r0
 8010d98:	436a      	muls	r2, r5
 8010d9a:	4348      	muls	r0, r1
 8010d9c:	4282      	cmp	r2, r0
 8010d9e:	9a02      	ldr	r2, [sp, #8]
 8010da0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010da4:	445a      	add	r2, fp
 8010da6:	dc06      	bgt.n	8010db6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8010da8:	9b07      	ldr	r3, [sp, #28]
 8010daa:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8010dae:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8010db2:	44a4      	add	ip, r4
 8010db4:	e75e      	b.n	8010c74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010db6:	9904      	ldr	r1, [sp, #16]
 8010db8:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8010dbc:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8010dc0:	4433      	add	r3, r6
 8010dc2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010dc6:	e5df      	b.n	8010988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010dc8:	9f06      	ldr	r7, [sp, #24]
 8010dca:	9b04      	ldr	r3, [sp, #16]
 8010dcc:	1bc9      	subs	r1, r1, r7
 8010dce:	fa0f f78a 	sxth.w	r7, sl
 8010dd2:	b289      	uxth	r1, r1
 8010dd4:	429f      	cmp	r7, r3
 8010dd6:	fa0f fe81 	sxth.w	lr, r1
 8010dda:	dd23      	ble.n	8010e24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8010ddc:	9a05      	ldr	r2, [sp, #20]
 8010dde:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8010de2:	9d07      	ldr	r5, [sp, #28]
 8010de4:	ebaa 0202 	sub.w	r2, sl, r2
 8010de8:	b292      	uxth	r2, r2
 8010dea:	eba5 0a03 	sub.w	sl, r5, r3
 8010dee:	b214      	sxth	r4, r2
 8010df0:	eba9 0000 	sub.w	r0, r9, r0
 8010df4:	9b02      	ldr	r3, [sp, #8]
 8010df6:	fb0e f000 	mul.w	r0, lr, r0
 8010dfa:	fb04 fa0a 	mul.w	sl, r4, sl
 8010dfe:	00db      	lsls	r3, r3, #3
 8010e00:	4550      	cmp	r0, sl
 8010e02:	445b      	add	r3, fp
 8010e04:	db03      	blt.n	8010e0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8010e06:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8010e0a:	4494      	add	ip, r2
 8010e0c:	e732      	b.n	8010c74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010e0e:	9a04      	ldr	r2, [sp, #16]
 8010e10:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8010e14:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8010e18:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010e1c:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010e20:	4431      	add	r1, r6
 8010e22:	e75c      	b.n	8010cde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8010e24:	9b08      	ldr	r3, [sp, #32]
 8010e26:	eba3 0308 	sub.w	r3, r3, r8
 8010e2a:	b29b      	uxth	r3, r3
 8010e2c:	2d06      	cmp	r5, #6
 8010e2e:	b218      	sxth	r0, r3
 8010e30:	d813      	bhi.n	8010e5a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8010e32:	9b07      	ldr	r3, [sp, #28]
 8010e34:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8010e38:	1c6b      	adds	r3, r5, #1
 8010e3a:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010e3e:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010e42:	9b01      	ldr	r3, [sp, #4]
 8010e44:	9901      	ldr	r1, [sp, #4]
 8010e46:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010e4a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010e4e:	805a      	strh	r2, [r3, #2]
 8010e50:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010e52:	809a      	strh	r2, [r3, #4]
 8010e54:	f8a3 e006 	strh.w	lr, [r3, #6]
 8010e58:	e75f      	b.n	8010d1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010e5a:	9c02      	ldr	r4, [sp, #8]
 8010e5c:	4570      	cmp	r0, lr
 8010e5e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8010e62:	db0d      	blt.n	8010e80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8010e64:	4431      	add	r1, r6
 8010e66:	9b06      	ldr	r3, [sp, #24]
 8010e68:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8010e6c:	b289      	uxth	r1, r1
 8010e6e:	445c      	add	r4, fp
 8010e70:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010e74:	4419      	add	r1, r3
 8010e76:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8010e7a:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8010e7e:	e583      	b.n	8010988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010e80:	445c      	add	r4, fp
 8010e82:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8010e86:	e79b      	b.n	8010dc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010e88:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010e8c:	1e65      	subs	r5, r4, #1
 8010e8e:	b2ad      	uxth	r5, r5
 8010e90:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8010e94:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8010e98:	42b5      	cmp	r5, r6
 8010e9a:	d044      	beq.n	8010f26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8010e9c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8010ea0:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8010ea4:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8010ea8:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8010eac:	4282      	cmp	r2, r0
 8010eae:	d11f      	bne.n	8010ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010eb0:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8010eb4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8010eb8:	459c      	cmp	ip, r3
 8010eba:	d119      	bne.n	8010ef0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8010ebc:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8010ec0:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8010ec4:	19d8      	adds	r0, r3, r7
 8010ec6:	b200      	sxth	r0, r0
 8010ec8:	4288      	cmp	r0, r1
 8010eca:	d109      	bne.n	8010ee0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8010ecc:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8010ed0:	4413      	add	r3, r2
 8010ed2:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8010ed6:	4629      	mov	r1, r5
 8010ed8:	9801      	ldr	r0, [sp, #4]
 8010eda:	f7ff fd2b 	bl	8010934 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010ede:	e003      	b.n	8010ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010ee0:	4411      	add	r1, r2
 8010ee2:	b209      	sxth	r1, r1
 8010ee4:	42b9      	cmp	r1, r7
 8010ee6:	d0f3      	beq.n	8010ed0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8010ee8:	3d01      	subs	r5, #1
 8010eea:	b2ad      	uxth	r5, r5
 8010eec:	3c08      	subs	r4, #8
 8010eee:	e7d3      	b.n	8010e98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8010ef0:	42b9      	cmp	r1, r7
 8010ef2:	d1f9      	bne.n	8010ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010ef4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8010ef8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010efc:	4299      	cmp	r1, r3
 8010efe:	d1f3      	bne.n	8010ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010f00:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8010f04:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010f08:	181f      	adds	r7, r3, r0
 8010f0a:	b23f      	sxth	r7, r7
 8010f0c:	42ba      	cmp	r2, r7
 8010f0e:	d105      	bne.n	8010f1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8010f10:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8010f14:	440b      	add	r3, r1
 8010f16:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010f1a:	e7dc      	b.n	8010ed6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8010f1c:	440a      	add	r2, r1
 8010f1e:	b212      	sxth	r2, r2
 8010f20:	4290      	cmp	r0, r2
 8010f22:	d1e1      	bne.n	8010ee8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010f24:	e7f6      	b.n	8010f14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8010f26:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8010f2a:	2e07      	cmp	r6, #7
 8010f2c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010f30:	d812      	bhi.n	8010f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8010f32:	1c75      	adds	r5, r6, #1
 8010f34:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8010f38:	9d01      	ldr	r5, [sp, #4]
 8010f3a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010f3e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010f42:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8010f46:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8010f4a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010f4e:	442c      	add	r4, r5
 8010f50:	8061      	strh	r1, [r4, #2]
 8010f52:	80a2      	strh	r2, [r4, #4]
 8010f54:	80e3      	strh	r3, [r4, #6]
 8010f56:	e581      	b.n	8010a5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010f58:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010f5c:	3e01      	subs	r6, #1
 8010f5e:	445c      	add	r4, fp
 8010f60:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8010f64:	f04f 37ff 	mov.w	r7, #4294967295
 8010f68:	2500      	movs	r5, #0
 8010f6a:	9305      	str	r3, [sp, #20]
 8010f6c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010f70:	9302      	str	r3, [sp, #8]
 8010f72:	1e72      	subs	r2, r6, #1
 8010f74:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8010f78:	9304      	str	r3, [sp, #16]
 8010f7a:	4691      	mov	r9, r2
 8010f7c:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8010f80:	f1b9 3fff 	cmp.w	r9, #4294967295
 8010f84:	bf14      	ite	ne
 8010f86:	9905      	ldrne	r1, [sp, #20]
 8010f88:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8010f8c:	6818      	ldr	r0, [r3, #0]
 8010f8e:	9207      	str	r2, [sp, #28]
 8010f90:	bf18      	it	ne
 8010f92:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8010f96:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8010f9a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8010f9e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8010fa2:	9306      	str	r3, [sp, #24]
 8010fa4:	fb18 f801 	smulbb	r8, r8, r1
 8010fa8:	6859      	ldr	r1, [r3, #4]
 8010faa:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8010fae:	4671      	mov	r1, lr
 8010fb0:	a80c      	add	r0, sp, #48	@ 0x30
 8010fb2:	f7ff fb6d 	bl	8010690 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010fb6:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8010fba:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8010fbe:	9b04      	ldr	r3, [sp, #16]
 8010fc0:	9a02      	ldr	r2, [sp, #8]
 8010fc2:	fb10 f001 	smulbb	r0, r0, r1
 8010fc6:	fb02 8803 	mla	r8, r2, r3, r8
 8010fca:	eba0 0108 	sub.w	r1, r0, r8
 8010fce:	f04f 0c08 	mov.w	ip, #8
 8010fd2:	fb90 f0fc 	sdiv	r0, r0, ip
 8010fd6:	4288      	cmp	r0, r1
 8010fd8:	dc20      	bgt.n	801101c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8010fda:	4551      	cmp	r1, sl
 8010fdc:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8010fe0:	da03      	bge.n	8010fea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8010fe2:	b1d9      	cbz	r1, 801101c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8010fe4:	468a      	mov	sl, r1
 8010fe6:	464f      	mov	r7, r9
 8010fe8:	4635      	mov	r5, r6
 8010fea:	f109 39ff 	add.w	r9, r9, #4294967295
 8010fee:	f119 0f02 	cmn.w	r9, #2
 8010ff2:	d1c5      	bne.n	8010f80 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8010ff4:	4616      	mov	r6, r2
 8010ff6:	3201      	adds	r2, #1
 8010ff8:	f1a4 0408 	sub.w	r4, r4, #8
 8010ffc:	d1b6      	bne.n	8010f6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8010ffe:	9b01      	ldr	r3, [sp, #4]
 8011000:	b2ac      	uxth	r4, r5
 8011002:	00ed      	lsls	r5, r5, #3
 8011004:	1958      	adds	r0, r3, r5
 8011006:	1c7b      	adds	r3, r7, #1
 8011008:	d10b      	bne.n	8011022 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 801100a:	4601      	mov	r1, r0
 801100c:	9803      	ldr	r0, [sp, #12]
 801100e:	f7ff fb3f 	bl	8010690 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011012:	4621      	mov	r1, r4
 8011014:	9801      	ldr	r0, [sp, #4]
 8011016:	f7ff fc8d 	bl	8010934 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801101a:	e4b5      	b.n	8010988 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801101c:	464f      	mov	r7, r9
 801101e:	4635      	mov	r5, r6
 8011020:	e7ed      	b.n	8010ffe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8011022:	9b01      	ldr	r3, [sp, #4]
 8011024:	00ff      	lsls	r7, r7, #3
 8011026:	19d9      	adds	r1, r3, r7
 8011028:	f7ff fb32 	bl	8010690 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801102c:	9b03      	ldr	r3, [sp, #12]
 801102e:	cb03      	ldmia	r3!, {r0, r1}
 8011030:	445f      	add	r7, fp
 8011032:	445d      	add	r5, fp
 8011034:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8011038:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 801103c:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8011040:	9b03      	ldr	r3, [sp, #12]
 8011042:	6869      	ldr	r1, [r5, #4]
 8011044:	c303      	stmia	r3!, {r0, r1}
 8011046:	e7e4      	b.n	8011012 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08011048 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801104c:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8011050:	b09b      	sub	sp, #108	@ 0x6c
 8011052:	4604      	mov	r4, r0
 8011054:	4630      	mov	r0, r6
 8011056:	f7fc f926 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801105a:	4605      	mov	r5, r0
 801105c:	b948      	cbnz	r0, 8011072 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801105e:	6823      	ldr	r3, [r4, #0]
 8011060:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011064:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011066:	4620      	mov	r0, r4
 8011068:	4798      	blx	r3
 801106a:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 801106e:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8011072:	4bc6      	ldr	r3, [pc, #792]	@ (801138c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8011074:	681b      	ldr	r3, [r3, #0]
 8011076:	2b00      	cmp	r3, #0
 8011078:	d03f      	beq.n	80110fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801107a:	4dc5      	ldr	r5, [pc, #788]	@ (8011390 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 801107c:	4628      	mov	r0, r5
 801107e:	f7fc f912 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011082:	4606      	mov	r6, r0
 8011084:	2800      	cmp	r0, #0
 8011086:	d138      	bne.n	80110fa <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8011088:	4628      	mov	r0, r5
 801108a:	f7ff f99f 	bl	80103cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801108e:	6823      	ldr	r3, [r4, #0]
 8011090:	6829      	ldr	r1, [r5, #0]
 8011092:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011094:	686a      	ldr	r2, [r5, #4]
 8011096:	4620      	mov	r0, r4
 8011098:	4798      	blx	r3
 801109a:	802e      	strh	r6, [r5, #0]
 801109c:	806e      	strh	r6, [r5, #2]
 801109e:	80ae      	strh	r6, [r5, #4]
 80110a0:	80ee      	strh	r6, [r5, #6]
 80110a2:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 80110a6:	4dbb      	ldr	r5, [pc, #748]	@ (8011394 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80110a8:	4640      	mov	r0, r8
 80110aa:	f7ff fbeb 	bl	8010884 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80110ae:	882e      	ldrh	r6, [r5, #0]
 80110b0:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80110b4:	4633      	mov	r3, r6
 80110b6:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80110ba:	42bb      	cmp	r3, r7
 80110bc:	d224      	bcs.n	8011108 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80110be:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 80110c2:	2907      	cmp	r1, #7
 80110c4:	d816      	bhi.n	80110f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80110c6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80110ca:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80110ce:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80110d2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80110d6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80110da:	1c4a      	adds	r2, r1, #1
 80110dc:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 80110e0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80110e4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80110e8:	f8a2 a002 	strh.w	sl, [r2, #2]
 80110ec:	f8a2 e004 	strh.w	lr, [r2, #4]
 80110f0:	f8a2 c006 	strh.w	ip, [r2, #6]
 80110f4:	3301      	adds	r3, #1
 80110f6:	b29b      	uxth	r3, r3
 80110f8:	e7df      	b.n	80110ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80110fa:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80110fe:	2b00      	cmp	r3, #0
 8011100:	d1cf      	bne.n	80110a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8011102:	b01b      	add	sp, #108	@ 0x6c
 8011104:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011108:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 801110c:	42b3      	cmp	r3, r6
 801110e:	d90c      	bls.n	801112a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8011110:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8011114:	6822      	ldr	r2, [r4, #0]
 8011116:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 801111a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 801111c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8011120:	4620      	mov	r0, r4
 8011122:	3601      	adds	r6, #1
 8011124:	47b8      	blx	r7
 8011126:	b2b6      	uxth	r6, r6
 8011128:	e7ee      	b.n	8011108 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801112a:	4a9b      	ldr	r2, [pc, #620]	@ (8011398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801112c:	6813      	ldr	r3, [r2, #0]
 801112e:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8011132:	2b01      	cmp	r3, #1
 8011134:	4691      	mov	r9, r2
 8011136:	f040 80e2 	bne.w	80112fe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801113a:	8829      	ldrh	r1, [r5, #0]
 801113c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8011140:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8011144:	33ae      	adds	r3, #174	@ 0xae
 8011146:	2600      	movs	r6, #0
 8011148:	428f      	cmp	r7, r1
 801114a:	f103 0308 	add.w	r3, r3, #8
 801114e:	dd0a      	ble.n	8011166 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8011150:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8011154:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8011158:	4402      	add	r2, r0
 801115a:	b212      	sxth	r2, r2
 801115c:	4296      	cmp	r6, r2
 801115e:	bfb8      	it	lt
 8011160:	4616      	movlt	r6, r2
 8011162:	3101      	adds	r1, #1
 8011164:	e7f0      	b.n	8011148 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8011166:	4b8d      	ldr	r3, [pc, #564]	@ (801139c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8011168:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8011398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 801116c:	881b      	ldrh	r3, [r3, #0]
 801116e:	2b0f      	cmp	r3, #15
 8011170:	bf88      	it	hi
 8011172:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8011176:	f04f 0300 	mov.w	r3, #0
 801117a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801117e:	bf98      	it	ls
 8011180:	f04f 0b01 	movls.w	fp, #1
 8011184:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8011188:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 801118c:	4b82      	ldr	r3, [pc, #520]	@ (8011398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801118e:	4438      	add	r0, r7
 8011190:	b207      	sxth	r7, r0
 8011192:	6818      	ldr	r0, [r3, #0]
 8011194:	42b7      	cmp	r7, r6
 8011196:	6803      	ldr	r3, [r0, #0]
 8011198:	f280 8083 	bge.w	80112a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801119c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80111a0:	4798      	blx	r3
 80111a2:	eb07 030b 	add.w	r3, r7, fp
 80111a6:	4298      	cmp	r0, r3
 80111a8:	da07      	bge.n	80111ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80111aa:	42b0      	cmp	r0, r6
 80111ac:	da05      	bge.n	80111ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 80111ae:	4287      	cmp	r7, r0
 80111b0:	dd6c      	ble.n	801128c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80111b2:	2f00      	cmp	r7, #0
 80111b4:	dd6a      	ble.n	801128c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80111b6:	4630      	mov	r0, r6
 80111b8:	e004      	b.n	80111c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 80111ba:	4287      	cmp	r7, r0
 80111bc:	dcfb      	bgt.n	80111b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80111be:	42b0      	cmp	r0, r6
 80111c0:	bfa8      	it	ge
 80111c2:	4630      	movge	r0, r6
 80111c4:	4b76      	ldr	r3, [pc, #472]	@ (80113a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80111c6:	f8ad 7016 	strh.w	r7, [sp, #22]
 80111ca:	1bc0      	subs	r0, r0, r7
 80111cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80111d0:	882f      	ldrh	r7, [r5, #0]
 80111d2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80111d6:	2200      	movs	r2, #0
 80111d8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80111dc:	f8ad 001a 	strh.w	r0, [sp, #26]
 80111e0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80111e4:	42bb      	cmp	r3, r7
 80111e6:	d9cd      	bls.n	8011184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80111e8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80111ec:	ab07      	add	r3, sp, #28
 80111ee:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80111f2:	6851      	ldr	r1, [r2, #4]
 80111f4:	c303      	stmia	r3!, {r0, r1}
 80111f6:	a905      	add	r1, sp, #20
 80111f8:	a807      	add	r0, sp, #28
 80111fa:	f7ff f9b1 	bl	8010560 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80111fe:	2800      	cmp	r0, #0
 8011200:	d04c      	beq.n	801129c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011202:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011206:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801120a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 801120e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8011212:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011216:	9302      	str	r3, [sp, #8]
 8011218:	4686      	mov	lr, r0
 801121a:	4290      	cmp	r0, r2
 801121c:	4450      	add	r0, sl
 801121e:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8011222:	bfb8      	it	lt
 8011224:	4696      	movlt	lr, r2
 8011226:	4452      	add	r2, sl
 8011228:	4299      	cmp	r1, r3
 801122a:	b280      	uxth	r0, r0
 801122c:	b292      	uxth	r2, r2
 801122e:	468c      	mov	ip, r1
 8011230:	fa0f fa82 	sxth.w	sl, r2
 8011234:	bfb8      	it	lt
 8011236:	469c      	movlt	ip, r3
 8011238:	b203      	sxth	r3, r0
 801123a:	4553      	cmp	r3, sl
 801123c:	bfb8      	it	lt
 801123e:	4602      	movlt	r2, r0
 8011240:	eba2 020e 	sub.w	r2, r2, lr
 8011244:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011248:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801124c:	9b02      	ldr	r3, [sp, #8]
 801124e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011252:	4411      	add	r1, r2
 8011254:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011258:	f8ad c01e 	strh.w	ip, [sp, #30]
 801125c:	4413      	add	r3, r2
 801125e:	b289      	uxth	r1, r1
 8011260:	b29b      	uxth	r3, r3
 8011262:	b208      	sxth	r0, r1
 8011264:	b21a      	sxth	r2, r3
 8011266:	4290      	cmp	r0, r2
 8011268:	bfb8      	it	lt
 801126a:	460b      	movlt	r3, r1
 801126c:	eba3 030c 	sub.w	r3, r3, ip
 8011270:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8011274:	a807      	add	r0, sp, #28
 8011276:	f7fc f816 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801127a:	b920      	cbnz	r0, 8011286 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 801127c:	6823      	ldr	r3, [r4, #0]
 801127e:	a907      	add	r1, sp, #28
 8011280:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011282:	4620      	mov	r0, r4
 8011284:	4798      	blx	r3
 8011286:	3701      	adds	r7, #1
 8011288:	b2bf      	uxth	r7, r7
 801128a:	e7a9      	b.n	80111e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 801128c:	f8d9 0000 	ldr.w	r0, [r9]
 8011290:	6803      	ldr	r3, [r0, #0]
 8011292:	2101      	movs	r1, #1
 8011294:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8011298:	4798      	blx	r3
 801129a:	e773      	b.n	8011184 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801129c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80112a0:	e7e8      	b.n	8011274 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80112a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80112a4:	4798      	blx	r3
 80112a6:	4b3f      	ldr	r3, [pc, #252]	@ (80113a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80112a8:	781b      	ldrb	r3, [r3, #0]
 80112aa:	2b00      	cmp	r3, #0
 80112ac:	f43f af29 	beq.w	8011102 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80112b0:	2300      	movs	r3, #0
 80112b2:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80112b6:	882b      	ldrh	r3, [r5, #0]
 80112b8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80112bc:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80112c0:	42ab      	cmp	r3, r5
 80112c2:	f4bf af1e 	bcs.w	8011102 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80112c6:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 80112ca:	2907      	cmp	r1, #7
 80112cc:	d814      	bhi.n	80112f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 80112ce:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80112d2:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80112d6:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80112da:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80112de:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80112e2:	1c4a      	adds	r2, r1, #1
 80112e4:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 80112e8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80112ec:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80112f0:	f8a2 c002 	strh.w	ip, [r2, #2]
 80112f4:	8097      	strh	r7, [r2, #4]
 80112f6:	80d6      	strh	r6, [r2, #6]
 80112f8:	3301      	adds	r3, #1
 80112fa:	b29b      	uxth	r3, r3
 80112fc:	e7e0      	b.n	80112c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80112fe:	2b02      	cmp	r3, #2
 8011300:	f040 8133 	bne.w	801156a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8011304:	4b28      	ldr	r3, [pc, #160]	@ (80113a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011306:	781b      	ldrb	r3, [r3, #0]
 8011308:	2b01      	cmp	r3, #1
 801130a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801130e:	f000 8098 	beq.w	8011442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8011312:	882a      	ldrh	r2, [r5, #0]
 8011314:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8011318:	3201      	adds	r2, #1
 801131a:	b292      	uxth	r2, r2
 801131c:	2900      	cmp	r1, #0
 801131e:	d0c2      	beq.n	80112a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011320:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8011324:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8011328:	441e      	add	r6, r3
 801132a:	b236      	sxth	r6, r6
 801132c:	4694      	mov	ip, r2
 801132e:	f04f 0900 	mov.w	r9, #0
 8011332:	fa1f f38c 	uxth.w	r3, ip
 8011336:	4299      	cmp	r1, r3
 8011338:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801133c:	f240 80bf 	bls.w	80114be <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8011340:	4427      	add	r7, r4
 8011342:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8011346:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 801134a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 801134e:	4283      	cmp	r3, r0
 8011350:	f340 80a1 	ble.w	8011496 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8011354:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8011358:	4406      	add	r6, r0
 801135a:	b236      	sxth	r6, r6
 801135c:	429e      	cmp	r6, r3
 801135e:	bfa8      	it	ge
 8011360:	461e      	movge	r6, r3
 8011362:	46e1      	mov	r9, ip
 8011364:	f10c 0c01 	add.w	ip, ip, #1
 8011368:	e7e3      	b.n	8011332 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 801136a:	d10a      	bne.n	8011382 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801136c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8011370:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8011374:	4562      	cmp	r2, ip
 8011376:	bfb8      	it	lt
 8011378:	4662      	movlt	r2, ip
 801137a:	4288      	cmp	r0, r1
 801137c:	bfb8      	it	lt
 801137e:	461f      	movlt	r7, r3
 8011380:	e087      	b.n	8011492 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8011382:	428a      	cmp	r2, r1
 8011384:	bfb8      	it	lt
 8011386:	460a      	movlt	r2, r1
 8011388:	e083      	b.n	8011492 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801138a:	bf00      	nop
 801138c:	20002df4 	.word	0x20002df4
 8011390:	20002e00 	.word	0x20002e00
 8011394:	20000024 	.word	0x20000024
 8011398:	20002dbc 	.word	0x20002dbc
 801139c:	20002db2 	.word	0x20002db2
 80113a0:	20002db0 	.word	0x20002db0
 80113a4:	20002dba 	.word	0x20002dba
 80113a8:	20002db4 	.word	0x20002db4
 80113ac:	19a1      	adds	r1, r4, r6
 80113ae:	ab07      	add	r3, sp, #28
 80113b0:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80113b4:	6849      	ldr	r1, [r1, #4]
 80113b6:	c303      	stmia	r3!, {r0, r1}
 80113b8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80113bc:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80113c0:	2b13      	cmp	r3, #19
 80113c2:	bfd8      	it	le
 80113c4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80113c8:	f8ad 201c 	strh.w	r2, [sp, #28]
 80113cc:	440b      	add	r3, r1
 80113ce:	1a9b      	subs	r3, r3, r2
 80113d0:	a807      	add	r0, sp, #28
 80113d2:	f8ad 3020 	strh.w	r3, [sp, #32]
 80113d6:	f7ff f813 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80113da:	a807      	add	r0, sp, #28
 80113dc:	f7fb ff63 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80113e0:	bb78      	cbnz	r0, 8011442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80113e2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 80113e6:	f8d9 0000 	ldr.w	r0, [r9]
 80113ea:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80113ee:	f8d0 e000 	ldr.w	lr, [r0]
 80113f2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80113f6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80113fa:	f1bc 0f14 	cmp.w	ip, #20
 80113fe:	bfa8      	it	ge
 8011400:	f04f 0c14 	movge.w	ip, #20
 8011404:	fa1f fc8c 	uxth.w	ip, ip
 8011408:	f8cd c000 	str.w	ip, [sp]
 801140c:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8011410:	47d8      	blx	fp
 8011412:	4683      	mov	fp, r0
 8011414:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8011418:	a807      	add	r0, sp, #28
 801141a:	f7fe ffd7 	bl	80103cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801141e:	6823      	ldr	r3, [r4, #0]
 8011420:	4426      	add	r6, r4
 8011422:	4620      	mov	r0, r4
 8011424:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011426:	a907      	add	r1, sp, #28
 8011428:	4798      	blx	r3
 801142a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 801142e:	eba0 000b 	sub.w	r0, r0, fp
 8011432:	b200      	sxth	r0, r0
 8011434:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8011438:	b918      	cbnz	r0, 8011442 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 801143a:	b2b9      	uxth	r1, r7
 801143c:	4650      	mov	r0, sl
 801143e:	f7ff fa79 	bl	8010934 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011442:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8011446:	f1bb 0f00 	cmp.w	fp, #0
 801144a:	f43f af2c 	beq.w	80112a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801144e:	882b      	ldrh	r3, [r5, #0]
 8011450:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8011454:	3301      	adds	r3, #1
 8011456:	b29b      	uxth	r3, r3
 8011458:	2700      	movs	r7, #0
 801145a:	b299      	uxth	r1, r3
 801145c:	458b      	cmp	fp, r1
 801145e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8011462:	d9a3      	bls.n	80113ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8011464:	4426      	add	r6, r4
 8011466:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 801146a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 801146e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8011472:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8011476:	4408      	add	r0, r1
 8011478:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 801147c:	4461      	add	r1, ip
 801147e:	b200      	sxth	r0, r0
 8011480:	b209      	sxth	r1, r1
 8011482:	4288      	cmp	r0, r1
 8011484:	f6bf af71 	bge.w	801136a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8011488:	4584      	cmp	ip, r0
 801148a:	4662      	mov	r2, ip
 801148c:	461f      	mov	r7, r3
 801148e:	bfb8      	it	lt
 8011490:	4602      	movlt	r2, r0
 8011492:	3301      	adds	r3, #1
 8011494:	e7e1      	b.n	801145a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8011496:	d10e      	bne.n	80114b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8011498:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 801149c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 80114a0:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 80114a4:	4473      	add	r3, lr
 80114a6:	b21b      	sxth	r3, r3
 80114a8:	429e      	cmp	r6, r3
 80114aa:	bfa8      	it	ge
 80114ac:	461e      	movge	r6, r3
 80114ae:	4287      	cmp	r7, r0
 80114b0:	bfb8      	it	lt
 80114b2:	46e1      	movlt	r9, ip
 80114b4:	e756      	b.n	8011364 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80114b6:	4286      	cmp	r6, r0
 80114b8:	bfa8      	it	ge
 80114ba:	4606      	movge	r6, r0
 80114bc:	e752      	b.n	8011364 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 80114be:	eb0a 0007 	add.w	r0, sl, r7
 80114c2:	4427      	add	r7, r4
 80114c4:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80114c8:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80114cc:	f1bb 0f13 	cmp.w	fp, #19
 80114d0:	bfde      	ittt	le
 80114d2:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 80114d6:	445e      	addle	r6, fp
 80114d8:	b236      	sxthle	r6, r6
 80114da:	f7fb fee4 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 80114de:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80114e2:	2800      	cmp	r0, #0
 80114e4:	f47f af1a 	bne.w	801131c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 80114e8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80114ec:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80114f0:	482a      	ldr	r0, [pc, #168]	@ (801159c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 80114f2:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80114f6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80114fa:	6800      	ldr	r0, [r0, #0]
 80114fc:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011500:	1ab6      	subs	r6, r6, r2
 8011502:	2e14      	cmp	r6, #20
 8011504:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011508:	f8ad 3020 	strh.w	r3, [sp, #32]
 801150c:	bfa8      	it	ge
 801150e:	2614      	movge	r6, #20
 8011510:	f8d0 c000 	ldr.w	ip, [r0]
 8011514:	b2b6      	uxth	r6, r6
 8011516:	fa1f fb8b 	uxth.w	fp, fp
 801151a:	455e      	cmp	r6, fp
 801151c:	bf94      	ite	ls
 801151e:	9600      	strls	r6, [sp, #0]
 8011520:	f8cd b000 	strhi.w	fp, [sp]
 8011524:	b292      	uxth	r2, r2
 8011526:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 801152a:	b29b      	uxth	r3, r3
 801152c:	b289      	uxth	r1, r1
 801152e:	47b0      	blx	r6
 8011530:	6823      	ldr	r3, [r4, #0]
 8011532:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8011536:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011538:	a907      	add	r1, sp, #28
 801153a:	4620      	mov	r0, r4
 801153c:	4798      	blx	r3
 801153e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8011542:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8011546:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801154a:	1a5b      	subs	r3, r3, r1
 801154c:	440a      	add	r2, r1
 801154e:	b21b      	sxth	r3, r3
 8011550:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8011554:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8011558:	2b00      	cmp	r3, #0
 801155a:	f47f aeda 	bne.w	8011312 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801155e:	fa1f f189 	uxth.w	r1, r9
 8011562:	4650      	mov	r0, sl
 8011564:	f7ff f9e6 	bl	8010934 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011568:	e6d3      	b.n	8011312 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801156a:	882e      	ldrh	r6, [r5, #0]
 801156c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8011570:	42b3      	cmp	r3, r6
 8011572:	f67f ae98 	bls.w	80112a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011576:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801157a:	ab07      	add	r3, sp, #28
 801157c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8011580:	6851      	ldr	r1, [r2, #4]
 8011582:	c303      	stmia	r3!, {r0, r1}
 8011584:	a807      	add	r0, sp, #28
 8011586:	f7fb fe8e 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801158a:	b920      	cbnz	r0, 8011596 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 801158c:	6823      	ldr	r3, [r4, #0]
 801158e:	a907      	add	r1, sp, #28
 8011590:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011592:	4620      	mov	r0, r4
 8011594:	4798      	blx	r3
 8011596:	3601      	adds	r6, #1
 8011598:	b2b6      	uxth	r6, r6
 801159a:	e7e7      	b.n	801156c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 801159c:	20002dbc 	.word	0x20002dbc

080115a0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80115a0:	4b03      	ldr	r3, [pc, #12]	@ (80115b0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80115a2:	2200      	movs	r2, #0
 80115a4:	801a      	strh	r2, [r3, #0]
 80115a6:	805a      	strh	r2, [r3, #2]
 80115a8:	809a      	strh	r2, [r3, #4]
 80115aa:	80da      	strh	r2, [r3, #6]
 80115ac:	4770      	bx	lr
 80115ae:	bf00      	nop
 80115b0:	20002e00 	.word	0x20002e00

080115b4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80115b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80115b8:	4606      	mov	r6, r0
 80115ba:	b09d      	sub	sp, #116	@ 0x74
 80115bc:	a803      	add	r0, sp, #12
 80115be:	4614      	mov	r4, r2
 80115c0:	468a      	mov	sl, r1
 80115c2:	461d      	mov	r5, r3
 80115c4:	f000 fd72 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 80115c8:	6833      	ldr	r3, [r6, #0]
 80115ca:	4630      	mov	r0, r6
 80115cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80115ce:	4798      	blx	r3
 80115d0:	6833      	ldr	r3, [r6, #0]
 80115d2:	4607      	mov	r7, r0
 80115d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80115d6:	4630      	mov	r0, r6
 80115d8:	4798      	blx	r3
 80115da:	462a      	mov	r2, r5
 80115dc:	9000      	str	r0, [sp, #0]
 80115de:	4621      	mov	r1, r4
 80115e0:	463b      	mov	r3, r7
 80115e2:	a803      	add	r0, sp, #12
 80115e4:	f000 fdbd 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80115e8:	2500      	movs	r5, #0
 80115ea:	462c      	mov	r4, r5
 80115ec:	46a9      	mov	r9, r5
 80115ee:	46a8      	mov	r8, r5
 80115f0:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80115f4:	2300      	movs	r3, #0
 80115f6:	9302      	str	r3, [sp, #8]
 80115f8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80115fc:	429c      	cmp	r4, r3
 80115fe:	d002      	beq.n	8011606 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011600:	455c      	cmp	r4, fp
 8011602:	bf18      	it	ne
 8011604:	4625      	movne	r5, r4
 8011606:	ab02      	add	r3, sp, #8
 8011608:	4632      	mov	r2, r6
 801160a:	4651      	mov	r1, sl
 801160c:	a803      	add	r0, sp, #12
 801160e:	f001 f8d5 	bl	80127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011612:	4604      	mov	r4, r0
 8011614:	b108      	cbz	r0, 801161a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011616:	280a      	cmp	r0, #10
 8011618:	d10a      	bne.n	8011630 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801161a:	45c1      	cmp	r9, r8
 801161c:	bf38      	it	cc
 801161e:	46c1      	movcc	r9, r8
 8011620:	f04f 0800 	mov.w	r8, #0
 8011624:	2c00      	cmp	r4, #0
 8011626:	d1e5      	bne.n	80115f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011628:	4648      	mov	r0, r9
 801162a:	b01d      	add	sp, #116	@ 0x74
 801162c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011630:	9a02      	ldr	r2, [sp, #8]
 8011632:	2a00      	cmp	r2, #0
 8011634:	d0de      	beq.n	80115f4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011636:	7b57      	ldrb	r7, [r2, #13]
 8011638:	6833      	ldr	r3, [r6, #0]
 801163a:	8894      	ldrh	r4, [r2, #4]
 801163c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801163e:	007f      	lsls	r7, r7, #1
 8011640:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8011644:	7a97      	ldrb	r7, [r2, #10]
 8011646:	4629      	mov	r1, r5
 8011648:	4307      	orrs	r7, r0
 801164a:	4630      	mov	r0, r6
 801164c:	4798      	blx	r3
 801164e:	4438      	add	r0, r7
 8011650:	4480      	add	r8, r0
 8011652:	fa1f f888 	uxth.w	r8, r8
 8011656:	e7e5      	b.n	8011624 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011658 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011658:	b508      	push	{r3, lr}
 801165a:	6803      	ldr	r3, [r0, #0]
 801165c:	68db      	ldr	r3, [r3, #12]
 801165e:	4798      	blx	r3
 8011660:	b128      	cbz	r0, 801166e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011662:	7b43      	ldrb	r3, [r0, #13]
 8011664:	7a80      	ldrb	r0, [r0, #10]
 8011666:	005b      	lsls	r3, r3, #1
 8011668:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801166c:	4318      	orrs	r0, r3
 801166e:	bd08      	pop	{r3, pc}

08011670 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011670:	b40e      	push	{r1, r2, r3}
 8011672:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011674:	b09e      	sub	sp, #120	@ 0x78
 8011676:	ab23      	add	r3, sp, #140	@ 0x8c
 8011678:	4605      	mov	r5, r0
 801167a:	f853 4b04 	ldr.w	r4, [r3], #4
 801167e:	9303      	str	r3, [sp, #12]
 8011680:	a805      	add	r0, sp, #20
 8011682:	f000 fd13 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 8011686:	682b      	ldr	r3, [r5, #0]
 8011688:	4628      	mov	r0, r5
 801168a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801168c:	4798      	blx	r3
 801168e:	682b      	ldr	r3, [r5, #0]
 8011690:	4606      	mov	r6, r0
 8011692:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011694:	4628      	mov	r0, r5
 8011696:	4798      	blx	r3
 8011698:	4633      	mov	r3, r6
 801169a:	ae1e      	add	r6, sp, #120	@ 0x78
 801169c:	4621      	mov	r1, r4
 801169e:	9000      	str	r0, [sp, #0]
 80116a0:	9a03      	ldr	r2, [sp, #12]
 80116a2:	2400      	movs	r4, #0
 80116a4:	a805      	add	r0, sp, #20
 80116a6:	f000 fd5c 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80116aa:	f846 4d68 	str.w	r4, [r6, #-104]!
 80116ae:	462a      	mov	r2, r5
 80116b0:	4633      	mov	r3, r6
 80116b2:	4621      	mov	r1, r4
 80116b4:	a805      	add	r0, sp, #20
 80116b6:	f001 f881 	bl	80127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80116ba:	b1f0      	cbz	r0, 80116fa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80116bc:	280a      	cmp	r0, #10
 80116be:	d018      	beq.n	80116f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80116c0:	9f04      	ldr	r7, [sp, #16]
 80116c2:	b1b7      	cbz	r7, 80116f2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80116c4:	7b78      	ldrb	r0, [r7, #13]
 80116c6:	7a3b      	ldrb	r3, [r7, #8]
 80116c8:	88ea      	ldrh	r2, [r5, #6]
 80116ca:	00c1      	lsls	r1, r0, #3
 80116cc:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80116d0:	4319      	orrs	r1, r3
 80116d2:	0643      	lsls	r3, r0, #25
 80116d4:	bf44      	itt	mi
 80116d6:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80116da:	b219      	sxthmi	r1, r3
 80116dc:	0100      	lsls	r0, r0, #4
 80116de:	79fb      	ldrb	r3, [r7, #7]
 80116e0:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80116e4:	4303      	orrs	r3, r0
 80116e6:	4413      	add	r3, r2
 80116e8:	1a5b      	subs	r3, r3, r1
 80116ea:	b21b      	sxth	r3, r3
 80116ec:	429c      	cmp	r4, r3
 80116ee:	bfb8      	it	lt
 80116f0:	461c      	movlt	r4, r3
 80116f2:	4633      	mov	r3, r6
 80116f4:	462a      	mov	r2, r5
 80116f6:	2100      	movs	r1, #0
 80116f8:	e7dc      	b.n	80116b4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80116fa:	b2a0      	uxth	r0, r4
 80116fc:	b01e      	add	sp, #120	@ 0x78
 80116fe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011702:	b003      	add	sp, #12
 8011704:	4770      	bx	lr

08011706 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8011706:	7a43      	ldrb	r3, [r0, #9]
 8011708:	8880      	ldrh	r0, [r0, #4]
 801170a:	4418      	add	r0, r3
 801170c:	b280      	uxth	r0, r0
 801170e:	4770      	bx	lr

08011710 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8011710:	6803      	ldr	r3, [r0, #0]
 8011712:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011714:	4718      	bx	r3

08011716 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011716:	b40e      	push	{r1, r2, r3}
 8011718:	b570      	push	{r4, r5, r6, lr}
 801171a:	b09d      	sub	sp, #116	@ 0x74
 801171c:	ab21      	add	r3, sp, #132	@ 0x84
 801171e:	4604      	mov	r4, r0
 8011720:	f853 5b04 	ldr.w	r5, [r3], #4
 8011724:	9302      	str	r3, [sp, #8]
 8011726:	a803      	add	r0, sp, #12
 8011728:	f000 fcc0 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 801172c:	6823      	ldr	r3, [r4, #0]
 801172e:	4620      	mov	r0, r4
 8011730:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011732:	4798      	blx	r3
 8011734:	6823      	ldr	r3, [r4, #0]
 8011736:	4606      	mov	r6, r0
 8011738:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801173a:	4620      	mov	r0, r4
 801173c:	4798      	blx	r3
 801173e:	4633      	mov	r3, r6
 8011740:	9000      	str	r0, [sp, #0]
 8011742:	9a02      	ldr	r2, [sp, #8]
 8011744:	4629      	mov	r1, r5
 8011746:	a803      	add	r0, sp, #12
 8011748:	f000 fd0b 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801174c:	a803      	add	r0, sp, #12
 801174e:	f001 f903 	bl	8012958 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011752:	2401      	movs	r4, #1
 8011754:	b2a3      	uxth	r3, r4
 8011756:	b140      	cbz	r0, 801176a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011758:	280a      	cmp	r0, #10
 801175a:	bf08      	it	eq
 801175c:	3301      	addeq	r3, #1
 801175e:	a803      	add	r0, sp, #12
 8011760:	bf08      	it	eq
 8011762:	b21c      	sxtheq	r4, r3
 8011764:	f001 f8f8 	bl	8012958 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011768:	e7f4      	b.n	8011754 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801176a:	4618      	mov	r0, r3
 801176c:	b01d      	add	sp, #116	@ 0x74
 801176e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011772:	b003      	add	sp, #12
 8011774:	4770      	bx	lr

08011776 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011776:	b40e      	push	{r1, r2, r3}
 8011778:	b5f0      	push	{r4, r5, r6, r7, lr}
 801177a:	b09e      	sub	sp, #120	@ 0x78
 801177c:	ab23      	add	r3, sp, #140	@ 0x8c
 801177e:	4604      	mov	r4, r0
 8011780:	f853 5b04 	ldr.w	r5, [r3], #4
 8011784:	9303      	str	r3, [sp, #12]
 8011786:	a805      	add	r0, sp, #20
 8011788:	f000 fc90 	bl	80120ac <_ZN8touchgfx12TextProviderC1Ev>
 801178c:	6823      	ldr	r3, [r4, #0]
 801178e:	4620      	mov	r0, r4
 8011790:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011792:	4798      	blx	r3
 8011794:	6823      	ldr	r3, [r4, #0]
 8011796:	4606      	mov	r6, r0
 8011798:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801179a:	4620      	mov	r0, r4
 801179c:	4798      	blx	r3
 801179e:	4633      	mov	r3, r6
 80117a0:	4629      	mov	r1, r5
 80117a2:	9000      	str	r0, [sp, #0]
 80117a4:	9a03      	ldr	r2, [sp, #12]
 80117a6:	a805      	add	r0, sp, #20
 80117a8:	ad1e      	add	r5, sp, #120	@ 0x78
 80117aa:	f000 fcda 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80117ae:	2100      	movs	r1, #0
 80117b0:	f845 1d68 	str.w	r1, [r5, #-104]!
 80117b4:	4622      	mov	r2, r4
 80117b6:	462b      	mov	r3, r5
 80117b8:	a805      	add	r0, sp, #20
 80117ba:	f000 ffff 	bl	80127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80117be:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80117c2:	b1d8      	cbz	r0, 80117fc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80117c4:	280a      	cmp	r0, #10
 80117c6:	d012      	beq.n	80117ee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80117c8:	9804      	ldr	r0, [sp, #16]
 80117ca:	b180      	cbz	r0, 80117ee <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80117cc:	7b47      	ldrb	r7, [r0, #13]
 80117ce:	88e2      	ldrh	r2, [r4, #6]
 80117d0:	00fb      	lsls	r3, r7, #3
 80117d2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80117d6:	7a03      	ldrb	r3, [r0, #8]
 80117d8:	430b      	orrs	r3, r1
 80117da:	0679      	lsls	r1, r7, #25
 80117dc:	bf44      	itt	mi
 80117de:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80117e2:	b21b      	sxthmi	r3, r3
 80117e4:	1ad3      	subs	r3, r2, r3
 80117e6:	b21b      	sxth	r3, r3
 80117e8:	429e      	cmp	r6, r3
 80117ea:	bfa8      	it	ge
 80117ec:	461e      	movge	r6, r3
 80117ee:	462b      	mov	r3, r5
 80117f0:	4622      	mov	r2, r4
 80117f2:	2100      	movs	r1, #0
 80117f4:	a805      	add	r0, sp, #20
 80117f6:	f000 ffe1 	bl	80127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80117fa:	e7e2      	b.n	80117c2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80117fc:	4630      	mov	r0, r6
 80117fe:	b01e      	add	sp, #120	@ 0x78
 8011800:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011804:	b003      	add	sp, #12
 8011806:	4770      	bx	lr

08011808 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011808:	b513      	push	{r0, r1, r4, lr}
 801180a:	6803      	ldr	r3, [r0, #0]
 801180c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011810:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011814:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011818:	2400      	movs	r4, #0
 801181a:	9400      	str	r4, [sp, #0]
 801181c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011820:	691b      	ldr	r3, [r3, #16]
 8011822:	4669      	mov	r1, sp
 8011824:	4798      	blx	r3
 8011826:	b002      	add	sp, #8
 8011828:	bd10      	pop	{r4, pc}

0801182a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801182a:	b538      	push	{r3, r4, r5, lr}
 801182c:	680b      	ldr	r3, [r1, #0]
 801182e:	460c      	mov	r4, r1
 8011830:	68db      	ldr	r3, [r3, #12]
 8011832:	4605      	mov	r5, r0
 8011834:	4798      	blx	r3
 8011836:	6823      	ldr	r3, [r4, #0]
 8011838:	4620      	mov	r0, r4
 801183a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801183c:	4629      	mov	r1, r5
 801183e:	4798      	blx	r3
 8011840:	4628      	mov	r0, r5
 8011842:	bd38      	pop	{r3, r4, r5, pc}

08011844 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011844:	b410      	push	{r4}
 8011846:	880a      	ldrh	r2, [r1, #0]
 8011848:	8884      	ldrh	r4, [r0, #4]
 801184a:	4422      	add	r2, r4
 801184c:	800a      	strh	r2, [r1, #0]
 801184e:	88c4      	ldrh	r4, [r0, #6]
 8011850:	884a      	ldrh	r2, [r1, #2]
 8011852:	4422      	add	r2, r4
 8011854:	804a      	strh	r2, [r1, #2]
 8011856:	6940      	ldr	r0, [r0, #20]
 8011858:	b120      	cbz	r0, 8011864 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801185a:	6803      	ldr	r3, [r0, #0]
 801185c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011860:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011862:	4718      	bx	r3
 8011864:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011868:	4770      	bx	lr

0801186a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801186a:	b570      	push	{r4, r5, r6, lr}
 801186c:	8882      	ldrh	r2, [r0, #4]
 801186e:	880b      	ldrh	r3, [r1, #0]
 8011870:	4413      	add	r3, r2
 8011872:	800b      	strh	r3, [r1, #0]
 8011874:	88c2      	ldrh	r2, [r0, #6]
 8011876:	884b      	ldrh	r3, [r1, #2]
 8011878:	460c      	mov	r4, r1
 801187a:	4413      	add	r3, r2
 801187c:	804b      	strh	r3, [r1, #2]
 801187e:	4605      	mov	r5, r0
 8011880:	1d01      	adds	r1, r0, #4
 8011882:	4620      	mov	r0, r4
 8011884:	f7fb fccc 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8011888:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801188c:	2b00      	cmp	r3, #0
 801188e:	dd0b      	ble.n	80118a8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011890:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8011894:	2b00      	cmp	r3, #0
 8011896:	dd07      	ble.n	80118a8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8011898:	6968      	ldr	r0, [r5, #20]
 801189a:	b128      	cbz	r0, 80118a8 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801189c:	6803      	ldr	r3, [r0, #0]
 801189e:	4621      	mov	r1, r4
 80118a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80118a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118a6:	4718      	bx	r3
 80118a8:	bd70      	pop	{r4, r5, r6, pc}
	...

080118ac <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80118ac:	b570      	push	{r4, r5, r6, lr}
 80118ae:	8882      	ldrh	r2, [r0, #4]
 80118b0:	880b      	ldrh	r3, [r1, #0]
 80118b2:	4413      	add	r3, r2
 80118b4:	800b      	strh	r3, [r1, #0]
 80118b6:	88c2      	ldrh	r2, [r0, #6]
 80118b8:	884b      	ldrh	r3, [r1, #2]
 80118ba:	460c      	mov	r4, r1
 80118bc:	4413      	add	r3, r2
 80118be:	804b      	strh	r3, [r1, #2]
 80118c0:	4605      	mov	r5, r0
 80118c2:	1d01      	adds	r1, r0, #4
 80118c4:	4620      	mov	r0, r4
 80118c6:	f7fb fcab 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 80118ca:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80118ce:	2b00      	cmp	r3, #0
 80118d0:	dd19      	ble.n	8011906 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80118d2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80118d6:	2b00      	cmp	r3, #0
 80118d8:	dd15      	ble.n	8011906 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80118da:	6968      	ldr	r0, [r5, #20]
 80118dc:	b128      	cbz	r0, 80118ea <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80118de:	6803      	ldr	r3, [r0, #0]
 80118e0:	4621      	mov	r1, r4
 80118e2:	691b      	ldr	r3, [r3, #16]
 80118e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118e8:	4718      	bx	r3
 80118ea:	4b07      	ldr	r3, [pc, #28]	@ (8011908 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80118ec:	681b      	ldr	r3, [r3, #0]
 80118ee:	3304      	adds	r3, #4
 80118f0:	429d      	cmp	r5, r3
 80118f2:	d108      	bne.n	8011906 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80118f4:	f7fe ff12 	bl	801071c <_ZN8touchgfx11Application11getInstanceEv>
 80118f8:	6803      	ldr	r3, [r0, #0]
 80118fa:	6821      	ldr	r1, [r4, #0]
 80118fc:	6862      	ldr	r2, [r4, #4]
 80118fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011900:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011904:	4718      	bx	r3
 8011906:	bd70      	pop	{r4, r5, r6, pc}
 8011908:	20002df8 	.word	0x20002df8

0801190c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801190c:	b570      	push	{r4, r5, r6, lr}
 801190e:	4604      	mov	r4, r0
 8011910:	4616      	mov	r6, r2
 8011912:	460d      	mov	r5, r1
 8011914:	b901      	cbnz	r1, 8011918 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8011916:	b192      	cbz	r2, 801193e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8011918:	6823      	ldr	r3, [r4, #0]
 801191a:	4620      	mov	r0, r4
 801191c:	699b      	ldr	r3, [r3, #24]
 801191e:	4798      	blx	r3
 8011920:	88e2      	ldrh	r2, [r4, #6]
 8011922:	88a1      	ldrh	r1, [r4, #4]
 8011924:	4432      	add	r2, r6
 8011926:	4429      	add	r1, r5
 8011928:	4620      	mov	r0, r4
 801192a:	b212      	sxth	r2, r2
 801192c:	b209      	sxth	r1, r1
 801192e:	f7f7 fcba 	bl	80092a6 <_ZN8touchgfx8Drawable5setXYEss>
 8011932:	6823      	ldr	r3, [r4, #0]
 8011934:	4620      	mov	r0, r4
 8011936:	699b      	ldr	r3, [r3, #24]
 8011938:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801193c:	4718      	bx	r3
 801193e:	bd70      	pop	{r4, r5, r6, pc}

08011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8011940:	b510      	push	{r4, lr}
 8011942:	4604      	mov	r4, r0
 8011944:	4608      	mov	r0, r1
 8011946:	2300      	movs	r3, #0
 8011948:	8023      	strh	r3, [r4, #0]
 801194a:	8063      	strh	r3, [r4, #2]
 801194c:	6803      	ldr	r3, [r0, #0]
 801194e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011952:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8011956:	80a1      	strh	r1, [r4, #4]
 8011958:	80e2      	strh	r2, [r4, #6]
 801195a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801195c:	4621      	mov	r1, r4
 801195e:	4798      	blx	r3
 8011960:	4620      	mov	r0, r4
 8011962:	bd10      	pop	{r4, pc}

08011964 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8011964:	b530      	push	{r4, r5, lr}
 8011966:	8083      	strh	r3, [r0, #4]
 8011968:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 801196c:	80c3      	strh	r3, [r0, #6]
 801196e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8011972:	7203      	strb	r3, [r0, #8]
 8011974:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011978:	f89d 5018 	ldrb.w	r5, [sp, #24]
 801197c:	7243      	strb	r3, [r0, #9]
 801197e:	7a83      	ldrb	r3, [r0, #10]
 8011980:	6141      	str	r1, [r0, #20]
 8011982:	f365 0306 	bfi	r3, r5, #0, #7
 8011986:	f89d 501c 	ldrb.w	r5, [sp, #28]
 801198a:	8302      	strh	r2, [r0, #24]
 801198c:	f365 13c7 	bfi	r3, r5, #7, #1
 8011990:	7283      	strb	r3, [r0, #10]
 8011992:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8011996:	72c3      	strb	r3, [r0, #11]
 8011998:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 801199c:	7303      	strb	r3, [r0, #12]
 801199e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80119a2:	81c3      	strh	r3, [r0, #14]
 80119a4:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80119a8:	8203      	strh	r3, [r0, #16]
 80119aa:	4b01      	ldr	r3, [pc, #4]	@ (80119b0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80119ac:	6003      	str	r3, [r0, #0]
 80119ae:	bd30      	pop	{r4, r5, pc}
 80119b0:	08025324 	.word	0x08025324

080119b4 <_ZNK8touchgfx9ConstFont4findEt>:
 80119b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119b6:	6944      	ldr	r4, [r0, #20]
 80119b8:	b3bc      	cbz	r4, 8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80119ba:	88a3      	ldrh	r3, [r4, #4]
 80119bc:	8b02      	ldrh	r2, [r0, #24]
 80119be:	1acb      	subs	r3, r1, r3
 80119c0:	f102 32ff 	add.w	r2, r2, #4294967295
 80119c4:	d431      	bmi.n	8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80119c6:	4293      	cmp	r3, r2
 80119c8:	dd0c      	ble.n	80119e4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80119ca:	230e      	movs	r3, #14
 80119cc:	fb03 4302 	mla	r3, r3, r2, r4
 80119d0:	889b      	ldrh	r3, [r3, #4]
 80119d2:	1a5b      	subs	r3, r3, r1
 80119d4:	1ad3      	subs	r3, r2, r3
 80119d6:	429a      	cmp	r2, r3
 80119d8:	db27      	blt.n	8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80119da:	2b00      	cmp	r3, #0
 80119dc:	bfbc      	itt	lt
 80119de:	2302      	movlt	r3, #2
 80119e0:	fb92 f3f3 	sdivlt	r3, r2, r3
 80119e4:	2500      	movs	r5, #0
 80119e6:	260e      	movs	r6, #14
 80119e8:	4295      	cmp	r5, r2
 80119ea:	dc1e      	bgt.n	8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80119ec:	fb06 4003 	mla	r0, r6, r3, r4
 80119f0:	8887      	ldrh	r7, [r0, #4]
 80119f2:	42b9      	cmp	r1, r7
 80119f4:	d01a      	beq.n	8011a2c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80119f6:	d20d      	bcs.n	8011a14 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80119f8:	1e5a      	subs	r2, r3, #1
 80119fa:	4295      	cmp	r5, r2
 80119fc:	dc15      	bgt.n	8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80119fe:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011a02:	1a5b      	subs	r3, r3, r1
 8011a04:	1ad3      	subs	r3, r2, r3
 8011a06:	429a      	cmp	r2, r3
 8011a08:	db0f      	blt.n	8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011a0a:	429d      	cmp	r5, r3
 8011a0c:	ddec      	ble.n	80119e8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011a0e:	1953      	adds	r3, r2, r5
 8011a10:	105b      	asrs	r3, r3, #1
 8011a12:	e7e9      	b.n	80119e8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011a14:	1c5d      	adds	r5, r3, #1
 8011a16:	42aa      	cmp	r2, r5
 8011a18:	db07      	blt.n	8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011a1a:	8a43      	ldrh	r3, [r0, #18]
 8011a1c:	1acb      	subs	r3, r1, r3
 8011a1e:	442b      	add	r3, r5
 8011a20:	429d      	cmp	r5, r3
 8011a22:	dc02      	bgt.n	8011a2a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011a24:	429a      	cmp	r2, r3
 8011a26:	dadf      	bge.n	80119e8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011a28:	e7f1      	b.n	8011a0e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8011a2a:	2000      	movs	r0, #0
 8011a2c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011a2e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011a2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a30:	4604      	mov	r4, r0
 8011a32:	4617      	mov	r7, r2
 8011a34:	461e      	mov	r6, r3
 8011a36:	b911      	cbnz	r1, 8011a3e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8011a38:	2500      	movs	r5, #0
 8011a3a:	4628      	mov	r0, r5
 8011a3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a3e:	290a      	cmp	r1, #10
 8011a40:	d0fa      	beq.n	8011a38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011a42:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8011a46:	4291      	cmp	r1, r2
 8011a48:	d0f6      	beq.n	8011a38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011a4a:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011a4e:	4291      	cmp	r1, r2
 8011a50:	d0f2      	beq.n	8011a38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011a52:	f7ff ffaf 	bl	80119b4 <_ZNK8touchgfx9ConstFont4findEt>
 8011a56:	4605      	mov	r5, r0
 8011a58:	b950      	cbnz	r0, 8011a70 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8011a5a:	6823      	ldr	r3, [r4, #0]
 8011a5c:	4620      	mov	r0, r4
 8011a5e:	691b      	ldr	r3, [r3, #16]
 8011a60:	4798      	blx	r3
 8011a62:	4601      	mov	r1, r0
 8011a64:	4620      	mov	r0, r4
 8011a66:	f7ff ffa5 	bl	80119b4 <_ZNK8touchgfx9ConstFont4findEt>
 8011a6a:	4605      	mov	r5, r0
 8011a6c:	2800      	cmp	r0, #0
 8011a6e:	d0e3      	beq.n	8011a38 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011a70:	6823      	ldr	r3, [r4, #0]
 8011a72:	4629      	mov	r1, r5
 8011a74:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8011a76:	4620      	mov	r0, r4
 8011a78:	4798      	blx	r3
 8011a7a:	6038      	str	r0, [r7, #0]
 8011a7c:	6823      	ldr	r3, [r4, #0]
 8011a7e:	4620      	mov	r0, r4
 8011a80:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011a82:	4798      	blx	r3
 8011a84:	7030      	strb	r0, [r6, #0]
 8011a86:	e7d8      	b.n	8011a3a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08011a88 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8011a88:	2000      	movs	r0, #0
 8011a8a:	4770      	bx	lr

08011a8c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011a8c:	2001      	movs	r0, #1
 8011a8e:	4770      	bx	lr

08011a90 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011a90:	2002      	movs	r0, #2
 8011a92:	4770      	bx	lr

08011a94 <_ZN8touchgfx12GestureEventD1Ev>:
 8011a94:	4770      	bx	lr

08011a96 <_ZN8touchgfx9DragEventD1Ev>:
 8011a96:	4770      	bx	lr

08011a98 <_ZN8touchgfx10ClickEventD1Ev>:
 8011a98:	4770      	bx	lr

08011a9a <_ZN8touchgfx10ClickEventD0Ev>:
 8011a9a:	b510      	push	{r4, lr}
 8011a9c:	210c      	movs	r1, #12
 8011a9e:	4604      	mov	r4, r0
 8011aa0:	f010 fb95 	bl	80221ce <_ZdlPvj>
 8011aa4:	4620      	mov	r0, r4
 8011aa6:	bd10      	pop	{r4, pc}

08011aa8 <_ZN8touchgfx9DragEventD0Ev>:
 8011aa8:	b510      	push	{r4, lr}
 8011aaa:	2110      	movs	r1, #16
 8011aac:	4604      	mov	r4, r0
 8011aae:	f010 fb8e 	bl	80221ce <_ZdlPvj>
 8011ab2:	4620      	mov	r0, r4
 8011ab4:	bd10      	pop	{r4, pc}

08011ab6 <_ZN8touchgfx12GestureEventD0Ev>:
 8011ab6:	b510      	push	{r4, lr}
 8011ab8:	210c      	movs	r1, #12
 8011aba:	4604      	mov	r4, r0
 8011abc:	f010 fb87 	bl	80221ce <_ZdlPvj>
 8011ac0:	4620      	mov	r0, r4
 8011ac2:	bd10      	pop	{r4, pc}

08011ac4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8011ac4:	b530      	push	{r4, r5, lr}
 8011ac6:	460d      	mov	r5, r1
 8011ac8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011aca:	b087      	sub	sp, #28
 8011acc:	4604      	mov	r4, r0
 8011ace:	b301      	cbz	r1, 8011b12 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8011ad0:	a801      	add	r0, sp, #4
 8011ad2:	f7ff ff35 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011ad6:	892a      	ldrh	r2, [r5, #8]
 8011ad8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011adc:	7928      	ldrb	r0, [r5, #4]
 8011ade:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8011ae2:	f88d 0010 	strb.w	r0, [sp, #16]
 8011ae6:	1ad2      	subs	r2, r2, r3
 8011ae8:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011aea:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011aec:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011af0:	441a      	add	r2, r3
 8011af2:	896b      	ldrh	r3, [r5, #10]
 8011af4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8011af8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011afc:	1b5b      	subs	r3, r3, r5
 8011afe:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8011b00:	442b      	add	r3, r5
 8011b02:	4d05      	ldr	r5, [pc, #20]	@ (8011b18 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011b04:	9503      	str	r5, [sp, #12]
 8011b06:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011b0a:	6803      	ldr	r3, [r0, #0]
 8011b0c:	a903      	add	r1, sp, #12
 8011b0e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011b10:	4798      	blx	r3
 8011b12:	b007      	add	sp, #28
 8011b14:	bd30      	pop	{r4, r5, pc}
 8011b16:	bf00      	nop
 8011b18:	080253b4 	.word	0x080253b4

08011b1c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011b1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b20:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011b22:	b08a      	sub	sp, #40	@ 0x28
 8011b24:	4604      	mov	r4, r0
 8011b26:	460d      	mov	r5, r1
 8011b28:	b113      	cbz	r3, 8011b30 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8011b2a:	790b      	ldrb	r3, [r1, #4]
 8011b2c:	2b00      	cmp	r3, #0
 8011b2e:	d044      	beq.n	8011bba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011b30:	f104 0804 	add.w	r8, r4, #4
 8011b34:	4641      	mov	r1, r8
 8011b36:	a803      	add	r0, sp, #12
 8011b38:	f7ff ff02 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b3c:	792b      	ldrb	r3, [r5, #4]
 8011b3e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011b42:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8011b46:	b983      	cbnz	r3, 8011b6a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8011b48:	892a      	ldrh	r2, [r5, #8]
 8011b4a:	88e9      	ldrh	r1, [r5, #6]
 8011b4c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011b50:	1b92      	subs	r2, r2, r6
 8011b52:	1bc9      	subs	r1, r1, r7
 8011b54:	9301      	str	r3, [sp, #4]
 8011b56:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011b5a:	9300      	str	r3, [sp, #0]
 8011b5c:	b212      	sxth	r2, r2
 8011b5e:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8011b62:	b209      	sxth	r1, r1
 8011b64:	4640      	mov	r0, r8
 8011b66:	f7fb fa77 	bl	800d058 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8011b6a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011b6c:	b329      	cbz	r1, 8011bba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011b6e:	a805      	add	r0, sp, #20
 8011b70:	f7ff fee6 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011b74:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011b78:	792b      	ldrb	r3, [r5, #4]
 8011b7a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011b7c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011b80:	1abf      	subs	r7, r7, r2
 8011b82:	88ea      	ldrh	r2, [r5, #6]
 8011b84:	4417      	add	r7, r2
 8011b86:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8011b88:	4417      	add	r7, r2
 8011b8a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011b8e:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8011b92:	1ab6      	subs	r6, r6, r2
 8011b94:	892a      	ldrh	r2, [r5, #8]
 8011b96:	4416      	add	r6, r2
 8011b98:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011b9a:	4416      	add	r6, r2
 8011b9c:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8011ba0:	4a07      	ldr	r2, [pc, #28]	@ (8011bc0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8011ba2:	9207      	str	r2, [sp, #28]
 8011ba4:	2600      	movs	r6, #0
 8011ba6:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8011baa:	6803      	ldr	r3, [r0, #0]
 8011bac:	a907      	add	r1, sp, #28
 8011bae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011bb0:	4798      	blx	r3
 8011bb2:	792b      	ldrb	r3, [r5, #4]
 8011bb4:	b10b      	cbz	r3, 8011bba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011bb6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8011bba:	b00a      	add	sp, #40	@ 0x28
 8011bbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bc0:	0802538c 	.word	0x0802538c

08011bc4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8011bc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011bc8:	460c      	mov	r4, r1
 8011bca:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8011bcc:	b088      	sub	sp, #32
 8011bce:	4605      	mov	r5, r0
 8011bd0:	2900      	cmp	r1, #0
 8011bd2:	d06d      	beq.n	8011cb0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8011bd4:	4668      	mov	r0, sp
 8011bd6:	f7ff feb3 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011bda:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8011bdc:	88e3      	ldrh	r3, [r4, #6]
 8011bde:	f9bd 8000 	ldrsh.w	r8, [sp]
 8011be2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8011be6:	440b      	add	r3, r1
 8011be8:	b21b      	sxth	r3, r3
 8011bea:	4543      	cmp	r3, r8
 8011bec:	db31      	blt.n	8011c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011bee:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8011bf2:	44c4      	add	ip, r8
 8011bf4:	fa0f fc8c 	sxth.w	ip, ip
 8011bf8:	4563      	cmp	r3, ip
 8011bfa:	da2a      	bge.n	8011c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011bfc:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8011bfe:	8926      	ldrh	r6, [r4, #8]
 8011c00:	4416      	add	r6, r2
 8011c02:	b236      	sxth	r6, r6
 8011c04:	42be      	cmp	r6, r7
 8011c06:	db24      	blt.n	8011c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011c08:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011c0c:	4438      	add	r0, r7
 8011c0e:	b200      	sxth	r0, r0
 8011c10:	4286      	cmp	r6, r0
 8011c12:	da1e      	bge.n	8011c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011c14:	8963      	ldrh	r3, [r4, #10]
 8011c16:	4419      	add	r1, r3
 8011c18:	b209      	sxth	r1, r1
 8011c1a:	4541      	cmp	r1, r8
 8011c1c:	db08      	blt.n	8011c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011c1e:	4561      	cmp	r1, ip
 8011c20:	da06      	bge.n	8011c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011c22:	89a3      	ldrh	r3, [r4, #12]
 8011c24:	441a      	add	r2, r3
 8011c26:	b212      	sxth	r2, r2
 8011c28:	42ba      	cmp	r2, r7
 8011c2a:	db01      	blt.n	8011c30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011c2c:	4282      	cmp	r2, r0
 8011c2e:	db10      	blt.n	8011c52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011c30:	4b21      	ldr	r3, [pc, #132]	@ (8011cb8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011c32:	9304      	str	r3, [sp, #16]
 8011c34:	2302      	movs	r3, #2
 8011c36:	f88d 3014 	strb.w	r3, [sp, #20]
 8011c3a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011c3c:	2300      	movs	r3, #0
 8011c3e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011c42:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011c46:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011c4a:	6803      	ldr	r3, [r0, #0]
 8011c4c:	a904      	add	r1, sp, #16
 8011c4e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011c50:	4798      	blx	r3
 8011c52:	1d29      	adds	r1, r5, #4
 8011c54:	a802      	add	r0, sp, #8
 8011c56:	f7ff fe73 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011c5a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011c5e:	88e0      	ldrh	r0, [r4, #6]
 8011c60:	7921      	ldrb	r1, [r4, #4]
 8011c62:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011c66:	8922      	ldrh	r2, [r4, #8]
 8011c68:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011c6a:	f88d 1014 	strb.w	r1, [sp, #20]
 8011c6e:	eba3 0808 	sub.w	r8, r3, r8
 8011c72:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011c76:	1bdf      	subs	r7, r3, r7
 8011c78:	b2bb      	uxth	r3, r7
 8011c7a:	fa1f f888 	uxth.w	r8, r8
 8011c7e:	8967      	ldrh	r7, [r4, #10]
 8011c80:	89a4      	ldrh	r4, [r4, #12]
 8011c82:	4440      	add	r0, r8
 8011c84:	4460      	add	r0, ip
 8011c86:	441a      	add	r2, r3
 8011c88:	44b8      	add	r8, r7
 8011c8a:	4423      	add	r3, r4
 8011c8c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011c90:	4433      	add	r3, r6
 8011c92:	4432      	add	r2, r6
 8011c94:	44e0      	add	r8, ip
 8011c96:	4c09      	ldr	r4, [pc, #36]	@ (8011cbc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011c98:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8011c9a:	9404      	str	r4, [sp, #16]
 8011c9c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8011ca0:	f8ad 801a 	strh.w	r8, [sp, #26]
 8011ca4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011ca8:	6803      	ldr	r3, [r0, #0]
 8011caa:	a904      	add	r1, sp, #16
 8011cac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011cae:	4798      	blx	r3
 8011cb0:	b008      	add	sp, #32
 8011cb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011cb6:	bf00      	nop
 8011cb8:	0802538c 	.word	0x0802538c
 8011cbc:	080253a0 	.word	0x080253a0

08011cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8011cc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011cc2:	4604      	mov	r4, r0
 8011cc4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8011cc8:	3201      	adds	r2, #1
 8011cca:	d112      	bne.n	8011cf2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8011ccc:	6803      	ldr	r3, [r0, #0]
 8011cce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011cd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011cd6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011cda:	2500      	movs	r5, #0
 8011cdc:	9500      	str	r5, [sp, #0]
 8011cde:	466d      	mov	r5, sp
 8011ce0:	4629      	mov	r1, r5
 8011ce2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011ce6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011ce8:	4798      	blx	r3
 8011cea:	e895 0003 	ldmia.w	r5, {r0, r1}
 8011cee:	e884 0003 	stmia.w	r4, {r0, r1}
 8011cf2:	4620      	mov	r0, r4
 8011cf4:	b003      	add	sp, #12
 8011cf6:	bd30      	pop	{r4, r5, pc}

08011cf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8011cf8:	b513      	push	{r0, r1, r4, lr}
 8011cfa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011cfe:	3301      	adds	r3, #1
 8011d00:	4604      	mov	r4, r0
 8011d02:	d109      	bne.n	8011d18 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011d04:	4601      	mov	r1, r0
 8011d06:	4668      	mov	r0, sp
 8011d08:	f7ff fe1a 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d0c:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d10:	8423      	strh	r3, [r4, #32]
 8011d12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d16:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011d18:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011d1c:	b002      	add	sp, #8
 8011d1e:	bd10      	pop	{r4, pc}

08011d20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011d20:	b513      	push	{r0, r1, r4, lr}
 8011d22:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8011d26:	3301      	adds	r3, #1
 8011d28:	4604      	mov	r4, r0
 8011d2a:	d109      	bne.n	8011d40 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011d2c:	4601      	mov	r1, r0
 8011d2e:	4668      	mov	r0, sp
 8011d30:	f7ff fe06 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d34:	f8bd 3000 	ldrh.w	r3, [sp]
 8011d38:	8423      	strh	r3, [r4, #32]
 8011d3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011d3e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011d40:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011d44:	b002      	add	sp, #8
 8011d46:	bd10      	pop	{r4, pc}

08011d48 <_ZN8touchgfx6ScreenC1Ev>:
 8011d48:	b570      	push	{r4, r5, r6, lr}
 8011d4a:	4605      	mov	r5, r0
 8011d4c:	4b16      	ldr	r3, [pc, #88]	@ (8011da8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011d4e:	f845 3b04 	str.w	r3, [r5], #4
 8011d52:	2300      	movs	r3, #0
 8011d54:	8103      	strh	r3, [r0, #8]
 8011d56:	8143      	strh	r3, [r0, #10]
 8011d58:	8183      	strh	r3, [r0, #12]
 8011d5a:	81c3      	strh	r3, [r0, #14]
 8011d5c:	8203      	strh	r3, [r0, #16]
 8011d5e:	8243      	strh	r3, [r0, #18]
 8011d60:	8283      	strh	r3, [r0, #20]
 8011d62:	82c3      	strh	r3, [r0, #22]
 8011d64:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011d68:	6203      	str	r3, [r0, #32]
 8011d6a:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011d6c:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011d6e:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8011d72:	4a0e      	ldr	r2, [pc, #56]	@ (8011dac <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011d74:	6343      	str	r3, [r0, #52]	@ 0x34
 8011d76:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8011d7a:	4b0d      	ldr	r3, [pc, #52]	@ (8011db0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8011d7c:	6042      	str	r2, [r0, #4]
 8011d7e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011d82:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011d84:	4a0b      	ldr	r2, [pc, #44]	@ (8011db4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011d86:	4604      	mov	r4, r0
 8011d88:	2101      	movs	r1, #1
 8011d8a:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011d8e:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8011d92:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011d96:	4628      	mov	r0, r5
 8011d98:	4798      	blx	r3
 8011d9a:	6863      	ldr	r3, [r4, #4]
 8011d9c:	4628      	mov	r0, r5
 8011d9e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011da0:	4631      	mov	r1, r6
 8011da2:	4798      	blx	r3
 8011da4:	4620      	mov	r0, r4
 8011da6:	bd70      	pop	{r4, r5, r6, pc}
 8011da8:	080253c8 	.word	0x080253c8
 8011dac:	08024cdc 	.word	0x08024cdc
 8011db0:	20002db2 	.word	0x20002db2
 8011db4:	20002db0 	.word	0x20002db0

08011db8 <_ZN8touchgfx6Screen4drawEv>:
 8011db8:	b507      	push	{r0, r1, r2, lr}
 8011dba:	4b09      	ldr	r3, [pc, #36]	@ (8011de0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8011dbc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011dc0:	4b08      	ldr	r3, [pc, #32]	@ (8011de4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8011dc2:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011dc6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011dca:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011dce:	6803      	ldr	r3, [r0, #0]
 8011dd0:	2100      	movs	r1, #0
 8011dd2:	9100      	str	r1, [sp, #0]
 8011dd4:	689b      	ldr	r3, [r3, #8]
 8011dd6:	4669      	mov	r1, sp
 8011dd8:	4798      	blx	r3
 8011dda:	b003      	add	sp, #12
 8011ddc:	f85d fb04 	ldr.w	pc, [sp], #4
 8011de0:	20002db0 	.word	0x20002db0
 8011de4:	20002db2 	.word	0x20002db2

08011de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8011de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011dec:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8011df0:	2b00      	cmp	r3, #0
 8011df2:	b089      	sub	sp, #36	@ 0x24
 8011df4:	4680      	mov	r8, r0
 8011df6:	460c      	mov	r4, r1
 8011df8:	4615      	mov	r5, r2
 8011dfa:	dd0e      	ble.n	8011e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011dfc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011e00:	2b00      	cmp	r3, #0
 8011e02:	dd0a      	ble.n	8011e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011e04:	4628      	mov	r0, r5
 8011e06:	f7ff ff5b 	bl	8011cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011e0a:	4621      	mov	r1, r4
 8011e0c:	f7fe fba8 	bl	8010560 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011e10:	69eb      	ldr	r3, [r5, #28]
 8011e12:	b928      	cbnz	r0, 8011e20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011e14:	461d      	mov	r5, r3
 8011e16:	2b00      	cmp	r3, #0
 8011e18:	d1f4      	bne.n	8011e04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8011e1a:	b009      	add	sp, #36	@ 0x24
 8011e1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e20:	ae04      	add	r6, sp, #16
 8011e22:	2b00      	cmp	r3, #0
 8011e24:	f000 80b5 	beq.w	8011f92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011e28:	682b      	ldr	r3, [r5, #0]
 8011e2a:	4629      	mov	r1, r5
 8011e2c:	68db      	ldr	r3, [r3, #12]
 8011e2e:	a802      	add	r0, sp, #8
 8011e30:	4798      	blx	r3
 8011e32:	4628      	mov	r0, r5
 8011e34:	f7ff ff60 	bl	8011cf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011e38:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011e3c:	4407      	add	r7, r0
 8011e3e:	4628      	mov	r0, r5
 8011e40:	f7ff ff6e 	bl	8011d20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011e44:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8011e48:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011e4c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011e50:	4418      	add	r0, r3
 8011e52:	4621      	mov	r1, r4
 8011e54:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011e58:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011e5c:	b23f      	sxth	r7, r7
 8011e5e:	4630      	mov	r0, r6
 8011e60:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011e64:	f8ad 7010 	strh.w	r7, [sp, #16]
 8011e68:	f7fb f9da 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8011e6c:	4628      	mov	r0, r5
 8011e6e:	f7ff ff27 	bl	8011cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011e72:	4602      	mov	r2, r0
 8011e74:	e896 0003 	ldmia.w	r6, {r0, r1}
 8011e78:	ab06      	add	r3, sp, #24
 8011e7a:	e883 0003 	stmia.w	r3, {r0, r1}
 8011e7e:	4611      	mov	r1, r2
 8011e80:	4618      	mov	r0, r3
 8011e82:	f7fb f9cd 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8011e86:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011e8a:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011e8e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011e92:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8011e96:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8011e9a:	4299      	cmp	r1, r3
 8011e9c:	d10b      	bne.n	8011eb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011e9e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011ea2:	4552      	cmp	r2, sl
 8011ea4:	d107      	bne.n	8011eb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011ea6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8011eaa:	455a      	cmp	r2, fp
 8011eac:	d103      	bne.n	8011eb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8011eae:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8011eb2:	454a      	cmp	r2, r9
 8011eb4:	d06d      	beq.n	8011f92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011eb6:	f1bb 0f00 	cmp.w	fp, #0
 8011eba:	dd65      	ble.n	8011f88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011ebc:	f1b9 0f00 	cmp.w	r9, #0
 8011ec0:	dd62      	ble.n	8011f88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8011ec2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011ec6:	fa1f f08a 	uxth.w	r0, sl
 8011eca:	4552      	cmp	r2, sl
 8011ecc:	9000      	str	r0, [sp, #0]
 8011ece:	da12      	bge.n	8011ef6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8011ed0:	9301      	str	r3, [sp, #4]
 8011ed2:	9b00      	ldr	r3, [sp, #0]
 8011ed4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011ed8:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011edc:	1a9a      	subs	r2, r3, r2
 8011ede:	f8ad 1010 	strh.w	r1, [sp, #16]
 8011ee2:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011ee6:	f8ad 2016 	strh.w	r2, [sp, #22]
 8011eea:	69ea      	ldr	r2, [r5, #28]
 8011eec:	4631      	mov	r1, r6
 8011eee:	4640      	mov	r0, r8
 8011ef0:	f7ff ff7a 	bl	8011de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011ef4:	9b01      	ldr	r3, [sp, #4]
 8011ef6:	f9b4 2000 	ldrsh.w	r2, [r4]
 8011efa:	429a      	cmp	r2, r3
 8011efc:	b29f      	uxth	r7, r3
 8011efe:	da0d      	bge.n	8011f1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011f00:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011f04:	1aba      	subs	r2, r7, r2
 8011f06:	f8ad a012 	strh.w	sl, [sp, #18]
 8011f0a:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011f0e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011f12:	69ea      	ldr	r2, [r5, #28]
 8011f14:	4631      	mov	r1, r6
 8011f16:	4640      	mov	r0, r8
 8011f18:	f7ff ff66 	bl	8011de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f1c:	8822      	ldrh	r2, [r4, #0]
 8011f1e:	88a3      	ldrh	r3, [r4, #4]
 8011f20:	445f      	add	r7, fp
 8011f22:	4413      	add	r3, r2
 8011f24:	b29b      	uxth	r3, r3
 8011f26:	b2bf      	uxth	r7, r7
 8011f28:	b23a      	sxth	r2, r7
 8011f2a:	b219      	sxth	r1, r3
 8011f2c:	4291      	cmp	r1, r2
 8011f2e:	dd0d      	ble.n	8011f4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011f30:	1bdb      	subs	r3, r3, r7
 8011f32:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011f36:	f8ad a012 	strh.w	sl, [sp, #18]
 8011f3a:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011f3e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8011f42:	69ea      	ldr	r2, [r5, #28]
 8011f44:	4631      	mov	r1, r6
 8011f46:	4640      	mov	r0, r8
 8011f48:	f7ff ff4e 	bl	8011de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f4c:	88e2      	ldrh	r2, [r4, #6]
 8011f4e:	8863      	ldrh	r3, [r4, #2]
 8011f50:	4413      	add	r3, r2
 8011f52:	9a00      	ldr	r2, [sp, #0]
 8011f54:	444a      	add	r2, r9
 8011f56:	b29b      	uxth	r3, r3
 8011f58:	fa1f f982 	uxth.w	r9, r2
 8011f5c:	fa0f f289 	sxth.w	r2, r9
 8011f60:	b219      	sxth	r1, r3
 8011f62:	428a      	cmp	r2, r1
 8011f64:	da15      	bge.n	8011f92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8011f66:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011f6a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011f6e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8011f72:	eba3 0309 	sub.w	r3, r3, r9
 8011f76:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011f7a:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011f7e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011f82:	69ea      	ldr	r2, [r5, #28]
 8011f84:	4631      	mov	r1, r6
 8011f86:	e001      	b.n	8011f8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8011f88:	69ea      	ldr	r2, [r5, #28]
 8011f8a:	4621      	mov	r1, r4
 8011f8c:	4640      	mov	r0, r8
 8011f8e:	f7ff ff2b 	bl	8011de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011f92:	4628      	mov	r0, r5
 8011f94:	f7ff fe94 	bl	8011cc0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011f98:	6861      	ldr	r1, [r4, #4]
 8011f9a:	4602      	mov	r2, r0
 8011f9c:	6820      	ldr	r0, [r4, #0]
 8011f9e:	4633      	mov	r3, r6
 8011fa0:	c303      	stmia	r3!, {r0, r1}
 8011fa2:	4611      	mov	r1, r2
 8011fa4:	4630      	mov	r0, r6
 8011fa6:	f7fb f93b 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8011faa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8011fae:	2b00      	cmp	r3, #0
 8011fb0:	f77f af33 	ble.w	8011e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011fb4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011fb8:	2b00      	cmp	r3, #0
 8011fba:	f77f af2e 	ble.w	8011e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011fbe:	4628      	mov	r0, r5
 8011fc0:	f7ff fe9a 	bl	8011cf8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8011fc4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8011fc8:	1a18      	subs	r0, r3, r0
 8011fca:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011fce:	4628      	mov	r0, r5
 8011fd0:	f7ff fea6 	bl	8011d20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011fd4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011fd8:	1a18      	subs	r0, r3, r0
 8011fda:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011fde:	682b      	ldr	r3, [r5, #0]
 8011fe0:	4631      	mov	r1, r6
 8011fe2:	689b      	ldr	r3, [r3, #8]
 8011fe4:	4628      	mov	r0, r5
 8011fe6:	4798      	blx	r3
 8011fe8:	e717      	b.n	8011e1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08011fea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8011fea:	b570      	push	{r4, r5, r6, lr}
 8011fec:	460c      	mov	r4, r1
 8011fee:	b086      	sub	sp, #24
 8011ff0:	1d06      	adds	r6, r0, #4
 8011ff2:	2300      	movs	r3, #0
 8011ff4:	4631      	mov	r1, r6
 8011ff6:	4605      	mov	r5, r0
 8011ff8:	a802      	add	r0, sp, #8
 8011ffa:	9301      	str	r3, [sp, #4]
 8011ffc:	f7ff fca0 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012000:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012004:	8822      	ldrh	r2, [r4, #0]
 8012006:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801200a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801200e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012012:	1ad2      	subs	r2, r2, r3
 8012014:	8863      	ldrh	r3, [r4, #2]
 8012016:	f8ad 2010 	strh.w	r2, [sp, #16]
 801201a:	1a5b      	subs	r3, r3, r1
 801201c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012020:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012024:	aa01      	add	r2, sp, #4
 8012026:	a904      	add	r1, sp, #16
 8012028:	4630      	mov	r0, r6
 801202a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801202e:	f7fb f9cf 	bl	800d3d0 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012032:	9a01      	ldr	r2, [sp, #4]
 8012034:	b11a      	cbz	r2, 801203e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012036:	4621      	mov	r1, r4
 8012038:	4628      	mov	r0, r5
 801203a:	f7ff fed5 	bl	8011de8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801203e:	b006      	add	sp, #24
 8012040:	bd70      	pop	{r4, r5, r6, pc}

08012042 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012042:	b530      	push	{r4, r5, lr}
 8012044:	4602      	mov	r2, r0
 8012046:	4604      	mov	r4, r0
 8012048:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801204c:	b085      	sub	sp, #20
 801204e:	460d      	mov	r5, r1
 8012050:	6851      	ldr	r1, [r2, #4]
 8012052:	466b      	mov	r3, sp
 8012054:	c303      	stmia	r3!, {r0, r1}
 8012056:	4629      	mov	r1, r5
 8012058:	4668      	mov	r0, sp
 801205a:	f7fb f8e1 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 801205e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8012062:	b12b      	cbz	r3, 8012070 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012064:	4669      	mov	r1, sp
 8012066:	4620      	mov	r0, r4
 8012068:	f7ff ffbf 	bl	8011fea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801206c:	b005      	add	sp, #20
 801206e:	bd30      	pop	{r4, r5, pc}
 8012070:	3404      	adds	r4, #4
 8012072:	4621      	mov	r1, r4
 8012074:	a802      	add	r0, sp, #8
 8012076:	f7ff fc63 	bl	8011940 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801207a:	f8bd 3000 	ldrh.w	r3, [sp]
 801207e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8012082:	1a9b      	subs	r3, r3, r2
 8012084:	f8ad 3000 	strh.w	r3, [sp]
 8012088:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801208c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012090:	4669      	mov	r1, sp
 8012092:	1a9b      	subs	r3, r3, r2
 8012094:	4620      	mov	r0, r4
 8012096:	f8ad 3002 	strh.w	r3, [sp, #2]
 801209a:	f7fb f960 	bl	800d35e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801209e:	e7e5      	b.n	801206c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080120a0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80120a0:	680a      	ldr	r2, [r1, #0]
 80120a2:	460b      	mov	r3, r1
 80120a4:	6992      	ldr	r2, [r2, #24]
 80120a6:	1d01      	adds	r1, r0, #4
 80120a8:	4618      	mov	r0, r3
 80120aa:	4710      	bx	r2

080120ac <_ZN8touchgfx12TextProviderC1Ev>:
 80120ac:	b538      	push	{r3, r4, r5, lr}
 80120ae:	2500      	movs	r5, #0
 80120b0:	2302      	movs	r3, #2
 80120b2:	4604      	mov	r4, r0
 80120b4:	e9c0 5500 	strd	r5, r5, [r0]
 80120b8:	7403      	strb	r3, [r0, #16]
 80120ba:	6145      	str	r5, [r0, #20]
 80120bc:	7605      	strb	r5, [r0, #24]
 80120be:	83c5      	strh	r5, [r0, #30]
 80120c0:	8405      	strh	r5, [r0, #32]
 80120c2:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80120c4:	8705      	strh	r5, [r0, #56]	@ 0x38
 80120c6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80120c8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80120cc:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80120d0:	220e      	movs	r2, #14
 80120d2:	4629      	mov	r1, r5
 80120d4:	304c      	adds	r0, #76	@ 0x4c
 80120d6:	f010 fb2e 	bl	8022736 <memset>
 80120da:	2301      	movs	r3, #1
 80120dc:	4620      	mov	r0, r4
 80120de:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 80120e2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80120e6:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 80120ea:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 80120ee:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 80120f2:	f7f8 fb3b 	bl	800a76c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80120f6:	4620      	mov	r0, r4
 80120f8:	bd38      	pop	{r3, r4, r5, pc}

080120fa <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80120fa:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80120fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012100:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8012102:	fab0 f080 	clz	r0, r0
 8012106:	0940      	lsrs	r0, r0, #5
 8012108:	4770      	bx	lr

0801210a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801210a:	b530      	push	{r4, r5, lr}
 801210c:	2500      	movs	r5, #0
 801210e:	2401      	movs	r4, #1
 8012110:	6843      	ldr	r3, [r0, #4]
 8012112:	b913      	cbnz	r3, 801211a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012114:	6803      	ldr	r3, [r0, #0]
 8012116:	b313      	cbz	r3, 801215e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012118:	6043      	str	r3, [r0, #4]
 801211a:	7e03      	ldrb	r3, [r0, #24]
 801211c:	b143      	cbz	r3, 8012130 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801211e:	6943      	ldr	r3, [r0, #20]
 8012120:	b12b      	cbz	r3, 801212e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012122:	881a      	ldrh	r2, [r3, #0]
 8012124:	b11a      	cbz	r2, 801212e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012126:	1c9a      	adds	r2, r3, #2
 8012128:	6142      	str	r2, [r0, #20]
 801212a:	8818      	ldrh	r0, [r3, #0]
 801212c:	bd30      	pop	{r4, r5, pc}
 801212e:	7605      	strb	r5, [r0, #24]
 8012130:	6843      	ldr	r3, [r0, #4]
 8012132:	8819      	ldrh	r1, [r3, #0]
 8012134:	b199      	cbz	r1, 801215e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012136:	1c9a      	adds	r2, r3, #2
 8012138:	2902      	cmp	r1, #2
 801213a:	6042      	str	r2, [r0, #4]
 801213c:	d1f5      	bne.n	801212a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801213e:	7c03      	ldrb	r3, [r0, #16]
 8012140:	2b01      	cmp	r3, #1
 8012142:	d8e5      	bhi.n	8012110 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012144:	1c5a      	adds	r2, r3, #1
 8012146:	3302      	adds	r3, #2
 8012148:	7402      	strb	r2, [r0, #16]
 801214a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801214e:	6143      	str	r3, [r0, #20]
 8012150:	2b00      	cmp	r3, #0
 8012152:	d0dd      	beq.n	8012110 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012154:	881b      	ldrh	r3, [r3, #0]
 8012156:	2b00      	cmp	r3, #0
 8012158:	d0da      	beq.n	8012110 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801215a:	7604      	strb	r4, [r0, #24]
 801215c:	e7d8      	b.n	8012110 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801215e:	2000      	movs	r0, #0
 8012160:	e7e4      	b.n	801212c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012162:	b430      	push	{r4, r5}
 8012164:	6001      	str	r1, [r0, #0]
 8012166:	2100      	movs	r1, #0
 8012168:	6041      	str	r1, [r0, #4]
 801216a:	6815      	ldr	r5, [r2, #0]
 801216c:	6085      	str	r5, [r0, #8]
 801216e:	6852      	ldr	r2, [r2, #4]
 8012170:	6443      	str	r3, [r0, #68]	@ 0x44
 8012172:	9b02      	ldr	r3, [sp, #8]
 8012174:	60c2      	str	r2, [r0, #12]
 8012176:	7401      	strb	r1, [r0, #16]
 8012178:	6141      	str	r1, [r0, #20]
 801217a:	7601      	strb	r1, [r0, #24]
 801217c:	8701      	strh	r1, [r0, #56]	@ 0x38
 801217e:	8401      	strh	r1, [r0, #32]
 8012180:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8012184:	6483      	str	r3, [r0, #72]	@ 0x48
 8012186:	bc30      	pop	{r4, r5}
 8012188:	f7f8 baf0 	b.w	800a76c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801218c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801218c:	b408      	push	{r3}
 801218e:	b510      	push	{r4, lr}
 8012190:	b085      	sub	sp, #20
 8012192:	ac07      	add	r4, sp, #28
 8012194:	f854 3b04 	ldr.w	r3, [r4], #4
 8012198:	9300      	str	r3, [sp, #0]
 801219a:	4613      	mov	r3, r2
 801219c:	4622      	mov	r2, r4
 801219e:	9403      	str	r4, [sp, #12]
 80121a0:	f7ff ffdf 	bl	8012162 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80121a4:	b005      	add	sp, #20
 80121a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121aa:	b001      	add	sp, #4
 80121ac:	4770      	bx	lr

080121ae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80121ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80121b0:	4605      	mov	r5, r0
 80121b2:	4608      	mov	r0, r1
 80121b4:	b1e9      	cbz	r1, 80121f2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80121b6:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80121ba:	460b      	mov	r3, r1
 80121bc:	f101 0708 	add.w	r7, r1, #8
 80121c0:	4622      	mov	r2, r4
 80121c2:	6818      	ldr	r0, [r3, #0]
 80121c4:	6859      	ldr	r1, [r3, #4]
 80121c6:	4626      	mov	r6, r4
 80121c8:	c603      	stmia	r6!, {r0, r1}
 80121ca:	3308      	adds	r3, #8
 80121cc:	42bb      	cmp	r3, r7
 80121ce:	4634      	mov	r4, r6
 80121d0:	d1f7      	bne.n	80121c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80121d2:	6818      	ldr	r0, [r3, #0]
 80121d4:	6030      	str	r0, [r6, #0]
 80121d6:	889b      	ldrh	r3, [r3, #4]
 80121d8:	80b3      	strh	r3, [r6, #4]
 80121da:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80121de:	015b      	lsls	r3, r3, #5
 80121e0:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80121e4:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 80121e8:	430b      	orrs	r3, r1
 80121ea:	425b      	negs	r3, r3
 80121ec:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80121f0:	4610      	mov	r0, r2
 80121f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080121f4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80121f4:	b538      	push	{r3, r4, r5, lr}
 80121f6:	460c      	mov	r4, r1
 80121f8:	6811      	ldr	r1, [r2, #0]
 80121fa:	4610      	mov	r0, r2
 80121fc:	68cd      	ldr	r5, [r1, #12]
 80121fe:	4619      	mov	r1, r3
 8012200:	47a8      	blx	r5
 8012202:	2800      	cmp	r0, #0
 8012204:	bf08      	it	eq
 8012206:	4620      	moveq	r0, r4
 8012208:	bd38      	pop	{r3, r4, r5, pc}
	...

0801220c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801220c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012210:	468c      	mov	ip, r1
 8012212:	4605      	mov	r5, r0
 8012214:	4614      	mov	r4, r2
 8012216:	b942      	cbnz	r2, 801222a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8012218:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 801221c:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8012220:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8012224:	4620      	mov	r0, r4
 8012226:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801222a:	7b50      	ldrb	r0, [r2, #13]
 801222c:	8893      	ldrh	r3, [r2, #4]
 801222e:	0106      	lsls	r6, r0, #4
 8012230:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012234:	79e6      	ldrb	r6, [r4, #7]
 8012236:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801223a:	4316      	orrs	r6, r2
 801223c:	185a      	adds	r2, r3, r1
 801223e:	b291      	uxth	r1, r2
 8012240:	291d      	cmp	r1, #29
 8012242:	b2b7      	uxth	r7, r6
 8012244:	d87e      	bhi.n	8012344 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8012246:	2201      	movs	r2, #1
 8012248:	408a      	lsls	r2, r1
 801224a:	498a      	ldr	r1, [pc, #552]	@ (8012474 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 801224c:	420a      	tst	r2, r1
 801224e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012252:	d12d      	bne.n	80122b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012254:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8012258:	d074      	beq.n	8012344 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 801225a:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 801225e:	4623      	mov	r3, r4
 8012260:	f104 0e08 	add.w	lr, r4, #8
 8012264:	4614      	mov	r4, r2
 8012266:	6818      	ldr	r0, [r3, #0]
 8012268:	6859      	ldr	r1, [r3, #4]
 801226a:	4694      	mov	ip, r2
 801226c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012270:	3308      	adds	r3, #8
 8012272:	4573      	cmp	r3, lr
 8012274:	4662      	mov	r2, ip
 8012276:	d1f6      	bne.n	8012266 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012278:	6818      	ldr	r0, [r3, #0]
 801227a:	f8cc 0000 	str.w	r0, [ip]
 801227e:	889b      	ldrh	r3, [r3, #4]
 8012280:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012284:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8012288:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 801228c:	b2b3      	uxth	r3, r6
 801228e:	1aca      	subs	r2, r1, r3
 8012290:	b292      	uxth	r2, r2
 8012292:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8012296:	10d2      	asrs	r2, r2, #3
 8012298:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 801229c:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80122a0:	4302      	orrs	r2, r0
 80122a2:	1bcf      	subs	r7, r1, r7
 80122a4:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80122a8:	1afb      	subs	r3, r7, r3
 80122aa:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80122ae:	e7b9      	b.n	8012224 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80122b0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80122b4:	4623      	mov	r3, r4
 80122b6:	f104 0808 	add.w	r8, r4, #8
 80122ba:	4614      	mov	r4, r2
 80122bc:	6818      	ldr	r0, [r3, #0]
 80122be:	6859      	ldr	r1, [r3, #4]
 80122c0:	4696      	mov	lr, r2
 80122c2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80122c6:	3308      	adds	r3, #8
 80122c8:	4543      	cmp	r3, r8
 80122ca:	4672      	mov	r2, lr
 80122cc:	d1f6      	bne.n	80122bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80122ce:	6818      	ldr	r0, [r3, #0]
 80122d0:	f8ce 0000 	str.w	r0, [lr]
 80122d4:	889b      	ldrh	r3, [r3, #4]
 80122d6:	f8ae 3004 	strh.w	r3, [lr, #4]
 80122da:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 80122dc:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80122e0:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 80122e2:	f640 6333 	movw	r3, #3635	@ 0xe33
 80122e6:	4299      	cmp	r1, r3
 80122e8:	d111      	bne.n	801230e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 80122ea:	f8dc 3000 	ldr.w	r3, [ip]
 80122ee:	4660      	mov	r0, ip
 80122f0:	68db      	ldr	r3, [r3, #12]
 80122f2:	4798      	blx	r3
 80122f4:	7b41      	ldrb	r1, [r0, #13]
 80122f6:	00cb      	lsls	r3, r1, #3
 80122f8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80122fc:	7a03      	ldrb	r3, [r0, #8]
 80122fe:	4313      	orrs	r3, r2
 8012300:	064a      	lsls	r2, r1, #25
 8012302:	bf44      	itt	mi
 8012304:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012308:	b21b      	sxthmi	r3, r3
 801230a:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801230e:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8012312:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8012316:	443b      	add	r3, r7
 8012318:	4433      	add	r3, r6
 801231a:	b29b      	uxth	r3, r3
 801231c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8012320:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8012324:	10db      	asrs	r3, r3, #3
 8012326:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801232a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801232e:	4313      	orrs	r3, r2
 8012330:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8012334:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8012338:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 801233c:	1a9b      	subs	r3, r3, r2
 801233e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8012342:	e76f      	b.n	8012224 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8012344:	f023 0204 	bic.w	r2, r3, #4
 8012348:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801234c:	428a      	cmp	r2, r1
 801234e:	d003      	beq.n	8012358 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8012350:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8012354:	4293      	cmp	r3, r2
 8012356:	d137      	bne.n	80123c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8012358:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 801235c:	4622      	mov	r2, r4
 801235e:	f104 0808 	add.w	r8, r4, #8
 8012362:	4634      	mov	r4, r6
 8012364:	6810      	ldr	r0, [r2, #0]
 8012366:	6851      	ldr	r1, [r2, #4]
 8012368:	46b6      	mov	lr, r6
 801236a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801236e:	3208      	adds	r2, #8
 8012370:	4542      	cmp	r2, r8
 8012372:	4676      	mov	r6, lr
 8012374:	d1f6      	bne.n	8012364 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8012376:	6810      	ldr	r0, [r2, #0]
 8012378:	f8ce 0000 	str.w	r0, [lr]
 801237c:	8892      	ldrh	r2, [r2, #4]
 801237e:	f8ae 2004 	strh.w	r2, [lr, #4]
 8012382:	3b01      	subs	r3, #1
 8012384:	b29b      	uxth	r3, r3
 8012386:	4662      	mov	r2, ip
 8012388:	4621      	mov	r1, r4
 801238a:	4628      	mov	r0, r5
 801238c:	f7ff ff32 	bl	80121f4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012390:	7b41      	ldrb	r1, [r0, #13]
 8012392:	00cb      	lsls	r3, r1, #3
 8012394:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8012398:	7a03      	ldrb	r3, [r0, #8]
 801239a:	0648      	lsls	r0, r1, #25
 801239c:	ea43 0302 	orr.w	r3, r3, r2
 80123a0:	bf44      	itt	mi
 80123a2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80123a6:	b21b      	sxthmi	r3, r3
 80123a8:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80123ac:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80123b0:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80123b4:	005b      	lsls	r3, r3, #1
 80123b6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80123ba:	4313      	orrs	r3, r2
 80123bc:	115a      	asrs	r2, r3, #5
 80123be:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80123c2:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80123c6:	e046      	b.n	8012456 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 80123c8:	00c2      	lsls	r2, r0, #3
 80123ca:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80123ce:	7a22      	ldrb	r2, [r4, #8]
 80123d0:	430a      	orrs	r2, r1
 80123d2:	0641      	lsls	r1, r0, #25
 80123d4:	bf44      	itt	mi
 80123d6:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80123da:	b212      	sxthmi	r2, r2
 80123dc:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80123e0:	f640 6109 	movw	r1, #3593	@ 0xe09
 80123e4:	f023 0210 	bic.w	r2, r3, #16
 80123e8:	428a      	cmp	r2, r1
 80123ea:	d003      	beq.n	80123f4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 80123ec:	f640 6213 	movw	r2, #3603	@ 0xe13
 80123f0:	4293      	cmp	r3, r2
 80123f2:	d13d      	bne.n	8012470 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 80123f4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80123f8:	f104 0808 	add.w	r8, r4, #8
 80123fc:	4696      	mov	lr, r2
 80123fe:	6820      	ldr	r0, [r4, #0]
 8012400:	6861      	ldr	r1, [r4, #4]
 8012402:	4616      	mov	r6, r2
 8012404:	c603      	stmia	r6!, {r0, r1}
 8012406:	3408      	adds	r4, #8
 8012408:	4544      	cmp	r4, r8
 801240a:	4632      	mov	r2, r6
 801240c:	d1f7      	bne.n	80123fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 801240e:	6820      	ldr	r0, [r4, #0]
 8012410:	6030      	str	r0, [r6, #0]
 8012412:	88a1      	ldrh	r1, [r4, #4]
 8012414:	80b1      	strh	r1, [r6, #4]
 8012416:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 801241a:	0076      	lsls	r6, r6, #1
 801241c:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8012420:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8012424:	4316      	orrs	r6, r2
 8012426:	f640 6213 	movw	r2, #3603	@ 0xe13
 801242a:	4293      	cmp	r3, r2
 801242c:	bf1a      	itte	ne
 801242e:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012432:	b29b      	uxthne	r3, r3
 8012434:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8012438:	4662      	mov	r2, ip
 801243a:	4671      	mov	r1, lr
 801243c:	4628      	mov	r0, r5
 801243e:	4674      	mov	r4, lr
 8012440:	f7ff fed8 	bl	80121f4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012444:	7b43      	ldrb	r3, [r0, #13]
 8012446:	7a82      	ldrb	r2, [r0, #10]
 8012448:	005b      	lsls	r3, r3, #1
 801244a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801244e:	4313      	orrs	r3, r2
 8012450:	1af6      	subs	r6, r6, r3
 8012452:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8012456:	7b61      	ldrb	r1, [r4, #13]
 8012458:	00cb      	lsls	r3, r1, #3
 801245a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801245e:	7a23      	ldrb	r3, [r4, #8]
 8012460:	4313      	orrs	r3, r2
 8012462:	064a      	lsls	r2, r1, #25
 8012464:	bf44      	itt	mi
 8012466:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801246a:	b21b      	sxthmi	r3, r3
 801246c:	1bdb      	subs	r3, r3, r7
 801246e:	e71c      	b.n	80122aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012470:	2300      	movs	r3, #0
 8012472:	e7a6      	b.n	80123c2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8012474:	3fc00079 	.word	0x3fc00079

08012478 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012478:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801247c:	4604      	mov	r4, r0
 801247e:	b942      	cbnz	r2, 8012492 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012480:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012484:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8012488:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 801248c:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8012490:	e047      	b.n	8012522 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012492:	7b51      	ldrb	r1, [r2, #13]
 8012494:	8893      	ldrh	r3, [r2, #4]
 8012496:	010d      	lsls	r5, r1, #4
 8012498:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 801249c:	79d5      	ldrb	r5, [r2, #7]
 801249e:	4305      	orrs	r5, r0
 80124a0:	2d04      	cmp	r5, #4
 80124a2:	bfcc      	ite	gt
 80124a4:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80124a8:	f04f 0e01 	movle.w	lr, #1
 80124ac:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80124b0:	f200 80ab 	bhi.w	801260a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80124b4:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80124b8:	4283      	cmp	r3, r0
 80124ba:	d216      	bcs.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80124bc:	f240 605b 	movw	r0, #1627	@ 0x65b
 80124c0:	4283      	cmp	r3, r0
 80124c2:	d859      	bhi.n	8012578 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80124c4:	f240 6057 	movw	r0, #1623	@ 0x657
 80124c8:	4283      	cmp	r3, r0
 80124ca:	d20e      	bcs.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80124cc:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80124d0:	d24a      	bcs.n	8012568 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80124d2:	f240 604e 	movw	r0, #1614	@ 0x64e
 80124d6:	4283      	cmp	r3, r0
 80124d8:	d207      	bcs.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80124da:	f240 601a 	movw	r0, #1562	@ 0x61a
 80124de:	4283      	cmp	r3, r0
 80124e0:	d02a      	beq.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80124e2:	d821      	bhi.n	8012528 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80124e4:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80124e8:	d35b      	bcc.n	80125a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80124ea:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 80124ee:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80124f2:	f040 80d0 	bne.w	8012696 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80124f6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 80124fa:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80124fe:	f040 80ca 	bne.w	8012696 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012502:	00cb      	lsls	r3, r1, #3
 8012504:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012508:	7a13      	ldrb	r3, [r2, #8]
 801250a:	0649      	lsls	r1, r1, #25
 801250c:	ea43 0300 	orr.w	r3, r3, r0
 8012510:	bf44      	itt	mi
 8012512:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012516:	b21b      	sxthmi	r3, r3
 8012518:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801251c:	1b5d      	subs	r5, r3, r5
 801251e:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8012522:	4610      	mov	r0, r2
 8012524:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012528:	f240 604b 	movw	r0, #1611	@ 0x64b
 801252c:	4283      	cmp	r3, r0
 801252e:	d338      	bcc.n	80125a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012530:	f240 604c 	movw	r0, #1612	@ 0x64c
 8012534:	4283      	cmp	r3, r0
 8012536:	d9d8      	bls.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012538:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 801253c:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8012540:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8012544:	f040 80f2 	bne.w	801272c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012548:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801254c:	f040 80ee 	bne.w	801272c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012550:	00cb      	lsls	r3, r1, #3
 8012552:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8012556:	7a13      	ldrb	r3, [r2, #8]
 8012558:	064e      	lsls	r6, r1, #25
 801255a:	ea43 0300 	orr.w	r3, r3, r0
 801255e:	bf44      	itt	mi
 8012560:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8012564:	b21b      	sxthmi	r3, r3
 8012566:	e7d9      	b.n	801251c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012568:	f240 6054 	movw	r0, #1620	@ 0x654
 801256c:	4283      	cmp	r3, r0
 801256e:	d8e3      	bhi.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012570:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8012574:	d9e0      	bls.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012576:	e7b8      	b.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012578:	f240 6074 	movw	r0, #1652	@ 0x674
 801257c:	4283      	cmp	r3, r0
 801257e:	d0b4      	beq.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012580:	d82d      	bhi.n	80125de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012582:	f240 605e 	movw	r0, #1630	@ 0x65e
 8012586:	4283      	cmp	r3, r0
 8012588:	d804      	bhi.n	8012594 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 801258a:	f240 605d 	movw	r0, #1629	@ 0x65d
 801258e:	4283      	cmp	r3, r0
 8012590:	d3d2      	bcc.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012592:	e7aa      	b.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012594:	f240 605f 	movw	r0, #1631	@ 0x65f
 8012598:	4283      	cmp	r3, r0
 801259a:	d0cd      	beq.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801259c:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80125a0:	d0a3      	beq.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80125a2:	00cb      	lsls	r3, r1, #3
 80125a4:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80125a8:	7a13      	ldrb	r3, [r2, #8]
 80125aa:	0649      	lsls	r1, r1, #25
 80125ac:	ea43 0300 	orr.w	r3, r3, r0
 80125b0:	bf44      	itt	mi
 80125b2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80125b6:	b21b      	sxthmi	r3, r3
 80125b8:	1b5d      	subs	r5, r3, r5
 80125ba:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80125be:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80125c2:	7b53      	ldrb	r3, [r2, #13]
 80125c4:	015b      	lsls	r3, r3, #5
 80125c6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80125ca:	7993      	ldrb	r3, [r2, #6]
 80125cc:	430b      	orrs	r3, r1
 80125ce:	005b      	lsls	r3, r3, #1
 80125d0:	2105      	movs	r1, #5
 80125d2:	fb93 f3f1 	sdiv	r3, r3, r1
 80125d6:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80125da:	440b      	add	r3, r1
 80125dc:	e756      	b.n	801248c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80125de:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80125e2:	4283      	cmp	r3, r0
 80125e4:	d809      	bhi.n	80125fa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80125e6:	f240 60df 	movw	r0, #1759	@ 0x6df
 80125ea:	4283      	cmp	r3, r0
 80125ec:	f4bf af7d 	bcs.w	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80125f0:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 80125f4:	2b05      	cmp	r3, #5
 80125f6:	d8d4      	bhi.n	80125a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80125f8:	e777      	b.n	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80125fa:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 80125fe:	4283      	cmp	r3, r0
 8012600:	d09a      	beq.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012602:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8012606:	4283      	cmp	r3, r0
 8012608:	e7ca      	b.n	80125a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801260a:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 801260e:	d22b      	bcs.n	8012668 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012610:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8012614:	4283      	cmp	r3, r0
 8012616:	d28f      	bcs.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012618:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 801261c:	4283      	cmp	r3, r0
 801261e:	d816      	bhi.n	801264e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012620:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8012624:	4283      	cmp	r3, r0
 8012626:	f4bf af60 	bcs.w	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801262a:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 801262e:	4283      	cmp	r3, r0
 8012630:	d80a      	bhi.n	8012648 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012632:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8012636:	4283      	cmp	r3, r0
 8012638:	f4bf af57 	bcs.w	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801263c:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8012640:	4283      	cmp	r3, r0
 8012642:	f43f af79 	beq.w	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012646:	e7ac      	b.n	80125a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012648:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 801264c:	e7f8      	b.n	8012640 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801264e:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8012652:	4283      	cmp	r3, r0
 8012654:	d802      	bhi.n	801265c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012656:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801265a:	e798      	b.n	801258e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 801265c:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8012660:	4283      	cmp	r3, r0
 8012662:	f47f af42 	bne.w	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012666:	e767      	b.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012668:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 801266c:	4283      	cmp	r3, r0
 801266e:	f43f af63 	beq.w	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012672:	d802      	bhi.n	801267a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012674:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8012678:	e7f2      	b.n	8012660 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801267a:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801267e:	4283      	cmp	r3, r0
 8012680:	d805      	bhi.n	801268e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012682:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8012686:	4283      	cmp	r3, r0
 8012688:	f4ff af2f 	bcc.w	80124ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801268c:	e754      	b.n	8012538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801268e:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8012692:	4283      	cmp	r3, r0
 8012694:	e7af      	b.n	80125f6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012696:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801269a:	4617      	mov	r7, r2
 801269c:	f102 0808 	add.w	r8, r2, #8
 80126a0:	4666      	mov	r6, ip
 80126a2:	6838      	ldr	r0, [r7, #0]
 80126a4:	6879      	ldr	r1, [r7, #4]
 80126a6:	46e6      	mov	lr, ip
 80126a8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80126ac:	3708      	adds	r7, #8
 80126ae:	4547      	cmp	r7, r8
 80126b0:	46f4      	mov	ip, lr
 80126b2:	d1f6      	bne.n	80126a2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80126b4:	6838      	ldr	r0, [r7, #0]
 80126b6:	f8ce 0000 	str.w	r0, [lr]
 80126ba:	88b9      	ldrh	r1, [r7, #4]
 80126bc:	f8ae 1004 	strh.w	r1, [lr, #4]
 80126c0:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80126c4:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80126c8:	d009      	beq.n	80126de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80126ca:	7b51      	ldrb	r1, [r2, #13]
 80126cc:	7992      	ldrb	r2, [r2, #6]
 80126ce:	0149      	lsls	r1, r1, #5
 80126d0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80126d4:	4311      	orrs	r1, r2
 80126d6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80126da:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80126de:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80126e2:	b2ad      	uxth	r5, r5
 80126e4:	d00d      	beq.n	8012702 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80126e6:	442b      	add	r3, r5
 80126e8:	b29b      	uxth	r3, r3
 80126ea:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80126ee:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80126f2:	10db      	asrs	r3, r3, #3
 80126f4:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80126f8:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80126fc:	4313      	orrs	r3, r2
 80126fe:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012702:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8012706:	00cb      	lsls	r3, r1, #3
 8012708:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801270c:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8012710:	064f      	lsls	r7, r1, #25
 8012712:	ea43 0302 	orr.w	r3, r3, r2
 8012716:	bf44      	itt	mi
 8012718:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801271c:	b21b      	sxthmi	r3, r3
 801271e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8012722:	1b5b      	subs	r3, r3, r5
 8012724:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8012728:	4632      	mov	r2, r6
 801272a:	e6fa      	b.n	8012522 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801272c:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8012730:	4617      	mov	r7, r2
 8012732:	f102 0908 	add.w	r9, r2, #8
 8012736:	4666      	mov	r6, ip
 8012738:	6838      	ldr	r0, [r7, #0]
 801273a:	6879      	ldr	r1, [r7, #4]
 801273c:	46e0      	mov	r8, ip
 801273e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8012742:	3708      	adds	r7, #8
 8012744:	454f      	cmp	r7, r9
 8012746:	46c4      	mov	ip, r8
 8012748:	d1f6      	bne.n	8012738 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801274a:	6838      	ldr	r0, [r7, #0]
 801274c:	f8c8 0000 	str.w	r0, [r8]
 8012750:	88b9      	ldrh	r1, [r7, #4]
 8012752:	f8a8 1004 	strh.w	r1, [r8, #4]
 8012756:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801275a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801275e:	d009      	beq.n	8012774 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8012760:	7b51      	ldrb	r1, [r2, #13]
 8012762:	7992      	ldrb	r2, [r2, #6]
 8012764:	0149      	lsls	r1, r1, #5
 8012766:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801276a:	4311      	orrs	r1, r2
 801276c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8012770:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8012774:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8012778:	d00e      	beq.n	8012798 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801277a:	eba3 030e 	sub.w	r3, r3, lr
 801277e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8012782:	b29b      	uxth	r3, r3
 8012784:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8012788:	10db      	asrs	r3, r3, #3
 801278a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801278e:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8012792:	4313      	orrs	r3, r2
 8012794:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8012798:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801279c:	00cb      	lsls	r3, r1, #3
 801279e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80127a2:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80127a6:	0648      	lsls	r0, r1, #25
 80127a8:	ea43 0302 	orr.w	r3, r3, r2
 80127ac:	bf44      	itt	mi
 80127ae:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80127b2:	b21b      	sxthmi	r3, r3
 80127b4:	1b5d      	subs	r5, r3, r5
 80127b6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80127ba:	e7b5      	b.n	8012728 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080127bc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80127bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127c0:	461e      	mov	r6, r3
 80127c2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80127c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80127c8:	4604      	mov	r4, r0
 80127ca:	4617      	mov	r7, r2
 80127cc:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80127d0:	f7f7 ff26 	bl	800a620 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80127d4:	4605      	mov	r5, r0
 80127d6:	b918      	cbnz	r0, 80127e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80127d8:	6030      	str	r0, [r6, #0]
 80127da:	4628      	mov	r0, r5
 80127dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80127e0:	683b      	ldr	r3, [r7, #0]
 80127e2:	4601      	mov	r1, r0
 80127e4:	68db      	ldr	r3, [r3, #12]
 80127e6:	4638      	mov	r0, r7
 80127e8:	4798      	blx	r3
 80127ea:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80127ee:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80127f2:	4602      	mov	r2, r0
 80127f4:	6030      	str	r0, [r6, #0]
 80127f6:	d213      	bcs.n	8012820 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80127f8:	4643      	mov	r3, r8
 80127fa:	4639      	mov	r1, r7
 80127fc:	4620      	mov	r0, r4
 80127fe:	f7ff fe3b 	bl	8012478 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8012802:	6030      	str	r0, [r6, #0]
 8012804:	6833      	ldr	r3, [r6, #0]
 8012806:	b143      	cbz	r3, 801281a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8012808:	7b5a      	ldrb	r2, [r3, #13]
 801280a:	7a9b      	ldrb	r3, [r3, #10]
 801280c:	0052      	lsls	r2, r2, #1
 801280e:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8012812:	4313      	orrs	r3, r2
 8012814:	bf0c      	ite	eq
 8012816:	2301      	moveq	r3, #1
 8012818:	2300      	movne	r3, #0
 801281a:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801281e:	e7dc      	b.n	80127da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8012820:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8012824:	b29b      	uxth	r3, r3
 8012826:	2b7f      	cmp	r3, #127	@ 0x7f
 8012828:	d804      	bhi.n	8012834 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801282a:	4639      	mov	r1, r7
 801282c:	4620      	mov	r0, r4
 801282e:	f7ff fced 	bl	801220c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8012832:	e7e6      	b.n	8012802 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8012834:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8012838:	2b00      	cmp	r3, #0
 801283a:	d0e3      	beq.n	8012804 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801283c:	f640 1302 	movw	r3, #2306	@ 0x902
 8012840:	429d      	cmp	r5, r3
 8012842:	d1df      	bne.n	8012804 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8012844:	4601      	mov	r1, r0
 8012846:	4620      	mov	r0, r4
 8012848:	f7ff fcb1 	bl	80121ae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801284c:	e7d9      	b.n	8012802 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801284e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801284e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012852:	461e      	mov	r6, r3
 8012854:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8012856:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801285a:	4604      	mov	r4, r0
 801285c:	4617      	mov	r7, r2
 801285e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012862:	f7f7 fedd 	bl	800a620 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8012866:	4605      	mov	r5, r0
 8012868:	b918      	cbnz	r0, 8012872 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801286a:	6030      	str	r0, [r6, #0]
 801286c:	4628      	mov	r0, r5
 801286e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012872:	683b      	ldr	r3, [r7, #0]
 8012874:	4601      	mov	r1, r0
 8012876:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801287a:	4638      	mov	r0, r7
 801287c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8012880:	47c8      	blx	r9
 8012882:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8012886:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801288a:	4602      	mov	r2, r0
 801288c:	6030      	str	r0, [r6, #0]
 801288e:	d213      	bcs.n	80128b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8012890:	4643      	mov	r3, r8
 8012892:	4639      	mov	r1, r7
 8012894:	4620      	mov	r0, r4
 8012896:	f7ff fdef 	bl	8012478 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801289a:	6030      	str	r0, [r6, #0]
 801289c:	6833      	ldr	r3, [r6, #0]
 801289e:	b143      	cbz	r3, 80128b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80128a0:	7b5a      	ldrb	r2, [r3, #13]
 80128a2:	7a9b      	ldrb	r3, [r3, #10]
 80128a4:	0052      	lsls	r2, r2, #1
 80128a6:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80128aa:	4313      	orrs	r3, r2
 80128ac:	bf0c      	ite	eq
 80128ae:	2301      	moveq	r3, #1
 80128b0:	2300      	movne	r3, #0
 80128b2:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80128b6:	e7d9      	b.n	801286c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80128b8:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80128bc:	b29b      	uxth	r3, r3
 80128be:	2b7f      	cmp	r3, #127	@ 0x7f
 80128c0:	d804      	bhi.n	80128cc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80128c2:	4639      	mov	r1, r7
 80128c4:	4620      	mov	r0, r4
 80128c6:	f7ff fca1 	bl	801220c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80128ca:	e7e6      	b.n	801289a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80128cc:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80128d0:	2b00      	cmp	r3, #0
 80128d2:	d0e3      	beq.n	801289c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80128d4:	f640 1302 	movw	r3, #2306	@ 0x902
 80128d8:	429d      	cmp	r5, r3
 80128da:	d1df      	bne.n	801289c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80128dc:	4601      	mov	r1, r0
 80128de:	4620      	mov	r0, r4
 80128e0:	f7ff fc65 	bl	80121ae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80128e4:	e7d9      	b.n	801289a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080128e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80128e6:	b510      	push	{r4, lr}
 80128e8:	4604      	mov	r4, r0
 80128ea:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80128ee:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80128f0:	b1f1      	cbz	r1, 8012930 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80128f2:	2b0a      	cmp	r3, #10
 80128f4:	d02f      	beq.n	8012956 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80128f6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80128f8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80128fc:	3901      	subs	r1, #1
 80128fe:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8012900:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8012904:	1c51      	adds	r1, r2, #1
 8012906:	b289      	uxth	r1, r1
 8012908:	2901      	cmp	r1, #1
 801290a:	bf84      	itt	hi
 801290c:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8012910:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8012912:	f103 0201 	add.w	r2, r3, #1
 8012916:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012918:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801291a:	bf98      	it	ls
 801291c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 801291e:	4413      	add	r3, r2
 8012920:	b29b      	uxth	r3, r3
 8012922:	2b09      	cmp	r3, #9
 8012924:	bf88      	it	hi
 8012926:	3b0a      	subhi	r3, #10
 8012928:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801292c:	8458      	strh	r0, [r3, #34]	@ 0x22
 801292e:	e7dc      	b.n	80128ea <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8012930:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012932:	2b0a      	cmp	r3, #10
 8012934:	d00f      	beq.n	8012956 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8012936:	4620      	mov	r0, r4
 8012938:	f7ff fbe7 	bl	801210a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 801293c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 801293e:	1c5a      	adds	r2, r3, #1
 8012940:	8722      	strh	r2, [r4, #56]	@ 0x38
 8012942:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8012944:	4413      	add	r3, r2
 8012946:	b29b      	uxth	r3, r3
 8012948:	2b09      	cmp	r3, #9
 801294a:	bf88      	it	hi
 801294c:	3b0a      	subhi	r3, #10
 801294e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012952:	8458      	strh	r0, [r3, #34]	@ 0x22
 8012954:	e7ec      	b.n	8012930 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8012956:	bd10      	pop	{r4, pc}

08012958 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8012958:	b538      	push	{r3, r4, r5, lr}
 801295a:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801295c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8012960:	4604      	mov	r4, r0
 8012962:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8012964:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8012966:	3a01      	subs	r2, #1
 8012968:	8702      	strh	r2, [r0, #56]	@ 0x38
 801296a:	1c5a      	adds	r2, r3, #1
 801296c:	b292      	uxth	r2, r2
 801296e:	2a09      	cmp	r2, #9
 8012970:	bf86      	itte	hi
 8012972:	3b09      	subhi	r3, #9
 8012974:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8012976:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8012978:	f7ff ffb5 	bl	80128e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 801297c:	8c23      	ldrh	r3, [r4, #32]
 801297e:	2b01      	cmp	r3, #1
 8012980:	bf9c      	itt	ls
 8012982:	3301      	addls	r3, #1
 8012984:	8423      	strhls	r3, [r4, #32]
 8012986:	8be3      	ldrh	r3, [r4, #30]
 8012988:	b90b      	cbnz	r3, 801298e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 801298a:	2302      	movs	r3, #2
 801298c:	83e3      	strh	r3, [r4, #30]
 801298e:	8be3      	ldrh	r3, [r4, #30]
 8012990:	3b01      	subs	r3, #1
 8012992:	b29b      	uxth	r3, r3
 8012994:	83e3      	strh	r3, [r4, #30]
 8012996:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801299a:	4628      	mov	r0, r5
 801299c:	8365      	strh	r5, [r4, #26]
 801299e:	bd38      	pop	{r3, r4, r5, pc}

080129a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80129a0:	428a      	cmp	r2, r1
 80129a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80129a6:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80129a8:	d931      	bls.n	8012a0e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80129aa:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80129ac:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80129b0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80129b4:	19ee      	adds	r6, r5, r7
 80129b6:	1a54      	subs	r4, r2, r1
 80129b8:	3e01      	subs	r6, #1
 80129ba:	fa1f fe84 	uxth.w	lr, r4
 80129be:	b2b4      	uxth	r4, r6
 80129c0:	eba4 090e 	sub.w	r9, r4, lr
 80129c4:	fa1f f989 	uxth.w	r9, r9
 80129c8:	2c09      	cmp	r4, #9
 80129ca:	4626      	mov	r6, r4
 80129cc:	bf88      	it	hi
 80129ce:	f1a4 060a 	subhi.w	r6, r4, #10
 80129d2:	f1bc 0f00 	cmp.w	ip, #0
 80129d6:	bf08      	it	eq
 80129d8:	f04f 0c02 	moveq.w	ip, #2
 80129dc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80129e0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80129e4:	fa1f fc8c 	uxth.w	ip, ip
 80129e8:	3c01      	subs	r4, #1
 80129ea:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 80129ee:	b2a4      	uxth	r4, r4
 80129f0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80129f4:	454c      	cmp	r4, r9
 80129f6:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 80129fa:	d1e5      	bne.n	80129c8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80129fc:	eba5 050e 	sub.w	r5, r5, lr
 8012a00:	eb0e 0408 	add.w	r4, lr, r8
 8012a04:	8705      	strh	r5, [r0, #56]	@ 0x38
 8012a06:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8012a0a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8012a0e:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8012a10:	1a64      	subs	r4, r4, r1
 8012a12:	4439      	add	r1, r7
 8012a14:	b289      	uxth	r1, r1
 8012a16:	2909      	cmp	r1, #9
 8012a18:	bf88      	it	hi
 8012a1a:	390a      	subhi	r1, #10
 8012a1c:	8704      	strh	r4, [r0, #56]	@ 0x38
 8012a1e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012a20:	250a      	movs	r5, #10
 8012a22:	b18a      	cbz	r2, 8012a48 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8012a24:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8012a26:	3a01      	subs	r2, #1
 8012a28:	b292      	uxth	r2, r2
 8012a2a:	3101      	adds	r1, #1
 8012a2c:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8012a30:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012a32:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012a34:	b901      	cbnz	r1, 8012a38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8012a36:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8012a38:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8012a3a:	3901      	subs	r1, #1
 8012a3c:	b289      	uxth	r1, r1
 8012a3e:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8012a40:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8012a44:	844c      	strh	r4, [r1, #34]	@ 0x22
 8012a46:	e7ec      	b.n	8012a22 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8012a48:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012a4c:	f7ff bf4b 	b.w	80128e6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08012a50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8012a50:	b570      	push	{r4, r5, r6, lr}
 8012a52:	2500      	movs	r5, #0
 8012a54:	4295      	cmp	r5, r2
 8012a56:	d011      	beq.n	8012a7c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8012a58:	8bc4      	ldrh	r4, [r0, #30]
 8012a5a:	f831 6b02 	ldrh.w	r6, [r1], #2
 8012a5e:	4414      	add	r4, r2
 8012a60:	3c01      	subs	r4, #1
 8012a62:	1b64      	subs	r4, r4, r5
 8012a64:	b2a4      	uxth	r4, r4
 8012a66:	2c01      	cmp	r4, #1
 8012a68:	bf88      	it	hi
 8012a6a:	3c02      	subhi	r4, #2
 8012a6c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8012a70:	8b64      	ldrh	r4, [r4, #26]
 8012a72:	42b4      	cmp	r4, r6
 8012a74:	d117      	bne.n	8012aa6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8012a76:	3501      	adds	r5, #1
 8012a78:	b2ad      	uxth	r5, r5
 8012a7a:	e7eb      	b.n	8012a54 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8012a7c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012a80:	2400      	movs	r4, #0
 8012a82:	4413      	add	r3, r2
 8012a84:	b2a2      	uxth	r2, r4
 8012a86:	429a      	cmp	r2, r3
 8012a88:	da0f      	bge.n	8012aaa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8012a8a:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8012a8c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8012a90:	4432      	add	r2, r6
 8012a92:	b292      	uxth	r2, r2
 8012a94:	2a09      	cmp	r2, #9
 8012a96:	bf88      	it	hi
 8012a98:	3a0a      	subhi	r2, #10
 8012a9a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8012a9e:	3401      	adds	r4, #1
 8012aa0:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8012aa2:	42aa      	cmp	r2, r5
 8012aa4:	d0ee      	beq.n	8012a84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8012aa6:	2000      	movs	r0, #0
 8012aa8:	bd70      	pop	{r4, r5, r6, pc}
 8012aaa:	2001      	movs	r0, #1
 8012aac:	e7fc      	b.n	8012aa8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08012aae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8012aae:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ab2:	4605      	mov	r5, r0
 8012ab4:	4616      	mov	r6, r2
 8012ab6:	1c8c      	adds	r4, r1, #2
 8012ab8:	8809      	ldrh	r1, [r1, #0]
 8012aba:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012abe:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012ac2:	42b3      	cmp	r3, r6
 8012ac4:	d124      	bne.n	8012b10 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8012ac6:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012aca:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012ace:	f001 070f 	and.w	r7, r1, #15
 8012ad2:	f8cd 8000 	str.w	r8, [sp]
 8012ad6:	464b      	mov	r3, r9
 8012ad8:	4652      	mov	r2, sl
 8012ada:	4621      	mov	r1, r4
 8012adc:	4628      	mov	r0, r5
 8012ade:	f7ff ffb7 	bl	8012a50 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012ae2:	4683      	mov	fp, r0
 8012ae4:	b168      	cbz	r0, 8012b02 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8012ae6:	eb0a 0109 	add.w	r1, sl, r9
 8012aea:	4441      	add	r1, r8
 8012aec:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8012af0:	463a      	mov	r2, r7
 8012af2:	4649      	mov	r1, r9
 8012af4:	4628      	mov	r0, r5
 8012af6:	f7ff ff53 	bl	80129a0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012afa:	4658      	mov	r0, fp
 8012afc:	b003      	add	sp, #12
 8012afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b02:	eb07 010a 	add.w	r1, r7, sl
 8012b06:	4449      	add	r1, r9
 8012b08:	4441      	add	r1, r8
 8012b0a:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012b0e:	e7d2      	b.n	8012ab6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012b10:	f04f 0b00 	mov.w	fp, #0
 8012b14:	e7f1      	b.n	8012afa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08012b16 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8012b16:	b570      	push	{r4, r5, r6, lr}
 8012b18:	8810      	ldrh	r0, [r2, #0]
 8012b1a:	4298      	cmp	r0, r3
 8012b1c:	d817      	bhi.n	8012b4e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b1e:	1e48      	subs	r0, r1, #1
 8012b20:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8012b24:	4298      	cmp	r0, r3
 8012b26:	d312      	bcc.n	8012b4e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b28:	2400      	movs	r4, #0
 8012b2a:	428c      	cmp	r4, r1
 8012b2c:	d20f      	bcs.n	8012b4e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012b2e:	1860      	adds	r0, r4, r1
 8012b30:	1040      	asrs	r0, r0, #1
 8012b32:	0085      	lsls	r5, r0, #2
 8012b34:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8012b38:	42b3      	cmp	r3, r6
 8012b3a:	d902      	bls.n	8012b42 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012b3c:	3001      	adds	r0, #1
 8012b3e:	b284      	uxth	r4, r0
 8012b40:	e7f3      	b.n	8012b2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012b42:	d201      	bcs.n	8012b48 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8012b44:	b281      	uxth	r1, r0
 8012b46:	e7f0      	b.n	8012b2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012b48:	442a      	add	r2, r5
 8012b4a:	8850      	ldrh	r0, [r2, #2]
 8012b4c:	bd70      	pop	{r4, r5, r6, pc}
 8012b4e:	2000      	movs	r0, #0
 8012b50:	e7fc      	b.n	8012b4c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012b52 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012b52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012b56:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8012b58:	886f      	ldrh	r7, [r5, #2]
 8012b5a:	4604      	mov	r4, r0
 8012b5c:	087f      	lsrs	r7, r7, #1
 8012b5e:	260b      	movs	r6, #11
 8012b60:	3e01      	subs	r6, #1
 8012b62:	d013      	beq.n	8012b8c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012b64:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012b66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012b6a:	462a      	mov	r2, r5
 8012b6c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8012b70:	4639      	mov	r1, r7
 8012b72:	4643      	mov	r3, r8
 8012b74:	4620      	mov	r0, r4
 8012b76:	f7ff ffce 	bl	8012b16 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8012b7a:	b138      	cbz	r0, 8012b8c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8012b7c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8012b80:	4642      	mov	r2, r8
 8012b82:	4620      	mov	r0, r4
 8012b84:	f7ff ff93 	bl	8012aae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8012b88:	2800      	cmp	r0, #0
 8012b8a:	d1e9      	bne.n	8012b60 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8012b8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012b90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8012b90:	b570      	push	{r4, r5, r6, lr}
 8012b92:	694a      	ldr	r2, [r1, #20]
 8012b94:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8012b96:	684b      	ldr	r3, [r1, #4]
 8012b98:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8012b9a:	1b54      	subs	r4, r2, r5
 8012b9c:	f000 8106 	beq.w	8012dac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8012ba0:	1b9b      	subs	r3, r3, r6
 8012ba2:	d003      	beq.n	8012bac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012ba4:	4363      	muls	r3, r4
 8012ba6:	2210      	movs	r2, #16
 8012ba8:	fb93 f3f2 	sdiv	r3, r3, r2
 8012bac:	680c      	ldr	r4, [r1, #0]
 8012bae:	698a      	ldr	r2, [r1, #24]
 8012bb0:	1b65      	subs	r5, r4, r5
 8012bb2:	f000 80fd 	beq.w	8012db0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8012bb6:	1b92      	subs	r2, r2, r6
 8012bb8:	d003      	beq.n	8012bc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012bba:	436a      	muls	r2, r5
 8012bbc:	2410      	movs	r4, #16
 8012bbe:	fb92 f2f4 	sdiv	r2, r2, r4
 8012bc2:	1a9b      	subs	r3, r3, r2
 8012bc4:	ee07 3a90 	vmov	s15, r3
 8012bc8:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8012dec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012bcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012bd0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012bd4:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012bd8:	460a      	mov	r2, r1
 8012bda:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8012bde:	4603      	mov	r3, r0
 8012be0:	f100 040c 	add.w	r4, r0, #12
 8012be4:	eeb1 6a43 	vneg.f32	s12, s6
 8012be8:	edd2 7a02 	vldr	s15, [r2, #8]
 8012bec:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8012bf0:	3214      	adds	r2, #20
 8012bf2:	ece3 6a01 	vstmia	r3!, {s13}
 8012bf6:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012bfa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012bfe:	429c      	cmp	r4, r3
 8012c00:	edc3 7a02 	vstr	s15, [r3, #8]
 8012c04:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012c08:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012c0c:	edc3 7a05 	vstr	s15, [r3, #20]
 8012c10:	d1ea      	bne.n	8012be8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8012c12:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012c14:	698b      	ldr	r3, [r1, #24]
 8012c16:	edd0 4a02 	vldr	s9, [r0, #8]
 8012c1a:	edd0 3a00 	vldr	s7, [r0]
 8012c1e:	edd0 6a01 	vldr	s13, [r0, #4]
 8012c22:	ed90 5a05 	vldr	s10, [r0, #20]
 8012c26:	ed90 2a03 	vldr	s4, [r0, #12]
 8012c2a:	edd0 5a04 	vldr	s11, [r0, #16]
 8012c2e:	ed90 1a07 	vldr	s2, [r0, #28]
 8012c32:	edd0 2a06 	vldr	s5, [r0, #24]
 8012c36:	1a9b      	subs	r3, r3, r2
 8012c38:	ee07 3a90 	vmov	s15, r3
 8012c3c:	684b      	ldr	r3, [r1, #4]
 8012c3e:	1a9b      	subs	r3, r3, r2
 8012c40:	ee07 3a10 	vmov	s14, r3
 8012c44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012c48:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012c4c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012c50:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012c54:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c58:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8012c5c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012c60:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8012c64:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012c68:	ee32 5a45 	vsub.f32	s10, s4, s10
 8012c6c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8012c70:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8012c74:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012c76:	694a      	ldr	r2, [r1, #20]
 8012c78:	1b13      	subs	r3, r2, r4
 8012c7a:	ee07 3a10 	vmov	s14, r3
 8012c7e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c82:	680b      	ldr	r3, [r1, #0]
 8012c84:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012c88:	1b1b      	subs	r3, r3, r4
 8012c8a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8012c8e:	ee07 3a10 	vmov	s14, r3
 8012c92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012c96:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012c9a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8012c9e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8012ca2:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8012ca6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012ca8:	698b      	ldr	r3, [r1, #24]
 8012caa:	1a9b      	subs	r3, r3, r2
 8012cac:	ee06 3a90 	vmov	s13, r3
 8012cb0:	684b      	ldr	r3, [r1, #4]
 8012cb2:	1a9b      	subs	r3, r3, r2
 8012cb4:	ee07 3a10 	vmov	s14, r3
 8012cb8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012cbc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cc0:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012cc4:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012cc8:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012ccc:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012cd0:	ee66 6a83 	vmul.f32	s13, s13, s6
 8012cd4:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8012cd8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012cda:	694a      	ldr	r2, [r1, #20]
 8012cdc:	1b13      	subs	r3, r2, r4
 8012cde:	ee07 3a10 	vmov	s14, r3
 8012ce2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012ce6:	680b      	ldr	r3, [r1, #0]
 8012ce8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012cec:	1b1b      	subs	r3, r3, r4
 8012cee:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8012cf2:	ee07 3a10 	vmov	s14, r3
 8012cf6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012cfa:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012cfe:	eea5 5a87 	vfma.f32	s10, s11, s14
 8012d02:	edd0 5a08 	vldr	s11, [r0, #32]
 8012d06:	ee25 5a06 	vmul.f32	s10, s10, s12
 8012d0a:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012d0e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8012d12:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012d14:	698b      	ldr	r3, [r1, #24]
 8012d16:	1a9b      	subs	r3, r3, r2
 8012d18:	ee07 3a10 	vmov	s14, r3
 8012d1c:	684b      	ldr	r3, [r1, #4]
 8012d1e:	1a9b      	subs	r3, r3, r2
 8012d20:	ee01 3a90 	vmov	s3, r3
 8012d24:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012d28:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012d2c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012d30:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8012d34:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012d38:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012d3c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012d40:	ee27 7a03 	vmul.f32	s14, s14, s6
 8012d44:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012d48:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012d4a:	694a      	ldr	r2, [r1, #20]
 8012d4c:	1b13      	subs	r3, r2, r4
 8012d4e:	ee03 3a10 	vmov	s6, r3
 8012d52:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012d56:	680b      	ldr	r3, [r1, #0]
 8012d58:	ee23 3a04 	vmul.f32	s6, s6, s8
 8012d5c:	1b1b      	subs	r3, r3, r4
 8012d5e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8012d62:	ee03 3a10 	vmov	s6, r3
 8012d66:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8012d6a:	ee23 4a04 	vmul.f32	s8, s6, s8
 8012d6e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8012d72:	ee25 6a86 	vmul.f32	s12, s11, s12
 8012d76:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8012d7a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8012d7e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8012d82:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8012d86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012d8a:	dd13      	ble.n	8012db4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8012d8c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012d90:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8012d94:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012d96:	eee3 7a87 	vfma.f32	s15, s7, s14
 8012d9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012d9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012da2:	dd15      	ble.n	8012dd0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8012da4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8012da8:	6403      	str	r3, [r0, #64]	@ 0x40
 8012daa:	bd70      	pop	{r4, r5, r6, pc}
 8012dac:	4623      	mov	r3, r4
 8012dae:	e6fd      	b.n	8012bac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8012db0:	462a      	mov	r2, r5
 8012db2:	e706      	b.n	8012bc2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012db4:	d502      	bpl.n	8012dbc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8012db6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012dba:	e7e9      	b.n	8012d90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012dbc:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012dc0:	eea3 2a85 	vfma.f32	s4, s7, s10
 8012dc4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012dc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012dcc:	dade      	bge.n	8012d8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012dce:	e7f2      	b.n	8012db6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012dd0:	d502      	bpl.n	8012dd8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8012dd2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012dd6:	e7e7      	b.n	8012da8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012dd8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012ddc:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012de0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8012de4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012de8:	dadc      	bge.n	8012da4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012dea:	e7f2      	b.n	8012dd2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012dec:	3d800000 	.word	0x3d800000

08012df0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012df0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012df4:	2714      	movs	r7, #20
 8012df6:	435f      	muls	r7, r3
 8012df8:	eb02 0c07 	add.w	ip, r2, r7
 8012dfc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012e00:	f115 0e0f 	adds.w	lr, r5, #15
 8012e04:	f100 80a2 	bmi.w	8012f4c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012e08:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012e0c:	9c08      	ldr	r4, [sp, #32]
 8012e0e:	f8c0 e014 	str.w	lr, [r0, #20]
 8012e12:	2614      	movs	r6, #20
 8012e14:	4366      	muls	r6, r4
 8012e16:	eb02 0806 	add.w	r8, r2, r6
 8012e1a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012e1e:	f115 040f 	adds.w	r4, r5, #15
 8012e22:	f100 809f 	bmi.w	8012f64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8012e26:	1124      	asrs	r4, r4, #4
 8012e28:	eba4 040e 	sub.w	r4, r4, lr
 8012e2c:	6184      	str	r4, [r0, #24]
 8012e2e:	2c00      	cmp	r4, #0
 8012e30:	f000 808a 	beq.w	8012f48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8012e34:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012e38:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012e3c:	5995      	ldr	r5, [r2, r6]
 8012e3e:	eba4 0809 	sub.w	r8, r4, r9
 8012e42:	59d4      	ldr	r4, [r2, r7]
 8012e44:	eba5 0a04 	sub.w	sl, r5, r4
 8012e48:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012e4c:	fb0e fe05 	mul.w	lr, lr, r5
 8012e50:	fb0a ee19 	mls	lr, sl, r9, lr
 8012e54:	fb08 e404 	mla	r4, r8, r4, lr
 8012e58:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012e5c:	3c01      	subs	r4, #1
 8012e5e:	19a4      	adds	r4, r4, r6
 8012e60:	f100 808c 	bmi.w	8012f7c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8012e64:	fb94 fef6 	sdiv	lr, r4, r6
 8012e68:	f8c0 e000 	str.w	lr, [r0]
 8012e6c:	fb06 441e 	mls	r4, r6, lr, r4
 8012e70:	6104      	str	r4, [r0, #16]
 8012e72:	2d00      	cmp	r5, #0
 8012e74:	f2c0 8095 	blt.w	8012fa2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8012e78:	fb95 f4f6 	sdiv	r4, r5, r6
 8012e7c:	6044      	str	r4, [r0, #4]
 8012e7e:	fb06 5514 	mls	r5, r6, r4, r5
 8012e82:	6085      	str	r5, [r0, #8]
 8012e84:	60c6      	str	r6, [r0, #12]
 8012e86:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8012e8a:	6945      	ldr	r5, [r0, #20]
 8012e8c:	59d2      	ldr	r2, [r2, r7]
 8012e8e:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8012fc4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8012e92:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012e96:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8012e9a:	ee07 4a10 	vmov	s14, r4
 8012e9e:	6804      	ldr	r4, [r0, #0]
 8012ea0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8012ea4:	ee07 2a90 	vmov	s15, r2
 8012ea8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012eac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012eb0:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8012eb4:	ee27 7a26 	vmul.f32	s14, s14, s13
 8012eb8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012ebc:	edd3 6a00 	vldr	s13, [r3]
 8012ec0:	eee6 6a07 	vfma.f32	s13, s12, s14
 8012ec4:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8012ec8:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012ecc:	edc0 6a07 	vstr	s13, [r0, #28]
 8012ed0:	edd0 6a01 	vldr	s13, [r0, #4]
 8012ed4:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8012ed8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012edc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012ee0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012ee4:	ed80 6a08 	vstr	s12, [r0, #32]
 8012ee8:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8012eea:	6242      	str	r2, [r0, #36]	@ 0x24
 8012eec:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8012ef0:	ed93 6a03 	vldr	s12, [r3, #12]
 8012ef4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012ef8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012efc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012f00:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8012f04:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012f08:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012f0c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012f10:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8012f14:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012f16:	6302      	str	r2, [r0, #48]	@ 0x30
 8012f18:	ed93 6a06 	vldr	s12, [r3, #24]
 8012f1c:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012f20:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012f24:	eeb0 7a46 	vmov.f32	s14, s12
 8012f28:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012f2c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012f30:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012f34:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8012f38:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012f3c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012f40:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8012f44:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8012f46:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012f4c:	f1c5 0501 	rsb	r5, r5, #1
 8012f50:	f015 050f 	ands.w	r5, r5, #15
 8012f54:	bf18      	it	ne
 8012f56:	2501      	movne	r5, #1
 8012f58:	2410      	movs	r4, #16
 8012f5a:	fb9e fef4 	sdiv	lr, lr, r4
 8012f5e:	ebae 0e05 	sub.w	lr, lr, r5
 8012f62:	e753      	b.n	8012e0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8012f64:	f1c5 0501 	rsb	r5, r5, #1
 8012f68:	f015 050f 	ands.w	r5, r5, #15
 8012f6c:	bf18      	it	ne
 8012f6e:	2501      	movne	r5, #1
 8012f70:	f04f 0910 	mov.w	r9, #16
 8012f74:	fb94 f4f9 	sdiv	r4, r4, r9
 8012f78:	1b64      	subs	r4, r4, r5
 8012f7a:	e755      	b.n	8012e28 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8012f7c:	4264      	negs	r4, r4
 8012f7e:	fb94 fef6 	sdiv	lr, r4, r6
 8012f82:	f1ce 0800 	rsb	r8, lr, #0
 8012f86:	fb06 441e 	mls	r4, r6, lr, r4
 8012f8a:	f8c0 8000 	str.w	r8, [r0]
 8012f8e:	6104      	str	r4, [r0, #16]
 8012f90:	2c00      	cmp	r4, #0
 8012f92:	f43f af6e 	beq.w	8012e72 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8012f96:	ea6f 0e0e 	mvn.w	lr, lr
 8012f9a:	f8c0 e000 	str.w	lr, [r0]
 8012f9e:	1b34      	subs	r4, r6, r4
 8012fa0:	e766      	b.n	8012e70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8012fa2:	426d      	negs	r5, r5
 8012fa4:	fb95 f4f6 	sdiv	r4, r5, r6
 8012fa8:	f1c4 0e00 	rsb	lr, r4, #0
 8012fac:	fb06 5514 	mls	r5, r6, r4, r5
 8012fb0:	f8c0 e004 	str.w	lr, [r0, #4]
 8012fb4:	6085      	str	r5, [r0, #8]
 8012fb6:	2d00      	cmp	r5, #0
 8012fb8:	f43f af64 	beq.w	8012e84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012fbc:	43e4      	mvns	r4, r4
 8012fbe:	6044      	str	r4, [r0, #4]
 8012fc0:	1b75      	subs	r5, r6, r5
 8012fc2:	e75e      	b.n	8012e82 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8012fc4:	3d800000 	.word	0x3d800000

08012fc8 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8012fc8:	4602      	mov	r2, r0
 8012fca:	b148      	cbz	r0, 8012fe0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8012fcc:	2300      	movs	r3, #0
 8012fce:	b298      	uxth	r0, r3
 8012fd0:	3301      	adds	r3, #1
 8012fd2:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8012fd6:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8012fda:	2900      	cmp	r1, #0
 8012fdc:	d1f7      	bne.n	8012fce <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8012fde:	4770      	bx	lr
 8012fe0:	4770      	bx	lr

08012fe2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8012fe2:	b530      	push	{r4, r5, lr}
 8012fe4:	4604      	mov	r4, r0
 8012fe6:	b159      	cbz	r1, 8013000 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8012fe8:	b148      	cbz	r0, 8012ffe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012fea:	2300      	movs	r3, #0
 8012fec:	b298      	uxth	r0, r3
 8012fee:	4282      	cmp	r2, r0
 8012ff0:	d905      	bls.n	8012ffe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8012ff2:	5ccd      	ldrb	r5, [r1, r3]
 8012ff4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8012ff8:	3301      	adds	r3, #1
 8012ffa:	2d00      	cmp	r5, #0
 8012ffc:	d1f6      	bne.n	8012fec <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8012ffe:	bd30      	pop	{r4, r5, pc}
 8013000:	4608      	mov	r0, r1
 8013002:	e7fc      	b.n	8012ffe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013004 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8013004:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013006:	b08b      	sub	sp, #44	@ 0x2c
 8013008:	468c      	mov	ip, r1
 801300a:	2100      	movs	r1, #0
 801300c:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8013010:	4604      	mov	r4, r0
 8013012:	261f      	movs	r6, #31
 8013014:	af01      	add	r7, sp, #4
 8013016:	fb94 fef3 	sdiv	lr, r4, r3
 801301a:	fb03 441e 	mls	r4, r3, lr, r4
 801301e:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013022:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013026:	b2ec      	uxtb	r4, r5
 8013028:	2d09      	cmp	r5, #9
 801302a:	bfd4      	ite	le
 801302c:	3430      	addle	r4, #48	@ 0x30
 801302e:	3457      	addgt	r4, #87	@ 0x57
 8013030:	b2e4      	uxtb	r4, r4
 8013032:	55bc      	strb	r4, [r7, r6]
 8013034:	4674      	mov	r4, lr
 8013036:	1e71      	subs	r1, r6, #1
 8013038:	b974      	cbnz	r4, 8013058 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801303a:	2800      	cmp	r0, #0
 801303c:	da05      	bge.n	801304a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801303e:	ab0a      	add	r3, sp, #40	@ 0x28
 8013040:	4419      	add	r1, r3
 8013042:	232d      	movs	r3, #45	@ 0x2d
 8013044:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013048:	1eb1      	subs	r1, r6, #2
 801304a:	3101      	adds	r1, #1
 801304c:	4439      	add	r1, r7
 801304e:	4660      	mov	r0, ip
 8013050:	f7ff ffc7 	bl	8012fe2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013054:	b00b      	add	sp, #44	@ 0x2c
 8013056:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013058:	460e      	mov	r6, r1
 801305a:	e7dc      	b.n	8013016 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

0801305c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 801305c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801305e:	b08b      	sub	sp, #44	@ 0x2c
 8013060:	468c      	mov	ip, r1
 8013062:	2100      	movs	r1, #0
 8013064:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8013068:	ae01      	add	r6, sp, #4
 801306a:	211f      	movs	r1, #31
 801306c:	fbb0 f7f3 	udiv	r7, r0, r3
 8013070:	fb03 0517 	mls	r5, r3, r7, r0
 8013074:	b2ec      	uxtb	r4, r5
 8013076:	2d09      	cmp	r5, #9
 8013078:	bfd4      	ite	le
 801307a:	3430      	addle	r4, #48	@ 0x30
 801307c:	3457      	addgt	r4, #87	@ 0x57
 801307e:	b2e4      	uxtb	r4, r4
 8013080:	558c      	strb	r4, [r1, r6]
 8013082:	4638      	mov	r0, r7
 8013084:	1e4c      	subs	r4, r1, #1
 8013086:	b92f      	cbnz	r7, 8013094 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8013088:	4431      	add	r1, r6
 801308a:	4660      	mov	r0, ip
 801308c:	f7ff ffa9 	bl	8012fe2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013090:	b00b      	add	sp, #44	@ 0x2c
 8013092:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013094:	4621      	mov	r1, r4
 8013096:	e7e9      	b.n	801306c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08013098 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013098:	b410      	push	{r4}
 801309a:	b131      	cbz	r1, 80130aa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 801309c:	1e9c      	subs	r4, r3, #2
 801309e:	2c22      	cmp	r4, #34	@ 0x22
 80130a0:	d803      	bhi.n	80130aa <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80130a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80130a6:	f7ff bfad 	b.w	8013004 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80130aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80130ae:	4770      	bx	lr

080130b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80130b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130b4:	4691      	mov	r9, r2
 80130b6:	b085      	sub	sp, #20
 80130b8:	6802      	ldr	r2, [r0, #0]
 80130ba:	9201      	str	r2, [sp, #4]
 80130bc:	4688      	mov	r8, r1
 80130be:	4683      	mov	fp, r0
 80130c0:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 80130c4:	9103      	str	r1, [sp, #12]
 80130c6:	4610      	mov	r0, r2
 80130c8:	461c      	mov	r4, r3
 80130ca:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 80130ce:	9302      	str	r3, [sp, #8]
 80130d0:	f7ff ff7a 	bl	8012fc8 <_ZN8touchgfx7Unicode6strlenEPKt>
 80130d4:	f1b8 0f00 	cmp.w	r8, #0
 80130d8:	bf0c      	ite	eq
 80130da:	4684      	moveq	ip, r0
 80130dc:	f100 0c01 	addne.w	ip, r0, #1
 80130e0:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 80130e4:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 80130e8:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80130ea:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80130ec:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 80130f0:	9903      	ldr	r1, [sp, #12]
 80130f2:	fa1f fc8c 	uxth.w	ip, ip
 80130f6:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80130fa:	d041      	beq.n	8013180 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80130fc:	d834      	bhi.n	8013168 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80130fe:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8013102:	d059      	beq.n	80131b8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013104:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8013108:	d03a      	beq.n	8013180 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801310a:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 801310e:	d034      	beq.n	801317a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013110:	2400      	movs	r4, #0
 8013112:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8013116:	3a01      	subs	r2, #1
 8013118:	b169      	cbz	r1, 8013136 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801311a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801311c:	458c      	cmp	ip, r1
 801311e:	da09      	bge.n	8013134 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013120:	eba1 010c 	sub.w	r1, r1, ip
 8013124:	b289      	uxth	r1, r1
 8013126:	b933      	cbnz	r3, 8013136 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013128:	2e00      	cmp	r6, #0
 801312a:	d051      	beq.n	80131d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801312c:	2800      	cmp	r0, #0
 801312e:	d04f      	beq.n	80131d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013130:	440c      	add	r4, r1
 8013132:	b2a4      	uxth	r4, r4
 8013134:	2100      	movs	r1, #0
 8013136:	682b      	ldr	r3, [r5, #0]
 8013138:	4293      	cmp	r3, r2
 801313a:	da07      	bge.n	801314c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801313c:	f1b8 0f00 	cmp.w	r8, #0
 8013140:	d004      	beq.n	801314c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013142:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013146:	682b      	ldr	r3, [r5, #0]
 8013148:	3301      	adds	r3, #1
 801314a:	602b      	str	r3, [r5, #0]
 801314c:	2730      	movs	r7, #48	@ 0x30
 801314e:	2c00      	cmp	r4, #0
 8013150:	d04e      	beq.n	80131f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013152:	682e      	ldr	r6, [r5, #0]
 8013154:	3c01      	subs	r4, #1
 8013156:	42b2      	cmp	r2, r6
 8013158:	b2a4      	uxth	r4, r4
 801315a:	dd49      	ble.n	80131f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801315c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013160:	682b      	ldr	r3, [r5, #0]
 8013162:	3301      	adds	r3, #1
 8013164:	602b      	str	r3, [r5, #0]
 8013166:	e7f2      	b.n	801314e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013168:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 801316c:	d01d      	beq.n	80131aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801316e:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8013172:	d002      	beq.n	801317a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013174:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8013178:	e7c9      	b.n	801310e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801317a:	4684      	mov	ip, r0
 801317c:	f04f 0800 	mov.w	r8, #0
 8013180:	2c00      	cmp	r4, #0
 8013182:	d0c6      	beq.n	8013112 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013184:	b947      	cbnz	r7, 8013198 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013186:	2801      	cmp	r0, #1
 8013188:	d106      	bne.n	8013198 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801318a:	8814      	ldrh	r4, [r2, #0]
 801318c:	2c30      	cmp	r4, #48	@ 0x30
 801318e:	bf02      	ittt	eq
 8013190:	3202      	addeq	r2, #2
 8013192:	f8cb 2000 	streq.w	r2, [fp]
 8013196:	4638      	moveq	r0, r7
 8013198:	45bc      	cmp	ip, r7
 801319a:	da14      	bge.n	80131c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801319c:	b2bf      	uxth	r7, r7
 801319e:	eba7 040c 	sub.w	r4, r7, ip
 80131a2:	b2a4      	uxth	r4, r4
 80131a4:	46bc      	mov	ip, r7
 80131a6:	2600      	movs	r6, #0
 80131a8:	e7b3      	b.n	8013112 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131aa:	4684      	mov	ip, r0
 80131ac:	b16c      	cbz	r4, 80131ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80131ae:	42b8      	cmp	r0, r7
 80131b0:	dd00      	ble.n	80131b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80131b2:	b2b8      	uxth	r0, r7
 80131b4:	2400      	movs	r4, #0
 80131b6:	e003      	b.n	80131c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80131b8:	f04f 0c01 	mov.w	ip, #1
 80131bc:	2400      	movs	r4, #0
 80131be:	4660      	mov	r0, ip
 80131c0:	4626      	mov	r6, r4
 80131c2:	46a0      	mov	r8, r4
 80131c4:	e7a5      	b.n	8013112 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131c6:	2400      	movs	r4, #0
 80131c8:	e7ed      	b.n	80131a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80131ca:	4626      	mov	r6, r4
 80131cc:	46a0      	mov	r8, r4
 80131ce:	e7a0      	b.n	8013112 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80131d0:	2900      	cmp	r1, #0
 80131d2:	d0b0      	beq.n	8013136 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80131d4:	2720      	movs	r7, #32
 80131d6:	682e      	ldr	r6, [r5, #0]
 80131d8:	2900      	cmp	r1, #0
 80131da:	d0ac      	beq.n	8013136 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80131dc:	3901      	subs	r1, #1
 80131de:	4296      	cmp	r6, r2
 80131e0:	b289      	uxth	r1, r1
 80131e2:	daa7      	bge.n	8013134 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80131e4:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80131e8:	682b      	ldr	r3, [r5, #0]
 80131ea:	3301      	adds	r3, #1
 80131ec:	602b      	str	r3, [r5, #0]
 80131ee:	e7f2      	b.n	80131d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80131f0:	b188      	cbz	r0, 8013216 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80131f2:	682b      	ldr	r3, [r5, #0]
 80131f4:	3801      	subs	r0, #1
 80131f6:	429a      	cmp	r2, r3
 80131f8:	b280      	uxth	r0, r0
 80131fa:	dd0c      	ble.n	8013216 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80131fc:	f8db 3000 	ldr.w	r3, [fp]
 8013200:	1c9c      	adds	r4, r3, #2
 8013202:	f8cb 4000 	str.w	r4, [fp]
 8013206:	881c      	ldrh	r4, [r3, #0]
 8013208:	682b      	ldr	r3, [r5, #0]
 801320a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801320e:	682b      	ldr	r3, [r5, #0]
 8013210:	3301      	adds	r3, #1
 8013212:	602b      	str	r3, [r5, #0]
 8013214:	e7ec      	b.n	80131f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013216:	2620      	movs	r6, #32
 8013218:	b151      	cbz	r1, 8013230 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801321a:	6828      	ldr	r0, [r5, #0]
 801321c:	3901      	subs	r1, #1
 801321e:	4282      	cmp	r2, r0
 8013220:	b289      	uxth	r1, r1
 8013222:	dd05      	ble.n	8013230 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013224:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013228:	682b      	ldr	r3, [r5, #0]
 801322a:	3301      	adds	r3, #1
 801322c:	602b      	str	r3, [r5, #0]
 801322e:	e7f3      	b.n	8013218 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013230:	b005      	add	sp, #20
 8013232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013236 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013236:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801323a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801323e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8013242:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8013246:	2400      	movs	r4, #0
 8013248:	8014      	strh	r4, [r2, #0]
 801324a:	701c      	strb	r4, [r3, #0]
 801324c:	f888 4000 	strb.w	r4, [r8]
 8013250:	f88c 4000 	strb.w	r4, [ip]
 8013254:	f88e 4000 	strb.w	r4, [lr]
 8013258:	703c      	strb	r4, [r7, #0]
 801325a:	6804      	ldr	r4, [r0, #0]
 801325c:	b1a4      	cbz	r4, 8013288 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801325e:	8824      	ldrh	r4, [r4, #0]
 8013260:	f04f 0901 	mov.w	r9, #1
 8013264:	b314      	cbz	r4, 80132ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013266:	2c2b      	cmp	r4, #43	@ 0x2b
 8013268:	d001      	beq.n	801326e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801326a:	2c20      	cmp	r4, #32
 801326c:	d110      	bne.n	8013290 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801326e:	8014      	strh	r4, [r2, #0]
 8013270:	6804      	ldr	r4, [r0, #0]
 8013272:	b10c      	cbz	r4, 8013278 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013274:	3402      	adds	r4, #2
 8013276:	6004      	str	r4, [r0, #0]
 8013278:	680c      	ldr	r4, [r1, #0]
 801327a:	b10c      	cbz	r4, 8013280 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801327c:	3401      	adds	r4, #1
 801327e:	600c      	str	r4, [r1, #0]
 8013280:	6804      	ldr	r4, [r0, #0]
 8013282:	b17c      	cbz	r4, 80132a4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013284:	8824      	ldrh	r4, [r4, #0]
 8013286:	e7ed      	b.n	8013264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013288:	680c      	ldr	r4, [r1, #0]
 801328a:	b17c      	cbz	r4, 80132ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801328c:	7824      	ldrb	r4, [r4, #0]
 801328e:	e7e7      	b.n	8013260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013290:	2c2d      	cmp	r4, #45	@ 0x2d
 8013292:	d102      	bne.n	801329a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013294:	f883 9000 	strb.w	r9, [r3]
 8013298:	e7ea      	b.n	8013270 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801329a:	2c23      	cmp	r4, #35	@ 0x23
 801329c:	d107      	bne.n	80132ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801329e:	f888 9000 	strb.w	r9, [r8]
 80132a2:	e7e5      	b.n	8013270 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80132a4:	680c      	ldr	r4, [r1, #0]
 80132a6:	b10c      	cbz	r4, 80132ac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80132a8:	7824      	ldrb	r4, [r4, #0]
 80132aa:	e7db      	b.n	8013264 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80132ac:	2400      	movs	r4, #0
 80132ae:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 80132b2:	2b09      	cmp	r3, #9
 80132b4:	d901      	bls.n	80132ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80132b6:	2c2a      	cmp	r4, #42	@ 0x2a
 80132b8:	d122      	bne.n	8013300 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80132ba:	2301      	movs	r3, #1
 80132bc:	2c30      	cmp	r4, #48	@ 0x30
 80132be:	f88e 3000 	strb.w	r3, [lr]
 80132c2:	d10d      	bne.n	80132e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80132c4:	f88c 3000 	strb.w	r3, [ip]
 80132c8:	6803      	ldr	r3, [r0, #0]
 80132ca:	b10b      	cbz	r3, 80132d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80132cc:	3302      	adds	r3, #2
 80132ce:	6003      	str	r3, [r0, #0]
 80132d0:	680b      	ldr	r3, [r1, #0]
 80132d2:	b10b      	cbz	r3, 80132d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 80132d4:	3301      	adds	r3, #1
 80132d6:	600b      	str	r3, [r1, #0]
 80132d8:	6803      	ldr	r3, [r0, #0]
 80132da:	2b00      	cmp	r3, #0
 80132dc:	d02f      	beq.n	801333e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 80132de:	881c      	ldrh	r4, [r3, #0]
 80132e0:	2c2a      	cmp	r4, #42	@ 0x2a
 80132e2:	d135      	bne.n	8013350 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80132e4:	f04f 33ff 	mov.w	r3, #4294967295
 80132e8:	6033      	str	r3, [r6, #0]
 80132ea:	6803      	ldr	r3, [r0, #0]
 80132ec:	b10b      	cbz	r3, 80132f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80132ee:	3302      	adds	r3, #2
 80132f0:	6003      	str	r3, [r0, #0]
 80132f2:	680b      	ldr	r3, [r1, #0]
 80132f4:	b10b      	cbz	r3, 80132fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80132f6:	3301      	adds	r3, #1
 80132f8:	600b      	str	r3, [r1, #0]
 80132fa:	6803      	ldr	r3, [r0, #0]
 80132fc:	b31b      	cbz	r3, 8013346 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80132fe:	881c      	ldrh	r4, [r3, #0]
 8013300:	2c2e      	cmp	r4, #46	@ 0x2e
 8013302:	d11a      	bne.n	801333a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013304:	2301      	movs	r3, #1
 8013306:	703b      	strb	r3, [r7, #0]
 8013308:	6803      	ldr	r3, [r0, #0]
 801330a:	b10b      	cbz	r3, 8013310 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801330c:	3302      	adds	r3, #2
 801330e:	6003      	str	r3, [r0, #0]
 8013310:	680b      	ldr	r3, [r1, #0]
 8013312:	b10b      	cbz	r3, 8013318 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013314:	3301      	adds	r3, #1
 8013316:	600b      	str	r3, [r1, #0]
 8013318:	6803      	ldr	r3, [r0, #0]
 801331a:	2b00      	cmp	r3, #0
 801331c:	d036      	beq.n	801338c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801331e:	881b      	ldrh	r3, [r3, #0]
 8013320:	2b2a      	cmp	r3, #42	@ 0x2a
 8013322:	d137      	bne.n	8013394 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013324:	f04f 33ff 	mov.w	r3, #4294967295
 8013328:	602b      	str	r3, [r5, #0]
 801332a:	6803      	ldr	r3, [r0, #0]
 801332c:	b10b      	cbz	r3, 8013332 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801332e:	3302      	adds	r3, #2
 8013330:	6003      	str	r3, [r0, #0]
 8013332:	680b      	ldr	r3, [r1, #0]
 8013334:	b10b      	cbz	r3, 801333a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013336:	3301      	adds	r3, #1
 8013338:	600b      	str	r3, [r1, #0]
 801333a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801333e:	680c      	ldr	r4, [r1, #0]
 8013340:	b134      	cbz	r4, 8013350 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013342:	7824      	ldrb	r4, [r4, #0]
 8013344:	e7cc      	b.n	80132e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013346:	680b      	ldr	r3, [r1, #0]
 8013348:	2b00      	cmp	r3, #0
 801334a:	d0f6      	beq.n	801333a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801334c:	781c      	ldrb	r4, [r3, #0]
 801334e:	e7d7      	b.n	8013300 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013350:	2300      	movs	r3, #0
 8013352:	6033      	str	r3, [r6, #0]
 8013354:	220a      	movs	r2, #10
 8013356:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 801335a:	fa1f f38c 	uxth.w	r3, ip
 801335e:	2b09      	cmp	r3, #9
 8013360:	d8ce      	bhi.n	8013300 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013362:	6833      	ldr	r3, [r6, #0]
 8013364:	fb02 c303 	mla	r3, r2, r3, ip
 8013368:	6033      	str	r3, [r6, #0]
 801336a:	6803      	ldr	r3, [r0, #0]
 801336c:	b10b      	cbz	r3, 8013372 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801336e:	3302      	adds	r3, #2
 8013370:	6003      	str	r3, [r0, #0]
 8013372:	680b      	ldr	r3, [r1, #0]
 8013374:	b10b      	cbz	r3, 801337a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013376:	3301      	adds	r3, #1
 8013378:	600b      	str	r3, [r1, #0]
 801337a:	6803      	ldr	r3, [r0, #0]
 801337c:	b10b      	cbz	r3, 8013382 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801337e:	881c      	ldrh	r4, [r3, #0]
 8013380:	e7e9      	b.n	8013356 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013382:	680c      	ldr	r4, [r1, #0]
 8013384:	2c00      	cmp	r4, #0
 8013386:	d0e6      	beq.n	8013356 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013388:	7824      	ldrb	r4, [r4, #0]
 801338a:	e7e4      	b.n	8013356 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801338c:	680b      	ldr	r3, [r1, #0]
 801338e:	b10b      	cbz	r3, 8013394 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013390:	781b      	ldrb	r3, [r3, #0]
 8013392:	e7c5      	b.n	8013320 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013394:	2200      	movs	r2, #0
 8013396:	602a      	str	r2, [r5, #0]
 8013398:	240a      	movs	r4, #10
 801339a:	3b30      	subs	r3, #48	@ 0x30
 801339c:	b29e      	uxth	r6, r3
 801339e:	2e09      	cmp	r6, #9
 80133a0:	682a      	ldr	r2, [r5, #0]
 80133a2:	d813      	bhi.n	80133cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80133a4:	fb04 3302 	mla	r3, r4, r2, r3
 80133a8:	602b      	str	r3, [r5, #0]
 80133aa:	6803      	ldr	r3, [r0, #0]
 80133ac:	b10b      	cbz	r3, 80133b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80133ae:	3302      	adds	r3, #2
 80133b0:	6003      	str	r3, [r0, #0]
 80133b2:	680b      	ldr	r3, [r1, #0]
 80133b4:	b10b      	cbz	r3, 80133ba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80133b6:	3301      	adds	r3, #1
 80133b8:	600b      	str	r3, [r1, #0]
 80133ba:	6803      	ldr	r3, [r0, #0]
 80133bc:	b10b      	cbz	r3, 80133c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80133be:	881b      	ldrh	r3, [r3, #0]
 80133c0:	e7eb      	b.n	801339a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133c2:	680b      	ldr	r3, [r1, #0]
 80133c4:	2b00      	cmp	r3, #0
 80133c6:	d0e8      	beq.n	801339a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133c8:	781b      	ldrb	r3, [r3, #0]
 80133ca:	e7e6      	b.n	801339a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80133cc:	2a06      	cmp	r2, #6
 80133ce:	bfa8      	it	ge
 80133d0:	2206      	movge	r2, #6
 80133d2:	602a      	str	r2, [r5, #0]
 80133d4:	e7b1      	b.n	801333a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

080133d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 80133d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133da:	b0a3      	sub	sp, #140	@ 0x8c
 80133dc:	2600      	movs	r6, #0
 80133de:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 80133e2:	4607      	mov	r7, r0
 80133e4:	4688      	mov	r8, r1
 80133e6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80133ea:	4631      	mov	r1, r6
 80133ec:	2242      	movs	r2, #66	@ 0x42
 80133ee:	4648      	mov	r0, r9
 80133f0:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 80133f2:	960d      	str	r6, [sp, #52]	@ 0x34
 80133f4:	f00f f99f 	bl	8022736 <memset>
 80133f8:	b15f      	cbz	r7, 8013412 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80133fa:	f108 3aff 	add.w	sl, r8, #4294967295
 80133fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013400:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013402:	b152      	cbz	r2, 801341a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013404:	8812      	ldrh	r2, [r2, #0]
 8013406:	b10a      	cbz	r2, 801340c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013408:	459a      	cmp	sl, r3
 801340a:	dc2e      	bgt.n	801346a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801340c:	2200      	movs	r2, #0
 801340e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013412:	4638      	mov	r0, r7
 8013414:	b023      	add	sp, #140	@ 0x8c
 8013416:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801341a:	9a08      	ldr	r2, [sp, #32]
 801341c:	2a00      	cmp	r2, #0
 801341e:	d0f5      	beq.n	801340c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013420:	7812      	ldrb	r2, [r2, #0]
 8013422:	e7f0      	b.n	8013406 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013424:	2d00      	cmp	r5, #0
 8013426:	d0ea      	beq.n	80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013428:	782a      	ldrb	r2, [r5, #0]
 801342a:	b142      	cbz	r2, 801343e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801342c:	2a25      	cmp	r2, #37	@ 0x25
 801342e:	d001      	beq.n	8013434 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013430:	459a      	cmp	sl, r3
 8013432:	dc08      	bgt.n	8013446 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013434:	f1bb 0f00 	cmp.w	fp, #0
 8013438:	d121      	bne.n	801347e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801343a:	2d00      	cmp	r5, #0
 801343c:	d0df      	beq.n	80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801343e:	782a      	ldrb	r2, [r5, #0]
 8013440:	f04f 0b00 	mov.w	fp, #0
 8013444:	e01d      	b.n	8013482 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013446:	f1bb 0f00 	cmp.w	fp, #0
 801344a:	d078      	beq.n	801353e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801344c:	f8bb 2000 	ldrh.w	r2, [fp]
 8013450:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013454:	f1bb 0f00 	cmp.w	fp, #0
 8013458:	d002      	beq.n	8013460 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801345a:	f10b 0202 	add.w	r2, fp, #2
 801345e:	9209      	str	r2, [sp, #36]	@ 0x24
 8013460:	b10d      	cbz	r5, 8013466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013462:	3501      	adds	r5, #1
 8013464:	9508      	str	r5, [sp, #32]
 8013466:	3301      	adds	r3, #1
 8013468:	930d      	str	r3, [sp, #52]	@ 0x34
 801346a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801346e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013470:	f1bb 0f00 	cmp.w	fp, #0
 8013474:	d0d6      	beq.n	8013424 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013476:	f8bb 2000 	ldrh.w	r2, [fp]
 801347a:	2a00      	cmp	r2, #0
 801347c:	d1d6      	bne.n	801342c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801347e:	f8bb 2000 	ldrh.w	r2, [fp]
 8013482:	2a00      	cmp	r2, #0
 8013484:	d0bb      	beq.n	80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013486:	459a      	cmp	sl, r3
 8013488:	ddb9      	ble.n	80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801348a:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 801348e:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8013492:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8013496:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 801349a:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 801349e:	960e      	str	r6, [sp, #56]	@ 0x38
 80134a0:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 80134a4:	960f      	str	r6, [sp, #60]	@ 0x3c
 80134a6:	f1bb 0f00 	cmp.w	fp, #0
 80134aa:	d002      	beq.n	80134b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80134ac:	f10b 0302 	add.w	r3, fp, #2
 80134b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80134b2:	b10d      	cbz	r5, 80134b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80134b4:	1c6b      	adds	r3, r5, #1
 80134b6:	9308      	str	r3, [sp, #32]
 80134b8:	ab0f      	add	r3, sp, #60	@ 0x3c
 80134ba:	9305      	str	r3, [sp, #20]
 80134bc:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 80134c0:	9304      	str	r3, [sp, #16]
 80134c2:	ab0e      	add	r3, sp, #56	@ 0x38
 80134c4:	9303      	str	r3, [sp, #12]
 80134c6:	ab0c      	add	r3, sp, #48	@ 0x30
 80134c8:	9302      	str	r3, [sp, #8]
 80134ca:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 80134ce:	9301      	str	r3, [sp, #4]
 80134d0:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 80134d4:	9300      	str	r3, [sp, #0]
 80134d6:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 80134da:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 80134de:	a908      	add	r1, sp, #32
 80134e0:	a809      	add	r0, sp, #36	@ 0x24
 80134e2:	f7ff fea8 	bl	8013236 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80134e6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80134e8:	2b00      	cmp	r3, #0
 80134ea:	bfbe      	ittt	lt
 80134ec:	6823      	ldrlt	r3, [r4, #0]
 80134ee:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80134f2:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80134f4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80134f6:	bfb8      	it	lt
 80134f8:	3404      	addlt	r4, #4
 80134fa:	2b00      	cmp	r3, #0
 80134fc:	bfb8      	it	lt
 80134fe:	6823      	ldrlt	r3, [r4, #0]
 8013500:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013504:	bfbe      	ittt	lt
 8013506:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801350a:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 801350c:	3404      	addlt	r4, #4
 801350e:	b1d9      	cbz	r1, 8013548 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013510:	880b      	ldrh	r3, [r1, #0]
 8013512:	2b69      	cmp	r3, #105	@ 0x69
 8013514:	d01f      	beq.n	8013556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013516:	d82f      	bhi.n	8013578 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013518:	2b58      	cmp	r3, #88	@ 0x58
 801351a:	d01c      	beq.n	8013556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801351c:	d818      	bhi.n	8013550 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801351e:	2b25      	cmp	r3, #37	@ 0x25
 8013520:	d034      	beq.n	801358c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013522:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013526:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013528:	f1bb 0f00 	cmp.w	fp, #0
 801352c:	f000 80b8 	beq.w	80136a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013530:	f8bb 5000 	ldrh.w	r5, [fp]
 8013534:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013538:	3301      	adds	r3, #1
 801353a:	930d      	str	r3, [sp, #52]	@ 0x34
 801353c:	e029      	b.n	8013592 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801353e:	b10d      	cbz	r5, 8013544 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013540:	782a      	ldrb	r2, [r5, #0]
 8013542:	e785      	b.n	8013450 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013544:	462a      	mov	r2, r5
 8013546:	e783      	b.n	8013450 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013548:	2a00      	cmp	r2, #0
 801354a:	d0ea      	beq.n	8013522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801354c:	7813      	ldrb	r3, [r2, #0]
 801354e:	e7e0      	b.n	8013512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013550:	3b63      	subs	r3, #99	@ 0x63
 8013552:	2b01      	cmp	r3, #1
 8013554:	d8e5      	bhi.n	8013522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013556:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801355a:	b329      	cbz	r1, 80135a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801355c:	880b      	ldrh	r3, [r1, #0]
 801355e:	2b69      	cmp	r3, #105	@ 0x69
 8013560:	d063      	beq.n	801362a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013562:	d825      	bhi.n	80135b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013564:	2b63      	cmp	r3, #99	@ 0x63
 8013566:	d038      	beq.n	80135da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013568:	2b64      	cmp	r3, #100	@ 0x64
 801356a:	d05e      	beq.n	801362a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801356c:	2b58      	cmp	r3, #88	@ 0x58
 801356e:	d07b      	beq.n	8013668 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013570:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8013574:	4625      	mov	r5, r4
 8013576:	e036      	b.n	80135e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013578:	2b73      	cmp	r3, #115	@ 0x73
 801357a:	d0ec      	beq.n	8013556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801357c:	d802      	bhi.n	8013584 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801357e:	2b6f      	cmp	r3, #111	@ 0x6f
 8013580:	d1cf      	bne.n	8013522 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013582:	e7e8      	b.n	8013556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013584:	2b75      	cmp	r3, #117	@ 0x75
 8013586:	d0e6      	beq.n	8013556 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013588:	2b78      	cmp	r3, #120	@ 0x78
 801358a:	e7f9      	b.n	8013580 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801358c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801358e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013592:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013594:	b10b      	cbz	r3, 801359a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013596:	3302      	adds	r3, #2
 8013598:	9309      	str	r3, [sp, #36]	@ 0x24
 801359a:	9b08      	ldr	r3, [sp, #32]
 801359c:	2b00      	cmp	r3, #0
 801359e:	f43f af2e 	beq.w	80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80135a2:	3301      	adds	r3, #1
 80135a4:	9308      	str	r3, [sp, #32]
 80135a6:	e72a      	b.n	80133fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80135a8:	2a00      	cmp	r2, #0
 80135aa:	d0e1      	beq.n	8013570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80135ac:	7813      	ldrb	r3, [r2, #0]
 80135ae:	e7d6      	b.n	801355e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80135b0:	2b73      	cmp	r3, #115	@ 0x73
 80135b2:	d036      	beq.n	8013622 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80135b4:	d807      	bhi.n	80135c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80135b6:	2b6f      	cmp	r3, #111	@ 0x6f
 80135b8:	d1da      	bne.n	8013570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80135ba:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80135bc:	1d25      	adds	r5, r4, #4
 80135be:	eba8 0202 	sub.w	r2, r8, r2
 80135c2:	2308      	movs	r3, #8
 80135c4:	e04a      	b.n	801365c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80135c6:	2b75      	cmp	r3, #117	@ 0x75
 80135c8:	d043      	beq.n	8013652 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80135ca:	2b78      	cmp	r3, #120	@ 0x78
 80135cc:	d1d0      	bne.n	8013570 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80135ce:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80135d0:	1d25      	adds	r5, r4, #4
 80135d2:	eba8 0202 	sub.w	r2, r8, r2
 80135d6:	2310      	movs	r3, #16
 80135d8:	e040      	b.n	801365c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80135da:	6823      	ldr	r3, [r4, #0]
 80135dc:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80135e0:	1d25      	adds	r5, r4, #4
 80135e2:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 80135e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80135e8:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80135ec:	2b00      	cmp	r3, #0
 80135ee:	d052      	beq.n	8013696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80135f0:	881a      	ldrh	r2, [r3, #0]
 80135f2:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80135f6:	a80d      	add	r0, sp, #52	@ 0x34
 80135f8:	9005      	str	r0, [sp, #20]
 80135fa:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 80135fe:	9004      	str	r0, [sp, #16]
 8013600:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8013602:	9003      	str	r0, [sp, #12]
 8013604:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8013608:	9002      	str	r0, [sp, #8]
 801360a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801360c:	9001      	str	r0, [sp, #4]
 801360e:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8013612:	9000      	str	r0, [sp, #0]
 8013614:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013618:	a810      	add	r0, sp, #64	@ 0x40
 801361a:	f7ff fd49 	bl	80130b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801361e:	462c      	mov	r4, r5
 8013620:	e7b7      	b.n	8013592 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013622:	6823      	ldr	r3, [r4, #0]
 8013624:	1d25      	adds	r5, r4, #4
 8013626:	9310      	str	r3, [sp, #64]	@ 0x40
 8013628:	e7dd      	b.n	80135e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801362a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801362c:	6820      	ldr	r0, [r4, #0]
 801362e:	eba8 0202 	sub.w	r2, r8, r2
 8013632:	230a      	movs	r3, #10
 8013634:	b292      	uxth	r2, r2
 8013636:	4649      	mov	r1, r9
 8013638:	f7ff fce4 	bl	8013004 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801363c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8013640:	2b2d      	cmp	r3, #45	@ 0x2d
 8013642:	f104 0504 	add.w	r5, r4, #4
 8013646:	d1ce      	bne.n	80135e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013648:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801364c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801364e:	3302      	adds	r3, #2
 8013650:	e7e9      	b.n	8013626 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013652:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8013654:	1d25      	adds	r5, r4, #4
 8013656:	eba8 0202 	sub.w	r2, r8, r2
 801365a:	230a      	movs	r3, #10
 801365c:	b292      	uxth	r2, r2
 801365e:	4649      	mov	r1, r9
 8013660:	6820      	ldr	r0, [r4, #0]
 8013662:	f7ff fcfb 	bl	801305c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8013666:	e7be      	b.n	80135e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013668:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801366a:	6820      	ldr	r0, [r4, #0]
 801366c:	eba8 0202 	sub.w	r2, r8, r2
 8013670:	b292      	uxth	r2, r2
 8013672:	2310      	movs	r3, #16
 8013674:	4649      	mov	r1, r9
 8013676:	f7ff fcf1 	bl	801305c <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801367a:	1d25      	adds	r5, r4, #4
 801367c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8013680:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013684:	2b00      	cmp	r3, #0
 8013686:	d0ae      	beq.n	80135e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013688:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 801368c:	2919      	cmp	r1, #25
 801368e:	d8f7      	bhi.n	8013680 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013690:	3b20      	subs	r3, #32
 8013692:	8013      	strh	r3, [r2, #0]
 8013694:	e7f4      	b.n	8013680 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013696:	9a08      	ldr	r2, [sp, #32]
 8013698:	2a00      	cmp	r2, #0
 801369a:	d0aa      	beq.n	80135f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801369c:	7812      	ldrb	r2, [r2, #0]
 801369e:	e7a8      	b.n	80135f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80136a0:	2d00      	cmp	r5, #0
 80136a2:	f43f af47 	beq.w	8013534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80136a6:	782d      	ldrb	r5, [r5, #0]
 80136a8:	e744      	b.n	8013534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080136aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80136aa:	b507      	push	{r0, r1, r2, lr}
 80136ac:	9300      	str	r3, [sp, #0]
 80136ae:	4613      	mov	r3, r2
 80136b0:	2200      	movs	r2, #0
 80136b2:	f7ff fe90 	bl	80133d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80136b6:	b003      	add	sp, #12
 80136b8:	f85d fb04 	ldr.w	pc, [sp], #4

080136bc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80136bc:	b40c      	push	{r2, r3}
 80136be:	b507      	push	{r0, r1, r2, lr}
 80136c0:	ab04      	add	r3, sp, #16
 80136c2:	f853 2b04 	ldr.w	r2, [r3], #4
 80136c6:	9301      	str	r3, [sp, #4]
 80136c8:	f7ff ffef 	bl	80136aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80136cc:	b003      	add	sp, #12
 80136ce:	f85d eb04 	ldr.w	lr, [sp], #4
 80136d2:	b002      	add	sp, #8
 80136d4:	4770      	bx	lr
	...

080136d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80136d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136dc:	b0c5      	sub	sp, #276	@ 0x114
 80136de:	2400      	movs	r4, #0
 80136e0:	af11      	add	r7, sp, #68	@ 0x44
 80136e2:	4606      	mov	r6, r0
 80136e4:	468a      	mov	sl, r1
 80136e6:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80136ea:	4621      	mov	r1, r4
 80136ec:	22c8      	movs	r2, #200	@ 0xc8
 80136ee:	4638      	mov	r0, r7
 80136f0:	f8dd b138 	ldr.w	fp, [sp, #312]	@ 0x138
 80136f4:	940d      	str	r4, [sp, #52]	@ 0x34
 80136f6:	f00f f81e 	bl	8022736 <memset>
 80136fa:	b16e      	cbz	r6, 8013718 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80136fc:	ed9f 5aa8 	vldr	s10, [pc, #672]	@ 80139a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8013700:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013702:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013704:	b162      	cbz	r2, 8013720 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8013706:	8812      	ldrh	r2, [r2, #0]
 8013708:	b11a      	cbz	r2, 8013712 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801370a:	f10a 31ff 	add.w	r1, sl, #4294967295
 801370e:	4299      	cmp	r1, r3
 8013710:	dc2e      	bgt.n	8013770 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8013712:	2200      	movs	r2, #0
 8013714:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8013718:	4630      	mov	r0, r6
 801371a:	b045      	add	sp, #276	@ 0x114
 801371c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013720:	9a08      	ldr	r2, [sp, #32]
 8013722:	2a00      	cmp	r2, #0
 8013724:	d0f5      	beq.n	8013712 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8013726:	7812      	ldrb	r2, [r2, #0]
 8013728:	e7ee      	b.n	8013708 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801372a:	2d00      	cmp	r5, #0
 801372c:	d0e8      	beq.n	8013700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801372e:	782a      	ldrb	r2, [r5, #0]
 8013730:	b142      	cbz	r2, 8013744 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8013732:	2a25      	cmp	r2, #37	@ 0x25
 8013734:	d001      	beq.n	801373a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8013736:	4299      	cmp	r1, r3
 8013738:	dc08      	bgt.n	801374c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801373a:	f1b8 0f00 	cmp.w	r8, #0
 801373e:	d121      	bne.n	8013784 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8013740:	2d00      	cmp	r5, #0
 8013742:	d0dd      	beq.n	8013700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8013744:	782a      	ldrb	r2, [r5, #0]
 8013746:	f04f 0800 	mov.w	r8, #0
 801374a:	e01d      	b.n	8013788 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 801374c:	f1b8 0f00 	cmp.w	r8, #0
 8013750:	d07f      	beq.n	8013852 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8013752:	f8b8 2000 	ldrh.w	r2, [r8]
 8013756:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801375a:	f1b8 0f00 	cmp.w	r8, #0
 801375e:	d002      	beq.n	8013766 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8013760:	f108 0202 	add.w	r2, r8, #2
 8013764:	9209      	str	r2, [sp, #36]	@ 0x24
 8013766:	b10d      	cbz	r5, 801376c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8013768:	3501      	adds	r5, #1
 801376a:	9508      	str	r5, [sp, #32]
 801376c:	3301      	adds	r3, #1
 801376e:	930d      	str	r3, [sp, #52]	@ 0x34
 8013770:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8013774:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013776:	f1b8 0f00 	cmp.w	r8, #0
 801377a:	d0d6      	beq.n	801372a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 801377c:	f8b8 2000 	ldrh.w	r2, [r8]
 8013780:	2a00      	cmp	r2, #0
 8013782:	d1d6      	bne.n	8013732 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8013784:	f8b8 2000 	ldrh.w	r2, [r8]
 8013788:	2a00      	cmp	r2, #0
 801378a:	d0b9      	beq.n	8013700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801378c:	4299      	cmp	r1, r3
 801378e:	ddb7      	ble.n	8013700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8013790:	2300      	movs	r3, #0
 8013792:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013796:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
 801379a:	f88d 302e 	strb.w	r3, [sp, #46]	@ 0x2e
 801379e:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
 80137a2:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
 80137a6:	930e      	str	r3, [sp, #56]	@ 0x38
 80137a8:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80137ac:	930f      	str	r3, [sp, #60]	@ 0x3c
 80137ae:	f1b8 0f00 	cmp.w	r8, #0
 80137b2:	d002      	beq.n	80137ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80137b4:	f108 0302 	add.w	r3, r8, #2
 80137b8:	9309      	str	r3, [sp, #36]	@ 0x24
 80137ba:	b10d      	cbz	r5, 80137c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80137bc:	1c6b      	adds	r3, r5, #1
 80137be:	9308      	str	r3, [sp, #32]
 80137c0:	ab0f      	add	r3, sp, #60	@ 0x3c
 80137c2:	9305      	str	r3, [sp, #20]
 80137c4:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 80137c8:	9304      	str	r3, [sp, #16]
 80137ca:	ab0e      	add	r3, sp, #56	@ 0x38
 80137cc:	9303      	str	r3, [sp, #12]
 80137ce:	ab0c      	add	r3, sp, #48	@ 0x30
 80137d0:	9302      	str	r3, [sp, #8]
 80137d2:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 80137d6:	9301      	str	r3, [sp, #4]
 80137d8:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 80137dc:	9300      	str	r3, [sp, #0]
 80137de:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 80137e2:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 80137e6:	a908      	add	r1, sp, #32
 80137e8:	a809      	add	r0, sp, #36	@ 0x24
 80137ea:	f7ff fd24 	bl	8013236 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80137ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80137f0:	2b00      	cmp	r3, #0
 80137f2:	da0b      	bge.n	801380c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80137f4:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80137f8:	edd3 7a00 	vldr	s15, [r3]
 80137fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013800:	3401      	adds	r4, #1
 8013802:	ee17 3a90 	vmov	r3, s15
 8013806:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801380a:	930e      	str	r3, [sp, #56]	@ 0x38
 801380c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801380e:	2b00      	cmp	r3, #0
 8013810:	da0b      	bge.n	801382a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8013812:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8013816:	edd3 7a00 	vldr	s15, [r3]
 801381a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801381e:	3401      	adds	r4, #1
 8013820:	ee17 3a90 	vmov	r3, s15
 8013824:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013828:	930f      	str	r3, [sp, #60]	@ 0x3c
 801382a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801382c:	b1b3      	cbz	r3, 801385c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801382e:	881a      	ldrh	r2, [r3, #0]
 8013830:	2a25      	cmp	r2, #37	@ 0x25
 8013832:	d018      	beq.n	8013866 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8013834:	2a66      	cmp	r2, #102	@ 0x66
 8013836:	d01c      	beq.n	8013872 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8013838:	e9cd 5808 	strd	r5, r8, [sp, #32]
 801383c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801383e:	f1b8 0f00 	cmp.w	r8, #0
 8013842:	f000 8136 	beq.w	8013ab2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3da>
 8013846:	f8b8 5000 	ldrh.w	r5, [r8]
 801384a:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801384e:	3301      	adds	r3, #1
 8013850:	e00d      	b.n	801386e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8013852:	b10d      	cbz	r5, 8013858 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8013854:	782a      	ldrb	r2, [r5, #0]
 8013856:	e77e      	b.n	8013756 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8013858:	462a      	mov	r2, r5
 801385a:	e77c      	b.n	8013756 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801385c:	9b08      	ldr	r3, [sp, #32]
 801385e:	2b00      	cmp	r3, #0
 8013860:	d0ea      	beq.n	8013838 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8013862:	781a      	ldrb	r2, [r3, #0]
 8013864:	e7e4      	b.n	8013830 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8013866:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013868:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801386c:	3302      	adds	r3, #2
 801386e:	930d      	str	r3, [sp, #52]	@ 0x34
 8013870:	e041      	b.n	80138f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8013872:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8013876:	edd3 7a00 	vldr	s15, [r3]
 801387a:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801387e:	9710      	str	r7, [sp, #64]	@ 0x40
 8013880:	3401      	adds	r4, #1
 8013882:	b923      	cbnz	r3, 801388e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8013884:	2301      	movs	r3, #1
 8013886:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 801388a:	2306      	movs	r3, #6
 801388c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801388e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013892:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013896:	bf48      	it	mi
 8013898:	eef1 7a67 	vnegmi.f32	s15, s15
 801389c:	eeb0 7ae7 	vabs.f32	s14, s15
 80138a0:	bf48      	it	mi
 80138a2:	232d      	movmi	r3, #45	@ 0x2d
 80138a4:	eeb4 7a45 	vcmp.f32	s14, s10
 80138a8:	bf48      	it	mi
 80138aa:	f8ad 3032 	strhmi.w	r3, [sp, #50]	@ 0x32
 80138ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80138b2:	dd2b      	ble.n	801390c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80138b4:	4b3b      	ldr	r3, [pc, #236]	@ (80139a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80138b6:	9311      	str	r3, [sp, #68]	@ 0x44
 80138b8:	2366      	movs	r3, #102	@ 0x66
 80138ba:	9312      	str	r3, [sp, #72]	@ 0x48
 80138bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80138be:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80138c2:	2b00      	cmp	r3, #0
 80138c4:	f000 80ef 	beq.w	8013aa6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3ce>
 80138c8:	881a      	ldrh	r2, [r3, #0]
 80138ca:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80138ce:	a80d      	add	r0, sp, #52	@ 0x34
 80138d0:	9005      	str	r0, [sp, #20]
 80138d2:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 80138d6:	9004      	str	r0, [sp, #16]
 80138d8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80138da:	9003      	str	r0, [sp, #12]
 80138dc:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 80138e0:	9002      	str	r0, [sp, #8]
 80138e2:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80138e4:	9001      	str	r0, [sp, #4]
 80138e6:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 80138ea:	9000      	str	r0, [sp, #0]
 80138ec:	e9cd a606 	strd	sl, r6, [sp, #24]
 80138f0:	a810      	add	r0, sp, #64	@ 0x40
 80138f2:	f7ff fbdd 	bl	80130b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80138f6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80138f8:	b10b      	cbz	r3, 80138fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80138fa:	3302      	adds	r3, #2
 80138fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80138fe:	9b08      	ldr	r3, [sp, #32]
 8013900:	2b00      	cmp	r3, #0
 8013902:	f43f aefd 	beq.w	8013700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8013906:	3301      	adds	r3, #1
 8013908:	9308      	str	r3, [sp, #32]
 801390a:	e6f9      	b.n	8013700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801390c:	eef4 7a67 	vcmp.f32	s15, s15
 8013910:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013914:	d63a      	bvs.n	801398c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8013916:	f10d 0846 	add.w	r8, sp, #70	@ 0x46
 801391a:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 801391e:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8013922:	eeb0 6a67 	vmov.f32	s12, s15
 8013926:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801392a:	eef0 5a47 	vmov.f32	s11, s14
 801392e:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8013932:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013936:	da2d      	bge.n	8013994 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8013938:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801393a:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 801393e:	2100      	movs	r1, #0
 8013940:	eef0 4a46 	vmov.f32	s9, s12
 8013944:	ebaa 0202 	sub.w	r2, sl, r2
 8013948:	eef4 6ac6 	vcmpe.f32	s13, s12
 801394c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013950:	b28b      	uxth	r3, r1
 8013952:	db2c      	blt.n	80139ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8013954:	1a50      	subs	r0, r2, r1
 8013956:	2800      	cmp	r0, #0
 8013958:	dd29      	ble.n	80139ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801395a:	3101      	adds	r1, #1
 801395c:	2964      	cmp	r1, #100	@ 0x64
 801395e:	d025      	beq.n	80139ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8013960:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013964:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8013968:	ee17 3a10 	vmov	r3, s14
 801396c:	2b09      	cmp	r3, #9
 801396e:	bfa8      	it	ge
 8013970:	2309      	movge	r3, #9
 8013972:	ee07 3a10 	vmov	s14, r3
 8013976:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801397a:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 801397e:	eee7 7a66 	vfms.f32	s15, s14, s13
 8013982:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8013986:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 801398a:	e7dd      	b.n	8013948 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 801398c:	4b06      	ldr	r3, [pc, #24]	@ (80139a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801398e:	9311      	str	r3, [sp, #68]	@ 0x44
 8013990:	236e      	movs	r3, #110	@ 0x6e
 8013992:	e792      	b.n	80138ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8013994:	ee66 6a87 	vmul.f32	s13, s13, s14
 8013998:	ee86 6a07 	vdiv.f32	s12, s12, s14
 801399c:	e7c7      	b.n	801392e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801399e:	bf00      	nop
 80139a0:	7f7fffff 	.word	0x7f7fffff
 80139a4:	006e0069 	.word	0x006e0069
 80139a8:	0061006e 	.word	0x0061006e
 80139ac:	2363      	movs	r3, #99	@ 0x63
 80139ae:	2a63      	cmp	r2, #99	@ 0x63
 80139b0:	bfd4      	ite	le
 80139b2:	ebc3 0202 	rsble	r2, r3, r2
 80139b6:	f1c3 0263 	rsbgt	r2, r3, #99	@ 0x63
 80139ba:	2a00      	cmp	r2, #0
 80139bc:	f103 0501 	add.w	r5, r3, #1
 80139c0:	dd57      	ble.n	8013a72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 80139c2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80139c4:	2900      	cmp	r1, #0
 80139c6:	dd2b      	ble.n	8013a20 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x348>
 80139c8:	f04f 0901 	mov.w	r9, #1
 80139cc:	230a      	movs	r3, #10
 80139ce:	f111 31ff 	adds.w	r1, r1, #4294967295
 80139d2:	d30c      	bcc.n	80139ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x316>
 80139d4:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80139d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80139dc:	ee17 0a10 	vmov	r0, s14
 80139e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80139e4:	fb03 0909 	mla	r9, r3, r9, r0
 80139e8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80139ec:	e7ef      	b.n	80139ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f6>
 80139ee:	910f      	str	r1, [sp, #60]	@ 0x3c
 80139f0:	230a      	movs	r3, #10
 80139f2:	b292      	uxth	r2, r2
 80139f4:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80139f8:	4648      	mov	r0, r9
 80139fa:	f7ff fb4d 	bl	8013098 <_ZN8touchgfx7Unicode4itoaElPtti>
 80139fe:	f1b9 0f01 	cmp.w	r9, #1
 8013a02:	dc0b      	bgt.n	8013a1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
 8013a04:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
 8013a08:	2b00      	cmp	r3, #0
 8013a0a:	bf0c      	ite	eq
 8013a0c:	2300      	moveq	r3, #0
 8013a0e:	232e      	movne	r3, #46	@ 0x2e
 8013a10:	aa44      	add	r2, sp, #272	@ 0x110
 8013a12:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013a16:	f825 3ccc 	strh.w	r3, [r5, #-204]
 8013a1a:	e015      	b.n	8013a48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x370>
 8013a1c:	232e      	movs	r3, #46	@ 0x2e
 8013a1e:	e7f7      	b.n	8013a10 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8013a20:	2a01      	cmp	r2, #1
 8013a22:	d026      	beq.n	8013a72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8013a24:	2b63      	cmp	r3, #99	@ 0x63
 8013a26:	d024      	beq.n	8013a72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8013a28:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
 8013a2c:	b30a      	cbz	r2, 8013a72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8013a2e:	aa44      	add	r2, sp, #272	@ 0x110
 8013a30:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8013a34:	222e      	movs	r2, #46	@ 0x2e
 8013a36:	f825 2ccc 	strh.w	r2, [r5, #-204]
 8013a3a:	3302      	adds	r3, #2
 8013a3c:	aa44      	add	r2, sp, #272	@ 0x110
 8013a3e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013a42:	2200      	movs	r2, #0
 8013a44:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8013a48:	eef4 7ae4 	vcmpe.f32	s15, s9
 8013a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013a50:	f6ff af34 	blt.w	80138bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8013a54:	2300      	movs	r3, #0
 8013a56:	f838 2b02 	ldrh.w	r2, [r8], #2
 8013a5a:	1c59      	adds	r1, r3, #1
 8013a5c:	b972      	cbnz	r2, 8013a7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8013a5e:	b29b      	uxth	r3, r3
 8013a60:	2130      	movs	r1, #48	@ 0x30
 8013a62:	b96b      	cbnz	r3, 8013a80 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a8>
 8013a64:	2331      	movs	r3, #49	@ 0x31
 8013a66:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8013a6a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a6c:	3b02      	subs	r3, #2
 8013a6e:	9310      	str	r3, [sp, #64]	@ 0x40
 8013a70:	e724      	b.n	80138bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8013a72:	ab44      	add	r3, sp, #272	@ 0x110
 8013a74:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8013a78:	2300      	movs	r3, #0
 8013a7a:	e7cc      	b.n	8013a16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33e>
 8013a7c:	460b      	mov	r3, r1
 8013a7e:	e7ea      	b.n	8013a56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8013a80:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8013a84:	f1a2 0030 	sub.w	r0, r2, #48	@ 0x30
 8013a88:	2808      	cmp	r0, #8
 8013a8a:	d806      	bhi.n	8013a9a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c2>
 8013a8c:	a944      	add	r1, sp, #272	@ 0x110
 8013a8e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8013a92:	3201      	adds	r2, #1
 8013a94:	f823 2ccc 	strh.w	r2, [r3, #-204]
 8013a98:	e710      	b.n	80138bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8013a9a:	2a39      	cmp	r2, #57	@ 0x39
 8013a9c:	bf08      	it	eq
 8013a9e:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8013aa2:	3b01      	subs	r3, #1
 8013aa4:	e7dd      	b.n	8013a62 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x38a>
 8013aa6:	9a08      	ldr	r2, [sp, #32]
 8013aa8:	2a00      	cmp	r2, #0
 8013aaa:	f43f af0e 	beq.w	80138ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8013aae:	7812      	ldrb	r2, [r2, #0]
 8013ab0:	e70b      	b.n	80138ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8013ab2:	2d00      	cmp	r5, #0
 8013ab4:	f43f aec9 	beq.w	801384a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 8013ab8:	782d      	ldrb	r5, [r5, #0]
 8013aba:	e6c6      	b.n	801384a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>

08013abc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8013abc:	b507      	push	{r0, r1, r2, lr}
 8013abe:	9300      	str	r3, [sp, #0]
 8013ac0:	4613      	mov	r3, r2
 8013ac2:	2200      	movs	r2, #0
 8013ac4:	f7ff fe08 	bl	80136d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8013ac8:	b003      	add	sp, #12
 8013aca:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013ad0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8013ad0:	4b01      	ldr	r3, [pc, #4]	@ (8013ad8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8013ad2:	6018      	str	r0, [r3, #0]
 8013ad4:	4770      	bx	lr
 8013ad6:	bf00      	nop
 8013ad8:	20002e1c 	.word	0x20002e1c

08013adc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8013adc:	4b06      	ldr	r3, [pc, #24]	@ (8013af8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8013ade:	881a      	ldrh	r2, [r3, #0]
 8013ae0:	4282      	cmp	r2, r0
 8013ae2:	d807      	bhi.n	8013af4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8013ae4:	4b05      	ldr	r3, [pc, #20]	@ (8013afc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8013ae6:	881b      	ldrh	r3, [r3, #0]
 8013ae8:	4413      	add	r3, r2
 8013aea:	4298      	cmp	r0, r3
 8013aec:	bfac      	ite	ge
 8013aee:	2000      	movge	r0, #0
 8013af0:	2001      	movlt	r0, #1
 8013af2:	4770      	bx	lr
 8013af4:	2000      	movs	r0, #0
 8013af6:	4770      	bx	lr
 8013af8:	20002e3c 	.word	0x20002e3c
 8013afc:	20002e40 	.word	0x20002e40

08013b00 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8013b00:	b508      	push	{r3, lr}
 8013b02:	4601      	mov	r1, r0
 8013b04:	f7ff ffea 	bl	8013adc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8013b08:	b118      	cbz	r0, 8013b12 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8013b0a:	4b02      	ldr	r3, [pc, #8]	@ (8013b14 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8013b0c:	681b      	ldr	r3, [r3, #0]
 8013b0e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8013b12:	bd08      	pop	{r3, pc}
 8013b14:	20002e20 	.word	0x20002e20

08013b18 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8013b18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013b1a:	4c24      	ldr	r4, [pc, #144]	@ (8013bac <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8013b1c:	6823      	ldr	r3, [r4, #0]
 8013b1e:	2b00      	cmp	r3, #0
 8013b20:	d042      	beq.n	8013ba8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013b22:	4a23      	ldr	r2, [pc, #140]	@ (8013bb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8013b24:	4d23      	ldr	r5, [pc, #140]	@ (8013bb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8013b26:	8811      	ldrh	r1, [r2, #0]
 8013b28:	f8b5 c000 	ldrh.w	ip, [r5]
 8013b2c:	4822      	ldr	r0, [pc, #136]	@ (8013bb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8013b2e:	4461      	add	r1, ip
 8013b30:	1c4a      	adds	r2, r1, #1
 8013b32:	f022 0201 	bic.w	r2, r2, #1
 8013b36:	008f      	lsls	r7, r1, #2
 8013b38:	0412      	lsls	r2, r2, #16
 8013b3a:	19de      	adds	r6, r3, r7
 8013b3c:	0c12      	lsrs	r2, r2, #16
 8013b3e:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8013b42:	6006      	str	r6, [r0, #0]
 8013b44:	4e1d      	ldr	r6, [pc, #116]	@ (8013bbc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8013b46:	19da      	adds	r2, r3, r7
 8013b48:	6032      	str	r2, [r6, #0]
 8013b4a:	220e      	movs	r2, #14
 8013b4c:	fb02 f20c 	mul.w	r2, r2, ip
 8013b50:	3203      	adds	r2, #3
 8013b52:	f022 0203 	bic.w	r2, r2, #3
 8013b56:	443a      	add	r2, r7
 8013b58:	4f19      	ldr	r7, [pc, #100]	@ (8013bc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8013b5a:	4413      	add	r3, r2
 8013b5c:	603b      	str	r3, [r7, #0]
 8013b5e:	4f19      	ldr	r7, [pc, #100]	@ (8013bc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8013b60:	2300      	movs	r3, #0
 8013b62:	803b      	strh	r3, [r7, #0]
 8013b64:	4f18      	ldr	r7, [pc, #96]	@ (8013bc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8013b66:	683f      	ldr	r7, [r7, #0]
 8013b68:	1aba      	subs	r2, r7, r2
 8013b6a:	4f18      	ldr	r7, [pc, #96]	@ (8013bcc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8013b6c:	603a      	str	r2, [r7, #0]
 8013b6e:	4a18      	ldr	r2, [pc, #96]	@ (8013bd0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8013b70:	469c      	mov	ip, r3
 8013b72:	8013      	strh	r3, [r2, #0]
 8013b74:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8013b78:	428b      	cmp	r3, r1
 8013b7a:	d10d      	bne.n	8013b98 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8013b7c:	882d      	ldrh	r5, [r5, #0]
 8013b7e:	6830      	ldr	r0, [r6, #0]
 8013b80:	2300      	movs	r3, #0
 8013b82:	240e      	movs	r4, #14
 8013b84:	429d      	cmp	r5, r3
 8013b86:	d90f      	bls.n	8013ba8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8013b88:	fb04 0203 	mla	r2, r4, r3, r0
 8013b8c:	3301      	adds	r3, #1
 8013b8e:	7b11      	ldrb	r1, [r2, #12]
 8013b90:	f36f 1145 	bfc	r1, #5, #1
 8013b94:	7311      	strb	r1, [r2, #12]
 8013b96:	e7f5      	b.n	8013b84 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8013b98:	6822      	ldr	r2, [r4, #0]
 8013b9a:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8013b9e:	6802      	ldr	r2, [r0, #0]
 8013ba0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8013ba4:	3301      	adds	r3, #1
 8013ba6:	e7e7      	b.n	8013b78 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8013ba8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013baa:	bf00      	nop
 8013bac:	20002e20 	.word	0x20002e20
 8013bb0:	20002e3c 	.word	0x20002e3c
 8013bb4:	20002e40 	.word	0x20002e40
 8013bb8:	20002e34 	.word	0x20002e34
 8013bbc:	20002e24 	.word	0x20002e24
 8013bc0:	20002e2c 	.word	0x20002e2c
 8013bc4:	20002e3e 	.word	0x20002e3e
 8013bc8:	20002e28 	.word	0x20002e28
 8013bcc:	20002e38 	.word	0x20002e38
 8013bd0:	20002e30 	.word	0x20002e30

08013bd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8013bd4:	4b06      	ldr	r3, [pc, #24]	@ (8013bf0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8013bd6:	681b      	ldr	r3, [r3, #0]
 8013bd8:	b943      	cbnz	r3, 8013bec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013bda:	b139      	cbz	r1, 8013bec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8013bdc:	4b05      	ldr	r3, [pc, #20]	@ (8013bf4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8013bde:	801a      	strh	r2, [r3, #0]
 8013be0:	4b05      	ldr	r3, [pc, #20]	@ (8013bf8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8013be2:	6019      	str	r1, [r3, #0]
 8013be4:	4b05      	ldr	r3, [pc, #20]	@ (8013bfc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8013be6:	6018      	str	r0, [r3, #0]
 8013be8:	f7ff bf96 	b.w	8013b18 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8013bec:	4770      	bx	lr
 8013bee:	bf00      	nop
 8013bf0:	20002e2c 	.word	0x20002e2c
 8013bf4:	20002e40 	.word	0x20002e40
 8013bf8:	20002e28 	.word	0x20002e28
 8013bfc:	20002e20 	.word	0x20002e20

08013c00 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8013c00:	b470      	push	{r4, r5, r6}
 8013c02:	4c07      	ldr	r4, [pc, #28]	@ (8013c20 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8013c04:	6826      	ldr	r6, [r4, #0]
 8013c06:	4605      	mov	r5, r0
 8013c08:	4610      	mov	r0, r2
 8013c0a:	9a03      	ldr	r2, [sp, #12]
 8013c0c:	b936      	cbnz	r6, 8013c1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8013c0e:	6025      	str	r5, [r4, #0]
 8013c10:	4c04      	ldr	r4, [pc, #16]	@ (8013c24 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8013c12:	8021      	strh	r1, [r4, #0]
 8013c14:	bc70      	pop	{r4, r5, r6}
 8013c16:	4619      	mov	r1, r3
 8013c18:	f7ff bfdc 	b.w	8013bd4 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8013c1c:	bc70      	pop	{r4, r5, r6}
 8013c1e:	4770      	bx	lr
 8013c20:	20002e44 	.word	0x20002e44
 8013c24:	20002e3c 	.word	0x20002e3c

08013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8013c28:	4a12      	ldr	r2, [pc, #72]	@ (8013c74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8013c2a:	8803      	ldrh	r3, [r0, #0]
 8013c2c:	8812      	ldrh	r2, [r2, #0]
 8013c2e:	4293      	cmp	r3, r2
 8013c30:	d207      	bcs.n	8013c42 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8013c32:	4a11      	ldr	r2, [pc, #68]	@ (8013c78 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8013c34:	6812      	ldr	r2, [r2, #0]
 8013c36:	2114      	movs	r1, #20
 8013c38:	fb01 2303 	mla	r3, r1, r3, r2
 8013c3c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8013c40:	4770      	bx	lr
 8013c42:	490e      	ldr	r1, [pc, #56]	@ (8013c7c <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8013c44:	8809      	ldrh	r1, [r1, #0]
 8013c46:	4411      	add	r1, r2
 8013c48:	428b      	cmp	r3, r1
 8013c4a:	da04      	bge.n	8013c56 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8013c4c:	1a9b      	subs	r3, r3, r2
 8013c4e:	4a0c      	ldr	r2, [pc, #48]	@ (8013c80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8013c50:	210e      	movs	r1, #14
 8013c52:	6812      	ldr	r2, [r2, #0]
 8013c54:	e7f0      	b.n	8013c38 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8013c56:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013c5a:	4293      	cmp	r3, r2
 8013c5c:	d108      	bne.n	8013c70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8013c5e:	4b09      	ldr	r3, [pc, #36]	@ (8013c84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8013c60:	781b      	ldrb	r3, [r3, #0]
 8013c62:	b91b      	cbnz	r3, 8013c6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8013c64:	4b08      	ldr	r3, [pc, #32]	@ (8013c88 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8013c66:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013c6a:	4770      	bx	lr
 8013c6c:	4b07      	ldr	r3, [pc, #28]	@ (8013c8c <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8013c6e:	e7fa      	b.n	8013c66 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8013c70:	2000      	movs	r0, #0
 8013c72:	4770      	bx	lr
 8013c74:	20002e3c 	.word	0x20002e3c
 8013c78:	20002e44 	.word	0x20002e44
 8013c7c:	20002e40 	.word	0x20002e40
 8013c80:	20002e24 	.word	0x20002e24
 8013c84:	20002db4 	.word	0x20002db4
 8013c88:	20002db6 	.word	0x20002db6
 8013c8c:	20002db8 	.word	0x20002db8

08013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8013c90:	4a12      	ldr	r2, [pc, #72]	@ (8013cdc <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8013c92:	8803      	ldrh	r3, [r0, #0]
 8013c94:	8812      	ldrh	r2, [r2, #0]
 8013c96:	4293      	cmp	r3, r2
 8013c98:	d207      	bcs.n	8013caa <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8013c9a:	4a11      	ldr	r2, [pc, #68]	@ (8013ce0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8013c9c:	6812      	ldr	r2, [r2, #0]
 8013c9e:	2114      	movs	r1, #20
 8013ca0:	fb01 2303 	mla	r3, r1, r3, r2
 8013ca4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8013ca8:	4770      	bx	lr
 8013caa:	490e      	ldr	r1, [pc, #56]	@ (8013ce4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8013cac:	8809      	ldrh	r1, [r1, #0]
 8013cae:	4411      	add	r1, r2
 8013cb0:	428b      	cmp	r3, r1
 8013cb2:	da04      	bge.n	8013cbe <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8013cb4:	1a9b      	subs	r3, r3, r2
 8013cb6:	4a0c      	ldr	r2, [pc, #48]	@ (8013ce8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8013cb8:	210e      	movs	r1, #14
 8013cba:	6812      	ldr	r2, [r2, #0]
 8013cbc:	e7f0      	b.n	8013ca0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8013cbe:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013cc2:	4293      	cmp	r3, r2
 8013cc4:	d108      	bne.n	8013cd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8013cc6:	4b09      	ldr	r3, [pc, #36]	@ (8013cec <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8013cc8:	781b      	ldrb	r3, [r3, #0]
 8013cca:	b91b      	cbnz	r3, 8013cd4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8013ccc:	4b08      	ldr	r3, [pc, #32]	@ (8013cf0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8013cce:	f9b3 0000 	ldrsh.w	r0, [r3]
 8013cd2:	4770      	bx	lr
 8013cd4:	4b07      	ldr	r3, [pc, #28]	@ (8013cf4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8013cd6:	e7fa      	b.n	8013cce <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8013cd8:	2000      	movs	r0, #0
 8013cda:	4770      	bx	lr
 8013cdc:	20002e3c 	.word	0x20002e3c
 8013ce0:	20002e44 	.word	0x20002e44
 8013ce4:	20002e40 	.word	0x20002e40
 8013ce8:	20002e24 	.word	0x20002e24
 8013cec:	20002db4 	.word	0x20002db4
 8013cf0:	20002db8 	.word	0x20002db8
 8013cf4:	20002db6 	.word	0x20002db6

08013cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8013cf8:	b530      	push	{r4, r5, lr}
 8013cfa:	4a22      	ldr	r2, [pc, #136]	@ (8013d84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8013cfc:	880b      	ldrh	r3, [r1, #0]
 8013cfe:	8812      	ldrh	r2, [r2, #0]
 8013d00:	4293      	cmp	r3, r2
 8013d02:	d213      	bcs.n	8013d2c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8013d04:	4a20      	ldr	r2, [pc, #128]	@ (8013d88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8013d06:	6812      	ldr	r2, [r2, #0]
 8013d08:	2114      	movs	r1, #20
 8013d0a:	fb01 2303 	mla	r3, r1, r3, r2
 8013d0e:	8a1a      	ldrh	r2, [r3, #16]
 8013d10:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8013d14:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8013d18:	8a5b      	ldrh	r3, [r3, #18]
 8013d1a:	8004      	strh	r4, [r0, #0]
 8013d1c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013d20:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8013d24:	8041      	strh	r1, [r0, #2]
 8013d26:	8082      	strh	r2, [r0, #4]
 8013d28:	80c3      	strh	r3, [r0, #6]
 8013d2a:	e024      	b.n	8013d76 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8013d2c:	4917      	ldr	r1, [pc, #92]	@ (8013d8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8013d2e:	8809      	ldrh	r1, [r1, #0]
 8013d30:	4411      	add	r1, r2
 8013d32:	428b      	cmp	r3, r1
 8013d34:	da10      	bge.n	8013d58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8013d36:	1a9b      	subs	r3, r3, r2
 8013d38:	220e      	movs	r2, #14
 8013d3a:	4353      	muls	r3, r2
 8013d3c:	4a14      	ldr	r2, [pc, #80]	@ (8013d90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8013d3e:	6811      	ldr	r1, [r2, #0]
 8013d40:	18ca      	adds	r2, r1, r3
 8013d42:	5ecd      	ldrsh	r5, [r1, r3]
 8013d44:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8013d48:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8013d4c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8013d50:	8005      	strh	r5, [r0, #0]
 8013d52:	8044      	strh	r4, [r0, #2]
 8013d54:	8081      	strh	r1, [r0, #4]
 8013d56:	e7e7      	b.n	8013d28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013d58:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013d5c:	4293      	cmp	r3, r2
 8013d5e:	d10b      	bne.n	8013d78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8013d60:	4b0c      	ldr	r3, [pc, #48]	@ (8013d94 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8013d62:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013d66:	4b0c      	ldr	r3, [pc, #48]	@ (8013d98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8013d68:	8081      	strh	r1, [r0, #4]
 8013d6a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d6e:	80c2      	strh	r2, [r0, #6]
 8013d70:	2300      	movs	r3, #0
 8013d72:	8003      	strh	r3, [r0, #0]
 8013d74:	8043      	strh	r3, [r0, #2]
 8013d76:	bd30      	pop	{r4, r5, pc}
 8013d78:	2300      	movs	r3, #0
 8013d7a:	8003      	strh	r3, [r0, #0]
 8013d7c:	8043      	strh	r3, [r0, #2]
 8013d7e:	8083      	strh	r3, [r0, #4]
 8013d80:	e7d2      	b.n	8013d28 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8013d82:	bf00      	nop
 8013d84:	20002e3c 	.word	0x20002e3c
 8013d88:	20002e44 	.word	0x20002e44
 8013d8c:	20002e40 	.word	0x20002e40
 8013d90:	20002e24 	.word	0x20002e24
 8013d94:	20002db0 	.word	0x20002db0
 8013d98:	20002db2 	.word	0x20002db2

08013d9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8013d9c:	4a17      	ldr	r2, [pc, #92]	@ (8013dfc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8013d9e:	8803      	ldrh	r3, [r0, #0]
 8013da0:	8812      	ldrh	r2, [r2, #0]
 8013da2:	4293      	cmp	r3, r2
 8013da4:	d213      	bcs.n	8013dce <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8013da6:	4a16      	ldr	r2, [pc, #88]	@ (8013e00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8013da8:	6812      	ldr	r2, [r2, #0]
 8013daa:	2114      	movs	r1, #20
 8013dac:	fb01 2303 	mla	r3, r1, r3, r2
 8013db0:	8a1a      	ldrh	r2, [r3, #16]
 8013db2:	8919      	ldrh	r1, [r3, #8]
 8013db4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8013db8:	428a      	cmp	r2, r1
 8013dba:	db1d      	blt.n	8013df8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013dbc:	8a58      	ldrh	r0, [r3, #18]
 8013dbe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013dc2:	895b      	ldrh	r3, [r3, #10]
 8013dc4:	4298      	cmp	r0, r3
 8013dc6:	bfac      	ite	ge
 8013dc8:	2000      	movge	r0, #0
 8013dca:	2001      	movlt	r0, #1
 8013dcc:	4770      	bx	lr
 8013dce:	490d      	ldr	r1, [pc, #52]	@ (8013e04 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8013dd0:	8809      	ldrh	r1, [r1, #0]
 8013dd2:	4411      	add	r1, r2
 8013dd4:	428b      	cmp	r3, r1
 8013dd6:	da0d      	bge.n	8013df4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8013dd8:	1a9b      	subs	r3, r3, r2
 8013dda:	4a0b      	ldr	r2, [pc, #44]	@ (8013e08 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8013ddc:	6812      	ldr	r2, [r2, #0]
 8013dde:	210e      	movs	r1, #14
 8013de0:	fb01 2303 	mla	r3, r1, r3, r2
 8013de4:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8013de8:	891a      	ldrh	r2, [r3, #8]
 8013dea:	4291      	cmp	r1, r2
 8013dec:	db04      	blt.n	8013df8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8013dee:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8013df2:	e7e6      	b.n	8013dc2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8013df4:	2000      	movs	r0, #0
 8013df6:	4770      	bx	lr
 8013df8:	2001      	movs	r0, #1
 8013dfa:	4770      	bx	lr
 8013dfc:	20002e3c 	.word	0x20002e3c
 8013e00:	20002e44 	.word	0x20002e44
 8013e04:	20002e40 	.word	0x20002e40
 8013e08:	20002e24 	.word	0x20002e24

08013e0c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8013e0c:	4a12      	ldr	r2, [pc, #72]	@ (8013e58 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8013e0e:	8803      	ldrh	r3, [r0, #0]
 8013e10:	8811      	ldrh	r1, [r2, #0]
 8013e12:	428b      	cmp	r3, r1
 8013e14:	d20b      	bcs.n	8013e2e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8013e16:	4a11      	ldr	r2, [pc, #68]	@ (8013e5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013e18:	6812      	ldr	r2, [r2, #0]
 8013e1a:	b112      	cbz	r2, 8013e22 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8013e1c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013e20:	b9c0      	cbnz	r0, 8013e54 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8013e22:	4a0f      	ldr	r2, [pc, #60]	@ (8013e60 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8013e24:	6811      	ldr	r1, [r2, #0]
 8013e26:	2214      	movs	r2, #20
 8013e28:	4353      	muls	r3, r2
 8013e2a:	58c8      	ldr	r0, [r1, r3]
 8013e2c:	4770      	bx	lr
 8013e2e:	4a0d      	ldr	r2, [pc, #52]	@ (8013e64 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8013e30:	8812      	ldrh	r2, [r2, #0]
 8013e32:	440a      	add	r2, r1
 8013e34:	4293      	cmp	r3, r2
 8013e36:	da04      	bge.n	8013e42 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8013e38:	4a08      	ldr	r2, [pc, #32]	@ (8013e5c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8013e3a:	6812      	ldr	r2, [r2, #0]
 8013e3c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8013e40:	4770      	bx	lr
 8013e42:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8013e46:	4293      	cmp	r3, r2
 8013e48:	d103      	bne.n	8013e52 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8013e4a:	4b07      	ldr	r3, [pc, #28]	@ (8013e68 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8013e4c:	681b      	ldr	r3, [r3, #0]
 8013e4e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8013e50:	4770      	bx	lr
 8013e52:	2000      	movs	r0, #0
 8013e54:	4770      	bx	lr
 8013e56:	bf00      	nop
 8013e58:	20002e3c 	.word	0x20002e3c
 8013e5c:	20002e20 	.word	0x20002e20
 8013e60:	20002e44 	.word	0x20002e44
 8013e64:	20002e40 	.word	0x20002e40
 8013e68:	20002dbc 	.word	0x20002dbc

08013e6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8013e6c:	4b24      	ldr	r3, [pc, #144]	@ (8013f00 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8013e6e:	8802      	ldrh	r2, [r0, #0]
 8013e70:	8818      	ldrh	r0, [r3, #0]
 8013e72:	4282      	cmp	r2, r0
 8013e74:	d221      	bcs.n	8013eba <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8013e76:	4b23      	ldr	r3, [pc, #140]	@ (8013f04 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8013e78:	6819      	ldr	r1, [r3, #0]
 8013e7a:	2314      	movs	r3, #20
 8013e7c:	fb03 1302 	mla	r3, r3, r2, r1
 8013e80:	6858      	ldr	r0, [r3, #4]
 8013e82:	2800      	cmp	r0, #0
 8013e84:	d03a      	beq.n	8013efc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013e86:	4920      	ldr	r1, [pc, #128]	@ (8013f08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013e88:	6809      	ldr	r1, [r1, #0]
 8013e8a:	2900      	cmp	r1, #0
 8013e8c:	d036      	beq.n	8013efc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013e8e:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8013e92:	2900      	cmp	r1, #0
 8013e94:	d032      	beq.n	8013efc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8013e96:	891a      	ldrh	r2, [r3, #8]
 8013e98:	8958      	ldrh	r0, [r3, #10]
 8013e9a:	4350      	muls	r0, r2
 8013e9c:	7c5a      	ldrb	r2, [r3, #17]
 8013e9e:	7cdb      	ldrb	r3, [r3, #19]
 8013ea0:	0952      	lsrs	r2, r2, #5
 8013ea2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013ea6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8013eaa:	2b0b      	cmp	r3, #11
 8013eac:	bf18      	it	ne
 8013eae:	0040      	lslne	r0, r0, #1
 8013eb0:	3003      	adds	r0, #3
 8013eb2:	f020 0003 	bic.w	r0, r0, #3
 8013eb6:	4408      	add	r0, r1
 8013eb8:	4770      	bx	lr
 8013eba:	4b14      	ldr	r3, [pc, #80]	@ (8013f0c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8013ebc:	881b      	ldrh	r3, [r3, #0]
 8013ebe:	4403      	add	r3, r0
 8013ec0:	429a      	cmp	r2, r3
 8013ec2:	da1a      	bge.n	8013efa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013ec4:	4b12      	ldr	r3, [pc, #72]	@ (8013f10 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8013ec6:	681b      	ldr	r3, [r3, #0]
 8013ec8:	1a10      	subs	r0, r2, r0
 8013eca:	210e      	movs	r1, #14
 8013ecc:	fb01 3000 	mla	r0, r1, r0, r3
 8013ed0:	7b03      	ldrb	r3, [r0, #12]
 8013ed2:	f003 031f 	and.w	r3, r3, #31
 8013ed6:	2b0b      	cmp	r3, #11
 8013ed8:	d10b      	bne.n	8013ef2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8013eda:	8903      	ldrh	r3, [r0, #8]
 8013edc:	8940      	ldrh	r0, [r0, #10]
 8013ede:	4358      	muls	r0, r3
 8013ee0:	4b09      	ldr	r3, [pc, #36]	@ (8013f08 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8013ee2:	6819      	ldr	r1, [r3, #0]
 8013ee4:	3003      	adds	r0, #3
 8013ee6:	f020 0303 	bic.w	r3, r0, #3
 8013eea:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8013eee:	4418      	add	r0, r3
 8013ef0:	4770      	bx	lr
 8013ef2:	2b0d      	cmp	r3, #13
 8013ef4:	d101      	bne.n	8013efa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8013ef6:	300d      	adds	r0, #13
 8013ef8:	4770      	bx	lr
 8013efa:	2000      	movs	r0, #0
 8013efc:	4770      	bx	lr
 8013efe:	bf00      	nop
 8013f00:	20002e3c 	.word	0x20002e3c
 8013f04:	20002e44 	.word	0x20002e44
 8013f08:	20002e20 	.word	0x20002e20
 8013f0c:	20002e40 	.word	0x20002e40
 8013f10:	20002e24 	.word	0x20002e24

08013f14 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8013f14:	b510      	push	{r4, lr}
 8013f16:	4b1f      	ldr	r3, [pc, #124]	@ (8013f94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8013f18:	8802      	ldrh	r2, [r0, #0]
 8013f1a:	881b      	ldrh	r3, [r3, #0]
 8013f1c:	429a      	cmp	r2, r3
 8013f1e:	d21a      	bcs.n	8013f56 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8013f20:	4b1d      	ldr	r3, [pc, #116]	@ (8013f98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8013f22:	681b      	ldr	r3, [r3, #0]
 8013f24:	2114      	movs	r1, #20
 8013f26:	fb01 3102 	mla	r1, r1, r2, r3
 8013f2a:	7c4b      	ldrb	r3, [r1, #17]
 8013f2c:	0958      	lsrs	r0, r3, #5
 8013f2e:	7ccb      	ldrb	r3, [r1, #19]
 8013f30:	491a      	ldr	r1, [pc, #104]	@ (8013f9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8013f32:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8013f36:	6809      	ldr	r1, [r1, #0]
 8013f38:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8013f3c:	b2d8      	uxtb	r0, r3
 8013f3e:	b149      	cbz	r1, 8013f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013f40:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8013f44:	b132      	cbz	r2, 8013f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013f46:	2b0e      	cmp	r3, #14
 8013f48:	d021      	beq.n	8013f8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8013f4a:	280f      	cmp	r0, #15
 8013f4c:	d01d      	beq.n	8013f8a <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8013f4e:	2810      	cmp	r0, #16
 8013f50:	bf08      	it	eq
 8013f52:	2002      	moveq	r0, #2
 8013f54:	bd10      	pop	{r4, pc}
 8013f56:	4912      	ldr	r1, [pc, #72]	@ (8013fa0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8013f58:	8809      	ldrh	r1, [r1, #0]
 8013f5a:	4419      	add	r1, r3
 8013f5c:	428a      	cmp	r2, r1
 8013f5e:	da09      	bge.n	8013f74 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8013f60:	1ad3      	subs	r3, r2, r3
 8013f62:	4a10      	ldr	r2, [pc, #64]	@ (8013fa4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8013f64:	6812      	ldr	r2, [r2, #0]
 8013f66:	210e      	movs	r1, #14
 8013f68:	fb01 2303 	mla	r3, r1, r3, r2
 8013f6c:	7b18      	ldrb	r0, [r3, #12]
 8013f6e:	f000 001f 	and.w	r0, r0, #31
 8013f72:	e7ef      	b.n	8013f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013f74:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8013f78:	429a      	cmp	r2, r3
 8013f7a:	d108      	bne.n	8013f8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8013f7c:	f7f4 fc0c 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 8013f80:	6803      	ldr	r3, [r0, #0]
 8013f82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013f86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013f88:	4718      	bx	r3
 8013f8a:	2001      	movs	r0, #1
 8013f8c:	e7e2      	b.n	8013f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013f8e:	2000      	movs	r0, #0
 8013f90:	e7e0      	b.n	8013f54 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8013f92:	bf00      	nop
 8013f94:	20002e3c 	.word	0x20002e3c
 8013f98:	20002e44 	.word	0x20002e44
 8013f9c:	20002e20 	.word	0x20002e20
 8013fa0:	20002e40 	.word	0x20002e40
 8013fa4:	20002e24 	.word	0x20002e24

08013fa8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8013fa8:	2010      	movs	r0, #16
 8013faa:	4770      	bx	lr

08013fac <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8013fac:	2000      	movs	r0, #0
 8013fae:	4770      	bx	lr

08013fb0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8013fb0:	4b02      	ldr	r3, [pc, #8]	@ (8013fbc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8013fb2:	8818      	ldrh	r0, [r3, #0]
 8013fb4:	0040      	lsls	r0, r0, #1
 8013fb6:	b280      	uxth	r0, r0
 8013fb8:	4770      	bx	lr
 8013fba:	bf00      	nop
 8013fbc:	20002db6 	.word	0x20002db6

08013fc0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8013fc0:	2bff      	cmp	r3, #255	@ 0xff
 8013fc2:	d05e      	beq.n	8014082 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8013fc4:	2a0b      	cmp	r2, #11
 8013fc6:	d058      	beq.n	801407a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8013fc8:	d80e      	bhi.n	8013fe8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8013fca:	2a03      	cmp	r2, #3
 8013fcc:	d04d      	beq.n	801406a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8013fce:	d804      	bhi.n	8013fda <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8013fd0:	2a01      	cmp	r2, #1
 8013fd2:	d04c      	beq.n	801406e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8013fd4:	d94d      	bls.n	8014072 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8013fd6:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8013fd8:	e031      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013fda:	2a09      	cmp	r2, #9
 8013fdc:	d04d      	beq.n	801407a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8013fde:	d84a      	bhi.n	8014076 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8013fe0:	2a08      	cmp	r2, #8
 8013fe2:	d048      	beq.n	8014076 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8013fe4:	2300      	movs	r3, #0
 8013fe6:	e02a      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8013fe8:	2a2f      	cmp	r2, #47	@ 0x2f
 8013fea:	d02c      	beq.n	8014046 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8013fec:	d811      	bhi.n	8014012 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8013fee:	2a2d      	cmp	r2, #45	@ 0x2d
 8013ff0:	d018      	beq.n	8014024 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8013ff2:	d831      	bhi.n	8014058 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8013ff4:	2a2c      	cmp	r2, #44	@ 0x2c
 8013ff6:	d1f5      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8013ff8:	684a      	ldr	r2, [r1, #4]
 8013ffa:	7813      	ldrb	r3, [r2, #0]
 8013ffc:	7852      	ldrb	r2, [r2, #1]
 8013ffe:	2a00      	cmp	r2, #0
 8014000:	d1f0      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014002:	2b01      	cmp	r3, #1
 8014004:	d01d      	beq.n	8014042 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014006:	2b00      	cmp	r3, #0
 8014008:	d02d      	beq.n	8014066 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801400a:	2b02      	cmp	r3, #2
 801400c:	d1ea      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801400e:	68c3      	ldr	r3, [r0, #12]
 8014010:	e015      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014012:	2a31      	cmp	r2, #49	@ 0x31
 8014014:	d004      	beq.n	8014020 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8014016:	d332      	bcc.n	801407e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8014018:	2a32      	cmp	r2, #50	@ 0x32
 801401a:	d030      	beq.n	801407e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801401c:	2a33      	cmp	r2, #51	@ 0x33
 801401e:	d1e1      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014020:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8014022:	e00c      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014024:	684a      	ldr	r2, [r1, #4]
 8014026:	7813      	ldrb	r3, [r2, #0]
 8014028:	7852      	ldrb	r2, [r2, #1]
 801402a:	2a00      	cmp	r2, #0
 801402c:	d1da      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801402e:	2b01      	cmp	r3, #1
 8014030:	d004      	beq.n	801403c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8014032:	d30f      	bcc.n	8014054 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8014034:	2b02      	cmp	r3, #2
 8014036:	d1d5      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014038:	6943      	ldr	r3, [r0, #20]
 801403a:	e000      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801403c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 801403e:	4618      	mov	r0, r3
 8014040:	4770      	bx	lr
 8014042:	69c3      	ldr	r3, [r0, #28]
 8014044:	e7fb      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014046:	684b      	ldr	r3, [r1, #4]
 8014048:	781a      	ldrb	r2, [r3, #0]
 801404a:	785b      	ldrb	r3, [r3, #1]
 801404c:	2b00      	cmp	r3, #0
 801404e:	d1c9      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014050:	2a00      	cmp	r2, #0
 8014052:	d1f4      	bne.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014054:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8014056:	e7f2      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014058:	684b      	ldr	r3, [r1, #4]
 801405a:	781a      	ldrb	r2, [r3, #0]
 801405c:	785b      	ldrb	r3, [r3, #1]
 801405e:	2b00      	cmp	r3, #0
 8014060:	d1c0      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014062:	2a00      	cmp	r2, #0
 8014064:	d1eb      	bne.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014066:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8014068:	e7e9      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801406a:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 801406c:	e7e7      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801406e:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8014070:	e7e5      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014072:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8014074:	e7e3      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014076:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8014078:	e7e1      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801407a:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 801407c:	e7df      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801407e:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8014080:	e7dd      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014082:	2a0b      	cmp	r2, #11
 8014084:	d059      	beq.n	801413a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8014086:	d80e      	bhi.n	80140a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8014088:	2a03      	cmp	r2, #3
 801408a:	d050      	beq.n	801412e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 801408c:	d804      	bhi.n	8014098 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 801408e:	2a01      	cmp	r2, #1
 8014090:	d04f      	beq.n	8014132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8014092:	d950      	bls.n	8014136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8014094:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8014096:	e7d2      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014098:	2a09      	cmp	r2, #9
 801409a:	d04e      	beq.n	801413a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801409c:	d801      	bhi.n	80140a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 801409e:	2a08      	cmp	r2, #8
 80140a0:	d1a0      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80140a2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 80140a4:	e7cb      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80140a6:	2a2f      	cmp	r2, #47	@ 0x2f
 80140a8:	d02d      	beq.n	8014106 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 80140aa:	d811      	bhi.n	80140d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80140ac:	2a2d      	cmp	r2, #45	@ 0x2d
 80140ae:	d018      	beq.n	80140e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 80140b0:	d833      	bhi.n	801411a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 80140b2:	2a2c      	cmp	r2, #44	@ 0x2c
 80140b4:	d196      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80140b6:	684a      	ldr	r2, [r1, #4]
 80140b8:	7813      	ldrb	r3, [r2, #0]
 80140ba:	7852      	ldrb	r2, [r2, #1]
 80140bc:	2a00      	cmp	r2, #0
 80140be:	d191      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80140c0:	2b01      	cmp	r3, #1
 80140c2:	d01e      	beq.n	8014102 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80140c4:	2b00      	cmp	r3, #0
 80140c6:	d030      	beq.n	801412a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 80140c8:	2b02      	cmp	r3, #2
 80140ca:	d18b      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80140cc:	6903      	ldr	r3, [r0, #16]
 80140ce:	e7b6      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80140d0:	2a31      	cmp	r2, #49	@ 0x31
 80140d2:	d004      	beq.n	80140de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 80140d4:	d333      	bcc.n	801413e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80140d6:	2a32      	cmp	r2, #50	@ 0x32
 80140d8:	d031      	beq.n	801413e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80140da:	2a33      	cmp	r2, #51	@ 0x33
 80140dc:	d182      	bne.n	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80140de:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80140e0:	e7ad      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80140e2:	684a      	ldr	r2, [r1, #4]
 80140e4:	7813      	ldrb	r3, [r2, #0]
 80140e6:	7852      	ldrb	r2, [r2, #1]
 80140e8:	2a00      	cmp	r2, #0
 80140ea:	f47f af7b 	bne.w	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80140ee:	2b01      	cmp	r3, #1
 80140f0:	d005      	beq.n	80140fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80140f2:	d310      	bcc.n	8014116 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 80140f4:	2b02      	cmp	r3, #2
 80140f6:	f47f af75 	bne.w	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80140fa:	6983      	ldr	r3, [r0, #24]
 80140fc:	e79f      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80140fe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8014100:	e79d      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014102:	6a03      	ldr	r3, [r0, #32]
 8014104:	e79b      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014106:	684b      	ldr	r3, [r1, #4]
 8014108:	781a      	ldrb	r2, [r3, #0]
 801410a:	785b      	ldrb	r3, [r3, #1]
 801410c:	2b00      	cmp	r3, #0
 801410e:	f47f af69 	bne.w	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014112:	2a00      	cmp	r2, #0
 8014114:	d193      	bne.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014116:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8014118:	e791      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801411a:	684b      	ldr	r3, [r1, #4]
 801411c:	781a      	ldrb	r2, [r3, #0]
 801411e:	785b      	ldrb	r3, [r3, #1]
 8014120:	2b00      	cmp	r3, #0
 8014122:	f47f af5f 	bne.w	8013fe4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014126:	2a00      	cmp	r2, #0
 8014128:	d189      	bne.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801412a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 801412c:	e787      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801412e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8014130:	e785      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014132:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8014134:	e783      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014136:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8014138:	e781      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801413a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 801413c:	e77f      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801413e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8014140:	e77d      	b.n	801403e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08014142 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014142:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014146:	b087      	sub	sp, #28
 8014148:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801414a:	9205      	str	r2, [sp, #20]
 801414c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014150:	9202      	str	r2, [sp, #8]
 8014152:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014156:	9101      	str	r1, [sp, #4]
 8014158:	6841      	ldr	r1, [r0, #4]
 801415a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801415e:	fb01 2404 	mla	r4, r1, r4, r2
 8014162:	6802      	ldr	r2, [r0, #0]
 8014164:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014168:	f8de 2000 	ldr.w	r2, [lr]
 801416c:	9203      	str	r2, [sp, #12]
 801416e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014172:	3204      	adds	r2, #4
 8014174:	9204      	str	r2, [sp, #16]
 8014176:	9a02      	ldr	r2, [sp, #8]
 8014178:	43d6      	mvns	r6, r2
 801417a:	b2f6      	uxtb	r6, r6
 801417c:	9a01      	ldr	r2, [sp, #4]
 801417e:	2a00      	cmp	r2, #0
 8014180:	dc03      	bgt.n	801418a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014182:	9a05      	ldr	r2, [sp, #20]
 8014184:	2a00      	cmp	r2, #0
 8014186:	f340 8129 	ble.w	80143dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801418a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801418c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014190:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014194:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014198:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801419a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801419e:	2b00      	cmp	r3, #0
 80141a0:	dd0e      	ble.n	80141c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80141a2:	1408      	asrs	r0, r1, #16
 80141a4:	d405      	bmi.n	80141b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80141a6:	4560      	cmp	r0, ip
 80141a8:	da03      	bge.n	80141b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80141aa:	1410      	asrs	r0, r2, #16
 80141ac:	d401      	bmi.n	80141b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80141ae:	42b8      	cmp	r0, r7
 80141b0:	db07      	blt.n	80141c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80141b2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80141b4:	4401      	add	r1, r0
 80141b6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80141b8:	3b01      	subs	r3, #1
 80141ba:	4402      	add	r2, r0
 80141bc:	3402      	adds	r4, #2
 80141be:	e7ee      	b.n	801419e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80141c0:	d071      	beq.n	80142a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80141c2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80141c4:	1e58      	subs	r0, r3, #1
 80141c6:	fb05 1500 	mla	r5, r5, r0, r1
 80141ca:	142d      	asrs	r5, r5, #16
 80141cc:	d45f      	bmi.n	801428e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80141ce:	4565      	cmp	r5, ip
 80141d0:	da5d      	bge.n	801428e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80141d2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80141d4:	fb05 2000 	mla	r0, r5, r0, r2
 80141d8:	1400      	asrs	r0, r0, #16
 80141da:	d458      	bmi.n	801428e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80141dc:	42b8      	cmp	r0, r7
 80141de:	da56      	bge.n	801428e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80141e0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80141e4:	4699      	mov	r9, r3
 80141e6:	46a2      	mov	sl, r4
 80141e8:	f1b9 0f00 	cmp.w	r9, #0
 80141ec:	dd57      	ble.n	801429e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80141ee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80141f2:	9803      	ldr	r0, [sp, #12]
 80141f4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80141f8:	140d      	asrs	r5, r1, #16
 80141fa:	fb07 000c 	mla	r0, r7, ip, r0
 80141fe:	f109 39ff 	add.w	r9, r9, #4294967295
 8014202:	5d40      	ldrb	r0, [r0, r5]
 8014204:	9d04      	ldr	r5, [sp, #16]
 8014206:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801420a:	f8ba 5000 	ldrh.w	r5, [sl]
 801420e:	122f      	asrs	r7, r5, #8
 8014210:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014214:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014218:	fb17 f706 	smulbb	r7, r7, r6
 801421c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014220:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014224:	00ed      	lsls	r5, r5, #3
 8014226:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801422a:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801422e:	10c7      	asrs	r7, r0, #3
 8014230:	b2ed      	uxtb	r5, r5
 8014232:	00c0      	lsls	r0, r0, #3
 8014234:	fb18 f806 	smulbb	r8, r8, r6
 8014238:	fb15 f506 	smulbb	r5, r5, r6
 801423c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014240:	b2c0      	uxtb	r0, r0
 8014242:	fa1f fc8c 	uxth.w	ip, ip
 8014246:	fb07 870b 	mla	r7, r7, fp, r8
 801424a:	fb00 500b 	mla	r0, r0, fp, r5
 801424e:	b280      	uxth	r0, r0
 8014250:	b2bf      	uxth	r7, r7
 8014252:	f10c 0501 	add.w	r5, ip, #1
 8014256:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801425a:	f107 0801 	add.w	r8, r7, #1
 801425e:	1c45      	adds	r5, r0, #1
 8014260:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014264:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014268:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801426a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801426e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014272:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014276:	ea45 0c0c 	orr.w	ip, r5, ip
 801427a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801427e:	4401      	add	r1, r0
 8014280:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014282:	ea4c 0c08 	orr.w	ip, ip, r8
 8014286:	f82a cb02 	strh.w	ip, [sl], #2
 801428a:	4402      	add	r2, r0
 801428c:	e7ac      	b.n	80141e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801428e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014292:	f04f 0800 	mov.w	r8, #0
 8014296:	eb03 0008 	add.w	r0, r3, r8
 801429a:	2800      	cmp	r0, #0
 801429c:	dc41      	bgt.n	8014322 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801429e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80142a2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80142a6:	9b01      	ldr	r3, [sp, #4]
 80142a8:	2b00      	cmp	r3, #0
 80142aa:	f340 8097 	ble.w	80143dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80142ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80142b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80142b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80142ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80142bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80142c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80142c8:	eef0 6a62 	vmov.f32	s13, s5
 80142cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80142d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80142d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80142d8:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80142dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80142e0:	eef0 6a43 	vmov.f32	s13, s6
 80142e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80142e8:	ee12 2a90 	vmov	r2, s5
 80142ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80142f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80142f4:	ee13 2a10 	vmov	r2, s6
 80142f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80142fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80142fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8014300:	9314      	str	r3, [sp, #80]	@ 0x50
 8014302:	9b01      	ldr	r3, [sp, #4]
 8014304:	9a05      	ldr	r2, [sp, #20]
 8014306:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801430a:	3b01      	subs	r3, #1
 801430c:	9301      	str	r3, [sp, #4]
 801430e:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8014312:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014314:	eeb0 3a67 	vmov.f32	s6, s15
 8014318:	bf08      	it	eq
 801431a:	4613      	moveq	r3, r2
 801431c:	eef0 2a47 	vmov.f32	s5, s14
 8014320:	e72c      	b.n	801417c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014322:	140f      	asrs	r7, r1, #16
 8014324:	d453      	bmi.n	80143ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014326:	f8de 5008 	ldr.w	r5, [lr, #8]
 801432a:	42bd      	cmp	r5, r7
 801432c:	dd4f      	ble.n	80143ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801432e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014332:	d44c      	bmi.n	80143ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014334:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014338:	4560      	cmp	r0, ip
 801433a:	dd48      	ble.n	80143ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801433c:	9803      	ldr	r0, [sp, #12]
 801433e:	b22d      	sxth	r5, r5
 8014340:	fb0c 0505 	mla	r5, ip, r5, r0
 8014344:	5de8      	ldrb	r0, [r5, r7]
 8014346:	9d04      	ldr	r5, [sp, #16]
 8014348:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801434c:	f06f 0501 	mvn.w	r5, #1
 8014350:	fb05 fb08 	mul.w	fp, r5, r8
 8014354:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014358:	f834 500b 	ldrh.w	r5, [r4, fp]
 801435c:	122f      	asrs	r7, r5, #8
 801435e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014362:	fb17 f706 	smulbb	r7, r7, r6
 8014366:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801436a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801436e:	00ed      	lsls	r5, r5, #3
 8014370:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014374:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014378:	10c7      	asrs	r7, r0, #3
 801437a:	b2ed      	uxtb	r5, r5
 801437c:	00c0      	lsls	r0, r0, #3
 801437e:	fb19 f906 	smulbb	r9, r9, r6
 8014382:	fb15 f506 	smulbb	r5, r5, r6
 8014386:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801438a:	b2c0      	uxtb	r0, r0
 801438c:	fa1f fc8c 	uxth.w	ip, ip
 8014390:	fb07 970a 	mla	r7, r7, sl, r9
 8014394:	fb00 500a 	mla	r0, r0, sl, r5
 8014398:	b2bf      	uxth	r7, r7
 801439a:	b280      	uxth	r0, r0
 801439c:	f10c 0501 	add.w	r5, ip, #1
 80143a0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80143a4:	f107 0901 	add.w	r9, r7, #1
 80143a8:	1c45      	adds	r5, r0, #1
 80143aa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80143ae:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80143b2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80143b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80143ba:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80143be:	ea45 0c0c 	orr.w	ip, r5, ip
 80143c2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80143c6:	ea4c 0c09 	orr.w	ip, ip, r9
 80143ca:	f824 c00b 	strh.w	ip, [r4, fp]
 80143ce:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80143d0:	4401      	add	r1, r0
 80143d2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80143d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80143d8:	4402      	add	r2, r0
 80143da:	e75c      	b.n	8014296 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80143dc:	b007      	add	sp, #28
 80143de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080143e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80143e2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80143e6:	b085      	sub	sp, #20
 80143e8:	4693      	mov	fp, r2
 80143ea:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80143ec:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80143ee:	6870      	ldr	r0, [r6, #4]
 80143f0:	9100      	str	r1, [sp, #0]
 80143f2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80143f6:	fb00 2404 	mla	r4, r0, r4, r2
 80143fa:	6832      	ldr	r2, [r6, #0]
 80143fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014400:	682a      	ldr	r2, [r5, #0]
 8014402:	9201      	str	r2, [sp, #4]
 8014404:	686a      	ldr	r2, [r5, #4]
 8014406:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801440a:	3204      	adds	r2, #4
 801440c:	9202      	str	r2, [sp, #8]
 801440e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014412:	9a00      	ldr	r2, [sp, #0]
 8014414:	2a00      	cmp	r2, #0
 8014416:	dc03      	bgt.n	8014420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014418:	f1bb 0f00 	cmp.w	fp, #0
 801441c:	f340 80a0 	ble.w	8014560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014420:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014422:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014426:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801442a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801442e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014430:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014434:	2b00      	cmp	r3, #0
 8014436:	dd0c      	ble.n	8014452 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014438:	1406      	asrs	r6, r0, #16
 801443a:	d405      	bmi.n	8014448 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801443c:	454e      	cmp	r6, r9
 801443e:	da03      	bge.n	8014448 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014440:	1416      	asrs	r6, r2, #16
 8014442:	d401      	bmi.n	8014448 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014444:	4546      	cmp	r6, r8
 8014446:	db05      	blt.n	8014454 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014448:	4470      	add	r0, lr
 801444a:	4462      	add	r2, ip
 801444c:	3b01      	subs	r3, #1
 801444e:	3402      	adds	r4, #2
 8014450:	e7f0      	b.n	8014434 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014452:	d00f      	beq.n	8014474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014454:	1e5e      	subs	r6, r3, #1
 8014456:	fb0e 0706 	mla	r7, lr, r6, r0
 801445a:	143f      	asrs	r7, r7, #16
 801445c:	d541      	bpl.n	80144e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801445e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014462:	4698      	mov	r8, r3
 8014464:	9603      	str	r6, [sp, #12]
 8014466:	f1b8 0f00 	cmp.w	r8, #0
 801446a:	dc59      	bgt.n	8014520 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801446c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014470:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014474:	9b00      	ldr	r3, [sp, #0]
 8014476:	2b00      	cmp	r3, #0
 8014478:	dd72      	ble.n	8014560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801447a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801447e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014482:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014486:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014488:	ee31 1a05 	vadd.f32	s2, s2, s10
 801448c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014490:	eeb0 6a62 	vmov.f32	s12, s5
 8014494:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014498:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801449c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80144a0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80144a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80144a8:	eeb0 6a43 	vmov.f32	s12, s6
 80144ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80144b0:	ee12 2a90 	vmov	r2, s5
 80144b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80144b8:	fb92 fef3 	sdiv	lr, r2, r3
 80144bc:	ee13 2a10 	vmov	r2, s6
 80144c0:	fb92 fcf3 	sdiv	ip, r2, r3
 80144c4:	9b00      	ldr	r3, [sp, #0]
 80144c6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80144ca:	3b01      	subs	r3, #1
 80144cc:	9300      	str	r3, [sp, #0]
 80144ce:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80144d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80144d4:	eeb0 3a67 	vmov.f32	s6, s15
 80144d8:	bf08      	it	eq
 80144da:	465b      	moveq	r3, fp
 80144dc:	eef0 2a47 	vmov.f32	s5, s14
 80144e0:	e797      	b.n	8014412 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80144e2:	454f      	cmp	r7, r9
 80144e4:	dabb      	bge.n	801445e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80144e6:	fb0c 2606 	mla	r6, ip, r6, r2
 80144ea:	1436      	asrs	r6, r6, #16
 80144ec:	d4b7      	bmi.n	801445e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80144ee:	4546      	cmp	r6, r8
 80144f0:	dab5      	bge.n	801445e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80144f2:	461e      	mov	r6, r3
 80144f4:	46a0      	mov	r8, r4
 80144f6:	2e00      	cmp	r6, #0
 80144f8:	ddb8      	ble.n	801446c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80144fa:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80144fe:	9901      	ldr	r1, [sp, #4]
 8014500:	1417      	asrs	r7, r2, #16
 8014502:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014506:	fb0a 1707 	mla	r7, sl, r7, r1
 801450a:	9902      	ldr	r1, [sp, #8]
 801450c:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014510:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014514:	f828 7b02 	strh.w	r7, [r8], #2
 8014518:	4470      	add	r0, lr
 801451a:	4462      	add	r2, ip
 801451c:	3e01      	subs	r6, #1
 801451e:	e7ea      	b.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014520:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014524:	d417      	bmi.n	8014556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014526:	68ae      	ldr	r6, [r5, #8]
 8014528:	454e      	cmp	r6, r9
 801452a:	dd14      	ble.n	8014556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801452c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014530:	d411      	bmi.n	8014556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014532:	68ef      	ldr	r7, [r5, #12]
 8014534:	4557      	cmp	r7, sl
 8014536:	dd0e      	ble.n	8014556 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014538:	9f01      	ldr	r7, [sp, #4]
 801453a:	b236      	sxth	r6, r6
 801453c:	fb0a 7606 	mla	r6, sl, r6, r7
 8014540:	9f02      	ldr	r7, [sp, #8]
 8014542:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014546:	f06f 0101 	mvn.w	r1, #1
 801454a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801454e:	fb01 f608 	mul.w	r6, r1, r8
 8014552:	9903      	ldr	r1, [sp, #12]
 8014554:	538f      	strh	r7, [r1, r6]
 8014556:	4470      	add	r0, lr
 8014558:	4462      	add	r2, ip
 801455a:	f108 38ff 	add.w	r8, r8, #4294967295
 801455e:	e782      	b.n	8014466 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014560:	b005      	add	sp, #20
 8014562:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014566 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014566:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801456a:	b087      	sub	sp, #28
 801456c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801456e:	9205      	str	r2, [sp, #20]
 8014570:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014574:	9203      	str	r2, [sp, #12]
 8014576:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801457a:	9102      	str	r1, [sp, #8]
 801457c:	6861      	ldr	r1, [r4, #4]
 801457e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014582:	fb01 2000 	mla	r0, r1, r0, r2
 8014586:	6822      	ldr	r2, [r4, #0]
 8014588:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 801458c:	9200      	str	r2, [sp, #0]
 801458e:	f8dc 2000 	ldr.w	r2, [ip]
 8014592:	9204      	str	r2, [sp, #16]
 8014594:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014598:	3204      	adds	r2, #4
 801459a:	9201      	str	r2, [sp, #4]
 801459c:	9a03      	ldr	r2, [sp, #12]
 801459e:	43d5      	mvns	r5, r2
 80145a0:	b2ed      	uxtb	r5, r5
 80145a2:	9a02      	ldr	r2, [sp, #8]
 80145a4:	2a00      	cmp	r2, #0
 80145a6:	dc03      	bgt.n	80145b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80145a8:	9a05      	ldr	r2, [sp, #20]
 80145aa:	2a00      	cmp	r2, #0
 80145ac:	f340 812c 	ble.w	8014808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80145b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80145b2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80145b6:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80145ba:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80145be:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80145c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80145c4:	2b00      	cmp	r3, #0
 80145c6:	dd10      	ble.n	80145ea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80145c8:	140c      	asrs	r4, r1, #16
 80145ca:	d405      	bmi.n	80145d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145cc:	4574      	cmp	r4, lr
 80145ce:	da03      	bge.n	80145d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145d0:	1414      	asrs	r4, r2, #16
 80145d2:	d401      	bmi.n	80145d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80145d4:	42bc      	cmp	r4, r7
 80145d6:	db09      	blt.n	80145ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80145d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80145da:	9800      	ldr	r0, [sp, #0]
 80145dc:	4421      	add	r1, r4
 80145de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80145e0:	3002      	adds	r0, #2
 80145e2:	4422      	add	r2, r4
 80145e4:	3b01      	subs	r3, #1
 80145e6:	9000      	str	r0, [sp, #0]
 80145e8:	e7ec      	b.n	80145c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80145ea:	d071      	beq.n	80146d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80145ec:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80145ee:	1e5c      	subs	r4, r3, #1
 80145f0:	fb06 1604 	mla	r6, r6, r4, r1
 80145f4:	1436      	asrs	r6, r6, #16
 80145f6:	d45d      	bmi.n	80146b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80145f8:	4576      	cmp	r6, lr
 80145fa:	da5b      	bge.n	80146b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80145fc:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80145fe:	fb06 2404 	mla	r4, r6, r4, r2
 8014602:	1424      	asrs	r4, r4, #16
 8014604:	d456      	bmi.n	80146b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014606:	42bc      	cmp	r4, r7
 8014608:	da54      	bge.n	80146b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801460a:	f8dd 9000 	ldr.w	r9, [sp]
 801460e:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014612:	4698      	mov	r8, r3
 8014614:	f1b8 0f00 	cmp.w	r8, #0
 8014618:	dd54      	ble.n	80146c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801461a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801461e:	9804      	ldr	r0, [sp, #16]
 8014620:	1414      	asrs	r4, r2, #16
 8014622:	fb07 0404 	mla	r4, r7, r4, r0
 8014626:	140e      	asrs	r6, r1, #16
 8014628:	9801      	ldr	r0, [sp, #4]
 801462a:	f814 e006 	ldrb.w	lr, [r4, r6]
 801462e:	f8b9 4000 	ldrh.w	r4, [r9]
 8014632:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014636:	eb00 0b0e 	add.w	fp, r0, lr
 801463a:	1227      	asrs	r7, r4, #8
 801463c:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014640:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014644:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014648:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801464a:	fb16 f60a 	smulbb	r6, r6, sl
 801464e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014652:	fb07 6705 	mla	r7, r7, r5, r6
 8014656:	10e6      	asrs	r6, r4, #3
 8014658:	00e4      	lsls	r4, r4, #3
 801465a:	b2e4      	uxtb	r4, r4
 801465c:	fb1b fb0a 	smulbb	fp, fp, sl
 8014660:	fb14 f405 	smulbb	r4, r4, r5
 8014664:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014668:	b2bf      	uxth	r7, r7
 801466a:	fb06 b605 	mla	r6, r6, r5, fp
 801466e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014672:	b2b6      	uxth	r6, r6
 8014674:	fa1f fe8e 	uxth.w	lr, lr
 8014678:	1c7c      	adds	r4, r7, #1
 801467a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801467e:	f106 0b01 	add.w	fp, r6, #1
 8014682:	f10e 0401 	add.w	r4, lr, #1
 8014686:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 801468a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801468e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014692:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014696:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 801469a:	4327      	orrs	r7, r4
 801469c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80146a0:	4401      	add	r1, r0
 80146a2:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80146a4:	ea47 070b 	orr.w	r7, r7, fp
 80146a8:	f829 7b02 	strh.w	r7, [r9], #2
 80146ac:	4402      	add	r2, r0
 80146ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80146b2:	e7af      	b.n	8014614 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80146b4:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80146b8:	f04f 0e00 	mov.w	lr, #0
 80146bc:	eb03 040e 	add.w	r4, r3, lr
 80146c0:	2c00      	cmp	r4, #0
 80146c2:	dc43      	bgt.n	801474c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80146c4:	9a00      	ldr	r2, [sp, #0]
 80146c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80146ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80146ce:	9300      	str	r3, [sp, #0]
 80146d0:	9b02      	ldr	r3, [sp, #8]
 80146d2:	2b00      	cmp	r3, #0
 80146d4:	f340 8098 	ble.w	8014808 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80146d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80146dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80146e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80146e4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80146e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80146ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80146ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80146f2:	eef0 6a62 	vmov.f32	s13, s5
 80146f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80146fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80146fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014702:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8014706:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801470a:	eef0 6a43 	vmov.f32	s13, s6
 801470e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014712:	ee12 2a90 	vmov	r2, s5
 8014716:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801471a:	fb92 f3f3 	sdiv	r3, r2, r3
 801471e:	ee13 2a10 	vmov	r2, s6
 8014722:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014724:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014726:	fb92 f3f3 	sdiv	r3, r2, r3
 801472a:	9314      	str	r3, [sp, #80]	@ 0x50
 801472c:	9b02      	ldr	r3, [sp, #8]
 801472e:	9a05      	ldr	r2, [sp, #20]
 8014730:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014734:	3b01      	subs	r3, #1
 8014736:	9302      	str	r3, [sp, #8]
 8014738:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801473c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801473e:	eeb0 3a67 	vmov.f32	s6, s15
 8014742:	bf08      	it	eq
 8014744:	4613      	moveq	r3, r2
 8014746:	eef0 2a47 	vmov.f32	s5, s14
 801474a:	e72a      	b.n	80145a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801474c:	140f      	asrs	r7, r1, #16
 801474e:	d454      	bmi.n	80147fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014750:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014754:	42be      	cmp	r6, r7
 8014756:	dd50      	ble.n	80147fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014758:	ea5f 4822 	movs.w	r8, r2, asr #16
 801475c:	d44d      	bmi.n	80147fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801475e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014762:	4544      	cmp	r4, r8
 8014764:	dd49      	ble.n	80147fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014766:	9c04      	ldr	r4, [sp, #16]
 8014768:	b236      	sxth	r6, r6
 801476a:	fb08 4606 	mla	r6, r8, r6, r4
 801476e:	f06f 0001 	mvn.w	r0, #1
 8014772:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014776:	9c01      	ldr	r4, [sp, #4]
 8014778:	fb00 fa0e 	mul.w	sl, r0, lr
 801477c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014780:	9800      	ldr	r0, [sp, #0]
 8014782:	eb04 0b08 	add.w	fp, r4, r8
 8014786:	f830 400a 	ldrh.w	r4, [r0, sl]
 801478a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801478e:	9801      	ldr	r0, [sp, #4]
 8014790:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014794:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014798:	9800      	ldr	r0, [sp, #0]
 801479a:	1227      	asrs	r7, r4, #8
 801479c:	fb16 f609 	smulbb	r6, r6, r9
 80147a0:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80147a4:	fb07 6705 	mla	r7, r7, r5, r6
 80147a8:	10e6      	asrs	r6, r4, #3
 80147aa:	00e4      	lsls	r4, r4, #3
 80147ac:	b2e4      	uxtb	r4, r4
 80147ae:	fb1b fb09 	smulbb	fp, fp, r9
 80147b2:	fb14 f405 	smulbb	r4, r4, r5
 80147b6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80147ba:	b2bf      	uxth	r7, r7
 80147bc:	fb06 b605 	mla	r6, r6, r5, fp
 80147c0:	fb08 4809 	mla	r8, r8, r9, r4
 80147c4:	b2b6      	uxth	r6, r6
 80147c6:	fa1f f888 	uxth.w	r8, r8
 80147ca:	1c7c      	adds	r4, r7, #1
 80147cc:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80147d0:	f106 0b01 	add.w	fp, r6, #1
 80147d4:	f108 0401 	add.w	r4, r8, #1
 80147d8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 80147dc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80147e0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80147e4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80147e8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80147ec:	4327      	orrs	r7, r4
 80147ee:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80147f2:	ea47 070b 	orr.w	r7, r7, fp
 80147f6:	f820 700a 	strh.w	r7, [r0, sl]
 80147fa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80147fc:	4401      	add	r1, r0
 80147fe:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8014800:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014804:	4402      	add	r2, r0
 8014806:	e759      	b.n	80146bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8014808:	b007      	add	sp, #28
 801480a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014814:	b085      	sub	sp, #20
 8014816:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801481a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801481c:	9203      	str	r2, [sp, #12]
 801481e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014822:	6870      	ldr	r0, [r6, #4]
 8014824:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014826:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801482a:	686f      	ldr	r7, [r5, #4]
 801482c:	9101      	str	r1, [sp, #4]
 801482e:	fb00 2404 	mla	r4, r0, r4, r2
 8014832:	6832      	ldr	r2, [r6, #0]
 8014834:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014838:	682a      	ldr	r2, [r5, #0]
 801483a:	9202      	str	r2, [sp, #8]
 801483c:	3704      	adds	r7, #4
 801483e:	9a01      	ldr	r2, [sp, #4]
 8014840:	2a00      	cmp	r2, #0
 8014842:	dc03      	bgt.n	801484c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014844:	9a03      	ldr	r2, [sp, #12]
 8014846:	2a00      	cmp	r2, #0
 8014848:	f340 80cc 	ble.w	80149e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801484c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801484e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014852:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014856:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801485a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801485c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014860:	2b00      	cmp	r3, #0
 8014862:	dd0d      	ble.n	8014880 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014864:	1406      	asrs	r6, r0, #16
 8014866:	d405      	bmi.n	8014874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014868:	454e      	cmp	r6, r9
 801486a:	da03      	bge.n	8014874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801486c:	1416      	asrs	r6, r2, #16
 801486e:	d401      	bmi.n	8014874 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8014870:	4546      	cmp	r6, r8
 8014872:	db06      	blt.n	8014882 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014874:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8014876:	4460      	add	r0, ip
 8014878:	4432      	add	r2, r6
 801487a:	3b01      	subs	r3, #1
 801487c:	3402      	adds	r4, #2
 801487e:	e7ef      	b.n	8014860 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8014880:	d00f      	beq.n	80148a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014882:	1e5e      	subs	r6, r3, #1
 8014884:	fb0c 0e06 	mla	lr, ip, r6, r0
 8014888:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 801488c:	d543      	bpl.n	8014916 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801488e:	4698      	mov	r8, r3
 8014890:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8014894:	f1b8 0f00 	cmp.w	r8, #0
 8014898:	dc71      	bgt.n	801497e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 801489a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801489e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80148a2:	9b01      	ldr	r3, [sp, #4]
 80148a4:	2b00      	cmp	r3, #0
 80148a6:	f340 809d 	ble.w	80149e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80148aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80148ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80148b2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80148b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80148b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80148bc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80148c0:	eeb0 6a62 	vmov.f32	s12, s5
 80148c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80148c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80148d0:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80148d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80148d8:	eeb0 6a43 	vmov.f32	s12, s6
 80148dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80148e0:	ee12 2a90 	vmov	r2, s5
 80148e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80148e8:	fb92 fcf3 	sdiv	ip, r2, r3
 80148ec:	ee13 2a10 	vmov	r2, s6
 80148f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80148f4:	9312      	str	r3, [sp, #72]	@ 0x48
 80148f6:	9b01      	ldr	r3, [sp, #4]
 80148f8:	9a03      	ldr	r2, [sp, #12]
 80148fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80148fe:	3b01      	subs	r3, #1
 8014900:	9301      	str	r3, [sp, #4]
 8014902:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014906:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014908:	eeb0 3a67 	vmov.f32	s6, s15
 801490c:	bf08      	it	eq
 801490e:	4613      	moveq	r3, r2
 8014910:	eef0 2a47 	vmov.f32	s5, s14
 8014914:	e793      	b.n	801483e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8014916:	45ce      	cmp	lr, r9
 8014918:	dab9      	bge.n	801488e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801491a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801491c:	fb01 2606 	mla	r6, r1, r6, r2
 8014920:	1436      	asrs	r6, r6, #16
 8014922:	d4b4      	bmi.n	801488e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014924:	4546      	cmp	r6, r8
 8014926:	dab2      	bge.n	801488e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014928:	4698      	mov	r8, r3
 801492a:	46a2      	mov	sl, r4
 801492c:	f1b8 0f00 	cmp.w	r8, #0
 8014930:	ddb3      	ble.n	801489a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014932:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014936:	9902      	ldr	r1, [sp, #8]
 8014938:	1416      	asrs	r6, r2, #16
 801493a:	fb09 1606 	mla	r6, r9, r6, r1
 801493e:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8014942:	492a      	ldr	r1, [pc, #168]	@ (80149ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8014944:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8014948:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801494c:	eb07 0b0e 	add.w	fp, r7, lr
 8014950:	4460      	add	r0, ip
 8014952:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8014956:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801495a:	00f6      	lsls	r6, r6, #3
 801495c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8014960:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014964:	ea49 0606 	orr.w	r6, r9, r6
 8014968:	f817 900e 	ldrb.w	r9, [r7, lr]
 801496c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801496e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8014972:	f82a 6b02 	strh.w	r6, [sl], #2
 8014976:	440a      	add	r2, r1
 8014978:	f108 38ff 	add.w	r8, r8, #4294967295
 801497c:	e7d6      	b.n	801492c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801497e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014982:	d429      	bmi.n	80149d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014984:	68ae      	ldr	r6, [r5, #8]
 8014986:	454e      	cmp	r6, r9
 8014988:	dd26      	ble.n	80149d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801498a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 801498e:	d423      	bmi.n	80149d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014990:	68e9      	ldr	r1, [r5, #12]
 8014992:	4559      	cmp	r1, fp
 8014994:	dd20      	ble.n	80149d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8014996:	9902      	ldr	r1, [sp, #8]
 8014998:	fa0f fe86 	sxth.w	lr, r6
 801499c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80149a0:	f06f 0101 	mvn.w	r1, #1
 80149a4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80149a8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80149ac:	eb07 060e 	add.w	r6, r7, lr
 80149b0:	fb01 f908 	mul.w	r9, r1, r8
 80149b4:	f896 b002 	ldrb.w	fp, [r6, #2]
 80149b8:	7876      	ldrb	r6, [r6, #1]
 80149ba:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80149be:	00f6      	lsls	r6, r6, #3
 80149c0:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80149c4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80149c8:	ea4b 0606 	orr.w	r6, fp, r6
 80149cc:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80149d0:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80149d4:	f82a 6009 	strh.w	r6, [sl, r9]
 80149d8:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80149da:	4460      	add	r0, ip
 80149dc:	440a      	add	r2, r1
 80149de:	f108 38ff 	add.w	r8, r8, #4294967295
 80149e2:	e757      	b.n	8014894 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80149e4:	b005      	add	sp, #20
 80149e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80149ea:	bf00      	nop
 80149ec:	fffff800 	.word	0xfffff800

080149f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80149f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149f4:	b087      	sub	sp, #28
 80149f6:	468b      	mov	fp, r1
 80149f8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80149fa:	9204      	str	r2, [sp, #16]
 80149fc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014a00:	9205      	str	r2, [sp, #20]
 8014a02:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014a06:	6841      	ldr	r1, [r0, #4]
 8014a08:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8014a0c:	fb01 2404 	mla	r4, r1, r4, r2
 8014a10:	6802      	ldr	r2, [r0, #0]
 8014a12:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014a16:	f8dc 2000 	ldr.w	r2, [ip]
 8014a1a:	9201      	str	r2, [sp, #4]
 8014a1c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014a20:	3204      	adds	r2, #4
 8014a22:	9202      	str	r2, [sp, #8]
 8014a24:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014a28:	f1bb 0f00 	cmp.w	fp, #0
 8014a2c:	dc03      	bgt.n	8014a36 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8014a2e:	9a04      	ldr	r2, [sp, #16]
 8014a30:	2a00      	cmp	r2, #0
 8014a32:	f340 8138 	ble.w	8014ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014a36:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014a38:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014a3c:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8014a40:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014a44:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014a46:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014a4a:	2b00      	cmp	r3, #0
 8014a4c:	dd0e      	ble.n	8014a6c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014a4e:	1402      	asrs	r2, r0, #16
 8014a50:	d405      	bmi.n	8014a5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014a52:	42ba      	cmp	r2, r7
 8014a54:	da03      	bge.n	8014a5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014a56:	140a      	asrs	r2, r1, #16
 8014a58:	d401      	bmi.n	8014a5e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8014a5a:	42b2      	cmp	r2, r6
 8014a5c:	db07      	blt.n	8014a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014a5e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014a60:	4410      	add	r0, r2
 8014a62:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014a64:	3b01      	subs	r3, #1
 8014a66:	4411      	add	r1, r2
 8014a68:	3402      	adds	r4, #2
 8014a6a:	e7ee      	b.n	8014a4a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8014a6c:	d019      	beq.n	8014aa2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014a6e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014a70:	1e5a      	subs	r2, r3, #1
 8014a72:	fb05 0502 	mla	r5, r5, r2, r0
 8014a76:	142d      	asrs	r5, r5, #16
 8014a78:	d409      	bmi.n	8014a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a7a:	42bd      	cmp	r5, r7
 8014a7c:	da07      	bge.n	8014a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a7e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014a80:	fb05 1202 	mla	r2, r5, r2, r1
 8014a84:	1412      	asrs	r2, r2, #16
 8014a86:	d402      	bmi.n	8014a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8014a88:	42b2      	cmp	r2, r6
 8014a8a:	f2c0 80ac 	blt.w	8014be6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8014a8e:	f04f 0e00 	mov.w	lr, #0
 8014a92:	eb03 020e 	add.w	r2, r3, lr
 8014a96:	2a00      	cmp	r2, #0
 8014a98:	dc3e      	bgt.n	8014b18 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014a9a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014a9e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014aa2:	f1bb 0f00 	cmp.w	fp, #0
 8014aa6:	f340 80fe 	ble.w	8014ca6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8014aaa:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014aae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014ab2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014ab6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014ab8:	f1bb 0b01 	subs.w	fp, fp, #1
 8014abc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014ac0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014ac4:	eeb0 6a62 	vmov.f32	s12, s5
 8014ac8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014acc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014ad0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ad4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014ad8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014adc:	eeb0 6a43 	vmov.f32	s12, s6
 8014ae0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014ae4:	ee12 2a90 	vmov	r2, s5
 8014ae8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014aec:	fb92 f3f3 	sdiv	r3, r2, r3
 8014af0:	ee13 2a10 	vmov	r2, s6
 8014af4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014af8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014afa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014afc:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b00:	9a04      	ldr	r2, [sp, #16]
 8014b02:	9314      	str	r3, [sp, #80]	@ 0x50
 8014b04:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014b08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014b0a:	eeb0 3a67 	vmov.f32	s6, s15
 8014b0e:	bf08      	it	eq
 8014b10:	4613      	moveq	r3, r2
 8014b12:	eef0 2a47 	vmov.f32	s5, s14
 8014b16:	e787      	b.n	8014a28 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014b18:	1406      	asrs	r6, r0, #16
 8014b1a:	d45d      	bmi.n	8014bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014b1c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8014b20:	42b5      	cmp	r5, r6
 8014b22:	dd59      	ble.n	8014bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014b24:	140f      	asrs	r7, r1, #16
 8014b26:	d457      	bmi.n	8014bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014b28:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8014b2c:	42ba      	cmp	r2, r7
 8014b2e:	dd53      	ble.n	8014bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014b30:	9a01      	ldr	r2, [sp, #4]
 8014b32:	b22d      	sxth	r5, r5
 8014b34:	fb07 2505 	mla	r5, r7, r5, r2
 8014b38:	5daa      	ldrb	r2, [r5, r6]
 8014b3a:	9d02      	ldr	r5, [sp, #8]
 8014b3c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014b40:	0e2e      	lsrs	r6, r5, #24
 8014b42:	d049      	beq.n	8014bd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8014b44:	f06f 0201 	mvn.w	r2, #1
 8014b48:	fb02 f20e 	mul.w	r2, r2, lr
 8014b4c:	9203      	str	r2, [sp, #12]
 8014b4e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8014b52:	9a05      	ldr	r2, [sp, #20]
 8014b54:	4356      	muls	r6, r2
 8014b56:	1c72      	adds	r2, r6, #1
 8014b58:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014b5c:	1212      	asrs	r2, r2, #8
 8014b5e:	fa1f f982 	uxth.w	r9, r2
 8014b62:	ea4f 2728 	mov.w	r7, r8, asr #8
 8014b66:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014b6a:	43d2      	mvns	r2, r2
 8014b6c:	b2d2      	uxtb	r2, r2
 8014b6e:	fb16 f609 	smulbb	r6, r6, r9
 8014b72:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014b76:	fb07 6702 	mla	r7, r7, r2, r6
 8014b7a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014b7e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8014b82:	b2ed      	uxtb	r5, r5
 8014b84:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014b88:	fa5f f888 	uxtb.w	r8, r8
 8014b8c:	fb15 f509 	smulbb	r5, r5, r9
 8014b90:	fb08 5502 	mla	r5, r8, r2, r5
 8014b94:	b2bf      	uxth	r7, r7
 8014b96:	fb1a fa09 	smulbb	sl, sl, r9
 8014b9a:	b2ad      	uxth	r5, r5
 8014b9c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014ba0:	fb06 a602 	mla	r6, r6, r2, sl
 8014ba4:	1c7a      	adds	r2, r7, #1
 8014ba6:	f105 0a01 	add.w	sl, r5, #1
 8014baa:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014bae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014bb2:	b2b6      	uxth	r6, r6
 8014bb4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014bb8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014bbc:	ea4a 0707 	orr.w	r7, sl, r7
 8014bc0:	f106 0a01 	add.w	sl, r6, #1
 8014bc4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014bc8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014bcc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014bd0:	9a03      	ldr	r2, [sp, #12]
 8014bd2:	ea47 070a 	orr.w	r7, r7, sl
 8014bd6:	52a7      	strh	r7, [r4, r2]
 8014bd8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014bda:	4410      	add	r0, r2
 8014bdc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014bde:	f10e 3eff 	add.w	lr, lr, #4294967295
 8014be2:	4411      	add	r1, r2
 8014be4:	e755      	b.n	8014a92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014be6:	f04f 0800 	mov.w	r8, #0
 8014bea:	eba3 0208 	sub.w	r2, r3, r8
 8014bee:	2a00      	cmp	r2, #0
 8014bf0:	f77f af53 	ble.w	8014a9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014bf4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8014bf8:	9f01      	ldr	r7, [sp, #4]
 8014bfa:	140a      	asrs	r2, r1, #16
 8014bfc:	1405      	asrs	r5, r0, #16
 8014bfe:	fb06 7202 	mla	r2, r6, r2, r7
 8014c02:	5d52      	ldrb	r2, [r2, r5]
 8014c04:	9d02      	ldr	r5, [sp, #8]
 8014c06:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8014c0a:	0e2e      	lsrs	r6, r5, #24
 8014c0c:	d044      	beq.n	8014c98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8014c0e:	9a05      	ldr	r2, [sp, #20]
 8014c10:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014c14:	4356      	muls	r6, r2
 8014c16:	1c72      	adds	r2, r6, #1
 8014c18:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8014c1c:	1212      	asrs	r2, r2, #8
 8014c1e:	fa1f f982 	uxth.w	r9, r2
 8014c22:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014c26:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014c2a:	43d2      	mvns	r2, r2
 8014c2c:	b2d2      	uxtb	r2, r2
 8014c2e:	fb16 f609 	smulbb	r6, r6, r9
 8014c32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014c36:	fb07 6702 	mla	r7, r7, r2, r6
 8014c3a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014c3e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014c42:	b2ed      	uxtb	r5, r5
 8014c44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014c48:	fa5f fe8e 	uxtb.w	lr, lr
 8014c4c:	fb15 f509 	smulbb	r5, r5, r9
 8014c50:	fb0e 5502 	mla	r5, lr, r2, r5
 8014c54:	b2bf      	uxth	r7, r7
 8014c56:	fb1a fa09 	smulbb	sl, sl, r9
 8014c5a:	b2ad      	uxth	r5, r5
 8014c5c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014c60:	fb06 a602 	mla	r6, r6, r2, sl
 8014c64:	1c7a      	adds	r2, r7, #1
 8014c66:	f105 0a01 	add.w	sl, r5, #1
 8014c6a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014c6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014c72:	b2b6      	uxth	r6, r6
 8014c74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014c78:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014c7c:	ea4a 0707 	orr.w	r7, sl, r7
 8014c80:	f106 0a01 	add.w	sl, r6, #1
 8014c84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014c88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014c8c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014c90:	ea47 070a 	orr.w	r7, r7, sl
 8014c94:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014c98:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014c9a:	4410      	add	r0, r2
 8014c9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014c9e:	f108 0801 	add.w	r8, r8, #1
 8014ca2:	4411      	add	r1, r2
 8014ca4:	e7a1      	b.n	8014bea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8014ca6:	b007      	add	sp, #28
 8014ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014cac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cb0:	b085      	sub	sp, #20
 8014cb2:	468b      	mov	fp, r1
 8014cb4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8014cb6:	9203      	str	r2, [sp, #12]
 8014cb8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014cbc:	6841      	ldr	r1, [r0, #4]
 8014cbe:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8014cc2:	fb01 2404 	mla	r4, r1, r4, r2
 8014cc6:	6802      	ldr	r2, [r0, #0]
 8014cc8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014ccc:	f8de 2000 	ldr.w	r2, [lr]
 8014cd0:	9200      	str	r2, [sp, #0]
 8014cd2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014cd6:	3204      	adds	r2, #4
 8014cd8:	9201      	str	r2, [sp, #4]
 8014cda:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014cde:	f1bb 0f00 	cmp.w	fp, #0
 8014ce2:	dc03      	bgt.n	8014cec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8014ce4:	9a03      	ldr	r2, [sp, #12]
 8014ce6:	2a00      	cmp	r2, #0
 8014ce8:	f340 8153 	ble.w	8014f92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014cec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014cee:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014cf2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014cf6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014cfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8014cfc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014d00:	2b00      	cmp	r3, #0
 8014d02:	dd0e      	ble.n	8014d22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014d04:	1408      	asrs	r0, r1, #16
 8014d06:	d405      	bmi.n	8014d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014d08:	42b8      	cmp	r0, r7
 8014d0a:	da03      	bge.n	8014d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014d0c:	1410      	asrs	r0, r2, #16
 8014d0e:	d401      	bmi.n	8014d14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8014d10:	42b0      	cmp	r0, r6
 8014d12:	db07      	blt.n	8014d24 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8014d14:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014d16:	4401      	add	r1, r0
 8014d18:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014d1a:	3b01      	subs	r3, #1
 8014d1c:	4402      	add	r2, r0
 8014d1e:	3402      	adds	r4, #2
 8014d20:	e7ee      	b.n	8014d00 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014d22:	d017      	beq.n	8014d54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014d24:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8014d26:	1e58      	subs	r0, r3, #1
 8014d28:	fb05 1500 	mla	r5, r5, r0, r1
 8014d2c:	142d      	asrs	r5, r5, #16
 8014d2e:	d409      	bmi.n	8014d44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014d30:	42bd      	cmp	r5, r7
 8014d32:	da07      	bge.n	8014d44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014d34:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014d36:	fb05 2000 	mla	r0, r5, r0, r2
 8014d3a:	1400      	asrs	r0, r0, #16
 8014d3c:	d402      	bmi.n	8014d44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014d3e:	42b0      	cmp	r0, r6
 8014d40:	f2c0 80bc 	blt.w	8014ebc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8014d44:	2600      	movs	r6, #0
 8014d46:	1998      	adds	r0, r3, r6
 8014d48:	2800      	cmp	r0, #0
 8014d4a:	dc3e      	bgt.n	8014dca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8014d4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d50:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014d54:	f1bb 0f00 	cmp.w	fp, #0
 8014d58:	f340 811b 	ble.w	8014f92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8014d5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014d68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014d6a:	f1bb 0b01 	subs.w	fp, fp, #1
 8014d6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d76:	eeb0 6a62 	vmov.f32	s12, s5
 8014d7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d86:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8014d8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d8e:	eeb0 6a43 	vmov.f32	s12, s6
 8014d92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d96:	ee12 2a90 	vmov	r2, s5
 8014d9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8014da2:	ee13 2a10 	vmov	r2, s6
 8014da6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014daa:	9311      	str	r3, [sp, #68]	@ 0x44
 8014dac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8014db2:	9a03      	ldr	r2, [sp, #12]
 8014db4:	9312      	str	r3, [sp, #72]	@ 0x48
 8014db6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014dba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014dbc:	eeb0 3a67 	vmov.f32	s6, s15
 8014dc0:	bf08      	it	eq
 8014dc2:	4613      	moveq	r3, r2
 8014dc4:	eef0 2a47 	vmov.f32	s5, s14
 8014dc8:	e789      	b.n	8014cde <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8014dca:	140f      	asrs	r7, r1, #16
 8014dcc:	d426      	bmi.n	8014e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014dce:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014dd2:	42bd      	cmp	r5, r7
 8014dd4:	dd22      	ble.n	8014e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014dd6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014dda:	d41f      	bmi.n	8014e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014ddc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014de0:	4560      	cmp	r0, ip
 8014de2:	dd1b      	ble.n	8014e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014de4:	9800      	ldr	r0, [sp, #0]
 8014de6:	b22d      	sxth	r5, r5
 8014de8:	fb0c 0505 	mla	r5, ip, r5, r0
 8014dec:	5de8      	ldrb	r0, [r5, r7]
 8014dee:	9d01      	ldr	r5, [sp, #4]
 8014df0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8014df4:	0e07      	lsrs	r7, r0, #24
 8014df6:	2fff      	cmp	r7, #255	@ 0xff
 8014df8:	d116      	bne.n	8014e28 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8014dfa:	f06f 0501 	mvn.w	r5, #1
 8014dfe:	fb05 f706 	mul.w	r7, r5, r6
 8014e02:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8014e06:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8014e0a:	0945      	lsrs	r5, r0, #5
 8014e0c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014e10:	ea4c 0505 	orr.w	r5, ip, r5
 8014e14:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014e18:	4305      	orrs	r5, r0
 8014e1a:	53e5      	strh	r5, [r4, r7]
 8014e1c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014e1e:	4401      	add	r1, r0
 8014e20:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014e22:	3e01      	subs	r6, #1
 8014e24:	4402      	add	r2, r0
 8014e26:	e78e      	b.n	8014d46 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8014e28:	b2fd      	uxtb	r5, r7
 8014e2a:	2f00      	cmp	r7, #0
 8014e2c:	d0f6      	beq.n	8014e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014e2e:	f06f 0701 	mvn.w	r7, #1
 8014e32:	4377      	muls	r7, r6
 8014e34:	fa1f f985 	uxth.w	r9, r5
 8014e38:	f834 8007 	ldrh.w	r8, [r4, r7]
 8014e3c:	9702      	str	r7, [sp, #8]
 8014e3e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8014e42:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014e46:	43ed      	mvns	r5, r5
 8014e48:	b2ed      	uxtb	r5, r5
 8014e4a:	fb17 f709 	smulbb	r7, r7, r9
 8014e4e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014e52:	fb0c 7c05 	mla	ip, ip, r5, r7
 8014e56:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8014e5a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8014e5e:	b2c0      	uxtb	r0, r0
 8014e60:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014e64:	fa5f f888 	uxtb.w	r8, r8
 8014e68:	fb10 f009 	smulbb	r0, r0, r9
 8014e6c:	fb08 0005 	mla	r0, r8, r5, r0
 8014e70:	b280      	uxth	r0, r0
 8014e72:	fa1f fc8c 	uxth.w	ip, ip
 8014e76:	fb1a fa09 	smulbb	sl, sl, r9
 8014e7a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014e7e:	fb07 a705 	mla	r7, r7, r5, sl
 8014e82:	f100 0a01 	add.w	sl, r0, #1
 8014e86:	f10c 0501 	add.w	r5, ip, #1
 8014e8a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014e8e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014e92:	b2bf      	uxth	r7, r7
 8014e94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014e98:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014e9c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8014ea0:	f107 0a01 	add.w	sl, r7, #1
 8014ea4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014ea8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014eac:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014eb0:	9802      	ldr	r0, [sp, #8]
 8014eb2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8014eb6:	f824 c000 	strh.w	ip, [r4, r0]
 8014eba:	e7af      	b.n	8014e1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8014ebc:	f04f 0800 	mov.w	r8, #0
 8014ec0:	eba3 0008 	sub.w	r0, r3, r8
 8014ec4:	2800      	cmp	r0, #0
 8014ec6:	f77f af41 	ble.w	8014d4c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014eca:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8014ece:	9f00      	ldr	r7, [sp, #0]
 8014ed0:	1410      	asrs	r0, r2, #16
 8014ed2:	140d      	asrs	r5, r1, #16
 8014ed4:	fb06 7000 	mla	r0, r6, r0, r7
 8014ed8:	5d40      	ldrb	r0, [r0, r5]
 8014eda:	9d01      	ldr	r5, [sp, #4]
 8014edc:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014ee0:	0e2e      	lsrs	r6, r5, #24
 8014ee2:	2eff      	cmp	r6, #255	@ 0xff
 8014ee4:	d112      	bne.n	8014f0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8014ee6:	482c      	ldr	r0, [pc, #176]	@ (8014f98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8014ee8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8014eec:	0968      	lsrs	r0, r5, #5
 8014eee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8014ef2:	4330      	orrs	r0, r6
 8014ef4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014ef8:	4328      	orrs	r0, r5
 8014efa:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8014efe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014f00:	4401      	add	r1, r0
 8014f02:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8014f04:	f108 0801 	add.w	r8, r8, #1
 8014f08:	4402      	add	r2, r0
 8014f0a:	e7d9      	b.n	8014ec0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014f0c:	b2f0      	uxtb	r0, r6
 8014f0e:	2e00      	cmp	r6, #0
 8014f10:	d0f5      	beq.n	8014efe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014f12:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8014f16:	fa1f f980 	uxth.w	r9, r0
 8014f1a:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014f1e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8014f22:	43c0      	mvns	r0, r0
 8014f24:	b2c0      	uxtb	r0, r0
 8014f26:	fb16 f609 	smulbb	r6, r6, r9
 8014f2a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014f2e:	fb07 6700 	mla	r7, r7, r0, r6
 8014f32:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8014f36:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8014f3a:	b2ed      	uxtb	r5, r5
 8014f3c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014f40:	fa5f fc8c 	uxtb.w	ip, ip
 8014f44:	fb15 f509 	smulbb	r5, r5, r9
 8014f48:	fb0c 5500 	mla	r5, ip, r0, r5
 8014f4c:	b2bf      	uxth	r7, r7
 8014f4e:	fb1a fa09 	smulbb	sl, sl, r9
 8014f52:	b2ad      	uxth	r5, r5
 8014f54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014f58:	fb06 a600 	mla	r6, r6, r0, sl
 8014f5c:	1c78      	adds	r0, r7, #1
 8014f5e:	f105 0a01 	add.w	sl, r5, #1
 8014f62:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014f66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014f6a:	b2b6      	uxth	r6, r6
 8014f6c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014f70:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014f74:	ea4a 0707 	orr.w	r7, sl, r7
 8014f78:	f106 0a01 	add.w	sl, r6, #1
 8014f7c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014f80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014f84:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014f88:	ea47 070a 	orr.w	r7, r7, sl
 8014f8c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8014f90:	e7b5      	b.n	8014efe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8014f92:	b005      	add	sp, #20
 8014f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f98:	fffff800 	.word	0xfffff800

08014f9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014fa0:	b087      	sub	sp, #28
 8014fa2:	468b      	mov	fp, r1
 8014fa4:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8014fa6:	9204      	str	r2, [sp, #16]
 8014fa8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014fac:	9205      	str	r2, [sp, #20]
 8014fae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8014fb2:	6861      	ldr	r1, [r4, #4]
 8014fb4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8014fb8:	fb01 2000 	mla	r0, r1, r0, r2
 8014fbc:	6822      	ldr	r2, [r4, #0]
 8014fbe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8014fc2:	f8de 2000 	ldr.w	r2, [lr]
 8014fc6:	9201      	str	r2, [sp, #4]
 8014fc8:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014fcc:	9202      	str	r2, [sp, #8]
 8014fce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014fd2:	f1bb 0f00 	cmp.w	fp, #0
 8014fd6:	dc03      	bgt.n	8014fe0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8014fd8:	9a04      	ldr	r2, [sp, #16]
 8014fda:	2a00      	cmp	r2, #0
 8014fdc:	f340 8142 	ble.w	8015264 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8014fe0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014fe2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014fe6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8014fea:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014fee:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014ff0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014ff4:	2b00      	cmp	r3, #0
 8014ff6:	dd0e      	ble.n	8015016 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8014ff8:	140c      	asrs	r4, r1, #16
 8014ffa:	d405      	bmi.n	8015008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014ffc:	42bc      	cmp	r4, r7
 8014ffe:	da03      	bge.n	8015008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015000:	1414      	asrs	r4, r2, #16
 8015002:	d401      	bmi.n	8015008 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015004:	42b4      	cmp	r4, r6
 8015006:	db07      	blt.n	8015018 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015008:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801500a:	4421      	add	r1, r4
 801500c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801500e:	3b01      	subs	r3, #1
 8015010:	4422      	add	r2, r4
 8015012:	3002      	adds	r0, #2
 8015014:	e7ee      	b.n	8014ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015016:	d019      	beq.n	801504c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015018:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801501a:	1e5c      	subs	r4, r3, #1
 801501c:	fb05 1504 	mla	r5, r5, r4, r1
 8015020:	142d      	asrs	r5, r5, #16
 8015022:	d409      	bmi.n	8015038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015024:	42bd      	cmp	r5, r7
 8015026:	da07      	bge.n	8015038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015028:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801502a:	fb05 2404 	mla	r4, r5, r4, r2
 801502e:	1424      	asrs	r4, r4, #16
 8015030:	d402      	bmi.n	8015038 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015032:	42b4      	cmp	r4, r6
 8015034:	f2c0 80b1 	blt.w	801519a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015038:	f04f 0800 	mov.w	r8, #0
 801503c:	eb03 0408 	add.w	r4, r3, r8
 8015040:	2c00      	cmp	r4, #0
 8015042:	dc3e      	bgt.n	80150c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015044:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015048:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801504c:	f1bb 0f00 	cmp.w	fp, #0
 8015050:	f340 8108 	ble.w	8015264 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015054:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015058:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801505c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015060:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015062:	f1bb 0b01 	subs.w	fp, fp, #1
 8015066:	ee31 1a05 	vadd.f32	s2, s2, s10
 801506a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801506e:	eeb0 6a62 	vmov.f32	s12, s5
 8015072:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015076:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801507a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801507e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015082:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015086:	eeb0 6a43 	vmov.f32	s12, s6
 801508a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801508e:	ee12 2a90 	vmov	r2, s5
 8015092:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015096:	fb92 f3f3 	sdiv	r3, r2, r3
 801509a:	ee13 2a10 	vmov	r2, s6
 801509e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150a2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80150a4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80150a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80150aa:	9a04      	ldr	r2, [sp, #16]
 80150ac:	9314      	str	r3, [sp, #80]	@ 0x50
 80150ae:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80150b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80150b4:	eeb0 3a67 	vmov.f32	s6, s15
 80150b8:	bf08      	it	eq
 80150ba:	4613      	moveq	r3, r2
 80150bc:	eef0 2a47 	vmov.f32	s5, s14
 80150c0:	e787      	b.n	8014fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80150c2:	140e      	asrs	r6, r1, #16
 80150c4:	d462      	bmi.n	801518c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80150c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80150ca:	42b5      	cmp	r5, r6
 80150cc:	dd5e      	ble.n	801518c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80150ce:	1417      	asrs	r7, r2, #16
 80150d0:	d45c      	bmi.n	801518c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80150d2:	f8de 400c 	ldr.w	r4, [lr, #12]
 80150d6:	42bc      	cmp	r4, r7
 80150d8:	dd58      	ble.n	801518c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80150da:	b22d      	sxth	r5, r5
 80150dc:	fb07 6505 	mla	r5, r7, r5, r6
 80150e0:	9c02      	ldr	r4, [sp, #8]
 80150e2:	5d66      	ldrb	r6, [r4, r5]
 80150e4:	2e00      	cmp	r6, #0
 80150e6:	d051      	beq.n	801518c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80150e8:	9c01      	ldr	r4, [sp, #4]
 80150ea:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80150ee:	f06f 0401 	mvn.w	r4, #1
 80150f2:	fb04 f408 	mul.w	r4, r4, r8
 80150f6:	9403      	str	r4, [sp, #12]
 80150f8:	5b05      	ldrh	r5, [r0, r4]
 80150fa:	9c05      	ldr	r4, [sp, #20]
 80150fc:	4366      	muls	r6, r4
 80150fe:	1c74      	adds	r4, r6, #1
 8015100:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015104:	1224      	asrs	r4, r4, #8
 8015106:	b2a7      	uxth	r7, r4
 8015108:	122e      	asrs	r6, r5, #8
 801510a:	43e4      	mvns	r4, r4
 801510c:	b2e4      	uxtb	r4, r4
 801510e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015112:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015116:	fb16 f604 	smulbb	r6, r6, r4
 801511a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801511e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015122:	00ed      	lsls	r5, r5, #3
 8015124:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015128:	b2ed      	uxtb	r5, r5
 801512a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801512e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015132:	fb15 f504 	smulbb	r5, r5, r4
 8015136:	fa5f f989 	uxtb.w	r9, r9
 801513a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801513e:	fb09 5507 	mla	r5, r9, r7, r5
 8015142:	fb1a fa04 	smulbb	sl, sl, r4
 8015146:	fa1f fc8c 	uxth.w	ip, ip
 801514a:	b2ad      	uxth	r5, r5
 801514c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015150:	fb06 a607 	mla	r6, r6, r7, sl
 8015154:	f10c 0401 	add.w	r4, ip, #1
 8015158:	f105 0a01 	add.w	sl, r5, #1
 801515c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015160:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015164:	b2b6      	uxth	r6, r6
 8015166:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801516a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801516e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015172:	f106 0a01 	add.w	sl, r6, #1
 8015176:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801517a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801517e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015182:	9c03      	ldr	r4, [sp, #12]
 8015184:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015188:	f820 c004 	strh.w	ip, [r0, r4]
 801518c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801518e:	4421      	add	r1, r4
 8015190:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8015192:	f108 38ff 	add.w	r8, r8, #4294967295
 8015196:	4422      	add	r2, r4
 8015198:	e750      	b.n	801503c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801519a:	f04f 0900 	mov.w	r9, #0
 801519e:	eba3 0409 	sub.w	r4, r3, r9
 80151a2:	2c00      	cmp	r4, #0
 80151a4:	f77f af4e 	ble.w	8015044 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80151a8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80151ac:	140d      	asrs	r5, r1, #16
 80151ae:	1414      	asrs	r4, r2, #16
 80151b0:	fb06 5404 	mla	r4, r6, r4, r5
 80151b4:	9d02      	ldr	r5, [sp, #8]
 80151b6:	5d2e      	ldrb	r6, [r5, r4]
 80151b8:	2e00      	cmp	r6, #0
 80151ba:	d04c      	beq.n	8015256 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80151bc:	9d01      	ldr	r5, [sp, #4]
 80151be:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80151c2:	9c05      	ldr	r4, [sp, #20]
 80151c4:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80151c8:	4366      	muls	r6, r4
 80151ca:	1c74      	adds	r4, r6, #1
 80151cc:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80151d0:	1224      	asrs	r4, r4, #8
 80151d2:	b2a7      	uxth	r7, r4
 80151d4:	122e      	asrs	r6, r5, #8
 80151d6:	43e4      	mvns	r4, r4
 80151d8:	b2e4      	uxtb	r4, r4
 80151da:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80151de:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80151e2:	fb16 f604 	smulbb	r6, r6, r4
 80151e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80151ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80151ee:	00ed      	lsls	r5, r5, #3
 80151f0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80151f4:	b2ed      	uxtb	r5, r5
 80151f6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80151fa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80151fe:	fb15 f504 	smulbb	r5, r5, r4
 8015202:	fa5f f888 	uxtb.w	r8, r8
 8015206:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801520a:	fb08 5507 	mla	r5, r8, r7, r5
 801520e:	fb1a fa04 	smulbb	sl, sl, r4
 8015212:	fa1f fc8c 	uxth.w	ip, ip
 8015216:	b2ad      	uxth	r5, r5
 8015218:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801521c:	fb06 a607 	mla	r6, r6, r7, sl
 8015220:	f10c 0401 	add.w	r4, ip, #1
 8015224:	f105 0a01 	add.w	sl, r5, #1
 8015228:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801522c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015230:	b2b6      	uxth	r6, r6
 8015232:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015236:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801523a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801523e:	f106 0a01 	add.w	sl, r6, #1
 8015242:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015246:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801524a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801524e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015252:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015256:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015258:	4421      	add	r1, r4
 801525a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801525c:	f109 0901 	add.w	r9, r9, #1
 8015260:	4422      	add	r2, r4
 8015262:	e79c      	b.n	801519e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015264:	b007      	add	sp, #28
 8015266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801526a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801526a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801526e:	b085      	sub	sp, #20
 8015270:	468b      	mov	fp, r1
 8015272:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8015274:	9203      	str	r2, [sp, #12]
 8015276:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801527a:	6861      	ldr	r1, [r4, #4]
 801527c:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8015280:	fb01 2000 	mla	r0, r1, r0, r2
 8015284:	6822      	ldr	r2, [r4, #0]
 8015286:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801528a:	f8d8 2000 	ldr.w	r2, [r8]
 801528e:	9200      	str	r2, [sp, #0]
 8015290:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015294:	9201      	str	r2, [sp, #4]
 8015296:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801529a:	f1bb 0f00 	cmp.w	fp, #0
 801529e:	dc03      	bgt.n	80152a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80152a0:	9a03      	ldr	r2, [sp, #12]
 80152a2:	2a00      	cmp	r2, #0
 80152a4:	f340 8146 	ble.w	8015534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80152a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80152aa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80152ae:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80152b2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80152b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80152b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80152bc:	2b00      	cmp	r3, #0
 80152be:	dd0e      	ble.n	80152de <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80152c0:	140c      	asrs	r4, r1, #16
 80152c2:	d405      	bmi.n	80152d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80152c4:	42bc      	cmp	r4, r7
 80152c6:	da03      	bge.n	80152d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80152c8:	1414      	asrs	r4, r2, #16
 80152ca:	d401      	bmi.n	80152d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80152cc:	42b4      	cmp	r4, r6
 80152ce:	db07      	blt.n	80152e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80152d0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80152d2:	4421      	add	r1, r4
 80152d4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80152d6:	3b01      	subs	r3, #1
 80152d8:	4422      	add	r2, r4
 80152da:	3002      	adds	r0, #2
 80152dc:	e7ee      	b.n	80152bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80152de:	d017      	beq.n	8015310 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80152e0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80152e2:	1e5c      	subs	r4, r3, #1
 80152e4:	fb05 1504 	mla	r5, r5, r4, r1
 80152e8:	142d      	asrs	r5, r5, #16
 80152ea:	d409      	bmi.n	8015300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80152ec:	42bd      	cmp	r5, r7
 80152ee:	da07      	bge.n	8015300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80152f0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80152f2:	fb05 2404 	mla	r4, r5, r4, r2
 80152f6:	1424      	asrs	r4, r4, #16
 80152f8:	d402      	bmi.n	8015300 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80152fa:	42b4      	cmp	r4, r6
 80152fc:	f2c0 80b3 	blt.w	8015466 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015300:	2600      	movs	r6, #0
 8015302:	199c      	adds	r4, r3, r6
 8015304:	2c00      	cmp	r4, #0
 8015306:	dc3e      	bgt.n	8015386 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015308:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801530c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015310:	f1bb 0f00 	cmp.w	fp, #0
 8015314:	f340 810e 	ble.w	8015534 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015318:	ee30 0a04 	vadd.f32	s0, s0, s8
 801531c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015320:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015324:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015326:	f1bb 0b01 	subs.w	fp, fp, #1
 801532a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801532e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015332:	eeb0 6a62 	vmov.f32	s12, s5
 8015336:	ee61 7a27 	vmul.f32	s15, s2, s15
 801533a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801533e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015342:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015346:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801534a:	eeb0 6a43 	vmov.f32	s12, s6
 801534e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015352:	ee12 2a90 	vmov	r2, s5
 8015356:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801535a:	fb92 f3f3 	sdiv	r3, r2, r3
 801535e:	ee13 2a10 	vmov	r2, s6
 8015362:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015366:	9311      	str	r3, [sp, #68]	@ 0x44
 8015368:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801536a:	fb92 f3f3 	sdiv	r3, r2, r3
 801536e:	9a03      	ldr	r2, [sp, #12]
 8015370:	9312      	str	r3, [sp, #72]	@ 0x48
 8015372:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015376:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015378:	eeb0 3a67 	vmov.f32	s6, s15
 801537c:	bf08      	it	eq
 801537e:	4613      	moveq	r3, r2
 8015380:	eef0 2a47 	vmov.f32	s5, s14
 8015384:	e789      	b.n	801529a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015386:	140f      	asrs	r7, r1, #16
 8015388:	d418      	bmi.n	80153bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801538a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801538e:	42bd      	cmp	r5, r7
 8015390:	dd14      	ble.n	80153bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015392:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015396:	d411      	bmi.n	80153bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015398:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801539c:	4564      	cmp	r4, ip
 801539e:	dd0d      	ble.n	80153bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80153a0:	b22d      	sxth	r5, r5
 80153a2:	fb0c 7505 	mla	r5, ip, r5, r7
 80153a6:	9c01      	ldr	r4, [sp, #4]
 80153a8:	5d64      	ldrb	r4, [r4, r5]
 80153aa:	2cff      	cmp	r4, #255	@ 0xff
 80153ac:	d10c      	bne.n	80153c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80153ae:	9c00      	ldr	r4, [sp, #0]
 80153b0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80153b4:	f06f 0401 	mvn.w	r4, #1
 80153b8:	4374      	muls	r4, r6
 80153ba:	5305      	strh	r5, [r0, r4]
 80153bc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80153be:	4421      	add	r1, r4
 80153c0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80153c2:	3e01      	subs	r6, #1
 80153c4:	4422      	add	r2, r4
 80153c6:	e79c      	b.n	8015302 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80153c8:	2c00      	cmp	r4, #0
 80153ca:	d0f7      	beq.n	80153bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80153cc:	9f00      	ldr	r7, [sp, #0]
 80153ce:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80153d2:	f06f 0501 	mvn.w	r5, #1
 80153d6:	4375      	muls	r5, r6
 80153d8:	9502      	str	r5, [sp, #8]
 80153da:	5b45      	ldrh	r5, [r0, r5]
 80153dc:	fa1f fc84 	uxth.w	ip, r4
 80153e0:	122f      	asrs	r7, r5, #8
 80153e2:	43e4      	mvns	r4, r4
 80153e4:	b2e4      	uxtb	r4, r4
 80153e6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80153ea:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80153ee:	fb17 f704 	smulbb	r7, r7, r4
 80153f2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80153f6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80153fa:	00ed      	lsls	r5, r5, #3
 80153fc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015400:	b2ed      	uxtb	r5, r5
 8015402:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015406:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801540a:	fb15 f504 	smulbb	r5, r5, r4
 801540e:	fa5f f989 	uxtb.w	r9, r9
 8015412:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8015416:	fb09 550c 	mla	r5, r9, ip, r5
 801541a:	fb1a fa04 	smulbb	sl, sl, r4
 801541e:	fa1f fe8e 	uxth.w	lr, lr
 8015422:	b2ad      	uxth	r5, r5
 8015424:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015428:	fb07 a70c 	mla	r7, r7, ip, sl
 801542c:	f10e 0401 	add.w	r4, lr, #1
 8015430:	f105 0a01 	add.w	sl, r5, #1
 8015434:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015438:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801543c:	b2bf      	uxth	r7, r7
 801543e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015442:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015446:	ea4a 0e0e 	orr.w	lr, sl, lr
 801544a:	f107 0a01 	add.w	sl, r7, #1
 801544e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015452:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015456:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801545a:	9c02      	ldr	r4, [sp, #8]
 801545c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015460:	f820 e004 	strh.w	lr, [r0, r4]
 8015464:	e7aa      	b.n	80153bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015466:	f04f 0900 	mov.w	r9, #0
 801546a:	eba3 0409 	sub.w	r4, r3, r9
 801546e:	2c00      	cmp	r4, #0
 8015470:	f77f af4a 	ble.w	8015308 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015474:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015478:	1414      	asrs	r4, r2, #16
 801547a:	140d      	asrs	r5, r1, #16
 801547c:	fb06 5504 	mla	r5, r6, r4, r5
 8015480:	9c01      	ldr	r4, [sp, #4]
 8015482:	5d64      	ldrb	r4, [r4, r5]
 8015484:	2cff      	cmp	r4, #255	@ 0xff
 8015486:	d10b      	bne.n	80154a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015488:	9c00      	ldr	r4, [sp, #0]
 801548a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801548e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015492:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8015494:	4421      	add	r1, r4
 8015496:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8015498:	f109 0901 	add.w	r9, r9, #1
 801549c:	4422      	add	r2, r4
 801549e:	e7e4      	b.n	801546a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80154a0:	2c00      	cmp	r4, #0
 80154a2:	d0f6      	beq.n	8015492 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80154a4:	9e00      	ldr	r6, [sp, #0]
 80154a6:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80154aa:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80154ae:	b2a7      	uxth	r7, r4
 80154b0:	122e      	asrs	r6, r5, #8
 80154b2:	43e4      	mvns	r4, r4
 80154b4:	b2e4      	uxtb	r4, r4
 80154b6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80154ba:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80154be:	fb16 f604 	smulbb	r6, r6, r4
 80154c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80154c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80154ca:	00ed      	lsls	r5, r5, #3
 80154cc:	fb0c 6c07 	mla	ip, ip, r7, r6
 80154d0:	b2ed      	uxtb	r5, r5
 80154d2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80154d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80154da:	fb15 f504 	smulbb	r5, r5, r4
 80154de:	fa5f fe8e 	uxtb.w	lr, lr
 80154e2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80154e6:	fb0e 5507 	mla	r5, lr, r7, r5
 80154ea:	fb1a fa04 	smulbb	sl, sl, r4
 80154ee:	fa1f fc8c 	uxth.w	ip, ip
 80154f2:	b2ad      	uxth	r5, r5
 80154f4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80154f8:	fb06 a607 	mla	r6, r6, r7, sl
 80154fc:	f10c 0401 	add.w	r4, ip, #1
 8015500:	f105 0a01 	add.w	sl, r5, #1
 8015504:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015508:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801550c:	b2b6      	uxth	r6, r6
 801550e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015512:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015516:	ea4a 0c0c 	orr.w	ip, sl, ip
 801551a:	f106 0a01 	add.w	sl, r6, #1
 801551e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015522:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015526:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801552a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801552e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015532:	e7ae      	b.n	8015492 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015534:	b005      	add	sp, #20
 8015536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801553a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801553a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801553e:	b085      	sub	sp, #20
 8015540:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015542:	9203      	str	r2, [sp, #12]
 8015544:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8015548:	9201      	str	r2, [sp, #4]
 801554a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801554e:	9100      	str	r1, [sp, #0]
 8015550:	6841      	ldr	r1, [r0, #4]
 8015552:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8015556:	fb01 2404 	mla	r4, r1, r4, r2
 801555a:	6802      	ldr	r2, [r0, #0]
 801555c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015560:	f8de 2000 	ldr.w	r2, [lr]
 8015564:	9202      	str	r2, [sp, #8]
 8015566:	9a01      	ldr	r2, [sp, #4]
 8015568:	43d6      	mvns	r6, r2
 801556a:	b2f6      	uxtb	r6, r6
 801556c:	9a00      	ldr	r2, [sp, #0]
 801556e:	2a00      	cmp	r2, #0
 8015570:	dc03      	bgt.n	801557a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015572:	9a03      	ldr	r2, [sp, #12]
 8015574:	2a00      	cmp	r2, #0
 8015576:	f340 8124 	ble.w	80157c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801557a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801557c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015580:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015584:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015588:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801558a:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801558e:	2b00      	cmp	r3, #0
 8015590:	dd0e      	ble.n	80155b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015592:	1408      	asrs	r0, r1, #16
 8015594:	d405      	bmi.n	80155a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015596:	4560      	cmp	r0, ip
 8015598:	da03      	bge.n	80155a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801559a:	1410      	asrs	r0, r2, #16
 801559c:	d401      	bmi.n	80155a2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801559e:	42b8      	cmp	r0, r7
 80155a0:	db07      	blt.n	80155b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80155a2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80155a4:	4401      	add	r1, r0
 80155a6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80155a8:	3b01      	subs	r3, #1
 80155aa:	4402      	add	r2, r0
 80155ac:	3402      	adds	r4, #2
 80155ae:	e7ee      	b.n	801558e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80155b0:	d06e      	beq.n	8015690 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80155b2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80155b4:	1e58      	subs	r0, r3, #1
 80155b6:	fb05 1500 	mla	r5, r5, r0, r1
 80155ba:	142d      	asrs	r5, r5, #16
 80155bc:	d45c      	bmi.n	8015678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80155be:	4565      	cmp	r5, ip
 80155c0:	da5a      	bge.n	8015678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80155c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80155c4:	fb05 2000 	mla	r0, r5, r0, r2
 80155c8:	1400      	asrs	r0, r0, #16
 80155ca:	d455      	bmi.n	8015678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80155cc:	42b8      	cmp	r0, r7
 80155ce:	da53      	bge.n	8015678 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80155d0:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80155d4:	4699      	mov	r9, r3
 80155d6:	46a2      	mov	sl, r4
 80155d8:	f1b9 0f00 	cmp.w	r9, #0
 80155dc:	dd54      	ble.n	8015688 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80155de:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80155e2:	140d      	asrs	r5, r1, #16
 80155e4:	1410      	asrs	r0, r2, #16
 80155e6:	fb07 5000 	mla	r0, r7, r0, r5
 80155ea:	9d02      	ldr	r5, [sp, #8]
 80155ec:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80155f0:	f8ba 5000 	ldrh.w	r5, [sl]
 80155f4:	122f      	asrs	r7, r5, #8
 80155f6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80155fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80155fe:	fb17 f706 	smulbb	r7, r7, r6
 8015602:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015606:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801560a:	00ed      	lsls	r5, r5, #3
 801560c:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015610:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8015614:	10c7      	asrs	r7, r0, #3
 8015616:	b2ed      	uxtb	r5, r5
 8015618:	00c0      	lsls	r0, r0, #3
 801561a:	fb18 f806 	smulbb	r8, r8, r6
 801561e:	fb15 f506 	smulbb	r5, r5, r6
 8015622:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015626:	b2c0      	uxtb	r0, r0
 8015628:	fa1f fc8c 	uxth.w	ip, ip
 801562c:	fb07 870b 	mla	r7, r7, fp, r8
 8015630:	fb00 500b 	mla	r0, r0, fp, r5
 8015634:	b280      	uxth	r0, r0
 8015636:	b2bf      	uxth	r7, r7
 8015638:	f10c 0501 	add.w	r5, ip, #1
 801563c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015640:	f107 0801 	add.w	r8, r7, #1
 8015644:	1c45      	adds	r5, r0, #1
 8015646:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801564a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801564e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015650:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015654:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015658:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801565c:	ea45 0c0c 	orr.w	ip, r5, ip
 8015660:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015664:	4401      	add	r1, r0
 8015666:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015668:	ea4c 0c08 	orr.w	ip, ip, r8
 801566c:	f82a cb02 	strh.w	ip, [sl], #2
 8015670:	4402      	add	r2, r0
 8015672:	f109 39ff 	add.w	r9, r9, #4294967295
 8015676:	e7af      	b.n	80155d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015678:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801567c:	f04f 0800 	mov.w	r8, #0
 8015680:	eb03 0008 	add.w	r0, r3, r8
 8015684:	2800      	cmp	r0, #0
 8015686:	dc41      	bgt.n	801570c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015688:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801568c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015690:	9b00      	ldr	r3, [sp, #0]
 8015692:	2b00      	cmp	r3, #0
 8015694:	f340 8095 	ble.w	80157c2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015698:	ee30 0a04 	vadd.f32	s0, s0, s8
 801569c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80156a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80156a4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80156a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156b2:	eef0 6a62 	vmov.f32	s13, s5
 80156b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156c2:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80156c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156ca:	eef0 6a43 	vmov.f32	s13, s6
 80156ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156d2:	ee12 2a90 	vmov	r2, s5
 80156d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156da:	fb92 f3f3 	sdiv	r3, r2, r3
 80156de:	ee13 2a10 	vmov	r2, s6
 80156e2:	9311      	str	r3, [sp, #68]	@ 0x44
 80156e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80156e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80156ea:	9312      	str	r3, [sp, #72]	@ 0x48
 80156ec:	9b00      	ldr	r3, [sp, #0]
 80156ee:	9a03      	ldr	r2, [sp, #12]
 80156f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80156f4:	3b01      	subs	r3, #1
 80156f6:	9300      	str	r3, [sp, #0]
 80156f8:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 80156fc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80156fe:	eeb0 3a67 	vmov.f32	s6, s15
 8015702:	bf08      	it	eq
 8015704:	4613      	moveq	r3, r2
 8015706:	eef0 2a47 	vmov.f32	s5, s14
 801570a:	e72f      	b.n	801556c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801570c:	140f      	asrs	r7, r1, #16
 801570e:	d451      	bmi.n	80157b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015710:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015714:	42bd      	cmp	r5, r7
 8015716:	dd4d      	ble.n	80157b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015718:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801571c:	d44a      	bmi.n	80157b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801571e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015722:	4560      	cmp	r0, ip
 8015724:	dd46      	ble.n	80157b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015726:	b22d      	sxth	r5, r5
 8015728:	fb0c 7505 	mla	r5, ip, r5, r7
 801572c:	9802      	ldr	r0, [sp, #8]
 801572e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015732:	f06f 0501 	mvn.w	r5, #1
 8015736:	fb05 fb08 	mul.w	fp, r5, r8
 801573a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801573e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015742:	122f      	asrs	r7, r5, #8
 8015744:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015748:	fb17 f706 	smulbb	r7, r7, r6
 801574c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015750:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015754:	00ed      	lsls	r5, r5, #3
 8015756:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801575a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801575e:	10c7      	asrs	r7, r0, #3
 8015760:	b2ed      	uxtb	r5, r5
 8015762:	00c0      	lsls	r0, r0, #3
 8015764:	fb19 f906 	smulbb	r9, r9, r6
 8015768:	fb15 f506 	smulbb	r5, r5, r6
 801576c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015770:	b2c0      	uxtb	r0, r0
 8015772:	fa1f fc8c 	uxth.w	ip, ip
 8015776:	fb07 970a 	mla	r7, r7, sl, r9
 801577a:	fb00 500a 	mla	r0, r0, sl, r5
 801577e:	b2bf      	uxth	r7, r7
 8015780:	b280      	uxth	r0, r0
 8015782:	f10c 0501 	add.w	r5, ip, #1
 8015786:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801578a:	f107 0901 	add.w	r9, r7, #1
 801578e:	1c45      	adds	r5, r0, #1
 8015790:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015794:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015798:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801579c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80157a0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80157a4:	ea45 0c0c 	orr.w	ip, r5, ip
 80157a8:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80157ac:	ea4c 0c09 	orr.w	ip, ip, r9
 80157b0:	f824 c00b 	strh.w	ip, [r4, fp]
 80157b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80157b6:	4401      	add	r1, r0
 80157b8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80157ba:	f108 38ff 	add.w	r8, r8, #4294967295
 80157be:	4402      	add	r2, r0
 80157c0:	e75e      	b.n	8015680 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80157c2:	b005      	add	sp, #20
 80157c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080157c8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80157c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157cc:	b085      	sub	sp, #20
 80157ce:	4693      	mov	fp, r2
 80157d0:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80157d2:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80157d4:	6870      	ldr	r0, [r6, #4]
 80157d6:	9101      	str	r1, [sp, #4]
 80157d8:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80157dc:	fb00 2404 	mla	r4, r0, r4, r2
 80157e0:	6832      	ldr	r2, [r6, #0]
 80157e2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80157e6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80157ea:	682a      	ldr	r2, [r5, #0]
 80157ec:	9202      	str	r2, [sp, #8]
 80157ee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80157f2:	9a01      	ldr	r2, [sp, #4]
 80157f4:	2a00      	cmp	r2, #0
 80157f6:	dc03      	bgt.n	8015800 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80157f8:	f1bb 0f00 	cmp.w	fp, #0
 80157fc:	f340 809a 	ble.w	8015934 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8015800:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015802:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015806:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801580a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801580e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015810:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015814:	2b00      	cmp	r3, #0
 8015816:	dd0c      	ble.n	8015832 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8015818:	1406      	asrs	r6, r0, #16
 801581a:	d405      	bmi.n	8015828 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801581c:	454e      	cmp	r6, r9
 801581e:	da03      	bge.n	8015828 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015820:	1416      	asrs	r6, r2, #16
 8015822:	d401      	bmi.n	8015828 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015824:	4546      	cmp	r6, r8
 8015826:	db05      	blt.n	8015834 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015828:	4470      	add	r0, lr
 801582a:	4462      	add	r2, ip
 801582c:	3b01      	subs	r3, #1
 801582e:	3402      	adds	r4, #2
 8015830:	e7f0      	b.n	8015814 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015832:	d00f      	beq.n	8015854 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8015834:	1e5e      	subs	r6, r3, #1
 8015836:	fb0e 0706 	mla	r7, lr, r6, r0
 801583a:	143f      	asrs	r7, r7, #16
 801583c:	d541      	bpl.n	80158c2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801583e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015842:	4698      	mov	r8, r3
 8015844:	9603      	str	r6, [sp, #12]
 8015846:	f1b8 0f00 	cmp.w	r8, #0
 801584a:	dc56      	bgt.n	80158fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801584c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015850:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015854:	9b01      	ldr	r3, [sp, #4]
 8015856:	2b00      	cmp	r3, #0
 8015858:	dd6c      	ble.n	8015934 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801585a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801585e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015862:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015866:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015868:	ee31 1a05 	vadd.f32	s2, s2, s10
 801586c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015870:	eeb0 6a62 	vmov.f32	s12, s5
 8015874:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015878:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801587c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015880:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015884:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015888:	eeb0 6a43 	vmov.f32	s12, s6
 801588c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015890:	ee12 2a90 	vmov	r2, s5
 8015894:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015898:	fb92 fef3 	sdiv	lr, r2, r3
 801589c:	ee13 2a10 	vmov	r2, s6
 80158a0:	fb92 fcf3 	sdiv	ip, r2, r3
 80158a4:	9b01      	ldr	r3, [sp, #4]
 80158a6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158aa:	3b01      	subs	r3, #1
 80158ac:	9301      	str	r3, [sp, #4]
 80158ae:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80158b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80158b4:	eeb0 3a67 	vmov.f32	s6, s15
 80158b8:	bf08      	it	eq
 80158ba:	465b      	moveq	r3, fp
 80158bc:	eef0 2a47 	vmov.f32	s5, s14
 80158c0:	e797      	b.n	80157f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80158c2:	454f      	cmp	r7, r9
 80158c4:	dabb      	bge.n	801583e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80158c6:	fb0c 2606 	mla	r6, ip, r6, r2
 80158ca:	1436      	asrs	r6, r6, #16
 80158cc:	d4b7      	bmi.n	801583e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80158ce:	4546      	cmp	r6, r8
 80158d0:	dab5      	bge.n	801583e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80158d2:	461e      	mov	r6, r3
 80158d4:	46a0      	mov	r8, r4
 80158d6:	2e00      	cmp	r6, #0
 80158d8:	ddb8      	ble.n	801584c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80158da:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80158de:	9902      	ldr	r1, [sp, #8]
 80158e0:	1417      	asrs	r7, r2, #16
 80158e2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80158e6:	fb0a 9707 	mla	r7, sl, r7, r9
 80158ea:	4470      	add	r0, lr
 80158ec:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80158f0:	f828 7b02 	strh.w	r7, [r8], #2
 80158f4:	4462      	add	r2, ip
 80158f6:	3e01      	subs	r6, #1
 80158f8:	e7ed      	b.n	80158d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80158fa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80158fe:	d414      	bmi.n	801592a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015900:	68ae      	ldr	r6, [r5, #8]
 8015902:	454e      	cmp	r6, r9
 8015904:	dd11      	ble.n	801592a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015906:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801590a:	d40e      	bmi.n	801592a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801590c:	68ef      	ldr	r7, [r5, #12]
 801590e:	4557      	cmp	r7, sl
 8015910:	dd0b      	ble.n	801592a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8015912:	b236      	sxth	r6, r6
 8015914:	fb0a 9606 	mla	r6, sl, r6, r9
 8015918:	9f02      	ldr	r7, [sp, #8]
 801591a:	f06f 0101 	mvn.w	r1, #1
 801591e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015922:	fb01 f608 	mul.w	r6, r1, r8
 8015926:	9903      	ldr	r1, [sp, #12]
 8015928:	538f      	strh	r7, [r1, r6]
 801592a:	4470      	add	r0, lr
 801592c:	4462      	add	r2, ip
 801592e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015932:	e788      	b.n	8015846 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015934:	b005      	add	sp, #20
 8015936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801593a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801593a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801593e:	b087      	sub	sp, #28
 8015940:	468b      	mov	fp, r1
 8015942:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015944:	9203      	str	r2, [sp, #12]
 8015946:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801594a:	9204      	str	r2, [sp, #16]
 801594c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8015950:	6841      	ldr	r1, [r0, #4]
 8015952:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015956:	fb01 2505 	mla	r5, r1, r5, r2
 801595a:	6802      	ldr	r2, [r0, #0]
 801595c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015960:	f8d9 2000 	ldr.w	r2, [r9]
 8015964:	9201      	str	r2, [sp, #4]
 8015966:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801596a:	f1bb 0f00 	cmp.w	fp, #0
 801596e:	dc03      	bgt.n	8015978 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015970:	9a03      	ldr	r2, [sp, #12]
 8015972:	2a00      	cmp	r2, #0
 8015974:	f340 8159 	ble.w	8015c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8015978:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801597a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801597e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015982:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015986:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015988:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801598c:	2b00      	cmp	r3, #0
 801598e:	dd0e      	ble.n	80159ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015990:	1402      	asrs	r2, r0, #16
 8015992:	d405      	bmi.n	80159a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015994:	42ba      	cmp	r2, r7
 8015996:	da03      	bge.n	80159a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015998:	140a      	asrs	r2, r1, #16
 801599a:	d401      	bmi.n	80159a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801599c:	42b2      	cmp	r2, r6
 801599e:	db07      	blt.n	80159b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80159a0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80159a2:	4410      	add	r0, r2
 80159a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80159a6:	3b01      	subs	r3, #1
 80159a8:	4411      	add	r1, r2
 80159aa:	3502      	adds	r5, #2
 80159ac:	e7ee      	b.n	801598c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80159ae:	d017      	beq.n	80159e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80159b0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80159b2:	1e5a      	subs	r2, r3, #1
 80159b4:	fb04 0402 	mla	r4, r4, r2, r0
 80159b8:	1424      	asrs	r4, r4, #16
 80159ba:	d409      	bmi.n	80159d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80159bc:	42bc      	cmp	r4, r7
 80159be:	da07      	bge.n	80159d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80159c0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80159c2:	fb04 1202 	mla	r2, r4, r2, r1
 80159c6:	1412      	asrs	r2, r2, #16
 80159c8:	d402      	bmi.n	80159d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80159ca:	42b2      	cmp	r2, r6
 80159cc:	f2c0 80bf 	blt.w	8015b4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80159d0:	2700      	movs	r7, #0
 80159d2:	19da      	adds	r2, r3, r7
 80159d4:	2a00      	cmp	r2, #0
 80159d6:	dc3e      	bgt.n	8015a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80159d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159dc:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80159e0:	f1bb 0f00 	cmp.w	fp, #0
 80159e4:	f340 8121 	ble.w	8015c2a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80159e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159f0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80159f4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80159f6:	f1bb 0b01 	subs.w	fp, fp, #1
 80159fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a02:	eeb0 6a62 	vmov.f32	s12, s5
 8015a06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a12:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015a16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a1a:	eeb0 6a43 	vmov.f32	s12, s6
 8015a1e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a22:	ee12 2a90 	vmov	r2, s5
 8015a26:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a2e:	ee13 2a10 	vmov	r2, s6
 8015a32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015a36:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015a38:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a3a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a3e:	9a03      	ldr	r2, [sp, #12]
 8015a40:	9314      	str	r3, [sp, #80]	@ 0x50
 8015a42:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8015a46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015a48:	eeb0 3a67 	vmov.f32	s6, s15
 8015a4c:	bf08      	it	eq
 8015a4e:	4613      	moveq	r3, r2
 8015a50:	eef0 2a47 	vmov.f32	s5, s14
 8015a54:	e789      	b.n	801596a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015a56:	1406      	asrs	r6, r0, #16
 8015a58:	d42d      	bmi.n	8015ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015a5a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8015a5e:	42b4      	cmp	r4, r6
 8015a60:	dd29      	ble.n	8015ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015a62:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8015a66:	d426      	bmi.n	8015ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015a68:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8015a6c:	4562      	cmp	r2, ip
 8015a6e:	dd22      	ble.n	8015ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015a70:	b224      	sxth	r4, r4
 8015a72:	9a01      	ldr	r2, [sp, #4]
 8015a74:	fb0c 6404 	mla	r4, ip, r4, r6
 8015a78:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8015a7c:	0e22      	lsrs	r2, r4, #24
 8015a7e:	d01a      	beq.n	8015ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015a80:	9e04      	ldr	r6, [sp, #16]
 8015a82:	4372      	muls	r2, r6
 8015a84:	1c56      	adds	r6, r2, #1
 8015a86:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015a8a:	1212      	asrs	r2, r2, #8
 8015a8c:	0a26      	lsrs	r6, r4, #8
 8015a8e:	2aff      	cmp	r2, #255	@ 0xff
 8015a90:	9605      	str	r6, [sp, #20]
 8015a92:	d116      	bne.n	8015ac2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8015a94:	f06f 0201 	mvn.w	r2, #1
 8015a98:	fb02 fc07 	mul.w	ip, r2, r7
 8015a9c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015aa0:	0962      	lsrs	r2, r4, #5
 8015aa2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015aa6:	f026 0607 	bic.w	r6, r6, #7
 8015aaa:	4316      	orrs	r6, r2
 8015aac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015ab0:	4326      	orrs	r6, r4
 8015ab2:	f825 600c 	strh.w	r6, [r5, ip]
 8015ab6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015ab8:	4410      	add	r0, r2
 8015aba:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015abc:	3f01      	subs	r7, #1
 8015abe:	4411      	add	r1, r2
 8015ac0:	e787      	b.n	80159d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015ac2:	f06f 0601 	mvn.w	r6, #1
 8015ac6:	437e      	muls	r6, r7
 8015ac8:	fa1f fa82 	uxth.w	sl, r2
 8015acc:	f835 8006 	ldrh.w	r8, [r5, r6]
 8015ad0:	9602      	str	r6, [sp, #8]
 8015ad2:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8015ad6:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8015ada:	43d2      	mvns	r2, r2
 8015adc:	b2d2      	uxtb	r2, r2
 8015ade:	fb1c fc0a 	smulbb	ip, ip, sl
 8015ae2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015ae6:	fb0e ce02 	mla	lr, lr, r2, ip
 8015aea:	b2e4      	uxtb	r4, r4
 8015aec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8015af0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015af4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8015af8:	fa5f f888 	uxtb.w	r8, r8
 8015afc:	fb14 f40a 	smulbb	r4, r4, sl
 8015b00:	fb08 4402 	mla	r4, r8, r2, r4
 8015b04:	fa1f fe8e 	uxth.w	lr, lr
 8015b08:	fb16 f60a 	smulbb	r6, r6, sl
 8015b0c:	b2a4      	uxth	r4, r4
 8015b0e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8015b12:	fb0c 6c02 	mla	ip, ip, r2, r6
 8015b16:	f10e 0201 	add.w	r2, lr, #1
 8015b1a:	1c66      	adds	r6, r4, #1
 8015b1c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8015b20:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015b24:	fa1f fc8c 	uxth.w	ip, ip
 8015b28:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015b2c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8015b30:	ea46 0e0e 	orr.w	lr, r6, lr
 8015b34:	f10c 0601 	add.w	r6, ip, #1
 8015b38:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8015b3c:	0976      	lsrs	r6, r6, #5
 8015b3e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015b42:	9a02      	ldr	r2, [sp, #8]
 8015b44:	ea4e 0e06 	orr.w	lr, lr, r6
 8015b48:	f825 e002 	strh.w	lr, [r5, r2]
 8015b4c:	e7b3      	b.n	8015ab6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015b4e:	f04f 0800 	mov.w	r8, #0
 8015b52:	eba3 0208 	sub.w	r2, r3, r8
 8015b56:	2a00      	cmp	r2, #0
 8015b58:	f77f af3e 	ble.w	80159d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015b5c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8015b60:	1404      	asrs	r4, r0, #16
 8015b62:	140a      	asrs	r2, r1, #16
 8015b64:	fb06 4202 	mla	r2, r6, r2, r4
 8015b68:	9c01      	ldr	r4, [sp, #4]
 8015b6a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8015b6e:	0e22      	lsrs	r2, r4, #24
 8015b70:	d016      	beq.n	8015ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015b72:	9e04      	ldr	r6, [sp, #16]
 8015b74:	4372      	muls	r2, r6
 8015b76:	1c56      	adds	r6, r2, #1
 8015b78:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8015b7c:	1212      	asrs	r2, r2, #8
 8015b7e:	2aff      	cmp	r2, #255	@ 0xff
 8015b80:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8015b84:	d113      	bne.n	8015bae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8015b86:	0962      	lsrs	r2, r4, #5
 8015b88:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8015b8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8015b90:	f026 0607 	bic.w	r6, r6, #7
 8015b94:	4316      	orrs	r6, r2
 8015b96:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8015b9a:	4326      	orrs	r6, r4
 8015b9c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8015ba0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015ba2:	4410      	add	r0, r2
 8015ba4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015ba6:	f108 0801 	add.w	r8, r8, #1
 8015baa:	4411      	add	r1, r2
 8015bac:	e7d1      	b.n	8015b52 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8015bae:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8015bb2:	fa1f fa82 	uxth.w	sl, r2
 8015bb6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015bba:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8015bbe:	43d2      	mvns	r2, r2
 8015bc0:	b2d2      	uxtb	r2, r2
 8015bc2:	fb17 f70a 	smulbb	r7, r7, sl
 8015bc6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015bca:	fb0c 7c02 	mla	ip, ip, r2, r7
 8015bce:	b2e4      	uxtb	r4, r4
 8015bd0:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015bd4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015bd8:	fa5f fe8e 	uxtb.w	lr, lr
 8015bdc:	fb14 f40a 	smulbb	r4, r4, sl
 8015be0:	fb0e 4402 	mla	r4, lr, r2, r4
 8015be4:	b2f6      	uxtb	r6, r6
 8015be6:	fa1f fc8c 	uxth.w	ip, ip
 8015bea:	fb16 f60a 	smulbb	r6, r6, sl
 8015bee:	b2a4      	uxth	r4, r4
 8015bf0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015bf4:	fb07 6702 	mla	r7, r7, r2, r6
 8015bf8:	f10c 0201 	add.w	r2, ip, #1
 8015bfc:	1c66      	adds	r6, r4, #1
 8015bfe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8015c02:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8015c06:	b2bf      	uxth	r7, r7
 8015c08:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015c0c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015c10:	ea46 0c0c 	orr.w	ip, r6, ip
 8015c14:	1c7e      	adds	r6, r7, #1
 8015c16:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8015c1a:	0976      	lsrs	r6, r6, #5
 8015c1c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8015c20:	ea4c 0c06 	orr.w	ip, ip, r6
 8015c24:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8015c28:	e7ba      	b.n	8015ba0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015c2a:	b007      	add	sp, #28
 8015c2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c34:	b085      	sub	sp, #20
 8015c36:	468b      	mov	fp, r1
 8015c38:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015c3a:	9203      	str	r2, [sp, #12]
 8015c3c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015c40:	6841      	ldr	r1, [r0, #4]
 8015c42:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8015c46:	fb01 2404 	mla	r4, r1, r4, r2
 8015c4a:	6802      	ldr	r2, [r0, #0]
 8015c4c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015c50:	f8d8 2000 	ldr.w	r2, [r8]
 8015c54:	9201      	str	r2, [sp, #4]
 8015c56:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015c5a:	f1bb 0f00 	cmp.w	fp, #0
 8015c5e:	dc03      	bgt.n	8015c68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015c60:	9a03      	ldr	r2, [sp, #12]
 8015c62:	2a00      	cmp	r2, #0
 8015c64:	f340 814f 	ble.w	8015f06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015c68:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015c6a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015c6e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015c72:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015c76:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015c78:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015c7c:	2b00      	cmp	r3, #0
 8015c7e:	dd0e      	ble.n	8015c9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015c80:	1408      	asrs	r0, r1, #16
 8015c82:	d405      	bmi.n	8015c90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015c84:	42b8      	cmp	r0, r7
 8015c86:	da03      	bge.n	8015c90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015c88:	1410      	asrs	r0, r2, #16
 8015c8a:	d401      	bmi.n	8015c90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015c8c:	42b0      	cmp	r0, r6
 8015c8e:	db07      	blt.n	8015ca0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015c90:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015c92:	4401      	add	r1, r0
 8015c94:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015c96:	3b01      	subs	r3, #1
 8015c98:	4402      	add	r2, r0
 8015c9a:	3402      	adds	r4, #2
 8015c9c:	e7ee      	b.n	8015c7c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015c9e:	d017      	beq.n	8015cd0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015ca0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8015ca2:	1e58      	subs	r0, r3, #1
 8015ca4:	fb05 1500 	mla	r5, r5, r0, r1
 8015ca8:	142d      	asrs	r5, r5, #16
 8015caa:	d409      	bmi.n	8015cc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015cac:	42bd      	cmp	r5, r7
 8015cae:	da07      	bge.n	8015cc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015cb0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8015cb2:	fb05 2000 	mla	r0, r5, r0, r2
 8015cb6:	1400      	asrs	r0, r0, #16
 8015cb8:	d402      	bmi.n	8015cc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015cba:	42b0      	cmp	r0, r6
 8015cbc:	f2c0 80ba 	blt.w	8015e34 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8015cc0:	2600      	movs	r6, #0
 8015cc2:	1998      	adds	r0, r3, r6
 8015cc4:	2800      	cmp	r0, #0
 8015cc6:	dc3e      	bgt.n	8015d46 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8015cc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ccc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015cd0:	f1bb 0f00 	cmp.w	fp, #0
 8015cd4:	f340 8117 	ble.w	8015f06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8015cd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015cdc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ce0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015ce4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015ce6:	f1bb 0b01 	subs.w	fp, fp, #1
 8015cea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015cee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015cf2:	eeb0 6a62 	vmov.f32	s12, s5
 8015cf6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015cfa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015cfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d02:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015d06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d0a:	eeb0 6a43 	vmov.f32	s12, s6
 8015d0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d12:	ee12 2a90 	vmov	r2, s5
 8015d16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d1e:	ee13 2a10 	vmov	r2, s6
 8015d22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015d26:	9311      	str	r3, [sp, #68]	@ 0x44
 8015d28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015d2a:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d2e:	9a03      	ldr	r2, [sp, #12]
 8015d30:	9312      	str	r3, [sp, #72]	@ 0x48
 8015d32:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015d36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015d38:	eeb0 3a67 	vmov.f32	s6, s15
 8015d3c:	bf08      	it	eq
 8015d3e:	4613      	moveq	r3, r2
 8015d40:	eef0 2a47 	vmov.f32	s5, s14
 8015d44:	e789      	b.n	8015c5a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8015d46:	140f      	asrs	r7, r1, #16
 8015d48:	d424      	bmi.n	8015d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015d4a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015d4e:	42bd      	cmp	r5, r7
 8015d50:	dd20      	ble.n	8015d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015d52:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015d56:	d41d      	bmi.n	8015d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015d58:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8015d5c:	4560      	cmp	r0, ip
 8015d5e:	dd19      	ble.n	8015d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015d60:	b22d      	sxth	r5, r5
 8015d62:	fb0c 7505 	mla	r5, ip, r5, r7
 8015d66:	9801      	ldr	r0, [sp, #4]
 8015d68:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8015d6c:	0e07      	lsrs	r7, r0, #24
 8015d6e:	2fff      	cmp	r7, #255	@ 0xff
 8015d70:	d116      	bne.n	8015da0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015d72:	f06f 0501 	mvn.w	r5, #1
 8015d76:	fb05 f706 	mul.w	r7, r5, r6
 8015d7a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8015d7e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015d82:	0945      	lsrs	r5, r0, #5
 8015d84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015d88:	ea4c 0505 	orr.w	r5, ip, r5
 8015d8c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015d90:	4305      	orrs	r5, r0
 8015d92:	53e5      	strh	r5, [r4, r7]
 8015d94:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015d96:	4401      	add	r1, r0
 8015d98:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015d9a:	3e01      	subs	r6, #1
 8015d9c:	4402      	add	r2, r0
 8015d9e:	e790      	b.n	8015cc2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015da0:	b2fd      	uxtb	r5, r7
 8015da2:	2f00      	cmp	r7, #0
 8015da4:	d0f6      	beq.n	8015d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015da6:	f06f 0701 	mvn.w	r7, #1
 8015daa:	4377      	muls	r7, r6
 8015dac:	fa1f f985 	uxth.w	r9, r5
 8015db0:	f834 e007 	ldrh.w	lr, [r4, r7]
 8015db4:	9702      	str	r7, [sp, #8]
 8015db6:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015dba:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015dbe:	43ed      	mvns	r5, r5
 8015dc0:	b2ed      	uxtb	r5, r5
 8015dc2:	fb17 f709 	smulbb	r7, r7, r9
 8015dc6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015dca:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015dce:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015dd2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8015dd6:	b2c0      	uxtb	r0, r0
 8015dd8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015ddc:	fa5f fe8e 	uxtb.w	lr, lr
 8015de0:	fb10 f009 	smulbb	r0, r0, r9
 8015de4:	fb0e 0005 	mla	r0, lr, r5, r0
 8015de8:	b280      	uxth	r0, r0
 8015dea:	fa1f fc8c 	uxth.w	ip, ip
 8015dee:	fb1a fa09 	smulbb	sl, sl, r9
 8015df2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015df6:	fb07 a705 	mla	r7, r7, r5, sl
 8015dfa:	f100 0a01 	add.w	sl, r0, #1
 8015dfe:	f10c 0501 	add.w	r5, ip, #1
 8015e02:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015e06:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015e0a:	b2bf      	uxth	r7, r7
 8015e0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015e10:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015e14:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015e18:	f107 0a01 	add.w	sl, r7, #1
 8015e1c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015e20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e24:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015e28:	9802      	ldr	r0, [sp, #8]
 8015e2a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015e2e:	f824 c000 	strh.w	ip, [r4, r0]
 8015e32:	e7af      	b.n	8015d94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015e34:	f04f 0e00 	mov.w	lr, #0
 8015e38:	eba3 000e 	sub.w	r0, r3, lr
 8015e3c:	2800      	cmp	r0, #0
 8015e3e:	f77f af43 	ble.w	8015cc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015e42:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015e46:	140d      	asrs	r5, r1, #16
 8015e48:	1410      	asrs	r0, r2, #16
 8015e4a:	fb06 5000 	mla	r0, r6, r0, r5
 8015e4e:	9d01      	ldr	r5, [sp, #4]
 8015e50:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015e54:	0e2e      	lsrs	r6, r5, #24
 8015e56:	2eff      	cmp	r6, #255	@ 0xff
 8015e58:	d112      	bne.n	8015e80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8015e5a:	482c      	ldr	r0, [pc, #176]	@ (8015f0c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8015e5c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015e60:	0968      	lsrs	r0, r5, #5
 8015e62:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8015e66:	4330      	orrs	r0, r6
 8015e68:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015e6c:	4328      	orrs	r0, r5
 8015e6e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8015e72:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8015e74:	4401      	add	r1, r0
 8015e76:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8015e78:	f10e 0e01 	add.w	lr, lr, #1
 8015e7c:	4402      	add	r2, r0
 8015e7e:	e7db      	b.n	8015e38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8015e80:	b2f0      	uxtb	r0, r6
 8015e82:	2e00      	cmp	r6, #0
 8015e84:	d0f5      	beq.n	8015e72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015e86:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8015e8a:	fa1f f980 	uxth.w	r9, r0
 8015e8e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015e92:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015e96:	43c0      	mvns	r0, r0
 8015e98:	b2c0      	uxtb	r0, r0
 8015e9a:	fb16 f609 	smulbb	r6, r6, r9
 8015e9e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015ea2:	fb07 6700 	mla	r7, r7, r0, r6
 8015ea6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015eaa:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015eae:	b2ed      	uxtb	r5, r5
 8015eb0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015eb4:	fa5f fc8c 	uxtb.w	ip, ip
 8015eb8:	fb15 f509 	smulbb	r5, r5, r9
 8015ebc:	fb0c 5500 	mla	r5, ip, r0, r5
 8015ec0:	b2bf      	uxth	r7, r7
 8015ec2:	fb1a fa09 	smulbb	sl, sl, r9
 8015ec6:	b2ad      	uxth	r5, r5
 8015ec8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8015ecc:	fb06 a600 	mla	r6, r6, r0, sl
 8015ed0:	1c78      	adds	r0, r7, #1
 8015ed2:	f105 0a01 	add.w	sl, r5, #1
 8015ed6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015eda:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015ede:	b2b6      	uxth	r6, r6
 8015ee0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015ee4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8015ee8:	ea4a 0707 	orr.w	r7, sl, r7
 8015eec:	f106 0a01 	add.w	sl, r6, #1
 8015ef0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ef4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ef8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8015efc:	ea47 070a 	orr.w	r7, r7, sl
 8015f00:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8015f04:	e7b5      	b.n	8015e72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8015f06:	b005      	add	sp, #20
 8015f08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f0c:	fffff800 	.word	0xfffff800

08015f10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f14:	b087      	sub	sp, #28
 8015f16:	468b      	mov	fp, r1
 8015f18:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015f1a:	9203      	str	r2, [sp, #12]
 8015f1c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015f20:	9204      	str	r2, [sp, #16]
 8015f22:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015f26:	6841      	ldr	r1, [r0, #4]
 8015f28:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8015f2c:	fb01 2404 	mla	r4, r1, r4, r2
 8015f30:	6802      	ldr	r2, [r0, #0]
 8015f32:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015f36:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8015f3a:	3201      	adds	r2, #1
 8015f3c:	f022 0201 	bic.w	r2, r2, #1
 8015f40:	9200      	str	r2, [sp, #0]
 8015f42:	f8d9 2000 	ldr.w	r2, [r9]
 8015f46:	9201      	str	r2, [sp, #4]
 8015f48:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015f4c:	f1bb 0f00 	cmp.w	fp, #0
 8015f50:	dc03      	bgt.n	8015f5a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015f52:	9a03      	ldr	r2, [sp, #12]
 8015f54:	2a00      	cmp	r2, #0
 8015f56:	f340 8169 	ble.w	801622c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8015f5a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015f5c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8015f60:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8015f64:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015f68:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015f6a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015f6e:	2b00      	cmp	r3, #0
 8015f70:	dd0e      	ble.n	8015f90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015f72:	1402      	asrs	r2, r0, #16
 8015f74:	d405      	bmi.n	8015f82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015f76:	42ba      	cmp	r2, r7
 8015f78:	da03      	bge.n	8015f82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015f7a:	140a      	asrs	r2, r1, #16
 8015f7c:	d401      	bmi.n	8015f82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015f7e:	42b2      	cmp	r2, r6
 8015f80:	db07      	blt.n	8015f92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8015f82:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8015f84:	4410      	add	r0, r2
 8015f86:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015f88:	3b01      	subs	r3, #1
 8015f8a:	4411      	add	r1, r2
 8015f8c:	3402      	adds	r4, #2
 8015f8e:	e7ee      	b.n	8015f6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015f90:	d017      	beq.n	8015fc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015f92:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015f94:	1e5a      	subs	r2, r3, #1
 8015f96:	fb05 0502 	mla	r5, r5, r2, r0
 8015f9a:	142d      	asrs	r5, r5, #16
 8015f9c:	d409      	bmi.n	8015fb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015f9e:	42bd      	cmp	r5, r7
 8015fa0:	da07      	bge.n	8015fb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015fa2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015fa4:	fb05 1202 	mla	r2, r5, r2, r1
 8015fa8:	1412      	asrs	r2, r2, #16
 8015faa:	d402      	bmi.n	8015fb2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015fac:	42b2      	cmp	r2, r6
 8015fae:	f2c0 80c7 	blt.w	8016140 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8015fb2:	2700      	movs	r7, #0
 8015fb4:	19da      	adds	r2, r3, r7
 8015fb6:	2a00      	cmp	r2, #0
 8015fb8:	dc3e      	bgt.n	8016038 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015fba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fbe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fc2:	f1bb 0f00 	cmp.w	fp, #0
 8015fc6:	f340 8131 	ble.w	801622c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8015fca:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015fce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015fd2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015fd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015fd8:	f1bb 0b01 	subs.w	fp, fp, #1
 8015fdc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015fe0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015fe4:	eeb0 6a62 	vmov.f32	s12, s5
 8015fe8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015fec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ff0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ff4:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8015ff8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015ffc:	eeb0 6a43 	vmov.f32	s12, s6
 8016000:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016004:	ee12 2a90 	vmov	r2, s5
 8016008:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801600c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016010:	ee13 2a10 	vmov	r2, s6
 8016014:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016018:	9313      	str	r3, [sp, #76]	@ 0x4c
 801601a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801601c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016020:	9a03      	ldr	r2, [sp, #12]
 8016022:	9314      	str	r3, [sp, #80]	@ 0x50
 8016024:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016028:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801602a:	eeb0 3a67 	vmov.f32	s6, s15
 801602e:	bf08      	it	eq
 8016030:	4613      	moveq	r3, r2
 8016032:	eef0 2a47 	vmov.f32	s5, s14
 8016036:	e789      	b.n	8015f4c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016038:	1405      	asrs	r5, r0, #16
 801603a:	d435      	bmi.n	80160a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801603c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016040:	42aa      	cmp	r2, r5
 8016042:	dd31      	ble.n	80160a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016044:	140e      	asrs	r6, r1, #16
 8016046:	d42f      	bmi.n	80160a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016048:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801604c:	42b2      	cmp	r2, r6
 801604e:	dd2b      	ble.n	80160a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016050:	9a00      	ldr	r2, [sp, #0]
 8016052:	fb06 5502 	mla	r5, r6, r2, r5
 8016056:	086a      	lsrs	r2, r5, #1
 8016058:	9e01      	ldr	r6, [sp, #4]
 801605a:	5cb2      	ldrb	r2, [r6, r2]
 801605c:	07ee      	lsls	r6, r5, #31
 801605e:	bf54      	ite	pl
 8016060:	f002 020f 	andpl.w	r2, r2, #15
 8016064:	1112      	asrmi	r2, r2, #4
 8016066:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801606a:	b2d2      	uxtb	r2, r2
 801606c:	b1e2      	cbz	r2, 80160a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801606e:	9d04      	ldr	r5, [sp, #16]
 8016070:	436a      	muls	r2, r5
 8016072:	1c55      	adds	r5, r2, #1
 8016074:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016078:	4d6e      	ldr	r5, [pc, #440]	@ (8016234 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801607a:	682d      	ldr	r5, [r5, #0]
 801607c:	1212      	asrs	r2, r2, #8
 801607e:	0a2e      	lsrs	r6, r5, #8
 8016080:	2aff      	cmp	r2, #255	@ 0xff
 8016082:	9605      	str	r6, [sp, #20]
 8016084:	d116      	bne.n	80160b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016086:	f06f 0201 	mvn.w	r2, #1
 801608a:	fb02 fc07 	mul.w	ip, r2, r7
 801608e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016092:	096a      	lsrs	r2, r5, #5
 8016094:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016098:	f026 0607 	bic.w	r6, r6, #7
 801609c:	4316      	orrs	r6, r2
 801609e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80160a2:	432e      	orrs	r6, r5
 80160a4:	f824 600c 	strh.w	r6, [r4, ip]
 80160a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80160aa:	4410      	add	r0, r2
 80160ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80160ae:	3f01      	subs	r7, #1
 80160b0:	4411      	add	r1, r2
 80160b2:	e77f      	b.n	8015fb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80160b4:	f06f 0601 	mvn.w	r6, #1
 80160b8:	437e      	muls	r6, r7
 80160ba:	fa1f fa82 	uxth.w	sl, r2
 80160be:	f834 8006 	ldrh.w	r8, [r4, r6]
 80160c2:	9602      	str	r6, [sp, #8]
 80160c4:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80160c8:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80160cc:	43d2      	mvns	r2, r2
 80160ce:	b2d2      	uxtb	r2, r2
 80160d0:	fb1c fc0a 	smulbb	ip, ip, sl
 80160d4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80160d8:	fb0e ce02 	mla	lr, lr, r2, ip
 80160dc:	b2ed      	uxtb	r5, r5
 80160de:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80160e2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80160e6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80160ea:	fa5f f888 	uxtb.w	r8, r8
 80160ee:	fb15 f50a 	smulbb	r5, r5, sl
 80160f2:	fb08 5502 	mla	r5, r8, r2, r5
 80160f6:	fa1f fe8e 	uxth.w	lr, lr
 80160fa:	fb16 f60a 	smulbb	r6, r6, sl
 80160fe:	b2ad      	uxth	r5, r5
 8016100:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8016104:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016108:	f10e 0201 	add.w	r2, lr, #1
 801610c:	1c6e      	adds	r6, r5, #1
 801610e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016112:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016116:	fa1f fc8c 	uxth.w	ip, ip
 801611a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801611e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8016122:	ea46 0e0e 	orr.w	lr, r6, lr
 8016126:	f10c 0601 	add.w	r6, ip, #1
 801612a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801612e:	0976      	lsrs	r6, r6, #5
 8016130:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8016134:	9a02      	ldr	r2, [sp, #8]
 8016136:	ea4e 0e06 	orr.w	lr, lr, r6
 801613a:	f824 e002 	strh.w	lr, [r4, r2]
 801613e:	e7b3      	b.n	80160a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016140:	f04f 0800 	mov.w	r8, #0
 8016144:	eba3 0208 	sub.w	r2, r3, r8
 8016148:	2a00      	cmp	r2, #0
 801614a:	f77f af36 	ble.w	8015fba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801614e:	9e00      	ldr	r6, [sp, #0]
 8016150:	1402      	asrs	r2, r0, #16
 8016152:	140d      	asrs	r5, r1, #16
 8016154:	fb06 2505 	mla	r5, r6, r5, r2
 8016158:	086a      	lsrs	r2, r5, #1
 801615a:	9e01      	ldr	r6, [sp, #4]
 801615c:	5cb2      	ldrb	r2, [r6, r2]
 801615e:	07ed      	lsls	r5, r5, #31
 8016160:	bf54      	ite	pl
 8016162:	f002 020f 	andpl.w	r2, r2, #15
 8016166:	1112      	asrmi	r2, r2, #4
 8016168:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801616c:	b2d2      	uxtb	r2, r2
 801616e:	b1c2      	cbz	r2, 80161a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016170:	9d04      	ldr	r5, [sp, #16]
 8016172:	436a      	muls	r2, r5
 8016174:	1c55      	adds	r5, r2, #1
 8016176:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801617a:	4d2e      	ldr	r5, [pc, #184]	@ (8016234 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801617c:	1212      	asrs	r2, r2, #8
 801617e:	682e      	ldr	r6, [r5, #0]
 8016180:	2aff      	cmp	r2, #255	@ 0xff
 8016182:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016186:	d113      	bne.n	80161b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016188:	0972      	lsrs	r2, r6, #5
 801618a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801618e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016192:	f025 0507 	bic.w	r5, r5, #7
 8016196:	4315      	orrs	r5, r2
 8016198:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801619c:	4335      	orrs	r5, r6
 801619e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80161a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80161a4:	4410      	add	r0, r2
 80161a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80161a8:	f108 0801 	add.w	r8, r8, #1
 80161ac:	4411      	add	r1, r2
 80161ae:	e7c9      	b.n	8016144 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80161b0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80161b4:	fa1f fa82 	uxth.w	sl, r2
 80161b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80161bc:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80161c0:	43d2      	mvns	r2, r2
 80161c2:	b2d2      	uxtb	r2, r2
 80161c4:	fb17 f70a 	smulbb	r7, r7, sl
 80161c8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80161cc:	fb0c 7c02 	mla	ip, ip, r2, r7
 80161d0:	b2f6      	uxtb	r6, r6
 80161d2:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80161d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80161da:	fa5f fe8e 	uxtb.w	lr, lr
 80161de:	fb16 f60a 	smulbb	r6, r6, sl
 80161e2:	fb0e 6602 	mla	r6, lr, r2, r6
 80161e6:	b2ed      	uxtb	r5, r5
 80161e8:	fa1f fc8c 	uxth.w	ip, ip
 80161ec:	fb15 f50a 	smulbb	r5, r5, sl
 80161f0:	b2b6      	uxth	r6, r6
 80161f2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80161f6:	fb07 5702 	mla	r7, r7, r2, r5
 80161fa:	f10c 0201 	add.w	r2, ip, #1
 80161fe:	1c75      	adds	r5, r6, #1
 8016200:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016204:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016208:	b2bf      	uxth	r7, r7
 801620a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801620e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016212:	ea45 0c0c 	orr.w	ip, r5, ip
 8016216:	1c7d      	adds	r5, r7, #1
 8016218:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801621c:	096d      	lsrs	r5, r5, #5
 801621e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016222:	ea4c 0c05 	orr.w	ip, ip, r5
 8016226:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801622a:	e7ba      	b.n	80161a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801622c:	b007      	add	sp, #28
 801622e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016232:	bf00      	nop
 8016234:	20002dc4 	.word	0x20002dc4

08016238 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801623c:	b087      	sub	sp, #28
 801623e:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801654c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016242:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8016244:	9205      	str	r2, [sp, #20]
 8016246:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801624a:	9101      	str	r1, [sp, #4]
 801624c:	6841      	ldr	r1, [r0, #4]
 801624e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8016252:	fb01 2404 	mla	r4, r1, r4, r2
 8016256:	6802      	ldr	r2, [r0, #0]
 8016258:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801625c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016260:	3201      	adds	r2, #1
 8016262:	f022 0201 	bic.w	r2, r2, #1
 8016266:	9202      	str	r2, [sp, #8]
 8016268:	f8db 2000 	ldr.w	r2, [fp]
 801626c:	9203      	str	r2, [sp, #12]
 801626e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016272:	9a01      	ldr	r2, [sp, #4]
 8016274:	2a00      	cmp	r2, #0
 8016276:	dc03      	bgt.n	8016280 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016278:	9a05      	ldr	r2, [sp, #20]
 801627a:	2a00      	cmp	r2, #0
 801627c:	f340 8162 	ble.w	8016544 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016280:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016282:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016286:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801628a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801628e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016290:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016294:	2b00      	cmp	r3, #0
 8016296:	dd0e      	ble.n	80162b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016298:	1402      	asrs	r2, r0, #16
 801629a:	d405      	bmi.n	80162a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801629c:	42ba      	cmp	r2, r7
 801629e:	da03      	bge.n	80162a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80162a0:	140a      	asrs	r2, r1, #16
 80162a2:	d401      	bmi.n	80162a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80162a4:	42b2      	cmp	r2, r6
 80162a6:	db07      	blt.n	80162b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80162a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80162aa:	4410      	add	r0, r2
 80162ac:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80162ae:	3b01      	subs	r3, #1
 80162b0:	4411      	add	r1, r2
 80162b2:	3402      	adds	r4, #2
 80162b4:	e7ee      	b.n	8016294 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80162b6:	d017      	beq.n	80162e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80162b8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80162ba:	1e5a      	subs	r2, r3, #1
 80162bc:	fb05 0502 	mla	r5, r5, r2, r0
 80162c0:	142d      	asrs	r5, r5, #16
 80162c2:	d409      	bmi.n	80162d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80162c4:	42bd      	cmp	r5, r7
 80162c6:	da07      	bge.n	80162d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80162c8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80162ca:	fb05 1202 	mla	r2, r5, r2, r1
 80162ce:	1412      	asrs	r2, r2, #16
 80162d0:	d402      	bmi.n	80162d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80162d2:	42b2      	cmp	r2, r6
 80162d4:	f2c0 80c3 	blt.w	801645e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80162d8:	2500      	movs	r5, #0
 80162da:	195a      	adds	r2, r3, r5
 80162dc:	2a00      	cmp	r2, #0
 80162de:	dc3f      	bgt.n	8016360 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80162e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80162e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80162e8:	9b01      	ldr	r3, [sp, #4]
 80162ea:	2b00      	cmp	r3, #0
 80162ec:	f340 812a 	ble.w	8016544 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80162f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80162f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80162f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80162fc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80162fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016302:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016306:	eeb0 6a62 	vmov.f32	s12, s5
 801630a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801630e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016312:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016316:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801631a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801631e:	eeb0 6a43 	vmov.f32	s12, s6
 8016322:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016326:	ee12 2a90 	vmov	r2, s5
 801632a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801632e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016332:	ee13 2a10 	vmov	r2, s6
 8016336:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016338:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801633a:	fb92 f3f3 	sdiv	r3, r2, r3
 801633e:	9314      	str	r3, [sp, #80]	@ 0x50
 8016340:	9b01      	ldr	r3, [sp, #4]
 8016342:	9a05      	ldr	r2, [sp, #20]
 8016344:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016348:	3b01      	subs	r3, #1
 801634a:	9301      	str	r3, [sp, #4]
 801634c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016350:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016352:	eeb0 3a67 	vmov.f32	s6, s15
 8016356:	bf08      	it	eq
 8016358:	4613      	moveq	r3, r2
 801635a:	eef0 2a47 	vmov.f32	s5, s14
 801635e:	e788      	b.n	8016272 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016360:	1406      	asrs	r6, r0, #16
 8016362:	d42c      	bmi.n	80163be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016364:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016368:	42b2      	cmp	r2, r6
 801636a:	dd28      	ble.n	80163be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801636c:	140f      	asrs	r7, r1, #16
 801636e:	d426      	bmi.n	80163be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016370:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016374:	42ba      	cmp	r2, r7
 8016376:	dd22      	ble.n	80163be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016378:	9a02      	ldr	r2, [sp, #8]
 801637a:	fb07 6602 	mla	r6, r7, r2, r6
 801637e:	0872      	lsrs	r2, r6, #1
 8016380:	9f03      	ldr	r7, [sp, #12]
 8016382:	5cba      	ldrb	r2, [r7, r2]
 8016384:	07f6      	lsls	r6, r6, #31
 8016386:	bf54      	ite	pl
 8016388:	f002 020f 	andpl.w	r2, r2, #15
 801638c:	1112      	asrmi	r2, r2, #4
 801638e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016392:	b2d2      	uxtb	r2, r2
 8016394:	2aff      	cmp	r2, #255	@ 0xff
 8016396:	d118      	bne.n	80163ca <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016398:	f8d8 2000 	ldr.w	r2, [r8]
 801639c:	f06f 0601 	mvn.w	r6, #1
 80163a0:	fb06 f705 	mul.w	r7, r6, r5
 80163a4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 80163a8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80163ac:	0956      	lsrs	r6, r2, #5
 80163ae:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80163b2:	ea4c 0606 	orr.w	r6, ip, r6
 80163b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80163ba:	4316      	orrs	r6, r2
 80163bc:	53e6      	strh	r6, [r4, r7]
 80163be:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80163c0:	4410      	add	r0, r2
 80163c2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80163c4:	3d01      	subs	r5, #1
 80163c6:	4411      	add	r1, r2
 80163c8:	e787      	b.n	80162da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80163ca:	2a00      	cmp	r2, #0
 80163cc:	d0f7      	beq.n	80163be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80163ce:	f06f 0601 	mvn.w	r6, #1
 80163d2:	436e      	muls	r6, r5
 80163d4:	f8d8 c000 	ldr.w	ip, [r8]
 80163d8:	f834 e006 	ldrh.w	lr, [r4, r6]
 80163dc:	9604      	str	r6, [sp, #16]
 80163de:	fa1f f982 	uxth.w	r9, r2
 80163e2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80163e6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80163ea:	43d2      	mvns	r2, r2
 80163ec:	b2d2      	uxtb	r2, r2
 80163ee:	fb16 f609 	smulbb	r6, r6, r9
 80163f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80163f6:	fb07 6702 	mla	r7, r7, r2, r6
 80163fa:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80163fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016402:	fa5f fc8c 	uxtb.w	ip, ip
 8016406:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801640a:	fa5f fe8e 	uxtb.w	lr, lr
 801640e:	fb1c fc09 	smulbb	ip, ip, r9
 8016412:	fb0e cc02 	mla	ip, lr, r2, ip
 8016416:	b2bf      	uxth	r7, r7
 8016418:	fb1a fa09 	smulbb	sl, sl, r9
 801641c:	fa1f fc8c 	uxth.w	ip, ip
 8016420:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016424:	fb06 a602 	mla	r6, r6, r2, sl
 8016428:	1c7a      	adds	r2, r7, #1
 801642a:	f10c 0a01 	add.w	sl, ip, #1
 801642e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016432:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016436:	b2b6      	uxth	r6, r6
 8016438:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801643c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016440:	ea4a 0707 	orr.w	r7, sl, r7
 8016444:	f106 0a01 	add.w	sl, r6, #1
 8016448:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801644c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016450:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016454:	9a04      	ldr	r2, [sp, #16]
 8016456:	ea47 070a 	orr.w	r7, r7, sl
 801645a:	52a7      	strh	r7, [r4, r2]
 801645c:	e7af      	b.n	80163be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801645e:	f04f 0e00 	mov.w	lr, #0
 8016462:	eba3 020e 	sub.w	r2, r3, lr
 8016466:	2a00      	cmp	r2, #0
 8016468:	f77f af3a 	ble.w	80162e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801646c:	9e02      	ldr	r6, [sp, #8]
 801646e:	1402      	asrs	r2, r0, #16
 8016470:	140d      	asrs	r5, r1, #16
 8016472:	fb06 2505 	mla	r5, r6, r5, r2
 8016476:	086a      	lsrs	r2, r5, #1
 8016478:	9e03      	ldr	r6, [sp, #12]
 801647a:	5cb2      	ldrb	r2, [r6, r2]
 801647c:	07ed      	lsls	r5, r5, #31
 801647e:	bf54      	ite	pl
 8016480:	f002 020f 	andpl.w	r2, r2, #15
 8016484:	1112      	asrmi	r2, r2, #4
 8016486:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801648a:	b2d2      	uxtb	r2, r2
 801648c:	2aff      	cmp	r2, #255	@ 0xff
 801648e:	d115      	bne.n	80164bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016490:	f8d8 5000 	ldr.w	r5, [r8]
 8016494:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8016498:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801649c:	096a      	lsrs	r2, r5, #5
 801649e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80164a2:	4332      	orrs	r2, r6
 80164a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80164a8:	432a      	orrs	r2, r5
 80164aa:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80164ae:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80164b0:	4410      	add	r0, r2
 80164b2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80164b4:	f10e 0e01 	add.w	lr, lr, #1
 80164b8:	4411      	add	r1, r2
 80164ba:	e7d2      	b.n	8016462 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80164bc:	2a00      	cmp	r2, #0
 80164be:	d0f6      	beq.n	80164ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80164c0:	f8d8 7000 	ldr.w	r7, [r8]
 80164c4:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80164c8:	fa1f f982 	uxth.w	r9, r2
 80164cc:	ea4f 262c 	mov.w	r6, ip, asr #8
 80164d0:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80164d4:	43d2      	mvns	r2, r2
 80164d6:	b2d2      	uxtb	r2, r2
 80164d8:	fb15 f509 	smulbb	r5, r5, r9
 80164dc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80164e0:	fb06 5602 	mla	r6, r6, r2, r5
 80164e4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80164e8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80164ec:	b2ff      	uxtb	r7, r7
 80164ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80164f2:	fa5f fc8c 	uxtb.w	ip, ip
 80164f6:	fb17 f709 	smulbb	r7, r7, r9
 80164fa:	fb0c 7702 	mla	r7, ip, r2, r7
 80164fe:	b2b6      	uxth	r6, r6
 8016500:	fb1a fa09 	smulbb	sl, sl, r9
 8016504:	b2bf      	uxth	r7, r7
 8016506:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801650a:	fb05 a502 	mla	r5, r5, r2, sl
 801650e:	1c72      	adds	r2, r6, #1
 8016510:	f107 0a01 	add.w	sl, r7, #1
 8016514:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016518:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801651c:	b2ad      	uxth	r5, r5
 801651e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016522:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8016526:	ea4a 0606 	orr.w	r6, sl, r6
 801652a:	f105 0a01 	add.w	sl, r5, #1
 801652e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016532:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016536:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801653a:	ea46 060a 	orr.w	r6, r6, sl
 801653e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016542:	e7b4      	b.n	80164ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016544:	b007      	add	sp, #28
 8016546:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801654a:	bf00      	nop
 801654c:	20002dc4 	.word	0x20002dc4

08016550 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8016550:	4770      	bx	lr

08016552 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8016552:	4770      	bx	lr

08016554 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8016554:	4770      	bx	lr

08016556 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8016556:	4770      	bx	lr

08016558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016558:	4770      	bx	lr

0801655a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801655a:	4770      	bx	lr

0801655c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801655c:	4770      	bx	lr

0801655e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801655e:	4770      	bx	lr

08016560 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016560:	4770      	bx	lr

08016562 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016562:	4770      	bx	lr

08016564 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016564:	4770      	bx	lr

08016566 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016566:	4770      	bx	lr

08016568 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016568:	4770      	bx	lr

0801656a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801656a:	4770      	bx	lr

0801656c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801656c:	4770      	bx	lr

0801656e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801656e:	4770      	bx	lr

08016570 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016570:	4770      	bx	lr

08016572 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016572:	4770      	bx	lr

08016574 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016574:	4770      	bx	lr

08016576 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016576:	4770      	bx	lr

08016578 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016578:	4770      	bx	lr

0801657a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801657a:	4770      	bx	lr

0801657c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801657c:	4770      	bx	lr

0801657e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801657e:	4770      	bx	lr

08016580 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016580:	4770      	bx	lr

08016582 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016582:	4770      	bx	lr

08016584 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016584:	4770      	bx	lr

08016586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016586:	4770      	bx	lr

08016588 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016588:	4770      	bx	lr

0801658a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801658a:	4770      	bx	lr

0801658c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801658c:	4770      	bx	lr

0801658e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801658e:	4770      	bx	lr

08016590 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016590:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016594:	b088      	sub	sp, #32
 8016596:	ac08      	add	r4, sp, #32
 8016598:	4606      	mov	r6, r0
 801659a:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801659e:	4620      	mov	r0, r4
 80165a0:	4688      	mov	r8, r1
 80165a2:	4691      	mov	r9, r2
 80165a4:	f7fd fc32 	bl	8013e0c <_ZNK8touchgfx6Bitmap7getDataEv>
 80165a8:	6833      	ldr	r3, [r6, #0]
 80165aa:	4605      	mov	r5, r0
 80165ac:	4620      	mov	r0, r4
 80165ae:	699f      	ldr	r7, [r3, #24]
 80165b0:	f7fd fb3a 	bl	8013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80165b4:	4682      	mov	sl, r0
 80165b6:	4620      	mov	r0, r4
 80165b8:	f7fd fb6a 	bl	8013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80165bc:	9500      	str	r5, [sp, #0]
 80165be:	e9cd a001 	strd	sl, r0, [sp, #4]
 80165c2:	464b      	mov	r3, r9
 80165c4:	a806      	add	r0, sp, #24
 80165c6:	4642      	mov	r2, r8
 80165c8:	4631      	mov	r1, r6
 80165ca:	47b8      	blx	r7
 80165cc:	4628      	mov	r0, r5
 80165ce:	b008      	add	sp, #32
 80165d0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080165d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80165d4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80165d8:	2300      	movs	r3, #0
 80165da:	9300      	str	r3, [sp, #0]
 80165dc:	4b3d      	ldr	r3, [pc, #244]	@ (80166d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80165de:	781b      	ldrb	r3, [r3, #0]
 80165e0:	2b00      	cmp	r3, #0
 80165e2:	d137      	bne.n	8016654 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80165e4:	4a3c      	ldr	r2, [pc, #240]	@ (80166d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80165e6:	f9b2 2000 	ldrsh.w	r2, [r2]
 80165ea:	f8ad 2004 	strh.w	r2, [sp, #4]
 80165ee:	2b00      	cmp	r3, #0
 80165f0:	d132      	bne.n	8016658 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80165f2:	4b3a      	ldr	r3, [pc, #232]	@ (80166dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80165f4:	f9b3 3000 	ldrsh.w	r3, [r3]
 80165f8:	6808      	ldr	r0, [r1, #0]
 80165fa:	6849      	ldr	r1, [r1, #4]
 80165fc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016600:	ac02      	add	r4, sp, #8
 8016602:	ab02      	add	r3, sp, #8
 8016604:	c303      	stmia	r3!, {r0, r1}
 8016606:	4669      	mov	r1, sp
 8016608:	4620      	mov	r0, r4
 801660a:	f7f9 ff21 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801660e:	4668      	mov	r0, sp
 8016610:	f7f9 fef6 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016614:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016618:	f8bd 2000 	ldrh.w	r2, [sp]
 801661c:	4d30      	ldr	r5, [pc, #192]	@ (80166e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801661e:	4413      	add	r3, r2
 8016620:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016624:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016628:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801662c:	6828      	ldr	r0, [r5, #0]
 801662e:	4413      	add	r3, r2
 8016630:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016634:	6803      	ldr	r3, [r0, #0]
 8016636:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016638:	4798      	blx	r3
 801663a:	f010 0f01 	tst.w	r0, #1
 801663e:	462f      	mov	r7, r5
 8016640:	d00c      	beq.n	801665c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016642:	6828      	ldr	r0, [r5, #0]
 8016644:	6803      	ldr	r3, [r0, #0]
 8016646:	e894 0006 	ldmia.w	r4, {r1, r2}
 801664a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801664c:	4798      	blx	r3
 801664e:	b004      	add	sp, #16
 8016650:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016654:	4a21      	ldr	r2, [pc, #132]	@ (80166dc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016656:	e7c6      	b.n	80165e6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016658:	4b1f      	ldr	r3, [pc, #124]	@ (80166d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801665a:	e7cb      	b.n	80165f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801665c:	6838      	ldr	r0, [r7, #0]
 801665e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016662:	6803      	ldr	r3, [r0, #0]
 8016664:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016668:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801666a:	4798      	blx	r3
 801666c:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016670:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016674:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016678:	fb16 3602 	smlabb	r6, r6, r2, r3
 801667c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016680:	6838      	ldr	r0, [r7, #0]
 8016682:	6803      	ldr	r3, [r0, #0]
 8016684:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016686:	4798      	blx	r3
 8016688:	4a13      	ldr	r2, [pc, #76]	@ (80166d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801668a:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801668e:	8813      	ldrh	r3, [r2, #0]
 8016690:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016694:	fb03 1404 	mla	r4, r3, r4, r1
 8016698:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801669c:	435d      	muls	r5, r3
 801669e:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80166a2:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80166a6:	4691      	mov	r9, r2
 80166a8:	6838      	ldr	r0, [r7, #0]
 80166aa:	42ac      	cmp	r4, r5
 80166ac:	6803      	ldr	r3, [r0, #0]
 80166ae:	d20e      	bcs.n	80166ce <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80166b0:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 80166b4:	4632      	mov	r2, r6
 80166b6:	4643      	mov	r3, r8
 80166b8:	4621      	mov	r1, r4
 80166ba:	47d0      	blx	sl
 80166bc:	f8b9 3000 	ldrh.w	r3, [r9]
 80166c0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80166c4:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80166c8:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80166cc:	e7ec      	b.n	80166a8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80166ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80166d0:	4798      	blx	r3
 80166d2:	e7bc      	b.n	801664e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80166d4:	20002db4 	.word	0x20002db4
 80166d8:	20002db6 	.word	0x20002db6
 80166dc:	20002db8 	.word	0x20002db8
 80166e0:	20002dbc 	.word	0x20002dbc

080166e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80166e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166e8:	b08b      	sub	sp, #44	@ 0x2c
 80166ea:	460f      	mov	r7, r1
 80166ec:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 80166f0:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 80166f4:	4616      	mov	r6, r2
 80166f6:	f1bb 0f00 	cmp.w	fp, #0
 80166fa:	d04a      	beq.n	8016792 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80166fc:	6810      	ldr	r0, [r2, #0]
 80166fe:	6851      	ldr	r1, [r2, #4]
 8016700:	ad06      	add	r5, sp, #24
 8016702:	c503      	stmia	r5!, {r0, r1}
 8016704:	6818      	ldr	r0, [r3, #0]
 8016706:	6859      	ldr	r1, [r3, #4]
 8016708:	ad08      	add	r5, sp, #32
 801670a:	c503      	stmia	r5!, {r0, r1}
 801670c:	a806      	add	r0, sp, #24
 801670e:	f7f9 fe77 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016712:	4631      	mov	r1, r6
 8016714:	a808      	add	r0, sp, #32
 8016716:	f7f9 fe9b 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801671a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801671e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8016722:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016726:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801672a:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801672e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016732:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016736:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801673a:	4f5f      	ldr	r7, [pc, #380]	@ (80168b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801673c:	440a      	add	r2, r1
 801673e:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016742:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016746:	6838      	ldr	r0, [r7, #0]
 8016748:	4413      	add	r3, r2
 801674a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801674e:	6803      	ldr	r3, [r0, #0]
 8016750:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8016752:	4798      	blx	r3
 8016754:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8016758:	46b9      	mov	r9, r7
 801675a:	d11d      	bne.n	8016798 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801675c:	b9fc      	cbnz	r4, 801679e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801675e:	f010 0f01 	tst.w	r0, #1
 8016762:	d01c      	beq.n	801679e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016764:	f8d9 0000 	ldr.w	r0, [r9]
 8016768:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801676c:	6801      	ldr	r1, [r0, #0]
 801676e:	f8cd b00c 	str.w	fp, [sp, #12]
 8016772:	2700      	movs	r7, #0
 8016774:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016778:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801677c:	9402      	str	r4, [sp, #8]
 801677e:	b2ad      	uxth	r5, r5
 8016780:	fa1f f488 	uxth.w	r4, r8
 8016784:	9501      	str	r5, [sp, #4]
 8016786:	9400      	str	r4, [sp, #0]
 8016788:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801678a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801678e:	4631      	mov	r1, r6
 8016790:	47a0      	blx	r4
 8016792:	b00b      	add	sp, #44	@ 0x2c
 8016794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016798:	f010 0f04 	tst.w	r0, #4
 801679c:	e7e1      	b.n	8016762 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801679e:	f8d9 0000 	ldr.w	r0, [r9]
 80167a2:	6803      	ldr	r3, [r0, #0]
 80167a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80167a6:	4798      	blx	r3
 80167a8:	4b44      	ldr	r3, [pc, #272]	@ (80168bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80167aa:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80167ae:	881a      	ldrh	r2, [r3, #0]
 80167b0:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80167b4:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80167b8:	fb02 1404 	mla	r4, r2, r4, r1
 80167bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80167c0:	469a      	mov	sl, r3
 80167c2:	fb05 f502 	mul.w	r5, r5, r2
 80167c6:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80167ca:	d059      	beq.n	8016880 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80167cc:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 80167d0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80167d4:	fa1f f28b 	uxth.w	r2, fp
 80167d8:	fa1f f989 	uxth.w	r9, r9
 80167dc:	469e      	mov	lr, r3
 80167de:	42ac      	cmp	r4, r5
 80167e0:	d264      	bcs.n	80168ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80167e2:	eb04 0a07 	add.w	sl, r4, r7
 80167e6:	4554      	cmp	r4, sl
 80167e8:	d23d      	bcs.n	8016866 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80167ea:	8821      	ldrh	r1, [r4, #0]
 80167ec:	f836 3b02 	ldrh.w	r3, [r6], #2
 80167f0:	1208      	asrs	r0, r1, #8
 80167f2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80167f6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80167fa:	fb10 f009 	smulbb	r0, r0, r9
 80167fe:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8016802:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016806:	00c9      	lsls	r1, r1, #3
 8016808:	fb0c 0c02 	mla	ip, ip, r2, r0
 801680c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8016810:	10d8      	asrs	r0, r3, #3
 8016812:	b2c9      	uxtb	r1, r1
 8016814:	00db      	lsls	r3, r3, #3
 8016816:	fa1f fc8c 	uxth.w	ip, ip
 801681a:	fb1b fb09 	smulbb	fp, fp, r9
 801681e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8016822:	b2db      	uxtb	r3, r3
 8016824:	fb11 f109 	smulbb	r1, r1, r9
 8016828:	fb00 b002 	mla	r0, r0, r2, fp
 801682c:	fb03 1302 	mla	r3, r3, r2, r1
 8016830:	f10c 0b01 	add.w	fp, ip, #1
 8016834:	b29b      	uxth	r3, r3
 8016836:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801683a:	b280      	uxth	r0, r0
 801683c:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8016840:	f103 0c01 	add.w	ip, r3, #1
 8016844:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8016848:	1c43      	adds	r3, r0, #1
 801684a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801684e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016852:	0940      	lsrs	r0, r0, #5
 8016854:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016858:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801685c:	ea4c 0c00 	orr.w	ip, ip, r0
 8016860:	f824 cb02 	strh.w	ip, [r4], #2
 8016864:	e7bf      	b.n	80167e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8016866:	f8be 3000 	ldrh.w	r3, [lr]
 801686a:	eba3 0308 	sub.w	r3, r3, r8
 801686e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016872:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8016876:	eba3 0308 	sub.w	r3, r3, r8
 801687a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801687e:	e7ae      	b.n	80167de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8016880:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016884:	f8d9 0000 	ldr.w	r0, [r9]
 8016888:	42ac      	cmp	r4, r5
 801688a:	6803      	ldr	r3, [r0, #0]
 801688c:	d20e      	bcs.n	80168ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801688e:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8016892:	4632      	mov	r2, r6
 8016894:	463b      	mov	r3, r7
 8016896:	4621      	mov	r1, r4
 8016898:	47c0      	blx	r8
 801689a:	f8ba 3000 	ldrh.w	r3, [sl]
 801689e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80168a2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80168a6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80168aa:	e7eb      	b.n	8016884 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80168ac:	4b02      	ldr	r3, [pc, #8]	@ (80168b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80168ae:	6818      	ldr	r0, [r3, #0]
 80168b0:	6803      	ldr	r3, [r0, #0]
 80168b2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80168b4:	4798      	blx	r3
 80168b6:	e76c      	b.n	8016792 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80168b8:	20002dbc 	.word	0x20002dbc
 80168bc:	20002db6 	.word	0x20002db6

080168c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 80168c0:	b510      	push	{r4, lr}
 80168c2:	2104      	movs	r1, #4
 80168c4:	4604      	mov	r4, r0
 80168c6:	f00b fc82 	bl	80221ce <_ZdlPvj>
 80168ca:	4620      	mov	r0, r4
 80168cc:	bd10      	pop	{r4, pc}

080168ce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 80168ce:	b510      	push	{r4, lr}
 80168d0:	2104      	movs	r1, #4
 80168d2:	4604      	mov	r4, r0
 80168d4:	f00b fc7b 	bl	80221ce <_ZdlPvj>
 80168d8:	4620      	mov	r0, r4
 80168da:	bd10      	pop	{r4, pc}

080168dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 80168dc:	b510      	push	{r4, lr}
 80168de:	f640 0144 	movw	r1, #2116	@ 0x844
 80168e2:	4604      	mov	r4, r0
 80168e4:	f00b fc73 	bl	80221ce <_ZdlPvj>
 80168e8:	4620      	mov	r0, r4
 80168ea:	bd10      	pop	{r4, pc}

080168ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 80168ec:	b510      	push	{r4, lr}
 80168ee:	f44f 7182 	mov.w	r1, #260	@ 0x104
 80168f2:	4604      	mov	r4, r0
 80168f4:	f00b fc6b 	bl	80221ce <_ZdlPvj>
 80168f8:	4620      	mov	r0, r4
 80168fa:	bd10      	pop	{r4, pc}

080168fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80168fc:	b510      	push	{r4, lr}
 80168fe:	2104      	movs	r1, #4
 8016900:	4604      	mov	r4, r0
 8016902:	f00b fc64 	bl	80221ce <_ZdlPvj>
 8016906:	4620      	mov	r0, r4
 8016908:	bd10      	pop	{r4, pc}

0801690a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801690a:	b510      	push	{r4, lr}
 801690c:	2104      	movs	r1, #4
 801690e:	4604      	mov	r4, r0
 8016910:	f00b fc5d 	bl	80221ce <_ZdlPvj>
 8016914:	4620      	mov	r0, r4
 8016916:	bd10      	pop	{r4, pc}

08016918 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016918:	b510      	push	{r4, lr}
 801691a:	2104      	movs	r1, #4
 801691c:	4604      	mov	r4, r0
 801691e:	f00b fc56 	bl	80221ce <_ZdlPvj>
 8016922:	4620      	mov	r0, r4
 8016924:	bd10      	pop	{r4, pc}

08016926 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8016926:	b510      	push	{r4, lr}
 8016928:	2104      	movs	r1, #4
 801692a:	4604      	mov	r4, r0
 801692c:	f00b fc4f 	bl	80221ce <_ZdlPvj>
 8016930:	4620      	mov	r0, r4
 8016932:	bd10      	pop	{r4, pc}

08016934 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8016934:	b510      	push	{r4, lr}
 8016936:	2104      	movs	r1, #4
 8016938:	4604      	mov	r4, r0
 801693a:	f00b fc48 	bl	80221ce <_ZdlPvj>
 801693e:	4620      	mov	r0, r4
 8016940:	bd10      	pop	{r4, pc}

08016942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8016942:	b510      	push	{r4, lr}
 8016944:	2104      	movs	r1, #4
 8016946:	4604      	mov	r4, r0
 8016948:	f00b fc41 	bl	80221ce <_ZdlPvj>
 801694c:	4620      	mov	r0, r4
 801694e:	bd10      	pop	{r4, pc}

08016950 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8016950:	b510      	push	{r4, lr}
 8016952:	2104      	movs	r1, #4
 8016954:	4604      	mov	r4, r0
 8016956:	f00b fc3a 	bl	80221ce <_ZdlPvj>
 801695a:	4620      	mov	r0, r4
 801695c:	bd10      	pop	{r4, pc}

0801695e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801695e:	b510      	push	{r4, lr}
 8016960:	2104      	movs	r1, #4
 8016962:	4604      	mov	r4, r0
 8016964:	f00b fc33 	bl	80221ce <_ZdlPvj>
 8016968:	4620      	mov	r0, r4
 801696a:	bd10      	pop	{r4, pc}

0801696c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801696c:	b510      	push	{r4, lr}
 801696e:	2104      	movs	r1, #4
 8016970:	4604      	mov	r4, r0
 8016972:	f00b fc2c 	bl	80221ce <_ZdlPvj>
 8016976:	4620      	mov	r0, r4
 8016978:	bd10      	pop	{r4, pc}

0801697a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801697a:	b510      	push	{r4, lr}
 801697c:	2104      	movs	r1, #4
 801697e:	4604      	mov	r4, r0
 8016980:	f00b fc25 	bl	80221ce <_ZdlPvj>
 8016984:	4620      	mov	r0, r4
 8016986:	bd10      	pop	{r4, pc}

08016988 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016988:	b510      	push	{r4, lr}
 801698a:	2104      	movs	r1, #4
 801698c:	4604      	mov	r4, r0
 801698e:	f00b fc1e 	bl	80221ce <_ZdlPvj>
 8016992:	4620      	mov	r0, r4
 8016994:	bd10      	pop	{r4, pc}

08016996 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016996:	b510      	push	{r4, lr}
 8016998:	2104      	movs	r1, #4
 801699a:	4604      	mov	r4, r0
 801699c:	f00b fc17 	bl	80221ce <_ZdlPvj>
 80169a0:	4620      	mov	r0, r4
 80169a2:	bd10      	pop	{r4, pc}

080169a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80169a4:	b510      	push	{r4, lr}
 80169a6:	2104      	movs	r1, #4
 80169a8:	4604      	mov	r4, r0
 80169aa:	f00b fc10 	bl	80221ce <_ZdlPvj>
 80169ae:	4620      	mov	r0, r4
 80169b0:	bd10      	pop	{r4, pc}

080169b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80169b2:	b510      	push	{r4, lr}
 80169b4:	2104      	movs	r1, #4
 80169b6:	4604      	mov	r4, r0
 80169b8:	f00b fc09 	bl	80221ce <_ZdlPvj>
 80169bc:	4620      	mov	r0, r4
 80169be:	bd10      	pop	{r4, pc}

080169c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80169c0:	b510      	push	{r4, lr}
 80169c2:	2104      	movs	r1, #4
 80169c4:	4604      	mov	r4, r0
 80169c6:	f00b fc02 	bl	80221ce <_ZdlPvj>
 80169ca:	4620      	mov	r0, r4
 80169cc:	bd10      	pop	{r4, pc}

080169ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80169ce:	b510      	push	{r4, lr}
 80169d0:	2104      	movs	r1, #4
 80169d2:	4604      	mov	r4, r0
 80169d4:	f00b fbfb 	bl	80221ce <_ZdlPvj>
 80169d8:	4620      	mov	r0, r4
 80169da:	bd10      	pop	{r4, pc}

080169dc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80169dc:	b510      	push	{r4, lr}
 80169de:	2104      	movs	r1, #4
 80169e0:	4604      	mov	r4, r0
 80169e2:	f00b fbf4 	bl	80221ce <_ZdlPvj>
 80169e6:	4620      	mov	r0, r4
 80169e8:	bd10      	pop	{r4, pc}

080169ea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80169ea:	b510      	push	{r4, lr}
 80169ec:	2104      	movs	r1, #4
 80169ee:	4604      	mov	r4, r0
 80169f0:	f00b fbed 	bl	80221ce <_ZdlPvj>
 80169f4:	4620      	mov	r0, r4
 80169f6:	bd10      	pop	{r4, pc}

080169f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80169f8:	b510      	push	{r4, lr}
 80169fa:	2104      	movs	r1, #4
 80169fc:	4604      	mov	r4, r0
 80169fe:	f00b fbe6 	bl	80221ce <_ZdlPvj>
 8016a02:	4620      	mov	r0, r4
 8016a04:	bd10      	pop	{r4, pc}

08016a06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016a06:	b510      	push	{r4, lr}
 8016a08:	2104      	movs	r1, #4
 8016a0a:	4604      	mov	r4, r0
 8016a0c:	f00b fbdf 	bl	80221ce <_ZdlPvj>
 8016a10:	4620      	mov	r0, r4
 8016a12:	bd10      	pop	{r4, pc}

08016a14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8016a14:	b510      	push	{r4, lr}
 8016a16:	2104      	movs	r1, #4
 8016a18:	4604      	mov	r4, r0
 8016a1a:	f00b fbd8 	bl	80221ce <_ZdlPvj>
 8016a1e:	4620      	mov	r0, r4
 8016a20:	bd10      	pop	{r4, pc}

08016a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8016a22:	b510      	push	{r4, lr}
 8016a24:	2104      	movs	r1, #4
 8016a26:	4604      	mov	r4, r0
 8016a28:	f00b fbd1 	bl	80221ce <_ZdlPvj>
 8016a2c:	4620      	mov	r0, r4
 8016a2e:	bd10      	pop	{r4, pc}

08016a30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8016a30:	b510      	push	{r4, lr}
 8016a32:	2104      	movs	r1, #4
 8016a34:	4604      	mov	r4, r0
 8016a36:	f00b fbca 	bl	80221ce <_ZdlPvj>
 8016a3a:	4620      	mov	r0, r4
 8016a3c:	bd10      	pop	{r4, pc}

08016a3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8016a3e:	b510      	push	{r4, lr}
 8016a40:	2104      	movs	r1, #4
 8016a42:	4604      	mov	r4, r0
 8016a44:	f00b fbc3 	bl	80221ce <_ZdlPvj>
 8016a48:	4620      	mov	r0, r4
 8016a4a:	bd10      	pop	{r4, pc}

08016a4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8016a4c:	b510      	push	{r4, lr}
 8016a4e:	2104      	movs	r1, #4
 8016a50:	4604      	mov	r4, r0
 8016a52:	f00b fbbc 	bl	80221ce <_ZdlPvj>
 8016a56:	4620      	mov	r0, r4
 8016a58:	bd10      	pop	{r4, pc}

08016a5a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8016a5a:	b510      	push	{r4, lr}
 8016a5c:	2104      	movs	r1, #4
 8016a5e:	4604      	mov	r4, r0
 8016a60:	f00b fbb5 	bl	80221ce <_ZdlPvj>
 8016a64:	4620      	mov	r0, r4
 8016a66:	bd10      	pop	{r4, pc}

08016a68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8016a68:	b510      	push	{r4, lr}
 8016a6a:	2104      	movs	r1, #4
 8016a6c:	4604      	mov	r4, r0
 8016a6e:	f00b fbae 	bl	80221ce <_ZdlPvj>
 8016a72:	4620      	mov	r0, r4
 8016a74:	bd10      	pop	{r4, pc}

08016a76 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8016a76:	b510      	push	{r4, lr}
 8016a78:	2104      	movs	r1, #4
 8016a7a:	4604      	mov	r4, r0
 8016a7c:	f00b fba7 	bl	80221ce <_ZdlPvj>
 8016a80:	4620      	mov	r0, r4
 8016a82:	bd10      	pop	{r4, pc}

08016a84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 8016a84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a88:	b08f      	sub	sp, #60	@ 0x3c
 8016a8a:	4616      	mov	r6, r2
 8016a8c:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 8016a90:	9205      	str	r2, [sp, #20]
 8016a92:	4682      	mov	sl, r0
 8016a94:	460d      	mov	r5, r1
 8016a96:	2a00      	cmp	r2, #0
 8016a98:	f000 82b7 	beq.w	801700a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 8016a9c:	6830      	ldr	r0, [r6, #0]
 8016a9e:	6871      	ldr	r1, [r6, #4]
 8016aa0:	ac0a      	add	r4, sp, #40	@ 0x28
 8016aa2:	c403      	stmia	r4!, {r0, r1}
 8016aa4:	6818      	ldr	r0, [r3, #0]
 8016aa6:	6859      	ldr	r1, [r3, #4]
 8016aa8:	ac0c      	add	r4, sp, #48	@ 0x30
 8016aaa:	c403      	stmia	r4!, {r0, r1}
 8016aac:	a80a      	add	r0, sp, #40	@ 0x28
 8016aae:	f7f9 fca7 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016ab2:	4631      	mov	r1, r6
 8016ab4:	a80c      	add	r0, sp, #48	@ 0x30
 8016ab6:	f7f9 fccb 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016aba:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016abe:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8016ac2:	bfd7      	itett	le
 8016ac4:	b293      	uxthle	r3, r2
 8016ac6:	2301      	movgt	r3, #1
 8016ac8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016acc:	fb91 f3f3 	sdivle	r3, r1, r3
 8016ad0:	9300      	str	r3, [sp, #0]
 8016ad2:	f105 0308 	add.w	r3, r5, #8
 8016ad6:	9900      	ldr	r1, [sp, #0]
 8016ad8:	9306      	str	r3, [sp, #24]
 8016ada:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8016ade:	440b      	add	r3, r1
 8016ae0:	3b01      	subs	r3, #1
 8016ae2:	fb93 f3f1 	sdiv	r3, r3, r1
 8016ae6:	9906      	ldr	r1, [sp, #24]
 8016ae8:	3b01      	subs	r3, #1
 8016aea:	b29b      	uxth	r3, r3
 8016aec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016af0:	9307      	str	r3, [sp, #28]
 8016af2:	9900      	ldr	r1, [sp, #0]
 8016af4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8016af8:	fb93 f0f1 	sdiv	r0, r3, r1
 8016afc:	b284      	uxth	r4, r0
 8016afe:	9402      	str	r4, [sp, #8]
 8016b00:	9d02      	ldr	r5, [sp, #8]
 8016b02:	9c00      	ldr	r4, [sp, #0]
 8016b04:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8016b08:	fb05 3414 	mls	r4, r5, r4, r3
 8016b0c:	fb14 f402 	smulbb	r4, r4, r2
 8016b10:	440c      	add	r4, r1
 8016b12:	b2a4      	uxth	r4, r4
 8016b14:	2d00      	cmp	r5, #0
 8016b16:	d06c      	beq.n	8016bf2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8016b18:	1e6a      	subs	r2, r5, #1
 8016b1a:	9806      	ldr	r0, [sp, #24]
 8016b1c:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8016b20:	9a07      	ldr	r2, [sp, #28]
 8016b22:	ba36      	rev	r6, r6
 8016b24:	4416      	add	r6, r2
 8016b26:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8016b2a:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8016b2e:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 8016e64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8016b32:	4411      	add	r1, r2
 8016b34:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8016b38:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8016b3c:	4413      	add	r3, r2
 8016b3e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016b42:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8016b46:	9301      	str	r3, [sp, #4]
 8016b48:	4bc4      	ldr	r3, [pc, #784]	@ (8016e5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 8016b4a:	6818      	ldr	r0, [r3, #0]
 8016b4c:	6803      	ldr	r3, [r0, #0]
 8016b4e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016b50:	4798      	blx	r3
 8016b52:	4bc3      	ldr	r3, [pc, #780]	@ (8016e60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8016b54:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8016b58:	881b      	ldrh	r3, [r3, #0]
 8016b5a:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 8016b5e:	fb03 2808 	mla	r8, r3, r8, r2
 8016b62:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 8016b66:	436b      	muls	r3, r5
 8016b68:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 8016b6c:	9309      	str	r3, [sp, #36]	@ 0x24
 8016b6e:	2500      	movs	r5, #0
 8016b70:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8016b74:	fb94 f3f3 	sdiv	r3, r4, r3
 8016b78:	9304      	str	r3, [sp, #16]
 8016b7a:	f10a 0304 	add.w	r3, sl, #4
 8016b7e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8016b82:	4629      	mov	r1, r5
 8016b84:	4618      	mov	r0, r3
 8016b86:	9308      	str	r3, [sp, #32]
 8016b88:	f00b fdd5 	bl	8022736 <memset>
 8016b8c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016b8e:	4543      	cmp	r3, r8
 8016b90:	f240 8236 	bls.w	8017000 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 8016b94:	2203      	movs	r2, #3
 8016b96:	2107      	movs	r1, #7
 8016b98:	200b      	movs	r0, #11
 8016b9a:	2c00      	cmp	r4, #0
 8016b9c:	f000 8131 	beq.w	8016e02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 8016ba0:	7833      	ldrb	r3, [r6, #0]
 8016ba2:	b2db      	uxtb	r3, r3
 8016ba4:	2bfe      	cmp	r3, #254	@ 0xfe
 8016ba6:	d126      	bne.n	8016bf6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 8016ba8:	f896 e001 	ldrb.w	lr, [r6, #1]
 8016bac:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016bb0:	f896 b003 	ldrb.w	fp, [r6, #3]
 8016bb4:	fa5f fe8e 	uxtb.w	lr, lr
 8016bb8:	fa5f fc8c 	uxtb.w	ip, ip
 8016bbc:	f36e 0507 	bfi	r5, lr, #0, #8
 8016bc0:	f36c 250f 	bfi	r5, ip, #8, #8
 8016bc4:	fa5f fb8b 	uxtb.w	fp, fp
 8016bc8:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8016bcc:	f36b 4517 	bfi	r5, fp, #16, #8
 8016bd0:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8016bd4:	0e2b      	lsrs	r3, r5, #24
 8016bd6:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8016bda:	fb10 c303 	smlabb	r3, r0, r3, ip
 8016bde:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016be2:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016be6:	3c01      	subs	r4, #1
 8016be8:	1d37      	adds	r7, r6, #4
 8016bea:	b2a4      	uxth	r4, r4
 8016bec:	605d      	str	r5, [r3, #4]
 8016bee:	463e      	mov	r6, r7
 8016bf0:	e7d3      	b.n	8016b9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8016bf2:	9e07      	ldr	r6, [sp, #28]
 8016bf4:	e797      	b.n	8016b26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8016bf6:	2bff      	cmp	r3, #255	@ 0xff
 8016bf8:	d127      	bne.n	8016c4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 8016bfa:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016bfe:	78b3      	ldrb	r3, [r6, #2]
 8016c00:	f896 e003 	ldrb.w	lr, [r6, #3]
 8016c04:	f896 b004 	ldrb.w	fp, [r6, #4]
 8016c08:	fa5f fc8c 	uxtb.w	ip, ip
 8016c0c:	b2db      	uxtb	r3, r3
 8016c0e:	f36c 0507 	bfi	r5, ip, #0, #8
 8016c12:	f363 250f 	bfi	r5, r3, #8, #8
 8016c16:	fa5f fe8e 	uxtb.w	lr, lr
 8016c1a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8016c1e:	fb12 330e 	smlabb	r3, r2, lr, r3
 8016c22:	fa5f fb8b 	uxtb.w	fp, fp
 8016c26:	f36e 4517 	bfi	r5, lr, #16, #8
 8016c2a:	fb11 330c 	smlabb	r3, r1, ip, r3
 8016c2e:	f36b 651f 	bfi	r5, fp, #24, #8
 8016c32:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 8016c36:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8016c3a:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8016c3e:	3c01      	subs	r4, #1
 8016c40:	1d77      	adds	r7, r6, #5
 8016c42:	b2a4      	uxth	r4, r4
 8016c44:	f8cb 5004 	str.w	r5, [fp, #4]
 8016c48:	e7d1      	b.n	8016bee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016c4a:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8016c4e:	f106 0701 	add.w	r7, r6, #1
 8016c52:	d107      	bne.n	8016c64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8016c54:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016c58:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016c5c:	685d      	ldr	r5, [r3, #4]
 8016c5e:	3c01      	subs	r4, #1
 8016c60:	b2a4      	uxth	r4, r4
 8016c62:	e7c4      	b.n	8016bee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016c64:	f1bc 0f01 	cmp.w	ip, #1
 8016c68:	d12c      	bne.n	8016cc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 8016c6a:	f003 0e03 	and.w	lr, r3, #3
 8016c6e:	f1ae 0e02 	sub.w	lr, lr, #2
 8016c72:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 8016c76:	fa5f fe8e 	uxtb.w	lr, lr
 8016c7a:	f003 0c0c 	and.w	ip, r3, #12
 8016c7e:	f36e 0507 	bfi	r5, lr, #0, #8
 8016c82:	f1ac 0c08 	sub.w	ip, ip, #8
 8016c86:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016c8a:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 8016c8e:	f36c 250f 	bfi	r5, ip, #8, #8
 8016c92:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8016c96:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016c9a:	3b02      	subs	r3, #2
 8016c9c:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016ca0:	b2db      	uxtb	r3, r3
 8016ca2:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8016ca6:	f363 4517 	bfi	r5, r3, #16, #8
 8016caa:	fb12 cc03 	smlabb	ip, r2, r3, ip
 8016cae:	0e2e      	lsrs	r6, r5, #24
 8016cb0:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 8016cb4:	fb10 c606 	smlabb	r6, r0, r6, ip
 8016cb8:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8016cbc:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8016cc0:	6075      	str	r5, [r6, #4]
 8016cc2:	e7cc      	b.n	8016c5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8016cc4:	f1bc 0f02 	cmp.w	ip, #2
 8016cc8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016ccc:	d12a      	bne.n	8016d24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8016cce:	1cb7      	adds	r7, r6, #2
 8016cd0:	7876      	ldrb	r6, [r6, #1]
 8016cd2:	b2f6      	uxtb	r6, r6
 8016cd4:	f006 0c0f 	and.w	ip, r6, #15
 8016cd8:	3b20      	subs	r3, #32
 8016cda:	f1ac 0c08 	sub.w	ip, ip, #8
 8016cde:	449c      	add	ip, r3
 8016ce0:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8016ce4:	fa5f fc8c 	uxtb.w	ip, ip
 8016ce8:	f36c 0507 	bfi	r5, ip, #0, #8
 8016cec:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8016cf0:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8016cf4:	fa5f fe8e 	uxtb.w	lr, lr
 8016cf8:	1136      	asrs	r6, r6, #4
 8016cfa:	f36e 250f 	bfi	r5, lr, #8, #8
 8016cfe:	3e08      	subs	r6, #8
 8016d00:	4433      	add	r3, r6
 8016d02:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016d06:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 8016d0a:	b2db      	uxtb	r3, r3
 8016d0c:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8016d10:	f363 4517 	bfi	r5, r3, #16, #8
 8016d14:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8016d18:	0e2e      	lsrs	r6, r5, #24
 8016d1a:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8016d1e:	fb10 e606 	smlabb	r6, r0, r6, lr
 8016d22:	e7c9      	b.n	8016cb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8016d24:	1c5e      	adds	r6, r3, #1
 8016d26:	42a6      	cmp	r6, r4
 8016d28:	dd4e      	ble.n	8016dc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 8016d2a:	1b36      	subs	r6, r6, r4
 8016d2c:	2e00      	cmp	r6, #0
 8016d2e:	dc4e      	bgt.n	8016dce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8016d30:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016d34:	2400      	movs	r4, #0
 8016d36:	f1bb 0f00 	cmp.w	fp, #0
 8016d3a:	f340 8122 	ble.w	8016f82 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8016d3e:	1c7b      	adds	r3, r7, #1
 8016d40:	9303      	str	r3, [sp, #12]
 8016d42:	783b      	ldrb	r3, [r7, #0]
 8016d44:	b2db      	uxtb	r3, r3
 8016d46:	2bfe      	cmp	r3, #254	@ 0xfe
 8016d48:	d160      	bne.n	8016e0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 8016d4a:	7879      	ldrb	r1, [r7, #1]
 8016d4c:	78ba      	ldrb	r2, [r7, #2]
 8016d4e:	78f8      	ldrb	r0, [r7, #3]
 8016d50:	b2c9      	uxtb	r1, r1
 8016d52:	f361 0507 	bfi	r5, r1, #0, #8
 8016d56:	b2d2      	uxtb	r2, r2
 8016d58:	1d3b      	adds	r3, r7, #4
 8016d5a:	f362 250f 	bfi	r5, r2, #8, #8
 8016d5e:	b2c0      	uxtb	r0, r0
 8016d60:	9303      	str	r3, [sp, #12]
 8016d62:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016d66:	2303      	movs	r3, #3
 8016d68:	fb13 2200 	smlabb	r2, r3, r0, r2
 8016d6c:	f360 4517 	bfi	r5, r0, #16, #8
 8016d70:	2307      	movs	r3, #7
 8016d72:	fb13 2101 	smlabb	r1, r3, r1, r2
 8016d76:	0e2e      	lsrs	r6, r5, #24
 8016d78:	230b      	movs	r3, #11
 8016d7a:	fb13 1306 	smlabb	r3, r3, r6, r1
 8016d7e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016d82:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016d86:	605d      	str	r5, [r3, #4]
 8016d88:	2601      	movs	r6, #1
 8016d8a:	4637      	mov	r7, r6
 8016d8c:	0e2b      	lsrs	r3, r5, #24
 8016d8e:	ebab 0b07 	sub.w	fp, fp, r7
 8016d92:	eba6 0607 	sub.w	r6, r6, r7
 8016d96:	f040 80d3 	bne.w	8016f40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 8016d9a:	b18c      	cbz	r4, 8016dc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 8016d9c:	4648      	mov	r0, r9
 8016d9e:	00a1      	lsls	r1, r4, #2
 8016da0:	f7f5 faeb 	bl	800c37a <_ZN8touchgfx5paint9flushLineEPmi>
 8016da4:	9b05      	ldr	r3, [sp, #20]
 8016da6:	4622      	mov	r2, r4
 8016da8:	4649      	mov	r1, r9
 8016daa:	4640      	mov	r0, r8
 8016dac:	f7f5 fb98 	bl	800c4e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8016db0:	4b2c      	ldr	r3, [pc, #176]	@ (8016e64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 8016db2:	4a2d      	ldr	r2, [pc, #180]	@ (8016e68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 8016db4:	4599      	cmp	r9, r3
 8016db6:	bf08      	it	eq
 8016db8:	4613      	moveq	r3, r2
 8016dba:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016dbe:	4699      	mov	r9, r3
 8016dc0:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8016dc4:	2400      	movs	r4, #0
 8016dc6:	e0da      	b.n	8016f7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8016dc8:	1ba6      	subs	r6, r4, r6
 8016dca:	b2b4      	uxth	r4, r6
 8016dcc:	e70f      	b.n	8016bee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8016dce:	9b01      	ldr	r3, [sp, #4]
 8016dd0:	9a01      	ldr	r2, [sp, #4]
 8016dd2:	42b3      	cmp	r3, r6
 8016dd4:	bfa8      	it	ge
 8016dd6:	4633      	movge	r3, r6
 8016dd8:	0e2c      	lsrs	r4, r5, #24
 8016dda:	eba2 0b03 	sub.w	fp, r2, r3
 8016dde:	eba6 0603 	sub.w	r6, r6, r3
 8016de2:	d00b      	beq.n	8016dfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8016de4:	f1a9 0104 	sub.w	r1, r9, #4
 8016de8:	461a      	mov	r2, r3
 8016dea:	2a00      	cmp	r2, #0
 8016dec:	dc02      	bgt.n	8016df4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8016dee:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016df2:	e7a0      	b.n	8016d36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016df4:	f841 5f04 	str.w	r5, [r1, #4]!
 8016df8:	3a01      	subs	r2, #1
 8016dfa:	e7f6      	b.n	8016dea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8016dfc:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016e00:	e799      	b.n	8016d36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016e02:	4637      	mov	r7, r6
 8016e04:	f8dd b004 	ldr.w	fp, [sp, #4]
 8016e08:	4626      	mov	r6, r4
 8016e0a:	e794      	b.n	8016d36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016e0c:	2bff      	cmp	r3, #255	@ 0xff
 8016e0e:	d11d      	bne.n	8016e4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8016e10:	7878      	ldrb	r0, [r7, #1]
 8016e12:	78ba      	ldrb	r2, [r7, #2]
 8016e14:	78fe      	ldrb	r6, [r7, #3]
 8016e16:	1d7b      	adds	r3, r7, #5
 8016e18:	b2c0      	uxtb	r0, r0
 8016e1a:	9303      	str	r3, [sp, #12]
 8016e1c:	793b      	ldrb	r3, [r7, #4]
 8016e1e:	f360 0507 	bfi	r5, r0, #0, #8
 8016e22:	b2d2      	uxtb	r2, r2
 8016e24:	b2d9      	uxtb	r1, r3
 8016e26:	f362 250f 	bfi	r5, r2, #8, #8
 8016e2a:	b2f6      	uxtb	r6, r6
 8016e2c:	2303      	movs	r3, #3
 8016e2e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016e32:	fb13 2206 	smlabb	r2, r3, r6, r2
 8016e36:	2307      	movs	r3, #7
 8016e38:	fb13 2000 	smlabb	r0, r3, r0, r2
 8016e3c:	f366 4517 	bfi	r5, r6, #16, #8
 8016e40:	230b      	movs	r3, #11
 8016e42:	f361 651f 	bfi	r5, r1, #24, #8
 8016e46:	fb13 0301 	smlabb	r3, r3, r1, r0
 8016e4a:	e798      	b.n	8016d7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8016e4c:	119e      	asrs	r6, r3, #6
 8016e4e:	d10d      	bne.n	8016e6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8016e50:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016e54:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8016e58:	685d      	ldr	r5, [r3, #4]
 8016e5a:	e795      	b.n	8016d88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8016e5c:	20002dbc 	.word	0x20002dbc
 8016e60:	20002db6 	.word	0x20002db6
 8016e64:	20000120 	.word	0x20000120
 8016e68:	20000220 	.word	0x20000220
 8016e6c:	2e01      	cmp	r6, #1
 8016e6e:	ea4f 6115 	mov.w	r1, r5, lsr #24
 8016e72:	d12b      	bne.n	8016ecc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 8016e74:	f003 0003 	and.w	r0, r3, #3
 8016e78:	3802      	subs	r0, #2
 8016e7a:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 8016e7e:	b2c0      	uxtb	r0, r0
 8016e80:	f003 020c 	and.w	r2, r3, #12
 8016e84:	f360 0507 	bfi	r5, r0, #0, #8
 8016e88:	3a08      	subs	r2, #8
 8016e8a:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8016e8e:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 8016e92:	f362 250f 	bfi	r5, r2, #8, #8
 8016e96:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8016e9a:	1e9f      	subs	r7, r3, #2
 8016e9c:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8016ea0:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8016ea4:	b2db      	uxtb	r3, r3
 8016ea6:	2703      	movs	r7, #3
 8016ea8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016eac:	fb17 2203 	smlabb	r2, r7, r3, r2
 8016eb0:	2707      	movs	r7, #7
 8016eb2:	f363 4517 	bfi	r5, r3, #16, #8
 8016eb6:	fb17 2000 	smlabb	r0, r7, r0, r2
 8016eba:	230b      	movs	r3, #11
 8016ebc:	fb13 0101 	smlabb	r1, r3, r1, r0
 8016ec0:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8016ec4:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016ec8:	604d      	str	r5, [r1, #4]
 8016eca:	e75e      	b.n	8016d8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8016ecc:	2e02      	cmp	r6, #2
 8016ece:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016ed2:	d12f      	bne.n	8016f34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8016ed4:	7878      	ldrb	r0, [r7, #1]
 8016ed6:	1cba      	adds	r2, r7, #2
 8016ed8:	b2c0      	uxtb	r0, r0
 8016eda:	9203      	str	r2, [sp, #12]
 8016edc:	f000 020f 	and.w	r2, r0, #15
 8016ee0:	3b20      	subs	r3, #32
 8016ee2:	3a08      	subs	r2, #8
 8016ee4:	441a      	add	r2, r3
 8016ee6:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 8016eea:	b2d2      	uxtb	r2, r2
 8016eec:	f362 0507 	bfi	r5, r2, #0, #8
 8016ef0:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8016ef4:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 8016ef8:	b2f6      	uxtb	r6, r6
 8016efa:	1100      	asrs	r0, r0, #4
 8016efc:	f366 250f 	bfi	r5, r6, #8, #8
 8016f00:	3808      	subs	r0, #8
 8016f02:	4403      	add	r3, r0
 8016f04:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8016f08:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016f0c:	b2db      	uxtb	r3, r3
 8016f0e:	2003      	movs	r0, #3
 8016f10:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8016f14:	fb10 6603 	smlabb	r6, r0, r3, r6
 8016f18:	2007      	movs	r0, #7
 8016f1a:	f363 4517 	bfi	r5, r3, #16, #8
 8016f1e:	fb10 6202 	smlabb	r2, r0, r2, r6
 8016f22:	230b      	movs	r3, #11
 8016f24:	fb13 2101 	smlabb	r1, r3, r1, r2
 8016f28:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8016f2c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8016f30:	604d      	str	r5, [r1, #4]
 8016f32:	e729      	b.n	8016d88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8016f34:	1c5e      	adds	r6, r3, #1
 8016f36:	45b3      	cmp	fp, r6
 8016f38:	465f      	mov	r7, fp
 8016f3a:	bfa8      	it	ge
 8016f3c:	4637      	movge	r7, r6
 8016f3e:	e725      	b.n	8016d8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8016f40:	193b      	adds	r3, r7, r4
 8016f42:	2b40      	cmp	r3, #64	@ 0x40
 8016f44:	dd13      	ble.n	8016f6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8016f46:	4648      	mov	r0, r9
 8016f48:	00a1      	lsls	r1, r4, #2
 8016f4a:	f7f5 fa16 	bl	800c37a <_ZN8touchgfx5paint9flushLineEPmi>
 8016f4e:	4649      	mov	r1, r9
 8016f50:	9b05      	ldr	r3, [sp, #20]
 8016f52:	4622      	mov	r2, r4
 8016f54:	4640      	mov	r0, r8
 8016f56:	f7f5 fac3 	bl	800c4e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8016f5a:	4b2d      	ldr	r3, [pc, #180]	@ (8017010 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 8016f5c:	4599      	cmp	r9, r3
 8016f5e:	bf0c      	ite	eq
 8016f60:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801701c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 8016f64:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8017010 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 8016f68:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016f6c:	2400      	movs	r4, #0
 8016f6e:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 8016f72:	463b      	mov	r3, r7
 8016f74:	3b01      	subs	r3, #1
 8016f76:	f842 5b04 	str.w	r5, [r2], #4
 8016f7a:	d1fb      	bne.n	8016f74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 8016f7c:	443c      	add	r4, r7
 8016f7e:	9f03      	ldr	r7, [sp, #12]
 8016f80:	e6d9      	b.n	8016d36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8016f82:	b15c      	cbz	r4, 8016f9c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 8016f84:	00a1      	lsls	r1, r4, #2
 8016f86:	4648      	mov	r0, r9
 8016f88:	f7f5 f9f7 	bl	800c37a <_ZN8touchgfx5paint9flushLineEPmi>
 8016f8c:	4640      	mov	r0, r8
 8016f8e:	9b05      	ldr	r3, [sp, #20]
 8016f90:	4622      	mov	r2, r4
 8016f92:	4649      	mov	r1, r9
 8016f94:	f7f5 faa4 	bl	800c4e0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 8016f98:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8016f9c:	4b1d      	ldr	r3, [pc, #116]	@ (8017014 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 8016f9e:	9a01      	ldr	r2, [sp, #4]
 8016fa0:	881b      	ldrh	r3, [r3, #0]
 8016fa2:	1a9b      	subs	r3, r3, r2
 8016fa4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8016fa8:	9b04      	ldr	r3, [sp, #16]
 8016faa:	3301      	adds	r3, #1
 8016fac:	9304      	str	r3, [sp, #16]
 8016fae:	9a04      	ldr	r2, [sp, #16]
 8016fb0:	9b00      	ldr	r3, [sp, #0]
 8016fb2:	4293      	cmp	r3, r2
 8016fb4:	d11d      	bne.n	8016ff2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 8016fb6:	9b02      	ldr	r3, [sp, #8]
 8016fb8:	9a02      	ldr	r2, [sp, #8]
 8016fba:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8016fbe:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8016fc2:	9808      	ldr	r0, [sp, #32]
 8016fc4:	f103 0b01 	add.w	fp, r3, #1
 8016fc8:	9b06      	ldr	r3, [sp, #24]
 8016fca:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8016fce:	9b07      	ldr	r3, [sp, #28]
 8016fd0:	2500      	movs	r5, #0
 8016fd2:	ba3f      	rev	r7, r7
 8016fd4:	1ba4      	subs	r4, r4, r6
 8016fd6:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8016fda:	4629      	mov	r1, r5
 8016fdc:	441f      	add	r7, r3
 8016fde:	b2a4      	uxth	r4, r4
 8016fe0:	f00b fba9 	bl	8022736 <memset>
 8016fe4:	f8cd b008 	str.w	fp, [sp, #8]
 8016fe8:	9504      	str	r5, [sp, #16]
 8016fea:	f7f5 f9bf 	bl	800c36c <_ZN8touchgfx5paint8tearDownEv>
 8016fee:	463e      	mov	r6, r7
 8016ff0:	e5cc      	b.n	8016b8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8016ff2:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8016ff6:	9b01      	ldr	r3, [sp, #4]
 8016ff8:	1ae4      	subs	r4, r4, r3
 8016ffa:	1ba4      	subs	r4, r4, r6
 8016ffc:	b2a4      	uxth	r4, r4
 8016ffe:	e7f4      	b.n	8016fea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8017000:	4b05      	ldr	r3, [pc, #20]	@ (8017018 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8017002:	6818      	ldr	r0, [r3, #0]
 8017004:	6803      	ldr	r3, [r0, #0]
 8017006:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017008:	4798      	blx	r3
 801700a:	b00f      	add	sp, #60	@ 0x3c
 801700c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017010:	20000120 	.word	0x20000120
 8017014:	20002db6 	.word	0x20002db6
 8017018:	20002dbc 	.word	0x20002dbc
 801701c:	20000220 	.word	0x20000220

08017020 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017024:	b08f      	sub	sp, #60	@ 0x3c
 8017026:	461c      	mov	r4, r3
 8017028:	9205      	str	r2, [sp, #20]
 801702a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801702e:	9100      	str	r1, [sp, #0]
 8017030:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017032:	9201      	str	r2, [sp, #4]
 8017034:	2a00      	cmp	r2, #0
 8017036:	f000 8115 	beq.w	8017264 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801703a:	6820      	ldr	r0, [r4, #0]
 801703c:	6861      	ldr	r1, [r4, #4]
 801703e:	aa0a      	add	r2, sp, #40	@ 0x28
 8017040:	c203      	stmia	r2!, {r0, r1}
 8017042:	6818      	ldr	r0, [r3, #0]
 8017044:	6859      	ldr	r1, [r3, #4]
 8017046:	aa0c      	add	r2, sp, #48	@ 0x30
 8017048:	c203      	stmia	r2!, {r0, r1}
 801704a:	a80a      	add	r0, sp, #40	@ 0x28
 801704c:	f7f9 f9d8 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017050:	4621      	mov	r1, r4
 8017052:	a80c      	add	r0, sp, #48	@ 0x30
 8017054:	f7f9 f9fc 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017058:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801705c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8017060:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8017064:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017068:	bfde      	ittt	le
 801706a:	b2b3      	uxthle	r3, r6
 801706c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017070:	fb92 f3f3 	sdivle	r3, r2, r3
 8017074:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017078:	bfc8      	it	gt
 801707a:	2301      	movgt	r3, #1
 801707c:	fb92 f1f3 	sdiv	r1, r2, r3
 8017080:	fa1f fc81 	uxth.w	ip, r1
 8017084:	fb0c 2413 	mls	r4, ip, r3, r2
 8017088:	fb14 f406 	smulbb	r4, r4, r6
 801708c:	441d      	add	r5, r3
 801708e:	4404      	add	r4, r0
 8017090:	4661      	mov	r1, ip
 8017092:	3d01      	subs	r5, #1
 8017094:	b2a4      	uxth	r4, r4
 8017096:	fb95 f5f3 	sdiv	r5, r5, r3
 801709a:	b131      	cbz	r1, 80170aa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801709c:	9b05      	ldr	r3, [sp, #20]
 801709e:	9900      	ldr	r1, [sp, #0]
 80170a0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80170a4:	ba1b      	rev	r3, r3
 80170a6:	4419      	add	r1, r3
 80170a8:	9100      	str	r1, [sp, #0]
 80170aa:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80170ae:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 80170b2:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80170b6:	4418      	add	r0, r3
 80170b8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80170bc:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80170c0:	441a      	add	r2, r3
 80170c2:	4b6a      	ldr	r3, [pc, #424]	@ (801726c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 80170c4:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80170c8:	6818      	ldr	r0, [r3, #0]
 80170ca:	6803      	ldr	r3, [r0, #0]
 80170cc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80170ce:	4798      	blx	r3
 80170d0:	4967      	ldr	r1, [pc, #412]	@ (8017270 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 80170d2:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80170d6:	880b      	ldrh	r3, [r1, #0]
 80170d8:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80170dc:	9109      	str	r1, [sp, #36]	@ 0x24
 80170de:	fb03 c202 	mla	r2, r3, r2, ip
 80170e2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80170e6:	4373      	muls	r3, r6
 80170e8:	b2ad      	uxth	r5, r5
 80170ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80170ee:	00ad      	lsls	r5, r5, #2
 80170f0:	9306      	str	r3, [sp, #24]
 80170f2:	1d2b      	adds	r3, r5, #4
 80170f4:	9307      	str	r3, [sp, #28]
 80170f6:	9b01      	ldr	r3, [sp, #4]
 80170f8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80170fc:	9103      	str	r1, [sp, #12]
 80170fe:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8017102:	2c00      	cmp	r4, #0
 8017104:	bf0c      	ite	eq
 8017106:	46c6      	moveq	lr, r8
 8017108:	f04f 0e00 	movne.w	lr, #0
 801710c:	2300      	movs	r3, #0
 801710e:	b292      	uxth	r2, r2
 8017110:	fa1f fe8e 	uxth.w	lr, lr
 8017114:	9302      	str	r3, [sp, #8]
 8017116:	9204      	str	r2, [sp, #16]
 8017118:	9a06      	ldr	r2, [sp, #24]
 801711a:	4282      	cmp	r2, r0
 801711c:	f240 809d 	bls.w	801725a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8017120:	b963      	cbnz	r3, 801713c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8017122:	9b00      	ldr	r3, [sp, #0]
 8017124:	781a      	ldrb	r2, [r3, #0]
 8017126:	0993      	lsrs	r3, r2, #6
 8017128:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801712c:	9202      	str	r2, [sp, #8]
 801712e:	1e5a      	subs	r2, r3, #1
 8017130:	2a02      	cmp	r2, #2
 8017132:	d815      	bhi.n	8017160 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8017134:	9a00      	ldr	r2, [sp, #0]
 8017136:	3201      	adds	r2, #1
 8017138:	9200      	str	r2, [sp, #0]
 801713a:	b29b      	uxth	r3, r3
 801713c:	b1b4      	cbz	r4, 801716c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801713e:	429c      	cmp	r4, r3
 8017140:	bf95      	itete	ls
 8017142:	1b1c      	subls	r4, r3, r4
 8017144:	1ae4      	subhi	r4, r4, r3
 8017146:	fa1f fa84 	uxthls.w	sl, r4
 801714a:	b2a4      	uxthhi	r4, r4
 801714c:	bf87      	ittee	hi
 801714e:	4671      	movhi	r1, lr
 8017150:	f04f 0a00 	movhi.w	sl, #0
 8017154:	fa1f f188 	uxthls.w	r1, r8
 8017158:	2400      	movls	r4, #0
 801715a:	4653      	mov	r3, sl
 801715c:	468e      	mov	lr, r1
 801715e:	e7db      	b.n	8017118 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8017160:	9a00      	ldr	r2, [sp, #0]
 8017162:	9b00      	ldr	r3, [sp, #0]
 8017164:	3202      	adds	r2, #2
 8017166:	785b      	ldrb	r3, [r3, #1]
 8017168:	9200      	str	r2, [sp, #0]
 801716a:	e7e7      	b.n	801713c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801716c:	2202      	movs	r2, #2
 801716e:	4615      	mov	r5, r2
 8017170:	9907      	ldr	r1, [sp, #28]
 8017172:	9a02      	ldr	r2, [sp, #8]
 8017174:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017178:	9905      	ldr	r1, [sp, #20]
 801717a:	4573      	cmp	r3, lr
 801717c:	f831 c002 	ldrh.w	ip, [r1, r2]
 8017180:	9a01      	ldr	r2, [sp, #4]
 8017182:	bf2b      	itete	cs
 8017184:	eba3 0a0e 	subcs.w	sl, r3, lr
 8017188:	ebae 0103 	subcc.w	r1, lr, r3
 801718c:	46f1      	movcs	r9, lr
 801718e:	4699      	movcc	r9, r3
 8017190:	bf27      	ittee	cs
 8017192:	fa1f fa8a 	uxthcs.w	sl, sl
 8017196:	4621      	movcs	r1, r4
 8017198:	b289      	uxthcc	r1, r1
 801719a:	46a2      	movcc	sl, r4
 801719c:	2aff      	cmp	r2, #255	@ 0xff
 801719e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80171a2:	d105      	bne.n	80171b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80171a4:	4481      	add	r9, r0
 80171a6:	4581      	cmp	r9, r0
 80171a8:	d045      	beq.n	8017236 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80171aa:	f820 cb02 	strh.w	ip, [r0], #2
 80171ae:	e7fa      	b.n	80171a6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80171b0:	9d03      	ldr	r5, [sp, #12]
 80171b2:	ea4f 222c 	mov.w	r2, ip, asr #8
 80171b6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80171ba:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80171be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80171c2:	436a      	muls	r2, r5
 80171c4:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 80171c8:	fa5f fc8c 	uxtb.w	ip, ip
 80171cc:	9208      	str	r2, [sp, #32]
 80171ce:	fb0b fb05 	mul.w	fp, fp, r5
 80171d2:	fb0c fc05 	mul.w	ip, ip, r5
 80171d6:	4481      	add	r9, r0
 80171d8:	4581      	cmp	r9, r0
 80171da:	d02c      	beq.n	8017236 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 80171dc:	8802      	ldrh	r2, [r0, #0]
 80171de:	9d04      	ldr	r5, [sp, #16]
 80171e0:	9f04      	ldr	r7, [sp, #16]
 80171e2:	1216      	asrs	r6, r2, #8
 80171e4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80171e8:	fb16 f605 	smulbb	r6, r6, r5
 80171ec:	9d08      	ldr	r5, [sp, #32]
 80171ee:	442e      	add	r6, r5
 80171f0:	10d5      	asrs	r5, r2, #3
 80171f2:	00d2      	lsls	r2, r2, #3
 80171f4:	b2d2      	uxtb	r2, r2
 80171f6:	fb12 f207 	smulbb	r2, r2, r7
 80171fa:	b2b6      	uxth	r6, r6
 80171fc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017200:	4462      	add	r2, ip
 8017202:	fb15 f507 	smulbb	r5, r5, r7
 8017206:	b292      	uxth	r2, r2
 8017208:	1c77      	adds	r7, r6, #1
 801720a:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801720e:	1c57      	adds	r7, r2, #1
 8017210:	445d      	add	r5, fp
 8017212:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8017216:	b2ad      	uxth	r5, r5
 8017218:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801721c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017220:	4316      	orrs	r6, r2
 8017222:	1c6a      	adds	r2, r5, #1
 8017224:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017228:	096d      	lsrs	r5, r5, #5
 801722a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801722e:	432e      	orrs	r6, r5
 8017230:	f820 6b02 	strh.w	r6, [r0], #2
 8017234:	e7d0      	b.n	80171d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8017236:	4573      	cmp	r3, lr
 8017238:	d38f      	bcc.n	801715a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801723a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801723e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017240:	fa1f f188 	uxth.w	r1, r8
 8017244:	1a64      	subs	r4, r4, r1
 8017246:	881b      	ldrh	r3, [r3, #0]
 8017248:	b2a4      	uxth	r4, r4
 801724a:	2c00      	cmp	r4, #0
 801724c:	eba3 0308 	sub.w	r3, r3, r8
 8017250:	bf18      	it	ne
 8017252:	2100      	movne	r1, #0
 8017254:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017258:	e77f      	b.n	801715a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801725a:	4b04      	ldr	r3, [pc, #16]	@ (801726c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801725c:	6818      	ldr	r0, [r3, #0]
 801725e:	6803      	ldr	r3, [r0, #0]
 8017260:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017262:	4798      	blx	r3
 8017264:	b00f      	add	sp, #60	@ 0x3c
 8017266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801726a:	bf00      	nop
 801726c:	20002dbc 	.word	0x20002dbc
 8017270:	20002db6 	.word	0x20002db6

08017274 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8017274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017278:	b09f      	sub	sp, #124	@ 0x7c
 801727a:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801727e:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8017282:	9209      	str	r2, [sp, #36]	@ 0x24
 8017284:	461d      	mov	r5, r3
 8017286:	4604      	mov	r4, r0
 8017288:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801728a:	2a00      	cmp	r2, #0
 801728c:	f000 81eb 	beq.w	8017666 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8017290:	6828      	ldr	r0, [r5, #0]
 8017292:	6869      	ldr	r1, [r5, #4]
 8017294:	aa1a      	add	r2, sp, #104	@ 0x68
 8017296:	c203      	stmia	r2!, {r0, r1}
 8017298:	6818      	ldr	r0, [r3, #0]
 801729a:	6859      	ldr	r1, [r3, #4]
 801729c:	aa1c      	add	r2, sp, #112	@ 0x70
 801729e:	c203      	stmia	r2!, {r0, r1}
 80172a0:	a81a      	add	r0, sp, #104	@ 0x68
 80172a2:	f7f9 f8ad 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80172a6:	4629      	mov	r1, r5
 80172a8:	a81c      	add	r0, sp, #112	@ 0x70
 80172aa:	f7f9 f8d1 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80172ae:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80172b2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 80172b6:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 80172ba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80172be:	bfd7      	itett	le
 80172c0:	b29a      	uxthle	r2, r3
 80172c2:	2201      	movgt	r2, #1
 80172c4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80172c8:	fb91 f2f2 	sdivle	r2, r1, r2
 80172cc:	9202      	str	r2, [sp, #8]
 80172ce:	9802      	ldr	r0, [sp, #8]
 80172d0:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 80172d4:	fb92 f0f0 	sdiv	r0, r2, r0
 80172d8:	b280      	uxth	r0, r0
 80172da:	9010      	str	r0, [sp, #64]	@ 0x40
 80172dc:	9902      	ldr	r1, [sp, #8]
 80172de:	9802      	ldr	r0, [sp, #8]
 80172e0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80172e2:	4488      	add	r8, r1
 80172e4:	fb05 2510 	mls	r5, r5, r0, r2
 80172e8:	fb15 f503 	smulbb	r5, r5, r3
 80172ec:	f108 38ff 	add.w	r8, r8, #4294967295
 80172f0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 80172f4:	fb98 f8f1 	sdiv	r8, r8, r1
 80172f8:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 80172fc:	440d      	add	r5, r1
 80172fe:	4419      	add	r1, r3
 8017300:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017304:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017308:	441a      	add	r2, r3
 801730a:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801730e:	9304      	str	r3, [sp, #16]
 8017310:	4b95      	ldr	r3, [pc, #596]	@ (8017568 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8017312:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8017316:	6818      	ldr	r0, [r3, #0]
 8017318:	6803      	ldr	r3, [r0, #0]
 801731a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801731c:	4798      	blx	r3
 801731e:	4b93      	ldr	r3, [pc, #588]	@ (801756c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8017320:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8017324:	881a      	ldrh	r2, [r3, #0]
 8017326:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801732a:	9318      	str	r3, [sp, #96]	@ 0x60
 801732c:	fb02 7101 	mla	r1, r2, r1, r7
 8017330:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017334:	4356      	muls	r6, r2
 8017336:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801733a:	f108 0801 	add.w	r8, r8, #1
 801733e:	920a      	str	r2, [sp, #40]	@ 0x28
 8017340:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017342:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8017346:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017348:	fa1f f888 	uxth.w	r8, r8
 801734c:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8017350:	f108 0204 	add.w	r2, r8, #4
 8017354:	9211      	str	r2, [sp, #68]	@ 0x44
 8017356:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017358:	4b85      	ldr	r3, [pc, #532]	@ (8017570 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801735a:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801735e:	b2ad      	uxth	r5, r5
 8017360:	9215      	str	r2, [sp, #84]	@ 0x54
 8017362:	2d00      	cmp	r5, #0
 8017364:	9a04      	ldr	r2, [sp, #16]
 8017366:	f04f 0100 	mov.w	r1, #0
 801736a:	bf18      	it	ne
 801736c:	2200      	movne	r2, #0
 801736e:	1b1b      	subs	r3, r3, r4
 8017370:	b292      	uxth	r2, r2
 8017372:	910d      	str	r1, [sp, #52]	@ 0x34
 8017374:	9319      	str	r3, [sp, #100]	@ 0x64
 8017376:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8017378:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801737a:	fa11 f383 	uxtah	r3, r1, r3
 801737e:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8017380:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017384:	3304      	adds	r3, #4
 8017386:	9306      	str	r3, [sp, #24]
 8017388:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801738a:	4283      	cmp	r3, r0
 801738c:	f240 8166 	bls.w	801765c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8017390:	9902      	ldr	r1, [sp, #8]
 8017392:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017396:	fbb5 f3f3 	udiv	r3, r5, r3
 801739a:	1acb      	subs	r3, r1, r3
 801739c:	b29b      	uxth	r3, r3
 801739e:	9316      	str	r3, [sp, #88]	@ 0x58
 80173a0:	9b06      	ldr	r3, [sp, #24]
 80173a2:	9e06      	ldr	r6, [sp, #24]
 80173a4:	7859      	ldrb	r1, [r3, #1]
 80173a6:	789b      	ldrb	r3, [r3, #2]
 80173a8:	7836      	ldrb	r6, [r6, #0]
 80173aa:	9612      	str	r6, [sp, #72]	@ 0x48
 80173ac:	021b      	lsls	r3, r3, #8
 80173ae:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80173b2:	9906      	ldr	r1, [sp, #24]
 80173b4:	78c9      	ldrb	r1, [r1, #3]
 80173b6:	430b      	orrs	r3, r1
 80173b8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80173ba:	3601      	adds	r6, #1
 80173bc:	4419      	add	r1, r3
 80173be:	9605      	str	r6, [sp, #20]
 80173c0:	1c4e      	adds	r6, r1, #1
 80173c2:	9603      	str	r6, [sp, #12]
 80173c4:	7849      	ldrb	r1, [r1, #1]
 80173c6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80173c8:	0209      	lsls	r1, r1, #8
 80173ca:	5cf3      	ldrb	r3, [r6, r3]
 80173cc:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 80173d0:	4319      	orrs	r1, r3
 80173d2:	b28b      	uxth	r3, r1
 80173d4:	930c      	str	r3, [sp, #48]	@ 0x30
 80173d6:	2300      	movs	r3, #0
 80173d8:	f04f 0a01 	mov.w	sl, #1
 80173dc:	9307      	str	r3, [sp, #28]
 80173de:	469c      	mov	ip, r3
 80173e0:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80173e4:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80173e8:	46d3      	mov	fp, sl
 80173ea:	4657      	mov	r7, sl
 80173ec:	930e      	str	r3, [sp, #56]	@ 0x38
 80173ee:	2d00      	cmp	r5, #0
 80173f0:	d07e      	beq.n	80174f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 80173f2:	42af      	cmp	r7, r5
 80173f4:	d26e      	bcs.n	80174d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 80173f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80173f8:	9201      	str	r2, [sp, #4]
 80173fa:	1bed      	subs	r5, r5, r7
 80173fc:	4283      	cmp	r3, r0
 80173fe:	b2ad      	uxth	r5, r5
 8017400:	d802      	bhi.n	8017408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8017402:	e073      	b.n	80174ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8017404:	2b00      	cmp	r3, #0
 8017406:	d15f      	bne.n	80174c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8017408:	9b03      	ldr	r3, [sp, #12]
 801740a:	785b      	ldrb	r3, [r3, #1]
 801740c:	f1cb 0207 	rsb	r2, fp, #7
 8017410:	4093      	lsls	r3, r2
 8017412:	005b      	lsls	r3, r3, #1
 8017414:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8017418:	9b03      	ldr	r3, [sp, #12]
 801741a:	781b      	ldrb	r3, [r3, #0]
 801741c:	fa43 f30b 	asr.w	r3, r3, fp
 8017420:	b2db      	uxtb	r3, r3
 8017422:	4313      	orrs	r3, r2
 8017424:	f10b 0201 	add.w	r2, fp, #1
 8017428:	fa5f fb82 	uxtb.w	fp, r2
 801742c:	9a03      	ldr	r2, [sp, #12]
 801742e:	f1bb 0f08 	cmp.w	fp, #8
 8017432:	bf15      	itete	ne
 8017434:	3201      	addne	r2, #1
 8017436:	3202      	addeq	r2, #2
 8017438:	9203      	strne	r2, [sp, #12]
 801743a:	9203      	streq	r2, [sp, #12]
 801743c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801743e:	b29f      	uxth	r7, r3
 8017440:	bf08      	it	eq
 8017442:	f04f 0b00 	moveq.w	fp, #0
 8017446:	42ba      	cmp	r2, r7
 8017448:	d309      	bcc.n	801745e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801744a:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801744e:	2301      	movs	r3, #1
 8017450:	9a05      	ldr	r2, [sp, #20]
 8017452:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8017456:	d30e      	bcc.n	8017476 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8017458:	469a      	mov	sl, r3
 801745a:	2600      	movs	r6, #0
 801745c:	e035      	b.n	80174ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801745e:	9b05      	ldr	r3, [sp, #20]
 8017460:	429f      	cmp	r7, r3
 8017462:	d318      	bcc.n	8017496 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8017464:	eb04 030a 	add.w	r3, r4, sl
 8017468:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801746c:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8017470:	f10a 0301 	add.w	r3, sl, #1
 8017474:	b29b      	uxth	r3, r3
 8017476:	9a05      	ldr	r2, [sp, #20]
 8017478:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801747c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801747e:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8017482:	7116      	strb	r6, [r2, #4]
 8017484:	f10a 0601 	add.w	r6, sl, #1
 8017488:	80d1      	strh	r1, [r2, #6]
 801748a:	7156      	strb	r6, [r2, #5]
 801748c:	9a05      	ldr	r2, [sp, #20]
 801748e:	3201      	adds	r2, #1
 8017490:	b292      	uxth	r2, r2
 8017492:	9205      	str	r2, [sp, #20]
 8017494:	e7e0      	b.n	8017458 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8017496:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801749a:	463a      	mov	r2, r7
 801749c:	795b      	ldrb	r3, [r3, #5]
 801749e:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80174a2:	4426      	add	r6, r4
 80174a4:	9919      	ldr	r1, [sp, #100]	@ 0x64
 80174a6:	eb01 0c06 	add.w	ip, r1, r6
 80174aa:	f1bc 0f00 	cmp.w	ip, #0
 80174ae:	dd07      	ble.n	80174c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 80174b0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 80174b4:	f892 c004 	ldrb.w	ip, [r2, #4]
 80174b8:	f806 cd01 	strb.w	ip, [r6, #-1]!
 80174bc:	88d2      	ldrh	r2, [r2, #6]
 80174be:	e7f1      	b.n	80174a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 80174c0:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 80174c4:	b29b      	uxth	r3, r3
 80174c6:	e7c3      	b.n	8017450 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 80174c8:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80174ca:	970c      	str	r7, [sp, #48]	@ 0x30
 80174cc:	9a01      	ldr	r2, [sp, #4]
 80174ce:	46b4      	mov	ip, r6
 80174d0:	461f      	mov	r7, r3
 80174d2:	e78c      	b.n	80173ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 80174d4:	1b7b      	subs	r3, r7, r5
 80174d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80174da:	9201      	str	r2, [sp, #4]
 80174dc:	eb0c 0605 	add.w	r6, ip, r5
 80174e0:	b29b      	uxth	r3, r3
 80174e2:	b2b6      	uxth	r6, r6
 80174e4:	2500      	movs	r5, #0
 80174e6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80174e8:	4282      	cmp	r2, r0
 80174ea:	d88b      	bhi.n	8017404 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 80174ec:	9a01      	ldr	r2, [sp, #4]
 80174ee:	e74b      	b.n	8017388 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 80174f0:	4297      	cmp	r7, r2
 80174f2:	d332      	bcc.n	801755a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 80174f4:	1abb      	subs	r3, r7, r2
 80174f6:	b29b      	uxth	r3, r3
 80174f8:	9208      	str	r2, [sp, #32]
 80174fa:	9501      	str	r5, [sp, #4]
 80174fc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80174fe:	29ff      	cmp	r1, #255	@ 0xff
 8017500:	9908      	ldr	r1, [sp, #32]
 8017502:	eb0c 0601 	add.w	r6, ip, r1
 8017506:	d135      	bne.n	8017574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8017508:	f1a0 0e02 	sub.w	lr, r0, #2
 801750c:	b2b6      	uxth	r6, r6
 801750e:	45b4      	cmp	ip, r6
 8017510:	f040 808c 	bne.w	801762c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8017514:	9908      	ldr	r1, [sp, #32]
 8017516:	4297      	cmp	r7, r2
 8017518:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801751c:	d3e2      	bcc.n	80174e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801751e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8017520:	9904      	ldr	r1, [sp, #16]
 8017522:	8812      	ldrh	r2, [r2, #0]
 8017524:	1a52      	subs	r2, r2, r1
 8017526:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801752a:	9a07      	ldr	r2, [sp, #28]
 801752c:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801752e:	3201      	adds	r2, #1
 8017530:	428a      	cmp	r2, r1
 8017532:	9207      	str	r2, [sp, #28]
 8017534:	f040 8087 	bne.w	8017646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8017538:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801753c:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8017540:	9b04      	ldr	r3, [sp, #16]
 8017542:	1bed      	subs	r5, r5, r7
 8017544:	b2ad      	uxth	r5, r5
 8017546:	2d00      	cmp	r5, #0
 8017548:	bf08      	it	eq
 801754a:	461a      	moveq	r2, r3
 801754c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801754e:	bf18      	it	ne
 8017550:	2200      	movne	r2, #0
 8017552:	3301      	adds	r3, #1
 8017554:	930d      	str	r3, [sp, #52]	@ 0x34
 8017556:	b292      	uxth	r2, r2
 8017558:	e70d      	b.n	8017376 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801755a:	1bd1      	subs	r1, r2, r7
 801755c:	b28b      	uxth	r3, r1
 801755e:	9301      	str	r3, [sp, #4]
 8017560:	9708      	str	r7, [sp, #32]
 8017562:	462b      	mov	r3, r5
 8017564:	e7ca      	b.n	80174fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8017566:	bf00      	nop
 8017568:	20002dbc 	.word	0x20002dbc
 801756c:	20002db6 	.word	0x20002db6
 8017570:	fffff7fb 	.word	0xfffff7fb
 8017574:	b2b6      	uxth	r6, r6
 8017576:	900b      	str	r0, [sp, #44]	@ 0x2c
 8017578:	45b4      	cmp	ip, r6
 801757a:	d0cb      	beq.n	8017514 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801757c:	f10c 0101 	add.w	r1, ip, #1
 8017580:	44a4      	add	ip, r4
 8017582:	9117      	str	r1, [sp, #92]	@ 0x5c
 8017584:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8017588:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801758a:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801758e:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8017590:	f8b1 c000 	ldrh.w	ip, [r1]
 8017594:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8017596:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801759a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801759e:	fb1e fe01 	smulbb	lr, lr, r1
 80175a2:	ea4f 2825 	mov.w	r8, r5, asr #8
 80175a6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80175a8:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 80175ac:	fb08 e801 	mla	r8, r8, r1, lr
 80175b0:	ea4f 09ec 	mov.w	r9, ip, asr #3
 80175b4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80175b6:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80175ba:	fb19 f901 	smulbb	r9, r9, r1
 80175be:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 80175c2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80175c4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80175c8:	fb0e 9e01 	mla	lr, lr, r1, r9
 80175cc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80175d0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80175d2:	fa5f fc8c 	uxtb.w	ip, ip
 80175d6:	fb1c fc01 	smulbb	ip, ip, r1
 80175da:	00ed      	lsls	r5, r5, #3
 80175dc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80175de:	b2ed      	uxtb	r5, r5
 80175e0:	fb05 c501 	mla	r5, r5, r1, ip
 80175e4:	fa1f f888 	uxth.w	r8, r8
 80175e8:	fa1f fe8e 	uxth.w	lr, lr
 80175ec:	b2ad      	uxth	r5, r5
 80175ee:	f108 0c01 	add.w	ip, r8, #1
 80175f2:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 80175f6:	f10e 0901 	add.w	r9, lr, #1
 80175fa:	f105 0c01 	add.w	ip, r5, #1
 80175fe:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8017602:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8017606:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801760a:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801760e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017612:	ea4c 0808 	orr.w	r8, ip, r8
 8017616:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8017618:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801761c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017620:	ea48 0809 	orr.w	r8, r8, r9
 8017624:	f821 8b02 	strh.w	r8, [r1], #2
 8017628:	910b      	str	r1, [sp, #44]	@ 0x2c
 801762a:	e7a5      	b.n	8017578 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801762c:	f10c 0801 	add.w	r8, ip, #1
 8017630:	44a4      	add	ip, r4
 8017632:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8017634:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8017638:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801763c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8017640:	fa1f fc88 	uxth.w	ip, r8
 8017644:	e763      	b.n	801750e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 8017646:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801764a:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801764e:	1aad      	subs	r5, r5, r2
 8017650:	b2ad      	uxth	r5, r5
 8017652:	2d00      	cmp	r5, #0
 8017654:	bf18      	it	ne
 8017656:	2200      	movne	r2, #0
 8017658:	9201      	str	r2, [sp, #4]
 801765a:	e744      	b.n	80174e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801765c:	4b03      	ldr	r3, [pc, #12]	@ (801766c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801765e:	6818      	ldr	r0, [r3, #0]
 8017660:	6803      	ldr	r3, [r0, #0]
 8017662:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017664:	4798      	blx	r3
 8017666:	b01f      	add	sp, #124	@ 0x7c
 8017668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801766c:	20002dbc 	.word	0x20002dbc

08017670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 8017670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017674:	b093      	sub	sp, #76	@ 0x4c
 8017676:	4616      	mov	r6, r2
 8017678:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801767c:	9003      	str	r0, [sp, #12]
 801767e:	460d      	mov	r5, r1
 8017680:	9201      	str	r2, [sp, #4]
 8017682:	2a00      	cmp	r2, #0
 8017684:	f000 8304 	beq.w	8017c90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 8017688:	6830      	ldr	r0, [r6, #0]
 801768a:	6871      	ldr	r1, [r6, #4]
 801768c:	ac0e      	add	r4, sp, #56	@ 0x38
 801768e:	c403      	stmia	r4!, {r0, r1}
 8017690:	6818      	ldr	r0, [r3, #0]
 8017692:	6859      	ldr	r1, [r3, #4]
 8017694:	ac10      	add	r4, sp, #64	@ 0x40
 8017696:	c403      	stmia	r4!, {r0, r1}
 8017698:	a80e      	add	r0, sp, #56	@ 0x38
 801769a:	f7f8 feb1 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801769e:	4631      	mov	r1, r6
 80176a0:	a810      	add	r0, sp, #64	@ 0x40
 80176a2:	f7f8 fed5 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80176a6:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80176aa:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80176ae:	bfd7      	itett	le
 80176b0:	b293      	uxthle	r3, r2
 80176b2:	2301      	movgt	r3, #1
 80176b4:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80176b8:	fb91 f3f3 	sdivle	r3, r1, r3
 80176bc:	9304      	str	r3, [sp, #16]
 80176be:	f105 0308 	add.w	r3, r5, #8
 80176c2:	9904      	ldr	r1, [sp, #16]
 80176c4:	9308      	str	r3, [sp, #32]
 80176c6:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 80176ca:	440b      	add	r3, r1
 80176cc:	3b01      	subs	r3, #1
 80176ce:	fb93 f3f1 	sdiv	r3, r3, r1
 80176d2:	9908      	ldr	r1, [sp, #32]
 80176d4:	3b01      	subs	r3, #1
 80176d6:	b29b      	uxth	r3, r3
 80176d8:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80176dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80176de:	9904      	ldr	r1, [sp, #16]
 80176e0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 80176e4:	fb93 f0f1 	sdiv	r0, r3, r1
 80176e8:	b284      	uxth	r4, r0
 80176ea:	9405      	str	r4, [sp, #20]
 80176ec:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 80176f0:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 80176f4:	fb05 3914 	mls	r9, r5, r4, r3
 80176f8:	fb19 f902 	smulbb	r9, r9, r2
 80176fc:	4489      	add	r9, r1
 80176fe:	fa1f f989 	uxth.w	r9, r9
 8017702:	2d00      	cmp	r5, #0
 8017704:	d05d      	beq.n	80177c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 8017706:	1e6a      	subs	r2, r5, #1
 8017708:	9808      	ldr	r0, [sp, #32]
 801770a:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801770e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017710:	fa9a fa8a 	rev.w	sl, sl
 8017714:	4492      	add	sl, r2
 8017716:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801771a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801771e:	4411      	add	r1, r2
 8017720:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8017724:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8017728:	4413      	add	r3, r2
 801772a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801772e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8017732:	9302      	str	r3, [sp, #8]
 8017734:	4bcb      	ldr	r3, [pc, #812]	@ (8017a64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 8017736:	6818      	ldr	r0, [r3, #0]
 8017738:	6803      	ldr	r3, [r0, #0]
 801773a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801773c:	4798      	blx	r3
 801773e:	4bca      	ldr	r3, [pc, #808]	@ (8017a68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8017740:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8017744:	881b      	ldrh	r3, [r3, #0]
 8017746:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801774a:	fb03 2404 	mla	r4, r3, r4, r2
 801774e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017752:	436b      	muls	r3, r5
 8017754:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017758:	930d      	str	r3, [sp, #52]	@ 0x34
 801775a:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801775e:	fb99 f3f3 	sdiv	r3, r9, r3
 8017762:	9306      	str	r3, [sp, #24]
 8017764:	9b01      	ldr	r3, [sp, #4]
 8017766:	43db      	mvns	r3, r3
 8017768:	b2db      	uxtb	r3, r3
 801776a:	930a      	str	r3, [sp, #40]	@ 0x28
 801776c:	9b03      	ldr	r3, [sp, #12]
 801776e:	3304      	adds	r3, #4
 8017770:	4618      	mov	r0, r3
 8017772:	2280      	movs	r2, #128	@ 0x80
 8017774:	2100      	movs	r1, #0
 8017776:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017778:	f00a ffdd 	bl	8022736 <memset>
 801777c:	4bbb      	ldr	r3, [pc, #748]	@ (8017a6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801777e:	9300      	str	r3, [sp, #0]
 8017780:	2300      	movs	r3, #0
 8017782:	f04f 0600 	mov.w	r6, #0
 8017786:	9307      	str	r3, [sp, #28]
 8017788:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801778a:	42a3      	cmp	r3, r4
 801778c:	f240 827b 	bls.w	8017c86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 8017790:	f04f 0e07 	mov.w	lr, #7
 8017794:	f1b9 0f00 	cmp.w	r9, #0
 8017798:	f000 8159 	beq.w	8017a4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801779c:	f89a 5000 	ldrb.w	r5, [sl]
 80177a0:	b2ed      	uxtb	r5, r5
 80177a2:	11aa      	asrs	r2, r5, #6
 80177a4:	f10a 0701 	add.w	r7, sl, #1
 80177a8:	d10e      	bne.n	80177c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80177aa:	9b03      	ldr	r3, [sp, #12]
 80177ac:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80177b0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80177b4:	88ae      	ldrh	r6, [r5, #4]
 80177b6:	f109 39ff 	add.w	r9, r9, #4294967295
 80177ba:	fa1f f989 	uxth.w	r9, r9
 80177be:	46ba      	mov	sl, r7
 80177c0:	e7e8      	b.n	8017794 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 80177c2:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 80177c6:	e7a6      	b.n	8017716 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 80177c8:	2a01      	cmp	r2, #1
 80177ca:	d129      	bne.n	8017820 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 80177cc:	f3c6 0304 	ubfx	r3, r6, #0, #5
 80177d0:	f005 0203 	and.w	r2, r5, #3
 80177d4:	3b02      	subs	r3, #2
 80177d6:	4413      	add	r3, r2
 80177d8:	f003 031f 	and.w	r3, r3, #31
 80177dc:	f3c5 0281 	ubfx	r2, r5, #2, #2
 80177e0:	f363 0604 	bfi	r6, r3, #0, #5
 80177e4:	3a02      	subs	r2, #2
 80177e6:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 80177ea:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80177ee:	f3c5 1501 	ubfx	r5, r5, #4, #2
 80177f2:	f362 164a 	bfi	r6, r2, #5, #6
 80177f6:	3d02      	subs	r5, #2
 80177f8:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 80177fc:	f005 051f 	and.w	r5, r5, #31
 8017800:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8017804:	2103      	movs	r1, #3
 8017806:	fb11 2205 	smlabb	r2, r1, r5, r2
 801780a:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801780e:	9a03      	ldr	r2, [sp, #12]
 8017810:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017814:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017818:	f365 26cf 	bfi	r6, r5, #11, #5
 801781c:	809e      	strh	r6, [r3, #4]
 801781e:	e7ca      	b.n	80177b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8017820:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8017824:	2a02      	cmp	r2, #2
 8017826:	b2ab      	uxth	r3, r5
 8017828:	d136      	bne.n	8017898 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801782a:	2101      	movs	r1, #1
 801782c:	fb12 1205 	smlabb	r2, r2, r5, r1
 8017830:	4492      	add	sl, r2
 8017832:	463a      	mov	r2, r7
 8017834:	4552      	cmp	r2, sl
 8017836:	d01c      	beq.n	8017872 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 8017838:	4694      	mov	ip, r2
 801783a:	f04f 0b03 	mov.w	fp, #3
 801783e:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8017842:	7852      	ldrb	r2, [r2, #1]
 8017844:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 8017848:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801784c:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8017850:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017854:	f001 021f 	and.w	r2, r1, #31
 8017858:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801785c:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8017860:	9a03      	ldr	r2, [sp, #12]
 8017862:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8017866:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801786a:	460e      	mov	r6, r1
 801786c:	8081      	strh	r1, [r0, #4]
 801786e:	4662      	mov	r2, ip
 8017870:	e7e0      	b.n	8017834 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 8017872:	4599      	cmp	r9, r3
 8017874:	d20b      	bcs.n	801788e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 8017876:	eba5 0509 	sub.w	r5, r5, r9
 801787a:	2d00      	cmp	r5, #0
 801787c:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 8017880:	f300 8209 	bgt.w	8017c96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 8017884:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8017888:	2301      	movs	r3, #1
 801788a:	9307      	str	r3, [sp, #28]
 801788c:	e00c      	b.n	80178a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801788e:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8017892:	eba9 0903 	sub.w	r9, r9, r3
 8017896:	e790      	b.n	80177ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 8017898:	4599      	cmp	r9, r3
 801789a:	d2fa      	bcs.n	8017892 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801789c:	eba5 0509 	sub.w	r5, r5, r9
 80178a0:	2d00      	cmp	r5, #0
 80178a2:	dc1d      	bgt.n	80178e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80178a4:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80178a8:	f04f 0b00 	mov.w	fp, #0
 80178ac:	f1b8 0f00 	cmp.w	r8, #0
 80178b0:	f340 81a1 	ble.w	8017bf6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80178b4:	783b      	ldrb	r3, [r7, #0]
 80178b6:	b2db      	uxtb	r3, r3
 80178b8:	119a      	asrs	r2, r3, #6
 80178ba:	f107 0a01 	add.w	sl, r7, #1
 80178be:	f040 80d7 	bne.w	8017a70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 80178c2:	9a03      	ldr	r2, [sp, #12]
 80178c4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80178c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80178cc:	889e      	ldrh	r6, [r3, #4]
 80178ce:	9b01      	ldr	r3, [sp, #4]
 80178d0:	2bff      	cmp	r3, #255	@ 0xff
 80178d2:	f040 81e9 	bne.w	8017ca8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 80178d6:	8026      	strh	r6, [r4, #0]
 80178d8:	f108 38ff 	add.w	r8, r8, #4294967295
 80178dc:	3402      	adds	r4, #2
 80178de:	e0be      	b.n	8017a5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80178e0:	9b02      	ldr	r3, [sp, #8]
 80178e2:	9a02      	ldr	r2, [sp, #8]
 80178e4:	42ab      	cmp	r3, r5
 80178e6:	bfa8      	it	ge
 80178e8:	462b      	movge	r3, r5
 80178ea:	eba2 0803 	sub.w	r8, r2, r3
 80178ee:	9a07      	ldr	r2, [sp, #28]
 80178f0:	1aed      	subs	r5, r5, r3
 80178f2:	2a00      	cmp	r2, #0
 80178f4:	d05a      	beq.n	80179ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 80178f6:	9a01      	ldr	r2, [sp, #4]
 80178f8:	2aff      	cmp	r2, #255	@ 0xff
 80178fa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80178fe:	d049      	beq.n	8017994 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8017900:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8017904:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 8017908:	42a3      	cmp	r3, r4
 801790a:	f240 80a5 	bls.w	8017a58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801790e:	46bc      	mov	ip, r7
 8017910:	8820      	ldrh	r0, [r4, #0]
 8017912:	f81c 2b02 	ldrb.w	r2, [ip], #2
 8017916:	7879      	ldrb	r1, [r7, #1]
 8017918:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801791c:	b212      	sxth	r2, r2
 801791e:	b291      	uxth	r1, r2
 8017920:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8017924:	120f      	asrs	r7, r1, #8
 8017926:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801792a:	fb1a fa09 	smulbb	sl, sl, r9
 801792e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017932:	fb07 a70e 	mla	r7, r7, lr, sl
 8017936:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801793a:	00c0      	lsls	r0, r0, #3
 801793c:	10c9      	asrs	r1, r1, #3
 801793e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8017942:	00d2      	lsls	r2, r2, #3
 8017944:	b2c0      	uxtb	r0, r0
 8017946:	fb1a fa09 	smulbb	sl, sl, r9
 801794a:	fb10 f009 	smulbb	r0, r0, r9
 801794e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8017952:	b2d2      	uxtb	r2, r2
 8017954:	b2bf      	uxth	r7, r7
 8017956:	fb01 a10e 	mla	r1, r1, lr, sl
 801795a:	fb02 020e 	mla	r2, r2, lr, r0
 801795e:	b289      	uxth	r1, r1
 8017960:	b292      	uxth	r2, r2
 8017962:	1c78      	adds	r0, r7, #1
 8017964:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017968:	f101 0a01 	add.w	sl, r1, #1
 801796c:	1c50      	adds	r0, r2, #1
 801796e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017972:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 8017976:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801797a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801797e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017982:	4307      	orrs	r7, r0
 8017984:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017988:	ea47 070a 	orr.w	r7, r7, sl
 801798c:	f824 7b02 	strh.w	r7, [r4], #2
 8017990:	4667      	mov	r7, ip
 8017992:	e7b9      	b.n	8017908 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 8017994:	42a3      	cmp	r3, r4
 8017996:	d95f      	bls.n	8017a58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8017998:	463a      	mov	r2, r7
 801799a:	f812 1b02 	ldrb.w	r1, [r2], #2
 801799e:	7878      	ldrb	r0, [r7, #1]
 80179a0:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80179a4:	f824 1b02 	strh.w	r1, [r4], #2
 80179a8:	4617      	mov	r7, r2
 80179aa:	e7f3      	b.n	8017994 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80179ac:	9901      	ldr	r1, [sp, #4]
 80179ae:	29ff      	cmp	r1, #255	@ 0xff
 80179b0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80179b4:	b2b2      	uxth	r2, r6
 80179b6:	d044      	beq.n	8017a42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80179b8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80179bc:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 80179c0:	ea4f 2922 	mov.w	r9, r2, asr #8
 80179c4:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80179c8:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 80179cc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80179d0:	4608      	mov	r0, r1
 80179d2:	fb09 f901 	mul.w	r9, r9, r1
 80179d6:	fb0e fe01 	mul.w	lr, lr, r1
 80179da:	00d1      	lsls	r1, r2, #3
 80179dc:	b2c9      	uxtb	r1, r1
 80179de:	4341      	muls	r1, r0
 80179e0:	429c      	cmp	r4, r3
 80179e2:	f4bf af61 	bcs.w	80178a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80179e6:	8822      	ldrh	r2, [r4, #0]
 80179e8:	1210      	asrs	r0, r2, #8
 80179ea:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80179ee:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80179f2:	00d2      	lsls	r2, r2, #3
 80179f4:	fb00 900a 	mla	r0, r0, sl, r9
 80179f8:	b2d2      	uxtb	r2, r2
 80179fa:	b280      	uxth	r0, r0
 80179fc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017a00:	fb02 120a 	mla	r2, r2, sl, r1
 8017a04:	b292      	uxth	r2, r2
 8017a06:	f100 0b01 	add.w	fp, r0, #1
 8017a0a:	fb0c ec0a 	mla	ip, ip, sl, lr
 8017a0e:	fa1f fc8c 	uxth.w	ip, ip
 8017a12:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8017a16:	1c50      	adds	r0, r2, #1
 8017a18:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017a1c:	f10c 0201 	add.w	r2, ip, #1
 8017a20:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017a24:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8017a28:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8017a2c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8017a30:	ea40 0b0b 	orr.w	fp, r0, fp
 8017a34:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8017a38:	ea4b 0b0c 	orr.w	fp, fp, ip
 8017a3c:	f824 bb02 	strh.w	fp, [r4], #2
 8017a40:	e7ce      	b.n	80179e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8017a42:	429c      	cmp	r4, r3
 8017a44:	f4bf af30 	bcs.w	80178a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8017a48:	f824 2b02 	strh.w	r2, [r4], #2
 8017a4c:	e7f9      	b.n	8017a42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8017a4e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8017a52:	4657      	mov	r7, sl
 8017a54:	464d      	mov	r5, r9
 8017a56:	e727      	b.n	80178a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 8017a58:	2300      	movs	r3, #0
 8017a5a:	e716      	b.n	801788a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 8017a5c:	44bb      	add	fp, r7
 8017a5e:	4657      	mov	r7, sl
 8017a60:	e724      	b.n	80178ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 8017a62:	bf00      	nop
 8017a64:	20002dbc 	.word	0x20002dbc
 8017a68:	20002db6 	.word	0x20002db6
 8017a6c:	20000120 	.word	0x20000120
 8017a70:	2a01      	cmp	r2, #1
 8017a72:	d12a      	bne.n	8017aca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 8017a74:	f3c6 0104 	ubfx	r1, r6, #0, #5
 8017a78:	f003 0203 	and.w	r2, r3, #3
 8017a7c:	3902      	subs	r1, #2
 8017a7e:	4411      	add	r1, r2
 8017a80:	f001 011f 	and.w	r1, r1, #31
 8017a84:	f3c3 0081 	ubfx	r0, r3, #2, #2
 8017a88:	f361 0604 	bfi	r6, r1, #0, #5
 8017a8c:	3802      	subs	r0, #2
 8017a8e:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 8017a92:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8017a96:	f3c3 1301 	ubfx	r3, r3, #4, #2
 8017a9a:	f360 164a 	bfi	r6, r0, #5, #6
 8017a9e:	3b02      	subs	r3, #2
 8017aa0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 8017aa4:	f002 031f 	and.w	r3, r2, #31
 8017aa8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017aac:	2203      	movs	r2, #3
 8017aae:	f363 26cf 	bfi	r6, r3, #11, #5
 8017ab2:	fb12 0303 	smlabb	r3, r2, r3, r0
 8017ab6:	2207      	movs	r2, #7
 8017ab8:	fb12 3301 	smlabb	r3, r2, r1, r3
 8017abc:	9a03      	ldr	r2, [sp, #12]
 8017abe:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8017ac2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017ac6:	809e      	strh	r6, [r3, #4]
 8017ac8:	e701      	b.n	80178ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 8017aca:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8017ace:	45a8      	cmp	r8, r5
 8017ad0:	4647      	mov	r7, r8
 8017ad2:	bfa8      	it	ge
 8017ad4:	462f      	movge	r7, r5
 8017ad6:	2a02      	cmp	r2, #2
 8017ad8:	d154      	bne.n	8017b84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 8017ada:	9b01      	ldr	r3, [sp, #4]
 8017adc:	2bff      	cmp	r3, #255	@ 0xff
 8017ade:	d01a      	beq.n	8017b16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017ae0:	eb0b 0307 	add.w	r3, fp, r7
 8017ae4:	2b40      	cmp	r3, #64	@ 0x40
 8017ae6:	dd16      	ble.n	8017b16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8017ae8:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8017aec:	4649      	mov	r1, r9
 8017aee:	9800      	ldr	r0, [sp, #0]
 8017af0:	f7f4 fc43 	bl	800c37a <_ZN8touchgfx5paint9flushLineEPmi>
 8017af4:	465a      	mov	r2, fp
 8017af6:	9b01      	ldr	r3, [sp, #4]
 8017af8:	9900      	ldr	r1, [sp, #0]
 8017afa:	4620      	mov	r0, r4
 8017afc:	f7f4 fc48 	bl	800c390 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017b00:	9b00      	ldr	r3, [sp, #0]
 8017b02:	461a      	mov	r2, r3
 8017b04:	4b6c      	ldr	r3, [pc, #432]	@ (8017cb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017b06:	429a      	cmp	r2, r3
 8017b08:	bf0c      	ite	eq
 8017b0a:	4b6c      	ldreq	r3, [pc, #432]	@ (8017cbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017b0c:	4b6a      	ldrne	r3, [pc, #424]	@ (8017cb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017b0e:	9300      	str	r3, [sp, #0]
 8017b10:	444c      	add	r4, r9
 8017b12:	f04f 0b00 	mov.w	fp, #0
 8017b16:	4652      	mov	r2, sl
 8017b18:	2100      	movs	r1, #0
 8017b1a:	42a9      	cmp	r1, r5
 8017b1c:	da2c      	bge.n	8017b78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8017b1e:	4694      	mov	ip, r2
 8017b20:	f04f 0903 	mov.w	r9, #3
 8017b24:	f81c 3b02 	ldrb.w	r3, [ip], #2
 8017b28:	7852      	ldrb	r2, [r2, #1]
 8017b2a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8017b2e:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8017b32:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 8017b36:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8017b3a:	f003 021f 	and.w	r2, r3, #31
 8017b3e:	fb19 000e 	smlabb	r0, r9, lr, r0
 8017b42:	f04f 0e07 	mov.w	lr, #7
 8017b46:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8017b4a:	9a03      	ldr	r2, [sp, #12]
 8017b4c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8017b50:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8017b54:	42b9      	cmp	r1, r7
 8017b56:	461e      	mov	r6, r3
 8017b58:	8083      	strh	r3, [r0, #4]
 8017b5a:	da0a      	bge.n	8017b72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 8017b5c:	9a01      	ldr	r2, [sp, #4]
 8017b5e:	2aff      	cmp	r2, #255	@ 0xff
 8017b60:	bf15      	itete	ne
 8017b62:	9a00      	ldrne	r2, [sp, #0]
 8017b64:	8023      	strheq	r3, [r4, #0]
 8017b66:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 8017b6a:	3402      	addeq	r4, #2
 8017b6c:	bf18      	it	ne
 8017b6e:	f10b 0b01 	addne.w	fp, fp, #1
 8017b72:	3101      	adds	r1, #1
 8017b74:	4662      	mov	r2, ip
 8017b76:	e7d0      	b.n	8017b1a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 8017b78:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8017b7c:	eba8 0807 	sub.w	r8, r8, r7
 8017b80:	1bed      	subs	r5, r5, r7
 8017b82:	e76c      	b.n	8017a5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017b84:	9b01      	ldr	r3, [sp, #4]
 8017b86:	2bff      	cmp	r3, #255	@ 0xff
 8017b88:	eba8 0807 	sub.w	r8, r8, r7
 8017b8c:	eba5 0507 	sub.w	r5, r5, r7
 8017b90:	fa1f f986 	uxth.w	r9, r6
 8017b94:	d027      	beq.n	8017be6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 8017b96:	eb0b 0307 	add.w	r3, fp, r7
 8017b9a:	2b40      	cmp	r3, #64	@ 0x40
 8017b9c:	dd18      	ble.n	8017bd0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 8017b9e:	ea4f 034b 	mov.w	r3, fp, lsl #1
 8017ba2:	4619      	mov	r1, r3
 8017ba4:	9800      	ldr	r0, [sp, #0]
 8017ba6:	930c      	str	r3, [sp, #48]	@ 0x30
 8017ba8:	f7f4 fbe7 	bl	800c37a <_ZN8touchgfx5paint9flushLineEPmi>
 8017bac:	465a      	mov	r2, fp
 8017bae:	9b01      	ldr	r3, [sp, #4]
 8017bb0:	9900      	ldr	r1, [sp, #0]
 8017bb2:	4620      	mov	r0, r4
 8017bb4:	f7f4 fbec 	bl	800c390 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017bb8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017bba:	441c      	add	r4, r3
 8017bbc:	9b00      	ldr	r3, [sp, #0]
 8017bbe:	461a      	mov	r2, r3
 8017bc0:	4b3d      	ldr	r3, [pc, #244]	@ (8017cb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017bc2:	429a      	cmp	r2, r3
 8017bc4:	bf0c      	ite	eq
 8017bc6:	4b3d      	ldreq	r3, [pc, #244]	@ (8017cbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8017bc8:	4b3b      	ldrne	r3, [pc, #236]	@ (8017cb8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8017bca:	9300      	str	r3, [sp, #0]
 8017bcc:	f04f 0b00 	mov.w	fp, #0
 8017bd0:	9b00      	ldr	r3, [sp, #0]
 8017bd2:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8017bd6:	463b      	mov	r3, r7
 8017bd8:	2b00      	cmp	r3, #0
 8017bda:	f43f af3f 	beq.w	8017a5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8017bde:	f822 9b02 	strh.w	r9, [r2], #2
 8017be2:	3b01      	subs	r3, #1
 8017be4:	e7f8      	b.n	8017bd8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 8017be6:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 8017bea:	42a7      	cmp	r7, r4
 8017bec:	f67f af37 	bls.w	8017a5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8017bf0:	f824 9b02 	strh.w	r9, [r4], #2
 8017bf4:	e7f9      	b.n	8017bea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 8017bf6:	f1bb 0f00 	cmp.w	fp, #0
 8017bfa:	d00c      	beq.n	8017c16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8017bfc:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8017c00:	4641      	mov	r1, r8
 8017c02:	9800      	ldr	r0, [sp, #0]
 8017c04:	f7f4 fbb9 	bl	800c37a <_ZN8touchgfx5paint9flushLineEPmi>
 8017c08:	4620      	mov	r0, r4
 8017c0a:	9b01      	ldr	r3, [sp, #4]
 8017c0c:	9900      	ldr	r1, [sp, #0]
 8017c0e:	465a      	mov	r2, fp
 8017c10:	f7f4 fbbe 	bl	800c390 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8017c14:	4444      	add	r4, r8
 8017c16:	4b2a      	ldr	r3, [pc, #168]	@ (8017cc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 8017c18:	9a02      	ldr	r2, [sp, #8]
 8017c1a:	881b      	ldrh	r3, [r3, #0]
 8017c1c:	1a9b      	subs	r3, r3, r2
 8017c1e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017c22:	9b06      	ldr	r3, [sp, #24]
 8017c24:	3301      	adds	r3, #1
 8017c26:	9306      	str	r3, [sp, #24]
 8017c28:	9a06      	ldr	r2, [sp, #24]
 8017c2a:	9b04      	ldr	r3, [sp, #16]
 8017c2c:	4293      	cmp	r3, r2
 8017c2e:	d120      	bne.n	8017c72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8017c30:	9b05      	ldr	r3, [sp, #20]
 8017c32:	9a05      	ldr	r2, [sp, #20]
 8017c34:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8017c38:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8017c3c:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8017c3e:	f103 0801 	add.w	r8, r3, #1
 8017c42:	9b08      	ldr	r3, [sp, #32]
 8017c44:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8017c48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017c4a:	ba3f      	rev	r7, r7
 8017c4c:	2280      	movs	r2, #128	@ 0x80
 8017c4e:	2100      	movs	r1, #0
 8017c50:	441f      	add	r7, r3
 8017c52:	eba9 0905 	sub.w	r9, r9, r5
 8017c56:	f00a fd6e 	bl	8022736 <memset>
 8017c5a:	2300      	movs	r3, #0
 8017c5c:	fa1f f989 	uxth.w	r9, r9
 8017c60:	f04f 0600 	mov.w	r6, #0
 8017c64:	f8cd 8014 	str.w	r8, [sp, #20]
 8017c68:	9306      	str	r3, [sp, #24]
 8017c6a:	f7f4 fb7f 	bl	800c36c <_ZN8touchgfx5paint8tearDownEv>
 8017c6e:	46ba      	mov	sl, r7
 8017c70:	e58a      	b.n	8017788 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 8017c72:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 8017c76:	9b02      	ldr	r3, [sp, #8]
 8017c78:	eba9 0903 	sub.w	r9, r9, r3
 8017c7c:	eba9 0505 	sub.w	r5, r9, r5
 8017c80:	fa1f f985 	uxth.w	r9, r5
 8017c84:	e7f1      	b.n	8017c6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 8017c86:	4b0f      	ldr	r3, [pc, #60]	@ (8017cc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 8017c88:	6818      	ldr	r0, [r3, #0]
 8017c8a:	6803      	ldr	r3, [r0, #0]
 8017c8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017c8e:	4798      	blx	r3
 8017c90:	b013      	add	sp, #76	@ 0x4c
 8017c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c96:	9b02      	ldr	r3, [sp, #8]
 8017c98:	9a02      	ldr	r2, [sp, #8]
 8017c9a:	42ab      	cmp	r3, r5
 8017c9c:	bfa8      	it	ge
 8017c9e:	462b      	movge	r3, r5
 8017ca0:	eba2 0803 	sub.w	r8, r2, r3
 8017ca4:	1aed      	subs	r5, r5, r3
 8017ca6:	e626      	b.n	80178f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 8017ca8:	f108 38ff 	add.w	r8, r8, #4294967295
 8017cac:	fa1f f986 	uxth.w	r9, r6
 8017cb0:	2500      	movs	r5, #0
 8017cb2:	2701      	movs	r7, #1
 8017cb4:	e76f      	b.n	8017b96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 8017cb6:	bf00      	nop
 8017cb8:	20000120 	.word	0x20000120
 8017cbc:	20000220 	.word	0x20000220
 8017cc0:	20002db6 	.word	0x20002db6
 8017cc4:	20002dbc 	.word	0x20002dbc

08017cc8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8017cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ccc:	b08f      	sub	sp, #60	@ 0x3c
 8017cce:	461c      	mov	r4, r3
 8017cd0:	9203      	str	r2, [sp, #12]
 8017cd2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017cd6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8017cd8:	9202      	str	r2, [sp, #8]
 8017cda:	460f      	mov	r7, r1
 8017cdc:	2a00      	cmp	r2, #0
 8017cde:	f000 8128 	beq.w	8017f32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8017ce2:	6820      	ldr	r0, [r4, #0]
 8017ce4:	6861      	ldr	r1, [r4, #4]
 8017ce6:	aa0a      	add	r2, sp, #40	@ 0x28
 8017ce8:	c203      	stmia	r2!, {r0, r1}
 8017cea:	6818      	ldr	r0, [r3, #0]
 8017cec:	6859      	ldr	r1, [r3, #4]
 8017cee:	aa0c      	add	r2, sp, #48	@ 0x30
 8017cf0:	c203      	stmia	r2!, {r0, r1}
 8017cf2:	a80a      	add	r0, sp, #40	@ 0x28
 8017cf4:	f7f8 fb84 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017cf8:	4621      	mov	r1, r4
 8017cfa:	a80c      	add	r0, sp, #48	@ 0x30
 8017cfc:	f7f8 fba8 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d00:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8017d04:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8017d08:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8017d0c:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017d10:	bfde      	ittt	le
 8017d12:	b2b3      	uxthle	r3, r6
 8017d14:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017d18:	fb92 f3f3 	sdivle	r3, r2, r3
 8017d1c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017d20:	bfc8      	it	gt
 8017d22:	2301      	movgt	r3, #1
 8017d24:	fb92 f1f3 	sdiv	r1, r2, r3
 8017d28:	fa1f fc81 	uxth.w	ip, r1
 8017d2c:	fb0c 2413 	mls	r4, ip, r3, r2
 8017d30:	fb14 f406 	smulbb	r4, r4, r6
 8017d34:	441d      	add	r5, r3
 8017d36:	4404      	add	r4, r0
 8017d38:	4661      	mov	r1, ip
 8017d3a:	3d01      	subs	r5, #1
 8017d3c:	b2a4      	uxth	r4, r4
 8017d3e:	fb95 f5f3 	sdiv	r5, r5, r3
 8017d42:	b121      	cbz	r1, 8017d4e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8017d44:	9b03      	ldr	r3, [sp, #12]
 8017d46:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017d4a:	ba1b      	rev	r3, r3
 8017d4c:	441f      	add	r7, r3
 8017d4e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8017d52:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8017d56:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017d5a:	4418      	add	r0, r3
 8017d5c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8017d60:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8017d64:	441a      	add	r2, r3
 8017d66:	4b74      	ldr	r3, [pc, #464]	@ (8017f38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8017d68:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8017d6c:	6818      	ldr	r0, [r3, #0]
 8017d6e:	6803      	ldr	r3, [r0, #0]
 8017d70:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017d72:	4798      	blx	r3
 8017d74:	4a71      	ldr	r2, [pc, #452]	@ (8017f3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 8017d76:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8017d7a:	8813      	ldrh	r3, [r2, #0]
 8017d7c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8017d80:	9209      	str	r2, [sp, #36]	@ 0x24
 8017d82:	fb03 c101 	mla	r1, r3, r1, ip
 8017d86:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017d8a:	4373      	muls	r3, r6
 8017d8c:	b2ad      	uxth	r5, r5
 8017d8e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017d92:	00ad      	lsls	r5, r5, #2
 8017d94:	2c00      	cmp	r4, #0
 8017d96:	9304      	str	r3, [sp, #16]
 8017d98:	f105 0304 	add.w	r3, r5, #4
 8017d9c:	9305      	str	r3, [sp, #20]
 8017d9e:	bf0c      	ite	eq
 8017da0:	46c8      	moveq	r8, r9
 8017da2:	f04f 0800 	movne.w	r8, #0
 8017da6:	2300      	movs	r3, #0
 8017da8:	fa1f f888 	uxth.w	r8, r8
 8017dac:	9301      	str	r3, [sp, #4]
 8017dae:	9a04      	ldr	r2, [sp, #16]
 8017db0:	4282      	cmp	r2, r0
 8017db2:	f240 80b9 	bls.w	8017f28 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 8017db6:	b95b      	cbnz	r3, 8017dd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 8017db8:	783a      	ldrb	r2, [r7, #0]
 8017dba:	0993      	lsrs	r3, r2, #6
 8017dbc:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8017dc0:	9201      	str	r2, [sp, #4]
 8017dc2:	1e5a      	subs	r2, r3, #1
 8017dc4:	2a02      	cmp	r2, #2
 8017dc6:	bf8d      	iteet	hi
 8017dc8:	787b      	ldrbhi	r3, [r7, #1]
 8017dca:	3701      	addls	r7, #1
 8017dcc:	b29b      	uxthls	r3, r3
 8017dce:	3702      	addhi	r7, #2
 8017dd0:	b184      	cbz	r4, 8017df4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8017dd2:	429c      	cmp	r4, r3
 8017dd4:	bf95      	itete	ls
 8017dd6:	1b1c      	subls	r4, r3, r4
 8017dd8:	1ae4      	subhi	r4, r4, r3
 8017dda:	fa1f fa84 	uxthls.w	sl, r4
 8017dde:	b2a4      	uxthhi	r4, r4
 8017de0:	bf87      	ittee	hi
 8017de2:	46c4      	movhi	ip, r8
 8017de4:	f04f 0a00 	movhi.w	sl, #0
 8017de8:	fa1f fc89 	uxthls.w	ip, r9
 8017dec:	2400      	movls	r4, #0
 8017dee:	4653      	mov	r3, sl
 8017df0:	46e0      	mov	r8, ip
 8017df2:	e7dc      	b.n	8017dae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8017df4:	2204      	movs	r2, #4
 8017df6:	4615      	mov	r5, r2
 8017df8:	9905      	ldr	r1, [sp, #20]
 8017dfa:	9a01      	ldr	r2, [sp, #4]
 8017dfc:	fb15 1202 	smlabb	r2, r5, r2, r1
 8017e00:	9903      	ldr	r1, [sp, #12]
 8017e02:	588a      	ldr	r2, [r1, r2]
 8017e04:	4543      	cmp	r3, r8
 8017e06:	bf27      	ittee	cs
 8017e08:	eba3 0a08 	subcs.w	sl, r3, r8
 8017e0c:	46c6      	movcs	lr, r8
 8017e0e:	eba8 0c03 	subcc.w	ip, r8, r3
 8017e12:	469e      	movcc	lr, r3
 8017e14:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8017e18:	bf27      	ittee	cs
 8017e1a:	fa1f fa8a 	uxthcs.w	sl, sl
 8017e1e:	46a4      	movcs	ip, r4
 8017e20:	fa1f fc8c 	uxthcc.w	ip, ip
 8017e24:	46a2      	movcc	sl, r4
 8017e26:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 8017e2a:	2900      	cmp	r1, #0
 8017e2c:	d066      	beq.n	8017efc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8017e2e:	29ff      	cmp	r1, #255	@ 0xff
 8017e30:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8017e34:	d114      	bne.n	8017e60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8017e36:	9d02      	ldr	r5, [sp, #8]
 8017e38:	2dff      	cmp	r5, #255	@ 0xff
 8017e3a:	d111      	bne.n	8017e60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8017e3c:	0951      	lsrs	r1, r2, #5
 8017e3e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8017e42:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8017e46:	f026 0607 	bic.w	r6, r6, #7
 8017e4a:	430e      	orrs	r6, r1
 8017e4c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017e50:	4316      	orrs	r6, r2
 8017e52:	b2b6      	uxth	r6, r6
 8017e54:	4486      	add	lr, r0
 8017e56:	4586      	cmp	lr, r0
 8017e58:	d051      	beq.n	8017efe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017e5a:	f820 6b02 	strh.w	r6, [r0], #2
 8017e5e:	e7fa      	b.n	8017e56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 8017e60:	9d02      	ldr	r5, [sp, #8]
 8017e62:	4369      	muls	r1, r5
 8017e64:	1c4d      	adds	r5, r1, #1
 8017e66:	eb05 2521 	add.w	r5, r5, r1, asr #8
 8017e6a:	122d      	asrs	r5, r5, #8
 8017e6c:	ea6f 0b05 	mvn.w	fp, r5
 8017e70:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8017e74:	b2ad      	uxth	r5, r5
 8017e76:	b2f6      	uxtb	r6, r6
 8017e78:	b2d2      	uxtb	r2, r2
 8017e7a:	fb11 f105 	smulbb	r1, r1, r5
 8017e7e:	fb16 f605 	smulbb	r6, r6, r5
 8017e82:	fb12 f205 	smulbb	r2, r2, r5
 8017e86:	b289      	uxth	r1, r1
 8017e88:	b2b6      	uxth	r6, r6
 8017e8a:	b292      	uxth	r2, r2
 8017e8c:	9106      	str	r1, [sp, #24]
 8017e8e:	9607      	str	r6, [sp, #28]
 8017e90:	9208      	str	r2, [sp, #32]
 8017e92:	4486      	add	lr, r0
 8017e94:	fa5f fb8b 	uxtb.w	fp, fp
 8017e98:	4586      	cmp	lr, r0
 8017e9a:	d030      	beq.n	8017efe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8017e9c:	8802      	ldrh	r2, [r0, #0]
 8017e9e:	9906      	ldr	r1, [sp, #24]
 8017ea0:	1216      	asrs	r6, r2, #8
 8017ea2:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017ea6:	10d5      	asrs	r5, r2, #3
 8017ea8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017eac:	fb06 160b 	mla	r6, r6, fp, r1
 8017eb0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017eb4:	9907      	ldr	r1, [sp, #28]
 8017eb6:	00d2      	lsls	r2, r2, #3
 8017eb8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017ebc:	fb05 150b 	mla	r5, r5, fp, r1
 8017ec0:	b2d2      	uxtb	r2, r2
 8017ec2:	9908      	ldr	r1, [sp, #32]
 8017ec4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017ec8:	b2b6      	uxth	r6, r6
 8017eca:	fb02 120b 	mla	r2, r2, fp, r1
 8017ece:	b292      	uxth	r2, r2
 8017ed0:	1c71      	adds	r1, r6, #1
 8017ed2:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8017ed6:	1c51      	adds	r1, r2, #1
 8017ed8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017edc:	b2ad      	uxth	r5, r5
 8017ede:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017ee2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017ee6:	4316      	orrs	r6, r2
 8017ee8:	1c6a      	adds	r2, r5, #1
 8017eea:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017eee:	096d      	lsrs	r5, r5, #5
 8017ef0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017ef4:	432e      	orrs	r6, r5
 8017ef6:	f820 6b02 	strh.w	r6, [r0], #2
 8017efa:	e7cd      	b.n	8017e98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8017efc:	4470      	add	r0, lr
 8017efe:	4543      	cmp	r3, r8
 8017f00:	f4ff af75 	bcc.w	8017dee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8017f04:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8017f08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017f0a:	fa1f fc89 	uxth.w	ip, r9
 8017f0e:	eba4 040c 	sub.w	r4, r4, ip
 8017f12:	881b      	ldrh	r3, [r3, #0]
 8017f14:	b2a4      	uxth	r4, r4
 8017f16:	2c00      	cmp	r4, #0
 8017f18:	eba3 0309 	sub.w	r3, r3, r9
 8017f1c:	bf18      	it	ne
 8017f1e:	f04f 0c00 	movne.w	ip, #0
 8017f22:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f26:	e762      	b.n	8017dee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8017f28:	4b03      	ldr	r3, [pc, #12]	@ (8017f38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 8017f2a:	6818      	ldr	r0, [r3, #0]
 8017f2c:	6803      	ldr	r3, [r0, #0]
 8017f2e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017f30:	4798      	blx	r3
 8017f32:	b00f      	add	sp, #60	@ 0x3c
 8017f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f38:	20002dbc 	.word	0x20002dbc
 8017f3c:	20002db6 	.word	0x20002db6

08017f40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8017f40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f44:	b093      	sub	sp, #76	@ 0x4c
 8017f46:	461c      	mov	r4, r3
 8017f48:	9205      	str	r2, [sp, #20]
 8017f4a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8017f4e:	9101      	str	r1, [sp, #4]
 8017f50:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8017f52:	9202      	str	r2, [sp, #8]
 8017f54:	2a00      	cmp	r2, #0
 8017f56:	f000 812c 	beq.w	80181b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8017f5a:	6820      	ldr	r0, [r4, #0]
 8017f5c:	6861      	ldr	r1, [r4, #4]
 8017f5e:	aa0e      	add	r2, sp, #56	@ 0x38
 8017f60:	c203      	stmia	r2!, {r0, r1}
 8017f62:	6818      	ldr	r0, [r3, #0]
 8017f64:	6859      	ldr	r1, [r3, #4]
 8017f66:	aa10      	add	r2, sp, #64	@ 0x40
 8017f68:	c203      	stmia	r2!, {r0, r1}
 8017f6a:	a80e      	add	r0, sp, #56	@ 0x38
 8017f6c:	f7f8 fa48 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f70:	4621      	mov	r1, r4
 8017f72:	a810      	add	r0, sp, #64	@ 0x40
 8017f74:	f7f8 fa6c 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f78:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8017f7c:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 8017f80:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 8017f84:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8017f88:	bfde      	ittt	le
 8017f8a:	b2b3      	uxthle	r3, r6
 8017f8c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8017f90:	fb92 f3f3 	sdivle	r3, r2, r3
 8017f94:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017f98:	bfc8      	it	gt
 8017f9a:	2301      	movgt	r3, #1
 8017f9c:	fb92 f1f3 	sdiv	r1, r2, r3
 8017fa0:	fa1f fc81 	uxth.w	ip, r1
 8017fa4:	fb0c 2413 	mls	r4, ip, r3, r2
 8017fa8:	fb14 f406 	smulbb	r4, r4, r6
 8017fac:	441d      	add	r5, r3
 8017fae:	4404      	add	r4, r0
 8017fb0:	4661      	mov	r1, ip
 8017fb2:	3d01      	subs	r5, #1
 8017fb4:	b2a4      	uxth	r4, r4
 8017fb6:	fb95 f5f3 	sdiv	r5, r5, r3
 8017fba:	b131      	cbz	r1, 8017fca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8017fbc:	9b05      	ldr	r3, [sp, #20]
 8017fbe:	9901      	ldr	r1, [sp, #4]
 8017fc0:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8017fc4:	ba1b      	rev	r3, r3
 8017fc6:	4419      	add	r1, r3
 8017fc8:	9101      	str	r1, [sp, #4]
 8017fca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8017fce:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8017fd2:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8017fd6:	4418      	add	r0, r3
 8017fd8:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8017fdc:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8017fe0:	441a      	add	r2, r3
 8017fe2:	4b75      	ldr	r3, [pc, #468]	@ (80181b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8017fe4:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8017fe8:	6818      	ldr	r0, [r3, #0]
 8017fea:	6803      	ldr	r3, [r0, #0]
 8017fec:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017fee:	4798      	blx	r3
 8017ff0:	4972      	ldr	r1, [pc, #456]	@ (80181bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8017ff2:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8017ff6:	880b      	ldrh	r3, [r1, #0]
 8017ff8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017ffc:	910d      	str	r1, [sp, #52]	@ 0x34
 8017ffe:	fb03 c202 	mla	r2, r3, r2, ip
 8018002:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018006:	4373      	muls	r3, r6
 8018008:	b2ad      	uxth	r5, r5
 801800a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801800e:	00ad      	lsls	r5, r5, #2
 8018010:	9308      	str	r3, [sp, #32]
 8018012:	1d2b      	adds	r3, r5, #4
 8018014:	9309      	str	r3, [sp, #36]	@ 0x24
 8018016:	9b02      	ldr	r3, [sp, #8]
 8018018:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801801c:	9106      	str	r1, [sp, #24]
 801801e:	43da      	mvns	r2, r3
 8018020:	2c00      	cmp	r4, #0
 8018022:	bf0c      	ite	eq
 8018024:	46dc      	moveq	ip, fp
 8018026:	f04f 0c00 	movne.w	ip, #0
 801802a:	2300      	movs	r3, #0
 801802c:	b2d2      	uxtb	r2, r2
 801802e:	fa1f fc8c 	uxth.w	ip, ip
 8018032:	9303      	str	r3, [sp, #12]
 8018034:	9207      	str	r2, [sp, #28]
 8018036:	9a08      	ldr	r2, [sp, #32]
 8018038:	4282      	cmp	r2, r0
 801803a:	f240 80b5 	bls.w	80181a8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801803e:	b963      	cbnz	r3, 801805a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8018040:	9b01      	ldr	r3, [sp, #4]
 8018042:	781a      	ldrb	r2, [r3, #0]
 8018044:	0993      	lsrs	r3, r2, #6
 8018046:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801804a:	9203      	str	r2, [sp, #12]
 801804c:	1e5a      	subs	r2, r3, #1
 801804e:	2a02      	cmp	r2, #2
 8018050:	d815      	bhi.n	801807e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8018052:	9a01      	ldr	r2, [sp, #4]
 8018054:	3201      	adds	r2, #1
 8018056:	9201      	str	r2, [sp, #4]
 8018058:	b29b      	uxth	r3, r3
 801805a:	b1b4      	cbz	r4, 801808a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801805c:	429c      	cmp	r4, r3
 801805e:	bf95      	itete	ls
 8018060:	1b1c      	subls	r4, r3, r4
 8018062:	1ae4      	subhi	r4, r4, r3
 8018064:	fa1f f884 	uxthls.w	r8, r4
 8018068:	b2a4      	uxthhi	r4, r4
 801806a:	bf87      	ittee	hi
 801806c:	4666      	movhi	r6, ip
 801806e:	f04f 0800 	movhi.w	r8, #0
 8018072:	fa1f f68b 	uxthls.w	r6, fp
 8018076:	2400      	movls	r4, #0
 8018078:	4643      	mov	r3, r8
 801807a:	46b4      	mov	ip, r6
 801807c:	e7db      	b.n	8018036 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801807e:	9a01      	ldr	r2, [sp, #4]
 8018080:	9b01      	ldr	r3, [sp, #4]
 8018082:	3202      	adds	r2, #2
 8018084:	785b      	ldrb	r3, [r3, #1]
 8018086:	9201      	str	r2, [sp, #4]
 8018088:	e7e7      	b.n	801805a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801808a:	2203      	movs	r2, #3
 801808c:	4615      	mov	r5, r2
 801808e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018090:	9a03      	ldr	r2, [sp, #12]
 8018092:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018096:	9905      	ldr	r1, [sp, #20]
 8018098:	4563      	cmp	r3, ip
 801809a:	eb01 0502 	add.w	r5, r1, r2
 801809e:	9902      	ldr	r1, [sp, #8]
 80180a0:	bf29      	itett	cs
 80180a2:	eba3 080c 	subcs.w	r8, r3, ip
 80180a6:	ebac 0603 	subcc.w	r6, ip, r3
 80180aa:	fa1f f888 	uxthcs.w	r8, r8
 80180ae:	46e1      	movcs	r9, ip
 80180b0:	bf2f      	iteee	cs
 80180b2:	4626      	movcs	r6, r4
 80180b4:	b2b6      	uxthcc	r6, r6
 80180b6:	4699      	movcc	r9, r3
 80180b8:	46a0      	movcc	r8, r4
 80180ba:	29ff      	cmp	r1, #255	@ 0xff
 80180bc:	d04a      	beq.n	8018154 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 80180be:	9f06      	ldr	r7, [sp, #24]
 80180c0:	78a9      	ldrb	r1, [r5, #2]
 80180c2:	9004      	str	r0, [sp, #16]
 80180c4:	4379      	muls	r1, r7
 80180c6:	910a      	str	r1, [sp, #40]	@ 0x28
 80180c8:	7869      	ldrb	r1, [r5, #1]
 80180ca:	4379      	muls	r1, r7
 80180cc:	910b      	str	r1, [sp, #44]	@ 0x2c
 80180ce:	9905      	ldr	r1, [sp, #20]
 80180d0:	5c8a      	ldrb	r2, [r1, r2]
 80180d2:	437a      	muls	r2, r7
 80180d4:	920c      	str	r2, [sp, #48]	@ 0x30
 80180d6:	46ca      	mov	sl, r9
 80180d8:	f1ba 0f00 	cmp.w	sl, #0
 80180dc:	d03d      	beq.n	801815a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 80180de:	9a04      	ldr	r2, [sp, #16]
 80180e0:	9f07      	ldr	r7, [sp, #28]
 80180e2:	8812      	ldrh	r2, [r2, #0]
 80180e4:	1215      	asrs	r5, r2, #8
 80180e6:	46be      	mov	lr, r7
 80180e8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80180ec:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80180ee:	10d1      	asrs	r1, r2, #3
 80180f0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80180f4:	fb05 750e 	mla	r5, r5, lr, r7
 80180f8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80180fc:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80180fe:	00d2      	lsls	r2, r2, #3
 8018100:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018104:	fb01 710e 	mla	r1, r1, lr, r7
 8018108:	b2d2      	uxtb	r2, r2
 801810a:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801810c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018110:	b2ad      	uxth	r5, r5
 8018112:	fb02 720e 	mla	r2, r2, lr, r7
 8018116:	b292      	uxth	r2, r2
 8018118:	f105 0e01 	add.w	lr, r5, #1
 801811c:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018120:	f102 0e01 	add.w	lr, r2, #1
 8018124:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8018128:	b289      	uxth	r1, r1
 801812a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801812e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8018132:	4315      	orrs	r5, r2
 8018134:	1c4a      	adds	r2, r1, #1
 8018136:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801813a:	0949      	lsrs	r1, r1, #5
 801813c:	9a04      	ldr	r2, [sp, #16]
 801813e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8018142:	430d      	orrs	r5, r1
 8018144:	f822 5b02 	strh.w	r5, [r2], #2
 8018148:	f10a 3aff 	add.w	sl, sl, #4294967295
 801814c:	9204      	str	r2, [sp, #16]
 801814e:	fa1f fa8a 	uxth.w	sl, sl
 8018152:	e7c1      	b.n	80180d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8018154:	4649      	mov	r1, r9
 8018156:	4686      	mov	lr, r0
 8018158:	b999      	cbnz	r1, 8018182 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801815a:	4563      	cmp	r3, ip
 801815c:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8018160:	d38a      	bcc.n	8018078 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8018162:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8018166:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018168:	fa1f f68b 	uxth.w	r6, fp
 801816c:	1ba4      	subs	r4, r4, r6
 801816e:	881b      	ldrh	r3, [r3, #0]
 8018170:	b2a4      	uxth	r4, r4
 8018172:	2c00      	cmp	r4, #0
 8018174:	eba3 030b 	sub.w	r3, r3, fp
 8018178:	bf18      	it	ne
 801817a:	2600      	movne	r6, #0
 801817c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018180:	e77a      	b.n	8018078 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8018182:	78aa      	ldrb	r2, [r5, #2]
 8018184:	4f0e      	ldr	r7, [pc, #56]	@ (80181c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8018186:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801818a:	786a      	ldrb	r2, [r5, #1]
 801818c:	00d2      	lsls	r2, r2, #3
 801818e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018192:	ea4a 0202 	orr.w	r2, sl, r2
 8018196:	f895 a000 	ldrb.w	sl, [r5]
 801819a:	3901      	subs	r1, #1
 801819c:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 80181a0:	f82e 2b02 	strh.w	r2, [lr], #2
 80181a4:	b289      	uxth	r1, r1
 80181a6:	e7d7      	b.n	8018158 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 80181a8:	4b03      	ldr	r3, [pc, #12]	@ (80181b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 80181aa:	6818      	ldr	r0, [r3, #0]
 80181ac:	6803      	ldr	r3, [r0, #0]
 80181ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80181b0:	4798      	blx	r3
 80181b2:	b013      	add	sp, #76	@ 0x4c
 80181b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181b8:	20002dbc 	.word	0x20002dbc
 80181bc:	20002db6 	.word	0x20002db6
 80181c0:	fffff800 	.word	0xfffff800

080181c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80181c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181c8:	b09d      	sub	sp, #116	@ 0x74
 80181ca:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 80181ce:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 80181d2:	920e      	str	r2, [sp, #56]	@ 0x38
 80181d4:	461c      	mov	r4, r3
 80181d6:	4683      	mov	fp, r0
 80181d8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80181da:	2a00      	cmp	r2, #0
 80181dc:	f000 81e0 	beq.w	80185a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 80181e0:	6820      	ldr	r0, [r4, #0]
 80181e2:	6861      	ldr	r1, [r4, #4]
 80181e4:	aa18      	add	r2, sp, #96	@ 0x60
 80181e6:	c203      	stmia	r2!, {r0, r1}
 80181e8:	6818      	ldr	r0, [r3, #0]
 80181ea:	6859      	ldr	r1, [r3, #4]
 80181ec:	aa1a      	add	r2, sp, #104	@ 0x68
 80181ee:	c203      	stmia	r2!, {r0, r1}
 80181f0:	a818      	add	r0, sp, #96	@ 0x60
 80181f2:	f7f8 f905 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181f6:	4621      	mov	r1, r4
 80181f8:	a81a      	add	r0, sp, #104	@ 0x68
 80181fa:	f7f8 f929 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80181fe:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8018202:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8018206:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801820a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801820e:	bfd7      	itett	le
 8018210:	b29a      	uxthle	r2, r3
 8018212:	2201      	movgt	r2, #1
 8018214:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018218:	fb91 f2f2 	sdivle	r2, r1, r2
 801821c:	9202      	str	r2, [sp, #8]
 801821e:	9802      	ldr	r0, [sp, #8]
 8018220:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8018224:	fb92 f0f0 	sdiv	r0, r2, r0
 8018228:	b280      	uxth	r0, r0
 801822a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801822c:	9902      	ldr	r1, [sp, #8]
 801822e:	9802      	ldr	r0, [sp, #8]
 8018230:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8018232:	440c      	add	r4, r1
 8018234:	fb05 2510 	mls	r5, r5, r0, r2
 8018238:	fb15 f503 	smulbb	r5, r5, r3
 801823c:	3c01      	subs	r4, #1
 801823e:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8018242:	fb94 f4f1 	sdiv	r4, r4, r1
 8018246:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801824a:	440d      	add	r5, r1
 801824c:	4419      	add	r1, r3
 801824e:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8018252:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8018256:	441a      	add	r2, r3
 8018258:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801825c:	9306      	str	r3, [sp, #24]
 801825e:	4bb3      	ldr	r3, [pc, #716]	@ (801852c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8018260:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8018264:	6818      	ldr	r0, [r3, #0]
 8018266:	6803      	ldr	r3, [r0, #0]
 8018268:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801826a:	4798      	blx	r3
 801826c:	4bb0      	ldr	r3, [pc, #704]	@ (8018530 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801826e:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8018272:	881a      	ldrh	r2, [r3, #0]
 8018274:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8018278:	9316      	str	r3, [sp, #88]	@ 0x58
 801827a:	fb02 7101 	mla	r1, r2, r1, r7
 801827e:	3401      	adds	r4, #1
 8018280:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8018284:	b2a4      	uxth	r4, r4
 8018286:	4356      	muls	r6, r2
 8018288:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801828c:	00a4      	lsls	r4, r4, #2
 801828e:	920a      	str	r2, [sp, #40]	@ 0x28
 8018290:	1d22      	adds	r2, r4, #4
 8018292:	b2ad      	uxth	r5, r5
 8018294:	9213      	str	r2, [sp, #76]	@ 0x4c
 8018296:	4ba7      	ldr	r3, [pc, #668]	@ (8018534 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8018298:	9a06      	ldr	r2, [sp, #24]
 801829a:	2d00      	cmp	r5, #0
 801829c:	bf0c      	ite	eq
 801829e:	4611      	moveq	r1, r2
 80182a0:	2100      	movne	r1, #0
 80182a2:	2200      	movs	r2, #0
 80182a4:	eba3 030b 	sub.w	r3, r3, fp
 80182a8:	b289      	uxth	r1, r1
 80182aa:	920d      	str	r2, [sp, #52]	@ 0x34
 80182ac:	9317      	str	r3, [sp, #92]	@ 0x5c
 80182ae:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80182b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80182b2:	fa12 f383 	uxtah	r3, r2, r3
 80182b6:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80182b8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80182bc:	3304      	adds	r3, #4
 80182be:	9308      	str	r3, [sp, #32]
 80182c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80182c2:	4543      	cmp	r3, r8
 80182c4:	f240 8167 	bls.w	8018596 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 80182c8:	9a02      	ldr	r2, [sp, #8]
 80182ca:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 80182ce:	fbb5 f3f3 	udiv	r3, r5, r3
 80182d2:	1ad3      	subs	r3, r2, r3
 80182d4:	b29b      	uxth	r3, r3
 80182d6:	9314      	str	r3, [sp, #80]	@ 0x50
 80182d8:	9b08      	ldr	r3, [sp, #32]
 80182da:	9808      	ldr	r0, [sp, #32]
 80182dc:	785a      	ldrb	r2, [r3, #1]
 80182de:	789b      	ldrb	r3, [r3, #2]
 80182e0:	7800      	ldrb	r0, [r0, #0]
 80182e2:	9010      	str	r0, [sp, #64]	@ 0x40
 80182e4:	021b      	lsls	r3, r3, #8
 80182e6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80182ea:	9a08      	ldr	r2, [sp, #32]
 80182ec:	78d2      	ldrb	r2, [r2, #3]
 80182ee:	4313      	orrs	r3, r2
 80182f0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80182f2:	3001      	adds	r0, #1
 80182f4:	441a      	add	r2, r3
 80182f6:	9007      	str	r0, [sp, #28]
 80182f8:	1c50      	adds	r0, r2, #1
 80182fa:	9005      	str	r0, [sp, #20]
 80182fc:	7852      	ldrb	r2, [r2, #1]
 80182fe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018300:	0212      	lsls	r2, r2, #8
 8018302:	5cc3      	ldrb	r3, [r0, r3]
 8018304:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8018308:	431a      	orrs	r2, r3
 801830a:	b293      	uxth	r3, r2
 801830c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801830e:	2300      	movs	r3, #0
 8018310:	9309      	str	r3, [sp, #36]	@ 0x24
 8018312:	2301      	movs	r3, #1
 8018314:	9301      	str	r3, [sp, #4]
 8018316:	9304      	str	r3, [sp, #16]
 8018318:	2300      	movs	r3, #0
 801831a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801831e:	9303      	str	r3, [sp, #12]
 8018320:	f04f 0e01 	mov.w	lr, #1
 8018324:	2d00      	cmp	r5, #0
 8018326:	d07c      	beq.n	8018422 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8018328:	45ae      	cmp	lr, r5
 801832a:	d26b      	bcs.n	8018404 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801832c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801832e:	eba5 050e 	sub.w	r5, r5, lr
 8018332:	4543      	cmp	r3, r8
 8018334:	b2ad      	uxth	r5, r5
 8018336:	460c      	mov	r4, r1
 8018338:	d802      	bhi.n	8018340 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801833a:	e070      	b.n	801841e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801833c:	2b00      	cmp	r3, #0
 801833e:	d15c      	bne.n	80183fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8018340:	9b05      	ldr	r3, [sp, #20]
 8018342:	9a04      	ldr	r2, [sp, #16]
 8018344:	785b      	ldrb	r3, [r3, #1]
 8018346:	9904      	ldr	r1, [sp, #16]
 8018348:	f1c2 0207 	rsb	r2, r2, #7
 801834c:	4093      	lsls	r3, r2
 801834e:	005b      	lsls	r3, r3, #1
 8018350:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8018354:	9b05      	ldr	r3, [sp, #20]
 8018356:	781b      	ldrb	r3, [r3, #0]
 8018358:	410b      	asrs	r3, r1
 801835a:	3101      	adds	r1, #1
 801835c:	b2c9      	uxtb	r1, r1
 801835e:	2908      	cmp	r1, #8
 8018360:	9104      	str	r1, [sp, #16]
 8018362:	9905      	ldr	r1, [sp, #20]
 8018364:	bf0a      	itet	eq
 8018366:	3102      	addeq	r1, #2
 8018368:	3101      	addne	r1, #1
 801836a:	9105      	streq	r1, [sp, #20]
 801836c:	b2db      	uxtb	r3, r3
 801836e:	bf0a      	itet	eq
 8018370:	2100      	moveq	r1, #0
 8018372:	9105      	strne	r1, [sp, #20]
 8018374:	9104      	streq	r1, [sp, #16]
 8018376:	4313      	orrs	r3, r2
 8018378:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801837a:	b29a      	uxth	r2, r3
 801837c:	4291      	cmp	r1, r2
 801837e:	d30a      	bcc.n	8018396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8018380:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8018384:	2301      	movs	r3, #1
 8018386:	9907      	ldr	r1, [sp, #28]
 8018388:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801838c:	d30f      	bcc.n	80183ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801838e:	2100      	movs	r1, #0
 8018390:	9301      	str	r3, [sp, #4]
 8018392:	9103      	str	r1, [sp, #12]
 8018394:	e032      	b.n	80183fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8018396:	9b07      	ldr	r3, [sp, #28]
 8018398:	429a      	cmp	r2, r3
 801839a:	d318      	bcc.n	80183ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801839c:	9b01      	ldr	r3, [sp, #4]
 801839e:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 80183a2:	445b      	add	r3, fp
 80183a4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80183a8:	9b01      	ldr	r3, [sp, #4]
 80183aa:	3301      	adds	r3, #1
 80183ac:	b29b      	uxth	r3, r3
 80183ae:	9907      	ldr	r1, [sp, #28]
 80183b0:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 80183b4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80183b8:	7108      	strb	r0, [r1, #4]
 80183ba:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80183bc:	80c8      	strh	r0, [r1, #6]
 80183be:	9801      	ldr	r0, [sp, #4]
 80183c0:	3001      	adds	r0, #1
 80183c2:	7148      	strb	r0, [r1, #5]
 80183c4:	9907      	ldr	r1, [sp, #28]
 80183c6:	3101      	adds	r1, #1
 80183c8:	b289      	uxth	r1, r1
 80183ca:	9107      	str	r1, [sp, #28]
 80183cc:	e7df      	b.n	801838e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 80183ce:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 80183d2:	4611      	mov	r1, r2
 80183d4:	795b      	ldrb	r3, [r3, #5]
 80183d6:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 80183da:	4458      	add	r0, fp
 80183dc:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 80183de:	4406      	add	r6, r0
 80183e0:	2e00      	cmp	r6, #0
 80183e2:	dd06      	ble.n	80183f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 80183e4:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 80183e8:	790e      	ldrb	r6, [r1, #4]
 80183ea:	f800 6d01 	strb.w	r6, [r0, #-1]!
 80183ee:	88c9      	ldrh	r1, [r1, #6]
 80183f0:	e7f4      	b.n	80183dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 80183f2:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 80183f6:	b29b      	uxth	r3, r3
 80183f8:	e7c5      	b.n	8018386 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 80183fa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80183fc:	920b      	str	r2, [sp, #44]	@ 0x2c
 80183fe:	4621      	mov	r1, r4
 8018400:	469e      	mov	lr, r3
 8018402:	e78f      	b.n	8018324 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8018404:	9a03      	ldr	r2, [sp, #12]
 8018406:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801840a:	442a      	add	r2, r5
 801840c:	ebae 0305 	sub.w	r3, lr, r5
 8018410:	b292      	uxth	r2, r2
 8018412:	b29b      	uxth	r3, r3
 8018414:	9203      	str	r2, [sp, #12]
 8018416:	2500      	movs	r5, #0
 8018418:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801841a:	4542      	cmp	r2, r8
 801841c:	d88e      	bhi.n	801833c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801841e:	4621      	mov	r1, r4
 8018420:	e74e      	b.n	80182c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8018422:	458e      	cmp	lr, r1
 8018424:	bf29      	itett	cs
 8018426:	ebae 0301 	subcs.w	r3, lr, r1
 801842a:	eba1 040e 	subcc.w	r4, r1, lr
 801842e:	b29b      	uxthcs	r3, r3
 8018430:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8018432:	bf2f      	iteee	cs
 8018434:	462c      	movcs	r4, r5
 8018436:	b2a4      	uxthcc	r4, r4
 8018438:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801843c:	462b      	movcc	r3, r5
 801843e:	f04f 0900 	mov.w	r9, #0
 8018442:	9a03      	ldr	r2, [sp, #12]
 8018444:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8018446:	444a      	add	r2, r9
 8018448:	4548      	cmp	r0, r9
 801844a:	b292      	uxth	r2, r2
 801844c:	d074      	beq.n	8018538 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801844e:	445a      	add	r2, fp
 8018450:	2004      	movs	r0, #4
 8018452:	4605      	mov	r5, r0
 8018454:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8018458:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801845a:	fb15 0202 	smlabb	r2, r5, r2, r0
 801845e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018460:	5880      	ldr	r0, [r0, r2]
 8018462:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8018466:	d014      	beq.n	8018492 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8018468:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801846c:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8018470:	d112      	bne.n	8018498 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8018472:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8018474:	2aff      	cmp	r2, #255	@ 0xff
 8018476:	d10f      	bne.n	8018498 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8018478:	0942      	lsrs	r2, r0, #5
 801847a:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801847e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018482:	f025 0507 	bic.w	r5, r5, #7
 8018486:	4315      	orrs	r5, r2
 8018488:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801848c:	4305      	orrs	r5, r0
 801848e:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8018492:	f109 0901 	add.w	r9, r9, #1
 8018496:	e7d4      	b.n	8018442 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8018498:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801849c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80184a0:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 80184a4:	9215      	str	r2, [sp, #84]	@ 0x54
 80184a6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80184a8:	fb02 fa0a 	mul.w	sl, r2, sl
 80184ac:	f10a 0201 	add.w	r2, sl, #1
 80184b0:	eb02 222a 	add.w	r2, r2, sl, asr #8
 80184b4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80184b8:	1212      	asrs	r2, r2, #8
 80184ba:	fa1f fa82 	uxth.w	sl, r2
 80184be:	f3c0 4607 	ubfx	r6, r0, #16, #8
 80184c2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80184c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80184ca:	43d2      	mvns	r2, r2
 80184cc:	b2d2      	uxtb	r2, r2
 80184ce:	fb16 f60a 	smulbb	r6, r6, sl
 80184d2:	fa5f fc8c 	uxtb.w	ip, ip
 80184d6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 80184da:	b2c0      	uxtb	r0, r0
 80184dc:	fb07 6702 	mla	r7, r7, r2, r6
 80184e0:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 80184e4:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 80184e6:	fb10 f00a 	smulbb	r0, r0, sl
 80184ea:	fb0c 0002 	mla	r0, ip, r2, r0
 80184ee:	b2ed      	uxtb	r5, r5
 80184f0:	b2bf      	uxth	r7, r7
 80184f2:	fb15 f50a 	smulbb	r5, r5, sl
 80184f6:	b280      	uxth	r0, r0
 80184f8:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80184fc:	fb06 5602 	mla	r6, r6, r2, r5
 8018500:	1c7a      	adds	r2, r7, #1
 8018502:	1c45      	adds	r5, r0, #1
 8018504:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018508:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801850c:	b2b6      	uxth	r6, r6
 801850e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018512:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018516:	432f      	orrs	r7, r5
 8018518:	1c75      	adds	r5, r6, #1
 801851a:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801851e:	096d      	lsrs	r5, r5, #5
 8018520:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018524:	432f      	orrs	r7, r5
 8018526:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801852a:	e7b2      	b.n	8018492 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801852c:	20002dbc 	.word	0x20002dbc
 8018530:	20002db6 	.word	0x20002db6
 8018534:	fffff7fb 	.word	0xfffff7fb
 8018538:	9203      	str	r2, [sp, #12]
 801853a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801853c:	458e      	cmp	lr, r1
 801853e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018542:	f4ff af68 	bcc.w	8018416 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8018546:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8018548:	9906      	ldr	r1, [sp, #24]
 801854a:	8812      	ldrh	r2, [r2, #0]
 801854c:	1a52      	subs	r2, r2, r1
 801854e:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8018552:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018554:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018556:	3201      	adds	r2, #1
 8018558:	428a      	cmp	r2, r1
 801855a:	9209      	str	r2, [sp, #36]	@ 0x24
 801855c:	d111      	bne.n	8018582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801855e:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8018562:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8018566:	9b06      	ldr	r3, [sp, #24]
 8018568:	eba5 0509 	sub.w	r5, r5, r9
 801856c:	b2ad      	uxth	r5, r5
 801856e:	2d00      	cmp	r5, #0
 8018570:	bf08      	it	eq
 8018572:	4619      	moveq	r1, r3
 8018574:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018576:	bf18      	it	ne
 8018578:	2100      	movne	r1, #0
 801857a:	3301      	adds	r3, #1
 801857c:	930d      	str	r3, [sp, #52]	@ 0x34
 801857e:	b289      	uxth	r1, r1
 8018580:	e695      	b.n	80182ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8018582:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8018586:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801858a:	1b2d      	subs	r5, r5, r4
 801858c:	b2ad      	uxth	r5, r5
 801858e:	2d00      	cmp	r5, #0
 8018590:	bf18      	it	ne
 8018592:	2400      	movne	r4, #0
 8018594:	e740      	b.n	8018418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8018596:	4b04      	ldr	r3, [pc, #16]	@ (80185a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8018598:	6818      	ldr	r0, [r3, #0]
 801859a:	6803      	ldr	r3, [r0, #0]
 801859c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801859e:	4798      	blx	r3
 80185a0:	b01d      	add	sp, #116	@ 0x74
 80185a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185a6:	bf00      	nop
 80185a8:	20002dbc 	.word	0x20002dbc

080185ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80185ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80185b0:	b09f      	sub	sp, #124	@ 0x7c
 80185b2:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 80185b6:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 80185ba:	920a      	str	r2, [sp, #40]	@ 0x28
 80185bc:	461d      	mov	r5, r3
 80185be:	4604      	mov	r4, r0
 80185c0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80185c2:	2a00      	cmp	r2, #0
 80185c4:	f000 81fa 	beq.w	80189bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 80185c8:	6828      	ldr	r0, [r5, #0]
 80185ca:	6869      	ldr	r1, [r5, #4]
 80185cc:	aa1a      	add	r2, sp, #104	@ 0x68
 80185ce:	c203      	stmia	r2!, {r0, r1}
 80185d0:	6818      	ldr	r0, [r3, #0]
 80185d2:	6859      	ldr	r1, [r3, #4]
 80185d4:	aa1c      	add	r2, sp, #112	@ 0x70
 80185d6:	c203      	stmia	r2!, {r0, r1}
 80185d8:	a81a      	add	r0, sp, #104	@ 0x68
 80185da:	f7f7 ff11 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80185de:	4629      	mov	r1, r5
 80185e0:	a81c      	add	r0, sp, #112	@ 0x70
 80185e2:	f7f7 ff35 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80185e6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 80185ea:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 80185ee:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 80185f2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80185f6:	bfd7      	itett	le
 80185f8:	b29a      	uxthle	r2, r3
 80185fa:	2201      	movgt	r2, #1
 80185fc:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018600:	fb91 f2f2 	sdivle	r2, r1, r2
 8018604:	9201      	str	r2, [sp, #4]
 8018606:	9801      	ldr	r0, [sp, #4]
 8018608:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801860c:	fb92 f0f0 	sdiv	r0, r2, r0
 8018610:	b280      	uxth	r0, r0
 8018612:	9010      	str	r0, [sp, #64]	@ 0x40
 8018614:	9901      	ldr	r1, [sp, #4]
 8018616:	9801      	ldr	r0, [sp, #4]
 8018618:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801861a:	440e      	add	r6, r1
 801861c:	fb05 2510 	mls	r5, r5, r0, r2
 8018620:	fb15 f503 	smulbb	r5, r5, r3
 8018624:	3e01      	subs	r6, #1
 8018626:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801862a:	fb96 f6f1 	sdiv	r6, r6, r1
 801862e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8018632:	440d      	add	r5, r1
 8018634:	4419      	add	r1, r3
 8018636:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801863a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801863e:	441a      	add	r2, r3
 8018640:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8018644:	9304      	str	r3, [sp, #16]
 8018646:	4b96      	ldr	r3, [pc, #600]	@ (80188a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8018648:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801864c:	6818      	ldr	r0, [r3, #0]
 801864e:	6803      	ldr	r3, [r0, #0]
 8018650:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018652:	4798      	blx	r3
 8018654:	4b93      	ldr	r3, [pc, #588]	@ (80188a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8018656:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801865a:	881a      	ldrh	r2, [r3, #0]
 801865c:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 8018660:	9318      	str	r3, [sp, #96]	@ 0x60
 8018662:	fb02 c101 	mla	r1, r2, r1, ip
 8018666:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801866a:	4357      	muls	r7, r2
 801866c:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 8018670:	3601      	adds	r6, #1
 8018672:	920b      	str	r2, [sp, #44]	@ 0x2c
 8018674:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018676:	4b8c      	ldr	r3, [pc, #560]	@ (80188a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018678:	b2b6      	uxth	r6, r6
 801867a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801867e:	1d32      	adds	r2, r6, #4
 8018680:	9206      	str	r2, [sp, #24]
 8018682:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018684:	43d2      	mvns	r2, r2
 8018686:	b2d2      	uxtb	r2, r2
 8018688:	b2ad      	uxth	r5, r5
 801868a:	9215      	str	r2, [sp, #84]	@ 0x54
 801868c:	9a04      	ldr	r2, [sp, #16]
 801868e:	2d00      	cmp	r5, #0
 8018690:	bf0c      	ite	eq
 8018692:	4611      	moveq	r1, r2
 8018694:	2100      	movne	r1, #0
 8018696:	2200      	movs	r2, #0
 8018698:	1b1b      	subs	r3, r3, r4
 801869a:	b289      	uxth	r1, r1
 801869c:	920d      	str	r2, [sp, #52]	@ 0x34
 801869e:	9319      	str	r3, [sp, #100]	@ 0x64
 80186a0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80186a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80186a4:	fa12 f383 	uxtah	r3, r2, r3
 80186a8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80186aa:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80186ae:	3304      	adds	r3, #4
 80186b0:	9307      	str	r3, [sp, #28]
 80186b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80186b4:	455b      	cmp	r3, fp
 80186b6:	f240 817c 	bls.w	80189b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 80186ba:	9a01      	ldr	r2, [sp, #4]
 80186bc:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 80186c0:	fbb5 f3f3 	udiv	r3, r5, r3
 80186c4:	1ad3      	subs	r3, r2, r3
 80186c6:	b29b      	uxth	r3, r3
 80186c8:	9316      	str	r3, [sp, #88]	@ 0x58
 80186ca:	9b07      	ldr	r3, [sp, #28]
 80186cc:	9807      	ldr	r0, [sp, #28]
 80186ce:	785a      	ldrb	r2, [r3, #1]
 80186d0:	789b      	ldrb	r3, [r3, #2]
 80186d2:	7800      	ldrb	r0, [r0, #0]
 80186d4:	9011      	str	r0, [sp, #68]	@ 0x44
 80186d6:	021b      	lsls	r3, r3, #8
 80186d8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80186dc:	9a07      	ldr	r2, [sp, #28]
 80186de:	78d2      	ldrb	r2, [r2, #3]
 80186e0:	4313      	orrs	r3, r2
 80186e2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80186e4:	3001      	adds	r0, #1
 80186e6:	441a      	add	r2, r3
 80186e8:	9005      	str	r0, [sp, #20]
 80186ea:	1c50      	adds	r0, r2, #1
 80186ec:	9003      	str	r0, [sp, #12]
 80186ee:	7852      	ldrb	r2, [r2, #1]
 80186f0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80186f2:	0212      	lsls	r2, r2, #8
 80186f4:	5cc3      	ldrb	r3, [r0, r3]
 80186f6:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 80186fa:	431a      	orrs	r2, r3
 80186fc:	b293      	uxth	r3, r2
 80186fe:	930c      	str	r3, [sp, #48]	@ 0x30
 8018700:	2300      	movs	r3, #0
 8018702:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8018706:	9308      	str	r3, [sp, #32]
 8018708:	461a      	mov	r2, r3
 801870a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801870e:	930e      	str	r3, [sp, #56]	@ 0x38
 8018710:	f04f 0801 	mov.w	r8, #1
 8018714:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8018718:	f8cd 8008 	str.w	r8, [sp, #8]
 801871c:	46c4      	mov	ip, r8
 801871e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018720:	2d00      	cmp	r5, #0
 8018722:	d07c      	beq.n	801881e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 8018724:	45ac      	cmp	ip, r5
 8018726:	d26c      	bcs.n	8018802 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8018728:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801872a:	eba5 050c 	sub.w	r5, r5, ip
 801872e:	455b      	cmp	r3, fp
 8018730:	b2ad      	uxth	r5, r5
 8018732:	4608      	mov	r0, r1
 8018734:	d802      	bhi.n	801873c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8018736:	e070      	b.n	801881a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 8018738:	2b00      	cmp	r3, #0
 801873a:	d15c      	bne.n	80187f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801873c:	9b03      	ldr	r3, [sp, #12]
 801873e:	9a02      	ldr	r2, [sp, #8]
 8018740:	785b      	ldrb	r3, [r3, #1]
 8018742:	9902      	ldr	r1, [sp, #8]
 8018744:	f1c2 0207 	rsb	r2, r2, #7
 8018748:	4093      	lsls	r3, r2
 801874a:	005b      	lsls	r3, r3, #1
 801874c:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8018750:	9b03      	ldr	r3, [sp, #12]
 8018752:	781b      	ldrb	r3, [r3, #0]
 8018754:	410b      	asrs	r3, r1
 8018756:	3101      	adds	r1, #1
 8018758:	b2c9      	uxtb	r1, r1
 801875a:	2908      	cmp	r1, #8
 801875c:	9102      	str	r1, [sp, #8]
 801875e:	9903      	ldr	r1, [sp, #12]
 8018760:	bf0a      	itet	eq
 8018762:	3102      	addeq	r1, #2
 8018764:	3101      	addne	r1, #1
 8018766:	9103      	streq	r1, [sp, #12]
 8018768:	b2db      	uxtb	r3, r3
 801876a:	bf0a      	itet	eq
 801876c:	2100      	moveq	r1, #0
 801876e:	9103      	strne	r1, [sp, #12]
 8018770:	9102      	streq	r1, [sp, #8]
 8018772:	4313      	orrs	r3, r2
 8018774:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8018776:	b29a      	uxth	r2, r3
 8018778:	4291      	cmp	r1, r2
 801877a:	d30a      	bcc.n	8018792 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801877c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8018780:	2301      	movs	r3, #1
 8018782:	9905      	ldr	r1, [sp, #20]
 8018784:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8018788:	d30f      	bcc.n	80187aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801878a:	2100      	movs	r1, #0
 801878c:	4698      	mov	r8, r3
 801878e:	9100      	str	r1, [sp, #0]
 8018790:	e032      	b.n	80187f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 8018792:	9b05      	ldr	r3, [sp, #20]
 8018794:	429a      	cmp	r2, r3
 8018796:	d318      	bcc.n	80187ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8018798:	eb04 0308 	add.w	r3, r4, r8
 801879c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80187a0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80187a4:	f108 0301 	add.w	r3, r8, #1
 80187a8:	b29b      	uxth	r3, r3
 80187aa:	9905      	ldr	r1, [sp, #20]
 80187ac:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 80187b0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80187b4:	710e      	strb	r6, [r1, #4]
 80187b6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80187b8:	80ce      	strh	r6, [r1, #6]
 80187ba:	f108 0601 	add.w	r6, r8, #1
 80187be:	714e      	strb	r6, [r1, #5]
 80187c0:	9905      	ldr	r1, [sp, #20]
 80187c2:	3101      	adds	r1, #1
 80187c4:	b289      	uxth	r1, r1
 80187c6:	9105      	str	r1, [sp, #20]
 80187c8:	e7df      	b.n	801878a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 80187ca:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80187ce:	4611      	mov	r1, r2
 80187d0:	795b      	ldrb	r3, [r3, #5]
 80187d2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 80187d6:	4426      	add	r6, r4
 80187d8:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 80187da:	4437      	add	r7, r6
 80187dc:	2f00      	cmp	r7, #0
 80187de:	dd06      	ble.n	80187ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 80187e0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 80187e4:	790f      	ldrb	r7, [r1, #4]
 80187e6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80187ea:	88c9      	ldrh	r1, [r1, #6]
 80187ec:	e7f4      	b.n	80187d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 80187ee:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 80187f2:	b29b      	uxth	r3, r3
 80187f4:	e7c5      	b.n	8018782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80187f6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80187f8:	920c      	str	r2, [sp, #48]	@ 0x30
 80187fa:	4601      	mov	r1, r0
 80187fc:	9a00      	ldr	r2, [sp, #0]
 80187fe:	469c      	mov	ip, r3
 8018800:	e78e      	b.n	8018720 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 8018802:	1957      	adds	r7, r2, r5
 8018804:	ebac 0305 	sub.w	r3, ip, r5
 8018808:	b2ba      	uxth	r2, r7
 801880a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801880e:	9200      	str	r2, [sp, #0]
 8018810:	b29b      	uxth	r3, r3
 8018812:	2500      	movs	r5, #0
 8018814:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8018816:	455a      	cmp	r2, fp
 8018818:	d88e      	bhi.n	8018738 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801881a:	4601      	mov	r1, r0
 801881c:	e749      	b.n	80186b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801881e:	458c      	cmp	ip, r1
 8018820:	bf2c      	ite	cs
 8018822:	4628      	movcs	r0, r5
 8018824:	462b      	movcc	r3, r5
 8018826:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8018828:	bf27      	ittee	cs
 801882a:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801882c:	ebac 0301 	subcs.w	r3, ip, r1
 8018830:	eba1 000c 	subcc.w	r0, r1, ip
 8018834:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8018838:	bf2c      	ite	cs
 801883a:	b29b      	uxthcs	r3, r3
 801883c:	b280      	uxthcc	r0, r0
 801883e:	2dff      	cmp	r5, #255	@ 0xff
 8018840:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8018842:	eb02 0705 	add.w	r7, r2, r5
 8018846:	b2bd      	uxth	r5, r7
 8018848:	9500      	str	r5, [sp, #0]
 801884a:	d12f      	bne.n	80188ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801884c:	465e      	mov	r6, fp
 801884e:	9d00      	ldr	r5, [sp, #0]
 8018850:	42aa      	cmp	r2, r5
 8018852:	f040 8084 	bne.w	801895e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 8018856:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018858:	458c      	cmp	ip, r1
 801885a:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801885e:	d3d8      	bcc.n	8018812 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 8018860:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8018862:	9904      	ldr	r1, [sp, #16]
 8018864:	8812      	ldrh	r2, [r2, #0]
 8018866:	1a52      	subs	r2, r2, r1
 8018868:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801886c:	9a08      	ldr	r2, [sp, #32]
 801886e:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8018870:	3201      	adds	r2, #1
 8018872:	428a      	cmp	r2, r1
 8018874:	9208      	str	r2, [sp, #32]
 8018876:	f040 8092 	bne.w	801899e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801887a:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801887e:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 8018882:	9b04      	ldr	r3, [sp, #16]
 8018884:	eba5 050c 	sub.w	r5, r5, ip
 8018888:	b2ad      	uxth	r5, r5
 801888a:	2d00      	cmp	r5, #0
 801888c:	bf08      	it	eq
 801888e:	4619      	moveq	r1, r3
 8018890:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018892:	bf18      	it	ne
 8018894:	2100      	movne	r1, #0
 8018896:	3301      	adds	r3, #1
 8018898:	930d      	str	r3, [sp, #52]	@ 0x34
 801889a:	b289      	uxth	r1, r1
 801889c:	e700      	b.n	80186a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801889e:	bf00      	nop
 80188a0:	20002dbc 	.word	0x20002dbc
 80188a4:	20002db6 	.word	0x20002db6
 80188a8:	fffff7fb 	.word	0xfffff7fb
 80188ac:	46d9      	mov	r9, fp
 80188ae:	9d00      	ldr	r5, [sp, #0]
 80188b0:	42aa      	cmp	r2, r5
 80188b2:	d0d0      	beq.n	8018856 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 80188b4:	1c55      	adds	r5, r2, #1
 80188b6:	4422      	add	r2, r4
 80188b8:	9517      	str	r5, [sp, #92]	@ 0x5c
 80188ba:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 80188be:	9a06      	ldr	r2, [sp, #24]
 80188c0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80188c4:	4472      	add	r2, lr
 80188c6:	9212      	str	r2, [sp, #72]	@ 0x48
 80188c8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80188ca:	f8b9 2000 	ldrh.w	r2, [r9]
 80188ce:	f897 a002 	ldrb.w	sl, [r7, #2]
 80188d2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80188d4:	1216      	asrs	r6, r2, #8
 80188d6:	fb1a fa07 	smulbb	sl, sl, r7
 80188da:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80188de:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80188e0:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80188e4:	fb06 a607 	mla	r6, r6, r7, sl
 80188e8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 80188ea:	f897 a001 	ldrb.w	sl, [r7, #1]
 80188ee:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 80188f0:	10d5      	asrs	r5, r2, #3
 80188f2:	fb1a fa07 	smulbb	sl, sl, r7
 80188f6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80188fa:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 80188fc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018900:	fb05 a507 	mla	r5, r5, r7, sl
 8018904:	9f06      	ldr	r7, [sp, #24]
 8018906:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801890a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801890c:	00d2      	lsls	r2, r2, #3
 801890e:	fb1e fe07 	smulbb	lr, lr, r7
 8018912:	b2d2      	uxtb	r2, r2
 8018914:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8018916:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801891a:	b2b6      	uxth	r6, r6
 801891c:	fb02 e207 	mla	r2, r2, r7, lr
 8018920:	b292      	uxth	r2, r2
 8018922:	b2ad      	uxth	r5, r5
 8018924:	f106 0a01 	add.w	sl, r6, #1
 8018928:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801892c:	f102 0e01 	add.w	lr, r2, #1
 8018930:	f105 0a01 	add.w	sl, r5, #1
 8018934:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8018938:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801893c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018940:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018944:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018948:	ea4e 0606 	orr.w	r6, lr, r6
 801894c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018950:	ea46 060a 	orr.w	r6, r6, sl
 8018954:	f829 6b02 	strh.w	r6, [r9], #2
 8018958:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801895c:	e7a7      	b.n	80188ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801895e:	f102 0e01 	add.w	lr, r2, #1
 8018962:	4422      	add	r2, r4
 8018964:	9f06      	ldr	r7, [sp, #24]
 8018966:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801896a:	9a06      	ldr	r2, [sp, #24]
 801896c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8018970:	eb02 0a05 	add.w	sl, r2, r5
 8018974:	4a13      	ldr	r2, [pc, #76]	@ (80189c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 8018976:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801897a:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801897e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8018982:	00d2      	lsls	r2, r2, #3
 8018984:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018988:	ea49 0202 	orr.w	r2, r9, r2
 801898c:	f817 9005 	ldrb.w	r9, [r7, r5]
 8018990:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8018994:	f826 2b02 	strh.w	r2, [r6], #2
 8018998:	fa1f f28e 	uxth.w	r2, lr
 801899c:	e757      	b.n	801884e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801899e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80189a2:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80189a6:	1a2d      	subs	r5, r5, r0
 80189a8:	b2ad      	uxth	r5, r5
 80189aa:	2d00      	cmp	r5, #0
 80189ac:	bf18      	it	ne
 80189ae:	2000      	movne	r0, #0
 80189b0:	e730      	b.n	8018814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 80189b2:	4b05      	ldr	r3, [pc, #20]	@ (80189c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 80189b4:	6818      	ldr	r0, [r3, #0]
 80189b6:	6803      	ldr	r3, [r0, #0]
 80189b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80189ba:	4798      	blx	r3
 80189bc:	b01f      	add	sp, #124	@ 0x7c
 80189be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189c2:	bf00      	nop
 80189c4:	fffff800 	.word	0xfffff800
 80189c8:	20002dbc 	.word	0x20002dbc

080189cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80189cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189d0:	b091      	sub	sp, #68	@ 0x44
 80189d2:	469b      	mov	fp, r3
 80189d4:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 80189d8:	4616      	mov	r6, r2
 80189da:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 80189de:	f9b3 2000 	ldrsh.w	r2, [r3]
 80189e2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 80189e6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80189ea:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80189ee:	4604      	mov	r4, r0
 80189f0:	460d      	mov	r5, r1
 80189f2:	4640      	mov	r0, r8
 80189f4:	4659      	mov	r1, fp
 80189f6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80189fa:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 80189fe:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8018a02:	f7f4 fc0d 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8018a06:	4631      	mov	r1, r6
 8018a08:	4640      	mov	r0, r8
 8018a0a:	f7f4 fc09 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8018a0e:	4b74      	ldr	r3, [pc, #464]	@ (8018be0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8018a10:	8818      	ldrh	r0, [r3, #0]
 8018a12:	4b74      	ldr	r3, [pc, #464]	@ (8018be4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8018a14:	8819      	ldrh	r1, [r3, #0]
 8018a16:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018a1a:	2b00      	cmp	r3, #0
 8018a1c:	b202      	sxth	r2, r0
 8018a1e:	b20e      	sxth	r6, r1
 8018a20:	da07      	bge.n	8018a32 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8018a22:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8018a26:	4463      	add	r3, ip
 8018a28:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8018a2c:	2300      	movs	r3, #0
 8018a2e:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8018a32:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8018a36:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8018a3a:	1ad2      	subs	r2, r2, r3
 8018a3c:	4594      	cmp	ip, r2
 8018a3e:	bfc4      	itt	gt
 8018a40:	1ac2      	subgt	r2, r0, r3
 8018a42:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 8018a46:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018a4a:	2a00      	cmp	r2, #0
 8018a4c:	da07      	bge.n	8018a5e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8018a4e:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 8018a52:	4462      	add	r2, ip
 8018a54:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8018a58:	2200      	movs	r2, #0
 8018a5a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8018a5e:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 8018a62:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8018a66:	eba6 060a 	sub.w	r6, r6, sl
 8018a6a:	42b2      	cmp	r2, r6
 8018a6c:	bfc4      	itt	gt
 8018a6e:	eba1 020a 	subgt.w	r2, r1, sl
 8018a72:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 8018a76:	4a5c      	ldr	r2, [pc, #368]	@ (8018be8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8018a78:	7812      	ldrb	r2, [r2, #0]
 8018a7a:	b9a2      	cbnz	r2, 8018aa6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8018a7c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8018a80:	4286      	cmp	r6, r0
 8018a82:	4640      	mov	r0, r8
 8018a84:	9303      	str	r3, [sp, #12]
 8018a86:	bf14      	ite	ne
 8018a88:	2600      	movne	r6, #0
 8018a8a:	2601      	moveq	r6, #1
 8018a8c:	f7f4 fc0b 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a90:	9b03      	ldr	r3, [sp, #12]
 8018a92:	b160      	cbz	r0, 8018aae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8018a94:	2300      	movs	r3, #0
 8018a96:	8023      	strh	r3, [r4, #0]
 8018a98:	8063      	strh	r3, [r4, #2]
 8018a9a:	80a3      	strh	r3, [r4, #4]
 8018a9c:	4620      	mov	r0, r4
 8018a9e:	80e3      	strh	r3, [r4, #6]
 8018aa0:	b011      	add	sp, #68	@ 0x44
 8018aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018aa6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8018aaa:	428e      	cmp	r6, r1
 8018aac:	e7e9      	b.n	8018a82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8018aae:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8018ab2:	9205      	str	r2, [sp, #20]
 8018ab4:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8018ab8:	9206      	str	r2, [sp, #24]
 8018aba:	f8bb 2000 	ldrh.w	r2, [fp]
 8018abe:	900e      	str	r0, [sp, #56]	@ 0x38
 8018ac0:	1a9b      	subs	r3, r3, r2
 8018ac2:	b21b      	sxth	r3, r3
 8018ac4:	9303      	str	r3, [sp, #12]
 8018ac6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8018aca:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8018ace:	ebaa 0a03 	sub.w	sl, sl, r3
 8018ad2:	fa0f f38a 	sxth.w	r3, sl
 8018ad6:	9304      	str	r3, [sp, #16]
 8018ad8:	9b03      	ldr	r3, [sp, #12]
 8018ada:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8018ade:	9b04      	ldr	r3, [sp, #16]
 8018ae0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018ae4:	9b05      	ldr	r3, [sp, #20]
 8018ae6:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8018aea:	a90e      	add	r1, sp, #56	@ 0x38
 8018aec:	9b06      	ldr	r3, [sp, #24]
 8018aee:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8018af2:	a80c      	add	r0, sp, #48	@ 0x30
 8018af4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8018af8:	f7f7 fcaa 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018afc:	4640      	mov	r0, r8
 8018afe:	f7f7 fc7f 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018b02:	a80e      	add	r0, sp, #56	@ 0x38
 8018b04:	f7f7 fc7c 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018b08:	4b38      	ldr	r3, [pc, #224]	@ (8018bec <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8018b0a:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8018b0e:	881b      	ldrh	r3, [r3, #0]
 8018b10:	9307      	str	r3, [sp, #28]
 8018b12:	682b      	ldr	r3, [r5, #0]
 8018b14:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 8018bf0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018b18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018b1a:	4628      	mov	r0, r5
 8018b1c:	4798      	blx	r3
 8018b1e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8018b22:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8018b26:	4681      	mov	r9, r0
 8018b28:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8018b2c:	f8db 0000 	ldr.w	r0, [fp]
 8018b30:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8018b32:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018b36:	6803      	ldr	r3, [r0, #0]
 8018b38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8018b3a:	4798      	blx	r3
 8018b3c:	4607      	mov	r7, r0
 8018b3e:	f8db 0000 	ldr.w	r0, [fp]
 8018b42:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8018b46:	6803      	ldr	r3, [r0, #0]
 8018b48:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018b4c:	9109      	str	r1, [sp, #36]	@ 0x24
 8018b4e:	9208      	str	r2, [sp, #32]
 8018b50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018b52:	4798      	blx	r3
 8018b54:	f010 0f01 	tst.w	r0, #1
 8018b58:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8018b5c:	d012      	beq.n	8018b84 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8018b5e:	f8db 0000 	ldr.w	r0, [fp]
 8018b62:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 8018b66:	6803      	ldr	r3, [r0, #0]
 8018b68:	9200      	str	r2, [sp, #0]
 8018b6a:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8018b6c:	e898 0006 	ldmia.w	r8, {r1, r2}
 8018b70:	462b      	mov	r3, r5
 8018b72:	47b0      	blx	r6
 8018b74:	9b03      	ldr	r3, [sp, #12]
 8018b76:	8023      	strh	r3, [r4, #0]
 8018b78:	9b04      	ldr	r3, [sp, #16]
 8018b7a:	8063      	strh	r3, [r4, #2]
 8018b7c:	9b05      	ldr	r3, [sp, #20]
 8018b7e:	80a3      	strh	r3, [r4, #4]
 8018b80:	9b06      	ldr	r3, [sp, #24]
 8018b82:	e78b      	b.n	8018a9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8018b84:	fb09 f202 	mul.w	r2, r9, r2
 8018b88:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8018b8c:	440f      	add	r7, r1
 8018b8e:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 8018b92:	b166      	cbz	r6, 8018bae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8018b94:	9a07      	ldr	r2, [sp, #28]
 8018b96:	4592      	cmp	sl, r2
 8018b98:	d109      	bne.n	8018bae <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8018b9a:	f8db 0000 	ldr.w	r0, [fp]
 8018b9e:	6802      	ldr	r2, [r0, #0]
 8018ba0:	fb09 f303 	mul.w	r3, r9, r3
 8018ba4:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 8018ba6:	4629      	mov	r1, r5
 8018ba8:	463a      	mov	r2, r7
 8018baa:	47b0      	blx	r6
 8018bac:	e7e2      	b.n	8018b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018bae:	fb0a f303 	mul.w	r3, sl, r3
 8018bb2:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 8018bf0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8018bb6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8018bba:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8018bbe:	4545      	cmp	r5, r8
 8018bc0:	d2d8      	bcs.n	8018b74 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8018bc2:	f8db 0000 	ldr.w	r0, [fp]
 8018bc6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8018bca:	6802      	ldr	r2, [r0, #0]
 8018bcc:	4629      	mov	r1, r5
 8018bce:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 8018bd2:	005b      	lsls	r3, r3, #1
 8018bd4:	463a      	mov	r2, r7
 8018bd6:	47d0      	blx	sl
 8018bd8:	444f      	add	r7, r9
 8018bda:	4435      	add	r5, r6
 8018bdc:	e7ef      	b.n	8018bbe <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8018bde:	bf00      	nop
 8018be0:	20002db0 	.word	0x20002db0
 8018be4:	20002db2 	.word	0x20002db2
 8018be8:	20002db4 	.word	0x20002db4
 8018bec:	20002db6 	.word	0x20002db6
 8018bf0:	20002dbc 	.word	0x20002dbc

08018bf4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8018bf4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018bf6:	4606      	mov	r6, r0
 8018bf8:	b087      	sub	sp, #28
 8018bfa:	460c      	mov	r4, r1
 8018bfc:	4617      	mov	r7, r2
 8018bfe:	461d      	mov	r5, r3
 8018c00:	b333      	cbz	r3, 8018c50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018c02:	4608      	mov	r0, r1
 8018c04:	f7f4 fb4f 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018c08:	bb10      	cbnz	r0, 8018c50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018c0a:	6820      	ldr	r0, [r4, #0]
 8018c0c:	6861      	ldr	r1, [r4, #4]
 8018c0e:	4c1c      	ldr	r4, [pc, #112]	@ (8018c80 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8018c10:	ab04      	add	r3, sp, #16
 8018c12:	c303      	stmia	r3!, {r0, r1}
 8018c14:	a804      	add	r0, sp, #16
 8018c16:	f7f7 fbf3 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018c1a:	6820      	ldr	r0, [r4, #0]
 8018c1c:	6803      	ldr	r3, [r0, #0]
 8018c1e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018c20:	4798      	blx	r3
 8018c22:	2dff      	cmp	r5, #255	@ 0xff
 8018c24:	d016      	beq.n	8018c54 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8018c26:	f010 0f08 	tst.w	r0, #8
 8018c2a:	6820      	ldr	r0, [r4, #0]
 8018c2c:	d015      	beq.n	8018c5a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8018c2e:	2400      	movs	r4, #0
 8018c30:	6801      	ldr	r1, [r0, #0]
 8018c32:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8018c36:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018c3a:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8018c3e:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8018c42:	9401      	str	r4, [sp, #4]
 8018c44:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8018c48:	9400      	str	r4, [sp, #0]
 8018c4a:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 8018c4c:	4639      	mov	r1, r7
 8018c4e:	47a0      	blx	r4
 8018c50:	b007      	add	sp, #28
 8018c52:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018c54:	f010 0f02 	tst.w	r0, #2
 8018c58:	e7e7      	b.n	8018c2a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8018c5a:	6803      	ldr	r3, [r0, #0]
 8018c5c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018c5e:	4798      	blx	r3
 8018c60:	4b08      	ldr	r3, [pc, #32]	@ (8018c84 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8018c62:	881a      	ldrh	r2, [r3, #0]
 8018c64:	6833      	ldr	r3, [r6, #0]
 8018c66:	e9cd 7500 	strd	r7, r5, [sp]
 8018c6a:	4601      	mov	r1, r0
 8018c6c:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 8018c6e:	4630      	mov	r0, r6
 8018c70:	ab04      	add	r3, sp, #16
 8018c72:	47a8      	blx	r5
 8018c74:	6820      	ldr	r0, [r4, #0]
 8018c76:	6803      	ldr	r3, [r0, #0]
 8018c78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018c7a:	4798      	blx	r3
 8018c7c:	e7e8      	b.n	8018c50 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018c7e:	bf00      	nop
 8018c80:	20002dbc 	.word	0x20002dbc
 8018c84:	20002db6 	.word	0x20002db6

08018c88 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8018c88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018c8c:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 8018c90:	9e08      	ldr	r6, [sp, #32]
 8018c92:	4688      	mov	r8, r1
 8018c94:	4614      	mov	r4, r2
 8018c96:	461d      	mov	r5, r3
 8018c98:	2f00      	cmp	r7, #0
 8018c9a:	f000 80a9 	beq.w	8018df0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018c9e:	4618      	mov	r0, r3
 8018ca0:	f7f4 fb01 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018ca4:	2800      	cmp	r0, #0
 8018ca6:	f040 80a3 	bne.w	8018df0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018caa:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018cae:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018cb2:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8018cb6:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8018cba:	fb04 1303 	mla	r3, r4, r3, r1
 8018cbe:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8018cc2:	4365      	muls	r5, r4
 8018cc4:	2fff      	cmp	r7, #255	@ 0xff
 8018cc6:	eba4 0200 	sub.w	r2, r4, r0
 8018cca:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018cce:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8018cd2:	d04a      	beq.n	8018d6a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8018cd4:	b2bc      	uxth	r4, r7
 8018cd6:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8018cda:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8018cde:	fa5f f788 	uxtb.w	r7, r8
 8018ce2:	b2f3      	uxtb	r3, r6
 8018ce4:	0040      	lsls	r0, r0, #1
 8018ce6:	fb0e fe04 	mul.w	lr, lr, r4
 8018cea:	4367      	muls	r7, r4
 8018cec:	4363      	muls	r3, r4
 8018cee:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8018cf2:	fa1f fc8c 	uxth.w	ip, ip
 8018cf6:	42a9      	cmp	r1, r5
 8018cf8:	d27a      	bcs.n	8018df0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018cfa:	eb01 0900 	add.w	r9, r1, r0
 8018cfe:	4549      	cmp	r1, r9
 8018d00:	d231      	bcs.n	8018d66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8018d02:	880a      	ldrh	r2, [r1, #0]
 8018d04:	1214      	asrs	r4, r2, #8
 8018d06:	10d6      	asrs	r6, r2, #3
 8018d08:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8018d0c:	00d2      	lsls	r2, r2, #3
 8018d0e:	b2d2      	uxtb	r2, r2
 8018d10:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018d14:	fb14 f40c 	smulbb	r4, r4, ip
 8018d18:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018d1c:	4474      	add	r4, lr
 8018d1e:	fb12 f20c 	smulbb	r2, r2, ip
 8018d22:	b2a4      	uxth	r4, r4
 8018d24:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018d28:	441a      	add	r2, r3
 8018d2a:	b292      	uxth	r2, r2
 8018d2c:	f104 0a01 	add.w	sl, r4, #1
 8018d30:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8018d34:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8018d38:	fb16 f60c 	smulbb	r6, r6, ip
 8018d3c:	f102 0a01 	add.w	sl, r2, #1
 8018d40:	443e      	add	r6, r7
 8018d42:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8018d46:	b2b6      	uxth	r6, r6
 8018d48:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8018d4c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018d50:	4322      	orrs	r2, r4
 8018d52:	1c74      	adds	r4, r6, #1
 8018d54:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8018d58:	0976      	lsrs	r6, r6, #5
 8018d5a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018d5e:	4332      	orrs	r2, r6
 8018d60:	f821 2b02 	strh.w	r2, [r1], #2
 8018d64:	e7cb      	b.n	8018cfe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8018d66:	4441      	add	r1, r8
 8018d68:	e7c5      	b.n	8018cf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8018d6a:	4f22      	ldr	r7, [pc, #136]	@ (8018df4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8018d6c:	0973      	lsrs	r3, r6, #5
 8018d6e:	ea08 0707 	and.w	r7, r8, r7
 8018d72:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018d76:	433b      	orrs	r3, r7
 8018d78:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018d7c:	4333      	orrs	r3, r6
 8018d7e:	07e7      	lsls	r7, r4, #31
 8018d80:	b29b      	uxth	r3, r3
 8018d82:	d50b      	bpl.n	8018d9c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8018d84:	0040      	lsls	r0, r0, #1
 8018d86:	0052      	lsls	r2, r2, #1
 8018d88:	42a9      	cmp	r1, r5
 8018d8a:	d231      	bcs.n	8018df0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018d8c:	180c      	adds	r4, r1, r0
 8018d8e:	42a1      	cmp	r1, r4
 8018d90:	d202      	bcs.n	8018d98 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8018d92:	f821 3b02 	strh.w	r3, [r1], #2
 8018d96:	e7fa      	b.n	8018d8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8018d98:	4411      	add	r1, r2
 8018d9a:	e7f5      	b.n	8018d88 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8018d9c:	078e      	lsls	r6, r1, #30
 8018d9e:	d008      	beq.n	8018db2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8018da0:	0066      	lsls	r6, r4, #1
 8018da2:	460a      	mov	r2, r1
 8018da4:	42aa      	cmp	r2, r5
 8018da6:	d202      	bcs.n	8018dae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8018da8:	8013      	strh	r3, [r2, #0]
 8018daa:	4432      	add	r2, r6
 8018dac:	e7fa      	b.n	8018da4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8018dae:	3102      	adds	r1, #2
 8018db0:	3801      	subs	r0, #1
 8018db2:	07c2      	lsls	r2, r0, #31
 8018db4:	d50b      	bpl.n	8018dce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8018db6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8018dba:	3a01      	subs	r2, #1
 8018dbc:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018dc0:	0066      	lsls	r6, r4, #1
 8018dc2:	42aa      	cmp	r2, r5
 8018dc4:	d202      	bcs.n	8018dcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8018dc6:	8013      	strh	r3, [r2, #0]
 8018dc8:	4432      	add	r2, r6
 8018dca:	e7fa      	b.n	8018dc2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8018dcc:	3801      	subs	r0, #1
 8018dce:	b178      	cbz	r0, 8018df0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018dd0:	1040      	asrs	r0, r0, #1
 8018dd2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8018dd6:	0080      	lsls	r0, r0, #2
 8018dd8:	0064      	lsls	r4, r4, #1
 8018dda:	42a9      	cmp	r1, r5
 8018ddc:	d208      	bcs.n	8018df0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018dde:	180e      	adds	r6, r1, r0
 8018de0:	460a      	mov	r2, r1
 8018de2:	42b2      	cmp	r2, r6
 8018de4:	d202      	bcs.n	8018dec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8018de6:	f842 3b04 	str.w	r3, [r2], #4
 8018dea:	e7fa      	b.n	8018de2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8018dec:	4421      	add	r1, r4
 8018dee:	e7f4      	b.n	8018dda <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8018df0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018df4:	00fff800 	.word	0x00fff800

08018df8 <_ZN8touchgfx8LCD16bppC1Ev>:
 8018df8:	2200      	movs	r2, #0
 8018dfa:	4912      	ldr	r1, [pc, #72]	@ (8018e44 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8018dfc:	6001      	str	r1, [r0, #0]
 8018dfe:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8018e02:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8018e06:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8018e0a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8018e0e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 8018e12:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 8018e16:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8018e1a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8018e1e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 8018e22:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 8018e26:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8018e2a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8018e2e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 8018e32:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 8018e36:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8018e3a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8018e3e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 8018e42:	4770      	bx	lr
 8018e44:	08025698 	.word	0x08025698

08018e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8018e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e4c:	460d      	mov	r5, r1
 8018e4e:	b08d      	sub	sp, #52	@ 0x34
 8018e50:	4604      	mov	r4, r0
 8018e52:	6808      	ldr	r0, [r1, #0]
 8018e54:	6849      	ldr	r1, [r1, #4]
 8018e56:	4699      	mov	r9, r3
 8018e58:	ab08      	add	r3, sp, #32
 8018e5a:	c303      	stmia	r3!, {r0, r1}
 8018e5c:	6810      	ldr	r0, [r2, #0]
 8018e5e:	6851      	ldr	r1, [r2, #4]
 8018e60:	ab0a      	add	r3, sp, #40	@ 0x28
 8018e62:	c303      	stmia	r3!, {r0, r1}
 8018e64:	a808      	add	r0, sp, #32
 8018e66:	f7f7 facb 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018e6a:	4629      	mov	r1, r5
 8018e6c:	a80a      	add	r0, sp, #40	@ 0x28
 8018e6e:	f7f7 faef 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018e72:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8018e76:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 8018e7a:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 8018e7e:	4d63      	ldr	r5, [pc, #396]	@ (801900c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8018e80:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 8018e84:	6828      	ldr	r0, [r5, #0]
 8018e86:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 8018e8a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018e8e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018e92:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8018e96:	440a      	add	r2, r1
 8018e98:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8018e9c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8018ea0:	4413      	add	r3, r2
 8018ea2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8018ea6:	6803      	ldr	r3, [r0, #0]
 8018ea8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018eaa:	4798      	blx	r3
 8018eac:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018eb0:	d119      	bne.n	8018ee6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8018eb2:	f010 0f20 	tst.w	r0, #32
 8018eb6:	6828      	ldr	r0, [r5, #0]
 8018eb8:	d018      	beq.n	8018eec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8018eba:	2500      	movs	r5, #0
 8018ebc:	6801      	ldr	r1, [r0, #0]
 8018ebe:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8018ec2:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8018ec6:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8018eca:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 8018ece:	9502      	str	r5, [sp, #8]
 8018ed0:	b2b6      	uxth	r6, r6
 8018ed2:	fa1f f588 	uxth.w	r5, r8
 8018ed6:	9601      	str	r6, [sp, #4]
 8018ed8:	9500      	str	r5, [sp, #0]
 8018eda:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8018edc:	4621      	mov	r1, r4
 8018ede:	47a8      	blx	r5
 8018ee0:	b00d      	add	sp, #52	@ 0x34
 8018ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ee6:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8018eea:	e7e4      	b.n	8018eb6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8018eec:	6803      	ldr	r3, [r0, #0]
 8018eee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018ef0:	4798      	blx	r3
 8018ef2:	4947      	ldr	r1, [pc, #284]	@ (8019010 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8018ef4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8018ef8:	880b      	ldrh	r3, [r1, #0]
 8018efa:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8018efe:	fb03 5202 	mla	r2, r3, r2, r5
 8018f02:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018f06:	4373      	muls	r3, r6
 8018f08:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018f0c:	9307      	str	r3, [sp, #28]
 8018f0e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018f12:	9306      	str	r3, [sp, #24]
 8018f14:	468a      	mov	sl, r1
 8018f16:	9b07      	ldr	r3, [sp, #28]
 8018f18:	4298      	cmp	r0, r3
 8018f1a:	d270      	bcs.n	8018ffe <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8018f1c:	9b06      	ldr	r3, [sp, #24]
 8018f1e:	4621      	mov	r1, r4
 8018f20:	eb00 0b03 	add.w	fp, r0, r3
 8018f24:	4558      	cmp	r0, fp
 8018f26:	d25d      	bcs.n	8018fe4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8018f28:	f851 4b04 	ldr.w	r4, [r1], #4
 8018f2c:	0e23      	lsrs	r3, r4, #24
 8018f2e:	d014      	beq.n	8018f5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018f30:	2bff      	cmp	r3, #255	@ 0xff
 8018f32:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8018f36:	d112      	bne.n	8018f5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018f38:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8018f3c:	d10f      	bne.n	8018f5e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8018f3e:	0963      	lsrs	r3, r4, #5
 8018f40:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8018f44:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8018f48:	f02c 0c07 	bic.w	ip, ip, #7
 8018f4c:	ea43 0c0c 	orr.w	ip, r3, ip
 8018f50:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018f54:	ea4c 0404 	orr.w	r4, ip, r4
 8018f58:	8004      	strh	r4, [r0, #0]
 8018f5a:	3002      	adds	r0, #2
 8018f5c:	e7e2      	b.n	8018f24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8018f5e:	fb09 f303 	mul.w	r3, r9, r3
 8018f62:	8807      	ldrh	r7, [r0, #0]
 8018f64:	1c5a      	adds	r2, r3, #1
 8018f66:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8018f6a:	1212      	asrs	r2, r2, #8
 8018f6c:	123e      	asrs	r6, r7, #8
 8018f6e:	b293      	uxth	r3, r2
 8018f70:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8018f74:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018f78:	43d2      	mvns	r2, r2
 8018f7a:	b2d2      	uxtb	r2, r2
 8018f7c:	10fd      	asrs	r5, r7, #3
 8018f7e:	fb1e fe03 	smulbb	lr, lr, r3
 8018f82:	00ff      	lsls	r7, r7, #3
 8018f84:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018f88:	fb06 e602 	mla	r6, r6, r2, lr
 8018f8c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018f90:	b2ff      	uxtb	r7, r7
 8018f92:	fa5f fc8c 	uxtb.w	ip, ip
 8018f96:	b2e4      	uxtb	r4, r4
 8018f98:	b2b6      	uxth	r6, r6
 8018f9a:	fb1c fc03 	smulbb	ip, ip, r3
 8018f9e:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8018fa2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018fa6:	fb14 f403 	smulbb	r4, r4, r3
 8018faa:	fb05 c502 	mla	r5, r5, r2, ip
 8018fae:	f106 0e01 	add.w	lr, r6, #1
 8018fb2:	fb07 4702 	mla	r7, r7, r2, r4
 8018fb6:	b2ad      	uxth	r5, r5
 8018fb8:	b2bf      	uxth	r7, r7
 8018fba:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8018fbe:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8018fc2:	f105 0c01 	add.w	ip, r5, #1
 8018fc6:	1c7e      	adds	r6, r7, #1
 8018fc8:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018fcc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018fd0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018fd4:	096d      	lsrs	r5, r5, #5
 8018fd6:	ea46 060e 	orr.w	r6, r6, lr
 8018fda:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018fde:	432e      	orrs	r6, r5
 8018fe0:	8006      	strh	r6, [r0, #0]
 8018fe2:	e7ba      	b.n	8018f5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8018fe4:	f8ba 3000 	ldrh.w	r3, [sl]
 8018fe8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8018fec:	eba3 0308 	sub.w	r3, r3, r8
 8018ff0:	eba4 0408 	sub.w	r4, r4, r8
 8018ff4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ff8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8018ffc:	e78b      	b.n	8018f16 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8018ffe:	4b03      	ldr	r3, [pc, #12]	@ (801900c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8019000:	6818      	ldr	r0, [r3, #0]
 8019002:	6803      	ldr	r3, [r0, #0]
 8019004:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019006:	4798      	blx	r3
 8019008:	e76a      	b.n	8018ee0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801900a:	bf00      	nop
 801900c:	20002dbc 	.word	0x20002dbc
 8019010:	20002db6 	.word	0x20002db6

08019014 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8019014:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8019018:	460c      	mov	r4, r1
 801901a:	b085      	sub	sp, #20
 801901c:	6810      	ldr	r0, [r2, #0]
 801901e:	6851      	ldr	r1, [r2, #4]
 8019020:	466d      	mov	r5, sp
 8019022:	c503      	stmia	r5!, {r0, r1}
 8019024:	6818      	ldr	r0, [r3, #0]
 8019026:	6859      	ldr	r1, [r3, #4]
 8019028:	4616      	mov	r6, r2
 801902a:	c503      	stmia	r5!, {r0, r1}
 801902c:	4668      	mov	r0, sp
 801902e:	f7f7 f9e7 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019032:	4631      	mov	r1, r6
 8019034:	a802      	add	r0, sp, #8
 8019036:	f7f7 fa0b 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801903a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801903e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8019042:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8019046:	4d28      	ldr	r5, [pc, #160]	@ (80190e8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8019048:	4e28      	ldr	r6, [pc, #160]	@ (80190ec <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801904a:	6828      	ldr	r0, [r5, #0]
 801904c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8019050:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8019054:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019058:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801905c:	f8bd 1000 	ldrh.w	r1, [sp]
 8019060:	440a      	add	r2, r1
 8019062:	f8ad 2008 	strh.w	r2, [sp, #8]
 8019066:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801906a:	4413      	add	r3, r2
 801906c:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019070:	6803      	ldr	r3, [r0, #0]
 8019072:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019074:	4798      	blx	r3
 8019076:	8833      	ldrh	r3, [r6, #0]
 8019078:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801907c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019080:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 80190f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8019084:	fb03 1202 	mla	r2, r3, r2, r1
 8019088:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801908c:	fb08 f303 	mul.w	r3, r8, r3
 8019090:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019094:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8019098:	4298      	cmp	r0, r3
 801909a:	d21d      	bcs.n	80190d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801909c:	eb00 080c 	add.w	r8, r0, ip
 80190a0:	4540      	cmp	r0, r8
 80190a2:	d20f      	bcs.n	80190c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 80190a4:	f854 1b04 	ldr.w	r1, [r4], #4
 80190a8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 80190ac:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 80190b0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80190b4:	ea42 0209 	orr.w	r2, r2, r9
 80190b8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80190bc:	430a      	orrs	r2, r1
 80190be:	f820 2b02 	strh.w	r2, [r0], #2
 80190c2:	e7ed      	b.n	80190a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 80190c4:	8832      	ldrh	r2, [r6, #0]
 80190c6:	1bd2      	subs	r2, r2, r7
 80190c8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80190cc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 80190d0:	1bd2      	subs	r2, r2, r7
 80190d2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 80190d6:	e7df      	b.n	8019098 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 80190d8:	6828      	ldr	r0, [r5, #0]
 80190da:	6803      	ldr	r3, [r0, #0]
 80190dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80190de:	4798      	blx	r3
 80190e0:	b005      	add	sp, #20
 80190e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80190e6:	bf00      	nop
 80190e8:	20002dbc 	.word	0x20002dbc
 80190ec:	20002db6 	.word	0x20002db6
 80190f0:	fffff800 	.word	0xfffff800

080190f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80190f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80190f8:	460e      	mov	r6, r1
 80190fa:	b08e      	sub	sp, #56	@ 0x38
 80190fc:	4604      	mov	r4, r0
 80190fe:	6808      	ldr	r0, [r1, #0]
 8019100:	6849      	ldr	r1, [r1, #4]
 8019102:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 80192dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8019106:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 80192e0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801910a:	461d      	mov	r5, r3
 801910c:	ab0a      	add	r3, sp, #40	@ 0x28
 801910e:	c303      	stmia	r3!, {r0, r1}
 8019110:	6810      	ldr	r0, [r2, #0]
 8019112:	6851      	ldr	r1, [r2, #4]
 8019114:	ab0c      	add	r3, sp, #48	@ 0x30
 8019116:	c303      	stmia	r3!, {r0, r1}
 8019118:	a80a      	add	r0, sp, #40	@ 0x28
 801911a:	f7f7 f971 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801911e:	4631      	mov	r1, r6
 8019120:	a80c      	add	r0, sp, #48	@ 0x30
 8019122:	f7f7 f995 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019126:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801912a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801912e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8019132:	f8d8 0000 	ldr.w	r0, [r8]
 8019136:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801913a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801913e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019142:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8019146:	440c      	add	r4, r1
 8019148:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801914c:	440a      	add	r2, r1
 801914e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8019152:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8019156:	4413      	add	r3, r2
 8019158:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801915c:	6803      	ldr	r3, [r0, #0]
 801915e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019160:	4798      	blx	r3
 8019162:	2dff      	cmp	r5, #255	@ 0xff
 8019164:	d124      	bne.n	80191b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8019166:	f010 0f01 	tst.w	r0, #1
 801916a:	f8d8 0000 	ldr.w	r0, [r8]
 801916e:	d022      	beq.n	80191b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8019170:	2100      	movs	r1, #0
 8019172:	f8d0 c000 	ldr.w	ip, [r0]
 8019176:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801917a:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801917e:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8019182:	f04f 0e01 	mov.w	lr, #1
 8019186:	f8cd e018 	str.w	lr, [sp, #24]
 801918a:	f8b9 e000 	ldrh.w	lr, [r9]
 801918e:	9503      	str	r5, [sp, #12]
 8019190:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8019194:	b2b6      	uxth	r6, r6
 8019196:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801919a:	9102      	str	r1, [sp, #8]
 801919c:	b2bf      	uxth	r7, r7
 801919e:	9601      	str	r6, [sp, #4]
 80191a0:	9700      	str	r7, [sp, #0]
 80191a2:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 80191a6:	4621      	mov	r1, r4
 80191a8:	47a8      	blx	r5
 80191aa:	b00e      	add	sp, #56	@ 0x38
 80191ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80191b0:	f010 0f04 	tst.w	r0, #4
 80191b4:	e7d9      	b.n	801916a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80191b6:	6803      	ldr	r3, [r0, #0]
 80191b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80191ba:	4798      	blx	r3
 80191bc:	f8b9 3000 	ldrh.w	r3, [r9]
 80191c0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 80191c4:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 80191c8:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 80191cc:	fb03 1202 	mla	r2, r3, r2, r1
 80191d0:	ebac 0c07 	sub.w	ip, ip, r7
 80191d4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80191d8:	435e      	muls	r6, r3
 80191da:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 80191de:	2dff      	cmp	r5, #255	@ 0xff
 80191e0:	eba3 0707 	sub.w	r7, r3, r7
 80191e4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80191e8:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80191ec:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80191f0:	d049      	beq.n	8019286 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80191f2:	43eb      	mvns	r3, r5
 80191f4:	fa1f f985 	uxth.w	r9, r5
 80191f8:	b2db      	uxtb	r3, r3
 80191fa:	42b0      	cmp	r0, r6
 80191fc:	d266      	bcs.n	80192cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80191fe:	eb00 0a0e 	add.w	sl, r0, lr
 8019202:	4550      	cmp	r0, sl
 8019204:	4621      	mov	r1, r4
 8019206:	f104 0403 	add.w	r4, r4, #3
 801920a:	d25b      	bcs.n	80192c4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801920c:	8802      	ldrh	r2, [r0, #0]
 801920e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8019212:	ea4f 2822 	mov.w	r8, r2, asr #8
 8019216:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801921a:	fb11 f109 	smulbb	r1, r1, r9
 801921e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8019222:	10d5      	asrs	r5, r2, #3
 8019224:	fb08 1803 	mla	r8, r8, r3, r1
 8019228:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801922c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019230:	fb11 f109 	smulbb	r1, r1, r9
 8019234:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019238:	fb05 1503 	mla	r5, r5, r3, r1
 801923c:	00d2      	lsls	r2, r2, #3
 801923e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8019242:	b2d2      	uxtb	r2, r2
 8019244:	fb11 f109 	smulbb	r1, r1, r9
 8019248:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801924c:	fa1f f888 	uxth.w	r8, r8
 8019250:	fb02 1203 	mla	r2, r2, r3, r1
 8019254:	b292      	uxth	r2, r2
 8019256:	f108 0101 	add.w	r1, r8, #1
 801925a:	b2ad      	uxth	r5, r5
 801925c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8019260:	1c51      	adds	r1, r2, #1
 8019262:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019266:	1c69      	adds	r1, r5, #1
 8019268:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801926c:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8019270:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019274:	096d      	lsrs	r5, r5, #5
 8019276:	ea42 0208 	orr.w	r2, r2, r8
 801927a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801927e:	432a      	orrs	r2, r5
 8019280:	f820 2b02 	strh.w	r2, [r0], #2
 8019284:	e7bd      	b.n	8019202 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8019286:	4a14      	ldr	r2, [pc, #80]	@ (80192d8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8019288:	42b0      	cmp	r0, r6
 801928a:	d21f      	bcs.n	80192cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801928c:	eb00 050e 	add.w	r5, r0, lr
 8019290:	42a8      	cmp	r0, r5
 8019292:	4621      	mov	r1, r4
 8019294:	f104 0403 	add.w	r4, r4, #3
 8019298:	d210      	bcs.n	80192bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801929a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801929e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80192a2:	00db      	lsls	r3, r3, #3
 80192a4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80192a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80192ac:	430b      	orrs	r3, r1
 80192ae:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80192b2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80192b6:	f820 3b02 	strh.w	r3, [r0], #2
 80192ba:	e7e9      	b.n	8019290 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80192bc:	4438      	add	r0, r7
 80192be:	eb01 040c 	add.w	r4, r1, ip
 80192c2:	e7e1      	b.n	8019288 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 80192c4:	4438      	add	r0, r7
 80192c6:	eb01 040c 	add.w	r4, r1, ip
 80192ca:	e796      	b.n	80191fa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 80192cc:	4b03      	ldr	r3, [pc, #12]	@ (80192dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 80192ce:	6818      	ldr	r0, [r3, #0]
 80192d0:	6803      	ldr	r3, [r0, #0]
 80192d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80192d4:	4798      	blx	r3
 80192d6:	e768      	b.n	80191aa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 80192d8:	fffff800 	.word	0xfffff800
 80192dc:	20002dbc 	.word	0x20002dbc
 80192e0:	20002db6 	.word	0x20002db6

080192e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80192e4:	b4f0      	push	{r4, r5, r6, r7}
 80192e6:	4616      	mov	r6, r2
 80192e8:	2e01      	cmp	r6, #1
 80192ea:	461c      	mov	r4, r3
 80192ec:	460d      	mov	r5, r1
 80192ee:	9a04      	ldr	r2, [sp, #16]
 80192f0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80192f4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80192f8:	d012      	beq.n	8019320 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80192fa:	d303      	bcc.n	8019304 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80192fc:	2e02      	cmp	r6, #2
 80192fe:	d00a      	beq.n	8019316 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8019300:	bcf0      	pop	{r4, r5, r6, r7}
 8019302:	4770      	bx	lr
 8019304:	6805      	ldr	r5, [r0, #0]
 8019306:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801930a:	68ed      	ldr	r5, [r5, #12]
 801930c:	4613      	mov	r3, r2
 801930e:	46ac      	mov	ip, r5
 8019310:	4622      	mov	r2, r4
 8019312:	bcf0      	pop	{r4, r5, r6, r7}
 8019314:	4760      	bx	ip
 8019316:	4621      	mov	r1, r4
 8019318:	4628      	mov	r0, r5
 801931a:	bcf0      	pop	{r4, r5, r6, r7}
 801931c:	f7ff bd94 	b.w	8018e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019320:	4621      	mov	r1, r4
 8019322:	4628      	mov	r0, r5
 8019324:	bcf0      	pop	{r4, r5, r6, r7}
 8019326:	f7ff bee5 	b.w	80190f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801932c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801932c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019330:	4681      	mov	r9, r0
 8019332:	b093      	sub	sp, #76	@ 0x4c
 8019334:	6810      	ldr	r0, [r2, #0]
 8019336:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801933a:	4f6d      	ldr	r7, [pc, #436]	@ (80194f0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801933c:	4688      	mov	r8, r1
 801933e:	6851      	ldr	r1, [r2, #4]
 8019340:	ac0e      	add	r4, sp, #56	@ 0x38
 8019342:	c403      	stmia	r4!, {r0, r1}
 8019344:	6818      	ldr	r0, [r3, #0]
 8019346:	6859      	ldr	r1, [r3, #4]
 8019348:	ac10      	add	r4, sp, #64	@ 0x40
 801934a:	4616      	mov	r6, r2
 801934c:	c403      	stmia	r4!, {r0, r1}
 801934e:	a80e      	add	r0, sp, #56	@ 0x38
 8019350:	f7f7 f856 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019354:	4631      	mov	r1, r6
 8019356:	a810      	add	r0, sp, #64	@ 0x40
 8019358:	f7f7 f87a 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801935c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8019360:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8019364:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8019368:	4e62      	ldr	r6, [pc, #392]	@ (80194f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801936a:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801936e:	6830      	ldr	r0, [r6, #0]
 8019370:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8019374:	fb11 2103 	smlabb	r1, r1, r3, r2
 8019378:	4489      	add	r9, r1
 801937a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801937e:	440a      	add	r2, r1
 8019380:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8019384:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8019388:	4413      	add	r3, r2
 801938a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801938e:	6803      	ldr	r3, [r0, #0]
 8019390:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019392:	4798      	blx	r3
 8019394:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8019398:	6830      	ldr	r0, [r6, #0]
 801939a:	d01d      	beq.n	80193d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801939c:	2200      	movs	r2, #0
 801939e:	6801      	ldr	r1, [r0, #0]
 80193a0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80193a4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80193a8:	220b      	movs	r2, #11
 80193aa:	9207      	str	r2, [sp, #28]
 80193ac:	883a      	ldrh	r2, [r7, #0]
 80193ae:	9206      	str	r2, [sp, #24]
 80193b0:	2201      	movs	r2, #1
 80193b2:	e9cd a204 	strd	sl, r2, [sp, #16]
 80193b6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 80193ba:	9203      	str	r2, [sp, #12]
 80193bc:	b2a4      	uxth	r4, r4
 80193be:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 80193c2:	9200      	str	r2, [sp, #0]
 80193c4:	b2ad      	uxth	r5, r5
 80193c6:	9502      	str	r5, [sp, #8]
 80193c8:	9401      	str	r4, [sp, #4]
 80193ca:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 80193cc:	4642      	mov	r2, r8
 80193ce:	4649      	mov	r1, r9
 80193d0:	47a0      	blx	r4
 80193d2:	b013      	add	sp, #76	@ 0x4c
 80193d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80193d8:	6803      	ldr	r3, [r0, #0]
 80193da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80193dc:	4798      	blx	r3
 80193de:	883b      	ldrh	r3, [r7, #0]
 80193e0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80193e4:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 80193e8:	fb03 1202 	mla	r2, r3, r2, r1
 80193ec:	435d      	muls	r5, r3
 80193ee:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80193f2:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80193f6:	920c      	str	r2, [sp, #48]	@ 0x30
 80193f8:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80193fc:	1b12      	subs	r2, r2, r4
 80193fe:	920d      	str	r2, [sp, #52]	@ 0x34
 8019400:	0062      	lsls	r2, r4, #1
 8019402:	1b1c      	subs	r4, r3, r4
 8019404:	0063      	lsls	r3, r4, #1
 8019406:	920a      	str	r2, [sp, #40]	@ 0x28
 8019408:	930b      	str	r3, [sp, #44]	@ 0x2c
 801940a:	f04f 0e04 	mov.w	lr, #4
 801940e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019410:	4298      	cmp	r0, r3
 8019412:	d266      	bcs.n	80194e2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8019414:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019416:	eb00 0b03 	add.w	fp, r0, r3
 801941a:	4558      	cmp	r0, fp
 801941c:	d25c      	bcs.n	80194d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801941e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8019422:	fb1e e303 	smlabb	r3, lr, r3, lr
 8019426:	f858 2003 	ldr.w	r2, [r8, r3]
 801942a:	0e11      	lsrs	r1, r2, #24
 801942c:	d012      	beq.n	8019454 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801942e:	29ff      	cmp	r1, #255	@ 0xff
 8019430:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8019434:	d110      	bne.n	8019458 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8019436:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801943a:	d10d      	bne.n	8019458 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801943c:	0953      	lsrs	r3, r2, #5
 801943e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8019442:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019446:	f027 0707 	bic.w	r7, r7, #7
 801944a:	431f      	orrs	r7, r3
 801944c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019450:	433a      	orrs	r2, r7
 8019452:	8002      	strh	r2, [r0, #0]
 8019454:	3002      	adds	r0, #2
 8019456:	e7e0      	b.n	801941a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8019458:	fb0a f101 	mul.w	r1, sl, r1
 801945c:	8806      	ldrh	r6, [r0, #0]
 801945e:	1c4b      	adds	r3, r1, #1
 8019460:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8019464:	1235      	asrs	r5, r6, #8
 8019466:	10f4      	asrs	r4, r6, #3
 8019468:	121b      	asrs	r3, r3, #8
 801946a:	00f6      	lsls	r6, r6, #3
 801946c:	b299      	uxth	r1, r3
 801946e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8019472:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019476:	b2f6      	uxtb	r6, r6
 8019478:	43db      	mvns	r3, r3
 801947a:	b2d2      	uxtb	r2, r2
 801947c:	b2db      	uxtb	r3, r3
 801947e:	fb1c fc01 	smulbb	ip, ip, r1
 8019482:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019486:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801948a:	fb12 f201 	smulbb	r2, r2, r1
 801948e:	fb05 c503 	mla	r5, r5, r3, ip
 8019492:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8019496:	b2ff      	uxtb	r7, r7
 8019498:	fb06 2203 	mla	r2, r6, r3, r2
 801949c:	b2ad      	uxth	r5, r5
 801949e:	fb17 f701 	smulbb	r7, r7, r1
 80194a2:	b292      	uxth	r2, r2
 80194a4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80194a8:	fb04 7403 	mla	r4, r4, r3, r7
 80194ac:	f105 0c01 	add.w	ip, r5, #1
 80194b0:	1c57      	adds	r7, r2, #1
 80194b2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80194b6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80194ba:	b2a4      	uxth	r4, r4
 80194bc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80194c0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80194c4:	433d      	orrs	r5, r7
 80194c6:	1c67      	adds	r7, r4, #1
 80194c8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 80194cc:	0964      	lsrs	r4, r4, #5
 80194ce:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80194d2:	4325      	orrs	r5, r4
 80194d4:	8005      	strh	r5, [r0, #0]
 80194d6:	e7bd      	b.n	8019454 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80194d8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80194da:	4418      	add	r0, r3
 80194dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80194de:	4499      	add	r9, r3
 80194e0:	e795      	b.n	801940e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80194e2:	4b04      	ldr	r3, [pc, #16]	@ (80194f4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80194e4:	6818      	ldr	r0, [r3, #0]
 80194e6:	6803      	ldr	r3, [r0, #0]
 80194e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80194ea:	4798      	blx	r3
 80194ec:	e771      	b.n	80193d2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80194ee:	bf00      	nop
 80194f0:	20002db6 	.word	0x20002db6
 80194f4:	20002dbc 	.word	0x20002dbc

080194f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80194f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194fc:	b087      	sub	sp, #28
 80194fe:	4680      	mov	r8, r0
 8019500:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8019504:	460d      	mov	r5, r1
 8019506:	4614      	mov	r4, r2
 8019508:	2e00      	cmp	r6, #0
 801950a:	f000 80b9 	beq.w	8019680 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801950e:	6810      	ldr	r0, [r2, #0]
 8019510:	6851      	ldr	r1, [r2, #4]
 8019512:	af02      	add	r7, sp, #8
 8019514:	c703      	stmia	r7!, {r0, r1}
 8019516:	6818      	ldr	r0, [r3, #0]
 8019518:	6859      	ldr	r1, [r3, #4]
 801951a:	af04      	add	r7, sp, #16
 801951c:	c703      	stmia	r7!, {r0, r1}
 801951e:	a802      	add	r0, sp, #8
 8019520:	f7f6 ff6e 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019524:	4621      	mov	r1, r4
 8019526:	a804      	add	r0, sp, #16
 8019528:	f7f6 ff92 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801952c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8019530:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019534:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8019538:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801953c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8019540:	eb08 0401 	add.w	r4, r8, r1
 8019544:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019548:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801954c:	440a      	add	r2, r1
 801954e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8019552:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019556:	4413      	add	r3, r2
 8019558:	f8ad 3012 	strh.w	r3, [sp, #18]
 801955c:	4b4a      	ldr	r3, [pc, #296]	@ (8019688 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801955e:	6818      	ldr	r0, [r3, #0]
 8019560:	6803      	ldr	r3, [r0, #0]
 8019562:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019564:	4798      	blx	r3
 8019566:	4b49      	ldr	r3, [pc, #292]	@ (801968c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8019568:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801956c:	881a      	ldrh	r2, [r3, #0]
 801956e:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8019572:	2eff      	cmp	r6, #255	@ 0xff
 8019574:	fb02 c101 	mla	r1, r2, r1, ip
 8019578:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801957c:	fb02 f207 	mul.w	r2, r2, r7
 8019580:	f105 0104 	add.w	r1, r5, #4
 8019584:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8019588:	461d      	mov	r5, r3
 801958a:	d05a      	beq.n	8019642 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801958c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8019590:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019594:	b2b6      	uxth	r6, r6
 8019596:	fa1f fe8e 	uxth.w	lr, lr
 801959a:	9301      	str	r3, [sp, #4]
 801959c:	4282      	cmp	r2, r0
 801959e:	d96a      	bls.n	8019676 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80195a0:	eb00 0b0a 	add.w	fp, r0, sl
 80195a4:	4583      	cmp	fp, r0
 80195a6:	d940      	bls.n	801962a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80195a8:	f814 3b01 	ldrb.w	r3, [r4], #1
 80195ac:	8805      	ldrh	r5, [r0, #0]
 80195ae:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80195b2:	122f      	asrs	r7, r5, #8
 80195b4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80195b8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80195bc:	fb17 f70e 	smulbb	r7, r7, lr
 80195c0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80195c4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80195c8:	00ed      	lsls	r5, r5, #3
 80195ca:	fb0c 7c06 	mla	ip, ip, r6, r7
 80195ce:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80195d2:	10df      	asrs	r7, r3, #3
 80195d4:	b2ed      	uxtb	r5, r5
 80195d6:	00db      	lsls	r3, r3, #3
 80195d8:	fa1f fc8c 	uxth.w	ip, ip
 80195dc:	fb19 f90e 	smulbb	r9, r9, lr
 80195e0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80195e4:	b2db      	uxtb	r3, r3
 80195e6:	fb15 f50e 	smulbb	r5, r5, lr
 80195ea:	fb07 9706 	mla	r7, r7, r6, r9
 80195ee:	fb03 5306 	mla	r3, r3, r6, r5
 80195f2:	f10c 0901 	add.w	r9, ip, #1
 80195f6:	b29b      	uxth	r3, r3
 80195f8:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80195fc:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8019600:	f103 0c01 	add.w	ip, r3, #1
 8019604:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019608:	b2bf      	uxth	r7, r7
 801960a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801960e:	ea4c 0c09 	orr.w	ip, ip, r9
 8019612:	f107 0901 	add.w	r9, r7, #1
 8019616:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801961a:	097f      	lsrs	r7, r7, #5
 801961c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8019620:	ea4c 0c07 	orr.w	ip, ip, r7
 8019624:	f820 cb02 	strh.w	ip, [r0], #2
 8019628:	e7bc      	b.n	80195a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801962a:	9b01      	ldr	r3, [sp, #4]
 801962c:	881b      	ldrh	r3, [r3, #0]
 801962e:	eba3 0308 	sub.w	r3, r3, r8
 8019632:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019636:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801963a:	eba3 0308 	sub.w	r3, r3, r8
 801963e:	441c      	add	r4, r3
 8019640:	e7ac      	b.n	801959c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8019642:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8019646:	4282      	cmp	r2, r0
 8019648:	d915      	bls.n	8019676 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801964a:	eb00 060a 	add.w	r6, r0, sl
 801964e:	4286      	cmp	r6, r0
 8019650:	d906      	bls.n	8019660 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8019652:	f814 3b01 	ldrb.w	r3, [r4], #1
 8019656:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801965a:	f820 3b02 	strh.w	r3, [r0], #2
 801965e:	e7f6      	b.n	801964e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8019660:	882b      	ldrh	r3, [r5, #0]
 8019662:	eba3 0308 	sub.w	r3, r3, r8
 8019666:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801966a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801966e:	eba3 0308 	sub.w	r3, r3, r8
 8019672:	441c      	add	r4, r3
 8019674:	e7e7      	b.n	8019646 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8019676:	4b04      	ldr	r3, [pc, #16]	@ (8019688 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8019678:	6818      	ldr	r0, [r3, #0]
 801967a:	6803      	ldr	r3, [r0, #0]
 801967c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801967e:	4798      	blx	r3
 8019680:	b007      	add	sp, #28
 8019682:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019686:	bf00      	nop
 8019688:	20002dbc 	.word	0x20002dbc
 801968c:	20002db6 	.word	0x20002db6

08019690 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8019690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019694:	b091      	sub	sp, #68	@ 0x44
 8019696:	4680      	mov	r8, r0
 8019698:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801969c:	460f      	mov	r7, r1
 801969e:	4614      	mov	r4, r2
 80196a0:	2d00      	cmp	r5, #0
 80196a2:	d051      	beq.n	8019748 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80196a4:	6810      	ldr	r0, [r2, #0]
 80196a6:	6851      	ldr	r1, [r2, #4]
 80196a8:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 80198ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80196ac:	ae0c      	add	r6, sp, #48	@ 0x30
 80196ae:	c603      	stmia	r6!, {r0, r1}
 80196b0:	6818      	ldr	r0, [r3, #0]
 80196b2:	6859      	ldr	r1, [r3, #4]
 80196b4:	ae0e      	add	r6, sp, #56	@ 0x38
 80196b6:	c603      	stmia	r6!, {r0, r1}
 80196b8:	a80c      	add	r0, sp, #48	@ 0x30
 80196ba:	f7f6 fea1 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80196be:	4621      	mov	r1, r4
 80196c0:	a80e      	add	r0, sp, #56	@ 0x38
 80196c2:	f7f6 fec5 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80196c6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 80196ca:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80196ce:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 80196d2:	f8d9 0000 	ldr.w	r0, [r9]
 80196d6:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80196da:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 80196de:	fb11 2103 	smlabb	r1, r1, r3, r2
 80196e2:	eb08 0401 	add.w	r4, r8, r1
 80196e6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 80196ea:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 80198b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80196ee:	440a      	add	r2, r1
 80196f0:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 80196f4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80196f8:	4413      	add	r3, r2
 80196fa:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 80196fe:	6803      	ldr	r3, [r0, #0]
 8019700:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019702:	4798      	blx	r3
 8019704:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8019708:	f8d9 0000 	ldr.w	r0, [r9]
 801970c:	d01f      	beq.n	801974e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801970e:	2200      	movs	r2, #0
 8019710:	6801      	ldr	r1, [r0, #0]
 8019712:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8019716:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801971a:	220b      	movs	r2, #11
 801971c:	9207      	str	r2, [sp, #28]
 801971e:	f8b8 2000 	ldrh.w	r2, [r8]
 8019722:	9206      	str	r2, [sp, #24]
 8019724:	2201      	movs	r2, #1
 8019726:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801972a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801972e:	9203      	str	r2, [sp, #12]
 8019730:	fa1f f28a 	uxth.w	r2, sl
 8019734:	9202      	str	r2, [sp, #8]
 8019736:	b2b6      	uxth	r6, r6
 8019738:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801973c:	9200      	str	r2, [sp, #0]
 801973e:	9601      	str	r6, [sp, #4]
 8019740:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 8019742:	463a      	mov	r2, r7
 8019744:	4621      	mov	r1, r4
 8019746:	47a8      	blx	r5
 8019748:	b011      	add	sp, #68	@ 0x44
 801974a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801974e:	6803      	ldr	r3, [r0, #0]
 8019750:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019752:	4798      	blx	r3
 8019754:	f8b8 2000 	ldrh.w	r2, [r8]
 8019758:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801975c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 8019760:	2dff      	cmp	r5, #255	@ 0xff
 8019762:	fb02 1303 	mla	r3, r2, r3, r1
 8019766:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801976a:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801976e:	fb0a fa02 	mul.w	sl, sl, r2
 8019772:	d062      	beq.n	801983a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8019774:	ea6f 0c05 	mvn.w	ip, r5
 8019778:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801977c:	930a      	str	r3, [sp, #40]	@ 0x28
 801977e:	b2ad      	uxth	r5, r5
 8019780:	fa5f fc8c 	uxtb.w	ip, ip
 8019784:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 8019788:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801978a:	4298      	cmp	r0, r3
 801978c:	f080 8085 	bcs.w	801989a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8019790:	eb00 0b09 	add.w	fp, r0, r9
 8019794:	4558      	cmp	r0, fp
 8019796:	d246      	bcs.n	8019826 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8019798:	f814 eb01 	ldrb.w	lr, [r4], #1
 801979c:	2303      	movs	r3, #3
 801979e:	2204      	movs	r2, #4
 80197a0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80197a4:	eb07 0a0e 	add.w	sl, r7, lr
 80197a8:	8803      	ldrh	r3, [r0, #0]
 80197aa:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80197ae:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80197b2:	1219      	asrs	r1, r3, #8
 80197b4:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80197b8:	fb18 f805 	smulbb	r8, r8, r5
 80197bc:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80197c0:	10da      	asrs	r2, r3, #3
 80197c2:	fb01 810c 	mla	r1, r1, ip, r8
 80197c6:	00db      	lsls	r3, r3, #3
 80197c8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80197cc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80197d0:	b2db      	uxtb	r3, r3
 80197d2:	fb18 f805 	smulbb	r8, r8, r5
 80197d6:	fb1e fe05 	smulbb	lr, lr, r5
 80197da:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80197de:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80197e2:	b289      	uxth	r1, r1
 80197e4:	fb02 820c 	mla	r2, r2, ip, r8
 80197e8:	fb03 e30c 	mla	r3, r3, ip, lr
 80197ec:	b292      	uxth	r2, r2
 80197ee:	b29b      	uxth	r3, r3
 80197f0:	f101 0801 	add.w	r8, r1, #1
 80197f4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80197f8:	f103 0e01 	add.w	lr, r3, #1
 80197fc:	f102 0801 	add.w	r8, r2, #1
 8019800:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8019804:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8019808:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801980c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8019810:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019814:	ea4e 0101 	orr.w	r1, lr, r1
 8019818:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801981c:	ea41 0108 	orr.w	r1, r1, r8
 8019820:	f820 1b02 	strh.w	r1, [r0], #2
 8019824:	e7b6      	b.n	8019794 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8019826:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019828:	881b      	ldrh	r3, [r3, #0]
 801982a:	1b9b      	subs	r3, r3, r6
 801982c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019830:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8019834:	1b9b      	subs	r3, r3, r6
 8019836:	441c      	add	r4, r3
 8019838:	e7a6      	b.n	8019788 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801983a:	491b      	ldr	r1, [pc, #108]	@ (80198a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801983c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8019840:	2203      	movs	r2, #3
 8019842:	2504      	movs	r5, #4
 8019844:	4550      	cmp	r0, sl
 8019846:	d228      	bcs.n	801989a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8019848:	eb00 0c09 	add.w	ip, r0, r9
 801984c:	4560      	cmp	r0, ip
 801984e:	4623      	mov	r3, r4
 8019850:	d219      	bcs.n	8019886 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8019852:	f893 e000 	ldrb.w	lr, [r3]
 8019856:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801985a:	eb07 0b0e 	add.w	fp, r7, lr
 801985e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8019862:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8019866:	f89b b001 	ldrb.w	fp, [fp, #1]
 801986a:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801986e:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8019872:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019876:	ea43 030b 	orr.w	r3, r3, fp
 801987a:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801987e:	3401      	adds	r4, #1
 8019880:	f820 3b02 	strh.w	r3, [r0], #2
 8019884:	e7e2      	b.n	801984c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8019886:	f8b8 3000 	ldrh.w	r3, [r8]
 801988a:	1b9b      	subs	r3, r3, r6
 801988c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019890:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8019894:	1b9b      	subs	r3, r3, r6
 8019896:	441c      	add	r4, r3
 8019898:	e7d4      	b.n	8019844 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801989a:	4b04      	ldr	r3, [pc, #16]	@ (80198ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801989c:	6818      	ldr	r0, [r3, #0]
 801989e:	6803      	ldr	r3, [r0, #0]
 80198a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80198a2:	4798      	blx	r3
 80198a4:	e750      	b.n	8019748 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80198a6:	bf00      	nop
 80198a8:	fffff800 	.word	0xfffff800
 80198ac:	20002dbc 	.word	0x20002dbc
 80198b0:	20002db6 	.word	0x20002db6

080198b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80198b4:	b4f0      	push	{r4, r5, r6, r7}
 80198b6:	460c      	mov	r4, r1
 80198b8:	4611      	mov	r1, r2
 80198ba:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80198be:	780f      	ldrb	r7, [r1, #0]
 80198c0:	784e      	ldrb	r6, [r1, #1]
 80198c2:	2f01      	cmp	r7, #1
 80198c4:	461a      	mov	r2, r3
 80198c6:	9b04      	ldr	r3, [sp, #16]
 80198c8:	d038      	beq.n	801993c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 80198ca:	d31f      	bcc.n	801990c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 80198cc:	2f02      	cmp	r7, #2
 80198ce:	d14d      	bne.n	801996c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80198d0:	2e03      	cmp	r6, #3
 80198d2:	d84b      	bhi.n	801996c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80198d4:	e8df f006 	tbb	[pc, r6]
 80198d8:	17140702 	.word	0x17140702
 80198dc:	9504      	str	r5, [sp, #16]
 80198de:	4620      	mov	r0, r4
 80198e0:	bcf0      	pop	{r4, r5, r6, r7}
 80198e2:	f7ff be09 	b.w	80194f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80198e6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80198e8:	2800      	cmp	r0, #0
 80198ea:	d03f      	beq.n	801996c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80198ec:	6806      	ldr	r6, [r0, #0]
 80198ee:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80198f2:	68b5      	ldr	r5, [r6, #8]
 80198f4:	4613      	mov	r3, r2
 80198f6:	46ac      	mov	ip, r5
 80198f8:	460a      	mov	r2, r1
 80198fa:	4621      	mov	r1, r4
 80198fc:	bcf0      	pop	{r4, r5, r6, r7}
 80198fe:	4760      	bx	ip
 8019900:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019904:	e7f0      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8019906:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801990a:	e7ed      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801990c:	2e03      	cmp	r6, #3
 801990e:	d82d      	bhi.n	801996c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019910:	e8df f006 	tbb	[pc, r6]
 8019914:	110e0702 	.word	0x110e0702
 8019918:	9504      	str	r5, [sp, #16]
 801991a:	4620      	mov	r0, r4
 801991c:	bcf0      	pop	{r4, r5, r6, r7}
 801991e:	f7ff bd05 	b.w	801932c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8019922:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019924:	b310      	cbz	r0, 801996c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019926:	6806      	ldr	r6, [r0, #0]
 8019928:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801992c:	68f5      	ldr	r5, [r6, #12]
 801992e:	e7e1      	b.n	80198f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019930:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019934:	e7f6      	b.n	8019924 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8019936:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801993a:	e7f3      	b.n	8019924 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801993c:	2e03      	cmp	r6, #3
 801993e:	d815      	bhi.n	801996c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019940:	e8df f006 	tbb	[pc, r6]
 8019944:	110e0702 	.word	0x110e0702
 8019948:	9504      	str	r5, [sp, #16]
 801994a:	4620      	mov	r0, r4
 801994c:	bcf0      	pop	{r4, r5, r6, r7}
 801994e:	f7ff be9f 	b.w	8019690 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8019952:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8019954:	b150      	cbz	r0, 801996c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8019956:	6806      	ldr	r6, [r0, #0]
 8019958:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801995c:	6935      	ldr	r5, [r6, #16]
 801995e:	e7c9      	b.n	80198f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8019960:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 8019964:	e7f6      	b.n	8019954 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 8019966:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801996a:	e7f3      	b.n	8019954 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801996c:	bcf0      	pop	{r4, r5, r6, r7}
 801996e:	4770      	bx	lr

08019970 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8019970:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019974:	4604      	mov	r4, r0
 8019976:	b087      	sub	sp, #28
 8019978:	6810      	ldr	r0, [r2, #0]
 801997a:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801997e:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 8019bb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8019982:	460e      	mov	r6, r1
 8019984:	6851      	ldr	r1, [r2, #4]
 8019986:	ad02      	add	r5, sp, #8
 8019988:	c503      	stmia	r5!, {r0, r1}
 801998a:	6818      	ldr	r0, [r3, #0]
 801998c:	6859      	ldr	r1, [r3, #4]
 801998e:	ad04      	add	r5, sp, #16
 8019990:	4617      	mov	r7, r2
 8019992:	c503      	stmia	r5!, {r0, r1}
 8019994:	a802      	add	r0, sp, #8
 8019996:	f7f6 fd33 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801999a:	4639      	mov	r1, r7
 801999c:	a804      	add	r0, sp, #16
 801999e:	f7f6 fd57 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80199a2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80199a6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80199aa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80199ae:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80199b2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80199b6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80199ba:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80199be:	440e      	add	r6, r1
 80199c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80199c4:	440a      	add	r2, r1
 80199c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80199ca:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80199ce:	4413      	add	r3, r2
 80199d0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80199d4:	4b77      	ldr	r3, [pc, #476]	@ (8019bb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80199d6:	6818      	ldr	r0, [r3, #0]
 80199d8:	6803      	ldr	r3, [r0, #0]
 80199da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80199dc:	4798      	blx	r3
 80199de:	f8b9 b000 	ldrh.w	fp, [r9]
 80199e2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80199e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80199ea:	fb0b 2303 	mla	r3, fp, r3, r2
 80199ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80199f2:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 80199f6:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80199fa:	fb05 f50b 	mul.w	r5, r5, fp
 80199fe:	9300      	str	r3, [sp, #0]
 8019a00:	d069      	beq.n	8019ad6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8019a02:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8019a06:	4558      	cmp	r0, fp
 8019a08:	f080 80cc 	bcs.w	8019ba4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019a0c:	9b00      	ldr	r3, [sp, #0]
 8019a0e:	18c3      	adds	r3, r0, r3
 8019a10:	9301      	str	r3, [sp, #4]
 8019a12:	4631      	mov	r1, r6
 8019a14:	9b01      	ldr	r3, [sp, #4]
 8019a16:	4298      	cmp	r0, r3
 8019a18:	d24f      	bcs.n	8019aba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8019a1a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8019a1e:	2a00      	cmp	r2, #0
 8019a20:	d048      	beq.n	8019ab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019a22:	fb0a f202 	mul.w	r2, sl, r2
 8019a26:	1c53      	adds	r3, r2, #1
 8019a28:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019a2c:	121b      	asrs	r3, r3, #8
 8019a2e:	d041      	beq.n	8019ab4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8019a30:	8802      	ldrh	r2, [r0, #0]
 8019a32:	f8b4 c000 	ldrh.w	ip, [r4]
 8019a36:	b29e      	uxth	r6, r3
 8019a38:	1215      	asrs	r5, r2, #8
 8019a3a:	43db      	mvns	r3, r3
 8019a3c:	b2db      	uxtb	r3, r3
 8019a3e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019a42:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019a46:	fb15 f503 	smulbb	r5, r5, r3
 8019a4a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8019a4e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019a52:	00d2      	lsls	r2, r2, #3
 8019a54:	fb07 5706 	mla	r7, r7, r6, r5
 8019a58:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019a5c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019a60:	b2d2      	uxtb	r2, r2
 8019a62:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019a66:	b2bf      	uxth	r7, r7
 8019a68:	fb1e fe03 	smulbb	lr, lr, r3
 8019a6c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019a70:	fa5f fc8c 	uxtb.w	ip, ip
 8019a74:	fb12 f203 	smulbb	r2, r2, r3
 8019a78:	fb05 e506 	mla	r5, r5, r6, lr
 8019a7c:	fb0c 2c06 	mla	ip, ip, r6, r2
 8019a80:	f107 0e01 	add.w	lr, r7, #1
 8019a84:	fa1f fc8c 	uxth.w	ip, ip
 8019a88:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8019a8c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 8019a90:	f10c 0701 	add.w	r7, ip, #1
 8019a94:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8019a98:	b2ad      	uxth	r5, r5
 8019a9a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8019a9e:	ea47 070e 	orr.w	r7, r7, lr
 8019aa2:	f105 0e01 	add.w	lr, r5, #1
 8019aa6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019aaa:	096d      	lsrs	r5, r5, #5
 8019aac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019ab0:	432f      	orrs	r7, r5
 8019ab2:	8007      	strh	r7, [r0, #0]
 8019ab4:	3002      	adds	r0, #2
 8019ab6:	3402      	adds	r4, #2
 8019ab8:	e7ac      	b.n	8019a14 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8019aba:	f8b9 3000 	ldrh.w	r3, [r9]
 8019abe:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019ac2:	eba3 0308 	sub.w	r3, r3, r8
 8019ac6:	eba6 0608 	sub.w	r6, r6, r8
 8019aca:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019ace:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019ad2:	440e      	add	r6, r1
 8019ad4:	e797      	b.n	8019a06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8019ad6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8019ada:	42a8      	cmp	r0, r5
 8019adc:	d262      	bcs.n	8019ba4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8019ade:	9b00      	ldr	r3, [sp, #0]
 8019ae0:	4631      	mov	r1, r6
 8019ae2:	eb00 0b03 	add.w	fp, r0, r3
 8019ae6:	4558      	cmp	r0, fp
 8019ae8:	d24e      	bcs.n	8019b88 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8019aea:	f811 3b01 	ldrb.w	r3, [r1], #1
 8019aee:	b12b      	cbz	r3, 8019afc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019af0:	2bff      	cmp	r3, #255	@ 0xff
 8019af2:	f8b4 e000 	ldrh.w	lr, [r4]
 8019af6:	d104      	bne.n	8019b02 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8019af8:	f8a0 e000 	strh.w	lr, [r0]
 8019afc:	3002      	adds	r0, #2
 8019afe:	3402      	adds	r4, #2
 8019b00:	e7f1      	b.n	8019ae6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8019b02:	8802      	ldrh	r2, [r0, #0]
 8019b04:	b29f      	uxth	r7, r3
 8019b06:	1216      	asrs	r6, r2, #8
 8019b08:	43db      	mvns	r3, r3
 8019b0a:	b2db      	uxtb	r3, r3
 8019b0c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019b10:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019b14:	fb16 f603 	smulbb	r6, r6, r3
 8019b18:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8019b1c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019b20:	00d2      	lsls	r2, r2, #3
 8019b22:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019b26:	b2d2      	uxtb	r2, r2
 8019b28:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019b2c:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019b30:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019b34:	fb1a fa03 	smulbb	sl, sl, r3
 8019b38:	fa1f fc8c 	uxth.w	ip, ip
 8019b3c:	fb12 f303 	smulbb	r3, r2, r3
 8019b40:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019b44:	fa5f fe8e 	uxtb.w	lr, lr
 8019b48:	fb06 a607 	mla	r6, r6, r7, sl
 8019b4c:	f10c 0201 	add.w	r2, ip, #1
 8019b50:	fb0e 3307 	mla	r3, lr, r7, r3
 8019b54:	b2b6      	uxth	r6, r6
 8019b56:	b29b      	uxth	r3, r3
 8019b58:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019b5c:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 8019b60:	f106 0a01 	add.w	sl, r6, #1
 8019b64:	f103 0c01 	add.w	ip, r3, #1
 8019b68:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019b6c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8019b70:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019b74:	0976      	lsrs	r6, r6, #5
 8019b76:	ea4c 0c02 	orr.w	ip, ip, r2
 8019b7a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019b7e:	ea4c 0c06 	orr.w	ip, ip, r6
 8019b82:	f8a0 c000 	strh.w	ip, [r0]
 8019b86:	e7b9      	b.n	8019afc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8019b88:	f8b9 3000 	ldrh.w	r3, [r9]
 8019b8c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8019b90:	eba3 0308 	sub.w	r3, r3, r8
 8019b94:	eba6 0608 	sub.w	r6, r6, r8
 8019b98:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8019b9c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019ba0:	440e      	add	r6, r1
 8019ba2:	e79a      	b.n	8019ada <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8019ba4:	4b03      	ldr	r3, [pc, #12]	@ (8019bb4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8019ba6:	6818      	ldr	r0, [r3, #0]
 8019ba8:	6803      	ldr	r3, [r0, #0]
 8019baa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019bac:	4798      	blx	r3
 8019bae:	b007      	add	sp, #28
 8019bb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bb4:	20002dbc 	.word	0x20002dbc
 8019bb8:	20002db6 	.word	0x20002db6

08019bbc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8019bbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019bc0:	b089      	sub	sp, #36	@ 0x24
 8019bc2:	4607      	mov	r7, r0
 8019bc4:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8019bc8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019bca:	4688      	mov	r8, r1
 8019bcc:	4692      	mov	sl, r2
 8019bce:	4699      	mov	r9, r3
 8019bd0:	2e00      	cmp	r6, #0
 8019bd2:	d048      	beq.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019bd4:	4608      	mov	r0, r1
 8019bd6:	f7fa f827 	bl	8013c28 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019bda:	4605      	mov	r5, r0
 8019bdc:	4640      	mov	r0, r8
 8019bde:	f7fa f857 	bl	8013c90 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019be2:	f8ad 000e 	strh.w	r0, [sp, #14]
 8019be6:	4640      	mov	r0, r8
 8019be8:	f8ad a008 	strh.w	sl, [sp, #8]
 8019bec:	f8ad 500c 	strh.w	r5, [sp, #12]
 8019bf0:	f8ad 900a 	strh.w	r9, [sp, #10]
 8019bf4:	f7fa f90a 	bl	8013e0c <_ZNK8touchgfx6Bitmap7getDataEv>
 8019bf8:	4605      	mov	r5, r0
 8019bfa:	4640      	mov	r0, r8
 8019bfc:	f7fa f936 	bl	8013e6c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8019c00:	4682      	mov	sl, r0
 8019c02:	4640      	mov	r0, r8
 8019c04:	f7fa f986 	bl	8013f14 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8019c08:	2810      	cmp	r0, #16
 8019c0a:	d82c      	bhi.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019c0c:	e8df f010 	tbh	[pc, r0, lsl #1]
 8019c10:	00ba00ca 	.word	0x00ba00ca
 8019c14:	002b0011 	.word	0x002b0011
 8019c18:	002b002b 	.word	0x002b002b
 8019c1c:	002b002b 	.word	0x002b002b
 8019c20:	002b002b 	.word	0x002b002b
 8019c24:	00c1002b 	.word	0x00c1002b
 8019c28:	002b002b 	.word	0x002b002b
 8019c2c:	002b0180 	.word	0x002b0180
 8019c30:	0173      	.short	0x0173
 8019c32:	4bbc      	ldr	r3, [pc, #752]	@ (8019f24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 8019c34:	6818      	ldr	r0, [r3, #0]
 8019c36:	6803      	ldr	r3, [r0, #0]
 8019c38:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019c3a:	4798      	blx	r3
 8019c3c:	2eff      	cmp	r6, #255	@ 0xff
 8019c3e:	d101      	bne.n	8019c44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8019c40:	0683      	lsls	r3, r0, #26
 8019c42:	d506      	bpl.n	8019c52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 8019c44:	4633      	mov	r3, r6
 8019c46:	4622      	mov	r2, r4
 8019c48:	a902      	add	r1, sp, #8
 8019c4a:	4628      	mov	r0, r5
 8019c4c:	f7ff f8fc 	bl	8018e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019c50:	e009      	b.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019c52:	4640      	mov	r0, r8
 8019c54:	f7fa f8a2 	bl	8013d9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019c58:	b940      	cbnz	r0, 8019c6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 8019c5a:	4623      	mov	r3, r4
 8019c5c:	aa02      	add	r2, sp, #8
 8019c5e:	4629      	mov	r1, r5
 8019c60:	4638      	mov	r0, r7
 8019c62:	f7ff f9d7 	bl	8019014 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019c66:	b009      	add	sp, #36	@ 0x24
 8019c68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c6c:	f10d 0918 	add.w	r9, sp, #24
 8019c70:	4641      	mov	r1, r8
 8019c72:	4648      	mov	r0, r9
 8019c74:	f7fa f840 	bl	8013cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019c78:	e899 0003 	ldmia.w	r9, {r0, r1}
 8019c7c:	f10d 0810 	add.w	r8, sp, #16
 8019c80:	e888 0003 	stmia.w	r8, {r0, r1}
 8019c84:	4640      	mov	r0, r8
 8019c86:	4621      	mov	r1, r4
 8019c88:	f7f3 faca 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8019c8c:	4640      	mov	r0, r8
 8019c8e:	f7f3 fb0a 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019c92:	2800      	cmp	r0, #0
 8019c94:	d1d6      	bne.n	8019c44 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8019c96:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019c9a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019c9e:	4293      	cmp	r3, r2
 8019ca0:	dd12      	ble.n	8019cc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 8019ca2:	1a9b      	subs	r3, r3, r2
 8019ca4:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019ca8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019cac:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019cb0:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019cb4:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019cb8:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019cbc:	464a      	mov	r2, r9
 8019cbe:	4633      	mov	r3, r6
 8019cc0:	a902      	add	r1, sp, #8
 8019cc2:	4628      	mov	r0, r5
 8019cc4:	f7ff f8c0 	bl	8018e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019cc8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019ccc:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019cd0:	4293      	cmp	r3, r2
 8019cd2:	dd12      	ble.n	8019cfa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 8019cd4:	1a9b      	subs	r3, r3, r2
 8019cd6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019cda:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019cde:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019ce2:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019ce6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019cea:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019cee:	23ff      	movs	r3, #255	@ 0xff
 8019cf0:	464a      	mov	r2, r9
 8019cf2:	a902      	add	r1, sp, #8
 8019cf4:	4628      	mov	r0, r5
 8019cf6:	f7ff f8a7 	bl	8018e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019cfa:	4643      	mov	r3, r8
 8019cfc:	aa02      	add	r2, sp, #8
 8019cfe:	4629      	mov	r1, r5
 8019d00:	4638      	mov	r0, r7
 8019d02:	f7ff f987 	bl	8019014 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8019d06:	88a2      	ldrh	r2, [r4, #4]
 8019d08:	8823      	ldrh	r3, [r4, #0]
 8019d0a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019d0e:	4413      	add	r3, r2
 8019d10:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019d14:	440a      	add	r2, r1
 8019d16:	b29b      	uxth	r3, r3
 8019d18:	b292      	uxth	r2, r2
 8019d1a:	b211      	sxth	r1, r2
 8019d1c:	b218      	sxth	r0, r3
 8019d1e:	4288      	cmp	r0, r1
 8019d20:	dd12      	ble.n	8019d48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 8019d22:	1a9b      	subs	r3, r3, r2
 8019d24:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019d28:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019d2c:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019d30:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019d34:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019d38:	23ff      	movs	r3, #255	@ 0xff
 8019d3a:	464a      	mov	r2, r9
 8019d3c:	a902      	add	r1, sp, #8
 8019d3e:	4628      	mov	r0, r5
 8019d40:	f8ad 601a 	strh.w	r6, [sp, #26]
 8019d44:	f7ff f880 	bl	8018e48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019d48:	88e2      	ldrh	r2, [r4, #6]
 8019d4a:	8863      	ldrh	r3, [r4, #2]
 8019d4c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019d50:	4413      	add	r3, r2
 8019d52:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019d56:	440a      	add	r2, r1
 8019d58:	b29b      	uxth	r3, r3
 8019d5a:	b292      	uxth	r2, r2
 8019d5c:	b211      	sxth	r1, r2
 8019d5e:	b218      	sxth	r0, r3
 8019d60:	4288      	cmp	r0, r1
 8019d62:	dd80      	ble.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019d64:	1a9b      	subs	r3, r3, r2
 8019d66:	f9b4 6000 	ldrsh.w	r6, [r4]
 8019d6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019d6e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019d72:	f8ad 6018 	strh.w	r6, [sp, #24]
 8019d76:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019d7a:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019d7e:	23ff      	movs	r3, #255	@ 0xff
 8019d80:	464a      	mov	r2, r9
 8019d82:	e761      	b.n	8019c48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8019d84:	4633      	mov	r3, r6
 8019d86:	4622      	mov	r2, r4
 8019d88:	a902      	add	r1, sp, #8
 8019d8a:	4628      	mov	r0, r5
 8019d8c:	f7ff f9b2 	bl	80190f4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8019d90:	e769      	b.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019d92:	e9cd 4600 	strd	r4, r6, [sp]
 8019d96:	ab02      	add	r3, sp, #8
 8019d98:	4652      	mov	r2, sl
 8019d9a:	4629      	mov	r1, r5
 8019d9c:	4638      	mov	r0, r7
 8019d9e:	f7ff fd89 	bl	80198b4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8019da2:	e760      	b.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019da4:	4640      	mov	r0, r8
 8019da6:	f7f9 fff9 	bl	8013d9c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8019daa:	b948      	cbnz	r0, 8019dc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8019dac:	683b      	ldr	r3, [r7, #0]
 8019dae:	e9cd 6000 	strd	r6, r0, [sp]
 8019db2:	aa02      	add	r2, sp, #8
 8019db4:	68de      	ldr	r6, [r3, #12]
 8019db6:	4629      	mov	r1, r5
 8019db8:	4623      	mov	r3, r4
 8019dba:	4638      	mov	r0, r7
 8019dbc:	47b0      	blx	r6
 8019dbe:	e752      	b.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019dc0:	f10d 0918 	add.w	r9, sp, #24
 8019dc4:	4641      	mov	r1, r8
 8019dc6:	4648      	mov	r0, r9
 8019dc8:	f7f9 ff96 	bl	8013cf8 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8019dcc:	e899 0003 	ldmia.w	r9, {r0, r1}
 8019dd0:	f10d 0810 	add.w	r8, sp, #16
 8019dd4:	e888 0003 	stmia.w	r8, {r0, r1}
 8019dd8:	4640      	mov	r0, r8
 8019dda:	4621      	mov	r1, r4
 8019ddc:	f7f3 fa20 	bl	800d220 <_ZN8touchgfx4RectaNERKS0_>
 8019de0:	4640      	mov	r0, r8
 8019de2:	f7f3 fa60 	bl	800d2a6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019de6:	b138      	cbz	r0, 8019df8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8019de8:	9600      	str	r6, [sp, #0]
 8019dea:	4623      	mov	r3, r4
 8019dec:	aa02      	add	r2, sp, #8
 8019dee:	4651      	mov	r1, sl
 8019df0:	4628      	mov	r0, r5
 8019df2:	f7ff fdbd 	bl	8019970 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019df6:	e736      	b.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019df8:	683b      	ldr	r3, [r7, #0]
 8019dfa:	e9cd 6000 	strd	r6, r0, [sp]
 8019dfe:	aa02      	add	r2, sp, #8
 8019e00:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8019e04:	4629      	mov	r1, r5
 8019e06:	4643      	mov	r3, r8
 8019e08:	4638      	mov	r0, r7
 8019e0a:	47d8      	blx	fp
 8019e0c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019e10:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8019e14:	4293      	cmp	r3, r2
 8019e16:	dd13      	ble.n	8019e40 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8019e18:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019e1c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019e20:	f8ad 0018 	strh.w	r0, [sp, #24]
 8019e24:	1a9b      	subs	r3, r3, r2
 8019e26:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019e2a:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019e2e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019e32:	9600      	str	r6, [sp, #0]
 8019e34:	464b      	mov	r3, r9
 8019e36:	aa02      	add	r2, sp, #8
 8019e38:	4651      	mov	r1, sl
 8019e3a:	4628      	mov	r0, r5
 8019e3c:	f7ff fd98 	bl	8019970 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019e40:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8019e44:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019e48:	4293      	cmp	r3, r2
 8019e4a:	dd13      	ble.n	8019e74 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 8019e4c:	1a9b      	subs	r3, r3, r2
 8019e4e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8019e52:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8019e56:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019e5a:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019e5e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019e62:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019e66:	9600      	str	r6, [sp, #0]
 8019e68:	464b      	mov	r3, r9
 8019e6a:	aa02      	add	r2, sp, #8
 8019e6c:	4651      	mov	r1, sl
 8019e6e:	4628      	mov	r0, r5
 8019e70:	f7ff fd7e 	bl	8019970 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019e74:	88a2      	ldrh	r2, [r4, #4]
 8019e76:	8823      	ldrh	r3, [r4, #0]
 8019e78:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019e7c:	4413      	add	r3, r2
 8019e7e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8019e82:	440a      	add	r2, r1
 8019e84:	b29b      	uxth	r3, r3
 8019e86:	b292      	uxth	r2, r2
 8019e88:	b211      	sxth	r1, r2
 8019e8a:	b218      	sxth	r0, r3
 8019e8c:	4288      	cmp	r0, r1
 8019e8e:	dd13      	ble.n	8019eb8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 8019e90:	1a9b      	subs	r3, r3, r2
 8019e92:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8019e96:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8019e9a:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019e9e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019ea2:	f8ad 001e 	strh.w	r0, [sp, #30]
 8019ea6:	9600      	str	r6, [sp, #0]
 8019ea8:	464b      	mov	r3, r9
 8019eaa:	aa02      	add	r2, sp, #8
 8019eac:	4651      	mov	r1, sl
 8019eae:	4628      	mov	r0, r5
 8019eb0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8019eb4:	f7ff fd5c 	bl	8019970 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019eb8:	88e2      	ldrh	r2, [r4, #6]
 8019eba:	8863      	ldrh	r3, [r4, #2]
 8019ebc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019ec0:	4413      	add	r3, r2
 8019ec2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8019ec6:	440a      	add	r2, r1
 8019ec8:	b29b      	uxth	r3, r3
 8019eca:	b292      	uxth	r2, r2
 8019ecc:	b211      	sxth	r1, r2
 8019ece:	b218      	sxth	r0, r3
 8019ed0:	4288      	cmp	r0, r1
 8019ed2:	f77f aec8 	ble.w	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019ed6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8019eda:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019ede:	f8ad 7018 	strh.w	r7, [sp, #24]
 8019ee2:	1a9b      	subs	r3, r3, r2
 8019ee4:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019ee8:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019eec:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019ef0:	9600      	str	r6, [sp, #0]
 8019ef2:	464b      	mov	r3, r9
 8019ef4:	e77a      	b.n	8019dec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 8019ef6:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8019efa:	2800      	cmp	r0, #0
 8019efc:	f43f aeb3 	beq.w	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019f00:	6803      	ldr	r3, [r0, #0]
 8019f02:	9600      	str	r6, [sp, #0]
 8019f04:	68de      	ldr	r6, [r3, #12]
 8019f06:	4623      	mov	r3, r4
 8019f08:	aa02      	add	r2, sp, #8
 8019f0a:	4629      	mov	r1, r5
 8019f0c:	47b0      	blx	r6
 8019f0e:	e6aa      	b.n	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019f10:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8019f14:	2800      	cmp	r0, #0
 8019f16:	f43f aea6 	beq.w	8019c66 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8019f1a:	6803      	ldr	r3, [r0, #0]
 8019f1c:	9600      	str	r6, [sp, #0]
 8019f1e:	689e      	ldr	r6, [r3, #8]
 8019f20:	e7f1      	b.n	8019f06 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 8019f22:	bf00      	nop
 8019f24:	20002dbc 	.word	0x20002dbc

08019f28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019f28:	b180      	cbz	r0, 8019f4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8019f2a:	2903      	cmp	r1, #3
 8019f2c:	d81c      	bhi.n	8019f68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8019f2e:	e8df f001 	tbb	[pc, r1]
 8019f32:	1d02      	.short	0x1d02
 8019f34:	1f08      	.short	0x1f08
 8019f36:	4b10      	ldr	r3, [pc, #64]	@ (8019f78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019f38:	8818      	ldrh	r0, [r3, #0]
 8019f3a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019f3e:	4240      	negs	r0, r0
 8019f40:	4770      	bx	lr
 8019f42:	4b0d      	ldr	r3, [pc, #52]	@ (8019f78 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019f44:	8818      	ldrh	r0, [r3, #0]
 8019f46:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019f4a:	4770      	bx	lr
 8019f4c:	2903      	cmp	r1, #3
 8019f4e:	d80b      	bhi.n	8019f68 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8019f50:	a301      	add	r3, pc, #4	@ (adr r3, 8019f58 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8019f52:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019f56:	bf00      	nop
 8019f58:	08019f6d 	.word	0x08019f6d
 8019f5c:	08019f43 	.word	0x08019f43
 8019f60:	08019f71 	.word	0x08019f71
 8019f64:	08019f37 	.word	0x08019f37
 8019f68:	2000      	movs	r0, #0
 8019f6a:	4770      	bx	lr
 8019f6c:	2001      	movs	r0, #1
 8019f6e:	4770      	bx	lr
 8019f70:	f04f 30ff 	mov.w	r0, #4294967295
 8019f74:	4770      	bx	lr
 8019f76:	bf00      	nop
 8019f78:	20002db6 	.word	0x20002db6

08019f7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8019f7c:	b180      	cbz	r0, 8019fa0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8019f7e:	2903      	cmp	r1, #3
 8019f80:	d81c      	bhi.n	8019fbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019f82:	e8df f001 	tbb	[pc, r1]
 8019f86:	021d      	.short	0x021d
 8019f88:	071f      	.short	0x071f
 8019f8a:	4b10      	ldr	r3, [pc, #64]	@ (8019fcc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019f8c:	8818      	ldrh	r0, [r3, #0]
 8019f8e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019f92:	4770      	bx	lr
 8019f94:	4b0d      	ldr	r3, [pc, #52]	@ (8019fcc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019f96:	8818      	ldrh	r0, [r3, #0]
 8019f98:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019f9c:	4240      	negs	r0, r0
 8019f9e:	4770      	bx	lr
 8019fa0:	2903      	cmp	r1, #3
 8019fa2:	d80b      	bhi.n	8019fbc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019fa4:	a301      	add	r3, pc, #4	@ (adr r3, 8019fac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8019fa6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019faa:	bf00      	nop
 8019fac:	08019f8b 	.word	0x08019f8b
 8019fb0:	08019fc5 	.word	0x08019fc5
 8019fb4:	08019f95 	.word	0x08019f95
 8019fb8:	08019fc1 	.word	0x08019fc1
 8019fbc:	2000      	movs	r0, #0
 8019fbe:	4770      	bx	lr
 8019fc0:	2001      	movs	r0, #1
 8019fc2:	4770      	bx	lr
 8019fc4:	f04f 30ff 	mov.w	r0, #4294967295
 8019fc8:	4770      	bx	lr
 8019fca:	bf00      	nop
 8019fcc:	20002db6 	.word	0x20002db6

08019fd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8019fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019fd4:	b099      	sub	sp, #100	@ 0x64
 8019fd6:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019fd8:	a914      	add	r1, sp, #80	@ 0x50
 8019fda:	e881 000c 	stmia.w	r1, {r2, r3}
 8019fde:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8019fe2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8019fe6:	f891 900d 	ldrb.w	r9, [r1, #13]
 8019fea:	9309      	str	r3, [sp, #36]	@ 0x24
 8019fec:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8019ff0:	9310      	str	r3, [sp, #64]	@ 0x40
 8019ff2:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8019ff6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8019ffa:	930c      	str	r3, [sp, #48]	@ 0x30
 8019ffc:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801a000:	798f      	ldrb	r7, [r1, #6]
 801a002:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801a006:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801a00a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801a00e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801a012:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801a016:	431f      	orrs	r7, r3
 801a018:	f000 8195 	beq.w	801a346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a01c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801a020:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801a024:	f891 9007 	ldrb.w	r9, [r1, #7]
 801a028:	ea59 0903 	orrs.w	r9, r9, r3
 801a02c:	f000 818b 	beq.w	801a346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a030:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801a034:	b29b      	uxth	r3, r3
 801a036:	2d00      	cmp	r5, #0
 801a038:	f000 812e 	beq.w	801a298 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801a03c:	1aed      	subs	r5, r5, r3
 801a03e:	b2ad      	uxth	r5, r5
 801a040:	042b      	lsls	r3, r5, #16
 801a042:	d502      	bpl.n	801a04a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a044:	1b64      	subs	r4, r4, r5
 801a046:	b224      	sxth	r4, r4
 801a048:	2500      	movs	r5, #0
 801a04a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801a04e:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801a052:	428c      	cmp	r4, r1
 801a054:	b28b      	uxth	r3, r1
 801a056:	bfbf      	itttt	lt
 801a058:	18ed      	addlt	r5, r5, r3
 801a05a:	1b2c      	sublt	r4, r5, r4
 801a05c:	b2a5      	uxthlt	r5, r4
 801a05e:	460c      	movlt	r4, r1
 801a060:	8891      	ldrh	r1, [r2, #4]
 801a062:	440b      	add	r3, r1
 801a064:	b21b      	sxth	r3, r3
 801a066:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a068:	88d3      	ldrh	r3, [r2, #6]
 801a06a:	8852      	ldrh	r2, [r2, #2]
 801a06c:	4413      	add	r3, r2
 801a06e:	b21b      	sxth	r3, r3
 801a070:	930d      	str	r3, [sp, #52]	@ 0x34
 801a072:	4bbe      	ldr	r3, [pc, #760]	@ (801a36c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801a074:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a076:	f893 b000 	ldrb.w	fp, [r3]
 801a07a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801a07e:	f1dc 0300 	rsbs	r3, ip, #0
 801a082:	eb43 030c 	adc.w	r3, r3, ip
 801a086:	930e      	str	r3, [sp, #56]	@ 0x38
 801a088:	4621      	mov	r1, r4
 801a08a:	4653      	mov	r3, sl
 801a08c:	a814      	add	r0, sp, #80	@ 0x50
 801a08e:	f7f6 f82c 	bl	80100ea <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801a092:	4621      	mov	r1, r4
 801a094:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801a098:	4653      	mov	r3, sl
 801a09a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a09c:	a814      	add	r0, sp, #80	@ 0x50
 801a09e:	f7f6 f841 	bl	8010124 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801a0a2:	a918      	add	r1, sp, #96	@ 0x60
 801a0a4:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801a0a8:	a817      	add	r0, sp, #92	@ 0x5c
 801a0aa:	f7f6 f967 	bl	801037c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801a0ae:	f1ba 0f00 	cmp.w	sl, #0
 801a0b2:	f040 80f4 	bne.w	801a29e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801a0b6:	f1bb 0f01 	cmp.w	fp, #1
 801a0ba:	f040 80f8 	bne.w	801a2ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801a0be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a0c0:	2b00      	cmp	r3, #0
 801a0c2:	f040 8145 	bne.w	801a350 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801a0c6:	b2ba      	uxth	r2, r7
 801a0c8:	b905      	cbnz	r5, 801a0cc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801a0ca:	b16e      	cbz	r6, 801a0e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801a0cc:	fb06 5302 	mla	r3, r6, r2, r5
 801a0d0:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801a0d2:	fb08 f303 	mul.w	r3, r8, r3
 801a0d6:	4631      	mov	r1, r6
 801a0d8:	f003 0607 	and.w	r6, r3, #7
 801a0dc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801a0e0:	9328      	str	r3, [sp, #160]	@ 0xa0
 801a0e2:	eba9 0301 	sub.w	r3, r9, r1
 801a0e6:	930a      	str	r3, [sp, #40]	@ 0x28
 801a0e8:	4651      	mov	r1, sl
 801a0ea:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a0ec:	f7ff ff1c 	bl	8019f28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801a0f0:	4681      	mov	r9, r0
 801a0f2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801a0f4:	f7ff ff42 	bl	8019f7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801a0f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a0fa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801a0fc:	eba3 0a01 	sub.w	sl, r3, r1
 801a100:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a102:	459a      	cmp	sl, r3
 801a104:	bfa8      	it	ge
 801a106:	469a      	movge	sl, r3
 801a108:	f1ba 0f00 	cmp.w	sl, #0
 801a10c:	4683      	mov	fp, r0
 801a10e:	f340 811a 	ble.w	801a346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a112:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a114:	1b64      	subs	r4, r4, r5
 801a116:	1b1c      	subs	r4, r3, r4
 801a118:	42bc      	cmp	r4, r7
 801a11a:	bfd4      	ite	le
 801a11c:	ebc5 0504 	rsble	r5, r5, r4
 801a120:	ebc5 0507 	rsbgt	r5, r5, r7
 801a124:	2d00      	cmp	r5, #0
 801a126:	f340 810e 	ble.w	801a346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a12a:	1b52      	subs	r2, r2, r5
 801a12c:	fb08 f302 	mul.w	r3, r8, r2
 801a130:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a132:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a134:	2b00      	cmp	r3, #0
 801a136:	f040 8116 	bne.w	801a366 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801a13a:	4b8d      	ldr	r3, [pc, #564]	@ (801a370 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801a13c:	6818      	ldr	r0, [r3, #0]
 801a13e:	6803      	ldr	r3, [r0, #0]
 801a140:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a142:	4798      	blx	r3
 801a144:	2301      	movs	r3, #1
 801a146:	fa03 f308 	lsl.w	r3, r3, r8
 801a14a:	4a8a      	ldr	r2, [pc, #552]	@ (801a374 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801a14c:	3b01      	subs	r3, #1
 801a14e:	b2db      	uxtb	r3, r3
 801a150:	8811      	ldrh	r1, [r2, #0]
 801a152:	930e      	str	r3, [sp, #56]	@ 0x38
 801a154:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801a158:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801a15c:	fb01 2303 	mla	r3, r1, r3, r2
 801a160:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a164:	930a      	str	r3, [sp, #40]	@ 0x28
 801a166:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a168:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801a16c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a16e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a170:	0a19      	lsrs	r1, r3, #8
 801a172:	b2cb      	uxtb	r3, r1
 801a174:	9312      	str	r3, [sp, #72]	@ 0x48
 801a176:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a178:	b2db      	uxtb	r3, r3
 801a17a:	9311      	str	r3, [sp, #68]	@ 0x44
 801a17c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801a17e:	095a      	lsrs	r2, r3, #5
 801a180:	4b7d      	ldr	r3, [pc, #500]	@ (801a378 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801a182:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a186:	400b      	ands	r3, r1
 801a188:	4313      	orrs	r3, r2
 801a18a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801a18c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801a190:	4313      	orrs	r3, r2
 801a192:	b29b      	uxth	r3, r3
 801a194:	9310      	str	r3, [sp, #64]	@ 0x40
 801a196:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a198:	781a      	ldrb	r2, [r3, #0]
 801a19a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801a19e:	4132      	asrs	r2, r6
 801a1a0:	fb05 b919 	mls	r9, r5, r9, fp
 801a1a4:	fb03 fb05 	mul.w	fp, r3, r5
 801a1a8:	b2d2      	uxtb	r2, r2
 801a1aa:	930d      	str	r3, [sp, #52]	@ 0x34
 801a1ac:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801a1b0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801a1b4:	f0c0 80f5 	bcc.w	801a3a2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801a1b8:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801a1bc:	46ae      	mov	lr, r5
 801a1be:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801a1c2:	f0c0 80dd 	bcc.w	801a380 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801a1c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a1c8:	4013      	ands	r3, r2
 801a1ca:	d055      	beq.n	801a278 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801a1cc:	20ff      	movs	r0, #255	@ 0xff
 801a1ce:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801a1d0:	fb90 f1f1 	sdiv	r1, r0, r1
 801a1d4:	434b      	muls	r3, r1
 801a1d6:	2bfe      	cmp	r3, #254	@ 0xfe
 801a1d8:	dd03      	ble.n	801a1e2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801a1da:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a1dc:	4281      	cmp	r1, r0
 801a1de:	f000 80cd 	beq.w	801a37c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801a1e2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a1e4:	f8bc 4000 	ldrh.w	r4, [ip]
 801a1e8:	fb11 f303 	smulbb	r3, r1, r3
 801a1ec:	b29b      	uxth	r3, r3
 801a1ee:	1c59      	adds	r1, r3, #1
 801a1f0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a1f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a1f8:	b29f      	uxth	r7, r3
 801a1fa:	43db      	mvns	r3, r3
 801a1fc:	b2db      	uxtb	r3, r3
 801a1fe:	9309      	str	r3, [sp, #36]	@ 0x24
 801a200:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801a202:	1220      	asrs	r0, r4, #8
 801a204:	fb13 f907 	smulbb	r9, r3, r7
 801a208:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a20c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a20e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801a212:	fb00 9003 	mla	r0, r0, r3, r9
 801a216:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a218:	10e1      	asrs	r1, r4, #3
 801a21a:	fb13 f907 	smulbb	r9, r3, r7
 801a21e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801a222:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a224:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801a228:	fb01 9103 	mla	r1, r1, r3, r9
 801a22c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a22e:	00e4      	lsls	r4, r4, #3
 801a230:	fb13 f707 	smulbb	r7, r3, r7
 801a234:	b2e4      	uxtb	r4, r4
 801a236:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a238:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801a23c:	fb04 7403 	mla	r4, r4, r3, r7
 801a240:	b280      	uxth	r0, r0
 801a242:	b2a4      	uxth	r4, r4
 801a244:	1c43      	adds	r3, r0, #1
 801a246:	f104 0901 	add.w	r9, r4, #1
 801a24a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a24e:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801a252:	b289      	uxth	r1, r1
 801a254:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801a258:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801a25c:	ea49 0000 	orr.w	r0, r9, r0
 801a260:	f101 0901 	add.w	r9, r1, #1
 801a264:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801a268:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a26c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801a270:	ea40 0009 	orr.w	r0, r0, r9
 801a274:	f8ac 0000 	strh.w	r0, [ip]
 801a278:	4446      	add	r6, r8
 801a27a:	b2b6      	uxth	r6, r6
 801a27c:	2e07      	cmp	r6, #7
 801a27e:	bf81      	itttt	hi
 801a280:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801a282:	785a      	ldrbhi	r2, [r3, #1]
 801a284:	3301      	addhi	r3, #1
 801a286:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801a288:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a28a:	bf9a      	itte	ls
 801a28c:	fa42 f208 	asrls.w	r2, r2, r8
 801a290:	b2d2      	uxtbls	r2, r2
 801a292:	2600      	movhi	r6, #0
 801a294:	449c      	add	ip, r3
 801a296:	e792      	b.n	801a1be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801a298:	441c      	add	r4, r3
 801a29a:	b224      	sxth	r4, r4
 801a29c:	e6d5      	b.n	801a04a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801a29e:	f1ba 0f01 	cmp.w	sl, #1
 801a2a2:	f47f af0c 	bne.w	801a0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a2a6:	f1bb 0f01 	cmp.w	fp, #1
 801a2aa:	f47f af08 	bne.w	801a0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a2ae:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801a370 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801a2b2:	f8db 0000 	ldr.w	r0, [fp]
 801a2b6:	6803      	ldr	r3, [r0, #0]
 801a2b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a2ba:	4798      	blx	r3
 801a2bc:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801a2c0:	465a      	mov	r2, fp
 801a2c2:	d006      	beq.n	801a2d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801a2c4:	f1b8 0f04 	cmp.w	r8, #4
 801a2c8:	d140      	bne.n	801a34c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801a2ca:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a2cc:	3300      	adds	r3, #0
 801a2ce:	bf18      	it	ne
 801a2d0:	2301      	movne	r3, #1
 801a2d2:	0580      	lsls	r0, r0, #22
 801a2d4:	d56e      	bpl.n	801a3b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a2d6:	f1b8 0f08 	cmp.w	r8, #8
 801a2da:	d16b      	bne.n	801a3b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801a2dc:	2b00      	cmp	r3, #0
 801a2de:	bf0c      	ite	eq
 801a2e0:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801a2e4:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801a2e8:	2d00      	cmp	r5, #0
 801a2ea:	f47f aee8 	bne.w	801a0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a2ee:	2e00      	cmp	r6, #0
 801a2f0:	f47f aee5 	bne.w	801a0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a2f4:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801a2f6:	19e3      	adds	r3, r4, r7
 801a2f8:	4283      	cmp	r3, r0
 801a2fa:	f73f aee0 	bgt.w	801a0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a2fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a300:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801a302:	444b      	add	r3, r9
 801a304:	4283      	cmp	r3, r0
 801a306:	f73f aeda 	bgt.w	801a0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a30a:	6810      	ldr	r0, [r2, #0]
 801a30c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801a310:	6804      	ldr	r4, [r0, #0]
 801a312:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801a316:	b2bf      	uxth	r7, r7
 801a318:	f1b8 0f08 	cmp.w	r8, #8
 801a31c:	f04f 0500 	mov.w	r5, #0
 801a320:	bf18      	it	ne
 801a322:	3701      	addne	r7, #1
 801a324:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a328:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801a32a:	9104      	str	r1, [sp, #16]
 801a32c:	bf18      	it	ne
 801a32e:	f027 0701 	bicne.w	r7, r7, #1
 801a332:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801a334:	bf18      	it	ne
 801a336:	b2bf      	uxthne	r7, r7
 801a338:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801a33c:	e9cd 7900 	strd	r7, r9, [sp]
 801a340:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801a342:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801a344:	47a0      	blx	r4
 801a346:	b019      	add	sp, #100	@ 0x64
 801a348:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a34c:	2300      	movs	r3, #0
 801a34e:	e7c0      	b.n	801a2d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801a350:	2208      	movs	r2, #8
 801a352:	fb92 f3f8 	sdiv	r3, r2, r8
 801a356:	1e5a      	subs	r2, r3, #1
 801a358:	443a      	add	r2, r7
 801a35a:	fb92 f2f3 	sdiv	r2, r2, r3
 801a35e:	fb12 f203 	smulbb	r2, r2, r3
 801a362:	b292      	uxth	r2, r2
 801a364:	e6b0      	b.n	801a0c8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801a366:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801a368:	e6ec      	b.n	801a144 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801a36a:	bf00      	nop
 801a36c:	20002db4 	.word	0x20002db4
 801a370:	20002dbc 	.word	0x20002dbc
 801a374:	20002db6 	.word	0x20002db6
 801a378:	00fff800 	.word	0x00fff800
 801a37c:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a37e:	e779      	b.n	801a274 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801a380:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a382:	b153      	cbz	r3, 801a39a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801a384:	441e      	add	r6, r3
 801a386:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a388:	b2b6      	uxth	r6, r6
 801a38a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801a38e:	f006 0607 	and.w	r6, r6, #7
 801a392:	781a      	ldrb	r2, [r3, #0]
 801a394:	9328      	str	r3, [sp, #160]	@ 0xa0
 801a396:	4132      	asrs	r2, r6
 801a398:	b2d2      	uxtb	r2, r2
 801a39a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a39c:	445b      	add	r3, fp
 801a39e:	930a      	str	r3, [sp, #40]	@ 0x28
 801a3a0:	e706      	b.n	801a1b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801a3a2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a3a4:	2b00      	cmp	r3, #0
 801a3a6:	d1ce      	bne.n	801a346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a3a8:	4b05      	ldr	r3, [pc, #20]	@ (801a3c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801a3aa:	6818      	ldr	r0, [r3, #0]
 801a3ac:	6803      	ldr	r3, [r0, #0]
 801a3ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a3b0:	4798      	blx	r3
 801a3b2:	e7c8      	b.n	801a346 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801a3b4:	2b00      	cmp	r3, #0
 801a3b6:	f43f ae82 	beq.w	801a0be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801a3ba:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801a3be:	e793      	b.n	801a2e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801a3c0:	20002dbc 	.word	0x20002dbc

0801a3c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801a3c4:	b538      	push	{r3, r4, r5, lr}
 801a3c6:	4c15      	ldr	r4, [pc, #84]	@ (801a41c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801a3c8:	7823      	ldrb	r3, [r4, #0]
 801a3ca:	f3bf 8f5b 	dmb	ish
 801a3ce:	07da      	lsls	r2, r3, #31
 801a3d0:	4605      	mov	r5, r0
 801a3d2:	d40b      	bmi.n	801a3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801a3d4:	4620      	mov	r0, r4
 801a3d6:	f007 fefc 	bl	80221d2 <__cxa_guard_acquire>
 801a3da:	b138      	cbz	r0, 801a3ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801a3dc:	4620      	mov	r0, r4
 801a3de:	f007 ff04 	bl	80221ea <__cxa_guard_release>
 801a3e2:	4a0f      	ldr	r2, [pc, #60]	@ (801a420 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801a3e4:	490f      	ldr	r1, [pc, #60]	@ (801a424 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801a3e6:	4810      	ldr	r0, [pc, #64]	@ (801a428 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801a3e8:	f007 feec 	bl	80221c4 <__aeabi_atexit>
 801a3ec:	4c0f      	ldr	r4, [pc, #60]	@ (801a42c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801a3ee:	7823      	ldrb	r3, [r4, #0]
 801a3f0:	f3bf 8f5b 	dmb	ish
 801a3f4:	07db      	lsls	r3, r3, #31
 801a3f6:	d40b      	bmi.n	801a410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801a3f8:	4620      	mov	r0, r4
 801a3fa:	f007 feea 	bl	80221d2 <__cxa_guard_acquire>
 801a3fe:	b138      	cbz	r0, 801a410 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801a400:	4620      	mov	r0, r4
 801a402:	f007 fef2 	bl	80221ea <__cxa_guard_release>
 801a406:	4a06      	ldr	r2, [pc, #24]	@ (801a420 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801a408:	4909      	ldr	r1, [pc, #36]	@ (801a430 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801a40a:	480a      	ldr	r0, [pc, #40]	@ (801a434 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801a40c:	f007 feda 	bl	80221c4 <__aeabi_atexit>
 801a410:	4b05      	ldr	r3, [pc, #20]	@ (801a428 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801a412:	616b      	str	r3, [r5, #20]
 801a414:	4b07      	ldr	r3, [pc, #28]	@ (801a434 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801a416:	61ab      	str	r3, [r5, #24]
 801a418:	bd38      	pop	{r3, r4, r5, pc}
 801a41a:	bf00      	nop
 801a41c:	20002e98 	.word	0x20002e98
 801a420:	20000000 	.word	0x20000000
 801a424:	0801658b 	.word	0x0801658b
 801a428:	20000070 	.word	0x20000070
 801a42c:	20002e9c 	.word	0x20002e9c
 801a430:	08016589 	.word	0x08016589
 801a434:	20000074 	.word	0x20000074

0801a438 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801a438:	b538      	push	{r3, r4, r5, lr}
 801a43a:	4c15      	ldr	r4, [pc, #84]	@ (801a490 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801a43c:	7823      	ldrb	r3, [r4, #0]
 801a43e:	f3bf 8f5b 	dmb	ish
 801a442:	07da      	lsls	r2, r3, #31
 801a444:	4605      	mov	r5, r0
 801a446:	d40b      	bmi.n	801a460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801a448:	4620      	mov	r0, r4
 801a44a:	f007 fec2 	bl	80221d2 <__cxa_guard_acquire>
 801a44e:	b138      	cbz	r0, 801a460 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801a450:	4620      	mov	r0, r4
 801a452:	f007 feca 	bl	80221ea <__cxa_guard_release>
 801a456:	4a0f      	ldr	r2, [pc, #60]	@ (801a494 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801a458:	490f      	ldr	r1, [pc, #60]	@ (801a498 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801a45a:	4810      	ldr	r0, [pc, #64]	@ (801a49c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801a45c:	f007 feb2 	bl	80221c4 <__aeabi_atexit>
 801a460:	4c0f      	ldr	r4, [pc, #60]	@ (801a4a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801a462:	7823      	ldrb	r3, [r4, #0]
 801a464:	f3bf 8f5b 	dmb	ish
 801a468:	07db      	lsls	r3, r3, #31
 801a46a:	d40b      	bmi.n	801a484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801a46c:	4620      	mov	r0, r4
 801a46e:	f007 feb0 	bl	80221d2 <__cxa_guard_acquire>
 801a472:	b138      	cbz	r0, 801a484 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801a474:	4620      	mov	r0, r4
 801a476:	f007 feb8 	bl	80221ea <__cxa_guard_release>
 801a47a:	4a06      	ldr	r2, [pc, #24]	@ (801a494 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801a47c:	4909      	ldr	r1, [pc, #36]	@ (801a4a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801a47e:	480a      	ldr	r0, [pc, #40]	@ (801a4a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801a480:	f007 fea0 	bl	80221c4 <__aeabi_atexit>
 801a484:	4b05      	ldr	r3, [pc, #20]	@ (801a49c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801a486:	60eb      	str	r3, [r5, #12]
 801a488:	4b07      	ldr	r3, [pc, #28]	@ (801a4a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801a48a:	612b      	str	r3, [r5, #16]
 801a48c:	bd38      	pop	{r3, r4, r5, pc}
 801a48e:	bf00      	nop
 801a490:	20002e70 	.word	0x20002e70
 801a494:	20000000 	.word	0x20000000
 801a498:	0801658f 	.word	0x0801658f
 801a49c:	20000048 	.word	0x20000048
 801a4a0:	20002e74 	.word	0x20002e74
 801a4a4:	0801658d 	.word	0x0801658d
 801a4a8:	2000004c 	.word	0x2000004c

0801a4ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801a4ac:	b510      	push	{r4, lr}
 801a4ae:	4604      	mov	r4, r0
 801a4b0:	f7ff ff88 	bl	801a3c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801a4b4:	4620      	mov	r0, r4
 801a4b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a4ba:	f7ff bfbd 	b.w	801a438 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801a4c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801a4c0:	b538      	push	{r3, r4, r5, lr}
 801a4c2:	4c15      	ldr	r4, [pc, #84]	@ (801a518 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801a4c4:	7823      	ldrb	r3, [r4, #0]
 801a4c6:	f3bf 8f5b 	dmb	ish
 801a4ca:	07da      	lsls	r2, r3, #31
 801a4cc:	4605      	mov	r5, r0
 801a4ce:	d40b      	bmi.n	801a4e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801a4d0:	4620      	mov	r0, r4
 801a4d2:	f007 fe7e 	bl	80221d2 <__cxa_guard_acquire>
 801a4d6:	b138      	cbz	r0, 801a4e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801a4d8:	4620      	mov	r0, r4
 801a4da:	f007 fe86 	bl	80221ea <__cxa_guard_release>
 801a4de:	4a0f      	ldr	r2, [pc, #60]	@ (801a51c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801a4e0:	490f      	ldr	r1, [pc, #60]	@ (801a520 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801a4e2:	4810      	ldr	r0, [pc, #64]	@ (801a524 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801a4e4:	f007 fe6e 	bl	80221c4 <__aeabi_atexit>
 801a4e8:	4c0f      	ldr	r4, [pc, #60]	@ (801a528 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801a4ea:	7823      	ldrb	r3, [r4, #0]
 801a4ec:	f3bf 8f5b 	dmb	ish
 801a4f0:	07db      	lsls	r3, r3, #31
 801a4f2:	d40b      	bmi.n	801a50c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801a4f4:	4620      	mov	r0, r4
 801a4f6:	f007 fe6c 	bl	80221d2 <__cxa_guard_acquire>
 801a4fa:	b138      	cbz	r0, 801a50c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801a4fc:	4620      	mov	r0, r4
 801a4fe:	f007 fe74 	bl	80221ea <__cxa_guard_release>
 801a502:	4a06      	ldr	r2, [pc, #24]	@ (801a51c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801a504:	4909      	ldr	r1, [pc, #36]	@ (801a52c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801a506:	480a      	ldr	r0, [pc, #40]	@ (801a530 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801a508:	f007 fe5c 	bl	80221c4 <__aeabi_atexit>
 801a50c:	4b05      	ldr	r3, [pc, #20]	@ (801a524 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801a50e:	626b      	str	r3, [r5, #36]	@ 0x24
 801a510:	4b07      	ldr	r3, [pc, #28]	@ (801a530 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801a512:	62ab      	str	r3, [r5, #40]	@ 0x28
 801a514:	bd38      	pop	{r3, r4, r5, pc}
 801a516:	bf00      	nop
 801a518:	20002ea0 	.word	0x20002ea0
 801a51c:	20000000 	.word	0x20000000
 801a520:	08016583 	.word	0x08016583
 801a524:	20000078 	.word	0x20000078
 801a528:	20002ea4 	.word	0x20002ea4
 801a52c:	08016581 	.word	0x08016581
 801a530:	2000007c 	.word	0x2000007c

0801a534 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801a534:	b538      	push	{r3, r4, r5, lr}
 801a536:	4c15      	ldr	r4, [pc, #84]	@ (801a58c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801a538:	7823      	ldrb	r3, [r4, #0]
 801a53a:	f3bf 8f5b 	dmb	ish
 801a53e:	07da      	lsls	r2, r3, #31
 801a540:	4605      	mov	r5, r0
 801a542:	d40b      	bmi.n	801a55c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801a544:	4620      	mov	r0, r4
 801a546:	f007 fe44 	bl	80221d2 <__cxa_guard_acquire>
 801a54a:	b138      	cbz	r0, 801a55c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801a54c:	4620      	mov	r0, r4
 801a54e:	f007 fe4c 	bl	80221ea <__cxa_guard_release>
 801a552:	4a0f      	ldr	r2, [pc, #60]	@ (801a590 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801a554:	490f      	ldr	r1, [pc, #60]	@ (801a594 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801a556:	4810      	ldr	r0, [pc, #64]	@ (801a598 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801a558:	f007 fe34 	bl	80221c4 <__aeabi_atexit>
 801a55c:	4c0f      	ldr	r4, [pc, #60]	@ (801a59c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801a55e:	7823      	ldrb	r3, [r4, #0]
 801a560:	f3bf 8f5b 	dmb	ish
 801a564:	07db      	lsls	r3, r3, #31
 801a566:	d40b      	bmi.n	801a580 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801a568:	4620      	mov	r0, r4
 801a56a:	f007 fe32 	bl	80221d2 <__cxa_guard_acquire>
 801a56e:	b138      	cbz	r0, 801a580 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801a570:	4620      	mov	r0, r4
 801a572:	f007 fe3a 	bl	80221ea <__cxa_guard_release>
 801a576:	4a06      	ldr	r2, [pc, #24]	@ (801a590 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801a578:	4909      	ldr	r1, [pc, #36]	@ (801a5a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801a57a:	480a      	ldr	r0, [pc, #40]	@ (801a5a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801a57c:	f007 fe22 	bl	80221c4 <__aeabi_atexit>
 801a580:	4b05      	ldr	r3, [pc, #20]	@ (801a598 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801a582:	61eb      	str	r3, [r5, #28]
 801a584:	4b07      	ldr	r3, [pc, #28]	@ (801a5a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801a586:	622b      	str	r3, [r5, #32]
 801a588:	bd38      	pop	{r3, r4, r5, pc}
 801a58a:	bf00      	nop
 801a58c:	20002e78 	.word	0x20002e78
 801a590:	20000000 	.word	0x20000000
 801a594:	08016587 	.word	0x08016587
 801a598:	20000050 	.word	0x20000050
 801a59c:	20002e7c 	.word	0x20002e7c
 801a5a0:	08016585 	.word	0x08016585
 801a5a4:	20000054 	.word	0x20000054

0801a5a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801a5a8:	b510      	push	{r4, lr}
 801a5aa:	4604      	mov	r4, r0
 801a5ac:	f7ff ff88 	bl	801a4c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801a5b0:	4620      	mov	r0, r4
 801a5b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a5b6:	f7ff bfbd 	b.w	801a534 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801a5bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801a5bc:	b538      	push	{r3, r4, r5, lr}
 801a5be:	4c15      	ldr	r4, [pc, #84]	@ (801a614 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801a5c0:	7823      	ldrb	r3, [r4, #0]
 801a5c2:	f3bf 8f5b 	dmb	ish
 801a5c6:	07da      	lsls	r2, r3, #31
 801a5c8:	4605      	mov	r5, r0
 801a5ca:	d40b      	bmi.n	801a5e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801a5cc:	4620      	mov	r0, r4
 801a5ce:	f007 fe00 	bl	80221d2 <__cxa_guard_acquire>
 801a5d2:	b138      	cbz	r0, 801a5e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801a5d4:	4620      	mov	r0, r4
 801a5d6:	f007 fe08 	bl	80221ea <__cxa_guard_release>
 801a5da:	4a0f      	ldr	r2, [pc, #60]	@ (801a618 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801a5dc:	490f      	ldr	r1, [pc, #60]	@ (801a61c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801a5de:	4810      	ldr	r0, [pc, #64]	@ (801a620 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801a5e0:	f007 fdf0 	bl	80221c4 <__aeabi_atexit>
 801a5e4:	4c0f      	ldr	r4, [pc, #60]	@ (801a624 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801a5e6:	7823      	ldrb	r3, [r4, #0]
 801a5e8:	f3bf 8f5b 	dmb	ish
 801a5ec:	07db      	lsls	r3, r3, #31
 801a5ee:	d40b      	bmi.n	801a608 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801a5f0:	4620      	mov	r0, r4
 801a5f2:	f007 fdee 	bl	80221d2 <__cxa_guard_acquire>
 801a5f6:	b138      	cbz	r0, 801a608 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801a5f8:	4620      	mov	r0, r4
 801a5fa:	f007 fdf6 	bl	80221ea <__cxa_guard_release>
 801a5fe:	4a06      	ldr	r2, [pc, #24]	@ (801a618 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801a600:	4909      	ldr	r1, [pc, #36]	@ (801a628 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801a602:	480a      	ldr	r0, [pc, #40]	@ (801a62c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801a604:	f007 fdde 	bl	80221c4 <__aeabi_atexit>
 801a608:	4b05      	ldr	r3, [pc, #20]	@ (801a620 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801a60a:	636b      	str	r3, [r5, #52]	@ 0x34
 801a60c:	4b07      	ldr	r3, [pc, #28]	@ (801a62c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801a60e:	63ab      	str	r3, [r5, #56]	@ 0x38
 801a610:	bd38      	pop	{r3, r4, r5, pc}
 801a612:	bf00      	nop
 801a614:	20002eb0 	.word	0x20002eb0
 801a618:	20000000 	.word	0x20000000
 801a61c:	0801657b 	.word	0x0801657b
 801a620:	20000088 	.word	0x20000088
 801a624:	20002eb4 	.word	0x20002eb4
 801a628:	08016579 	.word	0x08016579
 801a62c:	2000008c 	.word	0x2000008c

0801a630 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801a630:	b538      	push	{r3, r4, r5, lr}
 801a632:	4c15      	ldr	r4, [pc, #84]	@ (801a688 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801a634:	7823      	ldrb	r3, [r4, #0]
 801a636:	f3bf 8f5b 	dmb	ish
 801a63a:	07da      	lsls	r2, r3, #31
 801a63c:	4605      	mov	r5, r0
 801a63e:	d40b      	bmi.n	801a658 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801a640:	4620      	mov	r0, r4
 801a642:	f007 fdc6 	bl	80221d2 <__cxa_guard_acquire>
 801a646:	b138      	cbz	r0, 801a658 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801a648:	4620      	mov	r0, r4
 801a64a:	f007 fdce 	bl	80221ea <__cxa_guard_release>
 801a64e:	4a0f      	ldr	r2, [pc, #60]	@ (801a68c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801a650:	490f      	ldr	r1, [pc, #60]	@ (801a690 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801a652:	4810      	ldr	r0, [pc, #64]	@ (801a694 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801a654:	f007 fdb6 	bl	80221c4 <__aeabi_atexit>
 801a658:	4c0f      	ldr	r4, [pc, #60]	@ (801a698 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801a65a:	7823      	ldrb	r3, [r4, #0]
 801a65c:	f3bf 8f5b 	dmb	ish
 801a660:	07db      	lsls	r3, r3, #31
 801a662:	d40b      	bmi.n	801a67c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801a664:	4620      	mov	r0, r4
 801a666:	f007 fdb4 	bl	80221d2 <__cxa_guard_acquire>
 801a66a:	b138      	cbz	r0, 801a67c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801a66c:	4620      	mov	r0, r4
 801a66e:	f007 fdbc 	bl	80221ea <__cxa_guard_release>
 801a672:	4a06      	ldr	r2, [pc, #24]	@ (801a68c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801a674:	4909      	ldr	r1, [pc, #36]	@ (801a69c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801a676:	480a      	ldr	r0, [pc, #40]	@ (801a6a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801a678:	f007 fda4 	bl	80221c4 <__aeabi_atexit>
 801a67c:	4b05      	ldr	r3, [pc, #20]	@ (801a694 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801a67e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801a680:	4b07      	ldr	r3, [pc, #28]	@ (801a6a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801a682:	632b      	str	r3, [r5, #48]	@ 0x30
 801a684:	bd38      	pop	{r3, r4, r5, pc}
 801a686:	bf00      	nop
 801a688:	20002e80 	.word	0x20002e80
 801a68c:	20000000 	.word	0x20000000
 801a690:	0801657f 	.word	0x0801657f
 801a694:	20000058 	.word	0x20000058
 801a698:	20002e84 	.word	0x20002e84
 801a69c:	0801657d 	.word	0x0801657d
 801a6a0:	2000005c 	.word	0x2000005c

0801a6a4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801a6a4:	b510      	push	{r4, lr}
 801a6a6:	4604      	mov	r4, r0
 801a6a8:	f7ff ff88 	bl	801a5bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801a6ac:	4620      	mov	r0, r4
 801a6ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a6b2:	f7ff bfbd 	b.w	801a630 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801a6b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801a6b8:	b538      	push	{r3, r4, r5, lr}
 801a6ba:	4c15      	ldr	r4, [pc, #84]	@ (801a710 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801a6bc:	7823      	ldrb	r3, [r4, #0]
 801a6be:	f3bf 8f5b 	dmb	ish
 801a6c2:	07da      	lsls	r2, r3, #31
 801a6c4:	4605      	mov	r5, r0
 801a6c6:	d40b      	bmi.n	801a6e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801a6c8:	4620      	mov	r0, r4
 801a6ca:	f007 fd82 	bl	80221d2 <__cxa_guard_acquire>
 801a6ce:	b138      	cbz	r0, 801a6e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801a6d0:	4620      	mov	r0, r4
 801a6d2:	f007 fd8a 	bl	80221ea <__cxa_guard_release>
 801a6d6:	4a0f      	ldr	r2, [pc, #60]	@ (801a714 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801a6d8:	490f      	ldr	r1, [pc, #60]	@ (801a718 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801a6da:	4810      	ldr	r0, [pc, #64]	@ (801a71c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801a6dc:	f007 fd72 	bl	80221c4 <__aeabi_atexit>
 801a6e0:	4c0f      	ldr	r4, [pc, #60]	@ (801a720 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801a6e2:	7823      	ldrb	r3, [r4, #0]
 801a6e4:	f3bf 8f5b 	dmb	ish
 801a6e8:	07db      	lsls	r3, r3, #31
 801a6ea:	d40b      	bmi.n	801a704 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801a6ec:	4620      	mov	r0, r4
 801a6ee:	f007 fd70 	bl	80221d2 <__cxa_guard_acquire>
 801a6f2:	b138      	cbz	r0, 801a704 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801a6f4:	4620      	mov	r0, r4
 801a6f6:	f007 fd78 	bl	80221ea <__cxa_guard_release>
 801a6fa:	4a06      	ldr	r2, [pc, #24]	@ (801a714 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801a6fc:	4909      	ldr	r1, [pc, #36]	@ (801a724 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801a6fe:	480a      	ldr	r0, [pc, #40]	@ (801a728 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801a700:	f007 fd60 	bl	80221c4 <__aeabi_atexit>
 801a704:	4b05      	ldr	r3, [pc, #20]	@ (801a71c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801a706:	656b      	str	r3, [r5, #84]	@ 0x54
 801a708:	4b07      	ldr	r3, [pc, #28]	@ (801a728 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801a70a:	65ab      	str	r3, [r5, #88]	@ 0x58
 801a70c:	bd38      	pop	{r3, r4, r5, pc}
 801a70e:	bf00      	nop
 801a710:	20002eb8 	.word	0x20002eb8
 801a714:	20000000 	.word	0x20000000
 801a718:	0801656b 	.word	0x0801656b
 801a71c:	20000090 	.word	0x20000090
 801a720:	20002ebc 	.word	0x20002ebc
 801a724:	08016569 	.word	0x08016569
 801a728:	20000094 	.word	0x20000094

0801a72c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801a72c:	b538      	push	{r3, r4, r5, lr}
 801a72e:	4c15      	ldr	r4, [pc, #84]	@ (801a784 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801a730:	7823      	ldrb	r3, [r4, #0]
 801a732:	f3bf 8f5b 	dmb	ish
 801a736:	07da      	lsls	r2, r3, #31
 801a738:	4605      	mov	r5, r0
 801a73a:	d40b      	bmi.n	801a754 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801a73c:	4620      	mov	r0, r4
 801a73e:	f007 fd48 	bl	80221d2 <__cxa_guard_acquire>
 801a742:	b138      	cbz	r0, 801a754 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801a744:	4620      	mov	r0, r4
 801a746:	f007 fd50 	bl	80221ea <__cxa_guard_release>
 801a74a:	4a0f      	ldr	r2, [pc, #60]	@ (801a788 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801a74c:	490f      	ldr	r1, [pc, #60]	@ (801a78c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801a74e:	4810      	ldr	r0, [pc, #64]	@ (801a790 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801a750:	f007 fd38 	bl	80221c4 <__aeabi_atexit>
 801a754:	4c0f      	ldr	r4, [pc, #60]	@ (801a794 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801a756:	7823      	ldrb	r3, [r4, #0]
 801a758:	f3bf 8f5b 	dmb	ish
 801a75c:	07db      	lsls	r3, r3, #31
 801a75e:	d40b      	bmi.n	801a778 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801a760:	4620      	mov	r0, r4
 801a762:	f007 fd36 	bl	80221d2 <__cxa_guard_acquire>
 801a766:	b138      	cbz	r0, 801a778 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801a768:	4620      	mov	r0, r4
 801a76a:	f007 fd3e 	bl	80221ea <__cxa_guard_release>
 801a76e:	4a06      	ldr	r2, [pc, #24]	@ (801a788 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801a770:	4909      	ldr	r1, [pc, #36]	@ (801a798 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801a772:	480a      	ldr	r0, [pc, #40]	@ (801a79c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801a774:	f007 fd26 	bl	80221c4 <__aeabi_atexit>
 801a778:	4b05      	ldr	r3, [pc, #20]	@ (801a790 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801a77a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801a77c:	4b07      	ldr	r3, [pc, #28]	@ (801a79c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801a77e:	652b      	str	r3, [r5, #80]	@ 0x50
 801a780:	bd38      	pop	{r3, r4, r5, pc}
 801a782:	bf00      	nop
 801a784:	20002ec0 	.word	0x20002ec0
 801a788:	20000000 	.word	0x20000000
 801a78c:	0801656f 	.word	0x0801656f
 801a790:	20000098 	.word	0x20000098
 801a794:	20002ec4 	.word	0x20002ec4
 801a798:	0801656d 	.word	0x0801656d
 801a79c:	2000009c 	.word	0x2000009c

0801a7a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801a7a0:	b538      	push	{r3, r4, r5, lr}
 801a7a2:	4c15      	ldr	r4, [pc, #84]	@ (801a7f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801a7a4:	7823      	ldrb	r3, [r4, #0]
 801a7a6:	f3bf 8f5b 	dmb	ish
 801a7aa:	07da      	lsls	r2, r3, #31
 801a7ac:	4605      	mov	r5, r0
 801a7ae:	d40b      	bmi.n	801a7c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801a7b0:	4620      	mov	r0, r4
 801a7b2:	f007 fd0e 	bl	80221d2 <__cxa_guard_acquire>
 801a7b6:	b138      	cbz	r0, 801a7c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801a7b8:	4620      	mov	r0, r4
 801a7ba:	f007 fd16 	bl	80221ea <__cxa_guard_release>
 801a7be:	4a0f      	ldr	r2, [pc, #60]	@ (801a7fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801a7c0:	490f      	ldr	r1, [pc, #60]	@ (801a800 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801a7c2:	4810      	ldr	r0, [pc, #64]	@ (801a804 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a7c4:	f007 fcfe 	bl	80221c4 <__aeabi_atexit>
 801a7c8:	4c0f      	ldr	r4, [pc, #60]	@ (801a808 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801a7ca:	7823      	ldrb	r3, [r4, #0]
 801a7cc:	f3bf 8f5b 	dmb	ish
 801a7d0:	07db      	lsls	r3, r3, #31
 801a7d2:	d40b      	bmi.n	801a7ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801a7d4:	4620      	mov	r0, r4
 801a7d6:	f007 fcfc 	bl	80221d2 <__cxa_guard_acquire>
 801a7da:	b138      	cbz	r0, 801a7ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801a7dc:	4620      	mov	r0, r4
 801a7de:	f007 fd04 	bl	80221ea <__cxa_guard_release>
 801a7e2:	4a06      	ldr	r2, [pc, #24]	@ (801a7fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801a7e4:	4909      	ldr	r1, [pc, #36]	@ (801a80c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801a7e6:	480a      	ldr	r0, [pc, #40]	@ (801a810 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801a7e8:	f007 fcec 	bl	80221c4 <__aeabi_atexit>
 801a7ec:	4b05      	ldr	r3, [pc, #20]	@ (801a804 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801a7ee:	646b      	str	r3, [r5, #68]	@ 0x44
 801a7f0:	4b07      	ldr	r3, [pc, #28]	@ (801a810 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801a7f2:	64ab      	str	r3, [r5, #72]	@ 0x48
 801a7f4:	bd38      	pop	{r3, r4, r5, pc}
 801a7f6:	bf00      	nop
 801a7f8:	20002e88 	.word	0x20002e88
 801a7fc:	20000000 	.word	0x20000000
 801a800:	08016573 	.word	0x08016573
 801a804:	20000060 	.word	0x20000060
 801a808:	20002e8c 	.word	0x20002e8c
 801a80c:	08016571 	.word	0x08016571
 801a810:	20000064 	.word	0x20000064

0801a814 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801a814:	b538      	push	{r3, r4, r5, lr}
 801a816:	4c15      	ldr	r4, [pc, #84]	@ (801a86c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801a818:	7823      	ldrb	r3, [r4, #0]
 801a81a:	f3bf 8f5b 	dmb	ish
 801a81e:	07da      	lsls	r2, r3, #31
 801a820:	4605      	mov	r5, r0
 801a822:	d40b      	bmi.n	801a83c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a824:	4620      	mov	r0, r4
 801a826:	f007 fcd4 	bl	80221d2 <__cxa_guard_acquire>
 801a82a:	b138      	cbz	r0, 801a83c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801a82c:	4620      	mov	r0, r4
 801a82e:	f007 fcdc 	bl	80221ea <__cxa_guard_release>
 801a832:	4a0f      	ldr	r2, [pc, #60]	@ (801a870 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a834:	490f      	ldr	r1, [pc, #60]	@ (801a874 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801a836:	4810      	ldr	r0, [pc, #64]	@ (801a878 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a838:	f007 fcc4 	bl	80221c4 <__aeabi_atexit>
 801a83c:	4c0f      	ldr	r4, [pc, #60]	@ (801a87c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801a83e:	7823      	ldrb	r3, [r4, #0]
 801a840:	f3bf 8f5b 	dmb	ish
 801a844:	07db      	lsls	r3, r3, #31
 801a846:	d40b      	bmi.n	801a860 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a848:	4620      	mov	r0, r4
 801a84a:	f007 fcc2 	bl	80221d2 <__cxa_guard_acquire>
 801a84e:	b138      	cbz	r0, 801a860 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801a850:	4620      	mov	r0, r4
 801a852:	f007 fcca 	bl	80221ea <__cxa_guard_release>
 801a856:	4a06      	ldr	r2, [pc, #24]	@ (801a870 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801a858:	4909      	ldr	r1, [pc, #36]	@ (801a880 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801a85a:	480a      	ldr	r0, [pc, #40]	@ (801a884 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a85c:	f007 fcb2 	bl	80221c4 <__aeabi_atexit>
 801a860:	4b05      	ldr	r3, [pc, #20]	@ (801a878 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801a862:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801a864:	4b07      	ldr	r3, [pc, #28]	@ (801a884 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801a866:	642b      	str	r3, [r5, #64]	@ 0x40
 801a868:	bd38      	pop	{r3, r4, r5, pc}
 801a86a:	bf00      	nop
 801a86c:	20002ea8 	.word	0x20002ea8
 801a870:	20000000 	.word	0x20000000
 801a874:	08016577 	.word	0x08016577
 801a878:	20000080 	.word	0x20000080
 801a87c:	20002eac 	.word	0x20002eac
 801a880:	08016575 	.word	0x08016575
 801a884:	20000084 	.word	0x20000084

0801a888 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801a888:	b510      	push	{r4, lr}
 801a88a:	4604      	mov	r4, r0
 801a88c:	f7ff ff14 	bl	801a6b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801a890:	4620      	mov	r0, r4
 801a892:	f7ff ff85 	bl	801a7a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801a896:	4620      	mov	r0, r4
 801a898:	f7ff ff48 	bl	801a72c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801a89c:	4620      	mov	r0, r4
 801a89e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a8a2:	f7ff bfb7 	b.w	801a814 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801a8a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801a8a8:	b538      	push	{r3, r4, r5, lr}
 801a8aa:	4c15      	ldr	r4, [pc, #84]	@ (801a900 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801a8ac:	7823      	ldrb	r3, [r4, #0]
 801a8ae:	f3bf 8f5b 	dmb	ish
 801a8b2:	07da      	lsls	r2, r3, #31
 801a8b4:	4605      	mov	r5, r0
 801a8b6:	d40b      	bmi.n	801a8d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a8b8:	4620      	mov	r0, r4
 801a8ba:	f007 fc8a 	bl	80221d2 <__cxa_guard_acquire>
 801a8be:	b138      	cbz	r0, 801a8d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801a8c0:	4620      	mov	r0, r4
 801a8c2:	f007 fc92 	bl	80221ea <__cxa_guard_release>
 801a8c6:	4a0f      	ldr	r2, [pc, #60]	@ (801a904 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a8c8:	490f      	ldr	r1, [pc, #60]	@ (801a908 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801a8ca:	4810      	ldr	r0, [pc, #64]	@ (801a90c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a8cc:	f007 fc7a 	bl	80221c4 <__aeabi_atexit>
 801a8d0:	4c0f      	ldr	r4, [pc, #60]	@ (801a910 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801a8d2:	7823      	ldrb	r3, [r4, #0]
 801a8d4:	f3bf 8f5b 	dmb	ish
 801a8d8:	07db      	lsls	r3, r3, #31
 801a8da:	d40b      	bmi.n	801a8f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a8dc:	4620      	mov	r0, r4
 801a8de:	f007 fc78 	bl	80221d2 <__cxa_guard_acquire>
 801a8e2:	b138      	cbz	r0, 801a8f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801a8e4:	4620      	mov	r0, r4
 801a8e6:	f007 fc80 	bl	80221ea <__cxa_guard_release>
 801a8ea:	4a06      	ldr	r2, [pc, #24]	@ (801a904 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801a8ec:	4909      	ldr	r1, [pc, #36]	@ (801a914 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801a8ee:	480a      	ldr	r0, [pc, #40]	@ (801a918 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a8f0:	f007 fc68 	bl	80221c4 <__aeabi_atexit>
 801a8f4:	4b05      	ldr	r3, [pc, #20]	@ (801a90c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801a8f6:	666b      	str	r3, [r5, #100]	@ 0x64
 801a8f8:	4b07      	ldr	r3, [pc, #28]	@ (801a918 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801a8fa:	66ab      	str	r3, [r5, #104]	@ 0x68
 801a8fc:	bd38      	pop	{r3, r4, r5, pc}
 801a8fe:	bf00      	nop
 801a900:	20002e90 	.word	0x20002e90
 801a904:	20000000 	.word	0x20000000
 801a908:	08016563 	.word	0x08016563
 801a90c:	20000068 	.word	0x20000068
 801a910:	20002e94 	.word	0x20002e94
 801a914:	08016561 	.word	0x08016561
 801a918:	2000006c 	.word	0x2000006c

0801a91c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801a91c:	b538      	push	{r3, r4, r5, lr}
 801a91e:	4c15      	ldr	r4, [pc, #84]	@ (801a974 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801a920:	7823      	ldrb	r3, [r4, #0]
 801a922:	f3bf 8f5b 	dmb	ish
 801a926:	07da      	lsls	r2, r3, #31
 801a928:	4605      	mov	r5, r0
 801a92a:	d40b      	bmi.n	801a944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a92c:	4620      	mov	r0, r4
 801a92e:	f007 fc50 	bl	80221d2 <__cxa_guard_acquire>
 801a932:	b138      	cbz	r0, 801a944 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801a934:	4620      	mov	r0, r4
 801a936:	f007 fc58 	bl	80221ea <__cxa_guard_release>
 801a93a:	4a0f      	ldr	r2, [pc, #60]	@ (801a978 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a93c:	490f      	ldr	r1, [pc, #60]	@ (801a97c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801a93e:	4810      	ldr	r0, [pc, #64]	@ (801a980 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a940:	f007 fc40 	bl	80221c4 <__aeabi_atexit>
 801a944:	4c0f      	ldr	r4, [pc, #60]	@ (801a984 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801a946:	7823      	ldrb	r3, [r4, #0]
 801a948:	f3bf 8f5b 	dmb	ish
 801a94c:	07db      	lsls	r3, r3, #31
 801a94e:	d40b      	bmi.n	801a968 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a950:	4620      	mov	r0, r4
 801a952:	f007 fc3e 	bl	80221d2 <__cxa_guard_acquire>
 801a956:	b138      	cbz	r0, 801a968 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801a958:	4620      	mov	r0, r4
 801a95a:	f007 fc46 	bl	80221ea <__cxa_guard_release>
 801a95e:	4a06      	ldr	r2, [pc, #24]	@ (801a978 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801a960:	4909      	ldr	r1, [pc, #36]	@ (801a988 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801a962:	480a      	ldr	r0, [pc, #40]	@ (801a98c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a964:	f007 fc2e 	bl	80221c4 <__aeabi_atexit>
 801a968:	4b05      	ldr	r3, [pc, #20]	@ (801a980 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801a96a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801a96c:	4b07      	ldr	r3, [pc, #28]	@ (801a98c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801a96e:	662b      	str	r3, [r5, #96]	@ 0x60
 801a970:	bd38      	pop	{r3, r4, r5, pc}
 801a972:	bf00      	nop
 801a974:	20002e68 	.word	0x20002e68
 801a978:	20000000 	.word	0x20000000
 801a97c:	08016567 	.word	0x08016567
 801a980:	20000040 	.word	0x20000040
 801a984:	20002e6c 	.word	0x20002e6c
 801a988:	08016565 	.word	0x08016565
 801a98c:	20000044 	.word	0x20000044

0801a990 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801a990:	b510      	push	{r4, lr}
 801a992:	4604      	mov	r4, r0
 801a994:	f7ff ff88 	bl	801a8a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801a998:	4620      	mov	r0, r4
 801a99a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801a99e:	f7ff bfbd 	b.w	801a91c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801a9a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801a9a4:	b538      	push	{r3, r4, r5, lr}
 801a9a6:	4c15      	ldr	r4, [pc, #84]	@ (801a9fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801a9a8:	7823      	ldrb	r3, [r4, #0]
 801a9aa:	f3bf 8f5b 	dmb	ish
 801a9ae:	07da      	lsls	r2, r3, #31
 801a9b0:	4605      	mov	r5, r0
 801a9b2:	d40b      	bmi.n	801a9cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a9b4:	4620      	mov	r0, r4
 801a9b6:	f007 fc0c 	bl	80221d2 <__cxa_guard_acquire>
 801a9ba:	b138      	cbz	r0, 801a9cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801a9bc:	4620      	mov	r0, r4
 801a9be:	f007 fc14 	bl	80221ea <__cxa_guard_release>
 801a9c2:	4a0f      	ldr	r2, [pc, #60]	@ (801aa00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a9c4:	490f      	ldr	r1, [pc, #60]	@ (801aa04 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801a9c6:	4810      	ldr	r0, [pc, #64]	@ (801aa08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a9c8:	f007 fbfc 	bl	80221c4 <__aeabi_atexit>
 801a9cc:	4c0f      	ldr	r4, [pc, #60]	@ (801aa0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801a9ce:	7823      	ldrb	r3, [r4, #0]
 801a9d0:	f3bf 8f5b 	dmb	ish
 801a9d4:	07db      	lsls	r3, r3, #31
 801a9d6:	d40b      	bmi.n	801a9f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a9d8:	4620      	mov	r0, r4
 801a9da:	f007 fbfa 	bl	80221d2 <__cxa_guard_acquire>
 801a9de:	b138      	cbz	r0, 801a9f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801a9e0:	4620      	mov	r0, r4
 801a9e2:	f007 fc02 	bl	80221ea <__cxa_guard_release>
 801a9e6:	4a06      	ldr	r2, [pc, #24]	@ (801aa00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801a9e8:	4909      	ldr	r1, [pc, #36]	@ (801aa10 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801a9ea:	480a      	ldr	r0, [pc, #40]	@ (801aa14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a9ec:	f007 fbea 	bl	80221c4 <__aeabi_atexit>
 801a9f0:	4b05      	ldr	r3, [pc, #20]	@ (801aa08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801a9f2:	676b      	str	r3, [r5, #116]	@ 0x74
 801a9f4:	4b07      	ldr	r3, [pc, #28]	@ (801aa14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801a9f6:	67ab      	str	r3, [r5, #120]	@ 0x78
 801a9f8:	bd38      	pop	{r3, r4, r5, pc}
 801a9fa:	bf00      	nop
 801a9fc:	20002e60 	.word	0x20002e60
 801aa00:	20000000 	.word	0x20000000
 801aa04:	0801655b 	.word	0x0801655b
 801aa08:	20000038 	.word	0x20000038
 801aa0c:	20002e64 	.word	0x20002e64
 801aa10:	08016559 	.word	0x08016559
 801aa14:	2000003c 	.word	0x2000003c

0801aa18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801aa18:	b538      	push	{r3, r4, r5, lr}
 801aa1a:	4c15      	ldr	r4, [pc, #84]	@ (801aa70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801aa1c:	7823      	ldrb	r3, [r4, #0]
 801aa1e:	f3bf 8f5b 	dmb	ish
 801aa22:	07da      	lsls	r2, r3, #31
 801aa24:	4605      	mov	r5, r0
 801aa26:	d40b      	bmi.n	801aa40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801aa28:	4620      	mov	r0, r4
 801aa2a:	f007 fbd2 	bl	80221d2 <__cxa_guard_acquire>
 801aa2e:	b138      	cbz	r0, 801aa40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801aa30:	4620      	mov	r0, r4
 801aa32:	f007 fbda 	bl	80221ea <__cxa_guard_release>
 801aa36:	4a0f      	ldr	r2, [pc, #60]	@ (801aa74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801aa38:	490f      	ldr	r1, [pc, #60]	@ (801aa78 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801aa3a:	4810      	ldr	r0, [pc, #64]	@ (801aa7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801aa3c:	f007 fbc2 	bl	80221c4 <__aeabi_atexit>
 801aa40:	4c0f      	ldr	r4, [pc, #60]	@ (801aa80 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801aa42:	7823      	ldrb	r3, [r4, #0]
 801aa44:	f3bf 8f5b 	dmb	ish
 801aa48:	07db      	lsls	r3, r3, #31
 801aa4a:	d40b      	bmi.n	801aa64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801aa4c:	4620      	mov	r0, r4
 801aa4e:	f007 fbc0 	bl	80221d2 <__cxa_guard_acquire>
 801aa52:	b138      	cbz	r0, 801aa64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801aa54:	4620      	mov	r0, r4
 801aa56:	f007 fbc8 	bl	80221ea <__cxa_guard_release>
 801aa5a:	4a06      	ldr	r2, [pc, #24]	@ (801aa74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801aa5c:	4909      	ldr	r1, [pc, #36]	@ (801aa84 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801aa5e:	480a      	ldr	r0, [pc, #40]	@ (801aa88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801aa60:	f007 fbb0 	bl	80221c4 <__aeabi_atexit>
 801aa64:	4b05      	ldr	r3, [pc, #20]	@ (801aa7c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801aa66:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801aa68:	4b07      	ldr	r3, [pc, #28]	@ (801aa88 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801aa6a:	672b      	str	r3, [r5, #112]	@ 0x70
 801aa6c:	bd38      	pop	{r3, r4, r5, pc}
 801aa6e:	bf00      	nop
 801aa70:	20002e58 	.word	0x20002e58
 801aa74:	20000000 	.word	0x20000000
 801aa78:	0801655f 	.word	0x0801655f
 801aa7c:	20000030 	.word	0x20000030
 801aa80:	20002e5c 	.word	0x20002e5c
 801aa84:	0801655d 	.word	0x0801655d
 801aa88:	20000034 	.word	0x20000034

0801aa8c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801aa8c:	b510      	push	{r4, lr}
 801aa8e:	4604      	mov	r4, r0
 801aa90:	f7ff ff88 	bl	801a9a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801aa94:	4620      	mov	r0, r4
 801aa96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aa9a:	f7ff bfbd 	b.w	801aa18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801aa9e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801aa9e:	b510      	push	{r4, lr}
 801aaa0:	4604      	mov	r4, r0
 801aaa2:	f7ff fff3 	bl	801aa8c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801aaa6:	4620      	mov	r0, r4
 801aaa8:	f7ff ff72 	bl	801a990 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801aaac:	4620      	mov	r0, r4
 801aaae:	f7ff fdf9 	bl	801a6a4 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801aab2:	4620      	mov	r0, r4
 801aab4:	f7ff fcfa 	bl	801a4ac <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801aab8:	4620      	mov	r0, r4
 801aaba:	f7ff fd75 	bl	801a5a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801aabe:	4620      	mov	r0, r4
 801aac0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aac4:	f7ff bee0 	b.w	801a888 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801aac8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801aac8:	b538      	push	{r3, r4, r5, lr}
 801aaca:	4c0b      	ldr	r4, [pc, #44]	@ (801aaf8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801aacc:	7823      	ldrb	r3, [r4, #0]
 801aace:	f3bf 8f5b 	dmb	ish
 801aad2:	07db      	lsls	r3, r3, #31
 801aad4:	4605      	mov	r5, r0
 801aad6:	d40b      	bmi.n	801aaf0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801aad8:	4620      	mov	r0, r4
 801aada:	f007 fb7a 	bl	80221d2 <__cxa_guard_acquire>
 801aade:	b138      	cbz	r0, 801aaf0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801aae0:	4620      	mov	r0, r4
 801aae2:	f007 fb82 	bl	80221ea <__cxa_guard_release>
 801aae6:	4a05      	ldr	r2, [pc, #20]	@ (801aafc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801aae8:	4905      	ldr	r1, [pc, #20]	@ (801ab00 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801aaea:	4806      	ldr	r0, [pc, #24]	@ (801ab04 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801aaec:	f007 fb6a 	bl	80221c4 <__aeabi_atexit>
 801aaf0:	4b04      	ldr	r3, [pc, #16]	@ (801ab04 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801aaf2:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801aaf4:	bd38      	pop	{r3, r4, r5, pc}
 801aaf6:	bf00      	nop
 801aaf8:	20002e4c 	.word	0x20002e4c
 801aafc:	20000000 	.word	0x20000000
 801ab00:	08016557 	.word	0x08016557
 801ab04:	20000028 	.word	0x20000028

0801ab08 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801ab08:	b538      	push	{r3, r4, r5, lr}
 801ab0a:	4c0b      	ldr	r4, [pc, #44]	@ (801ab38 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801ab0c:	7823      	ldrb	r3, [r4, #0]
 801ab0e:	f3bf 8f5b 	dmb	ish
 801ab12:	07db      	lsls	r3, r3, #31
 801ab14:	4605      	mov	r5, r0
 801ab16:	d40b      	bmi.n	801ab30 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ab18:	4620      	mov	r0, r4
 801ab1a:	f007 fb5a 	bl	80221d2 <__cxa_guard_acquire>
 801ab1e:	b138      	cbz	r0, 801ab30 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801ab20:	4620      	mov	r0, r4
 801ab22:	f007 fb62 	bl	80221ea <__cxa_guard_release>
 801ab26:	4a05      	ldr	r2, [pc, #20]	@ (801ab3c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801ab28:	4905      	ldr	r1, [pc, #20]	@ (801ab40 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801ab2a:	4806      	ldr	r0, [pc, #24]	@ (801ab44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ab2c:	f007 fb4a 	bl	80221c4 <__aeabi_atexit>
 801ab30:	4b04      	ldr	r3, [pc, #16]	@ (801ab44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801ab32:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801ab36:	bd38      	pop	{r3, r4, r5, pc}
 801ab38:	20002e50 	.word	0x20002e50
 801ab3c:	20000000 	.word	0x20000000
 801ab40:	08016555 	.word	0x08016555
 801ab44:	2000002c 	.word	0x2000002c

0801ab48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801ab48:	b570      	push	{r4, r5, r6, lr}
 801ab4a:	4d0d      	ldr	r5, [pc, #52]	@ (801ab80 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801ab4c:	4c0d      	ldr	r4, [pc, #52]	@ (801ab84 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801ab4e:	782b      	ldrb	r3, [r5, #0]
 801ab50:	f3bf 8f5b 	dmb	ish
 801ab54:	f013 0f01 	tst.w	r3, #1
 801ab58:	4606      	mov	r6, r0
 801ab5a:	d10d      	bne.n	801ab78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ab5c:	4628      	mov	r0, r5
 801ab5e:	f007 fb38 	bl	80221d2 <__cxa_guard_acquire>
 801ab62:	b148      	cbz	r0, 801ab78 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801ab64:	4b08      	ldr	r3, [pc, #32]	@ (801ab88 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801ab66:	6023      	str	r3, [r4, #0]
 801ab68:	4628      	mov	r0, r5
 801ab6a:	f007 fb3e 	bl	80221ea <__cxa_guard_release>
 801ab6e:	4a07      	ldr	r2, [pc, #28]	@ (801ab8c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801ab70:	4907      	ldr	r1, [pc, #28]	@ (801ab90 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801ab72:	4620      	mov	r0, r4
 801ab74:	f007 fb26 	bl	80221c4 <__aeabi_atexit>
 801ab78:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801ab7c:	bd70      	pop	{r4, r5, r6, pc}
 801ab7e:	bf00      	nop
 801ab80:	20002e54 	.word	0x20002e54
 801ab84:	20002fcc 	.word	0x20002fcc
 801ab88:	08025434 	.word	0x08025434
 801ab8c:	20000000 	.word	0x20000000
 801ab90:	08016553 	.word	0x08016553

0801ab94 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801ab94:	b510      	push	{r4, lr}
 801ab96:	4604      	mov	r4, r0
 801ab98:	f7ff ff96 	bl	801aac8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801ab9c:	4620      	mov	r0, r4
 801ab9e:	f7ff ffb3 	bl	801ab08 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801aba2:	4620      	mov	r0, r4
 801aba4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801aba8:	f7ff bfce 	b.w	801ab48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801abac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801abac:	b570      	push	{r4, r5, r6, lr}
 801abae:	4d0d      	ldr	r5, [pc, #52]	@ (801abe4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801abb0:	4c0d      	ldr	r4, [pc, #52]	@ (801abe8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801abb2:	782b      	ldrb	r3, [r5, #0]
 801abb4:	f3bf 8f5b 	dmb	ish
 801abb8:	f013 0f01 	tst.w	r3, #1
 801abbc:	4606      	mov	r6, r0
 801abbe:	d10d      	bne.n	801abdc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801abc0:	4628      	mov	r0, r5
 801abc2:	f007 fb06 	bl	80221d2 <__cxa_guard_acquire>
 801abc6:	b148      	cbz	r0, 801abdc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801abc8:	4b08      	ldr	r3, [pc, #32]	@ (801abec <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801abca:	6023      	str	r3, [r4, #0]
 801abcc:	4628      	mov	r0, r5
 801abce:	f007 fb0c 	bl	80221ea <__cxa_guard_release>
 801abd2:	4a07      	ldr	r2, [pc, #28]	@ (801abf0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801abd4:	4907      	ldr	r1, [pc, #28]	@ (801abf4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801abd6:	4620      	mov	r0, r4
 801abd8:	f007 faf4 	bl	80221c4 <__aeabi_atexit>
 801abdc:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801abe0:	bd70      	pop	{r4, r5, r6, pc}
 801abe2:	bf00      	nop
 801abe4:	20002e48 	.word	0x20002e48
 801abe8:	20002ec8 	.word	0x20002ec8
 801abec:	08025450 	.word	0x08025450
 801abf0:	20000000 	.word	0x20000000
 801abf4:	08016551 	.word	0x08016551

0801abf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801abf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abfc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801ac00:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801ac04:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801ac08:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801ac0c:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801ac10:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801ac14:	8808      	ldrh	r0, [r1, #0]
 801ac16:	fb05 4c0e 	mla	ip, r5, lr, r4
 801ac1a:	2d00      	cmp	r5, #0
 801ac1c:	eb02 0a0c 	add.w	sl, r2, ip
 801ac20:	f2c0 80b0 	blt.w	801ad84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ac24:	45ab      	cmp	fp, r5
 801ac26:	f340 80ad 	ble.w	801ad84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801ac2a:	2c00      	cmp	r4, #0
 801ac2c:	f2c0 80a8 	blt.w	801ad80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ac30:	45a6      	cmp	lr, r4
 801ac32:	f340 80a5 	ble.w	801ad80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801ac36:	f812 200c 	ldrb.w	r2, [r2, ip]
 801ac3a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801ac3e:	1c62      	adds	r2, r4, #1
 801ac40:	f100 80a3 	bmi.w	801ad8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ac44:	4596      	cmp	lr, r2
 801ac46:	f340 80a0 	ble.w	801ad8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ac4a:	f1b9 0f00 	cmp.w	r9, #0
 801ac4e:	f000 809c 	beq.w	801ad8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ac52:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ac56:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ac5a:	3501      	adds	r5, #1
 801ac5c:	f100 8099 	bmi.w	801ad92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ac60:	45ab      	cmp	fp, r5
 801ac62:	f340 8096 	ble.w	801ad92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ac66:	2f00      	cmp	r7, #0
 801ac68:	f000 8093 	beq.w	801ad92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ac6c:	2c00      	cmp	r4, #0
 801ac6e:	f2c0 808e 	blt.w	801ad8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ac72:	45a6      	cmp	lr, r4
 801ac74:	f340 808b 	ble.w	801ad8e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ac78:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ac7c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ac80:	3401      	adds	r4, #1
 801ac82:	f100 8089 	bmi.w	801ad98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ac86:	45a6      	cmp	lr, r4
 801ac88:	f340 8086 	ble.w	801ad98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ac8c:	f1b9 0f00 	cmp.w	r9, #0
 801ac90:	f000 8082 	beq.w	801ad98 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ac94:	44d6      	add	lr, sl
 801ac96:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ac9a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ac9e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801aca2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801aca6:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801acaa:	fb19 fe07 	smulbb	lr, r9, r7
 801acae:	ea44 0808 	orr.w	r8, r4, r8
 801acb2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801acb6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801acba:	f1c7 0210 	rsb	r2, r7, #16
 801acbe:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801acc2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801acc6:	ea44 0c0c 	orr.w	ip, r4, ip
 801acca:	eba2 0209 	sub.w	r2, r2, r9
 801acce:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801acd2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801acd6:	fb04 f40c 	mul.w	r4, r4, ip
 801acda:	fb02 4808 	mla	r8, r2, r8, r4
 801acde:	041a      	lsls	r2, r3, #16
 801ace0:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ace4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ace8:	4313      	orrs	r3, r2
 801acea:	042a      	lsls	r2, r5, #16
 801acec:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801acf0:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801acf4:	fb0e 8303 	mla	r3, lr, r3, r8
 801acf8:	432a      	orrs	r2, r5
 801acfa:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801acfe:	fb07 3202 	mla	r2, r7, r2, r3
 801ad02:	0d53      	lsrs	r3, r2, #21
 801ad04:	0952      	lsrs	r2, r2, #5
 801ad06:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ad0a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ad0e:	431a      	orrs	r2, r3
 801ad10:	b293      	uxth	r3, r2
 801ad12:	b2b4      	uxth	r4, r6
 801ad14:	1202      	asrs	r2, r0, #8
 801ad16:	43f6      	mvns	r6, r6
 801ad18:	b2f6      	uxtb	r6, r6
 801ad1a:	121d      	asrs	r5, r3, #8
 801ad1c:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ad20:	fb12 f206 	smulbb	r2, r2, r6
 801ad24:	10c7      	asrs	r7, r0, #3
 801ad26:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ad2a:	00c0      	lsls	r0, r0, #3
 801ad2c:	fb05 2504 	mla	r5, r5, r4, r2
 801ad30:	b2c0      	uxtb	r0, r0
 801ad32:	10da      	asrs	r2, r3, #3
 801ad34:	00db      	lsls	r3, r3, #3
 801ad36:	b2db      	uxtb	r3, r3
 801ad38:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ad3c:	fb10 f006 	smulbb	r0, r0, r6
 801ad40:	b2ad      	uxth	r5, r5
 801ad42:	fb03 0004 	mla	r0, r3, r4, r0
 801ad46:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ad4a:	fb17 f706 	smulbb	r7, r7, r6
 801ad4e:	b280      	uxth	r0, r0
 801ad50:	1c6b      	adds	r3, r5, #1
 801ad52:	fb02 7204 	mla	r2, r2, r4, r7
 801ad56:	b292      	uxth	r2, r2
 801ad58:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ad5c:	1c43      	adds	r3, r0, #1
 801ad5e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ad62:	1c50      	adds	r0, r2, #1
 801ad64:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ad68:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ad6c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad70:	0952      	lsrs	r2, r2, #5
 801ad72:	432b      	orrs	r3, r5
 801ad74:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ad78:	4313      	orrs	r3, r2
 801ad7a:	800b      	strh	r3, [r1, #0]
 801ad7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad80:	4680      	mov	r8, r0
 801ad82:	e75c      	b.n	801ac3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801ad84:	4684      	mov	ip, r0
 801ad86:	4680      	mov	r8, r0
 801ad88:	e767      	b.n	801ac5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ad8a:	4684      	mov	ip, r0
 801ad8c:	e765      	b.n	801ac5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801ad8e:	4605      	mov	r5, r0
 801ad90:	e776      	b.n	801ac80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801ad92:	4603      	mov	r3, r0
 801ad94:	4605      	mov	r5, r0
 801ad96:	e782      	b.n	801ac9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801ad98:	4603      	mov	r3, r0
 801ad9a:	e780      	b.n	801ac9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801ad9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ada0:	b099      	sub	sp, #100	@ 0x64
 801ada2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801ada6:	9215      	str	r2, [sp, #84]	@ 0x54
 801ada8:	9309      	str	r3, [sp, #36]	@ 0x24
 801adaa:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801adac:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801adb0:	930d      	str	r3, [sp, #52]	@ 0x34
 801adb2:	910c      	str	r1, [sp, #48]	@ 0x30
 801adb4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801adb8:	9016      	str	r0, [sp, #88]	@ 0x58
 801adba:	6850      	ldr	r0, [r2, #4]
 801adbc:	6812      	ldr	r2, [r2, #0]
 801adbe:	fb00 1303 	mla	r3, r0, r3, r1
 801adc2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801adc6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801adc8:	681b      	ldr	r3, [r3, #0]
 801adca:	930b      	str	r3, [sp, #44]	@ 0x2c
 801adcc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801adce:	685e      	ldr	r6, [r3, #4]
 801add0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801add2:	43db      	mvns	r3, r3
 801add4:	b2db      	uxtb	r3, r3
 801add6:	3604      	adds	r6, #4
 801add8:	930a      	str	r3, [sp, #40]	@ 0x28
 801adda:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801addc:	2b00      	cmp	r3, #0
 801adde:	dc03      	bgt.n	801ade8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ade0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801ade2:	2b00      	cmp	r3, #0
 801ade4:	f340 8225 	ble.w	801b232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ade8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801adea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801adee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801adf2:	1e48      	subs	r0, r1, #1
 801adf4:	1e57      	subs	r7, r2, #1
 801adf6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801adf8:	2b00      	cmp	r3, #0
 801adfa:	f340 80e3 	ble.w	801afc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801adfe:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ae02:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ae06:	d406      	bmi.n	801ae16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ae08:	4584      	cmp	ip, r0
 801ae0a:	da04      	bge.n	801ae16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ae0c:	2b00      	cmp	r3, #0
 801ae0e:	db02      	blt.n	801ae16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ae10:	42bb      	cmp	r3, r7
 801ae12:	f2c0 80d8 	blt.w	801afc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ae16:	f11c 0c01 	adds.w	ip, ip, #1
 801ae1a:	f100 80c9 	bmi.w	801afb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ae1e:	4561      	cmp	r1, ip
 801ae20:	f2c0 80c6 	blt.w	801afb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ae24:	3301      	adds	r3, #1
 801ae26:	f100 80c3 	bmi.w	801afb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ae2a:	429a      	cmp	r2, r3
 801ae2c:	f2c0 80c0 	blt.w	801afb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ae30:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801ae34:	4647      	mov	r7, r8
 801ae36:	f1bb 0f00 	cmp.w	fp, #0
 801ae3a:	f340 80e3 	ble.w	801b004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801ae3e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801ae40:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ae42:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ae46:	689b      	ldr	r3, [r3, #8]
 801ae48:	ea5f 422a 	movs.w	r2, sl, asr #16
 801ae4c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ae50:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801ae54:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ae58:	f100 8121 	bmi.w	801b09e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ae5c:	f103 39ff 	add.w	r9, r3, #4294967295
 801ae60:	454a      	cmp	r2, r9
 801ae62:	f280 811c 	bge.w	801b09e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ae66:	f1bc 0f00 	cmp.w	ip, #0
 801ae6a:	f2c0 8118 	blt.w	801b09e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ae6e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801ae72:	45cc      	cmp	ip, r9
 801ae74:	f280 8113 	bge.w	801b09e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ae78:	b21b      	sxth	r3, r3
 801ae7a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ae7e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ae80:	eb04 0902 	add.w	r9, r4, r2
 801ae84:	5ca2      	ldrb	r2, [r4, r2]
 801ae86:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801ae8a:	2800      	cmp	r0, #0
 801ae8c:	f000 80fe 	beq.w	801b08c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ae90:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ae94:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ae98:	9211      	str	r2, [sp, #68]	@ 0x44
 801ae9a:	b151      	cbz	r1, 801aeb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ae9c:	eb09 0203 	add.w	r2, r9, r3
 801aea0:	f819 3003 	ldrb.w	r3, [r9, r3]
 801aea4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801aea8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801aeaa:	7853      	ldrb	r3, [r2, #1]
 801aeac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801aeb0:	9312      	str	r3, [sp, #72]	@ 0x48
 801aeb2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801aeb4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801aeb6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801aeba:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801aebe:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801aec2:	ea4c 0c03 	orr.w	ip, ip, r3
 801aec6:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801aec8:	041b      	lsls	r3, r3, #16
 801aeca:	fb10 f201 	smulbb	r2, r0, r1
 801aece:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801aed2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801aed6:	10d2      	asrs	r2, r2, #3
 801aed8:	4323      	orrs	r3, r4
 801aeda:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801aede:	4353      	muls	r3, r2
 801aee0:	fb09 330c 	mla	r3, r9, ip, r3
 801aee4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801aee8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801aeec:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801aef0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801aef4:	f1c1 0c10 	rsb	ip, r1, #16
 801aef8:	ebac 0c00 	sub.w	ip, ip, r0
 801aefc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801af00:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801af04:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801af06:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801af08:	0418      	lsls	r0, r3, #16
 801af0a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801af0e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801af12:	4318      	orrs	r0, r3
 801af14:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801af18:	fb02 c200 	mla	r2, r2, r0, ip
 801af1c:	0d53      	lsrs	r3, r2, #21
 801af1e:	0952      	lsrs	r2, r2, #5
 801af20:	8838      	ldrh	r0, [r7, #0]
 801af22:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801af26:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801af2a:	431a      	orrs	r2, r3
 801af2c:	b292      	uxth	r2, r2
 801af2e:	1201      	asrs	r1, r0, #8
 801af30:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801af34:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801af38:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801af3c:	fb11 f104 	smulbb	r1, r1, r4
 801af40:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801af44:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801af48:	00c0      	lsls	r0, r0, #3
 801af4a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801af4e:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801af52:	10d1      	asrs	r1, r2, #3
 801af54:	b2c0      	uxtb	r0, r0
 801af56:	00d2      	lsls	r2, r2, #3
 801af58:	b2d2      	uxtb	r2, r2
 801af5a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801af5e:	fb1e fe04 	smulbb	lr, lr, r4
 801af62:	fb10 f004 	smulbb	r0, r0, r4
 801af66:	fa1f fc8c 	uxth.w	ip, ip
 801af6a:	fb01 e103 	mla	r1, r1, r3, lr
 801af6e:	fb02 0303 	mla	r3, r2, r3, r0
 801af72:	b29a      	uxth	r2, r3
 801af74:	f10c 0301 	add.w	r3, ip, #1
 801af78:	b289      	uxth	r1, r1
 801af7a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801af7e:	1c53      	adds	r3, r2, #1
 801af80:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801af84:	1c4a      	adds	r2, r1, #1
 801af86:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801af8a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801af8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801af92:	0949      	lsrs	r1, r1, #5
 801af94:	ea43 030c 	orr.w	r3, r3, ip
 801af98:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801af9c:	430b      	orrs	r3, r1
 801af9e:	803b      	strh	r3, [r7, #0]
 801afa0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801afa2:	449a      	add	sl, r3
 801afa4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801afa6:	3702      	adds	r7, #2
 801afa8:	441d      	add	r5, r3
 801afaa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801afae:	e742      	b.n	801ae36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801afb0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801afb2:	449a      	add	sl, r3
 801afb4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801afb6:	441d      	add	r5, r3
 801afb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801afba:	3b01      	subs	r3, #1
 801afbc:	9309      	str	r3, [sp, #36]	@ 0x24
 801afbe:	f108 0802 	add.w	r8, r8, #2
 801afc2:	e718      	b.n	801adf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801afc4:	d023      	beq.n	801b00e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801afc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801afc8:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801afca:	3b01      	subs	r3, #1
 801afcc:	fb00 a003 	mla	r0, r0, r3, sl
 801afd0:	1400      	asrs	r0, r0, #16
 801afd2:	f53f af2d 	bmi.w	801ae30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afd6:	3901      	subs	r1, #1
 801afd8:	4288      	cmp	r0, r1
 801afda:	f6bf af29 	bge.w	801ae30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afde:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801afe0:	fb01 5303 	mla	r3, r1, r3, r5
 801afe4:	141b      	asrs	r3, r3, #16
 801afe6:	f53f af23 	bmi.w	801ae30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afea:	3a01      	subs	r2, #1
 801afec:	4293      	cmp	r3, r2
 801afee:	f6bf af1f 	bge.w	801ae30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801aff2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801aff6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801affa:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801affe:	f1be 0f00 	cmp.w	lr, #0
 801b002:	dc6c      	bgt.n	801b0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801b004:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b006:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b00a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801b00e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b010:	2b00      	cmp	r3, #0
 801b012:	f340 810e 	ble.w	801b232 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801b016:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b01a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b01e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b022:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b024:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b028:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b02c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b030:	eef0 6a62 	vmov.f32	s13, s5
 801b034:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b038:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b03c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b040:	ee16 aa90 	vmov	sl, s13
 801b044:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b048:	eef0 6a43 	vmov.f32	s13, s6
 801b04c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b050:	ee12 2a90 	vmov	r2, s5
 801b054:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b058:	fb92 f3f3 	sdiv	r3, r2, r3
 801b05c:	ee13 2a10 	vmov	r2, s6
 801b060:	9325      	str	r3, [sp, #148]	@ 0x94
 801b062:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b064:	fb92 f3f3 	sdiv	r3, r2, r3
 801b068:	9326      	str	r3, [sp, #152]	@ 0x98
 801b06a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b06c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801b06e:	3b01      	subs	r3, #1
 801b070:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b074:	930c      	str	r3, [sp, #48]	@ 0x30
 801b076:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801b078:	bf08      	it	eq
 801b07a:	4613      	moveq	r3, r2
 801b07c:	ee16 5a90 	vmov	r5, s13
 801b080:	9309      	str	r3, [sp, #36]	@ 0x24
 801b082:	eeb0 3a67 	vmov.f32	s6, s15
 801b086:	eef0 2a47 	vmov.f32	s5, s14
 801b08a:	e6a6      	b.n	801adda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b08c:	2900      	cmp	r1, #0
 801b08e:	f43f af10 	beq.w	801aeb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b092:	f819 3003 	ldrb.w	r3, [r9, r3]
 801b096:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b09a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b09c:	e709      	b.n	801aeb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801b09e:	f112 0901 	adds.w	r9, r2, #1
 801b0a2:	f53f af7d 	bmi.w	801afa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b0a6:	454b      	cmp	r3, r9
 801b0a8:	f6ff af7a 	blt.w	801afa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b0ac:	f11c 0901 	adds.w	r9, ip, #1
 801b0b0:	f53f af76 	bmi.w	801afa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b0b4:	45ce      	cmp	lr, r9
 801b0b6:	f6ff af73 	blt.w	801afa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b0ba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b0bc:	9202      	str	r2, [sp, #8]
 801b0be:	b21b      	sxth	r3, r3
 801b0c0:	fa0f f28e 	sxth.w	r2, lr
 801b0c4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b0c8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801b0cc:	9201      	str	r2, [sp, #4]
 801b0ce:	9300      	str	r3, [sp, #0]
 801b0d0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b0d2:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801b0d4:	4633      	mov	r3, r6
 801b0d6:	4639      	mov	r1, r7
 801b0d8:	f7ff fd8e 	bl	801abf8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801b0dc:	e760      	b.n	801afa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801b0de:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801b0e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b0e2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b0e6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801b0ea:	1429      	asrs	r1, r5, #16
 801b0ec:	fb03 2101 	mla	r1, r3, r1, r2
 801b0f0:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b0f2:	440a      	add	r2, r1
 801b0f4:	5c61      	ldrb	r1, [r4, r1]
 801b0f6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801b0fa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b0fe:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801b102:	f1bc 0f00 	cmp.w	ip, #0
 801b106:	f000 808c 	beq.w	801b222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801b10a:	7857      	ldrb	r7, [r2, #1]
 801b10c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801b110:	9413      	str	r4, [sp, #76]	@ 0x4c
 801b112:	b140      	cbz	r0, 801b126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b114:	18d7      	adds	r7, r2, r3
 801b116:	5cd3      	ldrb	r3, [r2, r3]
 801b118:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b11c:	9310      	str	r3, [sp, #64]	@ 0x40
 801b11e:	787b      	ldrb	r3, [r7, #1]
 801b120:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b124:	9314      	str	r3, [sp, #80]	@ 0x50
 801b126:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801b128:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b12a:	fb1c f200 	smulbb	r2, ip, r0
 801b12e:	041f      	lsls	r7, r3, #16
 801b130:	10d2      	asrs	r2, r2, #3
 801b132:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b136:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801b13a:	431f      	orrs	r7, r3
 801b13c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801b140:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b142:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801b144:	041b      	lsls	r3, r3, #16
 801b146:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801b14a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b14e:	ea43 030b 	orr.w	r3, r3, fp
 801b152:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b154:	4353      	muls	r3, r2
 801b156:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b15a:	fb04 3707 	mla	r7, r4, r7, r3
 801b15e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b162:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801b166:	ea43 0b01 	orr.w	fp, r3, r1
 801b16a:	f1c0 0110 	rsb	r1, r0, #16
 801b16e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b170:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b172:	eba1 0c0c 	sub.w	ip, r1, ip
 801b176:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b17a:	fb0c 770b 	mla	r7, ip, fp, r7
 801b17e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b182:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801b186:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b18a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801b18e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b192:	fb02 770c 	mla	r7, r2, ip, r7
 801b196:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801b198:	0d79      	lsrs	r1, r7, #21
 801b19a:	097f      	lsrs	r7, r7, #5
 801b19c:	8812      	ldrh	r2, [r2, #0]
 801b19e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b1a2:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b1a6:	430f      	orrs	r7, r1
 801b1a8:	b2bb      	uxth	r3, r7
 801b1aa:	1211      	asrs	r1, r2, #8
 801b1ac:	1218      	asrs	r0, r3, #8
 801b1ae:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b1b2:	fb11 f104 	smulbb	r1, r1, r4
 801b1b6:	10d7      	asrs	r7, r2, #3
 801b1b8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b1bc:	00d2      	lsls	r2, r2, #3
 801b1be:	fb00 1009 	mla	r0, r0, r9, r1
 801b1c2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b1c6:	10d9      	asrs	r1, r3, #3
 801b1c8:	b2d2      	uxtb	r2, r2
 801b1ca:	00db      	lsls	r3, r3, #3
 801b1cc:	fb17 f704 	smulbb	r7, r7, r4
 801b1d0:	fb12 f204 	smulbb	r2, r2, r4
 801b1d4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b1d8:	b2db      	uxtb	r3, r3
 801b1da:	b280      	uxth	r0, r0
 801b1dc:	fb01 7109 	mla	r1, r1, r9, r7
 801b1e0:	fb03 2309 	mla	r3, r3, r9, r2
 801b1e4:	b29b      	uxth	r3, r3
 801b1e6:	b289      	uxth	r1, r1
 801b1e8:	1c42      	adds	r2, r0, #1
 801b1ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b1ee:	1c4f      	adds	r7, r1, #1
 801b1f0:	1c5a      	adds	r2, r3, #1
 801b1f2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b1f6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b1fa:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801b1fe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b202:	0949      	lsrs	r1, r1, #5
 801b204:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b206:	4310      	orrs	r0, r2
 801b208:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b20c:	4308      	orrs	r0, r1
 801b20e:	f823 0b02 	strh.w	r0, [r3], #2
 801b212:	930e      	str	r3, [sp, #56]	@ 0x38
 801b214:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801b216:	449a      	add	sl, r3
 801b218:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b21a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801b21e:	441d      	add	r5, r3
 801b220:	e6ed      	b.n	801affe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801b222:	2800      	cmp	r0, #0
 801b224:	f43f af7f 	beq.w	801b126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b228:	5cd3      	ldrb	r3, [r2, r3]
 801b22a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801b22e:	9310      	str	r3, [sp, #64]	@ 0x40
 801b230:	e779      	b.n	801b126 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b232:	b019      	add	sp, #100	@ 0x64
 801b234:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801b238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b23c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801b240:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801b244:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801b248:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801b24c:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801b250:	8808      	ldrh	r0, [r1, #0]
 801b252:	fb08 470e 	mla	r7, r8, lr, r4
 801b256:	f1b8 0f00 	cmp.w	r8, #0
 801b25a:	eb02 0907 	add.w	r9, r2, r7
 801b25e:	db67      	blt.n	801b330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801b260:	45c2      	cmp	sl, r8
 801b262:	dd65      	ble.n	801b330 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801b264:	2c00      	cmp	r4, #0
 801b266:	db61      	blt.n	801b32c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801b268:	45a6      	cmp	lr, r4
 801b26a:	dd5f      	ble.n	801b32c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801b26c:	5dd2      	ldrb	r2, [r2, r7]
 801b26e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801b272:	1c62      	adds	r2, r4, #1
 801b274:	d45f      	bmi.n	801b336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b276:	4596      	cmp	lr, r2
 801b278:	dd5d      	ble.n	801b336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b27a:	2d00      	cmp	r5, #0
 801b27c:	d05b      	beq.n	801b336 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801b27e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b282:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801b286:	f118 0801 	adds.w	r8, r8, #1
 801b28a:	d458      	bmi.n	801b33e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b28c:	45c2      	cmp	sl, r8
 801b28e:	dd56      	ble.n	801b33e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b290:	2e00      	cmp	r6, #0
 801b292:	d054      	beq.n	801b33e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801b294:	2c00      	cmp	r4, #0
 801b296:	db50      	blt.n	801b33a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801b298:	45a6      	cmp	lr, r4
 801b29a:	dd4e      	ble.n	801b33a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801b29c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801b2a0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801b2a4:	3401      	adds	r4, #1
 801b2a6:	d407      	bmi.n	801b2b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b2a8:	45a6      	cmp	lr, r4
 801b2aa:	dd05      	ble.n	801b2b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b2ac:	b125      	cbz	r5, 801b2b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801b2ae:	44ce      	add	lr, r9
 801b2b0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801b2b4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801b2b8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801b2bc:	fb15 f406 	smulbb	r4, r5, r6
 801b2c0:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b2c4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801b2c8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b2cc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801b2d0:	ea43 0c0c 	orr.w	ip, r3, ip
 801b2d4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801b2d8:	f1c6 0310 	rsb	r3, r6, #16
 801b2dc:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801b2e0:	1b5b      	subs	r3, r3, r5
 801b2e2:	ea4e 0707 	orr.w	r7, lr, r7
 801b2e6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801b2ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b2ee:	437d      	muls	r5, r7
 801b2f0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801b2f4:	0403      	lsls	r3, r0, #16
 801b2f6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b2fa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b2fe:	4318      	orrs	r0, r3
 801b300:	0413      	lsls	r3, r2, #16
 801b302:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b306:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b30a:	4313      	orrs	r3, r2
 801b30c:	fb04 c000 	mla	r0, r4, r0, ip
 801b310:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801b314:	fb06 0003 	mla	r0, r6, r3, r0
 801b318:	0d43      	lsrs	r3, r0, #21
 801b31a:	0940      	lsrs	r0, r0, #5
 801b31c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b320:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801b324:	4318      	orrs	r0, r3
 801b326:	8008      	strh	r0, [r1, #0]
 801b328:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b32c:	4684      	mov	ip, r0
 801b32e:	e7a0      	b.n	801b272 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801b330:	4607      	mov	r7, r0
 801b332:	4684      	mov	ip, r0
 801b334:	e7a7      	b.n	801b286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801b336:	4607      	mov	r7, r0
 801b338:	e7a5      	b.n	801b286 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801b33a:	4602      	mov	r2, r0
 801b33c:	e7b2      	b.n	801b2a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801b33e:	4602      	mov	r2, r0
 801b340:	e7ba      	b.n	801b2b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801b342 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b342:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b346:	b093      	sub	sp, #76	@ 0x4c
 801b348:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801b34c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801b34e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801b350:	9108      	str	r1, [sp, #32]
 801b352:	9306      	str	r3, [sp, #24]
 801b354:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801b358:	9010      	str	r0, [sp, #64]	@ 0x40
 801b35a:	6850      	ldr	r0, [r2, #4]
 801b35c:	6812      	ldr	r2, [r2, #0]
 801b35e:	fb00 1303 	mla	r3, r0, r3, r1
 801b362:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801b366:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b368:	681b      	ldr	r3, [r3, #0]
 801b36a:	9307      	str	r3, [sp, #28]
 801b36c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b36e:	685f      	ldr	r7, [r3, #4]
 801b370:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b374:	3704      	adds	r7, #4
 801b376:	9b08      	ldr	r3, [sp, #32]
 801b378:	2b00      	cmp	r3, #0
 801b37a:	dc03      	bgt.n	801b384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801b37c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b37e:	2b00      	cmp	r3, #0
 801b380:	f340 81b2 	ble.w	801b6e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801b384:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b386:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b38a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b38e:	1e48      	subs	r0, r1, #1
 801b390:	f102 3cff 	add.w	ip, r2, #4294967295
 801b394:	9b06      	ldr	r3, [sp, #24]
 801b396:	2b00      	cmp	r3, #0
 801b398:	f340 80a9 	ble.w	801b4ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801b39c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801b3a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b3a4:	d406      	bmi.n	801b3b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b3a6:	4586      	cmp	lr, r0
 801b3a8:	da04      	bge.n	801b3b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b3aa:	2b00      	cmp	r3, #0
 801b3ac:	db02      	blt.n	801b3b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b3ae:	4563      	cmp	r3, ip
 801b3b0:	f2c0 809e 	blt.w	801b4f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b3b4:	f11e 0e01 	adds.w	lr, lr, #1
 801b3b8:	f100 808f 	bmi.w	801b4da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b3bc:	4571      	cmp	r1, lr
 801b3be:	f2c0 808c 	blt.w	801b4da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b3c2:	3301      	adds	r3, #1
 801b3c4:	f100 8089 	bmi.w	801b4da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b3c8:	429a      	cmp	r2, r3
 801b3ca:	f2c0 8086 	blt.w	801b4da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b3ce:	f8dd b018 	ldr.w	fp, [sp, #24]
 801b3d2:	46c8      	mov	r8, r9
 801b3d4:	f1bb 0f00 	cmp.w	fp, #0
 801b3d8:	f340 80a6 	ble.w	801b528 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801b3dc:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801b3de:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b3e0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b3e4:	689b      	ldr	r3, [r3, #8]
 801b3e6:	1422      	asrs	r2, r4, #16
 801b3e8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b3ec:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801b3f0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801b3f4:	f100 80e3 	bmi.w	801b5be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b3f8:	f103 3aff 	add.w	sl, r3, #4294967295
 801b3fc:	4552      	cmp	r2, sl
 801b3fe:	f280 80de 	bge.w	801b5be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b402:	f1bc 0f00 	cmp.w	ip, #0
 801b406:	f2c0 80da 	blt.w	801b5be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b40a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801b40e:	45d4      	cmp	ip, sl
 801b410:	f280 80d5 	bge.w	801b5be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801b414:	b21b      	sxth	r3, r3
 801b416:	fb0c 2203 	mla	r2, ip, r3, r2
 801b41a:	9d07      	ldr	r5, [sp, #28]
 801b41c:	eb05 0a02 	add.w	sl, r5, r2
 801b420:	5caa      	ldrb	r2, [r5, r2]
 801b422:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801b426:	2800      	cmp	r0, #0
 801b428:	f000 80c0 	beq.w	801b5ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801b42c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801b430:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801b434:	920b      	str	r2, [sp, #44]	@ 0x2c
 801b436:	b151      	cbz	r1, 801b44e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b438:	eb0a 0203 	add.w	r2, sl, r3
 801b43c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801b440:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b444:	9309      	str	r3, [sp, #36]	@ 0x24
 801b446:	7853      	ldrb	r3, [r2, #1]
 801b448:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b44c:	930c      	str	r3, [sp, #48]	@ 0x30
 801b44e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b450:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801b452:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b456:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b45a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b45e:	ea4c 0c03 	orr.w	ip, ip, r3
 801b462:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b464:	041b      	lsls	r3, r3, #16
 801b466:	fb10 f201 	smulbb	r2, r0, r1
 801b46a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b46e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801b472:	10d2      	asrs	r2, r2, #3
 801b474:	432b      	orrs	r3, r5
 801b476:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801b47a:	4353      	muls	r3, r2
 801b47c:	fb0a 330c 	mla	r3, sl, ip, r3
 801b480:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801b484:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b488:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801b48c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801b490:	f1c1 0c10 	rsb	ip, r1, #16
 801b494:	ebac 0c00 	sub.w	ip, ip, r0
 801b498:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801b49c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801b4a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b4a2:	0418      	lsls	r0, r3, #16
 801b4a4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801b4a8:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b4ac:	4318      	orrs	r0, r3
 801b4ae:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801b4b2:	fb02 c200 	mla	r2, r2, r0, ip
 801b4b6:	0d53      	lsrs	r3, r2, #21
 801b4b8:	0952      	lsrs	r2, r2, #5
 801b4ba:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b4be:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801b4c2:	431a      	orrs	r2, r3
 801b4c4:	f8a8 2000 	strh.w	r2, [r8]
 801b4c8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b4ca:	441c      	add	r4, r3
 801b4cc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b4ce:	f108 0802 	add.w	r8, r8, #2
 801b4d2:	441e      	add	r6, r3
 801b4d4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b4d8:	e77c      	b.n	801b3d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b4da:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b4dc:	441c      	add	r4, r3
 801b4de:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b4e0:	441e      	add	r6, r3
 801b4e2:	9b06      	ldr	r3, [sp, #24]
 801b4e4:	3b01      	subs	r3, #1
 801b4e6:	9306      	str	r3, [sp, #24]
 801b4e8:	f109 0902 	add.w	r9, r9, #2
 801b4ec:	e752      	b.n	801b394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801b4ee:	d020      	beq.n	801b532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801b4f0:	9b06      	ldr	r3, [sp, #24]
 801b4f2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b4f4:	3b01      	subs	r3, #1
 801b4f6:	fb00 4003 	mla	r0, r0, r3, r4
 801b4fa:	1400      	asrs	r0, r0, #16
 801b4fc:	f53f af67 	bmi.w	801b3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b500:	3901      	subs	r1, #1
 801b502:	4288      	cmp	r0, r1
 801b504:	f6bf af63 	bge.w	801b3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b508:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801b50a:	fb01 6303 	mla	r3, r1, r3, r6
 801b50e:	141b      	asrs	r3, r3, #16
 801b510:	f53f af5d 	bmi.w	801b3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b514:	3a01      	subs	r2, #1
 801b516:	4293      	cmp	r3, r2
 801b518:	f6bf af59 	bge.w	801b3ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801b51c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801b520:	46ca      	mov	sl, r9
 801b522:	f1b8 0f00 	cmp.w	r8, #0
 801b526:	dc67      	bgt.n	801b5f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801b528:	9b06      	ldr	r3, [sp, #24]
 801b52a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b52e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801b532:	9b08      	ldr	r3, [sp, #32]
 801b534:	2b00      	cmp	r3, #0
 801b536:	f340 80d7 	ble.w	801b6e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801b53a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b53e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b542:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b546:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b548:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b54c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b550:	eeb0 6a62 	vmov.f32	s12, s5
 801b554:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b558:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b55c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b560:	ee16 4a10 	vmov	r4, s12
 801b564:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b568:	eeb0 6a43 	vmov.f32	s12, s6
 801b56c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b570:	ee12 2a90 	vmov	r2, s5
 801b574:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b578:	fb92 f3f3 	sdiv	r3, r2, r3
 801b57c:	ee13 2a10 	vmov	r2, s6
 801b580:	931f      	str	r3, [sp, #124]	@ 0x7c
 801b582:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b584:	fb92 f3f3 	sdiv	r3, r2, r3
 801b588:	9320      	str	r3, [sp, #128]	@ 0x80
 801b58a:	9b08      	ldr	r3, [sp, #32]
 801b58c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b58e:	3b01      	subs	r3, #1
 801b590:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b594:	9308      	str	r3, [sp, #32]
 801b596:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b598:	bf08      	it	eq
 801b59a:	4613      	moveq	r3, r2
 801b59c:	ee16 6a10 	vmov	r6, s12
 801b5a0:	9306      	str	r3, [sp, #24]
 801b5a2:	eeb0 3a67 	vmov.f32	s6, s15
 801b5a6:	eef0 2a47 	vmov.f32	s5, s14
 801b5aa:	e6e4      	b.n	801b376 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801b5ac:	2900      	cmp	r1, #0
 801b5ae:	f43f af4e 	beq.w	801b44e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b5b2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801b5b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b5ba:	9309      	str	r3, [sp, #36]	@ 0x24
 801b5bc:	e747      	b.n	801b44e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801b5be:	f112 0a01 	adds.w	sl, r2, #1
 801b5c2:	d481      	bmi.n	801b4c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b5c4:	4553      	cmp	r3, sl
 801b5c6:	f6ff af7f 	blt.w	801b4c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b5ca:	f11c 0a01 	adds.w	sl, ip, #1
 801b5ce:	f53f af7b 	bmi.w	801b4c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b5d2:	45d6      	cmp	lr, sl
 801b5d4:	f6ff af78 	blt.w	801b4c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b5d8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801b5dc:	b21b      	sxth	r3, r3
 801b5de:	fa0f f28e 	sxth.w	r2, lr
 801b5e2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801b5e6:	9201      	str	r2, [sp, #4]
 801b5e8:	9300      	str	r3, [sp, #0]
 801b5ea:	9a07      	ldr	r2, [sp, #28]
 801b5ec:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801b5ee:	463b      	mov	r3, r7
 801b5f0:	4641      	mov	r1, r8
 801b5f2:	f7ff fe21 	bl	801b238 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801b5f6:	e767      	b.n	801b4c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b5f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801b5fa:	9d07      	ldr	r5, [sp, #28]
 801b5fc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801b600:	1422      	asrs	r2, r4, #16
 801b602:	1431      	asrs	r1, r6, #16
 801b604:	fb03 2101 	mla	r1, r3, r1, r2
 801b608:	9a07      	ldr	r2, [sp, #28]
 801b60a:	440a      	add	r2, r1
 801b60c:	5c69      	ldrb	r1, [r5, r1]
 801b60e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801b612:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b616:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801b61a:	f1be 0f00 	cmp.w	lr, #0
 801b61e:	d05c      	beq.n	801b6da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801b620:	f892 c001 	ldrb.w	ip, [r2, #1]
 801b624:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801b628:	950d      	str	r5, [sp, #52]	@ 0x34
 801b62a:	b150      	cbz	r0, 801b642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b62c:	eb02 0c03 	add.w	ip, r2, r3
 801b630:	5cd3      	ldrb	r3, [r2, r3]
 801b632:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b636:	930a      	str	r3, [sp, #40]	@ 0x28
 801b638:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801b63c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b640:	930e      	str	r3, [sp, #56]	@ 0x38
 801b642:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b644:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801b646:	fb1e f200 	smulbb	r2, lr, r0
 801b64a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801b64e:	10d2      	asrs	r2, r2, #3
 801b650:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801b654:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801b658:	ea4c 0c03 	orr.w	ip, ip, r3
 801b65c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801b660:	9311      	str	r3, [sp, #68]	@ 0x44
 801b662:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b664:	041b      	lsls	r3, r3, #16
 801b666:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801b66a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801b66e:	ea43 030b 	orr.w	r3, r3, fp
 801b672:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801b674:	4353      	muls	r3, r2
 801b676:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801b67a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801b67e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801b682:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801b686:	ea43 0b01 	orr.w	fp, r3, r1
 801b68a:	f1c0 0110 	rsb	r1, r0, #16
 801b68e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b690:	eba1 0e0e 	sub.w	lr, r1, lr
 801b694:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801b698:	fb0e cc0b 	mla	ip, lr, fp, ip
 801b69c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801b6a0:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801b6a4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801b6a8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801b6ac:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801b6b0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b6b4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801b6b8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b6bc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b6c0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801b6c4:	ea43 0c0c 	orr.w	ip, r3, ip
 801b6c8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b6ca:	f82a cb02 	strh.w	ip, [sl], #2
 801b6ce:	441c      	add	r4, r3
 801b6d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b6d2:	f108 38ff 	add.w	r8, r8, #4294967295
 801b6d6:	441e      	add	r6, r3
 801b6d8:	e723      	b.n	801b522 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801b6da:	2800      	cmp	r0, #0
 801b6dc:	d0b1      	beq.n	801b642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b6de:	5cd3      	ldrb	r3, [r2, r3]
 801b6e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801b6e4:	930a      	str	r3, [sp, #40]	@ 0x28
 801b6e6:	e7ac      	b.n	801b642 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801b6e8:	b013      	add	sp, #76	@ 0x4c
 801b6ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b6ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801b6ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b6f2:	880d      	ldrh	r5, [r1, #0]
 801b6f4:	b087      	sub	sp, #28
 801b6f6:	10ef      	asrs	r7, r5, #3
 801b6f8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801b6fc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b700:	00ed      	lsls	r5, r5, #3
 801b702:	9701      	str	r7, [sp, #4]
 801b704:	b2ed      	uxtb	r5, r5
 801b706:	9502      	str	r5, [sp, #8]
 801b708:	9d01      	ldr	r5, [sp, #4]
 801b70a:	9103      	str	r1, [sp, #12]
 801b70c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801b710:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801b714:	9902      	ldr	r1, [sp, #8]
 801b716:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801b71a:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801b71e:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801b722:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801b726:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801b72a:	022d      	lsls	r5, r5, #8
 801b72c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801b730:	fb06 0709 	mla	r7, r6, r9, r0
 801b734:	430d      	orrs	r5, r1
 801b736:	2e00      	cmp	r6, #0
 801b738:	eb02 0c07 	add.w	ip, r2, r7
 801b73c:	9505      	str	r5, [sp, #20]
 801b73e:	f2c0 80b6 	blt.w	801b8ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801b742:	45b3      	cmp	fp, r6
 801b744:	f340 80b3 	ble.w	801b8ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801b748:	2800      	cmp	r0, #0
 801b74a:	f2c0 80ae 	blt.w	801b8aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b74e:	4581      	cmp	r9, r0
 801b750:	f340 80ab 	ble.w	801b8aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801b754:	5dd7      	ldrb	r7, [r2, r7]
 801b756:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801b75a:	441f      	add	r7, r3
 801b75c:	1c42      	adds	r2, r0, #1
 801b75e:	f100 80a9 	bmi.w	801b8b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b762:	4591      	cmp	r9, r2
 801b764:	f340 80a6 	ble.w	801b8b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b768:	2c00      	cmp	r4, #0
 801b76a:	f000 80a3 	beq.w	801b8b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801b76e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801b772:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b776:	441d      	add	r5, r3
 801b778:	3601      	adds	r6, #1
 801b77a:	f100 809f 	bmi.w	801b8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b77e:	45b3      	cmp	fp, r6
 801b780:	f340 809c 	ble.w	801b8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b784:	f1be 0f00 	cmp.w	lr, #0
 801b788:	f000 8098 	beq.w	801b8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801b78c:	2800      	cmp	r0, #0
 801b78e:	f2c0 8093 	blt.w	801b8b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b792:	4581      	cmp	r9, r0
 801b794:	f340 8090 	ble.w	801b8b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801b798:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801b79c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b7a0:	441e      	add	r6, r3
 801b7a2:	3001      	adds	r0, #1
 801b7a4:	f100 808d 	bmi.w	801b8c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b7a8:	4581      	cmp	r9, r0
 801b7aa:	f340 808a 	ble.w	801b8c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b7ae:	2c00      	cmp	r4, #0
 801b7b0:	f000 8087 	beq.w	801b8c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801b7b4:	44e1      	add	r9, ip
 801b7b6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801b7ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b7be:	4413      	add	r3, r2
 801b7c0:	b2a4      	uxth	r4, r4
 801b7c2:	fa1f fe8e 	uxth.w	lr, lr
 801b7c6:	fb04 fb0e 	mul.w	fp, r4, lr
 801b7ca:	0124      	lsls	r4, r4, #4
 801b7cc:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801b7d0:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801b7d4:	eba4 040b 	sub.w	r4, r4, fp
 801b7d8:	fa1f f08e 	uxth.w	r0, lr
 801b7dc:	b2a2      	uxth	r2, r4
 801b7de:	78ac      	ldrb	r4, [r5, #2]
 801b7e0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801b7e4:	9901      	ldr	r1, [sp, #4]
 801b7e6:	eba9 0900 	sub.w	r9, r9, r0
 801b7ea:	fa1f f989 	uxth.w	r9, r9
 801b7ee:	4354      	muls	r4, r2
 801b7f0:	fb09 440c 	mla	r4, r9, ip, r4
 801b7f4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801b7f8:	fb00 440c 	mla	r4, r0, ip, r4
 801b7fc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801b800:	fa1f fe88 	uxth.w	lr, r8
 801b804:	ea6f 0808 	mvn.w	r8, r8
 801b808:	fa5f f888 	uxtb.w	r8, r8
 801b80c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801b810:	fb1a fa08 	smulbb	sl, sl, r8
 801b814:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801b818:	fb0c ac0e 	mla	ip, ip, lr, sl
 801b81c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801b820:	787c      	ldrb	r4, [r7, #1]
 801b822:	782d      	ldrb	r5, [r5, #0]
 801b824:	783f      	ldrb	r7, [r7, #0]
 801b826:	fb02 fa0a 	mul.w	sl, r2, sl
 801b82a:	fb09 aa04 	mla	sl, r9, r4, sl
 801b82e:	7874      	ldrb	r4, [r6, #1]
 801b830:	436a      	muls	r2, r5
 801b832:	7835      	ldrb	r5, [r6, #0]
 801b834:	fb00 aa04 	mla	sl, r0, r4, sl
 801b838:	fb09 2207 	mla	r2, r9, r7, r2
 801b83c:	785c      	ldrb	r4, [r3, #1]
 801b83e:	781b      	ldrb	r3, [r3, #0]
 801b840:	fb00 2005 	mla	r0, r0, r5, r2
 801b844:	fb0b a404 	mla	r4, fp, r4, sl
 801b848:	fb0b 0b03 	mla	fp, fp, r3, r0
 801b84c:	9b02      	ldr	r3, [sp, #8]
 801b84e:	fb11 fa08 	smulbb	sl, r1, r8
 801b852:	fa1f fc8c 	uxth.w	ip, ip
 801b856:	fb13 f808 	smulbb	r8, r3, r8
 801b85a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801b85e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801b862:	fb04 a40e 	mla	r4, r4, lr, sl
 801b866:	f10c 0301 	add.w	r3, ip, #1
 801b86a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801b86e:	fa1f fe8e 	uxth.w	lr, lr
 801b872:	b2a4      	uxth	r4, r4
 801b874:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801b878:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801b87c:	f104 0a01 	add.w	sl, r4, #1
 801b880:	f10e 0c01 	add.w	ip, lr, #1
 801b884:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b888:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801b88c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b890:	0964      	lsrs	r4, r4, #5
 801b892:	ea4c 0c03 	orr.w	ip, ip, r3
 801b896:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801b89a:	9b03      	ldr	r3, [sp, #12]
 801b89c:	ea4c 0c04 	orr.w	ip, ip, r4
 801b8a0:	f8a3 c000 	strh.w	ip, [r3]
 801b8a4:	b007      	add	sp, #28
 801b8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b8aa:	af05      	add	r7, sp, #20
 801b8ac:	e756      	b.n	801b75c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801b8ae:	ad05      	add	r5, sp, #20
 801b8b0:	462f      	mov	r7, r5
 801b8b2:	e761      	b.n	801b778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b8b4:	ad05      	add	r5, sp, #20
 801b8b6:	e75f      	b.n	801b778 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801b8b8:	ae05      	add	r6, sp, #20
 801b8ba:	e772      	b.n	801b7a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801b8bc:	ab05      	add	r3, sp, #20
 801b8be:	461e      	mov	r6, r3
 801b8c0:	e77e      	b.n	801b7c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801b8c2:	ab05      	add	r3, sp, #20
 801b8c4:	e77c      	b.n	801b7c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801b8c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b8c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b8ca:	b095      	sub	sp, #84	@ 0x54
 801b8cc:	9212      	str	r2, [sp, #72]	@ 0x48
 801b8ce:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8d0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801b8d2:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801b8d6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b8d8:	910e      	str	r1, [sp, #56]	@ 0x38
 801b8da:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801b8de:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b8e0:	6850      	ldr	r0, [r2, #4]
 801b8e2:	6812      	ldr	r2, [r2, #0]
 801b8e4:	fb00 1303 	mla	r3, r0, r3, r1
 801b8e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b8ec:	930a      	str	r3, [sp, #40]	@ 0x28
 801b8ee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b8f0:	681b      	ldr	r3, [r3, #0]
 801b8f2:	930d      	str	r3, [sp, #52]	@ 0x34
 801b8f4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b8f6:	685c      	ldr	r4, [r3, #4]
 801b8f8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801b8fa:	43db      	mvns	r3, r3
 801b8fc:	b2db      	uxtb	r3, r3
 801b8fe:	3404      	adds	r4, #4
 801b900:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b902:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801b904:	2b00      	cmp	r3, #0
 801b906:	dc03      	bgt.n	801b910 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b908:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801b90a:	2b00      	cmp	r3, #0
 801b90c:	f340 8255 	ble.w	801bdba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801b910:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b912:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b916:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b91a:	1e48      	subs	r0, r1, #1
 801b91c:	1e55      	subs	r5, r2, #1
 801b91e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b920:	2b00      	cmp	r3, #0
 801b922:	f340 80f9 	ble.w	801bb18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801b926:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801b928:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b92a:	1436      	asrs	r6, r6, #16
 801b92c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801b930:	d406      	bmi.n	801b940 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b932:	4286      	cmp	r6, r0
 801b934:	da04      	bge.n	801b940 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b936:	2b00      	cmp	r3, #0
 801b938:	db02      	blt.n	801b940 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b93a:	42ab      	cmp	r3, r5
 801b93c:	f2c0 80ed 	blt.w	801bb1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801b940:	3601      	adds	r6, #1
 801b942:	f100 80da 	bmi.w	801bafa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b946:	42b1      	cmp	r1, r6
 801b948:	f2c0 80d7 	blt.w	801bafa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b94c:	3301      	adds	r3, #1
 801b94e:	f100 80d4 	bmi.w	801bafa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b952:	429a      	cmp	r2, r3
 801b954:	f2c0 80d1 	blt.w	801bafa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801b958:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b95a:	9311      	str	r3, [sp, #68]	@ 0x44
 801b95c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b95e:	930c      	str	r3, [sp, #48]	@ 0x30
 801b960:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801b962:	2b00      	cmp	r3, #0
 801b964:	f340 80fa 	ble.w	801bb5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801b968:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801b96a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801b96c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801b96e:	68c6      	ldr	r6, [r0, #12]
 801b970:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801b972:	141d      	asrs	r5, r3, #16
 801b974:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801b978:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801b97a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801b97c:	1400      	asrs	r0, r0, #16
 801b97e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801b982:	6892      	ldr	r2, [r2, #8]
 801b984:	f100 813e 	bmi.w	801bc04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b988:	1e57      	subs	r7, r2, #1
 801b98a:	42b8      	cmp	r0, r7
 801b98c:	f280 813a 	bge.w	801bc04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b990:	2d00      	cmp	r5, #0
 801b992:	f2c0 8137 	blt.w	801bc04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b996:	1e77      	subs	r7, r6, #1
 801b998:	42bd      	cmp	r5, r7
 801b99a:	f280 8133 	bge.w	801bc04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801b99e:	b212      	sxth	r2, r2
 801b9a0:	fb05 0002 	mla	r0, r5, r2, r0
 801b9a4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801b9a6:	f815 a000 	ldrb.w	sl, [r5, r0]
 801b9aa:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801b9ae:	182e      	adds	r6, r5, r0
 801b9b0:	eb04 050a 	add.w	r5, r4, sl
 801b9b4:	2b00      	cmp	r3, #0
 801b9b6:	f000 8117 	beq.w	801bbe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801b9ba:	f896 c001 	ldrb.w	ip, [r6, #1]
 801b9be:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801b9c2:	44a4      	add	ip, r4
 801b9c4:	2900      	cmp	r1, #0
 801b9c6:	f000 8117 	beq.w	801bbf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801b9ca:	18b0      	adds	r0, r6, r2
 801b9cc:	5cb2      	ldrb	r2, [r6, r2]
 801b9ce:	7840      	ldrb	r0, [r0, #1]
 801b9d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b9d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b9d8:	4422      	add	r2, r4
 801b9da:	4420      	add	r0, r4
 801b9dc:	b29b      	uxth	r3, r3
 801b9de:	b289      	uxth	r1, r1
 801b9e0:	fb03 f901 	mul.w	r9, r3, r1
 801b9e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b9e8:	011b      	lsls	r3, r3, #4
 801b9ea:	b289      	uxth	r1, r1
 801b9ec:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801b9f0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801b9f4:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801b9f6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801b9fa:	f8b6 e000 	ldrh.w	lr, [r6]
 801b9fe:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801ba02:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801ba06:	eba3 0309 	sub.w	r3, r3, r9
 801ba0a:	b29b      	uxth	r3, r3
 801ba0c:	eba8 0801 	sub.w	r8, r8, r1
 801ba10:	fa1f f888 	uxth.w	r8, r8
 801ba14:	435f      	muls	r7, r3
 801ba16:	fb08 770b 	mla	r7, r8, fp, r7
 801ba1a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ba1e:	9310      	str	r3, [sp, #64]	@ 0x40
 801ba20:	fb01 770b 	mla	r7, r1, fp, r7
 801ba24:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ba28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ba2a:	fb09 770b 	mla	r7, r9, fp, r7
 801ba2e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801ba32:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801ba36:	fb1b fb03 	smulbb	fp, fp, r3
 801ba3a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ba3e:	fb07 b706 	mla	r7, r7, r6, fp
 801ba42:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ba44:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ba48:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ba4c:	f89c c000 	ldrb.w	ip, [ip]
 801ba50:	435d      	muls	r5, r3
 801ba52:	fb08 550b 	mla	r5, r8, fp, r5
 801ba56:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ba5a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ba5c:	fb01 550b 	mla	r5, r1, fp, r5
 801ba60:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ba64:	fb09 550b 	mla	r5, r9, fp, r5
 801ba68:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801ba6c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801ba70:	fb1b fb03 	smulbb	fp, fp, r3
 801ba74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ba76:	fb03 f30c 	mul.w	r3, r3, ip
 801ba7a:	f892 c000 	ldrb.w	ip, [r2]
 801ba7e:	fb08 330a 	mla	r3, r8, sl, r3
 801ba82:	fb01 330c 	mla	r3, r1, ip, r3
 801ba86:	f890 c000 	ldrb.w	ip, [r0]
 801ba8a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ba8e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ba92:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ba94:	fa5f fe8e 	uxtb.w	lr, lr
 801ba98:	b2bf      	uxth	r7, r7
 801ba9a:	fb1e fe03 	smulbb	lr, lr, r3
 801ba9e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801baa2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801baa6:	fb05 b506 	mla	r5, r5, r6, fp
 801baaa:	1c7b      	adds	r3, r7, #1
 801baac:	fb0c e606 	mla	r6, ip, r6, lr
 801bab0:	b2ad      	uxth	r5, r5
 801bab2:	b2b6      	uxth	r6, r6
 801bab4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bab8:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801babc:	f105 0b01 	add.w	fp, r5, #1
 801bac0:	1c77      	adds	r7, r6, #1
 801bac2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801bac6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801baca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801bace:	096d      	lsrs	r5, r5, #5
 801bad0:	431f      	orrs	r7, r3
 801bad2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bad6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bad8:	433d      	orrs	r5, r7
 801bada:	801d      	strh	r5, [r3, #0]
 801badc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bade:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801bae0:	3302      	adds	r3, #2
 801bae2:	930c      	str	r3, [sp, #48]	@ 0x30
 801bae4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bae6:	4413      	add	r3, r2
 801bae8:	931f      	str	r3, [sp, #124]	@ 0x7c
 801baea:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801baec:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801baee:	4413      	add	r3, r2
 801baf0:	9320      	str	r3, [sp, #128]	@ 0x80
 801baf2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801baf4:	3b01      	subs	r3, #1
 801baf6:	9311      	str	r3, [sp, #68]	@ 0x44
 801baf8:	e732      	b.n	801b960 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801bafa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bafc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801bafe:	4433      	add	r3, r6
 801bb00:	931f      	str	r3, [sp, #124]	@ 0x7c
 801bb02:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801bb04:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bb06:	4433      	add	r3, r6
 801bb08:	9320      	str	r3, [sp, #128]	@ 0x80
 801bb0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bb0c:	3b01      	subs	r3, #1
 801bb0e:	9309      	str	r3, [sp, #36]	@ 0x24
 801bb10:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb12:	3302      	adds	r3, #2
 801bb14:	930a      	str	r3, [sp, #40]	@ 0x28
 801bb16:	e702      	b.n	801b91e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801bb18:	d027      	beq.n	801bb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801bb1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bb1c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801bb1e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801bb20:	3b01      	subs	r3, #1
 801bb22:	fb00 5003 	mla	r0, r0, r3, r5
 801bb26:	1400      	asrs	r0, r0, #16
 801bb28:	f53f af16 	bmi.w	801b958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bb2c:	3901      	subs	r1, #1
 801bb2e:	4288      	cmp	r0, r1
 801bb30:	f6bf af12 	bge.w	801b958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bb34:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801bb36:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801bb38:	fb01 0303 	mla	r3, r1, r3, r0
 801bb3c:	141b      	asrs	r3, r3, #16
 801bb3e:	f53f af0b 	bmi.w	801b958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bb42:	3a01      	subs	r2, #1
 801bb44:	4293      	cmp	r3, r2
 801bb46:	f6bf af07 	bge.w	801b958 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bb4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bb4c:	9311      	str	r3, [sp, #68]	@ 0x44
 801bb4e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801bb52:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb54:	930c      	str	r3, [sp, #48]	@ 0x30
 801bb56:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bb58:	2b00      	cmp	r3, #0
 801bb5a:	dc70      	bgt.n	801bc3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801bb5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bb5e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bb60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801bb64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bb68:	930a      	str	r3, [sp, #40]	@ 0x28
 801bb6a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bb6c:	2b00      	cmp	r3, #0
 801bb6e:	f340 8124 	ble.w	801bdba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801bb72:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb76:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bb7a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bb7e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bb80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb84:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb88:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb8c:	eef0 6a62 	vmov.f32	s13, s5
 801bb90:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb98:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb9c:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801bba0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bba4:	eef0 6a43 	vmov.f32	s13, s6
 801bba8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bbac:	ee12 2a90 	vmov	r2, s5
 801bbb0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bbb4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbb8:	ee13 2a10 	vmov	r2, s6
 801bbbc:	9321      	str	r3, [sp, #132]	@ 0x84
 801bbbe:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bbc0:	fb92 f3f3 	sdiv	r3, r2, r3
 801bbc4:	9322      	str	r3, [sp, #136]	@ 0x88
 801bbc6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bbc8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bbca:	3b01      	subs	r3, #1
 801bbcc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bbd0:	930e      	str	r3, [sp, #56]	@ 0x38
 801bbd2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801bbd4:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801bbd8:	bf08      	it	eq
 801bbda:	4613      	moveq	r3, r2
 801bbdc:	9309      	str	r3, [sp, #36]	@ 0x24
 801bbde:	eeb0 3a67 	vmov.f32	s6, s15
 801bbe2:	eef0 2a47 	vmov.f32	s5, s14
 801bbe6:	e68c      	b.n	801b902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bbe8:	b149      	cbz	r1, 801bbfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801bbea:	5cb2      	ldrb	r2, [r6, r2]
 801bbec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bbf0:	4422      	add	r2, r4
 801bbf2:	4628      	mov	r0, r5
 801bbf4:	46ac      	mov	ip, r5
 801bbf6:	e6f1      	b.n	801b9dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bbf8:	4628      	mov	r0, r5
 801bbfa:	462a      	mov	r2, r5
 801bbfc:	e6ee      	b.n	801b9dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801bbfe:	4628      	mov	r0, r5
 801bc00:	462a      	mov	r2, r5
 801bc02:	e7f7      	b.n	801bbf4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801bc04:	1c47      	adds	r7, r0, #1
 801bc06:	f53f af69 	bmi.w	801badc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bc0a:	42ba      	cmp	r2, r7
 801bc0c:	f6ff af66 	blt.w	801badc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bc10:	1c6f      	adds	r7, r5, #1
 801bc12:	f53f af63 	bmi.w	801badc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bc16:	42be      	cmp	r6, r7
 801bc18:	f6ff af60 	blt.w	801badc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bc1c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801bc1e:	9002      	str	r0, [sp, #8]
 801bc20:	b236      	sxth	r6, r6
 801bc22:	b212      	sxth	r2, r2
 801bc24:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801bc28:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801bc2c:	9200      	str	r2, [sp, #0]
 801bc2e:	9601      	str	r6, [sp, #4]
 801bc30:	4623      	mov	r3, r4
 801bc32:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801bc36:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bc38:	f7ff fd59 	bl	801b6ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801bc3c:	e74e      	b.n	801badc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801bc3e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801bc40:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801bc42:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801bc44:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bc46:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801bc4a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801bc4c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801bc50:	142d      	asrs	r5, r5, #16
 801bc52:	1400      	asrs	r0, r0, #16
 801bc54:	fb02 5000 	mla	r0, r2, r0, r5
 801bc58:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801bc5a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801bc5e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801bc62:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801bc66:	182e      	adds	r6, r5, r0
 801bc68:	eb04 0509 	add.w	r5, r4, r9
 801bc6c:	2b00      	cmp	r3, #0
 801bc6e:	f000 8096 	beq.w	801bd9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801bc72:	7877      	ldrb	r7, [r6, #1]
 801bc74:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801bc78:	4427      	add	r7, r4
 801bc7a:	2900      	cmp	r1, #0
 801bc7c:	f000 8097 	beq.w	801bdae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801bc80:	18b0      	adds	r0, r6, r2
 801bc82:	5cb2      	ldrb	r2, [r6, r2]
 801bc84:	7840      	ldrb	r0, [r0, #1]
 801bc86:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bc8a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801bc8e:	4422      	add	r2, r4
 801bc90:	4420      	add	r0, r4
 801bc92:	b29b      	uxth	r3, r3
 801bc94:	b289      	uxth	r1, r1
 801bc96:	fb03 f801 	mul.w	r8, r3, r1
 801bc9a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801bc9c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801bca0:	f8b6 c000 	ldrh.w	ip, [r6]
 801bca4:	78be      	ldrb	r6, [r7, #2]
 801bca6:	f814 9009 	ldrb.w	r9, [r4, r9]
 801bcaa:	011b      	lsls	r3, r3, #4
 801bcac:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801bcb0:	b289      	uxth	r1, r1
 801bcb2:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801bcb6:	eba3 0308 	sub.w	r3, r3, r8
 801bcba:	b29b      	uxth	r3, r3
 801bcbc:	ebae 0e01 	sub.w	lr, lr, r1
 801bcc0:	fa1f fe8e 	uxth.w	lr, lr
 801bcc4:	435e      	muls	r6, r3
 801bcc6:	fb0e 660b 	mla	r6, lr, fp, r6
 801bcca:	f892 b002 	ldrb.w	fp, [r2, #2]
 801bcce:	9310      	str	r3, [sp, #64]	@ 0x40
 801bcd0:	fb01 660b 	mla	r6, r1, fp, r6
 801bcd4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801bcd8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bcda:	fb08 660b 	mla	r6, r8, fp, r6
 801bcde:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801bce2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801bce6:	fb1b fb03 	smulbb	fp, fp, r3
 801bcea:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801bcee:	fb06 b60a 	mla	r6, r6, sl, fp
 801bcf2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bcf4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801bcf8:	787d      	ldrb	r5, [r7, #1]
 801bcfa:	783f      	ldrb	r7, [r7, #0]
 801bcfc:	435d      	muls	r5, r3
 801bcfe:	fb0e 550b 	mla	r5, lr, fp, r5
 801bd02:	f892 b001 	ldrb.w	fp, [r2, #1]
 801bd06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bd08:	fb01 550b 	mla	r5, r1, fp, r5
 801bd0c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801bd10:	fb08 550b 	mla	r5, r8, fp, r5
 801bd14:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801bd18:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801bd1c:	fb1b fb03 	smulbb	fp, fp, r3
 801bd20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bd22:	437b      	muls	r3, r7
 801bd24:	7817      	ldrb	r7, [r2, #0]
 801bd26:	fb0e 3309 	mla	r3, lr, r9, r3
 801bd2a:	fb01 3307 	mla	r3, r1, r7, r3
 801bd2e:	7807      	ldrb	r7, [r0, #0]
 801bd30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bd34:	fb08 3707 	mla	r7, r8, r7, r3
 801bd38:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bd3a:	fa5f fc8c 	uxtb.w	ip, ip
 801bd3e:	fb1c fc03 	smulbb	ip, ip, r3
 801bd42:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801bd46:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bd4a:	fb05 b50a 	mla	r5, r5, sl, fp
 801bd4e:	fb07 c70a 	mla	r7, r7, sl, ip
 801bd52:	b2b6      	uxth	r6, r6
 801bd54:	b2ad      	uxth	r5, r5
 801bd56:	b2bf      	uxth	r7, r7
 801bd58:	1c73      	adds	r3, r6, #1
 801bd5a:	1c7a      	adds	r2, r7, #1
 801bd5c:	f105 0b01 	add.w	fp, r5, #1
 801bd60:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bd64:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801bd68:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801bd6c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bd70:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801bd74:	096d      	lsrs	r5, r5, #5
 801bd76:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bd78:	4316      	orrs	r6, r2
 801bd7a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bd7e:	432e      	orrs	r6, r5
 801bd80:	f823 6b02 	strh.w	r6, [r3], #2
 801bd84:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801bd86:	930c      	str	r3, [sp, #48]	@ 0x30
 801bd88:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801bd8a:	4413      	add	r3, r2
 801bd8c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801bd8e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801bd90:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bd92:	4413      	add	r3, r2
 801bd94:	9320      	str	r3, [sp, #128]	@ 0x80
 801bd96:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bd98:	3b01      	subs	r3, #1
 801bd9a:	9311      	str	r3, [sp, #68]	@ 0x44
 801bd9c:	e6db      	b.n	801bb56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801bd9e:	b149      	cbz	r1, 801bdb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801bda0:	5cb2      	ldrb	r2, [r6, r2]
 801bda2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801bda6:	4422      	add	r2, r4
 801bda8:	4628      	mov	r0, r5
 801bdaa:	462f      	mov	r7, r5
 801bdac:	e771      	b.n	801bc92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801bdae:	4628      	mov	r0, r5
 801bdb0:	462a      	mov	r2, r5
 801bdb2:	e76e      	b.n	801bc92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801bdb4:	4628      	mov	r0, r5
 801bdb6:	462a      	mov	r2, r5
 801bdb8:	e7f7      	b.n	801bdaa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bdba:	b015      	add	sp, #84	@ 0x54
 801bdbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801bdc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801bdc0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bdc4:	880f      	ldrh	r7, [r1, #0]
 801bdc6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801bdca:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801bdce:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801bdd2:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801bdd6:	023c      	lsls	r4, r7, #8
 801bdd8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801bddc:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801bde0:	017c      	lsls	r4, r7, #5
 801bde2:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801bde6:	00ff      	lsls	r7, r7, #3
 801bde8:	ea4b 0404 	orr.w	r4, fp, r4
 801bdec:	b2ff      	uxtb	r7, r7
 801bdee:	fb05 ca0e 	mla	sl, r5, lr, ip
 801bdf2:	4327      	orrs	r7, r4
 801bdf4:	2d00      	cmp	r5, #0
 801bdf6:	eb02 080a 	add.w	r8, r2, sl
 801bdfa:	9701      	str	r7, [sp, #4]
 801bdfc:	db7e      	blt.n	801befc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801bdfe:	45a9      	cmp	r9, r5
 801be00:	dd7c      	ble.n	801befc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801be02:	f1bc 0f00 	cmp.w	ip, #0
 801be06:	db77      	blt.n	801bef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801be08:	45e6      	cmp	lr, ip
 801be0a:	dd75      	ble.n	801bef8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801be0c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801be10:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801be14:	441f      	add	r7, r3
 801be16:	f11c 0201 	adds.w	r2, ip, #1
 801be1a:	d472      	bmi.n	801bf02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801be1c:	4596      	cmp	lr, r2
 801be1e:	dd70      	ble.n	801bf02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801be20:	2800      	cmp	r0, #0
 801be22:	d06e      	beq.n	801bf02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801be24:	f898 4001 	ldrb.w	r4, [r8, #1]
 801be28:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801be2c:	441c      	add	r4, r3
 801be2e:	3501      	adds	r5, #1
 801be30:	d46b      	bmi.n	801bf0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801be32:	45a9      	cmp	r9, r5
 801be34:	dd69      	ble.n	801bf0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801be36:	2e00      	cmp	r6, #0
 801be38:	d067      	beq.n	801bf0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801be3a:	f1bc 0f00 	cmp.w	ip, #0
 801be3e:	db62      	blt.n	801bf06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801be40:	45e6      	cmp	lr, ip
 801be42:	dd60      	ble.n	801bf06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801be44:	f818 500e 	ldrb.w	r5, [r8, lr]
 801be48:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801be4c:	441d      	add	r5, r3
 801be4e:	f11c 0201 	adds.w	r2, ip, #1
 801be52:	d45d      	bmi.n	801bf10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801be54:	4596      	cmp	lr, r2
 801be56:	dd5b      	ble.n	801bf10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801be58:	2800      	cmp	r0, #0
 801be5a:	d059      	beq.n	801bf10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801be5c:	44c6      	add	lr, r8
 801be5e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801be62:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801be66:	4413      	add	r3, r2
 801be68:	b280      	uxth	r0, r0
 801be6a:	b2b2      	uxth	r2, r6
 801be6c:	fb00 f602 	mul.w	r6, r0, r2
 801be70:	0100      	lsls	r0, r0, #4
 801be72:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801be76:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801be7a:	1b80      	subs	r0, r0, r6
 801be7c:	fa1f fc82 	uxth.w	ip, r2
 801be80:	b282      	uxth	r2, r0
 801be82:	78a0      	ldrb	r0, [r4, #2]
 801be84:	f897 e002 	ldrb.w	lr, [r7, #2]
 801be88:	f897 9000 	ldrb.w	r9, [r7]
 801be8c:	787f      	ldrb	r7, [r7, #1]
 801be8e:	eba8 080c 	sub.w	r8, r8, ip
 801be92:	fa1f f888 	uxth.w	r8, r8
 801be96:	4350      	muls	r0, r2
 801be98:	fb08 0e0e 	mla	lr, r8, lr, r0
 801be9c:	78a8      	ldrb	r0, [r5, #2]
 801be9e:	fb0c e000 	mla	r0, ip, r0, lr
 801bea2:	f893 e002 	ldrb.w	lr, [r3, #2]
 801bea6:	fb06 0e0e 	mla	lr, r6, lr, r0
 801beaa:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801beae:	f894 e000 	ldrb.w	lr, [r4]
 801beb2:	fb02 fe0e 	mul.w	lr, r2, lr
 801beb6:	fb08 e909 	mla	r9, r8, r9, lr
 801beba:	f895 e000 	ldrb.w	lr, [r5]
 801bebe:	fb0c 990e 	mla	r9, ip, lr, r9
 801bec2:	f893 e000 	ldrb.w	lr, [r3]
 801bec6:	785b      	ldrb	r3, [r3, #1]
 801bec8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801becc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801bed0:	ea4e 0e00 	orr.w	lr, lr, r0
 801bed4:	7860      	ldrb	r0, [r4, #1]
 801bed6:	4350      	muls	r0, r2
 801bed8:	786a      	ldrb	r2, [r5, #1]
 801beda:	fb08 0007 	mla	r0, r8, r7, r0
 801bede:	fb0c 0202 	mla	r2, ip, r2, r0
 801bee2:	fb06 2303 	mla	r3, r6, r3, r2
 801bee6:	095b      	lsrs	r3, r3, #5
 801bee8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801beec:	ea4e 0303 	orr.w	r3, lr, r3
 801bef0:	800b      	strh	r3, [r1, #0]
 801bef2:	b003      	add	sp, #12
 801bef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bef8:	af01      	add	r7, sp, #4
 801befa:	e78c      	b.n	801be16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801befc:	ac01      	add	r4, sp, #4
 801befe:	4627      	mov	r7, r4
 801bf00:	e795      	b.n	801be2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801bf02:	ac01      	add	r4, sp, #4
 801bf04:	e793      	b.n	801be2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801bf06:	ad01      	add	r5, sp, #4
 801bf08:	e7a1      	b.n	801be4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801bf0a:	ab01      	add	r3, sp, #4
 801bf0c:	461d      	mov	r5, r3
 801bf0e:	e7ab      	b.n	801be68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801bf10:	ab01      	add	r3, sp, #4
 801bf12:	e7a9      	b.n	801be68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801bf14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bf14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bf18:	b08f      	sub	sp, #60	@ 0x3c
 801bf1a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801bf1e:	920c      	str	r2, [sp, #48]	@ 0x30
 801bf20:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801bf22:	910a      	str	r1, [sp, #40]	@ 0x28
 801bf24:	9306      	str	r3, [sp, #24]
 801bf26:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801bf2a:	900d      	str	r0, [sp, #52]	@ 0x34
 801bf2c:	6850      	ldr	r0, [r2, #4]
 801bf2e:	6812      	ldr	r2, [r2, #0]
 801bf30:	fb00 1303 	mla	r3, r0, r3, r1
 801bf34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bf38:	9307      	str	r3, [sp, #28]
 801bf3a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bf3c:	681b      	ldr	r3, [r3, #0]
 801bf3e:	9308      	str	r3, [sp, #32]
 801bf40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bf42:	685c      	ldr	r4, [r3, #4]
 801bf44:	3404      	adds	r4, #4
 801bf46:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bf48:	2b00      	cmp	r3, #0
 801bf4a:	dc03      	bgt.n	801bf54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801bf4c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801bf4e:	2b00      	cmp	r3, #0
 801bf50:	f340 81d6 	ble.w	801c300 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801bf54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801bf56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bf5a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bf5e:	1e48      	subs	r0, r1, #1
 801bf60:	1e56      	subs	r6, r2, #1
 801bf62:	9b06      	ldr	r3, [sp, #24]
 801bf64:	2b00      	cmp	r3, #0
 801bf66:	f340 80b7 	ble.w	801c0d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801bf6a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801bf6e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bf72:	d406      	bmi.n	801bf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bf74:	4287      	cmp	r7, r0
 801bf76:	da04      	bge.n	801bf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bf78:	2b00      	cmp	r3, #0
 801bf7a:	db02      	blt.n	801bf82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bf7c:	42b3      	cmp	r3, r6
 801bf7e:	f2c0 80ac 	blt.w	801c0da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801bf82:	3701      	adds	r7, #1
 801bf84:	f100 809d 	bmi.w	801c0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bf88:	42b9      	cmp	r1, r7
 801bf8a:	f2c0 809a 	blt.w	801c0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bf8e:	3301      	adds	r3, #1
 801bf90:	f100 8097 	bmi.w	801c0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bf94:	429a      	cmp	r2, r3
 801bf96:	f2c0 8094 	blt.w	801c0c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801bf9a:	9b06      	ldr	r3, [sp, #24]
 801bf9c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bf9e:	9b07      	ldr	r3, [sp, #28]
 801bfa0:	9309      	str	r3, [sp, #36]	@ 0x24
 801bfa2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bfa4:	2b00      	cmp	r3, #0
 801bfa6:	f340 80b5 	ble.w	801c114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801bfaa:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801bfac:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801bfae:	68c7      	ldr	r7, [r0, #12]
 801bfb0:	6892      	ldr	r2, [r2, #8]
 801bfb2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801bfb6:	ea4f 4625 	mov.w	r6, r5, asr #16
 801bfba:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801bfbe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801bfc2:	f100 80fb 	bmi.w	801c1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bfc6:	f102 3cff 	add.w	ip, r2, #4294967295
 801bfca:	4560      	cmp	r0, ip
 801bfcc:	f280 80f6 	bge.w	801c1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bfd0:	2e00      	cmp	r6, #0
 801bfd2:	f2c0 80f3 	blt.w	801c1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bfd6:	f107 3cff 	add.w	ip, r7, #4294967295
 801bfda:	4566      	cmp	r6, ip
 801bfdc:	f280 80ee 	bge.w	801c1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801bfe0:	b212      	sxth	r2, r2
 801bfe2:	fb06 0002 	mla	r0, r6, r2, r0
 801bfe6:	9e08      	ldr	r6, [sp, #32]
 801bfe8:	1837      	adds	r7, r6, r0
 801bfea:	5c30      	ldrb	r0, [r6, r0]
 801bfec:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801bff0:	eb04 0c08 	add.w	ip, r4, r8
 801bff4:	2b00      	cmp	r3, #0
 801bff6:	f000 80d3 	beq.w	801c1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801bffa:	787e      	ldrb	r6, [r7, #1]
 801bffc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c000:	4426      	add	r6, r4
 801c002:	2900      	cmp	r1, #0
 801c004:	f000 80d4 	beq.w	801c1b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801c008:	18b8      	adds	r0, r7, r2
 801c00a:	5cba      	ldrb	r2, [r7, r2]
 801c00c:	7840      	ldrb	r0, [r0, #1]
 801c00e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c012:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c016:	4422      	add	r2, r4
 801c018:	4420      	add	r0, r4
 801c01a:	b29b      	uxth	r3, r3
 801c01c:	b289      	uxth	r1, r1
 801c01e:	fb03 f901 	mul.w	r9, r3, r1
 801c022:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c026:	011b      	lsls	r3, r3, #4
 801c028:	b289      	uxth	r1, r1
 801c02a:	78b7      	ldrb	r7, [r6, #2]
 801c02c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801c030:	f89c c001 	ldrb.w	ip, [ip, #1]
 801c034:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801c038:	eba3 0309 	sub.w	r3, r3, r9
 801c03c:	b29b      	uxth	r3, r3
 801c03e:	ebae 0e01 	sub.w	lr, lr, r1
 801c042:	fa1f fe8e 	uxth.w	lr, lr
 801c046:	435f      	muls	r7, r3
 801c048:	fb0e 770a 	mla	r7, lr, sl, r7
 801c04c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801c050:	fb01 770a 	mla	r7, r1, sl, r7
 801c054:	f890 a002 	ldrb.w	sl, [r0, #2]
 801c058:	fb09 7a0a 	mla	sl, r9, sl, r7
 801c05c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801c060:	f896 8000 	ldrb.w	r8, [r6]
 801c064:	7876      	ldrb	r6, [r6, #1]
 801c066:	fb03 f808 	mul.w	r8, r3, r8
 801c06a:	fb0e 8807 	mla	r8, lr, r7, r8
 801c06e:	7817      	ldrb	r7, [r2, #0]
 801c070:	fb01 8807 	mla	r8, r1, r7, r8
 801c074:	7807      	ldrb	r7, [r0, #0]
 801c076:	fb09 8707 	mla	r7, r9, r7, r8
 801c07a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801c07e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c082:	ea47 070a 	orr.w	r7, r7, sl
 801c086:	4373      	muls	r3, r6
 801c088:	f892 a001 	ldrb.w	sl, [r2, #1]
 801c08c:	fb0e 330c 	mla	r3, lr, ip, r3
 801c090:	fb01 310a 	mla	r1, r1, sl, r3
 801c094:	f890 a001 	ldrb.w	sl, [r0, #1]
 801c098:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c09a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801c09e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c0a2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c0a6:	ea47 070a 	orr.w	r7, r7, sl
 801c0aa:	801f      	strh	r7, [r3, #0]
 801c0ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c0ae:	3302      	adds	r3, #2
 801c0b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801c0b2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c0b4:	449b      	add	fp, r3
 801c0b6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c0b8:	441d      	add	r5, r3
 801c0ba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c0bc:	3b01      	subs	r3, #1
 801c0be:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c0c0:	e76f      	b.n	801bfa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c0c2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c0c4:	449b      	add	fp, r3
 801c0c6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c0c8:	441d      	add	r5, r3
 801c0ca:	9b06      	ldr	r3, [sp, #24]
 801c0cc:	3b01      	subs	r3, #1
 801c0ce:	9306      	str	r3, [sp, #24]
 801c0d0:	9b07      	ldr	r3, [sp, #28]
 801c0d2:	3302      	adds	r3, #2
 801c0d4:	9307      	str	r3, [sp, #28]
 801c0d6:	e744      	b.n	801bf62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801c0d8:	d023      	beq.n	801c122 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801c0da:	9b06      	ldr	r3, [sp, #24]
 801c0dc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801c0de:	3b01      	subs	r3, #1
 801c0e0:	fb00 b003 	mla	r0, r0, r3, fp
 801c0e4:	1400      	asrs	r0, r0, #16
 801c0e6:	f53f af58 	bmi.w	801bf9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c0ea:	3901      	subs	r1, #1
 801c0ec:	4288      	cmp	r0, r1
 801c0ee:	f6bf af54 	bge.w	801bf9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c0f2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801c0f4:	fb01 5303 	mla	r3, r1, r3, r5
 801c0f8:	141b      	asrs	r3, r3, #16
 801c0fa:	f53f af4e 	bmi.w	801bf9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c0fe:	3a01      	subs	r2, #1
 801c100:	4293      	cmp	r3, r2
 801c102:	f6bf af4a 	bge.w	801bf9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801c106:	9b06      	ldr	r3, [sp, #24]
 801c108:	9309      	str	r3, [sp, #36]	@ 0x24
 801c10a:	9b07      	ldr	r3, [sp, #28]
 801c10c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c10e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c110:	2b00      	cmp	r3, #0
 801c112:	dc70      	bgt.n	801c1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801c114:	9b06      	ldr	r3, [sp, #24]
 801c116:	9a07      	ldr	r2, [sp, #28]
 801c118:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801c11c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c120:	9307      	str	r3, [sp, #28]
 801c122:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c124:	2b00      	cmp	r3, #0
 801c126:	f340 80eb 	ble.w	801c300 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801c12a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c12e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c132:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c136:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c138:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c13c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c140:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c144:	eef0 6a62 	vmov.f32	s13, s5
 801c148:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c14c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c150:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c154:	ee16 ba90 	vmov	fp, s13
 801c158:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c15c:	eef0 6a43 	vmov.f32	s13, s6
 801c160:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c164:	ee12 2a90 	vmov	r2, s5
 801c168:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c16c:	fb92 f3f3 	sdiv	r3, r2, r3
 801c170:	ee13 2a10 	vmov	r2, s6
 801c174:	931b      	str	r3, [sp, #108]	@ 0x6c
 801c176:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c178:	fb92 f3f3 	sdiv	r3, r2, r3
 801c17c:	931c      	str	r3, [sp, #112]	@ 0x70
 801c17e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c180:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c182:	3b01      	subs	r3, #1
 801c184:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c188:	930a      	str	r3, [sp, #40]	@ 0x28
 801c18a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c18c:	bf08      	it	eq
 801c18e:	4613      	moveq	r3, r2
 801c190:	ee16 5a90 	vmov	r5, s13
 801c194:	9306      	str	r3, [sp, #24]
 801c196:	eeb0 3a67 	vmov.f32	s6, s15
 801c19a:	eef0 2a47 	vmov.f32	s5, s14
 801c19e:	e6d2      	b.n	801bf46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801c1a0:	b149      	cbz	r1, 801c1b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801c1a2:	5cba      	ldrb	r2, [r7, r2]
 801c1a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c1a8:	4422      	add	r2, r4
 801c1aa:	4660      	mov	r0, ip
 801c1ac:	4666      	mov	r6, ip
 801c1ae:	e734      	b.n	801c01a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801c1b0:	4660      	mov	r0, ip
 801c1b2:	4662      	mov	r2, ip
 801c1b4:	e731      	b.n	801c01a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801c1b6:	4660      	mov	r0, ip
 801c1b8:	4662      	mov	r2, ip
 801c1ba:	e7f7      	b.n	801c1ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801c1bc:	f110 0c01 	adds.w	ip, r0, #1
 801c1c0:	f53f af74 	bmi.w	801c0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c1c4:	4562      	cmp	r2, ip
 801c1c6:	f6ff af71 	blt.w	801c0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c1ca:	f116 0c01 	adds.w	ip, r6, #1
 801c1ce:	f53f af6d 	bmi.w	801c0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c1d2:	4567      	cmp	r7, ip
 801c1d4:	f6ff af6a 	blt.w	801c0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c1d8:	b23f      	sxth	r7, r7
 801c1da:	b212      	sxth	r2, r2
 801c1dc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801c1e0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801c1e4:	9200      	str	r2, [sp, #0]
 801c1e6:	9701      	str	r7, [sp, #4]
 801c1e8:	4623      	mov	r3, r4
 801c1ea:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c1ee:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801c1f0:	f7ff fde6 	bl	801bdc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801c1f4:	e75a      	b.n	801c0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c1f6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801c1f8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801c1fc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801c200:	1428      	asrs	r0, r5, #16
 801c202:	fb02 6000 	mla	r0, r2, r0, r6
 801c206:	9e08      	ldr	r6, [sp, #32]
 801c208:	f816 8000 	ldrb.w	r8, [r6, r0]
 801c20c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801c210:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801c214:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c218:	1837      	adds	r7, r6, r0
 801c21a:	eb04 0c08 	add.w	ip, r4, r8
 801c21e:	2b00      	cmp	r3, #0
 801c220:	d060      	beq.n	801c2e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801c222:	787e      	ldrb	r6, [r7, #1]
 801c224:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801c228:	4426      	add	r6, r4
 801c22a:	2900      	cmp	r1, #0
 801c22c:	d062      	beq.n	801c2f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801c22e:	18b8      	adds	r0, r7, r2
 801c230:	5cba      	ldrb	r2, [r7, r2]
 801c232:	7840      	ldrb	r0, [r0, #1]
 801c234:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c238:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801c23c:	4422      	add	r2, r4
 801c23e:	4420      	add	r0, r4
 801c240:	b29b      	uxth	r3, r3
 801c242:	b289      	uxth	r1, r1
 801c244:	fb03 f901 	mul.w	r9, r3, r1
 801c248:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c24c:	011b      	lsls	r3, r3, #4
 801c24e:	b289      	uxth	r1, r1
 801c250:	78b7      	ldrb	r7, [r6, #2]
 801c252:	f89c a002 	ldrb.w	sl, [ip, #2]
 801c256:	f89c c001 	ldrb.w	ip, [ip, #1]
 801c25a:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801c25e:	eba3 0309 	sub.w	r3, r3, r9
 801c262:	b29b      	uxth	r3, r3
 801c264:	ebae 0e01 	sub.w	lr, lr, r1
 801c268:	fa1f fe8e 	uxth.w	lr, lr
 801c26c:	435f      	muls	r7, r3
 801c26e:	fb0e 770a 	mla	r7, lr, sl, r7
 801c272:	f892 a002 	ldrb.w	sl, [r2, #2]
 801c276:	fb01 770a 	mla	r7, r1, sl, r7
 801c27a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801c27e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801c282:	f814 7008 	ldrb.w	r7, [r4, r8]
 801c286:	f896 8000 	ldrb.w	r8, [r6]
 801c28a:	7876      	ldrb	r6, [r6, #1]
 801c28c:	fb03 f808 	mul.w	r8, r3, r8
 801c290:	fb0e 8807 	mla	r8, lr, r7, r8
 801c294:	7817      	ldrb	r7, [r2, #0]
 801c296:	fb01 8807 	mla	r8, r1, r7, r8
 801c29a:	7807      	ldrb	r7, [r0, #0]
 801c29c:	fb09 8707 	mla	r7, r9, r7, r8
 801c2a0:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801c2a4:	4373      	muls	r3, r6
 801c2a6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c2aa:	7856      	ldrb	r6, [r2, #1]
 801c2ac:	ea47 070a 	orr.w	r7, r7, sl
 801c2b0:	fb0e 330c 	mla	r3, lr, ip, r3
 801c2b4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801c2b8:	fb01 3306 	mla	r3, r1, r6, r3
 801c2bc:	fb09 3a0a 	mla	sl, r9, sl, r3
 801c2c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c2c4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c2c6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c2ca:	ea47 070a 	orr.w	r7, r7, sl
 801c2ce:	f823 7b02 	strh.w	r7, [r3], #2
 801c2d2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c2d4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c2d6:	449b      	add	fp, r3
 801c2d8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801c2da:	441d      	add	r5, r3
 801c2dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c2de:	3b01      	subs	r3, #1
 801c2e0:	9309      	str	r3, [sp, #36]	@ 0x24
 801c2e2:	e714      	b.n	801c10e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801c2e4:	b149      	cbz	r1, 801c2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801c2e6:	5cba      	ldrb	r2, [r7, r2]
 801c2e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801c2ec:	4422      	add	r2, r4
 801c2ee:	4660      	mov	r0, ip
 801c2f0:	4666      	mov	r6, ip
 801c2f2:	e7a5      	b.n	801c240 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801c2f4:	4660      	mov	r0, ip
 801c2f6:	4662      	mov	r2, ip
 801c2f8:	e7a2      	b.n	801c240 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801c2fa:	4660      	mov	r0, ip
 801c2fc:	4662      	mov	r2, ip
 801c2fe:	e7f7      	b.n	801c2f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801c300:	b00f      	add	sp, #60	@ 0x3c
 801c302:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c306 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801c306:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c30a:	b085      	sub	sp, #20
 801c30c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801c310:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801c314:	9102      	str	r1, [sp, #8]
 801c316:	2c00      	cmp	r4, #0
 801c318:	fb04 710c 	mla	r1, r4, ip, r7
 801c31c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801c320:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801c324:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801c328:	eb02 0e01 	add.w	lr, r2, r1
 801c32c:	f2c0 8122 	blt.w	801c574 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801c330:	45a0      	cmp	r8, r4
 801c332:	f340 811f 	ble.w	801c574 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801c336:	2f00      	cmp	r7, #0
 801c338:	f2c0 811a 	blt.w	801c570 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801c33c:	45bc      	cmp	ip, r7
 801c33e:	f340 8117 	ble.w	801c570 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801c342:	5c52      	ldrb	r2, [r2, r1]
 801c344:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801c348:	1c7a      	adds	r2, r7, #1
 801c34a:	f100 8116 	bmi.w	801c57a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801c34e:	4594      	cmp	ip, r2
 801c350:	f340 8113 	ble.w	801c57a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801c354:	2e00      	cmp	r6, #0
 801c356:	f000 8112 	beq.w	801c57e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801c35a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c35e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801c362:	3401      	adds	r4, #1
 801c364:	f100 810f 	bmi.w	801c586 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801c368:	45a0      	cmp	r8, r4
 801c36a:	f340 810c 	ble.w	801c586 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801c36e:	2800      	cmp	r0, #0
 801c370:	f000 810c 	beq.w	801c58c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801c374:	2f00      	cmp	r7, #0
 801c376:	f2c0 8104 	blt.w	801c582 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801c37a:	45bc      	cmp	ip, r7
 801c37c:	f340 8101 	ble.w	801c582 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801c380:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801c384:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801c388:	3701      	adds	r7, #1
 801c38a:	f100 8102 	bmi.w	801c592 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801c38e:	45bc      	cmp	ip, r7
 801c390:	f340 80ff 	ble.w	801c592 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801c394:	2e00      	cmp	r6, #0
 801c396:	f000 80fe 	beq.w	801c596 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801c39a:	44f4      	add	ip, lr
 801c39c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801c3a0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801c3a4:	b2b6      	uxth	r6, r6
 801c3a6:	b280      	uxth	r0, r0
 801c3a8:	fb00 fe06 	mul.w	lr, r0, r6
 801c3ac:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801c3b0:	0136      	lsls	r6, r6, #4
 801c3b2:	eba6 070e 	sub.w	r7, r6, lr
 801c3b6:	b280      	uxth	r0, r0
 801c3b8:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801c3bc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801c3c0:	b2bf      	uxth	r7, r7
 801c3c2:	1a1b      	subs	r3, r3, r0
 801c3c4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801c3c8:	b29b      	uxth	r3, r3
 801c3ca:	fb0a f607 	mul.w	r6, sl, r7
 801c3ce:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801c3d2:	fb0b 6603 	mla	r6, fp, r3, r6
 801c3d6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801c3da:	fb00 6609 	mla	r6, r0, r9, r6
 801c3de:	fb0e 6608 	mla	r6, lr, r8, r6
 801c3e2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801c3e6:	9600      	str	r6, [sp, #0]
 801c3e8:	2e00      	cmp	r6, #0
 801c3ea:	f000 80be 	beq.w	801c56a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801c3ee:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801c3f2:	fb0b fc0c 	mul.w	ip, fp, ip
 801c3f6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801c3fa:	fb0b f505 	mul.w	r5, fp, r5
 801c3fe:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801c402:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801c406:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c40a:	44dc      	add	ip, fp
 801c40c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c410:	9501      	str	r5, [sp, #4]
 801c412:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801c416:	9503      	str	r5, [sp, #12]
 801c418:	9d01      	ldr	r5, [sp, #4]
 801c41a:	9e02      	ldr	r6, [sp, #8]
 801c41c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801c420:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c424:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801c428:	fb0a fc0c 	mul.w	ip, sl, ip
 801c42c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801c430:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801c434:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c438:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c43c:	4465      	add	r5, ip
 801c43e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c442:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801c446:	fb09 fc0c 	mul.w	ip, r9, ip
 801c44a:	fb09 f904 	mul.w	r9, r9, r4
 801c44e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801c452:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801c456:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801c45a:	fb08 f404 	mul.w	r4, r8, r4
 801c45e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c462:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801c466:	fb08 f802 	mul.w	r8, r8, r2
 801c46a:	fb0a fa01 	mul.w	sl, sl, r1
 801c46e:	0a22      	lsrs	r2, r4, #8
 801c470:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801c474:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801c478:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801c47c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801c480:	4414      	add	r4, r2
 801c482:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801c486:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801c48a:	0a2d      	lsrs	r5, r5, #8
 801c48c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801c490:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801c494:	9a03      	ldr	r2, [sp, #12]
 801c496:	8836      	ldrh	r6, [r6, #0]
 801c498:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c49c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801c4a0:	437d      	muls	r5, r7
 801c4a2:	4461      	add	r1, ip
 801c4a4:	0a24      	lsrs	r4, r4, #8
 801c4a6:	fb02 5503 	mla	r5, r2, r3, r5
 801c4aa:	0a09      	lsrs	r1, r1, #8
 801c4ac:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801c4b0:	fb04 540e 	mla	r4, r4, lr, r5
 801c4b4:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801c4b8:	fb01 4100 	mla	r1, r1, r0, r4
 801c4bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c4c0:	0a09      	lsrs	r1, r1, #8
 801c4c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c4c6:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801c4ca:	fb07 f70a 	mul.w	r7, r7, sl
 801c4ce:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801c4d2:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801c4d6:	fb03 7101 	mla	r1, r3, r1, r7
 801c4da:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c4de:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801c4e2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801c4e6:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801c4ea:	fb00 e101 	mla	r1, r0, r1, lr
 801c4ee:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801c4f2:	9a00      	ldr	r2, [sp, #0]
 801c4f4:	b287      	uxth	r7, r0
 801c4f6:	437a      	muls	r2, r7
 801c4f8:	0a09      	lsrs	r1, r1, #8
 801c4fa:	1c53      	adds	r3, r2, #1
 801c4fc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801c500:	4321      	orrs	r1, r4
 801c502:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c506:	1235      	asrs	r5, r6, #8
 801c508:	0c0a      	lsrs	r2, r1, #16
 801c50a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801c50e:	b2db      	uxtb	r3, r3
 801c510:	fb12 f207 	smulbb	r2, r2, r7
 801c514:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c518:	fb05 2503 	mla	r5, r5, r3, r2
 801c51c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801c520:	10f2      	asrs	r2, r6, #3
 801c522:	b2c8      	uxtb	r0, r1
 801c524:	00f6      	lsls	r6, r6, #3
 801c526:	fb14 f407 	smulbb	r4, r4, r7
 801c52a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c52e:	b2f6      	uxtb	r6, r6
 801c530:	fb10 f007 	smulbb	r0, r0, r7
 801c534:	fb02 4203 	mla	r2, r2, r3, r4
 801c538:	b2ad      	uxth	r5, r5
 801c53a:	fb06 0303 	mla	r3, r6, r3, r0
 801c53e:	b299      	uxth	r1, r3
 801c540:	b294      	uxth	r4, r2
 801c542:	1c6b      	adds	r3, r5, #1
 801c544:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c548:	1c62      	adds	r2, r4, #1
 801c54a:	1c4b      	adds	r3, r1, #1
 801c54c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c550:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801c554:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c558:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c55c:	0952      	lsrs	r2, r2, #5
 801c55e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c562:	432b      	orrs	r3, r5
 801c564:	4313      	orrs	r3, r2
 801c566:	9a02      	ldr	r2, [sp, #8]
 801c568:	8013      	strh	r3, [r2, #0]
 801c56a:	b005      	add	sp, #20
 801c56c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c570:	2500      	movs	r5, #0
 801c572:	e6e9      	b.n	801c348 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801c574:	2100      	movs	r1, #0
 801c576:	460d      	mov	r5, r1
 801c578:	e6f3      	b.n	801c362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c57a:	2100      	movs	r1, #0
 801c57c:	e6f1      	b.n	801c362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c57e:	4631      	mov	r1, r6
 801c580:	e6ef      	b.n	801c362 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801c582:	2400      	movs	r4, #0
 801c584:	e700      	b.n	801c388 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801c586:	2200      	movs	r2, #0
 801c588:	4614      	mov	r4, r2
 801c58a:	e70b      	b.n	801c3a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c58c:	4602      	mov	r2, r0
 801c58e:	4604      	mov	r4, r0
 801c590:	e708      	b.n	801c3a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c592:	2200      	movs	r2, #0
 801c594:	e706      	b.n	801c3a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801c596:	4632      	mov	r2, r6
 801c598:	e704      	b.n	801c3a4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801c59a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c59a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c59e:	b09f      	sub	sp, #124	@ 0x7c
 801c5a0:	921b      	str	r2, [sp, #108]	@ 0x6c
 801c5a2:	9309      	str	r3, [sp, #36]	@ 0x24
 801c5a4:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801c5a6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801c5aa:	931c      	str	r3, [sp, #112]	@ 0x70
 801c5ac:	9119      	str	r1, [sp, #100]	@ 0x64
 801c5ae:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801c5b2:	901d      	str	r0, [sp, #116]	@ 0x74
 801c5b4:	6850      	ldr	r0, [r2, #4]
 801c5b6:	6812      	ldr	r2, [r2, #0]
 801c5b8:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801c5ba:	fb00 1303 	mla	r3, r0, r3, r1
 801c5be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c5c2:	930c      	str	r3, [sp, #48]	@ 0x30
 801c5c4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c5c6:	681b      	ldr	r3, [r3, #0]
 801c5c8:	9312      	str	r3, [sp, #72]	@ 0x48
 801c5ca:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c5cc:	685e      	ldr	r6, [r3, #4]
 801c5ce:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801c5d2:	930d      	str	r3, [sp, #52]	@ 0x34
 801c5d4:	3604      	adds	r6, #4
 801c5d6:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c5d8:	2b00      	cmp	r3, #0
 801c5da:	dc03      	bgt.n	801c5e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801c5dc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801c5de:	2b00      	cmp	r3, #0
 801c5e0:	f340 8388 	ble.w	801ccf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801c5e4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c5e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c5ee:	1e48      	subs	r0, r1, #1
 801c5f0:	1e57      	subs	r7, r2, #1
 801c5f2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c5f4:	2b00      	cmp	r3, #0
 801c5f6:	f340 8195 	ble.w	801c924 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c5fa:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c5fc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c600:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c604:	d406      	bmi.n	801c614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c606:	4584      	cmp	ip, r0
 801c608:	da04      	bge.n	801c614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c60a:	2b00      	cmp	r3, #0
 801c60c:	db02      	blt.n	801c614 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c60e:	42bb      	cmp	r3, r7
 801c610:	f2c0 8189 	blt.w	801c926 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801c614:	f11c 0c01 	adds.w	ip, ip, #1
 801c618:	f100 8177 	bmi.w	801c90a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c61c:	4561      	cmp	r1, ip
 801c61e:	f2c0 8174 	blt.w	801c90a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c622:	3301      	adds	r3, #1
 801c624:	f100 8171 	bmi.w	801c90a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c628:	429a      	cmp	r2, r3
 801c62a:	f2c0 816e 	blt.w	801c90a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c62e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c630:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801c632:	931a      	str	r3, [sp, #104]	@ 0x68
 801c634:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801c636:	2b00      	cmp	r3, #0
 801c638:	f340 8193 	ble.w	801c962 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801c63c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c63e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c642:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801c644:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801c648:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801c64a:	141b      	asrs	r3, r3, #16
 801c64c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c650:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c654:	f100 81d6 	bmi.w	801ca04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c658:	f100 38ff 	add.w	r8, r0, #4294967295
 801c65c:	4543      	cmp	r3, r8
 801c65e:	f280 81d1 	bge.w	801ca04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c662:	f1bc 0f00 	cmp.w	ip, #0
 801c666:	f2c0 81cd 	blt.w	801ca04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c66a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c66e:	45c4      	cmp	ip, r8
 801c670:	f280 81c8 	bge.w	801ca04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801c674:	b200      	sxth	r0, r0
 801c676:	fb0c 3300 	mla	r3, ip, r0, r3
 801c67a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c67c:	eb04 0803 	add.w	r8, r4, r3
 801c680:	5ce3      	ldrb	r3, [r4, r3]
 801c682:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c686:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c68a:	2a00      	cmp	r2, #0
 801c68c:	f000 81af 	beq.w	801c9ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c690:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c694:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c698:	940e      	str	r4, [sp, #56]	@ 0x38
 801c69a:	0e24      	lsrs	r4, r4, #24
 801c69c:	9415      	str	r4, [sp, #84]	@ 0x54
 801c69e:	b179      	cbz	r1, 801c6c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c6a0:	eb08 0c00 	add.w	ip, r8, r0
 801c6a4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c6a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c6ac:	900a      	str	r0, [sp, #40]	@ 0x28
 801c6ae:	0e00      	lsrs	r0, r0, #24
 801c6b0:	9013      	str	r0, [sp, #76]	@ 0x4c
 801c6b2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801c6b6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c6ba:	900f      	str	r0, [sp, #60]	@ 0x3c
 801c6bc:	0e00      	lsrs	r0, r0, #24
 801c6be:	9016      	str	r0, [sp, #88]	@ 0x58
 801c6c0:	b292      	uxth	r2, r2
 801c6c2:	b289      	uxth	r1, r1
 801c6c4:	fb02 f901 	mul.w	r9, r2, r1
 801c6c8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801c6cc:	0112      	lsls	r2, r2, #4
 801c6ce:	eba2 0809 	sub.w	r8, r2, r9
 801c6d2:	b289      	uxth	r1, r1
 801c6d4:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801c6d8:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c6da:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c6dc:	fa1f f888 	uxth.w	r8, r8
 801c6e0:	1a52      	subs	r2, r2, r1
 801c6e2:	b292      	uxth	r2, r2
 801c6e4:	fb08 f000 	mul.w	r0, r8, r0
 801c6e8:	fb02 000e 	mla	r0, r2, lr, r0
 801c6ec:	fb01 0004 	mla	r0, r1, r4, r0
 801c6f0:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c6f2:	fb09 0004 	mla	r0, r9, r4, r0
 801c6f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801c6fa:	2800      	cmp	r0, #0
 801c6fc:	f000 80fa 	beq.w	801c8f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c700:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801c704:	d01b      	beq.n	801c73e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801c706:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801c70a:	fb0e fa0a 	mul.w	sl, lr, sl
 801c70e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c712:	fb0e fe03 	mul.w	lr, lr, r3
 801c716:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c71a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c71e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801c722:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801c726:	4453      	add	r3, sl
 801c728:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c72c:	0a1b      	lsrs	r3, r3, #8
 801c72e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c732:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801c736:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c73a:	ea43 030c 	orr.w	r3, r3, ip
 801c73e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c740:	2cff      	cmp	r4, #255	@ 0xff
 801c742:	d021      	beq.n	801c788 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801c744:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c746:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c74a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c74c:	fb04 fb0b 	mul.w	fp, r4, fp
 801c750:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c752:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c756:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801c758:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c75c:	fb04 fa0a 	mul.w	sl, r4, sl
 801c760:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c764:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c768:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c76c:	44de      	add	lr, fp
 801c76e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c772:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c776:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c77a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c77e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c782:	ea4e 040a 	orr.w	r4, lr, sl
 801c786:	940e      	str	r4, [sp, #56]	@ 0x38
 801c788:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c78a:	2cff      	cmp	r4, #255	@ 0xff
 801c78c:	d021      	beq.n	801c7d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801c78e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c790:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c794:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c796:	fb04 fb0b 	mul.w	fp, r4, fp
 801c79a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c79c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c7a0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801c7a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c7a6:	fb04 fa0a 	mul.w	sl, r4, sl
 801c7aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c7ae:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c7b2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c7b6:	44de      	add	lr, fp
 801c7b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c7bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c7c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c7c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c7c8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c7cc:	ea4e 040a 	orr.w	r4, lr, sl
 801c7d0:	940a      	str	r4, [sp, #40]	@ 0x28
 801c7d2:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c7d4:	2cff      	cmp	r4, #255	@ 0xff
 801c7d6:	d021      	beq.n	801c81c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c7d8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c7da:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801c7de:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c7e0:	fb04 fb0b 	mul.w	fp, r4, fp
 801c7e4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c7e6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801c7ea:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801c7ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c7f0:	fb04 fa0a 	mul.w	sl, r4, sl
 801c7f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c7f8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801c7fc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801c800:	44de      	add	lr, fp
 801c802:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c806:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c80a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c80e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801c812:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c816:	ea4e 040a 	orr.w	r4, lr, sl
 801c81a:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c81c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c81e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c822:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c824:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801c828:	fb08 fc0c 	mul.w	ip, r8, ip
 801c82c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c830:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c834:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801c836:	fb01 cc0e 	mla	ip, r1, lr, ip
 801c83a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801c83e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c840:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c844:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801c848:	fb08 f80e 	mul.w	r8, r8, lr
 801c84c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c850:	fb02 8303 	mla	r3, r2, r3, r8
 801c854:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c856:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c858:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801c85c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801c85e:	fb01 330a 	mla	r3, r1, sl, r3
 801c862:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801c866:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801c868:	fb09 3901 	mla	r9, r9, r1, r3
 801c86c:	4342      	muls	r2, r0
 801c86e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c872:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c876:	883b      	ldrh	r3, [r7, #0]
 801c878:	1c50      	adds	r0, r2, #1
 801c87a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c87e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801c882:	ea4c 0c09 	orr.w	ip, ip, r9
 801c886:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801c88a:	1219      	asrs	r1, r3, #8
 801c88c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801c890:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801c894:	b2c0      	uxtb	r0, r0
 801c896:	fb12 f204 	smulbb	r2, r2, r4
 801c89a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c89e:	fb01 2100 	mla	r1, r1, r0, r2
 801c8a2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801c8a6:	10da      	asrs	r2, r3, #3
 801c8a8:	fa5f fc8c 	uxtb.w	ip, ip
 801c8ac:	00db      	lsls	r3, r3, #3
 801c8ae:	fb1c fc04 	smulbb	ip, ip, r4
 801c8b2:	b2db      	uxtb	r3, r3
 801c8b4:	b289      	uxth	r1, r1
 801c8b6:	fb03 c300 	mla	r3, r3, r0, ip
 801c8ba:	fa1f fc83 	uxth.w	ip, r3
 801c8be:	1c4b      	adds	r3, r1, #1
 801c8c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c8c4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c8c8:	fb1e fe04 	smulbb	lr, lr, r4
 801c8cc:	f10c 0301 	add.w	r3, ip, #1
 801c8d0:	fb02 e200 	mla	r2, r2, r0, lr
 801c8d4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801c8d8:	b292      	uxth	r2, r2
 801c8da:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801c8de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c8e2:	430b      	orrs	r3, r1
 801c8e4:	1c51      	adds	r1, r2, #1
 801c8e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c8ea:	0952      	lsrs	r2, r2, #5
 801c8ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c8f0:	4313      	orrs	r3, r2
 801c8f2:	803b      	strh	r3, [r7, #0]
 801c8f4:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c8f6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801c8f8:	441a      	add	r2, r3
 801c8fa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c8fc:	9229      	str	r2, [sp, #164]	@ 0xa4
 801c8fe:	441d      	add	r5, r3
 801c900:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801c902:	3b01      	subs	r3, #1
 801c904:	3702      	adds	r7, #2
 801c906:	931a      	str	r3, [sp, #104]	@ 0x68
 801c908:	e694      	b.n	801c634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c90a:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801c90c:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c90e:	441c      	add	r4, r3
 801c910:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801c912:	9429      	str	r4, [sp, #164]	@ 0xa4
 801c914:	441d      	add	r5, r3
 801c916:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c918:	3b01      	subs	r3, #1
 801c91a:	9309      	str	r3, [sp, #36]	@ 0x24
 801c91c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c91e:	3302      	adds	r3, #2
 801c920:	930c      	str	r3, [sp, #48]	@ 0x30
 801c922:	e666      	b.n	801c5f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801c924:	d024      	beq.n	801c970 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801c926:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c928:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801c92a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801c92c:	3b01      	subs	r3, #1
 801c92e:	fb00 4003 	mla	r0, r0, r3, r4
 801c932:	1400      	asrs	r0, r0, #16
 801c934:	f53f ae7b 	bmi.w	801c62e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c938:	3901      	subs	r1, #1
 801c93a:	4288      	cmp	r0, r1
 801c93c:	f6bf ae77 	bge.w	801c62e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c940:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801c942:	fb01 5303 	mla	r3, r1, r3, r5
 801c946:	141b      	asrs	r3, r3, #16
 801c948:	f53f ae71 	bmi.w	801c62e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c94c:	3a01      	subs	r2, #1
 801c94e:	4293      	cmp	r3, r2
 801c950:	f6bf ae6d 	bge.w	801c62e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801c954:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c958:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801c95c:	f1bb 0f00 	cmp.w	fp, #0
 801c960:	dc70      	bgt.n	801ca44 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801c962:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c964:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c968:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c96a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c96e:	930c      	str	r3, [sp, #48]	@ 0x30
 801c970:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c972:	2b00      	cmp	r3, #0
 801c974:	f340 81be 	ble.w	801ccf4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801c978:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c97c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c980:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c984:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c986:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c98a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c98e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c992:	eef0 6a62 	vmov.f32	s13, s5
 801c996:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c99a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c99e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c9a2:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801c9a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c9aa:	eef0 6a43 	vmov.f32	s13, s6
 801c9ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c9b2:	ee12 2a90 	vmov	r2, s5
 801c9b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c9ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9be:	ee13 2a10 	vmov	r2, s6
 801c9c2:	932b      	str	r3, [sp, #172]	@ 0xac
 801c9c4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c9c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801c9ca:	932c      	str	r3, [sp, #176]	@ 0xb0
 801c9cc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801c9ce:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801c9d0:	3b01      	subs	r3, #1
 801c9d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c9d6:	9319      	str	r3, [sp, #100]	@ 0x64
 801c9d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c9da:	bf08      	it	eq
 801c9dc:	4613      	moveq	r3, r2
 801c9de:	ee16 5a90 	vmov	r5, s13
 801c9e2:	9309      	str	r3, [sp, #36]	@ 0x24
 801c9e4:	eeb0 3a67 	vmov.f32	s6, s15
 801c9e8:	eef0 2a47 	vmov.f32	s5, s14
 801c9ec:	e5f3      	b.n	801c5d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801c9ee:	2900      	cmp	r1, #0
 801c9f0:	f43f ae66 	beq.w	801c6c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801c9f4:	f818 0000 	ldrb.w	r0, [r8, r0]
 801c9f8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801c9fc:	900a      	str	r0, [sp, #40]	@ 0x28
 801c9fe:	0e00      	lsrs	r0, r0, #24
 801ca00:	9013      	str	r0, [sp, #76]	@ 0x4c
 801ca02:	e65d      	b.n	801c6c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ca04:	f113 0801 	adds.w	r8, r3, #1
 801ca08:	f53f af74 	bmi.w	801c8f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ca0c:	4540      	cmp	r0, r8
 801ca0e:	f6ff af71 	blt.w	801c8f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ca12:	f11c 0801 	adds.w	r8, ip, #1
 801ca16:	f53f af6d 	bmi.w	801c8f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ca1a:	45c6      	cmp	lr, r8
 801ca1c:	f6ff af6a 	blt.w	801c8f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ca20:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801ca22:	9302      	str	r3, [sp, #8]
 801ca24:	b200      	sxth	r0, r0
 801ca26:	fa0f f38e 	sxth.w	r3, lr
 801ca2a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ca2e:	e9cd c203 	strd	ip, r2, [sp, #12]
 801ca32:	9301      	str	r3, [sp, #4]
 801ca34:	9000      	str	r0, [sp, #0]
 801ca36:	4633      	mov	r3, r6
 801ca38:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ca3a:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801ca3c:	4639      	mov	r1, r7
 801ca3e:	f7ff fc62 	bl	801c306 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801ca42:	e757      	b.n	801c8f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ca44:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ca46:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ca48:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ca4c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801ca4e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ca52:	1427      	asrs	r7, r4, #16
 801ca54:	142b      	asrs	r3, r5, #16
 801ca56:	fb01 7303 	mla	r3, r1, r3, r7
 801ca5a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ca5c:	18e7      	adds	r7, r4, r3
 801ca5e:	5ce3      	ldrb	r3, [r4, r3]
 801ca60:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ca64:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ca68:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ca6c:	2a00      	cmp	r2, #0
 801ca6e:	f000 8137 	beq.w	801cce0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ca72:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ca76:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ca7a:	9410      	str	r4, [sp, #64]	@ 0x40
 801ca7c:	0e24      	lsrs	r4, r4, #24
 801ca7e:	9417      	str	r4, [sp, #92]	@ 0x5c
 801ca80:	b170      	cbz	r0, 801caa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801ca82:	eb07 0e01 	add.w	lr, r7, r1
 801ca86:	5c79      	ldrb	r1, [r7, r1]
 801ca88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ca8c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ca8e:	0e09      	lsrs	r1, r1, #24
 801ca90:	9114      	str	r1, [sp, #80]	@ 0x50
 801ca92:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801ca96:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ca9a:	9111      	str	r1, [sp, #68]	@ 0x44
 801ca9c:	0e09      	lsrs	r1, r1, #24
 801ca9e:	9118      	str	r1, [sp, #96]	@ 0x60
 801caa0:	b292      	uxth	r2, r2
 801caa2:	b280      	uxth	r0, r0
 801caa4:	fb02 f800 	mul.w	r8, r2, r0
 801caa8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801caac:	0112      	lsls	r2, r2, #4
 801caae:	eba2 0e08 	sub.w	lr, r2, r8
 801cab2:	b280      	uxth	r0, r0
 801cab4:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801cab8:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801caba:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cabc:	fa1f fe8e 	uxth.w	lr, lr
 801cac0:	1a12      	subs	r2, r2, r0
 801cac2:	b292      	uxth	r2, r2
 801cac4:	fb0e f101 	mul.w	r1, lr, r1
 801cac8:	fb02 110c 	mla	r1, r2, ip, r1
 801cacc:	fb00 1104 	mla	r1, r0, r4, r1
 801cad0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cad2:	fb08 1104 	mla	r1, r8, r4, r1
 801cad6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801cada:	2900      	cmp	r1, #0
 801cadc:	f000 80f5 	beq.w	801ccca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801cae0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801cae4:	d019      	beq.n	801cb1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801cae6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801caea:	fb0c fa0a 	mul.w	sl, ip, sl
 801caee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801caf2:	fb0c fc03 	mul.w	ip, ip, r3
 801caf6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801cafa:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cafe:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801cb02:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801cb06:	4453      	add	r3, sl
 801cb08:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801cb0c:	0a1b      	lsrs	r3, r3, #8
 801cb0e:	0a3f      	lsrs	r7, r7, #8
 801cb10:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801cb14:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801cb18:	433b      	orrs	r3, r7
 801cb1a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cb1c:	2cff      	cmp	r4, #255	@ 0xff
 801cb1e:	d020      	beq.n	801cb62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801cb20:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cb22:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cb26:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cb28:	4367      	muls	r7, r4
 801cb2a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cb2c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cb30:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cb32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cb36:	fb04 fa0a 	mul.w	sl, r4, sl
 801cb3a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cb3e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cb42:	44bc      	add	ip, r7
 801cb44:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cb48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cb4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cb50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cb54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cb58:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cb5c:	ea4c 040a 	orr.w	r4, ip, sl
 801cb60:	9410      	str	r4, [sp, #64]	@ 0x40
 801cb62:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cb64:	2cff      	cmp	r4, #255	@ 0xff
 801cb66:	d020      	beq.n	801cbaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801cb68:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cb6a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cb6e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cb70:	4367      	muls	r7, r4
 801cb72:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cb74:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cb78:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cb7a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cb7e:	fb04 fa0a 	mul.w	sl, r4, sl
 801cb82:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cb86:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cb8a:	44bc      	add	ip, r7
 801cb8c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cb90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cb94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cb98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cb9c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cba0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cba4:	ea4c 040a 	orr.w	r4, ip, sl
 801cba8:	940b      	str	r4, [sp, #44]	@ 0x2c
 801cbaa:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cbac:	2cff      	cmp	r4, #255	@ 0xff
 801cbae:	d020      	beq.n	801cbf2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801cbb0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cbb2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cbb6:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cbb8:	4367      	muls	r7, r4
 801cbba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cbbc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801cbc0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801cbc2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801cbc6:	fb04 fa0a 	mul.w	sl, r4, sl
 801cbca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801cbce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cbd2:	44bc      	add	ip, r7
 801cbd4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801cbd8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801cbdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cbe0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801cbe4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801cbe8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801cbec:	ea4c 040a 	orr.w	r4, ip, sl
 801cbf0:	9411      	str	r4, [sp, #68]	@ 0x44
 801cbf2:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cbf4:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801cbf8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cbfa:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801cbfe:	fb0e f707 	mul.w	r7, lr, r7
 801cc02:	fb02 770c 	mla	r7, r2, ip, r7
 801cc06:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cc0a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801cc0c:	fb00 770c 	mla	r7, r0, ip, r7
 801cc10:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801cc14:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801cc16:	fb08 770c 	mla	r7, r8, ip, r7
 801cc1a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801cc1e:	fb0e fe0c 	mul.w	lr, lr, ip
 801cc22:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cc26:	fb02 e303 	mla	r3, r2, r3, lr
 801cc2a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cc2c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cc2e:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801cc32:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801cc34:	fb00 330a 	mla	r3, r0, sl, r3
 801cc38:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801cc3c:	fb08 3c0c 	mla	ip, r8, ip, r3
 801cc40:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cc42:	f8b9 0000 	ldrh.w	r0, [r9]
 801cc46:	434b      	muls	r3, r1
 801cc48:	0a3f      	lsrs	r7, r7, #8
 801cc4a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cc4e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801cc52:	1c59      	adds	r1, r3, #1
 801cc54:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801cc58:	ea47 070c 	orr.w	r7, r7, ip
 801cc5c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cc60:	1202      	asrs	r2, r0, #8
 801cc62:	0c3b      	lsrs	r3, r7, #16
 801cc64:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801cc68:	b2c9      	uxtb	r1, r1
 801cc6a:	fb13 f304 	smulbb	r3, r3, r4
 801cc6e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801cc72:	fb02 3201 	mla	r2, r2, r1, r3
 801cc76:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801cc7a:	10c3      	asrs	r3, r0, #3
 801cc7c:	b2ff      	uxtb	r7, r7
 801cc7e:	00c0      	lsls	r0, r0, #3
 801cc80:	b292      	uxth	r2, r2
 801cc82:	fb1c fc04 	smulbb	ip, ip, r4
 801cc86:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801cc8a:	b2c0      	uxtb	r0, r0
 801cc8c:	fb17 f704 	smulbb	r7, r7, r4
 801cc90:	fb03 c301 	mla	r3, r3, r1, ip
 801cc94:	fb00 7001 	mla	r0, r0, r1, r7
 801cc98:	f102 0c01 	add.w	ip, r2, #1
 801cc9c:	b280      	uxth	r0, r0
 801cc9e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801cca2:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801cca6:	1c42      	adds	r2, r0, #1
 801cca8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ccac:	b29b      	uxth	r3, r3
 801ccae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ccb2:	ea42 020c 	orr.w	r2, r2, ip
 801ccb6:	f103 0c01 	add.w	ip, r3, #1
 801ccba:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ccbe:	095b      	lsrs	r3, r3, #5
 801ccc0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ccc4:	431a      	orrs	r2, r3
 801ccc6:	f8a9 2000 	strh.w	r2, [r9]
 801ccca:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801cccc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ccce:	441a      	add	r2, r3
 801ccd0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ccd2:	9229      	str	r2, [sp, #164]	@ 0xa4
 801ccd4:	f109 0902 	add.w	r9, r9, #2
 801ccd8:	441d      	add	r5, r3
 801ccda:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ccde:	e63d      	b.n	801c95c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801cce0:	2800      	cmp	r0, #0
 801cce2:	f43f aedd 	beq.w	801caa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801cce6:	5c79      	ldrb	r1, [r7, r1]
 801cce8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ccec:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ccee:	0e09      	lsrs	r1, r1, #24
 801ccf0:	9114      	str	r1, [sp, #80]	@ 0x50
 801ccf2:	e6d5      	b.n	801caa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801ccf4:	b01f      	add	sp, #124	@ 0x7c
 801ccf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ccfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801ccfa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ccfe:	b089      	sub	sp, #36	@ 0x24
 801cd00:	9101      	str	r1, [sp, #4]
 801cd02:	9801      	ldr	r0, [sp, #4]
 801cd04:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801cd08:	8800      	ldrh	r0, [r0, #0]
 801cd0a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801cd0e:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801cd12:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801cd16:	1206      	asrs	r6, r0, #8
 801cd18:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801cd1c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801cd20:	9602      	str	r6, [sp, #8]
 801cd22:	10c6      	asrs	r6, r0, #3
 801cd24:	00c0      	lsls	r0, r0, #3
 801cd26:	b2c0      	uxtb	r0, r0
 801cd28:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801cd2c:	9004      	str	r0, [sp, #16]
 801cd2e:	2f00      	cmp	r7, #0
 801cd30:	fb07 100c 	mla	r0, r7, ip, r1
 801cd34:	9603      	str	r6, [sp, #12]
 801cd36:	eb02 0e00 	add.w	lr, r2, r0
 801cd3a:	f2c0 810a 	blt.w	801cf52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801cd3e:	45b8      	cmp	r8, r7
 801cd40:	f340 8107 	ble.w	801cf52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801cd44:	2900      	cmp	r1, #0
 801cd46:	f2c0 8102 	blt.w	801cf4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801cd4a:	458c      	cmp	ip, r1
 801cd4c:	f340 80ff 	ble.w	801cf4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801cd50:	5c12      	ldrb	r2, [r2, r0]
 801cd52:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801cd56:	1c4a      	adds	r2, r1, #1
 801cd58:	f100 80fe 	bmi.w	801cf58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801cd5c:	4594      	cmp	ip, r2
 801cd5e:	f340 80fb 	ble.w	801cf58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801cd62:	2d00      	cmp	r5, #0
 801cd64:	f000 80fa 	beq.w	801cf5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801cd68:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801cd6c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801cd70:	3701      	adds	r7, #1
 801cd72:	f100 80f7 	bmi.w	801cf64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801cd76:	45b8      	cmp	r8, r7
 801cd78:	f340 80f4 	ble.w	801cf64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801cd7c:	2c00      	cmp	r4, #0
 801cd7e:	f000 80f4 	beq.w	801cf6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801cd82:	2900      	cmp	r1, #0
 801cd84:	eb0e 020c 	add.w	r2, lr, ip
 801cd88:	f2c0 80ea 	blt.w	801cf60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801cd8c:	458c      	cmp	ip, r1
 801cd8e:	f340 80e7 	ble.w	801cf60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801cd92:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801cd96:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801cd9a:	3101      	adds	r1, #1
 801cd9c:	f100 80e8 	bmi.w	801cf70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801cda0:	458c      	cmp	ip, r1
 801cda2:	f340 80e5 	ble.w	801cf70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801cda6:	2d00      	cmp	r5, #0
 801cda8:	f000 80e4 	beq.w	801cf74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801cdac:	7852      	ldrb	r2, [r2, #1]
 801cdae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801cdb2:	0e0b      	lsrs	r3, r1, #24
 801cdb4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801cdb8:	9300      	str	r3, [sp, #0]
 801cdba:	b2a4      	uxth	r4, r4
 801cdbc:	b2ab      	uxth	r3, r5
 801cdbe:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801cdc2:	fb03 f904 	mul.w	r9, r3, r4
 801cdc6:	fb0a f505 	mul.w	r5, sl, r5
 801cdca:	011b      	lsls	r3, r3, #4
 801cdcc:	eba3 0e09 	sub.w	lr, r3, r9
 801cdd0:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801cdd4:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801cdd8:	0a28      	lsrs	r0, r5, #8
 801cdda:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801cdde:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801cde2:	4405      	add	r5, r0
 801cde4:	0a2d      	lsrs	r5, r5, #8
 801cde6:	fb0a f303 	mul.w	r3, sl, r3
 801cdea:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801cdee:	9005      	str	r0, [sp, #20]
 801cdf0:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801cdf4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cdf8:	0a1b      	lsrs	r3, r3, #8
 801cdfa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801cdfe:	9306      	str	r3, [sp, #24]
 801ce00:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801ce04:	fb0b f303 	mul.w	r3, fp, r3
 801ce08:	0a1d      	lsrs	r5, r3, #8
 801ce0a:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801ce0e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801ce12:	fb0b f606 	mul.w	r6, fp, r6
 801ce16:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801ce1a:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801ce1e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ce22:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ce26:	fb08 f707 	mul.w	r7, r8, r7
 801ce2a:	441d      	add	r5, r3
 801ce2c:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801ce30:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801ce34:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801ce38:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801ce3c:	fb08 fc0c 	mul.w	ip, r8, ip
 801ce40:	0a1b      	lsrs	r3, r3, #8
 801ce42:	9307      	str	r3, [sp, #28]
 801ce44:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801ce48:	0e0b      	lsrs	r3, r1, #24
 801ce4a:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801ce4e:	435f      	muls	r7, r3
 801ce50:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ce54:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801ce58:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801ce5c:	4460      	add	r0, ip
 801ce5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ce62:	b2a4      	uxth	r4, r4
 801ce64:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ce68:	0a2d      	lsrs	r5, r5, #8
 801ce6a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ce6e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ce72:	fa1f fe8e 	uxth.w	lr, lr
 801ce76:	4359      	muls	r1, r3
 801ce78:	1b12      	subs	r2, r2, r4
 801ce7a:	9b05      	ldr	r3, [sp, #20]
 801ce7c:	44bc      	add	ip, r7
 801ce7e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ce82:	b292      	uxth	r2, r2
 801ce84:	fb05 f50e 	mul.w	r5, r5, lr
 801ce88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ce8c:	fb03 5502 	mla	r5, r3, r2, r5
 801ce90:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ce94:	9b06      	ldr	r3, [sp, #24]
 801ce96:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801ce9a:	0a36      	lsrs	r6, r6, #8
 801ce9c:	0a00      	lsrs	r0, r0, #8
 801ce9e:	fb0c 5509 	mla	r5, ip, r9, r5
 801cea2:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801cea6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ceaa:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801ceae:	fb00 5504 	mla	r5, r0, r4, r5
 801ceb2:	fb0e f606 	mul.w	r6, lr, r6
 801ceb6:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801ceba:	0a09      	lsrs	r1, r1, #8
 801cebc:	9b07      	ldr	r3, [sp, #28]
 801cebe:	fb02 6000 	mla	r0, r2, r0, r6
 801cec2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801cec6:	fb09 0001 	mla	r0, r9, r1, r0
 801ceca:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801cece:	fb0e fe0b 	mul.w	lr, lr, fp
 801ced2:	fb04 0003 	mla	r0, r4, r3, r0
 801ced6:	fb02 e20a 	mla	r2, r2, sl, lr
 801ceda:	9b00      	ldr	r3, [sp, #0]
 801cedc:	fb04 2408 	mla	r4, r4, r8, r2
 801cee0:	fb09 4903 	mla	r9, r9, r3, r4
 801cee4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801cee8:	9b02      	ldr	r3, [sp, #8]
 801ceea:	9a04      	ldr	r2, [sp, #16]
 801ceec:	fa5f f989 	uxtb.w	r9, r9
 801cef0:	fb03 f109 	mul.w	r1, r3, r9
 801cef4:	9b03      	ldr	r3, [sp, #12]
 801cef6:	0a2d      	lsrs	r5, r5, #8
 801cef8:	0a00      	lsrs	r0, r0, #8
 801cefa:	fb03 f309 	mul.w	r3, r3, r9
 801cefe:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801cf02:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801cf06:	4305      	orrs	r5, r0
 801cf08:	fb02 f909 	mul.w	r9, r2, r9
 801cf0c:	1c58      	adds	r0, r3, #1
 801cf0e:	1c4a      	adds	r2, r1, #1
 801cf10:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801cf14:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cf18:	0a2b      	lsrs	r3, r5, #8
 801cf1a:	0c2a      	lsrs	r2, r5, #16
 801cf1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801cf20:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801cf24:	00db      	lsls	r3, r3, #3
 801cf26:	0212      	lsls	r2, r2, #8
 801cf28:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801cf2c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf30:	4313      	orrs	r3, r2
 801cf32:	f109 0201 	add.w	r2, r9, #1
 801cf36:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801cf3a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801cf3e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801cf42:	431d      	orrs	r5, r3
 801cf44:	9b01      	ldr	r3, [sp, #4]
 801cf46:	801d      	strh	r5, [r3, #0]
 801cf48:	b009      	add	sp, #36	@ 0x24
 801cf4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf4e:	2000      	movs	r0, #0
 801cf50:	e701      	b.n	801cd56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801cf52:	2600      	movs	r6, #0
 801cf54:	4630      	mov	r0, r6
 801cf56:	e70b      	b.n	801cd70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801cf58:	2600      	movs	r6, #0
 801cf5a:	e709      	b.n	801cd70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801cf5c:	462e      	mov	r6, r5
 801cf5e:	e707      	b.n	801cd70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801cf60:	2700      	movs	r7, #0
 801cf62:	e71a      	b.n	801cd9a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801cf64:	2100      	movs	r1, #0
 801cf66:	460f      	mov	r7, r1
 801cf68:	e723      	b.n	801cdb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801cf6a:	4621      	mov	r1, r4
 801cf6c:	4627      	mov	r7, r4
 801cf6e:	e720      	b.n	801cdb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801cf70:	2100      	movs	r1, #0
 801cf72:	e71e      	b.n	801cdb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801cf74:	4629      	mov	r1, r5
 801cf76:	e71c      	b.n	801cdb2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801cf78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cf78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf7c:	b09b      	sub	sp, #108	@ 0x6c
 801cf7e:	9218      	str	r2, [sp, #96]	@ 0x60
 801cf80:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801cf82:	9116      	str	r1, [sp, #88]	@ 0x58
 801cf84:	9307      	str	r3, [sp, #28]
 801cf86:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801cf8a:	9019      	str	r0, [sp, #100]	@ 0x64
 801cf8c:	6850      	ldr	r0, [r2, #4]
 801cf8e:	6812      	ldr	r2, [r2, #0]
 801cf90:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801cf92:	fb00 1303 	mla	r3, r0, r3, r1
 801cf96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cf9a:	930a      	str	r3, [sp, #40]	@ 0x28
 801cf9c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cf9e:	681b      	ldr	r3, [r3, #0]
 801cfa0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cfa2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cfa4:	685e      	ldr	r6, [r3, #4]
 801cfa6:	3604      	adds	r6, #4
 801cfa8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801cfaa:	2b00      	cmp	r3, #0
 801cfac:	dc03      	bgt.n	801cfb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cfae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cfb0:	2b00      	cmp	r3, #0
 801cfb2:	f340 8373 	ble.w	801d69c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801cfb6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801cfb8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cfbc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cfc0:	1e48      	subs	r0, r1, #1
 801cfc2:	1e57      	subs	r7, r2, #1
 801cfc4:	9b07      	ldr	r3, [sp, #28]
 801cfc6:	2b00      	cmp	r3, #0
 801cfc8:	f340 8190 	ble.w	801d2ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801cfcc:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801cfce:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801cfd2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801cfd6:	d406      	bmi.n	801cfe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cfd8:	4584      	cmp	ip, r0
 801cfda:	da04      	bge.n	801cfe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cfdc:	2b00      	cmp	r3, #0
 801cfde:	db02      	blt.n	801cfe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801cfe0:	42bb      	cmp	r3, r7
 801cfe2:	f2c0 8184 	blt.w	801d2ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801cfe6:	f11c 0c01 	adds.w	ip, ip, #1
 801cfea:	f100 8172 	bmi.w	801d2d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cfee:	4561      	cmp	r1, ip
 801cff0:	f2c0 816f 	blt.w	801d2d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cff4:	3301      	adds	r3, #1
 801cff6:	f100 816c 	bmi.w	801d2d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801cffa:	429a      	cmp	r2, r3
 801cffc:	f2c0 8169 	blt.w	801d2d2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d000:	9b07      	ldr	r3, [sp, #28]
 801d002:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801d004:	9317      	str	r3, [sp, #92]	@ 0x5c
 801d006:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d008:	2b00      	cmp	r3, #0
 801d00a:	f340 818e 	ble.w	801d32a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801d00e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801d010:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d014:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d016:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801d01a:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801d01c:	141b      	asrs	r3, r3, #16
 801d01e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801d022:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d026:	f100 81d1 	bmi.w	801d3cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d02a:	f101 38ff 	add.w	r8, r1, #4294967295
 801d02e:	4543      	cmp	r3, r8
 801d030:	f280 81cc 	bge.w	801d3cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d034:	f1bc 0f00 	cmp.w	ip, #0
 801d038:	f2c0 81c8 	blt.w	801d3cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d03c:	f10e 38ff 	add.w	r8, lr, #4294967295
 801d040:	45c4      	cmp	ip, r8
 801d042:	f280 81c3 	bge.w	801d3cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801d046:	b209      	sxth	r1, r1
 801d048:	fb0c 3301 	mla	r3, ip, r1, r3
 801d04c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d04e:	eb04 0803 	add.w	r8, r4, r3
 801d052:	5ce3      	ldrb	r3, [r4, r3]
 801d054:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d058:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801d05c:	2a00      	cmp	r2, #0
 801d05e:	f000 81aa 	beq.w	801d3b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801d062:	f898 c001 	ldrb.w	ip, [r8, #1]
 801d066:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801d06a:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d06c:	0e24      	lsrs	r4, r4, #24
 801d06e:	9412      	str	r4, [sp, #72]	@ 0x48
 801d070:	b178      	cbz	r0, 801d092 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d072:	eb08 0c01 	add.w	ip, r8, r1
 801d076:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d07a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d07e:	9108      	str	r1, [sp, #32]
 801d080:	0e09      	lsrs	r1, r1, #24
 801d082:	9110      	str	r1, [sp, #64]	@ 0x40
 801d084:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801d088:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d08c:	910c      	str	r1, [sp, #48]	@ 0x30
 801d08e:	0e09      	lsrs	r1, r1, #24
 801d090:	9113      	str	r1, [sp, #76]	@ 0x4c
 801d092:	b292      	uxth	r2, r2
 801d094:	b280      	uxth	r0, r0
 801d096:	fb02 f900 	mul.w	r9, r2, r0
 801d09a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801d09e:	0112      	lsls	r2, r2, #4
 801d0a0:	eba2 0809 	sub.w	r8, r2, r9
 801d0a4:	b280      	uxth	r0, r0
 801d0a6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801d0aa:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801d0ac:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d0ae:	fa1f f888 	uxth.w	r8, r8
 801d0b2:	1a12      	subs	r2, r2, r0
 801d0b4:	b292      	uxth	r2, r2
 801d0b6:	fb08 f101 	mul.w	r1, r8, r1
 801d0ba:	fb02 110e 	mla	r1, r2, lr, r1
 801d0be:	fb00 1104 	mla	r1, r0, r4, r1
 801d0c2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d0c4:	fb09 1104 	mla	r1, r9, r4, r1
 801d0c8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801d0cc:	2900      	cmp	r1, #0
 801d0ce:	f000 80f5 	beq.w	801d2bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d0d2:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801d0d6:	d01b      	beq.n	801d110 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801d0d8:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d0dc:	fb0e fa0a 	mul.w	sl, lr, sl
 801d0e0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d0e4:	fb0e fe03 	mul.w	lr, lr, r3
 801d0e8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d0ec:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d0f0:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d0f4:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801d0f8:	4453      	add	r3, sl
 801d0fa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d0fe:	0a1b      	lsrs	r3, r3, #8
 801d100:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d104:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d108:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d10c:	ea43 030c 	orr.w	r3, r3, ip
 801d110:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d112:	2cff      	cmp	r4, #255	@ 0xff
 801d114:	d021      	beq.n	801d15a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801d116:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d118:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d11c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d11e:	fb04 fb0b 	mul.w	fp, r4, fp
 801d122:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d124:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d128:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d12a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d12e:	fb04 fa0a 	mul.w	sl, r4, sl
 801d132:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d136:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d13a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d13e:	44de      	add	lr, fp
 801d140:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d144:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d148:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d14c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d150:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d154:	ea4e 040a 	orr.w	r4, lr, sl
 801d158:	940b      	str	r4, [sp, #44]	@ 0x2c
 801d15a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d15c:	2cff      	cmp	r4, #255	@ 0xff
 801d15e:	d021      	beq.n	801d1a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801d160:	9c08      	ldr	r4, [sp, #32]
 801d162:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d166:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d168:	fb04 fb0b 	mul.w	fp, r4, fp
 801d16c:	9c08      	ldr	r4, [sp, #32]
 801d16e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d172:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801d174:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d178:	fb04 fa0a 	mul.w	sl, r4, sl
 801d17c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d180:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d184:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d188:	44de      	add	lr, fp
 801d18a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d18e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d192:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d196:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d19a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d19e:	ea4e 040a 	orr.w	r4, lr, sl
 801d1a2:	9408      	str	r4, [sp, #32]
 801d1a4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d1a6:	2cff      	cmp	r4, #255	@ 0xff
 801d1a8:	d021      	beq.n	801d1ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d1aa:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d1ac:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801d1b0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d1b2:	fb04 fb0b 	mul.w	fp, r4, fp
 801d1b6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d1b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d1bc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801d1be:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801d1c2:	fb04 fa0a 	mul.w	sl, r4, sl
 801d1c6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d1ca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801d1ce:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801d1d2:	44de      	add	lr, fp
 801d1d4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801d1d8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d1dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d1e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801d1e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d1e8:	ea4e 040a 	orr.w	r4, lr, sl
 801d1ec:	940c      	str	r4, [sp, #48]	@ 0x30
 801d1ee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d1f0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d1f4:	9c08      	ldr	r4, [sp, #32]
 801d1f6:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801d1fa:	fb08 fc0c 	mul.w	ip, r8, ip
 801d1fe:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d202:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d206:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d208:	fb00 cc0e 	mla	ip, r0, lr, ip
 801d20c:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801d210:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d212:	fb09 cc0e 	mla	ip, r9, lr, ip
 801d216:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801d21a:	fb08 f80e 	mul.w	r8, r8, lr
 801d21e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d222:	fb02 8303 	mla	r3, r2, r3, r8
 801d226:	9a08      	ldr	r2, [sp, #32]
 801d228:	f8b7 8000 	ldrh.w	r8, [r7]
 801d22c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801d230:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d232:	fb00 330a 	mla	r3, r0, sl, r3
 801d236:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801d23a:	fb09 3900 	mla	r9, r9, r0, r3
 801d23e:	43c9      	mvns	r1, r1
 801d240:	ea4f 2228 	mov.w	r2, r8, asr #8
 801d244:	fa5f fe81 	uxtb.w	lr, r1
 801d248:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d24c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d250:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d254:	fb02 f20e 	mul.w	r2, r2, lr
 801d258:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d25c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801d260:	ea4c 0c09 	orr.w	ip, ip, r9
 801d264:	1c53      	adds	r3, r2, #1
 801d266:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801d26a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801d26e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801d272:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d276:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801d27a:	4a63      	ldr	r2, [pc, #396]	@ (801d408 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801d27c:	fb00 f00e 	mul.w	r0, r0, lr
 801d280:	b2db      	uxtb	r3, r3
 801d282:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801d286:	1c43      	adds	r3, r0, #1
 801d288:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d28c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801d290:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801d294:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d298:	b2c9      	uxtb	r1, r1
 801d29a:	00db      	lsls	r3, r3, #3
 801d29c:	fb01 f10e 	mul.w	r1, r1, lr
 801d2a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d2a4:	4313      	orrs	r3, r2
 801d2a6:	1c4a      	adds	r2, r1, #1
 801d2a8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d2ac:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d2b0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801d2b4:	ea4c 0c03 	orr.w	ip, ip, r3
 801d2b8:	f8a7 c000 	strh.w	ip, [r7]
 801d2bc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d2be:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d2c0:	441a      	add	r2, r3
 801d2c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d2c4:	9225      	str	r2, [sp, #148]	@ 0x94
 801d2c6:	441d      	add	r5, r3
 801d2c8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801d2ca:	3b01      	subs	r3, #1
 801d2cc:	3702      	adds	r7, #2
 801d2ce:	9317      	str	r3, [sp, #92]	@ 0x5c
 801d2d0:	e699      	b.n	801d006 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d2d2:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d2d4:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d2d6:	441c      	add	r4, r3
 801d2d8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d2da:	9425      	str	r4, [sp, #148]	@ 0x94
 801d2dc:	441d      	add	r5, r3
 801d2de:	9b07      	ldr	r3, [sp, #28]
 801d2e0:	3b01      	subs	r3, #1
 801d2e2:	9307      	str	r3, [sp, #28]
 801d2e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d2e6:	3302      	adds	r3, #2
 801d2e8:	930a      	str	r3, [sp, #40]	@ 0x28
 801d2ea:	e66b      	b.n	801cfc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801d2ec:	d024      	beq.n	801d338 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801d2ee:	9b07      	ldr	r3, [sp, #28]
 801d2f0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801d2f2:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d2f4:	3b01      	subs	r3, #1
 801d2f6:	fb00 4003 	mla	r0, r0, r3, r4
 801d2fa:	1400      	asrs	r0, r0, #16
 801d2fc:	f53f ae80 	bmi.w	801d000 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d300:	3901      	subs	r1, #1
 801d302:	4288      	cmp	r0, r1
 801d304:	f6bf ae7c 	bge.w	801d000 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d308:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801d30a:	fb01 5303 	mla	r3, r1, r3, r5
 801d30e:	141b      	asrs	r3, r3, #16
 801d310:	f53f ae76 	bmi.w	801d000 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d314:	3a01      	subs	r2, #1
 801d316:	4293      	cmp	r3, r2
 801d318:	f6bf ae72 	bge.w	801d000 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801d31c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801d320:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801d324:	f1bb 0f00 	cmp.w	fp, #0
 801d328:	dc70      	bgt.n	801d40c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801d32a:	9b07      	ldr	r3, [sp, #28]
 801d32c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d330:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d332:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d336:	930a      	str	r3, [sp, #40]	@ 0x28
 801d338:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d33a:	2b00      	cmp	r3, #0
 801d33c:	f340 81ae 	ble.w	801d69c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801d340:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d344:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d348:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d34c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d34e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d352:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d356:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d35a:	eef0 6a62 	vmov.f32	s13, s5
 801d35e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d362:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d366:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d36a:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801d36e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d372:	eef0 6a43 	vmov.f32	s13, s6
 801d376:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d37a:	ee12 2a90 	vmov	r2, s5
 801d37e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d382:	fb92 f3f3 	sdiv	r3, r2, r3
 801d386:	ee13 2a10 	vmov	r2, s6
 801d38a:	9327      	str	r3, [sp, #156]	@ 0x9c
 801d38c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d38e:	fb92 f3f3 	sdiv	r3, r2, r3
 801d392:	9328      	str	r3, [sp, #160]	@ 0xa0
 801d394:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801d396:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801d398:	3b01      	subs	r3, #1
 801d39a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d39e:	9316      	str	r3, [sp, #88]	@ 0x58
 801d3a0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d3a2:	bf08      	it	eq
 801d3a4:	4613      	moveq	r3, r2
 801d3a6:	ee16 5a90 	vmov	r5, s13
 801d3aa:	9307      	str	r3, [sp, #28]
 801d3ac:	eeb0 3a67 	vmov.f32	s6, s15
 801d3b0:	eef0 2a47 	vmov.f32	s5, s14
 801d3b4:	e5f8      	b.n	801cfa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801d3b6:	2800      	cmp	r0, #0
 801d3b8:	f43f ae6b 	beq.w	801d092 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d3bc:	f818 1001 	ldrb.w	r1, [r8, r1]
 801d3c0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d3c4:	9108      	str	r1, [sp, #32]
 801d3c6:	0e09      	lsrs	r1, r1, #24
 801d3c8:	9110      	str	r1, [sp, #64]	@ 0x40
 801d3ca:	e662      	b.n	801d092 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801d3cc:	f113 0801 	adds.w	r8, r3, #1
 801d3d0:	f53f af74 	bmi.w	801d2bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d3d4:	4541      	cmp	r1, r8
 801d3d6:	f6ff af71 	blt.w	801d2bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d3da:	f11c 0801 	adds.w	r8, ip, #1
 801d3de:	f53f af6d 	bmi.w	801d2bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d3e2:	45c6      	cmp	lr, r8
 801d3e4:	f6ff af6a 	blt.w	801d2bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d3e8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801d3ec:	b209      	sxth	r1, r1
 801d3ee:	fa0f f38e 	sxth.w	r3, lr
 801d3f2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801d3f6:	9301      	str	r3, [sp, #4]
 801d3f8:	9100      	str	r1, [sp, #0]
 801d3fa:	4633      	mov	r3, r6
 801d3fc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d3fe:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801d400:	4639      	mov	r1, r7
 801d402:	f7ff fc7a 	bl	801ccfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801d406:	e759      	b.n	801d2bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801d408:	fffff800 	.word	0xfffff800
 801d40c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801d40e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801d410:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d414:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801d416:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d41a:	1427      	asrs	r7, r4, #16
 801d41c:	142b      	asrs	r3, r5, #16
 801d41e:	fb01 7303 	mla	r3, r1, r3, r7
 801d422:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801d424:	18e7      	adds	r7, r4, r3
 801d426:	5ce3      	ldrb	r3, [r4, r3]
 801d428:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801d42c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801d430:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801d434:	2a00      	cmp	r2, #0
 801d436:	f000 8127 	beq.w	801d688 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d43a:	f897 e001 	ldrb.w	lr, [r7, #1]
 801d43e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801d442:	940d      	str	r4, [sp, #52]	@ 0x34
 801d444:	0e24      	lsrs	r4, r4, #24
 801d446:	9414      	str	r4, [sp, #80]	@ 0x50
 801d448:	b170      	cbz	r0, 801d468 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d44a:	eb07 0e01 	add.w	lr, r7, r1
 801d44e:	5c79      	ldrb	r1, [r7, r1]
 801d450:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d454:	9109      	str	r1, [sp, #36]	@ 0x24
 801d456:	0e09      	lsrs	r1, r1, #24
 801d458:	9111      	str	r1, [sp, #68]	@ 0x44
 801d45a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801d45e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d462:	910e      	str	r1, [sp, #56]	@ 0x38
 801d464:	0e09      	lsrs	r1, r1, #24
 801d466:	9115      	str	r1, [sp, #84]	@ 0x54
 801d468:	b292      	uxth	r2, r2
 801d46a:	b280      	uxth	r0, r0
 801d46c:	fb02 f800 	mul.w	r8, r2, r0
 801d470:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801d474:	0112      	lsls	r2, r2, #4
 801d476:	eba2 0e08 	sub.w	lr, r2, r8
 801d47a:	b280      	uxth	r0, r0
 801d47c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801d480:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d482:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d484:	fa1f fe8e 	uxth.w	lr, lr
 801d488:	1a09      	subs	r1, r1, r0
 801d48a:	b289      	uxth	r1, r1
 801d48c:	fb0e f202 	mul.w	r2, lr, r2
 801d490:	fb01 220c 	mla	r2, r1, ip, r2
 801d494:	fb00 2204 	mla	r2, r0, r4, r2
 801d498:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d49a:	fb08 2204 	mla	r2, r8, r4, r2
 801d49e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801d4a2:	2a00      	cmp	r2, #0
 801d4a4:	f000 80e5 	beq.w	801d672 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801d4a8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801d4ac:	d019      	beq.n	801d4e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801d4ae:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801d4b2:	fb0c fa0a 	mul.w	sl, ip, sl
 801d4b6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d4ba:	fb0c fc03 	mul.w	ip, ip, r3
 801d4be:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801d4c2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d4c6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801d4ca:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801d4ce:	4453      	add	r3, sl
 801d4d0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d4d4:	0a1b      	lsrs	r3, r3, #8
 801d4d6:	0a3f      	lsrs	r7, r7, #8
 801d4d8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801d4dc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801d4e0:	433b      	orrs	r3, r7
 801d4e2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d4e4:	2cff      	cmp	r4, #255	@ 0xff
 801d4e6:	d020      	beq.n	801d52a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801d4e8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d4ea:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d4ee:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d4f0:	4367      	muls	r7, r4
 801d4f2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d4f4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d4f8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801d4fa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d4fe:	fb04 fa0a 	mul.w	sl, r4, sl
 801d502:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d506:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d50a:	44bc      	add	ip, r7
 801d50c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d510:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d514:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d518:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d51c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d520:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d524:	ea4c 040a 	orr.w	r4, ip, sl
 801d528:	940d      	str	r4, [sp, #52]	@ 0x34
 801d52a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d52c:	2cff      	cmp	r4, #255	@ 0xff
 801d52e:	d020      	beq.n	801d572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801d530:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801d532:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d536:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d538:	4367      	muls	r7, r4
 801d53a:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801d53c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d540:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801d542:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d546:	fb04 fa0a 	mul.w	sl, r4, sl
 801d54a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d54e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d552:	44bc      	add	ip, r7
 801d554:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d558:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d55c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d560:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d564:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d568:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d56c:	ea4c 040a 	orr.w	r4, ip, sl
 801d570:	9409      	str	r4, [sp, #36]	@ 0x24
 801d572:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d574:	2cff      	cmp	r4, #255	@ 0xff
 801d576:	d020      	beq.n	801d5ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801d578:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d57a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d57e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d580:	4367      	muls	r7, r4
 801d582:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d584:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801d588:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801d58a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801d58e:	fb04 fa0a 	mul.w	sl, r4, sl
 801d592:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801d596:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d59a:	44bc      	add	ip, r7
 801d59c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801d5a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801d5a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d5a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801d5ac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801d5b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801d5b4:	ea4c 040a 	orr.w	r4, ip, sl
 801d5b8:	940e      	str	r4, [sp, #56]	@ 0x38
 801d5ba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d5bc:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801d5c0:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801d5c2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801d5c6:	fb0e f707 	mul.w	r7, lr, r7
 801d5ca:	fb01 770c 	mla	r7, r1, ip, r7
 801d5ce:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d5d2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801d5d4:	fb00 770c 	mla	r7, r0, ip, r7
 801d5d8:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801d5dc:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d5de:	fb08 770c 	mla	r7, r8, ip, r7
 801d5e2:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801d5e6:	fb0e fe0c 	mul.w	lr, lr, ip
 801d5ea:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801d5ee:	fb01 e303 	mla	r3, r1, r3, lr
 801d5f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d5f4:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801d5f8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d5fa:	fb00 330a 	mla	r3, r0, sl, r3
 801d5fe:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801d602:	fb08 3c0c 	mla	ip, r8, ip, r3
 801d606:	f8b9 3000 	ldrh.w	r3, [r9]
 801d60a:	43d2      	mvns	r2, r2
 801d60c:	1218      	asrs	r0, r3, #8
 801d60e:	b2d2      	uxtb	r2, r2
 801d610:	10d9      	asrs	r1, r3, #3
 801d612:	0a3f      	lsrs	r7, r7, #8
 801d614:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d618:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d61c:	00db      	lsls	r3, r3, #3
 801d61e:	4350      	muls	r0, r2
 801d620:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801d624:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801d628:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d62c:	b2db      	uxtb	r3, r3
 801d62e:	ea47 070c 	orr.w	r7, r7, ip
 801d632:	4351      	muls	r1, r2
 801d634:	4353      	muls	r3, r2
 801d636:	1c42      	adds	r2, r0, #1
 801d638:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d63c:	0c3a      	lsrs	r2, r7, #16
 801d63e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d642:	4a18      	ldr	r2, [pc, #96]	@ (801d6a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801d644:	b2c0      	uxtb	r0, r0
 801d646:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801d64a:	1c4a      	adds	r2, r1, #1
 801d64c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d650:	0a3a      	lsrs	r2, r7, #8
 801d652:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d656:	00c9      	lsls	r1, r1, #3
 801d658:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d65c:	4301      	orrs	r1, r0
 801d65e:	1c58      	adds	r0, r3, #1
 801d660:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801d664:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d668:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801d66c:	4308      	orrs	r0, r1
 801d66e:	f8a9 0000 	strh.w	r0, [r9]
 801d672:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801d674:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d676:	441a      	add	r2, r3
 801d678:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d67a:	9225      	str	r2, [sp, #148]	@ 0x94
 801d67c:	f109 0902 	add.w	r9, r9, #2
 801d680:	441d      	add	r5, r3
 801d682:	f10b 3bff 	add.w	fp, fp, #4294967295
 801d686:	e64d      	b.n	801d324 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801d688:	2800      	cmp	r0, #0
 801d68a:	f43f aeed 	beq.w	801d468 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d68e:	5c79      	ldrb	r1, [r7, r1]
 801d690:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801d694:	9109      	str	r1, [sp, #36]	@ 0x24
 801d696:	0e09      	lsrs	r1, r1, #24
 801d698:	9111      	str	r1, [sp, #68]	@ 0x44
 801d69a:	e6e5      	b.n	801d468 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801d69c:	b01b      	add	sp, #108	@ 0x6c
 801d69e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6a2:	bf00      	nop
 801d6a4:	fffff800 	.word	0xfffff800

0801d6a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801d6a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6ac:	b085      	sub	sp, #20
 801d6ae:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801d6b2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801d6b6:	9103      	str	r1, [sp, #12]
 801d6b8:	fb00 7406 	mla	r4, r0, r6, r7
 801d6bc:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801d6c0:	2800      	cmp	r0, #0
 801d6c2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801d6c6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801d6ca:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801d6ce:	9501      	str	r5, [sp, #4]
 801d6d0:	eb03 0904 	add.w	r9, r3, r4
 801d6d4:	f2c0 8150 	blt.w	801d978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801d6d8:	4583      	cmp	fp, r0
 801d6da:	f340 814d 	ble.w	801d978 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801d6de:	2f00      	cmp	r7, #0
 801d6e0:	f2c0 8146 	blt.w	801d970 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801d6e4:	42be      	cmp	r6, r7
 801d6e6:	f340 8143 	ble.w	801d970 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801d6ea:	f813 c004 	ldrb.w	ip, [r3, r4]
 801d6ee:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801d6f2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d6f6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801d6fa:	4355      	muls	r5, r2
 801d6fc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d700:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801d704:	fb0c f203 	mul.w	r2, ip, r3
 801d708:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d70c:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801d710:	441d      	add	r5, r3
 801d712:	f102 0320 	add.w	r3, r2, #32
 801d716:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d71a:	0a1b      	lsrs	r3, r3, #8
 801d71c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d720:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d724:	431c      	orrs	r4, r3
 801d726:	1c7b      	adds	r3, r7, #1
 801d728:	f100 812b 	bmi.w	801d982 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801d72c:	429e      	cmp	r6, r3
 801d72e:	f340 8128 	ble.w	801d982 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801d732:	2900      	cmp	r1, #0
 801d734:	f000 8128 	beq.w	801d988 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801d738:	9a01      	ldr	r2, [sp, #4]
 801d73a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d73e:	8855      	ldrh	r5, [r2, #2]
 801d740:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d744:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801d748:	fb08 f802 	mul.w	r8, r8, r2
 801d74c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d750:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801d754:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d758:	435d      	muls	r5, r3
 801d75a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d75e:	44d0      	add	r8, sl
 801d760:	f105 0a20 	add.w	sl, r5, #32
 801d764:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d768:	0a2d      	lsrs	r5, r5, #8
 801d76a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d76e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d772:	432a      	orrs	r2, r5
 801d774:	3001      	adds	r0, #1
 801d776:	f100 810d 	bmi.w	801d994 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d77a:	4583      	cmp	fp, r0
 801d77c:	f340 810a 	ble.w	801d994 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801d780:	f1be 0f00 	cmp.w	lr, #0
 801d784:	f000 810b 	beq.w	801d99e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801d788:	2f00      	cmp	r7, #0
 801d78a:	f2c0 8100 	blt.w	801d98e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d78e:	42be      	cmp	r6, r7
 801d790:	f340 80fd 	ble.w	801d98e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801d794:	9801      	ldr	r0, [sp, #4]
 801d796:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d79a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d79e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d7a2:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801d7a6:	fb0a fa00 	mul.w	sl, sl, r0
 801d7aa:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801d7ae:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d7b2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d7b6:	fb05 f808 	mul.w	r8, r5, r8
 801d7ba:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801d7be:	4482      	add	sl, r0
 801d7c0:	f108 0020 	add.w	r0, r8, #32
 801d7c4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d7c8:	0a00      	lsrs	r0, r0, #8
 801d7ca:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d7ce:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d7d2:	ea4b 0b00 	orr.w	fp, fp, r0
 801d7d6:	3701      	adds	r7, #1
 801d7d8:	f100 80e6 	bmi.w	801d9a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d7dc:	42be      	cmp	r6, r7
 801d7de:	f340 80e3 	ble.w	801d9a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801d7e2:	2900      	cmp	r1, #0
 801d7e4:	f000 80e3 	beq.w	801d9ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801d7e8:	3601      	adds	r6, #1
 801d7ea:	9801      	ldr	r0, [sp, #4]
 801d7ec:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d7f0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d7f4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d7f8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801d7fc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d800:	fb09 f906 	mul.w	r9, r9, r6
 801d804:	fb07 f800 	mul.w	r8, r7, r0
 801d808:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801d80c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d810:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801d814:	44d1      	add	r9, sl
 801d816:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d81a:	f108 0020 	add.w	r0, r8, #32
 801d81e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d822:	0a00      	lsrs	r0, r0, #8
 801d824:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d828:	4330      	orrs	r0, r6
 801d82a:	b28e      	uxth	r6, r1
 801d82c:	fa1f f98e 	uxth.w	r9, lr
 801d830:	fb06 f809 	mul.w	r8, r6, r9
 801d834:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d838:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d83c:	0136      	lsls	r6, r6, #4
 801d83e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d842:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801d846:	9601      	str	r6, [sp, #4]
 801d848:	ea4a 0404 	orr.w	r4, sl, r4
 801d84c:	fa1f f689 	uxth.w	r6, r9
 801d850:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d854:	fb11 f90e 	smulbb	r9, r1, lr
 801d858:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d85c:	9602      	str	r6, [sp, #8]
 801d85e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d862:	4626      	mov	r6, r4
 801d864:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d868:	f1ce 0410 	rsb	r4, lr, #16
 801d86c:	1a64      	subs	r4, r4, r1
 801d86e:	ea4a 0202 	orr.w	r2, sl, r2
 801d872:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d876:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d87a:	434a      	muls	r2, r1
 801d87c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d880:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d884:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d888:	fb04 2406 	mla	r4, r4, r6, r2
 801d88c:	ea4a 0000 	orr.w	r0, sl, r0
 801d890:	fb09 4200 	mla	r2, r9, r0, r4
 801d894:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d898:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d89c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801d8a0:	ea44 0b0b 	orr.w	fp, r4, fp
 801d8a4:	9c01      	ldr	r4, [sp, #4]
 801d8a6:	9e02      	ldr	r6, [sp, #8]
 801d8a8:	9903      	ldr	r1, [sp, #12]
 801d8aa:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801d8ae:	1ba4      	subs	r4, r4, r6
 801d8b0:	9e01      	ldr	r6, [sp, #4]
 801d8b2:	8808      	ldrh	r0, [r1, #0]
 801d8b4:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801d8b8:	eba6 0608 	sub.w	r6, r6, r8
 801d8bc:	b2b6      	uxth	r6, r6
 801d8be:	b2a4      	uxth	r4, r4
 801d8c0:	4373      	muls	r3, r6
 801d8c2:	fb0c 3304 	mla	r3, ip, r4, r3
 801d8c6:	9c02      	ldr	r4, [sp, #8]
 801d8c8:	fb04 3505 	mla	r5, r4, r5, r3
 801d8cc:	fb08 5707 	mla	r7, r8, r7, r5
 801d8d0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d8d4:	b289      	uxth	r1, r1
 801d8d6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d8da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d8de:	434f      	muls	r7, r1
 801d8e0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d8e4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d8e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d8ec:	1c7b      	adds	r3, r7, #1
 801d8ee:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d8f2:	ea42 0e0e 	orr.w	lr, r2, lr
 801d8f6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d8fa:	fa1f f28e 	uxth.w	r2, lr
 801d8fe:	1203      	asrs	r3, r0, #8
 801d900:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801d904:	b2ff      	uxtb	r7, r7
 801d906:	1215      	asrs	r5, r2, #8
 801d908:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801d90c:	fb13 f307 	smulbb	r3, r3, r7
 801d910:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d914:	fb05 3501 	mla	r5, r5, r1, r3
 801d918:	10c3      	asrs	r3, r0, #3
 801d91a:	10d4      	asrs	r4, r2, #3
 801d91c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801d920:	fb13 f307 	smulbb	r3, r3, r7
 801d924:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801d928:	fb04 3401 	mla	r4, r4, r1, r3
 801d92c:	00c3      	lsls	r3, r0, #3
 801d92e:	00d2      	lsls	r2, r2, #3
 801d930:	b2db      	uxtb	r3, r3
 801d932:	fb13 f307 	smulbb	r3, r3, r7
 801d936:	b2d2      	uxtb	r2, r2
 801d938:	fb02 3101 	mla	r1, r2, r1, r3
 801d93c:	b2ad      	uxth	r5, r5
 801d93e:	b289      	uxth	r1, r1
 801d940:	b2a4      	uxth	r4, r4
 801d942:	1c6b      	adds	r3, r5, #1
 801d944:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d948:	1c62      	adds	r2, r4, #1
 801d94a:	1c4b      	adds	r3, r1, #1
 801d94c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d950:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801d954:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d958:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d95c:	0964      	lsrs	r4, r4, #5
 801d95e:	432b      	orrs	r3, r5
 801d960:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d964:	9a03      	ldr	r2, [sp, #12]
 801d966:	4323      	orrs	r3, r4
 801d968:	8013      	strh	r3, [r2, #0]
 801d96a:	b005      	add	sp, #20
 801d96c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d970:	f04f 0c00 	mov.w	ip, #0
 801d974:	4664      	mov	r4, ip
 801d976:	e6d6      	b.n	801d726 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801d978:	2300      	movs	r3, #0
 801d97a:	469c      	mov	ip, r3
 801d97c:	461a      	mov	r2, r3
 801d97e:	461c      	mov	r4, r3
 801d980:	e6f8      	b.n	801d774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d982:	2300      	movs	r3, #0
 801d984:	461a      	mov	r2, r3
 801d986:	e6f5      	b.n	801d774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d988:	460b      	mov	r3, r1
 801d98a:	460a      	mov	r2, r1
 801d98c:	e6f2      	b.n	801d774 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801d98e:	2500      	movs	r5, #0
 801d990:	46ab      	mov	fp, r5
 801d992:	e720      	b.n	801d7d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801d994:	2700      	movs	r7, #0
 801d996:	463d      	mov	r5, r7
 801d998:	4638      	mov	r0, r7
 801d99a:	46bb      	mov	fp, r7
 801d99c:	e745      	b.n	801d82a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d99e:	4677      	mov	r7, lr
 801d9a0:	4675      	mov	r5, lr
 801d9a2:	4670      	mov	r0, lr
 801d9a4:	46f3      	mov	fp, lr
 801d9a6:	e740      	b.n	801d82a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d9a8:	2700      	movs	r7, #0
 801d9aa:	4638      	mov	r0, r7
 801d9ac:	e73d      	b.n	801d82a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801d9ae:	460f      	mov	r7, r1
 801d9b0:	4608      	mov	r0, r1
 801d9b2:	e73a      	b.n	801d82a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801d9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d9b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9b8:	b097      	sub	sp, #92	@ 0x5c
 801d9ba:	9214      	str	r2, [sp, #80]	@ 0x50
 801d9bc:	9308      	str	r3, [sp, #32]
 801d9be:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801d9c0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d9c4:	9312      	str	r3, [sp, #72]	@ 0x48
 801d9c6:	9111      	str	r1, [sp, #68]	@ 0x44
 801d9c8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801d9cc:	9015      	str	r0, [sp, #84]	@ 0x54
 801d9ce:	6850      	ldr	r0, [r2, #4]
 801d9d0:	6812      	ldr	r2, [r2, #0]
 801d9d2:	fb00 1303 	mla	r3, r0, r3, r1
 801d9d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d9da:	9309      	str	r3, [sp, #36]	@ 0x24
 801d9dc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d9de:	681b      	ldr	r3, [r3, #0]
 801d9e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d9e2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d9e4:	685b      	ldr	r3, [r3, #4]
 801d9e6:	930c      	str	r3, [sp, #48]	@ 0x30
 801d9e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801d9ec:	930a      	str	r3, [sp, #40]	@ 0x28
 801d9ee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d9f0:	2b00      	cmp	r3, #0
 801d9f2:	dc03      	bgt.n	801d9fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d9f4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801d9f6:	2b00      	cmp	r3, #0
 801d9f8:	f340 83cb 	ble.w	801e192 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801d9fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d9fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801da02:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801da06:	1e48      	subs	r0, r1, #1
 801da08:	1e55      	subs	r5, r2, #1
 801da0a:	9b08      	ldr	r3, [sp, #32]
 801da0c:	2b00      	cmp	r3, #0
 801da0e:	f340 81a3 	ble.w	801dd58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801da12:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801da14:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801da16:	1436      	asrs	r6, r6, #16
 801da18:	ea4f 4323 	mov.w	r3, r3, asr #16
 801da1c:	d406      	bmi.n	801da2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801da1e:	4286      	cmp	r6, r0
 801da20:	da04      	bge.n	801da2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801da22:	2b00      	cmp	r3, #0
 801da24:	db02      	blt.n	801da2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801da26:	42ab      	cmp	r3, r5
 801da28:	f2c0 8197 	blt.w	801dd5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801da2c:	3601      	adds	r6, #1
 801da2e:	f100 8184 	bmi.w	801dd3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801da32:	42b1      	cmp	r1, r6
 801da34:	f2c0 8181 	blt.w	801dd3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801da38:	3301      	adds	r3, #1
 801da3a:	f100 817e 	bmi.w	801dd3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801da3e:	429a      	cmp	r2, r3
 801da40:	f2c0 817b 	blt.w	801dd3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801da44:	9b08      	ldr	r3, [sp, #32]
 801da46:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801da48:	9313      	str	r3, [sp, #76]	@ 0x4c
 801da4a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801da4e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801da50:	2b00      	cmp	r3, #0
 801da52:	f340 81a4 	ble.w	801dd9e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801da56:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801da58:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801da5a:	1418      	asrs	r0, r3, #16
 801da5c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801da5e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801da62:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801da64:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801da68:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801da6a:	142d      	asrs	r5, r5, #16
 801da6c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801da70:	f100 81f8 	bmi.w	801de64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801da74:	f102 3eff 	add.w	lr, r2, #4294967295
 801da78:	4575      	cmp	r5, lr
 801da7a:	f280 81f3 	bge.w	801de64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801da7e:	2800      	cmp	r0, #0
 801da80:	f2c0 81f0 	blt.w	801de64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801da84:	f103 3eff 	add.w	lr, r3, #4294967295
 801da88:	4570      	cmp	r0, lr
 801da8a:	f280 81eb 	bge.w	801de64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801da8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801da90:	b212      	sxth	r2, r2
 801da92:	fb00 5002 	mla	r0, r0, r2, r5
 801da96:	fa1f fe81 	uxth.w	lr, r1
 801da9a:	eb03 0a00 	add.w	sl, r3, r0
 801da9e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801daa2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801daa6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801daaa:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801daae:	b29b      	uxth	r3, r3
 801dab0:	f1bc 0f00 	cmp.w	ip, #0
 801dab4:	f000 81b9 	beq.w	801de2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801dab8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801dabc:	940d      	str	r4, [sp, #52]	@ 0x34
 801dabe:	eb0a 0b02 	add.w	fp, sl, r2
 801dac2:	fa1f fa8c 	uxth.w	sl, ip
 801dac6:	fb0a fe0e 	mul.w	lr, sl, lr
 801daca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801dace:	fa1f fa8a 	uxth.w	sl, sl
 801dad2:	eba5 050e 	sub.w	r5, r5, lr
 801dad6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801dada:	940e      	str	r4, [sp, #56]	@ 0x38
 801dadc:	eba3 030a 	sub.w	r3, r3, sl
 801dae0:	b2ad      	uxth	r5, r5
 801dae2:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dae4:	b29b      	uxth	r3, r3
 801dae6:	fb08 f505 	mul.w	r5, r8, r5
 801daea:	fb09 5303 	mla	r3, r9, r3, r5
 801daee:	fb0a 3304 	mla	r3, sl, r4, r3
 801daf2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801daf4:	fb0e 3304 	mla	r3, lr, r4, r3
 801daf8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dafc:	2b00      	cmp	r3, #0
 801dafe:	f000 810f 	beq.w	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801db02:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801db04:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801db08:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801db0c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801db10:	f000 8190 	beq.w	801de34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801db14:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801db18:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801db1c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db20:	fb09 f000 	mul.w	r0, r9, r0
 801db24:	fb0a fe0e 	mul.w	lr, sl, lr
 801db28:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801db2c:	f100 0b20 	add.w	fp, r0, #32
 801db30:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801db34:	44ce      	add	lr, r9
 801db36:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801db3a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801db3e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801db42:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801db46:	ea4e 0909 	orr.w	r9, lr, r9
 801db4a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801db4e:	8868      	ldrh	r0, [r5, #2]
 801db50:	d019      	beq.n	801db86 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801db52:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801db56:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801db5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db5e:	fb08 f800 	mul.w	r8, r8, r0
 801db62:	fb0a fe0e 	mul.w	lr, sl, lr
 801db66:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801db6a:	f108 0b20 	add.w	fp, r8, #32
 801db6e:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801db72:	4486      	add	lr, r0
 801db74:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801db78:	0a00      	lsrs	r0, r0, #8
 801db7a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801db7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801db82:	ea4e 0000 	orr.w	r0, lr, r0
 801db86:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801db8a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801db8e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801db92:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801db96:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801db9a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801db9e:	ea4e 0909 	orr.w	r9, lr, r9
 801dba2:	ea4a 0000 	orr.w	r0, sl, r0
 801dba6:	f1bc 0f00 	cmp.w	ip, #0
 801dbaa:	f000 8145 	beq.w	801de38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801dbae:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801dbb2:	3a01      	subs	r2, #1
 801dbb4:	0052      	lsls	r2, r2, #1
 801dbb6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801dbb8:	3202      	adds	r2, #2
 801dbba:	2cff      	cmp	r4, #255	@ 0xff
 801dbbc:	eb05 0e02 	add.w	lr, r5, r2
 801dbc0:	5aaa      	ldrh	r2, [r5, r2]
 801dbc2:	d018      	beq.n	801dbf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801dbc4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801dbc8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dbcc:	fb04 fa02 	mul.w	sl, r4, r2
 801dbd0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dbd4:	fb08 f805 	mul.w	r8, r8, r5
 801dbd8:	f10a 0520 	add.w	r5, sl, #32
 801dbdc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801dbe0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801dbe4:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dbe8:	4442      	add	r2, r8
 801dbea:	0a2d      	lsrs	r5, r5, #8
 801dbec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801dbf0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dbf4:	432a      	orrs	r2, r5
 801dbf6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801dbf8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801dbfc:	2cff      	cmp	r4, #255	@ 0xff
 801dbfe:	d01a      	beq.n	801dc36 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801dc00:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801dc04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801dc08:	fb04 fa05 	mul.w	sl, r4, r5
 801dc0c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dc10:	fb08 f80e 	mul.w	r8, r8, lr
 801dc14:	f10a 0e20 	add.w	lr, sl, #32
 801dc18:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801dc1c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801dc20:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801dc24:	4445      	add	r5, r8
 801dc26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801dc2a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801dc2e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801dc32:	ea45 050e 	orr.w	r5, r5, lr
 801dc36:	fb1c fe01 	smulbb	lr, ip, r1
 801dc3a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801dc3e:	f1cc 0810 	rsb	r8, ip, #16
 801dc42:	eba8 0801 	sub.w	r8, r8, r1
 801dc46:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801dc4a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801dc4e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801dc52:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801dc56:	4341      	muls	r1, r0
 801dc58:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dc5c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dc60:	ea4a 0202 	orr.w	r2, sl, r2
 801dc64:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801dc68:	fb09 1108 	mla	r1, r9, r8, r1
 801dc6c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dc70:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801dc74:	fb0c 1102 	mla	r1, ip, r2, r1
 801dc78:	ea4b 0505 	orr.w	r5, fp, r5
 801dc7c:	fb0e 1e05 	mla	lr, lr, r5, r1
 801dc80:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801dc84:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801dc88:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dc8c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801dc90:	ea42 0e0e 	orr.w	lr, r2, lr
 801dc94:	fa1f f28e 	uxth.w	r2, lr
 801dc98:	2bff      	cmp	r3, #255	@ 0xff
 801dc9a:	d103      	bne.n	801dca4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801dc9c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801dc9e:	29ff      	cmp	r1, #255	@ 0xff
 801dca0:	f000 80de 	beq.w	801de60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801dca4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801dca6:	8838      	ldrh	r0, [r7, #0]
 801dca8:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801dcaa:	434b      	muls	r3, r1
 801dcac:	f103 0c01 	add.w	ip, r3, #1
 801dcb0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801dcb4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801dcb8:	fa5f fc83 	uxtb.w	ip, r3
 801dcbc:	1203      	asrs	r3, r0, #8
 801dcbe:	1215      	asrs	r5, r2, #8
 801dcc0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801dcc4:	fb13 f30c 	smulbb	r3, r3, ip
 801dcc8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801dccc:	fb05 3501 	mla	r5, r5, r1, r3
 801dcd0:	10c3      	asrs	r3, r0, #3
 801dcd2:	10d1      	asrs	r1, r2, #3
 801dcd4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801dcd8:	fb13 f30c 	smulbb	r3, r3, ip
 801dcdc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801dce0:	fb01 3104 	mla	r1, r1, r4, r3
 801dce4:	00c3      	lsls	r3, r0, #3
 801dce6:	00d2      	lsls	r2, r2, #3
 801dce8:	b2db      	uxtb	r3, r3
 801dcea:	b2d2      	uxtb	r2, r2
 801dcec:	fb13 f30c 	smulbb	r3, r3, ip
 801dcf0:	b2ad      	uxth	r5, r5
 801dcf2:	fb02 3304 	mla	r3, r2, r4, r3
 801dcf6:	b29a      	uxth	r2, r3
 801dcf8:	1c6b      	adds	r3, r5, #1
 801dcfa:	b289      	uxth	r1, r1
 801dcfc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801dd00:	1c53      	adds	r3, r2, #1
 801dd02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dd06:	1c4a      	adds	r2, r1, #1
 801dd08:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dd0c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801dd10:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dd14:	0949      	lsrs	r1, r1, #5
 801dd16:	432b      	orrs	r3, r5
 801dd18:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dd1c:	430b      	orrs	r3, r1
 801dd1e:	803b      	strh	r3, [r7, #0]
 801dd20:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dd22:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801dd24:	4413      	add	r3, r2
 801dd26:	9321      	str	r3, [sp, #132]	@ 0x84
 801dd28:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801dd2a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd2c:	441a      	add	r2, r3
 801dd2e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801dd30:	9222      	str	r2, [sp, #136]	@ 0x88
 801dd32:	3b01      	subs	r3, #1
 801dd34:	3702      	adds	r7, #2
 801dd36:	9313      	str	r3, [sp, #76]	@ 0x4c
 801dd38:	e689      	b.n	801da4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801dd3a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dd3c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801dd3e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801dd40:	4433      	add	r3, r6
 801dd42:	9321      	str	r3, [sp, #132]	@ 0x84
 801dd44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801dd46:	441c      	add	r4, r3
 801dd48:	9b08      	ldr	r3, [sp, #32]
 801dd4a:	9422      	str	r4, [sp, #136]	@ 0x88
 801dd4c:	3b01      	subs	r3, #1
 801dd4e:	9308      	str	r3, [sp, #32]
 801dd50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd52:	3302      	adds	r3, #2
 801dd54:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd56:	e658      	b.n	801da0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801dd58:	d028      	beq.n	801ddac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801dd5a:	9b08      	ldr	r3, [sp, #32]
 801dd5c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801dd5e:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801dd60:	3b01      	subs	r3, #1
 801dd62:	fb00 5003 	mla	r0, r0, r3, r5
 801dd66:	1400      	asrs	r0, r0, #16
 801dd68:	f53f ae6c 	bmi.w	801da44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dd6c:	3901      	subs	r1, #1
 801dd6e:	4288      	cmp	r0, r1
 801dd70:	f6bf ae68 	bge.w	801da44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dd74:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801dd76:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801dd78:	fb01 0303 	mla	r3, r1, r3, r0
 801dd7c:	141b      	asrs	r3, r3, #16
 801dd7e:	f53f ae61 	bmi.w	801da44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dd82:	3a01      	subs	r2, #1
 801dd84:	4293      	cmp	r3, r2
 801dd86:	f6bf ae5d 	bge.w	801da44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dd8a:	9b08      	ldr	r3, [sp, #32]
 801dd8c:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801dd90:	9313      	str	r3, [sp, #76]	@ 0x4c
 801dd92:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801dd96:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801dd98:	2b00      	cmp	r3, #0
 801dd9a:	f300 8082 	bgt.w	801dea2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801dd9e:	9b08      	ldr	r3, [sp, #32]
 801dda0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801dda4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dda6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ddaa:	9309      	str	r3, [sp, #36]	@ 0x24
 801ddac:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ddae:	2b00      	cmp	r3, #0
 801ddb0:	f340 81ef 	ble.w	801e192 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801ddb4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ddb8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ddbc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ddc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ddc2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ddc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ddca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ddce:	eef0 6a62 	vmov.f32	s13, s5
 801ddd2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ddd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ddda:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ddde:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801dde2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dde6:	eef0 6a43 	vmov.f32	s13, s6
 801ddea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ddee:	ee12 2a90 	vmov	r2, s5
 801ddf2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ddf6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ddfa:	ee13 2a10 	vmov	r2, s6
 801ddfe:	9323      	str	r3, [sp, #140]	@ 0x8c
 801de00:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801de02:	fb92 f3f3 	sdiv	r3, r2, r3
 801de06:	9324      	str	r3, [sp, #144]	@ 0x90
 801de08:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801de0a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801de0c:	3b01      	subs	r3, #1
 801de0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801de12:	9311      	str	r3, [sp, #68]	@ 0x44
 801de14:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801de16:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801de1a:	bf08      	it	eq
 801de1c:	4613      	moveq	r3, r2
 801de1e:	9308      	str	r3, [sp, #32]
 801de20:	eeb0 3a67 	vmov.f32	s6, s15
 801de24:	eef0 2a47 	vmov.f32	s5, s14
 801de28:	e5e1      	b.n	801d9ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801de2a:	fb08 f505 	mul.w	r5, r8, r5
 801de2e:	fb09 5303 	mla	r3, r9, r3, r5
 801de32:	e661      	b.n	801daf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801de34:	4681      	mov	r9, r0
 801de36:	e688      	b.n	801db4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801de38:	f1c1 0210 	rsb	r2, r1, #16
 801de3c:	4341      	muls	r1, r0
 801de3e:	fb09 1902 	mla	r9, r9, r2, r1
 801de42:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801de46:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801de4a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801de4e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801de52:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801de56:	ea42 0909 	orr.w	r9, r2, r9
 801de5a:	fa1f f289 	uxth.w	r2, r9
 801de5e:	e71b      	b.n	801dc98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801de60:	803a      	strh	r2, [r7, #0]
 801de62:	e75d      	b.n	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801de64:	f115 0e01 	adds.w	lr, r5, #1
 801de68:	f53f af5a 	bmi.w	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801de6c:	4572      	cmp	r2, lr
 801de6e:	f6ff af57 	blt.w	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801de72:	f110 0e01 	adds.w	lr, r0, #1
 801de76:	f53f af53 	bmi.w	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801de7a:	4573      	cmp	r3, lr
 801de7c:	f6ff af50 	blt.w	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801de80:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801de82:	9502      	str	r5, [sp, #8]
 801de84:	b21b      	sxth	r3, r3
 801de86:	b212      	sxth	r2, r2
 801de88:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801de8c:	9301      	str	r3, [sp, #4]
 801de8e:	9200      	str	r2, [sp, #0]
 801de90:	e9cd c405 	strd	ip, r4, [sp, #20]
 801de94:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801de98:	4639      	mov	r1, r7
 801de9a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801de9c:	f7ff fc04 	bl	801d6a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801dea0:	e73e      	b.n	801dd20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801dea2:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801dea4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801dea8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801deaa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801deae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801deb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801deb4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801deb6:	141f      	asrs	r7, r3, #16
 801deb8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801deba:	141b      	asrs	r3, r3, #16
 801debc:	fb01 3707 	mla	r7, r1, r7, r3
 801dec0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801dec2:	fa1f fc82 	uxth.w	ip, r2
 801dec6:	eb03 0a07 	add.w	sl, r3, r7
 801deca:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801dece:	f813 9007 	ldrb.w	r9, [r3, r7]
 801ded2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ded6:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801deda:	b29b      	uxth	r3, r3
 801dedc:	2d00      	cmp	r5, #0
 801dede:	f000 813d 	beq.w	801e15c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801dee2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801dee6:	940f      	str	r4, [sp, #60]	@ 0x3c
 801dee8:	eb0a 0b01 	add.w	fp, sl, r1
 801deec:	fa1f fa85 	uxth.w	sl, r5
 801def0:	fb0a fc0c 	mul.w	ip, sl, ip
 801def4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801def8:	fa1f fa8a 	uxth.w	sl, sl
 801defc:	eba0 000c 	sub.w	r0, r0, ip
 801df00:	eba3 030a 	sub.w	r3, r3, sl
 801df04:	b280      	uxth	r0, r0
 801df06:	fb08 f000 	mul.w	r0, r8, r0
 801df0a:	b29b      	uxth	r3, r3
 801df0c:	fb09 0303 	mla	r3, r9, r3, r0
 801df10:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801df12:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801df16:	9410      	str	r4, [sp, #64]	@ 0x40
 801df18:	fb0a 3300 	mla	r3, sl, r0, r3
 801df1c:	fb0c 3304 	mla	r3, ip, r4, r3
 801df20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801df24:	2b00      	cmp	r3, #0
 801df26:	f000 810b 	beq.w	801e140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801df2a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801df2c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801df2e:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801df32:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801df36:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801df3a:	f000 8114 	beq.w	801e166 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801df3e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801df42:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801df46:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801df4a:	fb09 f707 	mul.w	r7, r9, r7
 801df4e:	fb0a fc0c 	mul.w	ip, sl, ip
 801df52:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801df56:	f107 0b20 	add.w	fp, r7, #32
 801df5a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801df5e:	44cc      	add	ip, r9
 801df60:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801df64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801df68:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801df6c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801df70:	ea4c 0909 	orr.w	r9, ip, r9
 801df74:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801df78:	8847      	ldrh	r7, [r0, #2]
 801df7a:	d019      	beq.n	801dfb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801df7c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801df80:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801df84:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801df88:	fb08 f807 	mul.w	r8, r8, r7
 801df8c:	fb0a fc0c 	mul.w	ip, sl, ip
 801df90:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801df94:	f108 0b20 	add.w	fp, r8, #32
 801df98:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801df9c:	44bc      	add	ip, r7
 801df9e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801dfa2:	0a3f      	lsrs	r7, r7, #8
 801dfa4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dfa8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801dfac:	ea4c 0707 	orr.w	r7, ip, r7
 801dfb0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801dfb4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801dfb8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801dfbc:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801dfc0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801dfc4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801dfc8:	ea4c 0909 	orr.w	r9, ip, r9
 801dfcc:	ea4a 0707 	orr.w	r7, sl, r7
 801dfd0:	2d00      	cmp	r5, #0
 801dfd2:	f000 80ca 	beq.w	801e16a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801dfd6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801dfda:	3901      	subs	r1, #1
 801dfdc:	0049      	lsls	r1, r1, #1
 801dfde:	3102      	adds	r1, #2
 801dfe0:	eb00 0c01 	add.w	ip, r0, r1
 801dfe4:	5a41      	ldrh	r1, [r0, r1]
 801dfe6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801dfe8:	28ff      	cmp	r0, #255	@ 0xff
 801dfea:	d019      	beq.n	801e020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801dfec:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801dfee:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801dff2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801dff6:	fb04 fa01 	mul.w	sl, r4, r1
 801dffa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dffe:	fb08 f800 	mul.w	r8, r8, r0
 801e002:	f10a 0020 	add.w	r0, sl, #32
 801e006:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801e00a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801e00e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e012:	4441      	add	r1, r8
 801e014:	0a00      	lsrs	r0, r0, #8
 801e016:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801e01a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e01e:	4301      	orrs	r1, r0
 801e020:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e022:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801e026:	2cff      	cmp	r4, #255	@ 0xff
 801e028:	d01a      	beq.n	801e060 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801e02a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801e02e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e032:	fb04 fa00 	mul.w	sl, r4, r0
 801e036:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e03a:	fb08 f80c 	mul.w	r8, r8, ip
 801e03e:	f10a 0c20 	add.w	ip, sl, #32
 801e042:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801e046:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801e04a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e04e:	4440      	add	r0, r8
 801e050:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e054:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801e058:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801e05c:	ea40 000c 	orr.w	r0, r0, ip
 801e060:	fb15 fc02 	smulbb	ip, r5, r2
 801e064:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801e068:	f1c5 0810 	rsb	r8, r5, #16
 801e06c:	eba8 0802 	sub.w	r8, r8, r2
 801e070:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e074:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801e078:	437a      	muls	r2, r7
 801e07a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e07e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801e082:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e086:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e08a:	fb09 2208 	mla	r2, r9, r8, r2
 801e08e:	ea4a 0101 	orr.w	r1, sl, r1
 801e092:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801e096:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e09a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e09e:	fb05 2201 	mla	r2, r5, r1, r2
 801e0a2:	ea4b 0000 	orr.w	r0, fp, r0
 801e0a6:	fb0c 2200 	mla	r2, ip, r0, r2
 801e0aa:	0d57      	lsrs	r7, r2, #21
 801e0ac:	0952      	lsrs	r2, r2, #5
 801e0ae:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e0b2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e0b6:	433a      	orrs	r2, r7
 801e0b8:	2bff      	cmp	r3, #255	@ 0xff
 801e0ba:	b292      	uxth	r2, r2
 801e0bc:	d102      	bne.n	801e0c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e0be:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801e0c0:	29ff      	cmp	r1, #255	@ 0xff
 801e0c2:	d063      	beq.n	801e18c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801e0c4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801e0c6:	f8be 1000 	ldrh.w	r1, [lr]
 801e0ca:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e0cc:	4343      	muls	r3, r0
 801e0ce:	1c58      	adds	r0, r3, #1
 801e0d0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801e0d4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801e0d8:	1208      	asrs	r0, r1, #8
 801e0da:	b2db      	uxtb	r3, r3
 801e0dc:	1215      	asrs	r5, r2, #8
 801e0de:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e0e2:	fb10 f003 	smulbb	r0, r0, r3
 801e0e6:	10cf      	asrs	r7, r1, #3
 801e0e8:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e0ec:	00c9      	lsls	r1, r1, #3
 801e0ee:	fb05 0504 	mla	r5, r5, r4, r0
 801e0f2:	b2c9      	uxtb	r1, r1
 801e0f4:	10d0      	asrs	r0, r2, #3
 801e0f6:	00d2      	lsls	r2, r2, #3
 801e0f8:	fb11 f103 	smulbb	r1, r1, r3
 801e0fc:	b2d2      	uxtb	r2, r2
 801e0fe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e102:	fb02 1204 	mla	r2, r2, r4, r1
 801e106:	fb17 f703 	smulbb	r7, r7, r3
 801e10a:	b2ad      	uxth	r5, r5
 801e10c:	b292      	uxth	r2, r2
 801e10e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e112:	fb00 7004 	mla	r0, r0, r4, r7
 801e116:	1c6b      	adds	r3, r5, #1
 801e118:	1c57      	adds	r7, r2, #1
 801e11a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e11e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e122:	b280      	uxth	r0, r0
 801e124:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e128:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e12c:	433d      	orrs	r5, r7
 801e12e:	1c47      	adds	r7, r0, #1
 801e130:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801e134:	097f      	lsrs	r7, r7, #5
 801e136:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e13a:	433d      	orrs	r5, r7
 801e13c:	f8ae 5000 	strh.w	r5, [lr]
 801e140:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801e142:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801e144:	4413      	add	r3, r2
 801e146:	9321      	str	r3, [sp, #132]	@ 0x84
 801e148:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801e14a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e14c:	441a      	add	r2, r3
 801e14e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e150:	9222      	str	r2, [sp, #136]	@ 0x88
 801e152:	3b01      	subs	r3, #1
 801e154:	f10e 0e02 	add.w	lr, lr, #2
 801e158:	9313      	str	r3, [sp, #76]	@ 0x4c
 801e15a:	e61c      	b.n	801dd96 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801e15c:	fb08 f000 	mul.w	r0, r8, r0
 801e160:	fb09 0303 	mla	r3, r9, r3, r0
 801e164:	e6dc      	b.n	801df20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801e166:	46b9      	mov	r9, r7
 801e168:	e704      	b.n	801df74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801e16a:	f1c2 0110 	rsb	r1, r2, #16
 801e16e:	437a      	muls	r2, r7
 801e170:	fb09 2901 	mla	r9, r9, r1, r2
 801e174:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e178:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801e17c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801e180:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e184:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e188:	4302      	orrs	r2, r0
 801e18a:	e795      	b.n	801e0b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801e18c:	f8ae 2000 	strh.w	r2, [lr]
 801e190:	e7d6      	b.n	801e140 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801e192:	b017      	add	sp, #92	@ 0x5c
 801e194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e198 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e19c:	b085      	sub	sp, #20
 801e19e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801e1a2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801e1a6:	9103      	str	r1, [sp, #12]
 801e1a8:	fb00 7406 	mla	r4, r0, r6, r7
 801e1ac:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801e1b0:	2800      	cmp	r0, #0
 801e1b2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801e1b6:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801e1ba:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801e1be:	9501      	str	r5, [sp, #4]
 801e1c0:	eb02 0904 	add.w	r9, r2, r4
 801e1c4:	f2c0 8141 	blt.w	801e44a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801e1c8:	4583      	cmp	fp, r0
 801e1ca:	f340 813e 	ble.w	801e44a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801e1ce:	2f00      	cmp	r7, #0
 801e1d0:	f2c0 8137 	blt.w	801e442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801e1d4:	42be      	cmp	r6, r7
 801e1d6:	f340 8134 	ble.w	801e442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801e1da:	f812 c004 	ldrb.w	ip, [r2, r4]
 801e1de:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801e1e2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801e1e6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801e1ea:	4355      	muls	r5, r2
 801e1ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e1f0:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801e1f4:	fb0c f203 	mul.w	r2, ip, r3
 801e1f8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801e1fc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801e200:	441d      	add	r5, r3
 801e202:	f102 0320 	add.w	r3, r2, #32
 801e206:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e20a:	0a1b      	lsrs	r3, r3, #8
 801e20c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801e210:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e214:	431c      	orrs	r4, r3
 801e216:	1c7b      	adds	r3, r7, #1
 801e218:	f100 811c 	bmi.w	801e454 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801e21c:	429e      	cmp	r6, r3
 801e21e:	f340 8119 	ble.w	801e454 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801e222:	2900      	cmp	r1, #0
 801e224:	f000 8119 	beq.w	801e45a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801e228:	9a01      	ldr	r2, [sp, #4]
 801e22a:	f899 3001 	ldrb.w	r3, [r9, #1]
 801e22e:	8855      	ldrh	r5, [r2, #2]
 801e230:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801e234:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801e238:	fb08 f802 	mul.w	r8, r8, r2
 801e23c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e240:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801e244:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801e248:	435d      	muls	r5, r3
 801e24a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e24e:	44d0      	add	r8, sl
 801e250:	f105 0a20 	add.w	sl, r5, #32
 801e254:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801e258:	0a2d      	lsrs	r5, r5, #8
 801e25a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801e25e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e262:	432a      	orrs	r2, r5
 801e264:	3001      	adds	r0, #1
 801e266:	f100 80fe 	bmi.w	801e466 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801e26a:	4583      	cmp	fp, r0
 801e26c:	f340 80fb 	ble.w	801e466 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801e270:	f1be 0f00 	cmp.w	lr, #0
 801e274:	f000 80fc 	beq.w	801e470 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801e278:	2f00      	cmp	r7, #0
 801e27a:	f2c0 80f1 	blt.w	801e460 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801e27e:	42be      	cmp	r6, r7
 801e280:	f340 80ee 	ble.w	801e460 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801e284:	9801      	ldr	r0, [sp, #4]
 801e286:	f819 5006 	ldrb.w	r5, [r9, r6]
 801e28a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801e28e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801e292:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801e296:	fb0a fa00 	mul.w	sl, sl, r0
 801e29a:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801e29e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801e2a2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801e2a6:	fb05 f808 	mul.w	r8, r5, r8
 801e2aa:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801e2ae:	4482      	add	sl, r0
 801e2b0:	f108 0020 	add.w	r0, r8, #32
 801e2b4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e2b8:	0a00      	lsrs	r0, r0, #8
 801e2ba:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801e2be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2c2:	ea4b 0b00 	orr.w	fp, fp, r0
 801e2c6:	3701      	adds	r7, #1
 801e2c8:	f100 80d7 	bmi.w	801e47a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801e2cc:	42be      	cmp	r6, r7
 801e2ce:	f340 80d4 	ble.w	801e47a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801e2d2:	2900      	cmp	r1, #0
 801e2d4:	f000 80d4 	beq.w	801e480 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801e2d8:	3601      	adds	r6, #1
 801e2da:	9801      	ldr	r0, [sp, #4]
 801e2dc:	f819 7006 	ldrb.w	r7, [r9, r6]
 801e2e0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801e2e4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801e2e8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801e2ec:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e2f0:	fb09 f906 	mul.w	r9, r9, r6
 801e2f4:	fb07 f800 	mul.w	r8, r7, r0
 801e2f8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801e2fc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801e300:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801e304:	44d1      	add	r9, sl
 801e306:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801e30a:	f108 0020 	add.w	r0, r8, #32
 801e30e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801e312:	0a00      	lsrs	r0, r0, #8
 801e314:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e318:	4330      	orrs	r0, r6
 801e31a:	b28e      	uxth	r6, r1
 801e31c:	fa1f f98e 	uxth.w	r9, lr
 801e320:	fb06 f809 	mul.w	r8, r6, r9
 801e324:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801e328:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801e32c:	0136      	lsls	r6, r6, #4
 801e32e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e332:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e336:	9601      	str	r6, [sp, #4]
 801e338:	ea4a 0404 	orr.w	r4, sl, r4
 801e33c:	fa1f f689 	uxth.w	r6, r9
 801e340:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e344:	fb11 f90e 	smulbb	r9, r1, lr
 801e348:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801e34c:	9602      	str	r6, [sp, #8]
 801e34e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e352:	4626      	mov	r6, r4
 801e354:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e358:	f1ce 0410 	rsb	r4, lr, #16
 801e35c:	1a64      	subs	r4, r4, r1
 801e35e:	ea4a 0202 	orr.w	r2, sl, r2
 801e362:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801e366:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e36a:	434a      	muls	r2, r1
 801e36c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801e370:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e374:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e378:	fb04 2406 	mla	r4, r4, r6, r2
 801e37c:	ea4a 0000 	orr.w	r0, sl, r0
 801e380:	fb09 4200 	mla	r2, r9, r0, r4
 801e384:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801e388:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e38c:	9801      	ldr	r0, [sp, #4]
 801e38e:	9903      	ldr	r1, [sp, #12]
 801e390:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801e394:	ea44 0b0b 	orr.w	fp, r4, fp
 801e398:	9c02      	ldr	r4, [sp, #8]
 801e39a:	8809      	ldrh	r1, [r1, #0]
 801e39c:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801e3a0:	1b00      	subs	r0, r0, r4
 801e3a2:	9c01      	ldr	r4, [sp, #4]
 801e3a4:	eba4 0608 	sub.w	r6, r4, r8
 801e3a8:	b2b6      	uxth	r6, r6
 801e3aa:	b280      	uxth	r0, r0
 801e3ac:	4373      	muls	r3, r6
 801e3ae:	fb0c 3300 	mla	r3, ip, r0, r3
 801e3b2:	9802      	ldr	r0, [sp, #8]
 801e3b4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801e3b8:	fb00 3505 	mla	r5, r0, r5, r3
 801e3bc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801e3c0:	fb08 5707 	mla	r7, r8, r7, r5
 801e3c4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e3c8:	120b      	asrs	r3, r1, #8
 801e3ca:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e3ce:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801e3d2:	b2ff      	uxtb	r7, r7
 801e3d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e3d8:	10c8      	asrs	r0, r1, #3
 801e3da:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e3de:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801e3e2:	00c9      	lsls	r1, r1, #3
 801e3e4:	437b      	muls	r3, r7
 801e3e6:	ea42 0e0e 	orr.w	lr, r2, lr
 801e3ea:	b2c9      	uxtb	r1, r1
 801e3ec:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801e3f0:	fa1f f28e 	uxth.w	r2, lr
 801e3f4:	4378      	muls	r0, r7
 801e3f6:	434f      	muls	r7, r1
 801e3f8:	1c59      	adds	r1, r3, #1
 801e3fa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e3fe:	1213      	asrs	r3, r2, #8
 801e400:	f023 0307 	bic.w	r3, r3, #7
 801e404:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e408:	1c41      	adds	r1, r0, #1
 801e40a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e40e:	10d1      	asrs	r1, r2, #3
 801e410:	f021 0103 	bic.w	r1, r1, #3
 801e414:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e418:	021b      	lsls	r3, r3, #8
 801e41a:	00c9      	lsls	r1, r1, #3
 801e41c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e420:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801e424:	430b      	orrs	r3, r1
 801e426:	1c79      	adds	r1, r7, #1
 801e428:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801e42c:	00d2      	lsls	r2, r2, #3
 801e42e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801e432:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e436:	431a      	orrs	r2, r3
 801e438:	9b03      	ldr	r3, [sp, #12]
 801e43a:	801a      	strh	r2, [r3, #0]
 801e43c:	b005      	add	sp, #20
 801e43e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e442:	f04f 0c00 	mov.w	ip, #0
 801e446:	4664      	mov	r4, ip
 801e448:	e6e5      	b.n	801e216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801e44a:	2300      	movs	r3, #0
 801e44c:	469c      	mov	ip, r3
 801e44e:	461a      	mov	r2, r3
 801e450:	461c      	mov	r4, r3
 801e452:	e707      	b.n	801e264 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e454:	2300      	movs	r3, #0
 801e456:	461a      	mov	r2, r3
 801e458:	e704      	b.n	801e264 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e45a:	460b      	mov	r3, r1
 801e45c:	460a      	mov	r2, r1
 801e45e:	e701      	b.n	801e264 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801e460:	2500      	movs	r5, #0
 801e462:	46ab      	mov	fp, r5
 801e464:	e72f      	b.n	801e2c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801e466:	2700      	movs	r7, #0
 801e468:	463d      	mov	r5, r7
 801e46a:	4638      	mov	r0, r7
 801e46c:	46bb      	mov	fp, r7
 801e46e:	e754      	b.n	801e31a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e470:	4677      	mov	r7, lr
 801e472:	4675      	mov	r5, lr
 801e474:	4670      	mov	r0, lr
 801e476:	46f3      	mov	fp, lr
 801e478:	e74f      	b.n	801e31a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e47a:	2700      	movs	r7, #0
 801e47c:	4638      	mov	r0, r7
 801e47e:	e74c      	b.n	801e31a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801e480:	460f      	mov	r7, r1
 801e482:	4608      	mov	r0, r1
 801e484:	e749      	b.n	801e31a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801e488 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e488:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e48c:	b093      	sub	sp, #76	@ 0x4c
 801e48e:	9210      	str	r2, [sp, #64]	@ 0x40
 801e490:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801e492:	910e      	str	r1, [sp, #56]	@ 0x38
 801e494:	9306      	str	r3, [sp, #24]
 801e496:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801e49a:	9011      	str	r0, [sp, #68]	@ 0x44
 801e49c:	6850      	ldr	r0, [r2, #4]
 801e49e:	6812      	ldr	r2, [r2, #0]
 801e4a0:	fb00 1303 	mla	r3, r0, r3, r1
 801e4a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e4a8:	9307      	str	r3, [sp, #28]
 801e4aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e4ac:	681b      	ldr	r3, [r3, #0]
 801e4ae:	9308      	str	r3, [sp, #32]
 801e4b0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e4b2:	685b      	ldr	r3, [r3, #4]
 801e4b4:	9309      	str	r3, [sp, #36]	@ 0x24
 801e4b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e4b8:	2b00      	cmp	r3, #0
 801e4ba:	dc03      	bgt.n	801e4c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e4bc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e4be:	2b00      	cmp	r3, #0
 801e4c0:	f340 83b4 	ble.w	801ec2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e4c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e4c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e4ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e4ce:	1e48      	subs	r0, r1, #1
 801e4d0:	1e55      	subs	r5, r2, #1
 801e4d2:	9b06      	ldr	r3, [sp, #24]
 801e4d4:	2b00      	cmp	r3, #0
 801e4d6:	f340 8163 	ble.w	801e7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801e4da:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801e4dc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e4de:	1436      	asrs	r6, r6, #16
 801e4e0:	ea4f 4323 	mov.w	r3, r3, asr #16
 801e4e4:	d406      	bmi.n	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e4e6:	4286      	cmp	r6, r0
 801e4e8:	da04      	bge.n	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e4ea:	2b00      	cmp	r3, #0
 801e4ec:	db02      	blt.n	801e4f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801e4ee:	42ab      	cmp	r3, r5
 801e4f0:	f2c0 8157 	blt.w	801e7a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801e4f4:	3601      	adds	r6, #1
 801e4f6:	f100 8144 	bmi.w	801e782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e4fa:	42b1      	cmp	r1, r6
 801e4fc:	f2c0 8141 	blt.w	801e782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e500:	3301      	adds	r3, #1
 801e502:	f100 813e 	bmi.w	801e782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e506:	429a      	cmp	r2, r3
 801e508:	f2c0 813b 	blt.w	801e782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801e50c:	9b06      	ldr	r3, [sp, #24]
 801e50e:	9f07      	ldr	r7, [sp, #28]
 801e510:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e512:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e516:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e518:	2b00      	cmp	r3, #0
 801e51a:	f340 8164 	ble.w	801e7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801e51e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e520:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801e522:	1418      	asrs	r0, r3, #16
 801e524:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e526:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801e52a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e52c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801e530:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e532:	142d      	asrs	r5, r5, #16
 801e534:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801e538:	f100 81ee 	bmi.w	801e918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e53c:	f102 3eff 	add.w	lr, r2, #4294967295
 801e540:	4575      	cmp	r5, lr
 801e542:	f280 81e9 	bge.w	801e918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e546:	2800      	cmp	r0, #0
 801e548:	f2c0 81e6 	blt.w	801e918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e54c:	f103 3eff 	add.w	lr, r3, #4294967295
 801e550:	4570      	cmp	r0, lr
 801e552:	f280 81e1 	bge.w	801e918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801e556:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e558:	b212      	sxth	r2, r2
 801e55a:	fb00 5002 	mla	r0, r0, r2, r5
 801e55e:	fa1f fe81 	uxth.w	lr, r1
 801e562:	eb03 0a00 	add.w	sl, r3, r0
 801e566:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801e56a:	f813 9000 	ldrb.w	r9, [r3, r0]
 801e56e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e572:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801e576:	b29b      	uxth	r3, r3
 801e578:	f1bc 0f00 	cmp.w	ip, #0
 801e57c:	f000 8179 	beq.w	801e872 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801e580:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801e584:	940a      	str	r4, [sp, #40]	@ 0x28
 801e586:	eb0a 0b02 	add.w	fp, sl, r2
 801e58a:	fa1f fa8c 	uxth.w	sl, ip
 801e58e:	fb0a fe0e 	mul.w	lr, sl, lr
 801e592:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801e596:	fa1f fa8a 	uxth.w	sl, sl
 801e59a:	eba5 050e 	sub.w	r5, r5, lr
 801e59e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e5a2:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e5a4:	eba3 030a 	sub.w	r3, r3, sl
 801e5a8:	b2ad      	uxth	r5, r5
 801e5aa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e5ac:	b29b      	uxth	r3, r3
 801e5ae:	fb08 f505 	mul.w	r5, r8, r5
 801e5b2:	fb09 5303 	mla	r3, r9, r3, r5
 801e5b6:	fb0a 3304 	mla	r3, sl, r4, r3
 801e5ba:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e5bc:	fb0e 3304 	mla	r3, lr, r4, r3
 801e5c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e5c4:	2b00      	cmp	r3, #0
 801e5c6:	f000 80cf 	beq.w	801e768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e5ca:	9c08      	ldr	r4, [sp, #32]
 801e5cc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e5d0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801e5d4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801e5d8:	f000 8150 	beq.w	801e87c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801e5dc:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e5e0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e5e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e5e8:	fb09 f000 	mul.w	r0, r9, r0
 801e5ec:	fb0a fe0e 	mul.w	lr, sl, lr
 801e5f0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801e5f4:	f100 0b20 	add.w	fp, r0, #32
 801e5f8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e5fc:	44ce      	add	lr, r9
 801e5fe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801e602:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e606:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e60a:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e60e:	ea4e 0909 	orr.w	r9, lr, r9
 801e612:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801e616:	8868      	ldrh	r0, [r5, #2]
 801e618:	d019      	beq.n	801e64e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801e61a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801e61e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801e622:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e626:	fb08 f800 	mul.w	r8, r8, r0
 801e62a:	fb0a fe0e 	mul.w	lr, sl, lr
 801e62e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801e632:	f108 0b20 	add.w	fp, r8, #32
 801e636:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801e63a:	4486      	add	lr, r0
 801e63c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801e640:	0a00      	lsrs	r0, r0, #8
 801e642:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801e646:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801e64a:	ea4e 0000 	orr.w	r0, lr, r0
 801e64e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801e652:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801e656:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e65a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e65e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e662:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e666:	ea4e 0909 	orr.w	r9, lr, r9
 801e66a:	ea4a 0000 	orr.w	r0, sl, r0
 801e66e:	f1bc 0f00 	cmp.w	ip, #0
 801e672:	f000 8105 	beq.w	801e880 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801e676:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801e67a:	3a01      	subs	r2, #1
 801e67c:	0052      	lsls	r2, r2, #1
 801e67e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e680:	3202      	adds	r2, #2
 801e682:	2cff      	cmp	r4, #255	@ 0xff
 801e684:	eb05 0e02 	add.w	lr, r5, r2
 801e688:	5aaa      	ldrh	r2, [r5, r2]
 801e68a:	d018      	beq.n	801e6be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801e68c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801e690:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e694:	fb04 fa02 	mul.w	sl, r4, r2
 801e698:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e69c:	fb08 f805 	mul.w	r8, r8, r5
 801e6a0:	f10a 0520 	add.w	r5, sl, #32
 801e6a4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801e6a8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801e6ac:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e6b0:	4442      	add	r2, r8
 801e6b2:	0a2d      	lsrs	r5, r5, #8
 801e6b4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801e6b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e6bc:	432a      	orrs	r2, r5
 801e6be:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e6c0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801e6c4:	2cff      	cmp	r4, #255	@ 0xff
 801e6c6:	d01a      	beq.n	801e6fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801e6c8:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801e6cc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e6d0:	fb04 fa05 	mul.w	sl, r4, r5
 801e6d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801e6d8:	fb08 f80e 	mul.w	r8, r8, lr
 801e6dc:	f10a 0e20 	add.w	lr, sl, #32
 801e6e0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801e6e4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801e6e8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801e6ec:	4445      	add	r5, r8
 801e6ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e6f2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801e6f6:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801e6fa:	ea45 050e 	orr.w	r5, r5, lr
 801e6fe:	fb1c fe01 	smulbb	lr, ip, r1
 801e702:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801e706:	f1cc 0810 	rsb	r8, ip, #16
 801e70a:	eba8 0801 	sub.w	r8, r8, r1
 801e70e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801e712:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801e716:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801e71a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801e71e:	4341      	muls	r1, r0
 801e720:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801e724:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e728:	ea4a 0202 	orr.w	r2, sl, r2
 801e72c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801e730:	fb09 1108 	mla	r1, r9, r8, r1
 801e734:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e738:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e73c:	fb0c 1102 	mla	r1, ip, r2, r1
 801e740:	ea4b 0505 	orr.w	r5, fp, r5
 801e744:	fb0e 1e05 	mla	lr, lr, r5, r1
 801e748:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801e74c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801e750:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e754:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e758:	ea42 0e0e 	orr.w	lr, r2, lr
 801e75c:	fa1f f28e 	uxth.w	r2, lr
 801e760:	2bff      	cmp	r3, #255	@ 0xff
 801e762:	f040 80a1 	bne.w	801e8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801e766:	803a      	strh	r2, [r7, #0]
 801e768:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e76a:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801e76c:	4413      	add	r3, r2
 801e76e:	931d      	str	r3, [sp, #116]	@ 0x74
 801e770:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801e772:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e774:	441a      	add	r2, r3
 801e776:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e778:	921e      	str	r2, [sp, #120]	@ 0x78
 801e77a:	3b01      	subs	r3, #1
 801e77c:	3702      	adds	r7, #2
 801e77e:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e780:	e6c9      	b.n	801e516 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e782:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e784:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801e786:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801e788:	4433      	add	r3, r6
 801e78a:	931d      	str	r3, [sp, #116]	@ 0x74
 801e78c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801e78e:	441c      	add	r4, r3
 801e790:	9b06      	ldr	r3, [sp, #24]
 801e792:	941e      	str	r4, [sp, #120]	@ 0x78
 801e794:	3b01      	subs	r3, #1
 801e796:	9306      	str	r3, [sp, #24]
 801e798:	9b07      	ldr	r3, [sp, #28]
 801e79a:	3302      	adds	r3, #2
 801e79c:	9307      	str	r3, [sp, #28]
 801e79e:	e698      	b.n	801e4d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e7a0:	d028      	beq.n	801e7f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801e7a2:	9b06      	ldr	r3, [sp, #24]
 801e7a4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801e7a6:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801e7a8:	3b01      	subs	r3, #1
 801e7aa:	fb00 5003 	mla	r0, r0, r3, r5
 801e7ae:	1400      	asrs	r0, r0, #16
 801e7b0:	f53f aeac 	bmi.w	801e50c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e7b4:	3901      	subs	r1, #1
 801e7b6:	4288      	cmp	r0, r1
 801e7b8:	f6bf aea8 	bge.w	801e50c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e7bc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801e7be:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801e7c0:	fb01 0303 	mla	r3, r1, r3, r0
 801e7c4:	141b      	asrs	r3, r3, #16
 801e7c6:	f53f aea1 	bmi.w	801e50c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e7ca:	3a01      	subs	r2, #1
 801e7cc:	4293      	cmp	r3, r2
 801e7ce:	f6bf ae9d 	bge.w	801e50c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801e7d2:	9b06      	ldr	r3, [sp, #24]
 801e7d4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801e7d8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e7da:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801e7de:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e7e0:	2b00      	cmp	r3, #0
 801e7e2:	f300 80b6 	bgt.w	801e952 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801e7e6:	9b06      	ldr	r3, [sp, #24]
 801e7e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e7ec:	9b07      	ldr	r3, [sp, #28]
 801e7ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e7f2:	9307      	str	r3, [sp, #28]
 801e7f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e7f6:	2b00      	cmp	r3, #0
 801e7f8:	f340 8218 	ble.w	801ec2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801e7fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e800:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e804:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e808:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e80a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e80e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e812:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e816:	eef0 6a62 	vmov.f32	s13, s5
 801e81a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e81e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e822:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e826:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801e82a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e82e:	eef0 6a43 	vmov.f32	s13, s6
 801e832:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e836:	ee12 2a90 	vmov	r2, s5
 801e83a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e83e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e842:	ee13 2a10 	vmov	r2, s6
 801e846:	931f      	str	r3, [sp, #124]	@ 0x7c
 801e848:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e84a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e84e:	9320      	str	r3, [sp, #128]	@ 0x80
 801e850:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e852:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e854:	3b01      	subs	r3, #1
 801e856:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e85a:	930e      	str	r3, [sp, #56]	@ 0x38
 801e85c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e85e:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801e862:	bf08      	it	eq
 801e864:	4613      	moveq	r3, r2
 801e866:	9306      	str	r3, [sp, #24]
 801e868:	eeb0 3a67 	vmov.f32	s6, s15
 801e86c:	eef0 2a47 	vmov.f32	s5, s14
 801e870:	e621      	b.n	801e4b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801e872:	fb08 f505 	mul.w	r5, r8, r5
 801e876:	fb09 5303 	mla	r3, r9, r3, r5
 801e87a:	e6a1      	b.n	801e5c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801e87c:	4681      	mov	r9, r0
 801e87e:	e6c8      	b.n	801e612 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801e880:	f1c1 0210 	rsb	r2, r1, #16
 801e884:	4341      	muls	r1, r0
 801e886:	fb09 1902 	mla	r9, r9, r2, r1
 801e88a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801e88e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801e892:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e896:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e89a:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801e89e:	ea42 0909 	orr.w	r9, r2, r9
 801e8a2:	fa1f f289 	uxth.w	r2, r9
 801e8a6:	e75b      	b.n	801e760 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e8a8:	f8b7 c000 	ldrh.w	ip, [r7]
 801e8ac:	43db      	mvns	r3, r3
 801e8ae:	ea4f 202c 	mov.w	r0, ip, asr #8
 801e8b2:	fa5f fe83 	uxtb.w	lr, r3
 801e8b6:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e8ba:	fb00 f00e 	mul.w	r0, r0, lr
 801e8be:	1c41      	adds	r1, r0, #1
 801e8c0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801e8c4:	1211      	asrs	r1, r2, #8
 801e8c6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801e8ca:	f021 0107 	bic.w	r1, r1, #7
 801e8ce:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801e8d2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e8d6:	48d7      	ldr	r0, [pc, #860]	@ (801ec34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801e8d8:	fb05 f50e 	mul.w	r5, r5, lr
 801e8dc:	b2c9      	uxtb	r1, r1
 801e8de:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801e8e2:	1c69      	adds	r1, r5, #1
 801e8e4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e8e8:	10d1      	asrs	r1, r2, #3
 801e8ea:	f021 0103 	bic.w	r1, r1, #3
 801e8ee:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801e8f2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801e8f6:	b2db      	uxtb	r3, r3
 801e8f8:	00c9      	lsls	r1, r1, #3
 801e8fa:	fb03 f30e 	mul.w	r3, r3, lr
 801e8fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e902:	4301      	orrs	r1, r0
 801e904:	1c58      	adds	r0, r3, #1
 801e906:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e90a:	00d2      	lsls	r2, r2, #3
 801e90c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e910:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e914:	430a      	orrs	r2, r1
 801e916:	e726      	b.n	801e766 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801e918:	f115 0e01 	adds.w	lr, r5, #1
 801e91c:	f53f af24 	bmi.w	801e768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e920:	4572      	cmp	r2, lr
 801e922:	f6ff af21 	blt.w	801e768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e926:	f110 0e01 	adds.w	lr, r0, #1
 801e92a:	f53f af1d 	bmi.w	801e768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e92e:	4573      	cmp	r3, lr
 801e930:	f6ff af1a 	blt.w	801e768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e934:	b21b      	sxth	r3, r3
 801e936:	b212      	sxth	r2, r2
 801e938:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801e93c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801e940:	9301      	str	r3, [sp, #4]
 801e942:	9200      	str	r2, [sp, #0]
 801e944:	4639      	mov	r1, r7
 801e946:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801e94a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801e94c:	f7ff fc24 	bl	801e198 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801e950:	e70a      	b.n	801e768 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801e952:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e954:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e958:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e95a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801e95e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e960:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e964:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801e966:	141f      	asrs	r7, r3, #16
 801e968:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801e96a:	141b      	asrs	r3, r3, #16
 801e96c:	fb01 3707 	mla	r7, r1, r7, r3
 801e970:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e972:	fa1f fc82 	uxth.w	ip, r2
 801e976:	eb03 0a07 	add.w	sl, r3, r7
 801e97a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801e97e:	f813 9007 	ldrb.w	r9, [r3, r7]
 801e982:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801e986:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e98a:	b29b      	uxth	r3, r3
 801e98c:	2d00      	cmp	r5, #0
 801e98e:	f000 80fe 	beq.w	801eb8e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801e992:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801e996:	940c      	str	r4, [sp, #48]	@ 0x30
 801e998:	eb0a 0b01 	add.w	fp, sl, r1
 801e99c:	fa1f fa85 	uxth.w	sl, r5
 801e9a0:	fb0a fc0c 	mul.w	ip, sl, ip
 801e9a4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801e9a8:	fa1f fa8a 	uxth.w	sl, sl
 801e9ac:	eba0 000c 	sub.w	r0, r0, ip
 801e9b0:	eba3 030a 	sub.w	r3, r3, sl
 801e9b4:	b280      	uxth	r0, r0
 801e9b6:	fb08 f000 	mul.w	r0, r8, r0
 801e9ba:	b29b      	uxth	r3, r3
 801e9bc:	fb09 0303 	mla	r3, r9, r3, r0
 801e9c0:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801e9c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801e9c6:	940d      	str	r4, [sp, #52]	@ 0x34
 801e9c8:	fb0a 3300 	mla	r3, sl, r0, r3
 801e9cc:	fb0c 3304 	mla	r3, ip, r4, r3
 801e9d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801e9d4:	2b00      	cmp	r3, #0
 801e9d6:	f000 80cc 	beq.w	801eb72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801e9da:	9808      	ldr	r0, [sp, #32]
 801e9dc:	9c08      	ldr	r4, [sp, #32]
 801e9de:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e9e2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801e9e6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801e9ea:	f000 80d5 	beq.w	801eb98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801e9ee:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801e9f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801e9f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e9fa:	fb09 f707 	mul.w	r7, r9, r7
 801e9fe:	fb0a fc0c 	mul.w	ip, sl, ip
 801ea02:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801ea06:	f107 0b20 	add.w	fp, r7, #32
 801ea0a:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801ea0e:	44cc      	add	ip, r9
 801ea10:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801ea14:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ea18:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ea1c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801ea20:	ea4c 0909 	orr.w	r9, ip, r9
 801ea24:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801ea28:	8847      	ldrh	r7, [r0, #2]
 801ea2a:	d019      	beq.n	801ea60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801ea2c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801ea30:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ea34:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ea38:	fb08 f807 	mul.w	r8, r8, r7
 801ea3c:	fb0a fc0c 	mul.w	ip, sl, ip
 801ea40:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801ea44:	f108 0b20 	add.w	fp, r8, #32
 801ea48:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801ea4c:	44bc      	add	ip, r7
 801ea4e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801ea52:	0a3f      	lsrs	r7, r7, #8
 801ea54:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801ea58:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ea5c:	ea4c 0707 	orr.w	r7, ip, r7
 801ea60:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801ea64:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801ea68:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ea6c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ea70:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ea74:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ea78:	ea4c 0909 	orr.w	r9, ip, r9
 801ea7c:	ea4a 0707 	orr.w	r7, sl, r7
 801ea80:	2d00      	cmp	r5, #0
 801ea82:	f000 808b 	beq.w	801eb9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801ea86:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801ea8a:	3901      	subs	r1, #1
 801ea8c:	0049      	lsls	r1, r1, #1
 801ea8e:	3102      	adds	r1, #2
 801ea90:	eb00 0c01 	add.w	ip, r0, r1
 801ea94:	5a41      	ldrh	r1, [r0, r1]
 801ea96:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801ea98:	28ff      	cmp	r0, #255	@ 0xff
 801ea9a:	d019      	beq.n	801ead0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801ea9c:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ea9e:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801eaa2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801eaa6:	fb04 fa01 	mul.w	sl, r4, r1
 801eaaa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801eaae:	fb08 f800 	mul.w	r8, r8, r0
 801eab2:	f10a 0020 	add.w	r0, sl, #32
 801eab6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801eaba:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801eabe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801eac2:	4441      	add	r1, r8
 801eac4:	0a00      	lsrs	r0, r0, #8
 801eac6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801eaca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801eace:	4301      	orrs	r1, r0
 801ead0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ead2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ead6:	2cff      	cmp	r4, #255	@ 0xff
 801ead8:	d01a      	beq.n	801eb10 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801eada:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801eade:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801eae2:	fb04 fa00 	mul.w	sl, r4, r0
 801eae6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801eaea:	fb08 f80c 	mul.w	r8, r8, ip
 801eaee:	f10a 0c20 	add.w	ip, sl, #32
 801eaf2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801eaf6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801eafa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801eafe:	4440      	add	r0, r8
 801eb00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb04:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801eb08:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801eb0c:	ea40 000c 	orr.w	r0, r0, ip
 801eb10:	fb15 fc02 	smulbb	ip, r5, r2
 801eb14:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801eb18:	f1c5 0810 	rsb	r8, r5, #16
 801eb1c:	eba8 0802 	sub.w	r8, r8, r2
 801eb20:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801eb24:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801eb28:	437a      	muls	r2, r7
 801eb2a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801eb2e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801eb32:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801eb36:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801eb3a:	fb09 2208 	mla	r2, r9, r8, r2
 801eb3e:	ea4a 0101 	orr.w	r1, sl, r1
 801eb42:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801eb46:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801eb4a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eb4e:	fb05 2201 	mla	r2, r5, r1, r2
 801eb52:	ea4b 0000 	orr.w	r0, fp, r0
 801eb56:	fb0c 2200 	mla	r2, ip, r0, r2
 801eb5a:	0d57      	lsrs	r7, r2, #21
 801eb5c:	0952      	lsrs	r2, r2, #5
 801eb5e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801eb62:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eb66:	433a      	orrs	r2, r7
 801eb68:	2bff      	cmp	r3, #255	@ 0xff
 801eb6a:	b292      	uxth	r2, r2
 801eb6c:	d127      	bne.n	801ebbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801eb6e:	f8ae 2000 	strh.w	r2, [lr]
 801eb72:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801eb74:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801eb76:	4413      	add	r3, r2
 801eb78:	931d      	str	r3, [sp, #116]	@ 0x74
 801eb7a:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801eb7c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eb7e:	441a      	add	r2, r3
 801eb80:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801eb82:	921e      	str	r2, [sp, #120]	@ 0x78
 801eb84:	3b01      	subs	r3, #1
 801eb86:	f10e 0e02 	add.w	lr, lr, #2
 801eb8a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801eb8c:	e627      	b.n	801e7de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801eb8e:	fb08 f000 	mul.w	r0, r8, r0
 801eb92:	fb09 0303 	mla	r3, r9, r3, r0
 801eb96:	e71b      	b.n	801e9d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801eb98:	46b9      	mov	r9, r7
 801eb9a:	e743      	b.n	801ea24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801eb9c:	f1c2 0110 	rsb	r1, r2, #16
 801eba0:	437a      	muls	r2, r7
 801eba2:	fb09 2901 	mla	r9, r9, r1, r2
 801eba6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ebaa:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ebae:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ebb2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ebb6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ebba:	4302      	orrs	r2, r0
 801ebbc:	e7d4      	b.n	801eb68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801ebbe:	f8be 7000 	ldrh.w	r7, [lr]
 801ebc2:	4c1c      	ldr	r4, [pc, #112]	@ (801ec34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801ebc4:	43db      	mvns	r3, r3
 801ebc6:	1238      	asrs	r0, r7, #8
 801ebc8:	fa5f fc83 	uxtb.w	ip, r3
 801ebcc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ebd0:	10fd      	asrs	r5, r7, #3
 801ebd2:	fb00 f00c 	mul.w	r0, r0, ip
 801ebd6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ebda:	fb05 f10c 	mul.w	r1, r5, ip
 801ebde:	1c45      	adds	r5, r0, #1
 801ebe0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ebe4:	1215      	asrs	r5, r2, #8
 801ebe6:	f025 0507 	bic.w	r5, r5, #7
 801ebea:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ebee:	1c4d      	adds	r5, r1, #1
 801ebf0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801ebf4:	10d1      	asrs	r1, r2, #3
 801ebf6:	f021 0103 	bic.w	r1, r1, #3
 801ebfa:	00fb      	lsls	r3, r7, #3
 801ebfc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ec00:	b2db      	uxtb	r3, r3
 801ec02:	b2c0      	uxtb	r0, r0
 801ec04:	00c9      	lsls	r1, r1, #3
 801ec06:	fb03 f30c 	mul.w	r3, r3, ip
 801ec0a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ec0e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801ec12:	4308      	orrs	r0, r1
 801ec14:	1c59      	adds	r1, r3, #1
 801ec16:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ec1a:	00d2      	lsls	r2, r2, #3
 801ec1c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801ec20:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801ec24:	4318      	orrs	r0, r3
 801ec26:	f8ae 0000 	strh.w	r0, [lr]
 801ec2a:	e7a2      	b.n	801eb72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801ec2c:	b013      	add	sp, #76	@ 0x4c
 801ec2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ec32:	bf00      	nop
 801ec34:	fffff800 	.word	0xfffff800

0801ec38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801ec38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ec3c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801ec40:	fb05 4c03 	mla	ip, r5, r3, r4
 801ec44:	2d00      	cmp	r5, #0
 801ec46:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801ec4a:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801ec4e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801ec52:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801ec56:	8808      	ldrh	r0, [r1, #0]
 801ec58:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801ec5c:	f2c0 80a7 	blt.w	801edae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801ec60:	45aa      	cmp	sl, r5
 801ec62:	f340 80a4 	ble.w	801edae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801ec66:	2c00      	cmp	r4, #0
 801ec68:	f2c0 809f 	blt.w	801edaa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801ec6c:	42a3      	cmp	r3, r4
 801ec6e:	f340 809c 	ble.w	801edaa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801ec72:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801ec76:	1c62      	adds	r2, r4, #1
 801ec78:	f100 809c 	bmi.w	801edb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ec7c:	4293      	cmp	r3, r2
 801ec7e:	f340 8099 	ble.w	801edb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ec82:	f1b9 0f00 	cmp.w	r9, #0
 801ec86:	f000 8095 	beq.w	801edb4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801ec8a:	f8be c002 	ldrh.w	ip, [lr, #2]
 801ec8e:	3501      	adds	r5, #1
 801ec90:	f100 8094 	bmi.w	801edbc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801ec94:	45aa      	cmp	sl, r5
 801ec96:	f340 8091 	ble.w	801edbc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801ec9a:	2f00      	cmp	r7, #0
 801ec9c:	f000 808e 	beq.w	801edbc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801eca0:	2c00      	cmp	r4, #0
 801eca2:	f2c0 8089 	blt.w	801edb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801eca6:	42a3      	cmp	r3, r4
 801eca8:	f340 8086 	ble.w	801edb8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801ecac:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801ecb0:	3401      	adds	r4, #1
 801ecb2:	f100 8086 	bmi.w	801edc2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801ecb6:	42a3      	cmp	r3, r4
 801ecb8:	f340 8083 	ble.w	801edc2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801ecbc:	f1b9 0f00 	cmp.w	r9, #0
 801ecc0:	d07f      	beq.n	801edc2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801ecc2:	3301      	adds	r3, #1
 801ecc4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801ecc8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801eccc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ecd0:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801ecd4:	fb19 fe07 	smulbb	lr, r9, r7
 801ecd8:	ea44 0808 	orr.w	r8, r4, r8
 801ecdc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ece0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ece4:	f1c7 0210 	rsb	r2, r7, #16
 801ece8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ecec:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ecf0:	ea44 0c0c 	orr.w	ip, r4, ip
 801ecf4:	eba2 0209 	sub.w	r2, r2, r9
 801ecf8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ecfc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ed00:	fb04 f40c 	mul.w	r4, r4, ip
 801ed04:	fb02 4808 	mla	r8, r2, r8, r4
 801ed08:	041a      	lsls	r2, r3, #16
 801ed0a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ed0e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ed12:	4313      	orrs	r3, r2
 801ed14:	042a      	lsls	r2, r5, #16
 801ed16:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ed1a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ed1e:	fb0e 8303 	mla	r3, lr, r3, r8
 801ed22:	432a      	orrs	r2, r5
 801ed24:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ed28:	fb07 3202 	mla	r2, r7, r2, r3
 801ed2c:	0d53      	lsrs	r3, r2, #21
 801ed2e:	0952      	lsrs	r2, r2, #5
 801ed30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ed34:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ed38:	431a      	orrs	r2, r3
 801ed3a:	b293      	uxth	r3, r2
 801ed3c:	b2b4      	uxth	r4, r6
 801ed3e:	1202      	asrs	r2, r0, #8
 801ed40:	43f6      	mvns	r6, r6
 801ed42:	b2f6      	uxtb	r6, r6
 801ed44:	121d      	asrs	r5, r3, #8
 801ed46:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ed4a:	fb12 f206 	smulbb	r2, r2, r6
 801ed4e:	10c7      	asrs	r7, r0, #3
 801ed50:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ed54:	00c0      	lsls	r0, r0, #3
 801ed56:	fb05 2504 	mla	r5, r5, r4, r2
 801ed5a:	b2c0      	uxtb	r0, r0
 801ed5c:	10da      	asrs	r2, r3, #3
 801ed5e:	00db      	lsls	r3, r3, #3
 801ed60:	b2db      	uxtb	r3, r3
 801ed62:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ed66:	fb10 f006 	smulbb	r0, r0, r6
 801ed6a:	b2ad      	uxth	r5, r5
 801ed6c:	fb03 0004 	mla	r0, r3, r4, r0
 801ed70:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ed74:	fb17 f706 	smulbb	r7, r7, r6
 801ed78:	b280      	uxth	r0, r0
 801ed7a:	1c6b      	adds	r3, r5, #1
 801ed7c:	fb02 7204 	mla	r2, r2, r4, r7
 801ed80:	b292      	uxth	r2, r2
 801ed82:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ed86:	1c43      	adds	r3, r0, #1
 801ed88:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ed8c:	1c50      	adds	r0, r2, #1
 801ed8e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801ed92:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801ed96:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ed9a:	0952      	lsrs	r2, r2, #5
 801ed9c:	432b      	orrs	r3, r5
 801ed9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801eda2:	4313      	orrs	r3, r2
 801eda4:	800b      	strh	r3, [r1, #0]
 801eda6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801edaa:	4680      	mov	r8, r0
 801edac:	e763      	b.n	801ec76 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801edae:	4684      	mov	ip, r0
 801edb0:	4680      	mov	r8, r0
 801edb2:	e76c      	b.n	801ec8e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801edb4:	4684      	mov	ip, r0
 801edb6:	e76a      	b.n	801ec8e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801edb8:	4605      	mov	r5, r0
 801edba:	e779      	b.n	801ecb0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801edbc:	4603      	mov	r3, r0
 801edbe:	4605      	mov	r5, r0
 801edc0:	e782      	b.n	801ecc8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801edc2:	4603      	mov	r3, r0
 801edc4:	e780      	b.n	801ecc8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801edc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801edc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801edca:	b093      	sub	sp, #76	@ 0x4c
 801edcc:	461d      	mov	r5, r3
 801edce:	9210      	str	r2, [sp, #64]	@ 0x40
 801edd0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801edd2:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801edd6:	920b      	str	r2, [sp, #44]	@ 0x2c
 801edd8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801eddc:	910a      	str	r1, [sp, #40]	@ 0x28
 801edde:	6859      	ldr	r1, [r3, #4]
 801ede0:	681b      	ldr	r3, [r3, #0]
 801ede2:	9011      	str	r0, [sp, #68]	@ 0x44
 801ede4:	fb01 2707 	mla	r7, r1, r7, r2
 801ede8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801edec:	9307      	str	r3, [sp, #28]
 801edee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801edf0:	681b      	ldr	r3, [r3, #0]
 801edf2:	9309      	str	r3, [sp, #36]	@ 0x24
 801edf4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801edf6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801edfa:	43db      	mvns	r3, r3
 801edfc:	b2db      	uxtb	r3, r3
 801edfe:	9308      	str	r3, [sp, #32]
 801ee00:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ee02:	2b00      	cmp	r3, #0
 801ee04:	dc03      	bgt.n	801ee0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ee06:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ee08:	2b00      	cmp	r3, #0
 801ee0a:	f340 8203 	ble.w	801f214 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ee0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ee10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee18:	1e48      	subs	r0, r1, #1
 801ee1a:	f102 3cff 	add.w	ip, r2, #4294967295
 801ee1e:	2d00      	cmp	r5, #0
 801ee20:	f340 80da 	ble.w	801efd8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801ee24:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ee28:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ee2c:	d406      	bmi.n	801ee3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ee2e:	4586      	cmp	lr, r0
 801ee30:	da04      	bge.n	801ee3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ee32:	2b00      	cmp	r3, #0
 801ee34:	db02      	blt.n	801ee3c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ee36:	4563      	cmp	r3, ip
 801ee38:	f2c0 80cf 	blt.w	801efda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ee3c:	f11e 0e01 	adds.w	lr, lr, #1
 801ee40:	f100 80c1 	bmi.w	801efc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ee44:	4571      	cmp	r1, lr
 801ee46:	f2c0 80be 	blt.w	801efc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ee4a:	3301      	adds	r3, #1
 801ee4c:	f100 80bb 	bmi.w	801efc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ee50:	429a      	cmp	r2, r3
 801ee52:	f2c0 80b8 	blt.w	801efc6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ee56:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801ee5a:	46a9      	mov	r9, r5
 801ee5c:	f1b9 0f00 	cmp.w	r9, #0
 801ee60:	f340 80d8 	ble.w	801f014 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801ee64:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ee66:	1421      	asrs	r1, r4, #16
 801ee68:	ea4f 4026 	mov.w	r0, r6, asr #16
 801ee6c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ee70:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801ee74:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801ee78:	f100 8111 	bmi.w	801f09e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801ee7c:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ee80:	4551      	cmp	r1, sl
 801ee82:	f280 810c 	bge.w	801f09e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801ee86:	2800      	cmp	r0, #0
 801ee88:	f2c0 8109 	blt.w	801f09e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801ee8c:	f103 3aff 	add.w	sl, r3, #4294967295
 801ee90:	4550      	cmp	r0, sl
 801ee92:	f280 8104 	bge.w	801f09e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801ee96:	fa0f f38e 	sxth.w	r3, lr
 801ee9a:	fb00 1103 	mla	r1, r0, r3, r1
 801ee9e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801eea0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801eea4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801eea8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801eeac:	f1bc 0f00 	cmp.w	ip, #0
 801eeb0:	d007      	beq.n	801eec2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801eeb2:	005b      	lsls	r3, r3, #1
 801eeb4:	eb0a 0003 	add.w	r0, sl, r3
 801eeb8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801eebc:	930c      	str	r3, [sp, #48]	@ 0x30
 801eebe:	8843      	ldrh	r3, [r0, #2]
 801eec0:	930d      	str	r3, [sp, #52]	@ 0x34
 801eec2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801eec6:	fb12 f30c 	smulbb	r3, r2, ip
 801eeca:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801eece:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801eed2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801eed6:	10db      	asrs	r3, r3, #3
 801eed8:	ea40 000e 	orr.w	r0, r0, lr
 801eedc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801eee0:	f1cc 0e10 	rsb	lr, ip, #16
 801eee4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801eee8:	ebae 0e02 	sub.w	lr, lr, r2
 801eeec:	ea4a 0101 	orr.w	r1, sl, r1
 801eef0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801eef4:	4351      	muls	r1, r2
 801eef6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801eef8:	9f08      	ldr	r7, [sp, #32]
 801eefa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801eefe:	fb0e 1e00 	mla	lr, lr, r0, r1
 801ef02:	0410      	lsls	r0, r2, #16
 801ef04:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ef08:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ef0c:	4310      	orrs	r0, r2
 801ef0e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ef10:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ef12:	0412      	lsls	r2, r2, #16
 801ef14:	fb03 e000 	mla	r0, r3, r0, lr
 801ef18:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ef1c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801ef20:	ea42 020e 	orr.w	r2, r2, lr
 801ef24:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801ef28:	fb03 0302 	mla	r3, r3, r2, r0
 801ef2c:	0d5a      	lsrs	r2, r3, #21
 801ef2e:	095b      	lsrs	r3, r3, #5
 801ef30:	f8b8 0000 	ldrh.w	r0, [r8]
 801ef34:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ef38:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ef3c:	4313      	orrs	r3, r2
 801ef3e:	b29b      	uxth	r3, r3
 801ef40:	1201      	asrs	r1, r0, #8
 801ef42:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801ef46:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ef4a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ef4e:	fb11 f107 	smulbb	r1, r1, r7
 801ef52:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ef56:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ef5a:	00c0      	lsls	r0, r0, #3
 801ef5c:	fb0c 1c02 	mla	ip, ip, r2, r1
 801ef60:	b2c0      	uxtb	r0, r0
 801ef62:	10d9      	asrs	r1, r3, #3
 801ef64:	00db      	lsls	r3, r3, #3
 801ef66:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ef6a:	b2db      	uxtb	r3, r3
 801ef6c:	fb10 f007 	smulbb	r0, r0, r7
 801ef70:	fa1f fc8c 	uxth.w	ip, ip
 801ef74:	fb03 0302 	mla	r3, r3, r2, r0
 801ef78:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ef7c:	fb1e fe07 	smulbb	lr, lr, r7
 801ef80:	fb01 e102 	mla	r1, r1, r2, lr
 801ef84:	b29a      	uxth	r2, r3
 801ef86:	f10c 0301 	add.w	r3, ip, #1
 801ef8a:	b289      	uxth	r1, r1
 801ef8c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ef90:	1c53      	adds	r3, r2, #1
 801ef92:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ef96:	1c4a      	adds	r2, r1, #1
 801ef98:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ef9c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801efa0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801efa4:	0949      	lsrs	r1, r1, #5
 801efa6:	ea43 030c 	orr.w	r3, r3, ip
 801efaa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801efae:	430b      	orrs	r3, r1
 801efb0:	f8a8 3000 	strh.w	r3, [r8]
 801efb4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801efb6:	441c      	add	r4, r3
 801efb8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801efba:	f108 0802 	add.w	r8, r8, #2
 801efbe:	441e      	add	r6, r3
 801efc0:	f109 39ff 	add.w	r9, r9, #4294967295
 801efc4:	e74a      	b.n	801ee5c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801efc6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801efc8:	441c      	add	r4, r3
 801efca:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801efcc:	441e      	add	r6, r3
 801efce:	9b07      	ldr	r3, [sp, #28]
 801efd0:	3302      	adds	r3, #2
 801efd2:	3d01      	subs	r5, #1
 801efd4:	9307      	str	r3, [sp, #28]
 801efd6:	e722      	b.n	801ee1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801efd8:	d022      	beq.n	801f020 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801efda:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801efdc:	1e6b      	subs	r3, r5, #1
 801efde:	fb00 4003 	mla	r0, r0, r3, r4
 801efe2:	1400      	asrs	r0, r0, #16
 801efe4:	f53f af37 	bmi.w	801ee56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801efe8:	3901      	subs	r1, #1
 801efea:	4288      	cmp	r0, r1
 801efec:	f6bf af33 	bge.w	801ee56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801eff0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801eff2:	fb01 6303 	mla	r3, r1, r3, r6
 801eff6:	141b      	asrs	r3, r3, #16
 801eff8:	f53f af2d 	bmi.w	801ee56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801effc:	3a01      	subs	r2, #1
 801effe:	4293      	cmp	r3, r2
 801f000:	f6bf af29 	bge.w	801ee56 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f004:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801f008:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801f00c:	46a8      	mov	r8, r5
 801f00e:	f1b8 0f00 	cmp.w	r8, #0
 801f012:	dc5e      	bgt.n	801f0d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801f014:	9b07      	ldr	r3, [sp, #28]
 801f016:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f01a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f01e:	9307      	str	r3, [sp, #28]
 801f020:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f022:	2b00      	cmp	r3, #0
 801f024:	f340 80f6 	ble.w	801f214 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801f028:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f02c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f030:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f034:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f036:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f03a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f03e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f042:	eef0 6a62 	vmov.f32	s13, s5
 801f046:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f04a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f04e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f052:	ee16 4a90 	vmov	r4, s13
 801f056:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f05a:	eef0 6a43 	vmov.f32	s13, s6
 801f05e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f062:	ee12 2a90 	vmov	r2, s5
 801f066:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f06a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f06e:	ee13 2a10 	vmov	r2, s6
 801f072:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f074:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f076:	fb92 f3f3 	sdiv	r3, r2, r3
 801f07a:	9320      	str	r3, [sp, #128]	@ 0x80
 801f07c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f07e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801f080:	3b01      	subs	r3, #1
 801f082:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f086:	930a      	str	r3, [sp, #40]	@ 0x28
 801f088:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f08a:	ee16 6a90 	vmov	r6, s13
 801f08e:	bf14      	ite	ne
 801f090:	461d      	movne	r5, r3
 801f092:	4615      	moveq	r5, r2
 801f094:	eeb0 3a67 	vmov.f32	s6, s15
 801f098:	eef0 2a47 	vmov.f32	s5, s14
 801f09c:	e6b0      	b.n	801ee00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f09e:	f111 0a01 	adds.w	sl, r1, #1
 801f0a2:	d487      	bmi.n	801efb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f0a4:	45d6      	cmp	lr, sl
 801f0a6:	db85      	blt.n	801efb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f0a8:	f110 0a01 	adds.w	sl, r0, #1
 801f0ac:	d482      	bmi.n	801efb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f0ae:	4553      	cmp	r3, sl
 801f0b0:	db80      	blt.n	801efb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f0b2:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801f0b4:	9101      	str	r1, [sp, #4]
 801f0b6:	b21b      	sxth	r3, r3
 801f0b8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801f0bc:	9300      	str	r3, [sp, #0]
 801f0be:	e9cd c704 	strd	ip, r7, [sp, #16]
 801f0c2:	fa0f f38e 	sxth.w	r3, lr
 801f0c6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f0c8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801f0ca:	4641      	mov	r1, r8
 801f0cc:	f7ff fdb4 	bl	801ec38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801f0d0:	e770      	b.n	801efb4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801f0d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f0d4:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801f0d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f0da:	1430      	asrs	r0, r6, #16
 801f0dc:	1423      	asrs	r3, r4, #16
 801f0de:	fb01 3000 	mla	r0, r1, r0, r3
 801f0e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f0e4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801f0e8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801f0ec:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801f0f0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f0f4:	8858      	ldrh	r0, [r3, #2]
 801f0f6:	f1be 0f00 	cmp.w	lr, #0
 801f0fa:	d00b      	beq.n	801f114 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801f0fc:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801f100:	3901      	subs	r1, #1
 801f102:	0049      	lsls	r1, r1, #1
 801f104:	3102      	adds	r1, #2
 801f106:	eb03 0b01 	add.w	fp, r3, r1
 801f10a:	5a5b      	ldrh	r3, [r3, r1]
 801f10c:	930e      	str	r3, [sp, #56]	@ 0x38
 801f10e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f112:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f114:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801f118:	fb12 f30e 	smulbb	r3, r2, lr
 801f11c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f120:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801f124:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801f128:	10db      	asrs	r3, r3, #3
 801f12a:	ea41 010c 	orr.w	r1, r1, ip
 801f12e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f132:	f1ce 0c10 	rsb	ip, lr, #16
 801f136:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f13a:	ebac 0c02 	sub.w	ip, ip, r2
 801f13e:	ea4b 0000 	orr.w	r0, fp, r0
 801f142:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f146:	4350      	muls	r0, r2
 801f148:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f14a:	9f08      	ldr	r7, [sp, #32]
 801f14c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801f150:	fb0c 0c01 	mla	ip, ip, r1, r0
 801f154:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801f158:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801f15c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801f15e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801f160:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f164:	0412      	lsls	r2, r2, #16
 801f166:	ea4b 0101 	orr.w	r1, fp, r1
 801f16a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f16e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f172:	fb03 c101 	mla	r1, r3, r1, ip
 801f176:	4302      	orrs	r2, r0
 801f178:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801f17c:	fb03 1202 	mla	r2, r3, r2, r1
 801f180:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801f184:	0952      	lsrs	r2, r2, #5
 801f186:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801f18a:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801f18e:	f8b9 2000 	ldrh.w	r2, [r9]
 801f192:	ea4b 0303 	orr.w	r3, fp, r3
 801f196:	b29b      	uxth	r3, r3
 801f198:	1211      	asrs	r1, r2, #8
 801f19a:	1218      	asrs	r0, r3, #8
 801f19c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801f1a0:	fb11 f107 	smulbb	r1, r1, r7
 801f1a4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801f1a8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f1ac:	00d2      	lsls	r2, r2, #3
 801f1ae:	fb00 100a 	mla	r0, r0, sl, r1
 801f1b2:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801f1b6:	10d9      	asrs	r1, r3, #3
 801f1b8:	b2d2      	uxtb	r2, r2
 801f1ba:	00db      	lsls	r3, r3, #3
 801f1bc:	fb1c fc07 	smulbb	ip, ip, r7
 801f1c0:	fb12 f207 	smulbb	r2, r2, r7
 801f1c4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f1c8:	b2db      	uxtb	r3, r3
 801f1ca:	b280      	uxth	r0, r0
 801f1cc:	fb01 c10a 	mla	r1, r1, sl, ip
 801f1d0:	fb03 230a 	mla	r3, r3, sl, r2
 801f1d4:	b29b      	uxth	r3, r3
 801f1d6:	b289      	uxth	r1, r1
 801f1d8:	1c42      	adds	r2, r0, #1
 801f1da:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f1de:	f101 0c01 	add.w	ip, r1, #1
 801f1e2:	1c5a      	adds	r2, r3, #1
 801f1e4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f1e8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801f1ec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f1ee:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801f1f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f1f6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f1fa:	4310      	orrs	r0, r2
 801f1fc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f200:	441c      	add	r4, r3
 801f202:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f204:	ea40 000c 	orr.w	r0, r0, ip
 801f208:	f829 0b02 	strh.w	r0, [r9], #2
 801f20c:	441e      	add	r6, r3
 801f20e:	f108 38ff 	add.w	r8, r8, #4294967295
 801f212:	e6fc      	b.n	801f00e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801f214:	b013      	add	sp, #76	@ 0x4c
 801f216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f21a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801f21a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801f21e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801f222:	fb0e 4703 	mla	r7, lr, r3, r4
 801f226:	f1be 0f00 	cmp.w	lr, #0
 801f22a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801f22e:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801f232:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801f236:	8808      	ldrh	r0, [r1, #0]
 801f238:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801f23c:	db60      	blt.n	801f300 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801f23e:	45f1      	cmp	r9, lr
 801f240:	dd5e      	ble.n	801f300 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801f242:	2c00      	cmp	r4, #0
 801f244:	db5a      	blt.n	801f2fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801f246:	42a3      	cmp	r3, r4
 801f248:	dd58      	ble.n	801f2fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801f24a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801f24e:	1c62      	adds	r2, r4, #1
 801f250:	d459      	bmi.n	801f306 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f252:	4293      	cmp	r3, r2
 801f254:	dd57      	ble.n	801f306 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f256:	2d00      	cmp	r5, #0
 801f258:	d055      	beq.n	801f306 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801f25a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801f25e:	f11e 0e01 	adds.w	lr, lr, #1
 801f262:	d454      	bmi.n	801f30e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f264:	45f1      	cmp	r9, lr
 801f266:	dd52      	ble.n	801f30e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f268:	2e00      	cmp	r6, #0
 801f26a:	d050      	beq.n	801f30e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801f26c:	2c00      	cmp	r4, #0
 801f26e:	db4c      	blt.n	801f30a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801f270:	42a3      	cmp	r3, r4
 801f272:	dd4a      	ble.n	801f30a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801f274:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801f278:	3401      	adds	r4, #1
 801f27a:	d405      	bmi.n	801f288 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f27c:	42a3      	cmp	r3, r4
 801f27e:	dd03      	ble.n	801f288 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f280:	b115      	cbz	r5, 801f288 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801f282:	3301      	adds	r3, #1
 801f284:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801f288:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f28c:	fb15 f406 	smulbb	r4, r5, r6
 801f290:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f294:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f298:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f29c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f2a0:	ea43 0c0c 	orr.w	ip, r3, ip
 801f2a4:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f2a8:	f1c6 0310 	rsb	r3, r6, #16
 801f2ac:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801f2b0:	1b5b      	subs	r3, r3, r5
 801f2b2:	ea4e 0707 	orr.w	r7, lr, r7
 801f2b6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f2ba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f2be:	437d      	muls	r5, r7
 801f2c0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f2c4:	0403      	lsls	r3, r0, #16
 801f2c6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f2ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f2ce:	4318      	orrs	r0, r3
 801f2d0:	0413      	lsls	r3, r2, #16
 801f2d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f2d6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f2da:	4313      	orrs	r3, r2
 801f2dc:	fb04 c000 	mla	r0, r4, r0, ip
 801f2e0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f2e4:	fb06 0003 	mla	r0, r6, r3, r0
 801f2e8:	0d43      	lsrs	r3, r0, #21
 801f2ea:	0940      	lsrs	r0, r0, #5
 801f2ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f2f0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f2f4:	4318      	orrs	r0, r3
 801f2f6:	8008      	strh	r0, [r1, #0]
 801f2f8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f2fc:	4684      	mov	ip, r0
 801f2fe:	e7a6      	b.n	801f24e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801f300:	4607      	mov	r7, r0
 801f302:	4684      	mov	ip, r0
 801f304:	e7ab      	b.n	801f25e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801f306:	4607      	mov	r7, r0
 801f308:	e7a9      	b.n	801f25e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801f30a:	4602      	mov	r2, r0
 801f30c:	e7b4      	b.n	801f278 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801f30e:	4602      	mov	r2, r0
 801f310:	e7ba      	b.n	801f288 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801f312 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f312:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f316:	b08f      	sub	sp, #60	@ 0x3c
 801f318:	461d      	mov	r5, r3
 801f31a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801f31c:	920c      	str	r2, [sp, #48]	@ 0x30
 801f31e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801f322:	9107      	str	r1, [sp, #28]
 801f324:	6859      	ldr	r1, [r3, #4]
 801f326:	681b      	ldr	r3, [r3, #0]
 801f328:	900d      	str	r0, [sp, #52]	@ 0x34
 801f32a:	fb01 2707 	mla	r7, r1, r7, r2
 801f32e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801f332:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f334:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801f338:	f8d3 8000 	ldr.w	r8, [r3]
 801f33c:	9b07      	ldr	r3, [sp, #28]
 801f33e:	2b00      	cmp	r3, #0
 801f340:	dc03      	bgt.n	801f34a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801f342:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f344:	2b00      	cmp	r3, #0
 801f346:	f340 8181 	ble.w	801f64c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801f34a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f34c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f350:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f354:	1e48      	subs	r0, r1, #1
 801f356:	f102 3cff 	add.w	ip, r2, #4294967295
 801f35a:	2d00      	cmp	r5, #0
 801f35c:	f340 809b 	ble.w	801f496 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801f360:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f364:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f368:	d406      	bmi.n	801f378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f36a:	4586      	cmp	lr, r0
 801f36c:	da04      	bge.n	801f378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f36e:	2b00      	cmp	r3, #0
 801f370:	db02      	blt.n	801f378 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801f372:	4563      	cmp	r3, ip
 801f374:	f2c0 8090 	blt.w	801f498 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f378:	f11e 0e01 	adds.w	lr, lr, #1
 801f37c:	f100 8084 	bmi.w	801f488 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f380:	4571      	cmp	r1, lr
 801f382:	f2c0 8081 	blt.w	801f488 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f386:	3301      	adds	r3, #1
 801f388:	d47e      	bmi.n	801f488 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f38a:	429a      	cmp	r2, r3
 801f38c:	db7c      	blt.n	801f488 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801f38e:	46aa      	mov	sl, r5
 801f390:	46b9      	mov	r9, r7
 801f392:	f1ba 0f00 	cmp.w	sl, #0
 801f396:	f340 8099 	ble.w	801f4cc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801f39a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f39c:	1421      	asrs	r1, r4, #16
 801f39e:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f3a2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f3a6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801f3aa:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801f3ae:	f100 80d0 	bmi.w	801f552 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f3b2:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f3b6:	4559      	cmp	r1, fp
 801f3b8:	f280 80cb 	bge.w	801f552 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f3bc:	2800      	cmp	r0, #0
 801f3be:	f2c0 80c8 	blt.w	801f552 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f3c2:	f103 3bff 	add.w	fp, r3, #4294967295
 801f3c6:	4558      	cmp	r0, fp
 801f3c8:	f280 80c3 	bge.w	801f552 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801f3cc:	fa0f fe8e 	sxth.w	lr, lr
 801f3d0:	fb00 110e 	mla	r1, r0, lr, r1
 801f3d4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801f3d8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801f3dc:	8841      	ldrh	r1, [r0, #2]
 801f3de:	f1bc 0f00 	cmp.w	ip, #0
 801f3e2:	d00b      	beq.n	801f3fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801f3e4:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801f3e8:	3b01      	subs	r3, #1
 801f3ea:	005b      	lsls	r3, r3, #1
 801f3ec:	3302      	adds	r3, #2
 801f3ee:	eb00 0e03 	add.w	lr, r0, r3
 801f3f2:	5ac3      	ldrh	r3, [r0, r3]
 801f3f4:	9308      	str	r3, [sp, #32]
 801f3f6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801f3fa:	9309      	str	r3, [sp, #36]	@ 0x24
 801f3fc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801f400:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f404:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801f408:	ea40 000b 	orr.w	r0, r0, fp
 801f40c:	fb12 f30c 	smulbb	r3, r2, ip
 801f410:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f414:	10db      	asrs	r3, r3, #3
 801f416:	f1cc 0e10 	rsb	lr, ip, #16
 801f41a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f41e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f422:	ebae 0e02 	sub.w	lr, lr, r2
 801f426:	ea4b 0101 	orr.w	r1, fp, r1
 801f42a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f42e:	4351      	muls	r1, r2
 801f430:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f432:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801f436:	fb0e 1e00 	mla	lr, lr, r0, r1
 801f43a:	0410      	lsls	r0, r2, #16
 801f43c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f440:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f444:	4310      	orrs	r0, r2
 801f446:	9a08      	ldr	r2, [sp, #32]
 801f448:	9908      	ldr	r1, [sp, #32]
 801f44a:	0412      	lsls	r2, r2, #16
 801f44c:	fb03 e000 	mla	r0, r3, r0, lr
 801f450:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f454:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801f458:	ea42 020e 	orr.w	r2, r2, lr
 801f45c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801f460:	fb03 0302 	mla	r3, r3, r2, r0
 801f464:	0d5a      	lsrs	r2, r3, #21
 801f466:	095b      	lsrs	r3, r3, #5
 801f468:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f46c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f470:	4313      	orrs	r3, r2
 801f472:	f8a9 3000 	strh.w	r3, [r9]
 801f476:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f478:	441c      	add	r4, r3
 801f47a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f47c:	f109 0902 	add.w	r9, r9, #2
 801f480:	441e      	add	r6, r3
 801f482:	f10a 3aff 	add.w	sl, sl, #4294967295
 801f486:	e784      	b.n	801f392 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801f488:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f48a:	441c      	add	r4, r3
 801f48c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f48e:	3d01      	subs	r5, #1
 801f490:	441e      	add	r6, r3
 801f492:	3702      	adds	r7, #2
 801f494:	e761      	b.n	801f35a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f496:	d01d      	beq.n	801f4d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f498:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f49a:	1e6b      	subs	r3, r5, #1
 801f49c:	fb00 4003 	mla	r0, r0, r3, r4
 801f4a0:	1400      	asrs	r0, r0, #16
 801f4a2:	f53f af74 	bmi.w	801f38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f4a6:	3901      	subs	r1, #1
 801f4a8:	4288      	cmp	r0, r1
 801f4aa:	f6bf af70 	bge.w	801f38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f4ae:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801f4b0:	fb01 6303 	mla	r3, r1, r3, r6
 801f4b4:	141b      	asrs	r3, r3, #16
 801f4b6:	f53f af6a 	bmi.w	801f38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f4ba:	3a01      	subs	r2, #1
 801f4bc:	4293      	cmp	r3, r2
 801f4be:	f6bf af66 	bge.w	801f38e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801f4c2:	46a9      	mov	r9, r5
 801f4c4:	46ba      	mov	sl, r7
 801f4c6:	f1b9 0f00 	cmp.w	r9, #0
 801f4ca:	dc5a      	bgt.n	801f582 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801f4cc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801f4d0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801f4d4:	9b07      	ldr	r3, [sp, #28]
 801f4d6:	2b00      	cmp	r3, #0
 801f4d8:	f340 80b8 	ble.w	801f64c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801f4dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f4e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f4e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f4e8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f4ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f4ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f4f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f4f6:	eef0 6a62 	vmov.f32	s13, s5
 801f4fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f4fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f502:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f506:	ee16 4a90 	vmov	r4, s13
 801f50a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f50e:	eef0 6a43 	vmov.f32	s13, s6
 801f512:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f516:	ee12 2a90 	vmov	r2, s5
 801f51a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f51e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f522:	ee13 2a10 	vmov	r2, s6
 801f526:	931b      	str	r3, [sp, #108]	@ 0x6c
 801f528:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f52a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f52e:	931c      	str	r3, [sp, #112]	@ 0x70
 801f530:	9b07      	ldr	r3, [sp, #28]
 801f532:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f534:	3b01      	subs	r3, #1
 801f536:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f53a:	9307      	str	r3, [sp, #28]
 801f53c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f53e:	ee16 6a90 	vmov	r6, s13
 801f542:	bf14      	ite	ne
 801f544:	461d      	movne	r5, r3
 801f546:	4615      	moveq	r5, r2
 801f548:	eeb0 3a67 	vmov.f32	s6, s15
 801f54c:	eef0 2a47 	vmov.f32	s5, s14
 801f550:	e6f4      	b.n	801f33c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801f552:	f111 0b01 	adds.w	fp, r1, #1
 801f556:	d48e      	bmi.n	801f476 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f558:	45de      	cmp	lr, fp
 801f55a:	db8c      	blt.n	801f476 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f55c:	f110 0b01 	adds.w	fp, r0, #1
 801f560:	d489      	bmi.n	801f476 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f562:	455b      	cmp	r3, fp
 801f564:	db87      	blt.n	801f476 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f566:	b21b      	sxth	r3, r3
 801f568:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801f56c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801f570:	9300      	str	r3, [sp, #0]
 801f572:	4642      	mov	r2, r8
 801f574:	fa0f f38e 	sxth.w	r3, lr
 801f578:	4649      	mov	r1, r9
 801f57a:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801f57c:	f7ff fe4d 	bl	801f21a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801f580:	e779      	b.n	801f476 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801f582:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f584:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f588:	1420      	asrs	r0, r4, #16
 801f58a:	1431      	asrs	r1, r6, #16
 801f58c:	fb03 0101 	mla	r1, r3, r1, r0
 801f590:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801f594:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801f598:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801f59c:	8841      	ldrh	r1, [r0, #2]
 801f59e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f5a2:	f1be 0f00 	cmp.w	lr, #0
 801f5a6:	d00b      	beq.n	801f5c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801f5a8:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801f5ac:	3b01      	subs	r3, #1
 801f5ae:	005b      	lsls	r3, r3, #1
 801f5b0:	3302      	adds	r3, #2
 801f5b2:	eb00 0b03 	add.w	fp, r0, r3
 801f5b6:	5ac3      	ldrh	r3, [r0, r3]
 801f5b8:	930a      	str	r3, [sp, #40]	@ 0x28
 801f5ba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801f5be:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f5c0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801f5c4:	fb12 f30e 	smulbb	r3, r2, lr
 801f5c8:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f5cc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f5d0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801f5d4:	10db      	asrs	r3, r3, #3
 801f5d6:	ea40 000c 	orr.w	r0, r0, ip
 801f5da:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f5de:	f1ce 0c10 	rsb	ip, lr, #16
 801f5e2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f5e6:	ebac 0c02 	sub.w	ip, ip, r2
 801f5ea:	ea4b 0101 	orr.w	r1, fp, r1
 801f5ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801f5f2:	4351      	muls	r1, r2
 801f5f4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f5f6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801f5fa:	fb0c 1c00 	mla	ip, ip, r0, r1
 801f5fe:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801f602:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801f606:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f608:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801f60a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f60e:	0412      	lsls	r2, r2, #16
 801f610:	ea4b 0000 	orr.w	r0, fp, r0
 801f614:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801f618:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801f61c:	fb03 c000 	mla	r0, r3, r0, ip
 801f620:	ea42 0b0b 	orr.w	fp, r2, fp
 801f624:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801f628:	fb03 000b 	mla	r0, r3, fp, r0
 801f62c:	0d43      	lsrs	r3, r0, #21
 801f62e:	0940      	lsrs	r0, r0, #5
 801f630:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f634:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f638:	4318      	orrs	r0, r3
 801f63a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f63c:	f82a 0b02 	strh.w	r0, [sl], #2
 801f640:	441c      	add	r4, r3
 801f642:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f644:	f109 39ff 	add.w	r9, r9, #4294967295
 801f648:	441e      	add	r6, r3
 801f64a:	e73c      	b.n	801f4c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801f64c:	b00f      	add	sp, #60	@ 0x3c
 801f64e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f652 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801f652:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f656:	b085      	sub	sp, #20
 801f658:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801f65c:	9102      	str	r1, [sp, #8]
 801f65e:	2c00      	cmp	r4, #0
 801f660:	fb04 7103 	mla	r1, r4, r3, r7
 801f664:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801f668:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f66c:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801f670:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f674:	f2c0 811b 	blt.w	801f8ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801f678:	45a6      	cmp	lr, r4
 801f67a:	f340 8118 	ble.w	801f8ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801f67e:	2f00      	cmp	r7, #0
 801f680:	f2c0 8113 	blt.w	801f8aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801f684:	42bb      	cmp	r3, r7
 801f686:	f340 8110 	ble.w	801f8aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801f68a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f68e:	1c7a      	adds	r2, r7, #1
 801f690:	f100 8110 	bmi.w	801f8b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801f694:	4293      	cmp	r3, r2
 801f696:	f340 810d 	ble.w	801f8b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801f69a:	2e00      	cmp	r6, #0
 801f69c:	f000 810c 	beq.w	801f8b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801f6a0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f6a4:	3401      	adds	r4, #1
 801f6a6:	f100 810b 	bmi.w	801f8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801f6aa:	45a6      	cmp	lr, r4
 801f6ac:	f340 8108 	ble.w	801f8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801f6b0:	2800      	cmp	r0, #0
 801f6b2:	f000 8108 	beq.w	801f8c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801f6b6:	2f00      	cmp	r7, #0
 801f6b8:	f2c0 8100 	blt.w	801f8bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801f6bc:	42bb      	cmp	r3, r7
 801f6be:	f340 80fd 	ble.w	801f8bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801f6c2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f6c6:	3701      	adds	r7, #1
 801f6c8:	f100 8100 	bmi.w	801f8cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801f6cc:	42bb      	cmp	r3, r7
 801f6ce:	f340 80fd 	ble.w	801f8cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801f6d2:	2e00      	cmp	r6, #0
 801f6d4:	f000 80fc 	beq.w	801f8d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801f6d8:	3301      	adds	r3, #1
 801f6da:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801f6de:	b2b6      	uxth	r6, r6
 801f6e0:	b280      	uxth	r0, r0
 801f6e2:	fb00 fe06 	mul.w	lr, r0, r6
 801f6e6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f6ea:	0136      	lsls	r6, r6, #4
 801f6ec:	eba6 070e 	sub.w	r7, r6, lr
 801f6f0:	b280      	uxth	r0, r0
 801f6f2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f6f6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f6fa:	b2bf      	uxth	r7, r7
 801f6fc:	1a1b      	subs	r3, r3, r0
 801f6fe:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f702:	b29b      	uxth	r3, r3
 801f704:	fb0a f607 	mul.w	r6, sl, r7
 801f708:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f70c:	fb0b 6603 	mla	r6, fp, r3, r6
 801f710:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f714:	fb00 6609 	mla	r6, r0, r9, r6
 801f718:	fb0e 6608 	mla	r6, lr, r8, r6
 801f71c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f720:	9600      	str	r6, [sp, #0]
 801f722:	2e00      	cmp	r6, #0
 801f724:	f000 80be 	beq.w	801f8a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801f728:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f72c:	fb0b fc0c 	mul.w	ip, fp, ip
 801f730:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f734:	fb0b f505 	mul.w	r5, fp, r5
 801f738:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f73c:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f740:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f744:	44dc      	add	ip, fp
 801f746:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f74a:	9501      	str	r5, [sp, #4]
 801f74c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801f750:	9503      	str	r5, [sp, #12]
 801f752:	9d01      	ldr	r5, [sp, #4]
 801f754:	9e02      	ldr	r6, [sp, #8]
 801f756:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801f75a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f75e:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801f762:	fb0a fc0c 	mul.w	ip, sl, ip
 801f766:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f76a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f76e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f772:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f776:	4465      	add	r5, ip
 801f778:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f77c:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801f780:	fb09 fc0c 	mul.w	ip, r9, ip
 801f784:	fb09 f904 	mul.w	r9, r9, r4
 801f788:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801f78c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f790:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801f794:	fb08 f404 	mul.w	r4, r8, r4
 801f798:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f79c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801f7a0:	fb08 f802 	mul.w	r8, r8, r2
 801f7a4:	fb0a fa01 	mul.w	sl, sl, r1
 801f7a8:	0a22      	lsrs	r2, r4, #8
 801f7aa:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801f7ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801f7b2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801f7b6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f7ba:	4414      	add	r4, r2
 801f7bc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f7c0:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801f7c4:	0a2d      	lsrs	r5, r5, #8
 801f7c6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f7ca:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801f7ce:	9a03      	ldr	r2, [sp, #12]
 801f7d0:	8836      	ldrh	r6, [r6, #0]
 801f7d2:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f7d6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f7da:	437d      	muls	r5, r7
 801f7dc:	4461      	add	r1, ip
 801f7de:	0a24      	lsrs	r4, r4, #8
 801f7e0:	fb02 5503 	mla	r5, r2, r3, r5
 801f7e4:	0a09      	lsrs	r1, r1, #8
 801f7e6:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801f7ea:	fb04 540e 	mla	r4, r4, lr, r5
 801f7ee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801f7f2:	fb01 4100 	mla	r1, r1, r0, r4
 801f7f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f7fa:	0a09      	lsrs	r1, r1, #8
 801f7fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f800:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801f804:	fb07 f70a 	mul.w	r7, r7, sl
 801f808:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f80c:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801f810:	fb03 7101 	mla	r1, r3, r1, r7
 801f814:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f818:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801f81c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f820:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801f824:	fb00 e101 	mla	r1, r0, r1, lr
 801f828:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801f82c:	9a00      	ldr	r2, [sp, #0]
 801f82e:	b287      	uxth	r7, r0
 801f830:	437a      	muls	r2, r7
 801f832:	0a09      	lsrs	r1, r1, #8
 801f834:	1c53      	adds	r3, r2, #1
 801f836:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801f83a:	4321      	orrs	r1, r4
 801f83c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f840:	1235      	asrs	r5, r6, #8
 801f842:	0c0a      	lsrs	r2, r1, #16
 801f844:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801f848:	b2db      	uxtb	r3, r3
 801f84a:	fb12 f207 	smulbb	r2, r2, r7
 801f84e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f852:	fb05 2503 	mla	r5, r5, r3, r2
 801f856:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801f85a:	10f2      	asrs	r2, r6, #3
 801f85c:	b2c8      	uxtb	r0, r1
 801f85e:	00f6      	lsls	r6, r6, #3
 801f860:	fb14 f407 	smulbb	r4, r4, r7
 801f864:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801f868:	b2f6      	uxtb	r6, r6
 801f86a:	fb10 f007 	smulbb	r0, r0, r7
 801f86e:	fb02 4203 	mla	r2, r2, r3, r4
 801f872:	b2ad      	uxth	r5, r5
 801f874:	fb06 0303 	mla	r3, r6, r3, r0
 801f878:	b299      	uxth	r1, r3
 801f87a:	b294      	uxth	r4, r2
 801f87c:	1c6b      	adds	r3, r5, #1
 801f87e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f882:	1c62      	adds	r2, r4, #1
 801f884:	1c4b      	adds	r3, r1, #1
 801f886:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f88a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801f88e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f892:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f896:	0952      	lsrs	r2, r2, #5
 801f898:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f89c:	432b      	orrs	r3, r5
 801f89e:	4313      	orrs	r3, r2
 801f8a0:	9a02      	ldr	r2, [sp, #8]
 801f8a2:	8013      	strh	r3, [r2, #0]
 801f8a4:	b005      	add	sp, #20
 801f8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8aa:	2500      	movs	r5, #0
 801f8ac:	e6ef      	b.n	801f68e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801f8ae:	2100      	movs	r1, #0
 801f8b0:	460d      	mov	r5, r1
 801f8b2:	e6f7      	b.n	801f6a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f8b4:	2100      	movs	r1, #0
 801f8b6:	e6f5      	b.n	801f6a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f8b8:	4631      	mov	r1, r6
 801f8ba:	e6f3      	b.n	801f6a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801f8bc:	2400      	movs	r4, #0
 801f8be:	e702      	b.n	801f6c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801f8c0:	2200      	movs	r2, #0
 801f8c2:	4614      	mov	r4, r2
 801f8c4:	e70b      	b.n	801f6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f8c6:	4602      	mov	r2, r0
 801f8c8:	4604      	mov	r4, r0
 801f8ca:	e708      	b.n	801f6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f8cc:	2200      	movs	r2, #0
 801f8ce:	e706      	b.n	801f6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801f8d0:	4632      	mov	r2, r6
 801f8d2:	e704      	b.n	801f6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801f8d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f8d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8d8:	b09d      	sub	sp, #116	@ 0x74
 801f8da:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801f8de:	9219      	str	r2, [sp, #100]	@ 0x64
 801f8e0:	9307      	str	r3, [sp, #28]
 801f8e2:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801f8e4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801f8e8:	931a      	str	r3, [sp, #104]	@ 0x68
 801f8ea:	9117      	str	r1, [sp, #92]	@ 0x5c
 801f8ec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801f8f0:	901b      	str	r0, [sp, #108]	@ 0x6c
 801f8f2:	6850      	ldr	r0, [r2, #4]
 801f8f4:	6812      	ldr	r2, [r2, #0]
 801f8f6:	fb00 1303 	mla	r3, r0, r3, r1
 801f8fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f8fe:	930a      	str	r3, [sp, #40]	@ 0x28
 801f900:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f902:	681b      	ldr	r3, [r3, #0]
 801f904:	9310      	str	r3, [sp, #64]	@ 0x40
 801f906:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801f90a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f90c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801f90e:	2b00      	cmp	r3, #0
 801f910:	dc03      	bgt.n	801f91a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801f912:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801f914:	2b00      	cmp	r3, #0
 801f916:	f340 8375 	ble.w	8020004 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801f91a:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f91c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f920:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f924:	1e48      	subs	r0, r1, #1
 801f926:	1e57      	subs	r7, r2, #1
 801f928:	9b07      	ldr	r3, [sp, #28]
 801f92a:	2b00      	cmp	r3, #0
 801f92c:	f340 818e 	ble.w	801fc4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f930:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f934:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f938:	d406      	bmi.n	801f948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f93a:	4584      	cmp	ip, r0
 801f93c:	da04      	bge.n	801f948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f93e:	2b00      	cmp	r3, #0
 801f940:	db02      	blt.n	801f948 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801f942:	42bb      	cmp	r3, r7
 801f944:	f2c0 8183 	blt.w	801fc4e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801f948:	f11c 0c01 	adds.w	ip, ip, #1
 801f94c:	f100 8173 	bmi.w	801fc36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f950:	4561      	cmp	r1, ip
 801f952:	f2c0 8170 	blt.w	801fc36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f956:	3301      	adds	r3, #1
 801f958:	f100 816d 	bmi.w	801fc36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f95c:	429a      	cmp	r2, r3
 801f95e:	f2c0 816a 	blt.w	801fc36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801f962:	9b07      	ldr	r3, [sp, #28]
 801f964:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801f966:	9318      	str	r3, [sp, #96]	@ 0x60
 801f968:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f96a:	2b00      	cmp	r3, #0
 801f96c:	f340 818c 	ble.w	801fc88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801f970:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801f972:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801f974:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f978:	689b      	ldr	r3, [r3, #8]
 801f97a:	1422      	asrs	r2, r4, #16
 801f97c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f980:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f984:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f988:	f100 81cd 	bmi.w	801fd26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f98c:	f103 38ff 	add.w	r8, r3, #4294967295
 801f990:	4542      	cmp	r2, r8
 801f992:	f280 81c8 	bge.w	801fd26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f996:	f1bc 0f00 	cmp.w	ip, #0
 801f99a:	f2c0 81c4 	blt.w	801fd26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f99e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f9a2:	45c4      	cmp	ip, r8
 801f9a4:	f280 81bf 	bge.w	801fd26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801f9a8:	b21b      	sxth	r3, r3
 801f9aa:	fb0c 2203 	mla	r2, ip, r3, r2
 801f9ae:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f9b0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f9b4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f9b8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f9bc:	2800      	cmp	r0, #0
 801f9be:	f000 81a9 	beq.w	801fd14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801f9c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f9c6:	950c      	str	r5, [sp, #48]	@ 0x30
 801f9c8:	0e2d      	lsrs	r5, r5, #24
 801f9ca:	9513      	str	r5, [sp, #76]	@ 0x4c
 801f9cc:	b181      	cbz	r1, 801f9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801f9ce:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801f9d2:	3b01      	subs	r3, #1
 801f9d4:	009b      	lsls	r3, r3, #2
 801f9d6:	3304      	adds	r3, #4
 801f9d8:	eb08 0c03 	add.w	ip, r8, r3
 801f9dc:	f858 3003 	ldr.w	r3, [r8, r3]
 801f9e0:	9308      	str	r3, [sp, #32]
 801f9e2:	0e1b      	lsrs	r3, r3, #24
 801f9e4:	9311      	str	r3, [sp, #68]	@ 0x44
 801f9e6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f9ea:	930d      	str	r3, [sp, #52]	@ 0x34
 801f9ec:	0e1b      	lsrs	r3, r3, #24
 801f9ee:	9314      	str	r3, [sp, #80]	@ 0x50
 801f9f0:	b280      	uxth	r0, r0
 801f9f2:	b289      	uxth	r1, r1
 801f9f4:	fb00 f901 	mul.w	r9, r0, r1
 801f9f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f9fc:	0100      	lsls	r0, r0, #4
 801f9fe:	eba0 0809 	sub.w	r8, r0, r9
 801fa02:	b289      	uxth	r1, r1
 801fa04:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801fa08:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801fa0a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fa0c:	fa1f f888 	uxth.w	r8, r8
 801fa10:	1a5b      	subs	r3, r3, r1
 801fa12:	b29b      	uxth	r3, r3
 801fa14:	fb08 f000 	mul.w	r0, r8, r0
 801fa18:	fb03 000e 	mla	r0, r3, lr, r0
 801fa1c:	fb01 0005 	mla	r0, r1, r5, r0
 801fa20:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fa22:	fb09 0005 	mla	r0, r9, r5, r0
 801fa26:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801fa2a:	2800      	cmp	r0, #0
 801fa2c:	f000 80fa 	beq.w	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fa30:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801fa34:	d01b      	beq.n	801fa6e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801fa36:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801fa3a:	fb0e fa0a 	mul.w	sl, lr, sl
 801fa3e:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fa42:	fb0e fe02 	mul.w	lr, lr, r2
 801fa46:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801fa4a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fa4e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801fa52:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801fa56:	4452      	add	r2, sl
 801fa58:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fa5c:	0a12      	lsrs	r2, r2, #8
 801fa5e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa62:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fa66:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fa6a:	ea42 020c 	orr.w	r2, r2, ip
 801fa6e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fa70:	2dff      	cmp	r5, #255	@ 0xff
 801fa72:	d021      	beq.n	801fab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801fa74:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fa76:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fa7a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fa7c:	fb05 fb0b 	mul.w	fp, r5, fp
 801fa80:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fa82:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fa86:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801fa88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fa8c:	fb05 fa0a 	mul.w	sl, r5, sl
 801fa90:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fa94:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fa98:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fa9c:	44de      	add	lr, fp
 801fa9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801faa2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801faa6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801faaa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801faae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fab2:	ea4e 050a 	orr.w	r5, lr, sl
 801fab6:	950c      	str	r5, [sp, #48]	@ 0x30
 801fab8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801faba:	2dff      	cmp	r5, #255	@ 0xff
 801fabc:	d021      	beq.n	801fb02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801fabe:	9d08      	ldr	r5, [sp, #32]
 801fac0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fac4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fac6:	fb05 fb0b 	mul.w	fp, r5, fp
 801faca:	9d08      	ldr	r5, [sp, #32]
 801facc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fad0:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801fad2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fad6:	fb05 fa0a 	mul.w	sl, r5, sl
 801fada:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fade:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fae2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fae6:	44de      	add	lr, fp
 801fae8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801faec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801faf0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801faf4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801faf8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fafc:	ea4e 050a 	orr.w	r5, lr, sl
 801fb00:	9508      	str	r5, [sp, #32]
 801fb02:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fb04:	2dff      	cmp	r5, #255	@ 0xff
 801fb06:	d021      	beq.n	801fb4c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801fb08:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fb0a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801fb0e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fb10:	fb05 fb0b 	mul.w	fp, r5, fp
 801fb14:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fb16:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fb1a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801fb1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fb20:	fb05 fa0a 	mul.w	sl, r5, sl
 801fb24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fb28:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fb2c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fb30:	44de      	add	lr, fp
 801fb32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fb36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fb3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fb3e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fb42:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fb46:	ea4e 050a 	orr.w	r5, lr, sl
 801fb4a:	950d      	str	r5, [sp, #52]	@ 0x34
 801fb4c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fb4e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fb52:	9d08      	ldr	r5, [sp, #32]
 801fb54:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801fb58:	fb08 fc0c 	mul.w	ip, r8, ip
 801fb5c:	fb03 cc0e 	mla	ip, r3, lr, ip
 801fb60:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fb64:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801fb66:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fb6a:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801fb6e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801fb70:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fb74:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801fb78:	fb08 f80e 	mul.w	r8, r8, lr
 801fb7c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fb80:	fb03 8202 	mla	r2, r3, r2, r8
 801fb84:	9b08      	ldr	r3, [sp, #32]
 801fb86:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801fb88:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801fb8c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801fb8e:	fb01 220a 	mla	r2, r1, sl, r2
 801fb92:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801fb96:	fb09 2901 	mla	r9, r9, r1, r2
 801fb9a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801fb9c:	883b      	ldrh	r3, [r7, #0]
 801fb9e:	4342      	muls	r2, r0
 801fba0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fba4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fba8:	1c50      	adds	r0, r2, #1
 801fbaa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fbae:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801fbb2:	ea4c 0c09 	orr.w	ip, ip, r9
 801fbb6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801fbba:	1219      	asrs	r1, r3, #8
 801fbbc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801fbc0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801fbc4:	b2c0      	uxtb	r0, r0
 801fbc6:	fb12 f205 	smulbb	r2, r2, r5
 801fbca:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fbce:	fb01 2100 	mla	r1, r1, r0, r2
 801fbd2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801fbd6:	10da      	asrs	r2, r3, #3
 801fbd8:	fa5f fc8c 	uxtb.w	ip, ip
 801fbdc:	00db      	lsls	r3, r3, #3
 801fbde:	fb1c fc05 	smulbb	ip, ip, r5
 801fbe2:	b2db      	uxtb	r3, r3
 801fbe4:	b289      	uxth	r1, r1
 801fbe6:	fb03 c300 	mla	r3, r3, r0, ip
 801fbea:	fa1f fc83 	uxth.w	ip, r3
 801fbee:	1c4b      	adds	r3, r1, #1
 801fbf0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fbf4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fbf8:	fb1e fe05 	smulbb	lr, lr, r5
 801fbfc:	f10c 0301 	add.w	r3, ip, #1
 801fc00:	fb02 e200 	mla	r2, r2, r0, lr
 801fc04:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801fc08:	b292      	uxth	r2, r2
 801fc0a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801fc0e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fc12:	430b      	orrs	r3, r1
 801fc14:	1c51      	adds	r1, r2, #1
 801fc16:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fc1a:	0952      	lsrs	r2, r2, #5
 801fc1c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fc20:	4313      	orrs	r3, r2
 801fc22:	803b      	strh	r3, [r7, #0]
 801fc24:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801fc26:	441c      	add	r4, r3
 801fc28:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801fc2a:	441e      	add	r6, r3
 801fc2c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fc2e:	3b01      	subs	r3, #1
 801fc30:	3702      	adds	r7, #2
 801fc32:	9318      	str	r3, [sp, #96]	@ 0x60
 801fc34:	e698      	b.n	801f968 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801fc36:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801fc38:	441c      	add	r4, r3
 801fc3a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801fc3c:	441e      	add	r6, r3
 801fc3e:	9b07      	ldr	r3, [sp, #28]
 801fc40:	3b01      	subs	r3, #1
 801fc42:	9307      	str	r3, [sp, #28]
 801fc44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fc46:	3302      	adds	r3, #2
 801fc48:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc4a:	e66d      	b.n	801f928 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801fc4c:	d023      	beq.n	801fc96 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801fc4e:	9b07      	ldr	r3, [sp, #28]
 801fc50:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801fc52:	3b01      	subs	r3, #1
 801fc54:	fb00 4003 	mla	r0, r0, r3, r4
 801fc58:	1400      	asrs	r0, r0, #16
 801fc5a:	f53f ae82 	bmi.w	801f962 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fc5e:	3901      	subs	r1, #1
 801fc60:	4288      	cmp	r0, r1
 801fc62:	f6bf ae7e 	bge.w	801f962 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fc66:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801fc68:	fb01 6303 	mla	r3, r1, r3, r6
 801fc6c:	141b      	asrs	r3, r3, #16
 801fc6e:	f53f ae78 	bmi.w	801f962 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fc72:	3a01      	subs	r2, #1
 801fc74:	4293      	cmp	r3, r2
 801fc76:	f6bf ae74 	bge.w	801f962 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fc7a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801fc7e:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801fc82:	f1bb 0f00 	cmp.w	fp, #0
 801fc86:	dc6c      	bgt.n	801fd62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801fc88:	9b07      	ldr	r3, [sp, #28]
 801fc8a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fc8e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fc90:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801fc94:	930a      	str	r3, [sp, #40]	@ 0x28
 801fc96:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fc98:	2b00      	cmp	r3, #0
 801fc9a:	f340 81b3 	ble.w	8020004 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801fc9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fca2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fca6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fcaa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fcac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fcb0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fcb4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fcb8:	eef0 6a62 	vmov.f32	s13, s5
 801fcbc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fcc0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcc4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fcc8:	ee16 4a90 	vmov	r4, s13
 801fccc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fcd0:	eef0 6a43 	vmov.f32	s13, s6
 801fcd4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fcd8:	ee12 2a90 	vmov	r2, s5
 801fcdc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fce0:	fb92 f3f3 	sdiv	r3, r2, r3
 801fce4:	ee13 2a10 	vmov	r2, s6
 801fce8:	9329      	str	r3, [sp, #164]	@ 0xa4
 801fcea:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fcec:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcf0:	932a      	str	r3, [sp, #168]	@ 0xa8
 801fcf2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801fcf4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801fcf6:	3b01      	subs	r3, #1
 801fcf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcfc:	9317      	str	r3, [sp, #92]	@ 0x5c
 801fcfe:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801fd00:	bf08      	it	eq
 801fd02:	4613      	moveq	r3, r2
 801fd04:	ee16 6a90 	vmov	r6, s13
 801fd08:	9307      	str	r3, [sp, #28]
 801fd0a:	eeb0 3a67 	vmov.f32	s6, s15
 801fd0e:	eef0 2a47 	vmov.f32	s5, s14
 801fd12:	e5fb      	b.n	801f90c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801fd14:	2900      	cmp	r1, #0
 801fd16:	f43f ae6b 	beq.w	801f9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fd1a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801fd1e:	9308      	str	r3, [sp, #32]
 801fd20:	0e1b      	lsrs	r3, r3, #24
 801fd22:	9311      	str	r3, [sp, #68]	@ 0x44
 801fd24:	e664      	b.n	801f9f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801fd26:	f112 0801 	adds.w	r8, r2, #1
 801fd2a:	f53f af7b 	bmi.w	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fd2e:	4543      	cmp	r3, r8
 801fd30:	f6ff af78 	blt.w	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fd34:	f11c 0801 	adds.w	r8, ip, #1
 801fd38:	f53f af74 	bmi.w	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fd3c:	45c6      	cmp	lr, r8
 801fd3e:	f6ff af71 	blt.w	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fd42:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801fd44:	9201      	str	r2, [sp, #4]
 801fd46:	fa0f f28e 	sxth.w	r2, lr
 801fd4a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801fd4e:	e9cd c002 	strd	ip, r0, [sp, #8]
 801fd52:	9200      	str	r2, [sp, #0]
 801fd54:	b21b      	sxth	r3, r3
 801fd56:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801fd58:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801fd5a:	4639      	mov	r1, r7
 801fd5c:	f7ff fc79 	bl	801f652 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801fd60:	e760      	b.n	801fc24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801fd62:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801fd64:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801fd66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd6a:	1427      	asrs	r7, r4, #16
 801fd6c:	1433      	asrs	r3, r6, #16
 801fd6e:	fb01 7303 	mla	r3, r1, r3, r7
 801fd72:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801fd76:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801fd7a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fd7e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fd82:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801fd86:	2a00      	cmp	r2, #0
 801fd88:	f000 8133 	beq.w	801fff2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801fd8c:	687d      	ldr	r5, [r7, #4]
 801fd8e:	950e      	str	r5, [sp, #56]	@ 0x38
 801fd90:	0e2d      	lsrs	r5, r5, #24
 801fd92:	9515      	str	r5, [sp, #84]	@ 0x54
 801fd94:	b178      	cbz	r0, 801fdb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801fd96:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801fd9a:	3901      	subs	r1, #1
 801fd9c:	0089      	lsls	r1, r1, #2
 801fd9e:	3104      	adds	r1, #4
 801fda0:	eb07 0e01 	add.w	lr, r7, r1
 801fda4:	5879      	ldr	r1, [r7, r1]
 801fda6:	9109      	str	r1, [sp, #36]	@ 0x24
 801fda8:	0e09      	lsrs	r1, r1, #24
 801fdaa:	9112      	str	r1, [sp, #72]	@ 0x48
 801fdac:	f8de 1004 	ldr.w	r1, [lr, #4]
 801fdb0:	910f      	str	r1, [sp, #60]	@ 0x3c
 801fdb2:	0e09      	lsrs	r1, r1, #24
 801fdb4:	9116      	str	r1, [sp, #88]	@ 0x58
 801fdb6:	b292      	uxth	r2, r2
 801fdb8:	b280      	uxth	r0, r0
 801fdba:	fb02 f800 	mul.w	r8, r2, r0
 801fdbe:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801fdc2:	0112      	lsls	r2, r2, #4
 801fdc4:	eba2 0e08 	sub.w	lr, r2, r8
 801fdc8:	b280      	uxth	r0, r0
 801fdca:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801fdce:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801fdd0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fdd2:	fa1f fe8e 	uxth.w	lr, lr
 801fdd6:	1a12      	subs	r2, r2, r0
 801fdd8:	b292      	uxth	r2, r2
 801fdda:	fb0e f101 	mul.w	r1, lr, r1
 801fdde:	fb02 110c 	mla	r1, r2, ip, r1
 801fde2:	fb00 1105 	mla	r1, r0, r5, r1
 801fde6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801fde8:	fb08 1105 	mla	r1, r8, r5, r1
 801fdec:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801fdf0:	2900      	cmp	r1, #0
 801fdf2:	f000 80f5 	beq.w	801ffe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801fdf6:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801fdfa:	d019      	beq.n	801fe30 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801fdfc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801fe00:	fb0c fa0a 	mul.w	sl, ip, sl
 801fe04:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801fe08:	fb0c fc03 	mul.w	ip, ip, r3
 801fe0c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fe10:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801fe14:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801fe18:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801fe1c:	4453      	add	r3, sl
 801fe1e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801fe22:	0a1b      	lsrs	r3, r3, #8
 801fe24:	0a3f      	lsrs	r7, r7, #8
 801fe26:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801fe2a:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801fe2e:	433b      	orrs	r3, r7
 801fe30:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801fe32:	2dff      	cmp	r5, #255	@ 0xff
 801fe34:	d020      	beq.n	801fe78 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801fe36:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fe38:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801fe3c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801fe3e:	436f      	muls	r7, r5
 801fe40:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801fe42:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fe46:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801fe48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fe4c:	fb05 fa0a 	mul.w	sl, r5, sl
 801fe50:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801fe54:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fe58:	44bc      	add	ip, r7
 801fe5a:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801fe5e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fe62:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe66:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fe6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fe6e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fe72:	ea4c 050a 	orr.w	r5, ip, sl
 801fe76:	950e      	str	r5, [sp, #56]	@ 0x38
 801fe78:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fe7a:	2dff      	cmp	r5, #255	@ 0xff
 801fe7c:	d020      	beq.n	801fec0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801fe7e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801fe80:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801fe84:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fe86:	436f      	muls	r7, r5
 801fe88:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801fe8a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fe8e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fe90:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fe94:	fb05 fa0a 	mul.w	sl, r5, sl
 801fe98:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801fe9c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fea0:	44bc      	add	ip, r7
 801fea2:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801fea6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801feaa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801feae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801feb2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801feb6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801feba:	ea4c 050a 	orr.w	r5, ip, sl
 801febe:	9509      	str	r5, [sp, #36]	@ 0x24
 801fec0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801fec2:	2dff      	cmp	r5, #255	@ 0xff
 801fec4:	d020      	beq.n	801ff08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801fec6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fec8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801fecc:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801fece:	436f      	muls	r7, r5
 801fed0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801fed2:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801fed6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801fed8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fedc:	fb05 fa0a 	mul.w	sl, r5, sl
 801fee0:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801fee4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fee8:	44bc      	add	ip, r7
 801feea:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801feee:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fef2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fef6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fefa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fefe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ff02:	ea4c 050a 	orr.w	r5, ip, sl
 801ff06:	950f      	str	r5, [sp, #60]	@ 0x3c
 801ff08:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ff0a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801ff0e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801ff10:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801ff14:	fb0e f707 	mul.w	r7, lr, r7
 801ff18:	fb02 770c 	mla	r7, r2, ip, r7
 801ff1c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ff20:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ff22:	fb00 770c 	mla	r7, r0, ip, r7
 801ff26:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ff2a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ff2c:	fb08 770c 	mla	r7, r8, ip, r7
 801ff30:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801ff34:	fb0e fe0c 	mul.w	lr, lr, ip
 801ff38:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ff3c:	fb02 e303 	mla	r3, r2, r3, lr
 801ff40:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ff42:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ff44:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ff48:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ff4a:	fb00 330a 	mla	r3, r0, sl, r3
 801ff4e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801ff52:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ff56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ff58:	f8b9 0000 	ldrh.w	r0, [r9]
 801ff5c:	4359      	muls	r1, r3
 801ff5e:	0a3f      	lsrs	r7, r7, #8
 801ff60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ff64:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ff68:	1c4b      	adds	r3, r1, #1
 801ff6a:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801ff6e:	ea47 070c 	orr.w	r7, r7, ip
 801ff72:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ff76:	1202      	asrs	r2, r0, #8
 801ff78:	0c3b      	lsrs	r3, r7, #16
 801ff7a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ff7e:	b2c9      	uxtb	r1, r1
 801ff80:	fb13 f305 	smulbb	r3, r3, r5
 801ff84:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ff88:	fb02 3201 	mla	r2, r2, r1, r3
 801ff8c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ff90:	10c3      	asrs	r3, r0, #3
 801ff92:	b2ff      	uxtb	r7, r7
 801ff94:	00c0      	lsls	r0, r0, #3
 801ff96:	b2c0      	uxtb	r0, r0
 801ff98:	fb17 f705 	smulbb	r7, r7, r5
 801ff9c:	fb00 7001 	mla	r0, r0, r1, r7
 801ffa0:	b292      	uxth	r2, r2
 801ffa2:	fb1c fc05 	smulbb	ip, ip, r5
 801ffa6:	b280      	uxth	r0, r0
 801ffa8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ffac:	fb03 c301 	mla	r3, r3, r1, ip
 801ffb0:	1c51      	adds	r1, r2, #1
 801ffb2:	f100 0c01 	add.w	ip, r0, #1
 801ffb6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ffba:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801ffbe:	b29b      	uxth	r3, r3
 801ffc0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ffc4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ffc8:	ea4c 0202 	orr.w	r2, ip, r2
 801ffcc:	f103 0c01 	add.w	ip, r3, #1
 801ffd0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ffd4:	095b      	lsrs	r3, r3, #5
 801ffd6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ffda:	431a      	orrs	r2, r3
 801ffdc:	f8a9 2000 	strh.w	r2, [r9]
 801ffe0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ffe2:	441c      	add	r4, r3
 801ffe4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ffe6:	f109 0902 	add.w	r9, r9, #2
 801ffea:	441e      	add	r6, r3
 801ffec:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fff0:	e647      	b.n	801fc82 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801fff2:	2800      	cmp	r0, #0
 801fff4:	f43f aedf 	beq.w	801fdb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801fff8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801fffc:	9109      	str	r1, [sp, #36]	@ 0x24
 801fffe:	0e09      	lsrs	r1, r1, #24
 8020000:	9112      	str	r1, [sp, #72]	@ 0x48
 8020002:	e6d8      	b.n	801fdb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8020004:	b01d      	add	sp, #116	@ 0x74
 8020006:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802000a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802000a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802000e:	b085      	sub	sp, #20
 8020010:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8020014:	9102      	str	r1, [sp, #8]
 8020016:	2c00      	cmp	r4, #0
 8020018:	fb04 7103 	mla	r1, r4, r3, r7
 802001c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8020020:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8020024:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8020028:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802002c:	f2c0 810c 	blt.w	8020248 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020030:	45a6      	cmp	lr, r4
 8020032:	f340 8109 	ble.w	8020248 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8020036:	2f00      	cmp	r7, #0
 8020038:	f2c0 8104 	blt.w	8020244 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802003c:	42bb      	cmp	r3, r7
 802003e:	f340 8101 	ble.w	8020244 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8020042:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8020046:	1c7a      	adds	r2, r7, #1
 8020048:	f100 8101 	bmi.w	802024e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802004c:	4293      	cmp	r3, r2
 802004e:	f340 80fe 	ble.w	802024e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8020052:	2e00      	cmp	r6, #0
 8020054:	f000 80fd 	beq.w	8020252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8020058:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802005c:	3401      	adds	r4, #1
 802005e:	f100 80fc 	bmi.w	802025a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8020062:	45a6      	cmp	lr, r4
 8020064:	f340 80f9 	ble.w	802025a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8020068:	2800      	cmp	r0, #0
 802006a:	f000 80f9 	beq.w	8020260 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802006e:	2f00      	cmp	r7, #0
 8020070:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8020074:	f2c0 80ef 	blt.w	8020256 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8020078:	42bb      	cmp	r3, r7
 802007a:	f340 80ec 	ble.w	8020256 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802007e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8020082:	3701      	adds	r7, #1
 8020084:	f100 80ef 	bmi.w	8020266 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8020088:	42bb      	cmp	r3, r7
 802008a:	f340 80ec 	ble.w	8020266 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802008e:	2e00      	cmp	r6, #0
 8020090:	f000 80eb 	beq.w	802026a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8020094:	6852      	ldr	r2, [r2, #4]
 8020096:	b2b6      	uxth	r6, r6
 8020098:	b280      	uxth	r0, r0
 802009a:	fb00 fe06 	mul.w	lr, r0, r6
 802009e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80200a2:	0136      	lsls	r6, r6, #4
 80200a4:	eba6 070e 	sub.w	r7, r6, lr
 80200a8:	b280      	uxth	r0, r0
 80200aa:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80200ae:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80200b2:	b2bf      	uxth	r7, r7
 80200b4:	1a1b      	subs	r3, r3, r0
 80200b6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80200ba:	b29b      	uxth	r3, r3
 80200bc:	fb07 f60a 	mul.w	r6, r7, sl
 80200c0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80200c4:	fb0b 6603 	mla	r6, fp, r3, r6
 80200c8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80200cc:	fb00 6609 	mla	r6, r0, r9, r6
 80200d0:	fb0e 6608 	mla	r6, lr, r8, r6
 80200d4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80200d8:	9600      	str	r6, [sp, #0]
 80200da:	2e00      	cmp	r6, #0
 80200dc:	f000 80af 	beq.w	802023e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80200e0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80200e4:	fb0b fc0c 	mul.w	ip, fp, ip
 80200e8:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80200ec:	fb0b f505 	mul.w	r5, fp, r5
 80200f0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80200f4:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80200f8:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80200fc:	44dc      	add	ip, fp
 80200fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020102:	9501      	str	r5, [sp, #4]
 8020104:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8020108:	9503      	str	r5, [sp, #12]
 802010a:	9d01      	ldr	r5, [sp, #4]
 802010c:	9e02      	ldr	r6, [sp, #8]
 802010e:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8020112:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8020116:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802011a:	fb0a fc0c 	mul.w	ip, sl, ip
 802011e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8020122:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8020126:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802012a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802012e:	4465      	add	r5, ip
 8020130:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020134:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8020138:	fb09 fc0c 	mul.w	ip, r9, ip
 802013c:	fb09 f904 	mul.w	r9, r9, r4
 8020140:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8020144:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020148:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 802014c:	fb08 f404 	mul.w	r4, r8, r4
 8020150:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020154:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8020158:	fb08 f802 	mul.w	r8, r8, r2
 802015c:	fb0a fa01 	mul.w	sl, sl, r1
 8020160:	0a22      	lsrs	r2, r4, #8
 8020162:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8020166:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802016a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802016e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020172:	4414      	add	r4, r2
 8020174:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020178:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 802017c:	0a2d      	lsrs	r5, r5, #8
 802017e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020182:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020186:	9a03      	ldr	r2, [sp, #12]
 8020188:	8836      	ldrh	r6, [r6, #0]
 802018a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802018e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020192:	437d      	muls	r5, r7
 8020194:	4461      	add	r1, ip
 8020196:	0a24      	lsrs	r4, r4, #8
 8020198:	fb02 5503 	mla	r5, r2, r3, r5
 802019c:	0a09      	lsrs	r1, r1, #8
 802019e:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80201a2:	fb04 540e 	mla	r4, r4, lr, r5
 80201a6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80201aa:	fb01 4100 	mla	r1, r1, r0, r4
 80201ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201b2:	0a09      	lsrs	r1, r1, #8
 80201b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80201b8:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80201bc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80201c0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80201c4:	fb07 f70a 	mul.w	r7, r7, sl
 80201c8:	fb03 7101 	mla	r1, r3, r1, r7
 80201cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80201d0:	9b00      	ldr	r3, [sp, #0]
 80201d2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80201d6:	fb0e 1e08 	mla	lr, lr, r8, r1
 80201da:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80201de:	fb00 e101 	mla	r1, r0, r1, lr
 80201e2:	43da      	mvns	r2, r3
 80201e4:	1233      	asrs	r3, r6, #8
 80201e6:	b2d2      	uxtb	r2, r2
 80201e8:	10f0      	asrs	r0, r6, #3
 80201ea:	0a09      	lsrs	r1, r1, #8
 80201ec:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80201f0:	00f6      	lsls	r6, r6, #3
 80201f2:	4353      	muls	r3, r2
 80201f4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80201f8:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80201fc:	b2f6      	uxtb	r6, r6
 80201fe:	4321      	orrs	r1, r4
 8020200:	4350      	muls	r0, r2
 8020202:	4356      	muls	r6, r2
 8020204:	1c5a      	adds	r2, r3, #1
 8020206:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802020a:	0c0b      	lsrs	r3, r1, #16
 802020c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020210:	1c42      	adds	r2, r0, #1
 8020212:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020216:	0a0a      	lsrs	r2, r1, #8
 8020218:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802021c:	021b      	lsls	r3, r3, #8
 802021e:	00d2      	lsls	r2, r2, #3
 8020220:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020224:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8020228:	4313      	orrs	r3, r2
 802022a:	1c72      	adds	r2, r6, #1
 802022c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8020230:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8020234:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8020238:	4319      	orrs	r1, r3
 802023a:	9b02      	ldr	r3, [sp, #8]
 802023c:	8019      	strh	r1, [r3, #0]
 802023e:	b005      	add	sp, #20
 8020240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020244:	2500      	movs	r5, #0
 8020246:	e6fe      	b.n	8020046 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8020248:	2100      	movs	r1, #0
 802024a:	460d      	mov	r5, r1
 802024c:	e706      	b.n	802005c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802024e:	2100      	movs	r1, #0
 8020250:	e704      	b.n	802005c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020252:	4631      	mov	r1, r6
 8020254:	e702      	b.n	802005c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8020256:	2400      	movs	r4, #0
 8020258:	e713      	b.n	8020082 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802025a:	2200      	movs	r2, #0
 802025c:	4614      	mov	r4, r2
 802025e:	e71a      	b.n	8020096 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020260:	4602      	mov	r2, r0
 8020262:	4604      	mov	r4, r0
 8020264:	e717      	b.n	8020096 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8020266:	2200      	movs	r2, #0
 8020268:	e715      	b.n	8020096 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802026a:	4632      	mov	r2, r6
 802026c:	e713      	b.n	8020096 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08020270 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020270:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020274:	b09b      	sub	sp, #108	@ 0x6c
 8020276:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 802027a:	9218      	str	r2, [sp, #96]	@ 0x60
 802027c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802027e:	9116      	str	r1, [sp, #88]	@ 0x58
 8020280:	9307      	str	r3, [sp, #28]
 8020282:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8020286:	9019      	str	r0, [sp, #100]	@ 0x64
 8020288:	6850      	ldr	r0, [r2, #4]
 802028a:	6812      	ldr	r2, [r2, #0]
 802028c:	fb00 1303 	mla	r3, r0, r3, r1
 8020290:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020294:	930a      	str	r3, [sp, #40]	@ 0x28
 8020296:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020298:	681b      	ldr	r3, [r3, #0]
 802029a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802029c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802029e:	2b00      	cmp	r3, #0
 80202a0:	dc03      	bgt.n	80202aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80202a2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80202a4:	2b00      	cmp	r3, #0
 80202a6:	f340 8386 	ble.w	80209b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80202aa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80202ac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80202b0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80202b4:	1e48      	subs	r0, r1, #1
 80202b6:	1e57      	subs	r7, r2, #1
 80202b8:	9b07      	ldr	r3, [sp, #28]
 80202ba:	2b00      	cmp	r3, #0
 80202bc:	f340 8166 	ble.w	802058c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80202c0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80202c4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80202c8:	d406      	bmi.n	80202d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80202ca:	4584      	cmp	ip, r0
 80202cc:	da04      	bge.n	80202d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80202ce:	2b00      	cmp	r3, #0
 80202d0:	db02      	blt.n	80202d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80202d2:	42bb      	cmp	r3, r7
 80202d4:	f2c0 815b 	blt.w	802058e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80202d8:	f11c 0c01 	adds.w	ip, ip, #1
 80202dc:	f100 814b 	bmi.w	8020576 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80202e0:	4561      	cmp	r1, ip
 80202e2:	f2c0 8148 	blt.w	8020576 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80202e6:	3301      	adds	r3, #1
 80202e8:	f100 8145 	bmi.w	8020576 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80202ec:	429a      	cmp	r2, r3
 80202ee:	f2c0 8142 	blt.w	8020576 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80202f2:	9b07      	ldr	r3, [sp, #28]
 80202f4:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80202f6:	9317      	str	r3, [sp, #92]	@ 0x5c
 80202f8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80202fa:	2b00      	cmp	r3, #0
 80202fc:	f340 8165 	ble.w	80205ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020300:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8020302:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020304:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8020308:	689b      	ldr	r3, [r3, #8]
 802030a:	1422      	asrs	r2, r4, #16
 802030c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020310:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020314:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020318:	f100 81d5 	bmi.w	80206c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802031c:	f103 38ff 	add.w	r8, r3, #4294967295
 8020320:	4542      	cmp	r2, r8
 8020322:	f280 81d0 	bge.w	80206c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020326:	f1bc 0f00 	cmp.w	ip, #0
 802032a:	f2c0 81cc 	blt.w	80206c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802032e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020332:	45c4      	cmp	ip, r8
 8020334:	f280 81c7 	bge.w	80206c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8020338:	b21b      	sxth	r3, r3
 802033a:	fb0c 2203 	mla	r2, ip, r3, r2
 802033e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020340:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8020344:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8020348:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802034c:	2900      	cmp	r1, #0
 802034e:	f000 8182 	beq.w	8020656 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020352:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020356:	950b      	str	r5, [sp, #44]	@ 0x2c
 8020358:	0e2d      	lsrs	r5, r5, #24
 802035a:	9512      	str	r5, [sp, #72]	@ 0x48
 802035c:	b180      	cbz	r0, 8020380 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802035e:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8020362:	3b01      	subs	r3, #1
 8020364:	009b      	lsls	r3, r3, #2
 8020366:	3304      	adds	r3, #4
 8020368:	eb08 0c03 	add.w	ip, r8, r3
 802036c:	f858 3003 	ldr.w	r3, [r8, r3]
 8020370:	9308      	str	r3, [sp, #32]
 8020372:	0e1b      	lsrs	r3, r3, #24
 8020374:	9310      	str	r3, [sp, #64]	@ 0x40
 8020376:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802037a:	930c      	str	r3, [sp, #48]	@ 0x30
 802037c:	0e1b      	lsrs	r3, r3, #24
 802037e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020380:	b289      	uxth	r1, r1
 8020382:	b280      	uxth	r0, r0
 8020384:	fb01 f900 	mul.w	r9, r1, r0
 8020388:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802038c:	0109      	lsls	r1, r1, #4
 802038e:	eba1 0809 	sub.w	r8, r1, r9
 8020392:	b280      	uxth	r0, r0
 8020394:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8020398:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802039a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802039c:	fa1f f888 	uxth.w	r8, r8
 80203a0:	1a09      	subs	r1, r1, r0
 80203a2:	b289      	uxth	r1, r1
 80203a4:	fb08 f303 	mul.w	r3, r8, r3
 80203a8:	fb01 330e 	mla	r3, r1, lr, r3
 80203ac:	fb00 3305 	mla	r3, r0, r5, r3
 80203b0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80203b2:	fb09 3305 	mla	r3, r9, r5, r3
 80203b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80203ba:	2b00      	cmp	r3, #0
 80203bc:	f000 80d2 	beq.w	8020564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80203c0:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80203c4:	d01b      	beq.n	80203fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80203c6:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80203ca:	fb0e fa0a 	mul.w	sl, lr, sl
 80203ce:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80203d2:	fb0e fe02 	mul.w	lr, lr, r2
 80203d6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80203da:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80203de:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80203e2:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80203e6:	4452      	add	r2, sl
 80203e8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80203ec:	0a12      	lsrs	r2, r2, #8
 80203ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80203f2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80203f6:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80203fa:	ea42 020c 	orr.w	r2, r2, ip
 80203fe:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020400:	2dff      	cmp	r5, #255	@ 0xff
 8020402:	d021      	beq.n	8020448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8020404:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020406:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802040a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802040c:	fb05 fb0b 	mul.w	fp, r5, fp
 8020410:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020412:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020416:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020418:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802041c:	fb05 fa0a 	mul.w	sl, r5, sl
 8020420:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020424:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020428:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802042c:	44de      	add	lr, fp
 802042e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020432:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020436:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802043a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802043e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020442:	ea4e 050a 	orr.w	r5, lr, sl
 8020446:	950b      	str	r5, [sp, #44]	@ 0x2c
 8020448:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802044a:	2dff      	cmp	r5, #255	@ 0xff
 802044c:	d021      	beq.n	8020492 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802044e:	9d08      	ldr	r5, [sp, #32]
 8020450:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8020454:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020456:	fb05 fb0b 	mul.w	fp, r5, fp
 802045a:	9d08      	ldr	r5, [sp, #32]
 802045c:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020460:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020462:	fb05 fa0e 	mul.w	sl, r5, lr
 8020466:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802046a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802046e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020472:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020476:	44de      	add	lr, fp
 8020478:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802047c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020480:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020484:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020488:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802048c:	ea4e 050a 	orr.w	r5, lr, sl
 8020490:	9508      	str	r5, [sp, #32]
 8020492:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8020494:	2dff      	cmp	r5, #255	@ 0xff
 8020496:	d021      	beq.n	80204dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8020498:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802049a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802049e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80204a0:	fb05 fb0b 	mul.w	fp, r5, fp
 80204a4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80204a6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80204aa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80204ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80204b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80204b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80204b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80204bc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80204c0:	44de      	add	lr, fp
 80204c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80204c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80204ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80204ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80204d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80204d6:	ea4e 050a 	orr.w	r5, lr, sl
 80204da:	950c      	str	r5, [sp, #48]	@ 0x30
 80204dc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80204de:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80204e2:	9d08      	ldr	r5, [sp, #32]
 80204e4:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 80204e8:	fb08 fc0c 	mul.w	ip, r8, ip
 80204ec:	fb01 cc0e 	mla	ip, r1, lr, ip
 80204f0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80204f4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80204f6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80204fa:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80204fe:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8020500:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020504:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8020508:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802050c:	fb08 f80e 	mul.w	r8, r8, lr
 8020510:	fb01 8202 	mla	r2, r1, r2, r8
 8020514:	9908      	ldr	r1, [sp, #32]
 8020516:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802051a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 802051c:	fb00 220a 	mla	r2, r0, sl, r2
 8020520:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8020524:	fb09 2900 	mla	r9, r9, r0, r2
 8020528:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802052c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020530:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020534:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020538:	ea4c 0c09 	orr.w	ip, ip, r9
 802053c:	2bff      	cmp	r3, #255	@ 0xff
 802053e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8020542:	f040 8091 	bne.w	8020668 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8020546:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802054a:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 802054e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020552:	f022 0207 	bic.w	r2, r2, #7
 8020556:	431a      	orrs	r2, r3
 8020558:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802055c:	ea4c 0c02 	orr.w	ip, ip, r2
 8020560:	f8a7 c000 	strh.w	ip, [r7]
 8020564:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020566:	441c      	add	r4, r3
 8020568:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802056a:	441e      	add	r6, r3
 802056c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802056e:	3b01      	subs	r3, #1
 8020570:	3702      	adds	r7, #2
 8020572:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020574:	e6c0      	b.n	80202f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020576:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020578:	441c      	add	r4, r3
 802057a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802057c:	441e      	add	r6, r3
 802057e:	9b07      	ldr	r3, [sp, #28]
 8020580:	3b01      	subs	r3, #1
 8020582:	9307      	str	r3, [sp, #28]
 8020584:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020586:	3302      	adds	r3, #2
 8020588:	930a      	str	r3, [sp, #40]	@ 0x28
 802058a:	e695      	b.n	80202b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802058c:	d024      	beq.n	80205d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802058e:	9b07      	ldr	r3, [sp, #28]
 8020590:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8020592:	3b01      	subs	r3, #1
 8020594:	fb00 4003 	mla	r0, r0, r3, r4
 8020598:	1400      	asrs	r0, r0, #16
 802059a:	f53f aeaa 	bmi.w	80202f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802059e:	3901      	subs	r1, #1
 80205a0:	4288      	cmp	r0, r1
 80205a2:	f6bf aea6 	bge.w	80202f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80205a6:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80205a8:	fb01 6303 	mla	r3, r1, r3, r6
 80205ac:	141b      	asrs	r3, r3, #16
 80205ae:	f53f aea0 	bmi.w	80202f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80205b2:	3a01      	subs	r2, #1
 80205b4:	4293      	cmp	r3, r2
 80205b6:	f6bf ae9c 	bge.w	80202f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80205ba:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80205be:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80205c2:	f1bb 0f00 	cmp.w	fp, #0
 80205c6:	f300 809a 	bgt.w	80206fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80205ca:	9b07      	ldr	r3, [sp, #28]
 80205cc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80205d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80205d2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80205d6:	930a      	str	r3, [sp, #40]	@ 0x28
 80205d8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80205da:	2b00      	cmp	r3, #0
 80205dc:	f340 81eb 	ble.w	80209b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80205e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80205e4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80205e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80205ec:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80205ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80205f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80205f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80205fa:	eef0 6a62 	vmov.f32	s13, s5
 80205fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020606:	ee77 2a62 	vsub.f32	s5, s14, s5
 802060a:	ee16 4a90 	vmov	r4, s13
 802060e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020612:	eef0 6a43 	vmov.f32	s13, s6
 8020616:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802061a:	ee12 2a90 	vmov	r2, s5
 802061e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020622:	fb92 f3f3 	sdiv	r3, r2, r3
 8020626:	ee13 2a10 	vmov	r2, s6
 802062a:	9327      	str	r3, [sp, #156]	@ 0x9c
 802062c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802062e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020632:	9328      	str	r3, [sp, #160]	@ 0xa0
 8020634:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020636:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020638:	3b01      	subs	r3, #1
 802063a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802063e:	9316      	str	r3, [sp, #88]	@ 0x58
 8020640:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020642:	bf08      	it	eq
 8020644:	4613      	moveq	r3, r2
 8020646:	ee16 6a90 	vmov	r6, s13
 802064a:	9307      	str	r3, [sp, #28]
 802064c:	eeb0 3a67 	vmov.f32	s6, s15
 8020650:	eef0 2a47 	vmov.f32	s5, s14
 8020654:	e622      	b.n	802029c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8020656:	2800      	cmp	r0, #0
 8020658:	f43f ae92 	beq.w	8020380 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802065c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8020660:	9308      	str	r3, [sp, #32]
 8020662:	0e1b      	lsrs	r3, r3, #24
 8020664:	9310      	str	r3, [sp, #64]	@ 0x40
 8020666:	e68b      	b.n	8020380 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8020668:	8839      	ldrh	r1, [r7, #0]
 802066a:	4dd4      	ldr	r5, [pc, #848]	@ (80209bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802066c:	43db      	mvns	r3, r3
 802066e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8020672:	fa5f f883 	uxtb.w	r8, r3
 8020676:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802067a:	fb0e fe08 	mul.w	lr, lr, r8
 802067e:	10c8      	asrs	r0, r1, #3
 8020680:	00cb      	lsls	r3, r1, #3
 8020682:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020686:	f10e 0101 	add.w	r1, lr, #1
 802068a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802068e:	fb00 f008 	mul.w	r0, r0, r8
 8020692:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8020696:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802069a:	f100 0e01 	add.w	lr, r0, #1
 802069e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80206a2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80206a6:	b2db      	uxtb	r3, r3
 80206a8:	b2c9      	uxtb	r1, r1
 80206aa:	00d2      	lsls	r2, r2, #3
 80206ac:	fb03 f308 	mul.w	r3, r3, r8
 80206b0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80206b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80206b8:	430a      	orrs	r2, r1
 80206ba:	1c59      	adds	r1, r3, #1
 80206bc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80206c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80206c4:	e748      	b.n	8020558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80206c6:	f112 0801 	adds.w	r8, r2, #1
 80206ca:	f53f af4b 	bmi.w	8020564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80206ce:	4543      	cmp	r3, r8
 80206d0:	f6ff af48 	blt.w	8020564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80206d4:	f11c 0801 	adds.w	r8, ip, #1
 80206d8:	f53f af44 	bmi.w	8020564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80206dc:	45c6      	cmp	lr, r8
 80206de:	f6ff af41 	blt.w	8020564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80206e2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80206e6:	fa0f f28e 	sxth.w	r2, lr
 80206ea:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80206ee:	9200      	str	r2, [sp, #0]
 80206f0:	b21b      	sxth	r3, r3
 80206f2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80206f4:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80206f6:	4639      	mov	r1, r7
 80206f8:	f7ff fc87 	bl	802000a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80206fc:	e732      	b.n	8020564 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80206fe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020700:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020702:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8020706:	1421      	asrs	r1, r4, #16
 8020708:	1433      	asrs	r3, r6, #16
 802070a:	fb07 1303 	mla	r3, r7, r3, r1
 802070e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8020710:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8020714:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8020718:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802071c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020720:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020724:	2a00      	cmp	r2, #0
 8020726:	f000 8107 	beq.w	8020938 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802072a:	684d      	ldr	r5, [r1, #4]
 802072c:	950d      	str	r5, [sp, #52]	@ 0x34
 802072e:	0e2d      	lsrs	r5, r5, #24
 8020730:	9514      	str	r5, [sp, #80]	@ 0x50
 8020732:	b178      	cbz	r0, 8020754 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8020734:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8020738:	3f01      	subs	r7, #1
 802073a:	00bf      	lsls	r7, r7, #2
 802073c:	3704      	adds	r7, #4
 802073e:	eb01 0e07 	add.w	lr, r1, r7
 8020742:	59c9      	ldr	r1, [r1, r7]
 8020744:	9109      	str	r1, [sp, #36]	@ 0x24
 8020746:	0e09      	lsrs	r1, r1, #24
 8020748:	9111      	str	r1, [sp, #68]	@ 0x44
 802074a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802074e:	910e      	str	r1, [sp, #56]	@ 0x38
 8020750:	0e09      	lsrs	r1, r1, #24
 8020752:	9115      	str	r1, [sp, #84]	@ 0x54
 8020754:	b292      	uxth	r2, r2
 8020756:	b280      	uxth	r0, r0
 8020758:	fb02 f900 	mul.w	r9, r2, r0
 802075c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020760:	0112      	lsls	r2, r2, #4
 8020762:	eba2 0e09 	sub.w	lr, r2, r9
 8020766:	b280      	uxth	r0, r0
 8020768:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 802076c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802076e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020770:	fa1f fe8e 	uxth.w	lr, lr
 8020774:	1a09      	subs	r1, r1, r0
 8020776:	b289      	uxth	r1, r1
 8020778:	fb0e f202 	mul.w	r2, lr, r2
 802077c:	fb01 220c 	mla	r2, r1, ip, r2
 8020780:	fb00 2205 	mla	r2, r0, r5, r2
 8020784:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020786:	fb09 2205 	mla	r2, r9, r5, r2
 802078a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802078e:	2a00      	cmp	r2, #0
 8020790:	f000 80c9 	beq.w	8020926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8020794:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020798:	d019      	beq.n	80207ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802079a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802079e:	fb0c fa0a 	mul.w	sl, ip, sl
 80207a2:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80207a6:	fb0c fc03 	mul.w	ip, ip, r3
 80207aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80207ae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80207b2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80207b6:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80207ba:	4453      	add	r3, sl
 80207bc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80207c0:	0a1b      	lsrs	r3, r3, #8
 80207c2:	0a3f      	lsrs	r7, r7, #8
 80207c4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80207c8:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80207cc:	433b      	orrs	r3, r7
 80207ce:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80207d0:	2dff      	cmp	r5, #255	@ 0xff
 80207d2:	d020      	beq.n	8020816 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80207d4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80207d6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80207da:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80207dc:	436f      	muls	r7, r5
 80207de:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80207e0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80207e4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80207e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80207ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80207ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80207f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80207f6:	44bc      	add	ip, r7
 80207f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80207fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020800:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020804:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020808:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802080c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020810:	ea4c 050a 	orr.w	r5, ip, sl
 8020814:	950d      	str	r5, [sp, #52]	@ 0x34
 8020816:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020818:	2dff      	cmp	r5, #255	@ 0xff
 802081a:	d020      	beq.n	802085e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802081c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802081e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8020822:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8020824:	436f      	muls	r7, r5
 8020826:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8020828:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 802082c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802082e:	fb05 fa0c 	mul.w	sl, r5, ip
 8020832:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020836:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802083a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802083e:	44bc      	add	ip, r7
 8020840:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020844:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020848:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802084c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020850:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020854:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020858:	ea4c 050a 	orr.w	r5, ip, sl
 802085c:	9509      	str	r5, [sp, #36]	@ 0x24
 802085e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020860:	2dff      	cmp	r5, #255	@ 0xff
 8020862:	d020      	beq.n	80208a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8020864:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020866:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802086a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802086c:	436f      	muls	r7, r5
 802086e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020870:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8020874:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8020876:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802087a:	fb05 fa0a 	mul.w	sl, r5, sl
 802087e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020882:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020886:	44bc      	add	ip, r7
 8020888:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802088c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020890:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020894:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020898:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802089c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80208a0:	ea4c 050a 	orr.w	r5, ip, sl
 80208a4:	950e      	str	r5, [sp, #56]	@ 0x38
 80208a6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80208a8:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80208ac:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80208ae:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80208b2:	fb0e f707 	mul.w	r7, lr, r7
 80208b6:	fb01 770c 	mla	r7, r1, ip, r7
 80208ba:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80208be:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80208c0:	fb00 770c 	mla	r7, r0, ip, r7
 80208c4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80208c8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80208ca:	fb09 770c 	mla	r7, r9, ip, r7
 80208ce:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80208d2:	fb0e fe0c 	mul.w	lr, lr, ip
 80208d6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80208da:	fb01 e303 	mla	r3, r1, r3, lr
 80208de:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80208e0:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80208e4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80208e6:	fb00 330a 	mla	r3, r0, sl, r3
 80208ea:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80208ee:	fb09 3c0c 	mla	ip, r9, ip, r3
 80208f2:	0a3f      	lsrs	r7, r7, #8
 80208f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80208f8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80208fc:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020900:	ea47 070c 	orr.w	r7, r7, ip
 8020904:	2aff      	cmp	r2, #255	@ 0xff
 8020906:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802090a:	d11e      	bne.n	802094a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802090c:	097a      	lsrs	r2, r7, #5
 802090e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8020912:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020916:	f023 0307 	bic.w	r3, r3, #7
 802091a:	4313      	orrs	r3, r2
 802091c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8020920:	431f      	orrs	r7, r3
 8020922:	f8a8 7000 	strh.w	r7, [r8]
 8020926:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020928:	441c      	add	r4, r3
 802092a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802092c:	f108 0802 	add.w	r8, r8, #2
 8020930:	441e      	add	r6, r3
 8020932:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020936:	e644      	b.n	80205c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8020938:	2800      	cmp	r0, #0
 802093a:	f43f af0b 	beq.w	8020754 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802093e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8020942:	9109      	str	r1, [sp, #36]	@ 0x24
 8020944:	0e09      	lsrs	r1, r1, #24
 8020946:	9111      	str	r1, [sp, #68]	@ 0x44
 8020948:	e704      	b.n	8020754 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802094a:	f8b8 1000 	ldrh.w	r1, [r8]
 802094e:	43d2      	mvns	r2, r2
 8020950:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8020954:	fa5f fe82 	uxtb.w	lr, r2
 8020958:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802095c:	fb0c fc0e 	mul.w	ip, ip, lr
 8020960:	10c8      	asrs	r0, r1, #3
 8020962:	00ca      	lsls	r2, r1, #3
 8020964:	f10c 0101 	add.w	r1, ip, #1
 8020968:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802096c:	0c39      	lsrs	r1, r7, #16
 802096e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020972:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020976:	4911      	ldr	r1, [pc, #68]	@ (80209bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8020978:	fb00 f00e 	mul.w	r0, r0, lr
 802097c:	fa5f fc8c 	uxtb.w	ip, ip
 8020980:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8020984:	b2d2      	uxtb	r2, r2
 8020986:	1c41      	adds	r1, r0, #1
 8020988:	fb02 f20e 	mul.w	r2, r2, lr
 802098c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020990:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020994:	1c51      	adds	r1, r2, #1
 8020996:	00c0      	lsls	r0, r0, #3
 8020998:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802099c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80209a0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80209a4:	ea4c 0c00 	orr.w	ip, ip, r0
 80209a8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80209ac:	ea47 0c0c 	orr.w	ip, r7, ip
 80209b0:	f8a8 c000 	strh.w	ip, [r8]
 80209b4:	e7b7      	b.n	8020926 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80209b6:	b01b      	add	sp, #108	@ 0x6c
 80209b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209bc:	fffff800 	.word	0xfffff800

080209c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80209c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80209c4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80209c8:	2d00      	cmp	r5, #0
 80209ca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80209ce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80209d2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80209d6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80209da:	fb05 0e03 	mla	lr, r5, r3, r0
 80209de:	f2c0 808c 	blt.w	8020afa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80209e2:	45a9      	cmp	r9, r5
 80209e4:	f340 8089 	ble.w	8020afa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80209e8:	2800      	cmp	r0, #0
 80209ea:	f2c0 8084 	blt.w	8020af6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80209ee:	4580      	cmp	r8, r0
 80209f0:	f340 8081 	ble.w	8020af6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80209f4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80209f8:	f01e 0f01 	tst.w	lr, #1
 80209fc:	5d16      	ldrb	r6, [r2, r4]
 80209fe:	bf0c      	ite	eq
 8020a00:	f006 060f 	andeq.w	r6, r6, #15
 8020a04:	1136      	asrne	r6, r6, #4
 8020a06:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8020a0a:	b2f6      	uxtb	r6, r6
 8020a0c:	1c44      	adds	r4, r0, #1
 8020a0e:	d477      	bmi.n	8020b00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020a10:	45a0      	cmp	r8, r4
 8020a12:	dd75      	ble.n	8020b00 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8020a14:	2f00      	cmp	r7, #0
 8020a16:	d075      	beq.n	8020b04 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8020a18:	f10e 0a01 	add.w	sl, lr, #1
 8020a1c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8020a20:	f01a 0f01 	tst.w	sl, #1
 8020a24:	5d14      	ldrb	r4, [r2, r4]
 8020a26:	bf0c      	ite	eq
 8020a28:	f004 040f 	andeq.w	r4, r4, #15
 8020a2c:	1124      	asrne	r4, r4, #4
 8020a2e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020a32:	b2e4      	uxtb	r4, r4
 8020a34:	3501      	adds	r5, #1
 8020a36:	d469      	bmi.n	8020b0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020a38:	45a9      	cmp	r9, r5
 8020a3a:	dd67      	ble.n	8020b0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8020a3c:	f1bc 0f00 	cmp.w	ip, #0
 8020a40:	d067      	beq.n	8020b12 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8020a42:	2800      	cmp	r0, #0
 8020a44:	db60      	blt.n	8020b08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8020a46:	4580      	cmp	r8, r0
 8020a48:	dd5e      	ble.n	8020b08 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8020a4a:	eb03 090e 	add.w	r9, r3, lr
 8020a4e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8020a52:	f019 0f01 	tst.w	r9, #1
 8020a56:	5d55      	ldrb	r5, [r2, r5]
 8020a58:	bf0c      	ite	eq
 8020a5a:	f005 050f 	andeq.w	r5, r5, #15
 8020a5e:	112d      	asrne	r5, r5, #4
 8020a60:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020a64:	b2ed      	uxtb	r5, r5
 8020a66:	3001      	adds	r0, #1
 8020a68:	d456      	bmi.n	8020b18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020a6a:	4580      	cmp	r8, r0
 8020a6c:	dd54      	ble.n	8020b18 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8020a6e:	2f00      	cmp	r7, #0
 8020a70:	d054      	beq.n	8020b1c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8020a72:	3301      	adds	r3, #1
 8020a74:	449e      	add	lr, r3
 8020a76:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8020a7a:	f01e 0f01 	tst.w	lr, #1
 8020a7e:	5cd0      	ldrb	r0, [r2, r3]
 8020a80:	bf0c      	ite	eq
 8020a82:	f000 000f 	andeq.w	r0, r0, #15
 8020a86:	1100      	asrne	r0, r0, #4
 8020a88:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020a8c:	b2c3      	uxtb	r3, r0
 8020a8e:	b2ba      	uxth	r2, r7
 8020a90:	fa1f fc8c 	uxth.w	ip, ip
 8020a94:	fb02 f00c 	mul.w	r0, r2, ip
 8020a98:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020a9c:	0112      	lsls	r2, r2, #4
 8020a9e:	fa1f fc8c 	uxth.w	ip, ip
 8020aa2:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8020aa6:	1a12      	subs	r2, r2, r0
 8020aa8:	eba7 070c 	sub.w	r7, r7, ip
 8020aac:	b292      	uxth	r2, r2
 8020aae:	b2bf      	uxth	r7, r7
 8020ab0:	4362      	muls	r2, r4
 8020ab2:	fb06 2207 	mla	r2, r6, r7, r2
 8020ab6:	fb0c 2505 	mla	r5, ip, r5, r2
 8020aba:	fb00 5303 	mla	r3, r0, r3, r5
 8020abe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020ac2:	b1b3      	cbz	r3, 8020af2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020ac4:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8020ac8:	435a      	muls	r2, r3
 8020aca:	1c53      	adds	r3, r2, #1
 8020acc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020ad0:	4a2d      	ldr	r2, [pc, #180]	@ (8020b88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8020ad2:	121b      	asrs	r3, r3, #8
 8020ad4:	6812      	ldr	r2, [r2, #0]
 8020ad6:	2bff      	cmp	r3, #255	@ 0xff
 8020ad8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8020adc:	d120      	bne.n	8020b20 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8020ade:	4b2b      	ldr	r3, [pc, #172]	@ (8020b8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8020ae0:	0950      	lsrs	r0, r2, #5
 8020ae2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020ae6:	4033      	ands	r3, r6
 8020ae8:	4318      	orrs	r0, r3
 8020aea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020aee:	4302      	orrs	r2, r0
 8020af0:	800a      	strh	r2, [r1, #0]
 8020af2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020af6:	2600      	movs	r6, #0
 8020af8:	e788      	b.n	8020a0c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8020afa:	2400      	movs	r4, #0
 8020afc:	4626      	mov	r6, r4
 8020afe:	e799      	b.n	8020a34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020b00:	2400      	movs	r4, #0
 8020b02:	e797      	b.n	8020a34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020b04:	463c      	mov	r4, r7
 8020b06:	e795      	b.n	8020a34 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8020b08:	2500      	movs	r5, #0
 8020b0a:	e7ac      	b.n	8020a66 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8020b0c:	2300      	movs	r3, #0
 8020b0e:	461d      	mov	r5, r3
 8020b10:	e7bd      	b.n	8020a8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020b12:	4663      	mov	r3, ip
 8020b14:	4665      	mov	r5, ip
 8020b16:	e7ba      	b.n	8020a8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020b18:	2300      	movs	r3, #0
 8020b1a:	e7b8      	b.n	8020a8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020b1c:	463b      	mov	r3, r7
 8020b1e:	e7b6      	b.n	8020a8e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8020b20:	880d      	ldrh	r5, [r1, #0]
 8020b22:	b29f      	uxth	r7, r3
 8020b24:	122c      	asrs	r4, r5, #8
 8020b26:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8020b2a:	43db      	mvns	r3, r3
 8020b2c:	b2db      	uxtb	r3, r3
 8020b2e:	fb10 f007 	smulbb	r0, r0, r7
 8020b32:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8020b36:	fb04 0403 	mla	r4, r4, r3, r0
 8020b3a:	b2f6      	uxtb	r6, r6
 8020b3c:	10e8      	asrs	r0, r5, #3
 8020b3e:	b2d2      	uxtb	r2, r2
 8020b40:	00ed      	lsls	r5, r5, #3
 8020b42:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020b46:	fb12 f207 	smulbb	r2, r2, r7
 8020b4a:	fb16 f607 	smulbb	r6, r6, r7
 8020b4e:	b2ed      	uxtb	r5, r5
 8020b50:	b2a4      	uxth	r4, r4
 8020b52:	fb00 6603 	mla	r6, r0, r3, r6
 8020b56:	fb05 2303 	mla	r3, r5, r3, r2
 8020b5a:	b29a      	uxth	r2, r3
 8020b5c:	1c63      	adds	r3, r4, #1
 8020b5e:	b2b0      	uxth	r0, r6
 8020b60:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020b64:	1c53      	adds	r3, r2, #1
 8020b66:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020b6a:	1c42      	adds	r2, r0, #1
 8020b6c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020b70:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020b74:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020b78:	0940      	lsrs	r0, r0, #5
 8020b7a:	4323      	orrs	r3, r4
 8020b7c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020b80:	4303      	orrs	r3, r0
 8020b82:	800b      	strh	r3, [r1, #0]
 8020b84:	e7b5      	b.n	8020af2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8020b86:	bf00      	nop
 8020b88:	20002dc4 	.word	0x20002dc4
 8020b8c:	00fff800 	.word	0x00fff800

08020b90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b94:	b097      	sub	sp, #92	@ 0x5c
 8020b96:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8020b9a:	9214      	str	r2, [sp, #80]	@ 0x50
 8020b9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8020b9e:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020ba0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8020ba4:	910d      	str	r1, [sp, #52]	@ 0x34
 8020ba6:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020ba8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8020bac:	9015      	str	r0, [sp, #84]	@ 0x54
 8020bae:	6850      	ldr	r0, [r2, #4]
 8020bb0:	6812      	ldr	r2, [r2, #0]
 8020bb2:	fb00 1303 	mla	r3, r0, r3, r1
 8020bb6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020bba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020bbc:	689b      	ldr	r3, [r3, #8]
 8020bbe:	3301      	adds	r3, #1
 8020bc0:	f023 0301 	bic.w	r3, r3, #1
 8020bc4:	930a      	str	r3, [sp, #40]	@ 0x28
 8020bc6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020bc8:	681f      	ldr	r7, [r3, #0]
 8020bca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020bcc:	2b00      	cmp	r3, #0
 8020bce:	dc03      	bgt.n	8020bd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020bd0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8020bd2:	2b00      	cmp	r3, #0
 8020bd4:	f340 8287 	ble.w	80210e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020bd8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020bda:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020bde:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020be2:	1e48      	subs	r0, r1, #1
 8020be4:	f102 3cff 	add.w	ip, r2, #4294967295
 8020be8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020bea:	2b00      	cmp	r3, #0
 8020bec:	f340 80c4 	ble.w	8020d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8020bf0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020bf4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020bf8:	d406      	bmi.n	8020c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020bfa:	4586      	cmp	lr, r0
 8020bfc:	da04      	bge.n	8020c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020bfe:	2b00      	cmp	r3, #0
 8020c00:	db02      	blt.n	8020c08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8020c02:	4563      	cmp	r3, ip
 8020c04:	f2c0 80b9 	blt.w	8020d7a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8020c08:	f11e 0e01 	adds.w	lr, lr, #1
 8020c0c:	f100 80aa 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020c10:	4571      	cmp	r1, lr
 8020c12:	f2c0 80a7 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020c16:	3301      	adds	r3, #1
 8020c18:	f100 80a4 	bmi.w	8020d64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020c1c:	429a      	cmp	r2, r3
 8020c1e:	f2c0 80a1 	blt.w	8020d64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8020c22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c24:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8020c28:	930e      	str	r3, [sp, #56]	@ 0x38
 8020c2a:	46c8      	mov	r8, r9
 8020c2c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020c2e:	2b00      	cmp	r3, #0
 8020c30:	f340 80c3 	ble.w	8020dba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8020c34:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020c36:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8020c3a:	1423      	asrs	r3, r4, #16
 8020c3c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020c40:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020c44:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020c48:	f100 814d 	bmi.w	8020ee6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020c4c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8020c50:	455b      	cmp	r3, fp
 8020c52:	f280 8148 	bge.w	8020ee6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020c56:	2800      	cmp	r0, #0
 8020c58:	f2c0 8145 	blt.w	8020ee6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020c5c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020c60:	4558      	cmp	r0, fp
 8020c62:	f280 8140 	bge.w	8020ee6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8020c66:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8020c68:	fb00 3305 	mla	r3, r0, r5, r3
 8020c6c:	0858      	lsrs	r0, r3, #1
 8020c6e:	07dd      	lsls	r5, r3, #31
 8020c70:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020c74:	bf54      	ite	pl
 8020c76:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020c7a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020c7e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020c82:	fa5f fc8c 	uxtb.w	ip, ip
 8020c86:	2a00      	cmp	r2, #0
 8020c88:	f000 80db 	beq.w	8020e42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8020c8c:	1c58      	adds	r0, r3, #1
 8020c8e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020c92:	07c0      	lsls	r0, r0, #31
 8020c94:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020c98:	bf54      	ite	pl
 8020c9a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8020c9e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020ca2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020ca6:	fa5f f08e 	uxtb.w	r0, lr
 8020caa:	9010      	str	r0, [sp, #64]	@ 0x40
 8020cac:	b1c9      	cbz	r1, 8020ce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020cae:	4453      	add	r3, sl
 8020cb0:	0858      	lsrs	r0, r3, #1
 8020cb2:	07dd      	lsls	r5, r3, #31
 8020cb4:	5c38      	ldrb	r0, [r7, r0]
 8020cb6:	bf54      	ite	pl
 8020cb8:	f000 000f 	andpl.w	r0, r0, #15
 8020cbc:	1100      	asrmi	r0, r0, #4
 8020cbe:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020cc2:	3301      	adds	r3, #1
 8020cc4:	b2c0      	uxtb	r0, r0
 8020cc6:	900b      	str	r0, [sp, #44]	@ 0x2c
 8020cc8:	0858      	lsrs	r0, r3, #1
 8020cca:	07dd      	lsls	r5, r3, #31
 8020ccc:	f817 e000 	ldrb.w	lr, [r7, r0]
 8020cd0:	bf54      	ite	pl
 8020cd2:	f00e 030f 	andpl.w	r3, lr, #15
 8020cd6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8020cda:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020cde:	b2db      	uxtb	r3, r3
 8020ce0:	9311      	str	r3, [sp, #68]	@ 0x44
 8020ce2:	b292      	uxth	r2, r2
 8020ce4:	b289      	uxth	r1, r1
 8020ce6:	fb02 f301 	mul.w	r3, r2, r1
 8020cea:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8020cee:	0112      	lsls	r2, r2, #4
 8020cf0:	b289      	uxth	r1, r1
 8020cf2:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8020cf6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8020cf8:	1ad2      	subs	r2, r2, r3
 8020cfa:	1a40      	subs	r0, r0, r1
 8020cfc:	b292      	uxth	r2, r2
 8020cfe:	436a      	muls	r2, r5
 8020d00:	b280      	uxth	r0, r0
 8020d02:	fb0c 2c00 	mla	ip, ip, r0, r2
 8020d06:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020d08:	fb01 c102 	mla	r1, r1, r2, ip
 8020d0c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020d0e:	fb03 1302 	mla	r3, r3, r2, r1
 8020d12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020d16:	b1db      	cbz	r3, 8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020d18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020d1a:	4353      	muls	r3, r2
 8020d1c:	1c5a      	adds	r2, r3, #1
 8020d1e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020d22:	4ac6      	ldr	r2, [pc, #792]	@ (802103c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8020d24:	121b      	asrs	r3, r3, #8
 8020d26:	6812      	ldr	r2, [r2, #0]
 8020d28:	2bff      	cmp	r3, #255	@ 0xff
 8020d2a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8020d2e:	f040 8099 	bne.w	8020e64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8020d32:	0953      	lsrs	r3, r2, #5
 8020d34:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8020d38:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020d3c:	f02c 0c07 	bic.w	ip, ip, #7
 8020d40:	ea43 0c0c 	orr.w	ip, r3, ip
 8020d44:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020d48:	ea4c 0202 	orr.w	r2, ip, r2
 8020d4c:	f8a8 2000 	strh.w	r2, [r8]
 8020d50:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020d52:	441c      	add	r4, r3
 8020d54:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020d56:	441e      	add	r6, r3
 8020d58:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020d5a:	3b01      	subs	r3, #1
 8020d5c:	f108 0802 	add.w	r8, r8, #2
 8020d60:	930e      	str	r3, [sp, #56]	@ 0x38
 8020d62:	e763      	b.n	8020c2c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8020d64:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8020d66:	441c      	add	r4, r3
 8020d68:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020d6a:	441e      	add	r6, r3
 8020d6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020d6e:	3b01      	subs	r3, #1
 8020d70:	9309      	str	r3, [sp, #36]	@ 0x24
 8020d72:	f109 0902 	add.w	r9, r9, #2
 8020d76:	e737      	b.n	8020be8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020d78:	d024      	beq.n	8020dc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020d7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020d7c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8020d7e:	3b01      	subs	r3, #1
 8020d80:	fb00 4003 	mla	r0, r0, r3, r4
 8020d84:	1400      	asrs	r0, r0, #16
 8020d86:	f53f af4c 	bmi.w	8020c22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020d8a:	3901      	subs	r1, #1
 8020d8c:	4288      	cmp	r0, r1
 8020d8e:	f6bf af48 	bge.w	8020c22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020d92:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8020d94:	fb01 6303 	mla	r3, r1, r3, r6
 8020d98:	141b      	asrs	r3, r3, #16
 8020d9a:	f53f af42 	bmi.w	8020c22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020d9e:	3a01      	subs	r2, #1
 8020da0:	4293      	cmp	r3, r2
 8020da2:	f6bf af3e 	bge.w	8020c22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020da6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8020daa:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8020dae:	930e      	str	r3, [sp, #56]	@ 0x38
 8020db0:	46c8      	mov	r8, r9
 8020db2:	f1bb 0f00 	cmp.w	fp, #0
 8020db6:	f300 80b7 	bgt.w	8020f28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8020dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020dbc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8020dc0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020dc4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020dc6:	2b00      	cmp	r3, #0
 8020dc8:	f340 818d 	ble.w	80210e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8020dcc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020dd0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020dd4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020dd8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020dda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020dde:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020de2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020de6:	eef0 6a62 	vmov.f32	s13, s5
 8020dea:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020dee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020df2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020df6:	ee16 4a90 	vmov	r4, s13
 8020dfa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020dfe:	eef0 6a43 	vmov.f32	s13, s6
 8020e02:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e06:	ee12 2a90 	vmov	r2, s5
 8020e0a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e12:	ee13 2a10 	vmov	r2, s6
 8020e16:	9323      	str	r3, [sp, #140]	@ 0x8c
 8020e18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020e1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e1e:	9324      	str	r3, [sp, #144]	@ 0x90
 8020e20:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020e22:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020e24:	3b01      	subs	r3, #1
 8020e26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e2a:	930d      	str	r3, [sp, #52]	@ 0x34
 8020e2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020e2e:	bf08      	it	eq
 8020e30:	4613      	moveq	r3, r2
 8020e32:	ee16 6a90 	vmov	r6, s13
 8020e36:	9309      	str	r3, [sp, #36]	@ 0x24
 8020e38:	eeb0 3a67 	vmov.f32	s6, s15
 8020e3c:	eef0 2a47 	vmov.f32	s5, s14
 8020e40:	e6c3      	b.n	8020bca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020e42:	2900      	cmp	r1, #0
 8020e44:	f43f af4d 	beq.w	8020ce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020e48:	eb0a 0003 	add.w	r0, sl, r3
 8020e4c:	0843      	lsrs	r3, r0, #1
 8020e4e:	07c0      	lsls	r0, r0, #31
 8020e50:	5cfb      	ldrb	r3, [r7, r3]
 8020e52:	bf54      	ite	pl
 8020e54:	f003 030f 	andpl.w	r3, r3, #15
 8020e58:	111b      	asrmi	r3, r3, #4
 8020e5a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8020e5e:	b2db      	uxtb	r3, r3
 8020e60:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020e62:	e73e      	b.n	8020ce2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020e64:	f8b8 e000 	ldrh.w	lr, [r8]
 8020e68:	fa1f fb83 	uxth.w	fp, r3
 8020e6c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020e70:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020e74:	43db      	mvns	r3, r3
 8020e76:	b2db      	uxtb	r3, r3
 8020e78:	fb11 f10b 	smulbb	r1, r1, fp
 8020e7c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020e80:	fb00 1003 	mla	r0, r0, r3, r1
 8020e84:	fa5f fc8c 	uxtb.w	ip, ip
 8020e88:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020e8c:	b2d2      	uxtb	r2, r2
 8020e8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020e92:	b280      	uxth	r0, r0
 8020e94:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020e98:	fb1c fc0b 	smulbb	ip, ip, fp
 8020e9c:	fa5f fe8e 	uxtb.w	lr, lr
 8020ea0:	fb12 fb0b 	smulbb	fp, r2, fp
 8020ea4:	fb01 cc03 	mla	ip, r1, r3, ip
 8020ea8:	fb0e bb03 	mla	fp, lr, r3, fp
 8020eac:	1c43      	adds	r3, r0, #1
 8020eae:	fa1f fc8c 	uxth.w	ip, ip
 8020eb2:	fa1f fb8b 	uxth.w	fp, fp
 8020eb6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020eba:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8020ebe:	f10c 0101 	add.w	r1, ip, #1
 8020ec2:	f10b 0001 	add.w	r0, fp, #1
 8020ec6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020eca:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020ece:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8020ed2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020ed6:	4318      	orrs	r0, r3
 8020ed8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020edc:	ea40 000c 	orr.w	r0, r0, ip
 8020ee0:	f8a8 0000 	strh.w	r0, [r8]
 8020ee4:	e734      	b.n	8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020ee6:	f113 0b01 	adds.w	fp, r3, #1
 8020eea:	f53f af31 	bmi.w	8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020eee:	45dc      	cmp	ip, fp
 8020ef0:	f6ff af2e 	blt.w	8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020ef4:	f110 0b01 	adds.w	fp, r0, #1
 8020ef8:	f53f af2a 	bmi.w	8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020efc:	45de      	cmp	lr, fp
 8020efe:	f6ff af27 	blt.w	8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020f02:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8020f04:	9302      	str	r3, [sp, #8]
 8020f06:	fa0f f38e 	sxth.w	r3, lr
 8020f0a:	9301      	str	r3, [sp, #4]
 8020f0c:	fa0f f38c 	sxth.w	r3, ip
 8020f10:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020f14:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8020f18:	9300      	str	r3, [sp, #0]
 8020f1a:	463a      	mov	r2, r7
 8020f1c:	4653      	mov	r3, sl
 8020f1e:	4641      	mov	r1, r8
 8020f20:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8020f22:	f7ff fd4d 	bl	80209c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8020f26:	e713      	b.n	8020d50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8020f28:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8020f2a:	1422      	asrs	r2, r4, #16
 8020f2c:	1433      	asrs	r3, r6, #16
 8020f2e:	fb05 2303 	mla	r3, r5, r3, r2
 8020f32:	085a      	lsrs	r2, r3, #1
 8020f34:	07dd      	lsls	r5, r3, #31
 8020f36:	5cba      	ldrb	r2, [r7, r2]
 8020f38:	bf54      	ite	pl
 8020f3a:	f002 020f 	andpl.w	r2, r2, #15
 8020f3e:	1112      	asrmi	r2, r2, #4
 8020f40:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020f44:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020f48:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020f4c:	b2d2      	uxtb	r2, r2
 8020f4e:	2900      	cmp	r1, #0
 8020f50:	d076      	beq.n	8021040 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8020f52:	f103 0e01 	add.w	lr, r3, #1
 8020f56:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8020f5a:	f01e 0f01 	tst.w	lr, #1
 8020f5e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020f62:	bf0c      	ite	eq
 8020f64:	f00c 0c0f 	andeq.w	ip, ip, #15
 8020f68:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8020f6c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020f70:	fa5f f58c 	uxtb.w	r5, ip
 8020f74:	9512      	str	r5, [sp, #72]	@ 0x48
 8020f76:	b300      	cbz	r0, 8020fba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020f78:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8020f7a:	442b      	add	r3, r5
 8020f7c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020f80:	07dd      	lsls	r5, r3, #31
 8020f82:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020f86:	bf54      	ite	pl
 8020f88:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020f8c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020f90:	3301      	adds	r3, #1
 8020f92:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020f96:	fa5f f58c 	uxtb.w	r5, ip
 8020f9a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020f9e:	950c      	str	r5, [sp, #48]	@ 0x30
 8020fa0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020fa4:	07dd      	lsls	r5, r3, #31
 8020fa6:	bf54      	ite	pl
 8020fa8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020fac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020fb0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020fb4:	fa5f f38c 	uxtb.w	r3, ip
 8020fb8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8020fba:	b289      	uxth	r1, r1
 8020fbc:	b280      	uxth	r0, r0
 8020fbe:	fb01 f300 	mul.w	r3, r1, r0
 8020fc2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8020fc6:	0109      	lsls	r1, r1, #4
 8020fc8:	b280      	uxth	r0, r0
 8020fca:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8020fce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8020fd0:	1ac9      	subs	r1, r1, r3
 8020fd2:	ebac 0c00 	sub.w	ip, ip, r0
 8020fd6:	b289      	uxth	r1, r1
 8020fd8:	4369      	muls	r1, r5
 8020fda:	fa1f fc8c 	uxth.w	ip, ip
 8020fde:	fb02 120c 	mla	r2, r2, ip, r1
 8020fe2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020fe4:	fb00 2001 	mla	r0, r0, r1, r2
 8020fe8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8020fea:	fb03 0302 	mla	r3, r3, r2, r0
 8020fee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020ff2:	b1d3      	cbz	r3, 802102a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8020ff4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020ff6:	4353      	muls	r3, r2
 8020ff8:	1c5a      	adds	r2, r3, #1
 8020ffa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020ffe:	4a0f      	ldr	r2, [pc, #60]	@ (802103c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8021000:	121b      	asrs	r3, r3, #8
 8021002:	6812      	ldr	r2, [r2, #0]
 8021004:	2bff      	cmp	r3, #255	@ 0xff
 8021006:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802100a:	d12d      	bne.n	8021068 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802100c:	0953      	lsrs	r3, r2, #5
 802100e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8021012:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021016:	f02c 0c07 	bic.w	ip, ip, #7
 802101a:	ea43 0c0c 	orr.w	ip, r3, ip
 802101e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021022:	ea4c 0202 	orr.w	r2, ip, r2
 8021026:	f8a8 2000 	strh.w	r2, [r8]
 802102a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802102c:	441c      	add	r4, r3
 802102e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021030:	f108 0802 	add.w	r8, r8, #2
 8021034:	441e      	add	r6, r3
 8021036:	f10b 3bff 	add.w	fp, fp, #4294967295
 802103a:	e6ba      	b.n	8020db2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802103c:	20002dc4 	.word	0x20002dc4
 8021040:	2800      	cmp	r0, #0
 8021042:	d0ba      	beq.n	8020fba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021044:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021046:	442b      	add	r3, r5
 8021048:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802104c:	07db      	lsls	r3, r3, #31
 802104e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8021052:	bf54      	ite	pl
 8021054:	f00c 0c0f 	andpl.w	ip, ip, #15
 8021058:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802105c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021060:	fa5f f38c 	uxtb.w	r3, ip
 8021064:	930c      	str	r3, [sp, #48]	@ 0x30
 8021066:	e7a8      	b.n	8020fba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8021068:	f8b8 e000 	ldrh.w	lr, [r8]
 802106c:	fa1f fa83 	uxth.w	sl, r3
 8021070:	ea4f 202e 	mov.w	r0, lr, asr #8
 8021074:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8021078:	43db      	mvns	r3, r3
 802107a:	b2db      	uxtb	r3, r3
 802107c:	fb11 f10a 	smulbb	r1, r1, sl
 8021080:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021084:	fb00 1003 	mla	r0, r0, r3, r1
 8021088:	b2d2      	uxtb	r2, r2
 802108a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802108e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021092:	fa5f fe8e 	uxtb.w	lr, lr
 8021096:	fb12 f20a 	smulbb	r2, r2, sl
 802109a:	fb0e 2203 	mla	r2, lr, r3, r2
 802109e:	fa5f fc8c 	uxtb.w	ip, ip
 80210a2:	b280      	uxth	r0, r0
 80210a4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80210a8:	b292      	uxth	r2, r2
 80210aa:	fb1c fc0a 	smulbb	ip, ip, sl
 80210ae:	fb01 cc03 	mla	ip, r1, r3, ip
 80210b2:	1c43      	adds	r3, r0, #1
 80210b4:	1c51      	adds	r1, r2, #1
 80210b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80210ba:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80210be:	fa1f fc8c 	uxth.w	ip, ip
 80210c2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80210c6:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80210ca:	4308      	orrs	r0, r1
 80210cc:	f10c 0101 	add.w	r1, ip, #1
 80210d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80210d4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80210d8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80210dc:	ea40 000c 	orr.w	r0, r0, ip
 80210e0:	f8a8 0000 	strh.w	r0, [r8]
 80210e4:	e7a1      	b.n	802102a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80210e6:	b017      	add	sp, #92	@ 0x5c
 80210e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080210ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80210ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80210f0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80210f4:	2d00      	cmp	r5, #0
 80210f6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80210fa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80210fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8021102:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8021106:	fb05 0e03 	mla	lr, r5, r3, r0
 802110a:	f2c0 80b0 	blt.w	802126e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802110e:	45a9      	cmp	r9, r5
 8021110:	f340 80ad 	ble.w	802126e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8021114:	2800      	cmp	r0, #0
 8021116:	f2c0 80a8 	blt.w	802126a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802111a:	4580      	cmp	r8, r0
 802111c:	f340 80a5 	ble.w	802126a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8021120:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8021124:	f01e 0f01 	tst.w	lr, #1
 8021128:	5d16      	ldrb	r6, [r2, r4]
 802112a:	bf0c      	ite	eq
 802112c:	f006 060f 	andeq.w	r6, r6, #15
 8021130:	1136      	asrne	r6, r6, #4
 8021132:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8021136:	b2f6      	uxtb	r6, r6
 8021138:	1c44      	adds	r4, r0, #1
 802113a:	f100 809b 	bmi.w	8021274 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802113e:	45a0      	cmp	r8, r4
 8021140:	f340 8098 	ble.w	8021274 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8021144:	2f00      	cmp	r7, #0
 8021146:	f000 8097 	beq.w	8021278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802114a:	f10e 0a01 	add.w	sl, lr, #1
 802114e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8021152:	f01a 0f01 	tst.w	sl, #1
 8021156:	5d14      	ldrb	r4, [r2, r4]
 8021158:	bf0c      	ite	eq
 802115a:	f004 040f 	andeq.w	r4, r4, #15
 802115e:	1124      	asrne	r4, r4, #4
 8021160:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8021164:	b2e4      	uxtb	r4, r4
 8021166:	3501      	adds	r5, #1
 8021168:	f100 808a 	bmi.w	8021280 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802116c:	45a9      	cmp	r9, r5
 802116e:	f340 8087 	ble.w	8021280 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8021172:	f1bc 0f00 	cmp.w	ip, #0
 8021176:	f000 8086 	beq.w	8021286 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802117a:	2800      	cmp	r0, #0
 802117c:	db7e      	blt.n	802127c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802117e:	4580      	cmp	r8, r0
 8021180:	dd7c      	ble.n	802127c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8021182:	eb03 090e 	add.w	r9, r3, lr
 8021186:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802118a:	f019 0f01 	tst.w	r9, #1
 802118e:	5d55      	ldrb	r5, [r2, r5]
 8021190:	bf0c      	ite	eq
 8021192:	f005 050f 	andeq.w	r5, r5, #15
 8021196:	112d      	asrne	r5, r5, #4
 8021198:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802119c:	b2ed      	uxtb	r5, r5
 802119e:	3001      	adds	r0, #1
 80211a0:	d474      	bmi.n	802128c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80211a2:	4580      	cmp	r8, r0
 80211a4:	dd72      	ble.n	802128c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80211a6:	2f00      	cmp	r7, #0
 80211a8:	d072      	beq.n	8021290 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80211aa:	3301      	adds	r3, #1
 80211ac:	449e      	add	lr, r3
 80211ae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80211b2:	f01e 0f01 	tst.w	lr, #1
 80211b6:	5cd0      	ldrb	r0, [r2, r3]
 80211b8:	bf0c      	ite	eq
 80211ba:	f000 000f 	andeq.w	r0, r0, #15
 80211be:	1100      	asrne	r0, r0, #4
 80211c0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80211c4:	b2c3      	uxtb	r3, r0
 80211c6:	b2ba      	uxth	r2, r7
 80211c8:	fa1f fc8c 	uxth.w	ip, ip
 80211cc:	fb02 f00c 	mul.w	r0, r2, ip
 80211d0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80211d4:	0112      	lsls	r2, r2, #4
 80211d6:	fa1f fc8c 	uxth.w	ip, ip
 80211da:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80211de:	1a12      	subs	r2, r2, r0
 80211e0:	eba7 070c 	sub.w	r7, r7, ip
 80211e4:	b292      	uxth	r2, r2
 80211e6:	b2bf      	uxth	r7, r7
 80211e8:	4362      	muls	r2, r4
 80211ea:	fb06 2207 	mla	r2, r6, r7, r2
 80211ee:	fb0c 2505 	mla	r5, ip, r5, r2
 80211f2:	fb00 5303 	mla	r3, r0, r3, r5
 80211f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80211fa:	b3a3      	cbz	r3, 8021266 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80211fc:	4a25      	ldr	r2, [pc, #148]	@ (8021294 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80211fe:	880e      	ldrh	r6, [r1, #0]
 8021200:	6815      	ldr	r5, [r2, #0]
 8021202:	1234      	asrs	r4, r6, #8
 8021204:	b29a      	uxth	r2, r3
 8021206:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802120a:	43db      	mvns	r3, r3
 802120c:	b2db      	uxtb	r3, r3
 802120e:	fb10 f002 	smulbb	r0, r0, r2
 8021212:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021216:	fb04 0403 	mla	r4, r4, r3, r0
 802121a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802121e:	10f0      	asrs	r0, r6, #3
 8021220:	b2ed      	uxtb	r5, r5
 8021222:	00f6      	lsls	r6, r6, #3
 8021224:	fb17 f702 	smulbb	r7, r7, r2
 8021228:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802122c:	fb15 f202 	smulbb	r2, r5, r2
 8021230:	b2f6      	uxtb	r6, r6
 8021232:	b2a4      	uxth	r4, r4
 8021234:	fb00 7003 	mla	r0, r0, r3, r7
 8021238:	fb06 2303 	mla	r3, r6, r3, r2
 802123c:	b29a      	uxth	r2, r3
 802123e:	1c63      	adds	r3, r4, #1
 8021240:	b280      	uxth	r0, r0
 8021242:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8021246:	1c53      	adds	r3, r2, #1
 8021248:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802124c:	1c42      	adds	r2, r0, #1
 802124e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021252:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021256:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802125a:	0940      	lsrs	r0, r0, #5
 802125c:	4323      	orrs	r3, r4
 802125e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021262:	4303      	orrs	r3, r0
 8021264:	800b      	strh	r3, [r1, #0]
 8021266:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802126a:	2600      	movs	r6, #0
 802126c:	e764      	b.n	8021138 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802126e:	2400      	movs	r4, #0
 8021270:	4626      	mov	r6, r4
 8021272:	e778      	b.n	8021166 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021274:	2400      	movs	r4, #0
 8021276:	e776      	b.n	8021166 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8021278:	463c      	mov	r4, r7
 802127a:	e774      	b.n	8021166 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802127c:	2500      	movs	r5, #0
 802127e:	e78e      	b.n	802119e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8021280:	2300      	movs	r3, #0
 8021282:	461d      	mov	r5, r3
 8021284:	e79f      	b.n	80211c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021286:	4663      	mov	r3, ip
 8021288:	4665      	mov	r5, ip
 802128a:	e79c      	b.n	80211c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802128c:	2300      	movs	r3, #0
 802128e:	e79a      	b.n	80211c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021290:	463b      	mov	r3, r7
 8021292:	e798      	b.n	80211c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8021294:	20002dc4 	.word	0x20002dc4

08021298 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021298:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802129c:	b093      	sub	sp, #76	@ 0x4c
 802129e:	461d      	mov	r5, r3
 80212a0:	920c      	str	r2, [sp, #48]	@ 0x30
 80212a2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80212a4:	9107      	str	r1, [sp, #28]
 80212a6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80212aa:	9011      	str	r0, [sp, #68]	@ 0x44
 80212ac:	6850      	ldr	r0, [r2, #4]
 80212ae:	6812      	ldr	r2, [r2, #0]
 80212b0:	fb00 1303 	mla	r3, r0, r3, r1
 80212b4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80212b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80212ba:	689b      	ldr	r3, [r3, #8]
 80212bc:	3301      	adds	r3, #1
 80212be:	f023 0301 	bic.w	r3, r3, #1
 80212c2:	9306      	str	r3, [sp, #24]
 80212c4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80212c6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80212ca:	681f      	ldr	r7, [r3, #0]
 80212cc:	9b07      	ldr	r3, [sp, #28]
 80212ce:	2b00      	cmp	r3, #0
 80212d0:	dc03      	bgt.n	80212da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80212d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80212d4:	2b00      	cmp	r3, #0
 80212d6:	f340 8267 	ble.w	80217a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80212da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80212dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80212e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80212e4:	1e48      	subs	r0, r1, #1
 80212e6:	f102 3cff 	add.w	ip, r2, #4294967295
 80212ea:	2d00      	cmp	r5, #0
 80212ec:	f340 80b8 	ble.w	8021460 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80212f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80212f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80212f8:	d406      	bmi.n	8021308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80212fa:	4586      	cmp	lr, r0
 80212fc:	da04      	bge.n	8021308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80212fe:	2b00      	cmp	r3, #0
 8021300:	db02      	blt.n	8021308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8021302:	4563      	cmp	r3, ip
 8021304:	f2c0 80ad 	blt.w	8021462 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8021308:	f11e 0e01 	adds.w	lr, lr, #1
 802130c:	f100 80a0 	bmi.w	8021450 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021310:	4571      	cmp	r1, lr
 8021312:	f2c0 809d 	blt.w	8021450 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021316:	3301      	adds	r3, #1
 8021318:	f100 809a 	bmi.w	8021450 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802131c:	429a      	cmp	r2, r3
 802131e:	f2c0 8097 	blt.w	8021450 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8021322:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8021326:	9509      	str	r5, [sp, #36]	@ 0x24
 8021328:	46c8      	mov	r8, r9
 802132a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802132c:	2b00      	cmp	r3, #0
 802132e:	f340 80b6 	ble.w	802149e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8021332:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8021336:	9308      	str	r3, [sp, #32]
 8021338:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802133a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802133e:	1423      	asrs	r3, r4, #16
 8021340:	ea4f 4026 	mov.w	r0, r6, asr #16
 8021344:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8021348:	f100 813e 	bmi.w	80215c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802134c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8021350:	455b      	cmp	r3, fp
 8021352:	f280 8139 	bge.w	80215c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021356:	2800      	cmp	r0, #0
 8021358:	f2c0 8136 	blt.w	80215c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802135c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8021360:	4558      	cmp	r0, fp
 8021362:	f280 8131 	bge.w	80215c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8021366:	9a06      	ldr	r2, [sp, #24]
 8021368:	fb00 3302 	mla	r3, r0, r2, r3
 802136c:	0858      	lsrs	r0, r3, #1
 802136e:	07da      	lsls	r2, r3, #31
 8021370:	f817 c000 	ldrb.w	ip, [r7, r0]
 8021374:	9a08      	ldr	r2, [sp, #32]
 8021376:	bf54      	ite	pl
 8021378:	f00c 0c0f 	andpl.w	ip, ip, #15
 802137c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8021380:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8021384:	fa5f fc8c 	uxtb.w	ip, ip
 8021388:	2a00      	cmp	r2, #0
 802138a:	f000 80cb 	beq.w	8021524 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802138e:	1c58      	adds	r0, r3, #1
 8021390:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8021394:	07c0      	lsls	r0, r0, #31
 8021396:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802139a:	bf54      	ite	pl
 802139c:	f00e 0e0f 	andpl.w	lr, lr, #15
 80213a0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80213a4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80213a8:	fa5f fe8e 	uxtb.w	lr, lr
 80213ac:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 80213b0:	b1b9      	cbz	r1, 80213e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80213b2:	4453      	add	r3, sl
 80213b4:	0858      	lsrs	r0, r3, #1
 80213b6:	07da      	lsls	r2, r3, #31
 80213b8:	5c38      	ldrb	r0, [r7, r0]
 80213ba:	bf54      	ite	pl
 80213bc:	f000 000f 	andpl.w	r0, r0, #15
 80213c0:	1100      	asrmi	r0, r0, #4
 80213c2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80213c6:	b2c0      	uxtb	r0, r0
 80213c8:	900a      	str	r0, [sp, #40]	@ 0x28
 80213ca:	1c58      	adds	r0, r3, #1
 80213cc:	0843      	lsrs	r3, r0, #1
 80213ce:	07c2      	lsls	r2, r0, #31
 80213d0:	5cfb      	ldrb	r3, [r7, r3]
 80213d2:	bf54      	ite	pl
 80213d4:	f003 030f 	andpl.w	r3, r3, #15
 80213d8:	111b      	asrmi	r3, r3, #4
 80213da:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80213de:	b2db      	uxtb	r3, r3
 80213e0:	930e      	str	r3, [sp, #56]	@ 0x38
 80213e2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80213e6:	b289      	uxth	r1, r1
 80213e8:	fb02 f301 	mul.w	r3, r2, r1
 80213ec:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80213f0:	0112      	lsls	r2, r2, #4
 80213f2:	b289      	uxth	r1, r1
 80213f4:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80213f8:	1a40      	subs	r0, r0, r1
 80213fa:	fa1f fe80 	uxth.w	lr, r0
 80213fe:	1ad2      	subs	r2, r2, r3
 8021400:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8021402:	b292      	uxth	r2, r2
 8021404:	4342      	muls	r2, r0
 8021406:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802140a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802140c:	fb01 c102 	mla	r1, r1, r2, ip
 8021410:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8021412:	fb03 1302 	mla	r3, r3, r2, r1
 8021416:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802141a:	2bff      	cmp	r3, #255	@ 0xff
 802141c:	f040 8093 	bne.w	8021546 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8021420:	4bbe      	ldr	r3, [pc, #760]	@ (802171c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8021422:	681a      	ldr	r2, [r3, #0]
 8021424:	4bbe      	ldr	r3, [pc, #760]	@ (8021720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8021426:	0951      	lsrs	r1, r2, #5
 8021428:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802142c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021430:	430b      	orrs	r3, r1
 8021432:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021436:	4313      	orrs	r3, r2
 8021438:	f8a8 3000 	strh.w	r3, [r8]
 802143c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802143e:	441c      	add	r4, r3
 8021440:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021442:	441e      	add	r6, r3
 8021444:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021446:	3b01      	subs	r3, #1
 8021448:	f108 0802 	add.w	r8, r8, #2
 802144c:	9309      	str	r3, [sp, #36]	@ 0x24
 802144e:	e76c      	b.n	802132a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021450:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8021452:	441c      	add	r4, r3
 8021454:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021456:	3d01      	subs	r5, #1
 8021458:	441e      	add	r6, r3
 802145a:	f109 0902 	add.w	r9, r9, #2
 802145e:	e744      	b.n	80212ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8021460:	d021      	beq.n	80214a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8021462:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8021464:	1e6b      	subs	r3, r5, #1
 8021466:	fb00 4003 	mla	r0, r0, r3, r4
 802146a:	1400      	asrs	r0, r0, #16
 802146c:	f53f af59 	bmi.w	8021322 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021470:	3901      	subs	r1, #1
 8021472:	4288      	cmp	r0, r1
 8021474:	f6bf af55 	bge.w	8021322 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021478:	9920      	ldr	r1, [sp, #128]	@ 0x80
 802147a:	fb01 6303 	mla	r3, r1, r3, r6
 802147e:	141b      	asrs	r3, r3, #16
 8021480:	f53f af4f 	bmi.w	8021322 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8021484:	3a01      	subs	r2, #1
 8021486:	4293      	cmp	r3, r2
 8021488:	f6bf af4b 	bge.w	8021322 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802148c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8021490:	9308      	str	r3, [sp, #32]
 8021492:	46a8      	mov	r8, r5
 8021494:	46ce      	mov	lr, r9
 8021496:	f1b8 0f00 	cmp.w	r8, #0
 802149a:	f300 80b5 	bgt.w	8021608 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802149e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80214a2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80214a6:	9b07      	ldr	r3, [sp, #28]
 80214a8:	2b00      	cmp	r3, #0
 80214aa:	f340 817d 	ble.w	80217a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80214ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 80214b2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80214b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80214ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80214bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80214c0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80214c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80214c8:	eef0 6a62 	vmov.f32	s13, s5
 80214cc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80214d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80214d4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80214d8:	ee16 4a90 	vmov	r4, s13
 80214dc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80214e0:	eef0 6a43 	vmov.f32	s13, s6
 80214e4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80214e8:	ee12 2a90 	vmov	r2, s5
 80214ec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80214f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80214f4:	ee13 2a10 	vmov	r2, s6
 80214f8:	931f      	str	r3, [sp, #124]	@ 0x7c
 80214fa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80214fc:	fb92 f3f3 	sdiv	r3, r2, r3
 8021500:	9320      	str	r3, [sp, #128]	@ 0x80
 8021502:	9b07      	ldr	r3, [sp, #28]
 8021504:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8021506:	3b01      	subs	r3, #1
 8021508:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802150c:	9307      	str	r3, [sp, #28]
 802150e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021510:	ee16 6a90 	vmov	r6, s13
 8021514:	bf14      	ite	ne
 8021516:	461d      	movne	r5, r3
 8021518:	4615      	moveq	r5, r2
 802151a:	eeb0 3a67 	vmov.f32	s6, s15
 802151e:	eef0 2a47 	vmov.f32	s5, s14
 8021522:	e6d3      	b.n	80212cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8021524:	2900      	cmp	r1, #0
 8021526:	f43f af5c 	beq.w	80213e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802152a:	eb0a 0003 	add.w	r0, sl, r3
 802152e:	0843      	lsrs	r3, r0, #1
 8021530:	07c0      	lsls	r0, r0, #31
 8021532:	5cfb      	ldrb	r3, [r7, r3]
 8021534:	bf54      	ite	pl
 8021536:	f003 030f 	andpl.w	r3, r3, #15
 802153a:	111b      	asrmi	r3, r3, #4
 802153c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8021540:	b2db      	uxtb	r3, r3
 8021542:	930a      	str	r3, [sp, #40]	@ 0x28
 8021544:	e74d      	b.n	80213e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8021546:	2b00      	cmp	r3, #0
 8021548:	f43f af78 	beq.w	802143c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802154c:	4a73      	ldr	r2, [pc, #460]	@ (802171c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802154e:	f8b8 c000 	ldrh.w	ip, [r8]
 8021552:	6810      	ldr	r0, [r2, #0]
 8021554:	fa1f fe83 	uxth.w	lr, r3
 8021558:	ea4f 212c 	mov.w	r1, ip, asr #8
 802155c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8021560:	43db      	mvns	r3, r3
 8021562:	b2db      	uxtb	r3, r3
 8021564:	fb12 f20e 	smulbb	r2, r2, lr
 8021568:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802156c:	fb01 2103 	mla	r1, r1, r3, r2
 8021570:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8021574:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021578:	b2c0      	uxtb	r0, r0
 802157a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802157e:	fb1b fb0e 	smulbb	fp, fp, lr
 8021582:	b289      	uxth	r1, r1
 8021584:	fb10 fe0e 	smulbb	lr, r0, lr
 8021588:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802158c:	fa5f fc8c 	uxtb.w	ip, ip
 8021590:	fb02 b203 	mla	r2, r2, r3, fp
 8021594:	1c48      	adds	r0, r1, #1
 8021596:	fb0c e303 	mla	r3, ip, r3, lr
 802159a:	b292      	uxth	r2, r2
 802159c:	b29b      	uxth	r3, r3
 802159e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80215a2:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 80215a6:	f102 0b01 	add.w	fp, r2, #1
 80215aa:	1c59      	adds	r1, r3, #1
 80215ac:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80215b0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80215b4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80215b8:	0952      	lsrs	r2, r2, #5
 80215ba:	4301      	orrs	r1, r0
 80215bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80215c0:	4311      	orrs	r1, r2
 80215c2:	f8a8 1000 	strh.w	r1, [r8]
 80215c6:	e739      	b.n	802143c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80215c8:	f113 0b01 	adds.w	fp, r3, #1
 80215cc:	f53f af36 	bmi.w	802143c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80215d0:	45dc      	cmp	ip, fp
 80215d2:	f6ff af33 	blt.w	802143c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80215d6:	f110 0b01 	adds.w	fp, r0, #1
 80215da:	f53f af2f 	bmi.w	802143c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80215de:	45de      	cmp	lr, fp
 80215e0:	f6ff af2c 	blt.w	802143c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80215e4:	9a08      	ldr	r2, [sp, #32]
 80215e6:	9302      	str	r3, [sp, #8]
 80215e8:	fa0f f38e 	sxth.w	r3, lr
 80215ec:	9301      	str	r3, [sp, #4]
 80215ee:	fa0f f38c 	sxth.w	r3, ip
 80215f2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80215f6:	9105      	str	r1, [sp, #20]
 80215f8:	9300      	str	r3, [sp, #0]
 80215fa:	463a      	mov	r2, r7
 80215fc:	4653      	mov	r3, sl
 80215fe:	4641      	mov	r1, r8
 8021600:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8021602:	f7ff fd73 	bl	80210ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8021606:	e719      	b.n	802143c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8021608:	9906      	ldr	r1, [sp, #24]
 802160a:	1422      	asrs	r2, r4, #16
 802160c:	1433      	asrs	r3, r6, #16
 802160e:	fb01 2303 	mla	r3, r1, r3, r2
 8021612:	085a      	lsrs	r2, r3, #1
 8021614:	07d9      	lsls	r1, r3, #31
 8021616:	5cba      	ldrb	r2, [r7, r2]
 8021618:	bf54      	ite	pl
 802161a:	f002 020f 	andpl.w	r2, r2, #15
 802161e:	1112      	asrmi	r2, r2, #4
 8021620:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8021624:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8021628:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802162c:	b2d2      	uxtb	r2, r2
 802162e:	2800      	cmp	r0, #0
 8021630:	d062      	beq.n	80216f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8021632:	f103 0a01 	add.w	sl, r3, #1
 8021636:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802163a:	f01a 0f01 	tst.w	sl, #1
 802163e:	5c79      	ldrb	r1, [r7, r1]
 8021640:	bf0c      	ite	eq
 8021642:	f001 010f 	andeq.w	r1, r1, #15
 8021646:	1109      	asrne	r1, r1, #4
 8021648:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802164c:	b2c9      	uxtb	r1, r1
 802164e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8021650:	f1bc 0f00 	cmp.w	ip, #0
 8021654:	d019      	beq.n	802168a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8021656:	9908      	ldr	r1, [sp, #32]
 8021658:	440b      	add	r3, r1
 802165a:	0859      	lsrs	r1, r3, #1
 802165c:	f013 0f01 	tst.w	r3, #1
 8021660:	5c79      	ldrb	r1, [r7, r1]
 8021662:	bf0c      	ite	eq
 8021664:	f001 010f 	andeq.w	r1, r1, #15
 8021668:	1109      	asrne	r1, r1, #4
 802166a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802166e:	b2c9      	uxtb	r1, r1
 8021670:	3301      	adds	r3, #1
 8021672:	910b      	str	r1, [sp, #44]	@ 0x2c
 8021674:	0859      	lsrs	r1, r3, #1
 8021676:	07db      	lsls	r3, r3, #31
 8021678:	5c79      	ldrb	r1, [r7, r1]
 802167a:	bf54      	ite	pl
 802167c:	f001 010f 	andpl.w	r1, r1, #15
 8021680:	1109      	asrmi	r1, r1, #4
 8021682:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021686:	b2c9      	uxtb	r1, r1
 8021688:	9110      	str	r1, [sp, #64]	@ 0x40
 802168a:	b280      	uxth	r0, r0
 802168c:	fa1f fc8c 	uxth.w	ip, ip
 8021690:	fb00 f30c 	mul.w	r3, r0, ip
 8021694:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8021698:	0100      	lsls	r0, r0, #4
 802169a:	fa1f fc8c 	uxth.w	ip, ip
 802169e:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80216a2:	eba1 010c 	sub.w	r1, r1, ip
 80216a6:	fa1f fa81 	uxth.w	sl, r1
 80216aa:	1ac0      	subs	r0, r0, r3
 80216ac:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80216ae:	b280      	uxth	r0, r0
 80216b0:	4348      	muls	r0, r1
 80216b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80216b4:	fb02 020a 	mla	r2, r2, sl, r0
 80216b8:	fb0c 2c01 	mla	ip, ip, r1, r2
 80216bc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80216be:	fb03 c302 	mla	r3, r3, r2, ip
 80216c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80216c6:	2bff      	cmp	r3, #255	@ 0xff
 80216c8:	d12c      	bne.n	8021724 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80216ca:	4b14      	ldr	r3, [pc, #80]	@ (802171c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80216cc:	681a      	ldr	r2, [r3, #0]
 80216ce:	4b14      	ldr	r3, [pc, #80]	@ (8021720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80216d0:	0951      	lsrs	r1, r2, #5
 80216d2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80216d6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80216da:	430b      	orrs	r3, r1
 80216dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80216e0:	4313      	orrs	r3, r2
 80216e2:	f8ae 3000 	strh.w	r3, [lr]
 80216e6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80216e8:	441c      	add	r4, r3
 80216ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80216ec:	f10e 0e02 	add.w	lr, lr, #2
 80216f0:	441e      	add	r6, r3
 80216f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80216f6:	e6ce      	b.n	8021496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80216f8:	f1bc 0f00 	cmp.w	ip, #0
 80216fc:	d0c5      	beq.n	802168a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80216fe:	9908      	ldr	r1, [sp, #32]
 8021700:	440b      	add	r3, r1
 8021702:	0859      	lsrs	r1, r3, #1
 8021704:	07db      	lsls	r3, r3, #31
 8021706:	5c79      	ldrb	r1, [r7, r1]
 8021708:	bf54      	ite	pl
 802170a:	f001 010f 	andpl.w	r1, r1, #15
 802170e:	1109      	asrmi	r1, r1, #4
 8021710:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8021714:	b2c9      	uxtb	r1, r1
 8021716:	910b      	str	r1, [sp, #44]	@ 0x2c
 8021718:	e7b7      	b.n	802168a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802171a:	bf00      	nop
 802171c:	20002dc4 	.word	0x20002dc4
 8021720:	fffff800 	.word	0xfffff800
 8021724:	2b00      	cmp	r3, #0
 8021726:	d0de      	beq.n	80216e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8021728:	4a21      	ldr	r2, [pc, #132]	@ (80217b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802172a:	f8be c000 	ldrh.w	ip, [lr]
 802172e:	6810      	ldr	r0, [r2, #0]
 8021730:	fa1f fa83 	uxth.w	sl, r3
 8021734:	ea4f 212c 	mov.w	r1, ip, asr #8
 8021738:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802173c:	43db      	mvns	r3, r3
 802173e:	b2db      	uxtb	r3, r3
 8021740:	fb12 f20a 	smulbb	r2, r2, sl
 8021744:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021748:	fb01 2103 	mla	r1, r1, r3, r2
 802174c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8021750:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021754:	b2c0      	uxtb	r0, r0
 8021756:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802175a:	fa5f fc8c 	uxtb.w	ip, ip
 802175e:	fb10 f00a 	smulbb	r0, r0, sl
 8021762:	fb0c 0003 	mla	r0, ip, r3, r0
 8021766:	b289      	uxth	r1, r1
 8021768:	fb1b fb0a 	smulbb	fp, fp, sl
 802176c:	b280      	uxth	r0, r0
 802176e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8021772:	fb02 b203 	mla	r2, r2, r3, fp
 8021776:	1c4b      	adds	r3, r1, #1
 8021778:	f100 0b01 	add.w	fp, r0, #1
 802177c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021780:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8021784:	b292      	uxth	r2, r2
 8021786:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802178a:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 802178e:	ea4b 0101 	orr.w	r1, fp, r1
 8021792:	f102 0b01 	add.w	fp, r2, #1
 8021796:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802179a:	0952      	lsrs	r2, r2, #5
 802179c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80217a0:	4311      	orrs	r1, r2
 80217a2:	f8ae 1000 	strh.w	r1, [lr]
 80217a6:	e79e      	b.n	80216e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80217a8:	b013      	add	sp, #76	@ 0x4c
 80217aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80217ae:	bf00      	nop
 80217b0:	20002dc4 	.word	0x20002dc4

080217b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80217b4:	b570      	push	{r4, r5, r6, lr}
 80217b6:	1208      	asrs	r0, r1, #8
 80217b8:	b29e      	uxth	r6, r3
 80217ba:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80217be:	1213      	asrs	r3, r2, #8
 80217c0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80217c4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80217c8:	fb13 f305 	smulbb	r3, r3, r5
 80217cc:	fb10 f006 	smulbb	r0, r0, r6
 80217d0:	4418      	add	r0, r3
 80217d2:	10cc      	asrs	r4, r1, #3
 80217d4:	10d3      	asrs	r3, r2, #3
 80217d6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80217da:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80217de:	fb13 f305 	smulbb	r3, r3, r5
 80217e2:	fb14 f406 	smulbb	r4, r4, r6
 80217e6:	00c9      	lsls	r1, r1, #3
 80217e8:	00d2      	lsls	r2, r2, #3
 80217ea:	441c      	add	r4, r3
 80217ec:	b2d2      	uxtb	r2, r2
 80217ee:	b2cb      	uxtb	r3, r1
 80217f0:	fb12 f205 	smulbb	r2, r2, r5
 80217f4:	b280      	uxth	r0, r0
 80217f6:	fb13 f306 	smulbb	r3, r3, r6
 80217fa:	4413      	add	r3, r2
 80217fc:	1c42      	adds	r2, r0, #1
 80217fe:	b29b      	uxth	r3, r3
 8021800:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021804:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8021808:	1c58      	adds	r0, r3, #1
 802180a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802180e:	b2a4      	uxth	r4, r4
 8021810:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021814:	4310      	orrs	r0, r2
 8021816:	1c62      	adds	r2, r4, #1
 8021818:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802181c:	0964      	lsrs	r4, r4, #5
 802181e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021822:	4320      	orrs	r0, r4
 8021824:	bd70      	pop	{r4, r5, r6, pc}
	...

08021828 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8021828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802182c:	b08f      	sub	sp, #60	@ 0x3c
 802182e:	461c      	mov	r4, r3
 8021830:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8021834:	9004      	str	r0, [sp, #16]
 8021836:	460d      	mov	r5, r1
 8021838:	4616      	mov	r6, r2
 802183a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802183c:	2f00      	cmp	r7, #0
 802183e:	f000 80f6 	beq.w	8021a2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8021842:	6820      	ldr	r0, [r4, #0]
 8021844:	6861      	ldr	r1, [r4, #4]
 8021846:	aa0a      	add	r2, sp, #40	@ 0x28
 8021848:	c203      	stmia	r2!, {r0, r1}
 802184a:	6818      	ldr	r0, [r3, #0]
 802184c:	6859      	ldr	r1, [r3, #4]
 802184e:	aa0c      	add	r2, sp, #48	@ 0x30
 8021850:	c203      	stmia	r2!, {r0, r1}
 8021852:	a80a      	add	r0, sp, #40	@ 0x28
 8021854:	f7ee fdd4 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021858:	4621      	mov	r1, r4
 802185a:	a80c      	add	r0, sp, #48	@ 0x30
 802185c:	f7ee fdf8 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021860:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8021864:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8021868:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 802186c:	f002 0301 	and.w	r3, r2, #1
 8021870:	9306      	str	r3, [sp, #24]
 8021872:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021876:	f003 0101 	and.w	r1, r3, #1
 802187a:	9105      	str	r1, [sp, #20]
 802187c:	9805      	ldr	r0, [sp, #20]
 802187e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8021882:	4403      	add	r3, r0
 8021884:	fb01 2303 	mla	r3, r1, r3, r2
 8021888:	f04f 0802 	mov.w	r8, #2
 802188c:	fb93 f3f8 	sdiv	r3, r3, r8
 8021890:	441d      	add	r5, r3
 8021892:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8021896:	441a      	add	r2, r3
 8021898:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802189c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80218a0:	4419      	add	r1, r3
 80218a2:	4b64      	ldr	r3, [pc, #400]	@ (8021a34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80218a4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80218a8:	6818      	ldr	r0, [r3, #0]
 80218aa:	6803      	ldr	r3, [r0, #0]
 80218ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80218ae:	4798      	blx	r3
 80218b0:	4a61      	ldr	r2, [pc, #388]	@ (8021a38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80218b2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80218b6:	8813      	ldrh	r3, [r2, #0]
 80218b8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 80218bc:	2fff      	cmp	r7, #255	@ 0xff
 80218be:	fb03 a404 	mla	r4, r3, r4, sl
 80218c2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80218c6:	f106 0604 	add.w	r6, r6, #4
 80218ca:	4611      	mov	r1, r2
 80218cc:	fb03 fb0b 	mul.w	fp, r3, fp
 80218d0:	d06b      	beq.n	80219aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80218d2:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80218d6:	9303      	str	r3, [sp, #12]
 80218d8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80218dc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80218e0:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80218e4:	9b07      	ldr	r3, [sp, #28]
 80218e6:	42a3      	cmp	r3, r4
 80218e8:	f240 809c 	bls.w	8021a24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80218ec:	9b06      	ldr	r3, [sp, #24]
 80218ee:	2b00      	cmp	r3, #0
 80218f0:	d039      	beq.n	8021966 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80218f2:	782b      	ldrb	r3, [r5, #0]
 80218f4:	8822      	ldrh	r2, [r4, #0]
 80218f6:	9804      	ldr	r0, [sp, #16]
 80218f8:	f003 030f 	and.w	r3, r3, #15
 80218fc:	f105 0801 	add.w	r8, r5, #1
 8021900:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021904:	9b03      	ldr	r3, [sp, #12]
 8021906:	9300      	str	r3, [sp, #0]
 8021908:	463b      	mov	r3, r7
 802190a:	f7ff ff53 	bl	80217b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802190e:	f824 0b02 	strh.w	r0, [r4], #2
 8021912:	f109 3bff 	add.w	fp, r9, #4294967295
 8021916:	f1bb 0f01 	cmp.w	fp, #1
 802191a:	46a2      	mov	sl, r4
 802191c:	f104 0404 	add.w	r4, r4, #4
 8021920:	dd24      	ble.n	802196c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8021922:	f898 3000 	ldrb.w	r3, [r8]
 8021926:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802192a:	9804      	ldr	r0, [sp, #16]
 802192c:	091b      	lsrs	r3, r3, #4
 802192e:	f1ab 0b02 	sub.w	fp, fp, #2
 8021932:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021936:	9b03      	ldr	r3, [sp, #12]
 8021938:	9300      	str	r3, [sp, #0]
 802193a:	463b      	mov	r3, r7
 802193c:	f7ff ff3a 	bl	80217b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021940:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021944:	f818 3b01 	ldrb.w	r3, [r8], #1
 8021948:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802194c:	9804      	ldr	r0, [sp, #16]
 802194e:	f003 030f 	and.w	r3, r3, #15
 8021952:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8021956:	9b03      	ldr	r3, [sp, #12]
 8021958:	9300      	str	r3, [sp, #0]
 802195a:	463b      	mov	r3, r7
 802195c:	f7ff ff2a 	bl	80217b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021960:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021964:	e7d7      	b.n	8021916 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8021966:	46a8      	mov	r8, r5
 8021968:	46cb      	mov	fp, r9
 802196a:	e7d4      	b.n	8021916 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802196c:	d10e      	bne.n	802198c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802196e:	f898 3000 	ldrb.w	r3, [r8]
 8021972:	f8ba 2000 	ldrh.w	r2, [sl]
 8021976:	9804      	ldr	r0, [sp, #16]
 8021978:	091b      	lsrs	r3, r3, #4
 802197a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802197e:	9b03      	ldr	r3, [sp, #12]
 8021980:	9300      	str	r3, [sp, #0]
 8021982:	463b      	mov	r3, r7
 8021984:	f7ff ff16 	bl	80217b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8021988:	f82a 0b02 	strh.w	r0, [sl], #2
 802198c:	9b08      	ldr	r3, [sp, #32]
 802198e:	9a05      	ldr	r2, [sp, #20]
 8021990:	881c      	ldrh	r4, [r3, #0]
 8021992:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021996:	eba4 0409 	sub.w	r4, r4, r9
 802199a:	4413      	add	r3, r2
 802199c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80219a0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80219a2:	fb93 f3f2 	sdiv	r3, r3, r2
 80219a6:	441d      	add	r5, r3
 80219a8:	e79c      	b.n	80218e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80219aa:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80219ae:	45a3      	cmp	fp, r4
 80219b0:	d938      	bls.n	8021a24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80219b2:	9b06      	ldr	r3, [sp, #24]
 80219b4:	b1f3      	cbz	r3, 80219f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80219b6:	782b      	ldrb	r3, [r5, #0]
 80219b8:	f003 030f 	and.w	r3, r3, #15
 80219bc:	1c6a      	adds	r2, r5, #1
 80219be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80219c2:	8023      	strh	r3, [r4, #0]
 80219c4:	f109 30ff 	add.w	r0, r9, #4294967295
 80219c8:	3402      	adds	r4, #2
 80219ca:	2801      	cmp	r0, #1
 80219cc:	4623      	mov	r3, r4
 80219ce:	f104 0404 	add.w	r4, r4, #4
 80219d2:	dd12      	ble.n	80219fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80219d4:	7813      	ldrb	r3, [r2, #0]
 80219d6:	091b      	lsrs	r3, r3, #4
 80219d8:	3802      	subs	r0, #2
 80219da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80219de:	f824 3c04 	strh.w	r3, [r4, #-4]
 80219e2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80219e6:	f003 030f 	and.w	r3, r3, #15
 80219ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80219ee:	f824 3c02 	strh.w	r3, [r4, #-2]
 80219f2:	e7ea      	b.n	80219ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80219f4:	462a      	mov	r2, r5
 80219f6:	4648      	mov	r0, r9
 80219f8:	e7e7      	b.n	80219ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80219fa:	d106      	bne.n	8021a0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80219fc:	7812      	ldrb	r2, [r2, #0]
 80219fe:	0912      	lsrs	r2, r2, #4
 8021a00:	3302      	adds	r3, #2
 8021a02:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8021a06:	f823 2c02 	strh.w	r2, [r3, #-2]
 8021a0a:	880c      	ldrh	r4, [r1, #0]
 8021a0c:	9a05      	ldr	r2, [sp, #20]
 8021a0e:	eba4 0409 	sub.w	r4, r4, r9
 8021a12:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8021a16:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021a1a:	4413      	add	r3, r2
 8021a1c:	fb93 f3f8 	sdiv	r3, r3, r8
 8021a20:	441d      	add	r5, r3
 8021a22:	e7c4      	b.n	80219ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8021a24:	4b03      	ldr	r3, [pc, #12]	@ (8021a34 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8021a26:	6818      	ldr	r0, [r3, #0]
 8021a28:	6803      	ldr	r3, [r0, #0]
 8021a2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021a2c:	4798      	blx	r3
 8021a2e:	b00f      	add	sp, #60	@ 0x3c
 8021a30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a34:	20002dbc 	.word	0x20002dbc
 8021a38:	20002db6 	.word	0x20002db6

08021a3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8021a3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021a3e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8021a42:	2dff      	cmp	r5, #255	@ 0xff
 8021a44:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8021a48:	d10c      	bne.n	8021a64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8021a4a:	2bff      	cmp	r3, #255	@ 0xff
 8021a4c:	d10a      	bne.n	8021a64 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8021a4e:	4b25      	ldr	r3, [pc, #148]	@ (8021ae4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8021a50:	0948      	lsrs	r0, r1, #5
 8021a52:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021a56:	403b      	ands	r3, r7
 8021a58:	4318      	orrs	r0, r3
 8021a5a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021a5e:	4308      	orrs	r0, r1
 8021a60:	b280      	uxth	r0, r0
 8021a62:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021a64:	fb15 f503 	smulbb	r5, r5, r3
 8021a68:	b2ab      	uxth	r3, r5
 8021a6a:	1c5d      	adds	r5, r3, #1
 8021a6c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8021a70:	1214      	asrs	r4, r2, #8
 8021a72:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8021a76:	fa1f fc85 	uxth.w	ip, r5
 8021a7a:	10d6      	asrs	r6, r2, #3
 8021a7c:	00d0      	lsls	r0, r2, #3
 8021a7e:	43ed      	mvns	r5, r5
 8021a80:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021a84:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8021a88:	b2eb      	uxtb	r3, r5
 8021a8a:	b2c0      	uxtb	r0, r0
 8021a8c:	fb12 f20c 	smulbb	r2, r2, ip
 8021a90:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021a94:	fb04 2403 	mla	r4, r4, r3, r2
 8021a98:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8021a9c:	b2c8      	uxtb	r0, r1
 8021a9e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8021aa2:	b2fd      	uxtb	r5, r7
 8021aa4:	fb10 f00c 	smulbb	r0, r0, ip
 8021aa8:	b2a4      	uxth	r4, r4
 8021aaa:	fb02 0003 	mla	r0, r2, r3, r0
 8021aae:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8021ab2:	fb15 f50c 	smulbb	r5, r5, ip
 8021ab6:	fb06 5503 	mla	r5, r6, r3, r5
 8021aba:	b283      	uxth	r3, r0
 8021abc:	1c60      	adds	r0, r4, #1
 8021abe:	b2ad      	uxth	r5, r5
 8021ac0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8021ac4:	1c58      	adds	r0, r3, #1
 8021ac6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021aca:	1c6b      	adds	r3, r5, #1
 8021acc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021ad0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8021ad4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021ad8:	096d      	lsrs	r5, r5, #5
 8021ada:	4320      	orrs	r0, r4
 8021adc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021ae0:	4328      	orrs	r0, r5
 8021ae2:	e7be      	b.n	8021a62 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8021ae4:	00fff800 	.word	0x00fff800

08021ae8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8021ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021aec:	461c      	mov	r4, r3
 8021aee:	b08d      	sub	sp, #52	@ 0x34
 8021af0:	460d      	mov	r5, r1
 8021af2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021af4:	6861      	ldr	r1, [r4, #4]
 8021af6:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8021afa:	4680      	mov	r8, r0
 8021afc:	6820      	ldr	r0, [r4, #0]
 8021afe:	4616      	mov	r6, r2
 8021b00:	aa08      	add	r2, sp, #32
 8021b02:	c203      	stmia	r2!, {r0, r1}
 8021b04:	6818      	ldr	r0, [r3, #0]
 8021b06:	6859      	ldr	r1, [r3, #4]
 8021b08:	aa0a      	add	r2, sp, #40	@ 0x28
 8021b0a:	c203      	stmia	r2!, {r0, r1}
 8021b0c:	a808      	add	r0, sp, #32
 8021b0e:	f7ee fc77 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021b12:	4621      	mov	r1, r4
 8021b14:	a80a      	add	r0, sp, #40	@ 0x28
 8021b16:	f7ee fc9b 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021b1a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8021b1e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8021b22:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8021b26:	f002 0301 	and.w	r3, r2, #1
 8021b2a:	9303      	str	r3, [sp, #12]
 8021b2c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8021b30:	f003 0101 	and.w	r1, r3, #1
 8021b34:	9102      	str	r1, [sp, #8]
 8021b36:	9802      	ldr	r0, [sp, #8]
 8021b38:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8021b3c:	4403      	add	r3, r0
 8021b3e:	fb01 2303 	mla	r3, r1, r3, r2
 8021b42:	f04f 0a02 	mov.w	sl, #2
 8021b46:	fb93 f3fa 	sdiv	r3, r3, sl
 8021b4a:	441d      	add	r5, r3
 8021b4c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8021b50:	441a      	add	r2, r3
 8021b52:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8021b56:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8021b5a:	4a3f      	ldr	r2, [pc, #252]	@ (8021c58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8021b5c:	9205      	str	r2, [sp, #20]
 8021b5e:	4419      	add	r1, r3
 8021b60:	6810      	ldr	r0, [r2, #0]
 8021b62:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8021b66:	6803      	ldr	r3, [r0, #0]
 8021b68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021b6a:	4798      	blx	r3
 8021b6c:	4b3b      	ldr	r3, [pc, #236]	@ (8021c5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8021b6e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8021b72:	8819      	ldrh	r1, [r3, #0]
 8021b74:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8021b78:	fb01 c404 	mla	r4, r1, r4, ip
 8021b7c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021b80:	434f      	muls	r7, r1
 8021b82:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8021b86:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8021b8a:	3604      	adds	r6, #4
 8021b8c:	9204      	str	r2, [sp, #16]
 8021b8e:	9b04      	ldr	r3, [sp, #16]
 8021b90:	429c      	cmp	r4, r3
 8021b92:	d258      	bcs.n	8021c46 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8021b94:	9b03      	ldr	r3, [sp, #12]
 8021b96:	2b00      	cmp	r3, #0
 8021b98:	d034      	beq.n	8021c04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8021b9a:	782b      	ldrb	r3, [r5, #0]
 8021b9c:	f003 030f 	and.w	r3, r3, #15
 8021ba0:	1c6f      	adds	r7, r5, #1
 8021ba2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021ba6:	0e0b      	lsrs	r3, r1, #24
 8021ba8:	d006      	beq.n	8021bb8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8021baa:	8822      	ldrh	r2, [r4, #0]
 8021bac:	9300      	str	r3, [sp, #0]
 8021bae:	4640      	mov	r0, r8
 8021bb0:	464b      	mov	r3, r9
 8021bb2:	f7ff ff43 	bl	8021a3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021bb6:	8020      	strh	r0, [r4, #0]
 8021bb8:	3402      	adds	r4, #2
 8021bba:	f10b 3aff 	add.w	sl, fp, #4294967295
 8021bbe:	f1ba 0f01 	cmp.w	sl, #1
 8021bc2:	dd22      	ble.n	8021c0a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8021bc4:	783b      	ldrb	r3, [r7, #0]
 8021bc6:	091b      	lsrs	r3, r3, #4
 8021bc8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021bcc:	0e0b      	lsrs	r3, r1, #24
 8021bce:	d006      	beq.n	8021bde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8021bd0:	8822      	ldrh	r2, [r4, #0]
 8021bd2:	9300      	str	r3, [sp, #0]
 8021bd4:	4640      	mov	r0, r8
 8021bd6:	464b      	mov	r3, r9
 8021bd8:	f7ff ff30 	bl	8021a3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021bdc:	8020      	strh	r0, [r4, #0]
 8021bde:	f817 3b01 	ldrb.w	r3, [r7], #1
 8021be2:	f003 030f 	and.w	r3, r3, #15
 8021be6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021bea:	0e0b      	lsrs	r3, r1, #24
 8021bec:	d006      	beq.n	8021bfc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8021bee:	8862      	ldrh	r2, [r4, #2]
 8021bf0:	9300      	str	r3, [sp, #0]
 8021bf2:	4640      	mov	r0, r8
 8021bf4:	464b      	mov	r3, r9
 8021bf6:	f7ff ff21 	bl	8021a3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021bfa:	8060      	strh	r0, [r4, #2]
 8021bfc:	3404      	adds	r4, #4
 8021bfe:	f1aa 0a02 	sub.w	sl, sl, #2
 8021c02:	e7dc      	b.n	8021bbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8021c04:	462f      	mov	r7, r5
 8021c06:	46da      	mov	sl, fp
 8021c08:	e7d9      	b.n	8021bbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8021c0a:	d10d      	bne.n	8021c28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8021c0c:	783b      	ldrb	r3, [r7, #0]
 8021c0e:	091b      	lsrs	r3, r3, #4
 8021c10:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8021c14:	0e0b      	lsrs	r3, r1, #24
 8021c16:	d006      	beq.n	8021c26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8021c18:	8822      	ldrh	r2, [r4, #0]
 8021c1a:	9300      	str	r3, [sp, #0]
 8021c1c:	4640      	mov	r0, r8
 8021c1e:	464b      	mov	r3, r9
 8021c20:	f7ff ff0c 	bl	8021a3c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8021c24:	8020      	strh	r0, [r4, #0]
 8021c26:	3402      	adds	r4, #2
 8021c28:	9b06      	ldr	r3, [sp, #24]
 8021c2a:	9a02      	ldr	r2, [sp, #8]
 8021c2c:	881b      	ldrh	r3, [r3, #0]
 8021c2e:	eba3 030b 	sub.w	r3, r3, fp
 8021c32:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8021c36:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8021c3a:	4413      	add	r3, r2
 8021c3c:	9a07      	ldr	r2, [sp, #28]
 8021c3e:	fb93 f3f2 	sdiv	r3, r3, r2
 8021c42:	441d      	add	r5, r3
 8021c44:	e7a3      	b.n	8021b8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8021c46:	9b05      	ldr	r3, [sp, #20]
 8021c48:	6818      	ldr	r0, [r3, #0]
 8021c4a:	6803      	ldr	r3, [r0, #0]
 8021c4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021c4e:	4798      	blx	r3
 8021c50:	b00d      	add	sp, #52	@ 0x34
 8021c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c56:	bf00      	nop
 8021c58:	20002dbc 	.word	0x20002dbc
 8021c5c:	20002db6 	.word	0x20002db6

08021c60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8021c60:	b570      	push	{r4, r5, r6, lr}
 8021c62:	1214      	asrs	r4, r2, #8
 8021c64:	788d      	ldrb	r5, [r1, #2]
 8021c66:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8021c6a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8021c6e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8021c72:	fb15 f503 	smulbb	r5, r5, r3
 8021c76:	fb04 5506 	mla	r5, r4, r6, r5
 8021c7a:	10d0      	asrs	r0, r2, #3
 8021c7c:	784c      	ldrb	r4, [r1, #1]
 8021c7e:	7809      	ldrb	r1, [r1, #0]
 8021c80:	00d2      	lsls	r2, r2, #3
 8021c82:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021c86:	b2d2      	uxtb	r2, r2
 8021c88:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8021c8c:	fb14 f403 	smulbb	r4, r4, r3
 8021c90:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8021c94:	fb11 f303 	smulbb	r3, r1, r3
 8021c98:	fb00 4406 	mla	r4, r0, r6, r4
 8021c9c:	fb02 3306 	mla	r3, r2, r6, r3
 8021ca0:	b2ad      	uxth	r5, r5
 8021ca2:	b29b      	uxth	r3, r3
 8021ca4:	b2a4      	uxth	r4, r4
 8021ca6:	1c68      	adds	r0, r5, #1
 8021ca8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8021cac:	1c62      	adds	r2, r4, #1
 8021cae:	1c58      	adds	r0, r3, #1
 8021cb0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021cb4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021cb8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021cbc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8021cc0:	0964      	lsrs	r4, r4, #5
 8021cc2:	4328      	orrs	r0, r5
 8021cc4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021cc8:	4320      	orrs	r0, r4
 8021cca:	bd70      	pop	{r4, r5, r6, pc}

08021ccc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8021ccc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cd0:	b08f      	sub	sp, #60	@ 0x3c
 8021cd2:	461c      	mov	r4, r3
 8021cd4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8021cd8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021cda:	4682      	mov	sl, r0
 8021cdc:	460e      	mov	r6, r1
 8021cde:	4615      	mov	r5, r2
 8021ce0:	2f00      	cmp	r7, #0
 8021ce2:	f000 8142 	beq.w	8021f6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8021ce6:	6820      	ldr	r0, [r4, #0]
 8021ce8:	6861      	ldr	r1, [r4, #4]
 8021cea:	aa0a      	add	r2, sp, #40	@ 0x28
 8021cec:	c203      	stmia	r2!, {r0, r1}
 8021cee:	6818      	ldr	r0, [r3, #0]
 8021cf0:	6859      	ldr	r1, [r3, #4]
 8021cf2:	aa0c      	add	r2, sp, #48	@ 0x30
 8021cf4:	c203      	stmia	r2!, {r0, r1}
 8021cf6:	a80a      	add	r0, sp, #40	@ 0x28
 8021cf8:	f7ee fb82 	bl	8010400 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021cfc:	4621      	mov	r1, r4
 8021cfe:	a80c      	add	r0, sp, #48	@ 0x30
 8021d00:	f7ee fba6 	bl	8010450 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021d04:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8021d08:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8021d0c:	f002 0301 	and.w	r3, r2, #1
 8021d10:	9306      	str	r3, [sp, #24]
 8021d12:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021d16:	f003 0101 	and.w	r1, r3, #1
 8021d1a:	9105      	str	r1, [sp, #20]
 8021d1c:	9805      	ldr	r0, [sp, #20]
 8021d1e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8021d22:	4403      	add	r3, r0
 8021d24:	fb01 2303 	mla	r3, r1, r3, r2
 8021d28:	f04f 0802 	mov.w	r8, #2
 8021d2c:	fb93 f3f8 	sdiv	r3, r3, r8
 8021d30:	441e      	add	r6, r3
 8021d32:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8021d36:	441a      	add	r2, r3
 8021d38:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8021d3c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8021d40:	4419      	add	r1, r3
 8021d42:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8021d46:	9303      	str	r3, [sp, #12]
 8021d48:	4b89      	ldr	r3, [pc, #548]	@ (8021f70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021d4a:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8021d4e:	6818      	ldr	r0, [r3, #0]
 8021d50:	6803      	ldr	r3, [r0, #0]
 8021d52:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8021d54:	4798      	blx	r3
 8021d56:	4a87      	ldr	r2, [pc, #540]	@ (8021f74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8021d58:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8021d5c:	8813      	ldrh	r3, [r2, #0]
 8021d5e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8021d62:	2fff      	cmp	r7, #255	@ 0xff
 8021d64:	fb03 9404 	mla	r4, r3, r4, r9
 8021d68:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021d6c:	f105 0504 	add.w	r5, r5, #4
 8021d70:	4694      	mov	ip, r2
 8021d72:	fb03 f30b 	mul.w	r3, r3, fp
 8021d76:	d071      	beq.n	8021e5c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8021d78:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021d7c:	43f9      	mvns	r1, r7
 8021d7e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8021d82:	b2c9      	uxtb	r1, r1
 8021d84:	9104      	str	r1, [sp, #16]
 8021d86:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8021d8a:	9b07      	ldr	r3, [sp, #28]
 8021d8c:	42a3      	cmp	r3, r4
 8021d8e:	f240 80e7 	bls.w	8021f60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8021d92:	9b06      	ldr	r3, [sp, #24]
 8021d94:	2b00      	cmp	r3, #0
 8021d96:	d03d      	beq.n	8021e14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8021d98:	7831      	ldrb	r1, [r6, #0]
 8021d9a:	9b04      	ldr	r3, [sp, #16]
 8021d9c:	8822      	ldrh	r2, [r4, #0]
 8021d9e:	9300      	str	r3, [sp, #0]
 8021da0:	f001 010f 	and.w	r1, r1, #15
 8021da4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021da8:	463b      	mov	r3, r7
 8021daa:	4429      	add	r1, r5
 8021dac:	4650      	mov	r0, sl
 8021dae:	f7ff ff57 	bl	8021c60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021db2:	9b03      	ldr	r3, [sp, #12]
 8021db4:	f824 0b02 	strh.w	r0, [r4], #2
 8021db8:	f106 0801 	add.w	r8, r6, #1
 8021dbc:	f103 3bff 	add.w	fp, r3, #4294967295
 8021dc0:	f1bb 0f01 	cmp.w	fp, #1
 8021dc4:	46a1      	mov	r9, r4
 8021dc6:	f104 0404 	add.w	r4, r4, #4
 8021dca:	dd27      	ble.n	8021e1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8021dcc:	f898 1000 	ldrb.w	r1, [r8]
 8021dd0:	9b04      	ldr	r3, [sp, #16]
 8021dd2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8021dd6:	9300      	str	r3, [sp, #0]
 8021dd8:	0909      	lsrs	r1, r1, #4
 8021dda:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021dde:	463b      	mov	r3, r7
 8021de0:	4429      	add	r1, r5
 8021de2:	4650      	mov	r0, sl
 8021de4:	f7ff ff3c 	bl	8021c60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021de8:	f824 0c04 	strh.w	r0, [r4, #-4]
 8021dec:	f818 1b01 	ldrb.w	r1, [r8], #1
 8021df0:	9b04      	ldr	r3, [sp, #16]
 8021df2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8021df6:	9300      	str	r3, [sp, #0]
 8021df8:	f001 010f 	and.w	r1, r1, #15
 8021dfc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021e00:	463b      	mov	r3, r7
 8021e02:	4429      	add	r1, r5
 8021e04:	4650      	mov	r0, sl
 8021e06:	f7ff ff2b 	bl	8021c60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021e0a:	f1ab 0b02 	sub.w	fp, fp, #2
 8021e0e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8021e12:	e7d5      	b.n	8021dc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021e14:	46b0      	mov	r8, r6
 8021e16:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8021e1a:	e7d1      	b.n	8021dc0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8021e1c:	d10f      	bne.n	8021e3e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8021e1e:	f898 1000 	ldrb.w	r1, [r8]
 8021e22:	9b04      	ldr	r3, [sp, #16]
 8021e24:	f8b9 2000 	ldrh.w	r2, [r9]
 8021e28:	9300      	str	r3, [sp, #0]
 8021e2a:	0909      	lsrs	r1, r1, #4
 8021e2c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021e30:	463b      	mov	r3, r7
 8021e32:	4429      	add	r1, r5
 8021e34:	4650      	mov	r0, sl
 8021e36:	f7ff ff13 	bl	8021c60 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8021e3a:	f829 0b02 	strh.w	r0, [r9], #2
 8021e3e:	9b08      	ldr	r3, [sp, #32]
 8021e40:	9a05      	ldr	r2, [sp, #20]
 8021e42:	881c      	ldrh	r4, [r3, #0]
 8021e44:	9b03      	ldr	r3, [sp, #12]
 8021e46:	1ae4      	subs	r4, r4, r3
 8021e48:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8021e4c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021e50:	4413      	add	r3, r2
 8021e52:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021e54:	fb93 f3f2 	sdiv	r3, r3, r2
 8021e58:	441e      	add	r6, r3
 8021e5a:	e796      	b.n	8021d8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8021e5c:	4f46      	ldr	r7, [pc, #280]	@ (8021f78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8021e5e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8021e62:	42a3      	cmp	r3, r4
 8021e64:	d97c      	bls.n	8021f60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8021e66:	9a06      	ldr	r2, [sp, #24]
 8021e68:	2a00      	cmp	r2, #0
 8021e6a:	d054      	beq.n	8021f16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8021e6c:	7830      	ldrb	r0, [r6, #0]
 8021e6e:	f000 000f 	and.w	r0, r0, #15
 8021e72:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021e76:	eb05 0e00 	add.w	lr, r5, r0
 8021e7a:	5c28      	ldrb	r0, [r5, r0]
 8021e7c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8021e80:	f89e e001 	ldrb.w	lr, [lr, #1]
 8021e84:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8021e88:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021e8c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021e90:	ea42 020e 	orr.w	r2, r2, lr
 8021e94:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8021e98:	f824 2b02 	strh.w	r2, [r4], #2
 8021e9c:	9a03      	ldr	r2, [sp, #12]
 8021e9e:	1c71      	adds	r1, r6, #1
 8021ea0:	f102 3eff 	add.w	lr, r2, #4294967295
 8021ea4:	f1be 0f01 	cmp.w	lr, #1
 8021ea8:	4620      	mov	r0, r4
 8021eaa:	f104 0404 	add.w	r4, r4, #4
 8021eae:	dd36      	ble.n	8021f1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8021eb0:	7808      	ldrb	r0, [r1, #0]
 8021eb2:	0900      	lsrs	r0, r0, #4
 8021eb4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021eb8:	eb05 0a00 	add.w	sl, r5, r0
 8021ebc:	f1ae 0e02 	sub.w	lr, lr, #2
 8021ec0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021ec4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8021ec8:	00d2      	lsls	r2, r2, #3
 8021eca:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8021ece:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021ed2:	ea49 0202 	orr.w	r2, r9, r2
 8021ed6:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021eda:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8021ede:	f824 2c04 	strh.w	r2, [r4, #-4]
 8021ee2:	f811 0b01 	ldrb.w	r0, [r1], #1
 8021ee6:	f000 000f 	and.w	r0, r0, #15
 8021eea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8021eee:	eb05 0a00 	add.w	sl, r5, r0
 8021ef2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8021ef6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8021efa:	00d2      	lsls	r2, r2, #3
 8021efc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8021f00:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021f04:	ea49 0202 	orr.w	r2, r9, r2
 8021f08:	f815 9000 	ldrb.w	r9, [r5, r0]
 8021f0c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8021f10:	f824 2c02 	strh.w	r2, [r4, #-2]
 8021f14:	e7c6      	b.n	8021ea4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8021f16:	4631      	mov	r1, r6
 8021f18:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8021f1c:	e7c2      	b.n	8021ea4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8021f1e:	d111      	bne.n	8021f44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8021f20:	7809      	ldrb	r1, [r1, #0]
 8021f22:	0909      	lsrs	r1, r1, #4
 8021f24:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8021f28:	186c      	adds	r4, r5, r1
 8021f2a:	5c69      	ldrb	r1, [r5, r1]
 8021f2c:	78a2      	ldrb	r2, [r4, #2]
 8021f2e:	7864      	ldrb	r4, [r4, #1]
 8021f30:	00e4      	lsls	r4, r4, #3
 8021f32:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8021f36:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021f3a:	4322      	orrs	r2, r4
 8021f3c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8021f40:	f820 2b02 	strh.w	r2, [r0], #2
 8021f44:	9a03      	ldr	r2, [sp, #12]
 8021f46:	f8bc 4000 	ldrh.w	r4, [ip]
 8021f4a:	9905      	ldr	r1, [sp, #20]
 8021f4c:	1aa4      	subs	r4, r4, r2
 8021f4e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8021f52:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8021f56:	440a      	add	r2, r1
 8021f58:	fb92 f2f8 	sdiv	r2, r2, r8
 8021f5c:	4416      	add	r6, r2
 8021f5e:	e780      	b.n	8021e62 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8021f60:	4b03      	ldr	r3, [pc, #12]	@ (8021f70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8021f62:	6818      	ldr	r0, [r3, #0]
 8021f64:	6803      	ldr	r3, [r0, #0]
 8021f66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8021f68:	4798      	blx	r3
 8021f6a:	b00f      	add	sp, #60	@ 0x3c
 8021f6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f70:	20002dbc 	.word	0x20002dbc
 8021f74:	20002db6 	.word	0x20002db6
 8021f78:	fffff800 	.word	0xfffff800

08021f7c <CRC_Lock>:
 8021f7c:	b530      	push	{r4, r5, lr}
 8021f7e:	4a2d      	ldr	r2, [pc, #180]	@ (8022034 <CRC_Lock+0xb8>)
 8021f80:	6813      	ldr	r3, [r2, #0]
 8021f82:	f023 0301 	bic.w	r3, r3, #1
 8021f86:	6013      	str	r3, [r2, #0]
 8021f88:	4b2b      	ldr	r3, [pc, #172]	@ (8022038 <CRC_Lock+0xbc>)
 8021f8a:	681c      	ldr	r4, [r3, #0]
 8021f8c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8021f90:	4014      	ands	r4, r2
 8021f92:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8021f96:	42ac      	cmp	r4, r5
 8021f98:	d005      	beq.n	8021fa6 <CRC_Lock+0x2a>
 8021f9a:	681c      	ldr	r4, [r3, #0]
 8021f9c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8021fa0:	4014      	ands	r4, r2
 8021fa2:	42ac      	cmp	r4, r5
 8021fa4:	d125      	bne.n	8021ff2 <CRC_Lock+0x76>
 8021fa6:	4b25      	ldr	r3, [pc, #148]	@ (802203c <CRC_Lock+0xc0>)
 8021fa8:	681b      	ldr	r3, [r3, #0]
 8021faa:	2b00      	cmp	r3, #0
 8021fac:	d139      	bne.n	8022022 <CRC_Lock+0xa6>
 8021fae:	4b24      	ldr	r3, [pc, #144]	@ (8022040 <CRC_Lock+0xc4>)
 8021fb0:	681a      	ldr	r2, [r3, #0]
 8021fb2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021fb6:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8021fba:	d00d      	beq.n	8021fd8 <CRC_Lock+0x5c>
 8021fbc:	681a      	ldr	r2, [r3, #0]
 8021fbe:	f240 4483 	movw	r4, #1155	@ 0x483
 8021fc2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8021fc6:	42a2      	cmp	r2, r4
 8021fc8:	d006      	beq.n	8021fd8 <CRC_Lock+0x5c>
 8021fca:	681b      	ldr	r3, [r3, #0]
 8021fcc:	f240 4285 	movw	r2, #1157	@ 0x485
 8021fd0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8021fd4:	4293      	cmp	r3, r2
 8021fd6:	d124      	bne.n	8022022 <CRC_Lock+0xa6>
 8021fd8:	4b1a      	ldr	r3, [pc, #104]	@ (8022044 <CRC_Lock+0xc8>)
 8021fda:	2201      	movs	r2, #1
 8021fdc:	601a      	str	r2, [r3, #0]
 8021fde:	681a      	ldr	r2, [r3, #0]
 8021fe0:	2a00      	cmp	r2, #0
 8021fe2:	d1fc      	bne.n	8021fde <CRC_Lock+0x62>
 8021fe4:	4b18      	ldr	r3, [pc, #96]	@ (8022048 <CRC_Lock+0xcc>)
 8021fe6:	6018      	str	r0, [r3, #0]
 8021fe8:	6818      	ldr	r0, [r3, #0]
 8021fea:	1a43      	subs	r3, r0, r1
 8021fec:	4258      	negs	r0, r3
 8021fee:	4158      	adcs	r0, r3
 8021ff0:	e00e      	b.n	8022010 <CRC_Lock+0x94>
 8021ff2:	681b      	ldr	r3, [r3, #0]
 8021ff4:	4013      	ands	r3, r2
 8021ff6:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8021ffa:	4293      	cmp	r3, r2
 8021ffc:	d111      	bne.n	8022022 <CRC_Lock+0xa6>
 8021ffe:	4b13      	ldr	r3, [pc, #76]	@ (802204c <CRC_Lock+0xd0>)
 8022000:	681b      	ldr	r3, [r3, #0]
 8022002:	f240 4286 	movw	r2, #1158	@ 0x486
 8022006:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802200a:	4293      	cmp	r3, r2
 802200c:	d001      	beq.n	8022012 <CRC_Lock+0x96>
 802200e:	2000      	movs	r0, #0
 8022010:	bd30      	pop	{r4, r5, pc}
 8022012:	4b0f      	ldr	r3, [pc, #60]	@ (8022050 <CRC_Lock+0xd4>)
 8022014:	2201      	movs	r2, #1
 8022016:	601a      	str	r2, [r3, #0]
 8022018:	681a      	ldr	r2, [r3, #0]
 802201a:	2a00      	cmp	r2, #0
 802201c:	d1fc      	bne.n	8022018 <CRC_Lock+0x9c>
 802201e:	4b0d      	ldr	r3, [pc, #52]	@ (8022054 <CRC_Lock+0xd8>)
 8022020:	e7e1      	b.n	8021fe6 <CRC_Lock+0x6a>
 8022022:	4b0d      	ldr	r3, [pc, #52]	@ (8022058 <CRC_Lock+0xdc>)
 8022024:	2201      	movs	r2, #1
 8022026:	601a      	str	r2, [r3, #0]
 8022028:	681a      	ldr	r2, [r3, #0]
 802202a:	2a00      	cmp	r2, #0
 802202c:	d1fc      	bne.n	8022028 <CRC_Lock+0xac>
 802202e:	4b0b      	ldr	r3, [pc, #44]	@ (802205c <CRC_Lock+0xe0>)
 8022030:	e7d9      	b.n	8021fe6 <CRC_Lock+0x6a>
 8022032:	bf00      	nop
 8022034:	e0002000 	.word	0xe0002000
 8022038:	e000ed00 	.word	0xe000ed00
 802203c:	e0042000 	.word	0xe0042000
 8022040:	5c001000 	.word	0x5c001000
 8022044:	58024c08 	.word	0x58024c08
 8022048:	58024c00 	.word	0x58024c00
 802204c:	46008ff0 	.word	0x46008ff0
 8022050:	46024c08 	.word	0x46024c08
 8022054:	46024c00 	.word	0x46024c00
 8022058:	40023008 	.word	0x40023008
 802205c:	40023000 	.word	0x40023000

08022060 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8022060:	6101      	str	r1, [r0, #16]
 8022062:	4770      	bx	lr

08022064 <_ZN8touchgfx8Gestures4tickEv>:
 8022064:	7b83      	ldrb	r3, [r0, #14]
 8022066:	b14b      	cbz	r3, 802207c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8022068:	8903      	ldrh	r3, [r0, #8]
 802206a:	3301      	adds	r3, #1
 802206c:	b29b      	uxth	r3, r3
 802206e:	2b07      	cmp	r3, #7
 8022070:	8103      	strh	r3, [r0, #8]
 8022072:	bf81      	itttt	hi
 8022074:	2300      	movhi	r3, #0
 8022076:	8143      	strhhi	r3, [r0, #10]
 8022078:	8183      	strhhi	r3, [r0, #12]
 802207a:	7383      	strbhi	r3, [r0, #14]
 802207c:	4770      	bx	lr
	...

08022080 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8022080:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8022084:	4698      	mov	r8, r3
 8022086:	8883      	ldrh	r3, [r0, #4]
 8022088:	f8ad 3006 	strh.w	r3, [sp, #6]
 802208c:	eba8 0303 	sub.w	r3, r8, r3
 8022090:	b21b      	sxth	r3, r3
 8022092:	4604      	mov	r4, r0
 8022094:	2b00      	cmp	r3, #0
 8022096:	4617      	mov	r7, r2
 8022098:	4a18      	ldr	r2, [pc, #96]	@ (80220fc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802209a:	9200      	str	r2, [sp, #0]
 802209c:	bfb8      	it	lt
 802209e:	425b      	neglt	r3, r3
 80220a0:	8aa2      	ldrh	r2, [r4, #20]
 80220a2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80220a6:	f8ad 800a 	strh.w	r8, [sp, #10]
 80220aa:	b21b      	sxth	r3, r3
 80220ac:	460e      	mov	r6, r1
 80220ae:	4293      	cmp	r3, r2
 80220b0:	88c1      	ldrh	r1, [r0, #6]
 80220b2:	f8ad 1008 	strh.w	r1, [sp, #8]
 80220b6:	f04f 0000 	mov.w	r0, #0
 80220ba:	f88d 0004 	strb.w	r0, [sp, #4]
 80220be:	f8ad 500c 	strh.w	r5, [sp, #12]
 80220c2:	dc07      	bgt.n	80220d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 80220c4:	1a69      	subs	r1, r5, r1
 80220c6:	b209      	sxth	r1, r1
 80220c8:	2900      	cmp	r1, #0
 80220ca:	bfb8      	it	lt
 80220cc:	4249      	neglt	r1, r1
 80220ce:	b209      	sxth	r1, r1
 80220d0:	428a      	cmp	r2, r1
 80220d2:	da10      	bge.n	80220f6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80220d4:	6920      	ldr	r0, [r4, #16]
 80220d6:	6803      	ldr	r3, [r0, #0]
 80220d8:	4669      	mov	r1, sp
 80220da:	685b      	ldr	r3, [r3, #4]
 80220dc:	4798      	blx	r3
 80220de:	eba8 0606 	sub.w	r6, r8, r6
 80220e2:	2300      	movs	r3, #0
 80220e4:	1bef      	subs	r7, r5, r7
 80220e6:	2001      	movs	r0, #1
 80220e8:	8123      	strh	r3, [r4, #8]
 80220ea:	8166      	strh	r6, [r4, #10]
 80220ec:	81a7      	strh	r7, [r4, #12]
 80220ee:	f8a4 8004 	strh.w	r8, [r4, #4]
 80220f2:	80e5      	strh	r5, [r4, #6]
 80220f4:	73a0      	strb	r0, [r4, #14]
 80220f6:	b004      	add	sp, #16
 80220f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80220fc:	080253a0 	.word	0x080253a0

08022100 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8022100:	b5f0      	push	{r4, r5, r6, r7, lr}
 8022102:	461e      	mov	r6, r3
 8022104:	1e4b      	subs	r3, r1, #1
 8022106:	2b01      	cmp	r3, #1
 8022108:	b085      	sub	sp, #20
 802210a:	4604      	mov	r4, r0
 802210c:	460d      	mov	r5, r1
 802210e:	4617      	mov	r7, r2
 8022110:	d84b      	bhi.n	80221aa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8022112:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8022116:	1cd3      	adds	r3, r2, #3
 8022118:	b29b      	uxth	r3, r3
 802211a:	2b06      	cmp	r3, #6
 802211c:	d916      	bls.n	802214c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802211e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80221c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8022122:	f8cd c004 	str.w	ip, [sp, #4]
 8022126:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802212a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802212e:	6900      	ldr	r0, [r0, #16]
 8022130:	f8ad 100c 	strh.w	r1, [sp, #12]
 8022134:	f04f 0c00 	mov.w	ip, #0
 8022138:	f88d c008 	strb.w	ip, [sp, #8]
 802213c:	f8ad 200a 	strh.w	r2, [sp, #10]
 8022140:	f8ad 300e 	strh.w	r3, [sp, #14]
 8022144:	6803      	ldr	r3, [r0, #0]
 8022146:	a901      	add	r1, sp, #4
 8022148:	689b      	ldr	r3, [r3, #8]
 802214a:	4798      	blx	r3
 802214c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8022150:	1cd3      	adds	r3, r2, #3
 8022152:	b29b      	uxth	r3, r3
 8022154:	2b06      	cmp	r3, #6
 8022156:	d916      	bls.n	8022186 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8022158:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80221c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802215c:	f8cd c004 	str.w	ip, [sp, #4]
 8022160:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8022164:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8022168:	6920      	ldr	r0, [r4, #16]
 802216a:	f8ad 100c 	strh.w	r1, [sp, #12]
 802216e:	f04f 0c01 	mov.w	ip, #1
 8022172:	f88d c008 	strb.w	ip, [sp, #8]
 8022176:	f8ad 200a 	strh.w	r2, [sp, #10]
 802217a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802217e:	6803      	ldr	r3, [r0, #0]
 8022180:	a901      	add	r1, sp, #4
 8022182:	689b      	ldr	r3, [r3, #8]
 8022184:	4798      	blx	r3
 8022186:	4b0d      	ldr	r3, [pc, #52]	@ (80221bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8022188:	9301      	str	r3, [sp, #4]
 802218a:	6920      	ldr	r0, [r4, #16]
 802218c:	f88d 5008 	strb.w	r5, [sp, #8]
 8022190:	2300      	movs	r3, #0
 8022192:	f8ad 700a 	strh.w	r7, [sp, #10]
 8022196:	f8ad 600c 	strh.w	r6, [sp, #12]
 802219a:	f8ad 300e 	strh.w	r3, [sp, #14]
 802219e:	6803      	ldr	r3, [r0, #0]
 80221a0:	a901      	add	r1, sp, #4
 80221a2:	681b      	ldr	r3, [r3, #0]
 80221a4:	4798      	blx	r3
 80221a6:	b005      	add	sp, #20
 80221a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80221aa:	2900      	cmp	r1, #0
 80221ac:	d1eb      	bne.n	8022186 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80221ae:	80a2      	strh	r2, [r4, #4]
 80221b0:	80c6      	strh	r6, [r0, #6]
 80221b2:	60a1      	str	r1, [r4, #8]
 80221b4:	81a1      	strh	r1, [r4, #12]
 80221b6:	73a1      	strb	r1, [r4, #14]
 80221b8:	e7e5      	b.n	8022186 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80221ba:	bf00      	nop
 80221bc:	0802538c 	.word	0x0802538c
 80221c0:	080253b4 	.word	0x080253b4

080221c4 <__aeabi_atexit>:
 80221c4:	460b      	mov	r3, r1
 80221c6:	4601      	mov	r1, r0
 80221c8:	4618      	mov	r0, r3
 80221ca:	f000 b98f 	b.w	80224ec <__cxa_atexit>

080221ce <_ZdlPvj>:
 80221ce:	f000 b812 	b.w	80221f6 <_ZdlPv>

080221d2 <__cxa_guard_acquire>:
 80221d2:	6802      	ldr	r2, [r0, #0]
 80221d4:	07d2      	lsls	r2, r2, #31
 80221d6:	4603      	mov	r3, r0
 80221d8:	d405      	bmi.n	80221e6 <__cxa_guard_acquire+0x14>
 80221da:	7842      	ldrb	r2, [r0, #1]
 80221dc:	b102      	cbz	r2, 80221e0 <__cxa_guard_acquire+0xe>
 80221de:	deff      	udf	#255	@ 0xff
 80221e0:	2001      	movs	r0, #1
 80221e2:	7058      	strb	r0, [r3, #1]
 80221e4:	4770      	bx	lr
 80221e6:	2000      	movs	r0, #0
 80221e8:	4770      	bx	lr

080221ea <__cxa_guard_release>:
 80221ea:	2301      	movs	r3, #1
 80221ec:	6003      	str	r3, [r0, #0]
 80221ee:	4770      	bx	lr

080221f0 <__cxa_pure_virtual>:
 80221f0:	b508      	push	{r3, lr}
 80221f2:	f000 f80f 	bl	8022214 <_ZSt9terminatev>

080221f6 <_ZdlPv>:
 80221f6:	f000 b8c3 	b.w	8022380 <free>

080221fa <_ZN10__cxxabiv111__terminateEPFvvE>:
 80221fa:	b508      	push	{r3, lr}
 80221fc:	4780      	blx	r0
 80221fe:	f000 f88b 	bl	8022318 <abort>
	...

08022204 <_ZSt13get_terminatev>:
 8022204:	4b02      	ldr	r3, [pc, #8]	@ (8022210 <_ZSt13get_terminatev+0xc>)
 8022206:	6818      	ldr	r0, [r3, #0]
 8022208:	f3bf 8f5b 	dmb	ish
 802220c:	4770      	bx	lr
 802220e:	bf00      	nop
 8022210:	200000a0 	.word	0x200000a0

08022214 <_ZSt9terminatev>:
 8022214:	b508      	push	{r3, lr}
 8022216:	f7ff fff5 	bl	8022204 <_ZSt13get_terminatev>
 802221a:	f7ff ffee 	bl	80221fa <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08022220 <floor>:
 8022220:	ec51 0b10 	vmov	r0, r1, d0
 8022224:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8022228:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802222c:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8022230:	2e13      	cmp	r6, #19
 8022232:	460c      	mov	r4, r1
 8022234:	4605      	mov	r5, r0
 8022236:	4680      	mov	r8, r0
 8022238:	dc34      	bgt.n	80222a4 <floor+0x84>
 802223a:	2e00      	cmp	r6, #0
 802223c:	da17      	bge.n	802226e <floor+0x4e>
 802223e:	a332      	add	r3, pc, #200	@ (adr r3, 8022308 <floor+0xe8>)
 8022240:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022244:	f7de f83a 	bl	80002bc <__adddf3>
 8022248:	2200      	movs	r2, #0
 802224a:	2300      	movs	r3, #0
 802224c:	f7de fc7c 	bl	8000b48 <__aeabi_dcmpgt>
 8022250:	b150      	cbz	r0, 8022268 <floor+0x48>
 8022252:	2c00      	cmp	r4, #0
 8022254:	da55      	bge.n	8022302 <floor+0xe2>
 8022256:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 802225a:	432c      	orrs	r4, r5
 802225c:	2500      	movs	r5, #0
 802225e:	42ac      	cmp	r4, r5
 8022260:	4c2b      	ldr	r4, [pc, #172]	@ (8022310 <floor+0xf0>)
 8022262:	bf08      	it	eq
 8022264:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8022268:	4621      	mov	r1, r4
 802226a:	4628      	mov	r0, r5
 802226c:	e023      	b.n	80222b6 <floor+0x96>
 802226e:	4f29      	ldr	r7, [pc, #164]	@ (8022314 <floor+0xf4>)
 8022270:	4137      	asrs	r7, r6
 8022272:	ea01 0307 	and.w	r3, r1, r7
 8022276:	4303      	orrs	r3, r0
 8022278:	d01d      	beq.n	80222b6 <floor+0x96>
 802227a:	a323      	add	r3, pc, #140	@ (adr r3, 8022308 <floor+0xe8>)
 802227c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8022280:	f7de f81c 	bl	80002bc <__adddf3>
 8022284:	2200      	movs	r2, #0
 8022286:	2300      	movs	r3, #0
 8022288:	f7de fc5e 	bl	8000b48 <__aeabi_dcmpgt>
 802228c:	2800      	cmp	r0, #0
 802228e:	d0eb      	beq.n	8022268 <floor+0x48>
 8022290:	2c00      	cmp	r4, #0
 8022292:	bfbe      	ittt	lt
 8022294:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8022298:	4133      	asrlt	r3, r6
 802229a:	18e4      	addlt	r4, r4, r3
 802229c:	ea24 0407 	bic.w	r4, r4, r7
 80222a0:	2500      	movs	r5, #0
 80222a2:	e7e1      	b.n	8022268 <floor+0x48>
 80222a4:	2e33      	cmp	r6, #51	@ 0x33
 80222a6:	dd0a      	ble.n	80222be <floor+0x9e>
 80222a8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80222ac:	d103      	bne.n	80222b6 <floor+0x96>
 80222ae:	4602      	mov	r2, r0
 80222b0:	460b      	mov	r3, r1
 80222b2:	f7de f803 	bl	80002bc <__adddf3>
 80222b6:	ec41 0b10 	vmov	d0, r0, r1
 80222ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80222be:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 80222c2:	f04f 37ff 	mov.w	r7, #4294967295
 80222c6:	40df      	lsrs	r7, r3
 80222c8:	4207      	tst	r7, r0
 80222ca:	d0f4      	beq.n	80222b6 <floor+0x96>
 80222cc:	a30e      	add	r3, pc, #56	@ (adr r3, 8022308 <floor+0xe8>)
 80222ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 80222d2:	f7dd fff3 	bl	80002bc <__adddf3>
 80222d6:	2200      	movs	r2, #0
 80222d8:	2300      	movs	r3, #0
 80222da:	f7de fc35 	bl	8000b48 <__aeabi_dcmpgt>
 80222de:	2800      	cmp	r0, #0
 80222e0:	d0c2      	beq.n	8022268 <floor+0x48>
 80222e2:	2c00      	cmp	r4, #0
 80222e4:	da0a      	bge.n	80222fc <floor+0xdc>
 80222e6:	2e14      	cmp	r6, #20
 80222e8:	d101      	bne.n	80222ee <floor+0xce>
 80222ea:	3401      	adds	r4, #1
 80222ec:	e006      	b.n	80222fc <floor+0xdc>
 80222ee:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 80222f2:	2301      	movs	r3, #1
 80222f4:	40b3      	lsls	r3, r6
 80222f6:	441d      	add	r5, r3
 80222f8:	4545      	cmp	r5, r8
 80222fa:	d3f6      	bcc.n	80222ea <floor+0xca>
 80222fc:	ea25 0507 	bic.w	r5, r5, r7
 8022300:	e7b2      	b.n	8022268 <floor+0x48>
 8022302:	2500      	movs	r5, #0
 8022304:	462c      	mov	r4, r5
 8022306:	e7af      	b.n	8022268 <floor+0x48>
 8022308:	8800759c 	.word	0x8800759c
 802230c:	7e37e43c 	.word	0x7e37e43c
 8022310:	bff00000 	.word	0xbff00000
 8022314:	000fffff 	.word	0x000fffff

08022318 <abort>:
 8022318:	b508      	push	{r3, lr}
 802231a:	2006      	movs	r0, #6
 802231c:	f000 fa3c 	bl	8022798 <raise>
 8022320:	2001      	movs	r0, #1
 8022322:	f7df fdb7 	bl	8001e94 <_exit>
	...

08022328 <__assert_func>:
 8022328:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802232a:	4614      	mov	r4, r2
 802232c:	461a      	mov	r2, r3
 802232e:	4b09      	ldr	r3, [pc, #36]	@ (8022354 <__assert_func+0x2c>)
 8022330:	681b      	ldr	r3, [r3, #0]
 8022332:	4605      	mov	r5, r0
 8022334:	68d8      	ldr	r0, [r3, #12]
 8022336:	b954      	cbnz	r4, 802234e <__assert_func+0x26>
 8022338:	4b07      	ldr	r3, [pc, #28]	@ (8022358 <__assert_func+0x30>)
 802233a:	461c      	mov	r4, r3
 802233c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022340:	9100      	str	r1, [sp, #0]
 8022342:	462b      	mov	r3, r5
 8022344:	4905      	ldr	r1, [pc, #20]	@ (802235c <__assert_func+0x34>)
 8022346:	f000 f983 	bl	8022650 <fiprintf>
 802234a:	f7ff ffe5 	bl	8022318 <abort>
 802234e:	4b04      	ldr	r3, [pc, #16]	@ (8022360 <__assert_func+0x38>)
 8022350:	e7f4      	b.n	802233c <__assert_func+0x14>
 8022352:	bf00      	nop
 8022354:	200000b0 	.word	0x200000b0
 8022358:	08025723 	.word	0x08025723
 802235c:	080256f5 	.word	0x080256f5
 8022360:	080256e8 	.word	0x080256e8

08022364 <atexit>:
 8022364:	2300      	movs	r3, #0
 8022366:	4601      	mov	r1, r0
 8022368:	461a      	mov	r2, r3
 802236a:	4618      	mov	r0, r3
 802236c:	f000 bac2 	b.w	80228f4 <__register_exitproc>

08022370 <malloc>:
 8022370:	4b02      	ldr	r3, [pc, #8]	@ (802237c <malloc+0xc>)
 8022372:	4601      	mov	r1, r0
 8022374:	6818      	ldr	r0, [r3, #0]
 8022376:	f000 b82d 	b.w	80223d4 <_malloc_r>
 802237a:	bf00      	nop
 802237c:	200000b0 	.word	0x200000b0

08022380 <free>:
 8022380:	4b02      	ldr	r3, [pc, #8]	@ (802238c <free+0xc>)
 8022382:	4601      	mov	r1, r0
 8022384:	6818      	ldr	r0, [r3, #0]
 8022386:	f000 bb11 	b.w	80229ac <_free_r>
 802238a:	bf00      	nop
 802238c:	200000b0 	.word	0x200000b0

08022390 <sbrk_aligned>:
 8022390:	b570      	push	{r4, r5, r6, lr}
 8022392:	4e0f      	ldr	r6, [pc, #60]	@ (80223d0 <sbrk_aligned+0x40>)
 8022394:	460c      	mov	r4, r1
 8022396:	6831      	ldr	r1, [r6, #0]
 8022398:	4605      	mov	r5, r0
 802239a:	b911      	cbnz	r1, 80223a2 <sbrk_aligned+0x12>
 802239c:	f000 fa4c 	bl	8022838 <_sbrk_r>
 80223a0:	6030      	str	r0, [r6, #0]
 80223a2:	4621      	mov	r1, r4
 80223a4:	4628      	mov	r0, r5
 80223a6:	f000 fa47 	bl	8022838 <_sbrk_r>
 80223aa:	1c43      	adds	r3, r0, #1
 80223ac:	d103      	bne.n	80223b6 <sbrk_aligned+0x26>
 80223ae:	f04f 34ff 	mov.w	r4, #4294967295
 80223b2:	4620      	mov	r0, r4
 80223b4:	bd70      	pop	{r4, r5, r6, pc}
 80223b6:	1cc4      	adds	r4, r0, #3
 80223b8:	f024 0403 	bic.w	r4, r4, #3
 80223bc:	42a0      	cmp	r0, r4
 80223be:	d0f8      	beq.n	80223b2 <sbrk_aligned+0x22>
 80223c0:	1a21      	subs	r1, r4, r0
 80223c2:	4628      	mov	r0, r5
 80223c4:	f000 fa38 	bl	8022838 <_sbrk_r>
 80223c8:	3001      	adds	r0, #1
 80223ca:	d1f2      	bne.n	80223b2 <sbrk_aligned+0x22>
 80223cc:	e7ef      	b.n	80223ae <sbrk_aligned+0x1e>
 80223ce:	bf00      	nop
 80223d0:	20003810 	.word	0x20003810

080223d4 <_malloc_r>:
 80223d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80223d8:	1ccd      	adds	r5, r1, #3
 80223da:	f025 0503 	bic.w	r5, r5, #3
 80223de:	3508      	adds	r5, #8
 80223e0:	2d0c      	cmp	r5, #12
 80223e2:	bf38      	it	cc
 80223e4:	250c      	movcc	r5, #12
 80223e6:	2d00      	cmp	r5, #0
 80223e8:	4606      	mov	r6, r0
 80223ea:	db01      	blt.n	80223f0 <_malloc_r+0x1c>
 80223ec:	42a9      	cmp	r1, r5
 80223ee:	d904      	bls.n	80223fa <_malloc_r+0x26>
 80223f0:	230c      	movs	r3, #12
 80223f2:	6033      	str	r3, [r6, #0]
 80223f4:	2000      	movs	r0, #0
 80223f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80223fa:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80224d0 <_malloc_r+0xfc>
 80223fe:	f000 f869 	bl	80224d4 <__malloc_lock>
 8022402:	f8d8 3000 	ldr.w	r3, [r8]
 8022406:	461c      	mov	r4, r3
 8022408:	bb44      	cbnz	r4, 802245c <_malloc_r+0x88>
 802240a:	4629      	mov	r1, r5
 802240c:	4630      	mov	r0, r6
 802240e:	f7ff ffbf 	bl	8022390 <sbrk_aligned>
 8022412:	1c43      	adds	r3, r0, #1
 8022414:	4604      	mov	r4, r0
 8022416:	d158      	bne.n	80224ca <_malloc_r+0xf6>
 8022418:	f8d8 4000 	ldr.w	r4, [r8]
 802241c:	4627      	mov	r7, r4
 802241e:	2f00      	cmp	r7, #0
 8022420:	d143      	bne.n	80224aa <_malloc_r+0xd6>
 8022422:	2c00      	cmp	r4, #0
 8022424:	d04b      	beq.n	80224be <_malloc_r+0xea>
 8022426:	6823      	ldr	r3, [r4, #0]
 8022428:	4639      	mov	r1, r7
 802242a:	4630      	mov	r0, r6
 802242c:	eb04 0903 	add.w	r9, r4, r3
 8022430:	f000 fa02 	bl	8022838 <_sbrk_r>
 8022434:	4581      	cmp	r9, r0
 8022436:	d142      	bne.n	80224be <_malloc_r+0xea>
 8022438:	6821      	ldr	r1, [r4, #0]
 802243a:	1a6d      	subs	r5, r5, r1
 802243c:	4629      	mov	r1, r5
 802243e:	4630      	mov	r0, r6
 8022440:	f7ff ffa6 	bl	8022390 <sbrk_aligned>
 8022444:	3001      	adds	r0, #1
 8022446:	d03a      	beq.n	80224be <_malloc_r+0xea>
 8022448:	6823      	ldr	r3, [r4, #0]
 802244a:	442b      	add	r3, r5
 802244c:	6023      	str	r3, [r4, #0]
 802244e:	f8d8 3000 	ldr.w	r3, [r8]
 8022452:	685a      	ldr	r2, [r3, #4]
 8022454:	bb62      	cbnz	r2, 80224b0 <_malloc_r+0xdc>
 8022456:	f8c8 7000 	str.w	r7, [r8]
 802245a:	e00f      	b.n	802247c <_malloc_r+0xa8>
 802245c:	6822      	ldr	r2, [r4, #0]
 802245e:	1b52      	subs	r2, r2, r5
 8022460:	d420      	bmi.n	80224a4 <_malloc_r+0xd0>
 8022462:	2a0b      	cmp	r2, #11
 8022464:	d917      	bls.n	8022496 <_malloc_r+0xc2>
 8022466:	1961      	adds	r1, r4, r5
 8022468:	42a3      	cmp	r3, r4
 802246a:	6025      	str	r5, [r4, #0]
 802246c:	bf18      	it	ne
 802246e:	6059      	strne	r1, [r3, #4]
 8022470:	6863      	ldr	r3, [r4, #4]
 8022472:	bf08      	it	eq
 8022474:	f8c8 1000 	streq.w	r1, [r8]
 8022478:	5162      	str	r2, [r4, r5]
 802247a:	604b      	str	r3, [r1, #4]
 802247c:	4630      	mov	r0, r6
 802247e:	f000 f82f 	bl	80224e0 <__malloc_unlock>
 8022482:	f104 000b 	add.w	r0, r4, #11
 8022486:	1d23      	adds	r3, r4, #4
 8022488:	f020 0007 	bic.w	r0, r0, #7
 802248c:	1ac2      	subs	r2, r0, r3
 802248e:	bf1c      	itt	ne
 8022490:	1a1b      	subne	r3, r3, r0
 8022492:	50a3      	strne	r3, [r4, r2]
 8022494:	e7af      	b.n	80223f6 <_malloc_r+0x22>
 8022496:	6862      	ldr	r2, [r4, #4]
 8022498:	42a3      	cmp	r3, r4
 802249a:	bf0c      	ite	eq
 802249c:	f8c8 2000 	streq.w	r2, [r8]
 80224a0:	605a      	strne	r2, [r3, #4]
 80224a2:	e7eb      	b.n	802247c <_malloc_r+0xa8>
 80224a4:	4623      	mov	r3, r4
 80224a6:	6864      	ldr	r4, [r4, #4]
 80224a8:	e7ae      	b.n	8022408 <_malloc_r+0x34>
 80224aa:	463c      	mov	r4, r7
 80224ac:	687f      	ldr	r7, [r7, #4]
 80224ae:	e7b6      	b.n	802241e <_malloc_r+0x4a>
 80224b0:	461a      	mov	r2, r3
 80224b2:	685b      	ldr	r3, [r3, #4]
 80224b4:	42a3      	cmp	r3, r4
 80224b6:	d1fb      	bne.n	80224b0 <_malloc_r+0xdc>
 80224b8:	2300      	movs	r3, #0
 80224ba:	6053      	str	r3, [r2, #4]
 80224bc:	e7de      	b.n	802247c <_malloc_r+0xa8>
 80224be:	230c      	movs	r3, #12
 80224c0:	6033      	str	r3, [r6, #0]
 80224c2:	4630      	mov	r0, r6
 80224c4:	f000 f80c 	bl	80224e0 <__malloc_unlock>
 80224c8:	e794      	b.n	80223f4 <_malloc_r+0x20>
 80224ca:	6005      	str	r5, [r0, #0]
 80224cc:	e7d6      	b.n	802247c <_malloc_r+0xa8>
 80224ce:	bf00      	nop
 80224d0:	20003814 	.word	0x20003814

080224d4 <__malloc_lock>:
 80224d4:	4801      	ldr	r0, [pc, #4]	@ (80224dc <__malloc_lock+0x8>)
 80224d6:	f000 b9fc 	b.w	80228d2 <__retarget_lock_acquire_recursive>
 80224da:	bf00      	nop
 80224dc:	20003958 	.word	0x20003958

080224e0 <__malloc_unlock>:
 80224e0:	4801      	ldr	r0, [pc, #4]	@ (80224e8 <__malloc_unlock+0x8>)
 80224e2:	f000 b9f7 	b.w	80228d4 <__retarget_lock_release_recursive>
 80224e6:	bf00      	nop
 80224e8:	20003958 	.word	0x20003958

080224ec <__cxa_atexit>:
 80224ec:	b510      	push	{r4, lr}
 80224ee:	4604      	mov	r4, r0
 80224f0:	4804      	ldr	r0, [pc, #16]	@ (8022504 <__cxa_atexit+0x18>)
 80224f2:	4613      	mov	r3, r2
 80224f4:	b120      	cbz	r0, 8022500 <__cxa_atexit+0x14>
 80224f6:	460a      	mov	r2, r1
 80224f8:	2002      	movs	r0, #2
 80224fa:	4621      	mov	r1, r4
 80224fc:	f000 f9fa 	bl	80228f4 <__register_exitproc>
 8022500:	bd10      	pop	{r4, pc}
 8022502:	bf00      	nop
 8022504:	080228f5 	.word	0x080228f5

08022508 <std>:
 8022508:	2300      	movs	r3, #0
 802250a:	b510      	push	{r4, lr}
 802250c:	4604      	mov	r4, r0
 802250e:	e9c0 3300 	strd	r3, r3, [r0]
 8022512:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8022516:	6083      	str	r3, [r0, #8]
 8022518:	8181      	strh	r1, [r0, #12]
 802251a:	6643      	str	r3, [r0, #100]	@ 0x64
 802251c:	81c2      	strh	r2, [r0, #14]
 802251e:	6183      	str	r3, [r0, #24]
 8022520:	4619      	mov	r1, r3
 8022522:	2208      	movs	r2, #8
 8022524:	305c      	adds	r0, #92	@ 0x5c
 8022526:	f000 f906 	bl	8022736 <memset>
 802252a:	4b0d      	ldr	r3, [pc, #52]	@ (8022560 <std+0x58>)
 802252c:	6263      	str	r3, [r4, #36]	@ 0x24
 802252e:	4b0d      	ldr	r3, [pc, #52]	@ (8022564 <std+0x5c>)
 8022530:	62a3      	str	r3, [r4, #40]	@ 0x28
 8022532:	4b0d      	ldr	r3, [pc, #52]	@ (8022568 <std+0x60>)
 8022534:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8022536:	4b0d      	ldr	r3, [pc, #52]	@ (802256c <std+0x64>)
 8022538:	6323      	str	r3, [r4, #48]	@ 0x30
 802253a:	4b0d      	ldr	r3, [pc, #52]	@ (8022570 <std+0x68>)
 802253c:	6224      	str	r4, [r4, #32]
 802253e:	429c      	cmp	r4, r3
 8022540:	d006      	beq.n	8022550 <std+0x48>
 8022542:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8022546:	4294      	cmp	r4, r2
 8022548:	d002      	beq.n	8022550 <std+0x48>
 802254a:	33d0      	adds	r3, #208	@ 0xd0
 802254c:	429c      	cmp	r4, r3
 802254e:	d105      	bne.n	802255c <std+0x54>
 8022550:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8022554:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022558:	f000 b9ba 	b.w	80228d0 <__retarget_lock_init_recursive>
 802255c:	bd10      	pop	{r4, pc}
 802255e:	bf00      	nop
 8022560:	080226b1 	.word	0x080226b1
 8022564:	080226d3 	.word	0x080226d3
 8022568:	0802270b 	.word	0x0802270b
 802256c:	0802272f 	.word	0x0802272f
 8022570:	20003818 	.word	0x20003818

08022574 <stdio_exit_handler>:
 8022574:	4a02      	ldr	r2, [pc, #8]	@ (8022580 <stdio_exit_handler+0xc>)
 8022576:	4903      	ldr	r1, [pc, #12]	@ (8022584 <stdio_exit_handler+0x10>)
 8022578:	4803      	ldr	r0, [pc, #12]	@ (8022588 <stdio_exit_handler+0x14>)
 802257a:	f000 b87b 	b.w	8022674 <_fwalk_sglue>
 802257e:	bf00      	nop
 8022580:	200000a4 	.word	0x200000a4
 8022584:	080230e9 	.word	0x080230e9
 8022588:	200000b4 	.word	0x200000b4

0802258c <cleanup_stdio>:
 802258c:	6841      	ldr	r1, [r0, #4]
 802258e:	4b0c      	ldr	r3, [pc, #48]	@ (80225c0 <cleanup_stdio+0x34>)
 8022590:	4299      	cmp	r1, r3
 8022592:	b510      	push	{r4, lr}
 8022594:	4604      	mov	r4, r0
 8022596:	d001      	beq.n	802259c <cleanup_stdio+0x10>
 8022598:	f000 fda6 	bl	80230e8 <_fflush_r>
 802259c:	68a1      	ldr	r1, [r4, #8]
 802259e:	4b09      	ldr	r3, [pc, #36]	@ (80225c4 <cleanup_stdio+0x38>)
 80225a0:	4299      	cmp	r1, r3
 80225a2:	d002      	beq.n	80225aa <cleanup_stdio+0x1e>
 80225a4:	4620      	mov	r0, r4
 80225a6:	f000 fd9f 	bl	80230e8 <_fflush_r>
 80225aa:	68e1      	ldr	r1, [r4, #12]
 80225ac:	4b06      	ldr	r3, [pc, #24]	@ (80225c8 <cleanup_stdio+0x3c>)
 80225ae:	4299      	cmp	r1, r3
 80225b0:	d004      	beq.n	80225bc <cleanup_stdio+0x30>
 80225b2:	4620      	mov	r0, r4
 80225b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80225b8:	f000 bd96 	b.w	80230e8 <_fflush_r>
 80225bc:	bd10      	pop	{r4, pc}
 80225be:	bf00      	nop
 80225c0:	20003818 	.word	0x20003818
 80225c4:	20003880 	.word	0x20003880
 80225c8:	200038e8 	.word	0x200038e8

080225cc <global_stdio_init.part.0>:
 80225cc:	b510      	push	{r4, lr}
 80225ce:	4b0b      	ldr	r3, [pc, #44]	@ (80225fc <global_stdio_init.part.0+0x30>)
 80225d0:	4c0b      	ldr	r4, [pc, #44]	@ (8022600 <global_stdio_init.part.0+0x34>)
 80225d2:	4a0c      	ldr	r2, [pc, #48]	@ (8022604 <global_stdio_init.part.0+0x38>)
 80225d4:	601a      	str	r2, [r3, #0]
 80225d6:	4620      	mov	r0, r4
 80225d8:	2200      	movs	r2, #0
 80225da:	2104      	movs	r1, #4
 80225dc:	f7ff ff94 	bl	8022508 <std>
 80225e0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80225e4:	2201      	movs	r2, #1
 80225e6:	2109      	movs	r1, #9
 80225e8:	f7ff ff8e 	bl	8022508 <std>
 80225ec:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80225f0:	2202      	movs	r2, #2
 80225f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80225f6:	2112      	movs	r1, #18
 80225f8:	f7ff bf86 	b.w	8022508 <std>
 80225fc:	20003950 	.word	0x20003950
 8022600:	20003818 	.word	0x20003818
 8022604:	08022575 	.word	0x08022575

08022608 <__sfp_lock_acquire>:
 8022608:	4801      	ldr	r0, [pc, #4]	@ (8022610 <__sfp_lock_acquire+0x8>)
 802260a:	f000 b962 	b.w	80228d2 <__retarget_lock_acquire_recursive>
 802260e:	bf00      	nop
 8022610:	2000395a 	.word	0x2000395a

08022614 <__sfp_lock_release>:
 8022614:	4801      	ldr	r0, [pc, #4]	@ (802261c <__sfp_lock_release+0x8>)
 8022616:	f000 b95d 	b.w	80228d4 <__retarget_lock_release_recursive>
 802261a:	bf00      	nop
 802261c:	2000395a 	.word	0x2000395a

08022620 <__sinit>:
 8022620:	b510      	push	{r4, lr}
 8022622:	4604      	mov	r4, r0
 8022624:	f7ff fff0 	bl	8022608 <__sfp_lock_acquire>
 8022628:	6a23      	ldr	r3, [r4, #32]
 802262a:	b11b      	cbz	r3, 8022634 <__sinit+0x14>
 802262c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8022630:	f7ff bff0 	b.w	8022614 <__sfp_lock_release>
 8022634:	4b04      	ldr	r3, [pc, #16]	@ (8022648 <__sinit+0x28>)
 8022636:	6223      	str	r3, [r4, #32]
 8022638:	4b04      	ldr	r3, [pc, #16]	@ (802264c <__sinit+0x2c>)
 802263a:	681b      	ldr	r3, [r3, #0]
 802263c:	2b00      	cmp	r3, #0
 802263e:	d1f5      	bne.n	802262c <__sinit+0xc>
 8022640:	f7ff ffc4 	bl	80225cc <global_stdio_init.part.0>
 8022644:	e7f2      	b.n	802262c <__sinit+0xc>
 8022646:	bf00      	nop
 8022648:	0802258d 	.word	0x0802258d
 802264c:	20003950 	.word	0x20003950

08022650 <fiprintf>:
 8022650:	b40e      	push	{r1, r2, r3}
 8022652:	b503      	push	{r0, r1, lr}
 8022654:	4601      	mov	r1, r0
 8022656:	ab03      	add	r3, sp, #12
 8022658:	4805      	ldr	r0, [pc, #20]	@ (8022670 <fiprintf+0x20>)
 802265a:	f853 2b04 	ldr.w	r2, [r3], #4
 802265e:	6800      	ldr	r0, [r0, #0]
 8022660:	9301      	str	r3, [sp, #4]
 8022662:	f000 fa17 	bl	8022a94 <_vfiprintf_r>
 8022666:	b002      	add	sp, #8
 8022668:	f85d eb04 	ldr.w	lr, [sp], #4
 802266c:	b003      	add	sp, #12
 802266e:	4770      	bx	lr
 8022670:	200000b0 	.word	0x200000b0

08022674 <_fwalk_sglue>:
 8022674:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8022678:	4607      	mov	r7, r0
 802267a:	4688      	mov	r8, r1
 802267c:	4614      	mov	r4, r2
 802267e:	2600      	movs	r6, #0
 8022680:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8022684:	f1b9 0901 	subs.w	r9, r9, #1
 8022688:	d505      	bpl.n	8022696 <_fwalk_sglue+0x22>
 802268a:	6824      	ldr	r4, [r4, #0]
 802268c:	2c00      	cmp	r4, #0
 802268e:	d1f7      	bne.n	8022680 <_fwalk_sglue+0xc>
 8022690:	4630      	mov	r0, r6
 8022692:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022696:	89ab      	ldrh	r3, [r5, #12]
 8022698:	2b01      	cmp	r3, #1
 802269a:	d907      	bls.n	80226ac <_fwalk_sglue+0x38>
 802269c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80226a0:	3301      	adds	r3, #1
 80226a2:	d003      	beq.n	80226ac <_fwalk_sglue+0x38>
 80226a4:	4629      	mov	r1, r5
 80226a6:	4638      	mov	r0, r7
 80226a8:	47c0      	blx	r8
 80226aa:	4306      	orrs	r6, r0
 80226ac:	3568      	adds	r5, #104	@ 0x68
 80226ae:	e7e9      	b.n	8022684 <_fwalk_sglue+0x10>

080226b0 <__sread>:
 80226b0:	b510      	push	{r4, lr}
 80226b2:	460c      	mov	r4, r1
 80226b4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80226b8:	f000 f898 	bl	80227ec <_read_r>
 80226bc:	2800      	cmp	r0, #0
 80226be:	bfab      	itete	ge
 80226c0:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80226c2:	89a3      	ldrhlt	r3, [r4, #12]
 80226c4:	181b      	addge	r3, r3, r0
 80226c6:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80226ca:	bfac      	ite	ge
 80226cc:	6563      	strge	r3, [r4, #84]	@ 0x54
 80226ce:	81a3      	strhlt	r3, [r4, #12]
 80226d0:	bd10      	pop	{r4, pc}

080226d2 <__swrite>:
 80226d2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80226d6:	461f      	mov	r7, r3
 80226d8:	898b      	ldrh	r3, [r1, #12]
 80226da:	05db      	lsls	r3, r3, #23
 80226dc:	4605      	mov	r5, r0
 80226de:	460c      	mov	r4, r1
 80226e0:	4616      	mov	r6, r2
 80226e2:	d505      	bpl.n	80226f0 <__swrite+0x1e>
 80226e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80226e8:	2302      	movs	r3, #2
 80226ea:	2200      	movs	r2, #0
 80226ec:	f000 f86c 	bl	80227c8 <_lseek_r>
 80226f0:	89a3      	ldrh	r3, [r4, #12]
 80226f2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80226f6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80226fa:	81a3      	strh	r3, [r4, #12]
 80226fc:	4632      	mov	r2, r6
 80226fe:	463b      	mov	r3, r7
 8022700:	4628      	mov	r0, r5
 8022702:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8022706:	f000 b8a7 	b.w	8022858 <_write_r>

0802270a <__sseek>:
 802270a:	b510      	push	{r4, lr}
 802270c:	460c      	mov	r4, r1
 802270e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022712:	f000 f859 	bl	80227c8 <_lseek_r>
 8022716:	1c43      	adds	r3, r0, #1
 8022718:	89a3      	ldrh	r3, [r4, #12]
 802271a:	bf15      	itete	ne
 802271c:	6560      	strne	r0, [r4, #84]	@ 0x54
 802271e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8022722:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8022726:	81a3      	strheq	r3, [r4, #12]
 8022728:	bf18      	it	ne
 802272a:	81a3      	strhne	r3, [r4, #12]
 802272c:	bd10      	pop	{r4, pc}

0802272e <__sclose>:
 802272e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8022732:	f000 b839 	b.w	80227a8 <_close_r>

08022736 <memset>:
 8022736:	4402      	add	r2, r0
 8022738:	4603      	mov	r3, r0
 802273a:	4293      	cmp	r3, r2
 802273c:	d100      	bne.n	8022740 <memset+0xa>
 802273e:	4770      	bx	lr
 8022740:	f803 1b01 	strb.w	r1, [r3], #1
 8022744:	e7f9      	b.n	802273a <memset+0x4>

08022746 <_raise_r>:
 8022746:	291f      	cmp	r1, #31
 8022748:	b538      	push	{r3, r4, r5, lr}
 802274a:	4605      	mov	r5, r0
 802274c:	460c      	mov	r4, r1
 802274e:	d904      	bls.n	802275a <_raise_r+0x14>
 8022750:	2316      	movs	r3, #22
 8022752:	6003      	str	r3, [r0, #0]
 8022754:	f04f 30ff 	mov.w	r0, #4294967295
 8022758:	bd38      	pop	{r3, r4, r5, pc}
 802275a:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 802275c:	b112      	cbz	r2, 8022764 <_raise_r+0x1e>
 802275e:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8022762:	b94b      	cbnz	r3, 8022778 <_raise_r+0x32>
 8022764:	4628      	mov	r0, r5
 8022766:	f000 f865 	bl	8022834 <_getpid_r>
 802276a:	4622      	mov	r2, r4
 802276c:	4601      	mov	r1, r0
 802276e:	4628      	mov	r0, r5
 8022770:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8022774:	f000 b84c 	b.w	8022810 <_kill_r>
 8022778:	2b01      	cmp	r3, #1
 802277a:	d00a      	beq.n	8022792 <_raise_r+0x4c>
 802277c:	1c59      	adds	r1, r3, #1
 802277e:	d103      	bne.n	8022788 <_raise_r+0x42>
 8022780:	2316      	movs	r3, #22
 8022782:	6003      	str	r3, [r0, #0]
 8022784:	2001      	movs	r0, #1
 8022786:	e7e7      	b.n	8022758 <_raise_r+0x12>
 8022788:	2100      	movs	r1, #0
 802278a:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 802278e:	4620      	mov	r0, r4
 8022790:	4798      	blx	r3
 8022792:	2000      	movs	r0, #0
 8022794:	e7e0      	b.n	8022758 <_raise_r+0x12>
	...

08022798 <raise>:
 8022798:	4b02      	ldr	r3, [pc, #8]	@ (80227a4 <raise+0xc>)
 802279a:	4601      	mov	r1, r0
 802279c:	6818      	ldr	r0, [r3, #0]
 802279e:	f7ff bfd2 	b.w	8022746 <_raise_r>
 80227a2:	bf00      	nop
 80227a4:	200000b0 	.word	0x200000b0

080227a8 <_close_r>:
 80227a8:	b538      	push	{r3, r4, r5, lr}
 80227aa:	4d06      	ldr	r5, [pc, #24]	@ (80227c4 <_close_r+0x1c>)
 80227ac:	2300      	movs	r3, #0
 80227ae:	4604      	mov	r4, r0
 80227b0:	4608      	mov	r0, r1
 80227b2:	602b      	str	r3, [r5, #0]
 80227b4:	f7df fbb2 	bl	8001f1c <_close>
 80227b8:	1c43      	adds	r3, r0, #1
 80227ba:	d102      	bne.n	80227c2 <_close_r+0x1a>
 80227bc:	682b      	ldr	r3, [r5, #0]
 80227be:	b103      	cbz	r3, 80227c2 <_close_r+0x1a>
 80227c0:	6023      	str	r3, [r4, #0]
 80227c2:	bd38      	pop	{r3, r4, r5, pc}
 80227c4:	20003954 	.word	0x20003954

080227c8 <_lseek_r>:
 80227c8:	b538      	push	{r3, r4, r5, lr}
 80227ca:	4d07      	ldr	r5, [pc, #28]	@ (80227e8 <_lseek_r+0x20>)
 80227cc:	4604      	mov	r4, r0
 80227ce:	4608      	mov	r0, r1
 80227d0:	4611      	mov	r1, r2
 80227d2:	2200      	movs	r2, #0
 80227d4:	602a      	str	r2, [r5, #0]
 80227d6:	461a      	mov	r2, r3
 80227d8:	f7df fbc7 	bl	8001f6a <_lseek>
 80227dc:	1c43      	adds	r3, r0, #1
 80227de:	d102      	bne.n	80227e6 <_lseek_r+0x1e>
 80227e0:	682b      	ldr	r3, [r5, #0]
 80227e2:	b103      	cbz	r3, 80227e6 <_lseek_r+0x1e>
 80227e4:	6023      	str	r3, [r4, #0]
 80227e6:	bd38      	pop	{r3, r4, r5, pc}
 80227e8:	20003954 	.word	0x20003954

080227ec <_read_r>:
 80227ec:	b538      	push	{r3, r4, r5, lr}
 80227ee:	4d07      	ldr	r5, [pc, #28]	@ (802280c <_read_r+0x20>)
 80227f0:	4604      	mov	r4, r0
 80227f2:	4608      	mov	r0, r1
 80227f4:	4611      	mov	r1, r2
 80227f6:	2200      	movs	r2, #0
 80227f8:	602a      	str	r2, [r5, #0]
 80227fa:	461a      	mov	r2, r3
 80227fc:	f7df fb55 	bl	8001eaa <_read>
 8022800:	1c43      	adds	r3, r0, #1
 8022802:	d102      	bne.n	802280a <_read_r+0x1e>
 8022804:	682b      	ldr	r3, [r5, #0]
 8022806:	b103      	cbz	r3, 802280a <_read_r+0x1e>
 8022808:	6023      	str	r3, [r4, #0]
 802280a:	bd38      	pop	{r3, r4, r5, pc}
 802280c:	20003954 	.word	0x20003954

08022810 <_kill_r>:
 8022810:	b538      	push	{r3, r4, r5, lr}
 8022812:	4d07      	ldr	r5, [pc, #28]	@ (8022830 <_kill_r+0x20>)
 8022814:	2300      	movs	r3, #0
 8022816:	4604      	mov	r4, r0
 8022818:	4608      	mov	r0, r1
 802281a:	4611      	mov	r1, r2
 802281c:	602b      	str	r3, [r5, #0]
 802281e:	f7df fb29 	bl	8001e74 <_kill>
 8022822:	1c43      	adds	r3, r0, #1
 8022824:	d102      	bne.n	802282c <_kill_r+0x1c>
 8022826:	682b      	ldr	r3, [r5, #0]
 8022828:	b103      	cbz	r3, 802282c <_kill_r+0x1c>
 802282a:	6023      	str	r3, [r4, #0]
 802282c:	bd38      	pop	{r3, r4, r5, pc}
 802282e:	bf00      	nop
 8022830:	20003954 	.word	0x20003954

08022834 <_getpid_r>:
 8022834:	f7df bb16 	b.w	8001e64 <_getpid>

08022838 <_sbrk_r>:
 8022838:	b538      	push	{r3, r4, r5, lr}
 802283a:	4d06      	ldr	r5, [pc, #24]	@ (8022854 <_sbrk_r+0x1c>)
 802283c:	2300      	movs	r3, #0
 802283e:	4604      	mov	r4, r0
 8022840:	4608      	mov	r0, r1
 8022842:	602b      	str	r3, [r5, #0]
 8022844:	f7df fb9e 	bl	8001f84 <_sbrk>
 8022848:	1c43      	adds	r3, r0, #1
 802284a:	d102      	bne.n	8022852 <_sbrk_r+0x1a>
 802284c:	682b      	ldr	r3, [r5, #0]
 802284e:	b103      	cbz	r3, 8022852 <_sbrk_r+0x1a>
 8022850:	6023      	str	r3, [r4, #0]
 8022852:	bd38      	pop	{r3, r4, r5, pc}
 8022854:	20003954 	.word	0x20003954

08022858 <_write_r>:
 8022858:	b538      	push	{r3, r4, r5, lr}
 802285a:	4d07      	ldr	r5, [pc, #28]	@ (8022878 <_write_r+0x20>)
 802285c:	4604      	mov	r4, r0
 802285e:	4608      	mov	r0, r1
 8022860:	4611      	mov	r1, r2
 8022862:	2200      	movs	r2, #0
 8022864:	602a      	str	r2, [r5, #0]
 8022866:	461a      	mov	r2, r3
 8022868:	f7df fb3c 	bl	8001ee4 <_write>
 802286c:	1c43      	adds	r3, r0, #1
 802286e:	d102      	bne.n	8022876 <_write_r+0x1e>
 8022870:	682b      	ldr	r3, [r5, #0]
 8022872:	b103      	cbz	r3, 8022876 <_write_r+0x1e>
 8022874:	6023      	str	r3, [r4, #0]
 8022876:	bd38      	pop	{r3, r4, r5, pc}
 8022878:	20003954 	.word	0x20003954

0802287c <__errno>:
 802287c:	4b01      	ldr	r3, [pc, #4]	@ (8022884 <__errno+0x8>)
 802287e:	6818      	ldr	r0, [r3, #0]
 8022880:	4770      	bx	lr
 8022882:	bf00      	nop
 8022884:	200000b0 	.word	0x200000b0

08022888 <__libc_init_array>:
 8022888:	b570      	push	{r4, r5, r6, lr}
 802288a:	4d0d      	ldr	r5, [pc, #52]	@ (80228c0 <__libc_init_array+0x38>)
 802288c:	4c0d      	ldr	r4, [pc, #52]	@ (80228c4 <__libc_init_array+0x3c>)
 802288e:	1b64      	subs	r4, r4, r5
 8022890:	10a4      	asrs	r4, r4, #2
 8022892:	2600      	movs	r6, #0
 8022894:	42a6      	cmp	r6, r4
 8022896:	d109      	bne.n	80228ac <__libc_init_array+0x24>
 8022898:	4d0b      	ldr	r5, [pc, #44]	@ (80228c8 <__libc_init_array+0x40>)
 802289a:	4c0c      	ldr	r4, [pc, #48]	@ (80228cc <__libc_init_array+0x44>)
 802289c:	f000 fd64 	bl	8023368 <_init>
 80228a0:	1b64      	subs	r4, r4, r5
 80228a2:	10a4      	asrs	r4, r4, #2
 80228a4:	2600      	movs	r6, #0
 80228a6:	42a6      	cmp	r6, r4
 80228a8:	d105      	bne.n	80228b6 <__libc_init_array+0x2e>
 80228aa:	bd70      	pop	{r4, r5, r6, pc}
 80228ac:	f855 3b04 	ldr.w	r3, [r5], #4
 80228b0:	4798      	blx	r3
 80228b2:	3601      	adds	r6, #1
 80228b4:	e7ee      	b.n	8022894 <__libc_init_array+0xc>
 80228b6:	f855 3b04 	ldr.w	r3, [r5], #4
 80228ba:	4798      	blx	r3
 80228bc:	3601      	adds	r6, #1
 80228be:	e7f2      	b.n	80228a6 <__libc_init_array+0x1e>
 80228c0:	0806ed14 	.word	0x0806ed14
 80228c4:	0806ed14 	.word	0x0806ed14
 80228c8:	0806ed14 	.word	0x0806ed14
 80228cc:	0806ed2c 	.word	0x0806ed2c

080228d0 <__retarget_lock_init_recursive>:
 80228d0:	4770      	bx	lr

080228d2 <__retarget_lock_acquire_recursive>:
 80228d2:	4770      	bx	lr

080228d4 <__retarget_lock_release_recursive>:
 80228d4:	4770      	bx	lr

080228d6 <memcpy>:
 80228d6:	440a      	add	r2, r1
 80228d8:	4291      	cmp	r1, r2
 80228da:	f100 33ff 	add.w	r3, r0, #4294967295
 80228de:	d100      	bne.n	80228e2 <memcpy+0xc>
 80228e0:	4770      	bx	lr
 80228e2:	b510      	push	{r4, lr}
 80228e4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80228e8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80228ec:	4291      	cmp	r1, r2
 80228ee:	d1f9      	bne.n	80228e4 <memcpy+0xe>
 80228f0:	bd10      	pop	{r4, pc}
	...

080228f4 <__register_exitproc>:
 80228f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80228f8:	4d27      	ldr	r5, [pc, #156]	@ (8022998 <__register_exitproc+0xa4>)
 80228fa:	4607      	mov	r7, r0
 80228fc:	6828      	ldr	r0, [r5, #0]
 80228fe:	4691      	mov	r9, r2
 8022900:	460e      	mov	r6, r1
 8022902:	4698      	mov	r8, r3
 8022904:	f7ff ffe5 	bl	80228d2 <__retarget_lock_acquire_recursive>
 8022908:	4a24      	ldr	r2, [pc, #144]	@ (802299c <__register_exitproc+0xa8>)
 802290a:	6814      	ldr	r4, [r2, #0]
 802290c:	b93c      	cbnz	r4, 802291e <__register_exitproc+0x2a>
 802290e:	4b24      	ldr	r3, [pc, #144]	@ (80229a0 <__register_exitproc+0xac>)
 8022910:	6013      	str	r3, [r2, #0]
 8022912:	4a24      	ldr	r2, [pc, #144]	@ (80229a4 <__register_exitproc+0xb0>)
 8022914:	b112      	cbz	r2, 802291c <__register_exitproc+0x28>
 8022916:	6812      	ldr	r2, [r2, #0]
 8022918:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802291c:	4c20      	ldr	r4, [pc, #128]	@ (80229a0 <__register_exitproc+0xac>)
 802291e:	6863      	ldr	r3, [r4, #4]
 8022920:	2b1f      	cmp	r3, #31
 8022922:	dd06      	ble.n	8022932 <__register_exitproc+0x3e>
 8022924:	6828      	ldr	r0, [r5, #0]
 8022926:	f7ff ffd5 	bl	80228d4 <__retarget_lock_release_recursive>
 802292a:	f04f 30ff 	mov.w	r0, #4294967295
 802292e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8022932:	b32f      	cbz	r7, 8022980 <__register_exitproc+0x8c>
 8022934:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8022938:	b968      	cbnz	r0, 8022956 <__register_exitproc+0x62>
 802293a:	4b1b      	ldr	r3, [pc, #108]	@ (80229a8 <__register_exitproc+0xb4>)
 802293c:	2b00      	cmp	r3, #0
 802293e:	d0f1      	beq.n	8022924 <__register_exitproc+0x30>
 8022940:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8022944:	f7ff fd14 	bl	8022370 <malloc>
 8022948:	2800      	cmp	r0, #0
 802294a:	d0eb      	beq.n	8022924 <__register_exitproc+0x30>
 802294c:	2300      	movs	r3, #0
 802294e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 8022952:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8022956:	6863      	ldr	r3, [r4, #4]
 8022958:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802295c:	2201      	movs	r2, #1
 802295e:	409a      	lsls	r2, r3
 8022960:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8022964:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8022968:	4313      	orrs	r3, r2
 802296a:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802296e:	2f02      	cmp	r7, #2
 8022970:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8022974:	bf02      	ittt	eq
 8022976:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 802297a:	4313      	orreq	r3, r2
 802297c:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 8022980:	6863      	ldr	r3, [r4, #4]
 8022982:	6828      	ldr	r0, [r5, #0]
 8022984:	1c5a      	adds	r2, r3, #1
 8022986:	3302      	adds	r3, #2
 8022988:	6062      	str	r2, [r4, #4]
 802298a:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802298e:	f7ff ffa1 	bl	80228d4 <__retarget_lock_release_recursive>
 8022992:	2000      	movs	r0, #0
 8022994:	e7cb      	b.n	802292e <__register_exitproc+0x3a>
 8022996:	bf00      	nop
 8022998:	20000100 	.word	0x20000100
 802299c:	200039e8 	.word	0x200039e8
 80229a0:	2000395c 	.word	0x2000395c
 80229a4:	08025724 	.word	0x08025724
 80229a8:	08022371 	.word	0x08022371

080229ac <_free_r>:
 80229ac:	b538      	push	{r3, r4, r5, lr}
 80229ae:	4605      	mov	r5, r0
 80229b0:	2900      	cmp	r1, #0
 80229b2:	d041      	beq.n	8022a38 <_free_r+0x8c>
 80229b4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80229b8:	1f0c      	subs	r4, r1, #4
 80229ba:	2b00      	cmp	r3, #0
 80229bc:	bfb8      	it	lt
 80229be:	18e4      	addlt	r4, r4, r3
 80229c0:	f7ff fd88 	bl	80224d4 <__malloc_lock>
 80229c4:	4a1d      	ldr	r2, [pc, #116]	@ (8022a3c <_free_r+0x90>)
 80229c6:	6813      	ldr	r3, [r2, #0]
 80229c8:	b933      	cbnz	r3, 80229d8 <_free_r+0x2c>
 80229ca:	6063      	str	r3, [r4, #4]
 80229cc:	6014      	str	r4, [r2, #0]
 80229ce:	4628      	mov	r0, r5
 80229d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80229d4:	f7ff bd84 	b.w	80224e0 <__malloc_unlock>
 80229d8:	42a3      	cmp	r3, r4
 80229da:	d908      	bls.n	80229ee <_free_r+0x42>
 80229dc:	6820      	ldr	r0, [r4, #0]
 80229de:	1821      	adds	r1, r4, r0
 80229e0:	428b      	cmp	r3, r1
 80229e2:	bf01      	itttt	eq
 80229e4:	6819      	ldreq	r1, [r3, #0]
 80229e6:	685b      	ldreq	r3, [r3, #4]
 80229e8:	1809      	addeq	r1, r1, r0
 80229ea:	6021      	streq	r1, [r4, #0]
 80229ec:	e7ed      	b.n	80229ca <_free_r+0x1e>
 80229ee:	461a      	mov	r2, r3
 80229f0:	685b      	ldr	r3, [r3, #4]
 80229f2:	b10b      	cbz	r3, 80229f8 <_free_r+0x4c>
 80229f4:	42a3      	cmp	r3, r4
 80229f6:	d9fa      	bls.n	80229ee <_free_r+0x42>
 80229f8:	6811      	ldr	r1, [r2, #0]
 80229fa:	1850      	adds	r0, r2, r1
 80229fc:	42a0      	cmp	r0, r4
 80229fe:	d10b      	bne.n	8022a18 <_free_r+0x6c>
 8022a00:	6820      	ldr	r0, [r4, #0]
 8022a02:	4401      	add	r1, r0
 8022a04:	1850      	adds	r0, r2, r1
 8022a06:	4283      	cmp	r3, r0
 8022a08:	6011      	str	r1, [r2, #0]
 8022a0a:	d1e0      	bne.n	80229ce <_free_r+0x22>
 8022a0c:	6818      	ldr	r0, [r3, #0]
 8022a0e:	685b      	ldr	r3, [r3, #4]
 8022a10:	6053      	str	r3, [r2, #4]
 8022a12:	4408      	add	r0, r1
 8022a14:	6010      	str	r0, [r2, #0]
 8022a16:	e7da      	b.n	80229ce <_free_r+0x22>
 8022a18:	d902      	bls.n	8022a20 <_free_r+0x74>
 8022a1a:	230c      	movs	r3, #12
 8022a1c:	602b      	str	r3, [r5, #0]
 8022a1e:	e7d6      	b.n	80229ce <_free_r+0x22>
 8022a20:	6820      	ldr	r0, [r4, #0]
 8022a22:	1821      	adds	r1, r4, r0
 8022a24:	428b      	cmp	r3, r1
 8022a26:	bf04      	itt	eq
 8022a28:	6819      	ldreq	r1, [r3, #0]
 8022a2a:	685b      	ldreq	r3, [r3, #4]
 8022a2c:	6063      	str	r3, [r4, #4]
 8022a2e:	bf04      	itt	eq
 8022a30:	1809      	addeq	r1, r1, r0
 8022a32:	6021      	streq	r1, [r4, #0]
 8022a34:	6054      	str	r4, [r2, #4]
 8022a36:	e7ca      	b.n	80229ce <_free_r+0x22>
 8022a38:	bd38      	pop	{r3, r4, r5, pc}
 8022a3a:	bf00      	nop
 8022a3c:	20003814 	.word	0x20003814

08022a40 <__sfputc_r>:
 8022a40:	6893      	ldr	r3, [r2, #8]
 8022a42:	3b01      	subs	r3, #1
 8022a44:	2b00      	cmp	r3, #0
 8022a46:	b410      	push	{r4}
 8022a48:	6093      	str	r3, [r2, #8]
 8022a4a:	da08      	bge.n	8022a5e <__sfputc_r+0x1e>
 8022a4c:	6994      	ldr	r4, [r2, #24]
 8022a4e:	42a3      	cmp	r3, r4
 8022a50:	db01      	blt.n	8022a56 <__sfputc_r+0x16>
 8022a52:	290a      	cmp	r1, #10
 8022a54:	d103      	bne.n	8022a5e <__sfputc_r+0x1e>
 8022a56:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022a5a:	f000 bb6d 	b.w	8023138 <__swbuf_r>
 8022a5e:	6813      	ldr	r3, [r2, #0]
 8022a60:	1c58      	adds	r0, r3, #1
 8022a62:	6010      	str	r0, [r2, #0]
 8022a64:	7019      	strb	r1, [r3, #0]
 8022a66:	4608      	mov	r0, r1
 8022a68:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022a6c:	4770      	bx	lr

08022a6e <__sfputs_r>:
 8022a6e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022a70:	4606      	mov	r6, r0
 8022a72:	460f      	mov	r7, r1
 8022a74:	4614      	mov	r4, r2
 8022a76:	18d5      	adds	r5, r2, r3
 8022a78:	42ac      	cmp	r4, r5
 8022a7a:	d101      	bne.n	8022a80 <__sfputs_r+0x12>
 8022a7c:	2000      	movs	r0, #0
 8022a7e:	e007      	b.n	8022a90 <__sfputs_r+0x22>
 8022a80:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022a84:	463a      	mov	r2, r7
 8022a86:	4630      	mov	r0, r6
 8022a88:	f7ff ffda 	bl	8022a40 <__sfputc_r>
 8022a8c:	1c43      	adds	r3, r0, #1
 8022a8e:	d1f3      	bne.n	8022a78 <__sfputs_r+0xa>
 8022a90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08022a94 <_vfiprintf_r>:
 8022a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022a98:	460d      	mov	r5, r1
 8022a9a:	b09d      	sub	sp, #116	@ 0x74
 8022a9c:	4614      	mov	r4, r2
 8022a9e:	4698      	mov	r8, r3
 8022aa0:	4606      	mov	r6, r0
 8022aa2:	b118      	cbz	r0, 8022aac <_vfiprintf_r+0x18>
 8022aa4:	6a03      	ldr	r3, [r0, #32]
 8022aa6:	b90b      	cbnz	r3, 8022aac <_vfiprintf_r+0x18>
 8022aa8:	f7ff fdba 	bl	8022620 <__sinit>
 8022aac:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022aae:	07d9      	lsls	r1, r3, #31
 8022ab0:	d405      	bmi.n	8022abe <_vfiprintf_r+0x2a>
 8022ab2:	89ab      	ldrh	r3, [r5, #12]
 8022ab4:	059a      	lsls	r2, r3, #22
 8022ab6:	d402      	bmi.n	8022abe <_vfiprintf_r+0x2a>
 8022ab8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022aba:	f7ff ff0a 	bl	80228d2 <__retarget_lock_acquire_recursive>
 8022abe:	89ab      	ldrh	r3, [r5, #12]
 8022ac0:	071b      	lsls	r3, r3, #28
 8022ac2:	d501      	bpl.n	8022ac8 <_vfiprintf_r+0x34>
 8022ac4:	692b      	ldr	r3, [r5, #16]
 8022ac6:	b99b      	cbnz	r3, 8022af0 <_vfiprintf_r+0x5c>
 8022ac8:	4629      	mov	r1, r5
 8022aca:	4630      	mov	r0, r6
 8022acc:	f000 fb72 	bl	80231b4 <__swsetup_r>
 8022ad0:	b170      	cbz	r0, 8022af0 <_vfiprintf_r+0x5c>
 8022ad2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022ad4:	07dc      	lsls	r4, r3, #31
 8022ad6:	d504      	bpl.n	8022ae2 <_vfiprintf_r+0x4e>
 8022ad8:	f04f 30ff 	mov.w	r0, #4294967295
 8022adc:	b01d      	add	sp, #116	@ 0x74
 8022ade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ae2:	89ab      	ldrh	r3, [r5, #12]
 8022ae4:	0598      	lsls	r0, r3, #22
 8022ae6:	d4f7      	bmi.n	8022ad8 <_vfiprintf_r+0x44>
 8022ae8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022aea:	f7ff fef3 	bl	80228d4 <__retarget_lock_release_recursive>
 8022aee:	e7f3      	b.n	8022ad8 <_vfiprintf_r+0x44>
 8022af0:	2300      	movs	r3, #0
 8022af2:	9309      	str	r3, [sp, #36]	@ 0x24
 8022af4:	2320      	movs	r3, #32
 8022af6:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8022afa:	f8cd 800c 	str.w	r8, [sp, #12]
 8022afe:	2330      	movs	r3, #48	@ 0x30
 8022b00:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8022cb0 <_vfiprintf_r+0x21c>
 8022b04:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8022b08:	f04f 0901 	mov.w	r9, #1
 8022b0c:	4623      	mov	r3, r4
 8022b0e:	469a      	mov	sl, r3
 8022b10:	f813 2b01 	ldrb.w	r2, [r3], #1
 8022b14:	b10a      	cbz	r2, 8022b1a <_vfiprintf_r+0x86>
 8022b16:	2a25      	cmp	r2, #37	@ 0x25
 8022b18:	d1f9      	bne.n	8022b0e <_vfiprintf_r+0x7a>
 8022b1a:	ebba 0b04 	subs.w	fp, sl, r4
 8022b1e:	d00b      	beq.n	8022b38 <_vfiprintf_r+0xa4>
 8022b20:	465b      	mov	r3, fp
 8022b22:	4622      	mov	r2, r4
 8022b24:	4629      	mov	r1, r5
 8022b26:	4630      	mov	r0, r6
 8022b28:	f7ff ffa1 	bl	8022a6e <__sfputs_r>
 8022b2c:	3001      	adds	r0, #1
 8022b2e:	f000 80a7 	beq.w	8022c80 <_vfiprintf_r+0x1ec>
 8022b32:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022b34:	445a      	add	r2, fp
 8022b36:	9209      	str	r2, [sp, #36]	@ 0x24
 8022b38:	f89a 3000 	ldrb.w	r3, [sl]
 8022b3c:	2b00      	cmp	r3, #0
 8022b3e:	f000 809f 	beq.w	8022c80 <_vfiprintf_r+0x1ec>
 8022b42:	2300      	movs	r3, #0
 8022b44:	f04f 32ff 	mov.w	r2, #4294967295
 8022b48:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8022b4c:	f10a 0a01 	add.w	sl, sl, #1
 8022b50:	9304      	str	r3, [sp, #16]
 8022b52:	9307      	str	r3, [sp, #28]
 8022b54:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8022b58:	931a      	str	r3, [sp, #104]	@ 0x68
 8022b5a:	4654      	mov	r4, sl
 8022b5c:	2205      	movs	r2, #5
 8022b5e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022b62:	4853      	ldr	r0, [pc, #332]	@ (8022cb0 <_vfiprintf_r+0x21c>)
 8022b64:	f7dd fb54 	bl	8000210 <memchr>
 8022b68:	9a04      	ldr	r2, [sp, #16]
 8022b6a:	b9d8      	cbnz	r0, 8022ba4 <_vfiprintf_r+0x110>
 8022b6c:	06d1      	lsls	r1, r2, #27
 8022b6e:	bf44      	itt	mi
 8022b70:	2320      	movmi	r3, #32
 8022b72:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022b76:	0713      	lsls	r3, r2, #28
 8022b78:	bf44      	itt	mi
 8022b7a:	232b      	movmi	r3, #43	@ 0x2b
 8022b7c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8022b80:	f89a 3000 	ldrb.w	r3, [sl]
 8022b84:	2b2a      	cmp	r3, #42	@ 0x2a
 8022b86:	d015      	beq.n	8022bb4 <_vfiprintf_r+0x120>
 8022b88:	9a07      	ldr	r2, [sp, #28]
 8022b8a:	4654      	mov	r4, sl
 8022b8c:	2000      	movs	r0, #0
 8022b8e:	f04f 0c0a 	mov.w	ip, #10
 8022b92:	4621      	mov	r1, r4
 8022b94:	f811 3b01 	ldrb.w	r3, [r1], #1
 8022b98:	3b30      	subs	r3, #48	@ 0x30
 8022b9a:	2b09      	cmp	r3, #9
 8022b9c:	d94b      	bls.n	8022c36 <_vfiprintf_r+0x1a2>
 8022b9e:	b1b0      	cbz	r0, 8022bce <_vfiprintf_r+0x13a>
 8022ba0:	9207      	str	r2, [sp, #28]
 8022ba2:	e014      	b.n	8022bce <_vfiprintf_r+0x13a>
 8022ba4:	eba0 0308 	sub.w	r3, r0, r8
 8022ba8:	fa09 f303 	lsl.w	r3, r9, r3
 8022bac:	4313      	orrs	r3, r2
 8022bae:	9304      	str	r3, [sp, #16]
 8022bb0:	46a2      	mov	sl, r4
 8022bb2:	e7d2      	b.n	8022b5a <_vfiprintf_r+0xc6>
 8022bb4:	9b03      	ldr	r3, [sp, #12]
 8022bb6:	1d19      	adds	r1, r3, #4
 8022bb8:	681b      	ldr	r3, [r3, #0]
 8022bba:	9103      	str	r1, [sp, #12]
 8022bbc:	2b00      	cmp	r3, #0
 8022bbe:	bfbb      	ittet	lt
 8022bc0:	425b      	neglt	r3, r3
 8022bc2:	f042 0202 	orrlt.w	r2, r2, #2
 8022bc6:	9307      	strge	r3, [sp, #28]
 8022bc8:	9307      	strlt	r3, [sp, #28]
 8022bca:	bfb8      	it	lt
 8022bcc:	9204      	strlt	r2, [sp, #16]
 8022bce:	7823      	ldrb	r3, [r4, #0]
 8022bd0:	2b2e      	cmp	r3, #46	@ 0x2e
 8022bd2:	d10a      	bne.n	8022bea <_vfiprintf_r+0x156>
 8022bd4:	7863      	ldrb	r3, [r4, #1]
 8022bd6:	2b2a      	cmp	r3, #42	@ 0x2a
 8022bd8:	d132      	bne.n	8022c40 <_vfiprintf_r+0x1ac>
 8022bda:	9b03      	ldr	r3, [sp, #12]
 8022bdc:	1d1a      	adds	r2, r3, #4
 8022bde:	681b      	ldr	r3, [r3, #0]
 8022be0:	9203      	str	r2, [sp, #12]
 8022be2:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8022be6:	3402      	adds	r4, #2
 8022be8:	9305      	str	r3, [sp, #20]
 8022bea:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8022cc0 <_vfiprintf_r+0x22c>
 8022bee:	7821      	ldrb	r1, [r4, #0]
 8022bf0:	2203      	movs	r2, #3
 8022bf2:	4650      	mov	r0, sl
 8022bf4:	f7dd fb0c 	bl	8000210 <memchr>
 8022bf8:	b138      	cbz	r0, 8022c0a <_vfiprintf_r+0x176>
 8022bfa:	9b04      	ldr	r3, [sp, #16]
 8022bfc:	eba0 000a 	sub.w	r0, r0, sl
 8022c00:	2240      	movs	r2, #64	@ 0x40
 8022c02:	4082      	lsls	r2, r0
 8022c04:	4313      	orrs	r3, r2
 8022c06:	3401      	adds	r4, #1
 8022c08:	9304      	str	r3, [sp, #16]
 8022c0a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022c0e:	4829      	ldr	r0, [pc, #164]	@ (8022cb4 <_vfiprintf_r+0x220>)
 8022c10:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8022c14:	2206      	movs	r2, #6
 8022c16:	f7dd fafb 	bl	8000210 <memchr>
 8022c1a:	2800      	cmp	r0, #0
 8022c1c:	d03f      	beq.n	8022c9e <_vfiprintf_r+0x20a>
 8022c1e:	4b26      	ldr	r3, [pc, #152]	@ (8022cb8 <_vfiprintf_r+0x224>)
 8022c20:	bb1b      	cbnz	r3, 8022c6a <_vfiprintf_r+0x1d6>
 8022c22:	9b03      	ldr	r3, [sp, #12]
 8022c24:	3307      	adds	r3, #7
 8022c26:	f023 0307 	bic.w	r3, r3, #7
 8022c2a:	3308      	adds	r3, #8
 8022c2c:	9303      	str	r3, [sp, #12]
 8022c2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022c30:	443b      	add	r3, r7
 8022c32:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c34:	e76a      	b.n	8022b0c <_vfiprintf_r+0x78>
 8022c36:	fb0c 3202 	mla	r2, ip, r2, r3
 8022c3a:	460c      	mov	r4, r1
 8022c3c:	2001      	movs	r0, #1
 8022c3e:	e7a8      	b.n	8022b92 <_vfiprintf_r+0xfe>
 8022c40:	2300      	movs	r3, #0
 8022c42:	3401      	adds	r4, #1
 8022c44:	9305      	str	r3, [sp, #20]
 8022c46:	4619      	mov	r1, r3
 8022c48:	f04f 0c0a 	mov.w	ip, #10
 8022c4c:	4620      	mov	r0, r4
 8022c4e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8022c52:	3a30      	subs	r2, #48	@ 0x30
 8022c54:	2a09      	cmp	r2, #9
 8022c56:	d903      	bls.n	8022c60 <_vfiprintf_r+0x1cc>
 8022c58:	2b00      	cmp	r3, #0
 8022c5a:	d0c6      	beq.n	8022bea <_vfiprintf_r+0x156>
 8022c5c:	9105      	str	r1, [sp, #20]
 8022c5e:	e7c4      	b.n	8022bea <_vfiprintf_r+0x156>
 8022c60:	fb0c 2101 	mla	r1, ip, r1, r2
 8022c64:	4604      	mov	r4, r0
 8022c66:	2301      	movs	r3, #1
 8022c68:	e7f0      	b.n	8022c4c <_vfiprintf_r+0x1b8>
 8022c6a:	ab03      	add	r3, sp, #12
 8022c6c:	9300      	str	r3, [sp, #0]
 8022c6e:	462a      	mov	r2, r5
 8022c70:	4b12      	ldr	r3, [pc, #72]	@ (8022cbc <_vfiprintf_r+0x228>)
 8022c72:	a904      	add	r1, sp, #16
 8022c74:	4630      	mov	r0, r6
 8022c76:	f3af 8000 	nop.w
 8022c7a:	4607      	mov	r7, r0
 8022c7c:	1c78      	adds	r0, r7, #1
 8022c7e:	d1d6      	bne.n	8022c2e <_vfiprintf_r+0x19a>
 8022c80:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8022c82:	07d9      	lsls	r1, r3, #31
 8022c84:	d405      	bmi.n	8022c92 <_vfiprintf_r+0x1fe>
 8022c86:	89ab      	ldrh	r3, [r5, #12]
 8022c88:	059a      	lsls	r2, r3, #22
 8022c8a:	d402      	bmi.n	8022c92 <_vfiprintf_r+0x1fe>
 8022c8c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8022c8e:	f7ff fe21 	bl	80228d4 <__retarget_lock_release_recursive>
 8022c92:	89ab      	ldrh	r3, [r5, #12]
 8022c94:	065b      	lsls	r3, r3, #25
 8022c96:	f53f af1f 	bmi.w	8022ad8 <_vfiprintf_r+0x44>
 8022c9a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022c9c:	e71e      	b.n	8022adc <_vfiprintf_r+0x48>
 8022c9e:	ab03      	add	r3, sp, #12
 8022ca0:	9300      	str	r3, [sp, #0]
 8022ca2:	462a      	mov	r2, r5
 8022ca4:	4b05      	ldr	r3, [pc, #20]	@ (8022cbc <_vfiprintf_r+0x228>)
 8022ca6:	a904      	add	r1, sp, #16
 8022ca8:	4630      	mov	r0, r6
 8022caa:	f000 f879 	bl	8022da0 <_printf_i>
 8022cae:	e7e4      	b.n	8022c7a <_vfiprintf_r+0x1e6>
 8022cb0:	08025728 	.word	0x08025728
 8022cb4:	08025732 	.word	0x08025732
 8022cb8:	00000000 	.word	0x00000000
 8022cbc:	08022a6f 	.word	0x08022a6f
 8022cc0:	0802572e 	.word	0x0802572e

08022cc4 <_printf_common>:
 8022cc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022cc8:	4616      	mov	r6, r2
 8022cca:	4698      	mov	r8, r3
 8022ccc:	688a      	ldr	r2, [r1, #8]
 8022cce:	690b      	ldr	r3, [r1, #16]
 8022cd0:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8022cd4:	4293      	cmp	r3, r2
 8022cd6:	bfb8      	it	lt
 8022cd8:	4613      	movlt	r3, r2
 8022cda:	6033      	str	r3, [r6, #0]
 8022cdc:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8022ce0:	4607      	mov	r7, r0
 8022ce2:	460c      	mov	r4, r1
 8022ce4:	b10a      	cbz	r2, 8022cea <_printf_common+0x26>
 8022ce6:	3301      	adds	r3, #1
 8022ce8:	6033      	str	r3, [r6, #0]
 8022cea:	6823      	ldr	r3, [r4, #0]
 8022cec:	0699      	lsls	r1, r3, #26
 8022cee:	bf42      	ittt	mi
 8022cf0:	6833      	ldrmi	r3, [r6, #0]
 8022cf2:	3302      	addmi	r3, #2
 8022cf4:	6033      	strmi	r3, [r6, #0]
 8022cf6:	6825      	ldr	r5, [r4, #0]
 8022cf8:	f015 0506 	ands.w	r5, r5, #6
 8022cfc:	d106      	bne.n	8022d0c <_printf_common+0x48>
 8022cfe:	f104 0a19 	add.w	sl, r4, #25
 8022d02:	68e3      	ldr	r3, [r4, #12]
 8022d04:	6832      	ldr	r2, [r6, #0]
 8022d06:	1a9b      	subs	r3, r3, r2
 8022d08:	42ab      	cmp	r3, r5
 8022d0a:	dc26      	bgt.n	8022d5a <_printf_common+0x96>
 8022d0c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8022d10:	6822      	ldr	r2, [r4, #0]
 8022d12:	3b00      	subs	r3, #0
 8022d14:	bf18      	it	ne
 8022d16:	2301      	movne	r3, #1
 8022d18:	0692      	lsls	r2, r2, #26
 8022d1a:	d42b      	bmi.n	8022d74 <_printf_common+0xb0>
 8022d1c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8022d20:	4641      	mov	r1, r8
 8022d22:	4638      	mov	r0, r7
 8022d24:	47c8      	blx	r9
 8022d26:	3001      	adds	r0, #1
 8022d28:	d01e      	beq.n	8022d68 <_printf_common+0xa4>
 8022d2a:	6823      	ldr	r3, [r4, #0]
 8022d2c:	6922      	ldr	r2, [r4, #16]
 8022d2e:	f003 0306 	and.w	r3, r3, #6
 8022d32:	2b04      	cmp	r3, #4
 8022d34:	bf02      	ittt	eq
 8022d36:	68e5      	ldreq	r5, [r4, #12]
 8022d38:	6833      	ldreq	r3, [r6, #0]
 8022d3a:	1aed      	subeq	r5, r5, r3
 8022d3c:	68a3      	ldr	r3, [r4, #8]
 8022d3e:	bf0c      	ite	eq
 8022d40:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8022d44:	2500      	movne	r5, #0
 8022d46:	4293      	cmp	r3, r2
 8022d48:	bfc4      	itt	gt
 8022d4a:	1a9b      	subgt	r3, r3, r2
 8022d4c:	18ed      	addgt	r5, r5, r3
 8022d4e:	2600      	movs	r6, #0
 8022d50:	341a      	adds	r4, #26
 8022d52:	42b5      	cmp	r5, r6
 8022d54:	d11a      	bne.n	8022d8c <_printf_common+0xc8>
 8022d56:	2000      	movs	r0, #0
 8022d58:	e008      	b.n	8022d6c <_printf_common+0xa8>
 8022d5a:	2301      	movs	r3, #1
 8022d5c:	4652      	mov	r2, sl
 8022d5e:	4641      	mov	r1, r8
 8022d60:	4638      	mov	r0, r7
 8022d62:	47c8      	blx	r9
 8022d64:	3001      	adds	r0, #1
 8022d66:	d103      	bne.n	8022d70 <_printf_common+0xac>
 8022d68:	f04f 30ff 	mov.w	r0, #4294967295
 8022d6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022d70:	3501      	adds	r5, #1
 8022d72:	e7c6      	b.n	8022d02 <_printf_common+0x3e>
 8022d74:	18e1      	adds	r1, r4, r3
 8022d76:	1c5a      	adds	r2, r3, #1
 8022d78:	2030      	movs	r0, #48	@ 0x30
 8022d7a:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8022d7e:	4422      	add	r2, r4
 8022d80:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8022d84:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8022d88:	3302      	adds	r3, #2
 8022d8a:	e7c7      	b.n	8022d1c <_printf_common+0x58>
 8022d8c:	2301      	movs	r3, #1
 8022d8e:	4622      	mov	r2, r4
 8022d90:	4641      	mov	r1, r8
 8022d92:	4638      	mov	r0, r7
 8022d94:	47c8      	blx	r9
 8022d96:	3001      	adds	r0, #1
 8022d98:	d0e6      	beq.n	8022d68 <_printf_common+0xa4>
 8022d9a:	3601      	adds	r6, #1
 8022d9c:	e7d9      	b.n	8022d52 <_printf_common+0x8e>
	...

08022da0 <_printf_i>:
 8022da0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8022da4:	7e0f      	ldrb	r7, [r1, #24]
 8022da6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8022da8:	2f78      	cmp	r7, #120	@ 0x78
 8022daa:	4691      	mov	r9, r2
 8022dac:	4680      	mov	r8, r0
 8022dae:	460c      	mov	r4, r1
 8022db0:	469a      	mov	sl, r3
 8022db2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8022db6:	d807      	bhi.n	8022dc8 <_printf_i+0x28>
 8022db8:	2f62      	cmp	r7, #98	@ 0x62
 8022dba:	d80a      	bhi.n	8022dd2 <_printf_i+0x32>
 8022dbc:	2f00      	cmp	r7, #0
 8022dbe:	f000 80d2 	beq.w	8022f66 <_printf_i+0x1c6>
 8022dc2:	2f58      	cmp	r7, #88	@ 0x58
 8022dc4:	f000 80b9 	beq.w	8022f3a <_printf_i+0x19a>
 8022dc8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022dcc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8022dd0:	e03a      	b.n	8022e48 <_printf_i+0xa8>
 8022dd2:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8022dd6:	2b15      	cmp	r3, #21
 8022dd8:	d8f6      	bhi.n	8022dc8 <_printf_i+0x28>
 8022dda:	a101      	add	r1, pc, #4	@ (adr r1, 8022de0 <_printf_i+0x40>)
 8022ddc:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8022de0:	08022e39 	.word	0x08022e39
 8022de4:	08022e4d 	.word	0x08022e4d
 8022de8:	08022dc9 	.word	0x08022dc9
 8022dec:	08022dc9 	.word	0x08022dc9
 8022df0:	08022dc9 	.word	0x08022dc9
 8022df4:	08022dc9 	.word	0x08022dc9
 8022df8:	08022e4d 	.word	0x08022e4d
 8022dfc:	08022dc9 	.word	0x08022dc9
 8022e00:	08022dc9 	.word	0x08022dc9
 8022e04:	08022dc9 	.word	0x08022dc9
 8022e08:	08022dc9 	.word	0x08022dc9
 8022e0c:	08022f4d 	.word	0x08022f4d
 8022e10:	08022e77 	.word	0x08022e77
 8022e14:	08022f07 	.word	0x08022f07
 8022e18:	08022dc9 	.word	0x08022dc9
 8022e1c:	08022dc9 	.word	0x08022dc9
 8022e20:	08022f6f 	.word	0x08022f6f
 8022e24:	08022dc9 	.word	0x08022dc9
 8022e28:	08022e77 	.word	0x08022e77
 8022e2c:	08022dc9 	.word	0x08022dc9
 8022e30:	08022dc9 	.word	0x08022dc9
 8022e34:	08022f0f 	.word	0x08022f0f
 8022e38:	6833      	ldr	r3, [r6, #0]
 8022e3a:	1d1a      	adds	r2, r3, #4
 8022e3c:	681b      	ldr	r3, [r3, #0]
 8022e3e:	6032      	str	r2, [r6, #0]
 8022e40:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8022e44:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8022e48:	2301      	movs	r3, #1
 8022e4a:	e09d      	b.n	8022f88 <_printf_i+0x1e8>
 8022e4c:	6833      	ldr	r3, [r6, #0]
 8022e4e:	6820      	ldr	r0, [r4, #0]
 8022e50:	1d19      	adds	r1, r3, #4
 8022e52:	6031      	str	r1, [r6, #0]
 8022e54:	0606      	lsls	r6, r0, #24
 8022e56:	d501      	bpl.n	8022e5c <_printf_i+0xbc>
 8022e58:	681d      	ldr	r5, [r3, #0]
 8022e5a:	e003      	b.n	8022e64 <_printf_i+0xc4>
 8022e5c:	0645      	lsls	r5, r0, #25
 8022e5e:	d5fb      	bpl.n	8022e58 <_printf_i+0xb8>
 8022e60:	f9b3 5000 	ldrsh.w	r5, [r3]
 8022e64:	2d00      	cmp	r5, #0
 8022e66:	da03      	bge.n	8022e70 <_printf_i+0xd0>
 8022e68:	232d      	movs	r3, #45	@ 0x2d
 8022e6a:	426d      	negs	r5, r5
 8022e6c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8022e70:	4859      	ldr	r0, [pc, #356]	@ (8022fd8 <_printf_i+0x238>)
 8022e72:	230a      	movs	r3, #10
 8022e74:	e011      	b.n	8022e9a <_printf_i+0xfa>
 8022e76:	6821      	ldr	r1, [r4, #0]
 8022e78:	6833      	ldr	r3, [r6, #0]
 8022e7a:	0608      	lsls	r0, r1, #24
 8022e7c:	f853 5b04 	ldr.w	r5, [r3], #4
 8022e80:	d402      	bmi.n	8022e88 <_printf_i+0xe8>
 8022e82:	0649      	lsls	r1, r1, #25
 8022e84:	bf48      	it	mi
 8022e86:	b2ad      	uxthmi	r5, r5
 8022e88:	2f6f      	cmp	r7, #111	@ 0x6f
 8022e8a:	4853      	ldr	r0, [pc, #332]	@ (8022fd8 <_printf_i+0x238>)
 8022e8c:	6033      	str	r3, [r6, #0]
 8022e8e:	bf14      	ite	ne
 8022e90:	230a      	movne	r3, #10
 8022e92:	2308      	moveq	r3, #8
 8022e94:	2100      	movs	r1, #0
 8022e96:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8022e9a:	6866      	ldr	r6, [r4, #4]
 8022e9c:	60a6      	str	r6, [r4, #8]
 8022e9e:	2e00      	cmp	r6, #0
 8022ea0:	bfa2      	ittt	ge
 8022ea2:	6821      	ldrge	r1, [r4, #0]
 8022ea4:	f021 0104 	bicge.w	r1, r1, #4
 8022ea8:	6021      	strge	r1, [r4, #0]
 8022eaa:	b90d      	cbnz	r5, 8022eb0 <_printf_i+0x110>
 8022eac:	2e00      	cmp	r6, #0
 8022eae:	d04b      	beq.n	8022f48 <_printf_i+0x1a8>
 8022eb0:	4616      	mov	r6, r2
 8022eb2:	fbb5 f1f3 	udiv	r1, r5, r3
 8022eb6:	fb03 5711 	mls	r7, r3, r1, r5
 8022eba:	5dc7      	ldrb	r7, [r0, r7]
 8022ebc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8022ec0:	462f      	mov	r7, r5
 8022ec2:	42bb      	cmp	r3, r7
 8022ec4:	460d      	mov	r5, r1
 8022ec6:	d9f4      	bls.n	8022eb2 <_printf_i+0x112>
 8022ec8:	2b08      	cmp	r3, #8
 8022eca:	d10b      	bne.n	8022ee4 <_printf_i+0x144>
 8022ecc:	6823      	ldr	r3, [r4, #0]
 8022ece:	07df      	lsls	r7, r3, #31
 8022ed0:	d508      	bpl.n	8022ee4 <_printf_i+0x144>
 8022ed2:	6923      	ldr	r3, [r4, #16]
 8022ed4:	6861      	ldr	r1, [r4, #4]
 8022ed6:	4299      	cmp	r1, r3
 8022ed8:	bfde      	ittt	le
 8022eda:	2330      	movle	r3, #48	@ 0x30
 8022edc:	f806 3c01 	strble.w	r3, [r6, #-1]
 8022ee0:	f106 36ff 	addle.w	r6, r6, #4294967295
 8022ee4:	1b92      	subs	r2, r2, r6
 8022ee6:	6122      	str	r2, [r4, #16]
 8022ee8:	f8cd a000 	str.w	sl, [sp]
 8022eec:	464b      	mov	r3, r9
 8022eee:	aa03      	add	r2, sp, #12
 8022ef0:	4621      	mov	r1, r4
 8022ef2:	4640      	mov	r0, r8
 8022ef4:	f7ff fee6 	bl	8022cc4 <_printf_common>
 8022ef8:	3001      	adds	r0, #1
 8022efa:	d14a      	bne.n	8022f92 <_printf_i+0x1f2>
 8022efc:	f04f 30ff 	mov.w	r0, #4294967295
 8022f00:	b004      	add	sp, #16
 8022f02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022f06:	6823      	ldr	r3, [r4, #0]
 8022f08:	f043 0320 	orr.w	r3, r3, #32
 8022f0c:	6023      	str	r3, [r4, #0]
 8022f0e:	4833      	ldr	r0, [pc, #204]	@ (8022fdc <_printf_i+0x23c>)
 8022f10:	2778      	movs	r7, #120	@ 0x78
 8022f12:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8022f16:	6823      	ldr	r3, [r4, #0]
 8022f18:	6831      	ldr	r1, [r6, #0]
 8022f1a:	061f      	lsls	r7, r3, #24
 8022f1c:	f851 5b04 	ldr.w	r5, [r1], #4
 8022f20:	d402      	bmi.n	8022f28 <_printf_i+0x188>
 8022f22:	065f      	lsls	r7, r3, #25
 8022f24:	bf48      	it	mi
 8022f26:	b2ad      	uxthmi	r5, r5
 8022f28:	6031      	str	r1, [r6, #0]
 8022f2a:	07d9      	lsls	r1, r3, #31
 8022f2c:	bf44      	itt	mi
 8022f2e:	f043 0320 	orrmi.w	r3, r3, #32
 8022f32:	6023      	strmi	r3, [r4, #0]
 8022f34:	b11d      	cbz	r5, 8022f3e <_printf_i+0x19e>
 8022f36:	2310      	movs	r3, #16
 8022f38:	e7ac      	b.n	8022e94 <_printf_i+0xf4>
 8022f3a:	4827      	ldr	r0, [pc, #156]	@ (8022fd8 <_printf_i+0x238>)
 8022f3c:	e7e9      	b.n	8022f12 <_printf_i+0x172>
 8022f3e:	6823      	ldr	r3, [r4, #0]
 8022f40:	f023 0320 	bic.w	r3, r3, #32
 8022f44:	6023      	str	r3, [r4, #0]
 8022f46:	e7f6      	b.n	8022f36 <_printf_i+0x196>
 8022f48:	4616      	mov	r6, r2
 8022f4a:	e7bd      	b.n	8022ec8 <_printf_i+0x128>
 8022f4c:	6833      	ldr	r3, [r6, #0]
 8022f4e:	6825      	ldr	r5, [r4, #0]
 8022f50:	6961      	ldr	r1, [r4, #20]
 8022f52:	1d18      	adds	r0, r3, #4
 8022f54:	6030      	str	r0, [r6, #0]
 8022f56:	062e      	lsls	r6, r5, #24
 8022f58:	681b      	ldr	r3, [r3, #0]
 8022f5a:	d501      	bpl.n	8022f60 <_printf_i+0x1c0>
 8022f5c:	6019      	str	r1, [r3, #0]
 8022f5e:	e002      	b.n	8022f66 <_printf_i+0x1c6>
 8022f60:	0668      	lsls	r0, r5, #25
 8022f62:	d5fb      	bpl.n	8022f5c <_printf_i+0x1bc>
 8022f64:	8019      	strh	r1, [r3, #0]
 8022f66:	2300      	movs	r3, #0
 8022f68:	6123      	str	r3, [r4, #16]
 8022f6a:	4616      	mov	r6, r2
 8022f6c:	e7bc      	b.n	8022ee8 <_printf_i+0x148>
 8022f6e:	6833      	ldr	r3, [r6, #0]
 8022f70:	1d1a      	adds	r2, r3, #4
 8022f72:	6032      	str	r2, [r6, #0]
 8022f74:	681e      	ldr	r6, [r3, #0]
 8022f76:	6862      	ldr	r2, [r4, #4]
 8022f78:	2100      	movs	r1, #0
 8022f7a:	4630      	mov	r0, r6
 8022f7c:	f7dd f948 	bl	8000210 <memchr>
 8022f80:	b108      	cbz	r0, 8022f86 <_printf_i+0x1e6>
 8022f82:	1b80      	subs	r0, r0, r6
 8022f84:	6060      	str	r0, [r4, #4]
 8022f86:	6863      	ldr	r3, [r4, #4]
 8022f88:	6123      	str	r3, [r4, #16]
 8022f8a:	2300      	movs	r3, #0
 8022f8c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8022f90:	e7aa      	b.n	8022ee8 <_printf_i+0x148>
 8022f92:	6923      	ldr	r3, [r4, #16]
 8022f94:	4632      	mov	r2, r6
 8022f96:	4649      	mov	r1, r9
 8022f98:	4640      	mov	r0, r8
 8022f9a:	47d0      	blx	sl
 8022f9c:	3001      	adds	r0, #1
 8022f9e:	d0ad      	beq.n	8022efc <_printf_i+0x15c>
 8022fa0:	6823      	ldr	r3, [r4, #0]
 8022fa2:	079b      	lsls	r3, r3, #30
 8022fa4:	d413      	bmi.n	8022fce <_printf_i+0x22e>
 8022fa6:	68e0      	ldr	r0, [r4, #12]
 8022fa8:	9b03      	ldr	r3, [sp, #12]
 8022faa:	4298      	cmp	r0, r3
 8022fac:	bfb8      	it	lt
 8022fae:	4618      	movlt	r0, r3
 8022fb0:	e7a6      	b.n	8022f00 <_printf_i+0x160>
 8022fb2:	2301      	movs	r3, #1
 8022fb4:	4632      	mov	r2, r6
 8022fb6:	4649      	mov	r1, r9
 8022fb8:	4640      	mov	r0, r8
 8022fba:	47d0      	blx	sl
 8022fbc:	3001      	adds	r0, #1
 8022fbe:	d09d      	beq.n	8022efc <_printf_i+0x15c>
 8022fc0:	3501      	adds	r5, #1
 8022fc2:	68e3      	ldr	r3, [r4, #12]
 8022fc4:	9903      	ldr	r1, [sp, #12]
 8022fc6:	1a5b      	subs	r3, r3, r1
 8022fc8:	42ab      	cmp	r3, r5
 8022fca:	dcf2      	bgt.n	8022fb2 <_printf_i+0x212>
 8022fcc:	e7eb      	b.n	8022fa6 <_printf_i+0x206>
 8022fce:	2500      	movs	r5, #0
 8022fd0:	f104 0619 	add.w	r6, r4, #25
 8022fd4:	e7f5      	b.n	8022fc2 <_printf_i+0x222>
 8022fd6:	bf00      	nop
 8022fd8:	08025739 	.word	0x08025739
 8022fdc:	0802574a 	.word	0x0802574a

08022fe0 <__sflush_r>:
 8022fe0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8022fe4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022fe8:	0716      	lsls	r6, r2, #28
 8022fea:	4605      	mov	r5, r0
 8022fec:	460c      	mov	r4, r1
 8022fee:	d454      	bmi.n	802309a <__sflush_r+0xba>
 8022ff0:	684b      	ldr	r3, [r1, #4]
 8022ff2:	2b00      	cmp	r3, #0
 8022ff4:	dc02      	bgt.n	8022ffc <__sflush_r+0x1c>
 8022ff6:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8022ff8:	2b00      	cmp	r3, #0
 8022ffa:	dd48      	ble.n	802308e <__sflush_r+0xae>
 8022ffc:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8022ffe:	2e00      	cmp	r6, #0
 8023000:	d045      	beq.n	802308e <__sflush_r+0xae>
 8023002:	2300      	movs	r3, #0
 8023004:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8023008:	682f      	ldr	r7, [r5, #0]
 802300a:	6a21      	ldr	r1, [r4, #32]
 802300c:	602b      	str	r3, [r5, #0]
 802300e:	d030      	beq.n	8023072 <__sflush_r+0x92>
 8023010:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8023012:	89a3      	ldrh	r3, [r4, #12]
 8023014:	0759      	lsls	r1, r3, #29
 8023016:	d505      	bpl.n	8023024 <__sflush_r+0x44>
 8023018:	6863      	ldr	r3, [r4, #4]
 802301a:	1ad2      	subs	r2, r2, r3
 802301c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802301e:	b10b      	cbz	r3, 8023024 <__sflush_r+0x44>
 8023020:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8023022:	1ad2      	subs	r2, r2, r3
 8023024:	2300      	movs	r3, #0
 8023026:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8023028:	6a21      	ldr	r1, [r4, #32]
 802302a:	4628      	mov	r0, r5
 802302c:	47b0      	blx	r6
 802302e:	1c43      	adds	r3, r0, #1
 8023030:	89a3      	ldrh	r3, [r4, #12]
 8023032:	d106      	bne.n	8023042 <__sflush_r+0x62>
 8023034:	6829      	ldr	r1, [r5, #0]
 8023036:	291d      	cmp	r1, #29
 8023038:	d82b      	bhi.n	8023092 <__sflush_r+0xb2>
 802303a:	4a2a      	ldr	r2, [pc, #168]	@ (80230e4 <__sflush_r+0x104>)
 802303c:	410a      	asrs	r2, r1
 802303e:	07d6      	lsls	r6, r2, #31
 8023040:	d427      	bmi.n	8023092 <__sflush_r+0xb2>
 8023042:	2200      	movs	r2, #0
 8023044:	6062      	str	r2, [r4, #4]
 8023046:	04d9      	lsls	r1, r3, #19
 8023048:	6922      	ldr	r2, [r4, #16]
 802304a:	6022      	str	r2, [r4, #0]
 802304c:	d504      	bpl.n	8023058 <__sflush_r+0x78>
 802304e:	1c42      	adds	r2, r0, #1
 8023050:	d101      	bne.n	8023056 <__sflush_r+0x76>
 8023052:	682b      	ldr	r3, [r5, #0]
 8023054:	b903      	cbnz	r3, 8023058 <__sflush_r+0x78>
 8023056:	6560      	str	r0, [r4, #84]	@ 0x54
 8023058:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 802305a:	602f      	str	r7, [r5, #0]
 802305c:	b1b9      	cbz	r1, 802308e <__sflush_r+0xae>
 802305e:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8023062:	4299      	cmp	r1, r3
 8023064:	d002      	beq.n	802306c <__sflush_r+0x8c>
 8023066:	4628      	mov	r0, r5
 8023068:	f7ff fca0 	bl	80229ac <_free_r>
 802306c:	2300      	movs	r3, #0
 802306e:	6363      	str	r3, [r4, #52]	@ 0x34
 8023070:	e00d      	b.n	802308e <__sflush_r+0xae>
 8023072:	2301      	movs	r3, #1
 8023074:	4628      	mov	r0, r5
 8023076:	47b0      	blx	r6
 8023078:	4602      	mov	r2, r0
 802307a:	1c50      	adds	r0, r2, #1
 802307c:	d1c9      	bne.n	8023012 <__sflush_r+0x32>
 802307e:	682b      	ldr	r3, [r5, #0]
 8023080:	2b00      	cmp	r3, #0
 8023082:	d0c6      	beq.n	8023012 <__sflush_r+0x32>
 8023084:	2b1d      	cmp	r3, #29
 8023086:	d001      	beq.n	802308c <__sflush_r+0xac>
 8023088:	2b16      	cmp	r3, #22
 802308a:	d11e      	bne.n	80230ca <__sflush_r+0xea>
 802308c:	602f      	str	r7, [r5, #0]
 802308e:	2000      	movs	r0, #0
 8023090:	e022      	b.n	80230d8 <__sflush_r+0xf8>
 8023092:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8023096:	b21b      	sxth	r3, r3
 8023098:	e01b      	b.n	80230d2 <__sflush_r+0xf2>
 802309a:	690f      	ldr	r7, [r1, #16]
 802309c:	2f00      	cmp	r7, #0
 802309e:	d0f6      	beq.n	802308e <__sflush_r+0xae>
 80230a0:	0793      	lsls	r3, r2, #30
 80230a2:	680e      	ldr	r6, [r1, #0]
 80230a4:	bf08      	it	eq
 80230a6:	694b      	ldreq	r3, [r1, #20]
 80230a8:	600f      	str	r7, [r1, #0]
 80230aa:	bf18      	it	ne
 80230ac:	2300      	movne	r3, #0
 80230ae:	eba6 0807 	sub.w	r8, r6, r7
 80230b2:	608b      	str	r3, [r1, #8]
 80230b4:	f1b8 0f00 	cmp.w	r8, #0
 80230b8:	dde9      	ble.n	802308e <__sflush_r+0xae>
 80230ba:	6a21      	ldr	r1, [r4, #32]
 80230bc:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80230be:	4643      	mov	r3, r8
 80230c0:	463a      	mov	r2, r7
 80230c2:	4628      	mov	r0, r5
 80230c4:	47b0      	blx	r6
 80230c6:	2800      	cmp	r0, #0
 80230c8:	dc08      	bgt.n	80230dc <__sflush_r+0xfc>
 80230ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80230ce:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80230d2:	81a3      	strh	r3, [r4, #12]
 80230d4:	f04f 30ff 	mov.w	r0, #4294967295
 80230d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80230dc:	4407      	add	r7, r0
 80230de:	eba8 0800 	sub.w	r8, r8, r0
 80230e2:	e7e7      	b.n	80230b4 <__sflush_r+0xd4>
 80230e4:	dfbffffe 	.word	0xdfbffffe

080230e8 <_fflush_r>:
 80230e8:	b538      	push	{r3, r4, r5, lr}
 80230ea:	690b      	ldr	r3, [r1, #16]
 80230ec:	4605      	mov	r5, r0
 80230ee:	460c      	mov	r4, r1
 80230f0:	b913      	cbnz	r3, 80230f8 <_fflush_r+0x10>
 80230f2:	2500      	movs	r5, #0
 80230f4:	4628      	mov	r0, r5
 80230f6:	bd38      	pop	{r3, r4, r5, pc}
 80230f8:	b118      	cbz	r0, 8023102 <_fflush_r+0x1a>
 80230fa:	6a03      	ldr	r3, [r0, #32]
 80230fc:	b90b      	cbnz	r3, 8023102 <_fflush_r+0x1a>
 80230fe:	f7ff fa8f 	bl	8022620 <__sinit>
 8023102:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023106:	2b00      	cmp	r3, #0
 8023108:	d0f3      	beq.n	80230f2 <_fflush_r+0xa>
 802310a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 802310c:	07d0      	lsls	r0, r2, #31
 802310e:	d404      	bmi.n	802311a <_fflush_r+0x32>
 8023110:	0599      	lsls	r1, r3, #22
 8023112:	d402      	bmi.n	802311a <_fflush_r+0x32>
 8023114:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023116:	f7ff fbdc 	bl	80228d2 <__retarget_lock_acquire_recursive>
 802311a:	4628      	mov	r0, r5
 802311c:	4621      	mov	r1, r4
 802311e:	f7ff ff5f 	bl	8022fe0 <__sflush_r>
 8023122:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8023124:	07da      	lsls	r2, r3, #31
 8023126:	4605      	mov	r5, r0
 8023128:	d4e4      	bmi.n	80230f4 <_fflush_r+0xc>
 802312a:	89a3      	ldrh	r3, [r4, #12]
 802312c:	059b      	lsls	r3, r3, #22
 802312e:	d4e1      	bmi.n	80230f4 <_fflush_r+0xc>
 8023130:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8023132:	f7ff fbcf 	bl	80228d4 <__retarget_lock_release_recursive>
 8023136:	e7dd      	b.n	80230f4 <_fflush_r+0xc>

08023138 <__swbuf_r>:
 8023138:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802313a:	460e      	mov	r6, r1
 802313c:	4614      	mov	r4, r2
 802313e:	4605      	mov	r5, r0
 8023140:	b118      	cbz	r0, 802314a <__swbuf_r+0x12>
 8023142:	6a03      	ldr	r3, [r0, #32]
 8023144:	b90b      	cbnz	r3, 802314a <__swbuf_r+0x12>
 8023146:	f7ff fa6b 	bl	8022620 <__sinit>
 802314a:	69a3      	ldr	r3, [r4, #24]
 802314c:	60a3      	str	r3, [r4, #8]
 802314e:	89a3      	ldrh	r3, [r4, #12]
 8023150:	071a      	lsls	r2, r3, #28
 8023152:	d501      	bpl.n	8023158 <__swbuf_r+0x20>
 8023154:	6923      	ldr	r3, [r4, #16]
 8023156:	b943      	cbnz	r3, 802316a <__swbuf_r+0x32>
 8023158:	4621      	mov	r1, r4
 802315a:	4628      	mov	r0, r5
 802315c:	f000 f82a 	bl	80231b4 <__swsetup_r>
 8023160:	b118      	cbz	r0, 802316a <__swbuf_r+0x32>
 8023162:	f04f 37ff 	mov.w	r7, #4294967295
 8023166:	4638      	mov	r0, r7
 8023168:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802316a:	6823      	ldr	r3, [r4, #0]
 802316c:	6922      	ldr	r2, [r4, #16]
 802316e:	1a98      	subs	r0, r3, r2
 8023170:	6963      	ldr	r3, [r4, #20]
 8023172:	b2f6      	uxtb	r6, r6
 8023174:	4283      	cmp	r3, r0
 8023176:	4637      	mov	r7, r6
 8023178:	dc05      	bgt.n	8023186 <__swbuf_r+0x4e>
 802317a:	4621      	mov	r1, r4
 802317c:	4628      	mov	r0, r5
 802317e:	f7ff ffb3 	bl	80230e8 <_fflush_r>
 8023182:	2800      	cmp	r0, #0
 8023184:	d1ed      	bne.n	8023162 <__swbuf_r+0x2a>
 8023186:	68a3      	ldr	r3, [r4, #8]
 8023188:	3b01      	subs	r3, #1
 802318a:	60a3      	str	r3, [r4, #8]
 802318c:	6823      	ldr	r3, [r4, #0]
 802318e:	1c5a      	adds	r2, r3, #1
 8023190:	6022      	str	r2, [r4, #0]
 8023192:	701e      	strb	r6, [r3, #0]
 8023194:	6962      	ldr	r2, [r4, #20]
 8023196:	1c43      	adds	r3, r0, #1
 8023198:	429a      	cmp	r2, r3
 802319a:	d004      	beq.n	80231a6 <__swbuf_r+0x6e>
 802319c:	89a3      	ldrh	r3, [r4, #12]
 802319e:	07db      	lsls	r3, r3, #31
 80231a0:	d5e1      	bpl.n	8023166 <__swbuf_r+0x2e>
 80231a2:	2e0a      	cmp	r6, #10
 80231a4:	d1df      	bne.n	8023166 <__swbuf_r+0x2e>
 80231a6:	4621      	mov	r1, r4
 80231a8:	4628      	mov	r0, r5
 80231aa:	f7ff ff9d 	bl	80230e8 <_fflush_r>
 80231ae:	2800      	cmp	r0, #0
 80231b0:	d0d9      	beq.n	8023166 <__swbuf_r+0x2e>
 80231b2:	e7d6      	b.n	8023162 <__swbuf_r+0x2a>

080231b4 <__swsetup_r>:
 80231b4:	b538      	push	{r3, r4, r5, lr}
 80231b6:	4b29      	ldr	r3, [pc, #164]	@ (802325c <__swsetup_r+0xa8>)
 80231b8:	4605      	mov	r5, r0
 80231ba:	6818      	ldr	r0, [r3, #0]
 80231bc:	460c      	mov	r4, r1
 80231be:	b118      	cbz	r0, 80231c8 <__swsetup_r+0x14>
 80231c0:	6a03      	ldr	r3, [r0, #32]
 80231c2:	b90b      	cbnz	r3, 80231c8 <__swsetup_r+0x14>
 80231c4:	f7ff fa2c 	bl	8022620 <__sinit>
 80231c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80231cc:	0719      	lsls	r1, r3, #28
 80231ce:	d422      	bmi.n	8023216 <__swsetup_r+0x62>
 80231d0:	06da      	lsls	r2, r3, #27
 80231d2:	d407      	bmi.n	80231e4 <__swsetup_r+0x30>
 80231d4:	2209      	movs	r2, #9
 80231d6:	602a      	str	r2, [r5, #0]
 80231d8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80231dc:	81a3      	strh	r3, [r4, #12]
 80231de:	f04f 30ff 	mov.w	r0, #4294967295
 80231e2:	e033      	b.n	802324c <__swsetup_r+0x98>
 80231e4:	0758      	lsls	r0, r3, #29
 80231e6:	d512      	bpl.n	802320e <__swsetup_r+0x5a>
 80231e8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80231ea:	b141      	cbz	r1, 80231fe <__swsetup_r+0x4a>
 80231ec:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80231f0:	4299      	cmp	r1, r3
 80231f2:	d002      	beq.n	80231fa <__swsetup_r+0x46>
 80231f4:	4628      	mov	r0, r5
 80231f6:	f7ff fbd9 	bl	80229ac <_free_r>
 80231fa:	2300      	movs	r3, #0
 80231fc:	6363      	str	r3, [r4, #52]	@ 0x34
 80231fe:	89a3      	ldrh	r3, [r4, #12]
 8023200:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8023204:	81a3      	strh	r3, [r4, #12]
 8023206:	2300      	movs	r3, #0
 8023208:	6063      	str	r3, [r4, #4]
 802320a:	6923      	ldr	r3, [r4, #16]
 802320c:	6023      	str	r3, [r4, #0]
 802320e:	89a3      	ldrh	r3, [r4, #12]
 8023210:	f043 0308 	orr.w	r3, r3, #8
 8023214:	81a3      	strh	r3, [r4, #12]
 8023216:	6923      	ldr	r3, [r4, #16]
 8023218:	b94b      	cbnz	r3, 802322e <__swsetup_r+0x7a>
 802321a:	89a3      	ldrh	r3, [r4, #12]
 802321c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8023220:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8023224:	d003      	beq.n	802322e <__swsetup_r+0x7a>
 8023226:	4621      	mov	r1, r4
 8023228:	4628      	mov	r0, r5
 802322a:	f000 f83f 	bl	80232ac <__smakebuf_r>
 802322e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8023232:	f013 0201 	ands.w	r2, r3, #1
 8023236:	d00a      	beq.n	802324e <__swsetup_r+0x9a>
 8023238:	2200      	movs	r2, #0
 802323a:	60a2      	str	r2, [r4, #8]
 802323c:	6962      	ldr	r2, [r4, #20]
 802323e:	4252      	negs	r2, r2
 8023240:	61a2      	str	r2, [r4, #24]
 8023242:	6922      	ldr	r2, [r4, #16]
 8023244:	b942      	cbnz	r2, 8023258 <__swsetup_r+0xa4>
 8023246:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 802324a:	d1c5      	bne.n	80231d8 <__swsetup_r+0x24>
 802324c:	bd38      	pop	{r3, r4, r5, pc}
 802324e:	0799      	lsls	r1, r3, #30
 8023250:	bf58      	it	pl
 8023252:	6962      	ldrpl	r2, [r4, #20]
 8023254:	60a2      	str	r2, [r4, #8]
 8023256:	e7f4      	b.n	8023242 <__swsetup_r+0x8e>
 8023258:	2000      	movs	r0, #0
 802325a:	e7f7      	b.n	802324c <__swsetup_r+0x98>
 802325c:	200000b0 	.word	0x200000b0

08023260 <__swhatbuf_r>:
 8023260:	b570      	push	{r4, r5, r6, lr}
 8023262:	460c      	mov	r4, r1
 8023264:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8023268:	2900      	cmp	r1, #0
 802326a:	b096      	sub	sp, #88	@ 0x58
 802326c:	4615      	mov	r5, r2
 802326e:	461e      	mov	r6, r3
 8023270:	da0d      	bge.n	802328e <__swhatbuf_r+0x2e>
 8023272:	89a3      	ldrh	r3, [r4, #12]
 8023274:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8023278:	f04f 0100 	mov.w	r1, #0
 802327c:	bf14      	ite	ne
 802327e:	2340      	movne	r3, #64	@ 0x40
 8023280:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8023284:	2000      	movs	r0, #0
 8023286:	6031      	str	r1, [r6, #0]
 8023288:	602b      	str	r3, [r5, #0]
 802328a:	b016      	add	sp, #88	@ 0x58
 802328c:	bd70      	pop	{r4, r5, r6, pc}
 802328e:	466a      	mov	r2, sp
 8023290:	f000 f848 	bl	8023324 <_fstat_r>
 8023294:	2800      	cmp	r0, #0
 8023296:	dbec      	blt.n	8023272 <__swhatbuf_r+0x12>
 8023298:	9901      	ldr	r1, [sp, #4]
 802329a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 802329e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80232a2:	4259      	negs	r1, r3
 80232a4:	4159      	adcs	r1, r3
 80232a6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80232aa:	e7eb      	b.n	8023284 <__swhatbuf_r+0x24>

080232ac <__smakebuf_r>:
 80232ac:	898b      	ldrh	r3, [r1, #12]
 80232ae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80232b0:	079d      	lsls	r5, r3, #30
 80232b2:	4606      	mov	r6, r0
 80232b4:	460c      	mov	r4, r1
 80232b6:	d507      	bpl.n	80232c8 <__smakebuf_r+0x1c>
 80232b8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80232bc:	6023      	str	r3, [r4, #0]
 80232be:	6123      	str	r3, [r4, #16]
 80232c0:	2301      	movs	r3, #1
 80232c2:	6163      	str	r3, [r4, #20]
 80232c4:	b003      	add	sp, #12
 80232c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80232c8:	ab01      	add	r3, sp, #4
 80232ca:	466a      	mov	r2, sp
 80232cc:	f7ff ffc8 	bl	8023260 <__swhatbuf_r>
 80232d0:	9f00      	ldr	r7, [sp, #0]
 80232d2:	4605      	mov	r5, r0
 80232d4:	4639      	mov	r1, r7
 80232d6:	4630      	mov	r0, r6
 80232d8:	f7ff f87c 	bl	80223d4 <_malloc_r>
 80232dc:	b948      	cbnz	r0, 80232f2 <__smakebuf_r+0x46>
 80232de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80232e2:	059a      	lsls	r2, r3, #22
 80232e4:	d4ee      	bmi.n	80232c4 <__smakebuf_r+0x18>
 80232e6:	f023 0303 	bic.w	r3, r3, #3
 80232ea:	f043 0302 	orr.w	r3, r3, #2
 80232ee:	81a3      	strh	r3, [r4, #12]
 80232f0:	e7e2      	b.n	80232b8 <__smakebuf_r+0xc>
 80232f2:	89a3      	ldrh	r3, [r4, #12]
 80232f4:	6020      	str	r0, [r4, #0]
 80232f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80232fa:	81a3      	strh	r3, [r4, #12]
 80232fc:	9b01      	ldr	r3, [sp, #4]
 80232fe:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8023302:	b15b      	cbz	r3, 802331c <__smakebuf_r+0x70>
 8023304:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8023308:	4630      	mov	r0, r6
 802330a:	f000 f81d 	bl	8023348 <_isatty_r>
 802330e:	b128      	cbz	r0, 802331c <__smakebuf_r+0x70>
 8023310:	89a3      	ldrh	r3, [r4, #12]
 8023312:	f023 0303 	bic.w	r3, r3, #3
 8023316:	f043 0301 	orr.w	r3, r3, #1
 802331a:	81a3      	strh	r3, [r4, #12]
 802331c:	89a3      	ldrh	r3, [r4, #12]
 802331e:	431d      	orrs	r5, r3
 8023320:	81a5      	strh	r5, [r4, #12]
 8023322:	e7cf      	b.n	80232c4 <__smakebuf_r+0x18>

08023324 <_fstat_r>:
 8023324:	b538      	push	{r3, r4, r5, lr}
 8023326:	4d07      	ldr	r5, [pc, #28]	@ (8023344 <_fstat_r+0x20>)
 8023328:	2300      	movs	r3, #0
 802332a:	4604      	mov	r4, r0
 802332c:	4608      	mov	r0, r1
 802332e:	4611      	mov	r1, r2
 8023330:	602b      	str	r3, [r5, #0]
 8023332:	f7de fdff 	bl	8001f34 <_fstat>
 8023336:	1c43      	adds	r3, r0, #1
 8023338:	d102      	bne.n	8023340 <_fstat_r+0x1c>
 802333a:	682b      	ldr	r3, [r5, #0]
 802333c:	b103      	cbz	r3, 8023340 <_fstat_r+0x1c>
 802333e:	6023      	str	r3, [r4, #0]
 8023340:	bd38      	pop	{r3, r4, r5, pc}
 8023342:	bf00      	nop
 8023344:	20003954 	.word	0x20003954

08023348 <_isatty_r>:
 8023348:	b538      	push	{r3, r4, r5, lr}
 802334a:	4d06      	ldr	r5, [pc, #24]	@ (8023364 <_isatty_r+0x1c>)
 802334c:	2300      	movs	r3, #0
 802334e:	4604      	mov	r4, r0
 8023350:	4608      	mov	r0, r1
 8023352:	602b      	str	r3, [r5, #0]
 8023354:	f7de fdfe 	bl	8001f54 <_isatty>
 8023358:	1c43      	adds	r3, r0, #1
 802335a:	d102      	bne.n	8023362 <_isatty_r+0x1a>
 802335c:	682b      	ldr	r3, [r5, #0]
 802335e:	b103      	cbz	r3, 8023362 <_isatty_r+0x1a>
 8023360:	6023      	str	r3, [r4, #0]
 8023362:	bd38      	pop	{r3, r4, r5, pc}
 8023364:	20003954 	.word	0x20003954

08023368 <_init>:
 8023368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802336a:	bf00      	nop
 802336c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802336e:	bc08      	pop	{r3}
 8023370:	469e      	mov	lr, r3
 8023372:	4770      	bx	lr

08023374 <_fini>:
 8023374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8023376:	bf00      	nop
 8023378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802337a:	bc08      	pop	{r3}
 802337c:	469e      	mov	lr, r3
 802337e:	4770      	bx	lr
