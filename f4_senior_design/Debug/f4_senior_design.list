
f4_senior_design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026a18  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002ce8  08026be8  08026be8  00027be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00006996  080298d0  080298d0  0002a8d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002b4  08030268  08030268  00031268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0002fa30  0803051c  0803051c  0003151c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000120  0805ff4c  0805ff4c  00060f4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806006c  0806006c  00062320  2**0
                  CONTENTS
  8 .ARM          00000008  0806006c  0806006c  0006106c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08060074  08060074  00062320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  08060074  08060074  00061074  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   0000000c  0806008c  0806008c  0006108c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         0000010c  20000000  08060098  00062000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000120  080601a4  00062120  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000220  080602a4  00062220  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0000396c  20000320  080603a4  00062320  2**2
                  ALLOC
 16 ._user_heap_stack 00000604  20003c8c  080603a4  00062c8c  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00062320  2**0
                  CONTENTS, READONLY
 18 .debug_info   000ccf0d  00000000  00000000  00062350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00013eb2  00000000  00000000  0012f25d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003d48  00000000  00000000  00143110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 00002d6e  00000000  00000000  00146e58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  00031b78  00000000  00000000  00149bc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   0004757a  00000000  00000000  0017b73e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    00100b07  00000000  00000000  001c2cb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  002c37bf  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00011278  00000000  00000000  002c3884  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  002d4afc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000320 	.word	0x20000320
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08026bd0 	.word	0x08026bd0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000324 	.word	0x20000324
 800020c:	08026bd0 	.word	0x08026bd0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_d2f>:
 8000b5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b60:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b64:	bf24      	itt	cs
 8000b66:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b6a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b6e:	d90d      	bls.n	8000b8c <__aeabi_d2f+0x30>
 8000b70:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b74:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b78:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b7c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b80:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b84:	bf08      	it	eq
 8000b86:	f020 0001 	biceq.w	r0, r0, #1
 8000b8a:	4770      	bx	lr
 8000b8c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b90:	d121      	bne.n	8000bd6 <__aeabi_d2f+0x7a>
 8000b92:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b96:	bfbc      	itt	lt
 8000b98:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b9c:	4770      	bxlt	lr
 8000b9e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ba2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba6:	f1c2 0218 	rsb	r2, r2, #24
 8000baa:	f1c2 0c20 	rsb	ip, r2, #32
 8000bae:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bb2:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb6:	bf18      	it	ne
 8000bb8:	f040 0001 	orrne.w	r0, r0, #1
 8000bbc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc8:	ea40 000c 	orr.w	r0, r0, ip
 8000bcc:	fa23 f302 	lsr.w	r3, r3, r2
 8000bd0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd4:	e7cc      	b.n	8000b70 <__aeabi_d2f+0x14>
 8000bd6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bda:	d107      	bne.n	8000bec <__aeabi_d2f+0x90>
 8000bdc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000be0:	bf1e      	ittt	ne
 8000be2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000be6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bea:	4770      	bxne	lr
 8000bec:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000bf0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000bf4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b96a 	b.w	8000ee8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9d08      	ldr	r5, [sp, #32]
 8000c32:	460c      	mov	r4, r1
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d14e      	bne.n	8000cd6 <__udivmoddi4+0xaa>
 8000c38:	4694      	mov	ip, r2
 8000c3a:	458c      	cmp	ip, r1
 8000c3c:	4686      	mov	lr, r0
 8000c3e:	fab2 f282 	clz	r2, r2
 8000c42:	d962      	bls.n	8000d0a <__udivmoddi4+0xde>
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0320 	rsb	r3, r2, #32
 8000c4a:	4091      	lsls	r1, r2
 8000c4c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c50:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c54:	4319      	orrs	r1, r3
 8000c56:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c5a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c5e:	fa1f f68c 	uxth.w	r6, ip
 8000c62:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c6a:	fb07 1114 	mls	r1, r7, r4, r1
 8000c6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c72:	fb04 f106 	mul.w	r1, r4, r6
 8000c76:	4299      	cmp	r1, r3
 8000c78:	d90a      	bls.n	8000c90 <__udivmoddi4+0x64>
 8000c7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7e:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c82:	f080 8112 	bcs.w	8000eaa <__udivmoddi4+0x27e>
 8000c86:	4299      	cmp	r1, r3
 8000c88:	f240 810f 	bls.w	8000eaa <__udivmoddi4+0x27e>
 8000c8c:	3c02      	subs	r4, #2
 8000c8e:	4463      	add	r3, ip
 8000c90:	1a59      	subs	r1, r3, r1
 8000c92:	fa1f f38e 	uxth.w	r3, lr
 8000c96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c9a:	fb07 1110 	mls	r1, r7, r0, r1
 8000c9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ca2:	fb00 f606 	mul.w	r6, r0, r6
 8000ca6:	429e      	cmp	r6, r3
 8000ca8:	d90a      	bls.n	8000cc0 <__udivmoddi4+0x94>
 8000caa:	eb1c 0303 	adds.w	r3, ip, r3
 8000cae:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cb2:	f080 80fc 	bcs.w	8000eae <__udivmoddi4+0x282>
 8000cb6:	429e      	cmp	r6, r3
 8000cb8:	f240 80f9 	bls.w	8000eae <__udivmoddi4+0x282>
 8000cbc:	4463      	add	r3, ip
 8000cbe:	3802      	subs	r0, #2
 8000cc0:	1b9b      	subs	r3, r3, r6
 8000cc2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	b11d      	cbz	r5, 8000cd2 <__udivmoddi4+0xa6>
 8000cca:	40d3      	lsrs	r3, r2
 8000ccc:	2200      	movs	r2, #0
 8000cce:	e9c5 3200 	strd	r3, r2, [r5]
 8000cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd6:	428b      	cmp	r3, r1
 8000cd8:	d905      	bls.n	8000ce6 <__udivmoddi4+0xba>
 8000cda:	b10d      	cbz	r5, 8000ce0 <__udivmoddi4+0xb4>
 8000cdc:	e9c5 0100 	strd	r0, r1, [r5]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	4608      	mov	r0, r1
 8000ce4:	e7f5      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000ce6:	fab3 f183 	clz	r1, r3
 8000cea:	2900      	cmp	r1, #0
 8000cec:	d146      	bne.n	8000d7c <__udivmoddi4+0x150>
 8000cee:	42a3      	cmp	r3, r4
 8000cf0:	d302      	bcc.n	8000cf8 <__udivmoddi4+0xcc>
 8000cf2:	4290      	cmp	r0, r2
 8000cf4:	f0c0 80f0 	bcc.w	8000ed8 <__udivmoddi4+0x2ac>
 8000cf8:	1a86      	subs	r6, r0, r2
 8000cfa:	eb64 0303 	sbc.w	r3, r4, r3
 8000cfe:	2001      	movs	r0, #1
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	d0e6      	beq.n	8000cd2 <__udivmoddi4+0xa6>
 8000d04:	e9c5 6300 	strd	r6, r3, [r5]
 8000d08:	e7e3      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000d0a:	2a00      	cmp	r2, #0
 8000d0c:	f040 8090 	bne.w	8000e30 <__udivmoddi4+0x204>
 8000d10:	eba1 040c 	sub.w	r4, r1, ip
 8000d14:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d18:	fa1f f78c 	uxth.w	r7, ip
 8000d1c:	2101      	movs	r1, #1
 8000d1e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d26:	fb08 4416 	mls	r4, r8, r6, r4
 8000d2a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d2e:	fb07 f006 	mul.w	r0, r7, r6
 8000d32:	4298      	cmp	r0, r3
 8000d34:	d908      	bls.n	8000d48 <__udivmoddi4+0x11c>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d3e:	d202      	bcs.n	8000d46 <__udivmoddi4+0x11a>
 8000d40:	4298      	cmp	r0, r3
 8000d42:	f200 80cd 	bhi.w	8000ee0 <__udivmoddi4+0x2b4>
 8000d46:	4626      	mov	r6, r4
 8000d48:	1a1c      	subs	r4, r3, r0
 8000d4a:	fa1f f38e 	uxth.w	r3, lr
 8000d4e:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d52:	fb08 4410 	mls	r4, r8, r0, r4
 8000d56:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d5a:	fb00 f707 	mul.w	r7, r0, r7
 8000d5e:	429f      	cmp	r7, r3
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0x148>
 8000d62:	eb1c 0303 	adds.w	r3, ip, r3
 8000d66:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d6a:	d202      	bcs.n	8000d72 <__udivmoddi4+0x146>
 8000d6c:	429f      	cmp	r7, r3
 8000d6e:	f200 80b0 	bhi.w	8000ed2 <__udivmoddi4+0x2a6>
 8000d72:	4620      	mov	r0, r4
 8000d74:	1bdb      	subs	r3, r3, r7
 8000d76:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d7a:	e7a5      	b.n	8000cc8 <__udivmoddi4+0x9c>
 8000d7c:	f1c1 0620 	rsb	r6, r1, #32
 8000d80:	408b      	lsls	r3, r1
 8000d82:	fa22 f706 	lsr.w	r7, r2, r6
 8000d86:	431f      	orrs	r7, r3
 8000d88:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d8c:	fa04 f301 	lsl.w	r3, r4, r1
 8000d90:	ea43 030c 	orr.w	r3, r3, ip
 8000d94:	40f4      	lsrs	r4, r6
 8000d96:	fa00 f801 	lsl.w	r8, r0, r1
 8000d9a:	0c38      	lsrs	r0, r7, #16
 8000d9c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000da0:	fbb4 fef0 	udiv	lr, r4, r0
 8000da4:	fa1f fc87 	uxth.w	ip, r7
 8000da8:	fb00 441e 	mls	r4, r0, lr, r4
 8000dac:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000db0:	fb0e f90c 	mul.w	r9, lr, ip
 8000db4:	45a1      	cmp	r9, r4
 8000db6:	fa02 f201 	lsl.w	r2, r2, r1
 8000dba:	d90a      	bls.n	8000dd2 <__udivmoddi4+0x1a6>
 8000dbc:	193c      	adds	r4, r7, r4
 8000dbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dc2:	f080 8084 	bcs.w	8000ece <__udivmoddi4+0x2a2>
 8000dc6:	45a1      	cmp	r9, r4
 8000dc8:	f240 8081 	bls.w	8000ece <__udivmoddi4+0x2a2>
 8000dcc:	f1ae 0e02 	sub.w	lr, lr, #2
 8000dd0:	443c      	add	r4, r7
 8000dd2:	eba4 0409 	sub.w	r4, r4, r9
 8000dd6:	fa1f f983 	uxth.w	r9, r3
 8000dda:	fbb4 f3f0 	udiv	r3, r4, r0
 8000dde:	fb00 4413 	mls	r4, r0, r3, r4
 8000de2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000de6:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dea:	45a4      	cmp	ip, r4
 8000dec:	d907      	bls.n	8000dfe <__udivmoddi4+0x1d2>
 8000dee:	193c      	adds	r4, r7, r4
 8000df0:	f103 30ff 	add.w	r0, r3, #4294967295
 8000df4:	d267      	bcs.n	8000ec6 <__udivmoddi4+0x29a>
 8000df6:	45a4      	cmp	ip, r4
 8000df8:	d965      	bls.n	8000ec6 <__udivmoddi4+0x29a>
 8000dfa:	3b02      	subs	r3, #2
 8000dfc:	443c      	add	r4, r7
 8000dfe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e02:	fba0 9302 	umull	r9, r3, r0, r2
 8000e06:	eba4 040c 	sub.w	r4, r4, ip
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	46ce      	mov	lr, r9
 8000e0e:	469c      	mov	ip, r3
 8000e10:	d351      	bcc.n	8000eb6 <__udivmoddi4+0x28a>
 8000e12:	d04e      	beq.n	8000eb2 <__udivmoddi4+0x286>
 8000e14:	b155      	cbz	r5, 8000e2c <__udivmoddi4+0x200>
 8000e16:	ebb8 030e 	subs.w	r3, r8, lr
 8000e1a:	eb64 040c 	sbc.w	r4, r4, ip
 8000e1e:	fa04 f606 	lsl.w	r6, r4, r6
 8000e22:	40cb      	lsrs	r3, r1
 8000e24:	431e      	orrs	r6, r3
 8000e26:	40cc      	lsrs	r4, r1
 8000e28:	e9c5 6400 	strd	r6, r4, [r5]
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	e750      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000e30:	f1c2 0320 	rsb	r3, r2, #32
 8000e34:	fa20 f103 	lsr.w	r1, r0, r3
 8000e38:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e3c:	fa24 f303 	lsr.w	r3, r4, r3
 8000e40:	4094      	lsls	r4, r2
 8000e42:	430c      	orrs	r4, r1
 8000e44:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e48:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e4c:	fa1f f78c 	uxth.w	r7, ip
 8000e50:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e54:	fb08 3110 	mls	r1, r8, r0, r3
 8000e58:	0c23      	lsrs	r3, r4, #16
 8000e5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5e:	fb00 f107 	mul.w	r1, r0, r7
 8000e62:	4299      	cmp	r1, r3
 8000e64:	d908      	bls.n	8000e78 <__udivmoddi4+0x24c>
 8000e66:	eb1c 0303 	adds.w	r3, ip, r3
 8000e6a:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e6e:	d22c      	bcs.n	8000eca <__udivmoddi4+0x29e>
 8000e70:	4299      	cmp	r1, r3
 8000e72:	d92a      	bls.n	8000eca <__udivmoddi4+0x29e>
 8000e74:	3802      	subs	r0, #2
 8000e76:	4463      	add	r3, ip
 8000e78:	1a5b      	subs	r3, r3, r1
 8000e7a:	b2a4      	uxth	r4, r4
 8000e7c:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e80:	fb08 3311 	mls	r3, r8, r1, r3
 8000e84:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e88:	fb01 f307 	mul.w	r3, r1, r7
 8000e8c:	42a3      	cmp	r3, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x276>
 8000e90:	eb1c 0404 	adds.w	r4, ip, r4
 8000e94:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e98:	d213      	bcs.n	8000ec2 <__udivmoddi4+0x296>
 8000e9a:	42a3      	cmp	r3, r4
 8000e9c:	d911      	bls.n	8000ec2 <__udivmoddi4+0x296>
 8000e9e:	3902      	subs	r1, #2
 8000ea0:	4464      	add	r4, ip
 8000ea2:	1ae4      	subs	r4, r4, r3
 8000ea4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ea8:	e739      	b.n	8000d1e <__udivmoddi4+0xf2>
 8000eaa:	4604      	mov	r4, r0
 8000eac:	e6f0      	b.n	8000c90 <__udivmoddi4+0x64>
 8000eae:	4608      	mov	r0, r1
 8000eb0:	e706      	b.n	8000cc0 <__udivmoddi4+0x94>
 8000eb2:	45c8      	cmp	r8, r9
 8000eb4:	d2ae      	bcs.n	8000e14 <__udivmoddi4+0x1e8>
 8000eb6:	ebb9 0e02 	subs.w	lr, r9, r2
 8000eba:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ebe:	3801      	subs	r0, #1
 8000ec0:	e7a8      	b.n	8000e14 <__udivmoddi4+0x1e8>
 8000ec2:	4631      	mov	r1, r6
 8000ec4:	e7ed      	b.n	8000ea2 <__udivmoddi4+0x276>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	e799      	b.n	8000dfe <__udivmoddi4+0x1d2>
 8000eca:	4630      	mov	r0, r6
 8000ecc:	e7d4      	b.n	8000e78 <__udivmoddi4+0x24c>
 8000ece:	46d6      	mov	lr, sl
 8000ed0:	e77f      	b.n	8000dd2 <__udivmoddi4+0x1a6>
 8000ed2:	4463      	add	r3, ip
 8000ed4:	3802      	subs	r0, #2
 8000ed6:	e74d      	b.n	8000d74 <__udivmoddi4+0x148>
 8000ed8:	4606      	mov	r6, r0
 8000eda:	4623      	mov	r3, r4
 8000edc:	4608      	mov	r0, r1
 8000ede:	e70f      	b.n	8000d00 <__udivmoddi4+0xd4>
 8000ee0:	3e02      	subs	r6, #2
 8000ee2:	4463      	add	r3, ip
 8000ee4:	e730      	b.n	8000d48 <__udivmoddi4+0x11c>
 8000ee6:	bf00      	nop

08000ee8 <__aeabi_idiv0>:
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop

08000eec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b082      	sub	sp, #8
 8000ef0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ef2:	f001 fd0d 	bl	8002910 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ef6:	f000 f901 	bl	80010fc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000efa:	f000 fbab 	bl	8001654 <MX_GPIO_Init>
  MX_DMA_Init();
 8000efe:	f000 fb73 	bl	80015e8 <MX_DMA_Init>
  MX_SPI2_Init();
 8000f02:	f000 fa01 	bl	8001308 <MX_SPI2_Init>
  MX_CRC_Init();
 8000f06:	f000 f9bd 	bl	8001284 <MX_CRC_Init>
  MX_TIM3_Init();
 8000f0a:	f000 faa9 	bl	8001460 <MX_TIM3_Init>
  MX_TIM2_Init();
 8000f0e:	f000 fa31 	bl	8001374 <MX_TIM2_Init>
  MX_I2C2_Init();
 8000f12:	f000 f9cb 	bl	80012ac <MX_I2C2_Init>
  MX_TIM4_Init();
 8000f16:	f000 faf1 	bl	80014fc <MX_TIM4_Init>
  MX_ADC2_Init();
 8000f1a:	f000 f961 	bl	80011e0 <MX_ADC2_Init>
  MX_TouchGFX_Init();
 8000f1e:	f006 ff2b 	bl	8007d78 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */

	  HAL_TIM_PWM_Init(&htim2);
 8000f22:	4867      	ldr	r0, [pc, #412]	@ (80010c0 <main+0x1d4>)
 8000f24:	f005 ffb8 	bl	8006e98 <HAL_TIM_PWM_Init>



	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f28:	2000      	movs	r0, #0
 8000f2a:	f001 f977 	bl	800221c <Displ_Init>
	  touchgfxSignalVSync();
 8000f2e:	f00f f891 	bl	8010054 <touchgfxSignalVSync>
	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f32:	2000      	movs	r0, #0
 8000f34:	f001 f972 	bl	800221c <Displ_Init>
	  touchgfxSignalVSync();
 8000f38:	f00f f88c 	bl	8010054 <touchgfxSignalVSync>


	  Displ_BackLight('I');  					// initialize backlight
 8000f3c:	2049      	movs	r0, #73	@ 0x49
 8000f3e:	f001 fa13 	bl	8002368 <Displ_BackLight>
	  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 8000f42:	4860      	ldr	r0, [pc, #384]	@ (80010c4 <main+0x1d8>)
 8000f44:	f005 ff38 	bl	8006db8 <HAL_TIM_Base_Start_IT>
	  HAL_ADC_Start_DMA(&hadc2,(uint32_t*)&value_adc,1);
 8000f48:	2201      	movs	r2, #1
 8000f4a:	495f      	ldr	r1, [pc, #380]	@ (80010c8 <main+0x1dc>)
 8000f4c:	485f      	ldr	r0, [pc, #380]	@ (80010cc <main+0x1e0>)
 8000f4e:	f001 fdb9 	bl	8002ac4 <HAL_ADC_Start_DMA>
	  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000f52:	2100      	movs	r1, #0
 8000f54:	485a      	ldr	r0, [pc, #360]	@ (80010c0 <main+0x1d4>)
 8000f56:	f005 fff9 	bl	8006f4c <HAL_TIM_PWM_Start>

	  HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 8000f5a:	2104      	movs	r1, #4
 8000f5c:	485c      	ldr	r0, [pc, #368]	@ (80010d0 <main+0x1e4>)
 8000f5e:	f005 fff5 	bl	8006f4c <HAL_TIM_PWM_Start>
	  htim4.Instance->CCR2 = 10;
 8000f62:	4b5b      	ldr	r3, [pc, #364]	@ (80010d0 <main+0x1e4>)
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	220a      	movs	r2, #10
 8000f68:	639a      	str	r2, [r3, #56]	@ 0x38
	  htim2.Instance->CCR1 = 15000;
 8000f6a:	4b55      	ldr	r3, [pc, #340]	@ (80010c0 <main+0x1d4>)
 8000f6c:	681b      	ldr	r3, [r3, #0]
 8000f6e:	f643 2298 	movw	r2, #15000	@ 0x3a98
 8000f72:	635a      	str	r2, [r3, #52]	@ 0x34
//		  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, 1);
//	  	  HAL_GPIO_WritePin(HUMIDITY_EN_GPIO_Port, HUMIDITY_EN_Pin,1);
//
//		  HAL_Delay(10000);

		  if (HAL_GPIO_ReadPin(WATER_LEVEL_GPIO_Port, WATER_LEVEL_Pin)){
 8000f74:	2120      	movs	r1, #32
 8000f76:	4857      	ldr	r0, [pc, #348]	@ (80010d4 <main+0x1e8>)
 8000f78:	f003 f834 	bl	8003fe4 <HAL_GPIO_ReadPin>
 8000f7c:	4603      	mov	r3, r0
 8000f7e:	2b00      	cmp	r3, #0
 8000f80:	d00b      	beq.n	8000f9a <main+0xae>
			  HAL_GPIO_WritePin(PUMP1_EN_GPIO_Port, PUMP1_EN_Pin, 1);
 8000f82:	2201      	movs	r2, #1
 8000f84:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000f88:	4853      	ldr	r0, [pc, #332]	@ (80010d8 <main+0x1ec>)
 8000f8a:	f003 f843 	bl	8004014 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, 1);
 8000f8e:	2201      	movs	r2, #1
 8000f90:	2140      	movs	r1, #64	@ 0x40
 8000f92:	4850      	ldr	r0, [pc, #320]	@ (80010d4 <main+0x1e8>)
 8000f94:	f003 f83e 	bl	8004014 <HAL_GPIO_WritePin>
 8000f98:	e00a      	b.n	8000fb0 <main+0xc4>
		  }
		  else{
			  HAL_GPIO_WritePin(PUMP1_EN_GPIO_Port, PUMP1_EN_Pin, 0);
 8000f9a:	2200      	movs	r2, #0
 8000f9c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000fa0:	484d      	ldr	r0, [pc, #308]	@ (80010d8 <main+0x1ec>)
 8000fa2:	f003 f837 	bl	8004014 <HAL_GPIO_WritePin>
			  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, 0);
 8000fa6:	2200      	movs	r2, #0
 8000fa8:	2140      	movs	r1, #64	@ 0x40
 8000faa:	484a      	ldr	r0, [pc, #296]	@ (80010d4 <main+0x1e8>)
 8000fac:	f003 f832 	bl	8004014 <HAL_GPIO_WritePin>
		  }




		  HAL_ADC_Start_DMA(&hadc2,(uint32_t*)&value_adc,1); //Read Soil Moisture
 8000fb0:	2201      	movs	r2, #1
 8000fb2:	4945      	ldr	r1, [pc, #276]	@ (80010c8 <main+0x1dc>)
 8000fb4:	4845      	ldr	r0, [pc, #276]	@ (80010cc <main+0x1e0>)
 8000fb6:	f001 fd85 	bl	8002ac4 <HAL_ADC_Start_DMA>

		  HAL_I2C_Master_Transmit (&hi2c2, 0xB8, i2c_buffer, 3, 100);
 8000fba:	2364      	movs	r3, #100	@ 0x64
 8000fbc:	9300      	str	r3, [sp, #0]
 8000fbe:	2303      	movs	r3, #3
 8000fc0:	4a46      	ldr	r2, [pc, #280]	@ (80010dc <main+0x1f0>)
 8000fc2:	21b8      	movs	r1, #184	@ 0xb8
 8000fc4:	4846      	ldr	r0, [pc, #280]	@ (80010e0 <main+0x1f4>)
 8000fc6:	f003 f9b5 	bl	8004334 <HAL_I2C_Master_Transmit>
		  HAL_I2C_Master_Receive (&hi2c2, 0xB9, i2c_return, 8, 100);
 8000fca:	2364      	movs	r3, #100	@ 0x64
 8000fcc:	9300      	str	r3, [sp, #0]
 8000fce:	2308      	movs	r3, #8
 8000fd0:	4a44      	ldr	r2, [pc, #272]	@ (80010e4 <main+0x1f8>)
 8000fd2:	21b9      	movs	r1, #185	@ 0xb9
 8000fd4:	4842      	ldr	r0, [pc, #264]	@ (80010e0 <main+0x1f4>)
 8000fd6:	f003 faab 	bl	8004530 <HAL_I2C_Master_Receive>


		  temp = ((i2c_return[4] << 8) + i2c_return[5]);
 8000fda:	4b42      	ldr	r3, [pc, #264]	@ (80010e4 <main+0x1f8>)
 8000fdc:	791b      	ldrb	r3, [r3, #4]
 8000fde:	021b      	lsls	r3, r3, #8
 8000fe0:	4a40      	ldr	r2, [pc, #256]	@ (80010e4 <main+0x1f8>)
 8000fe2:	7952      	ldrb	r2, [r2, #5]
 8000fe4:	4413      	add	r3, r2
 8000fe6:	ee07 3a90 	vmov	s15, r3
 8000fea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fee:	4b3e      	ldr	r3, [pc, #248]	@ (80010e8 <main+0x1fc>)
 8000ff0:	edc3 7a00 	vstr	s15, [r3]
		  hum = ((i2c_return[2] << 8) + i2c_return[3]);
 8000ff4:	4b3b      	ldr	r3, [pc, #236]	@ (80010e4 <main+0x1f8>)
 8000ff6:	789b      	ldrb	r3, [r3, #2]
 8000ff8:	021b      	lsls	r3, r3, #8
 8000ffa:	4a3a      	ldr	r2, [pc, #232]	@ (80010e4 <main+0x1f8>)
 8000ffc:	78d2      	ldrb	r2, [r2, #3]
 8000ffe:	4413      	add	r3, r2
 8001000:	ee07 3a90 	vmov	s15, r3
 8001004:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001008:	4b38      	ldr	r3, [pc, #224]	@ (80010ec <main+0x200>)
 800100a:	edc3 7a00 	vstr	s15, [r3]
		  temp = floor(temp)/10.0;
 800100e:	4b36      	ldr	r3, [pc, #216]	@ (80010e8 <main+0x1fc>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	4618      	mov	r0, r3
 8001014:	f7ff fab0 	bl	8000578 <__aeabi_f2d>
 8001018:	4602      	mov	r2, r0
 800101a:	460b      	mov	r3, r1
 800101c:	ec43 2b10 	vmov	d0, r2, r3
 8001020:	f024 fd32 	bl	8025a88 <floor>
 8001024:	ec51 0b10 	vmov	r0, r1, d0
 8001028:	f04f 0200 	mov.w	r2, #0
 800102c:	4b30      	ldr	r3, [pc, #192]	@ (80010f0 <main+0x204>)
 800102e:	f7ff fc25 	bl	800087c <__aeabi_ddiv>
 8001032:	4602      	mov	r2, r0
 8001034:	460b      	mov	r3, r1
 8001036:	4610      	mov	r0, r2
 8001038:	4619      	mov	r1, r3
 800103a:	f7ff fd8f 	bl	8000b5c <__aeabi_d2f>
 800103e:	4603      	mov	r3, r0
 8001040:	4a29      	ldr	r2, [pc, #164]	@ (80010e8 <main+0x1fc>)
 8001042:	6013      	str	r3, [r2, #0]
		  hum = floor(hum)/10.0;
 8001044:	4b29      	ldr	r3, [pc, #164]	@ (80010ec <main+0x200>)
 8001046:	681b      	ldr	r3, [r3, #0]
 8001048:	4618      	mov	r0, r3
 800104a:	f7ff fa95 	bl	8000578 <__aeabi_f2d>
 800104e:	4602      	mov	r2, r0
 8001050:	460b      	mov	r3, r1
 8001052:	ec43 2b10 	vmov	d0, r2, r3
 8001056:	f024 fd17 	bl	8025a88 <floor>
 800105a:	ec51 0b10 	vmov	r0, r1, d0
 800105e:	f04f 0200 	mov.w	r2, #0
 8001062:	4b23      	ldr	r3, [pc, #140]	@ (80010f0 <main+0x204>)
 8001064:	f7ff fc0a 	bl	800087c <__aeabi_ddiv>
 8001068:	4602      	mov	r2, r0
 800106a:	460b      	mov	r3, r1
 800106c:	4610      	mov	r0, r2
 800106e:	4619      	mov	r1, r3
 8001070:	f7ff fd74 	bl	8000b5c <__aeabi_d2f>
 8001074:	4603      	mov	r3, r0
 8001076:	4a1d      	ldr	r2, [pc, #116]	@ (80010ec <main+0x200>)
 8001078:	6013      	str	r3, [r2, #0]
//
//		  if (raw_hum > 0 && raw_hum < 100){
//		  			  hum = raw_hum;
//		  		  }

		  if (hum <=(40)){
 800107a:	4b1c      	ldr	r3, [pc, #112]	@ (80010ec <main+0x200>)
 800107c:	edd3 7a00 	vldr	s15, [r3]
 8001080:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 80010f4 <main+0x208>
 8001084:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001088:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800108c:	d805      	bhi.n	800109a <main+0x1ae>
			  HAL_GPIO_WritePin(HUMIDITY_EN_GPIO_Port, HUMIDITY_EN_Pin,1);
 800108e:	2201      	movs	r2, #1
 8001090:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8001094:	4810      	ldr	r0, [pc, #64]	@ (80010d8 <main+0x1ec>)
 8001096:	f002 ffbd 	bl	8004014 <HAL_GPIO_WritePin>
		  }
		  if (hum >=(60)){
 800109a:	4b14      	ldr	r3, [pc, #80]	@ (80010ec <main+0x200>)
 800109c:	edd3 7a00 	vldr	s15, [r3]
 80010a0:	ed9f 7a15 	vldr	s14, [pc, #84]	@ 80010f8 <main+0x20c>
 80010a4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80010a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80010ac:	db05      	blt.n	80010ba <main+0x1ce>
			  HAL_GPIO_WritePin(HUMIDITY_EN_GPIO_Port, HUMIDITY_EN_Pin,0);
 80010ae:	2200      	movs	r2, #0
 80010b0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80010b4:	4808      	ldr	r0, [pc, #32]	@ (80010d8 <main+0x1ec>)
 80010b6:	f002 ffad 	bl	8004014 <HAL_GPIO_WritePin>
//
//
//
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80010ba:	f006 fe65 	bl	8007d88 <MX_TouchGFX_Process>
		  if (HAL_GPIO_ReadPin(WATER_LEVEL_GPIO_Port, WATER_LEVEL_Pin)){
 80010be:	e759      	b.n	8000f74 <main+0x88>
 80010c0:	200004f8 	.word	0x200004f8
 80010c4:	20000540 	.word	0x20000540
 80010c8:	200005d0 	.word	0x200005d0
 80010cc:	2000033c 	.word	0x2000033c
 80010d0:	20000588 	.word	0x20000588
 80010d4:	40020800 	.word	0x40020800
 80010d8:	40020400 	.word	0x40020400
 80010dc:	20000010 	.word	0x20000010
 80010e0:	200003ec 	.word	0x200003ec
 80010e4:	200005dc 	.word	0x200005dc
 80010e8:	200005d4 	.word	0x200005d4
 80010ec:	200005d8 	.word	0x200005d8
 80010f0:	40240000 	.word	0x40240000
 80010f4:	42200000 	.word	0x42200000
 80010f8:	42700000 	.word	0x42700000

080010fc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010fc:	b580      	push	{r7, lr}
 80010fe:	b094      	sub	sp, #80	@ 0x50
 8001100:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001102:	f107 031c 	add.w	r3, r7, #28
 8001106:	2234      	movs	r2, #52	@ 0x34
 8001108:	2100      	movs	r1, #0
 800110a:	4618      	mov	r0, r3
 800110c:	f024 ff47 	bl	8025f9e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001110:	f107 0308 	add.w	r3, r7, #8
 8001114:	2200      	movs	r2, #0
 8001116:	601a      	str	r2, [r3, #0]
 8001118:	605a      	str	r2, [r3, #4]
 800111a:	609a      	str	r2, [r3, #8]
 800111c:	60da      	str	r2, [r3, #12]
 800111e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001120:	2300      	movs	r3, #0
 8001122:	607b      	str	r3, [r7, #4]
 8001124:	4b2c      	ldr	r3, [pc, #176]	@ (80011d8 <SystemClock_Config+0xdc>)
 8001126:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001128:	4a2b      	ldr	r2, [pc, #172]	@ (80011d8 <SystemClock_Config+0xdc>)
 800112a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800112e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001130:	4b29      	ldr	r3, [pc, #164]	@ (80011d8 <SystemClock_Config+0xdc>)
 8001132:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001134:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001138:	607b      	str	r3, [r7, #4]
 800113a:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800113c:	2300      	movs	r3, #0
 800113e:	603b      	str	r3, [r7, #0]
 8001140:	4b26      	ldr	r3, [pc, #152]	@ (80011dc <SystemClock_Config+0xe0>)
 8001142:	681b      	ldr	r3, [r3, #0]
 8001144:	4a25      	ldr	r2, [pc, #148]	@ (80011dc <SystemClock_Config+0xe0>)
 8001146:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800114a:	6013      	str	r3, [r2, #0]
 800114c:	4b23      	ldr	r3, [pc, #140]	@ (80011dc <SystemClock_Config+0xe0>)
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001154:	603b      	str	r3, [r7, #0]
 8001156:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001158:	2302      	movs	r3, #2
 800115a:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800115c:	2301      	movs	r3, #1
 800115e:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001160:	2310      	movs	r3, #16
 8001162:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001164:	2302      	movs	r3, #2
 8001166:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001168:	2300      	movs	r3, #0
 800116a:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 800116c:	2308      	movs	r3, #8
 800116e:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001170:	23b4      	movs	r3, #180	@ 0xb4
 8001172:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001174:	2302      	movs	r3, #2
 8001176:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001178:	2302      	movs	r3, #2
 800117a:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 800117c:	2302      	movs	r3, #2
 800117e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001180:	f107 031c 	add.w	r3, r7, #28
 8001184:	4618      	mov	r0, r3
 8001186:	f004 fb11 	bl	80057ac <HAL_RCC_OscConfig>
 800118a:	4603      	mov	r3, r0
 800118c:	2b00      	cmp	r3, #0
 800118e:	d001      	beq.n	8001194 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001190:	f000 fb2c 	bl	80017ec <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001194:	f003 ff84 	bl	80050a0 <HAL_PWREx_EnableOverDrive>
 8001198:	4603      	mov	r3, r0
 800119a:	2b00      	cmp	r3, #0
 800119c:	d001      	beq.n	80011a2 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 800119e:	f000 fb25 	bl	80017ec <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011a2:	230f      	movs	r3, #15
 80011a4:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80011a6:	2302      	movs	r3, #2
 80011a8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011aa:	2300      	movs	r3, #0
 80011ac:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80011ae:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80011b2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011b4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011b8:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011ba:	f107 0308 	add.w	r3, r7, #8
 80011be:	2105      	movs	r1, #5
 80011c0:	4618      	mov	r0, r3
 80011c2:	f003 ffbd 	bl	8005140 <HAL_RCC_ClockConfig>
 80011c6:	4603      	mov	r3, r0
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d001      	beq.n	80011d0 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 80011cc:	f000 fb0e 	bl	80017ec <Error_Handler>
  }
}
 80011d0:	bf00      	nop
 80011d2:	3750      	adds	r7, #80	@ 0x50
 80011d4:	46bd      	mov	sp, r7
 80011d6:	bd80      	pop	{r7, pc}
 80011d8:	40023800 	.word	0x40023800
 80011dc:	40007000 	.word	0x40007000

080011e0 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 80011e0:	b580      	push	{r7, lr}
 80011e2:	b084      	sub	sp, #16
 80011e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80011e6:	463b      	mov	r3, r7
 80011e8:	2200      	movs	r2, #0
 80011ea:	601a      	str	r2, [r3, #0]
 80011ec:	605a      	str	r2, [r3, #4]
 80011ee:	609a      	str	r2, [r3, #8]
 80011f0:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 80011f2:	4b21      	ldr	r3, [pc, #132]	@ (8001278 <MX_ADC2_Init+0x98>)
 80011f4:	4a21      	ldr	r2, [pc, #132]	@ (800127c <MX_ADC2_Init+0x9c>)
 80011f6:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80011f8:	4b1f      	ldr	r3, [pc, #124]	@ (8001278 <MX_ADC2_Init+0x98>)
 80011fa:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80011fe:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8001200:	4b1d      	ldr	r3, [pc, #116]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001202:	2200      	movs	r2, #0
 8001204:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = DISABLE;
 8001206:	4b1c      	ldr	r3, [pc, #112]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001208:	2200      	movs	r2, #0
 800120a:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 800120c:	4b1a      	ldr	r3, [pc, #104]	@ (8001278 <MX_ADC2_Init+0x98>)
 800120e:	2201      	movs	r2, #1
 8001210:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001212:	4b19      	ldr	r3, [pc, #100]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001214:	2200      	movs	r2, #0
 8001216:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800121a:	4b17      	ldr	r3, [pc, #92]	@ (8001278 <MX_ADC2_Init+0x98>)
 800121c:	2200      	movs	r2, #0
 800121e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001220:	4b15      	ldr	r3, [pc, #84]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001222:	4a17      	ldr	r2, [pc, #92]	@ (8001280 <MX_ADC2_Init+0xa0>)
 8001224:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001226:	4b14      	ldr	r3, [pc, #80]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001228:	2200      	movs	r2, #0
 800122a:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 1;
 800122c:	4b12      	ldr	r3, [pc, #72]	@ (8001278 <MX_ADC2_Init+0x98>)
 800122e:	2201      	movs	r2, #1
 8001230:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8001232:	4b11      	ldr	r3, [pc, #68]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001234:	2200      	movs	r2, #0
 8001236:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800123a:	4b0f      	ldr	r3, [pc, #60]	@ (8001278 <MX_ADC2_Init+0x98>)
 800123c:	2201      	movs	r2, #1
 800123e:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001240:	480d      	ldr	r0, [pc, #52]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001242:	f001 fbfb 	bl	8002a3c <HAL_ADC_Init>
 8001246:	4603      	mov	r3, r0
 8001248:	2b00      	cmp	r3, #0
 800124a:	d001      	beq.n	8001250 <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 800124c:	f000 face 	bl	80017ec <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_14;
 8001250:	230e      	movs	r3, #14
 8001252:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001254:	2301      	movs	r3, #1
 8001256:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001258:	2300      	movs	r3, #0
 800125a:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800125c:	463b      	mov	r3, r7
 800125e:	4619      	mov	r1, r3
 8001260:	4805      	ldr	r0, [pc, #20]	@ (8001278 <MX_ADC2_Init+0x98>)
 8001262:	f001 fd5d 	bl	8002d20 <HAL_ADC_ConfigChannel>
 8001266:	4603      	mov	r3, r0
 8001268:	2b00      	cmp	r3, #0
 800126a:	d001      	beq.n	8001270 <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 800126c:	f000 fabe 	bl	80017ec <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8001270:	bf00      	nop
 8001272:	3710      	adds	r7, #16
 8001274:	46bd      	mov	sp, r7
 8001276:	bd80      	pop	{r7, pc}
 8001278:	2000033c 	.word	0x2000033c
 800127c:	40012100 	.word	0x40012100
 8001280:	0f000001 	.word	0x0f000001

08001284 <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 8001284:	b580      	push	{r7, lr}
 8001286:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001288:	4b06      	ldr	r3, [pc, #24]	@ (80012a4 <MX_CRC_Init+0x20>)
 800128a:	4a07      	ldr	r2, [pc, #28]	@ (80012a8 <MX_CRC_Init+0x24>)
 800128c:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800128e:	4805      	ldr	r0, [pc, #20]	@ (80012a4 <MX_CRC_Init+0x20>)
 8001290:	f002 f965 	bl	800355e <HAL_CRC_Init>
 8001294:	4603      	mov	r3, r0
 8001296:	2b00      	cmp	r3, #0
 8001298:	d001      	beq.n	800129e <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 800129a:	f000 faa7 	bl	80017ec <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 800129e:	bf00      	nop
 80012a0:	bd80      	pop	{r7, pc}
 80012a2:	bf00      	nop
 80012a4:	200003e4 	.word	0x200003e4
 80012a8:	40023000 	.word	0x40023000

080012ac <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80012ac:	b580      	push	{r7, lr}
 80012ae:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80012b0:	4b12      	ldr	r3, [pc, #72]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012b2:	4a13      	ldr	r2, [pc, #76]	@ (8001300 <MX_I2C2_Init+0x54>)
 80012b4:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 80012b6:	4b11      	ldr	r3, [pc, #68]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012b8:	4a12      	ldr	r2, [pc, #72]	@ (8001304 <MX_I2C2_Init+0x58>)
 80012ba:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012bc:	4b0f      	ldr	r3, [pc, #60]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012be:	2200      	movs	r2, #0
 80012c0:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 80012c2:	4b0e      	ldr	r3, [pc, #56]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012c4:	2200      	movs	r2, #0
 80012c6:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012c8:	4b0c      	ldr	r3, [pc, #48]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012ca:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80012ce:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012d0:	4b0a      	ldr	r3, [pc, #40]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012d2:	2200      	movs	r2, #0
 80012d4:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 80012d6:	4b09      	ldr	r3, [pc, #36]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012d8:	2200      	movs	r2, #0
 80012da:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012dc:	4b07      	ldr	r3, [pc, #28]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012de:	2200      	movs	r2, #0
 80012e0:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012e2:	4b06      	ldr	r3, [pc, #24]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012e4:	2200      	movs	r2, #0
 80012e6:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80012e8:	4804      	ldr	r0, [pc, #16]	@ (80012fc <MX_I2C2_Init+0x50>)
 80012ea:	f002 fedf 	bl	80040ac <HAL_I2C_Init>
 80012ee:	4603      	mov	r3, r0
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d001      	beq.n	80012f8 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 80012f4:	f000 fa7a 	bl	80017ec <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 80012f8:	bf00      	nop
 80012fa:	bd80      	pop	{r7, pc}
 80012fc:	200003ec 	.word	0x200003ec
 8001300:	40005800 	.word	0x40005800
 8001304:	000186a0 	.word	0x000186a0

08001308 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001308:	b580      	push	{r7, lr}
 800130a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 800130c:	4b17      	ldr	r3, [pc, #92]	@ (800136c <MX_SPI2_Init+0x64>)
 800130e:	4a18      	ldr	r2, [pc, #96]	@ (8001370 <MX_SPI2_Init+0x68>)
 8001310:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8001312:	4b16      	ldr	r3, [pc, #88]	@ (800136c <MX_SPI2_Init+0x64>)
 8001314:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001318:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 800131a:	4b14      	ldr	r3, [pc, #80]	@ (800136c <MX_SPI2_Init+0x64>)
 800131c:	2200      	movs	r2, #0
 800131e:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001320:	4b12      	ldr	r3, [pc, #72]	@ (800136c <MX_SPI2_Init+0x64>)
 8001322:	2200      	movs	r2, #0
 8001324:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001326:	4b11      	ldr	r3, [pc, #68]	@ (800136c <MX_SPI2_Init+0x64>)
 8001328:	2200      	movs	r2, #0
 800132a:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 800132c:	4b0f      	ldr	r3, [pc, #60]	@ (800136c <MX_SPI2_Init+0x64>)
 800132e:	2200      	movs	r2, #0
 8001330:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8001332:	4b0e      	ldr	r3, [pc, #56]	@ (800136c <MX_SPI2_Init+0x64>)
 8001334:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001338:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800133a:	4b0c      	ldr	r3, [pc, #48]	@ (800136c <MX_SPI2_Init+0x64>)
 800133c:	2200      	movs	r2, #0
 800133e:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001340:	4b0a      	ldr	r3, [pc, #40]	@ (800136c <MX_SPI2_Init+0x64>)
 8001342:	2200      	movs	r2, #0
 8001344:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8001346:	4b09      	ldr	r3, [pc, #36]	@ (800136c <MX_SPI2_Init+0x64>)
 8001348:	2200      	movs	r2, #0
 800134a:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800134c:	4b07      	ldr	r3, [pc, #28]	@ (800136c <MX_SPI2_Init+0x64>)
 800134e:	2200      	movs	r2, #0
 8001350:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 8001352:	4b06      	ldr	r3, [pc, #24]	@ (800136c <MX_SPI2_Init+0x64>)
 8001354:	220a      	movs	r2, #10
 8001356:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001358:	4804      	ldr	r0, [pc, #16]	@ (800136c <MX_SPI2_Init+0x64>)
 800135a:	f004 fcc5 	bl	8005ce8 <HAL_SPI_Init>
 800135e:	4603      	mov	r3, r0
 8001360:	2b00      	cmp	r3, #0
 8001362:	d001      	beq.n	8001368 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8001364:	f000 fa42 	bl	80017ec <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001368:	bf00      	nop
 800136a:	bd80      	pop	{r7, pc}
 800136c:	20000440 	.word	0x20000440
 8001370:	40003800 	.word	0x40003800

08001374 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8001374:	b580      	push	{r7, lr}
 8001376:	b08e      	sub	sp, #56	@ 0x38
 8001378:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800137a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800137e:	2200      	movs	r2, #0
 8001380:	601a      	str	r2, [r3, #0]
 8001382:	605a      	str	r2, [r3, #4]
 8001384:	609a      	str	r2, [r3, #8]
 8001386:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001388:	f107 0320 	add.w	r3, r7, #32
 800138c:	2200      	movs	r2, #0
 800138e:	601a      	str	r2, [r3, #0]
 8001390:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001392:	1d3b      	adds	r3, r7, #4
 8001394:	2200      	movs	r2, #0
 8001396:	601a      	str	r2, [r3, #0]
 8001398:	605a      	str	r2, [r3, #4]
 800139a:	609a      	str	r2, [r3, #8]
 800139c:	60da      	str	r2, [r3, #12]
 800139e:	611a      	str	r2, [r3, #16]
 80013a0:	615a      	str	r2, [r3, #20]
 80013a2:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80013a4:	4b2d      	ldr	r3, [pc, #180]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013a6:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80013aa:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 59999;
 80013ac:	4b2b      	ldr	r3, [pc, #172]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013ae:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80013b2:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013b4:	4b29      	ldr	r3, [pc, #164]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013b6:	2200      	movs	r2, #0
 80013b8:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 29999;
 80013ba:	4b28      	ldr	r3, [pc, #160]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013bc:	f247 522f 	movw	r2, #29999	@ 0x752f
 80013c0:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013c2:	4b26      	ldr	r3, [pc, #152]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013c4:	2200      	movs	r2, #0
 80013c6:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80013c8:	4b24      	ldr	r3, [pc, #144]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80013ce:	4823      	ldr	r0, [pc, #140]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013d0:	f005 fca2 	bl	8006d18 <HAL_TIM_Base_Init>
 80013d4:	4603      	mov	r3, r0
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	d001      	beq.n	80013de <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 80013da:	f000 fa07 	bl	80017ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80013de:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80013e2:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80013e4:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80013e8:	4619      	mov	r1, r3
 80013ea:	481c      	ldr	r0, [pc, #112]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013ec:	f006 f828 	bl	8007440 <HAL_TIM_ConfigClockSource>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d001      	beq.n	80013fa <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 80013f6:	f000 f9f9 	bl	80017ec <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80013fa:	4818      	ldr	r0, [pc, #96]	@ (800145c <MX_TIM2_Init+0xe8>)
 80013fc:	f005 fd4c 	bl	8006e98 <HAL_TIM_PWM_Init>
 8001400:	4603      	mov	r3, r0
 8001402:	2b00      	cmp	r3, #0
 8001404:	d001      	beq.n	800140a <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 8001406:	f000 f9f1 	bl	80017ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800140a:	2300      	movs	r3, #0
 800140c:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800140e:	2300      	movs	r3, #0
 8001410:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001412:	f107 0320 	add.w	r3, r7, #32
 8001416:	4619      	mov	r1, r3
 8001418:	4810      	ldr	r0, [pc, #64]	@ (800145c <MX_TIM2_Init+0xe8>)
 800141a:	f006 fc1d 	bl	8007c58 <HAL_TIMEx_MasterConfigSynchronization>
 800141e:	4603      	mov	r3, r0
 8001420:	2b00      	cmp	r3, #0
 8001422:	d001      	beq.n	8001428 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 8001424:	f000 f9e2 	bl	80017ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001428:	2360      	movs	r3, #96	@ 0x60
 800142a:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 800142c:	2300      	movs	r3, #0
 800142e:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001430:	2300      	movs	r3, #0
 8001432:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001434:	2300      	movs	r3, #0
 8001436:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001438:	1d3b      	adds	r3, r7, #4
 800143a:	2200      	movs	r2, #0
 800143c:	4619      	mov	r1, r3
 800143e:	4807      	ldr	r0, [pc, #28]	@ (800145c <MX_TIM2_Init+0xe8>)
 8001440:	f005 ff3c 	bl	80072bc <HAL_TIM_PWM_ConfigChannel>
 8001444:	4603      	mov	r3, r0
 8001446:	2b00      	cmp	r3, #0
 8001448:	d001      	beq.n	800144e <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 800144a:	f000 f9cf 	bl	80017ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800144e:	4803      	ldr	r0, [pc, #12]	@ (800145c <MX_TIM2_Init+0xe8>)
 8001450:	f000 fc0a 	bl	8001c68 <HAL_TIM_MspPostInit>

}
 8001454:	bf00      	nop
 8001456:	3738      	adds	r7, #56	@ 0x38
 8001458:	46bd      	mov	sp, r7
 800145a:	bd80      	pop	{r7, pc}
 800145c:	200004f8 	.word	0x200004f8

08001460 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001460:	b580      	push	{r7, lr}
 8001462:	b086      	sub	sp, #24
 8001464:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001466:	f107 0308 	add.w	r3, r7, #8
 800146a:	2200      	movs	r2, #0
 800146c:	601a      	str	r2, [r3, #0]
 800146e:	605a      	str	r2, [r3, #4]
 8001470:	609a      	str	r2, [r3, #8]
 8001472:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001474:	463b      	mov	r3, r7
 8001476:	2200      	movs	r2, #0
 8001478:	601a      	str	r2, [r3, #0]
 800147a:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 800147c:	4b1d      	ldr	r3, [pc, #116]	@ (80014f4 <MX_TIM3_Init+0x94>)
 800147e:	4a1e      	ldr	r2, [pc, #120]	@ (80014f8 <MX_TIM3_Init+0x98>)
 8001480:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9999;
 8001482:	4b1c      	ldr	r3, [pc, #112]	@ (80014f4 <MX_TIM3_Init+0x94>)
 8001484:	f242 720f 	movw	r2, #9999	@ 0x270f
 8001488:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 800148a:	4b1a      	ldr	r3, [pc, #104]	@ (80014f4 <MX_TIM3_Init+0x94>)
 800148c:	2200      	movs	r2, #0
 800148e:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 299;
 8001490:	4b18      	ldr	r3, [pc, #96]	@ (80014f4 <MX_TIM3_Init+0x94>)
 8001492:	f240 122b 	movw	r2, #299	@ 0x12b
 8001496:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001498:	4b16      	ldr	r3, [pc, #88]	@ (80014f4 <MX_TIM3_Init+0x94>)
 800149a:	2200      	movs	r2, #0
 800149c:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800149e:	4b15      	ldr	r3, [pc, #84]	@ (80014f4 <MX_TIM3_Init+0x94>)
 80014a0:	2200      	movs	r2, #0
 80014a2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80014a4:	4813      	ldr	r0, [pc, #76]	@ (80014f4 <MX_TIM3_Init+0x94>)
 80014a6:	f005 fc37 	bl	8006d18 <HAL_TIM_Base_Init>
 80014aa:	4603      	mov	r3, r0
 80014ac:	2b00      	cmp	r3, #0
 80014ae:	d001      	beq.n	80014b4 <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80014b0:	f000 f99c 	bl	80017ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014b4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014b8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80014ba:	f107 0308 	add.w	r3, r7, #8
 80014be:	4619      	mov	r1, r3
 80014c0:	480c      	ldr	r0, [pc, #48]	@ (80014f4 <MX_TIM3_Init+0x94>)
 80014c2:	f005 ffbd 	bl	8007440 <HAL_TIM_ConfigClockSource>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d001      	beq.n	80014d0 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80014cc:	f000 f98e 	bl	80017ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014d0:	2300      	movs	r3, #0
 80014d2:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014d4:	2300      	movs	r3, #0
 80014d6:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80014d8:	463b      	mov	r3, r7
 80014da:	4619      	mov	r1, r3
 80014dc:	4805      	ldr	r0, [pc, #20]	@ (80014f4 <MX_TIM3_Init+0x94>)
 80014de:	f006 fbbb 	bl	8007c58 <HAL_TIMEx_MasterConfigSynchronization>
 80014e2:	4603      	mov	r3, r0
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d001      	beq.n	80014ec <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80014e8:	f000 f980 	bl	80017ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80014ec:	bf00      	nop
 80014ee:	3718      	adds	r7, #24
 80014f0:	46bd      	mov	sp, r7
 80014f2:	bd80      	pop	{r7, pc}
 80014f4:	20000540 	.word	0x20000540
 80014f8:	40000400 	.word	0x40000400

080014fc <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80014fc:	b580      	push	{r7, lr}
 80014fe:	b08e      	sub	sp, #56	@ 0x38
 8001500:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001502:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001506:	2200      	movs	r2, #0
 8001508:	601a      	str	r2, [r3, #0]
 800150a:	605a      	str	r2, [r3, #4]
 800150c:	609a      	str	r2, [r3, #8]
 800150e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001510:	f107 0320 	add.w	r3, r7, #32
 8001514:	2200      	movs	r2, #0
 8001516:	601a      	str	r2, [r3, #0]
 8001518:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800151a:	1d3b      	adds	r3, r7, #4
 800151c:	2200      	movs	r2, #0
 800151e:	601a      	str	r2, [r3, #0]
 8001520:	605a      	str	r2, [r3, #4]
 8001522:	609a      	str	r2, [r3, #8]
 8001524:	60da      	str	r2, [r3, #12]
 8001526:	611a      	str	r2, [r3, #16]
 8001528:	615a      	str	r2, [r3, #20]
 800152a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800152c:	4b2c      	ldr	r3, [pc, #176]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 800152e:	4a2d      	ldr	r2, [pc, #180]	@ (80015e4 <MX_TIM4_Init+0xe8>)
 8001530:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 44999;
 8001532:	4b2b      	ldr	r3, [pc, #172]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 8001534:	f64a 72c7 	movw	r2, #44999	@ 0xafc7
 8001538:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800153a:	4b29      	ldr	r3, [pc, #164]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 800153c:	2200      	movs	r2, #0
 800153e:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 19;
 8001540:	4b27      	ldr	r3, [pc, #156]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 8001542:	2213      	movs	r2, #19
 8001544:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001546:	4b26      	ldr	r3, [pc, #152]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 8001548:	2200      	movs	r2, #0
 800154a:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800154c:	4b24      	ldr	r3, [pc, #144]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 800154e:	2200      	movs	r2, #0
 8001550:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8001552:	4823      	ldr	r0, [pc, #140]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 8001554:	f005 fbe0 	bl	8006d18 <HAL_TIM_Base_Init>
 8001558:	4603      	mov	r3, r0
 800155a:	2b00      	cmp	r3, #0
 800155c:	d001      	beq.n	8001562 <MX_TIM4_Init+0x66>
  {
    Error_Handler();
 800155e:	f000 f945 	bl	80017ec <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001562:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001566:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001568:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800156c:	4619      	mov	r1, r3
 800156e:	481c      	ldr	r0, [pc, #112]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 8001570:	f005 ff66 	bl	8007440 <HAL_TIM_ConfigClockSource>
 8001574:	4603      	mov	r3, r0
 8001576:	2b00      	cmp	r3, #0
 8001578:	d001      	beq.n	800157e <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 800157a:	f000 f937 	bl	80017ec <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 800157e:	4818      	ldr	r0, [pc, #96]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 8001580:	f005 fc8a 	bl	8006e98 <HAL_TIM_PWM_Init>
 8001584:	4603      	mov	r3, r0
 8001586:	2b00      	cmp	r3, #0
 8001588:	d001      	beq.n	800158e <MX_TIM4_Init+0x92>
  {
    Error_Handler();
 800158a:	f000 f92f 	bl	80017ec <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800158e:	2300      	movs	r3, #0
 8001590:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001592:	2300      	movs	r3, #0
 8001594:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8001596:	f107 0320 	add.w	r3, r7, #32
 800159a:	4619      	mov	r1, r3
 800159c:	4810      	ldr	r0, [pc, #64]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 800159e:	f006 fb5b 	bl	8007c58 <HAL_TIMEx_MasterConfigSynchronization>
 80015a2:	4603      	mov	r3, r0
 80015a4:	2b00      	cmp	r3, #0
 80015a6:	d001      	beq.n	80015ac <MX_TIM4_Init+0xb0>
  {
    Error_Handler();
 80015a8:	f000 f920 	bl	80017ec <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80015ac:	2360      	movs	r3, #96	@ 0x60
 80015ae:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80015b0:	2300      	movs	r3, #0
 80015b2:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80015b4:	2300      	movs	r3, #0
 80015b6:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80015b8:	2300      	movs	r3, #0
 80015ba:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80015bc:	1d3b      	adds	r3, r7, #4
 80015be:	2204      	movs	r2, #4
 80015c0:	4619      	mov	r1, r3
 80015c2:	4807      	ldr	r0, [pc, #28]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 80015c4:	f005 fe7a 	bl	80072bc <HAL_TIM_PWM_ConfigChannel>
 80015c8:	4603      	mov	r3, r0
 80015ca:	2b00      	cmp	r3, #0
 80015cc:	d001      	beq.n	80015d2 <MX_TIM4_Init+0xd6>
  {
    Error_Handler();
 80015ce:	f000 f90d 	bl	80017ec <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80015d2:	4803      	ldr	r0, [pc, #12]	@ (80015e0 <MX_TIM4_Init+0xe4>)
 80015d4:	f000 fb48 	bl	8001c68 <HAL_TIM_MspPostInit>

}
 80015d8:	bf00      	nop
 80015da:	3738      	adds	r7, #56	@ 0x38
 80015dc:	46bd      	mov	sp, r7
 80015de:	bd80      	pop	{r7, pc}
 80015e0:	20000588 	.word	0x20000588
 80015e4:	40000800 	.word	0x40000800

080015e8 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b082      	sub	sp, #8
 80015ec:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015ee:	2300      	movs	r3, #0
 80015f0:	607b      	str	r3, [r7, #4]
 80015f2:	4b17      	ldr	r3, [pc, #92]	@ (8001650 <MX_DMA_Init+0x68>)
 80015f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015f6:	4a16      	ldr	r2, [pc, #88]	@ (8001650 <MX_DMA_Init+0x68>)
 80015f8:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80015fc:	6313      	str	r3, [r2, #48]	@ 0x30
 80015fe:	4b14      	ldr	r3, [pc, #80]	@ (8001650 <MX_DMA_Init+0x68>)
 8001600:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001602:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001606:	607b      	str	r3, [r7, #4]
 8001608:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 800160a:	2300      	movs	r3, #0
 800160c:	603b      	str	r3, [r7, #0]
 800160e:	4b10      	ldr	r3, [pc, #64]	@ (8001650 <MX_DMA_Init+0x68>)
 8001610:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001612:	4a0f      	ldr	r2, [pc, #60]	@ (8001650 <MX_DMA_Init+0x68>)
 8001614:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001618:	6313      	str	r3, [r2, #48]	@ 0x30
 800161a:	4b0d      	ldr	r3, [pc, #52]	@ (8001650 <MX_DMA_Init+0x68>)
 800161c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800161e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001622:	603b      	str	r3, [r7, #0]
 8001624:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 8001626:	2200      	movs	r2, #0
 8001628:	2100      	movs	r1, #0
 800162a:	200f      	movs	r0, #15
 800162c:	f001 ff45 	bl	80034ba <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8001630:	200f      	movs	r0, #15
 8001632:	f001 ff5e 	bl	80034f2 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 8001636:	2200      	movs	r2, #0
 8001638:	2100      	movs	r1, #0
 800163a:	203a      	movs	r0, #58	@ 0x3a
 800163c:	f001 ff3d 	bl	80034ba <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8001640:	203a      	movs	r0, #58	@ 0x3a
 8001642:	f001 ff56 	bl	80034f2 <HAL_NVIC_EnableIRQ>

}
 8001646:	bf00      	nop
 8001648:	3708      	adds	r7, #8
 800164a:	46bd      	mov	sp, r7
 800164c:	bd80      	pop	{r7, pc}
 800164e:	bf00      	nop
 8001650:	40023800 	.word	0x40023800

08001654 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001654:	b580      	push	{r7, lr}
 8001656:	b088      	sub	sp, #32
 8001658:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800165a:	f107 030c 	add.w	r3, r7, #12
 800165e:	2200      	movs	r2, #0
 8001660:	601a      	str	r2, [r3, #0]
 8001662:	605a      	str	r2, [r3, #4]
 8001664:	609a      	str	r2, [r3, #8]
 8001666:	60da      	str	r2, [r3, #12]
 8001668:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800166a:	2300      	movs	r3, #0
 800166c:	60bb      	str	r3, [r7, #8]
 800166e:	4b53      	ldr	r3, [pc, #332]	@ (80017bc <MX_GPIO_Init+0x168>)
 8001670:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001672:	4a52      	ldr	r2, [pc, #328]	@ (80017bc <MX_GPIO_Init+0x168>)
 8001674:	f043 0304 	orr.w	r3, r3, #4
 8001678:	6313      	str	r3, [r2, #48]	@ 0x30
 800167a:	4b50      	ldr	r3, [pc, #320]	@ (80017bc <MX_GPIO_Init+0x168>)
 800167c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800167e:	f003 0304 	and.w	r3, r3, #4
 8001682:	60bb      	str	r3, [r7, #8]
 8001684:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001686:	2300      	movs	r3, #0
 8001688:	607b      	str	r3, [r7, #4]
 800168a:	4b4c      	ldr	r3, [pc, #304]	@ (80017bc <MX_GPIO_Init+0x168>)
 800168c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800168e:	4a4b      	ldr	r2, [pc, #300]	@ (80017bc <MX_GPIO_Init+0x168>)
 8001690:	f043 0301 	orr.w	r3, r3, #1
 8001694:	6313      	str	r3, [r2, #48]	@ 0x30
 8001696:	4b49      	ldr	r3, [pc, #292]	@ (80017bc <MX_GPIO_Init+0x168>)
 8001698:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800169a:	f003 0301 	and.w	r3, r3, #1
 800169e:	607b      	str	r3, [r7, #4]
 80016a0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016a2:	2300      	movs	r3, #0
 80016a4:	603b      	str	r3, [r7, #0]
 80016a6:	4b45      	ldr	r3, [pc, #276]	@ (80017bc <MX_GPIO_Init+0x168>)
 80016a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016aa:	4a44      	ldr	r2, [pc, #272]	@ (80017bc <MX_GPIO_Init+0x168>)
 80016ac:	f043 0302 	orr.w	r3, r3, #2
 80016b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80016b2:	4b42      	ldr	r3, [pc, #264]	@ (80017bc <MX_GPIO_Init+0x168>)
 80016b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016b6:	f003 0302 	and.w	r3, r3, #2
 80016ba:	603b      	str	r3, [r7, #0]
 80016bc:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, DISPL_LED_Pin|DISPL_DC_Pin, GPIO_PIN_RESET);
 80016be:	2200      	movs	r2, #0
 80016c0:	21c0      	movs	r1, #192	@ 0xc0
 80016c2:	483f      	ldr	r0, [pc, #252]	@ (80017c0 <MX_GPIO_Init+0x16c>)
 80016c4:	f002 fca6 	bl	8004014 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, PUMP1_EN_Pin|HUMIDITY_EN_Pin|DISPL_RST_Pin, GPIO_PIN_RESET);
 80016c8:	2200      	movs	r2, #0
 80016ca:	f249 0140 	movw	r1, #36928	@ 0x9040
 80016ce:	483d      	ldr	r0, [pc, #244]	@ (80017c4 <MX_GPIO_Init+0x170>)
 80016d0:	f002 fca0 	bl	8004014 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin, GPIO_PIN_RESET);
 80016d4:	2200      	movs	r2, #0
 80016d6:	2140      	movs	r1, #64	@ 0x40
 80016d8:	483b      	ldr	r0, [pc, #236]	@ (80017c8 <MX_GPIO_Init+0x174>)
 80016da:	f002 fc9b 	bl	8004014 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 80016de:	2201      	movs	r2, #1
 80016e0:	2180      	movs	r1, #128	@ 0x80
 80016e2:	4839      	ldr	r0, [pc, #228]	@ (80017c8 <MX_GPIO_Init+0x174>)
 80016e4:	f002 fc96 	bl	8004014 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 80016e8:	2201      	movs	r2, #1
 80016ea:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80016ee:	4834      	ldr	r0, [pc, #208]	@ (80017c0 <MX_GPIO_Init+0x16c>)
 80016f0:	f002 fc90 	bl	8004014 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : DISPL_LED_Pin DISPL_DC_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = DISPL_LED_Pin|DISPL_DC_Pin|TOUCH_CS_Pin;
 80016f4:	f44f 7330 	mov.w	r3, #704	@ 0x2c0
 80016f8:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016fa:	2301      	movs	r3, #1
 80016fc:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016fe:	2300      	movs	r3, #0
 8001700:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001702:	2300      	movs	r3, #0
 8001704:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001706:	f107 030c 	add.w	r3, r7, #12
 800170a:	4619      	mov	r1, r3
 800170c:	482c      	ldr	r0, [pc, #176]	@ (80017c0 <MX_GPIO_Init+0x16c>)
 800170e:	f002 fad5 	bl	8003cbc <HAL_GPIO_Init>

  /*Configure GPIO pin : WATER_LEVEL_Pin */
  GPIO_InitStruct.Pin = WATER_LEVEL_Pin;
 8001712:	2320      	movs	r3, #32
 8001714:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001716:	2300      	movs	r3, #0
 8001718:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800171a:	2300      	movs	r3, #0
 800171c:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(WATER_LEVEL_GPIO_Port, &GPIO_InitStruct);
 800171e:	f107 030c 	add.w	r3, r7, #12
 8001722:	4619      	mov	r1, r3
 8001724:	4828      	ldr	r0, [pc, #160]	@ (80017c8 <MX_GPIO_Init+0x174>)
 8001726:	f002 fac9 	bl	8003cbc <HAL_GPIO_Init>

  /*Configure GPIO pins : PUMP1_EN_Pin HUMIDITY_EN_Pin DISPL_RST_Pin */
  GPIO_InitStruct.Pin = PUMP1_EN_Pin|HUMIDITY_EN_Pin|DISPL_RST_Pin;
 800172a:	f249 0340 	movw	r3, #36928	@ 0x9040
 800172e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001730:	2301      	movs	r3, #1
 8001732:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001734:	2300      	movs	r3, #0
 8001736:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001738:	2300      	movs	r3, #0
 800173a:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800173c:	f107 030c 	add.w	r3, r7, #12
 8001740:	4619      	mov	r1, r3
 8001742:	4820      	ldr	r0, [pc, #128]	@ (80017c4 <MX_GPIO_Init+0x170>)
 8001744:	f002 faba 	bl	8003cbc <HAL_GPIO_Init>

  /*Configure GPIO pins : PUMP2_EN_Pin DISPL_CS_Pin */
  GPIO_InitStruct.Pin = PUMP2_EN_Pin|DISPL_CS_Pin;
 8001748:	23c0      	movs	r3, #192	@ 0xc0
 800174a:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800174c:	2301      	movs	r3, #1
 800174e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001750:	2300      	movs	r3, #0
 8001752:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001754:	2300      	movs	r3, #0
 8001756:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001758:	f107 030c 	add.w	r3, r7, #12
 800175c:	4619      	mov	r1, r3
 800175e:	481a      	ldr	r0, [pc, #104]	@ (80017c8 <MX_GPIO_Init+0x174>)
 8001760:	f002 faac 	bl	8003cbc <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8001764:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001768:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800176a:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 800176e:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001770:	2301      	movs	r3, #1
 8001772:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8001774:	f107 030c 	add.w	r3, r7, #12
 8001778:	4619      	mov	r1, r3
 800177a:	4811      	ldr	r0, [pc, #68]	@ (80017c0 <MX_GPIO_Init+0x16c>)
 800177c:	f002 fa9e 	bl	8003cbc <HAL_GPIO_Init>

  /*Configure GPIO pins : PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001780:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001784:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001786:	2312      	movs	r3, #18
 8001788:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800178a:	2300      	movs	r3, #0
 800178c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800178e:	2303      	movs	r3, #3
 8001790:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001792:	2304      	movs	r3, #4
 8001794:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001796:	f107 030c 	add.w	r3, r7, #12
 800179a:	4619      	mov	r1, r3
 800179c:	4809      	ldr	r0, [pc, #36]	@ (80017c4 <MX_GPIO_Init+0x170>)
 800179e:	f002 fa8d 	bl	8003cbc <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80017a2:	2200      	movs	r2, #0
 80017a4:	2100      	movs	r1, #0
 80017a6:	2017      	movs	r0, #23
 80017a8:	f001 fe87 	bl	80034ba <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80017ac:	2017      	movs	r0, #23
 80017ae:	f001 fea0 	bl	80034f2 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80017b2:	bf00      	nop
 80017b4:	3720      	adds	r7, #32
 80017b6:	46bd      	mov	sp, r7
 80017b8:	bd80      	pop	{r7, pc}
 80017ba:	bf00      	nop
 80017bc:	40023800 	.word	0x40023800
 80017c0:	40020000 	.word	0x40020000
 80017c4:	40020400 	.word	0x40020400
 80017c8:	40020800 	.word	0x40020800

080017cc <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
	void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
	{
 80017cc:	b580      	push	{r7, lr}
 80017ce:	b082      	sub	sp, #8
 80017d0:	af00      	add	r7, sp, #0
 80017d2:	6078      	str	r0, [r7, #4]
	  // Check which version of the timer triggered this callback and toggle LED
		if (htim==&TGFX_T){
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	4a04      	ldr	r2, [pc, #16]	@ (80017e8 <HAL_TIM_PeriodElapsedCallback+0x1c>)
 80017d8:	4293      	cmp	r3, r2
 80017da:	d101      	bne.n	80017e0 <HAL_TIM_PeriodElapsedCallback+0x14>
			  //Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
			  touchgfxSignalVSync();
 80017dc:	f00e fc3a 	bl	8010054 <touchgfxSignalVSync>
		}
	}
 80017e0:	bf00      	nop
 80017e2:	3708      	adds	r7, #8
 80017e4:	46bd      	mov	sp, r7
 80017e6:	bd80      	pop	{r7, pc}
 80017e8:	20000540 	.word	0x20000540

080017ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80017ec:	b480      	push	{r7}
 80017ee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80017f0:	b672      	cpsid	i
}
 80017f2:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	  /* User can add his own implementation to report the HAL error return state */
	  __disable_irq();
	  while (1)
 80017f4:	bf00      	nop
 80017f6:	e7fd      	b.n	80017f4 <Error_Handler+0x8>

080017f8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80017f8:	b480      	push	{r7}
 80017fa:	b083      	sub	sp, #12
 80017fc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80017fe:	2300      	movs	r3, #0
 8001800:	607b      	str	r3, [r7, #4]
 8001802:	4b10      	ldr	r3, [pc, #64]	@ (8001844 <HAL_MspInit+0x4c>)
 8001804:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001806:	4a0f      	ldr	r2, [pc, #60]	@ (8001844 <HAL_MspInit+0x4c>)
 8001808:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800180c:	6453      	str	r3, [r2, #68]	@ 0x44
 800180e:	4b0d      	ldr	r3, [pc, #52]	@ (8001844 <HAL_MspInit+0x4c>)
 8001810:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001812:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001816:	607b      	str	r3, [r7, #4]
 8001818:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800181a:	2300      	movs	r3, #0
 800181c:	603b      	str	r3, [r7, #0]
 800181e:	4b09      	ldr	r3, [pc, #36]	@ (8001844 <HAL_MspInit+0x4c>)
 8001820:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001822:	4a08      	ldr	r2, [pc, #32]	@ (8001844 <HAL_MspInit+0x4c>)
 8001824:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001828:	6413      	str	r3, [r2, #64]	@ 0x40
 800182a:	4b06      	ldr	r3, [pc, #24]	@ (8001844 <HAL_MspInit+0x4c>)
 800182c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800182e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001832:	603b      	str	r3, [r7, #0]
 8001834:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001836:	bf00      	nop
 8001838:	370c      	adds	r7, #12
 800183a:	46bd      	mov	sp, r7
 800183c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001840:	4770      	bx	lr
 8001842:	bf00      	nop
 8001844:	40023800 	.word	0x40023800

08001848 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001848:	b580      	push	{r7, lr}
 800184a:	b08a      	sub	sp, #40	@ 0x28
 800184c:	af00      	add	r7, sp, #0
 800184e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001850:	f107 0314 	add.w	r3, r7, #20
 8001854:	2200      	movs	r2, #0
 8001856:	601a      	str	r2, [r3, #0]
 8001858:	605a      	str	r2, [r3, #4]
 800185a:	609a      	str	r2, [r3, #8]
 800185c:	60da      	str	r2, [r3, #12]
 800185e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC2)
 8001860:	687b      	ldr	r3, [r7, #4]
 8001862:	681b      	ldr	r3, [r3, #0]
 8001864:	4a2f      	ldr	r2, [pc, #188]	@ (8001924 <HAL_ADC_MspInit+0xdc>)
 8001866:	4293      	cmp	r3, r2
 8001868:	d158      	bne.n	800191c <HAL_ADC_MspInit+0xd4>
  {
  /* USER CODE BEGIN ADC2_MspInit 0 */

  /* USER CODE END ADC2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC2_CLK_ENABLE();
 800186a:	2300      	movs	r3, #0
 800186c:	613b      	str	r3, [r7, #16]
 800186e:	4b2e      	ldr	r3, [pc, #184]	@ (8001928 <HAL_ADC_MspInit+0xe0>)
 8001870:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001872:	4a2d      	ldr	r2, [pc, #180]	@ (8001928 <HAL_ADC_MspInit+0xe0>)
 8001874:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001878:	6453      	str	r3, [r2, #68]	@ 0x44
 800187a:	4b2b      	ldr	r3, [pc, #172]	@ (8001928 <HAL_ADC_MspInit+0xe0>)
 800187c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800187e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8001882:	613b      	str	r3, [r7, #16]
 8001884:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001886:	2300      	movs	r3, #0
 8001888:	60fb      	str	r3, [r7, #12]
 800188a:	4b27      	ldr	r3, [pc, #156]	@ (8001928 <HAL_ADC_MspInit+0xe0>)
 800188c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800188e:	4a26      	ldr	r2, [pc, #152]	@ (8001928 <HAL_ADC_MspInit+0xe0>)
 8001890:	f043 0304 	orr.w	r3, r3, #4
 8001894:	6313      	str	r3, [r2, #48]	@ 0x30
 8001896:	4b24      	ldr	r3, [pc, #144]	@ (8001928 <HAL_ADC_MspInit+0xe0>)
 8001898:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800189a:	f003 0304 	and.w	r3, r3, #4
 800189e:	60fb      	str	r3, [r7, #12]
 80018a0:	68fb      	ldr	r3, [r7, #12]
    /**ADC2 GPIO Configuration
    PC4     ------> ADC2_IN14
    */
    GPIO_InitStruct.Pin = MOISTURE_SENSOR_Pin;
 80018a2:	2310      	movs	r3, #16
 80018a4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80018a6:	2303      	movs	r3, #3
 80018a8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018aa:	2300      	movs	r3, #0
 80018ac:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(MOISTURE_SENSOR_GPIO_Port, &GPIO_InitStruct);
 80018ae:	f107 0314 	add.w	r3, r7, #20
 80018b2:	4619      	mov	r1, r3
 80018b4:	481d      	ldr	r0, [pc, #116]	@ (800192c <HAL_ADC_MspInit+0xe4>)
 80018b6:	f002 fa01 	bl	8003cbc <HAL_GPIO_Init>

    /* ADC2 DMA Init */
    /* ADC2 Init */
    hdma_adc2.Instance = DMA2_Stream2;
 80018ba:	4b1d      	ldr	r3, [pc, #116]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018bc:	4a1d      	ldr	r2, [pc, #116]	@ (8001934 <HAL_ADC_MspInit+0xec>)
 80018be:	601a      	str	r2, [r3, #0]
    hdma_adc2.Init.Channel = DMA_CHANNEL_1;
 80018c0:	4b1b      	ldr	r3, [pc, #108]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018c2:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 80018c6:	605a      	str	r2, [r3, #4]
    hdma_adc2.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80018c8:	4b19      	ldr	r3, [pc, #100]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018ca:	2200      	movs	r2, #0
 80018cc:	609a      	str	r2, [r3, #8]
    hdma_adc2.Init.PeriphInc = DMA_PINC_DISABLE;
 80018ce:	4b18      	ldr	r3, [pc, #96]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018d0:	2200      	movs	r2, #0
 80018d2:	60da      	str	r2, [r3, #12]
    hdma_adc2.Init.MemInc = DMA_MINC_ENABLE;
 80018d4:	4b16      	ldr	r3, [pc, #88]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018d6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80018da:	611a      	str	r2, [r3, #16]
    hdma_adc2.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 80018dc:	4b14      	ldr	r3, [pc, #80]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018de:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80018e2:	615a      	str	r2, [r3, #20]
    hdma_adc2.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 80018e4:	4b12      	ldr	r3, [pc, #72]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018e6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80018ea:	619a      	str	r2, [r3, #24]
    hdma_adc2.Init.Mode = DMA_CIRCULAR;
 80018ec:	4b10      	ldr	r3, [pc, #64]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018ee:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80018f2:	61da      	str	r2, [r3, #28]
    hdma_adc2.Init.Priority = DMA_PRIORITY_LOW;
 80018f4:	4b0e      	ldr	r3, [pc, #56]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018f6:	2200      	movs	r2, #0
 80018f8:	621a      	str	r2, [r3, #32]
    hdma_adc2.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80018fa:	4b0d      	ldr	r3, [pc, #52]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 80018fc:	2200      	movs	r2, #0
 80018fe:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc2) != HAL_OK)
 8001900:	480b      	ldr	r0, [pc, #44]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 8001902:	f001 fe49 	bl	8003598 <HAL_DMA_Init>
 8001906:	4603      	mov	r3, r0
 8001908:	2b00      	cmp	r3, #0
 800190a:	d001      	beq.n	8001910 <HAL_ADC_MspInit+0xc8>
    {
      Error_Handler();
 800190c:	f7ff ff6e 	bl	80017ec <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc2);
 8001910:	687b      	ldr	r3, [r7, #4]
 8001912:	4a07      	ldr	r2, [pc, #28]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 8001914:	639a      	str	r2, [r3, #56]	@ 0x38
 8001916:	4a06      	ldr	r2, [pc, #24]	@ (8001930 <HAL_ADC_MspInit+0xe8>)
 8001918:	687b      	ldr	r3, [r7, #4]
 800191a:	6393      	str	r3, [r2, #56]	@ 0x38

  /* USER CODE END ADC2_MspInit 1 */

  }

}
 800191c:	bf00      	nop
 800191e:	3728      	adds	r7, #40	@ 0x28
 8001920:	46bd      	mov	sp, r7
 8001922:	bd80      	pop	{r7, pc}
 8001924:	40012100 	.word	0x40012100
 8001928:	40023800 	.word	0x40023800
 800192c:	40020800 	.word	0x40020800
 8001930:	20000384 	.word	0x20000384
 8001934:	40026440 	.word	0x40026440

08001938 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001938:	b480      	push	{r7}
 800193a:	b085      	sub	sp, #20
 800193c:	af00      	add	r7, sp, #0
 800193e:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	681b      	ldr	r3, [r3, #0]
 8001944:	4a0b      	ldr	r2, [pc, #44]	@ (8001974 <HAL_CRC_MspInit+0x3c>)
 8001946:	4293      	cmp	r3, r2
 8001948:	d10d      	bne.n	8001966 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800194a:	2300      	movs	r3, #0
 800194c:	60fb      	str	r3, [r7, #12]
 800194e:	4b0a      	ldr	r3, [pc, #40]	@ (8001978 <HAL_CRC_MspInit+0x40>)
 8001950:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001952:	4a09      	ldr	r2, [pc, #36]	@ (8001978 <HAL_CRC_MspInit+0x40>)
 8001954:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8001958:	6313      	str	r3, [r2, #48]	@ 0x30
 800195a:	4b07      	ldr	r3, [pc, #28]	@ (8001978 <HAL_CRC_MspInit+0x40>)
 800195c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800195e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8001962:	60fb      	str	r3, [r7, #12]
 8001964:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 8001966:	bf00      	nop
 8001968:	3714      	adds	r7, #20
 800196a:	46bd      	mov	sp, r7
 800196c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001970:	4770      	bx	lr
 8001972:	bf00      	nop
 8001974:	40023000 	.word	0x40023000
 8001978:	40023800 	.word	0x40023800

0800197c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 800197c:	b580      	push	{r7, lr}
 800197e:	b08a      	sub	sp, #40	@ 0x28
 8001980:	af00      	add	r7, sp, #0
 8001982:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001984:	f107 0314 	add.w	r3, r7, #20
 8001988:	2200      	movs	r2, #0
 800198a:	601a      	str	r2, [r3, #0]
 800198c:	605a      	str	r2, [r3, #4]
 800198e:	609a      	str	r2, [r3, #8]
 8001990:	60da      	str	r2, [r3, #12]
 8001992:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C2)
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	681b      	ldr	r3, [r3, #0]
 8001998:	4a29      	ldr	r2, [pc, #164]	@ (8001a40 <HAL_I2C_MspInit+0xc4>)
 800199a:	4293      	cmp	r3, r2
 800199c:	d14b      	bne.n	8001a36 <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800199e:	2300      	movs	r3, #0
 80019a0:	613b      	str	r3, [r7, #16]
 80019a2:	4b28      	ldr	r3, [pc, #160]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 80019a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019a6:	4a27      	ldr	r2, [pc, #156]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 80019a8:	f043 0302 	orr.w	r3, r3, #2
 80019ac:	6313      	str	r3, [r2, #48]	@ 0x30
 80019ae:	4b25      	ldr	r3, [pc, #148]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 80019b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019b2:	f003 0302 	and.w	r3, r3, #2
 80019b6:	613b      	str	r3, [r7, #16]
 80019b8:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80019ba:	2300      	movs	r3, #0
 80019bc:	60fb      	str	r3, [r7, #12]
 80019be:	4b21      	ldr	r3, [pc, #132]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 80019c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019c2:	4a20      	ldr	r2, [pc, #128]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 80019c4:	f043 0304 	orr.w	r3, r3, #4
 80019c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80019ca:	4b1e      	ldr	r3, [pc, #120]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 80019cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019ce:	f003 0304 	and.w	r3, r3, #4
 80019d2:	60fb      	str	r3, [r7, #12]
 80019d4:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PC12     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80019d6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80019da:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019dc:	2312      	movs	r3, #18
 80019de:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e0:	2300      	movs	r3, #0
 80019e2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80019e4:	2303      	movs	r3, #3
 80019e6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 80019e8:	2304      	movs	r3, #4
 80019ea:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80019ec:	f107 0314 	add.w	r3, r7, #20
 80019f0:	4619      	mov	r1, r3
 80019f2:	4815      	ldr	r0, [pc, #84]	@ (8001a48 <HAL_I2C_MspInit+0xcc>)
 80019f4:	f002 f962 	bl	8003cbc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 80019f8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80019fc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 80019fe:	2312      	movs	r3, #18
 8001a00:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a02:	2300      	movs	r3, #0
 8001a04:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a06:	2303      	movs	r3, #3
 8001a08:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a0a:	2304      	movs	r3, #4
 8001a0c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a0e:	f107 0314 	add.w	r3, r7, #20
 8001a12:	4619      	mov	r1, r3
 8001a14:	480d      	ldr	r0, [pc, #52]	@ (8001a4c <HAL_I2C_MspInit+0xd0>)
 8001a16:	f002 f951 	bl	8003cbc <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	60bb      	str	r3, [r7, #8]
 8001a1e:	4b09      	ldr	r3, [pc, #36]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 8001a20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a22:	4a08      	ldr	r2, [pc, #32]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 8001a24:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001a28:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a2a:	4b06      	ldr	r3, [pc, #24]	@ (8001a44 <HAL_I2C_MspInit+0xc8>)
 8001a2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a2e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001a32:	60bb      	str	r3, [r7, #8]
 8001a34:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8001a36:	bf00      	nop
 8001a38:	3728      	adds	r7, #40	@ 0x28
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	bd80      	pop	{r7, pc}
 8001a3e:	bf00      	nop
 8001a40:	40005800 	.word	0x40005800
 8001a44:	40023800 	.word	0x40023800
 8001a48:	40020400 	.word	0x40020400
 8001a4c:	40020800 	.word	0x40020800

08001a50 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001a50:	b580      	push	{r7, lr}
 8001a52:	b08a      	sub	sp, #40	@ 0x28
 8001a54:	af00      	add	r7, sp, #0
 8001a56:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a58:	f107 0314 	add.w	r3, r7, #20
 8001a5c:	2200      	movs	r2, #0
 8001a5e:	601a      	str	r2, [r3, #0]
 8001a60:	605a      	str	r2, [r3, #4]
 8001a62:	609a      	str	r2, [r3, #8]
 8001a64:	60da      	str	r2, [r3, #12]
 8001a66:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001a68:	687b      	ldr	r3, [r7, #4]
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	4a4b      	ldr	r2, [pc, #300]	@ (8001b9c <HAL_SPI_MspInit+0x14c>)
 8001a6e:	4293      	cmp	r3, r2
 8001a70:	f040 8090 	bne.w	8001b94 <HAL_SPI_MspInit+0x144>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001a74:	2300      	movs	r3, #0
 8001a76:	613b      	str	r3, [r7, #16]
 8001a78:	4b49      	ldr	r3, [pc, #292]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001a7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a7c:	4a48      	ldr	r2, [pc, #288]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001a7e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001a82:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a84:	4b46      	ldr	r3, [pc, #280]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001a86:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a88:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001a8c:	613b      	str	r3, [r7, #16]
 8001a8e:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a90:	2300      	movs	r3, #0
 8001a92:	60fb      	str	r3, [r7, #12]
 8001a94:	4b42      	ldr	r3, [pc, #264]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001a96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a98:	4a41      	ldr	r2, [pc, #260]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001a9a:	f043 0304 	orr.w	r3, r3, #4
 8001a9e:	6313      	str	r3, [r2, #48]	@ 0x30
 8001aa0:	4b3f      	ldr	r3, [pc, #252]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001aa2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001aa4:	f003 0304 	and.w	r3, r3, #4
 8001aa8:	60fb      	str	r3, [r7, #12]
 8001aaa:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001aac:	2300      	movs	r3, #0
 8001aae:	60bb      	str	r3, [r7, #8]
 8001ab0:	4b3b      	ldr	r3, [pc, #236]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001ab2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ab4:	4a3a      	ldr	r2, [pc, #232]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001ab6:	f043 0302 	orr.w	r3, r3, #2
 8001aba:	6313      	str	r3, [r2, #48]	@ 0x30
 8001abc:	4b38      	ldr	r3, [pc, #224]	@ (8001ba0 <HAL_SPI_MspInit+0x150>)
 8001abe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ac0:	f003 0302 	and.w	r3, r3, #2
 8001ac4:	60bb      	str	r3, [r7, #8]
 8001ac6:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = DISPL_MOSI_Pin;
 8001ac8:	2302      	movs	r3, #2
 8001aca:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001acc:	2302      	movs	r3, #2
 8001ace:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ad4:	2303      	movs	r3, #3
 8001ad6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 8001ad8:	2307      	movs	r3, #7
 8001ada:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_MOSI_GPIO_Port, &GPIO_InitStruct);
 8001adc:	f107 0314 	add.w	r3, r7, #20
 8001ae0:	4619      	mov	r1, r3
 8001ae2:	4830      	ldr	r0, [pc, #192]	@ (8001ba4 <HAL_SPI_MspInit+0x154>)
 8001ae4:	f002 f8ea 	bl	8003cbc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = TOUCH_MISO_Pin;
 8001ae8:	2304      	movs	r3, #4
 8001aea:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aec:	2302      	movs	r3, #2
 8001aee:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001af0:	2300      	movs	r3, #0
 8001af2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001af4:	2303      	movs	r3, #3
 8001af6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001af8:	2305      	movs	r3, #5
 8001afa:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(TOUCH_MISO_GPIO_Port, &GPIO_InitStruct);
 8001afc:	f107 0314 	add.w	r3, r7, #20
 8001b00:	4619      	mov	r1, r3
 8001b02:	4828      	ldr	r0, [pc, #160]	@ (8001ba4 <HAL_SPI_MspInit+0x154>)
 8001b04:	f002 f8da 	bl	8003cbc <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DISPL_SCK_Pin;
 8001b08:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001b0c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b0e:	2302      	movs	r3, #2
 8001b10:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b12:	2300      	movs	r3, #0
 8001b14:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b16:	2303      	movs	r3, #3
 8001b18:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b1a:	2305      	movs	r3, #5
 8001b1c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_SCK_GPIO_Port, &GPIO_InitStruct);
 8001b1e:	f107 0314 	add.w	r3, r7, #20
 8001b22:	4619      	mov	r1, r3
 8001b24:	4820      	ldr	r0, [pc, #128]	@ (8001ba8 <HAL_SPI_MspInit+0x158>)
 8001b26:	f002 f8c9 	bl	8003cbc <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8001b2a:	4b20      	ldr	r3, [pc, #128]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b2c:	4a20      	ldr	r2, [pc, #128]	@ (8001bb0 <HAL_SPI_MspInit+0x160>)
 8001b2e:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8001b30:	4b1e      	ldr	r3, [pc, #120]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b32:	2200      	movs	r2, #0
 8001b34:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001b36:	4b1d      	ldr	r3, [pc, #116]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b38:	2240      	movs	r2, #64	@ 0x40
 8001b3a:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001b3c:	4b1b      	ldr	r3, [pc, #108]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b3e:	2200      	movs	r2, #0
 8001b40:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001b42:	4b1a      	ldr	r3, [pc, #104]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b44:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001b48:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001b4a:	4b18      	ldr	r3, [pc, #96]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b4c:	2200      	movs	r2, #0
 8001b4e:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001b50:	4b16      	ldr	r3, [pc, #88]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b52:	2200      	movs	r2, #0
 8001b54:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8001b56:	4b15      	ldr	r3, [pc, #84]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b58:	2200      	movs	r2, #0
 8001b5a:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001b5c:	4b13      	ldr	r3, [pc, #76]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b5e:	2200      	movs	r2, #0
 8001b60:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001b62:	4b12      	ldr	r3, [pc, #72]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b64:	2200      	movs	r2, #0
 8001b66:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8001b68:	4810      	ldr	r0, [pc, #64]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b6a:	f001 fd15 	bl	8003598 <HAL_DMA_Init>
 8001b6e:	4603      	mov	r3, r0
 8001b70:	2b00      	cmp	r3, #0
 8001b72:	d001      	beq.n	8001b78 <HAL_SPI_MspInit+0x128>
    {
      Error_Handler();
 8001b74:	f7ff fe3a 	bl	80017ec <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8001b78:	687b      	ldr	r3, [r7, #4]
 8001b7a:	4a0c      	ldr	r2, [pc, #48]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b7c:	649a      	str	r2, [r3, #72]	@ 0x48
 8001b7e:	4a0b      	ldr	r2, [pc, #44]	@ (8001bac <HAL_SPI_MspInit+0x15c>)
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8001b84:	2200      	movs	r2, #0
 8001b86:	2100      	movs	r1, #0
 8001b88:	2024      	movs	r0, #36	@ 0x24
 8001b8a:	f001 fc96 	bl	80034ba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8001b8e:	2024      	movs	r0, #36	@ 0x24
 8001b90:	f001 fcaf 	bl	80034f2 <HAL_NVIC_EnableIRQ>

  /* USER CODE END SPI2_MspInit 1 */

  }

}
 8001b94:	bf00      	nop
 8001b96:	3728      	adds	r7, #40	@ 0x28
 8001b98:	46bd      	mov	sp, r7
 8001b9a:	bd80      	pop	{r7, pc}
 8001b9c:	40003800 	.word	0x40003800
 8001ba0:	40023800 	.word	0x40023800
 8001ba4:	40020800 	.word	0x40020800
 8001ba8:	40020400 	.word	0x40020400
 8001bac:	20000498 	.word	0x20000498
 8001bb0:	40026070 	.word	0x40026070

08001bb4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001bb4:	b580      	push	{r7, lr}
 8001bb6:	b086      	sub	sp, #24
 8001bb8:	af00      	add	r7, sp, #0
 8001bba:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	681b      	ldr	r3, [r3, #0]
 8001bc0:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001bc4:	d10e      	bne.n	8001be4 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001bc6:	2300      	movs	r3, #0
 8001bc8:	617b      	str	r3, [r7, #20]
 8001bca:	4b24      	ldr	r3, [pc, #144]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001bcc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bce:	4a23      	ldr	r2, [pc, #140]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001bd0:	f043 0301 	orr.w	r3, r3, #1
 8001bd4:	6413      	str	r3, [r2, #64]	@ 0x40
 8001bd6:	4b21      	ldr	r3, [pc, #132]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001bd8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bda:	f003 0301 	and.w	r3, r3, #1
 8001bde:	617b      	str	r3, [r7, #20]
 8001be0:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001be2:	e036      	b.n	8001c52 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM3)
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	4a1d      	ldr	r2, [pc, #116]	@ (8001c60 <HAL_TIM_Base_MspInit+0xac>)
 8001bea:	4293      	cmp	r3, r2
 8001bec:	d116      	bne.n	8001c1c <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001bee:	2300      	movs	r3, #0
 8001bf0:	613b      	str	r3, [r7, #16]
 8001bf2:	4b1a      	ldr	r3, [pc, #104]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001bf4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bf6:	4a19      	ldr	r2, [pc, #100]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001bf8:	f043 0302 	orr.w	r3, r3, #2
 8001bfc:	6413      	str	r3, [r2, #64]	@ 0x40
 8001bfe:	4b17      	ldr	r3, [pc, #92]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001c00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c02:	f003 0302 	and.w	r3, r3, #2
 8001c06:	613b      	str	r3, [r7, #16]
 8001c08:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001c0a:	2200      	movs	r2, #0
 8001c0c:	2100      	movs	r1, #0
 8001c0e:	201d      	movs	r0, #29
 8001c10:	f001 fc53 	bl	80034ba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001c14:	201d      	movs	r0, #29
 8001c16:	f001 fc6c 	bl	80034f2 <HAL_NVIC_EnableIRQ>
}
 8001c1a:	e01a      	b.n	8001c52 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM4)
 8001c1c:	687b      	ldr	r3, [r7, #4]
 8001c1e:	681b      	ldr	r3, [r3, #0]
 8001c20:	4a10      	ldr	r2, [pc, #64]	@ (8001c64 <HAL_TIM_Base_MspInit+0xb0>)
 8001c22:	4293      	cmp	r3, r2
 8001c24:	d115      	bne.n	8001c52 <HAL_TIM_Base_MspInit+0x9e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001c26:	2300      	movs	r3, #0
 8001c28:	60fb      	str	r3, [r7, #12]
 8001c2a:	4b0c      	ldr	r3, [pc, #48]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001c2c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c2e:	4a0b      	ldr	r2, [pc, #44]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001c30:	f043 0304 	orr.w	r3, r3, #4
 8001c34:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c36:	4b09      	ldr	r3, [pc, #36]	@ (8001c5c <HAL_TIM_Base_MspInit+0xa8>)
 8001c38:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c3a:	f003 0304 	and.w	r3, r3, #4
 8001c3e:	60fb      	str	r3, [r7, #12]
 8001c40:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001c42:	2200      	movs	r2, #0
 8001c44:	2100      	movs	r1, #0
 8001c46:	201e      	movs	r0, #30
 8001c48:	f001 fc37 	bl	80034ba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001c4c:	201e      	movs	r0, #30
 8001c4e:	f001 fc50 	bl	80034f2 <HAL_NVIC_EnableIRQ>
}
 8001c52:	bf00      	nop
 8001c54:	3718      	adds	r7, #24
 8001c56:	46bd      	mov	sp, r7
 8001c58:	bd80      	pop	{r7, pc}
 8001c5a:	bf00      	nop
 8001c5c:	40023800 	.word	0x40023800
 8001c60:	40000400 	.word	0x40000400
 8001c64:	40000800 	.word	0x40000800

08001c68 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001c68:	b580      	push	{r7, lr}
 8001c6a:	b08a      	sub	sp, #40	@ 0x28
 8001c6c:	af00      	add	r7, sp, #0
 8001c6e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c70:	f107 0314 	add.w	r3, r7, #20
 8001c74:	2200      	movs	r2, #0
 8001c76:	601a      	str	r2, [r3, #0]
 8001c78:	605a      	str	r2, [r3, #4]
 8001c7a:	609a      	str	r2, [r3, #8]
 8001c7c:	60da      	str	r2, [r3, #12]
 8001c7e:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	681b      	ldr	r3, [r3, #0]
 8001c84:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c88:	d11e      	bne.n	8001cc8 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c8a:	2300      	movs	r3, #0
 8001c8c:	613b      	str	r3, [r7, #16]
 8001c8e:	4b22      	ldr	r3, [pc, #136]	@ (8001d18 <HAL_TIM_MspPostInit+0xb0>)
 8001c90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c92:	4a21      	ldr	r2, [pc, #132]	@ (8001d18 <HAL_TIM_MspPostInit+0xb0>)
 8001c94:	f043 0301 	orr.w	r3, r3, #1
 8001c98:	6313      	str	r3, [r2, #48]	@ 0x30
 8001c9a:	4b1f      	ldr	r3, [pc, #124]	@ (8001d18 <HAL_TIM_MspPostInit+0xb0>)
 8001c9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001c9e:	f003 0301 	and.w	r3, r3, #1
 8001ca2:	613b      	str	r3, [r7, #16]
 8001ca4:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001ca6:	2301      	movs	r3, #1
 8001ca8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001caa:	2302      	movs	r3, #2
 8001cac:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cae:	2300      	movs	r3, #0
 8001cb0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001cb6:	2301      	movs	r3, #1
 8001cb8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cba:	f107 0314 	add.w	r3, r7, #20
 8001cbe:	4619      	mov	r1, r3
 8001cc0:	4816      	ldr	r0, [pc, #88]	@ (8001d1c <HAL_TIM_MspPostInit+0xb4>)
 8001cc2:	f001 fffb 	bl	8003cbc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8001cc6:	e022      	b.n	8001d0e <HAL_TIM_MspPostInit+0xa6>
  else if(htim->Instance==TIM4)
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	681b      	ldr	r3, [r3, #0]
 8001ccc:	4a14      	ldr	r2, [pc, #80]	@ (8001d20 <HAL_TIM_MspPostInit+0xb8>)
 8001cce:	4293      	cmp	r3, r2
 8001cd0:	d11d      	bne.n	8001d0e <HAL_TIM_MspPostInit+0xa6>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001cd2:	2300      	movs	r3, #0
 8001cd4:	60fb      	str	r3, [r7, #12]
 8001cd6:	4b10      	ldr	r3, [pc, #64]	@ (8001d18 <HAL_TIM_MspPostInit+0xb0>)
 8001cd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cda:	4a0f      	ldr	r2, [pc, #60]	@ (8001d18 <HAL_TIM_MspPostInit+0xb0>)
 8001cdc:	f043 0302 	orr.w	r3, r3, #2
 8001ce0:	6313      	str	r3, [r2, #48]	@ 0x30
 8001ce2:	4b0d      	ldr	r3, [pc, #52]	@ (8001d18 <HAL_TIM_MspPostInit+0xb0>)
 8001ce4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ce6:	f003 0302 	and.w	r3, r3, #2
 8001cea:	60fb      	str	r3, [r7, #12]
 8001cec:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = HEATER_PWM_Pin;
 8001cee:	2380      	movs	r3, #128	@ 0x80
 8001cf0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf2:	2302      	movs	r3, #2
 8001cf4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8001cfe:	2302      	movs	r3, #2
 8001d00:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(HEATER_PWM_GPIO_Port, &GPIO_InitStruct);
 8001d02:	f107 0314 	add.w	r3, r7, #20
 8001d06:	4619      	mov	r1, r3
 8001d08:	4806      	ldr	r0, [pc, #24]	@ (8001d24 <HAL_TIM_MspPostInit+0xbc>)
 8001d0a:	f001 ffd7 	bl	8003cbc <HAL_GPIO_Init>
}
 8001d0e:	bf00      	nop
 8001d10:	3728      	adds	r7, #40	@ 0x28
 8001d12:	46bd      	mov	sp, r7
 8001d14:	bd80      	pop	{r7, pc}
 8001d16:	bf00      	nop
 8001d18:	40023800 	.word	0x40023800
 8001d1c:	40020000 	.word	0x40020000
 8001d20:	40000800 	.word	0x40000800
 8001d24:	40020400 	.word	0x40020400

08001d28 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001d28:	b480      	push	{r7}
 8001d2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001d2c:	bf00      	nop
 8001d2e:	e7fd      	b.n	8001d2c <NMI_Handler+0x4>

08001d30 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d30:	b480      	push	{r7}
 8001d32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001d34:	bf00      	nop
 8001d36:	e7fd      	b.n	8001d34 <HardFault_Handler+0x4>

08001d38 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001d38:	b480      	push	{r7}
 8001d3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001d3c:	bf00      	nop
 8001d3e:	e7fd      	b.n	8001d3c <MemManage_Handler+0x4>

08001d40 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001d40:	b480      	push	{r7}
 8001d42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001d44:	bf00      	nop
 8001d46:	e7fd      	b.n	8001d44 <BusFault_Handler+0x4>

08001d48 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001d48:	b480      	push	{r7}
 8001d4a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001d4c:	bf00      	nop
 8001d4e:	e7fd      	b.n	8001d4c <UsageFault_Handler+0x4>

08001d50 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001d50:	b480      	push	{r7}
 8001d52:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001d54:	bf00      	nop
 8001d56:	46bd      	mov	sp, r7
 8001d58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d5c:	4770      	bx	lr

08001d5e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001d5e:	b480      	push	{r7}
 8001d60:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001d62:	bf00      	nop
 8001d64:	46bd      	mov	sp, r7
 8001d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d6a:	4770      	bx	lr

08001d6c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001d6c:	b480      	push	{r7}
 8001d6e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001d70:	bf00      	nop
 8001d72:	46bd      	mov	sp, r7
 8001d74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d78:	4770      	bx	lr

08001d7a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001d7a:	b580      	push	{r7, lr}
 8001d7c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001d7e:	f000 fe19 	bl	80029b4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001d82:	bf00      	nop
 8001d84:	bd80      	pop	{r7, pc}
	...

08001d88 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8001d88:	b580      	push	{r7, lr}
 8001d8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8001d8c:	4802      	ldr	r0, [pc, #8]	@ (8001d98 <DMA1_Stream4_IRQHandler+0x10>)
 8001d8e:	f001 fd2b 	bl	80037e8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8001d92:	bf00      	nop
 8001d94:	bd80      	pop	{r7, pc}
 8001d96:	bf00      	nop
 8001d98:	20000498 	.word	0x20000498

08001d9c <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001d9c:	b580      	push	{r7, lr}
 8001d9e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001da0:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001da4:	f002 f96a 	bl	800407c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001da8:	bf00      	nop
 8001daa:	bd80      	pop	{r7, pc}

08001dac <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001dac:	b580      	push	{r7, lr}
 8001dae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001db0:	4802      	ldr	r0, [pc, #8]	@ (8001dbc <TIM3_IRQHandler+0x10>)
 8001db2:	f005 f993 	bl	80070dc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001db6:	bf00      	nop
 8001db8:	bd80      	pop	{r7, pc}
 8001dba:	bf00      	nop
 8001dbc:	20000540 	.word	0x20000540

08001dc0 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001dc4:	4802      	ldr	r0, [pc, #8]	@ (8001dd0 <TIM4_IRQHandler+0x10>)
 8001dc6:	f005 f989 	bl	80070dc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001dca:	bf00      	nop
 8001dcc:	bd80      	pop	{r7, pc}
 8001dce:	bf00      	nop
 8001dd0:	20000588 	.word	0x20000588

08001dd4 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8001dd4:	b580      	push	{r7, lr}
 8001dd6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8001dd8:	4802      	ldr	r0, [pc, #8]	@ (8001de4 <SPI2_IRQHandler+0x10>)
 8001dda:	f004 fcc7 	bl	800676c <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8001dde:	bf00      	nop
 8001de0:	bd80      	pop	{r7, pc}
 8001de2:	bf00      	nop
 8001de4:	20000440 	.word	0x20000440

08001de8 <DMA2_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA2 stream2 global interrupt.
  */
void DMA2_Stream2_IRQHandler(void)
{
 8001de8:	b580      	push	{r7, lr}
 8001dea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */

  /* USER CODE END DMA2_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc2);
 8001dec:	4802      	ldr	r0, [pc, #8]	@ (8001df8 <DMA2_Stream2_IRQHandler+0x10>)
 8001dee:	f001 fcfb 	bl	80037e8 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */

  /* USER CODE END DMA2_Stream2_IRQn 1 */
}
 8001df2:	bf00      	nop
 8001df4:	bd80      	pop	{r7, pc}
 8001df6:	bf00      	nop
 8001df8:	20000384 	.word	0x20000384

08001dfc <_getpid>:
 8001dfc:	b480      	push	{r7}
 8001dfe:	af00      	add	r7, sp, #0
 8001e00:	2301      	movs	r3, #1
 8001e02:	4618      	mov	r0, r3
 8001e04:	46bd      	mov	sp, r7
 8001e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e0a:	4770      	bx	lr

08001e0c <_kill>:
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b082      	sub	sp, #8
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	6078      	str	r0, [r7, #4]
 8001e14:	6039      	str	r1, [r7, #0]
 8001e16:	f024 f965 	bl	80260e4 <__errno>
 8001e1a:	4603      	mov	r3, r0
 8001e1c:	2216      	movs	r2, #22
 8001e1e:	601a      	str	r2, [r3, #0]
 8001e20:	f04f 33ff 	mov.w	r3, #4294967295
 8001e24:	4618      	mov	r0, r3
 8001e26:	3708      	adds	r7, #8
 8001e28:	46bd      	mov	sp, r7
 8001e2a:	bd80      	pop	{r7, pc}

08001e2c <_exit>:
 8001e2c:	b580      	push	{r7, lr}
 8001e2e:	b082      	sub	sp, #8
 8001e30:	af00      	add	r7, sp, #0
 8001e32:	6078      	str	r0, [r7, #4]
 8001e34:	f04f 31ff 	mov.w	r1, #4294967295
 8001e38:	6878      	ldr	r0, [r7, #4]
 8001e3a:	f7ff ffe7 	bl	8001e0c <_kill>
 8001e3e:	bf00      	nop
 8001e40:	e7fd      	b.n	8001e3e <_exit+0x12>

08001e42 <_read>:
 8001e42:	b580      	push	{r7, lr}
 8001e44:	b086      	sub	sp, #24
 8001e46:	af00      	add	r7, sp, #0
 8001e48:	60f8      	str	r0, [r7, #12]
 8001e4a:	60b9      	str	r1, [r7, #8]
 8001e4c:	607a      	str	r2, [r7, #4]
 8001e4e:	2300      	movs	r3, #0
 8001e50:	617b      	str	r3, [r7, #20]
 8001e52:	e00a      	b.n	8001e6a <_read+0x28>
 8001e54:	f3af 8000 	nop.w
 8001e58:	4601      	mov	r1, r0
 8001e5a:	68bb      	ldr	r3, [r7, #8]
 8001e5c:	1c5a      	adds	r2, r3, #1
 8001e5e:	60ba      	str	r2, [r7, #8]
 8001e60:	b2ca      	uxtb	r2, r1
 8001e62:	701a      	strb	r2, [r3, #0]
 8001e64:	697b      	ldr	r3, [r7, #20]
 8001e66:	3301      	adds	r3, #1
 8001e68:	617b      	str	r3, [r7, #20]
 8001e6a:	697a      	ldr	r2, [r7, #20]
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	429a      	cmp	r2, r3
 8001e70:	dbf0      	blt.n	8001e54 <_read+0x12>
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	4618      	mov	r0, r3
 8001e76:	3718      	adds	r7, #24
 8001e78:	46bd      	mov	sp, r7
 8001e7a:	bd80      	pop	{r7, pc}

08001e7c <_write>:
 8001e7c:	b580      	push	{r7, lr}
 8001e7e:	b086      	sub	sp, #24
 8001e80:	af00      	add	r7, sp, #0
 8001e82:	60f8      	str	r0, [r7, #12]
 8001e84:	60b9      	str	r1, [r7, #8]
 8001e86:	607a      	str	r2, [r7, #4]
 8001e88:	2300      	movs	r3, #0
 8001e8a:	617b      	str	r3, [r7, #20]
 8001e8c:	e009      	b.n	8001ea2 <_write+0x26>
 8001e8e:	68bb      	ldr	r3, [r7, #8]
 8001e90:	1c5a      	adds	r2, r3, #1
 8001e92:	60ba      	str	r2, [r7, #8]
 8001e94:	781b      	ldrb	r3, [r3, #0]
 8001e96:	4618      	mov	r0, r3
 8001e98:	f3af 8000 	nop.w
 8001e9c:	697b      	ldr	r3, [r7, #20]
 8001e9e:	3301      	adds	r3, #1
 8001ea0:	617b      	str	r3, [r7, #20]
 8001ea2:	697a      	ldr	r2, [r7, #20]
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	429a      	cmp	r2, r3
 8001ea8:	dbf1      	blt.n	8001e8e <_write+0x12>
 8001eaa:	687b      	ldr	r3, [r7, #4]
 8001eac:	4618      	mov	r0, r3
 8001eae:	3718      	adds	r7, #24
 8001eb0:	46bd      	mov	sp, r7
 8001eb2:	bd80      	pop	{r7, pc}

08001eb4 <_close>:
 8001eb4:	b480      	push	{r7}
 8001eb6:	b083      	sub	sp, #12
 8001eb8:	af00      	add	r7, sp, #0
 8001eba:	6078      	str	r0, [r7, #4]
 8001ebc:	f04f 33ff 	mov.w	r3, #4294967295
 8001ec0:	4618      	mov	r0, r3
 8001ec2:	370c      	adds	r7, #12
 8001ec4:	46bd      	mov	sp, r7
 8001ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eca:	4770      	bx	lr

08001ecc <_fstat>:
 8001ecc:	b480      	push	{r7}
 8001ece:	b083      	sub	sp, #12
 8001ed0:	af00      	add	r7, sp, #0
 8001ed2:	6078      	str	r0, [r7, #4]
 8001ed4:	6039      	str	r1, [r7, #0]
 8001ed6:	683b      	ldr	r3, [r7, #0]
 8001ed8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001edc:	605a      	str	r2, [r3, #4]
 8001ede:	2300      	movs	r3, #0
 8001ee0:	4618      	mov	r0, r3
 8001ee2:	370c      	adds	r7, #12
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eea:	4770      	bx	lr

08001eec <_isatty>:
 8001eec:	b480      	push	{r7}
 8001eee:	b083      	sub	sp, #12
 8001ef0:	af00      	add	r7, sp, #0
 8001ef2:	6078      	str	r0, [r7, #4]
 8001ef4:	2301      	movs	r3, #1
 8001ef6:	4618      	mov	r0, r3
 8001ef8:	370c      	adds	r7, #12
 8001efa:	46bd      	mov	sp, r7
 8001efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f00:	4770      	bx	lr

08001f02 <_lseek>:
 8001f02:	b480      	push	{r7}
 8001f04:	b085      	sub	sp, #20
 8001f06:	af00      	add	r7, sp, #0
 8001f08:	60f8      	str	r0, [r7, #12]
 8001f0a:	60b9      	str	r1, [r7, #8]
 8001f0c:	607a      	str	r2, [r7, #4]
 8001f0e:	2300      	movs	r3, #0
 8001f10:	4618      	mov	r0, r3
 8001f12:	3714      	adds	r7, #20
 8001f14:	46bd      	mov	sp, r7
 8001f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f1a:	4770      	bx	lr

08001f1c <_sbrk>:
 8001f1c:	b580      	push	{r7, lr}
 8001f1e:	b086      	sub	sp, #24
 8001f20:	af00      	add	r7, sp, #0
 8001f22:	6078      	str	r0, [r7, #4]
 8001f24:	4a14      	ldr	r2, [pc, #80]	@ (8001f78 <_sbrk+0x5c>)
 8001f26:	4b15      	ldr	r3, [pc, #84]	@ (8001f7c <_sbrk+0x60>)
 8001f28:	1ad3      	subs	r3, r2, r3
 8001f2a:	617b      	str	r3, [r7, #20]
 8001f2c:	697b      	ldr	r3, [r7, #20]
 8001f2e:	613b      	str	r3, [r7, #16]
 8001f30:	4b13      	ldr	r3, [pc, #76]	@ (8001f80 <_sbrk+0x64>)
 8001f32:	681b      	ldr	r3, [r3, #0]
 8001f34:	2b00      	cmp	r3, #0
 8001f36:	d102      	bne.n	8001f3e <_sbrk+0x22>
 8001f38:	4b11      	ldr	r3, [pc, #68]	@ (8001f80 <_sbrk+0x64>)
 8001f3a:	4a12      	ldr	r2, [pc, #72]	@ (8001f84 <_sbrk+0x68>)
 8001f3c:	601a      	str	r2, [r3, #0]
 8001f3e:	4b10      	ldr	r3, [pc, #64]	@ (8001f80 <_sbrk+0x64>)
 8001f40:	681a      	ldr	r2, [r3, #0]
 8001f42:	687b      	ldr	r3, [r7, #4]
 8001f44:	4413      	add	r3, r2
 8001f46:	693a      	ldr	r2, [r7, #16]
 8001f48:	429a      	cmp	r2, r3
 8001f4a:	d207      	bcs.n	8001f5c <_sbrk+0x40>
 8001f4c:	f024 f8ca 	bl	80260e4 <__errno>
 8001f50:	4603      	mov	r3, r0
 8001f52:	220c      	movs	r2, #12
 8001f54:	601a      	str	r2, [r3, #0]
 8001f56:	f04f 33ff 	mov.w	r3, #4294967295
 8001f5a:	e009      	b.n	8001f70 <_sbrk+0x54>
 8001f5c:	4b08      	ldr	r3, [pc, #32]	@ (8001f80 <_sbrk+0x64>)
 8001f5e:	681b      	ldr	r3, [r3, #0]
 8001f60:	60fb      	str	r3, [r7, #12]
 8001f62:	4b07      	ldr	r3, [pc, #28]	@ (8001f80 <_sbrk+0x64>)
 8001f64:	681a      	ldr	r2, [r3, #0]
 8001f66:	687b      	ldr	r3, [r7, #4]
 8001f68:	4413      	add	r3, r2
 8001f6a:	4a05      	ldr	r2, [pc, #20]	@ (8001f80 <_sbrk+0x64>)
 8001f6c:	6013      	str	r3, [r2, #0]
 8001f6e:	68fb      	ldr	r3, [r7, #12]
 8001f70:	4618      	mov	r0, r3
 8001f72:	3718      	adds	r7, #24
 8001f74:	46bd      	mov	sp, r7
 8001f76:	bd80      	pop	{r7, pc}
 8001f78:	20020000 	.word	0x20020000
 8001f7c:	00000400 	.word	0x00000400
 8001f80:	200005e4 	.word	0x200005e4
 8001f84:	20003c90 	.word	0x20003c90

08001f88 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001f88:	b480      	push	{r7}
 8001f8a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001f8c:	4b06      	ldr	r3, [pc, #24]	@ (8001fa8 <SystemInit+0x20>)
 8001f8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001f92:	4a05      	ldr	r2, [pc, #20]	@ (8001fa8 <SystemInit+0x20>)
 8001f94:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001f98:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001f9c:	bf00      	nop
 8001f9e:	46bd      	mov	sp, r7
 8001fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fa4:	4770      	bx	lr
 8001fa6:	bf00      	nop
 8001fa8:	e000ed00 	.word	0xe000ed00

08001fac <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8001fac:	b580      	push	{r7, lr}
 8001fae:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8001fb0:	2180      	movs	r1, #128	@ 0x80
 8001fb2:	4810      	ldr	r0, [pc, #64]	@ (8001ff4 <Displ_Select+0x48>)
 8001fb4:	f002 f816 	bl	8003fe4 <HAL_GPIO_ReadPin>
 8001fb8:	4603      	mov	r3, r0
 8001fba:	2b00      	cmp	r3, #0
 8001fbc:	d017      	beq.n	8001fee <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 8001fbe:	2201      	movs	r2, #1
 8001fc0:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001fc4:	480c      	ldr	r0, [pc, #48]	@ (8001ff8 <Displ_Select+0x4c>)
 8001fc6:	f002 f825 	bl	8004014 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 8001fca:	4b0c      	ldr	r3, [pc, #48]	@ (8001ffc <Displ_Select+0x50>)
 8001fcc:	681a      	ldr	r2, [r3, #0]
 8001fce:	490b      	ldr	r1, [pc, #44]	@ (8001ffc <Displ_Select+0x50>)
 8001fd0:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 8001fd4:	4013      	ands	r3, r2
 8001fd6:	600b      	str	r3, [r1, #0]
 8001fd8:	4b08      	ldr	r3, [pc, #32]	@ (8001ffc <Displ_Select+0x50>)
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	4a07      	ldr	r2, [pc, #28]	@ (8001ffc <Displ_Select+0x50>)
 8001fde:	f043 0308 	orr.w	r3, r3, #8
 8001fe2:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 8001fe4:	2200      	movs	r2, #0
 8001fe6:	2180      	movs	r1, #128	@ 0x80
 8001fe8:	4802      	ldr	r0, [pc, #8]	@ (8001ff4 <Displ_Select+0x48>)
 8001fea:	f002 f813 	bl	8004014 <HAL_GPIO_WritePin>
		}
	}
}
 8001fee:	bf00      	nop
 8001ff0:	bd80      	pop	{r7, pc}
 8001ff2:	bf00      	nop
 8001ff4:	40020800 	.word	0x40020800
 8001ff8:	40020000 	.word	0x40020000
 8001ffc:	40003800 	.word	0x40003800

08002000 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8002000:	b580      	push	{r7, lr}
 8002002:	b086      	sub	sp, #24
 8002004:	af00      	add	r7, sp, #0
 8002006:	6039      	str	r1, [r7, #0]
 8002008:	4611      	mov	r1, r2
 800200a:	461a      	mov	r2, r3
 800200c:	4603      	mov	r3, r0
 800200e:	71fb      	strb	r3, [r7, #7]
 8002010:	460b      	mov	r3, r1
 8002012:	80bb      	strh	r3, [r7, #4]
 8002014:	4613      	mov	r3, r2
 8002016:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8002018:	bf00      	nop
 800201a:	4b25      	ldr	r3, [pc, #148]	@ (80020b0 <Displ_Transmit+0xb0>)
 800201c:	781b      	ldrb	r3, [r3, #0]
 800201e:	b2db      	uxtb	r3, r3
 8002020:	2b00      	cmp	r3, #0
 8002022:	d0fa      	beq.n	800201a <Displ_Transmit+0x1a>

	Displ_Select();
 8002024:	f7ff ffc2 	bl	8001fac <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8002028:	79fb      	ldrb	r3, [r7, #7]
 800202a:	461a      	mov	r2, r3
 800202c:	2180      	movs	r1, #128	@ 0x80
 800202e:	4821      	ldr	r0, [pc, #132]	@ (80020b4 <Displ_Transmit+0xb4>)
 8002030:	f001 fff0 	bl	8004014 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 8002034:	79bb      	ldrb	r3, [r7, #6]
 8002036:	2b00      	cmp	r3, #0
 8002038:	d016      	beq.n	8002068 <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 800203a:	88bb      	ldrh	r3, [r7, #4]
 800203c:	683a      	ldr	r2, [r7, #0]
 800203e:	4413      	add	r3, r2
 8002040:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 8002042:	683b      	ldr	r3, [r7, #0]
 8002044:	617b      	str	r3, [r7, #20]
 8002046:	e00b      	b.n	8002060 <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 8002048:	697b      	ldr	r3, [r7, #20]
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 800204e:	68fb      	ldr	r3, [r7, #12]
 8002050:	ba5b      	rev16	r3, r3
 8002052:	60bb      	str	r3, [r7, #8]
  return result;
 8002054:	68ba      	ldr	r2, [r7, #8]
 8002056:	697b      	ldr	r3, [r7, #20]
 8002058:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 800205a:	697b      	ldr	r3, [r7, #20]
 800205c:	3304      	adds	r3, #4
 800205e:	617b      	str	r3, [r7, #20]
 8002060:	697a      	ldr	r2, [r7, #20]
 8002062:	693b      	ldr	r3, [r7, #16]
 8002064:	429a      	cmp	r2, r3
 8002066:	d3ef      	bcc.n	8002048 <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 8002068:	88bb      	ldrh	r3, [r7, #4]
 800206a:	2b13      	cmp	r3, #19
 800206c:	d812      	bhi.n	8002094 <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 800206e:	4b10      	ldr	r3, [pc, #64]	@ (80020b0 <Displ_Transmit+0xb0>)
 8002070:	2200      	movs	r2, #0
 8002072:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 8002074:	88ba      	ldrh	r2, [r7, #4]
 8002076:	f04f 33ff 	mov.w	r3, #4294967295
 800207a:	6839      	ldr	r1, [r7, #0]
 800207c:	480e      	ldr	r0, [pc, #56]	@ (80020b8 <Displ_Transmit+0xb8>)
 800207e:	f003 febc 	bl	8005dfa <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8002082:	4b0b      	ldr	r3, [pc, #44]	@ (80020b0 <Displ_Transmit+0xb0>)
 8002084:	2201      	movs	r2, #1
 8002086:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 8002088:	79bb      	ldrb	r3, [r7, #6]
 800208a:	2b00      	cmp	r3, #0
 800208c:	d00b      	beq.n	80020a6 <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 800208e:	f00d ffdb 	bl	8010048 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8002092:	e008      	b.n	80020a6 <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 8002094:	4b06      	ldr	r3, [pc, #24]	@ (80020b0 <Displ_Transmit+0xb0>)
 8002096:	2200      	movs	r2, #0
 8002098:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 800209a:	88bb      	ldrh	r3, [r7, #4]
 800209c:	461a      	mov	r2, r3
 800209e:	6839      	ldr	r1, [r7, #0]
 80020a0:	4805      	ldr	r0, [pc, #20]	@ (80020b8 <Displ_Transmit+0xb8>)
 80020a2:	f004 fab1 	bl	8006608 <HAL_SPI_Transmit_DMA>
	}
 80020a6:	bf00      	nop
 80020a8:	3718      	adds	r7, #24
 80020aa:	46bd      	mov	sp, r7
 80020ac:	bd80      	pop	{r7, pc}
 80020ae:	bf00      	nop
 80020b0:	20000018 	.word	0x20000018
 80020b4:	40020000 	.word	0x40020000
 80020b8:	20000440 	.word	0x20000440

080020bc <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 80020bc:	b580      	push	{r7, lr}
 80020be:	b082      	sub	sp, #8
 80020c0:	af00      	add	r7, sp, #0
 80020c2:	4603      	mov	r3, r0
 80020c4:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 80020c6:	1df9      	adds	r1, r7, #7
 80020c8:	2300      	movs	r3, #0
 80020ca:	2201      	movs	r2, #1
 80020cc:	2000      	movs	r0, #0
 80020ce:	f7ff ff97 	bl	8002000 <Displ_Transmit>
}
 80020d2:	bf00      	nop
 80020d4:	3708      	adds	r7, #8
 80020d6:	46bd      	mov	sp, r7
 80020d8:	bd80      	pop	{r7, pc}

080020da <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 80020da:	b580      	push	{r7, lr}
 80020dc:	b084      	sub	sp, #16
 80020de:	af00      	add	r7, sp, #0
 80020e0:	60f8      	str	r0, [r7, #12]
 80020e2:	60b9      	str	r1, [r7, #8]
 80020e4:	4613      	mov	r3, r2
 80020e6:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 80020e8:	68bb      	ldr	r3, [r7, #8]
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d007      	beq.n	80020fe <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 80020ee:	68bb      	ldr	r3, [r7, #8]
 80020f0:	b29a      	uxth	r2, r3
 80020f2:	79fb      	ldrb	r3, [r7, #7]
 80020f4:	68f9      	ldr	r1, [r7, #12]
 80020f6:	2001      	movs	r0, #1
 80020f8:	f7ff ff82 	bl	8002000 <Displ_Transmit>
 80020fc:	e000      	b.n	8002100 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 80020fe:	bf00      	nop
}
 8002100:	3710      	adds	r7, #16
 8002102:	46bd      	mov	sp, r7
 8002104:	bd80      	pop	{r7, pc}
	...

08002108 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8002108:	b580      	push	{r7, lr}
 800210a:	af00      	add	r7, sp, #0
	Displ_Select();
 800210c:	f7ff ff4e 	bl	8001fac <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8002110:	2200      	movs	r2, #0
 8002112:	2140      	movs	r1, #64	@ 0x40
 8002114:	4819      	ldr	r0, [pc, #100]	@ (800217c <ILI9XXX_Init+0x74>)
 8002116:	f001 ff7d 	bl	8004014 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 800211a:	2001      	movs	r0, #1
 800211c:	f000 fc6a 	bl	80029f4 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 8002120:	2201      	movs	r2, #1
 8002122:	2140      	movs	r1, #64	@ 0x40
 8002124:	4815      	ldr	r0, [pc, #84]	@ (800217c <ILI9XXX_Init+0x74>)
 8002126:	f001 ff75 	bl	8004014 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 800212a:	2096      	movs	r0, #150	@ 0x96
 800212c:	f000 fc62 	bl	80029f4 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 8002130:	203a      	movs	r0, #58	@ 0x3a
 8002132:	f7ff ffc3 	bl	80020bc <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 8002136:	2200      	movs	r2, #0
 8002138:	2101      	movs	r1, #1
 800213a:	4811      	ldr	r0, [pc, #68]	@ (8002180 <ILI9XXX_Init+0x78>)
 800213c:	f7ff ffcd 	bl	80020da <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8002140:	20b0      	movs	r0, #176	@ 0xb0
 8002142:	f7ff ffbb 	bl	80020bc <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8002146:	2200      	movs	r2, #0
 8002148:	2101      	movs	r1, #1
 800214a:	480e      	ldr	r0, [pc, #56]	@ (8002184 <ILI9XXX_Init+0x7c>)
 800214c:	f7ff ffc5 	bl	80020da <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 8002150:	20b0      	movs	r0, #176	@ 0xb0
 8002152:	f7ff ffb3 	bl	80020bc <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 8002156:	2200      	movs	r2, #0
 8002158:	2101      	movs	r1, #1
 800215a:	480a      	ldr	r0, [pc, #40]	@ (8002184 <ILI9XXX_Init+0x7c>)
 800215c:	f7ff ffbd 	bl	80020da <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 8002160:	2011      	movs	r0, #17
 8002162:	f7ff ffab 	bl	80020bc <Displ_WriteCommand>
	HAL_Delay(120);
 8002166:	2078      	movs	r0, #120	@ 0x78
 8002168:	f000 fc44 	bl	80029f4 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 800216c:	2029      	movs	r0, #41	@ 0x29
 800216e:	f7ff ffa5 	bl	80020bc <Displ_WriteCommand>
	HAL_Delay(5);
 8002172:	2005      	movs	r0, #5
 8002174:	f000 fc3e 	bl	80029f4 <HAL_Delay>

}
 8002178:	bf00      	nop
 800217a:	bd80      	pop	{r7, pc}
 800217c:	40020400 	.word	0x40020400
 8002180:	08026be8 	.word	0x08026be8
 8002184:	08026bec 	.word	0x08026bec

08002188 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 8002188:	b590      	push	{r4, r7, lr}
 800218a:	b083      	sub	sp, #12
 800218c:	af00      	add	r7, sp, #0
 800218e:	4604      	mov	r4, r0
 8002190:	4608      	mov	r0, r1
 8002192:	4611      	mov	r1, r2
 8002194:	461a      	mov	r2, r3
 8002196:	4623      	mov	r3, r4
 8002198:	80fb      	strh	r3, [r7, #6]
 800219a:	4603      	mov	r3, r0
 800219c:	80bb      	strh	r3, [r7, #4]
 800219e:	460b      	mov	r3, r1
 80021a0:	807b      	strh	r3, [r7, #2]
 80021a2:	4613      	mov	r3, r2
 80021a4:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 80021a6:	887b      	ldrh	r3, [r7, #2]
 80021a8:	061a      	lsls	r2, r3, #24
 80021aa:	887b      	ldrh	r3, [r7, #2]
 80021ac:	021b      	lsls	r3, r3, #8
 80021ae:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80021b2:	431a      	orrs	r2, r3
 80021b4:	88fb      	ldrh	r3, [r7, #6]
 80021b6:	021b      	lsls	r3, r3, #8
 80021b8:	b29b      	uxth	r3, r3
 80021ba:	4313      	orrs	r3, r2
 80021bc:	88fa      	ldrh	r2, [r7, #6]
 80021be:	0a12      	lsrs	r2, r2, #8
 80021c0:	b292      	uxth	r2, r2
 80021c2:	431a      	orrs	r2, r3
 80021c4:	4b14      	ldr	r3, [pc, #80]	@ (8002218 <Displ_SetAddressWindow+0x90>)
 80021c6:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 80021c8:	202a      	movs	r0, #42	@ 0x2a
 80021ca:	f7ff ff77 	bl	80020bc <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 80021ce:	2200      	movs	r2, #0
 80021d0:	2104      	movs	r1, #4
 80021d2:	4811      	ldr	r0, [pc, #68]	@ (8002218 <Displ_SetAddressWindow+0x90>)
 80021d4:	f7ff ff81 	bl	80020da <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 80021d8:	883b      	ldrh	r3, [r7, #0]
 80021da:	061a      	lsls	r2, r3, #24
 80021dc:	883b      	ldrh	r3, [r7, #0]
 80021de:	021b      	lsls	r3, r3, #8
 80021e0:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 80021e4:	431a      	orrs	r2, r3
 80021e6:	88bb      	ldrh	r3, [r7, #4]
 80021e8:	021b      	lsls	r3, r3, #8
 80021ea:	b29b      	uxth	r3, r3
 80021ec:	4313      	orrs	r3, r2
 80021ee:	88ba      	ldrh	r2, [r7, #4]
 80021f0:	0a12      	lsrs	r2, r2, #8
 80021f2:	b292      	uxth	r2, r2
 80021f4:	431a      	orrs	r2, r3
 80021f6:	4b08      	ldr	r3, [pc, #32]	@ (8002218 <Displ_SetAddressWindow+0x90>)
 80021f8:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 80021fa:	202b      	movs	r0, #43	@ 0x2b
 80021fc:	f7ff ff5e 	bl	80020bc <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002200:	2200      	movs	r2, #0
 8002202:	2104      	movs	r1, #4
 8002204:	4804      	ldr	r0, [pc, #16]	@ (8002218 <Displ_SetAddressWindow+0x90>)
 8002206:	f7ff ff68 	bl	80020da <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 800220a:	202c      	movs	r0, #44	@ 0x2c
 800220c:	f7ff ff56 	bl	80020bc <Displ_WriteCommand>
}
 8002210:	bf00      	nop
 8002212:	370c      	adds	r7, #12
 8002214:	46bd      	mov	sp, r7
 8002216:	bd90      	pop	{r4, r7, pc}
 8002218:	200005f0 	.word	0x200005f0

0800221c <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 800221c:	b580      	push	{r7, lr}
 800221e:	b082      	sub	sp, #8
 8002220:	af00      	add	r7, sp, #0
 8002222:	4603      	mov	r3, r0
 8002224:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 8002226:	2201      	movs	r2, #1
 8002228:	2180      	movs	r1, #128	@ 0x80
 800222a:	4809      	ldr	r0, [pc, #36]	@ (8002250 <Displ_Init+0x34>)
 800222c:	f001 fef2 	bl	8004014 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 8002230:	2201      	movs	r2, #1
 8002232:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002236:	4807      	ldr	r0, [pc, #28]	@ (8002254 <Displ_Init+0x38>)
 8002238:	f001 feec 	bl	8004014 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 800223c:	f7ff ff64 	bl	8002108 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 8002240:	79fb      	ldrb	r3, [r7, #7]
 8002242:	4618      	mov	r0, r3
 8002244:	f000 f808 	bl	8002258 <Displ_Orientation>
}
 8002248:	bf00      	nop
 800224a:	3708      	adds	r7, #8
 800224c:	46bd      	mov	sp, r7
 800224e:	bd80      	pop	{r7, pc}
 8002250:	40020800 	.word	0x40020800
 8002254:	40020000 	.word	0x40020000

08002258 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 8002258:	b580      	push	{r7, lr}
 800225a:	b082      	sub	sp, #8
 800225c:	af00      	add	r7, sp, #0
 800225e:	4603      	mov	r3, r0
 8002260:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 8002262:	79fb      	ldrb	r3, [r7, #7]
 8002264:	2b03      	cmp	r3, #3
 8002266:	d83b      	bhi.n	80022e0 <Displ_Orientation+0x88>
 8002268:	a201      	add	r2, pc, #4	@ (adr r2, 8002270 <Displ_Orientation+0x18>)
 800226a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800226e:	bf00      	nop
 8002270:	08002281 	.word	0x08002281
 8002274:	08002299 	.word	0x08002299
 8002278:	080022b1 	.word	0x080022b1
 800227c:	080022c9 	.word	0x080022c9
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 8002280:	4b1f      	ldr	r3, [pc, #124]	@ (8002300 <Displ_Orientation+0xa8>)
 8002282:	2288      	movs	r2, #136	@ 0x88
 8002284:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8002286:	4b1f      	ldr	r3, [pc, #124]	@ (8002304 <Displ_Orientation+0xac>)
 8002288:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 800228c:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 800228e:	4b1e      	ldr	r3, [pc, #120]	@ (8002308 <Displ_Orientation+0xb0>)
 8002290:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002294:	801a      	strh	r2, [r3, #0]
			break;
 8002296:	e023      	b.n	80022e0 <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 8002298:	4b19      	ldr	r3, [pc, #100]	@ (8002300 <Displ_Orientation+0xa8>)
 800229a:	22e8      	movs	r2, #232	@ 0xe8
 800229c:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 800229e:	4b19      	ldr	r3, [pc, #100]	@ (8002304 <Displ_Orientation+0xac>)
 80022a0:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80022a4:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80022a6:	4b18      	ldr	r3, [pc, #96]	@ (8002308 <Displ_Orientation+0xb0>)
 80022a8:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80022ac:	801a      	strh	r2, [r3, #0]
			break;
 80022ae:	e017      	b.n	80022e0 <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 80022b0:	4b13      	ldr	r3, [pc, #76]	@ (8002300 <Displ_Orientation+0xa8>)
 80022b2:	2248      	movs	r2, #72	@ 0x48
 80022b4:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80022b6:	4b13      	ldr	r3, [pc, #76]	@ (8002304 <Displ_Orientation+0xac>)
 80022b8:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80022bc:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80022be:	4b12      	ldr	r3, [pc, #72]	@ (8002308 <Displ_Orientation+0xb0>)
 80022c0:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80022c4:	801a      	strh	r2, [r3, #0]
			break;
 80022c6:	e00b      	b.n	80022e0 <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 80022c8:	4b0d      	ldr	r3, [pc, #52]	@ (8002300 <Displ_Orientation+0xa8>)
 80022ca:	2228      	movs	r2, #40	@ 0x28
 80022cc:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 80022ce:	4b0d      	ldr	r3, [pc, #52]	@ (8002304 <Displ_Orientation+0xac>)
 80022d0:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 80022d4:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 80022d6:	4b0c      	ldr	r3, [pc, #48]	@ (8002308 <Displ_Orientation+0xb0>)
 80022d8:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80022dc:	801a      	strh	r2, [r3, #0]
			break;
 80022de:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 80022e0:	2036      	movs	r0, #54	@ 0x36
 80022e2:	f7ff feeb 	bl	80020bc <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 80022e6:	2200      	movs	r2, #0
 80022e8:	2101      	movs	r1, #1
 80022ea:	4805      	ldr	r0, [pc, #20]	@ (8002300 <Displ_Orientation+0xa8>)
 80022ec:	f7ff fef5 	bl	80020da <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 80022f0:	4a06      	ldr	r2, [pc, #24]	@ (800230c <Displ_Orientation+0xb4>)
 80022f2:	79fb      	ldrb	r3, [r7, #7]
 80022f4:	7013      	strb	r3, [r2, #0]
}
 80022f6:	bf00      	nop
 80022f8:	3708      	adds	r7, #8
 80022fa:	46bd      	mov	sp, r7
 80022fc:	bd80      	pop	{r7, pc}
 80022fe:	bf00      	nop
 8002300:	200005f4 	.word	0x200005f4
 8002304:	200005ec 	.word	0x200005ec
 8002308:	200005ea 	.word	0x200005ea
 800230c:	200005e8 	.word	0x200005e8

08002310 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8002310:	b480      	push	{r7}
 8002312:	b083      	sub	sp, #12
 8002314:	af00      	add	r7, sp, #0
 8002316:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	681b      	ldr	r3, [r3, #0]
 800231c:	4a05      	ldr	r2, [pc, #20]	@ (8002334 <HAL_SPI_ErrorCallback+0x24>)
 800231e:	4293      	cmp	r3, r2
 8002320:	d102      	bne.n	8002328 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 8002322:	4b05      	ldr	r3, [pc, #20]	@ (8002338 <HAL_SPI_ErrorCallback+0x28>)
 8002324:	2201      	movs	r2, #1
 8002326:	701a      	strb	r2, [r3, #0]
	}
}
 8002328:	bf00      	nop
 800232a:	370c      	adds	r7, #12
 800232c:	46bd      	mov	sp, r7
 800232e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002332:	4770      	bx	lr
 8002334:	40003800 	.word	0x40003800
 8002338:	20000018 	.word	0x20000018

0800233c <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 800233c:	b580      	push	{r7, lr}
 800233e:	b082      	sub	sp, #8
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	4a05      	ldr	r2, [pc, #20]	@ (8002360 <HAL_SPI_TxCpltCallback+0x24>)
 800234a:	4293      	cmp	r3, r2
 800234c:	d104      	bne.n	8002358 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 800234e:	4b05      	ldr	r3, [pc, #20]	@ (8002364 <HAL_SPI_TxCpltCallback+0x28>)
 8002350:	2201      	movs	r2, #1
 8002352:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 8002354:	f00d fe78 	bl	8010048 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 8002358:	bf00      	nop
 800235a:	3708      	adds	r7, #8
 800235c:	46bd      	mov	sp, r7
 800235e:	bd80      	pop	{r7, pc}
 8002360:	40003800 	.word	0x40003800
 8002364:	20000018 	.word	0x20000018

08002368 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 8002368:	b580      	push	{r7, lr}
 800236a:	b082      	sub	sp, #8
 800236c:	af00      	add	r7, sp, #0
 800236e:	4603      	mov	r3, r0
 8002370:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 8002372:	79fb      	ldrb	r3, [r7, #7]
 8002374:	2b51      	cmp	r3, #81	@ 0x51
 8002376:	d00a      	beq.n	800238e <Displ_BackLight+0x26>
 8002378:	2b51      	cmp	r3, #81	@ 0x51
 800237a:	dc16      	bgt.n	80023aa <Displ_BackLight+0x42>
 800237c:	2b46      	cmp	r3, #70	@ 0x46
 800237e:	d008      	beq.n	8002392 <Displ_BackLight+0x2a>
 8002380:	2b46      	cmp	r3, #70	@ 0x46
 8002382:	dc12      	bgt.n	80023aa <Displ_BackLight+0x42>
 8002384:	2b30      	cmp	r3, #48	@ 0x30
 8002386:	d00a      	beq.n	800239e <Displ_BackLight+0x36>
 8002388:	2b31      	cmp	r3, #49	@ 0x31
 800238a:	d002      	beq.n	8002392 <Displ_BackLight+0x2a>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	default:
		break;
 800238c:	e00d      	b.n	80023aa <Displ_BackLight+0x42>
		__NOP();
 800238e:	bf00      	nop
		break;
 8002390:	e00c      	b.n	80023ac <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 8002392:	2201      	movs	r2, #1
 8002394:	2140      	movs	r1, #64	@ 0x40
 8002396:	480a      	ldr	r0, [pc, #40]	@ (80023c0 <Displ_BackLight+0x58>)
 8002398:	f001 fe3c 	bl	8004014 <HAL_GPIO_WritePin>
		break;
 800239c:	e006      	b.n	80023ac <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 800239e:	2200      	movs	r2, #0
 80023a0:	2140      	movs	r1, #64	@ 0x40
 80023a2:	4807      	ldr	r0, [pc, #28]	@ (80023c0 <Displ_BackLight+0x58>)
 80023a4:	f001 fe36 	bl	8004014 <HAL_GPIO_WritePin>
		break;
 80023a8:	e000      	b.n	80023ac <Displ_BackLight+0x44>
		break;
 80023aa:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 80023ac:	2140      	movs	r1, #64	@ 0x40
 80023ae:	4804      	ldr	r0, [pc, #16]	@ (80023c0 <Displ_BackLight+0x58>)
 80023b0:	f001 fe18 	bl	8003fe4 <HAL_GPIO_ReadPin>
 80023b4:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 80023b6:	4618      	mov	r0, r3
 80023b8:	3708      	adds	r7, #8
 80023ba:	46bd      	mov	sp, r7
 80023bc:	bd80      	pop	{r7, pc}
 80023be:	bf00      	nop
 80023c0:	40020000 	.word	0x40020000

080023c4 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 80023c4:	b480      	push	{r7}
 80023c6:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 80023c8:	4b06      	ldr	r3, [pc, #24]	@ (80023e4 <touchgfxDisplayDriverTransmitActive+0x20>)
 80023ca:	781b      	ldrb	r3, [r3, #0]
 80023cc:	b2db      	uxtb	r3, r3
 80023ce:	2b00      	cmp	r3, #0
 80023d0:	bf0c      	ite	eq
 80023d2:	2301      	moveq	r3, #1
 80023d4:	2300      	movne	r3, #0
 80023d6:	b2db      	uxtb	r3, r3
}
 80023d8:	4618      	mov	r0, r3
 80023da:	46bd      	mov	sp, r7
 80023dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e0:	4770      	bx	lr
 80023e2:	bf00      	nop
 80023e4:	20000018 	.word	0x20000018

080023e8 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 80023e8:	b590      	push	{r4, r7, lr}
 80023ea:	b085      	sub	sp, #20
 80023ec:	af00      	add	r7, sp, #0
 80023ee:	60f8      	str	r0, [r7, #12]
 80023f0:	4608      	mov	r0, r1
 80023f2:	4611      	mov	r1, r2
 80023f4:	461a      	mov	r2, r3
 80023f6:	4603      	mov	r3, r0
 80023f8:	817b      	strh	r3, [r7, #10]
 80023fa:	460b      	mov	r3, r1
 80023fc:	813b      	strh	r3, [r7, #8]
 80023fe:	4613      	mov	r3, r2
 8002400:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8002402:	897a      	ldrh	r2, [r7, #10]
 8002404:	88fb      	ldrh	r3, [r7, #6]
 8002406:	4413      	add	r3, r2
 8002408:	b29b      	uxth	r3, r3
 800240a:	3b01      	subs	r3, #1
 800240c:	b29c      	uxth	r4, r3
 800240e:	893a      	ldrh	r2, [r7, #8]
 8002410:	8c3b      	ldrh	r3, [r7, #32]
 8002412:	4413      	add	r3, r2
 8002414:	b29b      	uxth	r3, r3
 8002416:	3b01      	subs	r3, #1
 8002418:	b29b      	uxth	r3, r3
 800241a:	8939      	ldrh	r1, [r7, #8]
 800241c:	8978      	ldrh	r0, [r7, #10]
 800241e:	4622      	mov	r2, r4
 8002420:	f7ff feb2 	bl	8002188 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8002424:	88fb      	ldrh	r3, [r7, #6]
 8002426:	8c3a      	ldrh	r2, [r7, #32]
 8002428:	fb02 f303 	mul.w	r3, r2, r3
 800242c:	005b      	lsls	r3, r3, #1
 800242e:	2201      	movs	r2, #1
 8002430:	4619      	mov	r1, r3
 8002432:	68f8      	ldr	r0, [r7, #12]
 8002434:	f7ff fe51 	bl	80020da <Displ_WriteData>
}
 8002438:	bf00      	nop
 800243a:	3714      	adds	r7, #20
 800243c:	46bd      	mov	sp, r7
 800243e:	bd90      	pop	{r4, r7, pc}

08002440 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 8002440:	b480      	push	{r7}
 8002442:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 8002444:	4b06      	ldr	r3, [pc, #24]	@ (8002460 <Touch_HandlePenDownInterrupt+0x20>)
 8002446:	781b      	ldrb	r3, [r3, #0]
 8002448:	b2db      	uxtb	r3, r3
 800244a:	2b00      	cmp	r3, #0
 800244c:	d002      	beq.n	8002454 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 800244e:	4b05      	ldr	r3, [pc, #20]	@ (8002464 <Touch_HandlePenDownInterrupt+0x24>)
 8002450:	2201      	movs	r2, #1
 8002452:	701a      	strb	r2, [r3, #0]
	}
}
 8002454:	bf00      	nop
 8002456:	46bd      	mov	sp, r7
 8002458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800245c:	4770      	bx	lr
 800245e:	bf00      	nop
 8002460:	20000019 	.word	0x20000019
 8002464:	200005f5 	.word	0x200005f5

08002468 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 8002468:	b580      	push	{r7, lr}
 800246a:	b082      	sub	sp, #8
 800246c:	af00      	add	r7, sp, #0
 800246e:	4603      	mov	r3, r0
 8002470:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 8002472:	88fb      	ldrh	r3, [r7, #6]
 8002474:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002478:	d101      	bne.n	800247e <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 800247a:	f7ff ffe1 	bl	8002440 <Touch_HandlePenDownInterrupt>
	}
}
 800247e:	bf00      	nop
 8002480:	3708      	adds	r7, #8
 8002482:	46bd      	mov	sp, r7
 8002484:	bd80      	pop	{r7, pc}
	...

08002488 <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 8002488:	b580      	push	{r7, lr}
 800248a:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 800248c:	2180      	movs	r1, #128	@ 0x80
 800248e:	4813      	ldr	r0, [pc, #76]	@ (80024dc <Touch_Select+0x54>)
 8002490:	f001 fda8 	bl	8003fe4 <HAL_GPIO_ReadPin>
 8002494:	4603      	mov	r3, r0
 8002496:	2b00      	cmp	r3, #0
 8002498:	d10a      	bne.n	80024b0 <Touch_Select+0x28>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 800249a:	bf00      	nop
 800249c:	4b10      	ldr	r3, [pc, #64]	@ (80024e0 <Touch_Select+0x58>)
 800249e:	781b      	ldrb	r3, [r3, #0]
 80024a0:	b2db      	uxtb	r3, r3
 80024a2:	2b00      	cmp	r3, #0
 80024a4:	d0fa      	beq.n	800249c <Touch_Select+0x14>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 80024a6:	2201      	movs	r2, #1
 80024a8:	2180      	movs	r1, #128	@ 0x80
 80024aa:	480c      	ldr	r0, [pc, #48]	@ (80024dc <Touch_Select+0x54>)
 80024ac:	f001 fdb2 	bl	8004014 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 80024b0:	4b0c      	ldr	r3, [pc, #48]	@ (80024e4 <Touch_Select+0x5c>)
 80024b2:	681a      	ldr	r2, [r3, #0]
 80024b4:	490b      	ldr	r1, [pc, #44]	@ (80024e4 <Touch_Select+0x5c>)
 80024b6:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 80024ba:	4013      	ands	r3, r2
 80024bc:	600b      	str	r3, [r1, #0]
 80024be:	4b09      	ldr	r3, [pc, #36]	@ (80024e4 <Touch_Select+0x5c>)
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	4a08      	ldr	r2, [pc, #32]	@ (80024e4 <Touch_Select+0x5c>)
 80024c4:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 80024c8:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 80024ca:	2200      	movs	r2, #0
 80024cc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80024d0:	4805      	ldr	r0, [pc, #20]	@ (80024e8 <Touch_Select+0x60>)
 80024d2:	f001 fd9f 	bl	8004014 <HAL_GPIO_WritePin>
	}
}
 80024d6:	bf00      	nop
 80024d8:	bd80      	pop	{r7, pc}
 80024da:	bf00      	nop
 80024dc:	40020800 	.word	0x40020800
 80024e0:	20000018 	.word	0x20000018
 80024e4:	40003800 	.word	0x40003800
 80024e8:	40020000 	.word	0x40020000

080024ec <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 80024ec:	b580      	push	{r7, lr}
 80024ee:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 80024f0:	2201      	movs	r2, #1
 80024f2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80024f6:	4802      	ldr	r0, [pc, #8]	@ (8002500 <Touch_UnSelect+0x14>)
 80024f8:	f001 fd8c 	bl	8004014 <HAL_GPIO_WritePin>
	}
}
 80024fc:	bf00      	nop
 80024fe:	bd80      	pop	{r7, pc}
 8002500:	40020000 	.word	0x40020000

08002504 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 8002504:	b580      	push	{r7, lr}
 8002506:	b084      	sub	sp, #16
 8002508:	af00      	add	r7, sp, #0
 800250a:	4603      	mov	r3, r0
 800250c:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 800250e:	2300      	movs	r3, #0
 8002510:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 8002512:	f7ff ffb9 	bl	8002488 <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 8002516:	4b17      	ldr	r3, [pc, #92]	@ (8002574 <Touch_PollAxis+0x70>)
 8002518:	2200      	movs	r2, #0
 800251a:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 800251c:	2017      	movs	r0, #23
 800251e:	f000 fff6 	bl	800350e <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 8002522:	1df9      	adds	r1, r7, #7
 8002524:	230a      	movs	r3, #10
 8002526:	2201      	movs	r2, #1
 8002528:	4813      	ldr	r0, [pc, #76]	@ (8002578 <Touch_PollAxis+0x74>)
 800252a:	f003 fc66 	bl	8005dfa <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 800252e:	f107 0108 	add.w	r1, r7, #8
 8002532:	230a      	movs	r3, #10
 8002534:	2202      	movs	r2, #2
 8002536:	4810      	ldr	r0, [pc, #64]	@ (8002578 <Touch_PollAxis+0x74>)
 8002538:	f003 fda3 	bl	8006082 <HAL_SPI_Receive>
 800253c:	4603      	mov	r3, r0
 800253e:	2b00      	cmp	r3, #0
 8002540:	d105      	bne.n	800254e <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 8002542:	7a3b      	ldrb	r3, [r7, #8]
 8002544:	021b      	lsls	r3, r3, #8
 8002546:	7a7a      	ldrb	r2, [r7, #9]
 8002548:	4413      	add	r3, r2
 800254a:	60fb      	str	r3, [r7, #12]
 800254c:	e001      	b.n	8002552 <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 800254e:	2300      	movs	r3, #0
 8002550:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002552:	2017      	movs	r0, #23
 8002554:	f000 fff5 	bl	8003542 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 8002558:	2017      	movs	r0, #23
 800255a:	f000 ffca 	bl	80034f2 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 800255e:	4b05      	ldr	r3, [pc, #20]	@ (8002574 <Touch_PollAxis+0x70>)
 8002560:	2201      	movs	r2, #1
 8002562:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 8002564:	f7ff ffc2 	bl	80024ec <Touch_UnSelect>
	}

	return poll16;
 8002568:	68fb      	ldr	r3, [r7, #12]
 800256a:	b29b      	uxth	r3, r3
}
 800256c:	4618      	mov	r0, r3
 800256e:	3710      	adds	r7, #16
 8002570:	46bd      	mov	sp, r7
 8002572:	bd80      	pop	{r7, pc}
 8002574:	20000019 	.word	0x20000019
 8002578:	20000440 	.word	0x20000440

0800257c <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 800257c:	b580      	push	{r7, lr}
 800257e:	b08a      	sub	sp, #40	@ 0x28
 8002580:	af00      	add	r7, sp, #0
 8002582:	60f8      	str	r0, [r7, #12]
 8002584:	60b9      	str	r1, [r7, #8]
 8002586:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 8002588:	2304      	movs	r3, #4
 800258a:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 800258c:	2300      	movs	r3, #0
 800258e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002590:	2300      	movs	r3, #0
 8002592:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002596:	e00c      	b.n	80025b2 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8002598:	20b0      	movs	r0, #176	@ 0xb0
 800259a:	f7ff ffb3 	bl	8002504 <Touch_PollAxis>
 800259e:	4603      	mov	r3, r0
 80025a0:	461a      	mov	r2, r3
 80025a2:	6a3b      	ldr	r3, [r7, #32]
 80025a4:	4413      	add	r3, r2
 80025a6:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025a8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80025ac:	3301      	adds	r3, #1
 80025ae:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80025b2:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80025b6:	7ffb      	ldrb	r3, [r7, #31]
 80025b8:	2101      	movs	r1, #1
 80025ba:	fa01 f303 	lsl.w	r3, r1, r3
 80025be:	429a      	cmp	r2, r3
 80025c0:	dbea      	blt.n	8002598 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 80025c2:	7ffb      	ldrb	r3, [r7, #31]
 80025c4:	6a3a      	ldr	r2, [r7, #32]
 80025c6:	fa22 f303 	lsr.w	r3, r2, r3
 80025ca:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 80025cc:	6a3b      	ldr	r3, [r7, #32]
 80025ce:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 80025d2:	d806      	bhi.n	80025e2 <Touch_GetXYtouch+0x66>
		*isTouch=0;
 80025d4:	687b      	ldr	r3, [r7, #4]
 80025d6:	2200      	movs	r2, #0
 80025d8:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80025da:	2017      	movs	r0, #23
 80025dc:	f000 ffb1 	bl	8003542 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 80025e0:	e0b2      	b.n	8002748 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 80025e2:	2300      	movs	r3, #0
 80025e4:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025e6:	2300      	movs	r3, #0
 80025e8:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80025ec:	e00c      	b.n	8002608 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 80025ee:	20d0      	movs	r0, #208	@ 0xd0
 80025f0:	f7ff ff88 	bl	8002504 <Touch_PollAxis>
 80025f4:	4603      	mov	r3, r0
 80025f6:	461a      	mov	r2, r3
 80025f8:	6a3b      	ldr	r3, [r7, #32]
 80025fa:	4413      	add	r3, r2
 80025fc:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025fe:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002602:	3301      	adds	r3, #1
 8002604:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002608:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800260c:	7ffb      	ldrb	r3, [r7, #31]
 800260e:	2101      	movs	r1, #1
 8002610:	fa01 f303 	lsl.w	r3, r1, r3
 8002614:	429a      	cmp	r2, r3
 8002616:	dbea      	blt.n	80025ee <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 8002618:	7ffb      	ldrb	r3, [r7, #31]
 800261a:	6a3a      	ldr	r2, [r7, #32]
 800261c:	fa22 f303 	lsr.w	r3, r2, r3
 8002620:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 8002622:	6a3b      	ldr	r3, [r7, #32]
 8002624:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8002628:	d806      	bhi.n	8002638 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 800262a:	687b      	ldr	r3, [r7, #4]
 800262c:	2200      	movs	r2, #0
 800262e:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002630:	2017      	movs	r0, #23
 8002632:	f000 ff86 	bl	8003542 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8002636:	e087      	b.n	8002748 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 8002638:	6a3b      	ldr	r3, [r7, #32]
 800263a:	ee07 3a90 	vmov	s15, r3
 800263e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002642:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 8002750 <Touch_GetXYtouch+0x1d4>
 8002646:	ee67 7a87 	vmul.f32	s15, s15, s14
 800264a:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8002754 <Touch_GetXYtouch+0x1d8>
 800264e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002652:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002656:	ee17 3a90 	vmov	r3, s15
 800265a:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 800265c:	2300      	movs	r3, #0
 800265e:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002660:	2300      	movs	r3, #0
 8002662:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002666:	e00c      	b.n	8002682 <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 8002668:	2090      	movs	r0, #144	@ 0x90
 800266a:	f7ff ff4b 	bl	8002504 <Touch_PollAxis>
 800266e:	4603      	mov	r3, r0
 8002670:	461a      	mov	r2, r3
 8002672:	6a3b      	ldr	r3, [r7, #32]
 8002674:	4413      	add	r3, r2
 8002676:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002678:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800267c:	3301      	adds	r3, #1
 800267e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002682:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002686:	7ffb      	ldrb	r3, [r7, #31]
 8002688:	2101      	movs	r1, #1
 800268a:	fa01 f303 	lsl.w	r3, r1, r3
 800268e:	429a      	cmp	r2, r3
 8002690:	dbea      	blt.n	8002668 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 8002692:	7ffb      	ldrb	r3, [r7, #31]
 8002694:	6a3a      	ldr	r2, [r7, #32]
 8002696:	fa22 f303 	lsr.w	r3, r2, r3
 800269a:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 800269c:	6a3b      	ldr	r3, [r7, #32]
 800269e:	ee07 3a90 	vmov	s15, r3
 80026a2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026a6:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 8002758 <Touch_GetXYtouch+0x1dc>
 80026aa:	ee67 7a87 	vmul.f32	s15, s15, s14
 80026ae:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 800275c <Touch_GetXYtouch+0x1e0>
 80026b2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80026b6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80026ba:	ee17 3a90 	vmov	r3, s15
 80026be:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 80026c0:	4b27      	ldr	r3, [pc, #156]	@ (8002760 <Touch_GetXYtouch+0x1e4>)
 80026c2:	781b      	ldrb	r3, [r3, #0]
 80026c4:	2b03      	cmp	r3, #3
 80026c6:	d83b      	bhi.n	8002740 <Touch_GetXYtouch+0x1c4>
 80026c8:	a201      	add	r2, pc, #4	@ (adr r2, 80026d0 <Touch_GetXYtouch+0x154>)
 80026ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80026ce:	bf00      	nop
 80026d0:	080026e1 	.word	0x080026e1
 80026d4:	080026f3 	.word	0x080026f3
 80026d8:	0800270b 	.word	0x0800270b
 80026dc:	08002729 	.word	0x08002729
	{
	case TOUCH0:
		*x=touchx;
 80026e0:	69bb      	ldr	r3, [r7, #24]
 80026e2:	b29a      	uxth	r2, r3
 80026e4:	68fb      	ldr	r3, [r7, #12]
 80026e6:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 80026e8:	697b      	ldr	r3, [r7, #20]
 80026ea:	b29a      	uxth	r2, r3
 80026ec:	68bb      	ldr	r3, [r7, #8]
 80026ee:	801a      	strh	r2, [r3, #0]
		break;
 80026f0:	e026      	b.n	8002740 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 80026f2:	697b      	ldr	r3, [r7, #20]
 80026f4:	b29a      	uxth	r2, r3
 80026f6:	68fb      	ldr	r3, [r7, #12]
 80026f8:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 80026fa:	69bb      	ldr	r3, [r7, #24]
 80026fc:	b29b      	uxth	r3, r3
 80026fe:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002702:	b29a      	uxth	r2, r3
 8002704:	68bb      	ldr	r3, [r7, #8]
 8002706:	801a      	strh	r2, [r3, #0]
		break;
 8002708:	e01a      	b.n	8002740 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 800270a:	69bb      	ldr	r3, [r7, #24]
 800270c:	b29b      	uxth	r3, r3
 800270e:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002712:	b29a      	uxth	r2, r3
 8002714:	68fb      	ldr	r3, [r7, #12]
 8002716:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8002718:	697b      	ldr	r3, [r7, #20]
 800271a:	b29b      	uxth	r3, r3
 800271c:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8002720:	b29a      	uxth	r2, r3
 8002722:	68bb      	ldr	r3, [r7, #8]
 8002724:	801a      	strh	r2, [r3, #0]
		break;
 8002726:	e00b      	b.n	8002740 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8002728:	697b      	ldr	r3, [r7, #20]
 800272a:	b29b      	uxth	r3, r3
 800272c:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 8002730:	b29a      	uxth	r2, r3
 8002732:	68fb      	ldr	r3, [r7, #12]
 8002734:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 8002736:	69bb      	ldr	r3, [r7, #24]
 8002738:	b29a      	uxth	r2, r3
 800273a:	68bb      	ldr	r3, [r7, #8]
 800273c:	801a      	strh	r2, [r3, #0]
		break;
 800273e:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 8002740:	687b      	ldr	r3, [r7, #4]
 8002742:	2201      	movs	r2, #1
 8002744:	701a      	strb	r2, [r3, #0]
	return;
 8002746:	bf00      	nop
}
 8002748:	3728      	adds	r7, #40	@ 0x28
 800274a:	46bd      	mov	sp, r7
 800274c:	bd80      	pop	{r7, pc}
 800274e:	bf00      	nop
 8002750:	bc378034 	.word	0xbc378034
 8002754:	43a80000 	.word	0x43a80000
 8002758:	3c87fcb9 	.word	0x3c87fcb9
 800275c:	4225851f 	.word	0x4225851f
 8002760:	200005e8 	.word	0x200005e8

08002764 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 8002764:	b580      	push	{r7, lr}
 8002766:	b084      	sub	sp, #16
 8002768:	af00      	add	r7, sp, #0
 800276a:	4603      	mov	r3, r0
 800276c:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 800276e:	4b10      	ldr	r3, [pc, #64]	@ (80027b0 <Touch_GotATouch+0x4c>)
 8002770:	781b      	ldrb	r3, [r3, #0]
 8002772:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 8002774:	79fb      	ldrb	r3, [r7, #7]
 8002776:	2b02      	cmp	r3, #2
 8002778:	d10f      	bne.n	800279a <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 800277a:	f000 f92f 	bl	80029dc <HAL_GetTick>
 800277e:	4602      	mov	r2, r0
 8002780:	4b0c      	ldr	r3, [pc, #48]	@ (80027b4 <Touch_GotATouch+0x50>)
 8002782:	681b      	ldr	r3, [r3, #0]
 8002784:	1ad3      	subs	r3, r2, r3
 8002786:	2b3b      	cmp	r3, #59	@ 0x3b
 8002788:	d905      	bls.n	8002796 <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 800278a:	f000 f927 	bl	80029dc <HAL_GetTick>
 800278e:	4603      	mov	r3, r0
 8002790:	4a08      	ldr	r2, [pc, #32]	@ (80027b4 <Touch_GotATouch+0x50>)
 8002792:	6013      	str	r3, [r2, #0]
 8002794:	e001      	b.n	800279a <Touch_GotATouch+0x36>
		else
			result=0;
 8002796:	2300      	movs	r3, #0
 8002798:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 800279a:	79fb      	ldrb	r3, [r7, #7]
 800279c:	2b01      	cmp	r3, #1
 800279e:	d102      	bne.n	80027a6 <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 80027a0:	4b03      	ldr	r3, [pc, #12]	@ (80027b0 <Touch_GotATouch+0x4c>)
 80027a2:	2200      	movs	r2, #0
 80027a4:	701a      	strb	r2, [r3, #0]
	return result;
 80027a6:	7bfb      	ldrb	r3, [r7, #15]
}
 80027a8:	4618      	mov	r0, r3
 80027aa:	3710      	adds	r7, #16
 80027ac:	46bd      	mov	sp, r7
 80027ae:	bd80      	pop	{r7, pc}
 80027b0:	200005f5 	.word	0x200005f5
 80027b4:	200005f8 	.word	0x200005f8

080027b8 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 80027b8:	b580      	push	{r7, lr}
 80027ba:	b084      	sub	sp, #16
 80027bc:	af00      	add	r7, sp, #0
 80027be:	6078      	str	r0, [r7, #4]
 80027c0:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 80027c2:	2300      	movs	r3, #0
 80027c4:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 80027c6:	2300      	movs	r3, #0
 80027c8:	81bb      	strh	r3, [r7, #12]
 80027ca:	2300      	movs	r3, #0
 80027cc:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 80027ce:	2000      	movs	r0, #0
 80027d0:	f7ff ffc8 	bl	8002764 <Touch_GotATouch>
 80027d4:	4603      	mov	r3, r0
 80027d6:	2b00      	cmp	r3, #0
 80027d8:	d060      	beq.n	800289c <Touch_TouchGFXSampleTouch+0xe4>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 80027da:	f107 020f 	add.w	r2, r7, #15
 80027de:	f107 010a 	add.w	r1, r7, #10
 80027e2:	f107 030c 	add.w	r3, r7, #12
 80027e6:	4618      	mov	r0, r3
 80027e8:	f7ff fec8 	bl	800257c <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 80027ec:	7bfb      	ldrb	r3, [r7, #15]
 80027ee:	2b00      	cmp	r3, #0
 80027f0:	d126      	bne.n	8002840 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 80027f2:	4b2d      	ldr	r3, [pc, #180]	@ (80028a8 <Touch_TouchGFXSampleTouch+0xf0>)
 80027f4:	681b      	ldr	r3, [r3, #0]
 80027f6:	2b00      	cmp	r3, #0
 80027f8:	d050      	beq.n	800289c <Touch_TouchGFXSampleTouch+0xe4>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 80027fa:	4b2c      	ldr	r3, [pc, #176]	@ (80028ac <Touch_TouchGFXSampleTouch+0xf4>)
 80027fc:	781b      	ldrb	r3, [r3, #0]
 80027fe:	1e5a      	subs	r2, r3, #1
 8002800:	b2d1      	uxtb	r1, r2
 8002802:	4a2a      	ldr	r2, [pc, #168]	@ (80028ac <Touch_TouchGFXSampleTouch+0xf4>)
 8002804:	7011      	strb	r1, [r2, #0]
 8002806:	2b01      	cmp	r3, #1
 8002808:	d90c      	bls.n	8002824 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 800280a:	4b29      	ldr	r3, [pc, #164]	@ (80028b0 <Touch_TouchGFXSampleTouch+0xf8>)
 800280c:	881b      	ldrh	r3, [r3, #0]
 800280e:	461a      	mov	r2, r3
 8002810:	687b      	ldr	r3, [r7, #4]
 8002812:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8002814:	4b27      	ldr	r3, [pc, #156]	@ (80028b4 <Touch_TouchGFXSampleTouch+0xfc>)
 8002816:	881b      	ldrh	r3, [r3, #0]
 8002818:	461a      	mov	r2, r3
 800281a:	683b      	ldr	r3, [r7, #0]
 800281c:	601a      	str	r2, [r3, #0]
					isTouch=1;
 800281e:	2301      	movs	r3, #1
 8002820:	73fb      	strb	r3, [r7, #15]
 8002822:	e03b      	b.n	800289c <Touch_TouchGFXSampleTouch+0xe4>
				} else if ((repetition==255)) {  // that's -1
 8002824:	4b21      	ldr	r3, [pc, #132]	@ (80028ac <Touch_TouchGFXSampleTouch+0xf4>)
 8002826:	781b      	ldrb	r3, [r3, #0]
 8002828:	2bff      	cmp	r3, #255	@ 0xff
 800282a:	d137      	bne.n	800289c <Touch_TouchGFXSampleTouch+0xe4>
					touchTime=0;					// set display as untouched
 800282c:	4b1e      	ldr	r3, [pc, #120]	@ (80028a8 <Touch_TouchGFXSampleTouch+0xf0>)
 800282e:	2200      	movs	r2, #0
 8002830:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 8002832:	2001      	movs	r0, #1
 8002834:	f7ff ff96 	bl	8002764 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 8002838:	4b1c      	ldr	r3, [pc, #112]	@ (80028ac <Touch_TouchGFXSampleTouch+0xf4>)
 800283a:	2200      	movs	r2, #0
 800283c:	701a      	strb	r2, [r3, #0]
 800283e:	e02d      	b.n	800289c <Touch_TouchGFXSampleTouch+0xe4>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 8002840:	4b19      	ldr	r3, [pc, #100]	@ (80028a8 <Touch_TouchGFXSampleTouch+0xf0>)
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	2b00      	cmp	r3, #0
 8002846:	d10e      	bne.n	8002866 <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 8002848:	89ba      	ldrh	r2, [r7, #12]
 800284a:	4b19      	ldr	r3, [pc, #100]	@ (80028b0 <Touch_TouchGFXSampleTouch+0xf8>)
 800284c:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 800284e:	897a      	ldrh	r2, [r7, #10]
 8002850:	4b18      	ldr	r3, [pc, #96]	@ (80028b4 <Touch_TouchGFXSampleTouch+0xfc>)
 8002852:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 8002854:	f000 f8c2 	bl	80029dc <HAL_GetTick>
 8002858:	4603      	mov	r3, r0
 800285a:	4a13      	ldr	r2, [pc, #76]	@ (80028a8 <Touch_TouchGFXSampleTouch+0xf0>)
 800285c:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 800285e:	4b16      	ldr	r3, [pc, #88]	@ (80028b8 <Touch_TouchGFXSampleTouch+0x100>)
 8002860:	2201      	movs	r2, #1
 8002862:	701a      	strb	r2, [r3, #0]
 8002864:	e001      	b.n	800286a <Touch_TouchGFXSampleTouch+0xb2>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 8002866:	f000 f8b9 	bl	80029dc <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 800286a:	4b13      	ldr	r3, [pc, #76]	@ (80028b8 <Touch_TouchGFXSampleTouch+0x100>)
 800286c:	781b      	ldrb	r3, [r3, #0]
 800286e:	2b00      	cmp	r3, #0
 8002870:	d012      	beq.n	8002898 <Touch_TouchGFXSampleTouch+0xe0>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 8002872:	89bb      	ldrh	r3, [r7, #12]
 8002874:	461a      	mov	r2, r3
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 800287a:	897b      	ldrh	r3, [r7, #10]
 800287c:	461a      	mov	r2, r3
 800287e:	683b      	ldr	r3, [r7, #0]
 8002880:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	b29a      	uxth	r2, r3
 8002888:	4b09      	ldr	r3, [pc, #36]	@ (80028b0 <Touch_TouchGFXSampleTouch+0xf8>)
 800288a:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 800288c:	683b      	ldr	r3, [r7, #0]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	b29a      	uxth	r2, r3
 8002892:	4b08      	ldr	r3, [pc, #32]	@ (80028b4 <Touch_TouchGFXSampleTouch+0xfc>)
 8002894:	801a      	strh	r2, [r3, #0]
 8002896:	e001      	b.n	800289c <Touch_TouchGFXSampleTouch+0xe4>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8002898:	2300      	movs	r3, #0
 800289a:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 800289c:	7bfb      	ldrb	r3, [r7, #15]
}
 800289e:	4618      	mov	r0, r3
 80028a0:	3710      	adds	r7, #16
 80028a2:	46bd      	mov	sp, r7
 80028a4:	bd80      	pop	{r7, pc}
 80028a6:	bf00      	nop
 80028a8:	2000001c 	.word	0x2000001c
 80028ac:	200005fc 	.word	0x200005fc
 80028b0:	200005fe 	.word	0x200005fe
 80028b4:	20000600 	.word	0x20000600
 80028b8:	20000602 	.word	0x20000602

080028bc <Reset_Handler>:
 80028bc:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80028f4 <LoopFillZerobss+0xe>
 80028c0:	f7ff fb62 	bl	8001f88 <SystemInit>
 80028c4:	480c      	ldr	r0, [pc, #48]	@ (80028f8 <LoopFillZerobss+0x12>)
 80028c6:	490d      	ldr	r1, [pc, #52]	@ (80028fc <LoopFillZerobss+0x16>)
 80028c8:	4a0d      	ldr	r2, [pc, #52]	@ (8002900 <LoopFillZerobss+0x1a>)
 80028ca:	2300      	movs	r3, #0
 80028cc:	e002      	b.n	80028d4 <LoopCopyDataInit>

080028ce <CopyDataInit>:
 80028ce:	58d4      	ldr	r4, [r2, r3]
 80028d0:	50c4      	str	r4, [r0, r3]
 80028d2:	3304      	adds	r3, #4

080028d4 <LoopCopyDataInit>:
 80028d4:	18c4      	adds	r4, r0, r3
 80028d6:	428c      	cmp	r4, r1
 80028d8:	d3f9      	bcc.n	80028ce <CopyDataInit>
 80028da:	4a0a      	ldr	r2, [pc, #40]	@ (8002904 <LoopFillZerobss+0x1e>)
 80028dc:	4c0a      	ldr	r4, [pc, #40]	@ (8002908 <LoopFillZerobss+0x22>)
 80028de:	2300      	movs	r3, #0
 80028e0:	e001      	b.n	80028e6 <LoopFillZerobss>

080028e2 <FillZerobss>:
 80028e2:	6013      	str	r3, [r2, #0]
 80028e4:	3204      	adds	r2, #4

080028e6 <LoopFillZerobss>:
 80028e6:	42a2      	cmp	r2, r4
 80028e8:	d3fb      	bcc.n	80028e2 <FillZerobss>
 80028ea:	f023 fc01 	bl	80260f0 <__libc_init_array>
 80028ee:	f7fe fafd 	bl	8000eec <main>
 80028f2:	4770      	bx	lr
 80028f4:	20020000 	.word	0x20020000
 80028f8:	20000000 	.word	0x20000000
 80028fc:	2000010c 	.word	0x2000010c
 8002900:	08060098 	.word	0x08060098
 8002904:	20000320 	.word	0x20000320
 8002908:	20003c8c 	.word	0x20003c8c

0800290c <ADC_IRQHandler>:
 800290c:	e7fe      	b.n	800290c <ADC_IRQHandler>
	...

08002910 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002910:	b580      	push	{r7, lr}
 8002912:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002914:	4b0e      	ldr	r3, [pc, #56]	@ (8002950 <HAL_Init+0x40>)
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	4a0d      	ldr	r2, [pc, #52]	@ (8002950 <HAL_Init+0x40>)
 800291a:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800291e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002920:	4b0b      	ldr	r3, [pc, #44]	@ (8002950 <HAL_Init+0x40>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	4a0a      	ldr	r2, [pc, #40]	@ (8002950 <HAL_Init+0x40>)
 8002926:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800292a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800292c:	4b08      	ldr	r3, [pc, #32]	@ (8002950 <HAL_Init+0x40>)
 800292e:	681b      	ldr	r3, [r3, #0]
 8002930:	4a07      	ldr	r2, [pc, #28]	@ (8002950 <HAL_Init+0x40>)
 8002932:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002936:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002938:	2003      	movs	r0, #3
 800293a:	f000 fdb3 	bl	80034a4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800293e:	2000      	movs	r0, #0
 8002940:	f000 f808 	bl	8002954 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002944:	f7fe ff58 	bl	80017f8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002948:	2300      	movs	r3, #0
}
 800294a:	4618      	mov	r0, r3
 800294c:	bd80      	pop	{r7, pc}
 800294e:	bf00      	nop
 8002950:	40023c00 	.word	0x40023c00

08002954 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002954:	b580      	push	{r7, lr}
 8002956:	b082      	sub	sp, #8
 8002958:	af00      	add	r7, sp, #0
 800295a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800295c:	4b12      	ldr	r3, [pc, #72]	@ (80029a8 <HAL_InitTick+0x54>)
 800295e:	681a      	ldr	r2, [r3, #0]
 8002960:	4b12      	ldr	r3, [pc, #72]	@ (80029ac <HAL_InitTick+0x58>)
 8002962:	781b      	ldrb	r3, [r3, #0]
 8002964:	4619      	mov	r1, r3
 8002966:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800296a:	fbb3 f3f1 	udiv	r3, r3, r1
 800296e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002972:	4618      	mov	r0, r3
 8002974:	f000 fdd9 	bl	800352a <HAL_SYSTICK_Config>
 8002978:	4603      	mov	r3, r0
 800297a:	2b00      	cmp	r3, #0
 800297c:	d001      	beq.n	8002982 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800297e:	2301      	movs	r3, #1
 8002980:	e00e      	b.n	80029a0 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	2b0f      	cmp	r3, #15
 8002986:	d80a      	bhi.n	800299e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002988:	2200      	movs	r2, #0
 800298a:	6879      	ldr	r1, [r7, #4]
 800298c:	f04f 30ff 	mov.w	r0, #4294967295
 8002990:	f000 fd93 	bl	80034ba <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002994:	4a06      	ldr	r2, [pc, #24]	@ (80029b0 <HAL_InitTick+0x5c>)
 8002996:	687b      	ldr	r3, [r7, #4]
 8002998:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800299a:	2300      	movs	r3, #0
 800299c:	e000      	b.n	80029a0 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800299e:	2301      	movs	r3, #1
}
 80029a0:	4618      	mov	r0, r3
 80029a2:	3708      	adds	r7, #8
 80029a4:	46bd      	mov	sp, r7
 80029a6:	bd80      	pop	{r7, pc}
 80029a8:	20000014 	.word	0x20000014
 80029ac:	20000024 	.word	0x20000024
 80029b0:	20000020 	.word	0x20000020

080029b4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80029b4:	b480      	push	{r7}
 80029b6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80029b8:	4b06      	ldr	r3, [pc, #24]	@ (80029d4 <HAL_IncTick+0x20>)
 80029ba:	781b      	ldrb	r3, [r3, #0]
 80029bc:	461a      	mov	r2, r3
 80029be:	4b06      	ldr	r3, [pc, #24]	@ (80029d8 <HAL_IncTick+0x24>)
 80029c0:	681b      	ldr	r3, [r3, #0]
 80029c2:	4413      	add	r3, r2
 80029c4:	4a04      	ldr	r2, [pc, #16]	@ (80029d8 <HAL_IncTick+0x24>)
 80029c6:	6013      	str	r3, [r2, #0]
}
 80029c8:	bf00      	nop
 80029ca:	46bd      	mov	sp, r7
 80029cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029d0:	4770      	bx	lr
 80029d2:	bf00      	nop
 80029d4:	20000024 	.word	0x20000024
 80029d8:	20000604 	.word	0x20000604

080029dc <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80029dc:	b480      	push	{r7}
 80029de:	af00      	add	r7, sp, #0
  return uwTick;
 80029e0:	4b03      	ldr	r3, [pc, #12]	@ (80029f0 <HAL_GetTick+0x14>)
 80029e2:	681b      	ldr	r3, [r3, #0]
}
 80029e4:	4618      	mov	r0, r3
 80029e6:	46bd      	mov	sp, r7
 80029e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ec:	4770      	bx	lr
 80029ee:	bf00      	nop
 80029f0:	20000604 	.word	0x20000604

080029f4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80029f4:	b580      	push	{r7, lr}
 80029f6:	b084      	sub	sp, #16
 80029f8:	af00      	add	r7, sp, #0
 80029fa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80029fc:	f7ff ffee 	bl	80029dc <HAL_GetTick>
 8002a00:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002a06:	68fb      	ldr	r3, [r7, #12]
 8002a08:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a0c:	d005      	beq.n	8002a1a <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002a0e:	4b0a      	ldr	r3, [pc, #40]	@ (8002a38 <HAL_Delay+0x44>)
 8002a10:	781b      	ldrb	r3, [r3, #0]
 8002a12:	461a      	mov	r2, r3
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	4413      	add	r3, r2
 8002a18:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002a1a:	bf00      	nop
 8002a1c:	f7ff ffde 	bl	80029dc <HAL_GetTick>
 8002a20:	4602      	mov	r2, r0
 8002a22:	68bb      	ldr	r3, [r7, #8]
 8002a24:	1ad3      	subs	r3, r2, r3
 8002a26:	68fa      	ldr	r2, [r7, #12]
 8002a28:	429a      	cmp	r2, r3
 8002a2a:	d8f7      	bhi.n	8002a1c <HAL_Delay+0x28>
  {
  }
}
 8002a2c:	bf00      	nop
 8002a2e:	bf00      	nop
 8002a30:	3710      	adds	r7, #16
 8002a32:	46bd      	mov	sp, r7
 8002a34:	bd80      	pop	{r7, pc}
 8002a36:	bf00      	nop
 8002a38:	20000024 	.word	0x20000024

08002a3c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002a3c:	b580      	push	{r7, lr}
 8002a3e:	b084      	sub	sp, #16
 8002a40:	af00      	add	r7, sp, #0
 8002a42:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002a44:	2300      	movs	r3, #0
 8002a46:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	d101      	bne.n	8002a52 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002a4e:	2301      	movs	r3, #1
 8002a50:	e033      	b.n	8002aba <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8002a52:	687b      	ldr	r3, [r7, #4]
 8002a54:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a56:	2b00      	cmp	r3, #0
 8002a58:	d109      	bne.n	8002a6e <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002a5a:	6878      	ldr	r0, [r7, #4]
 8002a5c:	f7fe fef4 	bl	8001848 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002a60:	687b      	ldr	r3, [r7, #4]
 8002a62:	2200      	movs	r2, #0
 8002a64:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	2200      	movs	r2, #0
 8002a6a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a72:	f003 0310 	and.w	r3, r3, #16
 8002a76:	2b00      	cmp	r3, #0
 8002a78:	d118      	bne.n	8002aac <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002a7a:	687b      	ldr	r3, [r7, #4]
 8002a7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a7e:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002a82:	f023 0302 	bic.w	r3, r3, #2
 8002a86:	f043 0202 	orr.w	r2, r3, #2
 8002a8a:	687b      	ldr	r3, [r7, #4]
 8002a8c:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002a8e:	6878      	ldr	r0, [r7, #4]
 8002a90:	f000 fa78 	bl	8002f84 <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	2200      	movs	r2, #0
 8002a98:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002a9e:	f023 0303 	bic.w	r3, r3, #3
 8002aa2:	f043 0201 	orr.w	r2, r3, #1
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	641a      	str	r2, [r3, #64]	@ 0x40
 8002aaa:	e001      	b.n	8002ab0 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002aac:	2301      	movs	r3, #1
 8002aae:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	2200      	movs	r2, #0
 8002ab4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002ab8:	7bfb      	ldrb	r3, [r7, #15]
}
 8002aba:	4618      	mov	r0, r3
 8002abc:	3710      	adds	r7, #16
 8002abe:	46bd      	mov	sp, r7
 8002ac0:	bd80      	pop	{r7, pc}
	...

08002ac4 <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8002ac4:	b580      	push	{r7, lr}
 8002ac6:	b086      	sub	sp, #24
 8002ac8:	af00      	add	r7, sp, #0
 8002aca:	60f8      	str	r0, [r7, #12]
 8002acc:	60b9      	str	r1, [r7, #8]
 8002ace:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8002ad0:	2300      	movs	r3, #0
 8002ad2:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002ad4:	68fb      	ldr	r3, [r7, #12]
 8002ad6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002ada:	2b01      	cmp	r3, #1
 8002adc:	d101      	bne.n	8002ae2 <HAL_ADC_Start_DMA+0x1e>
 8002ade:	2302      	movs	r3, #2
 8002ae0:	e0e9      	b.n	8002cb6 <HAL_ADC_Start_DMA+0x1f2>
 8002ae2:	68fb      	ldr	r3, [r7, #12]
 8002ae4:	2201      	movs	r2, #1
 8002ae6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002aea:	68fb      	ldr	r3, [r7, #12]
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	689b      	ldr	r3, [r3, #8]
 8002af0:	f003 0301 	and.w	r3, r3, #1
 8002af4:	2b01      	cmp	r3, #1
 8002af6:	d018      	beq.n	8002b2a <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	681b      	ldr	r3, [r3, #0]
 8002afc:	689a      	ldr	r2, [r3, #8]
 8002afe:	68fb      	ldr	r3, [r7, #12]
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	f042 0201 	orr.w	r2, r2, #1
 8002b06:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002b08:	4b6d      	ldr	r3, [pc, #436]	@ (8002cc0 <HAL_ADC_Start_DMA+0x1fc>)
 8002b0a:	681b      	ldr	r3, [r3, #0]
 8002b0c:	4a6d      	ldr	r2, [pc, #436]	@ (8002cc4 <HAL_ADC_Start_DMA+0x200>)
 8002b0e:	fba2 2303 	umull	r2, r3, r2, r3
 8002b12:	0c9a      	lsrs	r2, r3, #18
 8002b14:	4613      	mov	r3, r2
 8002b16:	005b      	lsls	r3, r3, #1
 8002b18:	4413      	add	r3, r2
 8002b1a:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002b1c:	e002      	b.n	8002b24 <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8002b1e:	693b      	ldr	r3, [r7, #16]
 8002b20:	3b01      	subs	r3, #1
 8002b22:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002b24:	693b      	ldr	r3, [r7, #16]
 8002b26:	2b00      	cmp	r3, #0
 8002b28:	d1f9      	bne.n	8002b1e <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8002b2a:	68fb      	ldr	r3, [r7, #12]
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	689b      	ldr	r3, [r3, #8]
 8002b30:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002b34:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002b38:	d107      	bne.n	8002b4a <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8002b3a:	68fb      	ldr	r3, [r7, #12]
 8002b3c:	681b      	ldr	r3, [r3, #0]
 8002b3e:	689a      	ldr	r2, [r3, #8]
 8002b40:	68fb      	ldr	r3, [r7, #12]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002b48:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002b4a:	68fb      	ldr	r3, [r7, #12]
 8002b4c:	681b      	ldr	r3, [r3, #0]
 8002b4e:	689b      	ldr	r3, [r3, #8]
 8002b50:	f003 0301 	and.w	r3, r3, #1
 8002b54:	2b01      	cmp	r3, #1
 8002b56:	f040 80a1 	bne.w	8002c9c <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002b5a:	68fb      	ldr	r3, [r7, #12]
 8002b5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b5e:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002b62:	f023 0301 	bic.w	r3, r3, #1
 8002b66:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002b6a:	68fb      	ldr	r3, [r7, #12]
 8002b6c:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002b6e:	68fb      	ldr	r3, [r7, #12]
 8002b70:	681b      	ldr	r3, [r3, #0]
 8002b72:	685b      	ldr	r3, [r3, #4]
 8002b74:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d007      	beq.n	8002b8c <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002b7c:	68fb      	ldr	r3, [r7, #12]
 8002b7e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b80:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002b84:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002b88:	68fb      	ldr	r3, [r7, #12]
 8002b8a:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002b8c:	68fb      	ldr	r3, [r7, #12]
 8002b8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b90:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002b94:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002b98:	d106      	bne.n	8002ba8 <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002b9a:	68fb      	ldr	r3, [r7, #12]
 8002b9c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002b9e:	f023 0206 	bic.w	r2, r3, #6
 8002ba2:	68fb      	ldr	r3, [r7, #12]
 8002ba4:	645a      	str	r2, [r3, #68]	@ 0x44
 8002ba6:	e002      	b.n	8002bae <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	2200      	movs	r2, #0
 8002bac:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002bae:	68fb      	ldr	r3, [r7, #12]
 8002bb0:	2200      	movs	r2, #0
 8002bb2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002bb6:	4b44      	ldr	r3, [pc, #272]	@ (8002cc8 <HAL_ADC_Start_DMA+0x204>)
 8002bb8:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002bba:	68fb      	ldr	r3, [r7, #12]
 8002bbc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bbe:	4a43      	ldr	r2, [pc, #268]	@ (8002ccc <HAL_ADC_Start_DMA+0x208>)
 8002bc0:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002bc2:	68fb      	ldr	r3, [r7, #12]
 8002bc4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bc6:	4a42      	ldr	r2, [pc, #264]	@ (8002cd0 <HAL_ADC_Start_DMA+0x20c>)
 8002bc8:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002bca:	68fb      	ldr	r3, [r7, #12]
 8002bcc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002bce:	4a41      	ldr	r2, [pc, #260]	@ (8002cd4 <HAL_ADC_Start_DMA+0x210>)
 8002bd0:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002bd2:	68fb      	ldr	r3, [r7, #12]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002bda:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002bdc:	68fb      	ldr	r3, [r7, #12]
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	685a      	ldr	r2, [r3, #4]
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	681b      	ldr	r3, [r3, #0]
 8002be6:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002bea:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8002bec:	68fb      	ldr	r3, [r7, #12]
 8002bee:	681b      	ldr	r3, [r3, #0]
 8002bf0:	689a      	ldr	r2, [r3, #8]
 8002bf2:	68fb      	ldr	r3, [r7, #12]
 8002bf4:	681b      	ldr	r3, [r3, #0]
 8002bf6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002bfa:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002bfc:	68fb      	ldr	r3, [r7, #12]
 8002bfe:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002c00:	68fb      	ldr	r3, [r7, #12]
 8002c02:	681b      	ldr	r3, [r3, #0]
 8002c04:	334c      	adds	r3, #76	@ 0x4c
 8002c06:	4619      	mov	r1, r3
 8002c08:	68ba      	ldr	r2, [r7, #8]
 8002c0a:	687b      	ldr	r3, [r7, #4]
 8002c0c:	f000 fd72 	bl	80036f4 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002c10:	697b      	ldr	r3, [r7, #20]
 8002c12:	685b      	ldr	r3, [r3, #4]
 8002c14:	f003 031f 	and.w	r3, r3, #31
 8002c18:	2b00      	cmp	r3, #0
 8002c1a:	d12a      	bne.n	8002c72 <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002c1c:	68fb      	ldr	r3, [r7, #12]
 8002c1e:	681b      	ldr	r3, [r3, #0]
 8002c20:	4a2d      	ldr	r2, [pc, #180]	@ (8002cd8 <HAL_ADC_Start_DMA+0x214>)
 8002c22:	4293      	cmp	r3, r2
 8002c24:	d015      	beq.n	8002c52 <HAL_ADC_Start_DMA+0x18e>
 8002c26:	68fb      	ldr	r3, [r7, #12]
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	4a2c      	ldr	r2, [pc, #176]	@ (8002cdc <HAL_ADC_Start_DMA+0x218>)
 8002c2c:	4293      	cmp	r3, r2
 8002c2e:	d105      	bne.n	8002c3c <HAL_ADC_Start_DMA+0x178>
 8002c30:	4b25      	ldr	r3, [pc, #148]	@ (8002cc8 <HAL_ADC_Start_DMA+0x204>)
 8002c32:	685b      	ldr	r3, [r3, #4]
 8002c34:	f003 031f 	and.w	r3, r3, #31
 8002c38:	2b00      	cmp	r3, #0
 8002c3a:	d00a      	beq.n	8002c52 <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002c3c:	68fb      	ldr	r3, [r7, #12]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	4a27      	ldr	r2, [pc, #156]	@ (8002ce0 <HAL_ADC_Start_DMA+0x21c>)
 8002c42:	4293      	cmp	r3, r2
 8002c44:	d136      	bne.n	8002cb4 <HAL_ADC_Start_DMA+0x1f0>
 8002c46:	4b20      	ldr	r3, [pc, #128]	@ (8002cc8 <HAL_ADC_Start_DMA+0x204>)
 8002c48:	685b      	ldr	r3, [r3, #4]
 8002c4a:	f003 0310 	and.w	r3, r3, #16
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d130      	bne.n	8002cb4 <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002c52:	68fb      	ldr	r3, [r7, #12]
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	689b      	ldr	r3, [r3, #8]
 8002c58:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d129      	bne.n	8002cb4 <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002c60:	68fb      	ldr	r3, [r7, #12]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	689a      	ldr	r2, [r3, #8]
 8002c66:	68fb      	ldr	r3, [r7, #12]
 8002c68:	681b      	ldr	r3, [r3, #0]
 8002c6a:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002c6e:	609a      	str	r2, [r3, #8]
 8002c70:	e020      	b.n	8002cb4 <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002c72:	68fb      	ldr	r3, [r7, #12]
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	4a18      	ldr	r2, [pc, #96]	@ (8002cd8 <HAL_ADC_Start_DMA+0x214>)
 8002c78:	4293      	cmp	r3, r2
 8002c7a:	d11b      	bne.n	8002cb4 <HAL_ADC_Start_DMA+0x1f0>
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	689b      	ldr	r3, [r3, #8]
 8002c82:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d114      	bne.n	8002cb4 <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002c8a:	68fb      	ldr	r3, [r7, #12]
 8002c8c:	681b      	ldr	r3, [r3, #0]
 8002c8e:	689a      	ldr	r2, [r3, #8]
 8002c90:	68fb      	ldr	r3, [r7, #12]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002c98:	609a      	str	r2, [r3, #8]
 8002c9a:	e00b      	b.n	8002cb4 <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002c9c:	68fb      	ldr	r3, [r7, #12]
 8002c9e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ca0:	f043 0210 	orr.w	r2, r3, #16
 8002ca4:	68fb      	ldr	r3, [r7, #12]
 8002ca6:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002ca8:	68fb      	ldr	r3, [r7, #12]
 8002caa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002cac:	f043 0201 	orr.w	r2, r3, #1
 8002cb0:	68fb      	ldr	r3, [r7, #12]
 8002cb2:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002cb4:	2300      	movs	r3, #0
}
 8002cb6:	4618      	mov	r0, r3
 8002cb8:	3718      	adds	r7, #24
 8002cba:	46bd      	mov	sp, r7
 8002cbc:	bd80      	pop	{r7, pc}
 8002cbe:	bf00      	nop
 8002cc0:	20000014 	.word	0x20000014
 8002cc4:	431bde83 	.word	0x431bde83
 8002cc8:	40012300 	.word	0x40012300
 8002ccc:	0800317d 	.word	0x0800317d
 8002cd0:	08003237 	.word	0x08003237
 8002cd4:	08003253 	.word	0x08003253
 8002cd8:	40012000 	.word	0x40012000
 8002cdc:	40012100 	.word	0x40012100
 8002ce0:	40012200 	.word	0x40012200

08002ce4 <HAL_ADC_ConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002ce4:	b480      	push	{r7}
 8002ce6:	b083      	sub	sp, #12
 8002ce8:	af00      	add	r7, sp, #0
 8002cea:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvCpltCallback could be implemented in the user file
   */
}
 8002cec:	bf00      	nop
 8002cee:	370c      	adds	r7, #12
 8002cf0:	46bd      	mov	sp, r7
 8002cf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cf6:	4770      	bx	lr

08002cf8 <HAL_ADC_ConvHalfCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002cf8:	b480      	push	{r7}
 8002cfa:	b083      	sub	sp, #12
 8002cfc:	af00      	add	r7, sp, #0
 8002cfe:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
   */
}
 8002d00:	bf00      	nop
 8002d02:	370c      	adds	r7, #12
 8002d04:	46bd      	mov	sp, r7
 8002d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d0a:	4770      	bx	lr

08002d0c <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002d0c:	b480      	push	{r7}
 8002d0e:	b083      	sub	sp, #12
 8002d10:	af00      	add	r7, sp, #0
 8002d12:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8002d14:	bf00      	nop
 8002d16:	370c      	adds	r7, #12
 8002d18:	46bd      	mov	sp, r7
 8002d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d1e:	4770      	bx	lr

08002d20 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002d20:	b480      	push	{r7}
 8002d22:	b085      	sub	sp, #20
 8002d24:	af00      	add	r7, sp, #0
 8002d26:	6078      	str	r0, [r7, #4]
 8002d28:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002d2a:	2300      	movs	r3, #0
 8002d2c:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002d34:	2b01      	cmp	r3, #1
 8002d36:	d101      	bne.n	8002d3c <HAL_ADC_ConfigChannel+0x1c>
 8002d38:	2302      	movs	r3, #2
 8002d3a:	e113      	b.n	8002f64 <HAL_ADC_ConfigChannel+0x244>
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	2201      	movs	r2, #1
 8002d40:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002d44:	683b      	ldr	r3, [r7, #0]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	2b09      	cmp	r3, #9
 8002d4a:	d925      	bls.n	8002d98 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	681b      	ldr	r3, [r3, #0]
 8002d50:	68d9      	ldr	r1, [r3, #12]
 8002d52:	683b      	ldr	r3, [r7, #0]
 8002d54:	681b      	ldr	r3, [r3, #0]
 8002d56:	b29b      	uxth	r3, r3
 8002d58:	461a      	mov	r2, r3
 8002d5a:	4613      	mov	r3, r2
 8002d5c:	005b      	lsls	r3, r3, #1
 8002d5e:	4413      	add	r3, r2
 8002d60:	3b1e      	subs	r3, #30
 8002d62:	2207      	movs	r2, #7
 8002d64:	fa02 f303 	lsl.w	r3, r2, r3
 8002d68:	43da      	mvns	r2, r3
 8002d6a:	687b      	ldr	r3, [r7, #4]
 8002d6c:	681b      	ldr	r3, [r3, #0]
 8002d6e:	400a      	ands	r2, r1
 8002d70:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	68d9      	ldr	r1, [r3, #12]
 8002d78:	683b      	ldr	r3, [r7, #0]
 8002d7a:	689a      	ldr	r2, [r3, #8]
 8002d7c:	683b      	ldr	r3, [r7, #0]
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	b29b      	uxth	r3, r3
 8002d82:	4618      	mov	r0, r3
 8002d84:	4603      	mov	r3, r0
 8002d86:	005b      	lsls	r3, r3, #1
 8002d88:	4403      	add	r3, r0
 8002d8a:	3b1e      	subs	r3, #30
 8002d8c:	409a      	lsls	r2, r3
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	430a      	orrs	r2, r1
 8002d94:	60da      	str	r2, [r3, #12]
 8002d96:	e022      	b.n	8002dde <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8002d98:	687b      	ldr	r3, [r7, #4]
 8002d9a:	681b      	ldr	r3, [r3, #0]
 8002d9c:	6919      	ldr	r1, [r3, #16]
 8002d9e:	683b      	ldr	r3, [r7, #0]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	b29b      	uxth	r3, r3
 8002da4:	461a      	mov	r2, r3
 8002da6:	4613      	mov	r3, r2
 8002da8:	005b      	lsls	r3, r3, #1
 8002daa:	4413      	add	r3, r2
 8002dac:	2207      	movs	r2, #7
 8002dae:	fa02 f303 	lsl.w	r3, r2, r3
 8002db2:	43da      	mvns	r2, r3
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	681b      	ldr	r3, [r3, #0]
 8002db8:	400a      	ands	r2, r1
 8002dba:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	6919      	ldr	r1, [r3, #16]
 8002dc2:	683b      	ldr	r3, [r7, #0]
 8002dc4:	689a      	ldr	r2, [r3, #8]
 8002dc6:	683b      	ldr	r3, [r7, #0]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	b29b      	uxth	r3, r3
 8002dcc:	4618      	mov	r0, r3
 8002dce:	4603      	mov	r3, r0
 8002dd0:	005b      	lsls	r3, r3, #1
 8002dd2:	4403      	add	r3, r0
 8002dd4:	409a      	lsls	r2, r3
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	430a      	orrs	r2, r1
 8002ddc:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8002dde:	683b      	ldr	r3, [r7, #0]
 8002de0:	685b      	ldr	r3, [r3, #4]
 8002de2:	2b06      	cmp	r3, #6
 8002de4:	d824      	bhi.n	8002e30 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8002de6:	687b      	ldr	r3, [r7, #4]
 8002de8:	681b      	ldr	r3, [r3, #0]
 8002dea:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002dec:	683b      	ldr	r3, [r7, #0]
 8002dee:	685a      	ldr	r2, [r3, #4]
 8002df0:	4613      	mov	r3, r2
 8002df2:	009b      	lsls	r3, r3, #2
 8002df4:	4413      	add	r3, r2
 8002df6:	3b05      	subs	r3, #5
 8002df8:	221f      	movs	r2, #31
 8002dfa:	fa02 f303 	lsl.w	r3, r2, r3
 8002dfe:	43da      	mvns	r2, r3
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	681b      	ldr	r3, [r3, #0]
 8002e04:	400a      	ands	r2, r1
 8002e06:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002e0e:	683b      	ldr	r3, [r7, #0]
 8002e10:	681b      	ldr	r3, [r3, #0]
 8002e12:	b29b      	uxth	r3, r3
 8002e14:	4618      	mov	r0, r3
 8002e16:	683b      	ldr	r3, [r7, #0]
 8002e18:	685a      	ldr	r2, [r3, #4]
 8002e1a:	4613      	mov	r3, r2
 8002e1c:	009b      	lsls	r3, r3, #2
 8002e1e:	4413      	add	r3, r2
 8002e20:	3b05      	subs	r3, #5
 8002e22:	fa00 f203 	lsl.w	r2, r0, r3
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	681b      	ldr	r3, [r3, #0]
 8002e2a:	430a      	orrs	r2, r1
 8002e2c:	635a      	str	r2, [r3, #52]	@ 0x34
 8002e2e:	e04c      	b.n	8002eca <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 8002e30:	683b      	ldr	r3, [r7, #0]
 8002e32:	685b      	ldr	r3, [r3, #4]
 8002e34:	2b0c      	cmp	r3, #12
 8002e36:	d824      	bhi.n	8002e82 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8002e38:	687b      	ldr	r3, [r7, #4]
 8002e3a:	681b      	ldr	r3, [r3, #0]
 8002e3c:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002e3e:	683b      	ldr	r3, [r7, #0]
 8002e40:	685a      	ldr	r2, [r3, #4]
 8002e42:	4613      	mov	r3, r2
 8002e44:	009b      	lsls	r3, r3, #2
 8002e46:	4413      	add	r3, r2
 8002e48:	3b23      	subs	r3, #35	@ 0x23
 8002e4a:	221f      	movs	r2, #31
 8002e4c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e50:	43da      	mvns	r2, r3
 8002e52:	687b      	ldr	r3, [r7, #4]
 8002e54:	681b      	ldr	r3, [r3, #0]
 8002e56:	400a      	ands	r2, r1
 8002e58:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002e60:	683b      	ldr	r3, [r7, #0]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	b29b      	uxth	r3, r3
 8002e66:	4618      	mov	r0, r3
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	685a      	ldr	r2, [r3, #4]
 8002e6c:	4613      	mov	r3, r2
 8002e6e:	009b      	lsls	r3, r3, #2
 8002e70:	4413      	add	r3, r2
 8002e72:	3b23      	subs	r3, #35	@ 0x23
 8002e74:	fa00 f203 	lsl.w	r2, r0, r3
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	430a      	orrs	r2, r1
 8002e7e:	631a      	str	r2, [r3, #48]	@ 0x30
 8002e80:	e023      	b.n	8002eca <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	681b      	ldr	r3, [r3, #0]
 8002e86:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002e88:	683b      	ldr	r3, [r7, #0]
 8002e8a:	685a      	ldr	r2, [r3, #4]
 8002e8c:	4613      	mov	r3, r2
 8002e8e:	009b      	lsls	r3, r3, #2
 8002e90:	4413      	add	r3, r2
 8002e92:	3b41      	subs	r3, #65	@ 0x41
 8002e94:	221f      	movs	r2, #31
 8002e96:	fa02 f303 	lsl.w	r3, r2, r3
 8002e9a:	43da      	mvns	r2, r3
 8002e9c:	687b      	ldr	r3, [r7, #4]
 8002e9e:	681b      	ldr	r3, [r3, #0]
 8002ea0:	400a      	ands	r2, r1
 8002ea2:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8002ea4:	687b      	ldr	r3, [r7, #4]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002eaa:	683b      	ldr	r3, [r7, #0]
 8002eac:	681b      	ldr	r3, [r3, #0]
 8002eae:	b29b      	uxth	r3, r3
 8002eb0:	4618      	mov	r0, r3
 8002eb2:	683b      	ldr	r3, [r7, #0]
 8002eb4:	685a      	ldr	r2, [r3, #4]
 8002eb6:	4613      	mov	r3, r2
 8002eb8:	009b      	lsls	r3, r3, #2
 8002eba:	4413      	add	r3, r2
 8002ebc:	3b41      	subs	r3, #65	@ 0x41
 8002ebe:	fa00 f203 	lsl.w	r2, r0, r3
 8002ec2:	687b      	ldr	r3, [r7, #4]
 8002ec4:	681b      	ldr	r3, [r3, #0]
 8002ec6:	430a      	orrs	r2, r1
 8002ec8:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002eca:	4b29      	ldr	r3, [pc, #164]	@ (8002f70 <HAL_ADC_ConfigChannel+0x250>)
 8002ecc:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	681b      	ldr	r3, [r3, #0]
 8002ed2:	4a28      	ldr	r2, [pc, #160]	@ (8002f74 <HAL_ADC_ConfigChannel+0x254>)
 8002ed4:	4293      	cmp	r3, r2
 8002ed6:	d10f      	bne.n	8002ef8 <HAL_ADC_ConfigChannel+0x1d8>
 8002ed8:	683b      	ldr	r3, [r7, #0]
 8002eda:	681b      	ldr	r3, [r3, #0]
 8002edc:	2b12      	cmp	r3, #18
 8002ede:	d10b      	bne.n	8002ef8 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8002ee0:	68fb      	ldr	r3, [r7, #12]
 8002ee2:	685b      	ldr	r3, [r3, #4]
 8002ee4:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8002ee8:	68fb      	ldr	r3, [r7, #12]
 8002eea:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	685b      	ldr	r3, [r3, #4]
 8002ef0:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8002ef4:	68fb      	ldr	r3, [r7, #12]
 8002ef6:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	681b      	ldr	r3, [r3, #0]
 8002efc:	4a1d      	ldr	r2, [pc, #116]	@ (8002f74 <HAL_ADC_ConfigChannel+0x254>)
 8002efe:	4293      	cmp	r3, r2
 8002f00:	d12b      	bne.n	8002f5a <HAL_ADC_ConfigChannel+0x23a>
 8002f02:	683b      	ldr	r3, [r7, #0]
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	4a1c      	ldr	r2, [pc, #112]	@ (8002f78 <HAL_ADC_ConfigChannel+0x258>)
 8002f08:	4293      	cmp	r3, r2
 8002f0a:	d003      	beq.n	8002f14 <HAL_ADC_ConfigChannel+0x1f4>
 8002f0c:	683b      	ldr	r3, [r7, #0]
 8002f0e:	681b      	ldr	r3, [r3, #0]
 8002f10:	2b11      	cmp	r3, #17
 8002f12:	d122      	bne.n	8002f5a <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8002f14:	68fb      	ldr	r3, [r7, #12]
 8002f16:	685b      	ldr	r3, [r3, #4]
 8002f18:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	685b      	ldr	r3, [r3, #4]
 8002f24:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 8002f2c:	683b      	ldr	r3, [r7, #0]
 8002f2e:	681b      	ldr	r3, [r3, #0]
 8002f30:	4a11      	ldr	r2, [pc, #68]	@ (8002f78 <HAL_ADC_ConfigChannel+0x258>)
 8002f32:	4293      	cmp	r3, r2
 8002f34:	d111      	bne.n	8002f5a <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8002f36:	4b11      	ldr	r3, [pc, #68]	@ (8002f7c <HAL_ADC_ConfigChannel+0x25c>)
 8002f38:	681b      	ldr	r3, [r3, #0]
 8002f3a:	4a11      	ldr	r2, [pc, #68]	@ (8002f80 <HAL_ADC_ConfigChannel+0x260>)
 8002f3c:	fba2 2303 	umull	r2, r3, r2, r3
 8002f40:	0c9a      	lsrs	r2, r3, #18
 8002f42:	4613      	mov	r3, r2
 8002f44:	009b      	lsls	r3, r3, #2
 8002f46:	4413      	add	r3, r2
 8002f48:	005b      	lsls	r3, r3, #1
 8002f4a:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8002f4c:	e002      	b.n	8002f54 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 8002f4e:	68bb      	ldr	r3, [r7, #8]
 8002f50:	3b01      	subs	r3, #1
 8002f52:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8002f54:	68bb      	ldr	r3, [r7, #8]
 8002f56:	2b00      	cmp	r3, #0
 8002f58:	d1f9      	bne.n	8002f4e <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	2200      	movs	r2, #0
 8002f5e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 8002f62:	2300      	movs	r3, #0
}
 8002f64:	4618      	mov	r0, r3
 8002f66:	3714      	adds	r7, #20
 8002f68:	46bd      	mov	sp, r7
 8002f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f6e:	4770      	bx	lr
 8002f70:	40012300 	.word	0x40012300
 8002f74:	40012000 	.word	0x40012000
 8002f78:	10000012 	.word	0x10000012
 8002f7c:	20000014 	.word	0x20000014
 8002f80:	431bde83 	.word	0x431bde83

08002f84 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002f84:	b480      	push	{r7}
 8002f86:	b085      	sub	sp, #20
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002f8c:	4b79      	ldr	r3, [pc, #484]	@ (8003174 <ADC_Init+0x1f0>)
 8002f8e:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8002f90:	68fb      	ldr	r3, [r7, #12]
 8002f92:	685b      	ldr	r3, [r3, #4]
 8002f94:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8002f98:	68fb      	ldr	r3, [r7, #12]
 8002f9a:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8002f9c:	68fb      	ldr	r3, [r7, #12]
 8002f9e:	685a      	ldr	r2, [r3, #4]
 8002fa0:	687b      	ldr	r3, [r7, #4]
 8002fa2:	685b      	ldr	r3, [r3, #4]
 8002fa4:	431a      	orrs	r2, r3
 8002fa6:	68fb      	ldr	r3, [r7, #12]
 8002fa8:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8002faa:	687b      	ldr	r3, [r7, #4]
 8002fac:	681b      	ldr	r3, [r3, #0]
 8002fae:	685a      	ldr	r2, [r3, #4]
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002fb8:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	6859      	ldr	r1, [r3, #4]
 8002fc0:	687b      	ldr	r3, [r7, #4]
 8002fc2:	691b      	ldr	r3, [r3, #16]
 8002fc4:	021a      	lsls	r2, r3, #8
 8002fc6:	687b      	ldr	r3, [r7, #4]
 8002fc8:	681b      	ldr	r3, [r3, #0]
 8002fca:	430a      	orrs	r2, r1
 8002fcc:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	685a      	ldr	r2, [r3, #4]
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681b      	ldr	r3, [r3, #0]
 8002fd8:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8002fdc:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8002fde:	687b      	ldr	r3, [r7, #4]
 8002fe0:	681b      	ldr	r3, [r3, #0]
 8002fe2:	6859      	ldr	r1, [r3, #4]
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	689a      	ldr	r2, [r3, #8]
 8002fe8:	687b      	ldr	r3, [r7, #4]
 8002fea:	681b      	ldr	r3, [r3, #0]
 8002fec:	430a      	orrs	r2, r1
 8002fee:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	681b      	ldr	r3, [r3, #0]
 8002ff4:	689a      	ldr	r2, [r3, #8]
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002ffe:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	6899      	ldr	r1, [r3, #8]
 8003006:	687b      	ldr	r3, [r7, #4]
 8003008:	68da      	ldr	r2, [r3, #12]
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	430a      	orrs	r2, r1
 8003010:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003016:	4a58      	ldr	r2, [pc, #352]	@ (8003178 <ADC_Init+0x1f4>)
 8003018:	4293      	cmp	r3, r2
 800301a:	d022      	beq.n	8003062 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	689a      	ldr	r2, [r3, #8]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 800302a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	6899      	ldr	r1, [r3, #8]
 8003032:	687b      	ldr	r3, [r7, #4]
 8003034:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8003036:	687b      	ldr	r3, [r7, #4]
 8003038:	681b      	ldr	r3, [r3, #0]
 800303a:	430a      	orrs	r2, r1
 800303c:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	689a      	ldr	r2, [r3, #8]
 8003044:	687b      	ldr	r3, [r7, #4]
 8003046:	681b      	ldr	r3, [r3, #0]
 8003048:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 800304c:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	6899      	ldr	r1, [r3, #8]
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003058:	687b      	ldr	r3, [r7, #4]
 800305a:	681b      	ldr	r3, [r3, #0]
 800305c:	430a      	orrs	r2, r1
 800305e:	609a      	str	r2, [r3, #8]
 8003060:	e00f      	b.n	8003082 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	681b      	ldr	r3, [r3, #0]
 8003066:	689a      	ldr	r2, [r3, #8]
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	681b      	ldr	r3, [r3, #0]
 800306c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003070:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	681b      	ldr	r3, [r3, #0]
 8003076:	689a      	ldr	r2, [r3, #8]
 8003078:	687b      	ldr	r3, [r7, #4]
 800307a:	681b      	ldr	r3, [r3, #0]
 800307c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003080:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	689a      	ldr	r2, [r3, #8]
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	f022 0202 	bic.w	r2, r2, #2
 8003090:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8003092:	687b      	ldr	r3, [r7, #4]
 8003094:	681b      	ldr	r3, [r3, #0]
 8003096:	6899      	ldr	r1, [r3, #8]
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	7e1b      	ldrb	r3, [r3, #24]
 800309c:	005a      	lsls	r2, r3, #1
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	430a      	orrs	r2, r1
 80030a4:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	f893 3020 	ldrb.w	r3, [r3, #32]
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	d01b      	beq.n	80030e8 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80030b0:	687b      	ldr	r3, [r7, #4]
 80030b2:	681b      	ldr	r3, [r3, #0]
 80030b4:	685a      	ldr	r2, [r3, #4]
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80030be:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	685a      	ldr	r2, [r3, #4]
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 80030ce:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80030d0:	687b      	ldr	r3, [r7, #4]
 80030d2:	681b      	ldr	r3, [r3, #0]
 80030d4:	6859      	ldr	r1, [r3, #4]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80030da:	3b01      	subs	r3, #1
 80030dc:	035a      	lsls	r2, r3, #13
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	430a      	orrs	r2, r1
 80030e4:	605a      	str	r2, [r3, #4]
 80030e6:	e007      	b.n	80030f8 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	685a      	ldr	r2, [r3, #4]
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	681b      	ldr	r3, [r3, #0]
 80030f2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80030f6:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80030fe:	687b      	ldr	r3, [r7, #4]
 8003100:	681b      	ldr	r3, [r3, #0]
 8003102:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8003106:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	69db      	ldr	r3, [r3, #28]
 8003112:	3b01      	subs	r3, #1
 8003114:	051a      	lsls	r2, r3, #20
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	430a      	orrs	r2, r1
 800311c:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	689a      	ldr	r2, [r3, #8]
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 800312c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	6899      	ldr	r1, [r3, #8]
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800313a:	025a      	lsls	r2, r3, #9
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	430a      	orrs	r2, r1
 8003142:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	689a      	ldr	r2, [r3, #8]
 800314a:	687b      	ldr	r3, [r7, #4]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8003152:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	6899      	ldr	r1, [r3, #8]
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	695b      	ldr	r3, [r3, #20]
 800315e:	029a      	lsls	r2, r3, #10
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	430a      	orrs	r2, r1
 8003166:	609a      	str	r2, [r3, #8]
}
 8003168:	bf00      	nop
 800316a:	3714      	adds	r7, #20
 800316c:	46bd      	mov	sp, r7
 800316e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003172:	4770      	bx	lr
 8003174:	40012300 	.word	0x40012300
 8003178:	0f000001 	.word	0x0f000001

0800317c <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 800317c:	b580      	push	{r7, lr}
 800317e:	b084      	sub	sp, #16
 8003180:	af00      	add	r7, sp, #0
 8003182:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8003184:	687b      	ldr	r3, [r7, #4]
 8003186:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003188:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800318a:	68fb      	ldr	r3, [r7, #12]
 800318c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800318e:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003192:	2b00      	cmp	r3, #0
 8003194:	d13c      	bne.n	8003210 <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8003196:	68fb      	ldr	r3, [r7, #12]
 8003198:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800319a:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	689b      	ldr	r3, [r3, #8]
 80031a8:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80031ac:	2b00      	cmp	r3, #0
 80031ae:	d12b      	bne.n	8003208 <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d127      	bne.n	8003208 <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	681b      	ldr	r3, [r3, #0]
 80031bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80031be:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d006      	beq.n	80031d4 <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 80031c6:	68fb      	ldr	r3, [r7, #12]
 80031c8:	681b      	ldr	r3, [r3, #0]
 80031ca:	689b      	ldr	r3, [r3, #8]
 80031cc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	d119      	bne.n	8003208 <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 80031d4:	68fb      	ldr	r3, [r7, #12]
 80031d6:	681b      	ldr	r3, [r3, #0]
 80031d8:	685a      	ldr	r2, [r3, #4]
 80031da:	68fb      	ldr	r3, [r7, #12]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	f022 0220 	bic.w	r2, r2, #32
 80031e2:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 80031e4:	68fb      	ldr	r3, [r7, #12]
 80031e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80031e8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80031ec:	68fb      	ldr	r3, [r7, #12]
 80031ee:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80031f0:	68fb      	ldr	r3, [r7, #12]
 80031f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80031f4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80031f8:	2b00      	cmp	r3, #0
 80031fa:	d105      	bne.n	8003208 <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80031fc:	68fb      	ldr	r3, [r7, #12]
 80031fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003200:	f043 0201 	orr.w	r2, r3, #1
 8003204:	68fb      	ldr	r3, [r7, #12]
 8003206:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8003208:	68f8      	ldr	r0, [r7, #12]
 800320a:	f7ff fd6b 	bl	8002ce4 <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 800320e:	e00e      	b.n	800322e <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 8003210:	68fb      	ldr	r3, [r7, #12]
 8003212:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003214:	f003 0310 	and.w	r3, r3, #16
 8003218:	2b00      	cmp	r3, #0
 800321a:	d003      	beq.n	8003224 <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 800321c:	68f8      	ldr	r0, [r7, #12]
 800321e:	f7ff fd75 	bl	8002d0c <HAL_ADC_ErrorCallback>
}
 8003222:	e004      	b.n	800322e <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003228:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800322a:	6878      	ldr	r0, [r7, #4]
 800322c:	4798      	blx	r3
}
 800322e:	bf00      	nop
 8003230:	3710      	adds	r7, #16
 8003232:	46bd      	mov	sp, r7
 8003234:	bd80      	pop	{r7, pc}

08003236 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 8003236:	b580      	push	{r7, lr}
 8003238:	b084      	sub	sp, #16
 800323a:	af00      	add	r7, sp, #0
 800323c:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003242:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 8003244:	68f8      	ldr	r0, [r7, #12]
 8003246:	f7ff fd57 	bl	8002cf8 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 800324a:	bf00      	nop
 800324c:	3710      	adds	r7, #16
 800324e:	46bd      	mov	sp, r7
 8003250:	bd80      	pop	{r7, pc}

08003252 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 8003252:	b580      	push	{r7, lr}
 8003254:	b084      	sub	sp, #16
 8003256:	af00      	add	r7, sp, #0
 8003258:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800325e:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 8003260:	68fb      	ldr	r3, [r7, #12]
 8003262:	2240      	movs	r2, #64	@ 0x40
 8003264:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 8003266:	68fb      	ldr	r3, [r7, #12]
 8003268:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800326a:	f043 0204 	orr.w	r2, r3, #4
 800326e:	68fb      	ldr	r3, [r7, #12]
 8003270:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 8003272:	68f8      	ldr	r0, [r7, #12]
 8003274:	f7ff fd4a 	bl	8002d0c <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8003278:	bf00      	nop
 800327a:	3710      	adds	r7, #16
 800327c:	46bd      	mov	sp, r7
 800327e:	bd80      	pop	{r7, pc}

08003280 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003280:	b480      	push	{r7}
 8003282:	b085      	sub	sp, #20
 8003284:	af00      	add	r7, sp, #0
 8003286:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	f003 0307 	and.w	r3, r3, #7
 800328e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003290:	4b0c      	ldr	r3, [pc, #48]	@ (80032c4 <__NVIC_SetPriorityGrouping+0x44>)
 8003292:	68db      	ldr	r3, [r3, #12]
 8003294:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003296:	68ba      	ldr	r2, [r7, #8]
 8003298:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 800329c:	4013      	ands	r3, r2
 800329e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80032a0:	68fb      	ldr	r3, [r7, #12]
 80032a2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80032a4:	68bb      	ldr	r3, [r7, #8]
 80032a6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80032a8:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 80032ac:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80032b0:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80032b2:	4a04      	ldr	r2, [pc, #16]	@ (80032c4 <__NVIC_SetPriorityGrouping+0x44>)
 80032b4:	68bb      	ldr	r3, [r7, #8]
 80032b6:	60d3      	str	r3, [r2, #12]
}
 80032b8:	bf00      	nop
 80032ba:	3714      	adds	r7, #20
 80032bc:	46bd      	mov	sp, r7
 80032be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032c2:	4770      	bx	lr
 80032c4:	e000ed00 	.word	0xe000ed00

080032c8 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 80032c8:	b480      	push	{r7}
 80032ca:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80032cc:	4b04      	ldr	r3, [pc, #16]	@ (80032e0 <__NVIC_GetPriorityGrouping+0x18>)
 80032ce:	68db      	ldr	r3, [r3, #12]
 80032d0:	0a1b      	lsrs	r3, r3, #8
 80032d2:	f003 0307 	and.w	r3, r3, #7
}
 80032d6:	4618      	mov	r0, r3
 80032d8:	46bd      	mov	sp, r7
 80032da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032de:	4770      	bx	lr
 80032e0:	e000ed00 	.word	0xe000ed00

080032e4 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80032e4:	b480      	push	{r7}
 80032e6:	b083      	sub	sp, #12
 80032e8:	af00      	add	r7, sp, #0
 80032ea:	4603      	mov	r3, r0
 80032ec:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80032ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	db0b      	blt.n	800330e <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80032f6:	79fb      	ldrb	r3, [r7, #7]
 80032f8:	f003 021f 	and.w	r2, r3, #31
 80032fc:	4907      	ldr	r1, [pc, #28]	@ (800331c <__NVIC_EnableIRQ+0x38>)
 80032fe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003302:	095b      	lsrs	r3, r3, #5
 8003304:	2001      	movs	r0, #1
 8003306:	fa00 f202 	lsl.w	r2, r0, r2
 800330a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 800330e:	bf00      	nop
 8003310:	370c      	adds	r7, #12
 8003312:	46bd      	mov	sp, r7
 8003314:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003318:	4770      	bx	lr
 800331a:	bf00      	nop
 800331c:	e000e100 	.word	0xe000e100

08003320 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8003320:	b480      	push	{r7}
 8003322:	b083      	sub	sp, #12
 8003324:	af00      	add	r7, sp, #0
 8003326:	4603      	mov	r3, r0
 8003328:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800332a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800332e:	2b00      	cmp	r3, #0
 8003330:	db12      	blt.n	8003358 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003332:	79fb      	ldrb	r3, [r7, #7]
 8003334:	f003 021f 	and.w	r2, r3, #31
 8003338:	490a      	ldr	r1, [pc, #40]	@ (8003364 <__NVIC_DisableIRQ+0x44>)
 800333a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800333e:	095b      	lsrs	r3, r3, #5
 8003340:	2001      	movs	r0, #1
 8003342:	fa00 f202 	lsl.w	r2, r0, r2
 8003346:	3320      	adds	r3, #32
 8003348:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800334c:	f3bf 8f4f 	dsb	sy
}
 8003350:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003352:	f3bf 8f6f 	isb	sy
}
 8003356:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8003358:	bf00      	nop
 800335a:	370c      	adds	r7, #12
 800335c:	46bd      	mov	sp, r7
 800335e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003362:	4770      	bx	lr
 8003364:	e000e100 	.word	0xe000e100

08003368 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8003368:	b480      	push	{r7}
 800336a:	b083      	sub	sp, #12
 800336c:	af00      	add	r7, sp, #0
 800336e:	4603      	mov	r3, r0
 8003370:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003372:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003376:	2b00      	cmp	r3, #0
 8003378:	db0c      	blt.n	8003394 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800337a:	79fb      	ldrb	r3, [r7, #7]
 800337c:	f003 021f 	and.w	r2, r3, #31
 8003380:	4907      	ldr	r1, [pc, #28]	@ (80033a0 <__NVIC_ClearPendingIRQ+0x38>)
 8003382:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003386:	095b      	lsrs	r3, r3, #5
 8003388:	2001      	movs	r0, #1
 800338a:	fa00 f202 	lsl.w	r2, r0, r2
 800338e:	3360      	adds	r3, #96	@ 0x60
 8003390:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8003394:	bf00      	nop
 8003396:	370c      	adds	r7, #12
 8003398:	46bd      	mov	sp, r7
 800339a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800339e:	4770      	bx	lr
 80033a0:	e000e100 	.word	0xe000e100

080033a4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80033a4:	b480      	push	{r7}
 80033a6:	b083      	sub	sp, #12
 80033a8:	af00      	add	r7, sp, #0
 80033aa:	4603      	mov	r3, r0
 80033ac:	6039      	str	r1, [r7, #0]
 80033ae:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80033b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	db0a      	blt.n	80033ce <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	b2da      	uxtb	r2, r3
 80033bc:	490c      	ldr	r1, [pc, #48]	@ (80033f0 <__NVIC_SetPriority+0x4c>)
 80033be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80033c2:	0112      	lsls	r2, r2, #4
 80033c4:	b2d2      	uxtb	r2, r2
 80033c6:	440b      	add	r3, r1
 80033c8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80033cc:	e00a      	b.n	80033e4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80033ce:	683b      	ldr	r3, [r7, #0]
 80033d0:	b2da      	uxtb	r2, r3
 80033d2:	4908      	ldr	r1, [pc, #32]	@ (80033f4 <__NVIC_SetPriority+0x50>)
 80033d4:	79fb      	ldrb	r3, [r7, #7]
 80033d6:	f003 030f 	and.w	r3, r3, #15
 80033da:	3b04      	subs	r3, #4
 80033dc:	0112      	lsls	r2, r2, #4
 80033de:	b2d2      	uxtb	r2, r2
 80033e0:	440b      	add	r3, r1
 80033e2:	761a      	strb	r2, [r3, #24]
}
 80033e4:	bf00      	nop
 80033e6:	370c      	adds	r7, #12
 80033e8:	46bd      	mov	sp, r7
 80033ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ee:	4770      	bx	lr
 80033f0:	e000e100 	.word	0xe000e100
 80033f4:	e000ed00 	.word	0xe000ed00

080033f8 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80033f8:	b480      	push	{r7}
 80033fa:	b089      	sub	sp, #36	@ 0x24
 80033fc:	af00      	add	r7, sp, #0
 80033fe:	60f8      	str	r0, [r7, #12]
 8003400:	60b9      	str	r1, [r7, #8]
 8003402:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	f003 0307 	and.w	r3, r3, #7
 800340a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800340c:	69fb      	ldr	r3, [r7, #28]
 800340e:	f1c3 0307 	rsb	r3, r3, #7
 8003412:	2b04      	cmp	r3, #4
 8003414:	bf28      	it	cs
 8003416:	2304      	movcs	r3, #4
 8003418:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800341a:	69fb      	ldr	r3, [r7, #28]
 800341c:	3304      	adds	r3, #4
 800341e:	2b06      	cmp	r3, #6
 8003420:	d902      	bls.n	8003428 <NVIC_EncodePriority+0x30>
 8003422:	69fb      	ldr	r3, [r7, #28]
 8003424:	3b03      	subs	r3, #3
 8003426:	e000      	b.n	800342a <NVIC_EncodePriority+0x32>
 8003428:	2300      	movs	r3, #0
 800342a:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800342c:	f04f 32ff 	mov.w	r2, #4294967295
 8003430:	69bb      	ldr	r3, [r7, #24]
 8003432:	fa02 f303 	lsl.w	r3, r2, r3
 8003436:	43da      	mvns	r2, r3
 8003438:	68bb      	ldr	r3, [r7, #8]
 800343a:	401a      	ands	r2, r3
 800343c:	697b      	ldr	r3, [r7, #20]
 800343e:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8003440:	f04f 31ff 	mov.w	r1, #4294967295
 8003444:	697b      	ldr	r3, [r7, #20]
 8003446:	fa01 f303 	lsl.w	r3, r1, r3
 800344a:	43d9      	mvns	r1, r3
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003450:	4313      	orrs	r3, r2
         );
}
 8003452:	4618      	mov	r0, r3
 8003454:	3724      	adds	r7, #36	@ 0x24
 8003456:	46bd      	mov	sp, r7
 8003458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800345c:	4770      	bx	lr
	...

08003460 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003460:	b580      	push	{r7, lr}
 8003462:	b082      	sub	sp, #8
 8003464:	af00      	add	r7, sp, #0
 8003466:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	3b01      	subs	r3, #1
 800346c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003470:	d301      	bcc.n	8003476 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003472:	2301      	movs	r3, #1
 8003474:	e00f      	b.n	8003496 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003476:	4a0a      	ldr	r2, [pc, #40]	@ (80034a0 <SysTick_Config+0x40>)
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	3b01      	subs	r3, #1
 800347c:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800347e:	210f      	movs	r1, #15
 8003480:	f04f 30ff 	mov.w	r0, #4294967295
 8003484:	f7ff ff8e 	bl	80033a4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003488:	4b05      	ldr	r3, [pc, #20]	@ (80034a0 <SysTick_Config+0x40>)
 800348a:	2200      	movs	r2, #0
 800348c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800348e:	4b04      	ldr	r3, [pc, #16]	@ (80034a0 <SysTick_Config+0x40>)
 8003490:	2207      	movs	r2, #7
 8003492:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003494:	2300      	movs	r3, #0
}
 8003496:	4618      	mov	r0, r3
 8003498:	3708      	adds	r7, #8
 800349a:	46bd      	mov	sp, r7
 800349c:	bd80      	pop	{r7, pc}
 800349e:	bf00      	nop
 80034a0:	e000e010 	.word	0xe000e010

080034a4 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80034a4:	b580      	push	{r7, lr}
 80034a6:	b082      	sub	sp, #8
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80034ac:	6878      	ldr	r0, [r7, #4]
 80034ae:	f7ff fee7 	bl	8003280 <__NVIC_SetPriorityGrouping>
}
 80034b2:	bf00      	nop
 80034b4:	3708      	adds	r7, #8
 80034b6:	46bd      	mov	sp, r7
 80034b8:	bd80      	pop	{r7, pc}

080034ba <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80034ba:	b580      	push	{r7, lr}
 80034bc:	b086      	sub	sp, #24
 80034be:	af00      	add	r7, sp, #0
 80034c0:	4603      	mov	r3, r0
 80034c2:	60b9      	str	r1, [r7, #8]
 80034c4:	607a      	str	r2, [r7, #4]
 80034c6:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80034c8:	2300      	movs	r3, #0
 80034ca:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80034cc:	f7ff fefc 	bl	80032c8 <__NVIC_GetPriorityGrouping>
 80034d0:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80034d2:	687a      	ldr	r2, [r7, #4]
 80034d4:	68b9      	ldr	r1, [r7, #8]
 80034d6:	6978      	ldr	r0, [r7, #20]
 80034d8:	f7ff ff8e 	bl	80033f8 <NVIC_EncodePriority>
 80034dc:	4602      	mov	r2, r0
 80034de:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80034e2:	4611      	mov	r1, r2
 80034e4:	4618      	mov	r0, r3
 80034e6:	f7ff ff5d 	bl	80033a4 <__NVIC_SetPriority>
}
 80034ea:	bf00      	nop
 80034ec:	3718      	adds	r7, #24
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}

080034f2 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80034f2:	b580      	push	{r7, lr}
 80034f4:	b082      	sub	sp, #8
 80034f6:	af00      	add	r7, sp, #0
 80034f8:	4603      	mov	r3, r0
 80034fa:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80034fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003500:	4618      	mov	r0, r3
 8003502:	f7ff feef 	bl	80032e4 <__NVIC_EnableIRQ>
}
 8003506:	bf00      	nop
 8003508:	3708      	adds	r7, #8
 800350a:	46bd      	mov	sp, r7
 800350c:	bd80      	pop	{r7, pc}

0800350e <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 800350e:	b580      	push	{r7, lr}
 8003510:	b082      	sub	sp, #8
 8003512:	af00      	add	r7, sp, #0
 8003514:	4603      	mov	r3, r0
 8003516:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8003518:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800351c:	4618      	mov	r0, r3
 800351e:	f7ff feff 	bl	8003320 <__NVIC_DisableIRQ>
}
 8003522:	bf00      	nop
 8003524:	3708      	adds	r7, #8
 8003526:	46bd      	mov	sp, r7
 8003528:	bd80      	pop	{r7, pc}

0800352a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800352a:	b580      	push	{r7, lr}
 800352c:	b082      	sub	sp, #8
 800352e:	af00      	add	r7, sp, #0
 8003530:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003532:	6878      	ldr	r0, [r7, #4]
 8003534:	f7ff ff94 	bl	8003460 <SysTick_Config>
 8003538:	4603      	mov	r3, r0
}
 800353a:	4618      	mov	r0, r3
 800353c:	3708      	adds	r7, #8
 800353e:	46bd      	mov	sp, r7
 8003540:	bd80      	pop	{r7, pc}

08003542 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8003542:	b580      	push	{r7, lr}
 8003544:	b082      	sub	sp, #8
 8003546:	af00      	add	r7, sp, #0
 8003548:	4603      	mov	r3, r0
 800354a:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 800354c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003550:	4618      	mov	r0, r3
 8003552:	f7ff ff09 	bl	8003368 <__NVIC_ClearPendingIRQ>
}
 8003556:	bf00      	nop
 8003558:	3708      	adds	r7, #8
 800355a:	46bd      	mov	sp, r7
 800355c:	bd80      	pop	{r7, pc}

0800355e <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800355e:	b580      	push	{r7, lr}
 8003560:	b082      	sub	sp, #8
 8003562:	af00      	add	r7, sp, #0
 8003564:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	2b00      	cmp	r3, #0
 800356a:	d101      	bne.n	8003570 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 800356c:	2301      	movs	r3, #1
 800356e:	e00e      	b.n	800358e <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003570:	687b      	ldr	r3, [r7, #4]
 8003572:	795b      	ldrb	r3, [r3, #5]
 8003574:	b2db      	uxtb	r3, r3
 8003576:	2b00      	cmp	r3, #0
 8003578:	d105      	bne.n	8003586 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	2200      	movs	r2, #0
 800357e:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003580:	6878      	ldr	r0, [r7, #4]
 8003582:	f7fe f9d9 	bl	8001938 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	2201      	movs	r2, #1
 800358a:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 800358c:	2300      	movs	r3, #0
}
 800358e:	4618      	mov	r0, r3
 8003590:	3708      	adds	r7, #8
 8003592:	46bd      	mov	sp, r7
 8003594:	bd80      	pop	{r7, pc}
	...

08003598 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8003598:	b580      	push	{r7, lr}
 800359a:	b086      	sub	sp, #24
 800359c:	af00      	add	r7, sp, #0
 800359e:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 80035a0:	2300      	movs	r3, #0
 80035a2:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 80035a4:	f7ff fa1a 	bl	80029dc <HAL_GetTick>
 80035a8:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	2b00      	cmp	r3, #0
 80035ae:	d101      	bne.n	80035b4 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 80035b0:	2301      	movs	r3, #1
 80035b2:	e099      	b.n	80036e8 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 80035b4:	687b      	ldr	r3, [r7, #4]
 80035b6:	2202      	movs	r2, #2
 80035b8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 80035bc:	687b      	ldr	r3, [r7, #4]
 80035be:	2200      	movs	r2, #0
 80035c0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	681a      	ldr	r2, [r3, #0]
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	f022 0201 	bic.w	r2, r2, #1
 80035d2:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80035d4:	e00f      	b.n	80035f6 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80035d6:	f7ff fa01 	bl	80029dc <HAL_GetTick>
 80035da:	4602      	mov	r2, r0
 80035dc:	693b      	ldr	r3, [r7, #16]
 80035de:	1ad3      	subs	r3, r2, r3
 80035e0:	2b05      	cmp	r3, #5
 80035e2:	d908      	bls.n	80035f6 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	2220      	movs	r2, #32
 80035e8:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	2203      	movs	r2, #3
 80035ee:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 80035f2:	2303      	movs	r3, #3
 80035f4:	e078      	b.n	80036e8 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	681b      	ldr	r3, [r3, #0]
 80035fa:	681b      	ldr	r3, [r3, #0]
 80035fc:	f003 0301 	and.w	r3, r3, #1
 8003600:	2b00      	cmp	r3, #0
 8003602:	d1e8      	bne.n	80035d6 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 8003604:	687b      	ldr	r3, [r7, #4]
 8003606:	681b      	ldr	r3, [r3, #0]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800360c:	697a      	ldr	r2, [r7, #20]
 800360e:	4b38      	ldr	r3, [pc, #224]	@ (80036f0 <HAL_DMA_Init+0x158>)
 8003610:	4013      	ands	r3, r2
 8003612:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	685a      	ldr	r2, [r3, #4]
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	689b      	ldr	r3, [r3, #8]
 800361c:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003622:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	691b      	ldr	r3, [r3, #16]
 8003628:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800362e:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003630:	687b      	ldr	r3, [r7, #4]
 8003632:	699b      	ldr	r3, [r3, #24]
 8003634:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800363a:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	6a1b      	ldr	r3, [r3, #32]
 8003640:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003642:	697a      	ldr	r2, [r7, #20]
 8003644:	4313      	orrs	r3, r2
 8003646:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800364c:	2b04      	cmp	r3, #4
 800364e:	d107      	bne.n	8003660 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003654:	687b      	ldr	r3, [r7, #4]
 8003656:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003658:	4313      	orrs	r3, r2
 800365a:	697a      	ldr	r2, [r7, #20]
 800365c:	4313      	orrs	r3, r2
 800365e:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	697a      	ldr	r2, [r7, #20]
 8003666:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	695b      	ldr	r3, [r3, #20]
 800366e:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003670:	697b      	ldr	r3, [r7, #20]
 8003672:	f023 0307 	bic.w	r3, r3, #7
 8003676:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800367c:	697a      	ldr	r2, [r7, #20]
 800367e:	4313      	orrs	r3, r2
 8003680:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003686:	2b04      	cmp	r3, #4
 8003688:	d117      	bne.n	80036ba <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800368e:	697a      	ldr	r2, [r7, #20]
 8003690:	4313      	orrs	r3, r2
 8003692:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003694:	687b      	ldr	r3, [r7, #4]
 8003696:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003698:	2b00      	cmp	r3, #0
 800369a:	d00e      	beq.n	80036ba <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 800369c:	6878      	ldr	r0, [r7, #4]
 800369e:	f000 fa91 	bl	8003bc4 <DMA_CheckFifoParam>
 80036a2:	4603      	mov	r3, r0
 80036a4:	2b00      	cmp	r3, #0
 80036a6:	d008      	beq.n	80036ba <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	2240      	movs	r2, #64	@ 0x40
 80036ac:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	2201      	movs	r2, #1
 80036b2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 80036b6:	2301      	movs	r3, #1
 80036b8:	e016      	b.n	80036e8 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	697a      	ldr	r2, [r7, #20]
 80036c0:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80036c2:	6878      	ldr	r0, [r7, #4]
 80036c4:	f000 fa48 	bl	8003b58 <DMA_CalcBaseAndBitshift>
 80036c8:	4603      	mov	r3, r0
 80036ca:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80036d0:	223f      	movs	r2, #63	@ 0x3f
 80036d2:	409a      	lsls	r2, r3
 80036d4:	68fb      	ldr	r3, [r7, #12]
 80036d6:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	2200      	movs	r2, #0
 80036dc:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 80036de:	687b      	ldr	r3, [r7, #4]
 80036e0:	2201      	movs	r2, #1
 80036e2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 80036e6:	2300      	movs	r3, #0
}
 80036e8:	4618      	mov	r0, r3
 80036ea:	3718      	adds	r7, #24
 80036ec:	46bd      	mov	sp, r7
 80036ee:	bd80      	pop	{r7, pc}
 80036f0:	f010803f 	.word	0xf010803f

080036f4 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80036f4:	b580      	push	{r7, lr}
 80036f6:	b086      	sub	sp, #24
 80036f8:	af00      	add	r7, sp, #0
 80036fa:	60f8      	str	r0, [r7, #12]
 80036fc:	60b9      	str	r1, [r7, #8]
 80036fe:	607a      	str	r2, [r7, #4]
 8003700:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003702:	2300      	movs	r3, #0
 8003704:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800370a:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 800370c:	68fb      	ldr	r3, [r7, #12]
 800370e:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 8003712:	2b01      	cmp	r3, #1
 8003714:	d101      	bne.n	800371a <HAL_DMA_Start_IT+0x26>
 8003716:	2302      	movs	r3, #2
 8003718:	e040      	b.n	800379c <HAL_DMA_Start_IT+0xa8>
 800371a:	68fb      	ldr	r3, [r7, #12]
 800371c:	2201      	movs	r2, #1
 800371e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003728:	b2db      	uxtb	r3, r3
 800372a:	2b01      	cmp	r3, #1
 800372c:	d12f      	bne.n	800378e <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 800372e:	68fb      	ldr	r3, [r7, #12]
 8003730:	2202      	movs	r2, #2
 8003732:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003736:	68fb      	ldr	r3, [r7, #12]
 8003738:	2200      	movs	r2, #0
 800373a:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 800373c:	683b      	ldr	r3, [r7, #0]
 800373e:	687a      	ldr	r2, [r7, #4]
 8003740:	68b9      	ldr	r1, [r7, #8]
 8003742:	68f8      	ldr	r0, [r7, #12]
 8003744:	f000 f9da 	bl	8003afc <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003748:	68fb      	ldr	r3, [r7, #12]
 800374a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800374c:	223f      	movs	r2, #63	@ 0x3f
 800374e:	409a      	lsls	r2, r3
 8003750:	693b      	ldr	r3, [r7, #16]
 8003752:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	681a      	ldr	r2, [r3, #0]
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	f042 0216 	orr.w	r2, r2, #22
 8003762:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003768:	2b00      	cmp	r3, #0
 800376a:	d007      	beq.n	800377c <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 800376c:	68fb      	ldr	r3, [r7, #12]
 800376e:	681b      	ldr	r3, [r3, #0]
 8003770:	681a      	ldr	r2, [r3, #0]
 8003772:	68fb      	ldr	r3, [r7, #12]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	f042 0208 	orr.w	r2, r2, #8
 800377a:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	681a      	ldr	r2, [r3, #0]
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	f042 0201 	orr.w	r2, r2, #1
 800378a:	601a      	str	r2, [r3, #0]
 800378c:	e005      	b.n	800379a <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	2200      	movs	r2, #0
 8003792:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8003796:	2302      	movs	r3, #2
 8003798:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 800379a:	7dfb      	ldrb	r3, [r7, #23]
}
 800379c:	4618      	mov	r0, r3
 800379e:	3718      	adds	r7, #24
 80037a0:	46bd      	mov	sp, r7
 80037a2:	bd80      	pop	{r7, pc}

080037a4 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 80037a4:	b480      	push	{r7}
 80037a6:	b083      	sub	sp, #12
 80037a8:	af00      	add	r7, sp, #0
 80037aa:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80037ac:	687b      	ldr	r3, [r7, #4]
 80037ae:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80037b2:	b2db      	uxtb	r3, r3
 80037b4:	2b02      	cmp	r3, #2
 80037b6:	d004      	beq.n	80037c2 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	2280      	movs	r2, #128	@ 0x80
 80037bc:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 80037be:	2301      	movs	r3, #1
 80037c0:	e00c      	b.n	80037dc <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	2205      	movs	r2, #5
 80037c6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	681a      	ldr	r2, [r3, #0]
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	f022 0201 	bic.w	r2, r2, #1
 80037d8:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 80037da:	2300      	movs	r3, #0
}
 80037dc:	4618      	mov	r0, r3
 80037de:	370c      	adds	r7, #12
 80037e0:	46bd      	mov	sp, r7
 80037e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037e6:	4770      	bx	lr

080037e8 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 80037e8:	b580      	push	{r7, lr}
 80037ea:	b086      	sub	sp, #24
 80037ec:	af00      	add	r7, sp, #0
 80037ee:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 80037f0:	2300      	movs	r3, #0
 80037f2:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 80037f4:	4b8e      	ldr	r3, [pc, #568]	@ (8003a30 <HAL_DMA_IRQHandler+0x248>)
 80037f6:	681b      	ldr	r3, [r3, #0]
 80037f8:	4a8e      	ldr	r2, [pc, #568]	@ (8003a34 <HAL_DMA_IRQHandler+0x24c>)
 80037fa:	fba2 2303 	umull	r2, r3, r2, r3
 80037fe:	0a9b      	lsrs	r3, r3, #10
 8003800:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003806:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003808:	693b      	ldr	r3, [r7, #16]
 800380a:	681b      	ldr	r3, [r3, #0]
 800380c:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003812:	2208      	movs	r2, #8
 8003814:	409a      	lsls	r2, r3
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	4013      	ands	r3, r2
 800381a:	2b00      	cmp	r3, #0
 800381c:	d01a      	beq.n	8003854 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	681b      	ldr	r3, [r3, #0]
 8003824:	f003 0304 	and.w	r3, r3, #4
 8003828:	2b00      	cmp	r3, #0
 800382a:	d013      	beq.n	8003854 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	681a      	ldr	r2, [r3, #0]
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	681b      	ldr	r3, [r3, #0]
 8003836:	f022 0204 	bic.w	r2, r2, #4
 800383a:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003840:	2208      	movs	r2, #8
 8003842:	409a      	lsls	r2, r3
 8003844:	693b      	ldr	r3, [r7, #16]
 8003846:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800384c:	f043 0201 	orr.w	r2, r3, #1
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003858:	2201      	movs	r2, #1
 800385a:	409a      	lsls	r2, r3
 800385c:	68fb      	ldr	r3, [r7, #12]
 800385e:	4013      	ands	r3, r2
 8003860:	2b00      	cmp	r3, #0
 8003862:	d012      	beq.n	800388a <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003864:	687b      	ldr	r3, [r7, #4]
 8003866:	681b      	ldr	r3, [r3, #0]
 8003868:	695b      	ldr	r3, [r3, #20]
 800386a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800386e:	2b00      	cmp	r3, #0
 8003870:	d00b      	beq.n	800388a <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003876:	2201      	movs	r2, #1
 8003878:	409a      	lsls	r2, r3
 800387a:	693b      	ldr	r3, [r7, #16]
 800387c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003882:	f043 0202 	orr.w	r2, r3, #2
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 800388a:	687b      	ldr	r3, [r7, #4]
 800388c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800388e:	2204      	movs	r2, #4
 8003890:	409a      	lsls	r2, r3
 8003892:	68fb      	ldr	r3, [r7, #12]
 8003894:	4013      	ands	r3, r2
 8003896:	2b00      	cmp	r3, #0
 8003898:	d012      	beq.n	80038c0 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	f003 0302 	and.w	r3, r3, #2
 80038a4:	2b00      	cmp	r3, #0
 80038a6:	d00b      	beq.n	80038c0 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038ac:	2204      	movs	r2, #4
 80038ae:	409a      	lsls	r2, r3
 80038b0:	693b      	ldr	r3, [r7, #16]
 80038b2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 80038b4:	687b      	ldr	r3, [r7, #4]
 80038b6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80038b8:	f043 0204 	orr.w	r2, r3, #4
 80038bc:	687b      	ldr	r3, [r7, #4]
 80038be:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038c4:	2210      	movs	r2, #16
 80038c6:	409a      	lsls	r2, r3
 80038c8:	68fb      	ldr	r3, [r7, #12]
 80038ca:	4013      	ands	r3, r2
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d043      	beq.n	8003958 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	f003 0308 	and.w	r3, r3, #8
 80038da:	2b00      	cmp	r3, #0
 80038dc:	d03c      	beq.n	8003958 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80038e2:	2210      	movs	r2, #16
 80038e4:	409a      	lsls	r2, r3
 80038e6:	693b      	ldr	r3, [r7, #16]
 80038e8:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80038f4:	2b00      	cmp	r3, #0
 80038f6:	d018      	beq.n	800392a <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 80038f8:	687b      	ldr	r3, [r7, #4]
 80038fa:	681b      	ldr	r3, [r3, #0]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003902:	2b00      	cmp	r3, #0
 8003904:	d108      	bne.n	8003918 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003906:	687b      	ldr	r3, [r7, #4]
 8003908:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800390a:	2b00      	cmp	r3, #0
 800390c:	d024      	beq.n	8003958 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 800390e:	687b      	ldr	r3, [r7, #4]
 8003910:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003912:	6878      	ldr	r0, [r7, #4]
 8003914:	4798      	blx	r3
 8003916:	e01f      	b.n	8003958 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003918:	687b      	ldr	r3, [r7, #4]
 800391a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800391c:	2b00      	cmp	r3, #0
 800391e:	d01b      	beq.n	8003958 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003924:	6878      	ldr	r0, [r7, #4]
 8003926:	4798      	blx	r3
 8003928:	e016      	b.n	8003958 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	681b      	ldr	r3, [r3, #0]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003934:	2b00      	cmp	r3, #0
 8003936:	d107      	bne.n	8003948 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	681a      	ldr	r2, [r3, #0]
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	f022 0208 	bic.w	r2, r2, #8
 8003946:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800394c:	2b00      	cmp	r3, #0
 800394e:	d003      	beq.n	8003958 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003954:	6878      	ldr	r0, [r7, #4]
 8003956:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800395c:	2220      	movs	r2, #32
 800395e:	409a      	lsls	r2, r3
 8003960:	68fb      	ldr	r3, [r7, #12]
 8003962:	4013      	ands	r3, r2
 8003964:	2b00      	cmp	r3, #0
 8003966:	f000 808f 	beq.w	8003a88 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 800396a:	687b      	ldr	r3, [r7, #4]
 800396c:	681b      	ldr	r3, [r3, #0]
 800396e:	681b      	ldr	r3, [r3, #0]
 8003970:	f003 0310 	and.w	r3, r3, #16
 8003974:	2b00      	cmp	r3, #0
 8003976:	f000 8087 	beq.w	8003a88 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800397e:	2220      	movs	r2, #32
 8003980:	409a      	lsls	r2, r3
 8003982:	693b      	ldr	r3, [r7, #16]
 8003984:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800398c:	b2db      	uxtb	r3, r3
 800398e:	2b05      	cmp	r3, #5
 8003990:	d136      	bne.n	8003a00 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	681a      	ldr	r2, [r3, #0]
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	681b      	ldr	r3, [r3, #0]
 800399c:	f022 0216 	bic.w	r2, r2, #22
 80039a0:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	695a      	ldr	r2, [r3, #20]
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	681b      	ldr	r3, [r3, #0]
 80039ac:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 80039b0:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 80039b2:	687b      	ldr	r3, [r7, #4]
 80039b4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d103      	bne.n	80039c2 <HAL_DMA_IRQHandler+0x1da>
 80039ba:	687b      	ldr	r3, [r7, #4]
 80039bc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d007      	beq.n	80039d2 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	681b      	ldr	r3, [r3, #0]
 80039c6:	681a      	ldr	r2, [r3, #0]
 80039c8:	687b      	ldr	r3, [r7, #4]
 80039ca:	681b      	ldr	r3, [r3, #0]
 80039cc:	f022 0208 	bic.w	r2, r2, #8
 80039d0:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039d6:	223f      	movs	r2, #63	@ 0x3f
 80039d8:	409a      	lsls	r2, r3
 80039da:	693b      	ldr	r3, [r7, #16]
 80039dc:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 80039de:	687b      	ldr	r3, [r7, #4]
 80039e0:	2201      	movs	r2, #1
 80039e2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	2200      	movs	r2, #0
 80039ea:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80039f2:	2b00      	cmp	r3, #0
 80039f4:	d07e      	beq.n	8003af4 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80039fa:	6878      	ldr	r0, [r7, #4]
 80039fc:	4798      	blx	r3
        }
        return;
 80039fe:	e079      	b.n	8003af4 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003a00:	687b      	ldr	r3, [r7, #4]
 8003a02:	681b      	ldr	r3, [r3, #0]
 8003a04:	681b      	ldr	r3, [r3, #0]
 8003a06:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	d01d      	beq.n	8003a4a <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003a0e:	687b      	ldr	r3, [r7, #4]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	681b      	ldr	r3, [r3, #0]
 8003a14:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003a18:	2b00      	cmp	r3, #0
 8003a1a:	d10d      	bne.n	8003a38 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003a1c:	687b      	ldr	r3, [r7, #4]
 8003a1e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	d031      	beq.n	8003a88 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003a24:	687b      	ldr	r3, [r7, #4]
 8003a26:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003a28:	6878      	ldr	r0, [r7, #4]
 8003a2a:	4798      	blx	r3
 8003a2c:	e02c      	b.n	8003a88 <HAL_DMA_IRQHandler+0x2a0>
 8003a2e:	bf00      	nop
 8003a30:	20000014 	.word	0x20000014
 8003a34:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	d023      	beq.n	8003a88 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003a44:	6878      	ldr	r0, [r7, #4]
 8003a46:	4798      	blx	r3
 8003a48:	e01e      	b.n	8003a88 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003a4a:	687b      	ldr	r3, [r7, #4]
 8003a4c:	681b      	ldr	r3, [r3, #0]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a54:	2b00      	cmp	r3, #0
 8003a56:	d10f      	bne.n	8003a78 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003a58:	687b      	ldr	r3, [r7, #4]
 8003a5a:	681b      	ldr	r3, [r3, #0]
 8003a5c:	681a      	ldr	r2, [r3, #0]
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	f022 0210 	bic.w	r2, r2, #16
 8003a66:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003a68:	687b      	ldr	r3, [r7, #4]
 8003a6a:	2201      	movs	r2, #1
 8003a6c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003a70:	687b      	ldr	r3, [r7, #4]
 8003a72:	2200      	movs	r2, #0
 8003a74:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	d003      	beq.n	8003a88 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003a84:	6878      	ldr	r0, [r7, #4]
 8003a86:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003a88:	687b      	ldr	r3, [r7, #4]
 8003a8a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003a8c:	2b00      	cmp	r3, #0
 8003a8e:	d032      	beq.n	8003af6 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003a90:	687b      	ldr	r3, [r7, #4]
 8003a92:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003a94:	f003 0301 	and.w	r3, r3, #1
 8003a98:	2b00      	cmp	r3, #0
 8003a9a:	d022      	beq.n	8003ae2 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	2205      	movs	r2, #5
 8003aa0:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	681a      	ldr	r2, [r3, #0]
 8003aaa:	687b      	ldr	r3, [r7, #4]
 8003aac:	681b      	ldr	r3, [r3, #0]
 8003aae:	f022 0201 	bic.w	r2, r2, #1
 8003ab2:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003ab4:	68bb      	ldr	r3, [r7, #8]
 8003ab6:	3301      	adds	r3, #1
 8003ab8:	60bb      	str	r3, [r7, #8]
 8003aba:	697a      	ldr	r2, [r7, #20]
 8003abc:	429a      	cmp	r2, r3
 8003abe:	d307      	bcc.n	8003ad0 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	681b      	ldr	r3, [r3, #0]
 8003ac6:	f003 0301 	and.w	r3, r3, #1
 8003aca:	2b00      	cmp	r3, #0
 8003acc:	d1f2      	bne.n	8003ab4 <HAL_DMA_IRQHandler+0x2cc>
 8003ace:	e000      	b.n	8003ad2 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003ad0:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	2201      	movs	r2, #1
 8003ad6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	2200      	movs	r2, #0
 8003ade:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	d005      	beq.n	8003af6 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003aee:	6878      	ldr	r0, [r7, #4]
 8003af0:	4798      	blx	r3
 8003af2:	e000      	b.n	8003af6 <HAL_DMA_IRQHandler+0x30e>
        return;
 8003af4:	bf00      	nop
    }
  }
}
 8003af6:	3718      	adds	r7, #24
 8003af8:	46bd      	mov	sp, r7
 8003afa:	bd80      	pop	{r7, pc}

08003afc <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003afc:	b480      	push	{r7}
 8003afe:	b085      	sub	sp, #20
 8003b00:	af00      	add	r7, sp, #0
 8003b02:	60f8      	str	r0, [r7, #12]
 8003b04:	60b9      	str	r1, [r7, #8]
 8003b06:	607a      	str	r2, [r7, #4]
 8003b08:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	681b      	ldr	r3, [r3, #0]
 8003b0e:	681a      	ldr	r2, [r3, #0]
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003b18:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003b1a:	68fb      	ldr	r3, [r7, #12]
 8003b1c:	681b      	ldr	r3, [r3, #0]
 8003b1e:	683a      	ldr	r2, [r7, #0]
 8003b20:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003b22:	68fb      	ldr	r3, [r7, #12]
 8003b24:	689b      	ldr	r3, [r3, #8]
 8003b26:	2b40      	cmp	r3, #64	@ 0x40
 8003b28:	d108      	bne.n	8003b3c <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003b2a:	68fb      	ldr	r3, [r7, #12]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	687a      	ldr	r2, [r7, #4]
 8003b30:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003b32:	68fb      	ldr	r3, [r7, #12]
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	68ba      	ldr	r2, [r7, #8]
 8003b38:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003b3a:	e007      	b.n	8003b4c <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003b3c:	68fb      	ldr	r3, [r7, #12]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	68ba      	ldr	r2, [r7, #8]
 8003b42:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	687a      	ldr	r2, [r7, #4]
 8003b4a:	60da      	str	r2, [r3, #12]
}
 8003b4c:	bf00      	nop
 8003b4e:	3714      	adds	r7, #20
 8003b50:	46bd      	mov	sp, r7
 8003b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b56:	4770      	bx	lr

08003b58 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003b58:	b480      	push	{r7}
 8003b5a:	b085      	sub	sp, #20
 8003b5c:	af00      	add	r7, sp, #0
 8003b5e:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003b60:	687b      	ldr	r3, [r7, #4]
 8003b62:	681b      	ldr	r3, [r3, #0]
 8003b64:	b2db      	uxtb	r3, r3
 8003b66:	3b10      	subs	r3, #16
 8003b68:	4a14      	ldr	r2, [pc, #80]	@ (8003bbc <DMA_CalcBaseAndBitshift+0x64>)
 8003b6a:	fba2 2303 	umull	r2, r3, r2, r3
 8003b6e:	091b      	lsrs	r3, r3, #4
 8003b70:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003b72:	4a13      	ldr	r2, [pc, #76]	@ (8003bc0 <DMA_CalcBaseAndBitshift+0x68>)
 8003b74:	68fb      	ldr	r3, [r7, #12]
 8003b76:	4413      	add	r3, r2
 8003b78:	781b      	ldrb	r3, [r3, #0]
 8003b7a:	461a      	mov	r2, r3
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003b80:	68fb      	ldr	r3, [r7, #12]
 8003b82:	2b03      	cmp	r3, #3
 8003b84:	d909      	bls.n	8003b9a <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003b86:	687b      	ldr	r3, [r7, #4]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003b8e:	f023 0303 	bic.w	r3, r3, #3
 8003b92:	1d1a      	adds	r2, r3, #4
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	659a      	str	r2, [r3, #88]	@ 0x58
 8003b98:	e007      	b.n	8003baa <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	681b      	ldr	r3, [r3, #0]
 8003b9e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003ba2:	f023 0303 	bic.w	r3, r3, #3
 8003ba6:	687a      	ldr	r2, [r7, #4]
 8003ba8:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003bae:	4618      	mov	r0, r3
 8003bb0:	3714      	adds	r7, #20
 8003bb2:	46bd      	mov	sp, r7
 8003bb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bb8:	4770      	bx	lr
 8003bba:	bf00      	nop
 8003bbc:	aaaaaaab 	.word	0xaaaaaaab
 8003bc0:	08027f10 	.word	0x08027f10

08003bc4 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003bc4:	b480      	push	{r7}
 8003bc6:	b085      	sub	sp, #20
 8003bc8:	af00      	add	r7, sp, #0
 8003bca:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003bcc:	2300      	movs	r3, #0
 8003bce:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003bd4:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	699b      	ldr	r3, [r3, #24]
 8003bda:	2b00      	cmp	r3, #0
 8003bdc:	d11f      	bne.n	8003c1e <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003bde:	68bb      	ldr	r3, [r7, #8]
 8003be0:	2b03      	cmp	r3, #3
 8003be2:	d856      	bhi.n	8003c92 <DMA_CheckFifoParam+0xce>
 8003be4:	a201      	add	r2, pc, #4	@ (adr r2, 8003bec <DMA_CheckFifoParam+0x28>)
 8003be6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003bea:	bf00      	nop
 8003bec:	08003bfd 	.word	0x08003bfd
 8003bf0:	08003c0f 	.word	0x08003c0f
 8003bf4:	08003bfd 	.word	0x08003bfd
 8003bf8:	08003c93 	.word	0x08003c93
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c00:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003c04:	2b00      	cmp	r3, #0
 8003c06:	d046      	beq.n	8003c96 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003c08:	2301      	movs	r3, #1
 8003c0a:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003c0c:	e043      	b.n	8003c96 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003c0e:	687b      	ldr	r3, [r7, #4]
 8003c10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c12:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003c16:	d140      	bne.n	8003c9a <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003c18:	2301      	movs	r3, #1
 8003c1a:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003c1c:	e03d      	b.n	8003c9a <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	699b      	ldr	r3, [r3, #24]
 8003c22:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003c26:	d121      	bne.n	8003c6c <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003c28:	68bb      	ldr	r3, [r7, #8]
 8003c2a:	2b03      	cmp	r3, #3
 8003c2c:	d837      	bhi.n	8003c9e <DMA_CheckFifoParam+0xda>
 8003c2e:	a201      	add	r2, pc, #4	@ (adr r2, 8003c34 <DMA_CheckFifoParam+0x70>)
 8003c30:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003c34:	08003c45 	.word	0x08003c45
 8003c38:	08003c4b 	.word	0x08003c4b
 8003c3c:	08003c45 	.word	0x08003c45
 8003c40:	08003c5d 	.word	0x08003c5d
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003c44:	2301      	movs	r3, #1
 8003c46:	73fb      	strb	r3, [r7, #15]
      break;
 8003c48:	e030      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003c4a:	687b      	ldr	r3, [r7, #4]
 8003c4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c4e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003c52:	2b00      	cmp	r3, #0
 8003c54:	d025      	beq.n	8003ca2 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003c56:	2301      	movs	r3, #1
 8003c58:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003c5a:	e022      	b.n	8003ca2 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c60:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003c64:	d11f      	bne.n	8003ca6 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003c66:	2301      	movs	r3, #1
 8003c68:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003c6a:	e01c      	b.n	8003ca6 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003c6c:	68bb      	ldr	r3, [r7, #8]
 8003c6e:	2b02      	cmp	r3, #2
 8003c70:	d903      	bls.n	8003c7a <DMA_CheckFifoParam+0xb6>
 8003c72:	68bb      	ldr	r3, [r7, #8]
 8003c74:	2b03      	cmp	r3, #3
 8003c76:	d003      	beq.n	8003c80 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003c78:	e018      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003c7a:	2301      	movs	r3, #1
 8003c7c:	73fb      	strb	r3, [r7, #15]
      break;
 8003c7e:	e015      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003c84:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003c88:	2b00      	cmp	r3, #0
 8003c8a:	d00e      	beq.n	8003caa <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003c8c:	2301      	movs	r3, #1
 8003c8e:	73fb      	strb	r3, [r7, #15]
      break;
 8003c90:	e00b      	b.n	8003caa <DMA_CheckFifoParam+0xe6>
      break;
 8003c92:	bf00      	nop
 8003c94:	e00a      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      break;
 8003c96:	bf00      	nop
 8003c98:	e008      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      break;
 8003c9a:	bf00      	nop
 8003c9c:	e006      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      break;
 8003c9e:	bf00      	nop
 8003ca0:	e004      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      break;
 8003ca2:	bf00      	nop
 8003ca4:	e002      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      break;   
 8003ca6:	bf00      	nop
 8003ca8:	e000      	b.n	8003cac <DMA_CheckFifoParam+0xe8>
      break;
 8003caa:	bf00      	nop
    }
  } 
  
  return status; 
 8003cac:	7bfb      	ldrb	r3, [r7, #15]
}
 8003cae:	4618      	mov	r0, r3
 8003cb0:	3714      	adds	r7, #20
 8003cb2:	46bd      	mov	sp, r7
 8003cb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cb8:	4770      	bx	lr
 8003cba:	bf00      	nop

08003cbc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003cbc:	b480      	push	{r7}
 8003cbe:	b089      	sub	sp, #36	@ 0x24
 8003cc0:	af00      	add	r7, sp, #0
 8003cc2:	6078      	str	r0, [r7, #4]
 8003cc4:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003cc6:	2300      	movs	r3, #0
 8003cc8:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003cca:	2300      	movs	r3, #0
 8003ccc:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003cce:	2300      	movs	r3, #0
 8003cd0:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	61fb      	str	r3, [r7, #28]
 8003cd6:	e165      	b.n	8003fa4 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003cd8:	2201      	movs	r2, #1
 8003cda:	69fb      	ldr	r3, [r7, #28]
 8003cdc:	fa02 f303 	lsl.w	r3, r2, r3
 8003ce0:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003ce2:	683b      	ldr	r3, [r7, #0]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	697a      	ldr	r2, [r7, #20]
 8003ce8:	4013      	ands	r3, r2
 8003cea:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003cec:	693a      	ldr	r2, [r7, #16]
 8003cee:	697b      	ldr	r3, [r7, #20]
 8003cf0:	429a      	cmp	r2, r3
 8003cf2:	f040 8154 	bne.w	8003f9e <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003cf6:	683b      	ldr	r3, [r7, #0]
 8003cf8:	685b      	ldr	r3, [r3, #4]
 8003cfa:	f003 0303 	and.w	r3, r3, #3
 8003cfe:	2b01      	cmp	r3, #1
 8003d00:	d005      	beq.n	8003d0e <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003d02:	683b      	ldr	r3, [r7, #0]
 8003d04:	685b      	ldr	r3, [r3, #4]
 8003d06:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003d0a:	2b02      	cmp	r3, #2
 8003d0c:	d130      	bne.n	8003d70 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	689b      	ldr	r3, [r3, #8]
 8003d12:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003d14:	69fb      	ldr	r3, [r7, #28]
 8003d16:	005b      	lsls	r3, r3, #1
 8003d18:	2203      	movs	r2, #3
 8003d1a:	fa02 f303 	lsl.w	r3, r2, r3
 8003d1e:	43db      	mvns	r3, r3
 8003d20:	69ba      	ldr	r2, [r7, #24]
 8003d22:	4013      	ands	r3, r2
 8003d24:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003d26:	683b      	ldr	r3, [r7, #0]
 8003d28:	68da      	ldr	r2, [r3, #12]
 8003d2a:	69fb      	ldr	r3, [r7, #28]
 8003d2c:	005b      	lsls	r3, r3, #1
 8003d2e:	fa02 f303 	lsl.w	r3, r2, r3
 8003d32:	69ba      	ldr	r2, [r7, #24]
 8003d34:	4313      	orrs	r3, r2
 8003d36:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	69ba      	ldr	r2, [r7, #24]
 8003d3c:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003d3e:	687b      	ldr	r3, [r7, #4]
 8003d40:	685b      	ldr	r3, [r3, #4]
 8003d42:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003d44:	2201      	movs	r2, #1
 8003d46:	69fb      	ldr	r3, [r7, #28]
 8003d48:	fa02 f303 	lsl.w	r3, r2, r3
 8003d4c:	43db      	mvns	r3, r3
 8003d4e:	69ba      	ldr	r2, [r7, #24]
 8003d50:	4013      	ands	r3, r2
 8003d52:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003d54:	683b      	ldr	r3, [r7, #0]
 8003d56:	685b      	ldr	r3, [r3, #4]
 8003d58:	091b      	lsrs	r3, r3, #4
 8003d5a:	f003 0201 	and.w	r2, r3, #1
 8003d5e:	69fb      	ldr	r3, [r7, #28]
 8003d60:	fa02 f303 	lsl.w	r3, r2, r3
 8003d64:	69ba      	ldr	r2, [r7, #24]
 8003d66:	4313      	orrs	r3, r2
 8003d68:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	69ba      	ldr	r2, [r7, #24]
 8003d6e:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003d70:	683b      	ldr	r3, [r7, #0]
 8003d72:	685b      	ldr	r3, [r3, #4]
 8003d74:	f003 0303 	and.w	r3, r3, #3
 8003d78:	2b03      	cmp	r3, #3
 8003d7a:	d017      	beq.n	8003dac <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8003d7c:	687b      	ldr	r3, [r7, #4]
 8003d7e:	68db      	ldr	r3, [r3, #12]
 8003d80:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8003d82:	69fb      	ldr	r3, [r7, #28]
 8003d84:	005b      	lsls	r3, r3, #1
 8003d86:	2203      	movs	r2, #3
 8003d88:	fa02 f303 	lsl.w	r3, r2, r3
 8003d8c:	43db      	mvns	r3, r3
 8003d8e:	69ba      	ldr	r2, [r7, #24]
 8003d90:	4013      	ands	r3, r2
 8003d92:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003d94:	683b      	ldr	r3, [r7, #0]
 8003d96:	689a      	ldr	r2, [r3, #8]
 8003d98:	69fb      	ldr	r3, [r7, #28]
 8003d9a:	005b      	lsls	r3, r3, #1
 8003d9c:	fa02 f303 	lsl.w	r3, r2, r3
 8003da0:	69ba      	ldr	r2, [r7, #24]
 8003da2:	4313      	orrs	r3, r2
 8003da4:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	69ba      	ldr	r2, [r7, #24]
 8003daa:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003dac:	683b      	ldr	r3, [r7, #0]
 8003dae:	685b      	ldr	r3, [r3, #4]
 8003db0:	f003 0303 	and.w	r3, r3, #3
 8003db4:	2b02      	cmp	r3, #2
 8003db6:	d123      	bne.n	8003e00 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8003db8:	69fb      	ldr	r3, [r7, #28]
 8003dba:	08da      	lsrs	r2, r3, #3
 8003dbc:	687b      	ldr	r3, [r7, #4]
 8003dbe:	3208      	adds	r2, #8
 8003dc0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003dc4:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8003dc6:	69fb      	ldr	r3, [r7, #28]
 8003dc8:	f003 0307 	and.w	r3, r3, #7
 8003dcc:	009b      	lsls	r3, r3, #2
 8003dce:	220f      	movs	r2, #15
 8003dd0:	fa02 f303 	lsl.w	r3, r2, r3
 8003dd4:	43db      	mvns	r3, r3
 8003dd6:	69ba      	ldr	r2, [r7, #24]
 8003dd8:	4013      	ands	r3, r2
 8003dda:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8003ddc:	683b      	ldr	r3, [r7, #0]
 8003dde:	691a      	ldr	r2, [r3, #16]
 8003de0:	69fb      	ldr	r3, [r7, #28]
 8003de2:	f003 0307 	and.w	r3, r3, #7
 8003de6:	009b      	lsls	r3, r3, #2
 8003de8:	fa02 f303 	lsl.w	r3, r2, r3
 8003dec:	69ba      	ldr	r2, [r7, #24]
 8003dee:	4313      	orrs	r3, r2
 8003df0:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003df2:	69fb      	ldr	r3, [r7, #28]
 8003df4:	08da      	lsrs	r2, r3, #3
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	3208      	adds	r2, #8
 8003dfa:	69b9      	ldr	r1, [r7, #24]
 8003dfc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8003e06:	69fb      	ldr	r3, [r7, #28]
 8003e08:	005b      	lsls	r3, r3, #1
 8003e0a:	2203      	movs	r2, #3
 8003e0c:	fa02 f303 	lsl.w	r3, r2, r3
 8003e10:	43db      	mvns	r3, r3
 8003e12:	69ba      	ldr	r2, [r7, #24]
 8003e14:	4013      	ands	r3, r2
 8003e16:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003e18:	683b      	ldr	r3, [r7, #0]
 8003e1a:	685b      	ldr	r3, [r3, #4]
 8003e1c:	f003 0203 	and.w	r2, r3, #3
 8003e20:	69fb      	ldr	r3, [r7, #28]
 8003e22:	005b      	lsls	r3, r3, #1
 8003e24:	fa02 f303 	lsl.w	r3, r2, r3
 8003e28:	69ba      	ldr	r2, [r7, #24]
 8003e2a:	4313      	orrs	r3, r2
 8003e2c:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	69ba      	ldr	r2, [r7, #24]
 8003e32:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003e34:	683b      	ldr	r3, [r7, #0]
 8003e36:	685b      	ldr	r3, [r3, #4]
 8003e38:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003e3c:	2b00      	cmp	r3, #0
 8003e3e:	f000 80ae 	beq.w	8003f9e <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003e42:	2300      	movs	r3, #0
 8003e44:	60fb      	str	r3, [r7, #12]
 8003e46:	4b5d      	ldr	r3, [pc, #372]	@ (8003fbc <HAL_GPIO_Init+0x300>)
 8003e48:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e4a:	4a5c      	ldr	r2, [pc, #368]	@ (8003fbc <HAL_GPIO_Init+0x300>)
 8003e4c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8003e50:	6453      	str	r3, [r2, #68]	@ 0x44
 8003e52:	4b5a      	ldr	r3, [pc, #360]	@ (8003fbc <HAL_GPIO_Init+0x300>)
 8003e54:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003e56:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8003e5a:	60fb      	str	r3, [r7, #12]
 8003e5c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8003e5e:	4a58      	ldr	r2, [pc, #352]	@ (8003fc0 <HAL_GPIO_Init+0x304>)
 8003e60:	69fb      	ldr	r3, [r7, #28]
 8003e62:	089b      	lsrs	r3, r3, #2
 8003e64:	3302      	adds	r3, #2
 8003e66:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003e6a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8003e6c:	69fb      	ldr	r3, [r7, #28]
 8003e6e:	f003 0303 	and.w	r3, r3, #3
 8003e72:	009b      	lsls	r3, r3, #2
 8003e74:	220f      	movs	r2, #15
 8003e76:	fa02 f303 	lsl.w	r3, r2, r3
 8003e7a:	43db      	mvns	r3, r3
 8003e7c:	69ba      	ldr	r2, [r7, #24]
 8003e7e:	4013      	ands	r3, r2
 8003e80:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	4a4f      	ldr	r2, [pc, #316]	@ (8003fc4 <HAL_GPIO_Init+0x308>)
 8003e86:	4293      	cmp	r3, r2
 8003e88:	d025      	beq.n	8003ed6 <HAL_GPIO_Init+0x21a>
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	4a4e      	ldr	r2, [pc, #312]	@ (8003fc8 <HAL_GPIO_Init+0x30c>)
 8003e8e:	4293      	cmp	r3, r2
 8003e90:	d01f      	beq.n	8003ed2 <HAL_GPIO_Init+0x216>
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	4a4d      	ldr	r2, [pc, #308]	@ (8003fcc <HAL_GPIO_Init+0x310>)
 8003e96:	4293      	cmp	r3, r2
 8003e98:	d019      	beq.n	8003ece <HAL_GPIO_Init+0x212>
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	4a4c      	ldr	r2, [pc, #304]	@ (8003fd0 <HAL_GPIO_Init+0x314>)
 8003e9e:	4293      	cmp	r3, r2
 8003ea0:	d013      	beq.n	8003eca <HAL_GPIO_Init+0x20e>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	4a4b      	ldr	r2, [pc, #300]	@ (8003fd4 <HAL_GPIO_Init+0x318>)
 8003ea6:	4293      	cmp	r3, r2
 8003ea8:	d00d      	beq.n	8003ec6 <HAL_GPIO_Init+0x20a>
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	4a4a      	ldr	r2, [pc, #296]	@ (8003fd8 <HAL_GPIO_Init+0x31c>)
 8003eae:	4293      	cmp	r3, r2
 8003eb0:	d007      	beq.n	8003ec2 <HAL_GPIO_Init+0x206>
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	4a49      	ldr	r2, [pc, #292]	@ (8003fdc <HAL_GPIO_Init+0x320>)
 8003eb6:	4293      	cmp	r3, r2
 8003eb8:	d101      	bne.n	8003ebe <HAL_GPIO_Init+0x202>
 8003eba:	2306      	movs	r3, #6
 8003ebc:	e00c      	b.n	8003ed8 <HAL_GPIO_Init+0x21c>
 8003ebe:	2307      	movs	r3, #7
 8003ec0:	e00a      	b.n	8003ed8 <HAL_GPIO_Init+0x21c>
 8003ec2:	2305      	movs	r3, #5
 8003ec4:	e008      	b.n	8003ed8 <HAL_GPIO_Init+0x21c>
 8003ec6:	2304      	movs	r3, #4
 8003ec8:	e006      	b.n	8003ed8 <HAL_GPIO_Init+0x21c>
 8003eca:	2303      	movs	r3, #3
 8003ecc:	e004      	b.n	8003ed8 <HAL_GPIO_Init+0x21c>
 8003ece:	2302      	movs	r3, #2
 8003ed0:	e002      	b.n	8003ed8 <HAL_GPIO_Init+0x21c>
 8003ed2:	2301      	movs	r3, #1
 8003ed4:	e000      	b.n	8003ed8 <HAL_GPIO_Init+0x21c>
 8003ed6:	2300      	movs	r3, #0
 8003ed8:	69fa      	ldr	r2, [r7, #28]
 8003eda:	f002 0203 	and.w	r2, r2, #3
 8003ede:	0092      	lsls	r2, r2, #2
 8003ee0:	4093      	lsls	r3, r2
 8003ee2:	69ba      	ldr	r2, [r7, #24]
 8003ee4:	4313      	orrs	r3, r2
 8003ee6:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003ee8:	4935      	ldr	r1, [pc, #212]	@ (8003fc0 <HAL_GPIO_Init+0x304>)
 8003eea:	69fb      	ldr	r3, [r7, #28]
 8003eec:	089b      	lsrs	r3, r3, #2
 8003eee:	3302      	adds	r3, #2
 8003ef0:	69ba      	ldr	r2, [r7, #24]
 8003ef2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8003ef6:	4b3a      	ldr	r3, [pc, #232]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003ef8:	689b      	ldr	r3, [r3, #8]
 8003efa:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003efc:	693b      	ldr	r3, [r7, #16]
 8003efe:	43db      	mvns	r3, r3
 8003f00:	69ba      	ldr	r2, [r7, #24]
 8003f02:	4013      	ands	r3, r2
 8003f04:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003f06:	683b      	ldr	r3, [r7, #0]
 8003f08:	685b      	ldr	r3, [r3, #4]
 8003f0a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003f0e:	2b00      	cmp	r3, #0
 8003f10:	d003      	beq.n	8003f1a <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 8003f12:	69ba      	ldr	r2, [r7, #24]
 8003f14:	693b      	ldr	r3, [r7, #16]
 8003f16:	4313      	orrs	r3, r2
 8003f18:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8003f1a:	4a31      	ldr	r2, [pc, #196]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003f1c:	69bb      	ldr	r3, [r7, #24]
 8003f1e:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8003f20:	4b2f      	ldr	r3, [pc, #188]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003f22:	68db      	ldr	r3, [r3, #12]
 8003f24:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003f26:	693b      	ldr	r3, [r7, #16]
 8003f28:	43db      	mvns	r3, r3
 8003f2a:	69ba      	ldr	r2, [r7, #24]
 8003f2c:	4013      	ands	r3, r2
 8003f2e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8003f30:	683b      	ldr	r3, [r7, #0]
 8003f32:	685b      	ldr	r3, [r3, #4]
 8003f34:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003f38:	2b00      	cmp	r3, #0
 8003f3a:	d003      	beq.n	8003f44 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 8003f3c:	69ba      	ldr	r2, [r7, #24]
 8003f3e:	693b      	ldr	r3, [r7, #16]
 8003f40:	4313      	orrs	r3, r2
 8003f42:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8003f44:	4a26      	ldr	r2, [pc, #152]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003f46:	69bb      	ldr	r3, [r7, #24]
 8003f48:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8003f4a:	4b25      	ldr	r3, [pc, #148]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003f4c:	685b      	ldr	r3, [r3, #4]
 8003f4e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003f50:	693b      	ldr	r3, [r7, #16]
 8003f52:	43db      	mvns	r3, r3
 8003f54:	69ba      	ldr	r2, [r7, #24]
 8003f56:	4013      	ands	r3, r2
 8003f58:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003f5a:	683b      	ldr	r3, [r7, #0]
 8003f5c:	685b      	ldr	r3, [r3, #4]
 8003f5e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003f62:	2b00      	cmp	r3, #0
 8003f64:	d003      	beq.n	8003f6e <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 8003f66:	69ba      	ldr	r2, [r7, #24]
 8003f68:	693b      	ldr	r3, [r7, #16]
 8003f6a:	4313      	orrs	r3, r2
 8003f6c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8003f6e:	4a1c      	ldr	r2, [pc, #112]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003f70:	69bb      	ldr	r3, [r7, #24]
 8003f72:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003f74:	4b1a      	ldr	r3, [pc, #104]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8003f7a:	693b      	ldr	r3, [r7, #16]
 8003f7c:	43db      	mvns	r3, r3
 8003f7e:	69ba      	ldr	r2, [r7, #24]
 8003f80:	4013      	ands	r3, r2
 8003f82:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003f84:	683b      	ldr	r3, [r7, #0]
 8003f86:	685b      	ldr	r3, [r3, #4]
 8003f88:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003f8c:	2b00      	cmp	r3, #0
 8003f8e:	d003      	beq.n	8003f98 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8003f90:	69ba      	ldr	r2, [r7, #24]
 8003f92:	693b      	ldr	r3, [r7, #16]
 8003f94:	4313      	orrs	r3, r2
 8003f96:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8003f98:	4a11      	ldr	r2, [pc, #68]	@ (8003fe0 <HAL_GPIO_Init+0x324>)
 8003f9a:	69bb      	ldr	r3, [r7, #24]
 8003f9c:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003f9e:	69fb      	ldr	r3, [r7, #28]
 8003fa0:	3301      	adds	r3, #1
 8003fa2:	61fb      	str	r3, [r7, #28]
 8003fa4:	69fb      	ldr	r3, [r7, #28]
 8003fa6:	2b0f      	cmp	r3, #15
 8003fa8:	f67f ae96 	bls.w	8003cd8 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8003fac:	bf00      	nop
 8003fae:	bf00      	nop
 8003fb0:	3724      	adds	r7, #36	@ 0x24
 8003fb2:	46bd      	mov	sp, r7
 8003fb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb8:	4770      	bx	lr
 8003fba:	bf00      	nop
 8003fbc:	40023800 	.word	0x40023800
 8003fc0:	40013800 	.word	0x40013800
 8003fc4:	40020000 	.word	0x40020000
 8003fc8:	40020400 	.word	0x40020400
 8003fcc:	40020800 	.word	0x40020800
 8003fd0:	40020c00 	.word	0x40020c00
 8003fd4:	40021000 	.word	0x40021000
 8003fd8:	40021400 	.word	0x40021400
 8003fdc:	40021800 	.word	0x40021800
 8003fe0:	40013c00 	.word	0x40013c00

08003fe4 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8003fe4:	b480      	push	{r7}
 8003fe6:	b085      	sub	sp, #20
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
 8003fec:	460b      	mov	r3, r1
 8003fee:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	691a      	ldr	r2, [r3, #16]
 8003ff4:	887b      	ldrh	r3, [r7, #2]
 8003ff6:	4013      	ands	r3, r2
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	d002      	beq.n	8004002 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8003ffc:	2301      	movs	r3, #1
 8003ffe:	73fb      	strb	r3, [r7, #15]
 8004000:	e001      	b.n	8004006 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8004002:	2300      	movs	r3, #0
 8004004:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004006:	7bfb      	ldrb	r3, [r7, #15]
}
 8004008:	4618      	mov	r0, r3
 800400a:	3714      	adds	r7, #20
 800400c:	46bd      	mov	sp, r7
 800400e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004012:	4770      	bx	lr

08004014 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004014:	b480      	push	{r7}
 8004016:	b083      	sub	sp, #12
 8004018:	af00      	add	r7, sp, #0
 800401a:	6078      	str	r0, [r7, #4]
 800401c:	460b      	mov	r3, r1
 800401e:	807b      	strh	r3, [r7, #2]
 8004020:	4613      	mov	r3, r2
 8004022:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004024:	787b      	ldrb	r3, [r7, #1]
 8004026:	2b00      	cmp	r3, #0
 8004028:	d003      	beq.n	8004032 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800402a:	887a      	ldrh	r2, [r7, #2]
 800402c:	687b      	ldr	r3, [r7, #4]
 800402e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8004030:	e003      	b.n	800403a <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004032:	887b      	ldrh	r3, [r7, #2]
 8004034:	041a      	lsls	r2, r3, #16
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	619a      	str	r2, [r3, #24]
}
 800403a:	bf00      	nop
 800403c:	370c      	adds	r7, #12
 800403e:	46bd      	mov	sp, r7
 8004040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004044:	4770      	bx	lr

08004046 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004046:	b480      	push	{r7}
 8004048:	b085      	sub	sp, #20
 800404a:	af00      	add	r7, sp, #0
 800404c:	6078      	str	r0, [r7, #4]
 800404e:	460b      	mov	r3, r1
 8004050:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	695b      	ldr	r3, [r3, #20]
 8004056:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004058:	887a      	ldrh	r2, [r7, #2]
 800405a:	68fb      	ldr	r3, [r7, #12]
 800405c:	4013      	ands	r3, r2
 800405e:	041a      	lsls	r2, r3, #16
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	43d9      	mvns	r1, r3
 8004064:	887b      	ldrh	r3, [r7, #2]
 8004066:	400b      	ands	r3, r1
 8004068:	431a      	orrs	r2, r3
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	619a      	str	r2, [r3, #24]
}
 800406e:	bf00      	nop
 8004070:	3714      	adds	r7, #20
 8004072:	46bd      	mov	sp, r7
 8004074:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004078:	4770      	bx	lr
	...

0800407c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800407c:	b580      	push	{r7, lr}
 800407e:	b082      	sub	sp, #8
 8004080:	af00      	add	r7, sp, #0
 8004082:	4603      	mov	r3, r0
 8004084:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8004086:	4b08      	ldr	r3, [pc, #32]	@ (80040a8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004088:	695a      	ldr	r2, [r3, #20]
 800408a:	88fb      	ldrh	r3, [r7, #6]
 800408c:	4013      	ands	r3, r2
 800408e:	2b00      	cmp	r3, #0
 8004090:	d006      	beq.n	80040a0 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004092:	4a05      	ldr	r2, [pc, #20]	@ (80040a8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004094:	88fb      	ldrh	r3, [r7, #6]
 8004096:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004098:	88fb      	ldrh	r3, [r7, #6]
 800409a:	4618      	mov	r0, r3
 800409c:	f7fe f9e4 	bl	8002468 <HAL_GPIO_EXTI_Callback>
  }
}
 80040a0:	bf00      	nop
 80040a2:	3708      	adds	r7, #8
 80040a4:	46bd      	mov	sp, r7
 80040a6:	bd80      	pop	{r7, pc}
 80040a8:	40013c00 	.word	0x40013c00

080040ac <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 80040ac:	b580      	push	{r7, lr}
 80040ae:	b084      	sub	sp, #16
 80040b0:	af00      	add	r7, sp, #0
 80040b2:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	2b00      	cmp	r3, #0
 80040b8:	d101      	bne.n	80040be <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 80040ba:	2301      	movs	r3, #1
 80040bc:	e12b      	b.n	8004316 <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 80040be:	687b      	ldr	r3, [r7, #4]
 80040c0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80040c4:	b2db      	uxtb	r3, r3
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d106      	bne.n	80040d8 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	2200      	movs	r2, #0
 80040ce:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 80040d2:	6878      	ldr	r0, [r7, #4]
 80040d4:	f7fd fc52 	bl	800197c <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	2224      	movs	r2, #36	@ 0x24
 80040dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	681a      	ldr	r2, [r3, #0]
 80040e6:	687b      	ldr	r3, [r7, #4]
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	f022 0201 	bic.w	r2, r2, #1
 80040ee:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	681b      	ldr	r3, [r3, #0]
 80040f4:	681a      	ldr	r2, [r3, #0]
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80040fe:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	681b      	ldr	r3, [r3, #0]
 8004104:	681a      	ldr	r2, [r3, #0]
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 800410e:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004110:	f001 f908 	bl	8005324 <HAL_RCC_GetPCLK1Freq>
 8004114:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	685b      	ldr	r3, [r3, #4]
 800411a:	4a81      	ldr	r2, [pc, #516]	@ (8004320 <HAL_I2C_Init+0x274>)
 800411c:	4293      	cmp	r3, r2
 800411e:	d807      	bhi.n	8004130 <HAL_I2C_Init+0x84>
 8004120:	68fb      	ldr	r3, [r7, #12]
 8004122:	4a80      	ldr	r2, [pc, #512]	@ (8004324 <HAL_I2C_Init+0x278>)
 8004124:	4293      	cmp	r3, r2
 8004126:	bf94      	ite	ls
 8004128:	2301      	movls	r3, #1
 800412a:	2300      	movhi	r3, #0
 800412c:	b2db      	uxtb	r3, r3
 800412e:	e006      	b.n	800413e <HAL_I2C_Init+0x92>
 8004130:	68fb      	ldr	r3, [r7, #12]
 8004132:	4a7d      	ldr	r2, [pc, #500]	@ (8004328 <HAL_I2C_Init+0x27c>)
 8004134:	4293      	cmp	r3, r2
 8004136:	bf94      	ite	ls
 8004138:	2301      	movls	r3, #1
 800413a:	2300      	movhi	r3, #0
 800413c:	b2db      	uxtb	r3, r3
 800413e:	2b00      	cmp	r3, #0
 8004140:	d001      	beq.n	8004146 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 8004142:	2301      	movs	r3, #1
 8004144:	e0e7      	b.n	8004316 <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8004146:	68fb      	ldr	r3, [r7, #12]
 8004148:	4a78      	ldr	r2, [pc, #480]	@ (800432c <HAL_I2C_Init+0x280>)
 800414a:	fba2 2303 	umull	r2, r3, r2, r3
 800414e:	0c9b      	lsrs	r3, r3, #18
 8004150:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004152:	687b      	ldr	r3, [r7, #4]
 8004154:	681b      	ldr	r3, [r3, #0]
 8004156:	685b      	ldr	r3, [r3, #4]
 8004158:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	681b      	ldr	r3, [r3, #0]
 8004160:	68ba      	ldr	r2, [r7, #8]
 8004162:	430a      	orrs	r2, r1
 8004164:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	681b      	ldr	r3, [r3, #0]
 800416a:	6a1b      	ldr	r3, [r3, #32]
 800416c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	685b      	ldr	r3, [r3, #4]
 8004174:	4a6a      	ldr	r2, [pc, #424]	@ (8004320 <HAL_I2C_Init+0x274>)
 8004176:	4293      	cmp	r3, r2
 8004178:	d802      	bhi.n	8004180 <HAL_I2C_Init+0xd4>
 800417a:	68bb      	ldr	r3, [r7, #8]
 800417c:	3301      	adds	r3, #1
 800417e:	e009      	b.n	8004194 <HAL_I2C_Init+0xe8>
 8004180:	68bb      	ldr	r3, [r7, #8]
 8004182:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8004186:	fb02 f303 	mul.w	r3, r2, r3
 800418a:	4a69      	ldr	r2, [pc, #420]	@ (8004330 <HAL_I2C_Init+0x284>)
 800418c:	fba2 2303 	umull	r2, r3, r2, r3
 8004190:	099b      	lsrs	r3, r3, #6
 8004192:	3301      	adds	r3, #1
 8004194:	687a      	ldr	r2, [r7, #4]
 8004196:	6812      	ldr	r2, [r2, #0]
 8004198:	430b      	orrs	r3, r1
 800419a:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	681b      	ldr	r3, [r3, #0]
 80041a0:	69db      	ldr	r3, [r3, #28]
 80041a2:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80041a6:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80041aa:	687b      	ldr	r3, [r7, #4]
 80041ac:	685b      	ldr	r3, [r3, #4]
 80041ae:	495c      	ldr	r1, [pc, #368]	@ (8004320 <HAL_I2C_Init+0x274>)
 80041b0:	428b      	cmp	r3, r1
 80041b2:	d819      	bhi.n	80041e8 <HAL_I2C_Init+0x13c>
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	1e59      	subs	r1, r3, #1
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	685b      	ldr	r3, [r3, #4]
 80041bc:	005b      	lsls	r3, r3, #1
 80041be:	fbb1 f3f3 	udiv	r3, r1, r3
 80041c2:	1c59      	adds	r1, r3, #1
 80041c4:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80041c8:	400b      	ands	r3, r1
 80041ca:	2b00      	cmp	r3, #0
 80041cc:	d00a      	beq.n	80041e4 <HAL_I2C_Init+0x138>
 80041ce:	68fb      	ldr	r3, [r7, #12]
 80041d0:	1e59      	subs	r1, r3, #1
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	685b      	ldr	r3, [r3, #4]
 80041d6:	005b      	lsls	r3, r3, #1
 80041d8:	fbb1 f3f3 	udiv	r3, r1, r3
 80041dc:	3301      	adds	r3, #1
 80041de:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80041e2:	e051      	b.n	8004288 <HAL_I2C_Init+0x1dc>
 80041e4:	2304      	movs	r3, #4
 80041e6:	e04f      	b.n	8004288 <HAL_I2C_Init+0x1dc>
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	689b      	ldr	r3, [r3, #8]
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d111      	bne.n	8004214 <HAL_I2C_Init+0x168>
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	1e58      	subs	r0, r3, #1
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	6859      	ldr	r1, [r3, #4]
 80041f8:	460b      	mov	r3, r1
 80041fa:	005b      	lsls	r3, r3, #1
 80041fc:	440b      	add	r3, r1
 80041fe:	fbb0 f3f3 	udiv	r3, r0, r3
 8004202:	3301      	adds	r3, #1
 8004204:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004208:	2b00      	cmp	r3, #0
 800420a:	bf0c      	ite	eq
 800420c:	2301      	moveq	r3, #1
 800420e:	2300      	movne	r3, #0
 8004210:	b2db      	uxtb	r3, r3
 8004212:	e012      	b.n	800423a <HAL_I2C_Init+0x18e>
 8004214:	68fb      	ldr	r3, [r7, #12]
 8004216:	1e58      	subs	r0, r3, #1
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	6859      	ldr	r1, [r3, #4]
 800421c:	460b      	mov	r3, r1
 800421e:	009b      	lsls	r3, r3, #2
 8004220:	440b      	add	r3, r1
 8004222:	0099      	lsls	r1, r3, #2
 8004224:	440b      	add	r3, r1
 8004226:	fbb0 f3f3 	udiv	r3, r0, r3
 800422a:	3301      	adds	r3, #1
 800422c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004230:	2b00      	cmp	r3, #0
 8004232:	bf0c      	ite	eq
 8004234:	2301      	moveq	r3, #1
 8004236:	2300      	movne	r3, #0
 8004238:	b2db      	uxtb	r3, r3
 800423a:	2b00      	cmp	r3, #0
 800423c:	d001      	beq.n	8004242 <HAL_I2C_Init+0x196>
 800423e:	2301      	movs	r3, #1
 8004240:	e022      	b.n	8004288 <HAL_I2C_Init+0x1dc>
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	689b      	ldr	r3, [r3, #8]
 8004246:	2b00      	cmp	r3, #0
 8004248:	d10e      	bne.n	8004268 <HAL_I2C_Init+0x1bc>
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	1e58      	subs	r0, r3, #1
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	6859      	ldr	r1, [r3, #4]
 8004252:	460b      	mov	r3, r1
 8004254:	005b      	lsls	r3, r3, #1
 8004256:	440b      	add	r3, r1
 8004258:	fbb0 f3f3 	udiv	r3, r0, r3
 800425c:	3301      	adds	r3, #1
 800425e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004262:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004266:	e00f      	b.n	8004288 <HAL_I2C_Init+0x1dc>
 8004268:	68fb      	ldr	r3, [r7, #12]
 800426a:	1e58      	subs	r0, r3, #1
 800426c:	687b      	ldr	r3, [r7, #4]
 800426e:	6859      	ldr	r1, [r3, #4]
 8004270:	460b      	mov	r3, r1
 8004272:	009b      	lsls	r3, r3, #2
 8004274:	440b      	add	r3, r1
 8004276:	0099      	lsls	r1, r3, #2
 8004278:	440b      	add	r3, r1
 800427a:	fbb0 f3f3 	udiv	r3, r0, r3
 800427e:	3301      	adds	r3, #1
 8004280:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004284:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004288:	6879      	ldr	r1, [r7, #4]
 800428a:	6809      	ldr	r1, [r1, #0]
 800428c:	4313      	orrs	r3, r2
 800428e:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	681b      	ldr	r3, [r3, #0]
 8004296:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800429a:	687b      	ldr	r3, [r7, #4]
 800429c:	69da      	ldr	r2, [r3, #28]
 800429e:	687b      	ldr	r3, [r7, #4]
 80042a0:	6a1b      	ldr	r3, [r3, #32]
 80042a2:	431a      	orrs	r2, r3
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	681b      	ldr	r3, [r3, #0]
 80042a8:	430a      	orrs	r2, r1
 80042aa:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	689b      	ldr	r3, [r3, #8]
 80042b2:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80042b6:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80042ba:	687a      	ldr	r2, [r7, #4]
 80042bc:	6911      	ldr	r1, [r2, #16]
 80042be:	687a      	ldr	r2, [r7, #4]
 80042c0:	68d2      	ldr	r2, [r2, #12]
 80042c2:	4311      	orrs	r1, r2
 80042c4:	687a      	ldr	r2, [r7, #4]
 80042c6:	6812      	ldr	r2, [r2, #0]
 80042c8:	430b      	orrs	r3, r1
 80042ca:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	68db      	ldr	r3, [r3, #12]
 80042d2:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80042d6:	687b      	ldr	r3, [r7, #4]
 80042d8:	695a      	ldr	r2, [r3, #20]
 80042da:	687b      	ldr	r3, [r7, #4]
 80042dc:	699b      	ldr	r3, [r3, #24]
 80042de:	431a      	orrs	r2, r3
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	681b      	ldr	r3, [r3, #0]
 80042e4:	430a      	orrs	r2, r1
 80042e6:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80042e8:	687b      	ldr	r3, [r7, #4]
 80042ea:	681b      	ldr	r3, [r3, #0]
 80042ec:	681a      	ldr	r2, [r3, #0]
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	681b      	ldr	r3, [r3, #0]
 80042f2:	f042 0201 	orr.w	r2, r2, #1
 80042f6:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	2200      	movs	r2, #0
 80042fc:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	2220      	movs	r2, #32
 8004302:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	2200      	movs	r2, #0
 800430a:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	2200      	movs	r2, #0
 8004310:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 8004314:	2300      	movs	r3, #0
}
 8004316:	4618      	mov	r0, r3
 8004318:	3710      	adds	r7, #16
 800431a:	46bd      	mov	sp, r7
 800431c:	bd80      	pop	{r7, pc}
 800431e:	bf00      	nop
 8004320:	000186a0 	.word	0x000186a0
 8004324:	001e847f 	.word	0x001e847f
 8004328:	003d08ff 	.word	0x003d08ff
 800432c:	431bde83 	.word	0x431bde83
 8004330:	10624dd3 	.word	0x10624dd3

08004334 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004334:	b580      	push	{r7, lr}
 8004336:	b088      	sub	sp, #32
 8004338:	af02      	add	r7, sp, #8
 800433a:	60f8      	str	r0, [r7, #12]
 800433c:	607a      	str	r2, [r7, #4]
 800433e:	461a      	mov	r2, r3
 8004340:	460b      	mov	r3, r1
 8004342:	817b      	strh	r3, [r7, #10]
 8004344:	4613      	mov	r3, r2
 8004346:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004348:	f7fe fb48 	bl	80029dc <HAL_GetTick>
 800434c:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 800434e:	68fb      	ldr	r3, [r7, #12]
 8004350:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004354:	b2db      	uxtb	r3, r3
 8004356:	2b20      	cmp	r3, #32
 8004358:	f040 80e0 	bne.w	800451c <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800435c:	697b      	ldr	r3, [r7, #20]
 800435e:	9300      	str	r3, [sp, #0]
 8004360:	2319      	movs	r3, #25
 8004362:	2201      	movs	r2, #1
 8004364:	4970      	ldr	r1, [pc, #448]	@ (8004528 <HAL_I2C_Master_Transmit+0x1f4>)
 8004366:	68f8      	ldr	r0, [r7, #12]
 8004368:	f000 fc64 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 800436c:	4603      	mov	r3, r0
 800436e:	2b00      	cmp	r3, #0
 8004370:	d001      	beq.n	8004376 <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8004372:	2302      	movs	r3, #2
 8004374:	e0d3      	b.n	800451e <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800437c:	2b01      	cmp	r3, #1
 800437e:	d101      	bne.n	8004384 <HAL_I2C_Master_Transmit+0x50>
 8004380:	2302      	movs	r3, #2
 8004382:	e0cc      	b.n	800451e <HAL_I2C_Master_Transmit+0x1ea>
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	2201      	movs	r2, #1
 8004388:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	681b      	ldr	r3, [r3, #0]
 8004390:	681b      	ldr	r3, [r3, #0]
 8004392:	f003 0301 	and.w	r3, r3, #1
 8004396:	2b01      	cmp	r3, #1
 8004398:	d007      	beq.n	80043aa <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800439a:	68fb      	ldr	r3, [r7, #12]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	681a      	ldr	r2, [r3, #0]
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	f042 0201 	orr.w	r2, r2, #1
 80043a8:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80043aa:	68fb      	ldr	r3, [r7, #12]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	681a      	ldr	r2, [r3, #0]
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80043b8:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 80043ba:	68fb      	ldr	r3, [r7, #12]
 80043bc:	2221      	movs	r2, #33	@ 0x21
 80043be:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80043c2:	68fb      	ldr	r3, [r7, #12]
 80043c4:	2210      	movs	r2, #16
 80043c6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80043ca:	68fb      	ldr	r3, [r7, #12]
 80043cc:	2200      	movs	r2, #0
 80043ce:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80043d0:	68fb      	ldr	r3, [r7, #12]
 80043d2:	687a      	ldr	r2, [r7, #4]
 80043d4:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80043d6:	68fb      	ldr	r3, [r7, #12]
 80043d8:	893a      	ldrh	r2, [r7, #8]
 80043da:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80043dc:	68fb      	ldr	r3, [r7, #12]
 80043de:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80043e0:	b29a      	uxth	r2, r3
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	4a50      	ldr	r2, [pc, #320]	@ (800452c <HAL_I2C_Master_Transmit+0x1f8>)
 80043ea:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80043ec:	8979      	ldrh	r1, [r7, #10]
 80043ee:	697b      	ldr	r3, [r7, #20]
 80043f0:	6a3a      	ldr	r2, [r7, #32]
 80043f2:	68f8      	ldr	r0, [r7, #12]
 80043f4:	f000 face 	bl	8004994 <I2C_MasterRequestWrite>
 80043f8:	4603      	mov	r3, r0
 80043fa:	2b00      	cmp	r3, #0
 80043fc:	d001      	beq.n	8004402 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80043fe:	2301      	movs	r3, #1
 8004400:	e08d      	b.n	800451e <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004402:	2300      	movs	r3, #0
 8004404:	613b      	str	r3, [r7, #16]
 8004406:	68fb      	ldr	r3, [r7, #12]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	695b      	ldr	r3, [r3, #20]
 800440c:	613b      	str	r3, [r7, #16]
 800440e:	68fb      	ldr	r3, [r7, #12]
 8004410:	681b      	ldr	r3, [r3, #0]
 8004412:	699b      	ldr	r3, [r3, #24]
 8004414:	613b      	str	r3, [r7, #16]
 8004416:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 8004418:	e066      	b.n	80044e8 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800441a:	697a      	ldr	r2, [r7, #20]
 800441c:	6a39      	ldr	r1, [r7, #32]
 800441e:	68f8      	ldr	r0, [r7, #12]
 8004420:	f000 fd22 	bl	8004e68 <I2C_WaitOnTXEFlagUntilTimeout>
 8004424:	4603      	mov	r3, r0
 8004426:	2b00      	cmp	r3, #0
 8004428:	d00d      	beq.n	8004446 <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800442a:	68fb      	ldr	r3, [r7, #12]
 800442c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800442e:	2b04      	cmp	r3, #4
 8004430:	d107      	bne.n	8004442 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004432:	68fb      	ldr	r3, [r7, #12]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	681a      	ldr	r2, [r3, #0]
 8004438:	68fb      	ldr	r3, [r7, #12]
 800443a:	681b      	ldr	r3, [r3, #0]
 800443c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004440:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004442:	2301      	movs	r3, #1
 8004444:	e06b      	b.n	800451e <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004446:	68fb      	ldr	r3, [r7, #12]
 8004448:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800444a:	781a      	ldrb	r2, [r3, #0]
 800444c:	68fb      	ldr	r3, [r7, #12]
 800444e:	681b      	ldr	r3, [r3, #0]
 8004450:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004452:	68fb      	ldr	r3, [r7, #12]
 8004454:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004456:	1c5a      	adds	r2, r3, #1
 8004458:	68fb      	ldr	r3, [r7, #12]
 800445a:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 800445c:	68fb      	ldr	r3, [r7, #12]
 800445e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004460:	b29b      	uxth	r3, r3
 8004462:	3b01      	subs	r3, #1
 8004464:	b29a      	uxth	r2, r3
 8004466:	68fb      	ldr	r3, [r7, #12]
 8004468:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 800446a:	68fb      	ldr	r3, [r7, #12]
 800446c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800446e:	3b01      	subs	r3, #1
 8004470:	b29a      	uxth	r2, r3
 8004472:	68fb      	ldr	r3, [r7, #12]
 8004474:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004476:	68fb      	ldr	r3, [r7, #12]
 8004478:	681b      	ldr	r3, [r3, #0]
 800447a:	695b      	ldr	r3, [r3, #20]
 800447c:	f003 0304 	and.w	r3, r3, #4
 8004480:	2b04      	cmp	r3, #4
 8004482:	d11b      	bne.n	80044bc <HAL_I2C_Master_Transmit+0x188>
 8004484:	68fb      	ldr	r3, [r7, #12]
 8004486:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004488:	2b00      	cmp	r3, #0
 800448a:	d017      	beq.n	80044bc <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800448c:	68fb      	ldr	r3, [r7, #12]
 800448e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004490:	781a      	ldrb	r2, [r3, #0]
 8004492:	68fb      	ldr	r3, [r7, #12]
 8004494:	681b      	ldr	r3, [r3, #0]
 8004496:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004498:	68fb      	ldr	r3, [r7, #12]
 800449a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800449c:	1c5a      	adds	r2, r3, #1
 800449e:	68fb      	ldr	r3, [r7, #12]
 80044a0:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 80044a2:	68fb      	ldr	r3, [r7, #12]
 80044a4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80044a6:	b29b      	uxth	r3, r3
 80044a8:	3b01      	subs	r3, #1
 80044aa:	b29a      	uxth	r2, r3
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 80044b0:	68fb      	ldr	r3, [r7, #12]
 80044b2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80044b4:	3b01      	subs	r3, #1
 80044b6:	b29a      	uxth	r2, r3
 80044b8:	68fb      	ldr	r3, [r7, #12]
 80044ba:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80044bc:	697a      	ldr	r2, [r7, #20]
 80044be:	6a39      	ldr	r1, [r7, #32]
 80044c0:	68f8      	ldr	r0, [r7, #12]
 80044c2:	f000 fd19 	bl	8004ef8 <I2C_WaitOnBTFFlagUntilTimeout>
 80044c6:	4603      	mov	r3, r0
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	d00d      	beq.n	80044e8 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80044d0:	2b04      	cmp	r3, #4
 80044d2:	d107      	bne.n	80044e4 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80044d4:	68fb      	ldr	r3, [r7, #12]
 80044d6:	681b      	ldr	r3, [r3, #0]
 80044d8:	681a      	ldr	r2, [r3, #0]
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80044e2:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80044e4:	2301      	movs	r3, #1
 80044e6:	e01a      	b.n	800451e <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80044e8:	68fb      	ldr	r3, [r7, #12]
 80044ea:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80044ec:	2b00      	cmp	r3, #0
 80044ee:	d194      	bne.n	800441a <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80044f0:	68fb      	ldr	r3, [r7, #12]
 80044f2:	681b      	ldr	r3, [r3, #0]
 80044f4:	681a      	ldr	r2, [r3, #0]
 80044f6:	68fb      	ldr	r3, [r7, #12]
 80044f8:	681b      	ldr	r3, [r3, #0]
 80044fa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80044fe:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004500:	68fb      	ldr	r3, [r7, #12]
 8004502:	2220      	movs	r2, #32
 8004504:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004508:	68fb      	ldr	r3, [r7, #12]
 800450a:	2200      	movs	r2, #0
 800450c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004510:	68fb      	ldr	r3, [r7, #12]
 8004512:	2200      	movs	r2, #0
 8004514:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004518:	2300      	movs	r3, #0
 800451a:	e000      	b.n	800451e <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 800451c:	2302      	movs	r3, #2
  }
}
 800451e:	4618      	mov	r0, r3
 8004520:	3718      	adds	r7, #24
 8004522:	46bd      	mov	sp, r7
 8004524:	bd80      	pop	{r7, pc}
 8004526:	bf00      	nop
 8004528:	00100002 	.word	0x00100002
 800452c:	ffff0000 	.word	0xffff0000

08004530 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004530:	b580      	push	{r7, lr}
 8004532:	b08c      	sub	sp, #48	@ 0x30
 8004534:	af02      	add	r7, sp, #8
 8004536:	60f8      	str	r0, [r7, #12]
 8004538:	607a      	str	r2, [r7, #4]
 800453a:	461a      	mov	r2, r3
 800453c:	460b      	mov	r3, r1
 800453e:	817b      	strh	r3, [r7, #10]
 8004540:	4613      	mov	r3, r2
 8004542:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004544:	f7fe fa4a 	bl	80029dc <HAL_GetTick>
 8004548:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 800454a:	68fb      	ldr	r3, [r7, #12]
 800454c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004550:	b2db      	uxtb	r3, r3
 8004552:	2b20      	cmp	r3, #32
 8004554:	f040 8217 	bne.w	8004986 <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004558:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800455a:	9300      	str	r3, [sp, #0]
 800455c:	2319      	movs	r3, #25
 800455e:	2201      	movs	r2, #1
 8004560:	497c      	ldr	r1, [pc, #496]	@ (8004754 <HAL_I2C_Master_Receive+0x224>)
 8004562:	68f8      	ldr	r0, [r7, #12]
 8004564:	f000 fb66 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 8004568:	4603      	mov	r3, r0
 800456a:	2b00      	cmp	r3, #0
 800456c:	d001      	beq.n	8004572 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 800456e:	2302      	movs	r3, #2
 8004570:	e20a      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004572:	68fb      	ldr	r3, [r7, #12]
 8004574:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004578:	2b01      	cmp	r3, #1
 800457a:	d101      	bne.n	8004580 <HAL_I2C_Master_Receive+0x50>
 800457c:	2302      	movs	r3, #2
 800457e:	e203      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
 8004580:	68fb      	ldr	r3, [r7, #12]
 8004582:	2201      	movs	r2, #1
 8004584:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	f003 0301 	and.w	r3, r3, #1
 8004592:	2b01      	cmp	r3, #1
 8004594:	d007      	beq.n	80045a6 <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8004596:	68fb      	ldr	r3, [r7, #12]
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	681a      	ldr	r2, [r3, #0]
 800459c:	68fb      	ldr	r3, [r7, #12]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	f042 0201 	orr.w	r2, r2, #1
 80045a4:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	681a      	ldr	r2, [r3, #0]
 80045ac:	68fb      	ldr	r3, [r7, #12]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80045b4:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 80045b6:	68fb      	ldr	r3, [r7, #12]
 80045b8:	2222      	movs	r2, #34	@ 0x22
 80045ba:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 80045be:	68fb      	ldr	r3, [r7, #12]
 80045c0:	2210      	movs	r2, #16
 80045c2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 80045c6:	68fb      	ldr	r3, [r7, #12]
 80045c8:	2200      	movs	r2, #0
 80045ca:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 80045cc:	68fb      	ldr	r3, [r7, #12]
 80045ce:	687a      	ldr	r2, [r7, #4]
 80045d0:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80045d2:	68fb      	ldr	r3, [r7, #12]
 80045d4:	893a      	ldrh	r2, [r7, #8]
 80045d6:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80045d8:	68fb      	ldr	r3, [r7, #12]
 80045da:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80045dc:	b29a      	uxth	r2, r3
 80045de:	68fb      	ldr	r3, [r7, #12]
 80045e0:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80045e2:	68fb      	ldr	r3, [r7, #12]
 80045e4:	4a5c      	ldr	r2, [pc, #368]	@ (8004758 <HAL_I2C_Master_Receive+0x228>)
 80045e6:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80045e8:	8979      	ldrh	r1, [r7, #10]
 80045ea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80045ec:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80045ee:	68f8      	ldr	r0, [r7, #12]
 80045f0:	f000 fa52 	bl	8004a98 <I2C_MasterRequestRead>
 80045f4:	4603      	mov	r3, r0
 80045f6:	2b00      	cmp	r3, #0
 80045f8:	d001      	beq.n	80045fe <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80045fa:	2301      	movs	r3, #1
 80045fc:	e1c4      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 80045fe:	68fb      	ldr	r3, [r7, #12]
 8004600:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004602:	2b00      	cmp	r3, #0
 8004604:	d113      	bne.n	800462e <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004606:	2300      	movs	r3, #0
 8004608:	623b      	str	r3, [r7, #32]
 800460a:	68fb      	ldr	r3, [r7, #12]
 800460c:	681b      	ldr	r3, [r3, #0]
 800460e:	695b      	ldr	r3, [r3, #20]
 8004610:	623b      	str	r3, [r7, #32]
 8004612:	68fb      	ldr	r3, [r7, #12]
 8004614:	681b      	ldr	r3, [r3, #0]
 8004616:	699b      	ldr	r3, [r3, #24]
 8004618:	623b      	str	r3, [r7, #32]
 800461a:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800461c:	68fb      	ldr	r3, [r7, #12]
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	681a      	ldr	r2, [r3, #0]
 8004622:	68fb      	ldr	r3, [r7, #12]
 8004624:	681b      	ldr	r3, [r3, #0]
 8004626:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800462a:	601a      	str	r2, [r3, #0]
 800462c:	e198      	b.n	8004960 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 800462e:	68fb      	ldr	r3, [r7, #12]
 8004630:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004632:	2b01      	cmp	r3, #1
 8004634:	d11b      	bne.n	800466e <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004636:	68fb      	ldr	r3, [r7, #12]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	681a      	ldr	r2, [r3, #0]
 800463c:	68fb      	ldr	r3, [r7, #12]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004644:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004646:	2300      	movs	r3, #0
 8004648:	61fb      	str	r3, [r7, #28]
 800464a:	68fb      	ldr	r3, [r7, #12]
 800464c:	681b      	ldr	r3, [r3, #0]
 800464e:	695b      	ldr	r3, [r3, #20]
 8004650:	61fb      	str	r3, [r7, #28]
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	681b      	ldr	r3, [r3, #0]
 8004656:	699b      	ldr	r3, [r3, #24]
 8004658:	61fb      	str	r3, [r7, #28]
 800465a:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800465c:	68fb      	ldr	r3, [r7, #12]
 800465e:	681b      	ldr	r3, [r3, #0]
 8004660:	681a      	ldr	r2, [r3, #0]
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800466a:	601a      	str	r2, [r3, #0]
 800466c:	e178      	b.n	8004960 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004672:	2b02      	cmp	r3, #2
 8004674:	d11b      	bne.n	80046ae <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	681a      	ldr	r2, [r3, #0]
 800467c:	68fb      	ldr	r3, [r7, #12]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004684:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	681a      	ldr	r2, [r3, #0]
 800468c:	68fb      	ldr	r3, [r7, #12]
 800468e:	681b      	ldr	r3, [r3, #0]
 8004690:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004694:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004696:	2300      	movs	r3, #0
 8004698:	61bb      	str	r3, [r7, #24]
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	695b      	ldr	r3, [r3, #20]
 80046a0:	61bb      	str	r3, [r7, #24]
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	681b      	ldr	r3, [r3, #0]
 80046a6:	699b      	ldr	r3, [r3, #24]
 80046a8:	61bb      	str	r3, [r7, #24]
 80046aa:	69bb      	ldr	r3, [r7, #24]
 80046ac:	e158      	b.n	8004960 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80046ae:	68fb      	ldr	r3, [r7, #12]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	681a      	ldr	r2, [r3, #0]
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80046bc:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046be:	2300      	movs	r3, #0
 80046c0:	617b      	str	r3, [r7, #20]
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	695b      	ldr	r3, [r3, #20]
 80046c8:	617b      	str	r3, [r7, #20]
 80046ca:	68fb      	ldr	r3, [r7, #12]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	699b      	ldr	r3, [r3, #24]
 80046d0:	617b      	str	r3, [r7, #20]
 80046d2:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 80046d4:	e144      	b.n	8004960 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 80046d6:	68fb      	ldr	r3, [r7, #12]
 80046d8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80046da:	2b03      	cmp	r3, #3
 80046dc:	f200 80f1 	bhi.w	80048c2 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 80046e0:	68fb      	ldr	r3, [r7, #12]
 80046e2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80046e4:	2b01      	cmp	r3, #1
 80046e6:	d123      	bne.n	8004730 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80046e8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80046ea:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80046ec:	68f8      	ldr	r0, [r7, #12]
 80046ee:	f000 fc4b 	bl	8004f88 <I2C_WaitOnRXNEFlagUntilTimeout>
 80046f2:	4603      	mov	r3, r0
 80046f4:	2b00      	cmp	r3, #0
 80046f6:	d001      	beq.n	80046fc <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 80046f8:	2301      	movs	r3, #1
 80046fa:	e145      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80046fc:	68fb      	ldr	r3, [r7, #12]
 80046fe:	681b      	ldr	r3, [r3, #0]
 8004700:	691a      	ldr	r2, [r3, #16]
 8004702:	68fb      	ldr	r3, [r7, #12]
 8004704:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004706:	b2d2      	uxtb	r2, r2
 8004708:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800470e:	1c5a      	adds	r2, r3, #1
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004718:	3b01      	subs	r3, #1
 800471a:	b29a      	uxth	r2, r3
 800471c:	68fb      	ldr	r3, [r7, #12]
 800471e:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004720:	68fb      	ldr	r3, [r7, #12]
 8004722:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004724:	b29b      	uxth	r3, r3
 8004726:	3b01      	subs	r3, #1
 8004728:	b29a      	uxth	r2, r3
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800472e:	e117      	b.n	8004960 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 8004730:	68fb      	ldr	r3, [r7, #12]
 8004732:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004734:	2b02      	cmp	r3, #2
 8004736:	d14e      	bne.n	80047d6 <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004738:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800473a:	9300      	str	r3, [sp, #0]
 800473c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800473e:	2200      	movs	r2, #0
 8004740:	4906      	ldr	r1, [pc, #24]	@ (800475c <HAL_I2C_Master_Receive+0x22c>)
 8004742:	68f8      	ldr	r0, [r7, #12]
 8004744:	f000 fa76 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 8004748:	4603      	mov	r3, r0
 800474a:	2b00      	cmp	r3, #0
 800474c:	d008      	beq.n	8004760 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 800474e:	2301      	movs	r3, #1
 8004750:	e11a      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
 8004752:	bf00      	nop
 8004754:	00100002 	.word	0x00100002
 8004758:	ffff0000 	.word	0xffff0000
 800475c:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	681a      	ldr	r2, [r3, #0]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	681b      	ldr	r3, [r3, #0]
 800476a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800476e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	691a      	ldr	r2, [r3, #16]
 8004776:	68fb      	ldr	r3, [r7, #12]
 8004778:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800477a:	b2d2      	uxtb	r2, r2
 800477c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800477e:	68fb      	ldr	r3, [r7, #12]
 8004780:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004782:	1c5a      	adds	r2, r3, #1
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800478c:	3b01      	subs	r3, #1
 800478e:	b29a      	uxth	r2, r3
 8004790:	68fb      	ldr	r3, [r7, #12]
 8004792:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004794:	68fb      	ldr	r3, [r7, #12]
 8004796:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004798:	b29b      	uxth	r3, r3
 800479a:	3b01      	subs	r3, #1
 800479c:	b29a      	uxth	r2, r3
 800479e:	68fb      	ldr	r3, [r7, #12]
 80047a0:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80047a2:	68fb      	ldr	r3, [r7, #12]
 80047a4:	681b      	ldr	r3, [r3, #0]
 80047a6:	691a      	ldr	r2, [r3, #16]
 80047a8:	68fb      	ldr	r3, [r7, #12]
 80047aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047ac:	b2d2      	uxtb	r2, r2
 80047ae:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80047b0:	68fb      	ldr	r3, [r7, #12]
 80047b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80047b4:	1c5a      	adds	r2, r3, #1
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80047ba:	68fb      	ldr	r3, [r7, #12]
 80047bc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047be:	3b01      	subs	r3, #1
 80047c0:	b29a      	uxth	r2, r3
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80047c6:	68fb      	ldr	r3, [r7, #12]
 80047c8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80047ca:	b29b      	uxth	r3, r3
 80047cc:	3b01      	subs	r3, #1
 80047ce:	b29a      	uxth	r2, r3
 80047d0:	68fb      	ldr	r3, [r7, #12]
 80047d2:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80047d4:	e0c4      	b.n	8004960 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80047d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80047d8:	9300      	str	r3, [sp, #0]
 80047da:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80047dc:	2200      	movs	r2, #0
 80047de:	496c      	ldr	r1, [pc, #432]	@ (8004990 <HAL_I2C_Master_Receive+0x460>)
 80047e0:	68f8      	ldr	r0, [r7, #12]
 80047e2:	f000 fa27 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 80047e6:	4603      	mov	r3, r0
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	d001      	beq.n	80047f0 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 80047ec:	2301      	movs	r3, #1
 80047ee:	e0cb      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80047f0:	68fb      	ldr	r3, [r7, #12]
 80047f2:	681b      	ldr	r3, [r3, #0]
 80047f4:	681a      	ldr	r2, [r3, #0]
 80047f6:	68fb      	ldr	r3, [r7, #12]
 80047f8:	681b      	ldr	r3, [r3, #0]
 80047fa:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80047fe:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	681b      	ldr	r3, [r3, #0]
 8004804:	691a      	ldr	r2, [r3, #16]
 8004806:	68fb      	ldr	r3, [r7, #12]
 8004808:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800480a:	b2d2      	uxtb	r2, r2
 800480c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800480e:	68fb      	ldr	r3, [r7, #12]
 8004810:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004812:	1c5a      	adds	r2, r3, #1
 8004814:	68fb      	ldr	r3, [r7, #12]
 8004816:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004818:	68fb      	ldr	r3, [r7, #12]
 800481a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800481c:	3b01      	subs	r3, #1
 800481e:	b29a      	uxth	r2, r3
 8004820:	68fb      	ldr	r3, [r7, #12]
 8004822:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004828:	b29b      	uxth	r3, r3
 800482a:	3b01      	subs	r3, #1
 800482c:	b29a      	uxth	r2, r3
 800482e:	68fb      	ldr	r3, [r7, #12]
 8004830:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004832:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004834:	9300      	str	r3, [sp, #0]
 8004836:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004838:	2200      	movs	r2, #0
 800483a:	4955      	ldr	r1, [pc, #340]	@ (8004990 <HAL_I2C_Master_Receive+0x460>)
 800483c:	68f8      	ldr	r0, [r7, #12]
 800483e:	f000 f9f9 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 8004842:	4603      	mov	r3, r0
 8004844:	2b00      	cmp	r3, #0
 8004846:	d001      	beq.n	800484c <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8004848:	2301      	movs	r3, #1
 800484a:	e09d      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	681a      	ldr	r2, [r3, #0]
 8004852:	68fb      	ldr	r3, [r7, #12]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800485a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800485c:	68fb      	ldr	r3, [r7, #12]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	691a      	ldr	r2, [r3, #16]
 8004862:	68fb      	ldr	r3, [r7, #12]
 8004864:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004866:	b2d2      	uxtb	r2, r2
 8004868:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800486a:	68fb      	ldr	r3, [r7, #12]
 800486c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800486e:	1c5a      	adds	r2, r3, #1
 8004870:	68fb      	ldr	r3, [r7, #12]
 8004872:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004874:	68fb      	ldr	r3, [r7, #12]
 8004876:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004878:	3b01      	subs	r3, #1
 800487a:	b29a      	uxth	r2, r3
 800487c:	68fb      	ldr	r3, [r7, #12]
 800487e:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004884:	b29b      	uxth	r3, r3
 8004886:	3b01      	subs	r3, #1
 8004888:	b29a      	uxth	r2, r3
 800488a:	68fb      	ldr	r3, [r7, #12]
 800488c:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800488e:	68fb      	ldr	r3, [r7, #12]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	691a      	ldr	r2, [r3, #16]
 8004894:	68fb      	ldr	r3, [r7, #12]
 8004896:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004898:	b2d2      	uxtb	r2, r2
 800489a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800489c:	68fb      	ldr	r3, [r7, #12]
 800489e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048a0:	1c5a      	adds	r2, r3, #1
 80048a2:	68fb      	ldr	r3, [r7, #12]
 80048a4:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80048a6:	68fb      	ldr	r3, [r7, #12]
 80048a8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048aa:	3b01      	subs	r3, #1
 80048ac:	b29a      	uxth	r2, r3
 80048ae:	68fb      	ldr	r3, [r7, #12]
 80048b0:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80048b6:	b29b      	uxth	r3, r3
 80048b8:	3b01      	subs	r3, #1
 80048ba:	b29a      	uxth	r2, r3
 80048bc:	68fb      	ldr	r3, [r7, #12]
 80048be:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80048c0:	e04e      	b.n	8004960 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80048c2:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80048c4:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80048c6:	68f8      	ldr	r0, [r7, #12]
 80048c8:	f000 fb5e 	bl	8004f88 <I2C_WaitOnRXNEFlagUntilTimeout>
 80048cc:	4603      	mov	r3, r0
 80048ce:	2b00      	cmp	r3, #0
 80048d0:	d001      	beq.n	80048d6 <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 80048d2:	2301      	movs	r3, #1
 80048d4:	e058      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80048d6:	68fb      	ldr	r3, [r7, #12]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	691a      	ldr	r2, [r3, #16]
 80048dc:	68fb      	ldr	r3, [r7, #12]
 80048de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048e0:	b2d2      	uxtb	r2, r2
 80048e2:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 80048e4:	68fb      	ldr	r3, [r7, #12]
 80048e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80048e8:	1c5a      	adds	r2, r3, #1
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 80048ee:	68fb      	ldr	r3, [r7, #12]
 80048f0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048f2:	3b01      	subs	r3, #1
 80048f4:	b29a      	uxth	r2, r3
 80048f6:	68fb      	ldr	r3, [r7, #12]
 80048f8:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 80048fa:	68fb      	ldr	r3, [r7, #12]
 80048fc:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80048fe:	b29b      	uxth	r3, r3
 8004900:	3b01      	subs	r3, #1
 8004902:	b29a      	uxth	r2, r3
 8004904:	68fb      	ldr	r3, [r7, #12]
 8004906:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004908:	68fb      	ldr	r3, [r7, #12]
 800490a:	681b      	ldr	r3, [r3, #0]
 800490c:	695b      	ldr	r3, [r3, #20]
 800490e:	f003 0304 	and.w	r3, r3, #4
 8004912:	2b04      	cmp	r3, #4
 8004914:	d124      	bne.n	8004960 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8004916:	68fb      	ldr	r3, [r7, #12]
 8004918:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800491a:	2b03      	cmp	r3, #3
 800491c:	d107      	bne.n	800492e <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800491e:	68fb      	ldr	r3, [r7, #12]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	681a      	ldr	r2, [r3, #0]
 8004924:	68fb      	ldr	r3, [r7, #12]
 8004926:	681b      	ldr	r3, [r3, #0]
 8004928:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800492c:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800492e:	68fb      	ldr	r3, [r7, #12]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	691a      	ldr	r2, [r3, #16]
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004938:	b2d2      	uxtb	r2, r2
 800493a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 800493c:	68fb      	ldr	r3, [r7, #12]
 800493e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004940:	1c5a      	adds	r2, r3, #1
 8004942:	68fb      	ldr	r3, [r7, #12]
 8004944:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004946:	68fb      	ldr	r3, [r7, #12]
 8004948:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800494a:	3b01      	subs	r3, #1
 800494c:	b29a      	uxth	r2, r3
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004952:	68fb      	ldr	r3, [r7, #12]
 8004954:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004956:	b29b      	uxth	r3, r3
 8004958:	3b01      	subs	r3, #1
 800495a:	b29a      	uxth	r2, r3
 800495c:	68fb      	ldr	r3, [r7, #12]
 800495e:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004960:	68fb      	ldr	r3, [r7, #12]
 8004962:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004964:	2b00      	cmp	r3, #0
 8004966:	f47f aeb6 	bne.w	80046d6 <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 800496a:	68fb      	ldr	r3, [r7, #12]
 800496c:	2220      	movs	r2, #32
 800496e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	2200      	movs	r2, #0
 8004976:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800497a:	68fb      	ldr	r3, [r7, #12]
 800497c:	2200      	movs	r2, #0
 800497e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004982:	2300      	movs	r3, #0
 8004984:	e000      	b.n	8004988 <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 8004986:	2302      	movs	r3, #2
  }
}
 8004988:	4618      	mov	r0, r3
 800498a:	3728      	adds	r7, #40	@ 0x28
 800498c:	46bd      	mov	sp, r7
 800498e:	bd80      	pop	{r7, pc}
 8004990:	00010004 	.word	0x00010004

08004994 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004994:	b580      	push	{r7, lr}
 8004996:	b088      	sub	sp, #32
 8004998:	af02      	add	r7, sp, #8
 800499a:	60f8      	str	r0, [r7, #12]
 800499c:	607a      	str	r2, [r7, #4]
 800499e:	603b      	str	r3, [r7, #0]
 80049a0:	460b      	mov	r3, r1
 80049a2:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80049a8:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 80049aa:	697b      	ldr	r3, [r7, #20]
 80049ac:	2b08      	cmp	r3, #8
 80049ae:	d006      	beq.n	80049be <I2C_MasterRequestWrite+0x2a>
 80049b0:	697b      	ldr	r3, [r7, #20]
 80049b2:	2b01      	cmp	r3, #1
 80049b4:	d003      	beq.n	80049be <I2C_MasterRequestWrite+0x2a>
 80049b6:	697b      	ldr	r3, [r7, #20]
 80049b8:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 80049bc:	d108      	bne.n	80049d0 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80049be:	68fb      	ldr	r3, [r7, #12]
 80049c0:	681b      	ldr	r3, [r3, #0]
 80049c2:	681a      	ldr	r2, [r3, #0]
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80049cc:	601a      	str	r2, [r3, #0]
 80049ce:	e00b      	b.n	80049e8 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 80049d0:	68fb      	ldr	r3, [r7, #12]
 80049d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80049d4:	2b12      	cmp	r3, #18
 80049d6:	d107      	bne.n	80049e8 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80049d8:	68fb      	ldr	r3, [r7, #12]
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	681a      	ldr	r2, [r3, #0]
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80049e6:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80049e8:	683b      	ldr	r3, [r7, #0]
 80049ea:	9300      	str	r3, [sp, #0]
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	2200      	movs	r2, #0
 80049f0:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80049f4:	68f8      	ldr	r0, [r7, #12]
 80049f6:	f000 f91d 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 80049fa:	4603      	mov	r3, r0
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d00d      	beq.n	8004a1c <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004a00:	68fb      	ldr	r3, [r7, #12]
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	681b      	ldr	r3, [r3, #0]
 8004a06:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004a0a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004a0e:	d103      	bne.n	8004a18 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004a10:	68fb      	ldr	r3, [r7, #12]
 8004a12:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004a16:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004a18:	2303      	movs	r3, #3
 8004a1a:	e035      	b.n	8004a88 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	691b      	ldr	r3, [r3, #16]
 8004a20:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004a24:	d108      	bne.n	8004a38 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004a26:	897b      	ldrh	r3, [r7, #10]
 8004a28:	b2db      	uxtb	r3, r3
 8004a2a:	461a      	mov	r2, r3
 8004a2c:	68fb      	ldr	r3, [r7, #12]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004a34:	611a      	str	r2, [r3, #16]
 8004a36:	e01b      	b.n	8004a70 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004a38:	897b      	ldrh	r3, [r7, #10]
 8004a3a:	11db      	asrs	r3, r3, #7
 8004a3c:	b2db      	uxtb	r3, r3
 8004a3e:	f003 0306 	and.w	r3, r3, #6
 8004a42:	b2db      	uxtb	r3, r3
 8004a44:	f063 030f 	orn	r3, r3, #15
 8004a48:	b2da      	uxtb	r2, r3
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004a50:	683b      	ldr	r3, [r7, #0]
 8004a52:	687a      	ldr	r2, [r7, #4]
 8004a54:	490e      	ldr	r1, [pc, #56]	@ (8004a90 <I2C_MasterRequestWrite+0xfc>)
 8004a56:	68f8      	ldr	r0, [r7, #12]
 8004a58:	f000 f966 	bl	8004d28 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004a5c:	4603      	mov	r3, r0
 8004a5e:	2b00      	cmp	r3, #0
 8004a60:	d001      	beq.n	8004a66 <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8004a62:	2301      	movs	r3, #1
 8004a64:	e010      	b.n	8004a88 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004a66:	897b      	ldrh	r3, [r7, #10]
 8004a68:	b2da      	uxtb	r2, r3
 8004a6a:	68fb      	ldr	r3, [r7, #12]
 8004a6c:	681b      	ldr	r3, [r3, #0]
 8004a6e:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004a70:	683b      	ldr	r3, [r7, #0]
 8004a72:	687a      	ldr	r2, [r7, #4]
 8004a74:	4907      	ldr	r1, [pc, #28]	@ (8004a94 <I2C_MasterRequestWrite+0x100>)
 8004a76:	68f8      	ldr	r0, [r7, #12]
 8004a78:	f000 f956 	bl	8004d28 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004a7c:	4603      	mov	r3, r0
 8004a7e:	2b00      	cmp	r3, #0
 8004a80:	d001      	beq.n	8004a86 <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8004a82:	2301      	movs	r3, #1
 8004a84:	e000      	b.n	8004a88 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8004a86:	2300      	movs	r3, #0
}
 8004a88:	4618      	mov	r0, r3
 8004a8a:	3718      	adds	r7, #24
 8004a8c:	46bd      	mov	sp, r7
 8004a8e:	bd80      	pop	{r7, pc}
 8004a90:	00010008 	.word	0x00010008
 8004a94:	00010002 	.word	0x00010002

08004a98 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004a98:	b580      	push	{r7, lr}
 8004a9a:	b088      	sub	sp, #32
 8004a9c:	af02      	add	r7, sp, #8
 8004a9e:	60f8      	str	r0, [r7, #12]
 8004aa0:	607a      	str	r2, [r7, #4]
 8004aa2:	603b      	str	r3, [r7, #0]
 8004aa4:	460b      	mov	r3, r1
 8004aa6:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004aac:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004aae:	68fb      	ldr	r3, [r7, #12]
 8004ab0:	681b      	ldr	r3, [r3, #0]
 8004ab2:	681a      	ldr	r2, [r3, #0]
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004abc:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004abe:	697b      	ldr	r3, [r7, #20]
 8004ac0:	2b08      	cmp	r3, #8
 8004ac2:	d006      	beq.n	8004ad2 <I2C_MasterRequestRead+0x3a>
 8004ac4:	697b      	ldr	r3, [r7, #20]
 8004ac6:	2b01      	cmp	r3, #1
 8004ac8:	d003      	beq.n	8004ad2 <I2C_MasterRequestRead+0x3a>
 8004aca:	697b      	ldr	r3, [r7, #20]
 8004acc:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004ad0:	d108      	bne.n	8004ae4 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004ad2:	68fb      	ldr	r3, [r7, #12]
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	681a      	ldr	r2, [r3, #0]
 8004ad8:	68fb      	ldr	r3, [r7, #12]
 8004ada:	681b      	ldr	r3, [r3, #0]
 8004adc:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004ae0:	601a      	str	r2, [r3, #0]
 8004ae2:	e00b      	b.n	8004afc <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ae8:	2b11      	cmp	r3, #17
 8004aea:	d107      	bne.n	8004afc <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004aec:	68fb      	ldr	r3, [r7, #12]
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	681a      	ldr	r2, [r3, #0]
 8004af2:	68fb      	ldr	r3, [r7, #12]
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004afa:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004afc:	683b      	ldr	r3, [r7, #0]
 8004afe:	9300      	str	r3, [sp, #0]
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	2200      	movs	r2, #0
 8004b04:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004b08:	68f8      	ldr	r0, [r7, #12]
 8004b0a:	f000 f893 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 8004b0e:	4603      	mov	r3, r0
 8004b10:	2b00      	cmp	r3, #0
 8004b12:	d00d      	beq.n	8004b30 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004b14:	68fb      	ldr	r3, [r7, #12]
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	681b      	ldr	r3, [r3, #0]
 8004b1a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004b1e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004b22:	d103      	bne.n	8004b2c <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004b24:	68fb      	ldr	r3, [r7, #12]
 8004b26:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004b2a:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004b2c:	2303      	movs	r3, #3
 8004b2e:	e079      	b.n	8004c24 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	691b      	ldr	r3, [r3, #16]
 8004b34:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004b38:	d108      	bne.n	8004b4c <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004b3a:	897b      	ldrh	r3, [r7, #10]
 8004b3c:	b2db      	uxtb	r3, r3
 8004b3e:	f043 0301 	orr.w	r3, r3, #1
 8004b42:	b2da      	uxtb	r2, r3
 8004b44:	68fb      	ldr	r3, [r7, #12]
 8004b46:	681b      	ldr	r3, [r3, #0]
 8004b48:	611a      	str	r2, [r3, #16]
 8004b4a:	e05f      	b.n	8004c0c <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004b4c:	897b      	ldrh	r3, [r7, #10]
 8004b4e:	11db      	asrs	r3, r3, #7
 8004b50:	b2db      	uxtb	r3, r3
 8004b52:	f003 0306 	and.w	r3, r3, #6
 8004b56:	b2db      	uxtb	r3, r3
 8004b58:	f063 030f 	orn	r3, r3, #15
 8004b5c:	b2da      	uxtb	r2, r3
 8004b5e:	68fb      	ldr	r3, [r7, #12]
 8004b60:	681b      	ldr	r3, [r3, #0]
 8004b62:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004b64:	683b      	ldr	r3, [r7, #0]
 8004b66:	687a      	ldr	r2, [r7, #4]
 8004b68:	4930      	ldr	r1, [pc, #192]	@ (8004c2c <I2C_MasterRequestRead+0x194>)
 8004b6a:	68f8      	ldr	r0, [r7, #12]
 8004b6c:	f000 f8dc 	bl	8004d28 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004b70:	4603      	mov	r3, r0
 8004b72:	2b00      	cmp	r3, #0
 8004b74:	d001      	beq.n	8004b7a <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8004b76:	2301      	movs	r3, #1
 8004b78:	e054      	b.n	8004c24 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004b7a:	897b      	ldrh	r3, [r7, #10]
 8004b7c:	b2da      	uxtb	r2, r3
 8004b7e:	68fb      	ldr	r3, [r7, #12]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004b84:	683b      	ldr	r3, [r7, #0]
 8004b86:	687a      	ldr	r2, [r7, #4]
 8004b88:	4929      	ldr	r1, [pc, #164]	@ (8004c30 <I2C_MasterRequestRead+0x198>)
 8004b8a:	68f8      	ldr	r0, [r7, #12]
 8004b8c:	f000 f8cc 	bl	8004d28 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004b90:	4603      	mov	r3, r0
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	d001      	beq.n	8004b9a <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8004b96:	2301      	movs	r3, #1
 8004b98:	e044      	b.n	8004c24 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004b9a:	2300      	movs	r3, #0
 8004b9c:	613b      	str	r3, [r7, #16]
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	681b      	ldr	r3, [r3, #0]
 8004ba2:	695b      	ldr	r3, [r3, #20]
 8004ba4:	613b      	str	r3, [r7, #16]
 8004ba6:	68fb      	ldr	r3, [r7, #12]
 8004ba8:	681b      	ldr	r3, [r3, #0]
 8004baa:	699b      	ldr	r3, [r3, #24]
 8004bac:	613b      	str	r3, [r7, #16]
 8004bae:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004bb0:	68fb      	ldr	r3, [r7, #12]
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	681a      	ldr	r2, [r3, #0]
 8004bb6:	68fb      	ldr	r3, [r7, #12]
 8004bb8:	681b      	ldr	r3, [r3, #0]
 8004bba:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004bbe:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004bc0:	683b      	ldr	r3, [r7, #0]
 8004bc2:	9300      	str	r3, [sp, #0]
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	2200      	movs	r2, #0
 8004bc8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004bcc:	68f8      	ldr	r0, [r7, #12]
 8004bce:	f000 f831 	bl	8004c34 <I2C_WaitOnFlagUntilTimeout>
 8004bd2:	4603      	mov	r3, r0
 8004bd4:	2b00      	cmp	r3, #0
 8004bd6:	d00d      	beq.n	8004bf4 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004bd8:	68fb      	ldr	r3, [r7, #12]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004be2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004be6:	d103      	bne.n	8004bf0 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004bee:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 8004bf0:	2303      	movs	r3, #3
 8004bf2:	e017      	b.n	8004c24 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8004bf4:	897b      	ldrh	r3, [r7, #10]
 8004bf6:	11db      	asrs	r3, r3, #7
 8004bf8:	b2db      	uxtb	r3, r3
 8004bfa:	f003 0306 	and.w	r3, r3, #6
 8004bfe:	b2db      	uxtb	r3, r3
 8004c00:	f063 030e 	orn	r3, r3, #14
 8004c04:	b2da      	uxtb	r2, r3
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004c0c:	683b      	ldr	r3, [r7, #0]
 8004c0e:	687a      	ldr	r2, [r7, #4]
 8004c10:	4907      	ldr	r1, [pc, #28]	@ (8004c30 <I2C_MasterRequestRead+0x198>)
 8004c12:	68f8      	ldr	r0, [r7, #12]
 8004c14:	f000 f888 	bl	8004d28 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004c18:	4603      	mov	r3, r0
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	d001      	beq.n	8004c22 <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8004c1e:	2301      	movs	r3, #1
 8004c20:	e000      	b.n	8004c24 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8004c22:	2300      	movs	r3, #0
}
 8004c24:	4618      	mov	r0, r3
 8004c26:	3718      	adds	r7, #24
 8004c28:	46bd      	mov	sp, r7
 8004c2a:	bd80      	pop	{r7, pc}
 8004c2c:	00010008 	.word	0x00010008
 8004c30:	00010002 	.word	0x00010002

08004c34 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004c34:	b580      	push	{r7, lr}
 8004c36:	b084      	sub	sp, #16
 8004c38:	af00      	add	r7, sp, #0
 8004c3a:	60f8      	str	r0, [r7, #12]
 8004c3c:	60b9      	str	r1, [r7, #8]
 8004c3e:	603b      	str	r3, [r7, #0]
 8004c40:	4613      	mov	r3, r2
 8004c42:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004c44:	e048      	b.n	8004cd8 <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004c46:	683b      	ldr	r3, [r7, #0]
 8004c48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004c4c:	d044      	beq.n	8004cd8 <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004c4e:	f7fd fec5 	bl	80029dc <HAL_GetTick>
 8004c52:	4602      	mov	r2, r0
 8004c54:	69bb      	ldr	r3, [r7, #24]
 8004c56:	1ad3      	subs	r3, r2, r3
 8004c58:	683a      	ldr	r2, [r7, #0]
 8004c5a:	429a      	cmp	r2, r3
 8004c5c:	d302      	bcc.n	8004c64 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004c5e:	683b      	ldr	r3, [r7, #0]
 8004c60:	2b00      	cmp	r3, #0
 8004c62:	d139      	bne.n	8004cd8 <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004c64:	68bb      	ldr	r3, [r7, #8]
 8004c66:	0c1b      	lsrs	r3, r3, #16
 8004c68:	b2db      	uxtb	r3, r3
 8004c6a:	2b01      	cmp	r3, #1
 8004c6c:	d10d      	bne.n	8004c8a <I2C_WaitOnFlagUntilTimeout+0x56>
 8004c6e:	68fb      	ldr	r3, [r7, #12]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	695b      	ldr	r3, [r3, #20]
 8004c74:	43da      	mvns	r2, r3
 8004c76:	68bb      	ldr	r3, [r7, #8]
 8004c78:	4013      	ands	r3, r2
 8004c7a:	b29b      	uxth	r3, r3
 8004c7c:	2b00      	cmp	r3, #0
 8004c7e:	bf0c      	ite	eq
 8004c80:	2301      	moveq	r3, #1
 8004c82:	2300      	movne	r3, #0
 8004c84:	b2db      	uxtb	r3, r3
 8004c86:	461a      	mov	r2, r3
 8004c88:	e00c      	b.n	8004ca4 <I2C_WaitOnFlagUntilTimeout+0x70>
 8004c8a:	68fb      	ldr	r3, [r7, #12]
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	699b      	ldr	r3, [r3, #24]
 8004c90:	43da      	mvns	r2, r3
 8004c92:	68bb      	ldr	r3, [r7, #8]
 8004c94:	4013      	ands	r3, r2
 8004c96:	b29b      	uxth	r3, r3
 8004c98:	2b00      	cmp	r3, #0
 8004c9a:	bf0c      	ite	eq
 8004c9c:	2301      	moveq	r3, #1
 8004c9e:	2300      	movne	r3, #0
 8004ca0:	b2db      	uxtb	r3, r3
 8004ca2:	461a      	mov	r2, r3
 8004ca4:	79fb      	ldrb	r3, [r7, #7]
 8004ca6:	429a      	cmp	r2, r3
 8004ca8:	d116      	bne.n	8004cd8 <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004caa:	68fb      	ldr	r3, [r7, #12]
 8004cac:	2200      	movs	r2, #0
 8004cae:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8004cb0:	68fb      	ldr	r3, [r7, #12]
 8004cb2:	2220      	movs	r2, #32
 8004cb4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004cb8:	68fb      	ldr	r3, [r7, #12]
 8004cba:	2200      	movs	r2, #0
 8004cbc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004cc0:	68fb      	ldr	r3, [r7, #12]
 8004cc2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004cc4:	f043 0220 	orr.w	r2, r3, #32
 8004cc8:	68fb      	ldr	r3, [r7, #12]
 8004cca:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004ccc:	68fb      	ldr	r3, [r7, #12]
 8004cce:	2200      	movs	r2, #0
 8004cd0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004cd4:	2301      	movs	r3, #1
 8004cd6:	e023      	b.n	8004d20 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004cd8:	68bb      	ldr	r3, [r7, #8]
 8004cda:	0c1b      	lsrs	r3, r3, #16
 8004cdc:	b2db      	uxtb	r3, r3
 8004cde:	2b01      	cmp	r3, #1
 8004ce0:	d10d      	bne.n	8004cfe <I2C_WaitOnFlagUntilTimeout+0xca>
 8004ce2:	68fb      	ldr	r3, [r7, #12]
 8004ce4:	681b      	ldr	r3, [r3, #0]
 8004ce6:	695b      	ldr	r3, [r3, #20]
 8004ce8:	43da      	mvns	r2, r3
 8004cea:	68bb      	ldr	r3, [r7, #8]
 8004cec:	4013      	ands	r3, r2
 8004cee:	b29b      	uxth	r3, r3
 8004cf0:	2b00      	cmp	r3, #0
 8004cf2:	bf0c      	ite	eq
 8004cf4:	2301      	moveq	r3, #1
 8004cf6:	2300      	movne	r3, #0
 8004cf8:	b2db      	uxtb	r3, r3
 8004cfa:	461a      	mov	r2, r3
 8004cfc:	e00c      	b.n	8004d18 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8004cfe:	68fb      	ldr	r3, [r7, #12]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	699b      	ldr	r3, [r3, #24]
 8004d04:	43da      	mvns	r2, r3
 8004d06:	68bb      	ldr	r3, [r7, #8]
 8004d08:	4013      	ands	r3, r2
 8004d0a:	b29b      	uxth	r3, r3
 8004d0c:	2b00      	cmp	r3, #0
 8004d0e:	bf0c      	ite	eq
 8004d10:	2301      	moveq	r3, #1
 8004d12:	2300      	movne	r3, #0
 8004d14:	b2db      	uxtb	r3, r3
 8004d16:	461a      	mov	r2, r3
 8004d18:	79fb      	ldrb	r3, [r7, #7]
 8004d1a:	429a      	cmp	r2, r3
 8004d1c:	d093      	beq.n	8004c46 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004d1e:	2300      	movs	r3, #0
}
 8004d20:	4618      	mov	r0, r3
 8004d22:	3710      	adds	r7, #16
 8004d24:	46bd      	mov	sp, r7
 8004d26:	bd80      	pop	{r7, pc}

08004d28 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004d28:	b580      	push	{r7, lr}
 8004d2a:	b084      	sub	sp, #16
 8004d2c:	af00      	add	r7, sp, #0
 8004d2e:	60f8      	str	r0, [r7, #12]
 8004d30:	60b9      	str	r1, [r7, #8]
 8004d32:	607a      	str	r2, [r7, #4]
 8004d34:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004d36:	e071      	b.n	8004e1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004d38:	68fb      	ldr	r3, [r7, #12]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	695b      	ldr	r3, [r3, #20]
 8004d3e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004d42:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004d46:	d123      	bne.n	8004d90 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d48:	68fb      	ldr	r3, [r7, #12]
 8004d4a:	681b      	ldr	r3, [r3, #0]
 8004d4c:	681a      	ldr	r2, [r3, #0]
 8004d4e:	68fb      	ldr	r3, [r7, #12]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004d56:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004d58:	68fb      	ldr	r3, [r7, #12]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8004d60:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004d62:	68fb      	ldr	r3, [r7, #12]
 8004d64:	2200      	movs	r2, #0
 8004d66:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	2220      	movs	r2, #32
 8004d6c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004d70:	68fb      	ldr	r3, [r7, #12]
 8004d72:	2200      	movs	r2, #0
 8004d74:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8004d78:	68fb      	ldr	r3, [r7, #12]
 8004d7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004d7c:	f043 0204 	orr.w	r2, r3, #4
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004d84:	68fb      	ldr	r3, [r7, #12]
 8004d86:	2200      	movs	r2, #0
 8004d88:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8004d8c:	2301      	movs	r3, #1
 8004d8e:	e067      	b.n	8004e60 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004d96:	d041      	beq.n	8004e1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004d98:	f7fd fe20 	bl	80029dc <HAL_GetTick>
 8004d9c:	4602      	mov	r2, r0
 8004d9e:	683b      	ldr	r3, [r7, #0]
 8004da0:	1ad3      	subs	r3, r2, r3
 8004da2:	687a      	ldr	r2, [r7, #4]
 8004da4:	429a      	cmp	r2, r3
 8004da6:	d302      	bcc.n	8004dae <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d136      	bne.n	8004e1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8004dae:	68bb      	ldr	r3, [r7, #8]
 8004db0:	0c1b      	lsrs	r3, r3, #16
 8004db2:	b2db      	uxtb	r3, r3
 8004db4:	2b01      	cmp	r3, #1
 8004db6:	d10c      	bne.n	8004dd2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	695b      	ldr	r3, [r3, #20]
 8004dbe:	43da      	mvns	r2, r3
 8004dc0:	68bb      	ldr	r3, [r7, #8]
 8004dc2:	4013      	ands	r3, r2
 8004dc4:	b29b      	uxth	r3, r3
 8004dc6:	2b00      	cmp	r3, #0
 8004dc8:	bf14      	ite	ne
 8004dca:	2301      	movne	r3, #1
 8004dcc:	2300      	moveq	r3, #0
 8004dce:	b2db      	uxtb	r3, r3
 8004dd0:	e00b      	b.n	8004dea <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8004dd2:	68fb      	ldr	r3, [r7, #12]
 8004dd4:	681b      	ldr	r3, [r3, #0]
 8004dd6:	699b      	ldr	r3, [r3, #24]
 8004dd8:	43da      	mvns	r2, r3
 8004dda:	68bb      	ldr	r3, [r7, #8]
 8004ddc:	4013      	ands	r3, r2
 8004dde:	b29b      	uxth	r3, r3
 8004de0:	2b00      	cmp	r3, #0
 8004de2:	bf14      	ite	ne
 8004de4:	2301      	movne	r3, #1
 8004de6:	2300      	moveq	r3, #0
 8004de8:	b2db      	uxtb	r3, r3
 8004dea:	2b00      	cmp	r3, #0
 8004dec:	d016      	beq.n	8004e1c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004dee:	68fb      	ldr	r3, [r7, #12]
 8004df0:	2200      	movs	r2, #0
 8004df2:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004df4:	68fb      	ldr	r3, [r7, #12]
 8004df6:	2220      	movs	r2, #32
 8004df8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	2200      	movs	r2, #0
 8004e00:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004e04:	68fb      	ldr	r3, [r7, #12]
 8004e06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e08:	f043 0220 	orr.w	r2, r3, #32
 8004e0c:	68fb      	ldr	r3, [r7, #12]
 8004e0e:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	2200      	movs	r2, #0
 8004e14:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004e18:	2301      	movs	r3, #1
 8004e1a:	e021      	b.n	8004e60 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004e1c:	68bb      	ldr	r3, [r7, #8]
 8004e1e:	0c1b      	lsrs	r3, r3, #16
 8004e20:	b2db      	uxtb	r3, r3
 8004e22:	2b01      	cmp	r3, #1
 8004e24:	d10c      	bne.n	8004e40 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8004e26:	68fb      	ldr	r3, [r7, #12]
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	695b      	ldr	r3, [r3, #20]
 8004e2c:	43da      	mvns	r2, r3
 8004e2e:	68bb      	ldr	r3, [r7, #8]
 8004e30:	4013      	ands	r3, r2
 8004e32:	b29b      	uxth	r3, r3
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	bf14      	ite	ne
 8004e38:	2301      	movne	r3, #1
 8004e3a:	2300      	moveq	r3, #0
 8004e3c:	b2db      	uxtb	r3, r3
 8004e3e:	e00b      	b.n	8004e58 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8004e40:	68fb      	ldr	r3, [r7, #12]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	699b      	ldr	r3, [r3, #24]
 8004e46:	43da      	mvns	r2, r3
 8004e48:	68bb      	ldr	r3, [r7, #8]
 8004e4a:	4013      	ands	r3, r2
 8004e4c:	b29b      	uxth	r3, r3
 8004e4e:	2b00      	cmp	r3, #0
 8004e50:	bf14      	ite	ne
 8004e52:	2301      	movne	r3, #1
 8004e54:	2300      	moveq	r3, #0
 8004e56:	b2db      	uxtb	r3, r3
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	f47f af6d 	bne.w	8004d38 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 8004e5e:	2300      	movs	r3, #0
}
 8004e60:	4618      	mov	r0, r3
 8004e62:	3710      	adds	r7, #16
 8004e64:	46bd      	mov	sp, r7
 8004e66:	bd80      	pop	{r7, pc}

08004e68 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004e68:	b580      	push	{r7, lr}
 8004e6a:	b084      	sub	sp, #16
 8004e6c:	af00      	add	r7, sp, #0
 8004e6e:	60f8      	str	r0, [r7, #12]
 8004e70:	60b9      	str	r1, [r7, #8]
 8004e72:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004e74:	e034      	b.n	8004ee0 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004e76:	68f8      	ldr	r0, [r7, #12]
 8004e78:	f000 f8e3 	bl	8005042 <I2C_IsAcknowledgeFailed>
 8004e7c:	4603      	mov	r3, r0
 8004e7e:	2b00      	cmp	r3, #0
 8004e80:	d001      	beq.n	8004e86 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004e82:	2301      	movs	r3, #1
 8004e84:	e034      	b.n	8004ef0 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004e86:	68bb      	ldr	r3, [r7, #8]
 8004e88:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004e8c:	d028      	beq.n	8004ee0 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004e8e:	f7fd fda5 	bl	80029dc <HAL_GetTick>
 8004e92:	4602      	mov	r2, r0
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	1ad3      	subs	r3, r2, r3
 8004e98:	68ba      	ldr	r2, [r7, #8]
 8004e9a:	429a      	cmp	r2, r3
 8004e9c:	d302      	bcc.n	8004ea4 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8004e9e:	68bb      	ldr	r3, [r7, #8]
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d11d      	bne.n	8004ee0 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8004ea4:	68fb      	ldr	r3, [r7, #12]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	695b      	ldr	r3, [r3, #20]
 8004eaa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004eae:	2b80      	cmp	r3, #128	@ 0x80
 8004eb0:	d016      	beq.n	8004ee0 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004eb2:	68fb      	ldr	r3, [r7, #12]
 8004eb4:	2200      	movs	r2, #0
 8004eb6:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004eb8:	68fb      	ldr	r3, [r7, #12]
 8004eba:	2220      	movs	r2, #32
 8004ebc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004ec0:	68fb      	ldr	r3, [r7, #12]
 8004ec2:	2200      	movs	r2, #0
 8004ec4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004ec8:	68fb      	ldr	r3, [r7, #12]
 8004eca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ecc:	f043 0220 	orr.w	r2, r3, #32
 8004ed0:	68fb      	ldr	r3, [r7, #12]
 8004ed2:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004ed4:	68fb      	ldr	r3, [r7, #12]
 8004ed6:	2200      	movs	r2, #0
 8004ed8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004edc:	2301      	movs	r3, #1
 8004ede:	e007      	b.n	8004ef0 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004ee0:	68fb      	ldr	r3, [r7, #12]
 8004ee2:	681b      	ldr	r3, [r3, #0]
 8004ee4:	695b      	ldr	r3, [r3, #20]
 8004ee6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004eea:	2b80      	cmp	r3, #128	@ 0x80
 8004eec:	d1c3      	bne.n	8004e76 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8004eee:	2300      	movs	r3, #0
}
 8004ef0:	4618      	mov	r0, r3
 8004ef2:	3710      	adds	r7, #16
 8004ef4:	46bd      	mov	sp, r7
 8004ef6:	bd80      	pop	{r7, pc}

08004ef8 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004ef8:	b580      	push	{r7, lr}
 8004efa:	b084      	sub	sp, #16
 8004efc:	af00      	add	r7, sp, #0
 8004efe:	60f8      	str	r0, [r7, #12]
 8004f00:	60b9      	str	r1, [r7, #8]
 8004f02:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f04:	e034      	b.n	8004f70 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8004f06:	68f8      	ldr	r0, [r7, #12]
 8004f08:	f000 f89b 	bl	8005042 <I2C_IsAcknowledgeFailed>
 8004f0c:	4603      	mov	r3, r0
 8004f0e:	2b00      	cmp	r3, #0
 8004f10:	d001      	beq.n	8004f16 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8004f12:	2301      	movs	r3, #1
 8004f14:	e034      	b.n	8004f80 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004f16:	68bb      	ldr	r3, [r7, #8]
 8004f18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f1c:	d028      	beq.n	8004f70 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f1e:	f7fd fd5d 	bl	80029dc <HAL_GetTick>
 8004f22:	4602      	mov	r2, r0
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	1ad3      	subs	r3, r2, r3
 8004f28:	68ba      	ldr	r2, [r7, #8]
 8004f2a:	429a      	cmp	r2, r3
 8004f2c:	d302      	bcc.n	8004f34 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8004f2e:	68bb      	ldr	r3, [r7, #8]
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	d11d      	bne.n	8004f70 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	681b      	ldr	r3, [r3, #0]
 8004f38:	695b      	ldr	r3, [r3, #20]
 8004f3a:	f003 0304 	and.w	r3, r3, #4
 8004f3e:	2b04      	cmp	r3, #4
 8004f40:	d016      	beq.n	8004f70 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8004f42:	68fb      	ldr	r3, [r7, #12]
 8004f44:	2200      	movs	r2, #0
 8004f46:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8004f48:	68fb      	ldr	r3, [r7, #12]
 8004f4a:	2220      	movs	r2, #32
 8004f4c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004f50:	68fb      	ldr	r3, [r7, #12]
 8004f52:	2200      	movs	r2, #0
 8004f54:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004f58:	68fb      	ldr	r3, [r7, #12]
 8004f5a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f5c:	f043 0220 	orr.w	r2, r3, #32
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004f64:	68fb      	ldr	r3, [r7, #12]
 8004f66:	2200      	movs	r2, #0
 8004f68:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004f6c:	2301      	movs	r3, #1
 8004f6e:	e007      	b.n	8004f80 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004f70:	68fb      	ldr	r3, [r7, #12]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	695b      	ldr	r3, [r3, #20]
 8004f76:	f003 0304 	and.w	r3, r3, #4
 8004f7a:	2b04      	cmp	r3, #4
 8004f7c:	d1c3      	bne.n	8004f06 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8004f7e:	2300      	movs	r3, #0
}
 8004f80:	4618      	mov	r0, r3
 8004f82:	3710      	adds	r7, #16
 8004f84:	46bd      	mov	sp, r7
 8004f86:	bd80      	pop	{r7, pc}

08004f88 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8004f88:	b580      	push	{r7, lr}
 8004f8a:	b084      	sub	sp, #16
 8004f8c:	af00      	add	r7, sp, #0
 8004f8e:	60f8      	str	r0, [r7, #12]
 8004f90:	60b9      	str	r1, [r7, #8]
 8004f92:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8004f94:	e049      	b.n	800502a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8004f96:	68fb      	ldr	r3, [r7, #12]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	695b      	ldr	r3, [r3, #20]
 8004f9c:	f003 0310 	and.w	r3, r3, #16
 8004fa0:	2b10      	cmp	r3, #16
 8004fa2:	d119      	bne.n	8004fd8 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004fa4:	68fb      	ldr	r3, [r7, #12]
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	f06f 0210 	mvn.w	r2, #16
 8004fac:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	2200      	movs	r2, #0
 8004fb2:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8004fb4:	68fb      	ldr	r3, [r7, #12]
 8004fb6:	2220      	movs	r2, #32
 8004fb8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8004fbc:	68fb      	ldr	r3, [r7, #12]
 8004fbe:	2200      	movs	r2, #0
 8004fc0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8004fc4:	68fb      	ldr	r3, [r7, #12]
 8004fc6:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8004fc8:	68fb      	ldr	r3, [r7, #12]
 8004fca:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8004fcc:	68fb      	ldr	r3, [r7, #12]
 8004fce:	2200      	movs	r2, #0
 8004fd0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8004fd4:	2301      	movs	r3, #1
 8004fd6:	e030      	b.n	800503a <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004fd8:	f7fd fd00 	bl	80029dc <HAL_GetTick>
 8004fdc:	4602      	mov	r2, r0
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	1ad3      	subs	r3, r2, r3
 8004fe2:	68ba      	ldr	r2, [r7, #8]
 8004fe4:	429a      	cmp	r2, r3
 8004fe6:	d302      	bcc.n	8004fee <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8004fe8:	68bb      	ldr	r3, [r7, #8]
 8004fea:	2b00      	cmp	r3, #0
 8004fec:	d11d      	bne.n	800502a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 8004fee:	68fb      	ldr	r3, [r7, #12]
 8004ff0:	681b      	ldr	r3, [r3, #0]
 8004ff2:	695b      	ldr	r3, [r3, #20]
 8004ff4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004ff8:	2b40      	cmp	r3, #64	@ 0x40
 8004ffa:	d016      	beq.n	800502a <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	2200      	movs	r2, #0
 8005000:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8005002:	68fb      	ldr	r3, [r7, #12]
 8005004:	2220      	movs	r2, #32
 8005006:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800500a:	68fb      	ldr	r3, [r7, #12]
 800500c:	2200      	movs	r2, #0
 800500e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005012:	68fb      	ldr	r3, [r7, #12]
 8005014:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005016:	f043 0220 	orr.w	r2, r3, #32
 800501a:	68fb      	ldr	r3, [r7, #12]
 800501c:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 800501e:	68fb      	ldr	r3, [r7, #12]
 8005020:	2200      	movs	r2, #0
 8005022:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 8005026:	2301      	movs	r3, #1
 8005028:	e007      	b.n	800503a <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800502a:	68fb      	ldr	r3, [r7, #12]
 800502c:	681b      	ldr	r3, [r3, #0]
 800502e:	695b      	ldr	r3, [r3, #20]
 8005030:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005034:	2b40      	cmp	r3, #64	@ 0x40
 8005036:	d1ae      	bne.n	8004f96 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8005038:	2300      	movs	r3, #0
}
 800503a:	4618      	mov	r0, r3
 800503c:	3710      	adds	r7, #16
 800503e:	46bd      	mov	sp, r7
 8005040:	bd80      	pop	{r7, pc}

08005042 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 8005042:	b480      	push	{r7}
 8005044:	b083      	sub	sp, #12
 8005046:	af00      	add	r7, sp, #0
 8005048:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	681b      	ldr	r3, [r3, #0]
 800504e:	695b      	ldr	r3, [r3, #20]
 8005050:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005054:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005058:	d11b      	bne.n	8005092 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800505a:	687b      	ldr	r3, [r7, #4]
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005062:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8005064:	687b      	ldr	r3, [r7, #4]
 8005066:	2200      	movs	r2, #0
 8005068:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	2220      	movs	r2, #32
 800506e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	2200      	movs	r2, #0
 8005076:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800507e:	f043 0204 	orr.w	r2, r3, #4
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	2200      	movs	r2, #0
 800508a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 800508e:	2301      	movs	r3, #1
 8005090:	e000      	b.n	8005094 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8005092:	2300      	movs	r3, #0
}
 8005094:	4618      	mov	r0, r3
 8005096:	370c      	adds	r7, #12
 8005098:	46bd      	mov	sp, r7
 800509a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800509e:	4770      	bx	lr

080050a0 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 80050a0:	b580      	push	{r7, lr}
 80050a2:	b082      	sub	sp, #8
 80050a4:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 80050a6:	2300      	movs	r3, #0
 80050a8:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 80050aa:	2300      	movs	r3, #0
 80050ac:	603b      	str	r3, [r7, #0]
 80050ae:	4b20      	ldr	r3, [pc, #128]	@ (8005130 <HAL_PWREx_EnableOverDrive+0x90>)
 80050b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050b2:	4a1f      	ldr	r2, [pc, #124]	@ (8005130 <HAL_PWREx_EnableOverDrive+0x90>)
 80050b4:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80050b8:	6413      	str	r3, [r2, #64]	@ 0x40
 80050ba:	4b1d      	ldr	r3, [pc, #116]	@ (8005130 <HAL_PWREx_EnableOverDrive+0x90>)
 80050bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050be:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80050c2:	603b      	str	r3, [r7, #0]
 80050c4:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 80050c6:	4b1b      	ldr	r3, [pc, #108]	@ (8005134 <HAL_PWREx_EnableOverDrive+0x94>)
 80050c8:	2201      	movs	r2, #1
 80050ca:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80050cc:	f7fd fc86 	bl	80029dc <HAL_GetTick>
 80050d0:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80050d2:	e009      	b.n	80050e8 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80050d4:	f7fd fc82 	bl	80029dc <HAL_GetTick>
 80050d8:	4602      	mov	r2, r0
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	1ad3      	subs	r3, r2, r3
 80050de:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80050e2:	d901      	bls.n	80050e8 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 80050e4:	2303      	movs	r3, #3
 80050e6:	e01f      	b.n	8005128 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80050e8:	4b13      	ldr	r3, [pc, #76]	@ (8005138 <HAL_PWREx_EnableOverDrive+0x98>)
 80050ea:	685b      	ldr	r3, [r3, #4]
 80050ec:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80050f0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80050f4:	d1ee      	bne.n	80050d4 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80050f6:	4b11      	ldr	r3, [pc, #68]	@ (800513c <HAL_PWREx_EnableOverDrive+0x9c>)
 80050f8:	2201      	movs	r2, #1
 80050fa:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80050fc:	f7fd fc6e 	bl	80029dc <HAL_GetTick>
 8005100:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005102:	e009      	b.n	8005118 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005104:	f7fd fc6a 	bl	80029dc <HAL_GetTick>
 8005108:	4602      	mov	r2, r0
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	1ad3      	subs	r3, r2, r3
 800510e:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005112:	d901      	bls.n	8005118 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8005114:	2303      	movs	r3, #3
 8005116:	e007      	b.n	8005128 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005118:	4b07      	ldr	r3, [pc, #28]	@ (8005138 <HAL_PWREx_EnableOverDrive+0x98>)
 800511a:	685b      	ldr	r3, [r3, #4]
 800511c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005120:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005124:	d1ee      	bne.n	8005104 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 8005126:	2300      	movs	r3, #0
}
 8005128:	4618      	mov	r0, r3
 800512a:	3708      	adds	r7, #8
 800512c:	46bd      	mov	sp, r7
 800512e:	bd80      	pop	{r7, pc}
 8005130:	40023800 	.word	0x40023800
 8005134:	420e0040 	.word	0x420e0040
 8005138:	40007000 	.word	0x40007000
 800513c:	420e0044 	.word	0x420e0044

08005140 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8005140:	b580      	push	{r7, lr}
 8005142:	b084      	sub	sp, #16
 8005144:	af00      	add	r7, sp, #0
 8005146:	6078      	str	r0, [r7, #4]
 8005148:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	2b00      	cmp	r3, #0
 800514e:	d101      	bne.n	8005154 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005150:	2301      	movs	r3, #1
 8005152:	e0cc      	b.n	80052ee <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005154:	4b68      	ldr	r3, [pc, #416]	@ (80052f8 <HAL_RCC_ClockConfig+0x1b8>)
 8005156:	681b      	ldr	r3, [r3, #0]
 8005158:	f003 030f 	and.w	r3, r3, #15
 800515c:	683a      	ldr	r2, [r7, #0]
 800515e:	429a      	cmp	r2, r3
 8005160:	d90c      	bls.n	800517c <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005162:	4b65      	ldr	r3, [pc, #404]	@ (80052f8 <HAL_RCC_ClockConfig+0x1b8>)
 8005164:	683a      	ldr	r2, [r7, #0]
 8005166:	b2d2      	uxtb	r2, r2
 8005168:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800516a:	4b63      	ldr	r3, [pc, #396]	@ (80052f8 <HAL_RCC_ClockConfig+0x1b8>)
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	f003 030f 	and.w	r3, r3, #15
 8005172:	683a      	ldr	r2, [r7, #0]
 8005174:	429a      	cmp	r2, r3
 8005176:	d001      	beq.n	800517c <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8005178:	2301      	movs	r3, #1
 800517a:	e0b8      	b.n	80052ee <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	681b      	ldr	r3, [r3, #0]
 8005180:	f003 0302 	and.w	r3, r3, #2
 8005184:	2b00      	cmp	r3, #0
 8005186:	d020      	beq.n	80051ca <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	681b      	ldr	r3, [r3, #0]
 800518c:	f003 0304 	and.w	r3, r3, #4
 8005190:	2b00      	cmp	r3, #0
 8005192:	d005      	beq.n	80051a0 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005194:	4b59      	ldr	r3, [pc, #356]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 8005196:	689b      	ldr	r3, [r3, #8]
 8005198:	4a58      	ldr	r2, [pc, #352]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 800519a:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800519e:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	f003 0308 	and.w	r3, r3, #8
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d005      	beq.n	80051b8 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80051ac:	4b53      	ldr	r3, [pc, #332]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80051ae:	689b      	ldr	r3, [r3, #8]
 80051b0:	4a52      	ldr	r2, [pc, #328]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80051b2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80051b6:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80051b8:	4b50      	ldr	r3, [pc, #320]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80051ba:	689b      	ldr	r3, [r3, #8]
 80051bc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	689b      	ldr	r3, [r3, #8]
 80051c4:	494d      	ldr	r1, [pc, #308]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80051c6:	4313      	orrs	r3, r2
 80051c8:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	f003 0301 	and.w	r3, r3, #1
 80051d2:	2b00      	cmp	r3, #0
 80051d4:	d044      	beq.n	8005260 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80051d6:	687b      	ldr	r3, [r7, #4]
 80051d8:	685b      	ldr	r3, [r3, #4]
 80051da:	2b01      	cmp	r3, #1
 80051dc:	d107      	bne.n	80051ee <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80051de:	4b47      	ldr	r3, [pc, #284]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80051e6:	2b00      	cmp	r3, #0
 80051e8:	d119      	bne.n	800521e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80051ea:	2301      	movs	r3, #1
 80051ec:	e07f      	b.n	80052ee <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	685b      	ldr	r3, [r3, #4]
 80051f2:	2b02      	cmp	r3, #2
 80051f4:	d003      	beq.n	80051fe <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80051fa:	2b03      	cmp	r3, #3
 80051fc:	d107      	bne.n	800520e <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80051fe:	4b3f      	ldr	r3, [pc, #252]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005206:	2b00      	cmp	r3, #0
 8005208:	d109      	bne.n	800521e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800520a:	2301      	movs	r3, #1
 800520c:	e06f      	b.n	80052ee <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800520e:	4b3b      	ldr	r3, [pc, #236]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 8005210:	681b      	ldr	r3, [r3, #0]
 8005212:	f003 0302 	and.w	r3, r3, #2
 8005216:	2b00      	cmp	r3, #0
 8005218:	d101      	bne.n	800521e <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800521a:	2301      	movs	r3, #1
 800521c:	e067      	b.n	80052ee <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800521e:	4b37      	ldr	r3, [pc, #220]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 8005220:	689b      	ldr	r3, [r3, #8]
 8005222:	f023 0203 	bic.w	r2, r3, #3
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	685b      	ldr	r3, [r3, #4]
 800522a:	4934      	ldr	r1, [pc, #208]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 800522c:	4313      	orrs	r3, r2
 800522e:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8005230:	f7fd fbd4 	bl	80029dc <HAL_GetTick>
 8005234:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005236:	e00a      	b.n	800524e <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005238:	f7fd fbd0 	bl	80029dc <HAL_GetTick>
 800523c:	4602      	mov	r2, r0
 800523e:	68fb      	ldr	r3, [r7, #12]
 8005240:	1ad3      	subs	r3, r2, r3
 8005242:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005246:	4293      	cmp	r3, r2
 8005248:	d901      	bls.n	800524e <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 800524a:	2303      	movs	r3, #3
 800524c:	e04f      	b.n	80052ee <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800524e:	4b2b      	ldr	r3, [pc, #172]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 8005250:	689b      	ldr	r3, [r3, #8]
 8005252:	f003 020c 	and.w	r2, r3, #12
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	685b      	ldr	r3, [r3, #4]
 800525a:	009b      	lsls	r3, r3, #2
 800525c:	429a      	cmp	r2, r3
 800525e:	d1eb      	bne.n	8005238 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005260:	4b25      	ldr	r3, [pc, #148]	@ (80052f8 <HAL_RCC_ClockConfig+0x1b8>)
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	f003 030f 	and.w	r3, r3, #15
 8005268:	683a      	ldr	r2, [r7, #0]
 800526a:	429a      	cmp	r2, r3
 800526c:	d20c      	bcs.n	8005288 <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800526e:	4b22      	ldr	r3, [pc, #136]	@ (80052f8 <HAL_RCC_ClockConfig+0x1b8>)
 8005270:	683a      	ldr	r2, [r7, #0]
 8005272:	b2d2      	uxtb	r2, r2
 8005274:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005276:	4b20      	ldr	r3, [pc, #128]	@ (80052f8 <HAL_RCC_ClockConfig+0x1b8>)
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	f003 030f 	and.w	r3, r3, #15
 800527e:	683a      	ldr	r2, [r7, #0]
 8005280:	429a      	cmp	r2, r3
 8005282:	d001      	beq.n	8005288 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8005284:	2301      	movs	r3, #1
 8005286:	e032      	b.n	80052ee <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005288:	687b      	ldr	r3, [r7, #4]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	f003 0304 	and.w	r3, r3, #4
 8005290:	2b00      	cmp	r3, #0
 8005292:	d008      	beq.n	80052a6 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005294:	4b19      	ldr	r3, [pc, #100]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 8005296:	689b      	ldr	r3, [r3, #8]
 8005298:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 800529c:	687b      	ldr	r3, [r7, #4]
 800529e:	68db      	ldr	r3, [r3, #12]
 80052a0:	4916      	ldr	r1, [pc, #88]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80052a2:	4313      	orrs	r3, r2
 80052a4:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	681b      	ldr	r3, [r3, #0]
 80052aa:	f003 0308 	and.w	r3, r3, #8
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d009      	beq.n	80052c6 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80052b2:	4b12      	ldr	r3, [pc, #72]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80052b4:	689b      	ldr	r3, [r3, #8]
 80052b6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	691b      	ldr	r3, [r3, #16]
 80052be:	00db      	lsls	r3, r3, #3
 80052c0:	490e      	ldr	r1, [pc, #56]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80052c2:	4313      	orrs	r3, r2
 80052c4:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 80052c6:	f000 f841 	bl	800534c <HAL_RCC_GetSysClockFreq>
 80052ca:	4602      	mov	r2, r0
 80052cc:	4b0b      	ldr	r3, [pc, #44]	@ (80052fc <HAL_RCC_ClockConfig+0x1bc>)
 80052ce:	689b      	ldr	r3, [r3, #8]
 80052d0:	091b      	lsrs	r3, r3, #4
 80052d2:	f003 030f 	and.w	r3, r3, #15
 80052d6:	490a      	ldr	r1, [pc, #40]	@ (8005300 <HAL_RCC_ClockConfig+0x1c0>)
 80052d8:	5ccb      	ldrb	r3, [r1, r3]
 80052da:	fa22 f303 	lsr.w	r3, r2, r3
 80052de:	4a09      	ldr	r2, [pc, #36]	@ (8005304 <HAL_RCC_ClockConfig+0x1c4>)
 80052e0:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 80052e2:	4b09      	ldr	r3, [pc, #36]	@ (8005308 <HAL_RCC_ClockConfig+0x1c8>)
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	4618      	mov	r0, r3
 80052e8:	f7fd fb34 	bl	8002954 <HAL_InitTick>

  return HAL_OK;
 80052ec:	2300      	movs	r3, #0
}
 80052ee:	4618      	mov	r0, r3
 80052f0:	3710      	adds	r7, #16
 80052f2:	46bd      	mov	sp, r7
 80052f4:	bd80      	pop	{r7, pc}
 80052f6:	bf00      	nop
 80052f8:	40023c00 	.word	0x40023c00
 80052fc:	40023800 	.word	0x40023800
 8005300:	08027ef8 	.word	0x08027ef8
 8005304:	20000014 	.word	0x20000014
 8005308:	20000020 	.word	0x20000020

0800530c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800530c:	b480      	push	{r7}
 800530e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8005310:	4b03      	ldr	r3, [pc, #12]	@ (8005320 <HAL_RCC_GetHCLKFreq+0x14>)
 8005312:	681b      	ldr	r3, [r3, #0]
}
 8005314:	4618      	mov	r0, r3
 8005316:	46bd      	mov	sp, r7
 8005318:	f85d 7b04 	ldr.w	r7, [sp], #4
 800531c:	4770      	bx	lr
 800531e:	bf00      	nop
 8005320:	20000014 	.word	0x20000014

08005324 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8005324:	b580      	push	{r7, lr}
 8005326:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 8005328:	f7ff fff0 	bl	800530c <HAL_RCC_GetHCLKFreq>
 800532c:	4602      	mov	r2, r0
 800532e:	4b05      	ldr	r3, [pc, #20]	@ (8005344 <HAL_RCC_GetPCLK1Freq+0x20>)
 8005330:	689b      	ldr	r3, [r3, #8]
 8005332:	0a9b      	lsrs	r3, r3, #10
 8005334:	f003 0307 	and.w	r3, r3, #7
 8005338:	4903      	ldr	r1, [pc, #12]	@ (8005348 <HAL_RCC_GetPCLK1Freq+0x24>)
 800533a:	5ccb      	ldrb	r3, [r1, r3]
 800533c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8005340:	4618      	mov	r0, r3
 8005342:	bd80      	pop	{r7, pc}
 8005344:	40023800 	.word	0x40023800
 8005348:	08027f08 	.word	0x08027f08

0800534c <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800534c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005350:	b0ae      	sub	sp, #184	@ 0xb8
 8005352:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8005354:	2300      	movs	r3, #0
 8005356:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 800535a:	2300      	movs	r3, #0
 800535c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 8005360:	2300      	movs	r3, #0
 8005362:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 8005366:	2300      	movs	r3, #0
 8005368:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 800536c:	2300      	movs	r3, #0
 800536e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005372:	4bcb      	ldr	r3, [pc, #812]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 8005374:	689b      	ldr	r3, [r3, #8]
 8005376:	f003 030c 	and.w	r3, r3, #12
 800537a:	2b0c      	cmp	r3, #12
 800537c:	f200 8206 	bhi.w	800578c <HAL_RCC_GetSysClockFreq+0x440>
 8005380:	a201      	add	r2, pc, #4	@ (adr r2, 8005388 <HAL_RCC_GetSysClockFreq+0x3c>)
 8005382:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005386:	bf00      	nop
 8005388:	080053bd 	.word	0x080053bd
 800538c:	0800578d 	.word	0x0800578d
 8005390:	0800578d 	.word	0x0800578d
 8005394:	0800578d 	.word	0x0800578d
 8005398:	080053c5 	.word	0x080053c5
 800539c:	0800578d 	.word	0x0800578d
 80053a0:	0800578d 	.word	0x0800578d
 80053a4:	0800578d 	.word	0x0800578d
 80053a8:	080053cd 	.word	0x080053cd
 80053ac:	0800578d 	.word	0x0800578d
 80053b0:	0800578d 	.word	0x0800578d
 80053b4:	0800578d 	.word	0x0800578d
 80053b8:	080055bd 	.word	0x080055bd
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80053bc:	4bb9      	ldr	r3, [pc, #740]	@ (80056a4 <HAL_RCC_GetSysClockFreq+0x358>)
 80053be:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80053c2:	e1e7      	b.n	8005794 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 80053c4:	4bb8      	ldr	r3, [pc, #736]	@ (80056a8 <HAL_RCC_GetSysClockFreq+0x35c>)
 80053c6:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80053ca:	e1e3      	b.n	8005794 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80053cc:	4bb4      	ldr	r3, [pc, #720]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 80053ce:	685b      	ldr	r3, [r3, #4]
 80053d0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80053d4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80053d8:	4bb1      	ldr	r3, [pc, #708]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 80053da:	685b      	ldr	r3, [r3, #4]
 80053dc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80053e0:	2b00      	cmp	r3, #0
 80053e2:	d071      	beq.n	80054c8 <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80053e4:	4bae      	ldr	r3, [pc, #696]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 80053e6:	685b      	ldr	r3, [r3, #4]
 80053e8:	099b      	lsrs	r3, r3, #6
 80053ea:	2200      	movs	r2, #0
 80053ec:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80053f0:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80053f4:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80053f8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80053fc:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005400:	2300      	movs	r3, #0
 8005402:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8005406:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800540a:	4622      	mov	r2, r4
 800540c:	462b      	mov	r3, r5
 800540e:	f04f 0000 	mov.w	r0, #0
 8005412:	f04f 0100 	mov.w	r1, #0
 8005416:	0159      	lsls	r1, r3, #5
 8005418:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800541c:	0150      	lsls	r0, r2, #5
 800541e:	4602      	mov	r2, r0
 8005420:	460b      	mov	r3, r1
 8005422:	4621      	mov	r1, r4
 8005424:	1a51      	subs	r1, r2, r1
 8005426:	6439      	str	r1, [r7, #64]	@ 0x40
 8005428:	4629      	mov	r1, r5
 800542a:	eb63 0301 	sbc.w	r3, r3, r1
 800542e:	647b      	str	r3, [r7, #68]	@ 0x44
 8005430:	f04f 0200 	mov.w	r2, #0
 8005434:	f04f 0300 	mov.w	r3, #0
 8005438:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 800543c:	4649      	mov	r1, r9
 800543e:	018b      	lsls	r3, r1, #6
 8005440:	4641      	mov	r1, r8
 8005442:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005446:	4641      	mov	r1, r8
 8005448:	018a      	lsls	r2, r1, #6
 800544a:	4641      	mov	r1, r8
 800544c:	1a51      	subs	r1, r2, r1
 800544e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005450:	4649      	mov	r1, r9
 8005452:	eb63 0301 	sbc.w	r3, r3, r1
 8005456:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005458:	f04f 0200 	mov.w	r2, #0
 800545c:	f04f 0300 	mov.w	r3, #0
 8005460:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8005464:	4649      	mov	r1, r9
 8005466:	00cb      	lsls	r3, r1, #3
 8005468:	4641      	mov	r1, r8
 800546a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800546e:	4641      	mov	r1, r8
 8005470:	00ca      	lsls	r2, r1, #3
 8005472:	4610      	mov	r0, r2
 8005474:	4619      	mov	r1, r3
 8005476:	4603      	mov	r3, r0
 8005478:	4622      	mov	r2, r4
 800547a:	189b      	adds	r3, r3, r2
 800547c:	633b      	str	r3, [r7, #48]	@ 0x30
 800547e:	462b      	mov	r3, r5
 8005480:	460a      	mov	r2, r1
 8005482:	eb42 0303 	adc.w	r3, r2, r3
 8005486:	637b      	str	r3, [r7, #52]	@ 0x34
 8005488:	f04f 0200 	mov.w	r2, #0
 800548c:	f04f 0300 	mov.w	r3, #0
 8005490:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8005494:	4629      	mov	r1, r5
 8005496:	024b      	lsls	r3, r1, #9
 8005498:	4621      	mov	r1, r4
 800549a:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800549e:	4621      	mov	r1, r4
 80054a0:	024a      	lsls	r2, r1, #9
 80054a2:	4610      	mov	r0, r2
 80054a4:	4619      	mov	r1, r3
 80054a6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 80054aa:	2200      	movs	r2, #0
 80054ac:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80054b0:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 80054b4:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 80054b8:	f7fb fba0 	bl	8000bfc <__aeabi_uldivmod>
 80054bc:	4602      	mov	r2, r0
 80054be:	460b      	mov	r3, r1
 80054c0:	4613      	mov	r3, r2
 80054c2:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80054c6:	e067      	b.n	8005598 <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80054c8:	4b75      	ldr	r3, [pc, #468]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 80054ca:	685b      	ldr	r3, [r3, #4]
 80054cc:	099b      	lsrs	r3, r3, #6
 80054ce:	2200      	movs	r2, #0
 80054d0:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80054d4:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 80054d8:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80054dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80054e0:	67bb      	str	r3, [r7, #120]	@ 0x78
 80054e2:	2300      	movs	r3, #0
 80054e4:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80054e6:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 80054ea:	4622      	mov	r2, r4
 80054ec:	462b      	mov	r3, r5
 80054ee:	f04f 0000 	mov.w	r0, #0
 80054f2:	f04f 0100 	mov.w	r1, #0
 80054f6:	0159      	lsls	r1, r3, #5
 80054f8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80054fc:	0150      	lsls	r0, r2, #5
 80054fe:	4602      	mov	r2, r0
 8005500:	460b      	mov	r3, r1
 8005502:	4621      	mov	r1, r4
 8005504:	1a51      	subs	r1, r2, r1
 8005506:	62b9      	str	r1, [r7, #40]	@ 0x28
 8005508:	4629      	mov	r1, r5
 800550a:	eb63 0301 	sbc.w	r3, r3, r1
 800550e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8005510:	f04f 0200 	mov.w	r2, #0
 8005514:	f04f 0300 	mov.w	r3, #0
 8005518:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 800551c:	4649      	mov	r1, r9
 800551e:	018b      	lsls	r3, r1, #6
 8005520:	4641      	mov	r1, r8
 8005522:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005526:	4641      	mov	r1, r8
 8005528:	018a      	lsls	r2, r1, #6
 800552a:	4641      	mov	r1, r8
 800552c:	ebb2 0a01 	subs.w	sl, r2, r1
 8005530:	4649      	mov	r1, r9
 8005532:	eb63 0b01 	sbc.w	fp, r3, r1
 8005536:	f04f 0200 	mov.w	r2, #0
 800553a:	f04f 0300 	mov.w	r3, #0
 800553e:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8005542:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005546:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800554a:	4692      	mov	sl, r2
 800554c:	469b      	mov	fp, r3
 800554e:	4623      	mov	r3, r4
 8005550:	eb1a 0303 	adds.w	r3, sl, r3
 8005554:	623b      	str	r3, [r7, #32]
 8005556:	462b      	mov	r3, r5
 8005558:	eb4b 0303 	adc.w	r3, fp, r3
 800555c:	627b      	str	r3, [r7, #36]	@ 0x24
 800555e:	f04f 0200 	mov.w	r2, #0
 8005562:	f04f 0300 	mov.w	r3, #0
 8005566:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 800556a:	4629      	mov	r1, r5
 800556c:	028b      	lsls	r3, r1, #10
 800556e:	4621      	mov	r1, r4
 8005570:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005574:	4621      	mov	r1, r4
 8005576:	028a      	lsls	r2, r1, #10
 8005578:	4610      	mov	r0, r2
 800557a:	4619      	mov	r1, r3
 800557c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005580:	2200      	movs	r2, #0
 8005582:	673b      	str	r3, [r7, #112]	@ 0x70
 8005584:	677a      	str	r2, [r7, #116]	@ 0x74
 8005586:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800558a:	f7fb fb37 	bl	8000bfc <__aeabi_uldivmod>
 800558e:	4602      	mov	r2, r0
 8005590:	460b      	mov	r3, r1
 8005592:	4613      	mov	r3, r2
 8005594:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8005598:	4b41      	ldr	r3, [pc, #260]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 800559a:	685b      	ldr	r3, [r3, #4]
 800559c:	0c1b      	lsrs	r3, r3, #16
 800559e:	f003 0303 	and.w	r3, r3, #3
 80055a2:	3301      	adds	r3, #1
 80055a4:	005b      	lsls	r3, r3, #1
 80055a6:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 80055aa:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 80055ae:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 80055b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80055b6:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 80055ba:	e0eb      	b.n	8005794 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80055bc:	4b38      	ldr	r3, [pc, #224]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 80055be:	685b      	ldr	r3, [r3, #4]
 80055c0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80055c4:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80055c8:	4b35      	ldr	r3, [pc, #212]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 80055ca:	685b      	ldr	r3, [r3, #4]
 80055cc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80055d0:	2b00      	cmp	r3, #0
 80055d2:	d06b      	beq.n	80056ac <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80055d4:	4b32      	ldr	r3, [pc, #200]	@ (80056a0 <HAL_RCC_GetSysClockFreq+0x354>)
 80055d6:	685b      	ldr	r3, [r3, #4]
 80055d8:	099b      	lsrs	r3, r3, #6
 80055da:	2200      	movs	r2, #0
 80055dc:	66bb      	str	r3, [r7, #104]	@ 0x68
 80055de:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80055e0:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80055e2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80055e6:	663b      	str	r3, [r7, #96]	@ 0x60
 80055e8:	2300      	movs	r3, #0
 80055ea:	667b      	str	r3, [r7, #100]	@ 0x64
 80055ec:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80055f0:	4622      	mov	r2, r4
 80055f2:	462b      	mov	r3, r5
 80055f4:	f04f 0000 	mov.w	r0, #0
 80055f8:	f04f 0100 	mov.w	r1, #0
 80055fc:	0159      	lsls	r1, r3, #5
 80055fe:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005602:	0150      	lsls	r0, r2, #5
 8005604:	4602      	mov	r2, r0
 8005606:	460b      	mov	r3, r1
 8005608:	4621      	mov	r1, r4
 800560a:	1a51      	subs	r1, r2, r1
 800560c:	61b9      	str	r1, [r7, #24]
 800560e:	4629      	mov	r1, r5
 8005610:	eb63 0301 	sbc.w	r3, r3, r1
 8005614:	61fb      	str	r3, [r7, #28]
 8005616:	f04f 0200 	mov.w	r2, #0
 800561a:	f04f 0300 	mov.w	r3, #0
 800561e:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8005622:	4659      	mov	r1, fp
 8005624:	018b      	lsls	r3, r1, #6
 8005626:	4651      	mov	r1, sl
 8005628:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800562c:	4651      	mov	r1, sl
 800562e:	018a      	lsls	r2, r1, #6
 8005630:	4651      	mov	r1, sl
 8005632:	ebb2 0801 	subs.w	r8, r2, r1
 8005636:	4659      	mov	r1, fp
 8005638:	eb63 0901 	sbc.w	r9, r3, r1
 800563c:	f04f 0200 	mov.w	r2, #0
 8005640:	f04f 0300 	mov.w	r3, #0
 8005644:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005648:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800564c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005650:	4690      	mov	r8, r2
 8005652:	4699      	mov	r9, r3
 8005654:	4623      	mov	r3, r4
 8005656:	eb18 0303 	adds.w	r3, r8, r3
 800565a:	613b      	str	r3, [r7, #16]
 800565c:	462b      	mov	r3, r5
 800565e:	eb49 0303 	adc.w	r3, r9, r3
 8005662:	617b      	str	r3, [r7, #20]
 8005664:	f04f 0200 	mov.w	r2, #0
 8005668:	f04f 0300 	mov.w	r3, #0
 800566c:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8005670:	4629      	mov	r1, r5
 8005672:	024b      	lsls	r3, r1, #9
 8005674:	4621      	mov	r1, r4
 8005676:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800567a:	4621      	mov	r1, r4
 800567c:	024a      	lsls	r2, r1, #9
 800567e:	4610      	mov	r0, r2
 8005680:	4619      	mov	r1, r3
 8005682:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005686:	2200      	movs	r2, #0
 8005688:	65bb      	str	r3, [r7, #88]	@ 0x58
 800568a:	65fa      	str	r2, [r7, #92]	@ 0x5c
 800568c:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005690:	f7fb fab4 	bl	8000bfc <__aeabi_uldivmod>
 8005694:	4602      	mov	r2, r0
 8005696:	460b      	mov	r3, r1
 8005698:	4613      	mov	r3, r2
 800569a:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800569e:	e065      	b.n	800576c <HAL_RCC_GetSysClockFreq+0x420>
 80056a0:	40023800 	.word	0x40023800
 80056a4:	00f42400 	.word	0x00f42400
 80056a8:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056ac:	4b3d      	ldr	r3, [pc, #244]	@ (80057a4 <HAL_RCC_GetSysClockFreq+0x458>)
 80056ae:	685b      	ldr	r3, [r3, #4]
 80056b0:	099b      	lsrs	r3, r3, #6
 80056b2:	2200      	movs	r2, #0
 80056b4:	4618      	mov	r0, r3
 80056b6:	4611      	mov	r1, r2
 80056b8:	f3c0 0308 	ubfx	r3, r0, #0, #9
 80056bc:	653b      	str	r3, [r7, #80]	@ 0x50
 80056be:	2300      	movs	r3, #0
 80056c0:	657b      	str	r3, [r7, #84]	@ 0x54
 80056c2:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 80056c6:	4642      	mov	r2, r8
 80056c8:	464b      	mov	r3, r9
 80056ca:	f04f 0000 	mov.w	r0, #0
 80056ce:	f04f 0100 	mov.w	r1, #0
 80056d2:	0159      	lsls	r1, r3, #5
 80056d4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80056d8:	0150      	lsls	r0, r2, #5
 80056da:	4602      	mov	r2, r0
 80056dc:	460b      	mov	r3, r1
 80056de:	4641      	mov	r1, r8
 80056e0:	1a51      	subs	r1, r2, r1
 80056e2:	60b9      	str	r1, [r7, #8]
 80056e4:	4649      	mov	r1, r9
 80056e6:	eb63 0301 	sbc.w	r3, r3, r1
 80056ea:	60fb      	str	r3, [r7, #12]
 80056ec:	f04f 0200 	mov.w	r2, #0
 80056f0:	f04f 0300 	mov.w	r3, #0
 80056f4:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 80056f8:	4659      	mov	r1, fp
 80056fa:	018b      	lsls	r3, r1, #6
 80056fc:	4651      	mov	r1, sl
 80056fe:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005702:	4651      	mov	r1, sl
 8005704:	018a      	lsls	r2, r1, #6
 8005706:	4651      	mov	r1, sl
 8005708:	1a54      	subs	r4, r2, r1
 800570a:	4659      	mov	r1, fp
 800570c:	eb63 0501 	sbc.w	r5, r3, r1
 8005710:	f04f 0200 	mov.w	r2, #0
 8005714:	f04f 0300 	mov.w	r3, #0
 8005718:	00eb      	lsls	r3, r5, #3
 800571a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800571e:	00e2      	lsls	r2, r4, #3
 8005720:	4614      	mov	r4, r2
 8005722:	461d      	mov	r5, r3
 8005724:	4643      	mov	r3, r8
 8005726:	18e3      	adds	r3, r4, r3
 8005728:	603b      	str	r3, [r7, #0]
 800572a:	464b      	mov	r3, r9
 800572c:	eb45 0303 	adc.w	r3, r5, r3
 8005730:	607b      	str	r3, [r7, #4]
 8005732:	f04f 0200 	mov.w	r2, #0
 8005736:	f04f 0300 	mov.w	r3, #0
 800573a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800573e:	4629      	mov	r1, r5
 8005740:	028b      	lsls	r3, r1, #10
 8005742:	4621      	mov	r1, r4
 8005744:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005748:	4621      	mov	r1, r4
 800574a:	028a      	lsls	r2, r1, #10
 800574c:	4610      	mov	r0, r2
 800574e:	4619      	mov	r1, r3
 8005750:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005754:	2200      	movs	r2, #0
 8005756:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005758:	64fa      	str	r2, [r7, #76]	@ 0x4c
 800575a:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800575e:	f7fb fa4d 	bl	8000bfc <__aeabi_uldivmod>
 8005762:	4602      	mov	r2, r0
 8005764:	460b      	mov	r3, r1
 8005766:	4613      	mov	r3, r2
 8005768:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 800576c:	4b0d      	ldr	r3, [pc, #52]	@ (80057a4 <HAL_RCC_GetSysClockFreq+0x458>)
 800576e:	685b      	ldr	r3, [r3, #4]
 8005770:	0f1b      	lsrs	r3, r3, #28
 8005772:	f003 0307 	and.w	r3, r3, #7
 8005776:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 800577a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800577e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005782:	fbb2 f3f3 	udiv	r3, r2, r3
 8005786:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800578a:	e003      	b.n	8005794 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800578c:	4b06      	ldr	r3, [pc, #24]	@ (80057a8 <HAL_RCC_GetSysClockFreq+0x45c>)
 800578e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005792:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005794:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 8005798:	4618      	mov	r0, r3
 800579a:	37b8      	adds	r7, #184	@ 0xb8
 800579c:	46bd      	mov	sp, r7
 800579e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80057a2:	bf00      	nop
 80057a4:	40023800 	.word	0x40023800
 80057a8:	00f42400 	.word	0x00f42400

080057ac <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80057ac:	b580      	push	{r7, lr}
 80057ae:	b086      	sub	sp, #24
 80057b0:	af00      	add	r7, sp, #0
 80057b2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	2b00      	cmp	r3, #0
 80057b8:	d101      	bne.n	80057be <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80057ba:	2301      	movs	r3, #1
 80057bc:	e28d      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	681b      	ldr	r3, [r3, #0]
 80057c2:	f003 0301 	and.w	r3, r3, #1
 80057c6:	2b00      	cmp	r3, #0
 80057c8:	f000 8083 	beq.w	80058d2 <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 80057cc:	4b94      	ldr	r3, [pc, #592]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80057ce:	689b      	ldr	r3, [r3, #8]
 80057d0:	f003 030c 	and.w	r3, r3, #12
 80057d4:	2b04      	cmp	r3, #4
 80057d6:	d019      	beq.n	800580c <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 80057d8:	4b91      	ldr	r3, [pc, #580]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80057da:	689b      	ldr	r3, [r3, #8]
 80057dc:	f003 030c 	and.w	r3, r3, #12
        || \
 80057e0:	2b08      	cmp	r3, #8
 80057e2:	d106      	bne.n	80057f2 <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 80057e4:	4b8e      	ldr	r3, [pc, #568]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80057e6:	685b      	ldr	r3, [r3, #4]
 80057e8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80057ec:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80057f0:	d00c      	beq.n	800580c <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80057f2:	4b8b      	ldr	r3, [pc, #556]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80057f4:	689b      	ldr	r3, [r3, #8]
 80057f6:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 80057fa:	2b0c      	cmp	r3, #12
 80057fc:	d112      	bne.n	8005824 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80057fe:	4b88      	ldr	r3, [pc, #544]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005800:	685b      	ldr	r3, [r3, #4]
 8005802:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005806:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800580a:	d10b      	bne.n	8005824 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800580c:	4b84      	ldr	r3, [pc, #528]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 800580e:	681b      	ldr	r3, [r3, #0]
 8005810:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005814:	2b00      	cmp	r3, #0
 8005816:	d05b      	beq.n	80058d0 <HAL_RCC_OscConfig+0x124>
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	685b      	ldr	r3, [r3, #4]
 800581c:	2b00      	cmp	r3, #0
 800581e:	d157      	bne.n	80058d0 <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8005820:	2301      	movs	r3, #1
 8005822:	e25a      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	685b      	ldr	r3, [r3, #4]
 8005828:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800582c:	d106      	bne.n	800583c <HAL_RCC_OscConfig+0x90>
 800582e:	4b7c      	ldr	r3, [pc, #496]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005830:	681b      	ldr	r3, [r3, #0]
 8005832:	4a7b      	ldr	r2, [pc, #492]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005834:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005838:	6013      	str	r3, [r2, #0]
 800583a:	e01d      	b.n	8005878 <HAL_RCC_OscConfig+0xcc>
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	685b      	ldr	r3, [r3, #4]
 8005840:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005844:	d10c      	bne.n	8005860 <HAL_RCC_OscConfig+0xb4>
 8005846:	4b76      	ldr	r3, [pc, #472]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005848:	681b      	ldr	r3, [r3, #0]
 800584a:	4a75      	ldr	r2, [pc, #468]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 800584c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005850:	6013      	str	r3, [r2, #0]
 8005852:	4b73      	ldr	r3, [pc, #460]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005854:	681b      	ldr	r3, [r3, #0]
 8005856:	4a72      	ldr	r2, [pc, #456]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005858:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800585c:	6013      	str	r3, [r2, #0]
 800585e:	e00b      	b.n	8005878 <HAL_RCC_OscConfig+0xcc>
 8005860:	4b6f      	ldr	r3, [pc, #444]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	4a6e      	ldr	r2, [pc, #440]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005866:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800586a:	6013      	str	r3, [r2, #0]
 800586c:	4b6c      	ldr	r3, [pc, #432]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	4a6b      	ldr	r2, [pc, #428]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005872:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005876:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	685b      	ldr	r3, [r3, #4]
 800587c:	2b00      	cmp	r3, #0
 800587e:	d013      	beq.n	80058a8 <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005880:	f7fd f8ac 	bl	80029dc <HAL_GetTick>
 8005884:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005886:	e008      	b.n	800589a <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005888:	f7fd f8a8 	bl	80029dc <HAL_GetTick>
 800588c:	4602      	mov	r2, r0
 800588e:	693b      	ldr	r3, [r7, #16]
 8005890:	1ad3      	subs	r3, r2, r3
 8005892:	2b64      	cmp	r3, #100	@ 0x64
 8005894:	d901      	bls.n	800589a <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 8005896:	2303      	movs	r3, #3
 8005898:	e21f      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800589a:	4b61      	ldr	r3, [pc, #388]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80058a2:	2b00      	cmp	r3, #0
 80058a4:	d0f0      	beq.n	8005888 <HAL_RCC_OscConfig+0xdc>
 80058a6:	e014      	b.n	80058d2 <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80058a8:	f7fd f898 	bl	80029dc <HAL_GetTick>
 80058ac:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80058ae:	e008      	b.n	80058c2 <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80058b0:	f7fd f894 	bl	80029dc <HAL_GetTick>
 80058b4:	4602      	mov	r2, r0
 80058b6:	693b      	ldr	r3, [r7, #16]
 80058b8:	1ad3      	subs	r3, r2, r3
 80058ba:	2b64      	cmp	r3, #100	@ 0x64
 80058bc:	d901      	bls.n	80058c2 <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 80058be:	2303      	movs	r3, #3
 80058c0:	e20b      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80058c2:	4b57      	ldr	r3, [pc, #348]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80058ca:	2b00      	cmp	r3, #0
 80058cc:	d1f0      	bne.n	80058b0 <HAL_RCC_OscConfig+0x104>
 80058ce:	e000      	b.n	80058d2 <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80058d0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80058d2:	687b      	ldr	r3, [r7, #4]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	f003 0302 	and.w	r3, r3, #2
 80058da:	2b00      	cmp	r3, #0
 80058dc:	d06f      	beq.n	80059be <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 80058de:	4b50      	ldr	r3, [pc, #320]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80058e0:	689b      	ldr	r3, [r3, #8]
 80058e2:	f003 030c 	and.w	r3, r3, #12
 80058e6:	2b00      	cmp	r3, #0
 80058e8:	d017      	beq.n	800591a <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 80058ea:	4b4d      	ldr	r3, [pc, #308]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80058ec:	689b      	ldr	r3, [r3, #8]
 80058ee:	f003 030c 	and.w	r3, r3, #12
        || \
 80058f2:	2b08      	cmp	r3, #8
 80058f4:	d105      	bne.n	8005902 <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 80058f6:	4b4a      	ldr	r3, [pc, #296]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80058f8:	685b      	ldr	r3, [r3, #4]
 80058fa:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80058fe:	2b00      	cmp	r3, #0
 8005900:	d00b      	beq.n	800591a <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005902:	4b47      	ldr	r3, [pc, #284]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005904:	689b      	ldr	r3, [r3, #8]
 8005906:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 800590a:	2b0c      	cmp	r3, #12
 800590c:	d11c      	bne.n	8005948 <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800590e:	4b44      	ldr	r3, [pc, #272]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005910:	685b      	ldr	r3, [r3, #4]
 8005912:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005916:	2b00      	cmp	r3, #0
 8005918:	d116      	bne.n	8005948 <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800591a:	4b41      	ldr	r3, [pc, #260]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 800591c:	681b      	ldr	r3, [r3, #0]
 800591e:	f003 0302 	and.w	r3, r3, #2
 8005922:	2b00      	cmp	r3, #0
 8005924:	d005      	beq.n	8005932 <HAL_RCC_OscConfig+0x186>
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	68db      	ldr	r3, [r3, #12]
 800592a:	2b01      	cmp	r3, #1
 800592c:	d001      	beq.n	8005932 <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 800592e:	2301      	movs	r3, #1
 8005930:	e1d3      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005932:	4b3b      	ldr	r3, [pc, #236]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005934:	681b      	ldr	r3, [r3, #0]
 8005936:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	691b      	ldr	r3, [r3, #16]
 800593e:	00db      	lsls	r3, r3, #3
 8005940:	4937      	ldr	r1, [pc, #220]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005942:	4313      	orrs	r3, r2
 8005944:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005946:	e03a      	b.n	80059be <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	68db      	ldr	r3, [r3, #12]
 800594c:	2b00      	cmp	r3, #0
 800594e:	d020      	beq.n	8005992 <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005950:	4b34      	ldr	r3, [pc, #208]	@ (8005a24 <HAL_RCC_OscConfig+0x278>)
 8005952:	2201      	movs	r2, #1
 8005954:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005956:	f7fd f841 	bl	80029dc <HAL_GetTick>
 800595a:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800595c:	e008      	b.n	8005970 <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 800595e:	f7fd f83d 	bl	80029dc <HAL_GetTick>
 8005962:	4602      	mov	r2, r0
 8005964:	693b      	ldr	r3, [r7, #16]
 8005966:	1ad3      	subs	r3, r2, r3
 8005968:	2b02      	cmp	r3, #2
 800596a:	d901      	bls.n	8005970 <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 800596c:	2303      	movs	r3, #3
 800596e:	e1b4      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005970:	4b2b      	ldr	r3, [pc, #172]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	f003 0302 	and.w	r3, r3, #2
 8005978:	2b00      	cmp	r3, #0
 800597a:	d0f0      	beq.n	800595e <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800597c:	4b28      	ldr	r3, [pc, #160]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	691b      	ldr	r3, [r3, #16]
 8005988:	00db      	lsls	r3, r3, #3
 800598a:	4925      	ldr	r1, [pc, #148]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 800598c:	4313      	orrs	r3, r2
 800598e:	600b      	str	r3, [r1, #0]
 8005990:	e015      	b.n	80059be <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005992:	4b24      	ldr	r3, [pc, #144]	@ (8005a24 <HAL_RCC_OscConfig+0x278>)
 8005994:	2200      	movs	r2, #0
 8005996:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005998:	f7fd f820 	bl	80029dc <HAL_GetTick>
 800599c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800599e:	e008      	b.n	80059b2 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80059a0:	f7fd f81c 	bl	80029dc <HAL_GetTick>
 80059a4:	4602      	mov	r2, r0
 80059a6:	693b      	ldr	r3, [r7, #16]
 80059a8:	1ad3      	subs	r3, r2, r3
 80059aa:	2b02      	cmp	r3, #2
 80059ac:	d901      	bls.n	80059b2 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 80059ae:	2303      	movs	r3, #3
 80059b0:	e193      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80059b2:	4b1b      	ldr	r3, [pc, #108]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80059b4:	681b      	ldr	r3, [r3, #0]
 80059b6:	f003 0302 	and.w	r3, r3, #2
 80059ba:	2b00      	cmp	r3, #0
 80059bc:	d1f0      	bne.n	80059a0 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	f003 0308 	and.w	r3, r3, #8
 80059c6:	2b00      	cmp	r3, #0
 80059c8:	d036      	beq.n	8005a38 <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80059ca:	687b      	ldr	r3, [r7, #4]
 80059cc:	695b      	ldr	r3, [r3, #20]
 80059ce:	2b00      	cmp	r3, #0
 80059d0:	d016      	beq.n	8005a00 <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80059d2:	4b15      	ldr	r3, [pc, #84]	@ (8005a28 <HAL_RCC_OscConfig+0x27c>)
 80059d4:	2201      	movs	r2, #1
 80059d6:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80059d8:	f7fd f800 	bl	80029dc <HAL_GetTick>
 80059dc:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80059de:	e008      	b.n	80059f2 <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80059e0:	f7fc fffc 	bl	80029dc <HAL_GetTick>
 80059e4:	4602      	mov	r2, r0
 80059e6:	693b      	ldr	r3, [r7, #16]
 80059e8:	1ad3      	subs	r3, r2, r3
 80059ea:	2b02      	cmp	r3, #2
 80059ec:	d901      	bls.n	80059f2 <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 80059ee:	2303      	movs	r3, #3
 80059f0:	e173      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80059f2:	4b0b      	ldr	r3, [pc, #44]	@ (8005a20 <HAL_RCC_OscConfig+0x274>)
 80059f4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80059f6:	f003 0302 	and.w	r3, r3, #2
 80059fa:	2b00      	cmp	r3, #0
 80059fc:	d0f0      	beq.n	80059e0 <HAL_RCC_OscConfig+0x234>
 80059fe:	e01b      	b.n	8005a38 <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005a00:	4b09      	ldr	r3, [pc, #36]	@ (8005a28 <HAL_RCC_OscConfig+0x27c>)
 8005a02:	2200      	movs	r2, #0
 8005a04:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005a06:	f7fc ffe9 	bl	80029dc <HAL_GetTick>
 8005a0a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005a0c:	e00e      	b.n	8005a2c <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005a0e:	f7fc ffe5 	bl	80029dc <HAL_GetTick>
 8005a12:	4602      	mov	r2, r0
 8005a14:	693b      	ldr	r3, [r7, #16]
 8005a16:	1ad3      	subs	r3, r2, r3
 8005a18:	2b02      	cmp	r3, #2
 8005a1a:	d907      	bls.n	8005a2c <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8005a1c:	2303      	movs	r3, #3
 8005a1e:	e15c      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
 8005a20:	40023800 	.word	0x40023800
 8005a24:	42470000 	.word	0x42470000
 8005a28:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005a2c:	4b8a      	ldr	r3, [pc, #552]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005a2e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005a30:	f003 0302 	and.w	r3, r3, #2
 8005a34:	2b00      	cmp	r3, #0
 8005a36:	d1ea      	bne.n	8005a0e <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005a38:	687b      	ldr	r3, [r7, #4]
 8005a3a:	681b      	ldr	r3, [r3, #0]
 8005a3c:	f003 0304 	and.w	r3, r3, #4
 8005a40:	2b00      	cmp	r3, #0
 8005a42:	f000 8097 	beq.w	8005b74 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005a46:	2300      	movs	r3, #0
 8005a48:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005a4a:	4b83      	ldr	r3, [pc, #524]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005a4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a4e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005a52:	2b00      	cmp	r3, #0
 8005a54:	d10f      	bne.n	8005a76 <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005a56:	2300      	movs	r3, #0
 8005a58:	60bb      	str	r3, [r7, #8]
 8005a5a:	4b7f      	ldr	r3, [pc, #508]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005a5c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a5e:	4a7e      	ldr	r2, [pc, #504]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005a60:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005a64:	6413      	str	r3, [r2, #64]	@ 0x40
 8005a66:	4b7c      	ldr	r3, [pc, #496]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005a68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a6a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005a6e:	60bb      	str	r3, [r7, #8]
 8005a70:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005a72:	2301      	movs	r3, #1
 8005a74:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005a76:	4b79      	ldr	r3, [pc, #484]	@ (8005c5c <HAL_RCC_OscConfig+0x4b0>)
 8005a78:	681b      	ldr	r3, [r3, #0]
 8005a7a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005a7e:	2b00      	cmp	r3, #0
 8005a80:	d118      	bne.n	8005ab4 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005a82:	4b76      	ldr	r3, [pc, #472]	@ (8005c5c <HAL_RCC_OscConfig+0x4b0>)
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	4a75      	ldr	r2, [pc, #468]	@ (8005c5c <HAL_RCC_OscConfig+0x4b0>)
 8005a88:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005a8c:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005a8e:	f7fc ffa5 	bl	80029dc <HAL_GetTick>
 8005a92:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005a94:	e008      	b.n	8005aa8 <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005a96:	f7fc ffa1 	bl	80029dc <HAL_GetTick>
 8005a9a:	4602      	mov	r2, r0
 8005a9c:	693b      	ldr	r3, [r7, #16]
 8005a9e:	1ad3      	subs	r3, r2, r3
 8005aa0:	2b02      	cmp	r3, #2
 8005aa2:	d901      	bls.n	8005aa8 <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8005aa4:	2303      	movs	r3, #3
 8005aa6:	e118      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005aa8:	4b6c      	ldr	r3, [pc, #432]	@ (8005c5c <HAL_RCC_OscConfig+0x4b0>)
 8005aaa:	681b      	ldr	r3, [r3, #0]
 8005aac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005ab0:	2b00      	cmp	r3, #0
 8005ab2:	d0f0      	beq.n	8005a96 <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	689b      	ldr	r3, [r3, #8]
 8005ab8:	2b01      	cmp	r3, #1
 8005aba:	d106      	bne.n	8005aca <HAL_RCC_OscConfig+0x31e>
 8005abc:	4b66      	ldr	r3, [pc, #408]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005abe:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005ac0:	4a65      	ldr	r2, [pc, #404]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005ac2:	f043 0301 	orr.w	r3, r3, #1
 8005ac6:	6713      	str	r3, [r2, #112]	@ 0x70
 8005ac8:	e01c      	b.n	8005b04 <HAL_RCC_OscConfig+0x358>
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	689b      	ldr	r3, [r3, #8]
 8005ace:	2b05      	cmp	r3, #5
 8005ad0:	d10c      	bne.n	8005aec <HAL_RCC_OscConfig+0x340>
 8005ad2:	4b61      	ldr	r3, [pc, #388]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005ad4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005ad6:	4a60      	ldr	r2, [pc, #384]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005ad8:	f043 0304 	orr.w	r3, r3, #4
 8005adc:	6713      	str	r3, [r2, #112]	@ 0x70
 8005ade:	4b5e      	ldr	r3, [pc, #376]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005ae0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005ae2:	4a5d      	ldr	r2, [pc, #372]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005ae4:	f043 0301 	orr.w	r3, r3, #1
 8005ae8:	6713      	str	r3, [r2, #112]	@ 0x70
 8005aea:	e00b      	b.n	8005b04 <HAL_RCC_OscConfig+0x358>
 8005aec:	4b5a      	ldr	r3, [pc, #360]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005aee:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005af0:	4a59      	ldr	r2, [pc, #356]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005af2:	f023 0301 	bic.w	r3, r3, #1
 8005af6:	6713      	str	r3, [r2, #112]	@ 0x70
 8005af8:	4b57      	ldr	r3, [pc, #348]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005afa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005afc:	4a56      	ldr	r2, [pc, #344]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005afe:	f023 0304 	bic.w	r3, r3, #4
 8005b02:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005b04:	687b      	ldr	r3, [r7, #4]
 8005b06:	689b      	ldr	r3, [r3, #8]
 8005b08:	2b00      	cmp	r3, #0
 8005b0a:	d015      	beq.n	8005b38 <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005b0c:	f7fc ff66 	bl	80029dc <HAL_GetTick>
 8005b10:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005b12:	e00a      	b.n	8005b2a <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005b14:	f7fc ff62 	bl	80029dc <HAL_GetTick>
 8005b18:	4602      	mov	r2, r0
 8005b1a:	693b      	ldr	r3, [r7, #16]
 8005b1c:	1ad3      	subs	r3, r2, r3
 8005b1e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005b22:	4293      	cmp	r3, r2
 8005b24:	d901      	bls.n	8005b2a <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8005b26:	2303      	movs	r3, #3
 8005b28:	e0d7      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005b2a:	4b4b      	ldr	r3, [pc, #300]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005b2c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b2e:	f003 0302 	and.w	r3, r3, #2
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d0ee      	beq.n	8005b14 <HAL_RCC_OscConfig+0x368>
 8005b36:	e014      	b.n	8005b62 <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005b38:	f7fc ff50 	bl	80029dc <HAL_GetTick>
 8005b3c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005b3e:	e00a      	b.n	8005b56 <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005b40:	f7fc ff4c 	bl	80029dc <HAL_GetTick>
 8005b44:	4602      	mov	r2, r0
 8005b46:	693b      	ldr	r3, [r7, #16]
 8005b48:	1ad3      	subs	r3, r2, r3
 8005b4a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005b4e:	4293      	cmp	r3, r2
 8005b50:	d901      	bls.n	8005b56 <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8005b52:	2303      	movs	r3, #3
 8005b54:	e0c1      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005b56:	4b40      	ldr	r3, [pc, #256]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005b58:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005b5a:	f003 0302 	and.w	r3, r3, #2
 8005b5e:	2b00      	cmp	r3, #0
 8005b60:	d1ee      	bne.n	8005b40 <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8005b62:	7dfb      	ldrb	r3, [r7, #23]
 8005b64:	2b01      	cmp	r3, #1
 8005b66:	d105      	bne.n	8005b74 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005b68:	4b3b      	ldr	r3, [pc, #236]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005b6a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005b6c:	4a3a      	ldr	r2, [pc, #232]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005b6e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005b72:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	699b      	ldr	r3, [r3, #24]
 8005b78:	2b00      	cmp	r3, #0
 8005b7a:	f000 80ad 	beq.w	8005cd8 <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005b7e:	4b36      	ldr	r3, [pc, #216]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005b80:	689b      	ldr	r3, [r3, #8]
 8005b82:	f003 030c 	and.w	r3, r3, #12
 8005b86:	2b08      	cmp	r3, #8
 8005b88:	d060      	beq.n	8005c4c <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	699b      	ldr	r3, [r3, #24]
 8005b8e:	2b02      	cmp	r3, #2
 8005b90:	d145      	bne.n	8005c1e <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005b92:	4b33      	ldr	r3, [pc, #204]	@ (8005c60 <HAL_RCC_OscConfig+0x4b4>)
 8005b94:	2200      	movs	r2, #0
 8005b96:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b98:	f7fc ff20 	bl	80029dc <HAL_GetTick>
 8005b9c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005b9e:	e008      	b.n	8005bb2 <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005ba0:	f7fc ff1c 	bl	80029dc <HAL_GetTick>
 8005ba4:	4602      	mov	r2, r0
 8005ba6:	693b      	ldr	r3, [r7, #16]
 8005ba8:	1ad3      	subs	r3, r2, r3
 8005baa:	2b02      	cmp	r3, #2
 8005bac:	d901      	bls.n	8005bb2 <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8005bae:	2303      	movs	r3, #3
 8005bb0:	e093      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005bb2:	4b29      	ldr	r3, [pc, #164]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005bb4:	681b      	ldr	r3, [r3, #0]
 8005bb6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005bba:	2b00      	cmp	r3, #0
 8005bbc:	d1f0      	bne.n	8005ba0 <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005bbe:	687b      	ldr	r3, [r7, #4]
 8005bc0:	69da      	ldr	r2, [r3, #28]
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	6a1b      	ldr	r3, [r3, #32]
 8005bc6:	431a      	orrs	r2, r3
 8005bc8:	687b      	ldr	r3, [r7, #4]
 8005bca:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005bcc:	019b      	lsls	r3, r3, #6
 8005bce:	431a      	orrs	r2, r3
 8005bd0:	687b      	ldr	r3, [r7, #4]
 8005bd2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005bd4:	085b      	lsrs	r3, r3, #1
 8005bd6:	3b01      	subs	r3, #1
 8005bd8:	041b      	lsls	r3, r3, #16
 8005bda:	431a      	orrs	r2, r3
 8005bdc:	687b      	ldr	r3, [r7, #4]
 8005bde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005be0:	061b      	lsls	r3, r3, #24
 8005be2:	431a      	orrs	r2, r3
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005be8:	071b      	lsls	r3, r3, #28
 8005bea:	491b      	ldr	r1, [pc, #108]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005bec:	4313      	orrs	r3, r2
 8005bee:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005bf0:	4b1b      	ldr	r3, [pc, #108]	@ (8005c60 <HAL_RCC_OscConfig+0x4b4>)
 8005bf2:	2201      	movs	r2, #1
 8005bf4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005bf6:	f7fc fef1 	bl	80029dc <HAL_GetTick>
 8005bfa:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005bfc:	e008      	b.n	8005c10 <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005bfe:	f7fc feed 	bl	80029dc <HAL_GetTick>
 8005c02:	4602      	mov	r2, r0
 8005c04:	693b      	ldr	r3, [r7, #16]
 8005c06:	1ad3      	subs	r3, r2, r3
 8005c08:	2b02      	cmp	r3, #2
 8005c0a:	d901      	bls.n	8005c10 <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8005c0c:	2303      	movs	r3, #3
 8005c0e:	e064      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005c10:	4b11      	ldr	r3, [pc, #68]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005c12:	681b      	ldr	r3, [r3, #0]
 8005c14:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005c18:	2b00      	cmp	r3, #0
 8005c1a:	d0f0      	beq.n	8005bfe <HAL_RCC_OscConfig+0x452>
 8005c1c:	e05c      	b.n	8005cd8 <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005c1e:	4b10      	ldr	r3, [pc, #64]	@ (8005c60 <HAL_RCC_OscConfig+0x4b4>)
 8005c20:	2200      	movs	r2, #0
 8005c22:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c24:	f7fc feda 	bl	80029dc <HAL_GetTick>
 8005c28:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005c2a:	e008      	b.n	8005c3e <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005c2c:	f7fc fed6 	bl	80029dc <HAL_GetTick>
 8005c30:	4602      	mov	r2, r0
 8005c32:	693b      	ldr	r3, [r7, #16]
 8005c34:	1ad3      	subs	r3, r2, r3
 8005c36:	2b02      	cmp	r3, #2
 8005c38:	d901      	bls.n	8005c3e <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8005c3a:	2303      	movs	r3, #3
 8005c3c:	e04d      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005c3e:	4b06      	ldr	r3, [pc, #24]	@ (8005c58 <HAL_RCC_OscConfig+0x4ac>)
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005c46:	2b00      	cmp	r3, #0
 8005c48:	d1f0      	bne.n	8005c2c <HAL_RCC_OscConfig+0x480>
 8005c4a:	e045      	b.n	8005cd8 <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	699b      	ldr	r3, [r3, #24]
 8005c50:	2b01      	cmp	r3, #1
 8005c52:	d107      	bne.n	8005c64 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8005c54:	2301      	movs	r3, #1
 8005c56:	e040      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
 8005c58:	40023800 	.word	0x40023800
 8005c5c:	40007000 	.word	0x40007000
 8005c60:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005c64:	4b1f      	ldr	r3, [pc, #124]	@ (8005ce4 <HAL_RCC_OscConfig+0x538>)
 8005c66:	685b      	ldr	r3, [r3, #4]
 8005c68:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	699b      	ldr	r3, [r3, #24]
 8005c6e:	2b01      	cmp	r3, #1
 8005c70:	d030      	beq.n	8005cd4 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005c72:	68fb      	ldr	r3, [r7, #12]
 8005c74:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005c78:	687b      	ldr	r3, [r7, #4]
 8005c7a:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005c7c:	429a      	cmp	r2, r3
 8005c7e:	d129      	bne.n	8005cd4 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005c80:	68fb      	ldr	r3, [r7, #12]
 8005c82:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005c8a:	429a      	cmp	r2, r3
 8005c8c:	d122      	bne.n	8005cd4 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005c8e:	68fa      	ldr	r2, [r7, #12]
 8005c90:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005c94:	4013      	ands	r3, r2
 8005c96:	687a      	ldr	r2, [r7, #4]
 8005c98:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005c9a:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005c9c:	4293      	cmp	r3, r2
 8005c9e:	d119      	bne.n	8005cd4 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005ca0:	68fb      	ldr	r3, [r7, #12]
 8005ca2:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005caa:	085b      	lsrs	r3, r3, #1
 8005cac:	3b01      	subs	r3, #1
 8005cae:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005cb0:	429a      	cmp	r2, r3
 8005cb2:	d10f      	bne.n	8005cd4 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005cb4:	68fb      	ldr	r3, [r7, #12]
 8005cb6:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8005cba:	687b      	ldr	r3, [r7, #4]
 8005cbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005cbe:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005cc0:	429a      	cmp	r2, r3
 8005cc2:	d107      	bne.n	8005cd4 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8005cc4:	68fb      	ldr	r3, [r7, #12]
 8005cc6:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8005cca:	687b      	ldr	r3, [r7, #4]
 8005ccc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005cce:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005cd0:	429a      	cmp	r2, r3
 8005cd2:	d001      	beq.n	8005cd8 <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 8005cd4:	2301      	movs	r3, #1
 8005cd6:	e000      	b.n	8005cda <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 8005cd8:	2300      	movs	r3, #0
}
 8005cda:	4618      	mov	r0, r3
 8005cdc:	3718      	adds	r7, #24
 8005cde:	46bd      	mov	sp, r7
 8005ce0:	bd80      	pop	{r7, pc}
 8005ce2:	bf00      	nop
 8005ce4:	40023800 	.word	0x40023800

08005ce8 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005ce8:	b580      	push	{r7, lr}
 8005cea:	b082      	sub	sp, #8
 8005cec:	af00      	add	r7, sp, #0
 8005cee:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005cf0:	687b      	ldr	r3, [r7, #4]
 8005cf2:	2b00      	cmp	r3, #0
 8005cf4:	d101      	bne.n	8005cfa <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005cf6:	2301      	movs	r3, #1
 8005cf8:	e07b      	b.n	8005df2 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005cfa:	687b      	ldr	r3, [r7, #4]
 8005cfc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005cfe:	2b00      	cmp	r3, #0
 8005d00:	d108      	bne.n	8005d14 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	685b      	ldr	r3, [r3, #4]
 8005d06:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005d0a:	d009      	beq.n	8005d20 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005d0c:	687b      	ldr	r3, [r7, #4]
 8005d0e:	2200      	movs	r2, #0
 8005d10:	61da      	str	r2, [r3, #28]
 8005d12:	e005      	b.n	8005d20 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	2200      	movs	r2, #0
 8005d18:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005d1a:	687b      	ldr	r3, [r7, #4]
 8005d1c:	2200      	movs	r2, #0
 8005d1e:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	2200      	movs	r2, #0
 8005d24:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005d26:	687b      	ldr	r3, [r7, #4]
 8005d28:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005d2c:	b2db      	uxtb	r3, r3
 8005d2e:	2b00      	cmp	r3, #0
 8005d30:	d106      	bne.n	8005d40 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	2200      	movs	r2, #0
 8005d36:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005d3a:	6878      	ldr	r0, [r7, #4]
 8005d3c:	f7fb fe88 	bl	8001a50 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	2202      	movs	r2, #2
 8005d44:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005d48:	687b      	ldr	r3, [r7, #4]
 8005d4a:	681b      	ldr	r3, [r3, #0]
 8005d4c:	681a      	ldr	r2, [r3, #0]
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005d56:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	685b      	ldr	r3, [r3, #4]
 8005d5c:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8005d60:	687b      	ldr	r3, [r7, #4]
 8005d62:	689b      	ldr	r3, [r3, #8]
 8005d64:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8005d68:	431a      	orrs	r2, r3
 8005d6a:	687b      	ldr	r3, [r7, #4]
 8005d6c:	68db      	ldr	r3, [r3, #12]
 8005d6e:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8005d72:	431a      	orrs	r2, r3
 8005d74:	687b      	ldr	r3, [r7, #4]
 8005d76:	691b      	ldr	r3, [r3, #16]
 8005d78:	f003 0302 	and.w	r3, r3, #2
 8005d7c:	431a      	orrs	r2, r3
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	695b      	ldr	r3, [r3, #20]
 8005d82:	f003 0301 	and.w	r3, r3, #1
 8005d86:	431a      	orrs	r2, r3
 8005d88:	687b      	ldr	r3, [r7, #4]
 8005d8a:	699b      	ldr	r3, [r3, #24]
 8005d8c:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8005d90:	431a      	orrs	r2, r3
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	69db      	ldr	r3, [r3, #28]
 8005d96:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8005d9a:	431a      	orrs	r2, r3
 8005d9c:	687b      	ldr	r3, [r7, #4]
 8005d9e:	6a1b      	ldr	r3, [r3, #32]
 8005da0:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005da4:	ea42 0103 	orr.w	r1, r2, r3
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005dac:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8005db0:	687b      	ldr	r3, [r7, #4]
 8005db2:	681b      	ldr	r3, [r3, #0]
 8005db4:	430a      	orrs	r2, r1
 8005db6:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	699b      	ldr	r3, [r3, #24]
 8005dbc:	0c1b      	lsrs	r3, r3, #16
 8005dbe:	f003 0104 	and.w	r1, r3, #4
 8005dc2:	687b      	ldr	r3, [r7, #4]
 8005dc4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005dc6:	f003 0210 	and.w	r2, r3, #16
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	430a      	orrs	r2, r1
 8005dd0:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8005dd2:	687b      	ldr	r3, [r7, #4]
 8005dd4:	681b      	ldr	r3, [r3, #0]
 8005dd6:	69da      	ldr	r2, [r3, #28]
 8005dd8:	687b      	ldr	r3, [r7, #4]
 8005dda:	681b      	ldr	r3, [r3, #0]
 8005ddc:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005de0:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	2200      	movs	r2, #0
 8005de6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	2201      	movs	r2, #1
 8005dec:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 8005df0:	2300      	movs	r3, #0
}
 8005df2:	4618      	mov	r0, r3
 8005df4:	3708      	adds	r7, #8
 8005df6:	46bd      	mov	sp, r7
 8005df8:	bd80      	pop	{r7, pc}

08005dfa <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005dfa:	b580      	push	{r7, lr}
 8005dfc:	b088      	sub	sp, #32
 8005dfe:	af00      	add	r7, sp, #0
 8005e00:	60f8      	str	r0, [r7, #12]
 8005e02:	60b9      	str	r1, [r7, #8]
 8005e04:	603b      	str	r3, [r7, #0]
 8005e06:	4613      	mov	r3, r2
 8005e08:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8005e0a:	f7fc fde7 	bl	80029dc <HAL_GetTick>
 8005e0e:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 8005e10:	88fb      	ldrh	r3, [r7, #6]
 8005e12:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 8005e14:	68fb      	ldr	r3, [r7, #12]
 8005e16:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005e1a:	b2db      	uxtb	r3, r3
 8005e1c:	2b01      	cmp	r3, #1
 8005e1e:	d001      	beq.n	8005e24 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 8005e20:	2302      	movs	r3, #2
 8005e22:	e12a      	b.n	800607a <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 8005e24:	68bb      	ldr	r3, [r7, #8]
 8005e26:	2b00      	cmp	r3, #0
 8005e28:	d002      	beq.n	8005e30 <HAL_SPI_Transmit+0x36>
 8005e2a:	88fb      	ldrh	r3, [r7, #6]
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d101      	bne.n	8005e34 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 8005e30:	2301      	movs	r3, #1
 8005e32:	e122      	b.n	800607a <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8005e34:	68fb      	ldr	r3, [r7, #12]
 8005e36:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8005e3a:	2b01      	cmp	r3, #1
 8005e3c:	d101      	bne.n	8005e42 <HAL_SPI_Transmit+0x48>
 8005e3e:	2302      	movs	r3, #2
 8005e40:	e11b      	b.n	800607a <HAL_SPI_Transmit+0x280>
 8005e42:	68fb      	ldr	r3, [r7, #12]
 8005e44:	2201      	movs	r2, #1
 8005e46:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	2203      	movs	r2, #3
 8005e4e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8005e52:	68fb      	ldr	r3, [r7, #12]
 8005e54:	2200      	movs	r2, #0
 8005e56:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8005e58:	68fb      	ldr	r3, [r7, #12]
 8005e5a:	68ba      	ldr	r2, [r7, #8]
 8005e5c:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8005e5e:	68fb      	ldr	r3, [r7, #12]
 8005e60:	88fa      	ldrh	r2, [r7, #6]
 8005e62:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8005e64:	68fb      	ldr	r3, [r7, #12]
 8005e66:	88fa      	ldrh	r2, [r7, #6]
 8005e68:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8005e6a:	68fb      	ldr	r3, [r7, #12]
 8005e6c:	2200      	movs	r2, #0
 8005e6e:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8005e70:	68fb      	ldr	r3, [r7, #12]
 8005e72:	2200      	movs	r2, #0
 8005e74:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	2200      	movs	r2, #0
 8005e7a:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	2200      	movs	r2, #0
 8005e80:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8005e82:	68fb      	ldr	r3, [r7, #12]
 8005e84:	2200      	movs	r2, #0
 8005e86:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8005e88:	68fb      	ldr	r3, [r7, #12]
 8005e8a:	689b      	ldr	r3, [r3, #8]
 8005e8c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8005e90:	d10f      	bne.n	8005eb2 <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	681b      	ldr	r3, [r3, #0]
 8005e96:	681a      	ldr	r2, [r3, #0]
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	681b      	ldr	r3, [r3, #0]
 8005e9c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8005ea0:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8005ea2:	68fb      	ldr	r3, [r7, #12]
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	681a      	ldr	r2, [r3, #0]
 8005ea8:	68fb      	ldr	r3, [r7, #12]
 8005eaa:	681b      	ldr	r3, [r3, #0]
 8005eac:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005eb0:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8005eb2:	68fb      	ldr	r3, [r7, #12]
 8005eb4:	681b      	ldr	r3, [r3, #0]
 8005eb6:	681b      	ldr	r3, [r3, #0]
 8005eb8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005ebc:	2b40      	cmp	r3, #64	@ 0x40
 8005ebe:	d007      	beq.n	8005ed0 <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8005ec0:	68fb      	ldr	r3, [r7, #12]
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	681a      	ldr	r2, [r3, #0]
 8005ec6:	68fb      	ldr	r3, [r7, #12]
 8005ec8:	681b      	ldr	r3, [r3, #0]
 8005eca:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8005ece:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	68db      	ldr	r3, [r3, #12]
 8005ed4:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8005ed8:	d152      	bne.n	8005f80 <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005eda:	68fb      	ldr	r3, [r7, #12]
 8005edc:	685b      	ldr	r3, [r3, #4]
 8005ede:	2b00      	cmp	r3, #0
 8005ee0:	d002      	beq.n	8005ee8 <HAL_SPI_Transmit+0xee>
 8005ee2:	8b7b      	ldrh	r3, [r7, #26]
 8005ee4:	2b01      	cmp	r3, #1
 8005ee6:	d145      	bne.n	8005f74 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005ee8:	68fb      	ldr	r3, [r7, #12]
 8005eea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005eec:	881a      	ldrh	r2, [r3, #0]
 8005eee:	68fb      	ldr	r3, [r7, #12]
 8005ef0:	681b      	ldr	r3, [r3, #0]
 8005ef2:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8005ef4:	68fb      	ldr	r3, [r7, #12]
 8005ef6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005ef8:	1c9a      	adds	r2, r3, #2
 8005efa:	68fb      	ldr	r3, [r7, #12]
 8005efc:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8005efe:	68fb      	ldr	r3, [r7, #12]
 8005f00:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005f02:	b29b      	uxth	r3, r3
 8005f04:	3b01      	subs	r3, #1
 8005f06:	b29a      	uxth	r2, r3
 8005f08:	68fb      	ldr	r3, [r7, #12]
 8005f0a:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 8005f0c:	e032      	b.n	8005f74 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	681b      	ldr	r3, [r3, #0]
 8005f12:	689b      	ldr	r3, [r3, #8]
 8005f14:	f003 0302 	and.w	r3, r3, #2
 8005f18:	2b02      	cmp	r3, #2
 8005f1a:	d112      	bne.n	8005f42 <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8005f1c:	68fb      	ldr	r3, [r7, #12]
 8005f1e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f20:	881a      	ldrh	r2, [r3, #0]
 8005f22:	68fb      	ldr	r3, [r7, #12]
 8005f24:	681b      	ldr	r3, [r3, #0]
 8005f26:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8005f28:	68fb      	ldr	r3, [r7, #12]
 8005f2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f2c:	1c9a      	adds	r2, r3, #2
 8005f2e:	68fb      	ldr	r3, [r7, #12]
 8005f30:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8005f32:	68fb      	ldr	r3, [r7, #12]
 8005f34:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005f36:	b29b      	uxth	r3, r3
 8005f38:	3b01      	subs	r3, #1
 8005f3a:	b29a      	uxth	r2, r3
 8005f3c:	68fb      	ldr	r3, [r7, #12]
 8005f3e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005f40:	e018      	b.n	8005f74 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005f42:	f7fc fd4b 	bl	80029dc <HAL_GetTick>
 8005f46:	4602      	mov	r2, r0
 8005f48:	69fb      	ldr	r3, [r7, #28]
 8005f4a:	1ad3      	subs	r3, r2, r3
 8005f4c:	683a      	ldr	r2, [r7, #0]
 8005f4e:	429a      	cmp	r2, r3
 8005f50:	d803      	bhi.n	8005f5a <HAL_SPI_Transmit+0x160>
 8005f52:	683b      	ldr	r3, [r7, #0]
 8005f54:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005f58:	d102      	bne.n	8005f60 <HAL_SPI_Transmit+0x166>
 8005f5a:	683b      	ldr	r3, [r7, #0]
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	d109      	bne.n	8005f74 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8005f60:	68fb      	ldr	r3, [r7, #12]
 8005f62:	2201      	movs	r2, #1
 8005f64:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	2200      	movs	r2, #0
 8005f6c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8005f70:	2303      	movs	r3, #3
 8005f72:	e082      	b.n	800607a <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8005f74:	68fb      	ldr	r3, [r7, #12]
 8005f76:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005f78:	b29b      	uxth	r3, r3
 8005f7a:	2b00      	cmp	r3, #0
 8005f7c:	d1c7      	bne.n	8005f0e <HAL_SPI_Transmit+0x114>
 8005f7e:	e053      	b.n	8006028 <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8005f80:	68fb      	ldr	r3, [r7, #12]
 8005f82:	685b      	ldr	r3, [r3, #4]
 8005f84:	2b00      	cmp	r3, #0
 8005f86:	d002      	beq.n	8005f8e <HAL_SPI_Transmit+0x194>
 8005f88:	8b7b      	ldrh	r3, [r7, #26]
 8005f8a:	2b01      	cmp	r3, #1
 8005f8c:	d147      	bne.n	800601e <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005f8e:	68fb      	ldr	r3, [r7, #12]
 8005f90:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	330c      	adds	r3, #12
 8005f98:	7812      	ldrb	r2, [r2, #0]
 8005f9a:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005fa0:	1c5a      	adds	r2, r3, #1
 8005fa2:	68fb      	ldr	r3, [r7, #12]
 8005fa4:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005faa:	b29b      	uxth	r3, r3
 8005fac:	3b01      	subs	r3, #1
 8005fae:	b29a      	uxth	r2, r3
 8005fb0:	68fb      	ldr	r3, [r7, #12]
 8005fb2:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 8005fb4:	e033      	b.n	800601e <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8005fb6:	68fb      	ldr	r3, [r7, #12]
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	689b      	ldr	r3, [r3, #8]
 8005fbc:	f003 0302 	and.w	r3, r3, #2
 8005fc0:	2b02      	cmp	r3, #2
 8005fc2:	d113      	bne.n	8005fec <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8005fc8:	68fb      	ldr	r3, [r7, #12]
 8005fca:	681b      	ldr	r3, [r3, #0]
 8005fcc:	330c      	adds	r3, #12
 8005fce:	7812      	ldrb	r2, [r2, #0]
 8005fd0:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8005fd2:	68fb      	ldr	r3, [r7, #12]
 8005fd4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005fd6:	1c5a      	adds	r2, r3, #1
 8005fd8:	68fb      	ldr	r3, [r7, #12]
 8005fda:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8005fdc:	68fb      	ldr	r3, [r7, #12]
 8005fde:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8005fe0:	b29b      	uxth	r3, r3
 8005fe2:	3b01      	subs	r3, #1
 8005fe4:	b29a      	uxth	r2, r3
 8005fe6:	68fb      	ldr	r3, [r7, #12]
 8005fe8:	86da      	strh	r2, [r3, #54]	@ 0x36
 8005fea:	e018      	b.n	800601e <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8005fec:	f7fc fcf6 	bl	80029dc <HAL_GetTick>
 8005ff0:	4602      	mov	r2, r0
 8005ff2:	69fb      	ldr	r3, [r7, #28]
 8005ff4:	1ad3      	subs	r3, r2, r3
 8005ff6:	683a      	ldr	r2, [r7, #0]
 8005ff8:	429a      	cmp	r2, r3
 8005ffa:	d803      	bhi.n	8006004 <HAL_SPI_Transmit+0x20a>
 8005ffc:	683b      	ldr	r3, [r7, #0]
 8005ffe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006002:	d102      	bne.n	800600a <HAL_SPI_Transmit+0x210>
 8006004:	683b      	ldr	r3, [r7, #0]
 8006006:	2b00      	cmp	r3, #0
 8006008:	d109      	bne.n	800601e <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800600a:	68fb      	ldr	r3, [r7, #12]
 800600c:	2201      	movs	r2, #1
 800600e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006012:	68fb      	ldr	r3, [r7, #12]
 8006014:	2200      	movs	r2, #0
 8006016:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800601a:	2303      	movs	r3, #3
 800601c:	e02d      	b.n	800607a <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 800601e:	68fb      	ldr	r3, [r7, #12]
 8006020:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006022:	b29b      	uxth	r3, r3
 8006024:	2b00      	cmp	r3, #0
 8006026:	d1c6      	bne.n	8005fb6 <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006028:	69fa      	ldr	r2, [r7, #28]
 800602a:	6839      	ldr	r1, [r7, #0]
 800602c:	68f8      	ldr	r0, [r7, #12]
 800602e:	f000 fe1f 	bl	8006c70 <SPI_EndRxTxTransaction>
 8006032:	4603      	mov	r3, r0
 8006034:	2b00      	cmp	r3, #0
 8006036:	d002      	beq.n	800603e <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	2220      	movs	r2, #32
 800603c:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	689b      	ldr	r3, [r3, #8]
 8006042:	2b00      	cmp	r3, #0
 8006044:	d10a      	bne.n	800605c <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006046:	2300      	movs	r3, #0
 8006048:	617b      	str	r3, [r7, #20]
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	681b      	ldr	r3, [r3, #0]
 800604e:	68db      	ldr	r3, [r3, #12]
 8006050:	617b      	str	r3, [r7, #20]
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	681b      	ldr	r3, [r3, #0]
 8006056:	689b      	ldr	r3, [r3, #8]
 8006058:	617b      	str	r3, [r7, #20]
 800605a:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	2201      	movs	r2, #1
 8006060:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006064:	68fb      	ldr	r3, [r7, #12]
 8006066:	2200      	movs	r2, #0
 8006068:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800606c:	68fb      	ldr	r3, [r7, #12]
 800606e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006070:	2b00      	cmp	r3, #0
 8006072:	d001      	beq.n	8006078 <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8006074:	2301      	movs	r3, #1
 8006076:	e000      	b.n	800607a <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 8006078:	2300      	movs	r3, #0
  }
}
 800607a:	4618      	mov	r0, r3
 800607c:	3720      	adds	r7, #32
 800607e:	46bd      	mov	sp, r7
 8006080:	bd80      	pop	{r7, pc}

08006082 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006082:	b580      	push	{r7, lr}
 8006084:	b088      	sub	sp, #32
 8006086:	af02      	add	r7, sp, #8
 8006088:	60f8      	str	r0, [r7, #12]
 800608a:	60b9      	str	r1, [r7, #8]
 800608c:	603b      	str	r3, [r7, #0]
 800608e:	4613      	mov	r3, r2
 8006090:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 8006092:	68fb      	ldr	r3, [r7, #12]
 8006094:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006098:	b2db      	uxtb	r3, r3
 800609a:	2b01      	cmp	r3, #1
 800609c:	d001      	beq.n	80060a2 <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 800609e:	2302      	movs	r3, #2
 80060a0:	e104      	b.n	80062ac <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80060a2:	68fb      	ldr	r3, [r7, #12]
 80060a4:	685b      	ldr	r3, [r3, #4]
 80060a6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80060aa:	d112      	bne.n	80060d2 <HAL_SPI_Receive+0x50>
 80060ac:	68fb      	ldr	r3, [r7, #12]
 80060ae:	689b      	ldr	r3, [r3, #8]
 80060b0:	2b00      	cmp	r3, #0
 80060b2:	d10e      	bne.n	80060d2 <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80060b4:	68fb      	ldr	r3, [r7, #12]
 80060b6:	2204      	movs	r2, #4
 80060b8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80060bc:	88fa      	ldrh	r2, [r7, #6]
 80060be:	683b      	ldr	r3, [r7, #0]
 80060c0:	9300      	str	r3, [sp, #0]
 80060c2:	4613      	mov	r3, r2
 80060c4:	68ba      	ldr	r2, [r7, #8]
 80060c6:	68b9      	ldr	r1, [r7, #8]
 80060c8:	68f8      	ldr	r0, [r7, #12]
 80060ca:	f000 f8f3 	bl	80062b4 <HAL_SPI_TransmitReceive>
 80060ce:	4603      	mov	r3, r0
 80060d0:	e0ec      	b.n	80062ac <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80060d2:	f7fc fc83 	bl	80029dc <HAL_GetTick>
 80060d6:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 80060d8:	68bb      	ldr	r3, [r7, #8]
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d002      	beq.n	80060e4 <HAL_SPI_Receive+0x62>
 80060de:	88fb      	ldrh	r3, [r7, #6]
 80060e0:	2b00      	cmp	r3, #0
 80060e2:	d101      	bne.n	80060e8 <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 80060e4:	2301      	movs	r3, #1
 80060e6:	e0e1      	b.n	80062ac <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80060ee:	2b01      	cmp	r3, #1
 80060f0:	d101      	bne.n	80060f6 <HAL_SPI_Receive+0x74>
 80060f2:	2302      	movs	r3, #2
 80060f4:	e0da      	b.n	80062ac <HAL_SPI_Receive+0x22a>
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	2201      	movs	r2, #1
 80060fa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	2204      	movs	r2, #4
 8006102:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	2200      	movs	r2, #0
 800610a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800610c:	68fb      	ldr	r3, [r7, #12]
 800610e:	68ba      	ldr	r2, [r7, #8]
 8006110:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	88fa      	ldrh	r2, [r7, #6]
 8006116:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	88fa      	ldrh	r2, [r7, #6]
 800611c:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	2200      	movs	r2, #0
 8006122:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	2200      	movs	r2, #0
 8006128:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 800612a:	68fb      	ldr	r3, [r7, #12]
 800612c:	2200      	movs	r2, #0
 800612e:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 8006130:	68fb      	ldr	r3, [r7, #12]
 8006132:	2200      	movs	r2, #0
 8006134:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	2200      	movs	r2, #0
 800613a:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	689b      	ldr	r3, [r3, #8]
 8006140:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006144:	d10f      	bne.n	8006166 <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	681a      	ldr	r2, [r3, #0]
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006154:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	681a      	ldr	r2, [r3, #0]
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006164:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006170:	2b40      	cmp	r3, #64	@ 0x40
 8006172:	d007      	beq.n	8006184 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	681a      	ldr	r2, [r3, #0]
 800617a:	68fb      	ldr	r3, [r7, #12]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006182:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006184:	68fb      	ldr	r3, [r7, #12]
 8006186:	68db      	ldr	r3, [r3, #12]
 8006188:	2b00      	cmp	r3, #0
 800618a:	d170      	bne.n	800626e <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 800618c:	e035      	b.n	80061fa <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	689b      	ldr	r3, [r3, #8]
 8006194:	f003 0301 	and.w	r3, r3, #1
 8006198:	2b01      	cmp	r3, #1
 800619a:	d115      	bne.n	80061c8 <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	f103 020c 	add.w	r2, r3, #12
 80061a4:	68fb      	ldr	r3, [r7, #12]
 80061a6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80061a8:	7812      	ldrb	r2, [r2, #0]
 80061aa:	b2d2      	uxtb	r2, r2
 80061ac:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80061ae:	68fb      	ldr	r3, [r7, #12]
 80061b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80061b2:	1c5a      	adds	r2, r3, #1
 80061b4:	68fb      	ldr	r3, [r7, #12]
 80061b6:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80061b8:	68fb      	ldr	r3, [r7, #12]
 80061ba:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80061bc:	b29b      	uxth	r3, r3
 80061be:	3b01      	subs	r3, #1
 80061c0:	b29a      	uxth	r2, r3
 80061c2:	68fb      	ldr	r3, [r7, #12]
 80061c4:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80061c6:	e018      	b.n	80061fa <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80061c8:	f7fc fc08 	bl	80029dc <HAL_GetTick>
 80061cc:	4602      	mov	r2, r0
 80061ce:	697b      	ldr	r3, [r7, #20]
 80061d0:	1ad3      	subs	r3, r2, r3
 80061d2:	683a      	ldr	r2, [r7, #0]
 80061d4:	429a      	cmp	r2, r3
 80061d6:	d803      	bhi.n	80061e0 <HAL_SPI_Receive+0x15e>
 80061d8:	683b      	ldr	r3, [r7, #0]
 80061da:	f1b3 3fff 	cmp.w	r3, #4294967295
 80061de:	d102      	bne.n	80061e6 <HAL_SPI_Receive+0x164>
 80061e0:	683b      	ldr	r3, [r7, #0]
 80061e2:	2b00      	cmp	r3, #0
 80061e4:	d109      	bne.n	80061fa <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80061e6:	68fb      	ldr	r3, [r7, #12]
 80061e8:	2201      	movs	r2, #1
 80061ea:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80061ee:	68fb      	ldr	r3, [r7, #12]
 80061f0:	2200      	movs	r2, #0
 80061f2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80061f6:	2303      	movs	r3, #3
 80061f8:	e058      	b.n	80062ac <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 80061fa:	68fb      	ldr	r3, [r7, #12]
 80061fc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80061fe:	b29b      	uxth	r3, r3
 8006200:	2b00      	cmp	r3, #0
 8006202:	d1c4      	bne.n	800618e <HAL_SPI_Receive+0x10c>
 8006204:	e038      	b.n	8006278 <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006206:	68fb      	ldr	r3, [r7, #12]
 8006208:	681b      	ldr	r3, [r3, #0]
 800620a:	689b      	ldr	r3, [r3, #8]
 800620c:	f003 0301 	and.w	r3, r3, #1
 8006210:	2b01      	cmp	r3, #1
 8006212:	d113      	bne.n	800623c <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	681b      	ldr	r3, [r3, #0]
 8006218:	68da      	ldr	r2, [r3, #12]
 800621a:	68fb      	ldr	r3, [r7, #12]
 800621c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800621e:	b292      	uxth	r2, r2
 8006220:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006222:	68fb      	ldr	r3, [r7, #12]
 8006224:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006226:	1c9a      	adds	r2, r3, #2
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006230:	b29b      	uxth	r3, r3
 8006232:	3b01      	subs	r3, #1
 8006234:	b29a      	uxth	r2, r3
 8006236:	68fb      	ldr	r3, [r7, #12]
 8006238:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800623a:	e018      	b.n	800626e <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800623c:	f7fc fbce 	bl	80029dc <HAL_GetTick>
 8006240:	4602      	mov	r2, r0
 8006242:	697b      	ldr	r3, [r7, #20]
 8006244:	1ad3      	subs	r3, r2, r3
 8006246:	683a      	ldr	r2, [r7, #0]
 8006248:	429a      	cmp	r2, r3
 800624a:	d803      	bhi.n	8006254 <HAL_SPI_Receive+0x1d2>
 800624c:	683b      	ldr	r3, [r7, #0]
 800624e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006252:	d102      	bne.n	800625a <HAL_SPI_Receive+0x1d8>
 8006254:	683b      	ldr	r3, [r7, #0]
 8006256:	2b00      	cmp	r3, #0
 8006258:	d109      	bne.n	800626e <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	2201      	movs	r2, #1
 800625e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006262:	68fb      	ldr	r3, [r7, #12]
 8006264:	2200      	movs	r2, #0
 8006266:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800626a:	2303      	movs	r3, #3
 800626c:	e01e      	b.n	80062ac <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 800626e:	68fb      	ldr	r3, [r7, #12]
 8006270:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006272:	b29b      	uxth	r3, r3
 8006274:	2b00      	cmp	r3, #0
 8006276:	d1c6      	bne.n	8006206 <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006278:	697a      	ldr	r2, [r7, #20]
 800627a:	6839      	ldr	r1, [r7, #0]
 800627c:	68f8      	ldr	r0, [r7, #12]
 800627e:	f000 fc91 	bl	8006ba4 <SPI_EndRxTransaction>
 8006282:	4603      	mov	r3, r0
 8006284:	2b00      	cmp	r3, #0
 8006286:	d002      	beq.n	800628e <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006288:	68fb      	ldr	r3, [r7, #12]
 800628a:	2220      	movs	r2, #32
 800628c:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	2201      	movs	r2, #1
 8006292:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8006296:	68fb      	ldr	r3, [r7, #12]
 8006298:	2200      	movs	r2, #0
 800629a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80062a2:	2b00      	cmp	r3, #0
 80062a4:	d001      	beq.n	80062aa <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 80062a6:	2301      	movs	r3, #1
 80062a8:	e000      	b.n	80062ac <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 80062aa:	2300      	movs	r3, #0
  }
}
 80062ac:	4618      	mov	r0, r3
 80062ae:	3718      	adds	r7, #24
 80062b0:	46bd      	mov	sp, r7
 80062b2:	bd80      	pop	{r7, pc}

080062b4 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 80062b4:	b580      	push	{r7, lr}
 80062b6:	b08a      	sub	sp, #40	@ 0x28
 80062b8:	af00      	add	r7, sp, #0
 80062ba:	60f8      	str	r0, [r7, #12]
 80062bc:	60b9      	str	r1, [r7, #8]
 80062be:	607a      	str	r2, [r7, #4]
 80062c0:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 80062c2:	2301      	movs	r3, #1
 80062c4:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80062c6:	f7fc fb89 	bl	80029dc <HAL_GetTick>
 80062ca:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 80062cc:	68fb      	ldr	r3, [r7, #12]
 80062ce:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80062d2:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 80062d4:	68fb      	ldr	r3, [r7, #12]
 80062d6:	685b      	ldr	r3, [r3, #4]
 80062d8:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 80062da:	887b      	ldrh	r3, [r7, #2]
 80062dc:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80062de:	7ffb      	ldrb	r3, [r7, #31]
 80062e0:	2b01      	cmp	r3, #1
 80062e2:	d00c      	beq.n	80062fe <HAL_SPI_TransmitReceive+0x4a>
 80062e4:	69bb      	ldr	r3, [r7, #24]
 80062e6:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80062ea:	d106      	bne.n	80062fa <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80062ec:	68fb      	ldr	r3, [r7, #12]
 80062ee:	689b      	ldr	r3, [r3, #8]
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d102      	bne.n	80062fa <HAL_SPI_TransmitReceive+0x46>
 80062f4:	7ffb      	ldrb	r3, [r7, #31]
 80062f6:	2b04      	cmp	r3, #4
 80062f8:	d001      	beq.n	80062fe <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 80062fa:	2302      	movs	r3, #2
 80062fc:	e17f      	b.n	80065fe <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80062fe:	68bb      	ldr	r3, [r7, #8]
 8006300:	2b00      	cmp	r3, #0
 8006302:	d005      	beq.n	8006310 <HAL_SPI_TransmitReceive+0x5c>
 8006304:	687b      	ldr	r3, [r7, #4]
 8006306:	2b00      	cmp	r3, #0
 8006308:	d002      	beq.n	8006310 <HAL_SPI_TransmitReceive+0x5c>
 800630a:	887b      	ldrh	r3, [r7, #2]
 800630c:	2b00      	cmp	r3, #0
 800630e:	d101      	bne.n	8006314 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 8006310:	2301      	movs	r3, #1
 8006312:	e174      	b.n	80065fe <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006314:	68fb      	ldr	r3, [r7, #12]
 8006316:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800631a:	2b01      	cmp	r3, #1
 800631c:	d101      	bne.n	8006322 <HAL_SPI_TransmitReceive+0x6e>
 800631e:	2302      	movs	r3, #2
 8006320:	e16d      	b.n	80065fe <HAL_SPI_TransmitReceive+0x34a>
 8006322:	68fb      	ldr	r3, [r7, #12]
 8006324:	2201      	movs	r2, #1
 8006326:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800632a:	68fb      	ldr	r3, [r7, #12]
 800632c:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006330:	b2db      	uxtb	r3, r3
 8006332:	2b04      	cmp	r3, #4
 8006334:	d003      	beq.n	800633e <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006336:	68fb      	ldr	r3, [r7, #12]
 8006338:	2205      	movs	r2, #5
 800633a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800633e:	68fb      	ldr	r3, [r7, #12]
 8006340:	2200      	movs	r2, #0
 8006342:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006344:	68fb      	ldr	r3, [r7, #12]
 8006346:	687a      	ldr	r2, [r7, #4]
 8006348:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 800634a:	68fb      	ldr	r3, [r7, #12]
 800634c:	887a      	ldrh	r2, [r7, #2]
 800634e:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006350:	68fb      	ldr	r3, [r7, #12]
 8006352:	887a      	ldrh	r2, [r7, #2]
 8006354:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8006356:	68fb      	ldr	r3, [r7, #12]
 8006358:	68ba      	ldr	r2, [r7, #8]
 800635a:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 800635c:	68fb      	ldr	r3, [r7, #12]
 800635e:	887a      	ldrh	r2, [r7, #2]
 8006360:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 8006362:	68fb      	ldr	r3, [r7, #12]
 8006364:	887a      	ldrh	r2, [r7, #2]
 8006366:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8006368:	68fb      	ldr	r3, [r7, #12]
 800636a:	2200      	movs	r2, #0
 800636c:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 800636e:	68fb      	ldr	r3, [r7, #12]
 8006370:	2200      	movs	r2, #0
 8006372:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006374:	68fb      	ldr	r3, [r7, #12]
 8006376:	681b      	ldr	r3, [r3, #0]
 8006378:	681b      	ldr	r3, [r3, #0]
 800637a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800637e:	2b40      	cmp	r3, #64	@ 0x40
 8006380:	d007      	beq.n	8006392 <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006382:	68fb      	ldr	r3, [r7, #12]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	681a      	ldr	r2, [r3, #0]
 8006388:	68fb      	ldr	r3, [r7, #12]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006390:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006392:	68fb      	ldr	r3, [r7, #12]
 8006394:	68db      	ldr	r3, [r3, #12]
 8006396:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800639a:	d17e      	bne.n	800649a <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	685b      	ldr	r3, [r3, #4]
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d002      	beq.n	80063aa <HAL_SPI_TransmitReceive+0xf6>
 80063a4:	8afb      	ldrh	r3, [r7, #22]
 80063a6:	2b01      	cmp	r3, #1
 80063a8:	d16c      	bne.n	8006484 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063ae:	881a      	ldrh	r2, [r3, #0]
 80063b0:	68fb      	ldr	r3, [r7, #12]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80063b6:	68fb      	ldr	r3, [r7, #12]
 80063b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063ba:	1c9a      	adds	r2, r3, #2
 80063bc:	68fb      	ldr	r3, [r7, #12]
 80063be:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80063c0:	68fb      	ldr	r3, [r7, #12]
 80063c2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80063c4:	b29b      	uxth	r3, r3
 80063c6:	3b01      	subs	r3, #1
 80063c8:	b29a      	uxth	r2, r3
 80063ca:	68fb      	ldr	r3, [r7, #12]
 80063cc:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80063ce:	e059      	b.n	8006484 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80063d0:	68fb      	ldr	r3, [r7, #12]
 80063d2:	681b      	ldr	r3, [r3, #0]
 80063d4:	689b      	ldr	r3, [r3, #8]
 80063d6:	f003 0302 	and.w	r3, r3, #2
 80063da:	2b02      	cmp	r3, #2
 80063dc:	d11b      	bne.n	8006416 <HAL_SPI_TransmitReceive+0x162>
 80063de:	68fb      	ldr	r3, [r7, #12]
 80063e0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80063e2:	b29b      	uxth	r3, r3
 80063e4:	2b00      	cmp	r3, #0
 80063e6:	d016      	beq.n	8006416 <HAL_SPI_TransmitReceive+0x162>
 80063e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80063ea:	2b01      	cmp	r3, #1
 80063ec:	d113      	bne.n	8006416 <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80063ee:	68fb      	ldr	r3, [r7, #12]
 80063f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063f2:	881a      	ldrh	r2, [r3, #0]
 80063f4:	68fb      	ldr	r3, [r7, #12]
 80063f6:	681b      	ldr	r3, [r3, #0]
 80063f8:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80063fe:	1c9a      	adds	r2, r3, #2
 8006400:	68fb      	ldr	r3, [r7, #12]
 8006402:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006404:	68fb      	ldr	r3, [r7, #12]
 8006406:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006408:	b29b      	uxth	r3, r3
 800640a:	3b01      	subs	r3, #1
 800640c:	b29a      	uxth	r2, r3
 800640e:	68fb      	ldr	r3, [r7, #12]
 8006410:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006412:	2300      	movs	r3, #0
 8006414:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006416:	68fb      	ldr	r3, [r7, #12]
 8006418:	681b      	ldr	r3, [r3, #0]
 800641a:	689b      	ldr	r3, [r3, #8]
 800641c:	f003 0301 	and.w	r3, r3, #1
 8006420:	2b01      	cmp	r3, #1
 8006422:	d119      	bne.n	8006458 <HAL_SPI_TransmitReceive+0x1a4>
 8006424:	68fb      	ldr	r3, [r7, #12]
 8006426:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006428:	b29b      	uxth	r3, r3
 800642a:	2b00      	cmp	r3, #0
 800642c:	d014      	beq.n	8006458 <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	681b      	ldr	r3, [r3, #0]
 8006432:	68da      	ldr	r2, [r3, #12]
 8006434:	68fb      	ldr	r3, [r7, #12]
 8006436:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006438:	b292      	uxth	r2, r2
 800643a:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 800643c:	68fb      	ldr	r3, [r7, #12]
 800643e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006440:	1c9a      	adds	r2, r3, #2
 8006442:	68fb      	ldr	r3, [r7, #12]
 8006444:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006446:	68fb      	ldr	r3, [r7, #12]
 8006448:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800644a:	b29b      	uxth	r3, r3
 800644c:	3b01      	subs	r3, #1
 800644e:	b29a      	uxth	r2, r3
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006454:	2301      	movs	r3, #1
 8006456:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006458:	f7fc fac0 	bl	80029dc <HAL_GetTick>
 800645c:	4602      	mov	r2, r0
 800645e:	6a3b      	ldr	r3, [r7, #32]
 8006460:	1ad3      	subs	r3, r2, r3
 8006462:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006464:	429a      	cmp	r2, r3
 8006466:	d80d      	bhi.n	8006484 <HAL_SPI_TransmitReceive+0x1d0>
 8006468:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800646a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800646e:	d009      	beq.n	8006484 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8006470:	68fb      	ldr	r3, [r7, #12]
 8006472:	2201      	movs	r2, #1
 8006474:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006478:	68fb      	ldr	r3, [r7, #12]
 800647a:	2200      	movs	r2, #0
 800647c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006480:	2303      	movs	r3, #3
 8006482:	e0bc      	b.n	80065fe <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006484:	68fb      	ldr	r3, [r7, #12]
 8006486:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006488:	b29b      	uxth	r3, r3
 800648a:	2b00      	cmp	r3, #0
 800648c:	d1a0      	bne.n	80063d0 <HAL_SPI_TransmitReceive+0x11c>
 800648e:	68fb      	ldr	r3, [r7, #12]
 8006490:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006492:	b29b      	uxth	r3, r3
 8006494:	2b00      	cmp	r3, #0
 8006496:	d19b      	bne.n	80063d0 <HAL_SPI_TransmitReceive+0x11c>
 8006498:	e082      	b.n	80065a0 <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800649a:	68fb      	ldr	r3, [r7, #12]
 800649c:	685b      	ldr	r3, [r3, #4]
 800649e:	2b00      	cmp	r3, #0
 80064a0:	d002      	beq.n	80064a8 <HAL_SPI_TransmitReceive+0x1f4>
 80064a2:	8afb      	ldrh	r3, [r7, #22]
 80064a4:	2b01      	cmp	r3, #1
 80064a6:	d171      	bne.n	800658c <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 80064a8:	68fb      	ldr	r3, [r7, #12]
 80064aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80064ac:	68fb      	ldr	r3, [r7, #12]
 80064ae:	681b      	ldr	r3, [r3, #0]
 80064b0:	330c      	adds	r3, #12
 80064b2:	7812      	ldrb	r2, [r2, #0]
 80064b4:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80064b6:	68fb      	ldr	r3, [r7, #12]
 80064b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80064ba:	1c5a      	adds	r2, r3, #1
 80064bc:	68fb      	ldr	r3, [r7, #12]
 80064be:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80064c4:	b29b      	uxth	r3, r3
 80064c6:	3b01      	subs	r3, #1
 80064c8:	b29a      	uxth	r2, r3
 80064ca:	68fb      	ldr	r3, [r7, #12]
 80064cc:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80064ce:	e05d      	b.n	800658c <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80064d0:	68fb      	ldr	r3, [r7, #12]
 80064d2:	681b      	ldr	r3, [r3, #0]
 80064d4:	689b      	ldr	r3, [r3, #8]
 80064d6:	f003 0302 	and.w	r3, r3, #2
 80064da:	2b02      	cmp	r3, #2
 80064dc:	d11c      	bne.n	8006518 <HAL_SPI_TransmitReceive+0x264>
 80064de:	68fb      	ldr	r3, [r7, #12]
 80064e0:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80064e2:	b29b      	uxth	r3, r3
 80064e4:	2b00      	cmp	r3, #0
 80064e6:	d017      	beq.n	8006518 <HAL_SPI_TransmitReceive+0x264>
 80064e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80064ea:	2b01      	cmp	r3, #1
 80064ec:	d114      	bne.n	8006518 <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80064f2:	68fb      	ldr	r3, [r7, #12]
 80064f4:	681b      	ldr	r3, [r3, #0]
 80064f6:	330c      	adds	r3, #12
 80064f8:	7812      	ldrb	r2, [r2, #0]
 80064fa:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006500:	1c5a      	adds	r2, r3, #1
 8006502:	68fb      	ldr	r3, [r7, #12]
 8006504:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006506:	68fb      	ldr	r3, [r7, #12]
 8006508:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800650a:	b29b      	uxth	r3, r3
 800650c:	3b01      	subs	r3, #1
 800650e:	b29a      	uxth	r2, r3
 8006510:	68fb      	ldr	r3, [r7, #12]
 8006512:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8006514:	2300      	movs	r3, #0
 8006516:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8006518:	68fb      	ldr	r3, [r7, #12]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	689b      	ldr	r3, [r3, #8]
 800651e:	f003 0301 	and.w	r3, r3, #1
 8006522:	2b01      	cmp	r3, #1
 8006524:	d119      	bne.n	800655a <HAL_SPI_TransmitReceive+0x2a6>
 8006526:	68fb      	ldr	r3, [r7, #12]
 8006528:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800652a:	b29b      	uxth	r3, r3
 800652c:	2b00      	cmp	r3, #0
 800652e:	d014      	beq.n	800655a <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8006530:	68fb      	ldr	r3, [r7, #12]
 8006532:	681b      	ldr	r3, [r3, #0]
 8006534:	68da      	ldr	r2, [r3, #12]
 8006536:	68fb      	ldr	r3, [r7, #12]
 8006538:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800653a:	b2d2      	uxtb	r2, r2
 800653c:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800653e:	68fb      	ldr	r3, [r7, #12]
 8006540:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006542:	1c5a      	adds	r2, r3, #1
 8006544:	68fb      	ldr	r3, [r7, #12]
 8006546:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006548:	68fb      	ldr	r3, [r7, #12]
 800654a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800654c:	b29b      	uxth	r3, r3
 800654e:	3b01      	subs	r3, #1
 8006550:	b29a      	uxth	r2, r3
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006556:	2301      	movs	r3, #1
 8006558:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800655a:	f7fc fa3f 	bl	80029dc <HAL_GetTick>
 800655e:	4602      	mov	r2, r0
 8006560:	6a3b      	ldr	r3, [r7, #32]
 8006562:	1ad3      	subs	r3, r2, r3
 8006564:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006566:	429a      	cmp	r2, r3
 8006568:	d803      	bhi.n	8006572 <HAL_SPI_TransmitReceive+0x2be>
 800656a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800656c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006570:	d102      	bne.n	8006578 <HAL_SPI_TransmitReceive+0x2c4>
 8006572:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006574:	2b00      	cmp	r3, #0
 8006576:	d109      	bne.n	800658c <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8006578:	68fb      	ldr	r3, [r7, #12]
 800657a:	2201      	movs	r2, #1
 800657c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	2200      	movs	r2, #0
 8006584:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006588:	2303      	movs	r3, #3
 800658a:	e038      	b.n	80065fe <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800658c:	68fb      	ldr	r3, [r7, #12]
 800658e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006590:	b29b      	uxth	r3, r3
 8006592:	2b00      	cmp	r3, #0
 8006594:	d19c      	bne.n	80064d0 <HAL_SPI_TransmitReceive+0x21c>
 8006596:	68fb      	ldr	r3, [r7, #12]
 8006598:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800659a:	b29b      	uxth	r3, r3
 800659c:	2b00      	cmp	r3, #0
 800659e:	d197      	bne.n	80064d0 <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80065a0:	6a3a      	ldr	r2, [r7, #32]
 80065a2:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80065a4:	68f8      	ldr	r0, [r7, #12]
 80065a6:	f000 fb63 	bl	8006c70 <SPI_EndRxTxTransaction>
 80065aa:	4603      	mov	r3, r0
 80065ac:	2b00      	cmp	r3, #0
 80065ae:	d008      	beq.n	80065c2 <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80065b0:	68fb      	ldr	r3, [r7, #12]
 80065b2:	2220      	movs	r2, #32
 80065b4:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 80065b6:	68fb      	ldr	r3, [r7, #12]
 80065b8:	2200      	movs	r2, #0
 80065ba:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 80065be:	2301      	movs	r3, #1
 80065c0:	e01d      	b.n	80065fe <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80065c2:	68fb      	ldr	r3, [r7, #12]
 80065c4:	689b      	ldr	r3, [r3, #8]
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	d10a      	bne.n	80065e0 <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80065ca:	2300      	movs	r3, #0
 80065cc:	613b      	str	r3, [r7, #16]
 80065ce:	68fb      	ldr	r3, [r7, #12]
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	68db      	ldr	r3, [r3, #12]
 80065d4:	613b      	str	r3, [r7, #16]
 80065d6:	68fb      	ldr	r3, [r7, #12]
 80065d8:	681b      	ldr	r3, [r3, #0]
 80065da:	689b      	ldr	r3, [r3, #8]
 80065dc:	613b      	str	r3, [r7, #16]
 80065de:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 80065e0:	68fb      	ldr	r3, [r7, #12]
 80065e2:	2201      	movs	r2, #1
 80065e4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80065e8:	68fb      	ldr	r3, [r7, #12]
 80065ea:	2200      	movs	r2, #0
 80065ec:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80065f0:	68fb      	ldr	r3, [r7, #12]
 80065f2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80065f4:	2b00      	cmp	r3, #0
 80065f6:	d001      	beq.n	80065fc <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 80065f8:	2301      	movs	r3, #1
 80065fa:	e000      	b.n	80065fe <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 80065fc:	2300      	movs	r3, #0
  }
}
 80065fe:	4618      	mov	r0, r3
 8006600:	3728      	adds	r7, #40	@ 0x28
 8006602:	46bd      	mov	sp, r7
 8006604:	bd80      	pop	{r7, pc}
	...

08006608 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 8006608:	b580      	push	{r7, lr}
 800660a:	b084      	sub	sp, #16
 800660c:	af00      	add	r7, sp, #0
 800660e:	60f8      	str	r0, [r7, #12]
 8006610:	60b9      	str	r1, [r7, #8]
 8006612:	4613      	mov	r3, r2
 8006614:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800661c:	b2db      	uxtb	r3, r3
 800661e:	2b01      	cmp	r3, #1
 8006620:	d001      	beq.n	8006626 <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 8006622:	2302      	movs	r3, #2
 8006624:	e097      	b.n	8006756 <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 8006626:	68bb      	ldr	r3, [r7, #8]
 8006628:	2b00      	cmp	r3, #0
 800662a:	d002      	beq.n	8006632 <HAL_SPI_Transmit_DMA+0x2a>
 800662c:	88fb      	ldrh	r3, [r7, #6]
 800662e:	2b00      	cmp	r3, #0
 8006630:	d101      	bne.n	8006636 <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 8006632:	2301      	movs	r3, #1
 8006634:	e08f      	b.n	8006756 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800663c:	2b01      	cmp	r3, #1
 800663e:	d101      	bne.n	8006644 <HAL_SPI_Transmit_DMA+0x3c>
 8006640:	2302      	movs	r3, #2
 8006642:	e088      	b.n	8006756 <HAL_SPI_Transmit_DMA+0x14e>
 8006644:	68fb      	ldr	r3, [r7, #12]
 8006646:	2201      	movs	r2, #1
 8006648:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 800664c:	68fb      	ldr	r3, [r7, #12]
 800664e:	2203      	movs	r2, #3
 8006650:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006654:	68fb      	ldr	r3, [r7, #12]
 8006656:	2200      	movs	r2, #0
 8006658:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800665a:	68fb      	ldr	r3, [r7, #12]
 800665c:	68ba      	ldr	r2, [r7, #8]
 800665e:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006660:	68fb      	ldr	r3, [r7, #12]
 8006662:	88fa      	ldrh	r2, [r7, #6]
 8006664:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8006666:	68fb      	ldr	r3, [r7, #12]
 8006668:	88fa      	ldrh	r2, [r7, #6]
 800666a:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800666c:	68fb      	ldr	r3, [r7, #12]
 800666e:	2200      	movs	r2, #0
 8006670:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 8006672:	68fb      	ldr	r3, [r7, #12]
 8006674:	2200      	movs	r2, #0
 8006676:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8006678:	68fb      	ldr	r3, [r7, #12]
 800667a:	2200      	movs	r2, #0
 800667c:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	2200      	movs	r2, #0
 8006682:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006684:	68fb      	ldr	r3, [r7, #12]
 8006686:	2200      	movs	r2, #0
 8006688:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800668a:	68fb      	ldr	r3, [r7, #12]
 800668c:	689b      	ldr	r3, [r3, #8]
 800668e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006692:	d10f      	bne.n	80066b4 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006694:	68fb      	ldr	r3, [r7, #12]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	681a      	ldr	r2, [r3, #0]
 800669a:	68fb      	ldr	r3, [r7, #12]
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80066a2:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80066a4:	68fb      	ldr	r3, [r7, #12]
 80066a6:	681b      	ldr	r3, [r3, #0]
 80066a8:	681a      	ldr	r2, [r3, #0]
 80066aa:	68fb      	ldr	r3, [r7, #12]
 80066ac:	681b      	ldr	r3, [r3, #0]
 80066ae:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80066b2:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80066b8:	4a29      	ldr	r2, [pc, #164]	@ (8006760 <HAL_SPI_Transmit_DMA+0x158>)
 80066ba:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 80066bc:	68fb      	ldr	r3, [r7, #12]
 80066be:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80066c0:	4a28      	ldr	r2, [pc, #160]	@ (8006764 <HAL_SPI_Transmit_DMA+0x15c>)
 80066c2:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 80066c4:	68fb      	ldr	r3, [r7, #12]
 80066c6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80066c8:	4a27      	ldr	r2, [pc, #156]	@ (8006768 <HAL_SPI_Transmit_DMA+0x160>)
 80066ca:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 80066cc:	68fb      	ldr	r3, [r7, #12]
 80066ce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80066d0:	2200      	movs	r2, #0
 80066d2:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80066d4:	68fb      	ldr	r3, [r7, #12]
 80066d6:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 80066d8:	68fb      	ldr	r3, [r7, #12]
 80066da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066dc:	4619      	mov	r1, r3
 80066de:	68fb      	ldr	r3, [r7, #12]
 80066e0:	681b      	ldr	r3, [r3, #0]
 80066e2:	330c      	adds	r3, #12
 80066e4:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80066ea:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80066ec:	f7fd f802 	bl	80036f4 <HAL_DMA_Start_IT>
 80066f0:	4603      	mov	r3, r0
 80066f2:	2b00      	cmp	r3, #0
 80066f4:	d00b      	beq.n	800670e <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80066fa:	f043 0210 	orr.w	r2, r3, #16
 80066fe:	68fb      	ldr	r3, [r7, #12]
 8006700:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 8006702:	68fb      	ldr	r3, [r7, #12]
 8006704:	2200      	movs	r2, #0
 8006706:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 800670a:	2301      	movs	r3, #1
 800670c:	e023      	b.n	8006756 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	681b      	ldr	r3, [r3, #0]
 8006714:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006718:	2b40      	cmp	r3, #64	@ 0x40
 800671a:	d007      	beq.n	800672c <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	681b      	ldr	r3, [r3, #0]
 8006720:	681a      	ldr	r2, [r3, #0]
 8006722:	68fb      	ldr	r3, [r7, #12]
 8006724:	681b      	ldr	r3, [r3, #0]
 8006726:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800672a:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 800672c:	68fb      	ldr	r3, [r7, #12]
 800672e:	2200      	movs	r2, #0
 8006730:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8006734:	68fb      	ldr	r3, [r7, #12]
 8006736:	681b      	ldr	r3, [r3, #0]
 8006738:	685a      	ldr	r2, [r3, #4]
 800673a:	68fb      	ldr	r3, [r7, #12]
 800673c:	681b      	ldr	r3, [r3, #0]
 800673e:	f042 0220 	orr.w	r2, r2, #32
 8006742:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8006744:	68fb      	ldr	r3, [r7, #12]
 8006746:	681b      	ldr	r3, [r3, #0]
 8006748:	685a      	ldr	r2, [r3, #4]
 800674a:	68fb      	ldr	r3, [r7, #12]
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	f042 0202 	orr.w	r2, r2, #2
 8006752:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 8006754:	2300      	movs	r3, #0
}
 8006756:	4618      	mov	r0, r3
 8006758:	3710      	adds	r7, #16
 800675a:	46bd      	mov	sp, r7
 800675c:	bd80      	pop	{r7, pc}
 800675e:	bf00      	nop
 8006760:	08006a11 	.word	0x08006a11
 8006764:	08006969 	.word	0x08006969
 8006768:	08006a2d 	.word	0x08006a2d

0800676c <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 800676c:	b580      	push	{r7, lr}
 800676e:	b088      	sub	sp, #32
 8006770:	af00      	add	r7, sp, #0
 8006772:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8006774:	687b      	ldr	r3, [r7, #4]
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	685b      	ldr	r3, [r3, #4]
 800677a:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 800677c:	687b      	ldr	r3, [r7, #4]
 800677e:	681b      	ldr	r3, [r3, #0]
 8006780:	689b      	ldr	r3, [r3, #8]
 8006782:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006784:	69bb      	ldr	r3, [r7, #24]
 8006786:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800678a:	2b00      	cmp	r3, #0
 800678c:	d10e      	bne.n	80067ac <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 800678e:	69bb      	ldr	r3, [r7, #24]
 8006790:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006794:	2b00      	cmp	r3, #0
 8006796:	d009      	beq.n	80067ac <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006798:	69fb      	ldr	r3, [r7, #28]
 800679a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800679e:	2b00      	cmp	r3, #0
 80067a0:	d004      	beq.n	80067ac <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 80067a2:	687b      	ldr	r3, [r7, #4]
 80067a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80067a6:	6878      	ldr	r0, [r7, #4]
 80067a8:	4798      	blx	r3
    return;
 80067aa:	e0ce      	b.n	800694a <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 80067ac:	69bb      	ldr	r3, [r7, #24]
 80067ae:	f003 0302 	and.w	r3, r3, #2
 80067b2:	2b00      	cmp	r3, #0
 80067b4:	d009      	beq.n	80067ca <HAL_SPI_IRQHandler+0x5e>
 80067b6:	69fb      	ldr	r3, [r7, #28]
 80067b8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80067bc:	2b00      	cmp	r3, #0
 80067be:	d004      	beq.n	80067ca <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80067c4:	6878      	ldr	r0, [r7, #4]
 80067c6:	4798      	blx	r3
    return;
 80067c8:	e0bf      	b.n	800694a <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 80067ca:	69bb      	ldr	r3, [r7, #24]
 80067cc:	f003 0320 	and.w	r3, r3, #32
 80067d0:	2b00      	cmp	r3, #0
 80067d2:	d10a      	bne.n	80067ea <HAL_SPI_IRQHandler+0x7e>
 80067d4:	69bb      	ldr	r3, [r7, #24]
 80067d6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067da:	2b00      	cmp	r3, #0
 80067dc:	d105      	bne.n	80067ea <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 80067de:	69bb      	ldr	r3, [r7, #24]
 80067e0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80067e4:	2b00      	cmp	r3, #0
 80067e6:	f000 80b0 	beq.w	800694a <HAL_SPI_IRQHandler+0x1de>
 80067ea:	69fb      	ldr	r3, [r7, #28]
 80067ec:	f003 0320 	and.w	r3, r3, #32
 80067f0:	2b00      	cmp	r3, #0
 80067f2:	f000 80aa 	beq.w	800694a <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 80067f6:	69bb      	ldr	r3, [r7, #24]
 80067f8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067fc:	2b00      	cmp	r3, #0
 80067fe:	d023      	beq.n	8006848 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006800:	687b      	ldr	r3, [r7, #4]
 8006802:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006806:	b2db      	uxtb	r3, r3
 8006808:	2b03      	cmp	r3, #3
 800680a:	d011      	beq.n	8006830 <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006810:	f043 0204 	orr.w	r2, r3, #4
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006818:	2300      	movs	r3, #0
 800681a:	617b      	str	r3, [r7, #20]
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	68db      	ldr	r3, [r3, #12]
 8006822:	617b      	str	r3, [r7, #20]
 8006824:	687b      	ldr	r3, [r7, #4]
 8006826:	681b      	ldr	r3, [r3, #0]
 8006828:	689b      	ldr	r3, [r3, #8]
 800682a:	617b      	str	r3, [r7, #20]
 800682c:	697b      	ldr	r3, [r7, #20]
 800682e:	e00b      	b.n	8006848 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006830:	2300      	movs	r3, #0
 8006832:	613b      	str	r3, [r7, #16]
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	68db      	ldr	r3, [r3, #12]
 800683a:	613b      	str	r3, [r7, #16]
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	689b      	ldr	r3, [r3, #8]
 8006842:	613b      	str	r3, [r7, #16]
 8006844:	693b      	ldr	r3, [r7, #16]
        return;
 8006846:	e080      	b.n	800694a <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006848:	69bb      	ldr	r3, [r7, #24]
 800684a:	f003 0320 	and.w	r3, r3, #32
 800684e:	2b00      	cmp	r3, #0
 8006850:	d014      	beq.n	800687c <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006856:	f043 0201 	orr.w	r2, r3, #1
 800685a:	687b      	ldr	r3, [r7, #4]
 800685c:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 800685e:	2300      	movs	r3, #0
 8006860:	60fb      	str	r3, [r7, #12]
 8006862:	687b      	ldr	r3, [r7, #4]
 8006864:	681b      	ldr	r3, [r3, #0]
 8006866:	689b      	ldr	r3, [r3, #8]
 8006868:	60fb      	str	r3, [r7, #12]
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	681b      	ldr	r3, [r3, #0]
 800686e:	681a      	ldr	r2, [r3, #0]
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006878:	601a      	str	r2, [r3, #0]
 800687a:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 800687c:	69bb      	ldr	r3, [r7, #24]
 800687e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006882:	2b00      	cmp	r3, #0
 8006884:	d00c      	beq.n	80068a0 <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006886:	687b      	ldr	r3, [r7, #4]
 8006888:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800688a:	f043 0208 	orr.w	r2, r3, #8
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006892:	2300      	movs	r3, #0
 8006894:	60bb      	str	r3, [r7, #8]
 8006896:	687b      	ldr	r3, [r7, #4]
 8006898:	681b      	ldr	r3, [r3, #0]
 800689a:	689b      	ldr	r3, [r3, #8]
 800689c:	60bb      	str	r3, [r7, #8]
 800689e:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	d04f      	beq.n	8006948 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 80068a8:	687b      	ldr	r3, [r7, #4]
 80068aa:	681b      	ldr	r3, [r3, #0]
 80068ac:	685a      	ldr	r2, [r3, #4]
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	681b      	ldr	r3, [r3, #0]
 80068b2:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80068b6:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	2201      	movs	r2, #1
 80068bc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 80068c0:	69fb      	ldr	r3, [r7, #28]
 80068c2:	f003 0302 	and.w	r3, r3, #2
 80068c6:	2b00      	cmp	r3, #0
 80068c8:	d104      	bne.n	80068d4 <HAL_SPI_IRQHandler+0x168>
 80068ca:	69fb      	ldr	r3, [r7, #28]
 80068cc:	f003 0301 	and.w	r3, r3, #1
 80068d0:	2b00      	cmp	r3, #0
 80068d2:	d034      	beq.n	800693e <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	681b      	ldr	r3, [r3, #0]
 80068d8:	685a      	ldr	r2, [r3, #4]
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	681b      	ldr	r3, [r3, #0]
 80068de:	f022 0203 	bic.w	r2, r2, #3
 80068e2:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80068e8:	2b00      	cmp	r3, #0
 80068ea:	d011      	beq.n	8006910 <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 80068ec:	687b      	ldr	r3, [r7, #4]
 80068ee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80068f0:	4a17      	ldr	r2, [pc, #92]	@ (8006950 <HAL_SPI_IRQHandler+0x1e4>)
 80068f2:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80068f8:	4618      	mov	r0, r3
 80068fa:	f7fc ff53 	bl	80037a4 <HAL_DMA_Abort_IT>
 80068fe:	4603      	mov	r3, r0
 8006900:	2b00      	cmp	r3, #0
 8006902:	d005      	beq.n	8006910 <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006908:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006914:	2b00      	cmp	r3, #0
 8006916:	d016      	beq.n	8006946 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006918:	687b      	ldr	r3, [r7, #4]
 800691a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800691c:	4a0c      	ldr	r2, [pc, #48]	@ (8006950 <HAL_SPI_IRQHandler+0x1e4>)
 800691e:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006920:	687b      	ldr	r3, [r7, #4]
 8006922:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006924:	4618      	mov	r0, r3
 8006926:	f7fc ff3d 	bl	80037a4 <HAL_DMA_Abort_IT>
 800692a:	4603      	mov	r3, r0
 800692c:	2b00      	cmp	r3, #0
 800692e:	d00a      	beq.n	8006946 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006930:	687b      	ldr	r3, [r7, #4]
 8006932:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006934:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 800693c:	e003      	b.n	8006946 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 800693e:	6878      	ldr	r0, [r7, #4]
 8006940:	f7fb fce6 	bl	8002310 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8006944:	e000      	b.n	8006948 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8006946:	bf00      	nop
    return;
 8006948:	bf00      	nop
  }
}
 800694a:	3720      	adds	r7, #32
 800694c:	46bd      	mov	sp, r7
 800694e:	bd80      	pop	{r7, pc}
 8006950:	08006a6d 	.word	0x08006a6d

08006954 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8006954:	b480      	push	{r7}
 8006956:	b083      	sub	sp, #12
 8006958:	af00      	add	r7, sp, #0
 800695a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 800695c:	bf00      	nop
 800695e:	370c      	adds	r7, #12
 8006960:	46bd      	mov	sp, r7
 8006962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006966:	4770      	bx	lr

08006968 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006968:	b580      	push	{r7, lr}
 800696a:	b086      	sub	sp, #24
 800696c:	af00      	add	r7, sp, #0
 800696e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006970:	687b      	ldr	r3, [r7, #4]
 8006972:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006974:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006976:	f7fc f831 	bl	80029dc <HAL_GetTick>
 800697a:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	681b      	ldr	r3, [r3, #0]
 8006980:	681b      	ldr	r3, [r3, #0]
 8006982:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006986:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800698a:	d03b      	beq.n	8006a04 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 800698c:	697b      	ldr	r3, [r7, #20]
 800698e:	681b      	ldr	r3, [r3, #0]
 8006990:	685a      	ldr	r2, [r3, #4]
 8006992:	697b      	ldr	r3, [r7, #20]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	f022 0220 	bic.w	r2, r2, #32
 800699a:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 800699c:	697b      	ldr	r3, [r7, #20]
 800699e:	681b      	ldr	r3, [r3, #0]
 80069a0:	685a      	ldr	r2, [r3, #4]
 80069a2:	697b      	ldr	r3, [r7, #20]
 80069a4:	681b      	ldr	r3, [r3, #0]
 80069a6:	f022 0202 	bic.w	r2, r2, #2
 80069aa:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 80069ac:	693a      	ldr	r2, [r7, #16]
 80069ae:	2164      	movs	r1, #100	@ 0x64
 80069b0:	6978      	ldr	r0, [r7, #20]
 80069b2:	f000 f95d 	bl	8006c70 <SPI_EndRxTxTransaction>
 80069b6:	4603      	mov	r3, r0
 80069b8:	2b00      	cmp	r3, #0
 80069ba:	d005      	beq.n	80069c8 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80069bc:	697b      	ldr	r3, [r7, #20]
 80069be:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80069c0:	f043 0220 	orr.w	r2, r3, #32
 80069c4:	697b      	ldr	r3, [r7, #20]
 80069c6:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80069c8:	697b      	ldr	r3, [r7, #20]
 80069ca:	689b      	ldr	r3, [r3, #8]
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d10a      	bne.n	80069e6 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80069d0:	2300      	movs	r3, #0
 80069d2:	60fb      	str	r3, [r7, #12]
 80069d4:	697b      	ldr	r3, [r7, #20]
 80069d6:	681b      	ldr	r3, [r3, #0]
 80069d8:	68db      	ldr	r3, [r3, #12]
 80069da:	60fb      	str	r3, [r7, #12]
 80069dc:	697b      	ldr	r3, [r7, #20]
 80069de:	681b      	ldr	r3, [r3, #0]
 80069e0:	689b      	ldr	r3, [r3, #8]
 80069e2:	60fb      	str	r3, [r7, #12]
 80069e4:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 80069e6:	697b      	ldr	r3, [r7, #20]
 80069e8:	2200      	movs	r2, #0
 80069ea:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 80069ec:	697b      	ldr	r3, [r7, #20]
 80069ee:	2201      	movs	r2, #1
 80069f0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80069f4:	697b      	ldr	r3, [r7, #20]
 80069f6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80069f8:	2b00      	cmp	r3, #0
 80069fa:	d003      	beq.n	8006a04 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 80069fc:	6978      	ldr	r0, [r7, #20]
 80069fe:	f7fb fc87 	bl	8002310 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8006a02:	e002      	b.n	8006a0a <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8006a04:	6978      	ldr	r0, [r7, #20]
 8006a06:	f7fb fc99 	bl	800233c <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006a0a:	3718      	adds	r7, #24
 8006a0c:	46bd      	mov	sp, r7
 8006a0e:	bd80      	pop	{r7, pc}

08006a10 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006a10:	b580      	push	{r7, lr}
 8006a12:	b084      	sub	sp, #16
 8006a14:	af00      	add	r7, sp, #0
 8006a16:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006a18:	687b      	ldr	r3, [r7, #4]
 8006a1a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a1c:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8006a1e:	68f8      	ldr	r0, [r7, #12]
 8006a20:	f7ff ff98 	bl	8006954 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006a24:	bf00      	nop
 8006a26:	3710      	adds	r7, #16
 8006a28:	46bd      	mov	sp, r7
 8006a2a:	bd80      	pop	{r7, pc}

08006a2c <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8006a2c:	b580      	push	{r7, lr}
 8006a2e:	b084      	sub	sp, #16
 8006a30:	af00      	add	r7, sp, #0
 8006a32:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a38:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8006a3a:	68fb      	ldr	r3, [r7, #12]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	685a      	ldr	r2, [r3, #4]
 8006a40:	68fb      	ldr	r3, [r7, #12]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	f022 0203 	bic.w	r2, r2, #3
 8006a48:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006a4a:	68fb      	ldr	r3, [r7, #12]
 8006a4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006a4e:	f043 0210 	orr.w	r2, r3, #16
 8006a52:	68fb      	ldr	r3, [r7, #12]
 8006a54:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8006a56:	68fb      	ldr	r3, [r7, #12]
 8006a58:	2201      	movs	r2, #1
 8006a5a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006a5e:	68f8      	ldr	r0, [r7, #12]
 8006a60:	f7fb fc56 	bl	8002310 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006a64:	bf00      	nop
 8006a66:	3710      	adds	r7, #16
 8006a68:	46bd      	mov	sp, r7
 8006a6a:	bd80      	pop	{r7, pc}

08006a6c <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006a6c:	b580      	push	{r7, lr}
 8006a6e:	b084      	sub	sp, #16
 8006a70:	af00      	add	r7, sp, #0
 8006a72:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006a78:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	2200      	movs	r2, #0
 8006a7e:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8006a80:	68fb      	ldr	r3, [r7, #12]
 8006a82:	2200      	movs	r2, #0
 8006a84:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006a86:	68f8      	ldr	r0, [r7, #12]
 8006a88:	f7fb fc42 	bl	8002310 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006a8c:	bf00      	nop
 8006a8e:	3710      	adds	r7, #16
 8006a90:	46bd      	mov	sp, r7
 8006a92:	bd80      	pop	{r7, pc}

08006a94 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006a94:	b580      	push	{r7, lr}
 8006a96:	b088      	sub	sp, #32
 8006a98:	af00      	add	r7, sp, #0
 8006a9a:	60f8      	str	r0, [r7, #12]
 8006a9c:	60b9      	str	r1, [r7, #8]
 8006a9e:	603b      	str	r3, [r7, #0]
 8006aa0:	4613      	mov	r3, r2
 8006aa2:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006aa4:	f7fb ff9a 	bl	80029dc <HAL_GetTick>
 8006aa8:	4602      	mov	r2, r0
 8006aaa:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006aac:	1a9b      	subs	r3, r3, r2
 8006aae:	683a      	ldr	r2, [r7, #0]
 8006ab0:	4413      	add	r3, r2
 8006ab2:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006ab4:	f7fb ff92 	bl	80029dc <HAL_GetTick>
 8006ab8:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006aba:	4b39      	ldr	r3, [pc, #228]	@ (8006ba0 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	015b      	lsls	r3, r3, #5
 8006ac0:	0d1b      	lsrs	r3, r3, #20
 8006ac2:	69fa      	ldr	r2, [r7, #28]
 8006ac4:	fb02 f303 	mul.w	r3, r2, r3
 8006ac8:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006aca:	e054      	b.n	8006b76 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006acc:	683b      	ldr	r3, [r7, #0]
 8006ace:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ad2:	d050      	beq.n	8006b76 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006ad4:	f7fb ff82 	bl	80029dc <HAL_GetTick>
 8006ad8:	4602      	mov	r2, r0
 8006ada:	69bb      	ldr	r3, [r7, #24]
 8006adc:	1ad3      	subs	r3, r2, r3
 8006ade:	69fa      	ldr	r2, [r7, #28]
 8006ae0:	429a      	cmp	r2, r3
 8006ae2:	d902      	bls.n	8006aea <SPI_WaitFlagStateUntilTimeout+0x56>
 8006ae4:	69fb      	ldr	r3, [r7, #28]
 8006ae6:	2b00      	cmp	r3, #0
 8006ae8:	d13d      	bne.n	8006b66 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006aea:	68fb      	ldr	r3, [r7, #12]
 8006aec:	681b      	ldr	r3, [r3, #0]
 8006aee:	685a      	ldr	r2, [r3, #4]
 8006af0:	68fb      	ldr	r3, [r7, #12]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006af8:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006afa:	68fb      	ldr	r3, [r7, #12]
 8006afc:	685b      	ldr	r3, [r3, #4]
 8006afe:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006b02:	d111      	bne.n	8006b28 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006b04:	68fb      	ldr	r3, [r7, #12]
 8006b06:	689b      	ldr	r3, [r3, #8]
 8006b08:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006b0c:	d004      	beq.n	8006b18 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006b0e:	68fb      	ldr	r3, [r7, #12]
 8006b10:	689b      	ldr	r3, [r3, #8]
 8006b12:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006b16:	d107      	bne.n	8006b28 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006b18:	68fb      	ldr	r3, [r7, #12]
 8006b1a:	681b      	ldr	r3, [r3, #0]
 8006b1c:	681a      	ldr	r2, [r3, #0]
 8006b1e:	68fb      	ldr	r3, [r7, #12]
 8006b20:	681b      	ldr	r3, [r3, #0]
 8006b22:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b26:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006b28:	68fb      	ldr	r3, [r7, #12]
 8006b2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006b2c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006b30:	d10f      	bne.n	8006b52 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006b32:	68fb      	ldr	r3, [r7, #12]
 8006b34:	681b      	ldr	r3, [r3, #0]
 8006b36:	681a      	ldr	r2, [r3, #0]
 8006b38:	68fb      	ldr	r3, [r7, #12]
 8006b3a:	681b      	ldr	r3, [r3, #0]
 8006b3c:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006b40:	601a      	str	r2, [r3, #0]
 8006b42:	68fb      	ldr	r3, [r7, #12]
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	681a      	ldr	r2, [r3, #0]
 8006b48:	68fb      	ldr	r3, [r7, #12]
 8006b4a:	681b      	ldr	r3, [r3, #0]
 8006b4c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006b50:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006b52:	68fb      	ldr	r3, [r7, #12]
 8006b54:	2201      	movs	r2, #1
 8006b56:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006b5a:	68fb      	ldr	r3, [r7, #12]
 8006b5c:	2200      	movs	r2, #0
 8006b5e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8006b62:	2303      	movs	r3, #3
 8006b64:	e017      	b.n	8006b96 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006b66:	697b      	ldr	r3, [r7, #20]
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	d101      	bne.n	8006b70 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006b6c:	2300      	movs	r3, #0
 8006b6e:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006b70:	697b      	ldr	r3, [r7, #20]
 8006b72:	3b01      	subs	r3, #1
 8006b74:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006b76:	68fb      	ldr	r3, [r7, #12]
 8006b78:	681b      	ldr	r3, [r3, #0]
 8006b7a:	689a      	ldr	r2, [r3, #8]
 8006b7c:	68bb      	ldr	r3, [r7, #8]
 8006b7e:	4013      	ands	r3, r2
 8006b80:	68ba      	ldr	r2, [r7, #8]
 8006b82:	429a      	cmp	r2, r3
 8006b84:	bf0c      	ite	eq
 8006b86:	2301      	moveq	r3, #1
 8006b88:	2300      	movne	r3, #0
 8006b8a:	b2db      	uxtb	r3, r3
 8006b8c:	461a      	mov	r2, r3
 8006b8e:	79fb      	ldrb	r3, [r7, #7]
 8006b90:	429a      	cmp	r2, r3
 8006b92:	d19b      	bne.n	8006acc <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006b94:	2300      	movs	r3, #0
}
 8006b96:	4618      	mov	r0, r3
 8006b98:	3720      	adds	r7, #32
 8006b9a:	46bd      	mov	sp, r7
 8006b9c:	bd80      	pop	{r7, pc}
 8006b9e:	bf00      	nop
 8006ba0:	20000014 	.word	0x20000014

08006ba4 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006ba4:	b580      	push	{r7, lr}
 8006ba6:	b086      	sub	sp, #24
 8006ba8:	af02      	add	r7, sp, #8
 8006baa:	60f8      	str	r0, [r7, #12]
 8006bac:	60b9      	str	r1, [r7, #8]
 8006bae:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	685b      	ldr	r3, [r3, #4]
 8006bb4:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006bb8:	d111      	bne.n	8006bde <SPI_EndRxTransaction+0x3a>
 8006bba:	68fb      	ldr	r3, [r7, #12]
 8006bbc:	689b      	ldr	r3, [r3, #8]
 8006bbe:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006bc2:	d004      	beq.n	8006bce <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006bc4:	68fb      	ldr	r3, [r7, #12]
 8006bc6:	689b      	ldr	r3, [r3, #8]
 8006bc8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006bcc:	d107      	bne.n	8006bde <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006bce:	68fb      	ldr	r3, [r7, #12]
 8006bd0:	681b      	ldr	r3, [r3, #0]
 8006bd2:	681a      	ldr	r2, [r3, #0]
 8006bd4:	68fb      	ldr	r3, [r7, #12]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006bdc:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006bde:	68fb      	ldr	r3, [r7, #12]
 8006be0:	685b      	ldr	r3, [r3, #4]
 8006be2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006be6:	d12a      	bne.n	8006c3e <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006be8:	68fb      	ldr	r3, [r7, #12]
 8006bea:	689b      	ldr	r3, [r3, #8]
 8006bec:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006bf0:	d012      	beq.n	8006c18 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006bf2:	687b      	ldr	r3, [r7, #4]
 8006bf4:	9300      	str	r3, [sp, #0]
 8006bf6:	68bb      	ldr	r3, [r7, #8]
 8006bf8:	2200      	movs	r2, #0
 8006bfa:	2180      	movs	r1, #128	@ 0x80
 8006bfc:	68f8      	ldr	r0, [r7, #12]
 8006bfe:	f7ff ff49 	bl	8006a94 <SPI_WaitFlagStateUntilTimeout>
 8006c02:	4603      	mov	r3, r0
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	d02d      	beq.n	8006c64 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c08:	68fb      	ldr	r3, [r7, #12]
 8006c0a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c0c:	f043 0220 	orr.w	r2, r3, #32
 8006c10:	68fb      	ldr	r3, [r7, #12]
 8006c12:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006c14:	2303      	movs	r3, #3
 8006c16:	e026      	b.n	8006c66 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	9300      	str	r3, [sp, #0]
 8006c1c:	68bb      	ldr	r3, [r7, #8]
 8006c1e:	2200      	movs	r2, #0
 8006c20:	2101      	movs	r1, #1
 8006c22:	68f8      	ldr	r0, [r7, #12]
 8006c24:	f7ff ff36 	bl	8006a94 <SPI_WaitFlagStateUntilTimeout>
 8006c28:	4603      	mov	r3, r0
 8006c2a:	2b00      	cmp	r3, #0
 8006c2c:	d01a      	beq.n	8006c64 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c2e:	68fb      	ldr	r3, [r7, #12]
 8006c30:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c32:	f043 0220 	orr.w	r2, r3, #32
 8006c36:	68fb      	ldr	r3, [r7, #12]
 8006c38:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006c3a:	2303      	movs	r3, #3
 8006c3c:	e013      	b.n	8006c66 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	9300      	str	r3, [sp, #0]
 8006c42:	68bb      	ldr	r3, [r7, #8]
 8006c44:	2200      	movs	r2, #0
 8006c46:	2101      	movs	r1, #1
 8006c48:	68f8      	ldr	r0, [r7, #12]
 8006c4a:	f7ff ff23 	bl	8006a94 <SPI_WaitFlagStateUntilTimeout>
 8006c4e:	4603      	mov	r3, r0
 8006c50:	2b00      	cmp	r3, #0
 8006c52:	d007      	beq.n	8006c64 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c54:	68fb      	ldr	r3, [r7, #12]
 8006c56:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c58:	f043 0220 	orr.w	r2, r3, #32
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006c60:	2303      	movs	r3, #3
 8006c62:	e000      	b.n	8006c66 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006c64:	2300      	movs	r3, #0
}
 8006c66:	4618      	mov	r0, r3
 8006c68:	3710      	adds	r7, #16
 8006c6a:	46bd      	mov	sp, r7
 8006c6c:	bd80      	pop	{r7, pc}
	...

08006c70 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006c70:	b580      	push	{r7, lr}
 8006c72:	b088      	sub	sp, #32
 8006c74:	af02      	add	r7, sp, #8
 8006c76:	60f8      	str	r0, [r7, #12]
 8006c78:	60b9      	str	r1, [r7, #8]
 8006c7a:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006c7c:	687b      	ldr	r3, [r7, #4]
 8006c7e:	9300      	str	r3, [sp, #0]
 8006c80:	68bb      	ldr	r3, [r7, #8]
 8006c82:	2201      	movs	r2, #1
 8006c84:	2102      	movs	r1, #2
 8006c86:	68f8      	ldr	r0, [r7, #12]
 8006c88:	f7ff ff04 	bl	8006a94 <SPI_WaitFlagStateUntilTimeout>
 8006c8c:	4603      	mov	r3, r0
 8006c8e:	2b00      	cmp	r3, #0
 8006c90:	d007      	beq.n	8006ca2 <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c92:	68fb      	ldr	r3, [r7, #12]
 8006c94:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c96:	f043 0220 	orr.w	r2, r3, #32
 8006c9a:	68fb      	ldr	r3, [r7, #12]
 8006c9c:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006c9e:	2303      	movs	r3, #3
 8006ca0:	e032      	b.n	8006d08 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006ca2:	4b1b      	ldr	r3, [pc, #108]	@ (8006d10 <SPI_EndRxTxTransaction+0xa0>)
 8006ca4:	681b      	ldr	r3, [r3, #0]
 8006ca6:	4a1b      	ldr	r2, [pc, #108]	@ (8006d14 <SPI_EndRxTxTransaction+0xa4>)
 8006ca8:	fba2 2303 	umull	r2, r3, r2, r3
 8006cac:	0d5b      	lsrs	r3, r3, #21
 8006cae:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006cb2:	fb02 f303 	mul.w	r3, r2, r3
 8006cb6:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006cb8:	68fb      	ldr	r3, [r7, #12]
 8006cba:	685b      	ldr	r3, [r3, #4]
 8006cbc:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006cc0:	d112      	bne.n	8006ce8 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006cc2:	687b      	ldr	r3, [r7, #4]
 8006cc4:	9300      	str	r3, [sp, #0]
 8006cc6:	68bb      	ldr	r3, [r7, #8]
 8006cc8:	2200      	movs	r2, #0
 8006cca:	2180      	movs	r1, #128	@ 0x80
 8006ccc:	68f8      	ldr	r0, [r7, #12]
 8006cce:	f7ff fee1 	bl	8006a94 <SPI_WaitFlagStateUntilTimeout>
 8006cd2:	4603      	mov	r3, r0
 8006cd4:	2b00      	cmp	r3, #0
 8006cd6:	d016      	beq.n	8006d06 <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006cd8:	68fb      	ldr	r3, [r7, #12]
 8006cda:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cdc:	f043 0220 	orr.w	r2, r3, #32
 8006ce0:	68fb      	ldr	r3, [r7, #12]
 8006ce2:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006ce4:	2303      	movs	r3, #3
 8006ce6:	e00f      	b.n	8006d08 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8006ce8:	697b      	ldr	r3, [r7, #20]
 8006cea:	2b00      	cmp	r3, #0
 8006cec:	d00a      	beq.n	8006d04 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8006cee:	697b      	ldr	r3, [r7, #20]
 8006cf0:	3b01      	subs	r3, #1
 8006cf2:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006cf4:	68fb      	ldr	r3, [r7, #12]
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	689b      	ldr	r3, [r3, #8]
 8006cfa:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006cfe:	2b80      	cmp	r3, #128	@ 0x80
 8006d00:	d0f2      	beq.n	8006ce8 <SPI_EndRxTxTransaction+0x78>
 8006d02:	e000      	b.n	8006d06 <SPI_EndRxTxTransaction+0x96>
        break;
 8006d04:	bf00      	nop
  }

  return HAL_OK;
 8006d06:	2300      	movs	r3, #0
}
 8006d08:	4618      	mov	r0, r3
 8006d0a:	3718      	adds	r7, #24
 8006d0c:	46bd      	mov	sp, r7
 8006d0e:	bd80      	pop	{r7, pc}
 8006d10:	20000014 	.word	0x20000014
 8006d14:	165e9f81 	.word	0x165e9f81

08006d18 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006d18:	b580      	push	{r7, lr}
 8006d1a:	b082      	sub	sp, #8
 8006d1c:	af00      	add	r7, sp, #0
 8006d1e:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006d20:	687b      	ldr	r3, [r7, #4]
 8006d22:	2b00      	cmp	r3, #0
 8006d24:	d101      	bne.n	8006d2a <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006d26:	2301      	movs	r3, #1
 8006d28:	e041      	b.n	8006dae <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006d30:	b2db      	uxtb	r3, r3
 8006d32:	2b00      	cmp	r3, #0
 8006d34:	d106      	bne.n	8006d44 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006d36:	687b      	ldr	r3, [r7, #4]
 8006d38:	2200      	movs	r2, #0
 8006d3a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006d3e:	6878      	ldr	r0, [r7, #4]
 8006d40:	f7fa ff38 	bl	8001bb4 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	2202      	movs	r2, #2
 8006d48:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006d4c:	687b      	ldr	r3, [r7, #4]
 8006d4e:	681a      	ldr	r2, [r3, #0]
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	3304      	adds	r3, #4
 8006d54:	4619      	mov	r1, r3
 8006d56:	4610      	mov	r0, r2
 8006d58:	f000 fc62 	bl	8007620 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006d5c:	687b      	ldr	r3, [r7, #4]
 8006d5e:	2201      	movs	r2, #1
 8006d60:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	2201      	movs	r2, #1
 8006d68:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006d6c:	687b      	ldr	r3, [r7, #4]
 8006d6e:	2201      	movs	r2, #1
 8006d70:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	2201      	movs	r2, #1
 8006d78:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006d7c:	687b      	ldr	r3, [r7, #4]
 8006d7e:	2201      	movs	r2, #1
 8006d80:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	2201      	movs	r2, #1
 8006d88:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006d8c:	687b      	ldr	r3, [r7, #4]
 8006d8e:	2201      	movs	r2, #1
 8006d90:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006d94:	687b      	ldr	r3, [r7, #4]
 8006d96:	2201      	movs	r2, #1
 8006d98:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006d9c:	687b      	ldr	r3, [r7, #4]
 8006d9e:	2201      	movs	r2, #1
 8006da0:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	2201      	movs	r2, #1
 8006da8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8006dac:	2300      	movs	r3, #0
}
 8006dae:	4618      	mov	r0, r3
 8006db0:	3708      	adds	r7, #8
 8006db2:	46bd      	mov	sp, r7
 8006db4:	bd80      	pop	{r7, pc}
	...

08006db8 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8006db8:	b480      	push	{r7}
 8006dba:	b085      	sub	sp, #20
 8006dbc:	af00      	add	r7, sp, #0
 8006dbe:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8006dc0:	687b      	ldr	r3, [r7, #4]
 8006dc2:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006dc6:	b2db      	uxtb	r3, r3
 8006dc8:	2b01      	cmp	r3, #1
 8006dca:	d001      	beq.n	8006dd0 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8006dcc:	2301      	movs	r3, #1
 8006dce:	e04e      	b.n	8006e6e <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	2202      	movs	r2, #2
 8006dd4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	681b      	ldr	r3, [r3, #0]
 8006ddc:	68da      	ldr	r2, [r3, #12]
 8006dde:	687b      	ldr	r3, [r7, #4]
 8006de0:	681b      	ldr	r3, [r3, #0]
 8006de2:	f042 0201 	orr.w	r2, r2, #1
 8006de6:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8006de8:	687b      	ldr	r3, [r7, #4]
 8006dea:	681b      	ldr	r3, [r3, #0]
 8006dec:	4a23      	ldr	r2, [pc, #140]	@ (8006e7c <HAL_TIM_Base_Start_IT+0xc4>)
 8006dee:	4293      	cmp	r3, r2
 8006df0:	d022      	beq.n	8006e38 <HAL_TIM_Base_Start_IT+0x80>
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	681b      	ldr	r3, [r3, #0]
 8006df6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006dfa:	d01d      	beq.n	8006e38 <HAL_TIM_Base_Start_IT+0x80>
 8006dfc:	687b      	ldr	r3, [r7, #4]
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	4a1f      	ldr	r2, [pc, #124]	@ (8006e80 <HAL_TIM_Base_Start_IT+0xc8>)
 8006e02:	4293      	cmp	r3, r2
 8006e04:	d018      	beq.n	8006e38 <HAL_TIM_Base_Start_IT+0x80>
 8006e06:	687b      	ldr	r3, [r7, #4]
 8006e08:	681b      	ldr	r3, [r3, #0]
 8006e0a:	4a1e      	ldr	r2, [pc, #120]	@ (8006e84 <HAL_TIM_Base_Start_IT+0xcc>)
 8006e0c:	4293      	cmp	r3, r2
 8006e0e:	d013      	beq.n	8006e38 <HAL_TIM_Base_Start_IT+0x80>
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	681b      	ldr	r3, [r3, #0]
 8006e14:	4a1c      	ldr	r2, [pc, #112]	@ (8006e88 <HAL_TIM_Base_Start_IT+0xd0>)
 8006e16:	4293      	cmp	r3, r2
 8006e18:	d00e      	beq.n	8006e38 <HAL_TIM_Base_Start_IT+0x80>
 8006e1a:	687b      	ldr	r3, [r7, #4]
 8006e1c:	681b      	ldr	r3, [r3, #0]
 8006e1e:	4a1b      	ldr	r2, [pc, #108]	@ (8006e8c <HAL_TIM_Base_Start_IT+0xd4>)
 8006e20:	4293      	cmp	r3, r2
 8006e22:	d009      	beq.n	8006e38 <HAL_TIM_Base_Start_IT+0x80>
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	681b      	ldr	r3, [r3, #0]
 8006e28:	4a19      	ldr	r2, [pc, #100]	@ (8006e90 <HAL_TIM_Base_Start_IT+0xd8>)
 8006e2a:	4293      	cmp	r3, r2
 8006e2c:	d004      	beq.n	8006e38 <HAL_TIM_Base_Start_IT+0x80>
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	681b      	ldr	r3, [r3, #0]
 8006e32:	4a18      	ldr	r2, [pc, #96]	@ (8006e94 <HAL_TIM_Base_Start_IT+0xdc>)
 8006e34:	4293      	cmp	r3, r2
 8006e36:	d111      	bne.n	8006e5c <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	681b      	ldr	r3, [r3, #0]
 8006e3c:	689b      	ldr	r3, [r3, #8]
 8006e3e:	f003 0307 	and.w	r3, r3, #7
 8006e42:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006e44:	68fb      	ldr	r3, [r7, #12]
 8006e46:	2b06      	cmp	r3, #6
 8006e48:	d010      	beq.n	8006e6c <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 8006e4a:	687b      	ldr	r3, [r7, #4]
 8006e4c:	681b      	ldr	r3, [r3, #0]
 8006e4e:	681a      	ldr	r2, [r3, #0]
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	681b      	ldr	r3, [r3, #0]
 8006e54:	f042 0201 	orr.w	r2, r2, #1
 8006e58:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8006e5a:	e007      	b.n	8006e6c <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006e5c:	687b      	ldr	r3, [r7, #4]
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	681a      	ldr	r2, [r3, #0]
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	681b      	ldr	r3, [r3, #0]
 8006e66:	f042 0201 	orr.w	r2, r2, #1
 8006e6a:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8006e6c:	2300      	movs	r3, #0
}
 8006e6e:	4618      	mov	r0, r3
 8006e70:	3714      	adds	r7, #20
 8006e72:	46bd      	mov	sp, r7
 8006e74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e78:	4770      	bx	lr
 8006e7a:	bf00      	nop
 8006e7c:	40010000 	.word	0x40010000
 8006e80:	40000400 	.word	0x40000400
 8006e84:	40000800 	.word	0x40000800
 8006e88:	40000c00 	.word	0x40000c00
 8006e8c:	40010400 	.word	0x40010400
 8006e90:	40014000 	.word	0x40014000
 8006e94:	40001800 	.word	0x40001800

08006e98 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8006e98:	b580      	push	{r7, lr}
 8006e9a:	b082      	sub	sp, #8
 8006e9c:	af00      	add	r7, sp, #0
 8006e9e:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	2b00      	cmp	r3, #0
 8006ea4:	d101      	bne.n	8006eaa <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8006ea6:	2301      	movs	r3, #1
 8006ea8:	e041      	b.n	8006f2e <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006eb0:	b2db      	uxtb	r3, r3
 8006eb2:	2b00      	cmp	r3, #0
 8006eb4:	d106      	bne.n	8006ec4 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	2200      	movs	r2, #0
 8006eba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8006ebe:	6878      	ldr	r0, [r7, #4]
 8006ec0:	f000 f839 	bl	8006f36 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ec4:	687b      	ldr	r3, [r7, #4]
 8006ec6:	2202      	movs	r2, #2
 8006ec8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	681a      	ldr	r2, [r3, #0]
 8006ed0:	687b      	ldr	r3, [r7, #4]
 8006ed2:	3304      	adds	r3, #4
 8006ed4:	4619      	mov	r1, r3
 8006ed6:	4610      	mov	r0, r2
 8006ed8:	f000 fba2 	bl	8007620 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8006edc:	687b      	ldr	r3, [r7, #4]
 8006ede:	2201      	movs	r2, #1
 8006ee0:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006ee4:	687b      	ldr	r3, [r7, #4]
 8006ee6:	2201      	movs	r2, #1
 8006ee8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	2201      	movs	r2, #1
 8006ef0:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	2201      	movs	r2, #1
 8006ef8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006efc:	687b      	ldr	r3, [r7, #4]
 8006efe:	2201      	movs	r2, #1
 8006f00:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006f04:	687b      	ldr	r3, [r7, #4]
 8006f06:	2201      	movs	r2, #1
 8006f08:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	2201      	movs	r2, #1
 8006f10:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8006f14:	687b      	ldr	r3, [r7, #4]
 8006f16:	2201      	movs	r2, #1
 8006f18:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8006f1c:	687b      	ldr	r3, [r7, #4]
 8006f1e:	2201      	movs	r2, #1
 8006f20:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8006f24:	687b      	ldr	r3, [r7, #4]
 8006f26:	2201      	movs	r2, #1
 8006f28:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8006f2c:	2300      	movs	r3, #0
}
 8006f2e:	4618      	mov	r0, r3
 8006f30:	3708      	adds	r7, #8
 8006f32:	46bd      	mov	sp, r7
 8006f34:	bd80      	pop	{r7, pc}

08006f36 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8006f36:	b480      	push	{r7}
 8006f38:	b083      	sub	sp, #12
 8006f3a:	af00      	add	r7, sp, #0
 8006f3c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8006f3e:	bf00      	nop
 8006f40:	370c      	adds	r7, #12
 8006f42:	46bd      	mov	sp, r7
 8006f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f48:	4770      	bx	lr
	...

08006f4c <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8006f4c:	b580      	push	{r7, lr}
 8006f4e:	b084      	sub	sp, #16
 8006f50:	af00      	add	r7, sp, #0
 8006f52:	6078      	str	r0, [r7, #4]
 8006f54:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8006f56:	683b      	ldr	r3, [r7, #0]
 8006f58:	2b00      	cmp	r3, #0
 8006f5a:	d109      	bne.n	8006f70 <HAL_TIM_PWM_Start+0x24>
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8006f62:	b2db      	uxtb	r3, r3
 8006f64:	2b01      	cmp	r3, #1
 8006f66:	bf14      	ite	ne
 8006f68:	2301      	movne	r3, #1
 8006f6a:	2300      	moveq	r3, #0
 8006f6c:	b2db      	uxtb	r3, r3
 8006f6e:	e022      	b.n	8006fb6 <HAL_TIM_PWM_Start+0x6a>
 8006f70:	683b      	ldr	r3, [r7, #0]
 8006f72:	2b04      	cmp	r3, #4
 8006f74:	d109      	bne.n	8006f8a <HAL_TIM_PWM_Start+0x3e>
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8006f7c:	b2db      	uxtb	r3, r3
 8006f7e:	2b01      	cmp	r3, #1
 8006f80:	bf14      	ite	ne
 8006f82:	2301      	movne	r3, #1
 8006f84:	2300      	moveq	r3, #0
 8006f86:	b2db      	uxtb	r3, r3
 8006f88:	e015      	b.n	8006fb6 <HAL_TIM_PWM_Start+0x6a>
 8006f8a:	683b      	ldr	r3, [r7, #0]
 8006f8c:	2b08      	cmp	r3, #8
 8006f8e:	d109      	bne.n	8006fa4 <HAL_TIM_PWM_Start+0x58>
 8006f90:	687b      	ldr	r3, [r7, #4]
 8006f92:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8006f96:	b2db      	uxtb	r3, r3
 8006f98:	2b01      	cmp	r3, #1
 8006f9a:	bf14      	ite	ne
 8006f9c:	2301      	movne	r3, #1
 8006f9e:	2300      	moveq	r3, #0
 8006fa0:	b2db      	uxtb	r3, r3
 8006fa2:	e008      	b.n	8006fb6 <HAL_TIM_PWM_Start+0x6a>
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006faa:	b2db      	uxtb	r3, r3
 8006fac:	2b01      	cmp	r3, #1
 8006fae:	bf14      	ite	ne
 8006fb0:	2301      	movne	r3, #1
 8006fb2:	2300      	moveq	r3, #0
 8006fb4:	b2db      	uxtb	r3, r3
 8006fb6:	2b00      	cmp	r3, #0
 8006fb8:	d001      	beq.n	8006fbe <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 8006fba:	2301      	movs	r3, #1
 8006fbc:	e07c      	b.n	80070b8 <HAL_TIM_PWM_Start+0x16c>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8006fbe:	683b      	ldr	r3, [r7, #0]
 8006fc0:	2b00      	cmp	r3, #0
 8006fc2:	d104      	bne.n	8006fce <HAL_TIM_PWM_Start+0x82>
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	2202      	movs	r2, #2
 8006fc8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8006fcc:	e013      	b.n	8006ff6 <HAL_TIM_PWM_Start+0xaa>
 8006fce:	683b      	ldr	r3, [r7, #0]
 8006fd0:	2b04      	cmp	r3, #4
 8006fd2:	d104      	bne.n	8006fde <HAL_TIM_PWM_Start+0x92>
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	2202      	movs	r2, #2
 8006fd8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8006fdc:	e00b      	b.n	8006ff6 <HAL_TIM_PWM_Start+0xaa>
 8006fde:	683b      	ldr	r3, [r7, #0]
 8006fe0:	2b08      	cmp	r3, #8
 8006fe2:	d104      	bne.n	8006fee <HAL_TIM_PWM_Start+0xa2>
 8006fe4:	687b      	ldr	r3, [r7, #4]
 8006fe6:	2202      	movs	r2, #2
 8006fe8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8006fec:	e003      	b.n	8006ff6 <HAL_TIM_PWM_Start+0xaa>
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	2202      	movs	r2, #2
 8006ff2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	681b      	ldr	r3, [r3, #0]
 8006ffa:	2201      	movs	r2, #1
 8006ffc:	6839      	ldr	r1, [r7, #0]
 8006ffe:	4618      	mov	r0, r3
 8007000:	f000 fe04 	bl	8007c0c <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	681b      	ldr	r3, [r3, #0]
 8007008:	4a2d      	ldr	r2, [pc, #180]	@ (80070c0 <HAL_TIM_PWM_Start+0x174>)
 800700a:	4293      	cmp	r3, r2
 800700c:	d004      	beq.n	8007018 <HAL_TIM_PWM_Start+0xcc>
 800700e:	687b      	ldr	r3, [r7, #4]
 8007010:	681b      	ldr	r3, [r3, #0]
 8007012:	4a2c      	ldr	r2, [pc, #176]	@ (80070c4 <HAL_TIM_PWM_Start+0x178>)
 8007014:	4293      	cmp	r3, r2
 8007016:	d101      	bne.n	800701c <HAL_TIM_PWM_Start+0xd0>
 8007018:	2301      	movs	r3, #1
 800701a:	e000      	b.n	800701e <HAL_TIM_PWM_Start+0xd2>
 800701c:	2300      	movs	r3, #0
 800701e:	2b00      	cmp	r3, #0
 8007020:	d007      	beq.n	8007032 <HAL_TIM_PWM_Start+0xe6>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 8007022:	687b      	ldr	r3, [r7, #4]
 8007024:	681b      	ldr	r3, [r3, #0]
 8007026:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	681b      	ldr	r3, [r3, #0]
 800702c:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007030:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	681b      	ldr	r3, [r3, #0]
 8007036:	4a22      	ldr	r2, [pc, #136]	@ (80070c0 <HAL_TIM_PWM_Start+0x174>)
 8007038:	4293      	cmp	r3, r2
 800703a:	d022      	beq.n	8007082 <HAL_TIM_PWM_Start+0x136>
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	681b      	ldr	r3, [r3, #0]
 8007040:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007044:	d01d      	beq.n	8007082 <HAL_TIM_PWM_Start+0x136>
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	681b      	ldr	r3, [r3, #0]
 800704a:	4a1f      	ldr	r2, [pc, #124]	@ (80070c8 <HAL_TIM_PWM_Start+0x17c>)
 800704c:	4293      	cmp	r3, r2
 800704e:	d018      	beq.n	8007082 <HAL_TIM_PWM_Start+0x136>
 8007050:	687b      	ldr	r3, [r7, #4]
 8007052:	681b      	ldr	r3, [r3, #0]
 8007054:	4a1d      	ldr	r2, [pc, #116]	@ (80070cc <HAL_TIM_PWM_Start+0x180>)
 8007056:	4293      	cmp	r3, r2
 8007058:	d013      	beq.n	8007082 <HAL_TIM_PWM_Start+0x136>
 800705a:	687b      	ldr	r3, [r7, #4]
 800705c:	681b      	ldr	r3, [r3, #0]
 800705e:	4a1c      	ldr	r2, [pc, #112]	@ (80070d0 <HAL_TIM_PWM_Start+0x184>)
 8007060:	4293      	cmp	r3, r2
 8007062:	d00e      	beq.n	8007082 <HAL_TIM_PWM_Start+0x136>
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	4a16      	ldr	r2, [pc, #88]	@ (80070c4 <HAL_TIM_PWM_Start+0x178>)
 800706a:	4293      	cmp	r3, r2
 800706c:	d009      	beq.n	8007082 <HAL_TIM_PWM_Start+0x136>
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	681b      	ldr	r3, [r3, #0]
 8007072:	4a18      	ldr	r2, [pc, #96]	@ (80070d4 <HAL_TIM_PWM_Start+0x188>)
 8007074:	4293      	cmp	r3, r2
 8007076:	d004      	beq.n	8007082 <HAL_TIM_PWM_Start+0x136>
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	681b      	ldr	r3, [r3, #0]
 800707c:	4a16      	ldr	r2, [pc, #88]	@ (80070d8 <HAL_TIM_PWM_Start+0x18c>)
 800707e:	4293      	cmp	r3, r2
 8007080:	d111      	bne.n	80070a6 <HAL_TIM_PWM_Start+0x15a>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007082:	687b      	ldr	r3, [r7, #4]
 8007084:	681b      	ldr	r3, [r3, #0]
 8007086:	689b      	ldr	r3, [r3, #8]
 8007088:	f003 0307 	and.w	r3, r3, #7
 800708c:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800708e:	68fb      	ldr	r3, [r7, #12]
 8007090:	2b06      	cmp	r3, #6
 8007092:	d010      	beq.n	80070b6 <HAL_TIM_PWM_Start+0x16a>
    {
      __HAL_TIM_ENABLE(htim);
 8007094:	687b      	ldr	r3, [r7, #4]
 8007096:	681b      	ldr	r3, [r3, #0]
 8007098:	681a      	ldr	r2, [r3, #0]
 800709a:	687b      	ldr	r3, [r7, #4]
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	f042 0201 	orr.w	r2, r2, #1
 80070a2:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80070a4:	e007      	b.n	80070b6 <HAL_TIM_PWM_Start+0x16a>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	681a      	ldr	r2, [r3, #0]
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	681b      	ldr	r3, [r3, #0]
 80070b0:	f042 0201 	orr.w	r2, r2, #1
 80070b4:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80070b6:	2300      	movs	r3, #0
}
 80070b8:	4618      	mov	r0, r3
 80070ba:	3710      	adds	r7, #16
 80070bc:	46bd      	mov	sp, r7
 80070be:	bd80      	pop	{r7, pc}
 80070c0:	40010000 	.word	0x40010000
 80070c4:	40010400 	.word	0x40010400
 80070c8:	40000400 	.word	0x40000400
 80070cc:	40000800 	.word	0x40000800
 80070d0:	40000c00 	.word	0x40000c00
 80070d4:	40014000 	.word	0x40014000
 80070d8:	40001800 	.word	0x40001800

080070dc <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 80070dc:	b580      	push	{r7, lr}
 80070de:	b084      	sub	sp, #16
 80070e0:	af00      	add	r7, sp, #0
 80070e2:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 80070e4:	687b      	ldr	r3, [r7, #4]
 80070e6:	681b      	ldr	r3, [r3, #0]
 80070e8:	68db      	ldr	r3, [r3, #12]
 80070ea:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	681b      	ldr	r3, [r3, #0]
 80070f0:	691b      	ldr	r3, [r3, #16]
 80070f2:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80070f4:	68bb      	ldr	r3, [r7, #8]
 80070f6:	f003 0302 	and.w	r3, r3, #2
 80070fa:	2b00      	cmp	r3, #0
 80070fc:	d020      	beq.n	8007140 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80070fe:	68fb      	ldr	r3, [r7, #12]
 8007100:	f003 0302 	and.w	r3, r3, #2
 8007104:	2b00      	cmp	r3, #0
 8007106:	d01b      	beq.n	8007140 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007108:	687b      	ldr	r3, [r7, #4]
 800710a:	681b      	ldr	r3, [r3, #0]
 800710c:	f06f 0202 	mvn.w	r2, #2
 8007110:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	2201      	movs	r2, #1
 8007116:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007118:	687b      	ldr	r3, [r7, #4]
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	699b      	ldr	r3, [r3, #24]
 800711e:	f003 0303 	and.w	r3, r3, #3
 8007122:	2b00      	cmp	r3, #0
 8007124:	d003      	beq.n	800712e <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8007126:	6878      	ldr	r0, [r7, #4]
 8007128:	f000 fa5b 	bl	80075e2 <HAL_TIM_IC_CaptureCallback>
 800712c:	e005      	b.n	800713a <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800712e:	6878      	ldr	r0, [r7, #4]
 8007130:	f000 fa4d 	bl	80075ce <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007134:	6878      	ldr	r0, [r7, #4]
 8007136:	f000 fa5e 	bl	80075f6 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800713a:	687b      	ldr	r3, [r7, #4]
 800713c:	2200      	movs	r2, #0
 800713e:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007140:	68bb      	ldr	r3, [r7, #8]
 8007142:	f003 0304 	and.w	r3, r3, #4
 8007146:	2b00      	cmp	r3, #0
 8007148:	d020      	beq.n	800718c <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 800714a:	68fb      	ldr	r3, [r7, #12]
 800714c:	f003 0304 	and.w	r3, r3, #4
 8007150:	2b00      	cmp	r3, #0
 8007152:	d01b      	beq.n	800718c <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007154:	687b      	ldr	r3, [r7, #4]
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	f06f 0204 	mvn.w	r2, #4
 800715c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	2202      	movs	r2, #2
 8007162:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007164:	687b      	ldr	r3, [r7, #4]
 8007166:	681b      	ldr	r3, [r3, #0]
 8007168:	699b      	ldr	r3, [r3, #24]
 800716a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800716e:	2b00      	cmp	r3, #0
 8007170:	d003      	beq.n	800717a <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007172:	6878      	ldr	r0, [r7, #4]
 8007174:	f000 fa35 	bl	80075e2 <HAL_TIM_IC_CaptureCallback>
 8007178:	e005      	b.n	8007186 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800717a:	6878      	ldr	r0, [r7, #4]
 800717c:	f000 fa27 	bl	80075ce <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007180:	6878      	ldr	r0, [r7, #4]
 8007182:	f000 fa38 	bl	80075f6 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007186:	687b      	ldr	r3, [r7, #4]
 8007188:	2200      	movs	r2, #0
 800718a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 800718c:	68bb      	ldr	r3, [r7, #8]
 800718e:	f003 0308 	and.w	r3, r3, #8
 8007192:	2b00      	cmp	r3, #0
 8007194:	d020      	beq.n	80071d8 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007196:	68fb      	ldr	r3, [r7, #12]
 8007198:	f003 0308 	and.w	r3, r3, #8
 800719c:	2b00      	cmp	r3, #0
 800719e:	d01b      	beq.n	80071d8 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	681b      	ldr	r3, [r3, #0]
 80071a4:	f06f 0208 	mvn.w	r2, #8
 80071a8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80071aa:	687b      	ldr	r3, [r7, #4]
 80071ac:	2204      	movs	r2, #4
 80071ae:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	681b      	ldr	r3, [r3, #0]
 80071b4:	69db      	ldr	r3, [r3, #28]
 80071b6:	f003 0303 	and.w	r3, r3, #3
 80071ba:	2b00      	cmp	r3, #0
 80071bc:	d003      	beq.n	80071c6 <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80071be:	6878      	ldr	r0, [r7, #4]
 80071c0:	f000 fa0f 	bl	80075e2 <HAL_TIM_IC_CaptureCallback>
 80071c4:	e005      	b.n	80071d2 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80071c6:	6878      	ldr	r0, [r7, #4]
 80071c8:	f000 fa01 	bl	80075ce <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80071cc:	6878      	ldr	r0, [r7, #4]
 80071ce:	f000 fa12 	bl	80075f6 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80071d2:	687b      	ldr	r3, [r7, #4]
 80071d4:	2200      	movs	r2, #0
 80071d6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80071d8:	68bb      	ldr	r3, [r7, #8]
 80071da:	f003 0310 	and.w	r3, r3, #16
 80071de:	2b00      	cmp	r3, #0
 80071e0:	d020      	beq.n	8007224 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80071e2:	68fb      	ldr	r3, [r7, #12]
 80071e4:	f003 0310 	and.w	r3, r3, #16
 80071e8:	2b00      	cmp	r3, #0
 80071ea:	d01b      	beq.n	8007224 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80071ec:	687b      	ldr	r3, [r7, #4]
 80071ee:	681b      	ldr	r3, [r3, #0]
 80071f0:	f06f 0210 	mvn.w	r2, #16
 80071f4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80071f6:	687b      	ldr	r3, [r7, #4]
 80071f8:	2208      	movs	r2, #8
 80071fa:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80071fc:	687b      	ldr	r3, [r7, #4]
 80071fe:	681b      	ldr	r3, [r3, #0]
 8007200:	69db      	ldr	r3, [r3, #28]
 8007202:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007206:	2b00      	cmp	r3, #0
 8007208:	d003      	beq.n	8007212 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800720a:	6878      	ldr	r0, [r7, #4]
 800720c:	f000 f9e9 	bl	80075e2 <HAL_TIM_IC_CaptureCallback>
 8007210:	e005      	b.n	800721e <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007212:	6878      	ldr	r0, [r7, #4]
 8007214:	f000 f9db 	bl	80075ce <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007218:	6878      	ldr	r0, [r7, #4]
 800721a:	f000 f9ec 	bl	80075f6 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800721e:	687b      	ldr	r3, [r7, #4]
 8007220:	2200      	movs	r2, #0
 8007222:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007224:	68bb      	ldr	r3, [r7, #8]
 8007226:	f003 0301 	and.w	r3, r3, #1
 800722a:	2b00      	cmp	r3, #0
 800722c:	d00c      	beq.n	8007248 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 800722e:	68fb      	ldr	r3, [r7, #12]
 8007230:	f003 0301 	and.w	r3, r3, #1
 8007234:	2b00      	cmp	r3, #0
 8007236:	d007      	beq.n	8007248 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007238:	687b      	ldr	r3, [r7, #4]
 800723a:	681b      	ldr	r3, [r3, #0]
 800723c:	f06f 0201 	mvn.w	r2, #1
 8007240:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8007242:	6878      	ldr	r0, [r7, #4]
 8007244:	f7fa fac2 	bl	80017cc <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8007248:	68bb      	ldr	r3, [r7, #8]
 800724a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800724e:	2b00      	cmp	r3, #0
 8007250:	d00c      	beq.n	800726c <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007252:	68fb      	ldr	r3, [r7, #12]
 8007254:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007258:	2b00      	cmp	r3, #0
 800725a:	d007      	beq.n	800726c <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	681b      	ldr	r3, [r3, #0]
 8007260:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007264:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8007266:	6878      	ldr	r0, [r7, #4]
 8007268:	f000 fd7c 	bl	8007d64 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800726c:	68bb      	ldr	r3, [r7, #8]
 800726e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007272:	2b00      	cmp	r3, #0
 8007274:	d00c      	beq.n	8007290 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007276:	68fb      	ldr	r3, [r7, #12]
 8007278:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800727c:	2b00      	cmp	r3, #0
 800727e:	d007      	beq.n	8007290 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007280:	687b      	ldr	r3, [r7, #4]
 8007282:	681b      	ldr	r3, [r3, #0]
 8007284:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007288:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800728a:	6878      	ldr	r0, [r7, #4]
 800728c:	f000 f9bd 	bl	800760a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007290:	68bb      	ldr	r3, [r7, #8]
 8007292:	f003 0320 	and.w	r3, r3, #32
 8007296:	2b00      	cmp	r3, #0
 8007298:	d00c      	beq.n	80072b4 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800729a:	68fb      	ldr	r3, [r7, #12]
 800729c:	f003 0320 	and.w	r3, r3, #32
 80072a0:	2b00      	cmp	r3, #0
 80072a2:	d007      	beq.n	80072b4 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	681b      	ldr	r3, [r3, #0]
 80072a8:	f06f 0220 	mvn.w	r2, #32
 80072ac:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80072ae:	6878      	ldr	r0, [r7, #4]
 80072b0:	f000 fd4e 	bl	8007d50 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80072b4:	bf00      	nop
 80072b6:	3710      	adds	r7, #16
 80072b8:	46bd      	mov	sp, r7
 80072ba:	bd80      	pop	{r7, pc}

080072bc <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 80072bc:	b580      	push	{r7, lr}
 80072be:	b086      	sub	sp, #24
 80072c0:	af00      	add	r7, sp, #0
 80072c2:	60f8      	str	r0, [r7, #12]
 80072c4:	60b9      	str	r1, [r7, #8]
 80072c6:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80072c8:	2300      	movs	r3, #0
 80072ca:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 80072cc:	68fb      	ldr	r3, [r7, #12]
 80072ce:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80072d2:	2b01      	cmp	r3, #1
 80072d4:	d101      	bne.n	80072da <HAL_TIM_PWM_ConfigChannel+0x1e>
 80072d6:	2302      	movs	r3, #2
 80072d8:	e0ae      	b.n	8007438 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80072da:	68fb      	ldr	r3, [r7, #12]
 80072dc:	2201      	movs	r2, #1
 80072de:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	2b0c      	cmp	r3, #12
 80072e6:	f200 809f 	bhi.w	8007428 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80072ea:	a201      	add	r2, pc, #4	@ (adr r2, 80072f0 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80072ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80072f0:	08007325 	.word	0x08007325
 80072f4:	08007429 	.word	0x08007429
 80072f8:	08007429 	.word	0x08007429
 80072fc:	08007429 	.word	0x08007429
 8007300:	08007365 	.word	0x08007365
 8007304:	08007429 	.word	0x08007429
 8007308:	08007429 	.word	0x08007429
 800730c:	08007429 	.word	0x08007429
 8007310:	080073a7 	.word	0x080073a7
 8007314:	08007429 	.word	0x08007429
 8007318:	08007429 	.word	0x08007429
 800731c:	08007429 	.word	0x08007429
 8007320:	080073e7 	.word	0x080073e7
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8007324:	68fb      	ldr	r3, [r7, #12]
 8007326:	681b      	ldr	r3, [r3, #0]
 8007328:	68b9      	ldr	r1, [r7, #8]
 800732a:	4618      	mov	r0, r3
 800732c:	f000 fa24 	bl	8007778 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 8007330:	68fb      	ldr	r3, [r7, #12]
 8007332:	681b      	ldr	r3, [r3, #0]
 8007334:	699a      	ldr	r2, [r3, #24]
 8007336:	68fb      	ldr	r3, [r7, #12]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	f042 0208 	orr.w	r2, r2, #8
 800733e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8007340:	68fb      	ldr	r3, [r7, #12]
 8007342:	681b      	ldr	r3, [r3, #0]
 8007344:	699a      	ldr	r2, [r3, #24]
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	681b      	ldr	r3, [r3, #0]
 800734a:	f022 0204 	bic.w	r2, r2, #4
 800734e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8007350:	68fb      	ldr	r3, [r7, #12]
 8007352:	681b      	ldr	r3, [r3, #0]
 8007354:	6999      	ldr	r1, [r3, #24]
 8007356:	68bb      	ldr	r3, [r7, #8]
 8007358:	691a      	ldr	r2, [r3, #16]
 800735a:	68fb      	ldr	r3, [r7, #12]
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	430a      	orrs	r2, r1
 8007360:	619a      	str	r2, [r3, #24]
      break;
 8007362:	e064      	b.n	800742e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8007364:	68fb      	ldr	r3, [r7, #12]
 8007366:	681b      	ldr	r3, [r3, #0]
 8007368:	68b9      	ldr	r1, [r7, #8]
 800736a:	4618      	mov	r0, r3
 800736c:	f000 fa74 	bl	8007858 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8007370:	68fb      	ldr	r3, [r7, #12]
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	699a      	ldr	r2, [r3, #24]
 8007376:	68fb      	ldr	r3, [r7, #12]
 8007378:	681b      	ldr	r3, [r3, #0]
 800737a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800737e:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8007380:	68fb      	ldr	r3, [r7, #12]
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	699a      	ldr	r2, [r3, #24]
 8007386:	68fb      	ldr	r3, [r7, #12]
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800738e:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8007390:	68fb      	ldr	r3, [r7, #12]
 8007392:	681b      	ldr	r3, [r3, #0]
 8007394:	6999      	ldr	r1, [r3, #24]
 8007396:	68bb      	ldr	r3, [r7, #8]
 8007398:	691b      	ldr	r3, [r3, #16]
 800739a:	021a      	lsls	r2, r3, #8
 800739c:	68fb      	ldr	r3, [r7, #12]
 800739e:	681b      	ldr	r3, [r3, #0]
 80073a0:	430a      	orrs	r2, r1
 80073a2:	619a      	str	r2, [r3, #24]
      break;
 80073a4:	e043      	b.n	800742e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 80073a6:	68fb      	ldr	r3, [r7, #12]
 80073a8:	681b      	ldr	r3, [r3, #0]
 80073aa:	68b9      	ldr	r1, [r7, #8]
 80073ac:	4618      	mov	r0, r3
 80073ae:	f000 fac9 	bl	8007944 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	681b      	ldr	r3, [r3, #0]
 80073b6:	69da      	ldr	r2, [r3, #28]
 80073b8:	68fb      	ldr	r3, [r7, #12]
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	f042 0208 	orr.w	r2, r2, #8
 80073c0:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80073c2:	68fb      	ldr	r3, [r7, #12]
 80073c4:	681b      	ldr	r3, [r3, #0]
 80073c6:	69da      	ldr	r2, [r3, #28]
 80073c8:	68fb      	ldr	r3, [r7, #12]
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	f022 0204 	bic.w	r2, r2, #4
 80073d0:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80073d2:	68fb      	ldr	r3, [r7, #12]
 80073d4:	681b      	ldr	r3, [r3, #0]
 80073d6:	69d9      	ldr	r1, [r3, #28]
 80073d8:	68bb      	ldr	r3, [r7, #8]
 80073da:	691a      	ldr	r2, [r3, #16]
 80073dc:	68fb      	ldr	r3, [r7, #12]
 80073de:	681b      	ldr	r3, [r3, #0]
 80073e0:	430a      	orrs	r2, r1
 80073e2:	61da      	str	r2, [r3, #28]
      break;
 80073e4:	e023      	b.n	800742e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80073e6:	68fb      	ldr	r3, [r7, #12]
 80073e8:	681b      	ldr	r3, [r3, #0]
 80073ea:	68b9      	ldr	r1, [r7, #8]
 80073ec:	4618      	mov	r0, r3
 80073ee:	f000 fb1d 	bl	8007a2c <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80073f2:	68fb      	ldr	r3, [r7, #12]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	69da      	ldr	r2, [r3, #28]
 80073f8:	68fb      	ldr	r3, [r7, #12]
 80073fa:	681b      	ldr	r3, [r3, #0]
 80073fc:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007400:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8007402:	68fb      	ldr	r3, [r7, #12]
 8007404:	681b      	ldr	r3, [r3, #0]
 8007406:	69da      	ldr	r2, [r3, #28]
 8007408:	68fb      	ldr	r3, [r7, #12]
 800740a:	681b      	ldr	r3, [r3, #0]
 800740c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007410:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8007412:	68fb      	ldr	r3, [r7, #12]
 8007414:	681b      	ldr	r3, [r3, #0]
 8007416:	69d9      	ldr	r1, [r3, #28]
 8007418:	68bb      	ldr	r3, [r7, #8]
 800741a:	691b      	ldr	r3, [r3, #16]
 800741c:	021a      	lsls	r2, r3, #8
 800741e:	68fb      	ldr	r3, [r7, #12]
 8007420:	681b      	ldr	r3, [r3, #0]
 8007422:	430a      	orrs	r2, r1
 8007424:	61da      	str	r2, [r3, #28]
      break;
 8007426:	e002      	b.n	800742e <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 8007428:	2301      	movs	r3, #1
 800742a:	75fb      	strb	r3, [r7, #23]
      break;
 800742c:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800742e:	68fb      	ldr	r3, [r7, #12]
 8007430:	2200      	movs	r2, #0
 8007432:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007436:	7dfb      	ldrb	r3, [r7, #23]
}
 8007438:	4618      	mov	r0, r3
 800743a:	3718      	adds	r7, #24
 800743c:	46bd      	mov	sp, r7
 800743e:	bd80      	pop	{r7, pc}

08007440 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8007440:	b580      	push	{r7, lr}
 8007442:	b084      	sub	sp, #16
 8007444:	af00      	add	r7, sp, #0
 8007446:	6078      	str	r0, [r7, #4]
 8007448:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 800744a:	2300      	movs	r3, #0
 800744c:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007454:	2b01      	cmp	r3, #1
 8007456:	d101      	bne.n	800745c <HAL_TIM_ConfigClockSource+0x1c>
 8007458:	2302      	movs	r3, #2
 800745a:	e0b4      	b.n	80075c6 <HAL_TIM_ConfigClockSource+0x186>
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	2201      	movs	r2, #1
 8007460:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	2202      	movs	r2, #2
 8007468:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	689b      	ldr	r3, [r3, #8]
 8007472:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007474:	68bb      	ldr	r3, [r7, #8]
 8007476:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800747a:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800747c:	68bb      	ldr	r3, [r7, #8]
 800747e:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007482:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	681b      	ldr	r3, [r3, #0]
 8007488:	68ba      	ldr	r2, [r7, #8]
 800748a:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 800748c:	683b      	ldr	r3, [r7, #0]
 800748e:	681b      	ldr	r3, [r3, #0]
 8007490:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007494:	d03e      	beq.n	8007514 <HAL_TIM_ConfigClockSource+0xd4>
 8007496:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800749a:	f200 8087 	bhi.w	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 800749e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80074a2:	f000 8086 	beq.w	80075b2 <HAL_TIM_ConfigClockSource+0x172>
 80074a6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80074aa:	d87f      	bhi.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 80074ac:	2b70      	cmp	r3, #112	@ 0x70
 80074ae:	d01a      	beq.n	80074e6 <HAL_TIM_ConfigClockSource+0xa6>
 80074b0:	2b70      	cmp	r3, #112	@ 0x70
 80074b2:	d87b      	bhi.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 80074b4:	2b60      	cmp	r3, #96	@ 0x60
 80074b6:	d050      	beq.n	800755a <HAL_TIM_ConfigClockSource+0x11a>
 80074b8:	2b60      	cmp	r3, #96	@ 0x60
 80074ba:	d877      	bhi.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 80074bc:	2b50      	cmp	r3, #80	@ 0x50
 80074be:	d03c      	beq.n	800753a <HAL_TIM_ConfigClockSource+0xfa>
 80074c0:	2b50      	cmp	r3, #80	@ 0x50
 80074c2:	d873      	bhi.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 80074c4:	2b40      	cmp	r3, #64	@ 0x40
 80074c6:	d058      	beq.n	800757a <HAL_TIM_ConfigClockSource+0x13a>
 80074c8:	2b40      	cmp	r3, #64	@ 0x40
 80074ca:	d86f      	bhi.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 80074cc:	2b30      	cmp	r3, #48	@ 0x30
 80074ce:	d064      	beq.n	800759a <HAL_TIM_ConfigClockSource+0x15a>
 80074d0:	2b30      	cmp	r3, #48	@ 0x30
 80074d2:	d86b      	bhi.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 80074d4:	2b20      	cmp	r3, #32
 80074d6:	d060      	beq.n	800759a <HAL_TIM_ConfigClockSource+0x15a>
 80074d8:	2b20      	cmp	r3, #32
 80074da:	d867      	bhi.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
 80074dc:	2b00      	cmp	r3, #0
 80074de:	d05c      	beq.n	800759a <HAL_TIM_ConfigClockSource+0x15a>
 80074e0:	2b10      	cmp	r3, #16
 80074e2:	d05a      	beq.n	800759a <HAL_TIM_ConfigClockSource+0x15a>
 80074e4:	e062      	b.n	80075ac <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80074e6:	687b      	ldr	r3, [r7, #4]
 80074e8:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80074ea:	683b      	ldr	r3, [r7, #0]
 80074ec:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80074ee:	683b      	ldr	r3, [r7, #0]
 80074f0:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80074f2:	683b      	ldr	r3, [r7, #0]
 80074f4:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80074f6:	f000 fb69 	bl	8007bcc <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80074fa:	687b      	ldr	r3, [r7, #4]
 80074fc:	681b      	ldr	r3, [r3, #0]
 80074fe:	689b      	ldr	r3, [r3, #8]
 8007500:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8007502:	68bb      	ldr	r3, [r7, #8]
 8007504:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8007508:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	681b      	ldr	r3, [r3, #0]
 800750e:	68ba      	ldr	r2, [r7, #8]
 8007510:	609a      	str	r2, [r3, #8]
      break;
 8007512:	e04f      	b.n	80075b4 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8007518:	683b      	ldr	r3, [r7, #0]
 800751a:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800751c:	683b      	ldr	r3, [r7, #0]
 800751e:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8007520:	683b      	ldr	r3, [r7, #0]
 8007522:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8007524:	f000 fb52 	bl	8007bcc <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8007528:	687b      	ldr	r3, [r7, #4]
 800752a:	681b      	ldr	r3, [r3, #0]
 800752c:	689a      	ldr	r2, [r3, #8]
 800752e:	687b      	ldr	r3, [r7, #4]
 8007530:	681b      	ldr	r3, [r3, #0]
 8007532:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007536:	609a      	str	r2, [r3, #8]
      break;
 8007538:	e03c      	b.n	80075b4 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800753a:	687b      	ldr	r3, [r7, #4]
 800753c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800753e:	683b      	ldr	r3, [r7, #0]
 8007540:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007542:	683b      	ldr	r3, [r7, #0]
 8007544:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007546:	461a      	mov	r2, r3
 8007548:	f000 fac6 	bl	8007ad8 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	681b      	ldr	r3, [r3, #0]
 8007550:	2150      	movs	r1, #80	@ 0x50
 8007552:	4618      	mov	r0, r3
 8007554:	f000 fb1f 	bl	8007b96 <TIM_ITRx_SetConfig>
      break;
 8007558:	e02c      	b.n	80075b4 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800755e:	683b      	ldr	r3, [r7, #0]
 8007560:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007562:	683b      	ldr	r3, [r7, #0]
 8007564:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8007566:	461a      	mov	r2, r3
 8007568:	f000 fae5 	bl	8007b36 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 800756c:	687b      	ldr	r3, [r7, #4]
 800756e:	681b      	ldr	r3, [r3, #0]
 8007570:	2160      	movs	r1, #96	@ 0x60
 8007572:	4618      	mov	r0, r3
 8007574:	f000 fb0f 	bl	8007b96 <TIM_ITRx_SetConfig>
      break;
 8007578:	e01c      	b.n	80075b4 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800757e:	683b      	ldr	r3, [r7, #0]
 8007580:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007582:	683b      	ldr	r3, [r7, #0]
 8007584:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007586:	461a      	mov	r2, r3
 8007588:	f000 faa6 	bl	8007ad8 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	681b      	ldr	r3, [r3, #0]
 8007590:	2140      	movs	r1, #64	@ 0x40
 8007592:	4618      	mov	r0, r3
 8007594:	f000 faff 	bl	8007b96 <TIM_ITRx_SetConfig>
      break;
 8007598:	e00c      	b.n	80075b4 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800759a:	687b      	ldr	r3, [r7, #4]
 800759c:	681a      	ldr	r2, [r3, #0]
 800759e:	683b      	ldr	r3, [r7, #0]
 80075a0:	681b      	ldr	r3, [r3, #0]
 80075a2:	4619      	mov	r1, r3
 80075a4:	4610      	mov	r0, r2
 80075a6:	f000 faf6 	bl	8007b96 <TIM_ITRx_SetConfig>
      break;
 80075aa:	e003      	b.n	80075b4 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 80075ac:	2301      	movs	r3, #1
 80075ae:	73fb      	strb	r3, [r7, #15]
      break;
 80075b0:	e000      	b.n	80075b4 <HAL_TIM_ConfigClockSource+0x174>
      break;
 80075b2:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	2201      	movs	r2, #1
 80075b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80075bc:	687b      	ldr	r3, [r7, #4]
 80075be:	2200      	movs	r2, #0
 80075c0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80075c4:	7bfb      	ldrb	r3, [r7, #15]
}
 80075c6:	4618      	mov	r0, r3
 80075c8:	3710      	adds	r7, #16
 80075ca:	46bd      	mov	sp, r7
 80075cc:	bd80      	pop	{r7, pc}

080075ce <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 80075ce:	b480      	push	{r7}
 80075d0:	b083      	sub	sp, #12
 80075d2:	af00      	add	r7, sp, #0
 80075d4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80075d6:	bf00      	nop
 80075d8:	370c      	adds	r7, #12
 80075da:	46bd      	mov	sp, r7
 80075dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075e0:	4770      	bx	lr

080075e2 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80075e2:	b480      	push	{r7}
 80075e4:	b083      	sub	sp, #12
 80075e6:	af00      	add	r7, sp, #0
 80075e8:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80075ea:	bf00      	nop
 80075ec:	370c      	adds	r7, #12
 80075ee:	46bd      	mov	sp, r7
 80075f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075f4:	4770      	bx	lr

080075f6 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80075f6:	b480      	push	{r7}
 80075f8:	b083      	sub	sp, #12
 80075fa:	af00      	add	r7, sp, #0
 80075fc:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80075fe:	bf00      	nop
 8007600:	370c      	adds	r7, #12
 8007602:	46bd      	mov	sp, r7
 8007604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007608:	4770      	bx	lr

0800760a <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800760a:	b480      	push	{r7}
 800760c:	b083      	sub	sp, #12
 800760e:	af00      	add	r7, sp, #0
 8007610:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8007612:	bf00      	nop
 8007614:	370c      	adds	r7, #12
 8007616:	46bd      	mov	sp, r7
 8007618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800761c:	4770      	bx	lr
	...

08007620 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 8007620:	b480      	push	{r7}
 8007622:	b085      	sub	sp, #20
 8007624:	af00      	add	r7, sp, #0
 8007626:	6078      	str	r0, [r7, #4]
 8007628:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800762a:	687b      	ldr	r3, [r7, #4]
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	4a46      	ldr	r2, [pc, #280]	@ (800774c <TIM_Base_SetConfig+0x12c>)
 8007634:	4293      	cmp	r3, r2
 8007636:	d013      	beq.n	8007660 <TIM_Base_SetConfig+0x40>
 8007638:	687b      	ldr	r3, [r7, #4]
 800763a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800763e:	d00f      	beq.n	8007660 <TIM_Base_SetConfig+0x40>
 8007640:	687b      	ldr	r3, [r7, #4]
 8007642:	4a43      	ldr	r2, [pc, #268]	@ (8007750 <TIM_Base_SetConfig+0x130>)
 8007644:	4293      	cmp	r3, r2
 8007646:	d00b      	beq.n	8007660 <TIM_Base_SetConfig+0x40>
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	4a42      	ldr	r2, [pc, #264]	@ (8007754 <TIM_Base_SetConfig+0x134>)
 800764c:	4293      	cmp	r3, r2
 800764e:	d007      	beq.n	8007660 <TIM_Base_SetConfig+0x40>
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	4a41      	ldr	r2, [pc, #260]	@ (8007758 <TIM_Base_SetConfig+0x138>)
 8007654:	4293      	cmp	r3, r2
 8007656:	d003      	beq.n	8007660 <TIM_Base_SetConfig+0x40>
 8007658:	687b      	ldr	r3, [r7, #4]
 800765a:	4a40      	ldr	r2, [pc, #256]	@ (800775c <TIM_Base_SetConfig+0x13c>)
 800765c:	4293      	cmp	r3, r2
 800765e:	d108      	bne.n	8007672 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007660:	68fb      	ldr	r3, [r7, #12]
 8007662:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007666:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8007668:	683b      	ldr	r3, [r7, #0]
 800766a:	685b      	ldr	r3, [r3, #4]
 800766c:	68fa      	ldr	r2, [r7, #12]
 800766e:	4313      	orrs	r3, r2
 8007670:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	4a35      	ldr	r2, [pc, #212]	@ (800774c <TIM_Base_SetConfig+0x12c>)
 8007676:	4293      	cmp	r3, r2
 8007678:	d02b      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007680:	d027      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	4a32      	ldr	r2, [pc, #200]	@ (8007750 <TIM_Base_SetConfig+0x130>)
 8007686:	4293      	cmp	r3, r2
 8007688:	d023      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 800768a:	687b      	ldr	r3, [r7, #4]
 800768c:	4a31      	ldr	r2, [pc, #196]	@ (8007754 <TIM_Base_SetConfig+0x134>)
 800768e:	4293      	cmp	r3, r2
 8007690:	d01f      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 8007692:	687b      	ldr	r3, [r7, #4]
 8007694:	4a30      	ldr	r2, [pc, #192]	@ (8007758 <TIM_Base_SetConfig+0x138>)
 8007696:	4293      	cmp	r3, r2
 8007698:	d01b      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	4a2f      	ldr	r2, [pc, #188]	@ (800775c <TIM_Base_SetConfig+0x13c>)
 800769e:	4293      	cmp	r3, r2
 80076a0:	d017      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 80076a2:	687b      	ldr	r3, [r7, #4]
 80076a4:	4a2e      	ldr	r2, [pc, #184]	@ (8007760 <TIM_Base_SetConfig+0x140>)
 80076a6:	4293      	cmp	r3, r2
 80076a8:	d013      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 80076aa:	687b      	ldr	r3, [r7, #4]
 80076ac:	4a2d      	ldr	r2, [pc, #180]	@ (8007764 <TIM_Base_SetConfig+0x144>)
 80076ae:	4293      	cmp	r3, r2
 80076b0:	d00f      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	4a2c      	ldr	r2, [pc, #176]	@ (8007768 <TIM_Base_SetConfig+0x148>)
 80076b6:	4293      	cmp	r3, r2
 80076b8:	d00b      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 80076ba:	687b      	ldr	r3, [r7, #4]
 80076bc:	4a2b      	ldr	r2, [pc, #172]	@ (800776c <TIM_Base_SetConfig+0x14c>)
 80076be:	4293      	cmp	r3, r2
 80076c0:	d007      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	4a2a      	ldr	r2, [pc, #168]	@ (8007770 <TIM_Base_SetConfig+0x150>)
 80076c6:	4293      	cmp	r3, r2
 80076c8:	d003      	beq.n	80076d2 <TIM_Base_SetConfig+0xb2>
 80076ca:	687b      	ldr	r3, [r7, #4]
 80076cc:	4a29      	ldr	r2, [pc, #164]	@ (8007774 <TIM_Base_SetConfig+0x154>)
 80076ce:	4293      	cmp	r3, r2
 80076d0:	d108      	bne.n	80076e4 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80076d2:	68fb      	ldr	r3, [r7, #12]
 80076d4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80076d8:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80076da:	683b      	ldr	r3, [r7, #0]
 80076dc:	68db      	ldr	r3, [r3, #12]
 80076de:	68fa      	ldr	r2, [r7, #12]
 80076e0:	4313      	orrs	r3, r2
 80076e2:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80076e4:	68fb      	ldr	r3, [r7, #12]
 80076e6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80076ea:	683b      	ldr	r3, [r7, #0]
 80076ec:	695b      	ldr	r3, [r3, #20]
 80076ee:	4313      	orrs	r3, r2
 80076f0:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80076f2:	687b      	ldr	r3, [r7, #4]
 80076f4:	68fa      	ldr	r2, [r7, #12]
 80076f6:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80076f8:	683b      	ldr	r3, [r7, #0]
 80076fa:	689a      	ldr	r2, [r3, #8]
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8007700:	683b      	ldr	r3, [r7, #0]
 8007702:	681a      	ldr	r2, [r3, #0]
 8007704:	687b      	ldr	r3, [r7, #4]
 8007706:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8007708:	687b      	ldr	r3, [r7, #4]
 800770a:	4a10      	ldr	r2, [pc, #64]	@ (800774c <TIM_Base_SetConfig+0x12c>)
 800770c:	4293      	cmp	r3, r2
 800770e:	d003      	beq.n	8007718 <TIM_Base_SetConfig+0xf8>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	4a12      	ldr	r2, [pc, #72]	@ (800775c <TIM_Base_SetConfig+0x13c>)
 8007714:	4293      	cmp	r3, r2
 8007716:	d103      	bne.n	8007720 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8007718:	683b      	ldr	r3, [r7, #0]
 800771a:	691a      	ldr	r2, [r3, #16]
 800771c:	687b      	ldr	r3, [r7, #4]
 800771e:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	2201      	movs	r2, #1
 8007724:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	691b      	ldr	r3, [r3, #16]
 800772a:	f003 0301 	and.w	r3, r3, #1
 800772e:	2b01      	cmp	r3, #1
 8007730:	d105      	bne.n	800773e <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8007732:	687b      	ldr	r3, [r7, #4]
 8007734:	691b      	ldr	r3, [r3, #16]
 8007736:	f023 0201 	bic.w	r2, r3, #1
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	611a      	str	r2, [r3, #16]
  }
}
 800773e:	bf00      	nop
 8007740:	3714      	adds	r7, #20
 8007742:	46bd      	mov	sp, r7
 8007744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007748:	4770      	bx	lr
 800774a:	bf00      	nop
 800774c:	40010000 	.word	0x40010000
 8007750:	40000400 	.word	0x40000400
 8007754:	40000800 	.word	0x40000800
 8007758:	40000c00 	.word	0x40000c00
 800775c:	40010400 	.word	0x40010400
 8007760:	40014000 	.word	0x40014000
 8007764:	40014400 	.word	0x40014400
 8007768:	40014800 	.word	0x40014800
 800776c:	40001800 	.word	0x40001800
 8007770:	40001c00 	.word	0x40001c00
 8007774:	40002000 	.word	0x40002000

08007778 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007778:	b480      	push	{r7}
 800777a:	b087      	sub	sp, #28
 800777c:	af00      	add	r7, sp, #0
 800777e:	6078      	str	r0, [r7, #4]
 8007780:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007782:	687b      	ldr	r3, [r7, #4]
 8007784:	6a1b      	ldr	r3, [r3, #32]
 8007786:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007788:	687b      	ldr	r3, [r7, #4]
 800778a:	6a1b      	ldr	r3, [r3, #32]
 800778c:	f023 0201 	bic.w	r2, r3, #1
 8007790:	687b      	ldr	r3, [r7, #4]
 8007792:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	685b      	ldr	r3, [r3, #4]
 8007798:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	699b      	ldr	r3, [r3, #24]
 800779e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 80077a0:	68fb      	ldr	r3, [r7, #12]
 80077a2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80077a6:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 80077a8:	68fb      	ldr	r3, [r7, #12]
 80077aa:	f023 0303 	bic.w	r3, r3, #3
 80077ae:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80077b0:	683b      	ldr	r3, [r7, #0]
 80077b2:	681b      	ldr	r3, [r3, #0]
 80077b4:	68fa      	ldr	r2, [r7, #12]
 80077b6:	4313      	orrs	r3, r2
 80077b8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 80077ba:	697b      	ldr	r3, [r7, #20]
 80077bc:	f023 0302 	bic.w	r3, r3, #2
 80077c0:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 80077c2:	683b      	ldr	r3, [r7, #0]
 80077c4:	689b      	ldr	r3, [r3, #8]
 80077c6:	697a      	ldr	r2, [r7, #20]
 80077c8:	4313      	orrs	r3, r2
 80077ca:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	4a20      	ldr	r2, [pc, #128]	@ (8007850 <TIM_OC1_SetConfig+0xd8>)
 80077d0:	4293      	cmp	r3, r2
 80077d2:	d003      	beq.n	80077dc <TIM_OC1_SetConfig+0x64>
 80077d4:	687b      	ldr	r3, [r7, #4]
 80077d6:	4a1f      	ldr	r2, [pc, #124]	@ (8007854 <TIM_OC1_SetConfig+0xdc>)
 80077d8:	4293      	cmp	r3, r2
 80077da:	d10c      	bne.n	80077f6 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 80077dc:	697b      	ldr	r3, [r7, #20]
 80077de:	f023 0308 	bic.w	r3, r3, #8
 80077e2:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 80077e4:	683b      	ldr	r3, [r7, #0]
 80077e6:	68db      	ldr	r3, [r3, #12]
 80077e8:	697a      	ldr	r2, [r7, #20]
 80077ea:	4313      	orrs	r3, r2
 80077ec:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 80077ee:	697b      	ldr	r3, [r7, #20]
 80077f0:	f023 0304 	bic.w	r3, r3, #4
 80077f4:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80077f6:	687b      	ldr	r3, [r7, #4]
 80077f8:	4a15      	ldr	r2, [pc, #84]	@ (8007850 <TIM_OC1_SetConfig+0xd8>)
 80077fa:	4293      	cmp	r3, r2
 80077fc:	d003      	beq.n	8007806 <TIM_OC1_SetConfig+0x8e>
 80077fe:	687b      	ldr	r3, [r7, #4]
 8007800:	4a14      	ldr	r2, [pc, #80]	@ (8007854 <TIM_OC1_SetConfig+0xdc>)
 8007802:	4293      	cmp	r3, r2
 8007804:	d111      	bne.n	800782a <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8007806:	693b      	ldr	r3, [r7, #16]
 8007808:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800780c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800780e:	693b      	ldr	r3, [r7, #16]
 8007810:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007814:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8007816:	683b      	ldr	r3, [r7, #0]
 8007818:	695b      	ldr	r3, [r3, #20]
 800781a:	693a      	ldr	r2, [r7, #16]
 800781c:	4313      	orrs	r3, r2
 800781e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8007820:	683b      	ldr	r3, [r7, #0]
 8007822:	699b      	ldr	r3, [r3, #24]
 8007824:	693a      	ldr	r2, [r7, #16]
 8007826:	4313      	orrs	r3, r2
 8007828:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800782a:	687b      	ldr	r3, [r7, #4]
 800782c:	693a      	ldr	r2, [r7, #16]
 800782e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007830:	687b      	ldr	r3, [r7, #4]
 8007832:	68fa      	ldr	r2, [r7, #12]
 8007834:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8007836:	683b      	ldr	r3, [r7, #0]
 8007838:	685a      	ldr	r2, [r3, #4]
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800783e:	687b      	ldr	r3, [r7, #4]
 8007840:	697a      	ldr	r2, [r7, #20]
 8007842:	621a      	str	r2, [r3, #32]
}
 8007844:	bf00      	nop
 8007846:	371c      	adds	r7, #28
 8007848:	46bd      	mov	sp, r7
 800784a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800784e:	4770      	bx	lr
 8007850:	40010000 	.word	0x40010000
 8007854:	40010400 	.word	0x40010400

08007858 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007858:	b480      	push	{r7}
 800785a:	b087      	sub	sp, #28
 800785c:	af00      	add	r7, sp, #0
 800785e:	6078      	str	r0, [r7, #4]
 8007860:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	6a1b      	ldr	r3, [r3, #32]
 8007866:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	6a1b      	ldr	r3, [r3, #32]
 800786c:	f023 0210 	bic.w	r2, r3, #16
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007874:	687b      	ldr	r3, [r7, #4]
 8007876:	685b      	ldr	r3, [r3, #4]
 8007878:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	699b      	ldr	r3, [r3, #24]
 800787e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8007880:	68fb      	ldr	r3, [r7, #12]
 8007882:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007886:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8007888:	68fb      	ldr	r3, [r7, #12]
 800788a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800788e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007890:	683b      	ldr	r3, [r7, #0]
 8007892:	681b      	ldr	r3, [r3, #0]
 8007894:	021b      	lsls	r3, r3, #8
 8007896:	68fa      	ldr	r2, [r7, #12]
 8007898:	4313      	orrs	r3, r2
 800789a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 800789c:	697b      	ldr	r3, [r7, #20]
 800789e:	f023 0320 	bic.w	r3, r3, #32
 80078a2:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 80078a4:	683b      	ldr	r3, [r7, #0]
 80078a6:	689b      	ldr	r3, [r3, #8]
 80078a8:	011b      	lsls	r3, r3, #4
 80078aa:	697a      	ldr	r2, [r7, #20]
 80078ac:	4313      	orrs	r3, r2
 80078ae:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	4a22      	ldr	r2, [pc, #136]	@ (800793c <TIM_OC2_SetConfig+0xe4>)
 80078b4:	4293      	cmp	r3, r2
 80078b6:	d003      	beq.n	80078c0 <TIM_OC2_SetConfig+0x68>
 80078b8:	687b      	ldr	r3, [r7, #4]
 80078ba:	4a21      	ldr	r2, [pc, #132]	@ (8007940 <TIM_OC2_SetConfig+0xe8>)
 80078bc:	4293      	cmp	r3, r2
 80078be:	d10d      	bne.n	80078dc <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 80078c0:	697b      	ldr	r3, [r7, #20]
 80078c2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80078c6:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 80078c8:	683b      	ldr	r3, [r7, #0]
 80078ca:	68db      	ldr	r3, [r3, #12]
 80078cc:	011b      	lsls	r3, r3, #4
 80078ce:	697a      	ldr	r2, [r7, #20]
 80078d0:	4313      	orrs	r3, r2
 80078d2:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 80078d4:	697b      	ldr	r3, [r7, #20]
 80078d6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80078da:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	4a17      	ldr	r2, [pc, #92]	@ (800793c <TIM_OC2_SetConfig+0xe4>)
 80078e0:	4293      	cmp	r3, r2
 80078e2:	d003      	beq.n	80078ec <TIM_OC2_SetConfig+0x94>
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	4a16      	ldr	r2, [pc, #88]	@ (8007940 <TIM_OC2_SetConfig+0xe8>)
 80078e8:	4293      	cmp	r3, r2
 80078ea:	d113      	bne.n	8007914 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 80078ec:	693b      	ldr	r3, [r7, #16]
 80078ee:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80078f2:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80078f4:	693b      	ldr	r3, [r7, #16]
 80078f6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80078fa:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 80078fc:	683b      	ldr	r3, [r7, #0]
 80078fe:	695b      	ldr	r3, [r3, #20]
 8007900:	009b      	lsls	r3, r3, #2
 8007902:	693a      	ldr	r2, [r7, #16]
 8007904:	4313      	orrs	r3, r2
 8007906:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007908:	683b      	ldr	r3, [r7, #0]
 800790a:	699b      	ldr	r3, [r3, #24]
 800790c:	009b      	lsls	r3, r3, #2
 800790e:	693a      	ldr	r2, [r7, #16]
 8007910:	4313      	orrs	r3, r2
 8007912:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	693a      	ldr	r2, [r7, #16]
 8007918:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800791a:	687b      	ldr	r3, [r7, #4]
 800791c:	68fa      	ldr	r2, [r7, #12]
 800791e:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8007920:	683b      	ldr	r3, [r7, #0]
 8007922:	685a      	ldr	r2, [r3, #4]
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	697a      	ldr	r2, [r7, #20]
 800792c:	621a      	str	r2, [r3, #32]
}
 800792e:	bf00      	nop
 8007930:	371c      	adds	r7, #28
 8007932:	46bd      	mov	sp, r7
 8007934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007938:	4770      	bx	lr
 800793a:	bf00      	nop
 800793c:	40010000 	.word	0x40010000
 8007940:	40010400 	.word	0x40010400

08007944 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007944:	b480      	push	{r7}
 8007946:	b087      	sub	sp, #28
 8007948:	af00      	add	r7, sp, #0
 800794a:	6078      	str	r0, [r7, #4]
 800794c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800794e:	687b      	ldr	r3, [r7, #4]
 8007950:	6a1b      	ldr	r3, [r3, #32]
 8007952:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8007954:	687b      	ldr	r3, [r7, #4]
 8007956:	6a1b      	ldr	r3, [r3, #32]
 8007958:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	685b      	ldr	r3, [r3, #4]
 8007964:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	69db      	ldr	r3, [r3, #28]
 800796a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800796c:	68fb      	ldr	r3, [r7, #12]
 800796e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007972:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8007974:	68fb      	ldr	r3, [r7, #12]
 8007976:	f023 0303 	bic.w	r3, r3, #3
 800797a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800797c:	683b      	ldr	r3, [r7, #0]
 800797e:	681b      	ldr	r3, [r3, #0]
 8007980:	68fa      	ldr	r2, [r7, #12]
 8007982:	4313      	orrs	r3, r2
 8007984:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8007986:	697b      	ldr	r3, [r7, #20]
 8007988:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800798c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800798e:	683b      	ldr	r3, [r7, #0]
 8007990:	689b      	ldr	r3, [r3, #8]
 8007992:	021b      	lsls	r3, r3, #8
 8007994:	697a      	ldr	r2, [r7, #20]
 8007996:	4313      	orrs	r3, r2
 8007998:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800799a:	687b      	ldr	r3, [r7, #4]
 800799c:	4a21      	ldr	r2, [pc, #132]	@ (8007a24 <TIM_OC3_SetConfig+0xe0>)
 800799e:	4293      	cmp	r3, r2
 80079a0:	d003      	beq.n	80079aa <TIM_OC3_SetConfig+0x66>
 80079a2:	687b      	ldr	r3, [r7, #4]
 80079a4:	4a20      	ldr	r2, [pc, #128]	@ (8007a28 <TIM_OC3_SetConfig+0xe4>)
 80079a6:	4293      	cmp	r3, r2
 80079a8:	d10d      	bne.n	80079c6 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 80079aa:	697b      	ldr	r3, [r7, #20]
 80079ac:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80079b0:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 80079b2:	683b      	ldr	r3, [r7, #0]
 80079b4:	68db      	ldr	r3, [r3, #12]
 80079b6:	021b      	lsls	r3, r3, #8
 80079b8:	697a      	ldr	r2, [r7, #20]
 80079ba:	4313      	orrs	r3, r2
 80079bc:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 80079be:	697b      	ldr	r3, [r7, #20]
 80079c0:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 80079c4:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80079c6:	687b      	ldr	r3, [r7, #4]
 80079c8:	4a16      	ldr	r2, [pc, #88]	@ (8007a24 <TIM_OC3_SetConfig+0xe0>)
 80079ca:	4293      	cmp	r3, r2
 80079cc:	d003      	beq.n	80079d6 <TIM_OC3_SetConfig+0x92>
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	4a15      	ldr	r2, [pc, #84]	@ (8007a28 <TIM_OC3_SetConfig+0xe4>)
 80079d2:	4293      	cmp	r3, r2
 80079d4:	d113      	bne.n	80079fe <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 80079d6:	693b      	ldr	r3, [r7, #16]
 80079d8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80079dc:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 80079de:	693b      	ldr	r3, [r7, #16]
 80079e0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80079e4:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 80079e6:	683b      	ldr	r3, [r7, #0]
 80079e8:	695b      	ldr	r3, [r3, #20]
 80079ea:	011b      	lsls	r3, r3, #4
 80079ec:	693a      	ldr	r2, [r7, #16]
 80079ee:	4313      	orrs	r3, r2
 80079f0:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 80079f2:	683b      	ldr	r3, [r7, #0]
 80079f4:	699b      	ldr	r3, [r3, #24]
 80079f6:	011b      	lsls	r3, r3, #4
 80079f8:	693a      	ldr	r2, [r7, #16]
 80079fa:	4313      	orrs	r3, r2
 80079fc:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	693a      	ldr	r2, [r7, #16]
 8007a02:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	68fa      	ldr	r2, [r7, #12]
 8007a08:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007a0a:	683b      	ldr	r3, [r7, #0]
 8007a0c:	685a      	ldr	r2, [r3, #4]
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	697a      	ldr	r2, [r7, #20]
 8007a16:	621a      	str	r2, [r3, #32]
}
 8007a18:	bf00      	nop
 8007a1a:	371c      	adds	r7, #28
 8007a1c:	46bd      	mov	sp, r7
 8007a1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a22:	4770      	bx	lr
 8007a24:	40010000 	.word	0x40010000
 8007a28:	40010400 	.word	0x40010400

08007a2c <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007a2c:	b480      	push	{r7}
 8007a2e:	b087      	sub	sp, #28
 8007a30:	af00      	add	r7, sp, #0
 8007a32:	6078      	str	r0, [r7, #4]
 8007a34:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	6a1b      	ldr	r3, [r3, #32]
 8007a3a:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	6a1b      	ldr	r3, [r3, #32]
 8007a40:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	685b      	ldr	r3, [r3, #4]
 8007a4c:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	69db      	ldr	r3, [r3, #28]
 8007a52:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007a54:	68fb      	ldr	r3, [r7, #12]
 8007a56:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007a5a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007a5c:	68fb      	ldr	r3, [r7, #12]
 8007a5e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007a62:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007a64:	683b      	ldr	r3, [r7, #0]
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	021b      	lsls	r3, r3, #8
 8007a6a:	68fa      	ldr	r2, [r7, #12]
 8007a6c:	4313      	orrs	r3, r2
 8007a6e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8007a70:	693b      	ldr	r3, [r7, #16]
 8007a72:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007a76:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007a78:	683b      	ldr	r3, [r7, #0]
 8007a7a:	689b      	ldr	r3, [r3, #8]
 8007a7c:	031b      	lsls	r3, r3, #12
 8007a7e:	693a      	ldr	r2, [r7, #16]
 8007a80:	4313      	orrs	r3, r2
 8007a82:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	4a12      	ldr	r2, [pc, #72]	@ (8007ad0 <TIM_OC4_SetConfig+0xa4>)
 8007a88:	4293      	cmp	r3, r2
 8007a8a:	d003      	beq.n	8007a94 <TIM_OC4_SetConfig+0x68>
 8007a8c:	687b      	ldr	r3, [r7, #4]
 8007a8e:	4a11      	ldr	r2, [pc, #68]	@ (8007ad4 <TIM_OC4_SetConfig+0xa8>)
 8007a90:	4293      	cmp	r3, r2
 8007a92:	d109      	bne.n	8007aa8 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007a94:	697b      	ldr	r3, [r7, #20]
 8007a96:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007a9a:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007a9c:	683b      	ldr	r3, [r7, #0]
 8007a9e:	695b      	ldr	r3, [r3, #20]
 8007aa0:	019b      	lsls	r3, r3, #6
 8007aa2:	697a      	ldr	r2, [r7, #20]
 8007aa4:	4313      	orrs	r3, r2
 8007aa6:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	697a      	ldr	r2, [r7, #20]
 8007aac:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007aae:	687b      	ldr	r3, [r7, #4]
 8007ab0:	68fa      	ldr	r2, [r7, #12]
 8007ab2:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8007ab4:	683b      	ldr	r3, [r7, #0]
 8007ab6:	685a      	ldr	r2, [r3, #4]
 8007ab8:	687b      	ldr	r3, [r7, #4]
 8007aba:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007abc:	687b      	ldr	r3, [r7, #4]
 8007abe:	693a      	ldr	r2, [r7, #16]
 8007ac0:	621a      	str	r2, [r3, #32]
}
 8007ac2:	bf00      	nop
 8007ac4:	371c      	adds	r7, #28
 8007ac6:	46bd      	mov	sp, r7
 8007ac8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007acc:	4770      	bx	lr
 8007ace:	bf00      	nop
 8007ad0:	40010000 	.word	0x40010000
 8007ad4:	40010400 	.word	0x40010400

08007ad8 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007ad8:	b480      	push	{r7}
 8007ada:	b087      	sub	sp, #28
 8007adc:	af00      	add	r7, sp, #0
 8007ade:	60f8      	str	r0, [r7, #12]
 8007ae0:	60b9      	str	r1, [r7, #8]
 8007ae2:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	6a1b      	ldr	r3, [r3, #32]
 8007ae8:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007aea:	68fb      	ldr	r3, [r7, #12]
 8007aec:	6a1b      	ldr	r3, [r3, #32]
 8007aee:	f023 0201 	bic.w	r2, r3, #1
 8007af2:	68fb      	ldr	r3, [r7, #12]
 8007af4:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007af6:	68fb      	ldr	r3, [r7, #12]
 8007af8:	699b      	ldr	r3, [r3, #24]
 8007afa:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007afc:	693b      	ldr	r3, [r7, #16]
 8007afe:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007b02:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	011b      	lsls	r3, r3, #4
 8007b08:	693a      	ldr	r2, [r7, #16]
 8007b0a:	4313      	orrs	r3, r2
 8007b0c:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007b0e:	697b      	ldr	r3, [r7, #20]
 8007b10:	f023 030a 	bic.w	r3, r3, #10
 8007b14:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007b16:	697a      	ldr	r2, [r7, #20]
 8007b18:	68bb      	ldr	r3, [r7, #8]
 8007b1a:	4313      	orrs	r3, r2
 8007b1c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007b1e:	68fb      	ldr	r3, [r7, #12]
 8007b20:	693a      	ldr	r2, [r7, #16]
 8007b22:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007b24:	68fb      	ldr	r3, [r7, #12]
 8007b26:	697a      	ldr	r2, [r7, #20]
 8007b28:	621a      	str	r2, [r3, #32]
}
 8007b2a:	bf00      	nop
 8007b2c:	371c      	adds	r7, #28
 8007b2e:	46bd      	mov	sp, r7
 8007b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b34:	4770      	bx	lr

08007b36 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007b36:	b480      	push	{r7}
 8007b38:	b087      	sub	sp, #28
 8007b3a:	af00      	add	r7, sp, #0
 8007b3c:	60f8      	str	r0, [r7, #12]
 8007b3e:	60b9      	str	r1, [r7, #8]
 8007b40:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8007b42:	68fb      	ldr	r3, [r7, #12]
 8007b44:	6a1b      	ldr	r3, [r3, #32]
 8007b46:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007b48:	68fb      	ldr	r3, [r7, #12]
 8007b4a:	6a1b      	ldr	r3, [r3, #32]
 8007b4c:	f023 0210 	bic.w	r2, r3, #16
 8007b50:	68fb      	ldr	r3, [r7, #12]
 8007b52:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007b54:	68fb      	ldr	r3, [r7, #12]
 8007b56:	699b      	ldr	r3, [r3, #24]
 8007b58:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007b5a:	693b      	ldr	r3, [r7, #16]
 8007b5c:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007b60:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007b62:	687b      	ldr	r3, [r7, #4]
 8007b64:	031b      	lsls	r3, r3, #12
 8007b66:	693a      	ldr	r2, [r7, #16]
 8007b68:	4313      	orrs	r3, r2
 8007b6a:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007b6c:	697b      	ldr	r3, [r7, #20]
 8007b6e:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8007b72:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007b74:	68bb      	ldr	r3, [r7, #8]
 8007b76:	011b      	lsls	r3, r3, #4
 8007b78:	697a      	ldr	r2, [r7, #20]
 8007b7a:	4313      	orrs	r3, r2
 8007b7c:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007b7e:	68fb      	ldr	r3, [r7, #12]
 8007b80:	693a      	ldr	r2, [r7, #16]
 8007b82:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007b84:	68fb      	ldr	r3, [r7, #12]
 8007b86:	697a      	ldr	r2, [r7, #20]
 8007b88:	621a      	str	r2, [r3, #32]
}
 8007b8a:	bf00      	nop
 8007b8c:	371c      	adds	r7, #28
 8007b8e:	46bd      	mov	sp, r7
 8007b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b94:	4770      	bx	lr

08007b96 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007b96:	b480      	push	{r7}
 8007b98:	b085      	sub	sp, #20
 8007b9a:	af00      	add	r7, sp, #0
 8007b9c:	6078      	str	r0, [r7, #4]
 8007b9e:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	689b      	ldr	r3, [r3, #8]
 8007ba4:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007ba6:	68fb      	ldr	r3, [r7, #12]
 8007ba8:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007bac:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007bae:	683a      	ldr	r2, [r7, #0]
 8007bb0:	68fb      	ldr	r3, [r7, #12]
 8007bb2:	4313      	orrs	r3, r2
 8007bb4:	f043 0307 	orr.w	r3, r3, #7
 8007bb8:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	68fa      	ldr	r2, [r7, #12]
 8007bbe:	609a      	str	r2, [r3, #8]
}
 8007bc0:	bf00      	nop
 8007bc2:	3714      	adds	r7, #20
 8007bc4:	46bd      	mov	sp, r7
 8007bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bca:	4770      	bx	lr

08007bcc <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007bcc:	b480      	push	{r7}
 8007bce:	b087      	sub	sp, #28
 8007bd0:	af00      	add	r7, sp, #0
 8007bd2:	60f8      	str	r0, [r7, #12]
 8007bd4:	60b9      	str	r1, [r7, #8]
 8007bd6:	607a      	str	r2, [r7, #4]
 8007bd8:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007bda:	68fb      	ldr	r3, [r7, #12]
 8007bdc:	689b      	ldr	r3, [r3, #8]
 8007bde:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007be0:	697b      	ldr	r3, [r7, #20]
 8007be2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007be6:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007be8:	683b      	ldr	r3, [r7, #0]
 8007bea:	021a      	lsls	r2, r3, #8
 8007bec:	687b      	ldr	r3, [r7, #4]
 8007bee:	431a      	orrs	r2, r3
 8007bf0:	68bb      	ldr	r3, [r7, #8]
 8007bf2:	4313      	orrs	r3, r2
 8007bf4:	697a      	ldr	r2, [r7, #20]
 8007bf6:	4313      	orrs	r3, r2
 8007bf8:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007bfa:	68fb      	ldr	r3, [r7, #12]
 8007bfc:	697a      	ldr	r2, [r7, #20]
 8007bfe:	609a      	str	r2, [r3, #8]
}
 8007c00:	bf00      	nop
 8007c02:	371c      	adds	r7, #28
 8007c04:	46bd      	mov	sp, r7
 8007c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c0a:	4770      	bx	lr

08007c0c <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007c0c:	b480      	push	{r7}
 8007c0e:	b087      	sub	sp, #28
 8007c10:	af00      	add	r7, sp, #0
 8007c12:	60f8      	str	r0, [r7, #12]
 8007c14:	60b9      	str	r1, [r7, #8]
 8007c16:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007c18:	68bb      	ldr	r3, [r7, #8]
 8007c1a:	f003 031f 	and.w	r3, r3, #31
 8007c1e:	2201      	movs	r2, #1
 8007c20:	fa02 f303 	lsl.w	r3, r2, r3
 8007c24:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007c26:	68fb      	ldr	r3, [r7, #12]
 8007c28:	6a1a      	ldr	r2, [r3, #32]
 8007c2a:	697b      	ldr	r3, [r7, #20]
 8007c2c:	43db      	mvns	r3, r3
 8007c2e:	401a      	ands	r2, r3
 8007c30:	68fb      	ldr	r3, [r7, #12]
 8007c32:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007c34:	68fb      	ldr	r3, [r7, #12]
 8007c36:	6a1a      	ldr	r2, [r3, #32]
 8007c38:	68bb      	ldr	r3, [r7, #8]
 8007c3a:	f003 031f 	and.w	r3, r3, #31
 8007c3e:	6879      	ldr	r1, [r7, #4]
 8007c40:	fa01 f303 	lsl.w	r3, r1, r3
 8007c44:	431a      	orrs	r2, r3
 8007c46:	68fb      	ldr	r3, [r7, #12]
 8007c48:	621a      	str	r2, [r3, #32]
}
 8007c4a:	bf00      	nop
 8007c4c:	371c      	adds	r7, #28
 8007c4e:	46bd      	mov	sp, r7
 8007c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c54:	4770      	bx	lr
	...

08007c58 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007c58:	b480      	push	{r7}
 8007c5a:	b085      	sub	sp, #20
 8007c5c:	af00      	add	r7, sp, #0
 8007c5e:	6078      	str	r0, [r7, #4]
 8007c60:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007c62:	687b      	ldr	r3, [r7, #4]
 8007c64:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007c68:	2b01      	cmp	r3, #1
 8007c6a:	d101      	bne.n	8007c70 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007c6c:	2302      	movs	r3, #2
 8007c6e:	e05a      	b.n	8007d26 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	2201      	movs	r2, #1
 8007c74:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007c78:	687b      	ldr	r3, [r7, #4]
 8007c7a:	2202      	movs	r2, #2
 8007c7c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	685b      	ldr	r3, [r3, #4]
 8007c86:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	689b      	ldr	r3, [r3, #8]
 8007c8e:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007c90:	68fb      	ldr	r3, [r7, #12]
 8007c92:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c96:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007c98:	683b      	ldr	r3, [r7, #0]
 8007c9a:	681b      	ldr	r3, [r3, #0]
 8007c9c:	68fa      	ldr	r2, [r7, #12]
 8007c9e:	4313      	orrs	r3, r2
 8007ca0:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007ca2:	687b      	ldr	r3, [r7, #4]
 8007ca4:	681b      	ldr	r3, [r3, #0]
 8007ca6:	68fa      	ldr	r2, [r7, #12]
 8007ca8:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	681b      	ldr	r3, [r3, #0]
 8007cae:	4a21      	ldr	r2, [pc, #132]	@ (8007d34 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007cb0:	4293      	cmp	r3, r2
 8007cb2:	d022      	beq.n	8007cfa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007cb4:	687b      	ldr	r3, [r7, #4]
 8007cb6:	681b      	ldr	r3, [r3, #0]
 8007cb8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007cbc:	d01d      	beq.n	8007cfa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	4a1d      	ldr	r2, [pc, #116]	@ (8007d38 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007cc4:	4293      	cmp	r3, r2
 8007cc6:	d018      	beq.n	8007cfa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007cc8:	687b      	ldr	r3, [r7, #4]
 8007cca:	681b      	ldr	r3, [r3, #0]
 8007ccc:	4a1b      	ldr	r2, [pc, #108]	@ (8007d3c <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007cce:	4293      	cmp	r3, r2
 8007cd0:	d013      	beq.n	8007cfa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007cd2:	687b      	ldr	r3, [r7, #4]
 8007cd4:	681b      	ldr	r3, [r3, #0]
 8007cd6:	4a1a      	ldr	r2, [pc, #104]	@ (8007d40 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8007cd8:	4293      	cmp	r3, r2
 8007cda:	d00e      	beq.n	8007cfa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007cdc:	687b      	ldr	r3, [r7, #4]
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	4a18      	ldr	r2, [pc, #96]	@ (8007d44 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007ce2:	4293      	cmp	r3, r2
 8007ce4:	d009      	beq.n	8007cfa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007ce6:	687b      	ldr	r3, [r7, #4]
 8007ce8:	681b      	ldr	r3, [r3, #0]
 8007cea:	4a17      	ldr	r2, [pc, #92]	@ (8007d48 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007cec:	4293      	cmp	r3, r2
 8007cee:	d004      	beq.n	8007cfa <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	681b      	ldr	r3, [r3, #0]
 8007cf4:	4a15      	ldr	r2, [pc, #84]	@ (8007d4c <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007cf6:	4293      	cmp	r3, r2
 8007cf8:	d10c      	bne.n	8007d14 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007cfa:	68bb      	ldr	r3, [r7, #8]
 8007cfc:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007d00:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007d02:	683b      	ldr	r3, [r7, #0]
 8007d04:	685b      	ldr	r3, [r3, #4]
 8007d06:	68ba      	ldr	r2, [r7, #8]
 8007d08:	4313      	orrs	r3, r2
 8007d0a:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	681b      	ldr	r3, [r3, #0]
 8007d10:	68ba      	ldr	r2, [r7, #8]
 8007d12:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	2201      	movs	r2, #1
 8007d18:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007d1c:	687b      	ldr	r3, [r7, #4]
 8007d1e:	2200      	movs	r2, #0
 8007d20:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8007d24:	2300      	movs	r3, #0
}
 8007d26:	4618      	mov	r0, r3
 8007d28:	3714      	adds	r7, #20
 8007d2a:	46bd      	mov	sp, r7
 8007d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d30:	4770      	bx	lr
 8007d32:	bf00      	nop
 8007d34:	40010000 	.word	0x40010000
 8007d38:	40000400 	.word	0x40000400
 8007d3c:	40000800 	.word	0x40000800
 8007d40:	40000c00 	.word	0x40000c00
 8007d44:	40010400 	.word	0x40010400
 8007d48:	40014000 	.word	0x40014000
 8007d4c:	40001800 	.word	0x40001800

08007d50 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8007d50:	b480      	push	{r7}
 8007d52:	b083      	sub	sp, #12
 8007d54:	af00      	add	r7, sp, #0
 8007d56:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8007d58:	bf00      	nop
 8007d5a:	370c      	adds	r7, #12
 8007d5c:	46bd      	mov	sp, r7
 8007d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d62:	4770      	bx	lr

08007d64 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8007d64:	b480      	push	{r7}
 8007d66:	b083      	sub	sp, #12
 8007d68:	af00      	add	r7, sp, #0
 8007d6a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8007d6c:	bf00      	nop
 8007d6e:	370c      	adds	r7, #12
 8007d70:	46bd      	mov	sp, r7
 8007d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d76:	4770      	bx	lr

08007d78 <MX_TouchGFX_Init>:
 8007d78:	b580      	push	{r7, lr}
 8007d7a:	af00      	add	r7, sp, #0
 8007d7c:	f007 fbd6 	bl	800f52c <touchgfx_components_init>
 8007d80:	f007 fbaa 	bl	800f4d8 <touchgfx_init>
 8007d84:	bf00      	nop
 8007d86:	bd80      	pop	{r7, pc}

08007d88 <MX_TouchGFX_Process>:
 8007d88:	b580      	push	{r7, lr}
 8007d8a:	af00      	add	r7, sp, #0
 8007d8c:	f007 fbd6 	bl	800f53c <touchgfx_taskEntry>
 8007d90:	bf00      	nop
 8007d92:	bd80      	pop	{r7, pc}

08007d94 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8007d94:	b480      	push	{r7}
 8007d96:	b083      	sub	sp, #12
 8007d98:	af00      	add	r7, sp, #0
 8007d9a:	6078      	str	r0, [r7, #4]
    {
 8007d9c:	4a04      	ldr	r2, [pc, #16]	@ (8007db0 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8007d9e:	687b      	ldr	r3, [r7, #4]
 8007da0:	601a      	str	r2, [r3, #0]
    }
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	4618      	mov	r0, r3
 8007da6:	370c      	adds	r7, #12
 8007da8:	46bd      	mov	sp, r7
 8007daa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dae:	4770      	bx	lr
 8007db0:	08027f34 	.word	0x08027f34

08007db4 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8007db4:	b580      	push	{r7, lr}
 8007db6:	b082      	sub	sp, #8
 8007db8:	af00      	add	r7, sp, #0
 8007dba:	6078      	str	r0, [r7, #4]
    }
 8007dbc:	6878      	ldr	r0, [r7, #4]
 8007dbe:	f7ff ffe9 	bl	8007d94 <_ZN8touchgfx12FontProviderD1Ev>
 8007dc2:	2104      	movs	r1, #4
 8007dc4:	6878      	ldr	r0, [r7, #4]
 8007dc6:	f01d fe34 	bl	8025a32 <_ZdlPvj>
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	4618      	mov	r0, r3
 8007dce:	3708      	adds	r7, #8
 8007dd0:	46bd      	mov	sp, r7
 8007dd2:	bd80      	pop	{r7, pc}

08007dd4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8007dd4:	b580      	push	{r7, lr}
 8007dd6:	b082      	sub	sp, #8
 8007dd8:	af00      	add	r7, sp, #0
 8007dda:	6078      	str	r0, [r7, #4]
 8007ddc:	460b      	mov	r3, r1
 8007dde:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8007de0:	887b      	ldrh	r3, [r7, #2]
 8007de2:	2b00      	cmp	r3, #0
 8007de4:	d002      	beq.n	8007dec <_ZN23ApplicationFontProvider7getFontEt+0x18>
 8007de6:	2b01      	cmp	r3, #1
 8007de8:	d005      	beq.n	8007df6 <_ZN23ApplicationFontProvider7getFontEt+0x22>
 8007dea:	e009      	b.n	8007e00 <_ZN23ApplicationFontProvider7getFontEt+0x2c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8007dec:	f005 fd30 	bl	800d850 <_ZN17TypedTextDatabase8getFontsEv>
 8007df0:	4603      	mov	r3, r0
 8007df2:	681b      	ldr	r3, [r3, #0]
 8007df4:	e005      	b.n	8007e02 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    case Typography::TYPOGRAPHY_00:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8007df6:	f005 fd2b 	bl	800d850 <_ZN17TypedTextDatabase8getFontsEv>
 8007dfa:	4603      	mov	r3, r0
 8007dfc:	685b      	ldr	r3, [r3, #4]
 8007dfe:	e000      	b.n	8007e02 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    default:
        return 0;
 8007e00:	2300      	movs	r3, #0
    }
}
 8007e02:	4618      	mov	r0, r3
 8007e04:	3708      	adds	r7, #8
 8007e06:	46bd      	mov	sp, r7
 8007e08:	bd80      	pop	{r7, pc}
	...

08007e0c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DEFAULT = 0;       // Asap_Regular_80_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 1; // verdana_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8007e0c:	b580      	push	{r7, lr}
 8007e0e:	b082      	sub	sp, #8
 8007e10:	af00      	add	r7, sp, #0
 8007e12:	6078      	str	r0, [r7, #4]
 8007e14:	4a05      	ldr	r2, [pc, #20]	@ (8007e2c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	601a      	str	r2, [r3, #0]
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	4618      	mov	r0, r3
 8007e1e:	f7ff ffb9 	bl	8007d94 <_ZN8touchgfx12FontProviderD1Ev>
 8007e22:	687b      	ldr	r3, [r7, #4]
 8007e24:	4618      	mov	r0, r3
 8007e26:	3708      	adds	r7, #8
 8007e28:	46bd      	mov	sp, r7
 8007e2a:	bd80      	pop	{r7, pc}
 8007e2c:	08027f20 	.word	0x08027f20

08007e30 <_ZN23ApplicationFontProviderD0Ev>:
 8007e30:	b580      	push	{r7, lr}
 8007e32:	b082      	sub	sp, #8
 8007e34:	af00      	add	r7, sp, #0
 8007e36:	6078      	str	r0, [r7, #4]
 8007e38:	6878      	ldr	r0, [r7, #4]
 8007e3a:	f7ff ffe7 	bl	8007e0c <_ZN23ApplicationFontProviderD1Ev>
 8007e3e:	2104      	movs	r1, #4
 8007e40:	6878      	ldr	r0, [r7, #4]
 8007e42:	f01d fdf6 	bl	8025a32 <_ZdlPvj>
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	4618      	mov	r0, r3
 8007e4a:	3708      	adds	r7, #8
 8007e4c:	46bd      	mov	sp, r7
 8007e4e:	bd80      	pop	{r7, pc}

08007e50 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8007e50:	b480      	push	{r7}
 8007e52:	b083      	sub	sp, #12
 8007e54:	af00      	add	r7, sp, #0
 8007e56:	6078      	str	r0, [r7, #4]
    {
 8007e58:	4a04      	ldr	r2, [pc, #16]	@ (8007e6c <_ZN8touchgfx4FontD1Ev+0x1c>)
 8007e5a:	687b      	ldr	r3, [r7, #4]
 8007e5c:	601a      	str	r2, [r3, #0]
    }
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	4618      	mov	r0, r3
 8007e62:	370c      	adds	r7, #12
 8007e64:	46bd      	mov	sp, r7
 8007e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e6a:	4770      	bx	lr
 8007e6c:	0802870c 	.word	0x0802870c

08007e70 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8007e70:	b580      	push	{r7, lr}
 8007e72:	b082      	sub	sp, #8
 8007e74:	af00      	add	r7, sp, #0
 8007e76:	6078      	str	r0, [r7, #4]
    }
 8007e78:	6878      	ldr	r0, [r7, #4]
 8007e7a:	f7ff ffe9 	bl	8007e50 <_ZN8touchgfx4FontD1Ev>
 8007e7e:	2114      	movs	r1, #20
 8007e80:	6878      	ldr	r0, [r7, #4]
 8007e82:	f01d fdd6 	bl	8025a32 <_ZdlPvj>
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	4618      	mov	r0, r3
 8007e8a:	3708      	adds	r7, #8
 8007e8c:	46bd      	mov	sp, r7
 8007e8e:	bd80      	pop	{r7, pc}

08007e90 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8007e90:	b590      	push	{r4, r7, lr}
 8007e92:	b087      	sub	sp, #28
 8007e94:	af00      	add	r7, sp, #0
 8007e96:	6078      	str	r0, [r7, #4]
 8007e98:	460b      	mov	r3, r1
 8007e9a:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8007e9c:	887b      	ldrh	r3, [r7, #2]
 8007e9e:	2b00      	cmp	r3, #0
 8007ea0:	d101      	bne.n	8007ea6 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8007ea2:	2300      	movs	r3, #0
 8007ea4:	e010      	b.n	8007ec8 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8007ea6:	2300      	movs	r3, #0
 8007ea8:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8007eaa:	2300      	movs	r3, #0
 8007eac:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8007eae:	687b      	ldr	r3, [r7, #4]
 8007eb0:	681b      	ldr	r3, [r3, #0]
 8007eb2:	3308      	adds	r3, #8
 8007eb4:	681c      	ldr	r4, [r3, #0]
 8007eb6:	f107 030f 	add.w	r3, r7, #15
 8007eba:	f107 0210 	add.w	r2, r7, #16
 8007ebe:	8879      	ldrh	r1, [r7, #2]
 8007ec0:	6878      	ldr	r0, [r7, #4]
 8007ec2:	47a0      	blx	r4
 8007ec4:	6178      	str	r0, [r7, #20]
        return glyph;
 8007ec6:	697b      	ldr	r3, [r7, #20]
    }
 8007ec8:	4618      	mov	r0, r3
 8007eca:	371c      	adds	r7, #28
 8007ecc:	46bd      	mov	sp, r7
 8007ece:	bd90      	pop	{r4, r7, pc}

08007ed0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8007ed0:	b480      	push	{r7}
 8007ed2:	b083      	sub	sp, #12
 8007ed4:	af00      	add	r7, sp, #0
 8007ed6:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8007ed8:	687b      	ldr	r3, [r7, #4]
 8007eda:	89db      	ldrh	r3, [r3, #14]
    }
 8007edc:	4618      	mov	r0, r3
 8007ede:	370c      	adds	r7, #12
 8007ee0:	46bd      	mov	sp, r7
 8007ee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ee6:	4770      	bx	lr

08007ee8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8007ee8:	b480      	push	{r7}
 8007eea:	b083      	sub	sp, #12
 8007eec:	af00      	add	r7, sp, #0
 8007eee:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	8a1b      	ldrh	r3, [r3, #16]
    }
 8007ef4:	4618      	mov	r0, r3
 8007ef6:	370c      	adds	r7, #12
 8007ef8:	46bd      	mov	sp, r7
 8007efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007efe:	4770      	bx	lr

08007f00 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8007f00:	b480      	push	{r7}
 8007f02:	b083      	sub	sp, #12
 8007f04:	af00      	add	r7, sp, #0
 8007f06:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8007f08:	687b      	ldr	r3, [r7, #4]
 8007f0a:	88db      	ldrh	r3, [r3, #6]
    }
 8007f0c:	4618      	mov	r0, r3
 8007f0e:	370c      	adds	r7, #12
 8007f10:	46bd      	mov	sp, r7
 8007f12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f16:	4770      	bx	lr

08007f18 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8007f18:	b480      	push	{r7}
 8007f1a:	b083      	sub	sp, #12
 8007f1c:	af00      	add	r7, sp, #0
 8007f1e:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8007f20:	687b      	ldr	r3, [r7, #4]
 8007f22:	889b      	ldrh	r3, [r3, #4]
    }
 8007f24:	4618      	mov	r0, r3
 8007f26:	370c      	adds	r7, #12
 8007f28:	46bd      	mov	sp, r7
 8007f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f2e:	4770      	bx	lr

08007f30 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8007f30:	b480      	push	{r7}
 8007f32:	b083      	sub	sp, #12
 8007f34:	af00      	add	r7, sp, #0
 8007f36:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	7a9b      	ldrb	r3, [r3, #10]
 8007f3c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8007f40:	b2db      	uxtb	r3, r3
    }
 8007f42:	4618      	mov	r0, r3
 8007f44:	370c      	adds	r7, #12
 8007f46:	46bd      	mov	sp, r7
 8007f48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f4c:	4770      	bx	lr

08007f4e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8007f4e:	b480      	push	{r7}
 8007f50:	b083      	sub	sp, #12
 8007f52:	af00      	add	r7, sp, #0
 8007f54:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	7a9b      	ldrb	r3, [r3, #10]
 8007f5a:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8007f5e:	b2db      	uxtb	r3, r3
    }
 8007f60:	4618      	mov	r0, r3
 8007f62:	370c      	adds	r7, #12
 8007f64:	46bd      	mov	sp, r7
 8007f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f6a:	4770      	bx	lr

08007f6c <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8007f6c:	b480      	push	{r7}
 8007f6e:	b083      	sub	sp, #12
 8007f70:	af00      	add	r7, sp, #0
 8007f72:	6078      	str	r0, [r7, #4]
    {
        return false;
 8007f74:	2300      	movs	r3, #0
    }
 8007f76:	4618      	mov	r0, r3
 8007f78:	370c      	adds	r7, #12
 8007f7a:	46bd      	mov	sp, r7
 8007f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f80:	4770      	bx	lr

08007f82 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 8007f82:	b480      	push	{r7}
 8007f84:	b083      	sub	sp, #12
 8007f86:	af00      	add	r7, sp, #0
 8007f88:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8007f8a:	f04f 0300 	mov.w	r3, #0
 8007f8e:	ee07 3a90 	vmov	s15, r3
    }
 8007f92:	eeb0 0a67 	vmov.f32	s0, s15
 8007f96:	370c      	adds	r7, #12
 8007f98:	46bd      	mov	sp, r7
 8007f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f9e:	4770      	bx	lr

08007fa0 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8007fa0:	b580      	push	{r7, lr}
 8007fa2:	b082      	sub	sp, #8
 8007fa4:	af00      	add	r7, sp, #0
 8007fa6:	6078      	str	r0, [r7, #4]
 8007fa8:	4a05      	ldr	r2, [pc, #20]	@ (8007fc0 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	601a      	str	r2, [r3, #0]
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	4618      	mov	r0, r3
 8007fb2:	f7ff ff4d 	bl	8007e50 <_ZN8touchgfx4FontD1Ev>
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	4618      	mov	r0, r3
 8007fba:	3708      	adds	r7, #8
 8007fbc:	46bd      	mov	sp, r7
 8007fbe:	bd80      	pop	{r7, pc}
 8007fc0:	08029498 	.word	0x08029498

08007fc4 <_ZN8touchgfx9ConstFontD0Ev>:
 8007fc4:	b580      	push	{r7, lr}
 8007fc6:	b082      	sub	sp, #8
 8007fc8:	af00      	add	r7, sp, #0
 8007fca:	6078      	str	r0, [r7, #4]
 8007fcc:	6878      	ldr	r0, [r7, #4]
 8007fce:	f7ff ffe7 	bl	8007fa0 <_ZN8touchgfx9ConstFontD1Ev>
 8007fd2:	211c      	movs	r1, #28
 8007fd4:	6878      	ldr	r0, [r7, #4]
 8007fd6:	f01d fd2c 	bl	8025a32 <_ZdlPvj>
 8007fda:	687b      	ldr	r3, [r7, #4]
 8007fdc:	4618      	mov	r0, r3
 8007fde:	3708      	adds	r7, #8
 8007fe0:	46bd      	mov	sp, r7
 8007fe2:	bd80      	pop	{r7, pc}

08007fe4 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8007fe4:	b580      	push	{r7, lr}
 8007fe6:	b082      	sub	sp, #8
 8007fe8:	af00      	add	r7, sp, #0
 8007fea:	6078      	str	r0, [r7, #4]
 8007fec:	4a05      	ldr	r2, [pc, #20]	@ (8008004 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8007fee:	687b      	ldr	r3, [r7, #4]
 8007ff0:	601a      	str	r2, [r3, #0]
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	4618      	mov	r0, r3
 8007ff6:	f7ff ffd3 	bl	8007fa0 <_ZN8touchgfx9ConstFontD1Ev>
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	4618      	mov	r0, r3
 8007ffe:	3708      	adds	r7, #8
 8008000:	46bd      	mov	sp, r7
 8008002:	bd80      	pop	{r7, pc}
 8008004:	08027f58 	.word	0x08027f58

08008008 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8008008:	b580      	push	{r7, lr}
 800800a:	b082      	sub	sp, #8
 800800c:	af00      	add	r7, sp, #0
 800800e:	6078      	str	r0, [r7, #4]
 8008010:	6878      	ldr	r0, [r7, #4]
 8008012:	f7ff ffe7 	bl	8007fe4 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008016:	212c      	movs	r1, #44	@ 0x2c
 8008018:	6878      	ldr	r0, [r7, #4]
 800801a:	f01d fd0a 	bl	8025a32 <_ZdlPvj>
 800801e:	687b      	ldr	r3, [r7, #4]
 8008020:	4618      	mov	r0, r3
 8008022:	3708      	adds	r7, #8
 8008024:	46bd      	mov	sp, r7
 8008026:	bd80      	pop	{r7, pc}

08008028 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 8008028:	b480      	push	{r7}
 800802a:	b083      	sub	sp, #12
 800802c:	af00      	add	r7, sp, #0
 800802e:	6078      	str	r0, [r7, #4]
    {
 8008030:	4a04      	ldr	r2, [pc, #16]	@ (8008044 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 8008032:	687b      	ldr	r3, [r7, #4]
 8008034:	601a      	str	r2, [r3, #0]
    }
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	4618      	mov	r0, r3
 800803a:	370c      	adds	r7, #12
 800803c:	46bd      	mov	sp, r7
 800803e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008042:	4770      	bx	lr
 8008044:	08027f48 	.word	0x08027f48

08008048 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8008048:	b580      	push	{r7, lr}
 800804a:	b082      	sub	sp, #8
 800804c:	af00      	add	r7, sp, #0
 800804e:	6078      	str	r0, [r7, #4]
    }
 8008050:	6878      	ldr	r0, [r7, #4]
 8008052:	f7ff ffe9 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
 8008056:	2108      	movs	r1, #8
 8008058:	6878      	ldr	r0, [r7, #4]
 800805a:	f01d fcea 	bl	8025a32 <_ZdlPvj>
 800805e:	687b      	ldr	r3, [r7, #4]
 8008060:	4618      	mov	r0, r3
 8008062:	3708      	adds	r7, #8
 8008064:	46bd      	mov	sp, r7
 8008066:	bd80      	pop	{r7, pc}

08008068 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8008068:	b480      	push	{r7}
 800806a:	b083      	sub	sp, #12
 800806c:	af00      	add	r7, sp, #0
 800806e:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8008070:	687b      	ldr	r3, [r7, #4]
 8008072:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8008074:	4618      	mov	r0, r3
 8008076:	370c      	adds	r7, #12
 8008078:	46bd      	mov	sp, r7
 800807a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800807e:	4770      	bx	lr

08008080 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8008080:	b480      	push	{r7}
 8008082:	b083      	sub	sp, #12
 8008084:	af00      	add	r7, sp, #0
 8008086:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800808c:	4618      	mov	r0, r3
 800808e:	370c      	adds	r7, #12
 8008090:	46bd      	mov	sp, r7
 8008092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008096:	4770      	bx	lr

08008098 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8008098:	b580      	push	{r7, lr}
 800809a:	b08e      	sub	sp, #56	@ 0x38
 800809c:	af0a      	add	r7, sp, #40	@ 0x28
 800809e:	60f8      	str	r0, [r7, #12]
 80080a0:	60b9      	str	r1, [r7, #8]
 80080a2:	4611      	mov	r1, r2
 80080a4:	461a      	mov	r2, r3
 80080a6:	460b      	mov	r3, r1
 80080a8:	80fb      	strh	r3, [r7, #6]
 80080aa:	4613      	mov	r3, r2
 80080ac:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 80080ae:	68f8      	ldr	r0, [r7, #12]
 80080b0:	88b9      	ldrh	r1, [r7, #4]
 80080b2:	88fa      	ldrh	r2, [r7, #6]
 80080b4:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 80080b8:	9308      	str	r3, [sp, #32]
 80080ba:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 80080bc:	9307      	str	r3, [sp, #28]
 80080be:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 80080c2:	9306      	str	r3, [sp, #24]
 80080c4:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 80080c8:	9305      	str	r3, [sp, #20]
 80080ca:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 80080ce:	9304      	str	r3, [sp, #16]
 80080d0:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 80080d4:	9303      	str	r3, [sp, #12]
 80080d6:	f897 3020 	ldrb.w	r3, [r7, #32]
 80080da:	9302      	str	r3, [sp, #8]
 80080dc:	7f3b      	ldrb	r3, [r7, #28]
 80080de:	9301      	str	r3, [sp, #4]
 80080e0:	8b3b      	ldrh	r3, [r7, #24]
 80080e2:	9300      	str	r3, [sp, #0]
 80080e4:	460b      	mov	r3, r1
 80080e6:	68b9      	ldr	r1, [r7, #8]
 80080e8:	f00d f86e 	bl	80151c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80080ec:	4a09      	ldr	r2, [pc, #36]	@ (8008114 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 80080ee:	68fb      	ldr	r3, [r7, #12]
 80080f0:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 80080f2:	68fb      	ldr	r3, [r7, #12]
 80080f4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80080f6:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 80080f8:	68fb      	ldr	r3, [r7, #12]
 80080fa:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80080fc:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 80080fe:	68fb      	ldr	r3, [r7, #12]
 8008100:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008102:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 8008104:	68fb      	ldr	r3, [r7, #12]
 8008106:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8008108:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 800810a:	68fb      	ldr	r3, [r7, #12]
 800810c:	4618      	mov	r0, r3
 800810e:	3710      	adds	r7, #16
 8008110:	46bd      	mov	sp, r7
 8008112:	bd80      	pop	{r7, pc}
 8008114:	08027f58 	.word	0x08027f58

08008118 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8008118:	b480      	push	{r7}
 800811a:	b085      	sub	sp, #20
 800811c:	af00      	add	r7, sp, #0
 800811e:	6078      	str	r0, [r7, #4]
 8008120:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8008122:	687b      	ldr	r3, [r7, #4]
 8008124:	69db      	ldr	r3, [r3, #28]
 8008126:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8008128:	683b      	ldr	r3, [r7, #0]
 800812a:	889b      	ldrh	r3, [r3, #4]
 800812c:	0adb      	lsrs	r3, r3, #11
 800812e:	b29b      	uxth	r3, r3
 8008130:	009b      	lsls	r3, r3, #2
 8008132:	68fa      	ldr	r2, [r7, #12]
 8008134:	4413      	add	r3, r2
 8008136:	681a      	ldr	r2, [r3, #0]
 8008138:	683b      	ldr	r3, [r7, #0]
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	4413      	add	r3, r2
}
 800813e:	4618      	mov	r0, r3
 8008140:	3714      	adds	r7, #20
 8008142:	46bd      	mov	sp, r7
 8008144:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008148:	4770      	bx	lr

0800814a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800814a:	b480      	push	{r7}
 800814c:	b089      	sub	sp, #36	@ 0x24
 800814e:	af00      	add	r7, sp, #0
 8008150:	60f8      	str	r0, [r7, #12]
 8008152:	460b      	mov	r3, r1
 8008154:	607a      	str	r2, [r7, #4]
 8008156:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8008158:	687b      	ldr	r3, [r7, #4]
 800815a:	2b00      	cmp	r3, #0
 800815c:	d003      	beq.n	8008166 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	7b1b      	ldrb	r3, [r3, #12]
 8008162:	2b00      	cmp	r3, #0
 8008164:	d101      	bne.n	800816a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8008166:	2300      	movs	r3, #0
 8008168:	e031      	b.n	80081ce <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800816a:	68fb      	ldr	r3, [r7, #12]
 800816c:	6a1a      	ldr	r2, [r3, #32]
 800816e:	687b      	ldr	r3, [r7, #4]
 8008170:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8008172:	697b      	ldr	r3, [r7, #20]
 8008174:	7b5b      	ldrb	r3, [r3, #13]
 8008176:	021b      	lsls	r3, r3, #8
 8008178:	b21b      	sxth	r3, r3
 800817a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800817e:	b219      	sxth	r1, r3
 8008180:	697b      	ldr	r3, [r7, #20]
 8008182:	7adb      	ldrb	r3, [r3, #11]
 8008184:	b21b      	sxth	r3, r3
 8008186:	430b      	orrs	r3, r1
 8008188:	b21b      	sxth	r3, r3
 800818a:	b29b      	uxth	r3, r3
 800818c:	009b      	lsls	r3, r3, #2
 800818e:	4413      	add	r3, r2
 8008190:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	7b1b      	ldrb	r3, [r3, #12]
 8008196:	837b      	strh	r3, [r7, #26]
 8008198:	e013      	b.n	80081c2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800819a:	69fb      	ldr	r3, [r7, #28]
 800819c:	881b      	ldrh	r3, [r3, #0]
 800819e:	897a      	ldrh	r2, [r7, #10]
 80081a0:	429a      	cmp	r2, r3
 80081a2:	d103      	bne.n	80081ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 80081a4:	69fb      	ldr	r3, [r7, #28]
 80081a6:	f993 3002 	ldrsb.w	r3, [r3, #2]
 80081aa:	e010      	b.n	80081ce <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 80081ac:	69fb      	ldr	r3, [r7, #28]
 80081ae:	881b      	ldrh	r3, [r3, #0]
 80081b0:	897a      	ldrh	r2, [r7, #10]
 80081b2:	429a      	cmp	r2, r3
 80081b4:	d309      	bcc.n	80081ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80081b6:	8b7b      	ldrh	r3, [r7, #26]
 80081b8:	3b01      	subs	r3, #1
 80081ba:	837b      	strh	r3, [r7, #26]
 80081bc:	69fb      	ldr	r3, [r7, #28]
 80081be:	3304      	adds	r3, #4
 80081c0:	61fb      	str	r3, [r7, #28]
 80081c2:	8b7b      	ldrh	r3, [r7, #26]
 80081c4:	2b00      	cmp	r3, #0
 80081c6:	d1e8      	bne.n	800819a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 80081c8:	e000      	b.n	80081cc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 80081ca:	bf00      	nop
        }
    }
    return 0;
 80081cc:	2300      	movs	r3, #0
}
 80081ce:	4618      	mov	r0, r3
 80081d0:	3724      	adds	r7, #36	@ 0x24
 80081d2:	46bd      	mov	sp, r7
 80081d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081d8:	4770      	bx	lr
	...

080081dc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80081dc:	b580      	push	{r7, lr}
 80081de:	af00      	add	r7, sp, #0
 80081e0:	4801      	ldr	r0, [pc, #4]	@ (80081e8 <__tcf_0+0xc>)
 80081e2:	f7ff feff 	bl	8007fe4 <_ZN8touchgfx13GeneratedFontD1Ev>
 80081e6:	bd80      	pop	{r7, pc}
 80081e8:	20000608 	.word	0x20000608

080081ec <_Z28getFont_Asap_Regular_80_4bppv>:
{
 80081ec:	b580      	push	{r7, lr}
 80081ee:	b08e      	sub	sp, #56	@ 0x38
 80081f0:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80081f2:	4b21      	ldr	r3, [pc, #132]	@ (8008278 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80081f4:	681b      	ldr	r3, [r3, #0]
 80081f6:	f3bf 8f5b 	dmb	ish
 80081fa:	f003 0301 	and.w	r3, r3, #1
 80081fe:	2b00      	cmp	r3, #0
 8008200:	bf0c      	ite	eq
 8008202:	2301      	moveq	r3, #1
 8008204:	2300      	movne	r3, #0
 8008206:	b2db      	uxtb	r3, r3
 8008208:	2b00      	cmp	r3, #0
 800820a:	d030      	beq.n	800826e <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 800820c:	481a      	ldr	r0, [pc, #104]	@ (8008278 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800820e:	f01d fc12 	bl	8025a36 <__cxa_guard_acquire>
 8008212:	4603      	mov	r3, r0
 8008214:	2b00      	cmp	r3, #0
 8008216:	bf14      	ite	ne
 8008218:	2301      	movne	r3, #1
 800821a:	2300      	moveq	r3, #0
 800821c:	b2db      	uxtb	r3, r3
 800821e:	2b00      	cmp	r3, #0
 8008220:	d025      	beq.n	800826e <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 8008222:	2300      	movs	r3, #0
 8008224:	930c      	str	r3, [sp, #48]	@ 0x30
 8008226:	2300      	movs	r3, #0
 8008228:	930b      	str	r3, [sp, #44]	@ 0x2c
 800822a:	2300      	movs	r3, #0
 800822c:	930a      	str	r3, [sp, #40]	@ 0x28
 800822e:	2300      	movs	r3, #0
 8008230:	9309      	str	r3, [sp, #36]	@ 0x24
 8008232:	4b12      	ldr	r3, [pc, #72]	@ (800827c <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 8008234:	9308      	str	r3, [sp, #32]
 8008236:	4b12      	ldr	r3, [pc, #72]	@ (8008280 <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 8008238:	9307      	str	r3, [sp, #28]
 800823a:	2300      	movs	r3, #0
 800823c:	9306      	str	r3, [sp, #24]
 800823e:	2300      	movs	r3, #0
 8008240:	9305      	str	r3, [sp, #20]
 8008242:	2301      	movs	r3, #1
 8008244:	9304      	str	r3, [sp, #16]
 8008246:	2304      	movs	r3, #4
 8008248:	9303      	str	r3, [sp, #12]
 800824a:	2300      	movs	r3, #0
 800824c:	9302      	str	r3, [sp, #8]
 800824e:	2300      	movs	r3, #0
 8008250:	9301      	str	r3, [sp, #4]
 8008252:	2350      	movs	r3, #80	@ 0x50
 8008254:	9300      	str	r3, [sp, #0]
 8008256:	2350      	movs	r3, #80	@ 0x50
 8008258:	220a      	movs	r2, #10
 800825a:	490a      	ldr	r1, [pc, #40]	@ (8008284 <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 800825c:	480a      	ldr	r0, [pc, #40]	@ (8008288 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 800825e:	f7ff ff1b 	bl	8008098 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008262:	480a      	ldr	r0, [pc, #40]	@ (800828c <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 8008264:	f01d fcb2 	bl	8025bcc <atexit>
 8008268:	4803      	ldr	r0, [pc, #12]	@ (8008278 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800826a:	f01d fbf0 	bl	8025a4e <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 800826e:	4b06      	ldr	r3, [pc, #24]	@ (8008288 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 8008270:	4618      	mov	r0, r3
 8008272:	46bd      	mov	sp, r7
 8008274:	bd80      	pop	{r7, pc}
 8008276:	bf00      	nop
 8008278:	20000634 	.word	0x20000634
 800827c:	08030268 	.word	0x08030268
 8008280:	08030514 	.word	0x08030514
 8008284:	0802fca8 	.word	0x0802fca8
 8008288:	20000608 	.word	0x20000608
 800828c:	080081dd 	.word	0x080081dd

08008290 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8008290:	b580      	push	{r7, lr}
 8008292:	af00      	add	r7, sp, #0
 8008294:	4801      	ldr	r0, [pc, #4]	@ (800829c <__tcf_0+0xc>)
 8008296:	f7ff fea5 	bl	8007fe4 <_ZN8touchgfx13GeneratedFontD1Ev>
 800829a:	bd80      	pop	{r7, pc}
 800829c:	20000638 	.word	0x20000638

080082a0 <_Z23getFont_verdana_30_4bppv>:
{
 80082a0:	b580      	push	{r7, lr}
 80082a2:	b08e      	sub	sp, #56	@ 0x38
 80082a4:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 80082a6:	4b21      	ldr	r3, [pc, #132]	@ (800832c <_Z23getFont_verdana_30_4bppv+0x8c>)
 80082a8:	681b      	ldr	r3, [r3, #0]
 80082aa:	f3bf 8f5b 	dmb	ish
 80082ae:	f003 0301 	and.w	r3, r3, #1
 80082b2:	2b00      	cmp	r3, #0
 80082b4:	bf0c      	ite	eq
 80082b6:	2301      	moveq	r3, #1
 80082b8:	2300      	movne	r3, #0
 80082ba:	b2db      	uxtb	r3, r3
 80082bc:	2b00      	cmp	r3, #0
 80082be:	d030      	beq.n	8008322 <_Z23getFont_verdana_30_4bppv+0x82>
 80082c0:	481a      	ldr	r0, [pc, #104]	@ (800832c <_Z23getFont_verdana_30_4bppv+0x8c>)
 80082c2:	f01d fbb8 	bl	8025a36 <__cxa_guard_acquire>
 80082c6:	4603      	mov	r3, r0
 80082c8:	2b00      	cmp	r3, #0
 80082ca:	bf14      	ite	ne
 80082cc:	2301      	movne	r3, #1
 80082ce:	2300      	moveq	r3, #0
 80082d0:	b2db      	uxtb	r3, r3
 80082d2:	2b00      	cmp	r3, #0
 80082d4:	d025      	beq.n	8008322 <_Z23getFont_verdana_30_4bppv+0x82>
 80082d6:	2300      	movs	r3, #0
 80082d8:	930c      	str	r3, [sp, #48]	@ 0x30
 80082da:	2300      	movs	r3, #0
 80082dc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80082de:	2300      	movs	r3, #0
 80082e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80082e2:	233f      	movs	r3, #63	@ 0x3f
 80082e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80082e6:	4b12      	ldr	r3, [pc, #72]	@ (8008330 <_Z23getFont_verdana_30_4bppv+0x90>)
 80082e8:	9308      	str	r3, [sp, #32]
 80082ea:	4b12      	ldr	r3, [pc, #72]	@ (8008334 <_Z23getFont_verdana_30_4bppv+0x94>)
 80082ec:	9307      	str	r3, [sp, #28]
 80082ee:	2301      	movs	r3, #1
 80082f0:	9306      	str	r3, [sp, #24]
 80082f2:	2301      	movs	r3, #1
 80082f4:	9305      	str	r3, [sp, #20]
 80082f6:	2301      	movs	r3, #1
 80082f8:	9304      	str	r3, [sp, #16]
 80082fa:	2304      	movs	r3, #4
 80082fc:	9303      	str	r3, [sp, #12]
 80082fe:	2300      	movs	r3, #0
 8008300:	9302      	str	r3, [sp, #8]
 8008302:	2300      	movs	r3, #0
 8008304:	9301      	str	r3, [sp, #4]
 8008306:	231e      	movs	r3, #30
 8008308:	9300      	str	r3, [sp, #0]
 800830a:	2324      	movs	r3, #36	@ 0x24
 800830c:	225f      	movs	r2, #95	@ 0x5f
 800830e:	490a      	ldr	r1, [pc, #40]	@ (8008338 <_Z23getFont_verdana_30_4bppv+0x98>)
 8008310:	480a      	ldr	r0, [pc, #40]	@ (800833c <_Z23getFont_verdana_30_4bppv+0x9c>)
 8008312:	f7ff fec1 	bl	8008098 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008316:	480a      	ldr	r0, [pc, #40]	@ (8008340 <_Z23getFont_verdana_30_4bppv+0xa0>)
 8008318:	f01d fc58 	bl	8025bcc <atexit>
 800831c:	4803      	ldr	r0, [pc, #12]	@ (800832c <_Z23getFont_verdana_30_4bppv+0x8c>)
 800831e:	f01d fb96 	bl	8025a4e <__cxa_guard_release>
    return verdana_30_4bpp;
 8008322:	4b06      	ldr	r3, [pc, #24]	@ (800833c <_Z23getFont_verdana_30_4bppv+0x9c>)
}
 8008324:	4618      	mov	r0, r3
 8008326:	46bd      	mov	sp, r7
 8008328:	bd80      	pop	{r7, pc}
 800832a:	bf00      	nop
 800832c:	20000664 	.word	0x20000664
 8008330:	0803026c 	.word	0x0803026c
 8008334:	08030518 	.word	0x08030518
 8008338:	0802fd34 	.word	0x0802fd34
 800833c:	20000638 	.word	0x20000638
 8008340:	08008291 	.word	0x08008291

08008344 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008344:	b480      	push	{r7}
 8008346:	b083      	sub	sp, #12
 8008348:	af00      	add	r7, sp, #0
 800834a:	6078      	str	r0, [r7, #4]
 800834c:	6039      	str	r1, [r7, #0]
 800834e:	683b      	ldr	r3, [r7, #0]
 8008350:	4618      	mov	r0, r3
 8008352:	370c      	adds	r7, #12
 8008354:	46bd      	mov	sp, r7
 8008356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800835a:	4770      	bx	lr

0800835c <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800835c:	b480      	push	{r7}
 800835e:	b083      	sub	sp, #12
 8008360:	af00      	add	r7, sp, #0
 8008362:	6078      	str	r0, [r7, #4]
 8008364:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008366:	bf00      	nop
 8008368:	370c      	adds	r7, #12
 800836a:	46bd      	mov	sp, r7
 800836c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008370:	4770      	bx	lr

08008372 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008372:	b480      	push	{r7}
 8008374:	b083      	sub	sp, #12
 8008376:	af00      	add	r7, sp, #0
 8008378:	6078      	str	r0, [r7, #4]
 800837a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800837c:	bf00      	nop
 800837e:	370c      	adds	r7, #12
 8008380:	46bd      	mov	sp, r7
 8008382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008386:	4770      	bx	lr

08008388 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8008388:	b480      	push	{r7}
 800838a:	b083      	sub	sp, #12
 800838c:	af00      	add	r7, sp, #0
 800838e:	6078      	str	r0, [r7, #4]
 8008390:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008392:	bf00      	nop
 8008394:	370c      	adds	r7, #12
 8008396:	46bd      	mov	sp, r7
 8008398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800839c:	4770      	bx	lr

0800839e <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800839e:	b480      	push	{r7}
 80083a0:	b083      	sub	sp, #12
 80083a2:	af00      	add	r7, sp, #0
 80083a4:	6078      	str	r0, [r7, #4]
 80083a6:	460b      	mov	r3, r1
 80083a8:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 80083aa:	bf00      	nop
 80083ac:	370c      	adds	r7, #12
 80083ae:	46bd      	mov	sp, r7
 80083b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083b4:	4770      	bx	lr

080083b6 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 80083b6:	b480      	push	{r7}
 80083b8:	b083      	sub	sp, #12
 80083ba:	af00      	add	r7, sp, #0
 80083bc:	6078      	str	r0, [r7, #4]
    {
    }
 80083be:	bf00      	nop
 80083c0:	370c      	adds	r7, #12
 80083c2:	46bd      	mov	sp, r7
 80083c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083c8:	4770      	bx	lr

080083ca <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 80083ca:	b480      	push	{r7}
 80083cc:	b083      	sub	sp, #12
 80083ce:	af00      	add	r7, sp, #0
 80083d0:	6078      	str	r0, [r7, #4]
    {
    }
 80083d2:	bf00      	nop
 80083d4:	370c      	adds	r7, #12
 80083d6:	46bd      	mov	sp, r7
 80083d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083dc:	4770      	bx	lr
	...

080083e0 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 80083e0:	b480      	push	{r7}
 80083e2:	b083      	sub	sp, #12
 80083e4:	af00      	add	r7, sp, #0
 80083e6:	6078      	str	r0, [r7, #4]
    {
 80083e8:	4a04      	ldr	r2, [pc, #16]	@ (80083fc <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	601a      	str	r2, [r3, #0]
    }
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	4618      	mov	r0, r3
 80083f2:	370c      	adds	r7, #12
 80083f4:	46bd      	mov	sp, r7
 80083f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083fa:	4770      	bx	lr
 80083fc:	080280e0 	.word	0x080280e0

08008400 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 8008400:	b580      	push	{r7, lr}
 8008402:	b082      	sub	sp, #8
 8008404:	af00      	add	r7, sp, #0
 8008406:	6078      	str	r0, [r7, #4]
    }
 8008408:	6878      	ldr	r0, [r7, #4]
 800840a:	f7ff ffe9 	bl	80083e0 <_ZN8touchgfx15UIEventListenerD1Ev>
 800840e:	2104      	movs	r1, #4
 8008410:	6878      	ldr	r0, [r7, #4]
 8008412:	f01d fb0e 	bl	8025a32 <_ZdlPvj>
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	4618      	mov	r0, r3
 800841a:	3708      	adds	r7, #8
 800841c:	46bd      	mov	sp, r7
 800841e:	bd80      	pop	{r7, pc}

08008420 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 8008420:	b480      	push	{r7}
 8008422:	b083      	sub	sp, #12
 8008424:	af00      	add	r7, sp, #0
 8008426:	6078      	str	r0, [r7, #4]
    {
    }
 8008428:	bf00      	nop
 800842a:	370c      	adds	r7, #12
 800842c:	46bd      	mov	sp, r7
 800842e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008432:	4770      	bx	lr

08008434 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8008434:	b480      	push	{r7}
 8008436:	b083      	sub	sp, #12
 8008438:	af00      	add	r7, sp, #0
 800843a:	6078      	str	r0, [r7, #4]
 800843c:	460b      	mov	r3, r1
 800843e:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 8008440:	bf00      	nop
 8008442:	370c      	adds	r7, #12
 8008444:	46bd      	mov	sp, r7
 8008446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800844a:	4770      	bx	lr

0800844c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800844c:	b480      	push	{r7}
 800844e:	b083      	sub	sp, #12
 8008450:	af00      	add	r7, sp, #0
 8008452:	6078      	str	r0, [r7, #4]
 8008454:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8008456:	687b      	ldr	r3, [r7, #4]
 8008458:	683a      	ldr	r2, [r7, #0]
 800845a:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800845e:	6810      	ldr	r0, [r2, #0]
 8008460:	6851      	ldr	r1, [r2, #4]
 8008462:	c303      	stmia	r3!, {r0, r1}
    }
 8008464:	bf00      	nop
 8008466:	370c      	adds	r7, #12
 8008468:	46bd      	mov	sp, r7
 800846a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800846e:	4770      	bx	lr

08008470 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 8008470:	b580      	push	{r7, lr}
 8008472:	b082      	sub	sp, #8
 8008474:	af00      	add	r7, sp, #0
 8008476:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 8008478:	687b      	ldr	r3, [r7, #4]
 800847a:	3304      	adds	r3, #4
 800847c:	4618      	mov	r0, r3
 800847e:	f00b fda4 	bl	8013fca <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 8008482:	bf00      	nop
 8008484:	3708      	adds	r7, #8
 8008486:	46bd      	mov	sp, r7
 8008488:	bd80      	pop	{r7, pc}
	...

0800848c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800848c:	b480      	push	{r7}
 800848e:	b083      	sub	sp, #12
 8008490:	af00      	add	r7, sp, #0
 8008492:	6078      	str	r0, [r7, #4]
    {
 8008494:	4a04      	ldr	r2, [pc, #16]	@ (80084a8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8008496:	687b      	ldr	r3, [r7, #4]
 8008498:	601a      	str	r2, [r3, #0]
    }
 800849a:	687b      	ldr	r3, [r7, #4]
 800849c:	4618      	mov	r0, r3
 800849e:	370c      	adds	r7, #12
 80084a0:	46bd      	mov	sp, r7
 80084a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084a6:	4770      	bx	lr
 80084a8:	080280c8 	.word	0x080280c8

080084ac <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 80084ac:	b580      	push	{r7, lr}
 80084ae:	b082      	sub	sp, #8
 80084b0:	af00      	add	r7, sp, #0
 80084b2:	6078      	str	r0, [r7, #4]
    }
 80084b4:	6878      	ldr	r0, [r7, #4]
 80084b6:	f7ff ffe9 	bl	800848c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80084ba:	2104      	movs	r1, #4
 80084bc:	6878      	ldr	r0, [r7, #4]
 80084be:	f01d fab8 	bl	8025a32 <_ZdlPvj>
 80084c2:	687b      	ldr	r3, [r7, #4]
 80084c4:	4618      	mov	r0, r3
 80084c6:	3708      	adds	r7, #8
 80084c8:	46bd      	mov	sp, r7
 80084ca:	bd80      	pop	{r7, pc}

080084cc <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 80084cc:	b480      	push	{r7}
 80084ce:	af00      	add	r7, sp, #0
    {
        return instance;
 80084d0:	4b03      	ldr	r3, [pc, #12]	@ (80084e0 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 80084d2:	681b      	ldr	r3, [r3, #0]
    }
 80084d4:	4618      	mov	r0, r3
 80084d6:	46bd      	mov	sp, r7
 80084d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084dc:	4770      	bx	lr
 80084de:	bf00      	nop
 80084e0:	20002f54 	.word	0x20002f54

080084e4 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80084e4:	b480      	push	{r7}
 80084e6:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80084e8:	4b0b      	ldr	r3, [pc, #44]	@ (8008518 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80084ea:	681b      	ldr	r3, [r3, #0]
 80084ec:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80084f0:	2b00      	cmp	r3, #0
 80084f2:	d008      	beq.n	8008506 <_ZN8touchgfx3HAL3lcdEv+0x22>
 80084f4:	4b08      	ldr	r3, [pc, #32]	@ (8008518 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80084f6:	681b      	ldr	r3, [r3, #0]
 80084f8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80084fa:	2b00      	cmp	r3, #0
 80084fc:	d003      	beq.n	8008506 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80084fe:	4b06      	ldr	r3, [pc, #24]	@ (8008518 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008500:	681b      	ldr	r3, [r3, #0]
 8008502:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008504:	e002      	b.n	800850c <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 8008506:	4b04      	ldr	r3, [pc, #16]	@ (8008518 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8008508:	681b      	ldr	r3, [r3, #0]
 800850a:	689b      	ldr	r3, [r3, #8]
    }
 800850c:	4618      	mov	r0, r3
 800850e:	46bd      	mov	sp, r7
 8008510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008514:	4770      	bx	lr
 8008516:	bf00      	nop
 8008518:	20002f54 	.word	0x20002f54

0800851c <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800851c:	b480      	push	{r7}
 800851e:	b083      	sub	sp, #12
 8008520:	af00      	add	r7, sp, #0
 8008522:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 8008524:	4a07      	ldr	r2, [pc, #28]	@ (8008544 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 8008526:	687b      	ldr	r3, [r7, #4]
 8008528:	601a      	str	r2, [r3, #0]
 800852a:	687b      	ldr	r3, [r7, #4]
 800852c:	2200      	movs	r2, #0
 800852e:	605a      	str	r2, [r3, #4]
 8008530:	687b      	ldr	r3, [r7, #4]
 8008532:	2200      	movs	r2, #0
 8008534:	721a      	strb	r2, [r3, #8]
    {
    }
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	4618      	mov	r0, r3
 800853a:	370c      	adds	r7, #12
 800853c:	46bd      	mov	sp, r7
 800853e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008542:	4770      	bx	lr
 8008544:	080280a4 	.word	0x080280a4

08008548 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8008548:	b480      	push	{r7}
 800854a:	b083      	sub	sp, #12
 800854c:	af00      	add	r7, sp, #0
 800854e:	6078      	str	r0, [r7, #4]
    {
 8008550:	4a04      	ldr	r2, [pc, #16]	@ (8008564 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	601a      	str	r2, [r3, #0]
    }
 8008556:	687b      	ldr	r3, [r7, #4]
 8008558:	4618      	mov	r0, r3
 800855a:	370c      	adds	r7, #12
 800855c:	46bd      	mov	sp, r7
 800855e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008562:	4770      	bx	lr
 8008564:	080280a4 	.word	0x080280a4

08008568 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8008568:	b580      	push	{r7, lr}
 800856a:	b082      	sub	sp, #8
 800856c:	af00      	add	r7, sp, #0
 800856e:	6078      	str	r0, [r7, #4]
    }
 8008570:	6878      	ldr	r0, [r7, #4]
 8008572:	f7ff ffe9 	bl	8008548 <_ZN8touchgfx10TransitionD1Ev>
 8008576:	210c      	movs	r1, #12
 8008578:	6878      	ldr	r0, [r7, #4]
 800857a:	f01d fa5a 	bl	8025a32 <_ZdlPvj>
 800857e:	687b      	ldr	r3, [r7, #4]
 8008580:	4618      	mov	r0, r3
 8008582:	3708      	adds	r7, #8
 8008584:	46bd      	mov	sp, r7
 8008586:	bd80      	pop	{r7, pc}

08008588 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 8008588:	b480      	push	{r7}
 800858a:	b083      	sub	sp, #12
 800858c:	af00      	add	r7, sp, #0
 800858e:	6078      	str	r0, [r7, #4]
    {
    }
 8008590:	bf00      	nop
 8008592:	370c      	adds	r7, #12
 8008594:	46bd      	mov	sp, r7
 8008596:	f85d 7b04 	ldr.w	r7, [sp], #4
 800859a:	4770      	bx	lr

0800859c <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800859c:	b480      	push	{r7}
 800859e:	b083      	sub	sp, #12
 80085a0:	af00      	add	r7, sp, #0
 80085a2:	6078      	str	r0, [r7, #4]
    {
    }
 80085a4:	bf00      	nop
 80085a6:	370c      	adds	r7, #12
 80085a8:	46bd      	mov	sp, r7
 80085aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ae:	4770      	bx	lr

080085b0 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 80085b0:	b480      	push	{r7}
 80085b2:	b083      	sub	sp, #12
 80085b4:	af00      	add	r7, sp, #0
 80085b6:	6078      	str	r0, [r7, #4]
    {
    }
 80085b8:	bf00      	nop
 80085ba:	370c      	adds	r7, #12
 80085bc:	46bd      	mov	sp, r7
 80085be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085c2:	4770      	bx	lr

080085c4 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 80085c4:	b580      	push	{r7, lr}
 80085c6:	b082      	sub	sp, #8
 80085c8:	af00      	add	r7, sp, #0
 80085ca:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 80085cc:	f00b fcd8 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 80085d0:	4603      	mov	r3, r0
 80085d2:	681a      	ldr	r2, [r3, #0]
 80085d4:	323c      	adds	r2, #60	@ 0x3c
 80085d6:	6812      	ldr	r2, [r2, #0]
 80085d8:	4618      	mov	r0, r3
 80085da:	4790      	blx	r2
    }
 80085dc:	bf00      	nop
 80085de:	3708      	adds	r7, #8
 80085e0:	46bd      	mov	sp, r7
 80085e2:	bd80      	pop	{r7, pc}

080085e4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 80085e4:	b480      	push	{r7}
 80085e6:	b083      	sub	sp, #12
 80085e8:	af00      	add	r7, sp, #0
 80085ea:	6078      	str	r0, [r7, #4]
 80085ec:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80085ee:	687b      	ldr	r3, [r7, #4]
 80085f0:	683a      	ldr	r2, [r7, #0]
 80085f2:	605a      	str	r2, [r3, #4]
    }
 80085f4:	bf00      	nop
 80085f6:	370c      	adds	r7, #12
 80085f8:	46bd      	mov	sp, r7
 80085fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085fe:	4770      	bx	lr

08008600 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8008600:	b580      	push	{r7, lr}
 8008602:	b082      	sub	sp, #8
 8008604:	af00      	add	r7, sp, #0
 8008606:	6078      	str	r0, [r7, #4]
 8008608:	4a05      	ldr	r2, [pc, #20]	@ (8008620 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800860a:	687b      	ldr	r3, [r7, #4]
 800860c:	601a      	str	r2, [r3, #0]
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	4618      	mov	r0, r3
 8008612:	f7ff fee5 	bl	80083e0 <_ZN8touchgfx15UIEventListenerD1Ev>
 8008616:	687b      	ldr	r3, [r7, #4]
 8008618:	4618      	mov	r0, r3
 800861a:	3708      	adds	r7, #8
 800861c:	46bd      	mov	sp, r7
 800861e:	bd80      	pop	{r7, pc}
 8008620:	080293dc 	.word	0x080293dc

08008624 <_ZN8touchgfx11ApplicationD0Ev>:
 8008624:	b580      	push	{r7, lr}
 8008626:	b082      	sub	sp, #8
 8008628:	af00      	add	r7, sp, #0
 800862a:	6078      	str	r0, [r7, #4]
 800862c:	6878      	ldr	r0, [r7, #4]
 800862e:	f7ff ffe7 	bl	8008600 <_ZN8touchgfx11ApplicationD1Ev>
 8008632:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 8008636:	6878      	ldr	r0, [r7, #4]
 8008638:	f01d f9fb 	bl	8025a32 <_ZdlPvj>
 800863c:	687b      	ldr	r3, [r7, #4]
 800863e:	4618      	mov	r0, r3
 8008640:	3708      	adds	r7, #8
 8008642:	46bd      	mov	sp, r7
 8008644:	bd80      	pop	{r7, pc}
	...

08008648 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8008648:	b580      	push	{r7, lr}
 800864a:	b082      	sub	sp, #8
 800864c:	af00      	add	r7, sp, #0
 800864e:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8008650:	687b      	ldr	r3, [r7, #4]
 8008652:	4618      	mov	r0, r3
 8008654:	f00b fd56 	bl	8014104 <_ZN8touchgfx11ApplicationC1Ev>
 8008658:	4a09      	ldr	r2, [pc, #36]	@ (8008680 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800865e:	687b      	ldr	r3, [r7, #4]
 8008660:	2200      	movs	r2, #0
 8008662:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 8008666:	687b      	ldr	r3, [r7, #4]
 8008668:	2200      	movs	r2, #0
 800866a:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	4a04      	ldr	r2, [pc, #16]	@ (8008684 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8008672:	6013      	str	r3, [r2, #0]
    }
 8008674:	687b      	ldr	r3, [r7, #4]
 8008676:	4618      	mov	r0, r3
 8008678:	3708      	adds	r7, #8
 800867a:	46bd      	mov	sp, r7
 800867c:	bd80      	pop	{r7, pc}
 800867e:	bf00      	nop
 8008680:	08028050 	.word	0x08028050
 8008684:	20002fa0 	.word	0x20002fa0

08008688 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8008688:	b580      	push	{r7, lr}
 800868a:	b082      	sub	sp, #8
 800868c:	af00      	add	r7, sp, #0
 800868e:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8008690:	6878      	ldr	r0, [r7, #4]
 8008692:	f000 f804 	bl	800869e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8008696:	bf00      	nop
 8008698:	3708      	adds	r7, #8
 800869a:	46bd      	mov	sp, r7
 800869c:	bd80      	pop	{r7, pc}

0800869e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800869e:	b580      	push	{r7, lr}
 80086a0:	b082      	sub	sp, #8
 80086a2:	af00      	add	r7, sp, #0
 80086a4:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80086ac:	2b00      	cmp	r3, #0
 80086ae:	d00f      	beq.n	80086d0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80086b0:	687b      	ldr	r3, [r7, #4]
 80086b2:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 80086b6:	687b      	ldr	r3, [r7, #4]
 80086b8:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80086bc:	681b      	ldr	r3, [r3, #0]
 80086be:	330c      	adds	r3, #12
 80086c0:	681b      	ldr	r3, [r3, #0]
 80086c2:	4610      	mov	r0, r2
 80086c4:	4798      	blx	r3
 80086c6:	4603      	mov	r3, r0
 80086c8:	2b00      	cmp	r3, #0
 80086ca:	d001      	beq.n	80086d0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 80086cc:	2301      	movs	r3, #1
 80086ce:	e000      	b.n	80086d2 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 80086d0:	2300      	movs	r3, #0
 80086d2:	2b00      	cmp	r3, #0
 80086d4:	d00e      	beq.n	80086f4 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80086d6:	687b      	ldr	r3, [r7, #4]
 80086d8:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 80086dc:	687b      	ldr	r3, [r7, #4]
 80086de:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	3308      	adds	r3, #8
 80086e6:	681b      	ldr	r3, [r3, #0]
 80086e8:	4610      	mov	r0, r2
 80086ea:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80086ec:	687b      	ldr	r3, [r7, #4]
 80086ee:	2200      	movs	r2, #0
 80086f0:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 80086f4:	bf00      	nop
 80086f6:	3708      	adds	r7, #8
 80086f8:	46bd      	mov	sp, r7
 80086fa:	bd80      	pop	{r7, pc}

080086fc <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 80086fc:	b480      	push	{r7}
 80086fe:	b083      	sub	sp, #12
 8008700:	af00      	add	r7, sp, #0
 8008702:	6078      	str	r0, [r7, #4]
 8008704:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	683a      	ldr	r2, [r7, #0]
 800870a:	601a      	str	r2, [r3, #0]
    }
 800870c:	bf00      	nop
 800870e:	370c      	adds	r7, #12
 8008710:	46bd      	mov	sp, r7
 8008712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008716:	4770      	bx	lr

08008718 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 8008718:	b580      	push	{r7, lr}
 800871a:	b082      	sub	sp, #8
 800871c:	af00      	add	r7, sp, #0
 800871e:	6078      	str	r0, [r7, #4]
 8008720:	4a05      	ldr	r2, [pc, #20]	@ (8008738 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8008722:	687b      	ldr	r3, [r7, #4]
 8008724:	601a      	str	r2, [r3, #0]
 8008726:	687b      	ldr	r3, [r7, #4]
 8008728:	4618      	mov	r0, r3
 800872a:	f7ff ff69 	bl	8008600 <_ZN8touchgfx11ApplicationD1Ev>
 800872e:	687b      	ldr	r3, [r7, #4]
 8008730:	4618      	mov	r0, r3
 8008732:	3708      	adds	r7, #8
 8008734:	46bd      	mov	sp, r7
 8008736:	bd80      	pop	{r7, pc}
 8008738:	08028050 	.word	0x08028050

0800873c <_ZN8touchgfx14MVPApplicationD0Ev>:
 800873c:	b580      	push	{r7, lr}
 800873e:	b082      	sub	sp, #8
 8008740:	af00      	add	r7, sp, #0
 8008742:	6078      	str	r0, [r7, #4]
 8008744:	6878      	ldr	r0, [r7, #4]
 8008746:	f7ff ffe7 	bl	8008718 <_ZN8touchgfx14MVPApplicationD1Ev>
 800874a:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 800874e:	6878      	ldr	r0, [r7, #4]
 8008750:	f01d f96f 	bl	8025a32 <_ZdlPvj>
 8008754:	687b      	ldr	r3, [r7, #4]
 8008756:	4618      	mov	r0, r3
 8008758:	3708      	adds	r7, #8
 800875a:	46bd      	mov	sp, r7
 800875c:	bd80      	pop	{r7, pc}
	...

08008760 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8008760:	b580      	push	{r7, lr}
 8008762:	b082      	sub	sp, #8
 8008764:	af00      	add	r7, sp, #0
 8008766:	6078      	str	r0, [r7, #4]
 8008768:	4a08      	ldr	r2, [pc, #32]	@ (800878c <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800876a:	687b      	ldr	r3, [r7, #4]
 800876c:	601a      	str	r2, [r3, #0]
 800876e:	687b      	ldr	r3, [r7, #4]
 8008770:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008774:	4618      	mov	r0, r3
 8008776:	f000 ff8f 	bl	8009698 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	4618      	mov	r0, r3
 800877e:	f7ff ffcb 	bl	8008718 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008782:	687b      	ldr	r3, [r7, #4]
 8008784:	4618      	mov	r0, r3
 8008786:	3708      	adds	r7, #8
 8008788:	46bd      	mov	sp, r7
 800878a:	bd80      	pop	{r7, pc}
 800878c:	08027fe4 	.word	0x08027fe4

08008790 <_ZN23FrontendApplicationBaseD0Ev>:
 8008790:	b580      	push	{r7, lr}
 8008792:	b082      	sub	sp, #8
 8008794:	af00      	add	r7, sp, #0
 8008796:	6078      	str	r0, [r7, #4]
 8008798:	6878      	ldr	r0, [r7, #4]
 800879a:	f7ff ffe1 	bl	8008760 <_ZN23FrontendApplicationBaseD1Ev>
 800879e:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 80087a2:	6878      	ldr	r0, [r7, #4]
 80087a4:	f01d f945 	bl	8025a32 <_ZdlPvj>
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	4618      	mov	r0, r3
 80087ac:	3708      	adds	r7, #8
 80087ae:	46bd      	mov	sp, r7
 80087b0:	bd80      	pop	{r7, pc}

080087b2 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 80087b2:	b580      	push	{r7, lr}
 80087b4:	b082      	sub	sp, #8
 80087b6:	af00      	add	r7, sp, #0
 80087b8:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 80087ba:	6878      	ldr	r0, [r7, #4]
 80087bc:	f000 f95a 	bl	8008a74 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 80087c0:	bf00      	nop
 80087c2:	3708      	adds	r7, #8
 80087c4:	46bd      	mov	sp, r7
 80087c6:	bd80      	pop	{r7, pc}

080087c8 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 80087c8:	b480      	push	{r7}
 80087ca:	b083      	sub	sp, #12
 80087cc:	af00      	add	r7, sp, #0
 80087ce:	6078      	str	r0, [r7, #4]
    {
        done = true;
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	2201      	movs	r2, #1
 80087d4:	721a      	strb	r2, [r3, #8]
    }
 80087d6:	bf00      	nop
 80087d8:	370c      	adds	r7, #12
 80087da:	46bd      	mov	sp, r7
 80087dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087e0:	4770      	bx	lr

080087e2 <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 80087e2:	b480      	push	{r7}
 80087e4:	b083      	sub	sp, #12
 80087e6:	af00      	add	r7, sp, #0
 80087e8:	6078      	str	r0, [r7, #4]
 80087ea:	6039      	str	r1, [r7, #0]
    {
        model = m;
 80087ec:	687b      	ldr	r3, [r7, #4]
 80087ee:	683a      	ldr	r2, [r7, #0]
 80087f0:	605a      	str	r2, [r3, #4]
    }
 80087f2:	bf00      	nop
 80087f4:	370c      	adds	r7, #12
 80087f6:	46bd      	mov	sp, r7
 80087f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087fc:	4770      	bx	lr
	...

08008800 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008800:	b580      	push	{r7, lr}
 8008802:	b084      	sub	sp, #16
 8008804:	af00      	add	r7, sp, #0
 8008806:	60f8      	str	r0, [r7, #12]
 8008808:	60b9      	str	r1, [r7, #8]
 800880a:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800880c:	68fb      	ldr	r3, [r7, #12]
 800880e:	4618      	mov	r0, r3
 8008810:	f7ff ff1a 	bl	8008648 <_ZN8touchgfx14MVPApplicationC1Ev>
 8008814:	4a19      	ldr	r2, [pc, #100]	@ (800887c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 8008816:	68fb      	ldr	r3, [r7, #12]
 8008818:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800881a:	68fb      	ldr	r3, [r7, #12]
 800881c:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008820:	4618      	mov	r0, r3
 8008822:	f000 f97d 	bl	8008b20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 8008826:	68fb      	ldr	r3, [r7, #12]
 8008828:	687a      	ldr	r2, [r7, #4]
 800882a:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 800882e:	68fb      	ldr	r3, [r7, #12]
 8008830:	68ba      	ldr	r2, [r7, #8]
 8008832:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8008836:	f7ff fe49 	bl	80084cc <_ZN8touchgfx3HAL11getInstanceEv>
 800883a:	4603      	mov	r3, r0
 800883c:	681a      	ldr	r2, [r3, #0]
 800883e:	3208      	adds	r2, #8
 8008840:	6812      	ldr	r2, [r2, #0]
 8008842:	2100      	movs	r1, #0
 8008844:	4618      	mov	r0, r3
 8008846:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008848:	2000      	movs	r0, #0
 800884a:	f004 ff89 	bl	800d760 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800884e:	f7ff fe49 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 8008852:	4603      	mov	r3, r0
 8008854:	4618      	mov	r0, r3
 8008856:	f015 fd54 	bl	801e302 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800885a:	f7ff fe43 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 800885e:	4603      	mov	r3, r0
 8008860:	4618      	mov	r0, r3
 8008862:	f015 fdc9 	bl	801e3f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8008866:	f7ff fe3d 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 800886a:	4603      	mov	r3, r0
 800886c:	4618      	mov	r0, r3
 800886e:	f015 fdcf 	bl	801e410 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8008872:	68fb      	ldr	r3, [r7, #12]
 8008874:	4618      	mov	r0, r3
 8008876:	3710      	adds	r7, #16
 8008878:	46bd      	mov	sp, r7
 800887a:	bd80      	pop	{r7, pc}
 800887c:	08027fe4 	.word	0x08027fe4

08008880 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008880:	b480      	push	{r7}
 8008882:	b083      	sub	sp, #12
 8008884:	af00      	add	r7, sp, #0
 8008886:	6078      	str	r0, [r7, #4]
 8008888:	6039      	str	r1, [r7, #0]
 800888a:	687b      	ldr	r3, [r7, #4]
 800888c:	4618      	mov	r0, r3
 800888e:	370c      	adds	r7, #12
 8008890:	46bd      	mov	sp, r7
 8008892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008896:	4770      	bx	lr

08008898 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008898:	b580      	push	{r7, lr}
 800889a:	b082      	sub	sp, #8
 800889c:	af00      	add	r7, sp, #0
 800889e:	6078      	str	r0, [r7, #4]
 80088a0:	6039      	str	r1, [r7, #0]
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	683a      	ldr	r2, [r7, #0]
 80088a6:	4611      	mov	r1, r2
 80088a8:	4618      	mov	r0, r3
 80088aa:	f7ff ffe9 	bl	8008880 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 80088ae:	683b      	ldr	r3, [r7, #0]
 80088b0:	685a      	ldr	r2, [r3, #4]
 80088b2:	687b      	ldr	r3, [r7, #4]
 80088b4:	605a      	str	r2, [r3, #4]
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	683a      	ldr	r2, [r7, #0]
 80088ba:	3308      	adds	r3, #8
 80088bc:	3208      	adds	r2, #8
 80088be:	e892 0003 	ldmia.w	r2, {r0, r1}
 80088c2:	e883 0003 	stmia.w	r3, {r0, r1}
 80088c6:	687b      	ldr	r3, [r7, #4]
 80088c8:	4618      	mov	r0, r3
 80088ca:	3708      	adds	r7, #8
 80088cc:	46bd      	mov	sp, r7
 80088ce:	bd80      	pop	{r7, pc}

080088d0 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>:
 */

// humidity_screen

void FrontendApplicationBase::gotohumidity_screenScreenNoTransition()
{
 80088d0:	b590      	push	{r4, r7, lr}
 80088d2:	b089      	sub	sp, #36	@ 0x24
 80088d4:	af00      	add	r7, sp, #0
 80088d6:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl);
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 80088de:	4b10      	ldr	r3, [pc, #64]	@ (8008920 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv+0x50>)
 80088e0:	61bb      	str	r3, [r7, #24]
 80088e2:	2300      	movs	r3, #0
 80088e4:	61fb      	str	r3, [r7, #28]
 80088e6:	f107 0008 	add.w	r0, r7, #8
 80088ea:	f107 0318 	add.w	r3, r7, #24
 80088ee:	cb0c      	ldmia	r3, {r2, r3}
 80088f0:	6879      	ldr	r1, [r7, #4]
 80088f2:	f000 f931 	bl	8008b58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 80088f6:	f107 0308 	add.w	r3, r7, #8
 80088fa:	4619      	mov	r1, r3
 80088fc:	4620      	mov	r0, r4
 80088fe:	f7ff ffcb 	bl	8008898 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008902:	f107 0308 	add.w	r3, r7, #8
 8008906:	4618      	mov	r0, r3
 8008908:	f000 fec6 	bl	8009698 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800890c:	687b      	ldr	r3, [r7, #4]
 800890e:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008918:	bf00      	nop
 800891a:	3724      	adds	r7, #36	@ 0x24
 800891c:	46bd      	mov	sp, r7
 800891e:	bd90      	pop	{r4, r7, pc}
 8008920:	08008925 	.word	0x08008925

08008924 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl()
{
 8008924:	b580      	push	{r7, lr}
 8008926:	b084      	sub	sp, #16
 8008928:	af02      	add	r7, sp, #8
 800892a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<humidity_screenView, humidity_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800892c:	687b      	ldr	r3, [r7, #4]
 800892e:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008938:	461a      	mov	r2, r3
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008940:	9300      	str	r3, [sp, #0]
 8008942:	4b04      	ldr	r3, [pc, #16]	@ (8008954 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x30>)
 8008944:	4804      	ldr	r0, [pc, #16]	@ (8008958 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x34>)
 8008946:	f000 f939 	bl	8008bbc <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800894a:	bf00      	nop
 800894c:	3708      	adds	r7, #8
 800894e:	46bd      	mov	sp, r7
 8008950:	bd80      	pop	{r7, pc}
 8008952:	bf00      	nop
 8008954:	20002f94 	.word	0x20002f94
 8008958:	20002f90 	.word	0x20002f90

0800895c <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv>:

// temperature_screen

void FrontendApplicationBase::gototemperature_screenScreenNoTransition()
{
 800895c:	b590      	push	{r4, r7, lr}
 800895e:	b089      	sub	sp, #36	@ 0x24
 8008960:	af00      	add	r7, sp, #0
 8008962:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gototemperature_screenScreenNoTransitionImpl);
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800896a:	4b10      	ldr	r3, [pc, #64]	@ (80089ac <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv+0x50>)
 800896c:	61bb      	str	r3, [r7, #24]
 800896e:	2300      	movs	r3, #0
 8008970:	61fb      	str	r3, [r7, #28]
 8008972:	f107 0008 	add.w	r0, r7, #8
 8008976:	f107 0318 	add.w	r3, r7, #24
 800897a:	cb0c      	ldmia	r3, {r2, r3}
 800897c:	6879      	ldr	r1, [r7, #4]
 800897e:	f000 f8eb 	bl	8008b58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008982:	f107 0308 	add.w	r3, r7, #8
 8008986:	4619      	mov	r1, r3
 8008988:	4620      	mov	r0, r4
 800898a:	f7ff ff85 	bl	8008898 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800898e:	f107 0308 	add.w	r3, r7, #8
 8008992:	4618      	mov	r0, r3
 8008994:	f000 fe80 	bl	8009698 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008998:	687b      	ldr	r3, [r7, #4]
 800899a:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800899e:	687b      	ldr	r3, [r7, #4]
 80089a0:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 80089a4:	bf00      	nop
 80089a6:	3724      	adds	r7, #36	@ 0x24
 80089a8:	46bd      	mov	sp, r7
 80089aa:	bd90      	pop	{r4, r7, pc}
 80089ac:	080089b1 	.word	0x080089b1

080089b0 <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gototemperature_screenScreenNoTransitionImpl()
{
 80089b0:	b580      	push	{r7, lr}
 80089b2:	b084      	sub	sp, #16
 80089b4:	af02      	add	r7, sp, #8
 80089b6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<temperature_screenView, temperature_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 80089c4:	461a      	mov	r2, r3
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 80089cc:	9300      	str	r3, [sp, #0]
 80089ce:	4b04      	ldr	r3, [pc, #16]	@ (80089e0 <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv+0x30>)
 80089d0:	4804      	ldr	r0, [pc, #16]	@ (80089e4 <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv+0x34>)
 80089d2:	f000 fa0d 	bl	8008df0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 80089d6:	bf00      	nop
 80089d8:	3708      	adds	r7, #8
 80089da:	46bd      	mov	sp, r7
 80089dc:	bd80      	pop	{r7, pc}
 80089de:	bf00      	nop
 80089e0:	20002f94 	.word	0x20002f94
 80089e4:	20002f90 	.word	0x20002f90

080089e8 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv>:

// light_screen

void FrontendApplicationBase::gotolight_screenScreenNoTransition()
{
 80089e8:	b590      	push	{r4, r7, lr}
 80089ea:	b089      	sub	sp, #36	@ 0x24
 80089ec:	af00      	add	r7, sp, #0
 80089ee:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotolight_screenScreenNoTransitionImpl);
 80089f0:	687b      	ldr	r3, [r7, #4]
 80089f2:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 80089f6:	4b10      	ldr	r3, [pc, #64]	@ (8008a38 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv+0x50>)
 80089f8:	61bb      	str	r3, [r7, #24]
 80089fa:	2300      	movs	r3, #0
 80089fc:	61fb      	str	r3, [r7, #28]
 80089fe:	f107 0008 	add.w	r0, r7, #8
 8008a02:	f107 0318 	add.w	r3, r7, #24
 8008a06:	cb0c      	ldmia	r3, {r2, r3}
 8008a08:	6879      	ldr	r1, [r7, #4]
 8008a0a:	f000 f8a5 	bl	8008b58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008a0e:	f107 0308 	add.w	r3, r7, #8
 8008a12:	4619      	mov	r1, r3
 8008a14:	4620      	mov	r0, r4
 8008a16:	f7ff ff3f 	bl	8008898 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008a1a:	f107 0308 	add.w	r3, r7, #8
 8008a1e:	4618      	mov	r0, r3
 8008a20:	f000 fe3a 	bl	8009698 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008a30:	bf00      	nop
 8008a32:	3724      	adds	r7, #36	@ 0x24
 8008a34:	46bd      	mov	sp, r7
 8008a36:	bd90      	pop	{r4, r7, pc}
 8008a38:	08008a3d 	.word	0x08008a3d

08008a3c <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotolight_screenScreenNoTransitionImpl()
{
 8008a3c:	b580      	push	{r7, lr}
 8008a3e:	b084      	sub	sp, #16
 8008a40:	af02      	add	r7, sp, #8
 8008a42:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<light_screenView, light_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008a44:	687b      	ldr	r3, [r7, #4]
 8008a46:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008a4a:	687b      	ldr	r3, [r7, #4]
 8008a4c:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008a50:	461a      	mov	r2, r3
 8008a52:	687b      	ldr	r3, [r7, #4]
 8008a54:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008a58:	9300      	str	r3, [sp, #0]
 8008a5a:	4b04      	ldr	r3, [pc, #16]	@ (8008a6c <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv+0x30>)
 8008a5c:	4804      	ldr	r0, [pc, #16]	@ (8008a70 <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv+0x34>)
 8008a5e:	f000 fae1 	bl	8009024 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008a62:	bf00      	nop
 8008a64:	3708      	adds	r7, #8
 8008a66:	46bd      	mov	sp, r7
 8008a68:	bd80      	pop	{r7, pc}
 8008a6a:	bf00      	nop
 8008a6c:	20002f94 	.word	0x20002f94
 8008a70:	20002f90 	.word	0x20002f90

08008a74 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 8008a74:	b590      	push	{r4, r7, lr}
 8008a76:	b089      	sub	sp, #36	@ 0x24
 8008a78:	af00      	add	r7, sp, #0
 8008a7a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008a82:	4b10      	ldr	r3, [pc, #64]	@ (8008ac4 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 8008a84:	61bb      	str	r3, [r7, #24]
 8008a86:	2300      	movs	r3, #0
 8008a88:	61fb      	str	r3, [r7, #28]
 8008a8a:	f107 0008 	add.w	r0, r7, #8
 8008a8e:	f107 0318 	add.w	r3, r7, #24
 8008a92:	cb0c      	ldmia	r3, {r2, r3}
 8008a94:	6879      	ldr	r1, [r7, #4]
 8008a96:	f000 f85f 	bl	8008b58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008a9a:	f107 0308 	add.w	r3, r7, #8
 8008a9e:	4619      	mov	r1, r3
 8008aa0:	4620      	mov	r0, r4
 8008aa2:	f7ff fef9 	bl	8008898 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008aa6:	f107 0308 	add.w	r3, r7, #8
 8008aaa:	4618      	mov	r0, r3
 8008aac:	f000 fdf4 	bl	8009698 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008ab0:	687b      	ldr	r3, [r7, #4]
 8008ab2:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008abc:	bf00      	nop
 8008abe:	3724      	adds	r7, #36	@ 0x24
 8008ac0:	46bd      	mov	sp, r7
 8008ac2:	bd90      	pop	{r4, r7, pc}
 8008ac4:	08008ac9 	.word	0x08008ac9

08008ac8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8008ac8:	b580      	push	{r7, lr}
 8008aca:	b084      	sub	sp, #16
 8008acc:	af02      	add	r7, sp, #8
 8008ace:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008ad0:	687b      	ldr	r3, [r7, #4]
 8008ad2:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008ad6:	687b      	ldr	r3, [r7, #4]
 8008ad8:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008adc:	461a      	mov	r2, r3
 8008ade:	687b      	ldr	r3, [r7, #4]
 8008ae0:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008ae4:	9300      	str	r3, [sp, #0]
 8008ae6:	4b04      	ldr	r3, [pc, #16]	@ (8008af8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 8008ae8:	4804      	ldr	r0, [pc, #16]	@ (8008afc <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 8008aea:	f000 fbb5 	bl	8009258 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008aee:	bf00      	nop
 8008af0:	3708      	adds	r7, #8
 8008af2:	46bd      	mov	sp, r7
 8008af4:	bd80      	pop	{r7, pc}
 8008af6:	bf00      	nop
 8008af8:	20002f94 	.word	0x20002f94
 8008afc:	20002f90 	.word	0x20002f90

08008b00 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008b00:	b480      	push	{r7}
 8008b02:	b083      	sub	sp, #12
 8008b04:	af00      	add	r7, sp, #0
 8008b06:	6078      	str	r0, [r7, #4]
 8008b08:	4a04      	ldr	r2, [pc, #16]	@ (8008b1c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008b0a:	687b      	ldr	r3, [r7, #4]
 8008b0c:	601a      	str	r2, [r3, #0]
 8008b0e:	687b      	ldr	r3, [r7, #4]
 8008b10:	4618      	mov	r0, r3
 8008b12:	370c      	adds	r7, #12
 8008b14:	46bd      	mov	sp, r7
 8008b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b1a:	4770      	bx	lr
 8008b1c:	080280c8 	.word	0x080280c8

08008b20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8008b20:	b580      	push	{r7, lr}
 8008b22:	b082      	sub	sp, #8
 8008b24:	af00      	add	r7, sp, #0
 8008b26:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	4618      	mov	r0, r3
 8008b2c:	f7ff ffe8 	bl	8008b00 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008b30:	4a08      	ldr	r2, [pc, #32]	@ (8008b54 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008b32:	687b      	ldr	r3, [r7, #4]
 8008b34:	601a      	str	r2, [r3, #0]
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	2200      	movs	r2, #0
 8008b3a:	605a      	str	r2, [r3, #4]
 8008b3c:	687b      	ldr	r3, [r7, #4]
 8008b3e:	2200      	movs	r2, #0
 8008b40:	609a      	str	r2, [r3, #8]
 8008b42:	687b      	ldr	r3, [r7, #4]
 8008b44:	2200      	movs	r2, #0
 8008b46:	60da      	str	r2, [r3, #12]
    {
    }
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	4618      	mov	r0, r3
 8008b4c:	3708      	adds	r7, #8
 8008b4e:	46bd      	mov	sp, r7
 8008b50:	bd80      	pop	{r7, pc}
 8008b52:	bf00      	nop
 8008b54:	08028038 	.word	0x08028038

08008b58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8008b58:	b580      	push	{r7, lr}
 8008b5a:	b084      	sub	sp, #16
 8008b5c:	af00      	add	r7, sp, #0
 8008b5e:	60f8      	str	r0, [r7, #12]
 8008b60:	60b9      	str	r1, [r7, #8]
 8008b62:	4639      	mov	r1, r7
 8008b64:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8008b68:	68fb      	ldr	r3, [r7, #12]
 8008b6a:	4618      	mov	r0, r3
 8008b6c:	f7ff ffc8 	bl	8008b00 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008b70:	4a08      	ldr	r2, [pc, #32]	@ (8008b94 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008b72:	68fb      	ldr	r3, [r7, #12]
 8008b74:	601a      	str	r2, [r3, #0]
 8008b76:	68fb      	ldr	r3, [r7, #12]
 8008b78:	68ba      	ldr	r2, [r7, #8]
 8008b7a:	605a      	str	r2, [r3, #4]
 8008b7c:	68fb      	ldr	r3, [r7, #12]
 8008b7e:	3308      	adds	r3, #8
 8008b80:	463a      	mov	r2, r7
 8008b82:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008b86:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8008b8a:	68fb      	ldr	r3, [r7, #12]
 8008b8c:	4618      	mov	r0, r3
 8008b8e:	3710      	adds	r7, #16
 8008b90:	46bd      	mov	sp, r7
 8008b92:	bd80      	pop	{r7, pc}
 8008b94:	08028038 	.word	0x08028038

08008b98 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008b98:	b580      	push	{r7, lr}
 8008b9a:	b082      	sub	sp, #8
 8008b9c:	af00      	add	r7, sp, #0
 8008b9e:	6078      	str	r0, [r7, #4]
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	4618      	mov	r0, r3
 8008ba4:	f7ff fcba 	bl	800851c <_ZN8touchgfx10TransitionC1Ev>
 8008ba8:	4a03      	ldr	r2, [pc, #12]	@ (8008bb8 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008baa:	687b      	ldr	r3, [r7, #4]
 8008bac:	601a      	str	r2, [r3, #0]
 8008bae:	687b      	ldr	r3, [r7, #4]
 8008bb0:	4618      	mov	r0, r3
 8008bb2:	3708      	adds	r7, #8
 8008bb4:	46bd      	mov	sp, r7
 8008bb6:	bd80      	pop	{r7, pc}
 8008bb8:	08027fc0 	.word	0x08027fc0

08008bbc <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008bbc:	b590      	push	{r4, r7, lr}
 8008bbe:	b08f      	sub	sp, #60	@ 0x3c
 8008bc0:	af00      	add	r7, sp, #0
 8008bc2:	60f8      	str	r0, [r7, #12]
 8008bc4:	60b9      	str	r1, [r7, #8]
 8008bc6:	607a      	str	r2, [r7, #4]
 8008bc8:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008bca:	687b      	ldr	r3, [r7, #4]
 8008bcc:	689a      	ldr	r2, [r3, #8]
 8008bce:	687b      	ldr	r3, [r7, #4]
 8008bd0:	689b      	ldr	r3, [r3, #8]
 8008bd2:	681b      	ldr	r3, [r3, #0]
 8008bd4:	3320      	adds	r3, #32
 8008bd6:	681b      	ldr	r3, [r3, #0]
 8008bd8:	4610      	mov	r0, r2
 8008bda:	4798      	blx	r3
 8008bdc:	4603      	mov	r3, r0
 8008bde:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 8008be2:	d205      	bcs.n	8008bf0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008be4:	4b7d      	ldr	r3, [pc, #500]	@ (8008ddc <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008be6:	4a7e      	ldr	r2, [pc, #504]	@ (8008de0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008be8:	21a3      	movs	r1, #163	@ 0xa3
 8008bea:	487e      	ldr	r0, [pc, #504]	@ (8008de4 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008bec:	f01c ffd0 	bl	8025b90 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008bf0:	687b      	ldr	r3, [r7, #4]
 8008bf2:	685a      	ldr	r2, [r3, #4]
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	685b      	ldr	r3, [r3, #4]
 8008bf8:	681b      	ldr	r3, [r3, #0]
 8008bfa:	3320      	adds	r3, #32
 8008bfc:	681b      	ldr	r3, [r3, #0]
 8008bfe:	4610      	mov	r0, r2
 8008c00:	4798      	blx	r3
 8008c02:	4603      	mov	r3, r0
 8008c04:	2b0f      	cmp	r3, #15
 8008c06:	d805      	bhi.n	8008c14 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008c08:	4b77      	ldr	r3, [pc, #476]	@ (8008de8 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008c0a:	4a75      	ldr	r2, [pc, #468]	@ (8008de0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008c0c:	21a4      	movs	r1, #164	@ 0xa4
 8008c0e:	4875      	ldr	r0, [pc, #468]	@ (8008de4 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008c10:	f01c ffbe 	bl	8025b90 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008c14:	687b      	ldr	r3, [r7, #4]
 8008c16:	68da      	ldr	r2, [r3, #12]
 8008c18:	687b      	ldr	r3, [r7, #4]
 8008c1a:	68db      	ldr	r3, [r3, #12]
 8008c1c:	681b      	ldr	r3, [r3, #0]
 8008c1e:	3320      	adds	r3, #32
 8008c20:	681b      	ldr	r3, [r3, #0]
 8008c22:	4610      	mov	r0, r2
 8008c24:	4798      	blx	r3
 8008c26:	4603      	mov	r3, r0
 8008c28:	2b0b      	cmp	r3, #11
 8008c2a:	d805      	bhi.n	8008c38 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008c2c:	4b6f      	ldr	r3, [pc, #444]	@ (8008dec <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008c2e:	4a6c      	ldr	r2, [pc, #432]	@ (8008de0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008c30:	21a5      	movs	r1, #165	@ 0xa5
 8008c32:	486c      	ldr	r0, [pc, #432]	@ (8008de4 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008c34:	f01c ffac 	bl	8025b90 <__assert_func>
 8008c38:	68fb      	ldr	r3, [r7, #12]
 8008c3a:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008c3c:	68bb      	ldr	r3, [r7, #8]
 8008c3e:	627b      	str	r3, [r7, #36]	@ 0x24
 8008c40:	683b      	ldr	r3, [r7, #0]
 8008c42:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008c44:	f00b f99c 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 8008c48:	4603      	mov	r3, r0
 8008c4a:	4618      	mov	r0, r3
 8008c4c:	f7ff fc10 	bl	8008470 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008c50:	6a3b      	ldr	r3, [r7, #32]
 8008c52:	681b      	ldr	r3, [r3, #0]
 8008c54:	2b00      	cmp	r3, #0
 8008c56:	d008      	beq.n	8008c6a <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008c58:	6a3b      	ldr	r3, [r7, #32]
 8008c5a:	681a      	ldr	r2, [r3, #0]
 8008c5c:	6a3b      	ldr	r3, [r7, #32]
 8008c5e:	681b      	ldr	r3, [r3, #0]
 8008c60:	681b      	ldr	r3, [r3, #0]
 8008c62:	330c      	adds	r3, #12
 8008c64:	681b      	ldr	r3, [r3, #0]
 8008c66:	4610      	mov	r0, r2
 8008c68:	4798      	blx	r3
    if (*currentTrans)
 8008c6a:	6a3b      	ldr	r3, [r7, #32]
 8008c6c:	681b      	ldr	r3, [r3, #0]
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	d007      	beq.n	8008c82 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008c72:	6a3b      	ldr	r3, [r7, #32]
 8008c74:	681a      	ldr	r2, [r3, #0]
 8008c76:	6a3b      	ldr	r3, [r7, #32]
 8008c78:	681b      	ldr	r3, [r3, #0]
 8008c7a:	681b      	ldr	r3, [r3, #0]
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	4610      	mov	r0, r2
 8008c80:	4798      	blx	r3
    if (*currentScreen)
 8008c82:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008c84:	681b      	ldr	r3, [r3, #0]
 8008c86:	2b00      	cmp	r3, #0
 8008c88:	d008      	beq.n	8008c9c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008c8a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008c8c:	681a      	ldr	r2, [r3, #0]
 8008c8e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008c90:	681b      	ldr	r3, [r3, #0]
 8008c92:	681b      	ldr	r3, [r3, #0]
 8008c94:	3314      	adds	r3, #20
 8008c96:	681b      	ldr	r3, [r3, #0]
 8008c98:	4610      	mov	r0, r2
 8008c9a:	4798      	blx	r3
    if (*currentPresenter)
 8008c9c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	2b00      	cmp	r3, #0
 8008ca2:	d008      	beq.n	8008cb6 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008ca4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ca6:	681a      	ldr	r2, [r3, #0]
 8008ca8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008caa:	681b      	ldr	r3, [r3, #0]
 8008cac:	681b      	ldr	r3, [r3, #0]
 8008cae:	3304      	adds	r3, #4
 8008cb0:	681b      	ldr	r3, [r3, #0]
 8008cb2:	4610      	mov	r0, r2
 8008cb4:	4798      	blx	r3
    if (*currentScreen)
 8008cb6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008cb8:	681b      	ldr	r3, [r3, #0]
 8008cba:	2b00      	cmp	r3, #0
 8008cbc:	d007      	beq.n	8008cce <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008cbe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008cc0:	681a      	ldr	r2, [r3, #0]
 8008cc2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008cc4:	681b      	ldr	r3, [r3, #0]
 8008cc6:	681b      	ldr	r3, [r3, #0]
 8008cc8:	681b      	ldr	r3, [r3, #0]
 8008cca:	4610      	mov	r0, r2
 8008ccc:	4798      	blx	r3
    if (*currentPresenter)
 8008cce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008cd0:	681b      	ldr	r3, [r3, #0]
 8008cd2:	2b00      	cmp	r3, #0
 8008cd4:	d008      	beq.n	8008ce8 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008cd6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008cd8:	681a      	ldr	r2, [r3, #0]
 8008cda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008cdc:	681b      	ldr	r3, [r3, #0]
 8008cde:	681b      	ldr	r3, [r3, #0]
 8008ce0:	3308      	adds	r3, #8
 8008ce2:	681b      	ldr	r3, [r3, #0]
 8008ce4:	4610      	mov	r0, r2
 8008ce6:	4798      	blx	r3
}
 8008ce8:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008cea:	687b      	ldr	r3, [r7, #4]
 8008cec:	68db      	ldr	r3, [r3, #12]
 8008cee:	2100      	movs	r1, #0
 8008cf0:	4618      	mov	r0, r3
 8008cf2:	f000 fbcb 	bl	800948c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008cf6:	4603      	mov	r3, r0
 8008cf8:	4619      	mov	r1, r3
 8008cfa:	200c      	movs	r0, #12
 8008cfc:	f7ff fb22 	bl	8008344 <_ZnwjPv>
 8008d00:	4604      	mov	r4, r0
 8008d02:	4620      	mov	r0, r4
 8008d04:	f7ff ff48 	bl	8008b98 <_ZN8touchgfx12NoTransitionC1Ev>
 8008d08:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008d0a:	687b      	ldr	r3, [r7, #4]
 8008d0c:	689b      	ldr	r3, [r3, #8]
 8008d0e:	2100      	movs	r1, #0
 8008d10:	4618      	mov	r0, r3
 8008d12:	f000 fbce 	bl	80094b2 <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>
 8008d16:	4603      	mov	r3, r0
 8008d18:	4619      	mov	r1, r3
 8008d1a:	f44f 7009 	mov.w	r0, #548	@ 0x224
 8008d1e:	f7ff fb11 	bl	8008344 <_ZnwjPv>
 8008d22:	4604      	mov	r4, r0
 8008d24:	4620      	mov	r0, r4
 8008d26:	f004 ff87 	bl	800dc38 <_ZN19humidity_screenViewC1Ev>
 8008d2a:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008d2c:	687b      	ldr	r3, [r7, #4]
 8008d2e:	685b      	ldr	r3, [r3, #4]
 8008d30:	2100      	movs	r1, #0
 8008d32:	4618      	mov	r0, r3
 8008d34:	f000 fbd0 	bl	80094d8 <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>
 8008d38:	4603      	mov	r3, r0
 8008d3a:	4619      	mov	r1, r3
 8008d3c:	2010      	movs	r0, #16
 8008d3e:	f7ff fb01 	bl	8008344 <_ZnwjPv>
 8008d42:	4604      	mov	r4, r0
 8008d44:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008d46:	4620      	mov	r0, r4
 8008d48:	f004 fef0 	bl	800db2c <_ZN24humidity_screenPresenterC1ER19humidity_screenView>
 8008d4c:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8008d4e:	683b      	ldr	r3, [r7, #0]
 8008d50:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008d52:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008d54:	68bb      	ldr	r3, [r7, #8]
 8008d56:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008d58:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008d5a:	68fb      	ldr	r3, [r7, #12]
 8008d5c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008d5e:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008d60:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008d62:	2b00      	cmp	r3, #0
 8008d64:	d002      	beq.n	8008d6c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008d66:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008d68:	3304      	adds	r3, #4
 8008d6a:	e000      	b.n	8008d6e <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8008d6c:	2300      	movs	r3, #0
 8008d6e:	4619      	mov	r1, r3
 8008d70:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8008d72:	f7ff fcc3 	bl	80086fc <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008d76:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008d78:	3304      	adds	r3, #4
 8008d7a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008d7c:	4618      	mov	r0, r3
 8008d7e:	f7ff fd30 	bl	80087e2 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008d82:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008d84:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008d86:	4618      	mov	r0, r3
 8008d88:	f000 fbb9 	bl	80094fe <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>
 8008d8c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008d8e:	61fb      	str	r3, [r7, #28]
 8008d90:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008d92:	61bb      	str	r3, [r7, #24]
 8008d94:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008d96:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8008d98:	69fb      	ldr	r3, [r7, #28]
 8008d9a:	681b      	ldr	r3, [r3, #0]
 8008d9c:	330c      	adds	r3, #12
 8008d9e:	681b      	ldr	r3, [r3, #0]
 8008da0:	69f8      	ldr	r0, [r7, #28]
 8008da2:	4798      	blx	r3
    newPresenter->activate();
 8008da4:	69bb      	ldr	r3, [r7, #24]
 8008da6:	681b      	ldr	r3, [r3, #0]
 8008da8:	681b      	ldr	r3, [r3, #0]
 8008daa:	69b8      	ldr	r0, [r7, #24]
 8008dac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008dae:	6979      	ldr	r1, [r7, #20]
 8008db0:	69f8      	ldr	r0, [r7, #28]
 8008db2:	f00c fda7 	bl	8015904 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008db6:	697b      	ldr	r3, [r7, #20]
 8008db8:	681b      	ldr	r3, [r3, #0]
 8008dba:	3310      	adds	r3, #16
 8008dbc:	681b      	ldr	r3, [r3, #0]
 8008dbe:	6978      	ldr	r0, [r7, #20]
 8008dc0:	4798      	blx	r3
    newTransition->invalidate();
 8008dc2:	697b      	ldr	r3, [r7, #20]
 8008dc4:	681b      	ldr	r3, [r3, #0]
 8008dc6:	3314      	adds	r3, #20
 8008dc8:	681b      	ldr	r3, [r3, #0]
 8008dca:	6978      	ldr	r0, [r7, #20]
 8008dcc:	4798      	blx	r3
}
 8008dce:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8008dd0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8008dd2:	4618      	mov	r0, r3
 8008dd4:	373c      	adds	r7, #60	@ 0x3c
 8008dd6:	46bd      	mov	sp, r7
 8008dd8:	bd90      	pop	{r4, r7, pc}
 8008dda:	bf00      	nop
 8008ddc:	08026bf0 	.word	0x08026bf0
 8008de0:	08026c80 	.word	0x08026c80
 8008de4:	08026d64 	.word	0x08026d64
 8008de8:	08026da8 	.word	0x08026da8
 8008dec:	08026e4c 	.word	0x08026e4c

08008df0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008df0:	b590      	push	{r4, r7, lr}
 8008df2:	b08f      	sub	sp, #60	@ 0x3c
 8008df4:	af00      	add	r7, sp, #0
 8008df6:	60f8      	str	r0, [r7, #12]
 8008df8:	60b9      	str	r1, [r7, #8]
 8008dfa:	607a      	str	r2, [r7, #4]
 8008dfc:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008dfe:	687b      	ldr	r3, [r7, #4]
 8008e00:	689a      	ldr	r2, [r3, #8]
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	689b      	ldr	r3, [r3, #8]
 8008e06:	681b      	ldr	r3, [r3, #0]
 8008e08:	3320      	adds	r3, #32
 8008e0a:	681b      	ldr	r3, [r3, #0]
 8008e0c:	4610      	mov	r0, r2
 8008e0e:	4798      	blx	r3
 8008e10:	4603      	mov	r3, r0
 8008e12:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 8008e16:	d205      	bcs.n	8008e24 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008e18:	4b7d      	ldr	r3, [pc, #500]	@ (8009010 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008e1a:	4a7e      	ldr	r2, [pc, #504]	@ (8009014 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008e1c:	21a3      	movs	r1, #163	@ 0xa3
 8008e1e:	487e      	ldr	r0, [pc, #504]	@ (8009018 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008e20:	f01c feb6 	bl	8025b90 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	685a      	ldr	r2, [r3, #4]
 8008e28:	687b      	ldr	r3, [r7, #4]
 8008e2a:	685b      	ldr	r3, [r3, #4]
 8008e2c:	681b      	ldr	r3, [r3, #0]
 8008e2e:	3320      	adds	r3, #32
 8008e30:	681b      	ldr	r3, [r3, #0]
 8008e32:	4610      	mov	r0, r2
 8008e34:	4798      	blx	r3
 8008e36:	4603      	mov	r3, r0
 8008e38:	2b0f      	cmp	r3, #15
 8008e3a:	d805      	bhi.n	8008e48 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008e3c:	4b77      	ldr	r3, [pc, #476]	@ (800901c <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008e3e:	4a75      	ldr	r2, [pc, #468]	@ (8009014 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008e40:	21a4      	movs	r1, #164	@ 0xa4
 8008e42:	4875      	ldr	r0, [pc, #468]	@ (8009018 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008e44:	f01c fea4 	bl	8025b90 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008e48:	687b      	ldr	r3, [r7, #4]
 8008e4a:	68da      	ldr	r2, [r3, #12]
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	68db      	ldr	r3, [r3, #12]
 8008e50:	681b      	ldr	r3, [r3, #0]
 8008e52:	3320      	adds	r3, #32
 8008e54:	681b      	ldr	r3, [r3, #0]
 8008e56:	4610      	mov	r0, r2
 8008e58:	4798      	blx	r3
 8008e5a:	4603      	mov	r3, r0
 8008e5c:	2b0b      	cmp	r3, #11
 8008e5e:	d805      	bhi.n	8008e6c <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008e60:	4b6f      	ldr	r3, [pc, #444]	@ (8009020 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008e62:	4a6c      	ldr	r2, [pc, #432]	@ (8009014 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008e64:	21a5      	movs	r1, #165	@ 0xa5
 8008e66:	486c      	ldr	r0, [pc, #432]	@ (8009018 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008e68:	f01c fe92 	bl	8025b90 <__assert_func>
 8008e6c:	68fb      	ldr	r3, [r7, #12]
 8008e6e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008e70:	68bb      	ldr	r3, [r7, #8]
 8008e72:	627b      	str	r3, [r7, #36]	@ 0x24
 8008e74:	683b      	ldr	r3, [r7, #0]
 8008e76:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008e78:	f00b f882 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 8008e7c:	4603      	mov	r3, r0
 8008e7e:	4618      	mov	r0, r3
 8008e80:	f7ff faf6 	bl	8008470 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008e84:	6a3b      	ldr	r3, [r7, #32]
 8008e86:	681b      	ldr	r3, [r3, #0]
 8008e88:	2b00      	cmp	r3, #0
 8008e8a:	d008      	beq.n	8008e9e <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008e8c:	6a3b      	ldr	r3, [r7, #32]
 8008e8e:	681a      	ldr	r2, [r3, #0]
 8008e90:	6a3b      	ldr	r3, [r7, #32]
 8008e92:	681b      	ldr	r3, [r3, #0]
 8008e94:	681b      	ldr	r3, [r3, #0]
 8008e96:	330c      	adds	r3, #12
 8008e98:	681b      	ldr	r3, [r3, #0]
 8008e9a:	4610      	mov	r0, r2
 8008e9c:	4798      	blx	r3
    if (*currentTrans)
 8008e9e:	6a3b      	ldr	r3, [r7, #32]
 8008ea0:	681b      	ldr	r3, [r3, #0]
 8008ea2:	2b00      	cmp	r3, #0
 8008ea4:	d007      	beq.n	8008eb6 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008ea6:	6a3b      	ldr	r3, [r7, #32]
 8008ea8:	681a      	ldr	r2, [r3, #0]
 8008eaa:	6a3b      	ldr	r3, [r7, #32]
 8008eac:	681b      	ldr	r3, [r3, #0]
 8008eae:	681b      	ldr	r3, [r3, #0]
 8008eb0:	681b      	ldr	r3, [r3, #0]
 8008eb2:	4610      	mov	r0, r2
 8008eb4:	4798      	blx	r3
    if (*currentScreen)
 8008eb6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008eb8:	681b      	ldr	r3, [r3, #0]
 8008eba:	2b00      	cmp	r3, #0
 8008ebc:	d008      	beq.n	8008ed0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008ebe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ec0:	681a      	ldr	r2, [r3, #0]
 8008ec2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ec4:	681b      	ldr	r3, [r3, #0]
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	3314      	adds	r3, #20
 8008eca:	681b      	ldr	r3, [r3, #0]
 8008ecc:	4610      	mov	r0, r2
 8008ece:	4798      	blx	r3
    if (*currentPresenter)
 8008ed0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ed2:	681b      	ldr	r3, [r3, #0]
 8008ed4:	2b00      	cmp	r3, #0
 8008ed6:	d008      	beq.n	8008eea <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008ed8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008eda:	681a      	ldr	r2, [r3, #0]
 8008edc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ede:	681b      	ldr	r3, [r3, #0]
 8008ee0:	681b      	ldr	r3, [r3, #0]
 8008ee2:	3304      	adds	r3, #4
 8008ee4:	681b      	ldr	r3, [r3, #0]
 8008ee6:	4610      	mov	r0, r2
 8008ee8:	4798      	blx	r3
    if (*currentScreen)
 8008eea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008eec:	681b      	ldr	r3, [r3, #0]
 8008eee:	2b00      	cmp	r3, #0
 8008ef0:	d007      	beq.n	8008f02 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008ef2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ef4:	681a      	ldr	r2, [r3, #0]
 8008ef6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008ef8:	681b      	ldr	r3, [r3, #0]
 8008efa:	681b      	ldr	r3, [r3, #0]
 8008efc:	681b      	ldr	r3, [r3, #0]
 8008efe:	4610      	mov	r0, r2
 8008f00:	4798      	blx	r3
    if (*currentPresenter)
 8008f02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f04:	681b      	ldr	r3, [r3, #0]
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d008      	beq.n	8008f1c <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008f0a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f0c:	681a      	ldr	r2, [r3, #0]
 8008f0e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f10:	681b      	ldr	r3, [r3, #0]
 8008f12:	681b      	ldr	r3, [r3, #0]
 8008f14:	3308      	adds	r3, #8
 8008f16:	681b      	ldr	r3, [r3, #0]
 8008f18:	4610      	mov	r0, r2
 8008f1a:	4798      	blx	r3
}
 8008f1c:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008f1e:	687b      	ldr	r3, [r7, #4]
 8008f20:	68db      	ldr	r3, [r3, #12]
 8008f22:	2100      	movs	r1, #0
 8008f24:	4618      	mov	r0, r3
 8008f26:	f000 fab1 	bl	800948c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008f2a:	4603      	mov	r3, r0
 8008f2c:	4619      	mov	r1, r3
 8008f2e:	200c      	movs	r0, #12
 8008f30:	f7ff fa08 	bl	8008344 <_ZnwjPv>
 8008f34:	4604      	mov	r4, r0
 8008f36:	4620      	mov	r0, r4
 8008f38:	f7ff fe2e 	bl	8008b98 <_ZN8touchgfx12NoTransitionC1Ev>
 8008f3c:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008f3e:	687b      	ldr	r3, [r7, #4]
 8008f40:	689b      	ldr	r3, [r3, #8]
 8008f42:	2100      	movs	r1, #0
 8008f44:	4618      	mov	r0, r3
 8008f46:	f000 fae8 	bl	800951a <_ZN8touchgfx17AbstractPartition2atI22temperature_screenViewEERT_t>
 8008f4a:	4603      	mov	r3, r0
 8008f4c:	4619      	mov	r1, r3
 8008f4e:	f44f 7009 	mov.w	r0, #548	@ 0x224
 8008f52:	f7ff f9f7 	bl	8008344 <_ZnwjPv>
 8008f56:	4604      	mov	r4, r0
 8008f58:	4620      	mov	r0, r4
 8008f5a:	f005 fab9 	bl	800e4d0 <_ZN22temperature_screenViewC1Ev>
 8008f5e:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008f60:	687b      	ldr	r3, [r7, #4]
 8008f62:	685b      	ldr	r3, [r3, #4]
 8008f64:	2100      	movs	r1, #0
 8008f66:	4618      	mov	r0, r3
 8008f68:	f000 faea 	bl	8009540 <_ZN8touchgfx17AbstractPartition2atI27temperature_screenPresenterEERT_t>
 8008f6c:	4603      	mov	r3, r0
 8008f6e:	4619      	mov	r1, r3
 8008f70:	2010      	movs	r0, #16
 8008f72:	f7ff f9e7 	bl	8008344 <_ZnwjPv>
 8008f76:	4604      	mov	r4, r0
 8008f78:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008f7a:	4620      	mov	r0, r4
 8008f7c:	f005 fa36 	bl	800e3ec <_ZN27temperature_screenPresenterC1ER22temperature_screenView>
 8008f80:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8008f82:	683b      	ldr	r3, [r7, #0]
 8008f84:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008f86:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008f88:	68bb      	ldr	r3, [r7, #8]
 8008f8a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008f8c:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008f8e:	68fb      	ldr	r3, [r7, #12]
 8008f90:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008f92:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008f94:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008f96:	2b00      	cmp	r3, #0
 8008f98:	d002      	beq.n	8008fa0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008f9a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008f9c:	3304      	adds	r3, #4
 8008f9e:	e000      	b.n	8008fa2 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8008fa0:	2300      	movs	r3, #0
 8008fa2:	4619      	mov	r1, r3
 8008fa4:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8008fa6:	f7ff fba9 	bl	80086fc <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008faa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008fac:	3304      	adds	r3, #4
 8008fae:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008fb0:	4618      	mov	r0, r3
 8008fb2:	f7ff fc16 	bl	80087e2 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008fb6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008fb8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008fba:	4618      	mov	r0, r3
 8008fbc:	f000 fad3 	bl	8009566 <_ZN8touchgfx4ViewI27temperature_screenPresenterE4bindERS1_>
 8008fc0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008fc2:	61fb      	str	r3, [r7, #28]
 8008fc4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008fc6:	61bb      	str	r3, [r7, #24]
 8008fc8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008fca:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8008fcc:	69fb      	ldr	r3, [r7, #28]
 8008fce:	681b      	ldr	r3, [r3, #0]
 8008fd0:	330c      	adds	r3, #12
 8008fd2:	681b      	ldr	r3, [r3, #0]
 8008fd4:	69f8      	ldr	r0, [r7, #28]
 8008fd6:	4798      	blx	r3
    newPresenter->activate();
 8008fd8:	69bb      	ldr	r3, [r7, #24]
 8008fda:	681b      	ldr	r3, [r3, #0]
 8008fdc:	681b      	ldr	r3, [r3, #0]
 8008fde:	69b8      	ldr	r0, [r7, #24]
 8008fe0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008fe2:	6979      	ldr	r1, [r7, #20]
 8008fe4:	69f8      	ldr	r0, [r7, #28]
 8008fe6:	f00c fc8d 	bl	8015904 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008fea:	697b      	ldr	r3, [r7, #20]
 8008fec:	681b      	ldr	r3, [r3, #0]
 8008fee:	3310      	adds	r3, #16
 8008ff0:	681b      	ldr	r3, [r3, #0]
 8008ff2:	6978      	ldr	r0, [r7, #20]
 8008ff4:	4798      	blx	r3
    newTransition->invalidate();
 8008ff6:	697b      	ldr	r3, [r7, #20]
 8008ff8:	681b      	ldr	r3, [r3, #0]
 8008ffa:	3314      	adds	r3, #20
 8008ffc:	681b      	ldr	r3, [r3, #0]
 8008ffe:	6978      	ldr	r0, [r7, #20]
 8009000:	4798      	blx	r3
}
 8009002:	bf00      	nop
    return newPresenter;
 8009004:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8009006:	4618      	mov	r0, r3
 8009008:	373c      	adds	r7, #60	@ 0x3c
 800900a:	46bd      	mov	sp, r7
 800900c:	bd90      	pop	{r4, r7, pc}
 800900e:	bf00      	nop
 8009010:	08026bf0 	.word	0x08026bf0
 8009014:	08026ef0 	.word	0x08026ef0
 8009018:	08026d64 	.word	0x08026d64
 800901c:	08026da8 	.word	0x08026da8
 8009020:	08026e4c 	.word	0x08026e4c

08009024 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009024:	b590      	push	{r4, r7, lr}
 8009026:	b08f      	sub	sp, #60	@ 0x3c
 8009028:	af00      	add	r7, sp, #0
 800902a:	60f8      	str	r0, [r7, #12]
 800902c:	60b9      	str	r1, [r7, #8]
 800902e:	607a      	str	r2, [r7, #4]
 8009030:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8009032:	687b      	ldr	r3, [r7, #4]
 8009034:	689a      	ldr	r2, [r3, #8]
 8009036:	687b      	ldr	r3, [r7, #4]
 8009038:	689b      	ldr	r3, [r3, #8]
 800903a:	681b      	ldr	r3, [r3, #0]
 800903c:	3320      	adds	r3, #32
 800903e:	681b      	ldr	r3, [r3, #0]
 8009040:	4610      	mov	r0, r2
 8009042:	4798      	blx	r3
 8009044:	4603      	mov	r3, r0
 8009046:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 800904a:	d205      	bcs.n	8009058 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800904c:	4b7d      	ldr	r3, [pc, #500]	@ (8009244 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800904e:	4a7e      	ldr	r2, [pc, #504]	@ (8009248 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009050:	21a3      	movs	r1, #163	@ 0xa3
 8009052:	487e      	ldr	r0, [pc, #504]	@ (800924c <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009054:	f01c fd9c 	bl	8025b90 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8009058:	687b      	ldr	r3, [r7, #4]
 800905a:	685a      	ldr	r2, [r3, #4]
 800905c:	687b      	ldr	r3, [r7, #4]
 800905e:	685b      	ldr	r3, [r3, #4]
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	3320      	adds	r3, #32
 8009064:	681b      	ldr	r3, [r3, #0]
 8009066:	4610      	mov	r0, r2
 8009068:	4798      	blx	r3
 800906a:	4603      	mov	r3, r0
 800906c:	2b0f      	cmp	r3, #15
 800906e:	d805      	bhi.n	800907c <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8009070:	4b77      	ldr	r3, [pc, #476]	@ (8009250 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8009072:	4a75      	ldr	r2, [pc, #468]	@ (8009248 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009074:	21a4      	movs	r1, #164	@ 0xa4
 8009076:	4875      	ldr	r0, [pc, #468]	@ (800924c <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009078:	f01c fd8a 	bl	8025b90 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800907c:	687b      	ldr	r3, [r7, #4]
 800907e:	68da      	ldr	r2, [r3, #12]
 8009080:	687b      	ldr	r3, [r7, #4]
 8009082:	68db      	ldr	r3, [r3, #12]
 8009084:	681b      	ldr	r3, [r3, #0]
 8009086:	3320      	adds	r3, #32
 8009088:	681b      	ldr	r3, [r3, #0]
 800908a:	4610      	mov	r0, r2
 800908c:	4798      	blx	r3
 800908e:	4603      	mov	r3, r0
 8009090:	2b0b      	cmp	r3, #11
 8009092:	d805      	bhi.n	80090a0 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8009094:	4b6f      	ldr	r3, [pc, #444]	@ (8009254 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8009096:	4a6c      	ldr	r2, [pc, #432]	@ (8009248 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009098:	21a5      	movs	r1, #165	@ 0xa5
 800909a:	486c      	ldr	r0, [pc, #432]	@ (800924c <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800909c:	f01c fd78 	bl	8025b90 <__assert_func>
 80090a0:	68fb      	ldr	r3, [r7, #12]
 80090a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80090a4:	68bb      	ldr	r3, [r7, #8]
 80090a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80090a8:	683b      	ldr	r3, [r7, #0]
 80090aa:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 80090ac:	f00a ff68 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 80090b0:	4603      	mov	r3, r0
 80090b2:	4618      	mov	r0, r3
 80090b4:	f7ff f9dc 	bl	8008470 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80090b8:	6a3b      	ldr	r3, [r7, #32]
 80090ba:	681b      	ldr	r3, [r3, #0]
 80090bc:	2b00      	cmp	r3, #0
 80090be:	d008      	beq.n	80090d2 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 80090c0:	6a3b      	ldr	r3, [r7, #32]
 80090c2:	681a      	ldr	r2, [r3, #0]
 80090c4:	6a3b      	ldr	r3, [r7, #32]
 80090c6:	681b      	ldr	r3, [r3, #0]
 80090c8:	681b      	ldr	r3, [r3, #0]
 80090ca:	330c      	adds	r3, #12
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	4610      	mov	r0, r2
 80090d0:	4798      	blx	r3
    if (*currentTrans)
 80090d2:	6a3b      	ldr	r3, [r7, #32]
 80090d4:	681b      	ldr	r3, [r3, #0]
 80090d6:	2b00      	cmp	r3, #0
 80090d8:	d007      	beq.n	80090ea <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 80090da:	6a3b      	ldr	r3, [r7, #32]
 80090dc:	681a      	ldr	r2, [r3, #0]
 80090de:	6a3b      	ldr	r3, [r7, #32]
 80090e0:	681b      	ldr	r3, [r3, #0]
 80090e2:	681b      	ldr	r3, [r3, #0]
 80090e4:	681b      	ldr	r3, [r3, #0]
 80090e6:	4610      	mov	r0, r2
 80090e8:	4798      	blx	r3
    if (*currentScreen)
 80090ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80090ec:	681b      	ldr	r3, [r3, #0]
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d008      	beq.n	8009104 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 80090f2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80090f4:	681a      	ldr	r2, [r3, #0]
 80090f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80090f8:	681b      	ldr	r3, [r3, #0]
 80090fa:	681b      	ldr	r3, [r3, #0]
 80090fc:	3314      	adds	r3, #20
 80090fe:	681b      	ldr	r3, [r3, #0]
 8009100:	4610      	mov	r0, r2
 8009102:	4798      	blx	r3
    if (*currentPresenter)
 8009104:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009106:	681b      	ldr	r3, [r3, #0]
 8009108:	2b00      	cmp	r3, #0
 800910a:	d008      	beq.n	800911e <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800910c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800910e:	681a      	ldr	r2, [r3, #0]
 8009110:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009112:	681b      	ldr	r3, [r3, #0]
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	3304      	adds	r3, #4
 8009118:	681b      	ldr	r3, [r3, #0]
 800911a:	4610      	mov	r0, r2
 800911c:	4798      	blx	r3
    if (*currentScreen)
 800911e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009120:	681b      	ldr	r3, [r3, #0]
 8009122:	2b00      	cmp	r3, #0
 8009124:	d007      	beq.n	8009136 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8009126:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009128:	681a      	ldr	r2, [r3, #0]
 800912a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800912c:	681b      	ldr	r3, [r3, #0]
 800912e:	681b      	ldr	r3, [r3, #0]
 8009130:	681b      	ldr	r3, [r3, #0]
 8009132:	4610      	mov	r0, r2
 8009134:	4798      	blx	r3
    if (*currentPresenter)
 8009136:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009138:	681b      	ldr	r3, [r3, #0]
 800913a:	2b00      	cmp	r3, #0
 800913c:	d008      	beq.n	8009150 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800913e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009140:	681a      	ldr	r2, [r3, #0]
 8009142:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009144:	681b      	ldr	r3, [r3, #0]
 8009146:	681b      	ldr	r3, [r3, #0]
 8009148:	3308      	adds	r3, #8
 800914a:	681b      	ldr	r3, [r3, #0]
 800914c:	4610      	mov	r0, r2
 800914e:	4798      	blx	r3
}
 8009150:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8009152:	687b      	ldr	r3, [r7, #4]
 8009154:	68db      	ldr	r3, [r3, #12]
 8009156:	2100      	movs	r1, #0
 8009158:	4618      	mov	r0, r3
 800915a:	f000 f997 	bl	800948c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800915e:	4603      	mov	r3, r0
 8009160:	4619      	mov	r1, r3
 8009162:	200c      	movs	r0, #12
 8009164:	f7ff f8ee 	bl	8008344 <_ZnwjPv>
 8009168:	4604      	mov	r4, r0
 800916a:	4620      	mov	r0, r4
 800916c:	f7ff fd14 	bl	8008b98 <_ZN8touchgfx12NoTransitionC1Ev>
 8009170:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	689b      	ldr	r3, [r3, #8]
 8009176:	2100      	movs	r1, #0
 8009178:	4618      	mov	r0, r3
 800917a:	f000 fa02 	bl	8009582 <_ZN8touchgfx17AbstractPartition2atI16light_screenViewEERT_t>
 800917e:	4603      	mov	r3, r0
 8009180:	4619      	mov	r1, r3
 8009182:	f44f 7009 	mov.w	r0, #548	@ 0x224
 8009186:	f7ff f8dd 	bl	8008344 <_ZnwjPv>
 800918a:	4604      	mov	r4, r0
 800918c:	4620      	mov	r0, r4
 800918e:	f004 fe69 	bl	800de64 <_ZN16light_screenViewC1Ev>
 8009192:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8009194:	687b      	ldr	r3, [r7, #4]
 8009196:	685b      	ldr	r3, [r3, #4]
 8009198:	2100      	movs	r1, #0
 800919a:	4618      	mov	r0, r3
 800919c:	f000 fa04 	bl	80095a8 <_ZN8touchgfx17AbstractPartition2atI21light_screenPresenterEERT_t>
 80091a0:	4603      	mov	r3, r0
 80091a2:	4619      	mov	r1, r3
 80091a4:	2010      	movs	r0, #16
 80091a6:	f7ff f8cd 	bl	8008344 <_ZnwjPv>
 80091aa:	4604      	mov	r4, r0
 80091ac:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80091ae:	4620      	mov	r0, r4
 80091b0:	f004 fde8 	bl	800dd84 <_ZN21light_screenPresenterC1ER16light_screenView>
 80091b4:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 80091b6:	683b      	ldr	r3, [r7, #0]
 80091b8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80091ba:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 80091bc:	68bb      	ldr	r3, [r7, #8]
 80091be:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80091c0:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 80091c2:	68fb      	ldr	r3, [r7, #12]
 80091c4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80091c6:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 80091c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80091ca:	2b00      	cmp	r3, #0
 80091cc:	d002      	beq.n	80091d4 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 80091ce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80091d0:	3304      	adds	r3, #4
 80091d2:	e000      	b.n	80091d6 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 80091d4:	2300      	movs	r3, #0
 80091d6:	4619      	mov	r1, r3
 80091d8:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 80091da:	f7ff fa8f 	bl	80086fc <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 80091de:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80091e0:	3304      	adds	r3, #4
 80091e2:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80091e4:	4618      	mov	r0, r3
 80091e6:	f7ff fafc 	bl	80087e2 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 80091ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091ec:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80091ee:	4618      	mov	r0, r3
 80091f0:	f000 f9ed 	bl	80095ce <_ZN8touchgfx4ViewI21light_screenPresenterE4bindERS1_>
 80091f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80091f6:	61fb      	str	r3, [r7, #28]
 80091f8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80091fa:	61bb      	str	r3, [r7, #24]
 80091fc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80091fe:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009200:	69fb      	ldr	r3, [r7, #28]
 8009202:	681b      	ldr	r3, [r3, #0]
 8009204:	330c      	adds	r3, #12
 8009206:	681b      	ldr	r3, [r3, #0]
 8009208:	69f8      	ldr	r0, [r7, #28]
 800920a:	4798      	blx	r3
    newPresenter->activate();
 800920c:	69bb      	ldr	r3, [r7, #24]
 800920e:	681b      	ldr	r3, [r3, #0]
 8009210:	681b      	ldr	r3, [r3, #0]
 8009212:	69b8      	ldr	r0, [r7, #24]
 8009214:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009216:	6979      	ldr	r1, [r7, #20]
 8009218:	69f8      	ldr	r0, [r7, #28]
 800921a:	f00c fb73 	bl	8015904 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800921e:	697b      	ldr	r3, [r7, #20]
 8009220:	681b      	ldr	r3, [r3, #0]
 8009222:	3310      	adds	r3, #16
 8009224:	681b      	ldr	r3, [r3, #0]
 8009226:	6978      	ldr	r0, [r7, #20]
 8009228:	4798      	blx	r3
    newTransition->invalidate();
 800922a:	697b      	ldr	r3, [r7, #20]
 800922c:	681b      	ldr	r3, [r3, #0]
 800922e:	3314      	adds	r3, #20
 8009230:	681b      	ldr	r3, [r3, #0]
 8009232:	6978      	ldr	r0, [r7, #20]
 8009234:	4798      	blx	r3
}
 8009236:	bf00      	nop
    return newPresenter;
 8009238:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800923a:	4618      	mov	r0, r3
 800923c:	373c      	adds	r7, #60	@ 0x3c
 800923e:	46bd      	mov	sp, r7
 8009240:	bd90      	pop	{r4, r7, pc}
 8009242:	bf00      	nop
 8009244:	08026bf0 	.word	0x08026bf0
 8009248:	08026fd8 	.word	0x08026fd8
 800924c:	08026d64 	.word	0x08026d64
 8009250:	08026da8 	.word	0x08026da8
 8009254:	08026e4c 	.word	0x08026e4c

08009258 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009258:	b590      	push	{r4, r7, lr}
 800925a:	b08f      	sub	sp, #60	@ 0x3c
 800925c:	af00      	add	r7, sp, #0
 800925e:	60f8      	str	r0, [r7, #12]
 8009260:	60b9      	str	r1, [r7, #8]
 8009262:	607a      	str	r2, [r7, #4]
 8009264:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	689a      	ldr	r2, [r3, #8]
 800926a:	687b      	ldr	r3, [r7, #4]
 800926c:	689b      	ldr	r3, [r3, #8]
 800926e:	681b      	ldr	r3, [r3, #0]
 8009270:	3320      	adds	r3, #32
 8009272:	681b      	ldr	r3, [r3, #0]
 8009274:	4610      	mov	r0, r2
 8009276:	4798      	blx	r3
 8009278:	4603      	mov	r3, r0
 800927a:	f5b3 7f76 	cmp.w	r3, #984	@ 0x3d8
 800927e:	d205      	bcs.n	800928c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8009280:	4b7d      	ldr	r3, [pc, #500]	@ (8009478 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8009282:	4a7e      	ldr	r2, [pc, #504]	@ (800947c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009284:	21a3      	movs	r1, #163	@ 0xa3
 8009286:	487e      	ldr	r0, [pc, #504]	@ (8009480 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009288:	f01c fc82 	bl	8025b90 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800928c:	687b      	ldr	r3, [r7, #4]
 800928e:	685a      	ldr	r2, [r3, #4]
 8009290:	687b      	ldr	r3, [r7, #4]
 8009292:	685b      	ldr	r3, [r3, #4]
 8009294:	681b      	ldr	r3, [r3, #0]
 8009296:	3320      	adds	r3, #32
 8009298:	681b      	ldr	r3, [r3, #0]
 800929a:	4610      	mov	r0, r2
 800929c:	4798      	blx	r3
 800929e:	4603      	mov	r3, r0
 80092a0:	2b0f      	cmp	r3, #15
 80092a2:	d805      	bhi.n	80092b0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 80092a4:	4b77      	ldr	r3, [pc, #476]	@ (8009484 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 80092a6:	4a75      	ldr	r2, [pc, #468]	@ (800947c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80092a8:	21a4      	movs	r1, #164	@ 0xa4
 80092aa:	4875      	ldr	r0, [pc, #468]	@ (8009480 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80092ac:	f01c fc70 	bl	8025b90 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	68da      	ldr	r2, [r3, #12]
 80092b4:	687b      	ldr	r3, [r7, #4]
 80092b6:	68db      	ldr	r3, [r3, #12]
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	3320      	adds	r3, #32
 80092bc:	681b      	ldr	r3, [r3, #0]
 80092be:	4610      	mov	r0, r2
 80092c0:	4798      	blx	r3
 80092c2:	4603      	mov	r3, r0
 80092c4:	2b0b      	cmp	r3, #11
 80092c6:	d805      	bhi.n	80092d4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 80092c8:	4b6f      	ldr	r3, [pc, #444]	@ (8009488 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 80092ca:	4a6c      	ldr	r2, [pc, #432]	@ (800947c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80092cc:	21a5      	movs	r1, #165	@ 0xa5
 80092ce:	486c      	ldr	r0, [pc, #432]	@ (8009480 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80092d0:	f01c fc5e 	bl	8025b90 <__assert_func>
 80092d4:	68fb      	ldr	r3, [r7, #12]
 80092d6:	62bb      	str	r3, [r7, #40]	@ 0x28
 80092d8:	68bb      	ldr	r3, [r7, #8]
 80092da:	627b      	str	r3, [r7, #36]	@ 0x24
 80092dc:	683b      	ldr	r3, [r7, #0]
 80092de:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 80092e0:	f00a fe4e 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 80092e4:	4603      	mov	r3, r0
 80092e6:	4618      	mov	r0, r3
 80092e8:	f7ff f8c2 	bl	8008470 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80092ec:	6a3b      	ldr	r3, [r7, #32]
 80092ee:	681b      	ldr	r3, [r3, #0]
 80092f0:	2b00      	cmp	r3, #0
 80092f2:	d008      	beq.n	8009306 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 80092f4:	6a3b      	ldr	r3, [r7, #32]
 80092f6:	681a      	ldr	r2, [r3, #0]
 80092f8:	6a3b      	ldr	r3, [r7, #32]
 80092fa:	681b      	ldr	r3, [r3, #0]
 80092fc:	681b      	ldr	r3, [r3, #0]
 80092fe:	330c      	adds	r3, #12
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	4610      	mov	r0, r2
 8009304:	4798      	blx	r3
    if (*currentTrans)
 8009306:	6a3b      	ldr	r3, [r7, #32]
 8009308:	681b      	ldr	r3, [r3, #0]
 800930a:	2b00      	cmp	r3, #0
 800930c:	d007      	beq.n	800931e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800930e:	6a3b      	ldr	r3, [r7, #32]
 8009310:	681a      	ldr	r2, [r3, #0]
 8009312:	6a3b      	ldr	r3, [r7, #32]
 8009314:	681b      	ldr	r3, [r3, #0]
 8009316:	681b      	ldr	r3, [r3, #0]
 8009318:	681b      	ldr	r3, [r3, #0]
 800931a:	4610      	mov	r0, r2
 800931c:	4798      	blx	r3
    if (*currentScreen)
 800931e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009320:	681b      	ldr	r3, [r3, #0]
 8009322:	2b00      	cmp	r3, #0
 8009324:	d008      	beq.n	8009338 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8009326:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009328:	681a      	ldr	r2, [r3, #0]
 800932a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800932c:	681b      	ldr	r3, [r3, #0]
 800932e:	681b      	ldr	r3, [r3, #0]
 8009330:	3314      	adds	r3, #20
 8009332:	681b      	ldr	r3, [r3, #0]
 8009334:	4610      	mov	r0, r2
 8009336:	4798      	blx	r3
    if (*currentPresenter)
 8009338:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800933a:	681b      	ldr	r3, [r3, #0]
 800933c:	2b00      	cmp	r3, #0
 800933e:	d008      	beq.n	8009352 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8009340:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009342:	681a      	ldr	r2, [r3, #0]
 8009344:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009346:	681b      	ldr	r3, [r3, #0]
 8009348:	681b      	ldr	r3, [r3, #0]
 800934a:	3304      	adds	r3, #4
 800934c:	681b      	ldr	r3, [r3, #0]
 800934e:	4610      	mov	r0, r2
 8009350:	4798      	blx	r3
    if (*currentScreen)
 8009352:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009354:	681b      	ldr	r3, [r3, #0]
 8009356:	2b00      	cmp	r3, #0
 8009358:	d007      	beq.n	800936a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800935a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800935c:	681a      	ldr	r2, [r3, #0]
 800935e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009360:	681b      	ldr	r3, [r3, #0]
 8009362:	681b      	ldr	r3, [r3, #0]
 8009364:	681b      	ldr	r3, [r3, #0]
 8009366:	4610      	mov	r0, r2
 8009368:	4798      	blx	r3
    if (*currentPresenter)
 800936a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800936c:	681b      	ldr	r3, [r3, #0]
 800936e:	2b00      	cmp	r3, #0
 8009370:	d008      	beq.n	8009384 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8009372:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009374:	681a      	ldr	r2, [r3, #0]
 8009376:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009378:	681b      	ldr	r3, [r3, #0]
 800937a:	681b      	ldr	r3, [r3, #0]
 800937c:	3308      	adds	r3, #8
 800937e:	681b      	ldr	r3, [r3, #0]
 8009380:	4610      	mov	r0, r2
 8009382:	4798      	blx	r3
}
 8009384:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	68db      	ldr	r3, [r3, #12]
 800938a:	2100      	movs	r1, #0
 800938c:	4618      	mov	r0, r3
 800938e:	f000 f87d 	bl	800948c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8009392:	4603      	mov	r3, r0
 8009394:	4619      	mov	r1, r3
 8009396:	200c      	movs	r0, #12
 8009398:	f7fe ffd4 	bl	8008344 <_ZnwjPv>
 800939c:	4604      	mov	r4, r0
 800939e:	4620      	mov	r0, r4
 80093a0:	f7ff fbfa 	bl	8008b98 <_ZN8touchgfx12NoTransitionC1Ev>
 80093a4:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80093a6:	687b      	ldr	r3, [r7, #4]
 80093a8:	689b      	ldr	r3, [r3, #8]
 80093aa:	2100      	movs	r1, #0
 80093ac:	4618      	mov	r0, r3
 80093ae:	f000 f91c 	bl	80095ea <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 80093b2:	4603      	mov	r3, r0
 80093b4:	4619      	mov	r1, r3
 80093b6:	f44f 7076 	mov.w	r0, #984	@ 0x3d8
 80093ba:	f7fe ffc3 	bl	8008344 <_ZnwjPv>
 80093be:	4604      	mov	r4, r0
 80093c0:	4620      	mov	r0, r4
 80093c2:	f004 fe93 	bl	800e0ec <_ZN8MainViewC1Ev>
 80093c6:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80093c8:	687b      	ldr	r3, [r7, #4]
 80093ca:	685b      	ldr	r3, [r3, #4]
 80093cc:	2100      	movs	r1, #0
 80093ce:	4618      	mov	r0, r3
 80093d0:	f000 f91e 	bl	8009610 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 80093d4:	4603      	mov	r3, r0
 80093d6:	4619      	mov	r1, r3
 80093d8:	2010      	movs	r0, #16
 80093da:	f7fe ffb3 	bl	8008344 <_ZnwjPv>
 80093de:	4604      	mov	r4, r0
 80093e0:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80093e2:	4620      	mov	r0, r4
 80093e4:	f004 fde0 	bl	800dfa8 <_ZN13MainPresenterC1ER8MainView>
 80093e8:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 80093ea:	683b      	ldr	r3, [r7, #0]
 80093ec:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80093ee:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 80093f0:	68bb      	ldr	r3, [r7, #8]
 80093f2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80093f4:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 80093f6:	68fb      	ldr	r3, [r7, #12]
 80093f8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80093fa:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 80093fc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80093fe:	2b00      	cmp	r3, #0
 8009400:	d002      	beq.n	8009408 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8009402:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009404:	3304      	adds	r3, #4
 8009406:	e000      	b.n	800940a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009408:	2300      	movs	r3, #0
 800940a:	4619      	mov	r1, r3
 800940c:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800940e:	f7ff f975 	bl	80086fc <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009412:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009414:	3304      	adds	r3, #4
 8009416:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8009418:	4618      	mov	r0, r3
 800941a:	f7ff f9e2 	bl	80087e2 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800941e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009420:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009422:	4618      	mov	r0, r3
 8009424:	f000 f907 	bl	8009636 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 8009428:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800942a:	61fb      	str	r3, [r7, #28]
 800942c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800942e:	61bb      	str	r3, [r7, #24]
 8009430:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009432:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009434:	69fb      	ldr	r3, [r7, #28]
 8009436:	681b      	ldr	r3, [r3, #0]
 8009438:	330c      	adds	r3, #12
 800943a:	681b      	ldr	r3, [r3, #0]
 800943c:	69f8      	ldr	r0, [r7, #28]
 800943e:	4798      	blx	r3
    newPresenter->activate();
 8009440:	69bb      	ldr	r3, [r7, #24]
 8009442:	681b      	ldr	r3, [r3, #0]
 8009444:	681b      	ldr	r3, [r3, #0]
 8009446:	69b8      	ldr	r0, [r7, #24]
 8009448:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800944a:	6979      	ldr	r1, [r7, #20]
 800944c:	69f8      	ldr	r0, [r7, #28]
 800944e:	f00c fa59 	bl	8015904 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8009452:	697b      	ldr	r3, [r7, #20]
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	3310      	adds	r3, #16
 8009458:	681b      	ldr	r3, [r3, #0]
 800945a:	6978      	ldr	r0, [r7, #20]
 800945c:	4798      	blx	r3
    newTransition->invalidate();
 800945e:	697b      	ldr	r3, [r7, #20]
 8009460:	681b      	ldr	r3, [r3, #0]
 8009462:	3314      	adds	r3, #20
 8009464:	681b      	ldr	r3, [r3, #0]
 8009466:	6978      	ldr	r0, [r7, #20]
 8009468:	4798      	blx	r3
}
 800946a:	bf00      	nop
    return newPresenter;
 800946c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800946e:	4618      	mov	r0, r3
 8009470:	373c      	adds	r7, #60	@ 0x3c
 8009472:	46bd      	mov	sp, r7
 8009474:	bd90      	pop	{r4, r7, pc}
 8009476:	bf00      	nop
 8009478:	08026bf0 	.word	0x08026bf0
 800947c:	080270b4 	.word	0x080270b4
 8009480:	08026d64 	.word	0x08026d64
 8009484:	08026da8 	.word	0x08026da8
 8009488:	08026e4c 	.word	0x08026e4c

0800948c <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800948c:	b580      	push	{r7, lr}
 800948e:	b082      	sub	sp, #8
 8009490:	af00      	add	r7, sp, #0
 8009492:	6078      	str	r0, [r7, #4]
 8009494:	460b      	mov	r3, r1
 8009496:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	681b      	ldr	r3, [r3, #0]
 800949c:	3324      	adds	r3, #36	@ 0x24
 800949e:	681b      	ldr	r3, [r3, #0]
 80094a0:	887a      	ldrh	r2, [r7, #2]
 80094a2:	4611      	mov	r1, r2
 80094a4:	6878      	ldr	r0, [r7, #4]
 80094a6:	4798      	blx	r3
 80094a8:	4603      	mov	r3, r0
    }
 80094aa:	4618      	mov	r0, r3
 80094ac:	3708      	adds	r7, #8
 80094ae:	46bd      	mov	sp, r7
 80094b0:	bd80      	pop	{r7, pc}

080094b2 <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>:
    T& at(const uint16_t index)
 80094b2:	b580      	push	{r7, lr}
 80094b4:	b082      	sub	sp, #8
 80094b6:	af00      	add	r7, sp, #0
 80094b8:	6078      	str	r0, [r7, #4]
 80094ba:	460b      	mov	r3, r1
 80094bc:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80094be:	687b      	ldr	r3, [r7, #4]
 80094c0:	681b      	ldr	r3, [r3, #0]
 80094c2:	3324      	adds	r3, #36	@ 0x24
 80094c4:	681b      	ldr	r3, [r3, #0]
 80094c6:	887a      	ldrh	r2, [r7, #2]
 80094c8:	4611      	mov	r1, r2
 80094ca:	6878      	ldr	r0, [r7, #4]
 80094cc:	4798      	blx	r3
 80094ce:	4603      	mov	r3, r0
    }
 80094d0:	4618      	mov	r0, r3
 80094d2:	3708      	adds	r7, #8
 80094d4:	46bd      	mov	sp, r7
 80094d6:	bd80      	pop	{r7, pc}

080094d8 <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 80094d8:	b580      	push	{r7, lr}
 80094da:	b082      	sub	sp, #8
 80094dc:	af00      	add	r7, sp, #0
 80094de:	6078      	str	r0, [r7, #4]
 80094e0:	460b      	mov	r3, r1
 80094e2:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80094e4:	687b      	ldr	r3, [r7, #4]
 80094e6:	681b      	ldr	r3, [r3, #0]
 80094e8:	3324      	adds	r3, #36	@ 0x24
 80094ea:	681b      	ldr	r3, [r3, #0]
 80094ec:	887a      	ldrh	r2, [r7, #2]
 80094ee:	4611      	mov	r1, r2
 80094f0:	6878      	ldr	r0, [r7, #4]
 80094f2:	4798      	blx	r3
 80094f4:	4603      	mov	r3, r0
    }
 80094f6:	4618      	mov	r0, r3
 80094f8:	3708      	adds	r7, #8
 80094fa:	46bd      	mov	sp, r7
 80094fc:	bd80      	pop	{r7, pc}

080094fe <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 80094fe:	b480      	push	{r7}
 8009500:	b083      	sub	sp, #12
 8009502:	af00      	add	r7, sp, #0
 8009504:	6078      	str	r0, [r7, #4]
 8009506:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 8009508:	687b      	ldr	r3, [r7, #4]
 800950a:	683a      	ldr	r2, [r7, #0]
 800950c:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800950e:	bf00      	nop
 8009510:	370c      	adds	r7, #12
 8009512:	46bd      	mov	sp, r7
 8009514:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009518:	4770      	bx	lr

0800951a <_ZN8touchgfx17AbstractPartition2atI22temperature_screenViewEERT_t>:
    T& at(const uint16_t index)
 800951a:	b580      	push	{r7, lr}
 800951c:	b082      	sub	sp, #8
 800951e:	af00      	add	r7, sp, #0
 8009520:	6078      	str	r0, [r7, #4]
 8009522:	460b      	mov	r3, r1
 8009524:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009526:	687b      	ldr	r3, [r7, #4]
 8009528:	681b      	ldr	r3, [r3, #0]
 800952a:	3324      	adds	r3, #36	@ 0x24
 800952c:	681b      	ldr	r3, [r3, #0]
 800952e:	887a      	ldrh	r2, [r7, #2]
 8009530:	4611      	mov	r1, r2
 8009532:	6878      	ldr	r0, [r7, #4]
 8009534:	4798      	blx	r3
 8009536:	4603      	mov	r3, r0
    }
 8009538:	4618      	mov	r0, r3
 800953a:	3708      	adds	r7, #8
 800953c:	46bd      	mov	sp, r7
 800953e:	bd80      	pop	{r7, pc}

08009540 <_ZN8touchgfx17AbstractPartition2atI27temperature_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 8009540:	b580      	push	{r7, lr}
 8009542:	b082      	sub	sp, #8
 8009544:	af00      	add	r7, sp, #0
 8009546:	6078      	str	r0, [r7, #4]
 8009548:	460b      	mov	r3, r1
 800954a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800954c:	687b      	ldr	r3, [r7, #4]
 800954e:	681b      	ldr	r3, [r3, #0]
 8009550:	3324      	adds	r3, #36	@ 0x24
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	887a      	ldrh	r2, [r7, #2]
 8009556:	4611      	mov	r1, r2
 8009558:	6878      	ldr	r0, [r7, #4]
 800955a:	4798      	blx	r3
 800955c:	4603      	mov	r3, r0
    }
 800955e:	4618      	mov	r0, r3
 8009560:	3708      	adds	r7, #8
 8009562:	46bd      	mov	sp, r7
 8009564:	bd80      	pop	{r7, pc}

08009566 <_ZN8touchgfx4ViewI27temperature_screenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 8009566:	b480      	push	{r7}
 8009568:	b083      	sub	sp, #12
 800956a:	af00      	add	r7, sp, #0
 800956c:	6078      	str	r0, [r7, #4]
 800956e:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 8009570:	687b      	ldr	r3, [r7, #4]
 8009572:	683a      	ldr	r2, [r7, #0]
 8009574:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009576:	bf00      	nop
 8009578:	370c      	adds	r7, #12
 800957a:	46bd      	mov	sp, r7
 800957c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009580:	4770      	bx	lr

08009582 <_ZN8touchgfx17AbstractPartition2atI16light_screenViewEERT_t>:
    T& at(const uint16_t index)
 8009582:	b580      	push	{r7, lr}
 8009584:	b082      	sub	sp, #8
 8009586:	af00      	add	r7, sp, #0
 8009588:	6078      	str	r0, [r7, #4]
 800958a:	460b      	mov	r3, r1
 800958c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800958e:	687b      	ldr	r3, [r7, #4]
 8009590:	681b      	ldr	r3, [r3, #0]
 8009592:	3324      	adds	r3, #36	@ 0x24
 8009594:	681b      	ldr	r3, [r3, #0]
 8009596:	887a      	ldrh	r2, [r7, #2]
 8009598:	4611      	mov	r1, r2
 800959a:	6878      	ldr	r0, [r7, #4]
 800959c:	4798      	blx	r3
 800959e:	4603      	mov	r3, r0
    }
 80095a0:	4618      	mov	r0, r3
 80095a2:	3708      	adds	r7, #8
 80095a4:	46bd      	mov	sp, r7
 80095a6:	bd80      	pop	{r7, pc}

080095a8 <_ZN8touchgfx17AbstractPartition2atI21light_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 80095a8:	b580      	push	{r7, lr}
 80095aa:	b082      	sub	sp, #8
 80095ac:	af00      	add	r7, sp, #0
 80095ae:	6078      	str	r0, [r7, #4]
 80095b0:	460b      	mov	r3, r1
 80095b2:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80095b4:	687b      	ldr	r3, [r7, #4]
 80095b6:	681b      	ldr	r3, [r3, #0]
 80095b8:	3324      	adds	r3, #36	@ 0x24
 80095ba:	681b      	ldr	r3, [r3, #0]
 80095bc:	887a      	ldrh	r2, [r7, #2]
 80095be:	4611      	mov	r1, r2
 80095c0:	6878      	ldr	r0, [r7, #4]
 80095c2:	4798      	blx	r3
 80095c4:	4603      	mov	r3, r0
    }
 80095c6:	4618      	mov	r0, r3
 80095c8:	3708      	adds	r7, #8
 80095ca:	46bd      	mov	sp, r7
 80095cc:	bd80      	pop	{r7, pc}

080095ce <_ZN8touchgfx4ViewI21light_screenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 80095ce:	b480      	push	{r7}
 80095d0:	b083      	sub	sp, #12
 80095d2:	af00      	add	r7, sp, #0
 80095d4:	6078      	str	r0, [r7, #4]
 80095d6:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 80095d8:	687b      	ldr	r3, [r7, #4]
 80095da:	683a      	ldr	r2, [r7, #0]
 80095dc:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80095de:	bf00      	nop
 80095e0:	370c      	adds	r7, #12
 80095e2:	46bd      	mov	sp, r7
 80095e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095e8:	4770      	bx	lr

080095ea <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 80095ea:	b580      	push	{r7, lr}
 80095ec:	b082      	sub	sp, #8
 80095ee:	af00      	add	r7, sp, #0
 80095f0:	6078      	str	r0, [r7, #4]
 80095f2:	460b      	mov	r3, r1
 80095f4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80095f6:	687b      	ldr	r3, [r7, #4]
 80095f8:	681b      	ldr	r3, [r3, #0]
 80095fa:	3324      	adds	r3, #36	@ 0x24
 80095fc:	681b      	ldr	r3, [r3, #0]
 80095fe:	887a      	ldrh	r2, [r7, #2]
 8009600:	4611      	mov	r1, r2
 8009602:	6878      	ldr	r0, [r7, #4]
 8009604:	4798      	blx	r3
 8009606:	4603      	mov	r3, r0
    }
 8009608:	4618      	mov	r0, r3
 800960a:	3708      	adds	r7, #8
 800960c:	46bd      	mov	sp, r7
 800960e:	bd80      	pop	{r7, pc}

08009610 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 8009610:	b580      	push	{r7, lr}
 8009612:	b082      	sub	sp, #8
 8009614:	af00      	add	r7, sp, #0
 8009616:	6078      	str	r0, [r7, #4]
 8009618:	460b      	mov	r3, r1
 800961a:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800961c:	687b      	ldr	r3, [r7, #4]
 800961e:	681b      	ldr	r3, [r3, #0]
 8009620:	3324      	adds	r3, #36	@ 0x24
 8009622:	681b      	ldr	r3, [r3, #0]
 8009624:	887a      	ldrh	r2, [r7, #2]
 8009626:	4611      	mov	r1, r2
 8009628:	6878      	ldr	r0, [r7, #4]
 800962a:	4798      	blx	r3
 800962c:	4603      	mov	r3, r0
    }
 800962e:	4618      	mov	r0, r3
 8009630:	3708      	adds	r7, #8
 8009632:	46bd      	mov	sp, r7
 8009634:	bd80      	pop	{r7, pc}

08009636 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 8009636:	b480      	push	{r7}
 8009638:	b083      	sub	sp, #12
 800963a:	af00      	add	r7, sp, #0
 800963c:	6078      	str	r0, [r7, #4]
 800963e:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 8009640:	687b      	ldr	r3, [r7, #4]
 8009642:	683a      	ldr	r2, [r7, #0]
 8009644:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009646:	bf00      	nop
 8009648:	370c      	adds	r7, #12
 800964a:	46bd      	mov	sp, r7
 800964c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009650:	4770      	bx	lr
	...

08009654 <_ZN8touchgfx12NoTransitionD1Ev>:
 8009654:	b580      	push	{r7, lr}
 8009656:	b082      	sub	sp, #8
 8009658:	af00      	add	r7, sp, #0
 800965a:	6078      	str	r0, [r7, #4]
 800965c:	4a05      	ldr	r2, [pc, #20]	@ (8009674 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800965e:	687b      	ldr	r3, [r7, #4]
 8009660:	601a      	str	r2, [r3, #0]
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	4618      	mov	r0, r3
 8009666:	f7fe ff6f 	bl	8008548 <_ZN8touchgfx10TransitionD1Ev>
 800966a:	687b      	ldr	r3, [r7, #4]
 800966c:	4618      	mov	r0, r3
 800966e:	3708      	adds	r7, #8
 8009670:	46bd      	mov	sp, r7
 8009672:	bd80      	pop	{r7, pc}
 8009674:	08027fc0 	.word	0x08027fc0

08009678 <_ZN8touchgfx12NoTransitionD0Ev>:
 8009678:	b580      	push	{r7, lr}
 800967a:	b082      	sub	sp, #8
 800967c:	af00      	add	r7, sp, #0
 800967e:	6078      	str	r0, [r7, #4]
 8009680:	6878      	ldr	r0, [r7, #4]
 8009682:	f7ff ffe7 	bl	8009654 <_ZN8touchgfx12NoTransitionD1Ev>
 8009686:	210c      	movs	r1, #12
 8009688:	6878      	ldr	r0, [r7, #4]
 800968a:	f01c f9d2 	bl	8025a32 <_ZdlPvj>
 800968e:	687b      	ldr	r3, [r7, #4]
 8009690:	4618      	mov	r0, r3
 8009692:	3708      	adds	r7, #8
 8009694:	46bd      	mov	sp, r7
 8009696:	bd80      	pop	{r7, pc}

08009698 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009698:	b580      	push	{r7, lr}
 800969a:	b082      	sub	sp, #8
 800969c:	af00      	add	r7, sp, #0
 800969e:	6078      	str	r0, [r7, #4]
 80096a0:	4a05      	ldr	r2, [pc, #20]	@ (80096b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 80096a2:	687b      	ldr	r3, [r7, #4]
 80096a4:	601a      	str	r2, [r3, #0]
 80096a6:	687b      	ldr	r3, [r7, #4]
 80096a8:	4618      	mov	r0, r3
 80096aa:	f7fe feef 	bl	800848c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80096ae:	687b      	ldr	r3, [r7, #4]
 80096b0:	4618      	mov	r0, r3
 80096b2:	3708      	adds	r7, #8
 80096b4:	46bd      	mov	sp, r7
 80096b6:	bd80      	pop	{r7, pc}
 80096b8:	08028038 	.word	0x08028038

080096bc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 80096bc:	b580      	push	{r7, lr}
 80096be:	b082      	sub	sp, #8
 80096c0:	af00      	add	r7, sp, #0
 80096c2:	6078      	str	r0, [r7, #4]
 80096c4:	6878      	ldr	r0, [r7, #4]
 80096c6:	f7ff ffe7 	bl	8009698 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 80096ca:	2110      	movs	r1, #16
 80096cc:	6878      	ldr	r0, [r7, #4]
 80096ce:	f01c f9b0 	bl	8025a32 <_ZdlPvj>
 80096d2:	687b      	ldr	r3, [r7, #4]
 80096d4:	4618      	mov	r0, r3
 80096d6:	3708      	adds	r7, #8
 80096d8:	46bd      	mov	sp, r7
 80096da:	bd80      	pop	{r7, pc}

080096dc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80096dc:	b580      	push	{r7, lr}
 80096de:	b082      	sub	sp, #8
 80096e0:	af00      	add	r7, sp, #0
 80096e2:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 80096e4:	687b      	ldr	r3, [r7, #4]
 80096e6:	685b      	ldr	r3, [r3, #4]
 80096e8:	687a      	ldr	r2, [r7, #4]
 80096ea:	68d2      	ldr	r2, [r2, #12]
 80096ec:	1052      	asrs	r2, r2, #1
 80096ee:	1899      	adds	r1, r3, r2
 80096f0:	687b      	ldr	r3, [r7, #4]
 80096f2:	68db      	ldr	r3, [r3, #12]
 80096f4:	f003 0301 	and.w	r3, r3, #1
 80096f8:	2b00      	cmp	r3, #0
 80096fa:	d102      	bne.n	8009702 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	689b      	ldr	r3, [r3, #8]
 8009700:	e00a      	b.n	8009718 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8009702:	687b      	ldr	r3, [r7, #4]
 8009704:	685b      	ldr	r3, [r3, #4]
 8009706:	687a      	ldr	r2, [r7, #4]
 8009708:	68d2      	ldr	r2, [r2, #12]
 800970a:	1052      	asrs	r2, r2, #1
 800970c:	4413      	add	r3, r2
 800970e:	681b      	ldr	r3, [r3, #0]
 8009710:	687a      	ldr	r2, [r7, #4]
 8009712:	6892      	ldr	r2, [r2, #8]
 8009714:	4413      	add	r3, r2
 8009716:	681b      	ldr	r3, [r3, #0]
 8009718:	4608      	mov	r0, r1
 800971a:	4798      	blx	r3
    }
 800971c:	bf00      	nop
 800971e:	3708      	adds	r7, #8
 8009720:	46bd      	mov	sp, r7
 8009722:	bd80      	pop	{r7, pc}

08009724 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8009724:	b480      	push	{r7}
 8009726:	b083      	sub	sp, #12
 8009728:	af00      	add	r7, sp, #0
 800972a:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800972c:	687b      	ldr	r3, [r7, #4]
 800972e:	685b      	ldr	r3, [r3, #4]
 8009730:	2b00      	cmp	r3, #0
 8009732:	d010      	beq.n	8009756 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009734:	687b      	ldr	r3, [r7, #4]
 8009736:	689b      	ldr	r3, [r3, #8]
 8009738:	2b00      	cmp	r3, #0
 800973a:	d107      	bne.n	800974c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800973c:	687b      	ldr	r3, [r7, #4]
 800973e:	68db      	ldr	r3, [r3, #12]
 8009740:	f003 0301 	and.w	r3, r3, #1
 8009744:	2b00      	cmp	r3, #0
 8009746:	d101      	bne.n	800974c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009748:	2301      	movs	r3, #1
 800974a:	e000      	b.n	800974e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800974c:	2300      	movs	r3, #0
 800974e:	2b01      	cmp	r3, #1
 8009750:	d001      	beq.n	8009756 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009752:	2301      	movs	r3, #1
 8009754:	e000      	b.n	8009758 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8009756:	2300      	movs	r3, #0
    }
 8009758:	4618      	mov	r0, r3
 800975a:	370c      	adds	r7, #12
 800975c:	46bd      	mov	sp, r7
 800975e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009762:	4770      	bx	lr

08009764 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 8009764:	b480      	push	{r7}
 8009766:	b083      	sub	sp, #12
 8009768:	af00      	add	r7, sp, #0
 800976a:	6078      	str	r0, [r7, #4]
        : color(0)
 800976c:	687b      	ldr	r3, [r7, #4]
 800976e:	2200      	movs	r2, #0
 8009770:	601a      	str	r2, [r3, #0]
    {
    }
 8009772:	687b      	ldr	r3, [r7, #4]
 8009774:	4618      	mov	r0, r3
 8009776:	370c      	adds	r7, #12
 8009778:	46bd      	mov	sp, r7
 800977a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800977e:	4770      	bx	lr

08009780 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8009780:	b480      	push	{r7}
 8009782:	b083      	sub	sp, #12
 8009784:	af00      	add	r7, sp, #0
 8009786:	6078      	str	r0, [r7, #4]
 8009788:	6039      	str	r1, [r7, #0]
        : color(col)
 800978a:	687b      	ldr	r3, [r7, #4]
 800978c:	683a      	ldr	r2, [r7, #0]
 800978e:	601a      	str	r2, [r3, #0]
    {
    }
 8009790:	687b      	ldr	r3, [r7, #4]
 8009792:	4618      	mov	r0, r3
 8009794:	370c      	adds	r7, #12
 8009796:	46bd      	mov	sp, r7
 8009798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800979c:	4770      	bx	lr

0800979e <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800979e:	b480      	push	{r7}
 80097a0:	b083      	sub	sp, #12
 80097a2:	af00      	add	r7, sp, #0
 80097a4:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	2200      	movs	r2, #0
 80097aa:	801a      	strh	r2, [r3, #0]
 80097ac:	687b      	ldr	r3, [r7, #4]
 80097ae:	2200      	movs	r2, #0
 80097b0:	805a      	strh	r2, [r3, #2]
 80097b2:	687b      	ldr	r3, [r7, #4]
 80097b4:	2200      	movs	r2, #0
 80097b6:	809a      	strh	r2, [r3, #4]
 80097b8:	687b      	ldr	r3, [r7, #4]
 80097ba:	2200      	movs	r2, #0
 80097bc:	80da      	strh	r2, [r3, #6]
    {
    }
 80097be:	687b      	ldr	r3, [r7, #4]
 80097c0:	4618      	mov	r0, r3
 80097c2:	370c      	adds	r7, #12
 80097c4:	46bd      	mov	sp, r7
 80097c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097ca:	4770      	bx	lr

080097cc <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 80097cc:	b480      	push	{r7}
 80097ce:	b085      	sub	sp, #20
 80097d0:	af00      	add	r7, sp, #0
 80097d2:	60f8      	str	r0, [r7, #12]
 80097d4:	4608      	mov	r0, r1
 80097d6:	4611      	mov	r1, r2
 80097d8:	461a      	mov	r2, r3
 80097da:	4603      	mov	r3, r0
 80097dc:	817b      	strh	r3, [r7, #10]
 80097de:	460b      	mov	r3, r1
 80097e0:	813b      	strh	r3, [r7, #8]
 80097e2:	4613      	mov	r3, r2
 80097e4:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80097e6:	68fb      	ldr	r3, [r7, #12]
 80097e8:	897a      	ldrh	r2, [r7, #10]
 80097ea:	801a      	strh	r2, [r3, #0]
 80097ec:	68fb      	ldr	r3, [r7, #12]
 80097ee:	893a      	ldrh	r2, [r7, #8]
 80097f0:	805a      	strh	r2, [r3, #2]
 80097f2:	68fb      	ldr	r3, [r7, #12]
 80097f4:	88fa      	ldrh	r2, [r7, #6]
 80097f6:	809a      	strh	r2, [r3, #4]
 80097f8:	68fb      	ldr	r3, [r7, #12]
 80097fa:	8b3a      	ldrh	r2, [r7, #24]
 80097fc:	80da      	strh	r2, [r3, #6]
    {
    }
 80097fe:	68fb      	ldr	r3, [r7, #12]
 8009800:	4618      	mov	r0, r3
 8009802:	3714      	adds	r7, #20
 8009804:	46bd      	mov	sp, r7
 8009806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800980a:	4770      	bx	lr

0800980c <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800980c:	b480      	push	{r7}
 800980e:	b083      	sub	sp, #12
 8009810:	af00      	add	r7, sp, #0
 8009812:	6078      	str	r0, [r7, #4]
 8009814:	460b      	mov	r3, r1
 8009816:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009818:	687b      	ldr	r3, [r7, #4]
 800981a:	887a      	ldrh	r2, [r7, #2]
 800981c:	801a      	strh	r2, [r3, #0]
    {
    }
 800981e:	687b      	ldr	r3, [r7, #4]
 8009820:	4618      	mov	r0, r3
 8009822:	370c      	adds	r7, #12
 8009824:	46bd      	mov	sp, r7
 8009826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800982a:	4770      	bx	lr

0800982c <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800982c:	b480      	push	{r7}
 800982e:	b083      	sub	sp, #12
 8009830:	af00      	add	r7, sp, #0
 8009832:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 8009834:	687b      	ldr	r3, [r7, #4]
 8009836:	791b      	ldrb	r3, [r3, #4]
    }
 8009838:	4618      	mov	r0, r3
 800983a:	370c      	adds	r7, #12
 800983c:	46bd      	mov	sp, r7
 800983e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009842:	4770      	bx	lr

08009844 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8009844:	b580      	push	{r7, lr}
 8009846:	b082      	sub	sp, #8
 8009848:	af00      	add	r7, sp, #0
 800984a:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800984c:	4a14      	ldr	r2, [pc, #80]	@ (80098a0 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800984e:	687b      	ldr	r3, [r7, #4]
 8009850:	601a      	str	r2, [r3, #0]
        : rect(),
 8009852:	687b      	ldr	r3, [r7, #4]
 8009854:	3304      	adds	r3, #4
 8009856:	4618      	mov	r0, r3
 8009858:	f7ff ffa1 	bl	800979e <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	330c      	adds	r3, #12
 8009860:	4618      	mov	r0, r3
 8009862:	f7ff ff9c 	bl	800979e <_ZN8touchgfx4RectC1Ev>
          parent(0),
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	2200      	movs	r2, #0
 800986a:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800986c:	687b      	ldr	r3, [r7, #4]
 800986e:	2200      	movs	r2, #0
 8009870:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8009872:	687b      	ldr	r3, [r7, #4]
 8009874:	2200      	movs	r2, #0
 8009876:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8009878:	687b      	ldr	r3, [r7, #4]
 800987a:	2200      	movs	r2, #0
 800987c:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800987e:	687b      	ldr	r3, [r7, #4]
 8009880:	2200      	movs	r2, #0
 8009882:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 8009884:	687b      	ldr	r3, [r7, #4]
 8009886:	2200      	movs	r2, #0
 8009888:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	2201      	movs	r2, #1
 8009890:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	4618      	mov	r0, r3
 8009898:	3708      	adds	r7, #8
 800989a:	46bd      	mov	sp, r7
 800989c:	bd80      	pop	{r7, pc}
 800989e:	bf00      	nop
 80098a0:	08029430 	.word	0x08029430

080098a4 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 80098a4:	b480      	push	{r7}
 80098a6:	b083      	sub	sp, #12
 80098a8:	af00      	add	r7, sp, #0
 80098aa:	6078      	str	r0, [r7, #4]
    {
 80098ac:	4a04      	ldr	r2, [pc, #16]	@ (80098c0 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 80098ae:	687b      	ldr	r3, [r7, #4]
 80098b0:	601a      	str	r2, [r3, #0]
    }
 80098b2:	687b      	ldr	r3, [r7, #4]
 80098b4:	4618      	mov	r0, r3
 80098b6:	370c      	adds	r7, #12
 80098b8:	46bd      	mov	sp, r7
 80098ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098be:	4770      	bx	lr
 80098c0:	08029430 	.word	0x08029430

080098c4 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 80098c4:	b580      	push	{r7, lr}
 80098c6:	b082      	sub	sp, #8
 80098c8:	af00      	add	r7, sp, #0
 80098ca:	6078      	str	r0, [r7, #4]
    }
 80098cc:	6878      	ldr	r0, [r7, #4]
 80098ce:	f7ff ffe9 	bl	80098a4 <_ZN8touchgfx8DrawableD1Ev>
 80098d2:	2128      	movs	r1, #40	@ 0x28
 80098d4:	6878      	ldr	r0, [r7, #4]
 80098d6:	f01c f8ac 	bl	8025a32 <_ZdlPvj>
 80098da:	687b      	ldr	r3, [r7, #4]
 80098dc:	4618      	mov	r0, r3
 80098de:	3708      	adds	r7, #8
 80098e0:	46bd      	mov	sp, r7
 80098e2:	bd80      	pop	{r7, pc}

080098e4 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 80098e4:	b580      	push	{r7, lr}
 80098e6:	b082      	sub	sp, #8
 80098e8:	af00      	add	r7, sp, #0
 80098ea:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 80098ec:	687b      	ldr	r3, [r7, #4]
 80098ee:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 80098f2:	2b00      	cmp	r3, #0
 80098f4:	d005      	beq.n	8009902 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 80098f6:	687b      	ldr	r3, [r7, #4]
 80098f8:	681b      	ldr	r3, [r3, #0]
 80098fa:	3314      	adds	r3, #20
 80098fc:	681b      	ldr	r3, [r3, #0]
 80098fe:	6878      	ldr	r0, [r7, #4]
 8009900:	4798      	blx	r3
        }
    }
 8009902:	bf00      	nop
 8009904:	3708      	adds	r7, #8
 8009906:	46bd      	mov	sp, r7
 8009908:	bd80      	pop	{r7, pc}

0800990a <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800990a:	b480      	push	{r7}
 800990c:	b083      	sub	sp, #12
 800990e:	af00      	add	r7, sp, #0
 8009910:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009912:	2300      	movs	r3, #0
    }
 8009914:	4618      	mov	r0, r3
 8009916:	370c      	adds	r7, #12
 8009918:	46bd      	mov	sp, r7
 800991a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991e:	4770      	bx	lr

08009920 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009920:	b580      	push	{r7, lr}
 8009922:	b084      	sub	sp, #16
 8009924:	af00      	add	r7, sp, #0
 8009926:	60f8      	str	r0, [r7, #12]
 8009928:	4608      	mov	r0, r1
 800992a:	4611      	mov	r1, r2
 800992c:	461a      	mov	r2, r3
 800992e:	4603      	mov	r3, r0
 8009930:	817b      	strh	r3, [r7, #10]
 8009932:	460b      	mov	r3, r1
 8009934:	813b      	strh	r3, [r7, #8]
 8009936:	4613      	mov	r3, r2
 8009938:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800993a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800993e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8009942:	4619      	mov	r1, r3
 8009944:	68f8      	ldr	r0, [r7, #12]
 8009946:	f000 f82a 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800994a:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800994e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8009952:	4619      	mov	r1, r3
 8009954:	68f8      	ldr	r0, [r7, #12]
 8009956:	f000 f87e 	bl	8009a56 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800995a:	bf00      	nop
 800995c:	3710      	adds	r7, #16
 800995e:	46bd      	mov	sp, r7
 8009960:	bd80      	pop	{r7, pc}

08009962 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8009962:	b480      	push	{r7}
 8009964:	b083      	sub	sp, #12
 8009966:	af00      	add	r7, sp, #0
 8009968:	6078      	str	r0, [r7, #4]
 800996a:	460b      	mov	r3, r1
 800996c:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	887a      	ldrh	r2, [r7, #2]
 8009972:	809a      	strh	r2, [r3, #4]
    }
 8009974:	bf00      	nop
 8009976:	370c      	adds	r7, #12
 8009978:	46bd      	mov	sp, r7
 800997a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800997e:	4770      	bx	lr

08009980 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8009980:	b480      	push	{r7}
 8009982:	b083      	sub	sp, #12
 8009984:	af00      	add	r7, sp, #0
 8009986:	6078      	str	r0, [r7, #4]
 8009988:	460b      	mov	r3, r1
 800998a:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800998c:	687b      	ldr	r3, [r7, #4]
 800998e:	887a      	ldrh	r2, [r7, #2]
 8009990:	80da      	strh	r2, [r3, #6]
    }
 8009992:	bf00      	nop
 8009994:	370c      	adds	r7, #12
 8009996:	46bd      	mov	sp, r7
 8009998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800999c:	4770      	bx	lr

0800999e <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800999e:	b580      	push	{r7, lr}
 80099a0:	b082      	sub	sp, #8
 80099a2:	af00      	add	r7, sp, #0
 80099a4:	6078      	str	r0, [r7, #4]
 80099a6:	460b      	mov	r3, r1
 80099a8:	807b      	strh	r3, [r7, #2]
 80099aa:	4613      	mov	r3, r2
 80099ac:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 80099ae:	687b      	ldr	r3, [r7, #4]
 80099b0:	681b      	ldr	r3, [r3, #0]
 80099b2:	3330      	adds	r3, #48	@ 0x30
 80099b4:	681b      	ldr	r3, [r3, #0]
 80099b6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80099ba:	4611      	mov	r1, r2
 80099bc:	6878      	ldr	r0, [r7, #4]
 80099be:	4798      	blx	r3
        setY(y);
 80099c0:	687b      	ldr	r3, [r7, #4]
 80099c2:	681b      	ldr	r3, [r3, #0]
 80099c4:	3334      	adds	r3, #52	@ 0x34
 80099c6:	681b      	ldr	r3, [r3, #0]
 80099c8:	f9b7 2000 	ldrsh.w	r2, [r7]
 80099cc:	4611      	mov	r1, r2
 80099ce:	6878      	ldr	r0, [r7, #4]
 80099d0:	4798      	blx	r3
    }
 80099d2:	bf00      	nop
 80099d4:	3708      	adds	r7, #8
 80099d6:	46bd      	mov	sp, r7
 80099d8:	bd80      	pop	{r7, pc}

080099da <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 80099da:	b480      	push	{r7}
 80099dc:	b083      	sub	sp, #12
 80099de:	af00      	add	r7, sp, #0
 80099e0:	6078      	str	r0, [r7, #4]
 80099e2:	460b      	mov	r3, r1
 80099e4:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 80099e6:	687b      	ldr	r3, [r7, #4]
 80099e8:	887a      	ldrh	r2, [r7, #2]
 80099ea:	811a      	strh	r2, [r3, #8]
    }
 80099ec:	bf00      	nop
 80099ee:	370c      	adds	r7, #12
 80099f0:	46bd      	mov	sp, r7
 80099f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099f6:	4770      	bx	lr

080099f8 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 80099f8:	b480      	push	{r7}
 80099fa:	b083      	sub	sp, #12
 80099fc:	af00      	add	r7, sp, #0
 80099fe:	6078      	str	r0, [r7, #4]
 8009a00:	460b      	mov	r3, r1
 8009a02:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009a04:	687b      	ldr	r3, [r7, #4]
 8009a06:	887a      	ldrh	r2, [r7, #2]
 8009a08:	815a      	strh	r2, [r3, #10]
    }
 8009a0a:	bf00      	nop
 8009a0c:	370c      	adds	r7, #12
 8009a0e:	46bd      	mov	sp, r7
 8009a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a14:	4770      	bx	lr

08009a16 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8009a16:	b480      	push	{r7}
 8009a18:	b083      	sub	sp, #12
 8009a1a:	af00      	add	r7, sp, #0
 8009a1c:	6078      	str	r0, [r7, #4]
    {
    }
 8009a1e:	bf00      	nop
 8009a20:	370c      	adds	r7, #12
 8009a22:	46bd      	mov	sp, r7
 8009a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a28:	4770      	bx	lr

08009a2a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009a2a:	b480      	push	{r7}
 8009a2c:	b083      	sub	sp, #12
 8009a2e:	af00      	add	r7, sp, #0
 8009a30:	6078      	str	r0, [r7, #4]
 8009a32:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009a34:	bf00      	nop
 8009a36:	370c      	adds	r7, #12
 8009a38:	46bd      	mov	sp, r7
 8009a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a3e:	4770      	bx	lr

08009a40 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009a40:	b480      	push	{r7}
 8009a42:	b083      	sub	sp, #12
 8009a44:	af00      	add	r7, sp, #0
 8009a46:	6078      	str	r0, [r7, #4]
 8009a48:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009a4a:	bf00      	nop
 8009a4c:	370c      	adds	r7, #12
 8009a4e:	46bd      	mov	sp, r7
 8009a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a54:	4770      	bx	lr

08009a56 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8009a56:	b580      	push	{r7, lr}
 8009a58:	b082      	sub	sp, #8
 8009a5a:	af00      	add	r7, sp, #0
 8009a5c:	6078      	str	r0, [r7, #4]
 8009a5e:	460b      	mov	r3, r1
 8009a60:	807b      	strh	r3, [r7, #2]
 8009a62:	4613      	mov	r3, r2
 8009a64:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	681b      	ldr	r3, [r3, #0]
 8009a6a:	3338      	adds	r3, #56	@ 0x38
 8009a6c:	681b      	ldr	r3, [r3, #0]
 8009a6e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009a72:	4611      	mov	r1, r2
 8009a74:	6878      	ldr	r0, [r7, #4]
 8009a76:	4798      	blx	r3
        setHeight(height);
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	681b      	ldr	r3, [r3, #0]
 8009a7c:	333c      	adds	r3, #60	@ 0x3c
 8009a7e:	681b      	ldr	r3, [r3, #0]
 8009a80:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009a84:	4611      	mov	r1, r2
 8009a86:	6878      	ldr	r0, [r7, #4]
 8009a88:	4798      	blx	r3
    }
 8009a8a:	bf00      	nop
 8009a8c:	3708      	adds	r7, #8
 8009a8e:	46bd      	mov	sp, r7
 8009a90:	bd80      	pop	{r7, pc}

08009a92 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009a92:	b480      	push	{r7}
 8009a94:	b083      	sub	sp, #12
 8009a96:	af00      	add	r7, sp, #0
 8009a98:	6078      	str	r0, [r7, #4]
 8009a9a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009a9c:	bf00      	nop
 8009a9e:	370c      	adds	r7, #12
 8009aa0:	46bd      	mov	sp, r7
 8009aa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aa6:	4770      	bx	lr

08009aa8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8009aa8:	b480      	push	{r7}
 8009aaa:	b083      	sub	sp, #12
 8009aac:	af00      	add	r7, sp, #0
 8009aae:	6078      	str	r0, [r7, #4]
    {
    }
 8009ab0:	bf00      	nop
 8009ab2:	370c      	adds	r7, #12
 8009ab4:	46bd      	mov	sp, r7
 8009ab6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aba:	4770      	bx	lr

08009abc <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 8009abc:	b480      	push	{r7}
 8009abe:	b083      	sub	sp, #12
 8009ac0:	af00      	add	r7, sp, #0
 8009ac2:	6078      	str	r0, [r7, #4]
 8009ac4:	460b      	mov	r3, r1
 8009ac6:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 8009ac8:	687b      	ldr	r3, [r7, #4]
 8009aca:	78fa      	ldrb	r2, [r7, #3]
 8009acc:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 8009ad0:	bf00      	nop
 8009ad2:	370c      	adds	r7, #12
 8009ad4:	46bd      	mov	sp, r7
 8009ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ada:	4770      	bx	lr

08009adc <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009adc:	b480      	push	{r7}
 8009ade:	b083      	sub	sp, #12
 8009ae0:	af00      	add	r7, sp, #0
 8009ae2:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009ae4:	687b      	ldr	r3, [r7, #4]
 8009ae6:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 8009aea:	4618      	mov	r0, r3
 8009aec:	370c      	adds	r7, #12
 8009aee:	46bd      	mov	sp, r7
 8009af0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af4:	4770      	bx	lr

08009af6 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009af6:	b480      	push	{r7}
 8009af8:	b083      	sub	sp, #12
 8009afa:	af00      	add	r7, sp, #0
 8009afc:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009afe:	687b      	ldr	r3, [r7, #4]
 8009b00:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8009b04:	4618      	mov	r0, r3
 8009b06:	370c      	adds	r7, #12
 8009b08:	46bd      	mov	sp, r7
 8009b0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b0e:	4770      	bx	lr

08009b10 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009b10:	b580      	push	{r7, lr}
 8009b12:	b082      	sub	sp, #8
 8009b14:	af00      	add	r7, sp, #0
 8009b16:	6078      	str	r0, [r7, #4]
 8009b18:	460b      	mov	r3, r1
 8009b1a:	807b      	strh	r3, [r7, #2]
 8009b1c:	4613      	mov	r3, r2
 8009b1e:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009b20:	687b      	ldr	r3, [r7, #4]
 8009b22:	681b      	ldr	r3, [r3, #0]
 8009b24:	3354      	adds	r3, #84	@ 0x54
 8009b26:	681b      	ldr	r3, [r3, #0]
 8009b28:	8879      	ldrh	r1, [r7, #2]
 8009b2a:	687a      	ldr	r2, [r7, #4]
 8009b2c:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009b30:	b292      	uxth	r2, r2
 8009b32:	1a8a      	subs	r2, r1, r2
 8009b34:	b292      	uxth	r2, r2
 8009b36:	b210      	sxth	r0, r2
 8009b38:	8839      	ldrh	r1, [r7, #0]
 8009b3a:	687a      	ldr	r2, [r7, #4]
 8009b3c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009b40:	b292      	uxth	r2, r2
 8009b42:	1a8a      	subs	r2, r1, r2
 8009b44:	b292      	uxth	r2, r2
 8009b46:	b212      	sxth	r2, r2
 8009b48:	4601      	mov	r1, r0
 8009b4a:	6878      	ldr	r0, [r7, #4]
 8009b4c:	4798      	blx	r3
    }
 8009b4e:	bf00      	nop
 8009b50:	3708      	adds	r7, #8
 8009b52:	46bd      	mov	sp, r7
 8009b54:	bd80      	pop	{r7, pc}

08009b56 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009b56:	b480      	push	{r7}
 8009b58:	b083      	sub	sp, #12
 8009b5a:	af00      	add	r7, sp, #0
 8009b5c:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009b64:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009b6c:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009b6e:	687b      	ldr	r3, [r7, #4]
 8009b70:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009b74:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 8009b76:	bf00      	nop
 8009b78:	370c      	adds	r7, #12
 8009b7a:	46bd      	mov	sp, r7
 8009b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b80:	4770      	bx	lr

08009b82 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009b82:	b580      	push	{r7, lr}
 8009b84:	b084      	sub	sp, #16
 8009b86:	af00      	add	r7, sp, #0
 8009b88:	60f8      	str	r0, [r7, #12]
 8009b8a:	60b9      	str	r1, [r7, #8]
 8009b8c:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 8009b8e:	68f8      	ldr	r0, [r7, #12]
 8009b90:	f7ff ffe1 	bl	8009b56 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	681a      	ldr	r2, [r3, #0]
 8009b98:	68fb      	ldr	r3, [r7, #12]
 8009b9a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009b9c:	687b      	ldr	r3, [r7, #4]
 8009b9e:	68fa      	ldr	r2, [r7, #12]
 8009ba0:	601a      	str	r2, [r3, #0]
    }
 8009ba2:	bf00      	nop
 8009ba4:	3710      	adds	r7, #16
 8009ba6:	46bd      	mov	sp, r7
 8009ba8:	bd80      	pop	{r7, pc}

08009baa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 8009baa:	b580      	push	{r7, lr}
 8009bac:	b084      	sub	sp, #16
 8009bae:	af00      	add	r7, sp, #0
 8009bb0:	60f8      	str	r0, [r7, #12]
 8009bb2:	607b      	str	r3, [r7, #4]
 8009bb4:	460b      	mov	r3, r1
 8009bb6:	817b      	strh	r3, [r7, #10]
 8009bb8:	4613      	mov	r3, r2
 8009bba:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8009bbc:	68fb      	ldr	r3, [r7, #12]
 8009bbe:	4618      	mov	r0, r3
 8009bc0:	f7ff ff8c 	bl	8009adc <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009bc4:	4603      	mov	r3, r0
 8009bc6:	2b00      	cmp	r3, #0
 8009bc8:	d008      	beq.n	8009bdc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009bca:	68fb      	ldr	r3, [r7, #12]
 8009bcc:	4618      	mov	r0, r3
 8009bce:	f7ff ff92 	bl	8009af6 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009bd2:	4603      	mov	r3, r0
 8009bd4:	2b00      	cmp	r3, #0
 8009bd6:	d001      	beq.n	8009bdc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009bd8:	2301      	movs	r3, #1
 8009bda:	e000      	b.n	8009bde <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8009bdc:	2300      	movs	r3, #0
 8009bde:	2b00      	cmp	r3, #0
 8009be0:	d002      	beq.n	8009be8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009be2:	68fa      	ldr	r2, [r7, #12]
 8009be4:	687b      	ldr	r3, [r7, #4]
 8009be6:	601a      	str	r2, [r3, #0]
        }
    }
 8009be8:	bf00      	nop
 8009bea:	3710      	adds	r7, #16
 8009bec:	46bd      	mov	sp, r7
 8009bee:	bd80      	pop	{r7, pc}

08009bf0 <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 8009bf0:	b580      	push	{r7, lr}
 8009bf2:	b082      	sub	sp, #8
 8009bf4:	af00      	add	r7, sp, #0
 8009bf6:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 8009bf8:	687b      	ldr	r3, [r7, #4]
 8009bfa:	4618      	mov	r0, r3
 8009bfc:	f7ff fe22 	bl	8009844 <_ZN8touchgfx8DrawableC1Ev>
 8009c00:	4a05      	ldr	r2, [pc, #20]	@ (8009c18 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 8009c02:	687b      	ldr	r3, [r7, #4]
 8009c04:	601a      	str	r2, [r3, #0]
 8009c06:	687b      	ldr	r3, [r7, #4]
 8009c08:	2200      	movs	r2, #0
 8009c0a:	629a      	str	r2, [r3, #40]	@ 0x28
    {
    }
 8009c0c:	687b      	ldr	r3, [r7, #4]
 8009c0e:	4618      	mov	r0, r3
 8009c10:	3708      	adds	r7, #8
 8009c12:	46bd      	mov	sp, r7
 8009c14:	bd80      	pop	{r7, pc}
 8009c16:	bf00      	nop
 8009c18:	08028ddc 	.word	0x08028ddc

08009c1c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 8009c1c:	b480      	push	{r7}
 8009c1e:	b083      	sub	sp, #12
 8009c20:	af00      	add	r7, sp, #0
 8009c22:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 8009c24:	687b      	ldr	r3, [r7, #4]
 8009c26:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8009c28:	4618      	mov	r0, r3
 8009c2a:	370c      	adds	r7, #12
 8009c2c:	46bd      	mov	sp, r7
 8009c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c32:	4770      	bx	lr

08009c34 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8009c34:	b580      	push	{r7, lr}
 8009c36:	b082      	sub	sp, #8
 8009c38:	af00      	add	r7, sp, #0
 8009c3a:	6078      	str	r0, [r7, #4]
    {
 8009c3c:	4a06      	ldr	r2, [pc, #24]	@ (8009c58 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009c3e:	687b      	ldr	r3, [r7, #4]
 8009c40:	601a      	str	r2, [r3, #0]
    }
 8009c42:	687b      	ldr	r3, [r7, #4]
 8009c44:	3304      	adds	r3, #4
 8009c46:	4618      	mov	r0, r3
 8009c48:	f000 fa26 	bl	800a098 <_ZN8touchgfx9ContainerD1Ev>
 8009c4c:	687b      	ldr	r3, [r7, #4]
 8009c4e:	4618      	mov	r0, r3
 8009c50:	3708      	adds	r7, #8
 8009c52:	46bd      	mov	sp, r7
 8009c54:	bd80      	pop	{r7, pc}
 8009c56:	bf00      	nop
 8009c58:	0802953c 	.word	0x0802953c

08009c5c <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8009c5c:	b580      	push	{r7, lr}
 8009c5e:	b082      	sub	sp, #8
 8009c60:	af00      	add	r7, sp, #0
 8009c62:	6078      	str	r0, [r7, #4]
    }
 8009c64:	6878      	ldr	r0, [r7, #4]
 8009c66:	f7ff ffe5 	bl	8009c34 <_ZN8touchgfx6ScreenD1Ev>
 8009c6a:	213c      	movs	r1, #60	@ 0x3c
 8009c6c:	6878      	ldr	r0, [r7, #4]
 8009c6e:	f01b fee0 	bl	8025a32 <_ZdlPvj>
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	4618      	mov	r0, r3
 8009c76:	3708      	adds	r7, #8
 8009c78:	46bd      	mov	sp, r7
 8009c7a:	bd80      	pop	{r7, pc}

08009c7c <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 8009c7c:	b480      	push	{r7}
 8009c7e:	b083      	sub	sp, #12
 8009c80:	af00      	add	r7, sp, #0
 8009c82:	6078      	str	r0, [r7, #4]
    {
    }
 8009c84:	bf00      	nop
 8009c86:	370c      	adds	r7, #12
 8009c88:	46bd      	mov	sp, r7
 8009c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c8e:	4770      	bx	lr

08009c90 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 8009c90:	b480      	push	{r7}
 8009c92:	b083      	sub	sp, #12
 8009c94:	af00      	add	r7, sp, #0
 8009c96:	6078      	str	r0, [r7, #4]
    {
    }
 8009c98:	bf00      	nop
 8009c9a:	370c      	adds	r7, #12
 8009c9c:	46bd      	mov	sp, r7
 8009c9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ca2:	4770      	bx	lr

08009ca4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8009ca4:	b480      	push	{r7}
 8009ca6:	b083      	sub	sp, #12
 8009ca8:	af00      	add	r7, sp, #0
 8009caa:	6078      	str	r0, [r7, #4]
    {
    }
 8009cac:	bf00      	nop
 8009cae:	370c      	adds	r7, #12
 8009cb0:	46bd      	mov	sp, r7
 8009cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cb6:	4770      	bx	lr

08009cb8 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8009cb8:	b480      	push	{r7}
 8009cba:	b083      	sub	sp, #12
 8009cbc:	af00      	add	r7, sp, #0
 8009cbe:	6078      	str	r0, [r7, #4]
    {
    }
 8009cc0:	bf00      	nop
 8009cc2:	370c      	adds	r7, #12
 8009cc4:	46bd      	mov	sp, r7
 8009cc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cca:	4770      	bx	lr

08009ccc <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009ccc:	b480      	push	{r7}
 8009cce:	b083      	sub	sp, #12
 8009cd0:	af00      	add	r7, sp, #0
 8009cd2:	6078      	str	r0, [r7, #4]
 8009cd4:	460b      	mov	r3, r1
 8009cd6:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8009cd8:	bf00      	nop
 8009cda:	370c      	adds	r7, #12
 8009cdc:	46bd      	mov	sp, r7
 8009cde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ce2:	4770      	bx	lr

08009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8009ce4:	b580      	push	{r7, lr}
 8009ce6:	b082      	sub	sp, #8
 8009ce8:	af00      	add	r7, sp, #0
 8009cea:	6078      	str	r0, [r7, #4]
 8009cec:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8009cee:	687b      	ldr	r3, [r7, #4]
 8009cf0:	3304      	adds	r3, #4
 8009cf2:	6839      	ldr	r1, [r7, #0]
 8009cf4:	4618      	mov	r0, r3
 8009cf6:	f006 fc73 	bl	80105e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009cfa:	bf00      	nop
 8009cfc:	3708      	adds	r7, #8
 8009cfe:	46bd      	mov	sp, r7
 8009d00:	bd80      	pop	{r7, pc}
	...

08009d04 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8009d04:	b580      	push	{r7, lr}
 8009d06:	b082      	sub	sp, #8
 8009d08:	af00      	add	r7, sp, #0
 8009d0a:	6078      	str	r0, [r7, #4]
 8009d0c:	687b      	ldr	r3, [r7, #4]
 8009d0e:	4618      	mov	r0, r3
 8009d10:	f7ff fd98 	bl	8009844 <_ZN8touchgfx8DrawableC1Ev>
 8009d14:	4a03      	ldr	r2, [pc, #12]	@ (8009d24 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009d16:	687b      	ldr	r3, [r7, #4]
 8009d18:	601a      	str	r2, [r3, #0]
 8009d1a:	687b      	ldr	r3, [r7, #4]
 8009d1c:	4618      	mov	r0, r3
 8009d1e:	3708      	adds	r7, #8
 8009d20:	46bd      	mov	sp, r7
 8009d22:	bd80      	pop	{r7, pc}
 8009d24:	0802843c 	.word	0x0802843c

08009d28 <_ZN8touchgfx6WidgetD1Ev>:
 8009d28:	b580      	push	{r7, lr}
 8009d2a:	b082      	sub	sp, #8
 8009d2c:	af00      	add	r7, sp, #0
 8009d2e:	6078      	str	r0, [r7, #4]
 8009d30:	4a05      	ldr	r2, [pc, #20]	@ (8009d48 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009d32:	687b      	ldr	r3, [r7, #4]
 8009d34:	601a      	str	r2, [r3, #0]
 8009d36:	687b      	ldr	r3, [r7, #4]
 8009d38:	4618      	mov	r0, r3
 8009d3a:	f7ff fdb3 	bl	80098a4 <_ZN8touchgfx8DrawableD1Ev>
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	4618      	mov	r0, r3
 8009d42:	3708      	adds	r7, #8
 8009d44:	46bd      	mov	sp, r7
 8009d46:	bd80      	pop	{r7, pc}
 8009d48:	0802843c 	.word	0x0802843c

08009d4c <_ZN8touchgfx6WidgetD0Ev>:
 8009d4c:	b580      	push	{r7, lr}
 8009d4e:	b082      	sub	sp, #8
 8009d50:	af00      	add	r7, sp, #0
 8009d52:	6078      	str	r0, [r7, #4]
 8009d54:	6878      	ldr	r0, [r7, #4]
 8009d56:	f7ff ffe7 	bl	8009d28 <_ZN8touchgfx6WidgetD1Ev>
 8009d5a:	2128      	movs	r1, #40	@ 0x28
 8009d5c:	6878      	ldr	r0, [r7, #4]
 8009d5e:	f01b fe68 	bl	8025a32 <_ZdlPvj>
 8009d62:	687b      	ldr	r3, [r7, #4]
 8009d64:	4618      	mov	r0, r3
 8009d66:	3708      	adds	r7, #8
 8009d68:	46bd      	mov	sp, r7
 8009d6a:	bd80      	pop	{r7, pc}

08009d6c <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 8009d6c:	b580      	push	{r7, lr}
 8009d6e:	b082      	sub	sp, #8
 8009d70:	af00      	add	r7, sp, #0
 8009d72:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	4618      	mov	r0, r3
 8009d78:	2326      	movs	r3, #38	@ 0x26
 8009d7a:	461a      	mov	r2, r3
 8009d7c:	2100      	movs	r1, #0
 8009d7e:	f01c f90e 	bl	8025f9e <memset>
 8009d82:	687b      	ldr	r3, [r7, #4]
 8009d84:	4618      	mov	r0, r3
 8009d86:	f7ff ffbd 	bl	8009d04 <_ZN8touchgfx6WidgetC1Ev>
 8009d8a:	4a09      	ldr	r2, [pc, #36]	@ (8009db0 <_ZN8touchgfx3BoxC1Ev+0x44>)
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	601a      	str	r2, [r3, #0]
 8009d90:	687b      	ldr	r3, [r7, #4]
 8009d92:	22ff      	movs	r2, #255	@ 0xff
 8009d94:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	3328      	adds	r3, #40	@ 0x28
 8009d9c:	2100      	movs	r1, #0
 8009d9e:	4618      	mov	r0, r3
 8009da0:	f7ff fcee 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8009da4:	687b      	ldr	r3, [r7, #4]
 8009da6:	4618      	mov	r0, r3
 8009da8:	3708      	adds	r7, #8
 8009daa:	46bd      	mov	sp, r7
 8009dac:	bd80      	pop	{r7, pc}
 8009dae:	bf00      	nop
 8009db0:	08029138 	.word	0x08029138

08009db4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 8009db4:	b480      	push	{r7}
 8009db6:	b083      	sub	sp, #12
 8009db8:	af00      	add	r7, sp, #0
 8009dba:	6078      	str	r0, [r7, #4]
 8009dbc:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 8009dbe:	687b      	ldr	r3, [r7, #4]
 8009dc0:	683a      	ldr	r2, [r7, #0]
 8009dc2:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 8009dc4:	bf00      	nop
 8009dc6:	370c      	adds	r7, #12
 8009dc8:	46bd      	mov	sp, r7
 8009dca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dce:	4770      	bx	lr

08009dd0 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 8009dd0:	b480      	push	{r7}
 8009dd2:	b083      	sub	sp, #12
 8009dd4:	af00      	add	r7, sp, #0
 8009dd6:	6078      	str	r0, [r7, #4]
 8009dd8:	460b      	mov	r3, r1
 8009dda:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	78fa      	ldrb	r2, [r7, #3]
 8009de0:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
    }
 8009de4:	bf00      	nop
 8009de6:	370c      	adds	r7, #12
 8009de8:	46bd      	mov	sp, r7
 8009dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dee:	4770      	bx	lr

08009df0 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8009df0:	b480      	push	{r7}
 8009df2:	b083      	sub	sp, #12
 8009df4:	af00      	add	r7, sp, #0
 8009df6:	6078      	str	r0, [r7, #4]
 8009df8:	460b      	mov	r3, r1
 8009dfa:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8009dfc:	4a06      	ldr	r2, [pc, #24]	@ (8009e18 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8009dfe:	687b      	ldr	r3, [r7, #4]
 8009e00:	601a      	str	r2, [r3, #0]
 8009e02:	687b      	ldr	r3, [r7, #4]
 8009e04:	887a      	ldrh	r2, [r7, #2]
 8009e06:	809a      	strh	r2, [r3, #4]
    }
 8009e08:	687b      	ldr	r3, [r7, #4]
 8009e0a:	4618      	mov	r0, r3
 8009e0c:	370c      	adds	r7, #12
 8009e0e:	46bd      	mov	sp, r7
 8009e10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e14:	4770      	bx	lr
 8009e16:	bf00      	nop
 8009e18:	08027f48 	.word	0x08027f48

08009e1c <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8009e1c:	b580      	push	{r7, lr}
 8009e1e:	b082      	sub	sp, #8
 8009e20:	af00      	add	r7, sp, #0
 8009e22:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009e24:	687b      	ldr	r3, [r7, #4]
 8009e26:	4618      	mov	r0, r3
 8009e28:	2326      	movs	r3, #38	@ 0x26
 8009e2a:	461a      	mov	r2, r3
 8009e2c:	2100      	movs	r1, #0
 8009e2e:	f01c f8b6 	bl	8025f9e <memset>
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	4618      	mov	r0, r3
 8009e36:	f7ff ff65 	bl	8009d04 <_ZN8touchgfx6WidgetC1Ev>
 8009e3a:	4a16      	ldr	r2, [pc, #88]	@ (8009e94 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8009e3c:	687b      	ldr	r3, [r7, #4]
 8009e3e:	601a      	str	r2, [r3, #0]
 8009e40:	687b      	ldr	r3, [r7, #4]
 8009e42:	3328      	adds	r3, #40	@ 0x28
 8009e44:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009e48:	4618      	mov	r0, r3
 8009e4a:	f7ff ffd1 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	3330      	adds	r3, #48	@ 0x30
 8009e52:	2100      	movs	r1, #0
 8009e54:	4618      	mov	r0, r3
 8009e56:	f7ff fc93 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 8009e5a:	687b      	ldr	r3, [r7, #4]
 8009e5c:	2200      	movs	r2, #0
 8009e5e:	869a      	strh	r2, [r3, #52]	@ 0x34
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	22ff      	movs	r2, #255	@ 0xff
 8009e64:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	2200      	movs	r2, #0
 8009e6c:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 8009e70:	687b      	ldr	r3, [r7, #4]
 8009e72:	2200      	movs	r2, #0
 8009e74:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8009e78:	687b      	ldr	r3, [r7, #4]
 8009e7a:	2200      	movs	r2, #0
 8009e7c:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8009e80:	687b      	ldr	r3, [r7, #4]
 8009e82:	333c      	adds	r3, #60	@ 0x3c
 8009e84:	4618      	mov	r0, r3
 8009e86:	f000 f8f0 	bl	800a06a <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 8009e8a:	687b      	ldr	r3, [r7, #4]
 8009e8c:	4618      	mov	r0, r3
 8009e8e:	3708      	adds	r7, #8
 8009e90:	46bd      	mov	sp, r7
 8009e92:	bd80      	pop	{r7, pc}
 8009e94:	080290a8 	.word	0x080290a8

08009e98 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 8009e98:	b590      	push	{r4, r7, lr}
 8009e9a:	b087      	sub	sp, #28
 8009e9c:	af00      	add	r7, sp, #0
 8009e9e:	6178      	str	r0, [r7, #20]
 8009ea0:	460b      	mov	r3, r1
 8009ea2:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 8009ea4:	697b      	ldr	r3, [r7, #20]
 8009ea6:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009eaa:	4611      	mov	r1, r2
 8009eac:	4618      	mov	r0, r3
 8009eae:	f7ff fd94 	bl	80099da <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 8009eb2:	697b      	ldr	r3, [r7, #20]
 8009eb4:	681b      	ldr	r3, [r3, #0]
 8009eb6:	3384      	adds	r3, #132	@ 0x84
 8009eb8:	681b      	ldr	r3, [r3, #0]
 8009eba:	697c      	ldr	r4, [r7, #20]
 8009ebc:	463a      	mov	r2, r7
 8009ebe:	6979      	ldr	r1, [r7, #20]
 8009ec0:	4610      	mov	r0, r2
 8009ec2:	4798      	blx	r3
 8009ec4:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009ec8:	463a      	mov	r2, r7
 8009eca:	ca07      	ldmia	r2, {r0, r1, r2}
 8009ecc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009ed0:	bf00      	nop
 8009ed2:	371c      	adds	r7, #28
 8009ed4:	46bd      	mov	sp, r7
 8009ed6:	bd90      	pop	{r4, r7, pc}

08009ed8 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8009ed8:	b590      	push	{r4, r7, lr}
 8009eda:	b087      	sub	sp, #28
 8009edc:	af00      	add	r7, sp, #0
 8009ede:	6178      	str	r0, [r7, #20]
 8009ee0:	460b      	mov	r3, r1
 8009ee2:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 8009ee4:	697b      	ldr	r3, [r7, #20]
 8009ee6:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 8009eea:	4611      	mov	r1, r2
 8009eec:	4618      	mov	r0, r3
 8009eee:	f7ff fd83 	bl	80099f8 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 8009ef2:	697b      	ldr	r3, [r7, #20]
 8009ef4:	681b      	ldr	r3, [r3, #0]
 8009ef6:	3384      	adds	r3, #132	@ 0x84
 8009ef8:	681b      	ldr	r3, [r3, #0]
 8009efa:	697c      	ldr	r4, [r7, #20]
 8009efc:	463a      	mov	r2, r7
 8009efe:	6979      	ldr	r1, [r7, #20]
 8009f00:	4610      	mov	r0, r2
 8009f02:	4798      	blx	r3
 8009f04:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 8009f08:	463a      	mov	r2, r7
 8009f0a:	ca07      	ldmia	r2, {r0, r1, r2}
 8009f0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 8009f10:	bf00      	nop
 8009f12:	371c      	adds	r7, #28
 8009f14:	46bd      	mov	sp, r7
 8009f16:	bd90      	pop	{r4, r7, pc}

08009f18 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 8009f18:	b580      	push	{r7, lr}
 8009f1a:	b082      	sub	sp, #8
 8009f1c:	af00      	add	r7, sp, #0
 8009f1e:	6078      	str	r0, [r7, #4]
 8009f20:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 8009f22:	6878      	ldr	r0, [r7, #4]
 8009f24:	f7ff fc3b 	bl	800979e <_ZN8touchgfx4RectC1Ev>
    }
 8009f28:	6878      	ldr	r0, [r7, #4]
 8009f2a:	3708      	adds	r7, #8
 8009f2c:	46bd      	mov	sp, r7
 8009f2e:	bd80      	pop	{r7, pc}

08009f30 <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 8009f30:	b480      	push	{r7}
 8009f32:	b083      	sub	sp, #12
 8009f34:	af00      	add	r7, sp, #0
 8009f36:	6078      	str	r0, [r7, #4]
 8009f38:	460b      	mov	r3, r1
 8009f3a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009f3c:	687b      	ldr	r3, [r7, #4]
 8009f3e:	78fa      	ldrb	r2, [r7, #3]
 8009f40:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 8009f44:	bf00      	nop
 8009f46:	370c      	adds	r7, #12
 8009f48:	46bd      	mov	sp, r7
 8009f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f4e:	4770      	bx	lr

08009f50 <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 8009f50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f52:	b085      	sub	sp, #20
 8009f54:	af00      	add	r7, sp, #0
 8009f56:	6078      	str	r0, [r7, #4]
 8009f58:	460b      	mov	r3, r1
 8009f5a:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8009f5c:	687e      	ldr	r6, [r7, #4]
 8009f5e:	687b      	ldr	r3, [r7, #4]
 8009f60:	681b      	ldr	r3, [r3, #0]
 8009f62:	3334      	adds	r3, #52	@ 0x34
 8009f64:	681c      	ldr	r4, [r3, #0]
 8009f66:	887d      	ldrh	r5, [r7, #2]
 8009f68:	6878      	ldr	r0, [r7, #4]
 8009f6a:	f000 f867 	bl	800a03c <_ZNK8touchgfx8TextArea12getTypedTextEv>
 8009f6e:	4603      	mov	r3, r0
 8009f70:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8009f72:	4b1c      	ldr	r3, [pc, #112]	@ (8009fe4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009f74:	681b      	ldr	r3, [r3, #0]
 8009f76:	2b00      	cmp	r3, #0
 8009f78:	d105      	bne.n	8009f86 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 8009f7a:	4b1b      	ldr	r3, [pc, #108]	@ (8009fe8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 8009f7c:	4a1b      	ldr	r2, [pc, #108]	@ (8009fec <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009f7e:	216c      	movs	r1, #108	@ 0x6c
 8009f80:	481b      	ldr	r0, [pc, #108]	@ (8009ff0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009f82:	f01b fe05 	bl	8025b90 <__assert_func>
 8009f86:	68fb      	ldr	r3, [r7, #12]
 8009f88:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 8009f8a:	68bb      	ldr	r3, [r7, #8]
 8009f8c:	889a      	ldrh	r2, [r3, #4]
 8009f8e:	4b19      	ldr	r3, [pc, #100]	@ (8009ff4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 8009f90:	881b      	ldrh	r3, [r3, #0]
 8009f92:	429a      	cmp	r2, r3
 8009f94:	bf34      	ite	cc
 8009f96:	2301      	movcc	r3, #1
 8009f98:	2300      	movcs	r3, #0
 8009f9a:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8009f9c:	2b00      	cmp	r3, #0
 8009f9e:	d105      	bne.n	8009fac <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 8009fa0:	4b15      	ldr	r3, [pc, #84]	@ (8009ff8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 8009fa2:	4a12      	ldr	r2, [pc, #72]	@ (8009fec <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 8009fa4:	216d      	movs	r1, #109	@ 0x6d
 8009fa6:	4812      	ldr	r0, [pc, #72]	@ (8009ff0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 8009fa8:	f01b fdf2 	bl	8025b90 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8009fac:	4b13      	ldr	r3, [pc, #76]	@ (8009ffc <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 8009fae:	681a      	ldr	r2, [r3, #0]
 8009fb0:	4b0c      	ldr	r3, [pc, #48]	@ (8009fe4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 8009fb2:	6819      	ldr	r1, [r3, #0]
 8009fb4:	68fb      	ldr	r3, [r7, #12]
 8009fb6:	889b      	ldrh	r3, [r3, #4]
 8009fb8:	005b      	lsls	r3, r3, #1
 8009fba:	440b      	add	r3, r1
 8009fbc:	781b      	ldrb	r3, [r3, #0]
 8009fbe:	009b      	lsls	r3, r3, #2
 8009fc0:	4413      	add	r3, r2
 8009fc2:	681b      	ldr	r3, [r3, #0]
 8009fc4:	681a      	ldr	r2, [r3, #0]
 8009fc6:	3230      	adds	r2, #48	@ 0x30
 8009fc8:	6812      	ldr	r2, [r2, #0]
 8009fca:	4618      	mov	r0, r3
 8009fcc:	4790      	blx	r2
 8009fce:	4603      	mov	r3, r0
 8009fd0:	1aeb      	subs	r3, r5, r3
 8009fd2:	b29b      	uxth	r3, r3
 8009fd4:	b21b      	sxth	r3, r3
 8009fd6:	4619      	mov	r1, r3
 8009fd8:	4630      	mov	r0, r6
 8009fda:	47a0      	blx	r4
    }
 8009fdc:	bf00      	nop
 8009fde:	3714      	adds	r7, #20
 8009fe0:	46bd      	mov	sp, r7
 8009fe2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009fe4:	20002fa4 	.word	0x20002fa4
 8009fe8:	08027180 	.word	0x08027180
 8009fec:	080271c4 	.word	0x080271c4
 8009ff0:	08027200 	.word	0x08027200
 8009ff4:	20002fa8 	.word	0x20002fa8
 8009ff8:	08027244 	.word	0x08027244
 8009ffc:	20002fac 	.word	0x20002fac

0800a000 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800a000:	b580      	push	{r7, lr}
 800a002:	b082      	sub	sp, #8
 800a004:	af00      	add	r7, sp, #0
 800a006:	6078      	str	r0, [r7, #4]
 800a008:	460b      	mov	r3, r1
 800a00a:	807b      	strh	r3, [r7, #2]
 800a00c:	4613      	mov	r3, r2
 800a00e:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a010:	687a      	ldr	r2, [r7, #4]
 800a012:	687b      	ldr	r3, [r7, #4]
 800a014:	681b      	ldr	r3, [r3, #0]
 800a016:	3330      	adds	r3, #48	@ 0x30
 800a018:	681b      	ldr	r3, [r3, #0]
 800a01a:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800a01e:	4610      	mov	r0, r2
 800a020:	4798      	blx	r3
        setBaselineY(baselineY);
 800a022:	687b      	ldr	r3, [r7, #4]
 800a024:	681b      	ldr	r3, [r3, #0]
 800a026:	3364      	adds	r3, #100	@ 0x64
 800a028:	681b      	ldr	r3, [r3, #0]
 800a02a:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a02e:	4611      	mov	r1, r2
 800a030:	6878      	ldr	r0, [r7, #4]
 800a032:	4798      	blx	r3
    }
 800a034:	bf00      	nop
 800a036:	3708      	adds	r7, #8
 800a038:	46bd      	mov	sp, r7
 800a03a:	bd80      	pop	{r7, pc}

0800a03c <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800a03c:	b480      	push	{r7}
 800a03e:	b083      	sub	sp, #12
 800a040:	af00      	add	r7, sp, #0
 800a042:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800a044:	687b      	ldr	r3, [r7, #4]
 800a046:	3328      	adds	r3, #40	@ 0x28
    }
 800a048:	4618      	mov	r0, r3
 800a04a:	370c      	adds	r7, #12
 800a04c:	46bd      	mov	sp, r7
 800a04e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a052:	4770      	bx	lr

0800a054 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800a054:	b480      	push	{r7}
 800a056:	b083      	sub	sp, #12
 800a058:	af00      	add	r7, sp, #0
 800a05a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a05c:	2300      	movs	r3, #0
    }
 800a05e:	4618      	mov	r0, r3
 800a060:	370c      	adds	r7, #12
 800a062:	46bd      	mov	sp, r7
 800a064:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a068:	4770      	bx	lr

0800a06a <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800a06a:	b580      	push	{r7, lr}
 800a06c:	b084      	sub	sp, #16
 800a06e:	af02      	add	r7, sp, #8
 800a070:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800a072:	6878      	ldr	r0, [r7, #4]
 800a074:	f04f 33ff 	mov.w	r3, #4294967295
 800a078:	9300      	str	r3, [sp, #0]
 800a07a:	f04f 33ff 	mov.w	r3, #4294967295
 800a07e:	2200      	movs	r2, #0
 800a080:	2100      	movs	r1, #0
 800a082:	f7ff fba3 	bl	80097cc <_ZN8touchgfx4RectC1Essss>
              text(0)
 800a086:	687b      	ldr	r3, [r7, #4]
 800a088:	2200      	movs	r2, #0
 800a08a:	609a      	str	r2, [r3, #8]
        {
        }
 800a08c:	687b      	ldr	r3, [r7, #4]
 800a08e:	4618      	mov	r0, r3
 800a090:	3708      	adds	r7, #8
 800a092:	46bd      	mov	sp, r7
 800a094:	bd80      	pop	{r7, pc}
	...

0800a098 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800a098:	b580      	push	{r7, lr}
 800a09a:	b082      	sub	sp, #8
 800a09c:	af00      	add	r7, sp, #0
 800a09e:	6078      	str	r0, [r7, #4]
 800a0a0:	4a05      	ldr	r2, [pc, #20]	@ (800a0b8 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a0a2:	687b      	ldr	r3, [r7, #4]
 800a0a4:	601a      	str	r2, [r3, #0]
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	4618      	mov	r0, r3
 800a0aa:	f7ff fbfb 	bl	80098a4 <_ZN8touchgfx8DrawableD1Ev>
 800a0ae:	687b      	ldr	r3, [r7, #4]
 800a0b0:	4618      	mov	r0, r3
 800a0b2:	3708      	adds	r7, #8
 800a0b4:	46bd      	mov	sp, r7
 800a0b6:	bd80      	pop	{r7, pc}
 800a0b8:	08028ddc 	.word	0x08028ddc

0800a0bc <_ZN8touchgfx9ContainerD0Ev>:
 800a0bc:	b580      	push	{r7, lr}
 800a0be:	b082      	sub	sp, #8
 800a0c0:	af00      	add	r7, sp, #0
 800a0c2:	6078      	str	r0, [r7, #4]
 800a0c4:	6878      	ldr	r0, [r7, #4]
 800a0c6:	f7ff ffe7 	bl	800a098 <_ZN8touchgfx9ContainerD1Ev>
 800a0ca:	212c      	movs	r1, #44	@ 0x2c
 800a0cc:	6878      	ldr	r0, [r7, #4]
 800a0ce:	f01b fcb0 	bl	8025a32 <_ZdlPvj>
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	4618      	mov	r0, r3
 800a0d6:	3708      	adds	r7, #8
 800a0d8:	46bd      	mov	sp, r7
 800a0da:	bd80      	pop	{r7, pc}

0800a0dc <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800a0dc:	b580      	push	{r7, lr}
 800a0de:	b082      	sub	sp, #8
 800a0e0:	af00      	add	r7, sp, #0
 800a0e2:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800a0e4:	687b      	ldr	r3, [r7, #4]
 800a0e6:	4618      	mov	r0, r3
 800a0e8:	f7ff fd82 	bl	8009bf0 <_ZN8touchgfx9ContainerC1Ev>
 800a0ec:	4a0b      	ldr	r2, [pc, #44]	@ (800a11c <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800a0ee:	687b      	ldr	r3, [r7, #4]
 800a0f0:	601a      	str	r2, [r3, #0]
 800a0f2:	687b      	ldr	r3, [r7, #4]
 800a0f4:	2200      	movs	r2, #0
 800a0f6:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	22ff      	movs	r2, #255	@ 0xff
 800a0fe:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	2200      	movs	r2, #0
 800a106:	631a      	str	r2, [r3, #48]	@ 0x30
    {
        setTouchable(true);
 800a108:	687b      	ldr	r3, [r7, #4]
 800a10a:	2101      	movs	r1, #1
 800a10c:	4618      	mov	r0, r3
 800a10e:	f7ff fcd5 	bl	8009abc <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800a112:	687b      	ldr	r3, [r7, #4]
 800a114:	4618      	mov	r0, r3
 800a116:	3708      	adds	r7, #8
 800a118:	46bd      	mov	sp, r7
 800a11a:	bd80      	pop	{r7, pc}
 800a11c:	080283a0 	.word	0x080283a0

0800a120 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800a120:	b580      	push	{r7, lr}
 800a122:	b082      	sub	sp, #8
 800a124:	af00      	add	r7, sp, #0
 800a126:	6078      	str	r0, [r7, #4]
 800a128:	460b      	mov	r3, r1
 800a12a:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	78fa      	ldrb	r2, [r7, #3]
 800a130:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        handlePressedUpdated();
 800a134:	687b      	ldr	r3, [r7, #4]
 800a136:	681b      	ldr	r3, [r3, #0]
 800a138:	338c      	adds	r3, #140	@ 0x8c
 800a13a:	681b      	ldr	r3, [r3, #0]
 800a13c:	6878      	ldr	r0, [r7, #4]
 800a13e:	4798      	blx	r3
    }
 800a140:	bf00      	nop
 800a142:	3708      	adds	r7, #8
 800a144:	46bd      	mov	sp, r7
 800a146:	bd80      	pop	{r7, pc}

0800a148 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed() const
 800a148:	b480      	push	{r7}
 800a14a:	b083      	sub	sp, #12
 800a14c:	af00      	add	r7, sp, #0
 800a14e:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
    }
 800a156:	4618      	mov	r0, r3
 800a158:	370c      	adds	r7, #12
 800a15a:	46bd      	mov	sp, r7
 800a15c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a160:	4770      	bx	lr

0800a162 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800a162:	b480      	push	{r7}
 800a164:	b083      	sub	sp, #12
 800a166:	af00      	add	r7, sp, #0
 800a168:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800a16a:	687b      	ldr	r3, [r7, #4]
 800a16c:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
    }
 800a170:	4618      	mov	r0, r3
 800a172:	370c      	adds	r7, #12
 800a174:	46bd      	mov	sp, r7
 800a176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a17a:	4770      	bx	lr

0800a17c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800a17c:	b480      	push	{r7}
 800a17e:	b083      	sub	sp, #12
 800a180:	af00      	add	r7, sp, #0
 800a182:	6078      	str	r0, [r7, #4]
 800a184:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a186:	687b      	ldr	r3, [r7, #4]
 800a188:	683a      	ldr	r2, [r7, #0]
 800a18a:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a18c:	bf00      	nop
 800a18e:	370c      	adds	r7, #12
 800a190:	46bd      	mov	sp, r7
 800a192:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a196:	4770      	bx	lr

0800a198 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800a198:	b580      	push	{r7, lr}
 800a19a:	b082      	sub	sp, #8
 800a19c:	af00      	add	r7, sp, #0
 800a19e:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800a1a0:	687b      	ldr	r3, [r7, #4]
 800a1a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a1a4:	2b00      	cmp	r3, #0
 800a1a6:	d00d      	beq.n	800a1c4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a1a8:	687b      	ldr	r3, [r7, #4]
 800a1aa:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a1ac:	687b      	ldr	r3, [r7, #4]
 800a1ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a1b0:	681b      	ldr	r3, [r3, #0]
 800a1b2:	330c      	adds	r3, #12
 800a1b4:	681b      	ldr	r3, [r3, #0]
 800a1b6:	4610      	mov	r0, r2
 800a1b8:	4798      	blx	r3
 800a1ba:	4603      	mov	r3, r0
 800a1bc:	2b00      	cmp	r3, #0
 800a1be:	d001      	beq.n	800a1c4 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a1c0:	2301      	movs	r3, #1
 800a1c2:	e000      	b.n	800a1c6 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800a1c4:	2300      	movs	r3, #0
 800a1c6:	2b00      	cmp	r3, #0
 800a1c8:	d009      	beq.n	800a1de <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800a1ca:	687b      	ldr	r3, [r7, #4]
 800a1cc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a1ce:	687b      	ldr	r3, [r7, #4]
 800a1d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a1d2:	681b      	ldr	r3, [r3, #0]
 800a1d4:	3308      	adds	r3, #8
 800a1d6:	681b      	ldr	r3, [r3, #0]
 800a1d8:	6879      	ldr	r1, [r7, #4]
 800a1da:	4610      	mov	r0, r2
 800a1dc:	4798      	blx	r3
        }
    }
 800a1de:	bf00      	nop
 800a1e0:	3708      	adds	r7, #8
 800a1e2:	46bd      	mov	sp, r7
 800a1e4:	bd80      	pop	{r7, pc}

0800a1e6 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800a1e6:	b480      	push	{r7}
 800a1e8:	b083      	sub	sp, #12
 800a1ea:	af00      	add	r7, sp, #0
 800a1ec:	6078      	str	r0, [r7, #4]
    {
    }
 800a1ee:	bf00      	nop
 800a1f0:	370c      	adds	r7, #12
 800a1f2:	46bd      	mov	sp, r7
 800a1f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1f8:	4770      	bx	lr

0800a1fa <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800a1fa:	b480      	push	{r7}
 800a1fc:	b083      	sub	sp, #12
 800a1fe:	af00      	add	r7, sp, #0
 800a200:	6078      	str	r0, [r7, #4]
    {
    }
 800a202:	bf00      	nop
 800a204:	370c      	adds	r7, #12
 800a206:	46bd      	mov	sp, r7
 800a208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a20c:	4770      	bx	lr
	...

0800a210 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800a210:	b580      	push	{r7, lr}
 800a212:	b082      	sub	sp, #8
 800a214:	af00      	add	r7, sp, #0
 800a216:	6078      	str	r0, [r7, #4]
 800a218:	4a05      	ldr	r2, [pc, #20]	@ (800a230 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	601a      	str	r2, [r3, #0]
 800a21e:	687b      	ldr	r3, [r7, #4]
 800a220:	4618      	mov	r0, r3
 800a222:	f7ff fd81 	bl	8009d28 <_ZN8touchgfx6WidgetD1Ev>
 800a226:	687b      	ldr	r3, [r7, #4]
 800a228:	4618      	mov	r0, r3
 800a22a:	3708      	adds	r7, #8
 800a22c:	46bd      	mov	sp, r7
 800a22e:	bd80      	pop	{r7, pc}
 800a230:	08029138 	.word	0x08029138

0800a234 <_ZN8touchgfx3BoxD0Ev>:
 800a234:	b580      	push	{r7, lr}
 800a236:	b082      	sub	sp, #8
 800a238:	af00      	add	r7, sp, #0
 800a23a:	6078      	str	r0, [r7, #4]
 800a23c:	6878      	ldr	r0, [r7, #4]
 800a23e:	f7ff ffe7 	bl	800a210 <_ZN8touchgfx3BoxD1Ev>
 800a242:	212c      	movs	r1, #44	@ 0x2c
 800a244:	6878      	ldr	r0, [r7, #4]
 800a246:	f01b fbf4 	bl	8025a32 <_ZdlPvj>
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	4618      	mov	r0, r3
 800a24e:	3708      	adds	r7, #8
 800a250:	46bd      	mov	sp, r7
 800a252:	bd80      	pop	{r7, pc}

0800a254 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800a254:	b580      	push	{r7, lr}
 800a256:	b082      	sub	sp, #8
 800a258:	af00      	add	r7, sp, #0
 800a25a:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800a25c:	687b      	ldr	r3, [r7, #4]
 800a25e:	4618      	mov	r0, r3
 800a260:	f7ff fd84 	bl	8009d6c <_ZN8touchgfx3BoxC1Ev>
 800a264:	4a08      	ldr	r2, [pc, #32]	@ (800a288 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	601a      	str	r2, [r3, #0]
 800a26a:	687b      	ldr	r3, [r7, #4]
 800a26c:	332c      	adds	r3, #44	@ 0x2c
 800a26e:	2100      	movs	r1, #0
 800a270:	4618      	mov	r0, r3
 800a272:	f7ff fa85 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	2200      	movs	r2, #0
 800a27a:	861a      	strh	r2, [r3, #48]	@ 0x30
    {
    }
 800a27c:	687b      	ldr	r3, [r7, #4]
 800a27e:	4618      	mov	r0, r3
 800a280:	3708      	adds	r7, #8
 800a282:	46bd      	mov	sp, r7
 800a284:	bd80      	pop	{r7, pc}
 800a286:	bf00      	nop
 800a288:	080292a4 	.word	0x080292a4

0800a28c <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800a28c:	b480      	push	{r7}
 800a28e:	b083      	sub	sp, #12
 800a290:	af00      	add	r7, sp, #0
 800a292:	6078      	str	r0, [r7, #4]
 800a294:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800a296:	687b      	ldr	r3, [r7, #4]
 800a298:	683a      	ldr	r2, [r7, #0]
 800a29a:	62da      	str	r2, [r3, #44]	@ 0x2c
    }
 800a29c:	bf00      	nop
 800a29e:	370c      	adds	r7, #12
 800a2a0:	46bd      	mov	sp, r7
 800a2a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2a6:	4770      	bx	lr

0800a2a8 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800a2a8:	b480      	push	{r7}
 800a2aa:	b083      	sub	sp, #12
 800a2ac:	af00      	add	r7, sp, #0
 800a2ae:	6078      	str	r0, [r7, #4]
 800a2b0:	460b      	mov	r3, r1
 800a2b2:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800a2b4:	687b      	ldr	r3, [r7, #4]
 800a2b6:	887a      	ldrh	r2, [r7, #2]
 800a2b8:	861a      	strh	r2, [r3, #48]	@ 0x30
    }
 800a2ba:	bf00      	nop
 800a2bc:	370c      	adds	r7, #12
 800a2be:	46bd      	mov	sp, r7
 800a2c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2c4:	4770      	bx	lr

0800a2c6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800a2c6:	b580      	push	{r7, lr}
 800a2c8:	b084      	sub	sp, #16
 800a2ca:	af00      	add	r7, sp, #0
 800a2cc:	6078      	str	r0, [r7, #4]
 800a2ce:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800a2d0:	687b      	ldr	r3, [r7, #4]
 800a2d2:	4618      	mov	r0, r3
 800a2d4:	f7ff ff38 	bl	800a148 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800a2d8:	4603      	mov	r3, r0
 800a2da:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800a2dc:	6838      	ldr	r0, [r7, #0]
 800a2de:	f7ff faa5 	bl	800982c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800a2e2:	4603      	mov	r3, r0
 800a2e4:	2b00      	cmp	r3, #0
 800a2e6:	bf0c      	ite	eq
 800a2e8:	2301      	moveq	r3, #1
 800a2ea:	2300      	movne	r3, #0
 800a2ec:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800a2ee:	7bbb      	ldrb	r3, [r7, #14]
 800a2f0:	2b00      	cmp	r3, #0
 800a2f2:	d005      	beq.n	800a300 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800a2f4:	7bfb      	ldrb	r3, [r7, #15]
 800a2f6:	f083 0301 	eor.w	r3, r3, #1
 800a2fa:	b2db      	uxtb	r3, r3
 800a2fc:	2b00      	cmp	r3, #0
 800a2fe:	d108      	bne.n	800a312 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800a300:	7bbb      	ldrb	r3, [r7, #14]
 800a302:	f083 0301 	eor.w	r3, r3, #1
 800a306:	b2db      	uxtb	r3, r3
 800a308:	2b00      	cmp	r3, #0
 800a30a:	d00f      	beq.n	800a32c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800a30c:	7bfb      	ldrb	r3, [r7, #15]
 800a30e:	2b00      	cmp	r3, #0
 800a310:	d00c      	beq.n	800a32c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	7bba      	ldrb	r2, [r7, #14]
 800a316:	4611      	mov	r1, r2
 800a318:	4618      	mov	r0, r3
 800a31a:	f7ff ff01 	bl	800a120 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800a31e:	687a      	ldr	r2, [r7, #4]
 800a320:	687b      	ldr	r3, [r7, #4]
 800a322:	681b      	ldr	r3, [r3, #0]
 800a324:	3314      	adds	r3, #20
 800a326:	681b      	ldr	r3, [r3, #0]
 800a328:	4610      	mov	r0, r2
 800a32a:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800a32c:	7bfb      	ldrb	r3, [r7, #15]
 800a32e:	2b00      	cmp	r3, #0
 800a330:	d007      	beq.n	800a342 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800a332:	6838      	ldr	r0, [r7, #0]
 800a334:	f7ff fa7a 	bl	800982c <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800a338:	4603      	mov	r3, r0
 800a33a:	2b01      	cmp	r3, #1
 800a33c:	d101      	bne.n	800a342 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800a33e:	2301      	movs	r3, #1
 800a340:	e000      	b.n	800a344 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800a342:	2300      	movs	r3, #0
 800a344:	2b00      	cmp	r3, #0
 800a346:	d006      	beq.n	800a356 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800a348:	687a      	ldr	r2, [r7, #4]
 800a34a:	687b      	ldr	r3, [r7, #4]
 800a34c:	681b      	ldr	r3, [r3, #0]
 800a34e:	3388      	adds	r3, #136	@ 0x88
 800a350:	681b      	ldr	r3, [r3, #0]
 800a352:	4610      	mov	r0, r2
 800a354:	4798      	blx	r3
        }
    }
 800a356:	bf00      	nop
 800a358:	3710      	adds	r7, #16
 800a35a:	46bd      	mov	sp, r7
 800a35c:	bd80      	pop	{r7, pc}
	...

0800a360 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800a360:	b580      	push	{r7, lr}
 800a362:	b082      	sub	sp, #8
 800a364:	af00      	add	r7, sp, #0
 800a366:	6078      	str	r0, [r7, #4]
 800a368:	4a05      	ldr	r2, [pc, #20]	@ (800a380 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800a36a:	687b      	ldr	r3, [r7, #4]
 800a36c:	601a      	str	r2, [r3, #0]
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	4618      	mov	r0, r3
 800a372:	f7ff fe91 	bl	800a098 <_ZN8touchgfx9ContainerD1Ev>
 800a376:	687b      	ldr	r3, [r7, #4]
 800a378:	4618      	mov	r0, r3
 800a37a:	3708      	adds	r7, #8
 800a37c:	46bd      	mov	sp, r7
 800a37e:	bd80      	pop	{r7, pc}
 800a380:	080283a0 	.word	0x080283a0

0800a384 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800a384:	b580      	push	{r7, lr}
 800a386:	b082      	sub	sp, #8
 800a388:	af00      	add	r7, sp, #0
 800a38a:	6078      	str	r0, [r7, #4]
 800a38c:	6878      	ldr	r0, [r7, #4]
 800a38e:	f7ff ffe7 	bl	800a360 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800a392:	2134      	movs	r1, #52	@ 0x34
 800a394:	6878      	ldr	r0, [r7, #4]
 800a396:	f01b fb4c 	bl	8025a32 <_ZdlPvj>
 800a39a:	687b      	ldr	r3, [r7, #4]
 800a39c:	4618      	mov	r0, r3
 800a39e:	3708      	adds	r7, #8
 800a3a0:	46bd      	mov	sp, r7
 800a3a2:	bd80      	pop	{r7, pc}

0800a3a4 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a3a4:	b580      	push	{r7, lr}
 800a3a6:	b082      	sub	sp, #8
 800a3a8:	af00      	add	r7, sp, #0
 800a3aa:	6078      	str	r0, [r7, #4]
 800a3ac:	4a08      	ldr	r2, [pc, #32]	@ (800a3d0 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a3ae:	687b      	ldr	r3, [r7, #4]
 800a3b0:	601a      	str	r2, [r3, #0]
 800a3b2:	687b      	ldr	r3, [r7, #4]
 800a3b4:	3328      	adds	r3, #40	@ 0x28
 800a3b6:	4618      	mov	r0, r3
 800a3b8:	f7fd fe36 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
 800a3bc:	687b      	ldr	r3, [r7, #4]
 800a3be:	4618      	mov	r0, r3
 800a3c0:	f7ff fcb2 	bl	8009d28 <_ZN8touchgfx6WidgetD1Ev>
 800a3c4:	687b      	ldr	r3, [r7, #4]
 800a3c6:	4618      	mov	r0, r3
 800a3c8:	3708      	adds	r7, #8
 800a3ca:	46bd      	mov	sp, r7
 800a3cc:	bd80      	pop	{r7, pc}
 800a3ce:	bf00      	nop
 800a3d0:	080290a8 	.word	0x080290a8

0800a3d4 <_ZN8touchgfx8TextAreaD0Ev>:
 800a3d4:	b580      	push	{r7, lr}
 800a3d6:	b082      	sub	sp, #8
 800a3d8:	af00      	add	r7, sp, #0
 800a3da:	6078      	str	r0, [r7, #4]
 800a3dc:	6878      	ldr	r0, [r7, #4]
 800a3de:	f7ff ffe1 	bl	800a3a4 <_ZN8touchgfx8TextAreaD1Ev>
 800a3e2:	2148      	movs	r1, #72	@ 0x48
 800a3e4:	6878      	ldr	r0, [r7, #4]
 800a3e6:	f01b fb24 	bl	8025a32 <_ZdlPvj>
 800a3ea:	687b      	ldr	r3, [r7, #4]
 800a3ec:	4618      	mov	r0, r3
 800a3ee:	3708      	adds	r7, #8
 800a3f0:	46bd      	mov	sp, r7
 800a3f2:	bd80      	pop	{r7, pc}

0800a3f4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800a3f4:	b580      	push	{r7, lr}
 800a3f6:	b082      	sub	sp, #8
 800a3f8:	af00      	add	r7, sp, #0
 800a3fa:	6078      	str	r0, [r7, #4]
        : TextArea()
 800a3fc:	687b      	ldr	r3, [r7, #4]
 800a3fe:	4618      	mov	r0, r3
 800a400:	f7ff fd0c 	bl	8009e1c <_ZN8touchgfx8TextAreaC1Ev>
 800a404:	4a03      	ldr	r2, [pc, #12]	@ (800a414 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800a406:	687b      	ldr	r3, [r7, #4]
 800a408:	601a      	str	r2, [r3, #0]
    {
    }
 800a40a:	687b      	ldr	r3, [r7, #4]
 800a40c:	4618      	mov	r0, r3
 800a40e:	3708      	adds	r7, #8
 800a410:	46bd      	mov	sp, r7
 800a412:	bd80      	pop	{r7, pc}
 800a414:	08029214 	.word	0x08029214

0800a418 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800a418:	b580      	push	{r7, lr}
 800a41a:	b082      	sub	sp, #8
 800a41c:	af00      	add	r7, sp, #0
 800a41e:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800a420:	687b      	ldr	r3, [r7, #4]
 800a422:	4618      	mov	r0, r3
 800a424:	f7ff fa5e 	bl	80098e4 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800a428:	bf00      	nop
 800a42a:	3708      	adds	r7, #8
 800a42c:	46bd      	mov	sp, r7
 800a42e:	bd80      	pop	{r7, pc}

0800a430 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800a430:	b580      	push	{r7, lr}
 800a432:	b082      	sub	sp, #8
 800a434:	af00      	add	r7, sp, #0
 800a436:	6078      	str	r0, [r7, #4]
 800a438:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800a43a:	6878      	ldr	r0, [r7, #4]
 800a43c:	f7ff fe15 	bl	800a06a <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800a440:	6878      	ldr	r0, [r7, #4]
 800a442:	3708      	adds	r7, #8
 800a444:	46bd      	mov	sp, r7
 800a446:	bd80      	pop	{r7, pc}

0800a448 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800a448:	b580      	push	{r7, lr}
 800a44a:	b082      	sub	sp, #8
 800a44c:	af00      	add	r7, sp, #0
 800a44e:	6078      	str	r0, [r7, #4]
 800a450:	4a05      	ldr	r2, [pc, #20]	@ (800a468 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	601a      	str	r2, [r3, #0]
 800a456:	687b      	ldr	r3, [r7, #4]
 800a458:	4618      	mov	r0, r3
 800a45a:	f7ff ffa3 	bl	800a3a4 <_ZN8touchgfx8TextAreaD1Ev>
 800a45e:	687b      	ldr	r3, [r7, #4]
 800a460:	4618      	mov	r0, r3
 800a462:	3708      	adds	r7, #8
 800a464:	46bd      	mov	sp, r7
 800a466:	bd80      	pop	{r7, pc}
 800a468:	08029214 	.word	0x08029214

0800a46c <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800a46c:	b580      	push	{r7, lr}
 800a46e:	b082      	sub	sp, #8
 800a470:	af00      	add	r7, sp, #0
 800a472:	6078      	str	r0, [r7, #4]
 800a474:	6878      	ldr	r0, [r7, #4]
 800a476:	f7ff ffe7 	bl	800a448 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a47a:	2148      	movs	r1, #72	@ 0x48
 800a47c:	6878      	ldr	r0, [r7, #4]
 800a47e:	f01b fad8 	bl	8025a32 <_ZdlPvj>
 800a482:	687b      	ldr	r3, [r7, #4]
 800a484:	4618      	mov	r0, r3
 800a486:	3708      	adds	r7, #8
 800a488:	46bd      	mov	sp, r7
 800a48a:	bd80      	pop	{r7, pc}

0800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800a48c:	b580      	push	{r7, lr}
 800a48e:	b082      	sub	sp, #8
 800a490:	af00      	add	r7, sp, #0
 800a492:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800a494:	687b      	ldr	r3, [r7, #4]
 800a496:	4618      	mov	r0, r3
 800a498:	f7ff ffac 	bl	800a3f4 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800a49c:	4a05      	ldr	r2, [pc, #20]	@ (800a4b4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800a49e:	687b      	ldr	r3, [r7, #4]
 800a4a0:	601a      	str	r2, [r3, #0]
 800a4a2:	687b      	ldr	r3, [r7, #4]
 800a4a4:	2200      	movs	r2, #0
 800a4a6:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 800a4a8:	687b      	ldr	r3, [r7, #4]
 800a4aa:	4618      	mov	r0, r3
 800a4ac:	3708      	adds	r7, #8
 800a4ae:	46bd      	mov	sp, r7
 800a4b0:	bd80      	pop	{r7, pc}
 800a4b2:	bf00      	nop
 800a4b4:	0802825c 	.word	0x0802825c

0800a4b8 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800a4b8:	b480      	push	{r7}
 800a4ba:	b083      	sub	sp, #12
 800a4bc:	af00      	add	r7, sp, #0
 800a4be:	6078      	str	r0, [r7, #4]
 800a4c0:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	683a      	ldr	r2, [r7, #0]
 800a4c6:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 800a4c8:	bf00      	nop
 800a4ca:	370c      	adds	r7, #12
 800a4cc:	46bd      	mov	sp, r7
 800a4ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4d2:	4770      	bx	lr

0800a4d4 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800a4d4:	b480      	push	{r7}
 800a4d6:	b083      	sub	sp, #12
 800a4d8:	af00      	add	r7, sp, #0
 800a4da:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 800a4e0:	4618      	mov	r0, r3
 800a4e2:	370c      	adds	r7, #12
 800a4e4:	46bd      	mov	sp, r7
 800a4e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4ea:	4770      	bx	lr

0800a4ec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800a4ec:	b580      	push	{r7, lr}
 800a4ee:	b082      	sub	sp, #8
 800a4f0:	af00      	add	r7, sp, #0
 800a4f2:	6078      	str	r0, [r7, #4]
 800a4f4:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800a4f6:	6839      	ldr	r1, [r7, #0]
 800a4f8:	6878      	ldr	r0, [r7, #4]
 800a4fa:	f7ff ffdd 	bl	800a4b8 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800a4fe:	bf00      	nop
 800a500:	3708      	adds	r7, #8
 800a502:	46bd      	mov	sp, r7
 800a504:	bd80      	pop	{r7, pc}

0800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800a506:	b480      	push	{r7}
 800a508:	b083      	sub	sp, #12
 800a50a:	af00      	add	r7, sp, #0
 800a50c:	6078      	str	r0, [r7, #4]
 800a50e:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	683a      	ldr	r2, [r7, #0]
 800a514:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800a516:	bf00      	nop
 800a518:	370c      	adds	r7, #12
 800a51a:	46bd      	mov	sp, r7
 800a51c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a520:	4770      	bx	lr
	...

0800a524 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800a524:	b580      	push	{r7, lr}
 800a526:	b082      	sub	sp, #8
 800a528:	af00      	add	r7, sp, #0
 800a52a:	6078      	str	r0, [r7, #4]
 800a52c:	4a05      	ldr	r2, [pc, #20]	@ (800a544 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	601a      	str	r2, [r3, #0]
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	4618      	mov	r0, r3
 800a536:	f7ff fbf7 	bl	8009d28 <_ZN8touchgfx6WidgetD1Ev>
 800a53a:	687b      	ldr	r3, [r7, #4]
 800a53c:	4618      	mov	r0, r3
 800a53e:	3708      	adds	r7, #8
 800a540:	46bd      	mov	sp, r7
 800a542:	bd80      	pop	{r7, pc}
 800a544:	08028fc4 	.word	0x08028fc4

0800a548 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800a548:	b580      	push	{r7, lr}
 800a54a:	b082      	sub	sp, #8
 800a54c:	af00      	add	r7, sp, #0
 800a54e:	6078      	str	r0, [r7, #4]
 800a550:	6878      	ldr	r0, [r7, #4]
 800a552:	f7ff ffe7 	bl	800a524 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a556:	2130      	movs	r1, #48	@ 0x30
 800a558:	6878      	ldr	r0, [r7, #4]
 800a55a:	f01b fa6a 	bl	8025a32 <_ZdlPvj>
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	4618      	mov	r0, r3
 800a562:	3708      	adds	r7, #8
 800a564:	46bd      	mov	sp, r7
 800a566:	bd80      	pop	{r7, pc}

0800a568 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 800a568:	b480      	push	{r7}
 800a56a:	b083      	sub	sp, #12
 800a56c:	af00      	add	r7, sp, #0
 800a56e:	6078      	str	r0, [r7, #4]
 800a570:	460b      	mov	r3, r1
 800a572:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 800a574:	687b      	ldr	r3, [r7, #4]
 800a576:	887a      	ldrh	r2, [r7, #2]
 800a578:	871a      	strh	r2, [r3, #56]	@ 0x38
    }
 800a57a:	bf00      	nop
 800a57c:	370c      	adds	r7, #12
 800a57e:	46bd      	mov	sp, r7
 800a580:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a584:	4770      	bx	lr

0800a586 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 800a586:	b480      	push	{r7}
 800a588:	b083      	sub	sp, #12
 800a58a:	af00      	add	r7, sp, #0
 800a58c:	6078      	str	r0, [r7, #4]
 800a58e:	460b      	mov	r3, r1
 800a590:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	887a      	ldrh	r2, [r7, #2]
 800a596:	875a      	strh	r2, [r3, #58]	@ 0x3a
    }
 800a598:	bf00      	nop
 800a59a:	370c      	adds	r7, #12
 800a59c:	46bd      	mov	sp, r7
 800a59e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5a2:	4770      	bx	lr

0800a5a4 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 800a5a4:	b580      	push	{r7, lr}
 800a5a6:	b082      	sub	sp, #8
 800a5a8:	af00      	add	r7, sp, #0
 800a5aa:	6078      	str	r0, [r7, #4]
 800a5ac:	460b      	mov	r3, r1
 800a5ae:	807b      	strh	r3, [r7, #2]
 800a5b0:	4613      	mov	r3, r2
 800a5b2:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800a5b4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800a5b8:	4619      	mov	r1, r3
 800a5ba:	6878      	ldr	r0, [r7, #4]
 800a5bc:	f7ff ffd4 	bl	800a568 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 800a5c0:	f9b7 3000 	ldrsh.w	r3, [r7]
 800a5c4:	4619      	mov	r1, r3
 800a5c6:	6878      	ldr	r0, [r7, #4]
 800a5c8:	f7ff ffdd 	bl	800a586 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 800a5cc:	bf00      	nop
 800a5ce:	3708      	adds	r7, #8
 800a5d0:	46bd      	mov	sp, r7
 800a5d2:	bd80      	pop	{r7, pc}

0800a5d4 <_ZN23humidity_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800a5d4:	b480      	push	{r7}
 800a5d6:	b083      	sub	sp, #12
 800a5d8:	af00      	add	r7, sp, #0
 800a5da:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in humidity_screen
    }
 800a5dc:	bf00      	nop
 800a5de:	370c      	adds	r7, #12
 800a5e0:	46bd      	mov	sp, r7
 800a5e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5e6:	4770      	bx	lr

0800a5e8 <_ZN23humidity_screenViewBase8decreaseEv>:
    virtual void decrease()
 800a5e8:	b480      	push	{r7}
 800a5ea:	b083      	sub	sp, #12
 800a5ec:	af00      	add	r7, sp, #0
 800a5ee:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in humidity_screen
    }
 800a5f0:	bf00      	nop
 800a5f2:	370c      	adds	r7, #12
 800a5f4:	46bd      	mov	sp, r7
 800a5f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5fa:	4770      	bx	lr

0800a5fc <_ZN23humidity_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800a5fc:	b580      	push	{r7, lr}
 800a5fe:	b082      	sub	sp, #8
 800a600:	af00      	add	r7, sp, #0
 800a602:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a604:	f009 fcbc 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 800a608:	4603      	mov	r3, r0
    }
 800a60a:	4618      	mov	r0, r3
 800a60c:	3708      	adds	r7, #8
 800a60e:	46bd      	mov	sp, r7
 800a610:	bd80      	pop	{r7, pc}
	...

0800a614 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>:
class View : public Screen
 800a614:	b580      	push	{r7, lr}
 800a616:	b082      	sub	sp, #8
 800a618:	af00      	add	r7, sp, #0
 800a61a:	6078      	str	r0, [r7, #4]
 800a61c:	4a05      	ldr	r2, [pc, #20]	@ (800a634 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev+0x20>)
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	601a      	str	r2, [r3, #0]
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	4618      	mov	r0, r3
 800a626:	f7ff fb05 	bl	8009c34 <_ZN8touchgfx6ScreenD1Ev>
 800a62a:	687b      	ldr	r3, [r7, #4]
 800a62c:	4618      	mov	r0, r3
 800a62e:	3708      	adds	r7, #8
 800a630:	46bd      	mov	sp, r7
 800a632:	bd80      	pop	{r7, pc}
 800a634:	08028210 	.word	0x08028210

0800a638 <_ZN8touchgfx4ViewI24humidity_screenPresenterED0Ev>:
 800a638:	b580      	push	{r7, lr}
 800a63a:	b082      	sub	sp, #8
 800a63c:	af00      	add	r7, sp, #0
 800a63e:	6078      	str	r0, [r7, #4]
 800a640:	6878      	ldr	r0, [r7, #4]
 800a642:	f7ff ffe7 	bl	800a614 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 800a646:	2140      	movs	r1, #64	@ 0x40
 800a648:	6878      	ldr	r0, [r7, #4]
 800a64a:	f01b f9f2 	bl	8025a32 <_ZdlPvj>
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	4618      	mov	r0, r3
 800a652:	3708      	adds	r7, #8
 800a654:	46bd      	mov	sp, r7
 800a656:	bd80      	pop	{r7, pc}

0800a658 <_ZN23humidity_screenViewBaseC1Ev>:
#include <gui_generated/humidity_screen_screen/humidity_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

humidity_screenViewBase::humidity_screenViewBase() :
 800a658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a65c:	b0ae      	sub	sp, #184	@ 0xb8
 800a65e:	af02      	add	r7, sp, #8
 800a660:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &humidity_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &humidity_screenViewBase::buttonCallbackHandler)
 800a662:	697b      	ldr	r3, [r7, #20]
 800a664:	4618      	mov	r0, r3
 800a666:	f000 fb37 	bl	800acd8 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>
 800a66a:	4add      	ldr	r2, [pc, #884]	@ (800a9e0 <_ZN23humidity_screenViewBaseC1Ev+0x388>)
 800a66c:	697b      	ldr	r3, [r7, #20]
 800a66e:	601a      	str	r2, [r3, #0]
 800a670:	697b      	ldr	r3, [r7, #20]
 800a672:	3340      	adds	r3, #64	@ 0x40
 800a674:	4618      	mov	r0, r3
 800a676:	f7ff fb79 	bl	8009d6c <_ZN8touchgfx3BoxC1Ev>
 800a67a:	697b      	ldr	r3, [r7, #20]
 800a67c:	336c      	adds	r3, #108	@ 0x6c
 800a67e:	4618      	mov	r0, r3
 800a680:	f7ff fbcc 	bl	8009e1c <_ZN8touchgfx8TextAreaC1Ev>
 800a684:	697b      	ldr	r3, [r7, #20]
 800a686:	33b4      	adds	r3, #180	@ 0xb4
 800a688:	4618      	mov	r0, r3
 800a68a:	f000 fb91 	bl	800adb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800a68e:	697b      	ldr	r3, [r7, #20]
 800a690:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a694:	4618      	mov	r0, r3
 800a696:	f7ff fef9 	bl	800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800a69a:	697b      	ldr	r3, [r7, #20]
 800a69c:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800a6a0:	4618      	mov	r0, r3
 800a6a2:	f007 ff6b 	bl	801257c <_ZN8touchgfx14ButtonWithIconC1Ev>
 800a6a6:	697b      	ldr	r3, [r7, #20]
 800a6a8:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800a6ac:	4618      	mov	r0, r3
 800a6ae:	f007 ff65 	bl	801257c <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &humidity_screenViewBase::flexButtonCallbackHandler),
 800a6b2:	697b      	ldr	r3, [r7, #20]
 800a6b4:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800a6b8:	4bca      	ldr	r3, [pc, #808]	@ (800a9e4 <_ZN23humidity_screenViewBaseC1Ev+0x38c>)
 800a6ba:	627b      	str	r3, [r7, #36]	@ 0x24
 800a6bc:	2300      	movs	r3, #0
 800a6be:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a6c0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800a6c4:	cb0c      	ldmia	r3, {r2, r3}
 800a6c6:	6979      	ldr	r1, [r7, #20]
 800a6c8:	f000 fbc2 	bl	800ae50 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &humidity_screenViewBase::buttonCallbackHandler)
 800a6cc:	697b      	ldr	r3, [r7, #20]
 800a6ce:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800a6d2:	4bc5      	ldr	r3, [pc, #788]	@ (800a9e8 <_ZN23humidity_screenViewBaseC1Ev+0x390>)
 800a6d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a6d6:	2300      	movs	r3, #0
 800a6d8:	633b      	str	r3, [r7, #48]	@ 0x30
 800a6da:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800a6de:	cb0c      	ldmia	r3, {r2, r3}
 800a6e0:	6979      	ldr	r1, [r7, #20]
 800a6e2:	f000 fbe5 	bl	800aeb0 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800a6e6:	697b      	ldr	r3, [r7, #20]
 800a6e8:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800a6ec:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800a6f0:	9300      	str	r3, [sp, #0]
 800a6f2:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800a6f6:	2200      	movs	r2, #0
 800a6f8:	2100      	movs	r1, #0
 800a6fa:	f7ff f911 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800a6fe:	697b      	ldr	r3, [r7, #20]
 800a700:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800a704:	2300      	movs	r3, #0
 800a706:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800a70a:	2300      	movs	r3, #0
 800a70c:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800a710:	2300      	movs	r3, #0
 800a712:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a716:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800a71a:	041a      	lsls	r2, r3, #16
 800a71c:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800a720:	021b      	lsls	r3, r3, #8
 800a722:	431a      	orrs	r2, r3
 800a724:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800a728:	4313      	orrs	r3, r2
 800a72a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a72e:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800a732:	4611      	mov	r1, r2
 800a734:	4618      	mov	r0, r3
 800a736:	f7ff f823 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a73a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800a73c:	4619      	mov	r1, r3
 800a73e:	4620      	mov	r0, r4
 800a740:	f7ff fb38 	bl	8009db4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800a744:	697a      	ldr	r2, [r7, #20]
 800a746:	697b      	ldr	r3, [r7, #20]
 800a748:	3340      	adds	r3, #64	@ 0x40
 800a74a:	4619      	mov	r1, r3
 800a74c:	4610      	mov	r0, r2
 800a74e:	f7ff fac9 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text.setPosition(87, 18, 306, 48);
 800a752:	697b      	ldr	r3, [r7, #20]
 800a754:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800a758:	2330      	movs	r3, #48	@ 0x30
 800a75a:	9300      	str	r3, [sp, #0]
 800a75c:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800a760:	2212      	movs	r2, #18
 800a762:	2157      	movs	r1, #87	@ 0x57
 800a764:	f7ff f8dc 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a768:	697b      	ldr	r3, [r7, #20]
 800a76a:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800a76e:	23ff      	movs	r3, #255	@ 0xff
 800a770:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800a774:	23ff      	movs	r3, #255	@ 0xff
 800a776:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800a77a:	23ff      	movs	r3, #255	@ 0xff
 800a77c:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800a780:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800a784:	041a      	lsls	r2, r3, #16
 800a786:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800a78a:	021b      	lsls	r3, r3, #8
 800a78c:	431a      	orrs	r2, r3
 800a78e:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800a792:	4313      	orrs	r3, r2
 800a794:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a798:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800a79c:	4611      	mov	r1, r2
 800a79e:	4618      	mov	r0, r3
 800a7a0:	f7fe ffee 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a7a4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800a7a6:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800a7aa:	623b      	str	r3, [r7, #32]
        color = newColor;
 800a7ac:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800a7b0:	6a3a      	ldr	r2, [r7, #32]
 800a7b2:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a7b4:	bf00      	nop
    text.setLinespacing(0);
 800a7b6:	697b      	ldr	r3, [r7, #20]
 800a7b8:	336c      	adds	r3, #108	@ 0x6c
 800a7ba:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800a7be:	2300      	movs	r3, #0
 800a7c0:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800a7c4:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800a7c8:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800a7cc:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a7ce:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800a7d2:	681b      	ldr	r3, [r3, #0]
 800a7d4:	3384      	adds	r3, #132	@ 0x84
 800a7d6:	681b      	ldr	r3, [r3, #0]
 800a7d8:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800a7dc:	463a      	mov	r2, r7
 800a7de:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800a7e2:	4610      	mov	r0, r2
 800a7e4:	4798      	blx	r3
 800a7e6:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a7ea:	463a      	mov	r2, r7
 800a7ec:	ca07      	ldmia	r2, {r0, r1, r2}
 800a7ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a7f2:	bf00      	nop
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GXOO));
 800a7f4:	697b      	ldr	r3, [r7, #20]
 800a7f6:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800a7fa:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a7fe:	2102      	movs	r1, #2
 800a800:	4618      	mov	r0, r3
 800a802:	f7ff faf5 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800a806:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a80a:	4619      	mov	r1, r3
 800a80c:	4620      	mov	r0, r4
 800a80e:	f007 fc29 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a812:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a816:	4618      	mov	r0, r3
 800a818:	f7fd fc06 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(text);
 800a81c:	697a      	ldr	r2, [r7, #20]
 800a81e:	697b      	ldr	r3, [r7, #20]
 800a820:	336c      	adds	r3, #108	@ 0x6c
 800a822:	4619      	mov	r1, r3
 800a824:	4610      	mov	r0, r2
 800a826:	f7ff fa5d 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800a82a:	697b      	ldr	r3, [r7, #20]
 800a82c:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800a830:	2332      	movs	r3, #50	@ 0x32
 800a832:	9300      	str	r3, [sp, #0]
 800a834:	2332      	movs	r3, #50	@ 0x32
 800a836:	2200      	movs	r2, #0
 800a838:	2100      	movs	r1, #0
 800a83a:	f000 fb59 	bl	800aef0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800a83e:	697b      	ldr	r3, [r7, #20]
 800a840:	33b4      	adds	r3, #180	@ 0xb4
 800a842:	2105      	movs	r1, #5
 800a844:	4618      	mov	r0, r3
 800a846:	f000 fb73 	bl	800af30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800a84a:	697b      	ldr	r3, [r7, #20]
 800a84c:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800a850:	2300      	movs	r3, #0
 800a852:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800a856:	2366      	movs	r3, #102	@ 0x66
 800a858:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800a85c:	2399      	movs	r3, #153	@ 0x99
 800a85e:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800a862:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800a866:	041a      	lsls	r2, r3, #16
 800a868:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800a86c:	021b      	lsls	r3, r3, #8
 800a86e:	431a      	orrs	r2, r3
 800a870:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800a874:	4313      	orrs	r3, r2
 800a876:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a87a:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800a87e:	4611      	mov	r1, r2
 800a880:	4618      	mov	r0, r3
 800a882:	f7fe ff7d 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a886:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a888:	461d      	mov	r5, r3
 800a88a:	2300      	movs	r3, #0
 800a88c:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800a890:	2399      	movs	r3, #153	@ 0x99
 800a892:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800a896:	23cc      	movs	r3, #204	@ 0xcc
 800a898:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800a89c:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800a8a0:	041a      	lsls	r2, r3, #16
 800a8a2:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800a8a6:	021b      	lsls	r3, r3, #8
 800a8a8:	431a      	orrs	r2, r3
 800a8aa:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800a8ae:	4313      	orrs	r3, r2
 800a8b0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a8b4:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800a8b8:	4611      	mov	r1, r2
 800a8ba:	4618      	mov	r0, r3
 800a8bc:	f7fe ff60 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a8c0:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800a8c2:	461e      	mov	r6, r3
 800a8c4:	2300      	movs	r3, #0
 800a8c6:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800a8ca:	2333      	movs	r3, #51	@ 0x33
 800a8cc:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800a8d0:	2366      	movs	r3, #102	@ 0x66
 800a8d2:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800a8d6:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800a8da:	041a      	lsls	r2, r3, #16
 800a8dc:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800a8e0:	021b      	lsls	r3, r3, #8
 800a8e2:	431a      	orrs	r2, r3
 800a8e4:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800a8e8:	4313      	orrs	r3, r2
 800a8ea:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a8ee:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800a8f2:	4611      	mov	r1, r2
 800a8f4:	4618      	mov	r0, r3
 800a8f6:	f7fe ff43 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a8fa:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800a8fc:	4698      	mov	r8, r3
 800a8fe:	2333      	movs	r3, #51	@ 0x33
 800a900:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800a904:	2366      	movs	r3, #102	@ 0x66
 800a906:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800a90a:	2399      	movs	r3, #153	@ 0x99
 800a90c:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800a910:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800a914:	041a      	lsls	r2, r3, #16
 800a916:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800a91a:	021b      	lsls	r3, r3, #8
 800a91c:	431a      	orrs	r2, r3
 800a91e:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800a922:	4313      	orrs	r3, r2
 800a924:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a928:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800a92c:	4611      	mov	r1, r2
 800a92e:	4618      	mov	r0, r3
 800a930:	f7fe ff26 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a934:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800a936:	9300      	str	r3, [sp, #0]
 800a938:	4643      	mov	r3, r8
 800a93a:	4632      	mov	r2, r6
 800a93c:	4629      	mov	r1, r5
 800a93e:	4620      	mov	r0, r4
 800a940:	f000 fb08 	bl	800af54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800a944:	697b      	ldr	r3, [r7, #20]
 800a946:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800a94a:	697b      	ldr	r3, [r7, #20]
 800a94c:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800a950:	4619      	mov	r1, r3
 800a952:	4610      	mov	r0, r2
 800a954:	f7ff fc12 	bl	800a17c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800a958:	697b      	ldr	r3, [r7, #20]
 800a95a:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800a95e:	2332      	movs	r3, #50	@ 0x32
 800a960:	9300      	str	r3, [sp, #0]
 800a962:	2332      	movs	r3, #50	@ 0x32
 800a964:	22f5      	movs	r2, #245	@ 0xf5
 800a966:	f240 1189 	movw	r1, #393	@ 0x189
 800a96a:	f7fe ffd9 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800a96e:	697a      	ldr	r2, [r7, #20]
 800a970:	697b      	ldr	r3, [r7, #20]
 800a972:	33b4      	adds	r3, #180	@ 0xb4
 800a974:	4619      	mov	r1, r3
 800a976:	4610      	mov	r0, r2
 800a978:	f7ff f9b4 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    humVal.setPosition(131, 140, 200, 40);
 800a97c:	697b      	ldr	r3, [r7, #20]
 800a97e:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800a982:	2328      	movs	r3, #40	@ 0x28
 800a984:	9300      	str	r3, [sp, #0]
 800a986:	23c8      	movs	r3, #200	@ 0xc8
 800a988:	228c      	movs	r2, #140	@ 0x8c
 800a98a:	2183      	movs	r1, #131	@ 0x83
 800a98c:	f7fe ffc8 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    humVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a990:	697b      	ldr	r3, [r7, #20]
 800a992:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800a996:	23ff      	movs	r3, #255	@ 0xff
 800a998:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800a99c:	23ff      	movs	r3, #255	@ 0xff
 800a99e:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800a9a2:	23ff      	movs	r3, #255	@ 0xff
 800a9a4:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800a9a8:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800a9ac:	041a      	lsls	r2, r3, #16
 800a9ae:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800a9b2:	021b      	lsls	r3, r3, #8
 800a9b4:	431a      	orrs	r2, r3
 800a9b6:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800a9ba:	4313      	orrs	r3, r2
 800a9bc:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a9c0:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800a9c4:	4611      	mov	r1, r2
 800a9c6:	4618      	mov	r0, r3
 800a9c8:	f7fe feda 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800a9cc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a9ce:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800a9d2:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800a9d4:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800a9d8:	69fa      	ldr	r2, [r7, #28]
 800a9da:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a9dc:	bf00      	nop
 800a9de:	e005      	b.n	800a9ec <_ZN23humidity_screenViewBaseC1Ev+0x394>
 800a9e0:	08028108 	.word	0x08028108
 800a9e4:	0800ac6b 	.word	0x0800ac6b
 800a9e8:	0800ac95 	.word	0x0800ac95
    humVal.setLinespacing(0);
 800a9ec:	697b      	ldr	r3, [r7, #20]
 800a9ee:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a9f2:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a9f6:	2300      	movs	r3, #0
 800a9f8:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800a9fc:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800aa00:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800aa04:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800aa06:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800aa0a:	681b      	ldr	r3, [r3, #0]
 800aa0c:	3384      	adds	r3, #132	@ 0x84
 800aa0e:	681b      	ldr	r3, [r3, #0]
 800aa10:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800aa14:	463a      	mov	r2, r7
 800aa16:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800aa1a:	4610      	mov	r0, r2
 800aa1c:	4798      	blx	r3
 800aa1e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800aa22:	463a      	mov	r2, r7
 800aa24:	ca07      	ldmia	r2, {r0, r1, r2}
 800aa26:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800aa2a:	bf00      	nop
    humValBuffer[0] = 0;
 800aa2c:	697b      	ldr	r3, [r7, #20]
 800aa2e:	2200      	movs	r2, #0
 800aa30:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    humVal.setWildcard(humValBuffer);
 800aa34:	697b      	ldr	r3, [r7, #20]
 800aa36:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800aa3a:	697b      	ldr	r3, [r7, #20]
 800aa3c:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800aa40:	4619      	mov	r1, r3
 800aa42:	4610      	mov	r0, r2
 800aa44:	f7ff fd52 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    humVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BMB8));
 800aa48:	697b      	ldr	r3, [r7, #20]
 800aa4a:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800aa4e:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800aa52:	2101      	movs	r1, #1
 800aa54:	4618      	mov	r0, r3
 800aa56:	f7ff f9cb 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800aa5a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800aa5e:	4619      	mov	r1, r3
 800aa60:	4620      	mov	r0, r4
 800aa62:	f007 faff 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800aa66:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800aa6a:	4618      	mov	r0, r3
 800aa6c:	f7fd fadc 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(humVal);
 800aa70:	697a      	ldr	r2, [r7, #20]
 800aa72:	697b      	ldr	r3, [r7, #20]
 800aa74:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800aa78:	4619      	mov	r1, r3
 800aa7a:	4610      	mov	r0, r2
 800aa7c:	f7ff f932 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800aa80:	697b      	ldr	r3, [r7, #20]
 800aa82:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800aa86:	2248      	movs	r2, #72	@ 0x48
 800aa88:	216f      	movs	r1, #111	@ 0x6f
 800aa8a:	4618      	mov	r0, r3
 800aa8c:	f7fe ff87 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800aa90:	697b      	ldr	r3, [r7, #20]
 800aa92:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800aa96:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800aa9a:	2100      	movs	r1, #0
 800aa9c:	4618      	mov	r0, r3
 800aa9e:	f7fe feb5 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800aaa2:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800aaa6:	2101      	movs	r1, #1
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	f7fe feaf 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800aaae:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800aab2:	2106      	movs	r1, #6
 800aab4:	4618      	mov	r0, r3
 800aab6:	f7fe fea9 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800aaba:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800aabe:	2104      	movs	r1, #4
 800aac0:	4618      	mov	r0, r3
 800aac2:	f7fe fea3 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800aac6:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800aaca:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800aace:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800aad2:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800aad6:	9300      	str	r3, [sp, #0]
 800aad8:	4603      	mov	r3, r0
 800aada:	4620      	mov	r0, r4
 800aadc:	f007 fcb8 	bl	8012450 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800aae0:	697b      	ldr	r3, [r7, #20]
 800aae2:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800aae6:	2200      	movs	r2, #0
 800aae8:	2161      	movs	r1, #97	@ 0x61
 800aaea:	4618      	mov	r0, r3
 800aaec:	f7ff fd5a 	bl	800a5a4 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800aaf0:	697b      	ldr	r3, [r7, #20]
 800aaf2:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800aaf6:	697b      	ldr	r3, [r7, #20]
 800aaf8:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800aafc:	4619      	mov	r1, r3
 800aafe:	4610      	mov	r0, r2
 800ab00:	f7ff fd01 	bl	800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800ab04:	697a      	ldr	r2, [r7, #20]
 800ab06:	697b      	ldr	r3, [r7, #20]
 800ab08:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ab0c:	4619      	mov	r1, r3
 800ab0e:	4610      	mov	r0, r2
 800ab10:	f7ff f8e8 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800ab14:	697b      	ldr	r3, [r7, #20]
 800ab16:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ab1a:	22c3      	movs	r2, #195	@ 0xc3
 800ab1c:	216f      	movs	r1, #111	@ 0x6f
 800ab1e:	4618      	mov	r0, r3
 800ab20:	f7fe ff3d 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800ab24:	697b      	ldr	r3, [r7, #20]
 800ab26:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800ab2a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800ab2e:	2100      	movs	r1, #0
 800ab30:	4618      	mov	r0, r3
 800ab32:	f7fe fe6b 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800ab36:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800ab3a:	2101      	movs	r1, #1
 800ab3c:	4618      	mov	r0, r3
 800ab3e:	f7fe fe65 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800ab42:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800ab46:	2105      	movs	r1, #5
 800ab48:	4618      	mov	r0, r3
 800ab4a:	f7fe fe5f 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800ab4e:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800ab52:	2104      	movs	r1, #4
 800ab54:	4618      	mov	r0, r3
 800ab56:	f7fe fe59 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800ab5a:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800ab5e:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800ab62:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800ab66:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800ab6a:	9300      	str	r3, [sp, #0]
 800ab6c:	4603      	mov	r3, r0
 800ab6e:	4620      	mov	r0, r4
 800ab70:	f007 fc6e 	bl	8012450 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800ab74:	697b      	ldr	r3, [r7, #20]
 800ab76:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ab7a:	2200      	movs	r2, #0
 800ab7c:	215f      	movs	r1, #95	@ 0x5f
 800ab7e:	4618      	mov	r0, r3
 800ab80:	f7ff fd10 	bl	800a5a4 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800ab84:	697b      	ldr	r3, [r7, #20]
 800ab86:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800ab8a:	697b      	ldr	r3, [r7, #20]
 800ab8c:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800ab90:	4619      	mov	r1, r3
 800ab92:	4610      	mov	r0, r2
 800ab94:	f7ff fcb7 	bl	800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800ab98:	697a      	ldr	r2, [r7, #20]
 800ab9a:	697b      	ldr	r3, [r7, #20]
 800ab9c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800aba0:	4619      	mov	r1, r3
 800aba2:	4610      	mov	r0, r2
 800aba4:	f7ff f89e 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800aba8:	697b      	ldr	r3, [r7, #20]
 800abaa:	4618      	mov	r0, r3
 800abac:	37b0      	adds	r7, #176	@ 0xb0
 800abae:	46bd      	mov	sp, r7
 800abb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800abb4 <_ZN23humidity_screenViewBaseD1Ev>:

humidity_screenViewBase::~humidity_screenViewBase()
 800abb4:	b580      	push	{r7, lr}
 800abb6:	b082      	sub	sp, #8
 800abb8:	af00      	add	r7, sp, #0
 800abba:	6078      	str	r0, [r7, #4]
 800abbc:	4a1c      	ldr	r2, [pc, #112]	@ (800ac30 <_ZN23humidity_screenViewBaseD1Ev+0x7c>)
 800abbe:	687b      	ldr	r3, [r7, #4]
 800abc0:	601a      	str	r2, [r3, #0]
{

}
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800abc8:	4618      	mov	r0, r3
 800abca:	f000 fa53 	bl	800b074 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800abce:	687b      	ldr	r3, [r7, #4]
 800abd0:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800abd4:	4618      	mov	r0, r3
 800abd6:	f000 fa6f 	bl	800b0b8 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800abda:	687b      	ldr	r3, [r7, #4]
 800abdc:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800abe0:	4618      	mov	r0, r3
 800abe2:	f000 faf7 	bl	800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800abe6:	687b      	ldr	r3, [r7, #4]
 800abe8:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800abec:	4618      	mov	r0, r3
 800abee:	f000 faf1 	bl	800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800abf2:	687b      	ldr	r3, [r7, #4]
 800abf4:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800abf8:	4618      	mov	r0, r3
 800abfa:	f000 faa7 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800abfe:	687b      	ldr	r3, [r7, #4]
 800ac00:	33b4      	adds	r3, #180	@ 0xb4
 800ac02:	4618      	mov	r0, r3
 800ac04:	f000 fa7a 	bl	800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ac08:	687b      	ldr	r3, [r7, #4]
 800ac0a:	336c      	adds	r3, #108	@ 0x6c
 800ac0c:	4618      	mov	r0, r3
 800ac0e:	f7ff fbc9 	bl	800a3a4 <_ZN8touchgfx8TextAreaD1Ev>
 800ac12:	687b      	ldr	r3, [r7, #4]
 800ac14:	3340      	adds	r3, #64	@ 0x40
 800ac16:	4618      	mov	r0, r3
 800ac18:	f7ff fafa 	bl	800a210 <_ZN8touchgfx3BoxD1Ev>
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	4618      	mov	r0, r3
 800ac20:	f7ff fcf8 	bl	800a614 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 800ac24:	687b      	ldr	r3, [r7, #4]
 800ac26:	4618      	mov	r0, r3
 800ac28:	3708      	adds	r7, #8
 800ac2a:	46bd      	mov	sp, r7
 800ac2c:	bd80      	pop	{r7, pc}
 800ac2e:	bf00      	nop
 800ac30:	08028108 	.word	0x08028108

0800ac34 <_ZN23humidity_screenViewBaseD0Ev>:
humidity_screenViewBase::~humidity_screenViewBase()
 800ac34:	b580      	push	{r7, lr}
 800ac36:	b082      	sub	sp, #8
 800ac38:	af00      	add	r7, sp, #0
 800ac3a:	6078      	str	r0, [r7, #4]
}
 800ac3c:	6878      	ldr	r0, [r7, #4]
 800ac3e:	f7ff ffb9 	bl	800abb4 <_ZN23humidity_screenViewBaseD1Ev>
 800ac42:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800ac46:	6878      	ldr	r0, [r7, #4]
 800ac48:	f01a fef3 	bl	8025a32 <_ZdlPvj>
 800ac4c:	687b      	ldr	r3, [r7, #4]
 800ac4e:	4618      	mov	r0, r3
 800ac50:	3708      	adds	r7, #8
 800ac52:	46bd      	mov	sp, r7
 800ac54:	bd80      	pop	{r7, pc}

0800ac56 <_ZN23humidity_screenViewBase11setupScreenEv>:

void humidity_screenViewBase::setupScreen()
{
 800ac56:	b480      	push	{r7}
 800ac58:	b083      	sub	sp, #12
 800ac5a:	af00      	add	r7, sp, #0
 800ac5c:	6078      	str	r0, [r7, #4]

}
 800ac5e:	bf00      	nop
 800ac60:	370c      	adds	r7, #12
 800ac62:	46bd      	mov	sp, r7
 800ac64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac68:	4770      	bx	lr

0800ac6a <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void humidity_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800ac6a:	b580      	push	{r7, lr}
 800ac6c:	b082      	sub	sp, #8
 800ac6e:	af00      	add	r7, sp, #0
 800ac70:	6078      	str	r0, [r7, #4]
 800ac72:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800ac74:	687b      	ldr	r3, [r7, #4]
 800ac76:	33b4      	adds	r3, #180	@ 0xb4
 800ac78:	683a      	ldr	r2, [r7, #0]
 800ac7a:	429a      	cmp	r2, r3
 800ac7c:	d106      	bne.n	800ac8c <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800ac7e:	6878      	ldr	r0, [r7, #4]
 800ac80:	f7ff fcbc 	bl	800a5fc <_ZN23humidity_screenViewBase11applicationEv>
 800ac84:	4603      	mov	r3, r0
 800ac86:	4618      	mov	r0, r3
 800ac88:	f7fd fef4 	bl	8008a74 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800ac8c:	bf00      	nop
 800ac8e:	3708      	adds	r7, #8
 800ac90:	46bd      	mov	sp, r7
 800ac92:	bd80      	pop	{r7, pc}

0800ac94 <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void humidity_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800ac94:	b580      	push	{r7, lr}
 800ac96:	b082      	sub	sp, #8
 800ac98:	af00      	add	r7, sp, #0
 800ac9a:	6078      	str	r0, [r7, #4]
 800ac9c:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800ac9e:	687b      	ldr	r3, [r7, #4]
 800aca0:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800aca4:	683a      	ldr	r2, [r7, #0]
 800aca6:	429a      	cmp	r2, r3
 800aca8:	d105      	bne.n	800acb6 <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800acaa:	687b      	ldr	r3, [r7, #4]
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	332c      	adds	r3, #44	@ 0x2c
 800acb0:	681b      	ldr	r3, [r3, #0]
 800acb2:	6878      	ldr	r0, [r7, #4]
 800acb4:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800acbc:	683a      	ldr	r2, [r7, #0]
 800acbe:	429a      	cmp	r2, r3
 800acc0:	d105      	bne.n	800acce <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800acc2:	687b      	ldr	r3, [r7, #4]
 800acc4:	681b      	ldr	r3, [r3, #0]
 800acc6:	3330      	adds	r3, #48	@ 0x30
 800acc8:	681b      	ldr	r3, [r3, #0]
 800acca:	6878      	ldr	r0, [r7, #4]
 800accc:	4798      	blx	r3
    }
}
 800acce:	bf00      	nop
 800acd0:	3708      	adds	r7, #8
 800acd2:	46bd      	mov	sp, r7
 800acd4:	bd80      	pop	{r7, pc}
	...

0800acd8 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>:
    View()
 800acd8:	b580      	push	{r7, lr}
 800acda:	b082      	sub	sp, #8
 800acdc:	af00      	add	r7, sp, #0
 800acde:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ace0:	687b      	ldr	r3, [r7, #4]
 800ace2:	4618      	mov	r0, r3
 800ace4:	f00a fc62 	bl	80155ac <_ZN8touchgfx6ScreenC1Ev>
 800ace8:	4a05      	ldr	r2, [pc, #20]	@ (800ad00 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev+0x28>)
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	601a      	str	r2, [r3, #0]
 800acee:	687b      	ldr	r3, [r7, #4]
 800acf0:	2200      	movs	r2, #0
 800acf2:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800acf4:	687b      	ldr	r3, [r7, #4]
 800acf6:	4618      	mov	r0, r3
 800acf8:	3708      	adds	r7, #8
 800acfa:	46bd      	mov	sp, r7
 800acfc:	bd80      	pop	{r7, pc}
 800acfe:	bf00      	nop
 800ad00:	08028210 	.word	0x08028210

0800ad04 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800ad04:	b580      	push	{r7, lr}
 800ad06:	b082      	sub	sp, #8
 800ad08:	af00      	add	r7, sp, #0
 800ad0a:	6078      	str	r0, [r7, #4]
 800ad0c:	687b      	ldr	r3, [r7, #4]
 800ad0e:	4618      	mov	r0, r3
 800ad10:	f7ff f9e4 	bl	800a0dc <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800ad14:	4a03      	ldr	r2, [pc, #12]	@ (800ad24 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800ad16:	687b      	ldr	r3, [r7, #4]
 800ad18:	601a      	str	r2, [r3, #0]
 800ad1a:	687b      	ldr	r3, [r7, #4]
 800ad1c:	4618      	mov	r0, r3
 800ad1e:	3708      	adds	r7, #8
 800ad20:	46bd      	mov	sp, r7
 800ad22:	bd80      	pop	{r7, pc}
 800ad24:	080282ec 	.word	0x080282ec

0800ad28 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800ad28:	b580      	push	{r7, lr}
 800ad2a:	b082      	sub	sp, #8
 800ad2c:	af00      	add	r7, sp, #0
 800ad2e:	6078      	str	r0, [r7, #4]
 800ad30:	4a05      	ldr	r2, [pc, #20]	@ (800ad48 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800ad32:	687b      	ldr	r3, [r7, #4]
 800ad34:	601a      	str	r2, [r3, #0]
 800ad36:	687b      	ldr	r3, [r7, #4]
 800ad38:	4618      	mov	r0, r3
 800ad3a:	f7ff fb11 	bl	800a360 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800ad3e:	687b      	ldr	r3, [r7, #4]
 800ad40:	4618      	mov	r0, r3
 800ad42:	3708      	adds	r7, #8
 800ad44:	46bd      	mov	sp, r7
 800ad46:	bd80      	pop	{r7, pc}
 800ad48:	080282ec 	.word	0x080282ec

0800ad4c <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800ad4c:	b580      	push	{r7, lr}
 800ad4e:	b082      	sub	sp, #8
 800ad50:	af00      	add	r7, sp, #0
 800ad52:	6078      	str	r0, [r7, #4]
 800ad54:	6878      	ldr	r0, [r7, #4]
 800ad56:	f7ff ffe7 	bl	800ad28 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800ad5a:	2134      	movs	r1, #52	@ 0x34
 800ad5c:	6878      	ldr	r0, [r7, #4]
 800ad5e:	f01a fe68 	bl	8025a32 <_ZdlPvj>
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	4618      	mov	r0, r3
 800ad66:	3708      	adds	r7, #8
 800ad68:	46bd      	mov	sp, r7
 800ad6a:	bd80      	pop	{r7, pc}

0800ad6c <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800ad6c:	b580      	push	{r7, lr}
 800ad6e:	b082      	sub	sp, #8
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	6078      	str	r0, [r7, #4]
 800ad74:	4a05      	ldr	r2, [pc, #20]	@ (800ad8c <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800ad76:	687b      	ldr	r3, [r7, #4]
 800ad78:	601a      	str	r2, [r3, #0]
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	4618      	mov	r0, r3
 800ad7e:	f7ff fa47 	bl	800a210 <_ZN8touchgfx3BoxD1Ev>
 800ad82:	687b      	ldr	r3, [r7, #4]
 800ad84:	4618      	mov	r0, r3
 800ad86:	3708      	adds	r7, #8
 800ad88:	46bd      	mov	sp, r7
 800ad8a:	bd80      	pop	{r7, pc}
 800ad8c:	080292a4 	.word	0x080292a4

0800ad90 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800ad90:	b580      	push	{r7, lr}
 800ad92:	b082      	sub	sp, #8
 800ad94:	af00      	add	r7, sp, #0
 800ad96:	6078      	str	r0, [r7, #4]
 800ad98:	6878      	ldr	r0, [r7, #4]
 800ad9a:	f7ff ffe7 	bl	800ad6c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800ad9e:	2134      	movs	r1, #52	@ 0x34
 800ada0:	6878      	ldr	r0, [r7, #4]
 800ada2:	f01a fe46 	bl	8025a32 <_ZdlPvj>
 800ada6:	687b      	ldr	r3, [r7, #4]
 800ada8:	4618      	mov	r0, r3
 800adaa:	3708      	adds	r7, #8
 800adac:	46bd      	mov	sp, r7
 800adae:	bd80      	pop	{r7, pc}

0800adb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800adb0:	b580      	push	{r7, lr}
 800adb2:	b082      	sub	sp, #8
 800adb4:	af00      	add	r7, sp, #0
 800adb6:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	4618      	mov	r0, r3
 800adbc:	2334      	movs	r3, #52	@ 0x34
 800adbe:	461a      	mov	r2, r3
 800adc0:	2100      	movs	r1, #0
 800adc2:	f01b f8ec 	bl	8025f9e <memset>
 800adc6:	687b      	ldr	r3, [r7, #4]
 800adc8:	4618      	mov	r0, r3
 800adca:	f7ff ff9b 	bl	800ad04 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800adce:	4a17      	ldr	r2, [pc, #92]	@ (800ae2c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800add0:	687b      	ldr	r3, [r7, #4]
 800add2:	601a      	str	r2, [r3, #0]
 800add4:	687b      	ldr	r3, [r7, #4]
 800add6:	3334      	adds	r3, #52	@ 0x34
 800add8:	4618      	mov	r0, r3
 800adda:	f7ff fa3b 	bl	800a254 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800adde:	687b      	ldr	r3, [r7, #4]
 800ade0:	3368      	adds	r3, #104	@ 0x68
 800ade2:	4618      	mov	r0, r3
 800ade4:	f7fe fcbe 	bl	8009764 <_ZN8touchgfx9colortypeC1Ev>
 800ade8:	687b      	ldr	r3, [r7, #4]
 800adea:	336c      	adds	r3, #108	@ 0x6c
 800adec:	4618      	mov	r0, r3
 800adee:	f7fe fcb9 	bl	8009764 <_ZN8touchgfx9colortypeC1Ev>
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	3370      	adds	r3, #112	@ 0x70
 800adf6:	4618      	mov	r0, r3
 800adf8:	f7fe fcb4 	bl	8009764 <_ZN8touchgfx9colortypeC1Ev>
 800adfc:	687b      	ldr	r3, [r7, #4]
 800adfe:	3374      	adds	r3, #116	@ 0x74
 800ae00:	4618      	mov	r0, r3
 800ae02:	f7fe fcaf 	bl	8009764 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800ae06:	687b      	ldr	r3, [r7, #4]
 800ae08:	3334      	adds	r3, #52	@ 0x34
 800ae0a:	2200      	movs	r2, #0
 800ae0c:	2100      	movs	r1, #0
 800ae0e:	4618      	mov	r0, r3
 800ae10:	f7fe fdc5 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800ae14:	687a      	ldr	r2, [r7, #4]
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	3334      	adds	r3, #52	@ 0x34
 800ae1a:	4619      	mov	r1, r3
 800ae1c:	4610      	mov	r0, r2
 800ae1e:	f005 fbdf 	bl	80105e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	4618      	mov	r0, r3
 800ae26:	3708      	adds	r7, #8
 800ae28:	46bd      	mov	sp, r7
 800ae2a:	bd80      	pop	{r7, pc}
 800ae2c:	08028174 	.word	0x08028174

0800ae30 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800ae30:	b480      	push	{r7}
 800ae32:	b083      	sub	sp, #12
 800ae34:	af00      	add	r7, sp, #0
 800ae36:	6078      	str	r0, [r7, #4]
 800ae38:	4a04      	ldr	r2, [pc, #16]	@ (800ae4c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800ae3a:	687b      	ldr	r3, [r7, #4]
 800ae3c:	601a      	str	r2, [r3, #0]
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	4618      	mov	r0, r3
 800ae42:	370c      	adds	r7, #12
 800ae44:	46bd      	mov	sp, r7
 800ae46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae4a:	4770      	bx	lr
 800ae4c:	08028388 	.word	0x08028388

0800ae50 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800ae50:	b580      	push	{r7, lr}
 800ae52:	b084      	sub	sp, #16
 800ae54:	af00      	add	r7, sp, #0
 800ae56:	60f8      	str	r0, [r7, #12]
 800ae58:	60b9      	str	r1, [r7, #8]
 800ae5a:	4639      	mov	r1, r7
 800ae5c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800ae60:	68fb      	ldr	r3, [r7, #12]
 800ae62:	4618      	mov	r0, r3
 800ae64:	f7ff ffe4 	bl	800ae30 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800ae68:	4a08      	ldr	r2, [pc, #32]	@ (800ae8c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800ae6a:	68fb      	ldr	r3, [r7, #12]
 800ae6c:	601a      	str	r2, [r3, #0]
 800ae6e:	68fb      	ldr	r3, [r7, #12]
 800ae70:	68ba      	ldr	r2, [r7, #8]
 800ae72:	605a      	str	r2, [r3, #4]
 800ae74:	68fb      	ldr	r3, [r7, #12]
 800ae76:	3308      	adds	r3, #8
 800ae78:	463a      	mov	r2, r7
 800ae7a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ae7e:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800ae82:	68fb      	ldr	r3, [r7, #12]
 800ae84:	4618      	mov	r0, r3
 800ae86:	3710      	adds	r7, #16
 800ae88:	46bd      	mov	sp, r7
 800ae8a:	bd80      	pop	{r7, pc}
 800ae8c:	0802815c 	.word	0x0802815c

0800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800ae90:	b480      	push	{r7}
 800ae92:	b083      	sub	sp, #12
 800ae94:	af00      	add	r7, sp, #0
 800ae96:	6078      	str	r0, [r7, #4]
 800ae98:	4a04      	ldr	r2, [pc, #16]	@ (800aeac <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800ae9a:	687b      	ldr	r3, [r7, #4]
 800ae9c:	601a      	str	r2, [r3, #0]
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	4618      	mov	r0, r3
 800aea2:	370c      	adds	r7, #12
 800aea4:	46bd      	mov	sp, r7
 800aea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeaa:	4770      	bx	lr
 800aeac:	08028244 	.word	0x08028244

0800aeb0 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800aeb0:	b580      	push	{r7, lr}
 800aeb2:	b084      	sub	sp, #16
 800aeb4:	af00      	add	r7, sp, #0
 800aeb6:	60f8      	str	r0, [r7, #12]
 800aeb8:	60b9      	str	r1, [r7, #8]
 800aeba:	4639      	mov	r1, r7
 800aebc:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800aec0:	68fb      	ldr	r3, [r7, #12]
 800aec2:	4618      	mov	r0, r3
 800aec4:	f7ff ffe4 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800aec8:	4a08      	ldr	r2, [pc, #32]	@ (800aeec <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800aeca:	68fb      	ldr	r3, [r7, #12]
 800aecc:	601a      	str	r2, [r3, #0]
 800aece:	68fb      	ldr	r3, [r7, #12]
 800aed0:	68ba      	ldr	r2, [r7, #8]
 800aed2:	605a      	str	r2, [r3, #4]
 800aed4:	68fb      	ldr	r3, [r7, #12]
 800aed6:	3308      	adds	r3, #8
 800aed8:	463a      	mov	r2, r7
 800aeda:	e892 0003 	ldmia.w	r2, {r0, r1}
 800aede:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800aee2:	68fb      	ldr	r3, [r7, #12]
 800aee4:	4618      	mov	r0, r3
 800aee6:	3710      	adds	r7, #16
 800aee8:	46bd      	mov	sp, r7
 800aeea:	bd80      	pop	{r7, pc}
 800aeec:	08028144 	.word	0x08028144

0800aef0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800aef0:	b590      	push	{r4, r7, lr}
 800aef2:	b087      	sub	sp, #28
 800aef4:	af02      	add	r7, sp, #8
 800aef6:	60f8      	str	r0, [r7, #12]
 800aef8:	4608      	mov	r0, r1
 800aefa:	4611      	mov	r1, r2
 800aefc:	461a      	mov	r2, r3
 800aefe:	4603      	mov	r3, r0
 800af00:	817b      	strh	r3, [r7, #10]
 800af02:	460b      	mov	r3, r1
 800af04:	813b      	strh	r3, [r7, #8]
 800af06:	4613      	mov	r3, r2
 800af08:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800af0a:	68fb      	ldr	r3, [r7, #12]
 800af0c:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800af10:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800af14:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800af18:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800af1c:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800af20:	9300      	str	r3, [sp, #0]
 800af22:	4623      	mov	r3, r4
 800af24:	f7fe fcfc 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800af28:	bf00      	nop
 800af2a:	3714      	adds	r7, #20
 800af2c:	46bd      	mov	sp, r7
 800af2e:	bd90      	pop	{r4, r7, pc}

0800af30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800af30:	b580      	push	{r7, lr}
 800af32:	b082      	sub	sp, #8
 800af34:	af00      	add	r7, sp, #0
 800af36:	6078      	str	r0, [r7, #4]
 800af38:	460b      	mov	r3, r1
 800af3a:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800af3c:	687b      	ldr	r3, [r7, #4]
 800af3e:	3334      	adds	r3, #52	@ 0x34
 800af40:	78fa      	ldrb	r2, [r7, #3]
 800af42:	b292      	uxth	r2, r2
 800af44:	4611      	mov	r1, r2
 800af46:	4618      	mov	r0, r3
 800af48:	f7ff f9ae 	bl	800a2a8 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800af4c:	bf00      	nop
 800af4e:	3708      	adds	r7, #8
 800af50:	46bd      	mov	sp, r7
 800af52:	bd80      	pop	{r7, pc}

0800af54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800af54:	b580      	push	{r7, lr}
 800af56:	b084      	sub	sp, #16
 800af58:	af00      	add	r7, sp, #0
 800af5a:	60f8      	str	r0, [r7, #12]
 800af5c:	60b9      	str	r1, [r7, #8]
 800af5e:	607a      	str	r2, [r7, #4]
 800af60:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800af62:	68fb      	ldr	r3, [r7, #12]
 800af64:	68ba      	ldr	r2, [r7, #8]
 800af66:	669a      	str	r2, [r3, #104]	@ 0x68
        down = colorPressed;
 800af68:	68fb      	ldr	r3, [r7, #12]
 800af6a:	687a      	ldr	r2, [r7, #4]
 800af6c:	66da      	str	r2, [r3, #108]	@ 0x6c
        borderUp = borderColorReleased;
 800af6e:	68fb      	ldr	r3, [r7, #12]
 800af70:	683a      	ldr	r2, [r7, #0]
 800af72:	671a      	str	r2, [r3, #112]	@ 0x70
        borderDown = borderColorPressed;
 800af74:	68fb      	ldr	r3, [r7, #12]
 800af76:	69ba      	ldr	r2, [r7, #24]
 800af78:	675a      	str	r2, [r3, #116]	@ 0x74
        handlePressedUpdated();
 800af7a:	68fb      	ldr	r3, [r7, #12]
 800af7c:	681b      	ldr	r3, [r3, #0]
 800af7e:	338c      	adds	r3, #140	@ 0x8c
 800af80:	681b      	ldr	r3, [r3, #0]
 800af82:	68f8      	ldr	r0, [r7, #12]
 800af84:	4798      	blx	r3
    }
 800af86:	bf00      	nop
 800af88:	3710      	adds	r7, #16
 800af8a:	46bd      	mov	sp, r7
 800af8c:	bd80      	pop	{r7, pc}
	...

0800af90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800af90:	b480      	push	{r7}
 800af92:	b083      	sub	sp, #12
 800af94:	af00      	add	r7, sp, #0
 800af96:	6078      	str	r0, [r7, #4]
    }
 800af98:	4a04      	ldr	r2, [pc, #16]	@ (800afac <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800af9a:	687b      	ldr	r3, [r7, #4]
 800af9c:	601a      	str	r2, [r3, #0]
 800af9e:	687b      	ldr	r3, [r7, #4]
 800afa0:	4618      	mov	r0, r3
 800afa2:	370c      	adds	r7, #12
 800afa4:	46bd      	mov	sp, r7
 800afa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afaa:	4770      	bx	lr
 800afac:	08028388 	.word	0x08028388

0800afb0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800afb0:	b580      	push	{r7, lr}
 800afb2:	b082      	sub	sp, #8
 800afb4:	af00      	add	r7, sp, #0
 800afb6:	6078      	str	r0, [r7, #4]
    }
 800afb8:	6878      	ldr	r0, [r7, #4]
 800afba:	f7ff ffe9 	bl	800af90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800afbe:	2104      	movs	r1, #4
 800afc0:	6878      	ldr	r0, [r7, #4]
 800afc2:	f01a fd36 	bl	8025a32 <_ZdlPvj>
 800afc6:	687b      	ldr	r3, [r7, #4]
 800afc8:	4618      	mov	r0, r3
 800afca:	3708      	adds	r7, #8
 800afcc:	46bd      	mov	sp, r7
 800afce:	bd80      	pop	{r7, pc}

0800afd0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800afd0:	b480      	push	{r7}
 800afd2:	b083      	sub	sp, #12
 800afd4:	af00      	add	r7, sp, #0
 800afd6:	6078      	str	r0, [r7, #4]
    }
 800afd8:	4a04      	ldr	r2, [pc, #16]	@ (800afec <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800afda:	687b      	ldr	r3, [r7, #4]
 800afdc:	601a      	str	r2, [r3, #0]
 800afde:	687b      	ldr	r3, [r7, #4]
 800afe0:	4618      	mov	r0, r3
 800afe2:	370c      	adds	r7, #12
 800afe4:	46bd      	mov	sp, r7
 800afe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afea:	4770      	bx	lr
 800afec:	08028244 	.word	0x08028244

0800aff0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800aff0:	b580      	push	{r7, lr}
 800aff2:	b082      	sub	sp, #8
 800aff4:	af00      	add	r7, sp, #0
 800aff6:	6078      	str	r0, [r7, #4]
    }
 800aff8:	6878      	ldr	r0, [r7, #4]
 800affa:	f7ff ffe9 	bl	800afd0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800affe:	2104      	movs	r1, #4
 800b000:	6878      	ldr	r0, [r7, #4]
 800b002:	f01a fd16 	bl	8025a32 <_ZdlPvj>
 800b006:	687b      	ldr	r3, [r7, #4]
 800b008:	4618      	mov	r0, r3
 800b00a:	3708      	adds	r7, #8
 800b00c:	46bd      	mov	sp, r7
 800b00e:	bd80      	pop	{r7, pc}

0800b010 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800b010:	b590      	push	{r4, r7, lr}
 800b012:	b083      	sub	sp, #12
 800b014:	af00      	add	r7, sp, #0
 800b016:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800b018:	687b      	ldr	r3, [r7, #4]
 800b01a:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b01e:	687b      	ldr	r3, [r7, #4]
 800b020:	4618      	mov	r0, r3
 800b022:	f7ff f891 	bl	800a148 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800b026:	4603      	mov	r3, r0
 800b028:	2b00      	cmp	r3, #0
 800b02a:	d002      	beq.n	800b032 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800b02c:	687b      	ldr	r3, [r7, #4]
 800b02e:	336c      	adds	r3, #108	@ 0x6c
 800b030:	e001      	b.n	800b036 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800b032:	687b      	ldr	r3, [r7, #4]
 800b034:	3368      	adds	r3, #104	@ 0x68
 800b036:	6819      	ldr	r1, [r3, #0]
 800b038:	4620      	mov	r0, r4
 800b03a:	f7fe febb 	bl	8009db4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800b03e:	687b      	ldr	r3, [r7, #4]
 800b040:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b044:	687b      	ldr	r3, [r7, #4]
 800b046:	4618      	mov	r0, r3
 800b048:	f7ff f87e 	bl	800a148 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800b04c:	4603      	mov	r3, r0
 800b04e:	2b00      	cmp	r3, #0
 800b050:	d002      	beq.n	800b058 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800b052:	687b      	ldr	r3, [r7, #4]
 800b054:	3374      	adds	r3, #116	@ 0x74
 800b056:	e001      	b.n	800b05c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800b058:	687b      	ldr	r3, [r7, #4]
 800b05a:	3370      	adds	r3, #112	@ 0x70
 800b05c:	6819      	ldr	r1, [r3, #0]
 800b05e:	4620      	mov	r0, r4
 800b060:	f7ff f914 	bl	800a28c <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800b064:	687b      	ldr	r3, [r7, #4]
 800b066:	4618      	mov	r0, r3
 800b068:	f7ff f8bd 	bl	800a1e6 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800b06c:	bf00      	nop
 800b06e:	370c      	adds	r7, #12
 800b070:	46bd      	mov	sp, r7
 800b072:	bd90      	pop	{r4, r7, pc}

0800b074 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800b074:	b580      	push	{r7, lr}
 800b076:	b082      	sub	sp, #8
 800b078:	af00      	add	r7, sp, #0
 800b07a:	6078      	str	r0, [r7, #4]
 800b07c:	4a05      	ldr	r2, [pc, #20]	@ (800b094 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	601a      	str	r2, [r3, #0]
 800b082:	687b      	ldr	r3, [r7, #4]
 800b084:	4618      	mov	r0, r3
 800b086:	f7ff ffa3 	bl	800afd0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800b08a:	687b      	ldr	r3, [r7, #4]
 800b08c:	4618      	mov	r0, r3
 800b08e:	3708      	adds	r7, #8
 800b090:	46bd      	mov	sp, r7
 800b092:	bd80      	pop	{r7, pc}
 800b094:	08028144 	.word	0x08028144

0800b098 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800b098:	b580      	push	{r7, lr}
 800b09a:	b082      	sub	sp, #8
 800b09c:	af00      	add	r7, sp, #0
 800b09e:	6078      	str	r0, [r7, #4]
 800b0a0:	6878      	ldr	r0, [r7, #4]
 800b0a2:	f7ff ffe7 	bl	800b074 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800b0a6:	2110      	movs	r1, #16
 800b0a8:	6878      	ldr	r0, [r7, #4]
 800b0aa:	f01a fcc2 	bl	8025a32 <_ZdlPvj>
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	4618      	mov	r0, r3
 800b0b2:	3708      	adds	r7, #8
 800b0b4:	46bd      	mov	sp, r7
 800b0b6:	bd80      	pop	{r7, pc}

0800b0b8 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800b0b8:	b580      	push	{r7, lr}
 800b0ba:	b082      	sub	sp, #8
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
 800b0c0:	4a05      	ldr	r2, [pc, #20]	@ (800b0d8 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800b0c2:	687b      	ldr	r3, [r7, #4]
 800b0c4:	601a      	str	r2, [r3, #0]
 800b0c6:	687b      	ldr	r3, [r7, #4]
 800b0c8:	4618      	mov	r0, r3
 800b0ca:	f7ff ff61 	bl	800af90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	4618      	mov	r0, r3
 800b0d2:	3708      	adds	r7, #8
 800b0d4:	46bd      	mov	sp, r7
 800b0d6:	bd80      	pop	{r7, pc}
 800b0d8:	0802815c 	.word	0x0802815c

0800b0dc <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800b0dc:	b580      	push	{r7, lr}
 800b0de:	b082      	sub	sp, #8
 800b0e0:	af00      	add	r7, sp, #0
 800b0e2:	6078      	str	r0, [r7, #4]
 800b0e4:	6878      	ldr	r0, [r7, #4]
 800b0e6:	f7ff ffe7 	bl	800b0b8 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b0ea:	2110      	movs	r1, #16
 800b0ec:	6878      	ldr	r0, [r7, #4]
 800b0ee:	f01a fca0 	bl	8025a32 <_ZdlPvj>
 800b0f2:	687b      	ldr	r3, [r7, #4]
 800b0f4:	4618      	mov	r0, r3
 800b0f6:	3708      	adds	r7, #8
 800b0f8:	46bd      	mov	sp, r7
 800b0fa:	bd80      	pop	{r7, pc}

0800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800b0fc:	b580      	push	{r7, lr}
 800b0fe:	b082      	sub	sp, #8
 800b100:	af00      	add	r7, sp, #0
 800b102:	6078      	str	r0, [r7, #4]
 800b104:	4a08      	ldr	r2, [pc, #32]	@ (800b128 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800b106:	687b      	ldr	r3, [r7, #4]
 800b108:	601a      	str	r2, [r3, #0]
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	3334      	adds	r3, #52	@ 0x34
 800b10e:	4618      	mov	r0, r3
 800b110:	f7ff fe2c 	bl	800ad6c <_ZN8touchgfx13BoxWithBorderD1Ev>
 800b114:	687b      	ldr	r3, [r7, #4]
 800b116:	4618      	mov	r0, r3
 800b118:	f7ff fe06 	bl	800ad28 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800b11c:	687b      	ldr	r3, [r7, #4]
 800b11e:	4618      	mov	r0, r3
 800b120:	3708      	adds	r7, #8
 800b122:	46bd      	mov	sp, r7
 800b124:	bd80      	pop	{r7, pc}
 800b126:	bf00      	nop
 800b128:	08028174 	.word	0x08028174

0800b12c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800b12c:	b580      	push	{r7, lr}
 800b12e:	b082      	sub	sp, #8
 800b130:	af00      	add	r7, sp, #0
 800b132:	6078      	str	r0, [r7, #4]
 800b134:	6878      	ldr	r0, [r7, #4]
 800b136:	f7ff ffe1 	bl	800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b13a:	2178      	movs	r1, #120	@ 0x78
 800b13c:	6878      	ldr	r0, [r7, #4]
 800b13e:	f01a fc78 	bl	8025a32 <_ZdlPvj>
 800b142:	687b      	ldr	r3, [r7, #4]
 800b144:	4618      	mov	r0, r3
 800b146:	3708      	adds	r7, #8
 800b148:	46bd      	mov	sp, r7
 800b14a:	bd80      	pop	{r7, pc}

0800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800b14c:	b580      	push	{r7, lr}
 800b14e:	b082      	sub	sp, #8
 800b150:	af00      	add	r7, sp, #0
 800b152:	6078      	str	r0, [r7, #4]
 800b154:	4a05      	ldr	r2, [pc, #20]	@ (800b16c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	601a      	str	r2, [r3, #0]
 800b15a:	687b      	ldr	r3, [r7, #4]
 800b15c:	4618      	mov	r0, r3
 800b15e:	f7ff f973 	bl	800a448 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800b162:	687b      	ldr	r3, [r7, #4]
 800b164:	4618      	mov	r0, r3
 800b166:	3708      	adds	r7, #8
 800b168:	46bd      	mov	sp, r7
 800b16a:	bd80      	pop	{r7, pc}
 800b16c:	0802825c 	.word	0x0802825c

0800b170 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800b170:	b580      	push	{r7, lr}
 800b172:	b082      	sub	sp, #8
 800b174:	af00      	add	r7, sp, #0
 800b176:	6078      	str	r0, [r7, #4]
 800b178:	6878      	ldr	r0, [r7, #4]
 800b17a:	f7ff ffe7 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b17e:	214c      	movs	r1, #76	@ 0x4c
 800b180:	6878      	ldr	r0, [r7, #4]
 800b182:	f01a fc56 	bl	8025a32 <_ZdlPvj>
 800b186:	687b      	ldr	r3, [r7, #4]
 800b188:	4618      	mov	r0, r3
 800b18a:	3708      	adds	r7, #8
 800b18c:	46bd      	mov	sp, r7
 800b18e:	bd80      	pop	{r7, pc}

0800b190 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800b190:	b580      	push	{r7, lr}
 800b192:	b082      	sub	sp, #8
 800b194:	af00      	add	r7, sp, #0
 800b196:	6078      	str	r0, [r7, #4]
 800b198:	4a05      	ldr	r2, [pc, #20]	@ (800b1b0 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800b19a:	687b      	ldr	r3, [r7, #4]
 800b19c:	601a      	str	r2, [r3, #0]
 800b19e:	687b      	ldr	r3, [r7, #4]
 800b1a0:	4618      	mov	r0, r3
 800b1a2:	f7ff f9bf 	bl	800a524 <_ZN8touchgfx14AbstractButtonD1Ev>
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	3708      	adds	r7, #8
 800b1ac:	46bd      	mov	sp, r7
 800b1ae:	bd80      	pop	{r7, pc}
 800b1b0:	080291a0 	.word	0x080291a0

0800b1b4 <_ZN8touchgfx6ButtonD0Ev>:
 800b1b4:	b580      	push	{r7, lr}
 800b1b6:	b082      	sub	sp, #8
 800b1b8:	af00      	add	r7, sp, #0
 800b1ba:	6078      	str	r0, [r7, #4]
 800b1bc:	6878      	ldr	r0, [r7, #4]
 800b1be:	f7ff ffe7 	bl	800b190 <_ZN8touchgfx6ButtonD1Ev>
 800b1c2:	2134      	movs	r1, #52	@ 0x34
 800b1c4:	6878      	ldr	r0, [r7, #4]
 800b1c6:	f01a fc34 	bl	8025a32 <_ZdlPvj>
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	4618      	mov	r0, r3
 800b1ce:	3708      	adds	r7, #8
 800b1d0:	46bd      	mov	sp, r7
 800b1d2:	bd80      	pop	{r7, pc}

0800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800b1d4:	b580      	push	{r7, lr}
 800b1d6:	b082      	sub	sp, #8
 800b1d8:	af00      	add	r7, sp, #0
 800b1da:	6078      	str	r0, [r7, #4]
 800b1dc:	4a05      	ldr	r2, [pc, #20]	@ (800b1f4 <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800b1de:	687b      	ldr	r3, [r7, #4]
 800b1e0:	601a      	str	r2, [r3, #0]
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	4618      	mov	r0, r3
 800b1e6:	f7ff ffd3 	bl	800b190 <_ZN8touchgfx6ButtonD1Ev>
 800b1ea:	687b      	ldr	r3, [r7, #4]
 800b1ec:	4618      	mov	r0, r3
 800b1ee:	3708      	adds	r7, #8
 800b1f0:	46bd      	mov	sp, r7
 800b1f2:	bd80      	pop	{r7, pc}
 800b1f4:	0802930c 	.word	0x0802930c

0800b1f8 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800b1f8:	b580      	push	{r7, lr}
 800b1fa:	b082      	sub	sp, #8
 800b1fc:	af00      	add	r7, sp, #0
 800b1fe:	6078      	str	r0, [r7, #4]
 800b200:	6878      	ldr	r0, [r7, #4]
 800b202:	f7ff ffe7 	bl	800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800b206:	213c      	movs	r1, #60	@ 0x3c
 800b208:	6878      	ldr	r0, [r7, #4]
 800b20a:	f01a fc12 	bl	8025a32 <_ZdlPvj>
 800b20e:	687b      	ldr	r3, [r7, #4]
 800b210:	4618      	mov	r0, r3
 800b212:	3708      	adds	r7, #8
 800b214:	46bd      	mov	sp, r7
 800b216:	bd80      	pop	{r7, pc}

0800b218 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800b218:	b580      	push	{r7, lr}
 800b21a:	b082      	sub	sp, #8
 800b21c:	af00      	add	r7, sp, #0
 800b21e:	6078      	str	r0, [r7, #4]
 800b220:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	685b      	ldr	r3, [r3, #4]
 800b226:	687a      	ldr	r2, [r7, #4]
 800b228:	68d2      	ldr	r2, [r2, #12]
 800b22a:	1052      	asrs	r2, r2, #1
 800b22c:	1898      	adds	r0, r3, r2
 800b22e:	687b      	ldr	r3, [r7, #4]
 800b230:	68db      	ldr	r3, [r3, #12]
 800b232:	f003 0301 	and.w	r3, r3, #1
 800b236:	2b00      	cmp	r3, #0
 800b238:	d102      	bne.n	800b240 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800b23a:	687b      	ldr	r3, [r7, #4]
 800b23c:	689b      	ldr	r3, [r3, #8]
 800b23e:	e00a      	b.n	800b256 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800b240:	687b      	ldr	r3, [r7, #4]
 800b242:	685b      	ldr	r3, [r3, #4]
 800b244:	687a      	ldr	r2, [r7, #4]
 800b246:	68d2      	ldr	r2, [r2, #12]
 800b248:	1052      	asrs	r2, r2, #1
 800b24a:	4413      	add	r3, r2
 800b24c:	681b      	ldr	r3, [r3, #0]
 800b24e:	687a      	ldr	r2, [r7, #4]
 800b250:	6892      	ldr	r2, [r2, #8]
 800b252:	4413      	add	r3, r2
 800b254:	681b      	ldr	r3, [r3, #0]
 800b256:	6839      	ldr	r1, [r7, #0]
 800b258:	4798      	blx	r3
    }
 800b25a:	bf00      	nop
 800b25c:	3708      	adds	r7, #8
 800b25e:	46bd      	mov	sp, r7
 800b260:	bd80      	pop	{r7, pc}

0800b262 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800b262:	b480      	push	{r7}
 800b264:	b083      	sub	sp, #12
 800b266:	af00      	add	r7, sp, #0
 800b268:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	685b      	ldr	r3, [r3, #4]
 800b26e:	2b00      	cmp	r3, #0
 800b270:	d010      	beq.n	800b294 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800b272:	687b      	ldr	r3, [r7, #4]
 800b274:	689b      	ldr	r3, [r3, #8]
 800b276:	2b00      	cmp	r3, #0
 800b278:	d107      	bne.n	800b28a <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	68db      	ldr	r3, [r3, #12]
 800b27e:	f003 0301 	and.w	r3, r3, #1
 800b282:	2b00      	cmp	r3, #0
 800b284:	d101      	bne.n	800b28a <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800b286:	2301      	movs	r3, #1
 800b288:	e000      	b.n	800b28c <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800b28a:	2300      	movs	r3, #0
 800b28c:	2b01      	cmp	r3, #1
 800b28e:	d001      	beq.n	800b294 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800b290:	2301      	movs	r3, #1
 800b292:	e000      	b.n	800b296 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800b294:	2300      	movs	r3, #0
    }
 800b296:	4618      	mov	r0, r3
 800b298:	370c      	adds	r7, #12
 800b29a:	46bd      	mov	sp, r7
 800b29c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2a0:	4770      	bx	lr

0800b2a2 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800b2a2:	b580      	push	{r7, lr}
 800b2a4:	b082      	sub	sp, #8
 800b2a6:	af00      	add	r7, sp, #0
 800b2a8:	6078      	str	r0, [r7, #4]
 800b2aa:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800b2ac:	687b      	ldr	r3, [r7, #4]
 800b2ae:	685b      	ldr	r3, [r3, #4]
 800b2b0:	687a      	ldr	r2, [r7, #4]
 800b2b2:	68d2      	ldr	r2, [r2, #12]
 800b2b4:	1052      	asrs	r2, r2, #1
 800b2b6:	1898      	adds	r0, r3, r2
 800b2b8:	687b      	ldr	r3, [r7, #4]
 800b2ba:	68db      	ldr	r3, [r3, #12]
 800b2bc:	f003 0301 	and.w	r3, r3, #1
 800b2c0:	2b00      	cmp	r3, #0
 800b2c2:	d102      	bne.n	800b2ca <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800b2c4:	687b      	ldr	r3, [r7, #4]
 800b2c6:	689b      	ldr	r3, [r3, #8]
 800b2c8:	e00a      	b.n	800b2e0 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800b2ca:	687b      	ldr	r3, [r7, #4]
 800b2cc:	685b      	ldr	r3, [r3, #4]
 800b2ce:	687a      	ldr	r2, [r7, #4]
 800b2d0:	68d2      	ldr	r2, [r2, #12]
 800b2d2:	1052      	asrs	r2, r2, #1
 800b2d4:	4413      	add	r3, r2
 800b2d6:	681b      	ldr	r3, [r3, #0]
 800b2d8:	687a      	ldr	r2, [r7, #4]
 800b2da:	6892      	ldr	r2, [r2, #8]
 800b2dc:	4413      	add	r3, r2
 800b2de:	681b      	ldr	r3, [r3, #0]
 800b2e0:	6839      	ldr	r1, [r7, #0]
 800b2e2:	4798      	blx	r3
    }
 800b2e4:	bf00      	nop
 800b2e6:	3708      	adds	r7, #8
 800b2e8:	46bd      	mov	sp, r7
 800b2ea:	bd80      	pop	{r7, pc}

0800b2ec <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800b2ec:	b480      	push	{r7}
 800b2ee:	b083      	sub	sp, #12
 800b2f0:	af00      	add	r7, sp, #0
 800b2f2:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800b2f4:	687b      	ldr	r3, [r7, #4]
 800b2f6:	685b      	ldr	r3, [r3, #4]
 800b2f8:	2b00      	cmp	r3, #0
 800b2fa:	d010      	beq.n	800b31e <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b2fc:	687b      	ldr	r3, [r7, #4]
 800b2fe:	689b      	ldr	r3, [r3, #8]
 800b300:	2b00      	cmp	r3, #0
 800b302:	d107      	bne.n	800b314 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b304:	687b      	ldr	r3, [r7, #4]
 800b306:	68db      	ldr	r3, [r3, #12]
 800b308:	f003 0301 	and.w	r3, r3, #1
 800b30c:	2b00      	cmp	r3, #0
 800b30e:	d101      	bne.n	800b314 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b310:	2301      	movs	r3, #1
 800b312:	e000      	b.n	800b316 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800b314:	2300      	movs	r3, #0
 800b316:	2b01      	cmp	r3, #1
 800b318:	d001      	beq.n	800b31e <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b31a:	2301      	movs	r3, #1
 800b31c:	e000      	b.n	800b320 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800b31e:	2300      	movs	r3, #0
    }
 800b320:	4618      	mov	r0, r3
 800b322:	370c      	adds	r7, #12
 800b324:	46bd      	mov	sp, r7
 800b326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32a:	4770      	bx	lr

0800b32c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800b32c:	b590      	push	{r4, r7, lr}
 800b32e:	b083      	sub	sp, #12
 800b330:	af00      	add	r7, sp, #0
 800b332:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800b334:	687b      	ldr	r3, [r7, #4]
 800b336:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	4618      	mov	r0, r3
 800b33e:	f7fe ff10 	bl	800a162 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800b342:	4603      	mov	r3, r0
 800b344:	4619      	mov	r1, r3
 800b346:	4620      	mov	r0, r4
 800b348:	f7fe fd42 	bl	8009dd0 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800b34c:	687b      	ldr	r3, [r7, #4]
 800b34e:	4618      	mov	r0, r3
 800b350:	f7fe ff53 	bl	800a1fa <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800b354:	bf00      	nop
 800b356:	370c      	adds	r7, #12
 800b358:	46bd      	mov	sp, r7
 800b35a:	bd90      	pop	{r4, r7, pc}

0800b35c <_ZN20light_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800b35c:	b480      	push	{r7}
 800b35e:	b083      	sub	sp, #12
 800b360:	af00      	add	r7, sp, #0
 800b362:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in light_screen
    }
 800b364:	bf00      	nop
 800b366:	370c      	adds	r7, #12
 800b368:	46bd      	mov	sp, r7
 800b36a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b36e:	4770      	bx	lr

0800b370 <_ZN20light_screenViewBase8decreaseEv>:
    virtual void decrease()
 800b370:	b480      	push	{r7}
 800b372:	b083      	sub	sp, #12
 800b374:	af00      	add	r7, sp, #0
 800b376:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in light_screen
    }
 800b378:	bf00      	nop
 800b37a:	370c      	adds	r7, #12
 800b37c:	46bd      	mov	sp, r7
 800b37e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b382:	4770      	bx	lr

0800b384 <_ZN20light_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800b384:	b580      	push	{r7, lr}
 800b386:	b082      	sub	sp, #8
 800b388:	af00      	add	r7, sp, #0
 800b38a:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800b38c:	f008 fdf8 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 800b390:	4603      	mov	r3, r0
    }
 800b392:	4618      	mov	r0, r3
 800b394:	3708      	adds	r7, #8
 800b396:	46bd      	mov	sp, r7
 800b398:	bd80      	pop	{r7, pc}
	...

0800b39c <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>:
class View : public Screen
 800b39c:	b580      	push	{r7, lr}
 800b39e:	b082      	sub	sp, #8
 800b3a0:	af00      	add	r7, sp, #0
 800b3a2:	6078      	str	r0, [r7, #4]
 800b3a4:	4a05      	ldr	r2, [pc, #20]	@ (800b3bc <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev+0x20>)
 800b3a6:	687b      	ldr	r3, [r7, #4]
 800b3a8:	601a      	str	r2, [r3, #0]
 800b3aa:	687b      	ldr	r3, [r7, #4]
 800b3ac:	4618      	mov	r0, r3
 800b3ae:	f7fe fc41 	bl	8009c34 <_ZN8touchgfx6ScreenD1Ev>
 800b3b2:	687b      	ldr	r3, [r7, #4]
 800b3b4:	4618      	mov	r0, r3
 800b3b6:	3708      	adds	r7, #8
 800b3b8:	46bd      	mov	sp, r7
 800b3ba:	bd80      	pop	{r7, pc}
 800b3bc:	08028510 	.word	0x08028510

0800b3c0 <_ZN8touchgfx4ViewI21light_screenPresenterED0Ev>:
 800b3c0:	b580      	push	{r7, lr}
 800b3c2:	b082      	sub	sp, #8
 800b3c4:	af00      	add	r7, sp, #0
 800b3c6:	6078      	str	r0, [r7, #4]
 800b3c8:	6878      	ldr	r0, [r7, #4]
 800b3ca:	f7ff ffe7 	bl	800b39c <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>
 800b3ce:	2140      	movs	r1, #64	@ 0x40
 800b3d0:	6878      	ldr	r0, [r7, #4]
 800b3d2:	f01a fb2e 	bl	8025a32 <_ZdlPvj>
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	4618      	mov	r0, r3
 800b3da:	3708      	adds	r7, #8
 800b3dc:	46bd      	mov	sp, r7
 800b3de:	bd80      	pop	{r7, pc}

0800b3e0 <_ZN20light_screenViewBaseC1Ev>:
#include <gui_generated/light_screen_screen/light_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

light_screenViewBase::light_screenViewBase() :
 800b3e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3e4:	b0ae      	sub	sp, #184	@ 0xb8
 800b3e6:	af02      	add	r7, sp, #8
 800b3e8:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &light_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &light_screenViewBase::buttonCallbackHandler)
 800b3ea:	697b      	ldr	r3, [r7, #20]
 800b3ec:	4618      	mov	r0, r3
 800b3ee:	f000 fb37 	bl	800ba60 <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev>
 800b3f2:	4add      	ldr	r2, [pc, #884]	@ (800b768 <_ZN20light_screenViewBaseC1Ev+0x388>)
 800b3f4:	697b      	ldr	r3, [r7, #20]
 800b3f6:	601a      	str	r2, [r3, #0]
 800b3f8:	697b      	ldr	r3, [r7, #20]
 800b3fa:	3340      	adds	r3, #64	@ 0x40
 800b3fc:	4618      	mov	r0, r3
 800b3fe:	f7fe fcb5 	bl	8009d6c <_ZN8touchgfx3BoxC1Ev>
 800b402:	697b      	ldr	r3, [r7, #20]
 800b404:	336c      	adds	r3, #108	@ 0x6c
 800b406:	4618      	mov	r0, r3
 800b408:	f7fe fd08 	bl	8009e1c <_ZN8touchgfx8TextAreaC1Ev>
 800b40c:	697b      	ldr	r3, [r7, #20]
 800b40e:	33b4      	adds	r3, #180	@ 0xb4
 800b410:	4618      	mov	r0, r3
 800b412:	f7ff fccd 	bl	800adb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800b416:	697b      	ldr	r3, [r7, #20]
 800b418:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b41c:	4618      	mov	r0, r3
 800b41e:	f7ff f835 	bl	800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800b422:	697b      	ldr	r3, [r7, #20]
 800b424:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b428:	4618      	mov	r0, r3
 800b42a:	f007 f8a7 	bl	801257c <_ZN8touchgfx14ButtonWithIconC1Ev>
 800b42e:	697b      	ldr	r3, [r7, #20]
 800b430:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b434:	4618      	mov	r0, r3
 800b436:	f007 f8a1 	bl	801257c <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &light_screenViewBase::flexButtonCallbackHandler),
 800b43a:	697b      	ldr	r3, [r7, #20]
 800b43c:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800b440:	4bca      	ldr	r3, [pc, #808]	@ (800b76c <_ZN20light_screenViewBaseC1Ev+0x38c>)
 800b442:	627b      	str	r3, [r7, #36]	@ 0x24
 800b444:	2300      	movs	r3, #0
 800b446:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b448:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800b44c:	cb0c      	ldmia	r3, {r2, r3}
 800b44e:	6979      	ldr	r1, [r7, #20]
 800b450:	f000 fb1c 	bl	800ba8c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &light_screenViewBase::buttonCallbackHandler)
 800b454:	697b      	ldr	r3, [r7, #20]
 800b456:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800b45a:	4bc5      	ldr	r3, [pc, #788]	@ (800b770 <_ZN20light_screenViewBaseC1Ev+0x390>)
 800b45c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b45e:	2300      	movs	r3, #0
 800b460:	633b      	str	r3, [r7, #48]	@ 0x30
 800b462:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800b466:	cb0c      	ldmia	r3, {r2, r3}
 800b468:	6979      	ldr	r1, [r7, #20]
 800b46a:	f000 fb2f 	bl	800bacc <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800b46e:	697b      	ldr	r3, [r7, #20]
 800b470:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800b474:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800b478:	9300      	str	r3, [sp, #0]
 800b47a:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800b47e:	2200      	movs	r2, #0
 800b480:	2100      	movs	r1, #0
 800b482:	f7fe fa4d 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800b486:	697b      	ldr	r3, [r7, #20]
 800b488:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800b48c:	2300      	movs	r3, #0
 800b48e:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800b492:	2300      	movs	r3, #0
 800b494:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800b498:	2300      	movs	r3, #0
 800b49a:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800b49e:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800b4a2:	041a      	lsls	r2, r3, #16
 800b4a4:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800b4a8:	021b      	lsls	r3, r3, #8
 800b4aa:	431a      	orrs	r2, r3
 800b4ac:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800b4b0:	4313      	orrs	r3, r2
 800b4b2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b4b6:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800b4ba:	4611      	mov	r1, r2
 800b4bc:	4618      	mov	r0, r3
 800b4be:	f7fe f95f 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800b4c2:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800b4c4:	4619      	mov	r1, r3
 800b4c6:	4620      	mov	r0, r4
 800b4c8:	f7fe fc74 	bl	8009db4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800b4cc:	697a      	ldr	r2, [r7, #20]
 800b4ce:	697b      	ldr	r3, [r7, #20]
 800b4d0:	3340      	adds	r3, #64	@ 0x40
 800b4d2:	4619      	mov	r1, r3
 800b4d4:	4610      	mov	r0, r2
 800b4d6:	f7fe fc05 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text.setPosition(87, 18, 306, 48);
 800b4da:	697b      	ldr	r3, [r7, #20]
 800b4dc:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800b4e0:	2330      	movs	r3, #48	@ 0x30
 800b4e2:	9300      	str	r3, [sp, #0]
 800b4e4:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800b4e8:	2212      	movs	r2, #18
 800b4ea:	2157      	movs	r1, #87	@ 0x57
 800b4ec:	f7fe fa18 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b4f0:	697b      	ldr	r3, [r7, #20]
 800b4f2:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800b4f6:	23ff      	movs	r3, #255	@ 0xff
 800b4f8:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800b4fc:	23ff      	movs	r3, #255	@ 0xff
 800b4fe:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800b502:	23ff      	movs	r3, #255	@ 0xff
 800b504:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800b508:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800b50c:	041a      	lsls	r2, r3, #16
 800b50e:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800b512:	021b      	lsls	r3, r3, #8
 800b514:	431a      	orrs	r2, r3
 800b516:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800b51a:	4313      	orrs	r3, r2
 800b51c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b520:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800b524:	4611      	mov	r1, r2
 800b526:	4618      	mov	r0, r3
 800b528:	f7fe f92a 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800b52c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800b52e:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800b532:	623b      	str	r3, [r7, #32]
        color = newColor;
 800b534:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800b538:	6a3a      	ldr	r2, [r7, #32]
 800b53a:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b53c:	bf00      	nop
    text.setLinespacing(0);
 800b53e:	697b      	ldr	r3, [r7, #20]
 800b540:	336c      	adds	r3, #108	@ 0x6c
 800b542:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800b546:	2300      	movs	r3, #0
 800b548:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800b54c:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b550:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800b554:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b556:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b55a:	681b      	ldr	r3, [r3, #0]
 800b55c:	3384      	adds	r3, #132	@ 0x84
 800b55e:	681b      	ldr	r3, [r3, #0]
 800b560:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800b564:	463a      	mov	r2, r7
 800b566:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800b56a:	4610      	mov	r0, r2
 800b56c:	4798      	blx	r3
 800b56e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b572:	463a      	mov	r2, r7
 800b574:	ca07      	ldmia	r2, {r0, r1, r2}
 800b576:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b57a:	bf00      	nop
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MZWR));
 800b57c:	697b      	ldr	r3, [r7, #20]
 800b57e:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800b582:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b586:	2106      	movs	r1, #6
 800b588:	4618      	mov	r0, r3
 800b58a:	f7fe fc31 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800b58e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b592:	4619      	mov	r1, r3
 800b594:	4620      	mov	r0, r4
 800b596:	f006 fd65 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b59a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b59e:	4618      	mov	r0, r3
 800b5a0:	f7fc fd42 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(text);
 800b5a4:	697a      	ldr	r2, [r7, #20]
 800b5a6:	697b      	ldr	r3, [r7, #20]
 800b5a8:	336c      	adds	r3, #108	@ 0x6c
 800b5aa:	4619      	mov	r1, r3
 800b5ac:	4610      	mov	r0, r2
 800b5ae:	f7fe fb99 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800b5b2:	697b      	ldr	r3, [r7, #20]
 800b5b4:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800b5b8:	2332      	movs	r3, #50	@ 0x32
 800b5ba:	9300      	str	r3, [sp, #0]
 800b5bc:	2332      	movs	r3, #50	@ 0x32
 800b5be:	2200      	movs	r2, #0
 800b5c0:	2100      	movs	r1, #0
 800b5c2:	f7ff fc95 	bl	800aef0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800b5c6:	697b      	ldr	r3, [r7, #20]
 800b5c8:	33b4      	adds	r3, #180	@ 0xb4
 800b5ca:	2105      	movs	r1, #5
 800b5cc:	4618      	mov	r0, r3
 800b5ce:	f7ff fcaf 	bl	800af30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800b5d2:	697b      	ldr	r3, [r7, #20]
 800b5d4:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800b5d8:	2300      	movs	r3, #0
 800b5da:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800b5de:	2366      	movs	r3, #102	@ 0x66
 800b5e0:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800b5e4:	2399      	movs	r3, #153	@ 0x99
 800b5e6:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800b5ea:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800b5ee:	041a      	lsls	r2, r3, #16
 800b5f0:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800b5f4:	021b      	lsls	r3, r3, #8
 800b5f6:	431a      	orrs	r2, r3
 800b5f8:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800b5fc:	4313      	orrs	r3, r2
 800b5fe:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b602:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800b606:	4611      	mov	r1, r2
 800b608:	4618      	mov	r0, r3
 800b60a:	f7fe f8b9 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800b60e:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800b610:	461d      	mov	r5, r3
 800b612:	2300      	movs	r3, #0
 800b614:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800b618:	2399      	movs	r3, #153	@ 0x99
 800b61a:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800b61e:	23cc      	movs	r3, #204	@ 0xcc
 800b620:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800b624:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800b628:	041a      	lsls	r2, r3, #16
 800b62a:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800b62e:	021b      	lsls	r3, r3, #8
 800b630:	431a      	orrs	r2, r3
 800b632:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800b636:	4313      	orrs	r3, r2
 800b638:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b63c:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800b640:	4611      	mov	r1, r2
 800b642:	4618      	mov	r0, r3
 800b644:	f7fe f89c 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800b648:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800b64a:	461e      	mov	r6, r3
 800b64c:	2300      	movs	r3, #0
 800b64e:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800b652:	2333      	movs	r3, #51	@ 0x33
 800b654:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800b658:	2366      	movs	r3, #102	@ 0x66
 800b65a:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800b65e:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800b662:	041a      	lsls	r2, r3, #16
 800b664:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800b668:	021b      	lsls	r3, r3, #8
 800b66a:	431a      	orrs	r2, r3
 800b66c:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800b670:	4313      	orrs	r3, r2
 800b672:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b676:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800b67a:	4611      	mov	r1, r2
 800b67c:	4618      	mov	r0, r3
 800b67e:	f7fe f87f 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800b682:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b684:	4698      	mov	r8, r3
 800b686:	2333      	movs	r3, #51	@ 0x33
 800b688:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800b68c:	2366      	movs	r3, #102	@ 0x66
 800b68e:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800b692:	2399      	movs	r3, #153	@ 0x99
 800b694:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800b698:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800b69c:	041a      	lsls	r2, r3, #16
 800b69e:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800b6a2:	021b      	lsls	r3, r3, #8
 800b6a4:	431a      	orrs	r2, r3
 800b6a6:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800b6aa:	4313      	orrs	r3, r2
 800b6ac:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b6b0:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800b6b4:	4611      	mov	r1, r2
 800b6b6:	4618      	mov	r0, r3
 800b6b8:	f7fe f862 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800b6bc:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800b6be:	9300      	str	r3, [sp, #0]
 800b6c0:	4643      	mov	r3, r8
 800b6c2:	4632      	mov	r2, r6
 800b6c4:	4629      	mov	r1, r5
 800b6c6:	4620      	mov	r0, r4
 800b6c8:	f7ff fc44 	bl	800af54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800b6cc:	697b      	ldr	r3, [r7, #20]
 800b6ce:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800b6d2:	697b      	ldr	r3, [r7, #20]
 800b6d4:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800b6d8:	4619      	mov	r1, r3
 800b6da:	4610      	mov	r0, r2
 800b6dc:	f7fe fd4e 	bl	800a17c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800b6e0:	697b      	ldr	r3, [r7, #20]
 800b6e2:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800b6e6:	2332      	movs	r3, #50	@ 0x32
 800b6e8:	9300      	str	r3, [sp, #0]
 800b6ea:	2332      	movs	r3, #50	@ 0x32
 800b6ec:	22f5      	movs	r2, #245	@ 0xf5
 800b6ee:	f240 1189 	movw	r1, #393	@ 0x189
 800b6f2:	f7fe f915 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800b6f6:	697a      	ldr	r2, [r7, #20]
 800b6f8:	697b      	ldr	r3, [r7, #20]
 800b6fa:	33b4      	adds	r3, #180	@ 0xb4
 800b6fc:	4619      	mov	r1, r3
 800b6fe:	4610      	mov	r0, r2
 800b700:	f7fe faf0 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    lightsVal.setPosition(131, 140, 200, 40);
 800b704:	697b      	ldr	r3, [r7, #20]
 800b706:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800b70a:	2328      	movs	r3, #40	@ 0x28
 800b70c:	9300      	str	r3, [sp, #0]
 800b70e:	23c8      	movs	r3, #200	@ 0xc8
 800b710:	228c      	movs	r2, #140	@ 0x8c
 800b712:	2183      	movs	r1, #131	@ 0x83
 800b714:	f7fe f904 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    lightsVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b718:	697b      	ldr	r3, [r7, #20]
 800b71a:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800b71e:	23ff      	movs	r3, #255	@ 0xff
 800b720:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800b724:	23ff      	movs	r3, #255	@ 0xff
 800b726:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800b72a:	23ff      	movs	r3, #255	@ 0xff
 800b72c:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800b730:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800b734:	041a      	lsls	r2, r3, #16
 800b736:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800b73a:	021b      	lsls	r3, r3, #8
 800b73c:	431a      	orrs	r2, r3
 800b73e:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800b742:	4313      	orrs	r3, r2
 800b744:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b748:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800b74c:	4611      	mov	r1, r2
 800b74e:	4618      	mov	r0, r3
 800b750:	f7fe f816 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800b754:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800b756:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800b75a:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800b75c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800b760:	69fa      	ldr	r2, [r7, #28]
 800b762:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b764:	bf00      	nop
 800b766:	e005      	b.n	800b774 <_ZN20light_screenViewBaseC1Ev+0x394>
 800b768:	080284a4 	.word	0x080284a4
 800b76c:	0800b9f3 	.word	0x0800b9f3
 800b770:	0800ba1d 	.word	0x0800ba1d
    lightsVal.setLinespacing(0);
 800b774:	697b      	ldr	r3, [r7, #20]
 800b776:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b77a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800b77e:	2300      	movs	r3, #0
 800b780:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800b784:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b788:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800b78c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b78e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800b792:	681b      	ldr	r3, [r3, #0]
 800b794:	3384      	adds	r3, #132	@ 0x84
 800b796:	681b      	ldr	r3, [r3, #0]
 800b798:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800b79c:	463a      	mov	r2, r7
 800b79e:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800b7a2:	4610      	mov	r0, r2
 800b7a4:	4798      	blx	r3
 800b7a6:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b7aa:	463a      	mov	r2, r7
 800b7ac:	ca07      	ldmia	r2, {r0, r1, r2}
 800b7ae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b7b2:	bf00      	nop
    lightsValBuffer[0] = 0;
 800b7b4:	697b      	ldr	r3, [r7, #20]
 800b7b6:	2200      	movs	r2, #0
 800b7b8:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    lightsVal.setWildcard(lightsValBuffer);
 800b7bc:	697b      	ldr	r3, [r7, #20]
 800b7be:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800b7c2:	697b      	ldr	r3, [r7, #20]
 800b7c4:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800b7c8:	4619      	mov	r1, r3
 800b7ca:	4610      	mov	r0, r2
 800b7cc:	f7fe fe8e 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    lightsVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4NA0));
 800b7d0:	697b      	ldr	r3, [r7, #20]
 800b7d2:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800b7d6:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800b7da:	2105      	movs	r1, #5
 800b7dc:	4618      	mov	r0, r3
 800b7de:	f7fe fb07 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800b7e2:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800b7e6:	4619      	mov	r1, r3
 800b7e8:	4620      	mov	r0, r4
 800b7ea:	f006 fc3b 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b7ee:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800b7f2:	4618      	mov	r0, r3
 800b7f4:	f7fc fc18 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(lightsVal);
 800b7f8:	697a      	ldr	r2, [r7, #20]
 800b7fa:	697b      	ldr	r3, [r7, #20]
 800b7fc:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b800:	4619      	mov	r1, r3
 800b802:	4610      	mov	r0, r2
 800b804:	f7fe fa6e 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800b808:	697b      	ldr	r3, [r7, #20]
 800b80a:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b80e:	2248      	movs	r2, #72	@ 0x48
 800b810:	216f      	movs	r1, #111	@ 0x6f
 800b812:	4618      	mov	r0, r3
 800b814:	f7fe f8c3 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800b818:	697b      	ldr	r3, [r7, #20]
 800b81a:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800b81e:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800b822:	2100      	movs	r1, #0
 800b824:	4618      	mov	r0, r3
 800b826:	f7fd fff1 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b82a:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800b82e:	2101      	movs	r1, #1
 800b830:	4618      	mov	r0, r3
 800b832:	f7fd ffeb 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b836:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800b83a:	2106      	movs	r1, #6
 800b83c:	4618      	mov	r0, r3
 800b83e:	f7fd ffe5 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b842:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800b846:	2104      	movs	r1, #4
 800b848:	4618      	mov	r0, r3
 800b84a:	f7fd ffdf 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b84e:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800b852:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800b856:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800b85a:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800b85e:	9300      	str	r3, [sp, #0]
 800b860:	4603      	mov	r3, r0
 800b862:	4620      	mov	r0, r4
 800b864:	f006 fdf4 	bl	8012450 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800b868:	697b      	ldr	r3, [r7, #20]
 800b86a:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b86e:	2200      	movs	r2, #0
 800b870:	2161      	movs	r1, #97	@ 0x61
 800b872:	4618      	mov	r0, r3
 800b874:	f7fe fe96 	bl	800a5a4 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800b878:	697b      	ldr	r3, [r7, #20]
 800b87a:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800b87e:	697b      	ldr	r3, [r7, #20]
 800b880:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800b884:	4619      	mov	r1, r3
 800b886:	4610      	mov	r0, r2
 800b888:	f7fe fe3d 	bl	800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800b88c:	697a      	ldr	r2, [r7, #20]
 800b88e:	697b      	ldr	r3, [r7, #20]
 800b890:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b894:	4619      	mov	r1, r3
 800b896:	4610      	mov	r0, r2
 800b898:	f7fe fa24 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800b89c:	697b      	ldr	r3, [r7, #20]
 800b89e:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b8a2:	22c3      	movs	r2, #195	@ 0xc3
 800b8a4:	216f      	movs	r1, #111	@ 0x6f
 800b8a6:	4618      	mov	r0, r3
 800b8a8:	f7fe f879 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800b8ac:	697b      	ldr	r3, [r7, #20]
 800b8ae:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800b8b2:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800b8b6:	2100      	movs	r1, #0
 800b8b8:	4618      	mov	r0, r3
 800b8ba:	f7fd ffa7 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b8be:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800b8c2:	2101      	movs	r1, #1
 800b8c4:	4618      	mov	r0, r3
 800b8c6:	f7fd ffa1 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b8ca:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800b8ce:	2105      	movs	r1, #5
 800b8d0:	4618      	mov	r0, r3
 800b8d2:	f7fd ff9b 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b8d6:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800b8da:	2104      	movs	r1, #4
 800b8dc:	4618      	mov	r0, r3
 800b8de:	f7fd ff95 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800b8e2:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800b8e6:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800b8ea:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800b8ee:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800b8f2:	9300      	str	r3, [sp, #0]
 800b8f4:	4603      	mov	r3, r0
 800b8f6:	4620      	mov	r0, r4
 800b8f8:	f006 fdaa 	bl	8012450 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800b8fc:	697b      	ldr	r3, [r7, #20]
 800b8fe:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b902:	2200      	movs	r2, #0
 800b904:	215f      	movs	r1, #95	@ 0x5f
 800b906:	4618      	mov	r0, r3
 800b908:	f7fe fe4c 	bl	800a5a4 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800b90c:	697b      	ldr	r3, [r7, #20]
 800b90e:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800b912:	697b      	ldr	r3, [r7, #20]
 800b914:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800b918:	4619      	mov	r1, r3
 800b91a:	4610      	mov	r0, r2
 800b91c:	f7fe fdf3 	bl	800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800b920:	697a      	ldr	r2, [r7, #20]
 800b922:	697b      	ldr	r3, [r7, #20]
 800b924:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b928:	4619      	mov	r1, r3
 800b92a:	4610      	mov	r0, r2
 800b92c:	f7fe f9da 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800b930:	697b      	ldr	r3, [r7, #20]
 800b932:	4618      	mov	r0, r3
 800b934:	37b0      	adds	r7, #176	@ 0xb0
 800b936:	46bd      	mov	sp, r7
 800b938:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b93c <_ZN20light_screenViewBaseD1Ev>:

light_screenViewBase::~light_screenViewBase()
 800b93c:	b580      	push	{r7, lr}
 800b93e:	b082      	sub	sp, #8
 800b940:	af00      	add	r7, sp, #0
 800b942:	6078      	str	r0, [r7, #4]
 800b944:	4a1c      	ldr	r2, [pc, #112]	@ (800b9b8 <_ZN20light_screenViewBaseD1Ev+0x7c>)
 800b946:	687b      	ldr	r3, [r7, #4]
 800b948:	601a      	str	r2, [r3, #0]
{

}
 800b94a:	687b      	ldr	r3, [r7, #4]
 800b94c:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800b950:	4618      	mov	r0, r3
 800b952:	f000 f8db 	bl	800bb0c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800b956:	687b      	ldr	r3, [r7, #4]
 800b958:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800b95c:	4618      	mov	r0, r3
 800b95e:	f000 f8f7 	bl	800bb50 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b962:	687b      	ldr	r3, [r7, #4]
 800b964:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b968:	4618      	mov	r0, r3
 800b96a:	f7ff fc33 	bl	800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800b96e:	687b      	ldr	r3, [r7, #4]
 800b970:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b974:	4618      	mov	r0, r3
 800b976:	f7ff fc2d 	bl	800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800b97a:	687b      	ldr	r3, [r7, #4]
 800b97c:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b980:	4618      	mov	r0, r3
 800b982:	f7ff fbe3 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b986:	687b      	ldr	r3, [r7, #4]
 800b988:	33b4      	adds	r3, #180	@ 0xb4
 800b98a:	4618      	mov	r0, r3
 800b98c:	f7ff fbb6 	bl	800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b990:	687b      	ldr	r3, [r7, #4]
 800b992:	336c      	adds	r3, #108	@ 0x6c
 800b994:	4618      	mov	r0, r3
 800b996:	f7fe fd05 	bl	800a3a4 <_ZN8touchgfx8TextAreaD1Ev>
 800b99a:	687b      	ldr	r3, [r7, #4]
 800b99c:	3340      	adds	r3, #64	@ 0x40
 800b99e:	4618      	mov	r0, r3
 800b9a0:	f7fe fc36 	bl	800a210 <_ZN8touchgfx3BoxD1Ev>
 800b9a4:	687b      	ldr	r3, [r7, #4]
 800b9a6:	4618      	mov	r0, r3
 800b9a8:	f7ff fcf8 	bl	800b39c <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>
 800b9ac:	687b      	ldr	r3, [r7, #4]
 800b9ae:	4618      	mov	r0, r3
 800b9b0:	3708      	adds	r7, #8
 800b9b2:	46bd      	mov	sp, r7
 800b9b4:	bd80      	pop	{r7, pc}
 800b9b6:	bf00      	nop
 800b9b8:	080284a4 	.word	0x080284a4

0800b9bc <_ZN20light_screenViewBaseD0Ev>:
light_screenViewBase::~light_screenViewBase()
 800b9bc:	b580      	push	{r7, lr}
 800b9be:	b082      	sub	sp, #8
 800b9c0:	af00      	add	r7, sp, #0
 800b9c2:	6078      	str	r0, [r7, #4]
}
 800b9c4:	6878      	ldr	r0, [r7, #4]
 800b9c6:	f7ff ffb9 	bl	800b93c <_ZN20light_screenViewBaseD1Ev>
 800b9ca:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800b9ce:	6878      	ldr	r0, [r7, #4]
 800b9d0:	f01a f82f 	bl	8025a32 <_ZdlPvj>
 800b9d4:	687b      	ldr	r3, [r7, #4]
 800b9d6:	4618      	mov	r0, r3
 800b9d8:	3708      	adds	r7, #8
 800b9da:	46bd      	mov	sp, r7
 800b9dc:	bd80      	pop	{r7, pc}

0800b9de <_ZN20light_screenViewBase11setupScreenEv>:

void light_screenViewBase::setupScreen()
{
 800b9de:	b480      	push	{r7}
 800b9e0:	b083      	sub	sp, #12
 800b9e2:	af00      	add	r7, sp, #0
 800b9e4:	6078      	str	r0, [r7, #4]

}
 800b9e6:	bf00      	nop
 800b9e8:	370c      	adds	r7, #12
 800b9ea:	46bd      	mov	sp, r7
 800b9ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9f0:	4770      	bx	lr

0800b9f2 <_ZN20light_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void light_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800b9f2:	b580      	push	{r7, lr}
 800b9f4:	b082      	sub	sp, #8
 800b9f6:	af00      	add	r7, sp, #0
 800b9f8:	6078      	str	r0, [r7, #4]
 800b9fa:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800b9fc:	687b      	ldr	r3, [r7, #4]
 800b9fe:	33b4      	adds	r3, #180	@ 0xb4
 800ba00:	683a      	ldr	r2, [r7, #0]
 800ba02:	429a      	cmp	r2, r3
 800ba04:	d106      	bne.n	800ba14 <_ZN20light_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800ba06:	6878      	ldr	r0, [r7, #4]
 800ba08:	f7ff fcbc 	bl	800b384 <_ZN20light_screenViewBase11applicationEv>
 800ba0c:	4603      	mov	r3, r0
 800ba0e:	4618      	mov	r0, r3
 800ba10:	f7fd f830 	bl	8008a74 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800ba14:	bf00      	nop
 800ba16:	3708      	adds	r7, #8
 800ba18:	46bd      	mov	sp, r7
 800ba1a:	bd80      	pop	{r7, pc}

0800ba1c <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void light_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800ba1c:	b580      	push	{r7, lr}
 800ba1e:	b082      	sub	sp, #8
 800ba20:	af00      	add	r7, sp, #0
 800ba22:	6078      	str	r0, [r7, #4]
 800ba24:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800ba26:	687b      	ldr	r3, [r7, #4]
 800ba28:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ba2c:	683a      	ldr	r2, [r7, #0]
 800ba2e:	429a      	cmp	r2, r3
 800ba30:	d105      	bne.n	800ba3e <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800ba32:	687b      	ldr	r3, [r7, #4]
 800ba34:	681b      	ldr	r3, [r3, #0]
 800ba36:	332c      	adds	r3, #44	@ 0x2c
 800ba38:	681b      	ldr	r3, [r3, #0]
 800ba3a:	6878      	ldr	r0, [r7, #4]
 800ba3c:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800ba3e:	687b      	ldr	r3, [r7, #4]
 800ba40:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ba44:	683a      	ldr	r2, [r7, #0]
 800ba46:	429a      	cmp	r2, r3
 800ba48:	d105      	bne.n	800ba56 <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800ba4a:	687b      	ldr	r3, [r7, #4]
 800ba4c:	681b      	ldr	r3, [r3, #0]
 800ba4e:	3330      	adds	r3, #48	@ 0x30
 800ba50:	681b      	ldr	r3, [r3, #0]
 800ba52:	6878      	ldr	r0, [r7, #4]
 800ba54:	4798      	blx	r3
    }
}
 800ba56:	bf00      	nop
 800ba58:	3708      	adds	r7, #8
 800ba5a:	46bd      	mov	sp, r7
 800ba5c:	bd80      	pop	{r7, pc}
	...

0800ba60 <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev>:
    View()
 800ba60:	b580      	push	{r7, lr}
 800ba62:	b082      	sub	sp, #8
 800ba64:	af00      	add	r7, sp, #0
 800ba66:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800ba68:	687b      	ldr	r3, [r7, #4]
 800ba6a:	4618      	mov	r0, r3
 800ba6c:	f009 fd9e 	bl	80155ac <_ZN8touchgfx6ScreenC1Ev>
 800ba70:	4a05      	ldr	r2, [pc, #20]	@ (800ba88 <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev+0x28>)
 800ba72:	687b      	ldr	r3, [r7, #4]
 800ba74:	601a      	str	r2, [r3, #0]
 800ba76:	687b      	ldr	r3, [r7, #4]
 800ba78:	2200      	movs	r2, #0
 800ba7a:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800ba7c:	687b      	ldr	r3, [r7, #4]
 800ba7e:	4618      	mov	r0, r3
 800ba80:	3708      	adds	r7, #8
 800ba82:	46bd      	mov	sp, r7
 800ba84:	bd80      	pop	{r7, pc}
 800ba86:	bf00      	nop
 800ba88:	08028510 	.word	0x08028510

0800ba8c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800ba8c:	b580      	push	{r7, lr}
 800ba8e:	b084      	sub	sp, #16
 800ba90:	af00      	add	r7, sp, #0
 800ba92:	60f8      	str	r0, [r7, #12]
 800ba94:	60b9      	str	r1, [r7, #8]
 800ba96:	4639      	mov	r1, r7
 800ba98:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800ba9c:	68fb      	ldr	r3, [r7, #12]
 800ba9e:	4618      	mov	r0, r3
 800baa0:	f7ff f9c6 	bl	800ae30 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800baa4:	4a08      	ldr	r2, [pc, #32]	@ (800bac8 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800baa6:	68fb      	ldr	r3, [r7, #12]
 800baa8:	601a      	str	r2, [r3, #0]
 800baaa:	68fb      	ldr	r3, [r7, #12]
 800baac:	68ba      	ldr	r2, [r7, #8]
 800baae:	605a      	str	r2, [r3, #4]
 800bab0:	68fb      	ldr	r3, [r7, #12]
 800bab2:	3308      	adds	r3, #8
 800bab4:	463a      	mov	r2, r7
 800bab6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800baba:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800babe:	68fb      	ldr	r3, [r7, #12]
 800bac0:	4618      	mov	r0, r3
 800bac2:	3710      	adds	r7, #16
 800bac4:	46bd      	mov	sp, r7
 800bac6:	bd80      	pop	{r7, pc}
 800bac8:	080284f8 	.word	0x080284f8

0800bacc <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800bacc:	b580      	push	{r7, lr}
 800bace:	b084      	sub	sp, #16
 800bad0:	af00      	add	r7, sp, #0
 800bad2:	60f8      	str	r0, [r7, #12]
 800bad4:	60b9      	str	r1, [r7, #8]
 800bad6:	4639      	mov	r1, r7
 800bad8:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800badc:	68fb      	ldr	r3, [r7, #12]
 800bade:	4618      	mov	r0, r3
 800bae0:	f7ff f9d6 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800bae4:	4a08      	ldr	r2, [pc, #32]	@ (800bb08 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800bae6:	68fb      	ldr	r3, [r7, #12]
 800bae8:	601a      	str	r2, [r3, #0]
 800baea:	68fb      	ldr	r3, [r7, #12]
 800baec:	68ba      	ldr	r2, [r7, #8]
 800baee:	605a      	str	r2, [r3, #4]
 800baf0:	68fb      	ldr	r3, [r7, #12]
 800baf2:	3308      	adds	r3, #8
 800baf4:	463a      	mov	r2, r7
 800baf6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bafa:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800bafe:	68fb      	ldr	r3, [r7, #12]
 800bb00:	4618      	mov	r0, r3
 800bb02:	3710      	adds	r7, #16
 800bb04:	46bd      	mov	sp, r7
 800bb06:	bd80      	pop	{r7, pc}
 800bb08:	080284e0 	.word	0x080284e0

0800bb0c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800bb0c:	b580      	push	{r7, lr}
 800bb0e:	b082      	sub	sp, #8
 800bb10:	af00      	add	r7, sp, #0
 800bb12:	6078      	str	r0, [r7, #4]
 800bb14:	4a05      	ldr	r2, [pc, #20]	@ (800bb2c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800bb16:	687b      	ldr	r3, [r7, #4]
 800bb18:	601a      	str	r2, [r3, #0]
 800bb1a:	687b      	ldr	r3, [r7, #4]
 800bb1c:	4618      	mov	r0, r3
 800bb1e:	f7ff fa57 	bl	800afd0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800bb22:	687b      	ldr	r3, [r7, #4]
 800bb24:	4618      	mov	r0, r3
 800bb26:	3708      	adds	r7, #8
 800bb28:	46bd      	mov	sp, r7
 800bb2a:	bd80      	pop	{r7, pc}
 800bb2c:	080284e0 	.word	0x080284e0

0800bb30 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800bb30:	b580      	push	{r7, lr}
 800bb32:	b082      	sub	sp, #8
 800bb34:	af00      	add	r7, sp, #0
 800bb36:	6078      	str	r0, [r7, #4]
 800bb38:	6878      	ldr	r0, [r7, #4]
 800bb3a:	f7ff ffe7 	bl	800bb0c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800bb3e:	2110      	movs	r1, #16
 800bb40:	6878      	ldr	r0, [r7, #4]
 800bb42:	f019 ff76 	bl	8025a32 <_ZdlPvj>
 800bb46:	687b      	ldr	r3, [r7, #4]
 800bb48:	4618      	mov	r0, r3
 800bb4a:	3708      	adds	r7, #8
 800bb4c:	46bd      	mov	sp, r7
 800bb4e:	bd80      	pop	{r7, pc}

0800bb50 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800bb50:	b580      	push	{r7, lr}
 800bb52:	b082      	sub	sp, #8
 800bb54:	af00      	add	r7, sp, #0
 800bb56:	6078      	str	r0, [r7, #4]
 800bb58:	4a05      	ldr	r2, [pc, #20]	@ (800bb70 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800bb5a:	687b      	ldr	r3, [r7, #4]
 800bb5c:	601a      	str	r2, [r3, #0]
 800bb5e:	687b      	ldr	r3, [r7, #4]
 800bb60:	4618      	mov	r0, r3
 800bb62:	f7ff fa15 	bl	800af90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	4618      	mov	r0, r3
 800bb6a:	3708      	adds	r7, #8
 800bb6c:	46bd      	mov	sp, r7
 800bb6e:	bd80      	pop	{r7, pc}
 800bb70:	080284f8 	.word	0x080284f8

0800bb74 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800bb74:	b580      	push	{r7, lr}
 800bb76:	b082      	sub	sp, #8
 800bb78:	af00      	add	r7, sp, #0
 800bb7a:	6078      	str	r0, [r7, #4]
 800bb7c:	6878      	ldr	r0, [r7, #4]
 800bb7e:	f7ff ffe7 	bl	800bb50 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800bb82:	2110      	movs	r1, #16
 800bb84:	6878      	ldr	r0, [r7, #4]
 800bb86:	f019 ff54 	bl	8025a32 <_ZdlPvj>
 800bb8a:	687b      	ldr	r3, [r7, #4]
 800bb8c:	4618      	mov	r0, r3
 800bb8e:	3708      	adds	r7, #8
 800bb90:	46bd      	mov	sp, r7
 800bb92:	bd80      	pop	{r7, pc}

0800bb94 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800bb94:	b580      	push	{r7, lr}
 800bb96:	b082      	sub	sp, #8
 800bb98:	af00      	add	r7, sp, #0
 800bb9a:	6078      	str	r0, [r7, #4]
 800bb9c:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	685b      	ldr	r3, [r3, #4]
 800bba2:	687a      	ldr	r2, [r7, #4]
 800bba4:	68d2      	ldr	r2, [r2, #12]
 800bba6:	1052      	asrs	r2, r2, #1
 800bba8:	1898      	adds	r0, r3, r2
 800bbaa:	687b      	ldr	r3, [r7, #4]
 800bbac:	68db      	ldr	r3, [r3, #12]
 800bbae:	f003 0301 	and.w	r3, r3, #1
 800bbb2:	2b00      	cmp	r3, #0
 800bbb4:	d102      	bne.n	800bbbc <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800bbb6:	687b      	ldr	r3, [r7, #4]
 800bbb8:	689b      	ldr	r3, [r3, #8]
 800bbba:	e00a      	b.n	800bbd2 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800bbbc:	687b      	ldr	r3, [r7, #4]
 800bbbe:	685b      	ldr	r3, [r3, #4]
 800bbc0:	687a      	ldr	r2, [r7, #4]
 800bbc2:	68d2      	ldr	r2, [r2, #12]
 800bbc4:	1052      	asrs	r2, r2, #1
 800bbc6:	4413      	add	r3, r2
 800bbc8:	681b      	ldr	r3, [r3, #0]
 800bbca:	687a      	ldr	r2, [r7, #4]
 800bbcc:	6892      	ldr	r2, [r2, #8]
 800bbce:	4413      	add	r3, r2
 800bbd0:	681b      	ldr	r3, [r3, #0]
 800bbd2:	6839      	ldr	r1, [r7, #0]
 800bbd4:	4798      	blx	r3
    }
 800bbd6:	bf00      	nop
 800bbd8:	3708      	adds	r7, #8
 800bbda:	46bd      	mov	sp, r7
 800bbdc:	bd80      	pop	{r7, pc}

0800bbde <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800bbde:	b480      	push	{r7}
 800bbe0:	b083      	sub	sp, #12
 800bbe2:	af00      	add	r7, sp, #0
 800bbe4:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800bbe6:	687b      	ldr	r3, [r7, #4]
 800bbe8:	685b      	ldr	r3, [r3, #4]
 800bbea:	2b00      	cmp	r3, #0
 800bbec:	d010      	beq.n	800bc10 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	689b      	ldr	r3, [r3, #8]
 800bbf2:	2b00      	cmp	r3, #0
 800bbf4:	d107      	bne.n	800bc06 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	68db      	ldr	r3, [r3, #12]
 800bbfa:	f003 0301 	and.w	r3, r3, #1
 800bbfe:	2b00      	cmp	r3, #0
 800bc00:	d101      	bne.n	800bc06 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bc02:	2301      	movs	r3, #1
 800bc04:	e000      	b.n	800bc08 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800bc06:	2300      	movs	r3, #0
 800bc08:	2b01      	cmp	r3, #1
 800bc0a:	d001      	beq.n	800bc10 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800bc0c:	2301      	movs	r3, #1
 800bc0e:	e000      	b.n	800bc12 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800bc10:	2300      	movs	r3, #0
    }
 800bc12:	4618      	mov	r0, r3
 800bc14:	370c      	adds	r7, #12
 800bc16:	46bd      	mov	sp, r7
 800bc18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc1c:	4770      	bx	lr

0800bc1e <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800bc1e:	b580      	push	{r7, lr}
 800bc20:	b082      	sub	sp, #8
 800bc22:	af00      	add	r7, sp, #0
 800bc24:	6078      	str	r0, [r7, #4]
 800bc26:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800bc28:	687b      	ldr	r3, [r7, #4]
 800bc2a:	685b      	ldr	r3, [r3, #4]
 800bc2c:	687a      	ldr	r2, [r7, #4]
 800bc2e:	68d2      	ldr	r2, [r2, #12]
 800bc30:	1052      	asrs	r2, r2, #1
 800bc32:	1898      	adds	r0, r3, r2
 800bc34:	687b      	ldr	r3, [r7, #4]
 800bc36:	68db      	ldr	r3, [r3, #12]
 800bc38:	f003 0301 	and.w	r3, r3, #1
 800bc3c:	2b00      	cmp	r3, #0
 800bc3e:	d102      	bne.n	800bc46 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800bc40:	687b      	ldr	r3, [r7, #4]
 800bc42:	689b      	ldr	r3, [r3, #8]
 800bc44:	e00a      	b.n	800bc5c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	685b      	ldr	r3, [r3, #4]
 800bc4a:	687a      	ldr	r2, [r7, #4]
 800bc4c:	68d2      	ldr	r2, [r2, #12]
 800bc4e:	1052      	asrs	r2, r2, #1
 800bc50:	4413      	add	r3, r2
 800bc52:	681b      	ldr	r3, [r3, #0]
 800bc54:	687a      	ldr	r2, [r7, #4]
 800bc56:	6892      	ldr	r2, [r2, #8]
 800bc58:	4413      	add	r3, r2
 800bc5a:	681b      	ldr	r3, [r3, #0]
 800bc5c:	6839      	ldr	r1, [r7, #0]
 800bc5e:	4798      	blx	r3
    }
 800bc60:	bf00      	nop
 800bc62:	3708      	adds	r7, #8
 800bc64:	46bd      	mov	sp, r7
 800bc66:	bd80      	pop	{r7, pc}

0800bc68 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800bc68:	b480      	push	{r7}
 800bc6a:	b083      	sub	sp, #12
 800bc6c:	af00      	add	r7, sp, #0
 800bc6e:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800bc70:	687b      	ldr	r3, [r7, #4]
 800bc72:	685b      	ldr	r3, [r3, #4]
 800bc74:	2b00      	cmp	r3, #0
 800bc76:	d010      	beq.n	800bc9a <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bc78:	687b      	ldr	r3, [r7, #4]
 800bc7a:	689b      	ldr	r3, [r3, #8]
 800bc7c:	2b00      	cmp	r3, #0
 800bc7e:	d107      	bne.n	800bc90 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bc80:	687b      	ldr	r3, [r7, #4]
 800bc82:	68db      	ldr	r3, [r3, #12]
 800bc84:	f003 0301 	and.w	r3, r3, #1
 800bc88:	2b00      	cmp	r3, #0
 800bc8a:	d101      	bne.n	800bc90 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bc8c:	2301      	movs	r3, #1
 800bc8e:	e000      	b.n	800bc92 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800bc90:	2300      	movs	r3, #0
 800bc92:	2b01      	cmp	r3, #1
 800bc94:	d001      	beq.n	800bc9a <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bc96:	2301      	movs	r3, #1
 800bc98:	e000      	b.n	800bc9c <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800bc9a:	2300      	movs	r3, #0
    }
 800bc9c:	4618      	mov	r0, r3
 800bc9e:	370c      	adds	r7, #12
 800bca0:	46bd      	mov	sp, r7
 800bca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bca6:	4770      	bx	lr

0800bca8 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 800bca8:	b580      	push	{r7, lr}
 800bcaa:	b082      	sub	sp, #8
 800bcac:	af00      	add	r7, sp, #0
 800bcae:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800bcb0:	687b      	ldr	r3, [r7, #4]
 800bcb2:	4618      	mov	r0, r3
 800bcb4:	2326      	movs	r3, #38	@ 0x26
 800bcb6:	461a      	mov	r2, r3
 800bcb8:	2100      	movs	r1, #0
 800bcba:	f01a f970 	bl	8025f9e <memset>
 800bcbe:	687b      	ldr	r3, [r7, #4]
 800bcc0:	4618      	mov	r0, r3
 800bcc2:	f7fe f81f 	bl	8009d04 <_ZN8touchgfx6WidgetC1Ev>
 800bcc6:	4a0a      	ldr	r2, [pc, #40]	@ (800bcf0 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800bcc8:	687b      	ldr	r3, [r7, #4]
 800bcca:	601a      	str	r2, [r3, #0]
 800bccc:	687b      	ldr	r3, [r7, #4]
 800bcce:	2200      	movs	r2, #0
 800bcd0:	629a      	str	r2, [r3, #40]	@ 0x28
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	2200      	movs	r2, #0
 800bcd6:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        setTouchable(true);
 800bcda:	687b      	ldr	r3, [r7, #4]
 800bcdc:	2101      	movs	r1, #1
 800bcde:	4618      	mov	r0, r3
 800bce0:	f7fd feec 	bl	8009abc <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800bce4:	687b      	ldr	r3, [r7, #4]
 800bce6:	4618      	mov	r0, r3
 800bce8:	3708      	adds	r7, #8
 800bcea:	46bd      	mov	sp, r7
 800bcec:	bd80      	pop	{r7, pc}
 800bcee:	bf00      	nop
 800bcf0:	08028fc4 	.word	0x08028fc4

0800bcf4 <_ZN8touchgfx6ButtonC1Ev>:
{
public:
    Button()
 800bcf4:	b580      	push	{r7, lr}
 800bcf6:	b082      	sub	sp, #8
 800bcf8:	af00      	add	r7, sp, #0
 800bcfa:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800bcfc:	687b      	ldr	r3, [r7, #4]
 800bcfe:	4618      	mov	r0, r3
 800bd00:	f7ff ffd2 	bl	800bca8 <_ZN8touchgfx14AbstractButtonC1Ev>
 800bd04:	4a0c      	ldr	r2, [pc, #48]	@ (800bd38 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800bd06:	687b      	ldr	r3, [r7, #4]
 800bd08:	601a      	str	r2, [r3, #0]
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	332e      	adds	r3, #46	@ 0x2e
 800bd0e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bd12:	4618      	mov	r0, r3
 800bd14:	f7fd fd7a 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800bd18:	687b      	ldr	r3, [r7, #4]
 800bd1a:	3330      	adds	r3, #48	@ 0x30
 800bd1c:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bd20:	4618      	mov	r0, r3
 800bd22:	f7fd fd73 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800bd26:	687b      	ldr	r3, [r7, #4]
 800bd28:	22ff      	movs	r2, #255	@ 0xff
 800bd2a:	f883 2032 	strb.w	r2, [r3, #50]	@ 0x32
    {
    }
 800bd2e:	687b      	ldr	r3, [r7, #4]
 800bd30:	4618      	mov	r0, r3
 800bd32:	3708      	adds	r7, #8
 800bd34:	46bd      	mov	sp, r7
 800bd36:	bd80      	pop	{r7, pc}
 800bd38:	080291a0 	.word	0x080291a0

0800bd3c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
 800bd3c:	b580      	push	{r7, lr}
 800bd3e:	b084      	sub	sp, #16
 800bd40:	af00      	add	r7, sp, #0
 800bd42:	60f8      	str	r0, [r7, #12]
 800bd44:	60b9      	str	r1, [r7, #8]
 800bd46:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bitmapPressed;
 800bd48:	68fb      	ldr	r3, [r7, #12]
 800bd4a:	687a      	ldr	r2, [r7, #4]
 800bd4c:	8812      	ldrh	r2, [r2, #0]
 800bd4e:	869a      	strh	r2, [r3, #52]	@ 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800bd50:	68fb      	ldr	r3, [r7, #12]
 800bd52:	687a      	ldr	r2, [r7, #4]
 800bd54:	68b9      	ldr	r1, [r7, #8]
 800bd56:	4618      	mov	r0, r3
 800bd58:	f006 f9d6 	bl	8012108 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 800bd5c:	bf00      	nop
 800bd5e:	3710      	adds	r7, #16
 800bd60:	46bd      	mov	sp, r7
 800bd62:	bd80      	pop	{r7, pc}

0800bd64 <_ZN12MainViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 800bd64:	b480      	push	{r7}
 800bd66:	b083      	sub	sp, #12
 800bd68:	af00      	add	r7, sp, #0
 800bd6a:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 800bd6c:	bf00      	nop
 800bd6e:	370c      	adds	r7, #12
 800bd70:	46bd      	mov	sp, r7
 800bd72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd76:	4770      	bx	lr

0800bd78 <_ZN12MainViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800bd78:	b580      	push	{r7, lr}
 800bd7a:	b082      	sub	sp, #8
 800bd7c:	af00      	add	r7, sp, #0
 800bd7e:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800bd80:	f008 f8fe 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 800bd84:	4603      	mov	r3, r0
    }
 800bd86:	4618      	mov	r0, r3
 800bd88:	3708      	adds	r7, #8
 800bd8a:	46bd      	mov	sp, r7
 800bd8c:	bd80      	pop	{r7, pc}
	...

0800bd90 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 800bd90:	b580      	push	{r7, lr}
 800bd92:	b082      	sub	sp, #8
 800bd94:	af00      	add	r7, sp, #0
 800bd96:	6078      	str	r0, [r7, #4]
 800bd98:	4a05      	ldr	r2, [pc, #20]	@ (800bdb0 <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	601a      	str	r2, [r3, #0]
 800bd9e:	687b      	ldr	r3, [r7, #4]
 800bda0:	4618      	mov	r0, r3
 800bda2:	f7fd ff47 	bl	8009c34 <_ZN8touchgfx6ScreenD1Ev>
 800bda6:	687b      	ldr	r3, [r7, #4]
 800bda8:	4618      	mov	r0, r3
 800bdaa:	3708      	adds	r7, #8
 800bdac:	46bd      	mov	sp, r7
 800bdae:	bd80      	pop	{r7, pc}
 800bdb0:	080285ac 	.word	0x080285ac

0800bdb4 <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 800bdb4:	b580      	push	{r7, lr}
 800bdb6:	b082      	sub	sp, #8
 800bdb8:	af00      	add	r7, sp, #0
 800bdba:	6078      	str	r0, [r7, #4]
 800bdbc:	6878      	ldr	r0, [r7, #4]
 800bdbe:	f7ff ffe7 	bl	800bd90 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800bdc2:	2140      	movs	r1, #64	@ 0x40
 800bdc4:	6878      	ldr	r0, [r7, #4]
 800bdc6:	f019 fe34 	bl	8025a32 <_ZdlPvj>
 800bdca:	687b      	ldr	r3, [r7, #4]
 800bdcc:	4618      	mov	r0, r3
 800bdce:	3708      	adds	r7, #8
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	bd80      	pop	{r7, pc}

0800bdd4 <_ZN8touchgfx12ToggleButtonC1Ev>:
class ToggleButton : public Button
 800bdd4:	b580      	push	{r7, lr}
 800bdd6:	b082      	sub	sp, #8
 800bdd8:	af00      	add	r7, sp, #0
 800bdda:	6078      	str	r0, [r7, #4]
 800bddc:	687b      	ldr	r3, [r7, #4]
 800bdde:	4618      	mov	r0, r3
 800bde0:	f7ff ff88 	bl	800bcf4 <_ZN8touchgfx6ButtonC1Ev>
 800bde4:	4a07      	ldr	r2, [pc, #28]	@ (800be04 <_ZN8touchgfx12ToggleButtonC1Ev+0x30>)
 800bde6:	687b      	ldr	r3, [r7, #4]
 800bde8:	601a      	str	r2, [r3, #0]
 800bdea:	687b      	ldr	r3, [r7, #4]
 800bdec:	3334      	adds	r3, #52	@ 0x34
 800bdee:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bdf2:	4618      	mov	r0, r3
 800bdf4:	f7fd fd0a 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800bdf8:	687b      	ldr	r3, [r7, #4]
 800bdfa:	4618      	mov	r0, r3
 800bdfc:	3708      	adds	r7, #8
 800bdfe:	46bd      	mov	sp, r7
 800be00:	bd80      	pop	{r7, pc}
 800be02:	bf00      	nop
 800be04:	08029034 	.word	0x08029034

0800be08 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 800be08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be0c:	b0c6      	sub	sp, #280	@ 0x118
 800be0e:	af02      	add	r7, sp, #8
 800be10:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800be12:	697b      	ldr	r3, [r7, #20]
 800be14:	4618      	mov	r0, r3
 800be16:	f000 fd69 	bl	800c8ec <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 800be1a:	4ada      	ldr	r2, [pc, #872]	@ (800c184 <_ZN12MainViewBaseC1Ev+0x37c>)
 800be1c:	697b      	ldr	r3, [r7, #20]
 800be1e:	601a      	str	r2, [r3, #0]
 800be20:	697b      	ldr	r3, [r7, #20]
 800be22:	3340      	adds	r3, #64	@ 0x40
 800be24:	4618      	mov	r0, r3
 800be26:	f7fd ffa1 	bl	8009d6c <_ZN8touchgfx3BoxC1Ev>
 800be2a:	697b      	ldr	r3, [r7, #20]
 800be2c:	336c      	adds	r3, #108	@ 0x6c
 800be2e:	4618      	mov	r0, r3
 800be30:	f7ff ffd0 	bl	800bdd4 <_ZN8touchgfx12ToggleButtonC1Ev>
 800be34:	697b      	ldr	r3, [r7, #20]
 800be36:	33a4      	adds	r3, #164	@ 0xa4
 800be38:	4618      	mov	r0, r3
 800be3a:	f7fe fb27 	bl	800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800be3e:	697b      	ldr	r3, [r7, #20]
 800be40:	33f0      	adds	r3, #240	@ 0xf0
 800be42:	4618      	mov	r0, r3
 800be44:	f7fe fb22 	bl	800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800be48:	697b      	ldr	r3, [r7, #20]
 800be4a:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800be4e:	4618      	mov	r0, r3
 800be50:	f7fe fb1c 	bl	800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800be54:	697b      	ldr	r3, [r7, #20]
 800be56:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800be5a:	4618      	mov	r0, r3
 800be5c:	f7fe fb16 	bl	800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800be60:	697b      	ldr	r3, [r7, #20]
 800be62:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800be66:	4618      	mov	r0, r3
 800be68:	f7fe ffa2 	bl	800adb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800be6c:	697b      	ldr	r3, [r7, #20]
 800be6e:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800be72:	4618      	mov	r0, r3
 800be74:	f7fe ff9c 	bl	800adb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800be78:	697b      	ldr	r3, [r7, #20]
 800be7a:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800be7e:	4618      	mov	r0, r3
 800be80:	f7fe ff96 	bl	800adb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
 800be84:	697b      	ldr	r3, [r7, #20]
 800be86:	f503 706d 	add.w	r0, r3, #948	@ 0x3b4
 800be8a:	4bbf      	ldr	r3, [pc, #764]	@ (800c188 <_ZN12MainViewBaseC1Ev+0x380>)
 800be8c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800be8e:	2300      	movs	r3, #0
 800be90:	633b      	str	r3, [r7, #48]	@ 0x30
 800be92:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800be96:	cb0c      	ldmia	r3, {r2, r3}
 800be98:	6979      	ldr	r1, [r7, #20]
 800be9a:	f000 fd3d 	bl	800c918 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800be9e:	697b      	ldr	r3, [r7, #20]
 800bea0:	f503 7071 	add.w	r0, r3, #964	@ 0x3c4
 800bea4:	4bb9      	ldr	r3, [pc, #740]	@ (800c18c <_ZN12MainViewBaseC1Ev+0x384>)
 800bea6:	637b      	str	r3, [r7, #52]	@ 0x34
 800bea8:	2300      	movs	r3, #0
 800beaa:	63bb      	str	r3, [r7, #56]	@ 0x38
 800beac:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800beb0:	cb0c      	ldmia	r3, {r2, r3}
 800beb2:	6979      	ldr	r1, [r7, #20]
 800beb4:	f000 fd50 	bl	800c958 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800beb8:	697b      	ldr	r3, [r7, #20]
 800beba:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800bebe:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800bec2:	9300      	str	r3, [sp, #0]
 800bec4:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800bec8:	2200      	movs	r2, #0
 800beca:	2100      	movs	r1, #0
 800becc:	f7fd fd28 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800bed0:	697b      	ldr	r3, [r7, #20]
 800bed2:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800bed6:	2300      	movs	r3, #0
 800bed8:	f887 30ac 	strb.w	r3, [r7, #172]	@ 0xac
 800bedc:	2300      	movs	r3, #0
 800bede:	f887 30ab 	strb.w	r3, [r7, #171]	@ 0xab
 800bee2:	2300      	movs	r3, #0
 800bee4:	f887 30aa 	strb.w	r3, [r7, #170]	@ 0xaa
 800bee8:	f897 30ac 	ldrb.w	r3, [r7, #172]	@ 0xac
 800beec:	041a      	lsls	r2, r3, #16
 800beee:	f897 30ab 	ldrb.w	r3, [r7, #171]	@ 0xab
 800bef2:	021b      	lsls	r3, r3, #8
 800bef4:	431a      	orrs	r2, r3
 800bef6:	f897 30aa 	ldrb.w	r3, [r7, #170]	@ 0xaa
 800befa:	4313      	orrs	r3, r2
 800befc:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800bf00:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 800bf04:	4611      	mov	r1, r2
 800bf06:	4618      	mov	r0, r3
 800bf08:	f7fd fc3a 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800bf0c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800bf10:	4619      	mov	r1, r3
 800bf12:	4620      	mov	r0, r4
 800bf14:	f7fd ff4e 	bl	8009db4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800bf18:	697a      	ldr	r2, [r7, #20]
 800bf1a:	697b      	ldr	r3, [r7, #20]
 800bf1c:	3340      	adds	r3, #64	@ 0x40
 800bf1e:	4619      	mov	r1, r3
 800bf20:	4610      	mov	r0, r2
 800bf22:	f7fd fedf 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    toggleButton1.setXY(229, 236);
 800bf26:	697b      	ldr	r3, [r7, #20]
 800bf28:	336c      	adds	r3, #108	@ 0x6c
 800bf2a:	22ec      	movs	r2, #236	@ 0xec
 800bf2c:	21e5      	movs	r1, #229	@ 0xe5
 800bf2e:	4618      	mov	r0, r3
 800bf30:	f7fd fd35 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_OFF_NORMAL_ID));
 800bf34:	697b      	ldr	r3, [r7, #20]
 800bf36:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800bf3a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800bf3e:	2103      	movs	r1, #3
 800bf40:	4618      	mov	r0, r3
 800bf42:	f7fd fc63 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800bf46:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800bf4a:	2102      	movs	r1, #2
 800bf4c:	4618      	mov	r0, r3
 800bf4e:	f7fd fc5d 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800bf52:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 800bf56:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800bf5a:	4619      	mov	r1, r3
 800bf5c:	4620      	mov	r0, r4
 800bf5e:	f7ff feed 	bl	800bd3c <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.forceState(true);
 800bf62:	697b      	ldr	r3, [r7, #20]
 800bf64:	336c      	adds	r3, #108	@ 0x6c
 800bf66:	2101      	movs	r1, #1
 800bf68:	4618      	mov	r0, r3
 800bf6a:	f005 fcfb 	bl	8011964 <_ZN8touchgfx12ToggleButton10forceStateEb>
    toggleButton1.setAction(buttonCallback);
 800bf6e:	697b      	ldr	r3, [r7, #20]
 800bf70:	f103 026c 	add.w	r2, r3, #108	@ 0x6c
 800bf74:	697b      	ldr	r3, [r7, #20]
 800bf76:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800bf7a:	4619      	mov	r1, r3
 800bf7c:	4610      	mov	r0, r2
 800bf7e:	f7fe fac2 	bl	800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(toggleButton1);
 800bf82:	697a      	ldr	r2, [r7, #20]
 800bf84:	697b      	ldr	r3, [r7, #20]
 800bf86:	336c      	adds	r3, #108	@ 0x6c
 800bf88:	4619      	mov	r1, r3
 800bf8a:	4610      	mov	r0, r2
 800bf8c:	f7fd feaa 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    HUMVAL.setPosition(9, 24, 282, 48);
 800bf90:	697b      	ldr	r3, [r7, #20]
 800bf92:	f103 00a4 	add.w	r0, r3, #164	@ 0xa4
 800bf96:	2330      	movs	r3, #48	@ 0x30
 800bf98:	9300      	str	r3, [sp, #0]
 800bf9a:	f44f 738d 	mov.w	r3, #282	@ 0x11a
 800bf9e:	2218      	movs	r2, #24
 800bfa0:	2109      	movs	r1, #9
 800bfa2:	f7fd fcbd 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    HUMVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800bfa6:	697b      	ldr	r3, [r7, #20]
 800bfa8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800bfac:	23ff      	movs	r3, #255	@ 0xff
 800bfae:	f887 30af 	strb.w	r3, [r7, #175]	@ 0xaf
 800bfb2:	23ff      	movs	r3, #255	@ 0xff
 800bfb4:	f887 30ae 	strb.w	r3, [r7, #174]	@ 0xae
 800bfb8:	23ff      	movs	r3, #255	@ 0xff
 800bfba:	f887 30ad 	strb.w	r3, [r7, #173]	@ 0xad
 800bfbe:	f897 30af 	ldrb.w	r3, [r7, #175]	@ 0xaf
 800bfc2:	041a      	lsls	r2, r3, #16
 800bfc4:	f897 30ae 	ldrb.w	r3, [r7, #174]	@ 0xae
 800bfc8:	021b      	lsls	r3, r3, #8
 800bfca:	431a      	orrs	r2, r3
 800bfcc:	f897 30ad 	ldrb.w	r3, [r7, #173]	@ 0xad
 800bfd0:	4313      	orrs	r3, r2
 800bfd2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800bfd6:	f107 03a0 	add.w	r3, r7, #160	@ 0xa0
 800bfda:	4611      	mov	r1, r2
 800bfdc:	4618      	mov	r0, r3
 800bfde:	f7fd fbcf 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800bfe2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800bfe6:	f8c7 40b0 	str.w	r4, [r7, #176]	@ 0xb0
 800bfea:	62bb      	str	r3, [r7, #40]	@ 0x28
        color = newColor;
 800bfec:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 800bff0:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800bff2:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800bff4:	bf00      	nop
    HUMVAL.setLinespacing(0);
 800bff6:	697b      	ldr	r3, [r7, #20]
 800bff8:	33a4      	adds	r3, #164	@ 0xa4
 800bffa:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800bffe:	2300      	movs	r3, #0
 800c000:	f8a7 30b6 	strh.w	r3, [r7, #182]	@ 0xb6
        linespace = space;
 800c004:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800c008:	f8b7 20b6 	ldrh.w	r2, [r7, #182]	@ 0xb6
 800c00c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c00e:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800c012:	681b      	ldr	r3, [r3, #0]
 800c014:	3384      	adds	r3, #132	@ 0x84
 800c016:	681b      	ldr	r3, [r3, #0]
 800c018:	f8d7 40b8 	ldr.w	r4, [r7, #184]	@ 0xb8
 800c01c:	463a      	mov	r2, r7
 800c01e:	f8d7 10b8 	ldr.w	r1, [r7, #184]	@ 0xb8
 800c022:	4610      	mov	r0, r2
 800c024:	4798      	blx	r3
 800c026:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c02a:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c02e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c032:	ca07      	ldmia	r2, {r0, r1, r2}
 800c034:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c038:	bf00      	nop
    HUMVALBuffer[0] = 0;
 800c03a:	697b      	ldr	r3, [r7, #20]
 800c03c:	2200      	movs	r2, #0
 800c03e:	f8a3 233c 	strh.w	r2, [r3, #828]	@ 0x33c
    HUMVAL.setWildcard(HUMVALBuffer);
 800c042:	697b      	ldr	r3, [r7, #20]
 800c044:	f103 02a4 	add.w	r2, r3, #164	@ 0xa4
 800c048:	697b      	ldr	r3, [r7, #20]
 800c04a:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800c04e:	4619      	mov	r1, r3
 800c050:	4610      	mov	r0, r2
 800c052:	f7fe fa4b 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    HUMVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPPC));
 800c056:	697b      	ldr	r3, [r7, #20]
 800c058:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800c05c:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c060:	210a      	movs	r1, #10
 800c062:	4618      	mov	r0, r3
 800c064:	f7fd fec4 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800c068:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c06c:	4619      	mov	r1, r3
 800c06e:	4620      	mov	r0, r4
 800c070:	f005 fff8 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c074:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c078:	4618      	mov	r0, r3
 800c07a:	f7fb ffd5 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(HUMVAL);
 800c07e:	697a      	ldr	r2, [r7, #20]
 800c080:	697b      	ldr	r3, [r7, #20]
 800c082:	33a4      	adds	r3, #164	@ 0xa4
 800c084:	4619      	mov	r1, r3
 800c086:	4610      	mov	r0, r2
 800c088:	f7fd fe2c 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TEMPVAL.setPosition(9, 79, 178, 46);
 800c08c:	697b      	ldr	r3, [r7, #20]
 800c08e:	f103 00f0 	add.w	r0, r3, #240	@ 0xf0
 800c092:	232e      	movs	r3, #46	@ 0x2e
 800c094:	9300      	str	r3, [sp, #0]
 800c096:	23b2      	movs	r3, #178	@ 0xb2
 800c098:	224f      	movs	r2, #79	@ 0x4f
 800c09a:	2109      	movs	r1, #9
 800c09c:	f7fd fc40 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    TEMPVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c0a0:	697b      	ldr	r3, [r7, #20]
 800c0a2:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800c0a6:	23ff      	movs	r3, #255	@ 0xff
 800c0a8:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
 800c0ac:	23ff      	movs	r3, #255	@ 0xff
 800c0ae:	f887 30be 	strb.w	r3, [r7, #190]	@ 0xbe
 800c0b2:	23ff      	movs	r3, #255	@ 0xff
 800c0b4:	f887 30bd 	strb.w	r3, [r7, #189]	@ 0xbd
 800c0b8:	f897 30bf 	ldrb.w	r3, [r7, #191]	@ 0xbf
 800c0bc:	041a      	lsls	r2, r3, #16
 800c0be:	f897 30be 	ldrb.w	r3, [r7, #190]	@ 0xbe
 800c0c2:	021b      	lsls	r3, r3, #8
 800c0c4:	431a      	orrs	r2, r3
 800c0c6:	f897 30bd 	ldrb.w	r3, [r7, #189]	@ 0xbd
 800c0ca:	4313      	orrs	r3, r2
 800c0cc:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c0d0:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800c0d4:	4611      	mov	r1, r2
 800c0d6:	4618      	mov	r0, r3
 800c0d8:	f7fd fb52 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c0dc:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800c0e0:	f8c7 40c0 	str.w	r4, [r7, #192]	@ 0xc0
 800c0e4:	627b      	str	r3, [r7, #36]	@ 0x24
        color = newColor;
 800c0e6:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800c0ea:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c0ec:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c0ee:	bf00      	nop
    TEMPVAL.setLinespacing(0);
 800c0f0:	697b      	ldr	r3, [r7, #20]
 800c0f2:	33f0      	adds	r3, #240	@ 0xf0
 800c0f4:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800c0f8:	2300      	movs	r3, #0
 800c0fa:	f8a7 30c6 	strh.w	r3, [r7, #198]	@ 0xc6
        linespace = space;
 800c0fe:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800c102:	f8b7 20c6 	ldrh.w	r2, [r7, #198]	@ 0xc6
 800c106:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c108:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800c10c:	681b      	ldr	r3, [r3, #0]
 800c10e:	3384      	adds	r3, #132	@ 0x84
 800c110:	681b      	ldr	r3, [r3, #0]
 800c112:	f8d7 40c8 	ldr.w	r4, [r7, #200]	@ 0xc8
 800c116:	463a      	mov	r2, r7
 800c118:	f8d7 10c8 	ldr.w	r1, [r7, #200]	@ 0xc8
 800c11c:	4610      	mov	r0, r2
 800c11e:	4798      	blx	r3
 800c120:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c124:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c128:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c12c:	ca07      	ldmia	r2, {r0, r1, r2}
 800c12e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c132:	bf00      	nop
    TEMPVALBuffer[0] = 0;
 800c134:	697b      	ldr	r3, [r7, #20]
 800c136:	2200      	movs	r2, #0
 800c138:	f8a3 2364 	strh.w	r2, [r3, #868]	@ 0x364
    TEMPVAL.setWildcard(TEMPVALBuffer);
 800c13c:	697b      	ldr	r3, [r7, #20]
 800c13e:	f103 02f0 	add.w	r2, r3, #240	@ 0xf0
 800c142:	697b      	ldr	r3, [r7, #20]
 800c144:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800c148:	4619      	mov	r1, r3
 800c14a:	4610      	mov	r0, r2
 800c14c:	f7fe f9ce 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TEMPVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0MT1));
 800c150:	697b      	ldr	r3, [r7, #20]
 800c152:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800c156:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c15a:	2109      	movs	r1, #9
 800c15c:	4618      	mov	r0, r3
 800c15e:	f7fd fe47 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800c162:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c166:	4619      	mov	r1, r3
 800c168:	4620      	mov	r0, r4
 800c16a:	f005 ff7b 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c16e:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c172:	4618      	mov	r0, r3
 800c174:	f7fb ff58 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(TEMPVAL);
 800c178:	697a      	ldr	r2, [r7, #20]
 800c17a:	697b      	ldr	r3, [r7, #20]
 800c17c:	33f0      	adds	r3, #240	@ 0xf0
 800c17e:	4619      	mov	r1, r3
 800c180:	4610      	mov	r0, r2
 800c182:	e005      	b.n	800c190 <_ZN12MainViewBaseC1Ev+0x388>
 800c184:	08028544 	.word	0x08028544
 800c188:	0800c863 	.word	0x0800c863
 800c18c:	0800c88b 	.word	0x0800c88b
 800c190:	f7fd fda8 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ADCVAL.setPosition(98, 183, 303, 43);
 800c194:	697b      	ldr	r3, [r7, #20]
 800c196:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800c19a:	232b      	movs	r3, #43	@ 0x2b
 800c19c:	9300      	str	r3, [sp, #0]
 800c19e:	f240 132f 	movw	r3, #303	@ 0x12f
 800c1a2:	22b7      	movs	r2, #183	@ 0xb7
 800c1a4:	2162      	movs	r1, #98	@ 0x62
 800c1a6:	f7fd fbbb 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    ADCVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c1aa:	697b      	ldr	r3, [r7, #20]
 800c1ac:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800c1b0:	23ff      	movs	r3, #255	@ 0xff
 800c1b2:	f887 30cf 	strb.w	r3, [r7, #207]	@ 0xcf
 800c1b6:	23ff      	movs	r3, #255	@ 0xff
 800c1b8:	f887 30ce 	strb.w	r3, [r7, #206]	@ 0xce
 800c1bc:	23ff      	movs	r3, #255	@ 0xff
 800c1be:	f887 30cd 	strb.w	r3, [r7, #205]	@ 0xcd
 800c1c2:	f897 30cf 	ldrb.w	r3, [r7, #207]	@ 0xcf
 800c1c6:	041a      	lsls	r2, r3, #16
 800c1c8:	f897 30ce 	ldrb.w	r3, [r7, #206]	@ 0xce
 800c1cc:	021b      	lsls	r3, r3, #8
 800c1ce:	431a      	orrs	r2, r3
 800c1d0:	f897 30cd 	ldrb.w	r3, [r7, #205]	@ 0xcd
 800c1d4:	4313      	orrs	r3, r2
 800c1d6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c1da:	f107 0398 	add.w	r3, r7, #152	@ 0x98
 800c1de:	4611      	mov	r1, r2
 800c1e0:	4618      	mov	r0, r3
 800c1e2:	f7fd facd 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c1e6:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800c1ea:	f8c7 40d0 	str.w	r4, [r7, #208]	@ 0xd0
 800c1ee:	623b      	str	r3, [r7, #32]
        color = newColor;
 800c1f0:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800c1f4:	6a3a      	ldr	r2, [r7, #32]
 800c1f6:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c1f8:	bf00      	nop
    ADCVAL.setLinespacing(0);
 800c1fa:	697b      	ldr	r3, [r7, #20]
 800c1fc:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c200:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800c204:	2300      	movs	r3, #0
 800c206:	f8a7 30d6 	strh.w	r3, [r7, #214]	@ 0xd6
        linespace = space;
 800c20a:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800c20e:	f8b7 20d6 	ldrh.w	r2, [r7, #214]	@ 0xd6
 800c212:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c214:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800c218:	681b      	ldr	r3, [r3, #0]
 800c21a:	3384      	adds	r3, #132	@ 0x84
 800c21c:	681b      	ldr	r3, [r3, #0]
 800c21e:	f8d7 40d8 	ldr.w	r4, [r7, #216]	@ 0xd8
 800c222:	463a      	mov	r2, r7
 800c224:	f8d7 10d8 	ldr.w	r1, [r7, #216]	@ 0xd8
 800c228:	4610      	mov	r0, r2
 800c22a:	4798      	blx	r3
 800c22c:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c230:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c234:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c238:	ca07      	ldmia	r2, {r0, r1, r2}
 800c23a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c23e:	bf00      	nop
    ADCVALBuffer[0] = 0;
 800c240:	697b      	ldr	r3, [r7, #20]
 800c242:	2200      	movs	r2, #0
 800c244:	f8a3 238c 	strh.w	r2, [r3, #908]	@ 0x38c
    ADCVAL.setWildcard(ADCVALBuffer);
 800c248:	697b      	ldr	r3, [r7, #20]
 800c24a:	f503 729e 	add.w	r2, r3, #316	@ 0x13c
 800c24e:	697b      	ldr	r3, [r7, #20]
 800c250:	f503 7363 	add.w	r3, r3, #908	@ 0x38c
 800c254:	4619      	mov	r1, r3
 800c256:	4610      	mov	r0, r2
 800c258:	f7fe f948 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ADCVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSQP));
 800c25c:	697b      	ldr	r3, [r7, #20]
 800c25e:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800c262:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c266:	2108      	movs	r1, #8
 800c268:	4618      	mov	r0, r3
 800c26a:	f7fd fdc1 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800c26e:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c272:	4619      	mov	r1, r3
 800c274:	4620      	mov	r0, r4
 800c276:	f005 fef5 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c27a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c27e:	4618      	mov	r0, r3
 800c280:	f7fb fed2 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(ADCVAL);
 800c284:	697a      	ldr	r2, [r7, #20]
 800c286:	697b      	ldr	r3, [r7, #20]
 800c288:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c28c:	4619      	mov	r1, r3
 800c28e:	4610      	mov	r0, r2
 800c290:	f7fd fd28 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(0, 135);
 800c294:	697b      	ldr	r3, [r7, #20]
 800c296:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c29a:	2287      	movs	r2, #135	@ 0x87
 800c29c:	2100      	movs	r1, #0
 800c29e:	4618      	mov	r0, r3
 800c2a0:	f7fd fb7d 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c2a4:	697b      	ldr	r3, [r7, #20]
 800c2a6:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800c2aa:	23ff      	movs	r3, #255	@ 0xff
 800c2ac:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 800c2b0:	23ff      	movs	r3, #255	@ 0xff
 800c2b2:	f887 30de 	strb.w	r3, [r7, #222]	@ 0xde
 800c2b6:	23ff      	movs	r3, #255	@ 0xff
 800c2b8:	f887 30dd 	strb.w	r3, [r7, #221]	@ 0xdd
 800c2bc:	f897 30df 	ldrb.w	r3, [r7, #223]	@ 0xdf
 800c2c0:	041a      	lsls	r2, r3, #16
 800c2c2:	f897 30de 	ldrb.w	r3, [r7, #222]	@ 0xde
 800c2c6:	021b      	lsls	r3, r3, #8
 800c2c8:	431a      	orrs	r2, r3
 800c2ca:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 800c2ce:	4313      	orrs	r3, r2
 800c2d0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c2d4:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800c2d8:	4611      	mov	r1, r2
 800c2da:	4618      	mov	r0, r3
 800c2dc:	f7fd fa50 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c2e0:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800c2e4:	f8c7 40e0 	str.w	r4, [r7, #224]	@ 0xe0
 800c2e8:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800c2ea:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800c2ee:	69fa      	ldr	r2, [r7, #28]
 800c2f0:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c2f2:	bf00      	nop
    textArea1.setLinespacing(0);
 800c2f4:	697b      	ldr	r3, [r7, #20]
 800c2f6:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c2fa:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800c2fe:	2300      	movs	r3, #0
 800c300:	f8a7 30e6 	strh.w	r3, [r7, #230]	@ 0xe6
        linespace = space;
 800c304:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800c308:	f8b7 20e6 	ldrh.w	r2, [r7, #230]	@ 0xe6
 800c30c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c30e:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800c312:	681b      	ldr	r3, [r3, #0]
 800c314:	3384      	adds	r3, #132	@ 0x84
 800c316:	681b      	ldr	r3, [r3, #0]
 800c318:	f8d7 40e8 	ldr.w	r4, [r7, #232]	@ 0xe8
 800c31c:	463a      	mov	r2, r7
 800c31e:	f8d7 10e8 	ldr.w	r1, [r7, #232]	@ 0xe8
 800c322:	4610      	mov	r0, r2
 800c324:	4798      	blx	r3
 800c326:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c32a:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c32e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c332:	ca07      	ldmia	r2, {r0, r1, r2}
 800c334:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c338:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E175));
 800c33a:	697b      	ldr	r3, [r7, #20]
 800c33c:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800c340:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c344:	2107      	movs	r1, #7
 800c346:	4618      	mov	r0, r3
 800c348:	f7fd fd52 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800c34c:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c350:	4619      	mov	r1, r3
 800c352:	4620      	mov	r0, r4
 800c354:	f005 fe86 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c358:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c35c:	4618      	mov	r0, r3
 800c35e:	f7fb fe63 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800c362:	697a      	ldr	r2, [r7, #20]
 800c364:	697b      	ldr	r3, [r7, #20]
 800c366:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c36a:	4619      	mov	r1, r3
 800c36c:	4610      	mov	r0, r2
 800c36e:	f7fd fcb9 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800c372:	697b      	ldr	r3, [r7, #20]
 800c374:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800c378:	2332      	movs	r3, #50	@ 0x32
 800c37a:	9300      	str	r3, [sp, #0]
 800c37c:	2332      	movs	r3, #50	@ 0x32
 800c37e:	2200      	movs	r2, #0
 800c380:	2100      	movs	r1, #0
 800c382:	f7fe fdb5 	bl	800aef0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800c386:	697b      	ldr	r3, [r7, #20]
 800c388:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c38c:	2105      	movs	r1, #5
 800c38e:	4618      	mov	r0, r3
 800c390:	f7fe fdce 	bl	800af30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c394:	697b      	ldr	r3, [r7, #20]
 800c396:	f503 74ea 	add.w	r4, r3, #468	@ 0x1d4
 800c39a:	2300      	movs	r3, #0
 800c39c:	f887 30ee 	strb.w	r3, [r7, #238]	@ 0xee
 800c3a0:	2366      	movs	r3, #102	@ 0x66
 800c3a2:	f887 30ed 	strb.w	r3, [r7, #237]	@ 0xed
 800c3a6:	2399      	movs	r3, #153	@ 0x99
 800c3a8:	f887 30ec 	strb.w	r3, [r7, #236]	@ 0xec
 800c3ac:	f897 30ee 	ldrb.w	r3, [r7, #238]	@ 0xee
 800c3b0:	041a      	lsls	r2, r3, #16
 800c3b2:	f897 30ed 	ldrb.w	r3, [r7, #237]	@ 0xed
 800c3b6:	021b      	lsls	r3, r3, #8
 800c3b8:	431a      	orrs	r2, r3
 800c3ba:	f897 30ec 	ldrb.w	r3, [r7, #236]	@ 0xec
 800c3be:	4313      	orrs	r3, r2
 800c3c0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c3c4:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 800c3c8:	4611      	mov	r1, r2
 800c3ca:	4618      	mov	r0, r3
 800c3cc:	f7fd f9d8 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c3d0:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800c3d4:	461d      	mov	r5, r3
 800c3d6:	2300      	movs	r3, #0
 800c3d8:	f887 30f1 	strb.w	r3, [r7, #241]	@ 0xf1
 800c3dc:	2399      	movs	r3, #153	@ 0x99
 800c3de:	f887 30f0 	strb.w	r3, [r7, #240]	@ 0xf0
 800c3e2:	23cc      	movs	r3, #204	@ 0xcc
 800c3e4:	f887 30ef 	strb.w	r3, [r7, #239]	@ 0xef
 800c3e8:	f897 30f1 	ldrb.w	r3, [r7, #241]	@ 0xf1
 800c3ec:	041a      	lsls	r2, r3, #16
 800c3ee:	f897 30f0 	ldrb.w	r3, [r7, #240]	@ 0xf0
 800c3f2:	021b      	lsls	r3, r3, #8
 800c3f4:	431a      	orrs	r2, r3
 800c3f6:	f897 30ef 	ldrb.w	r3, [r7, #239]	@ 0xef
 800c3fa:	4313      	orrs	r3, r2
 800c3fc:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c400:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 800c404:	4611      	mov	r1, r2
 800c406:	4618      	mov	r0, r3
 800c408:	f7fd f9ba 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c40c:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800c410:	461e      	mov	r6, r3
 800c412:	2300      	movs	r3, #0
 800c414:	f887 30f4 	strb.w	r3, [r7, #244]	@ 0xf4
 800c418:	2333      	movs	r3, #51	@ 0x33
 800c41a:	f887 30f3 	strb.w	r3, [r7, #243]	@ 0xf3
 800c41e:	2366      	movs	r3, #102	@ 0x66
 800c420:	f887 30f2 	strb.w	r3, [r7, #242]	@ 0xf2
 800c424:	f897 30f4 	ldrb.w	r3, [r7, #244]	@ 0xf4
 800c428:	041a      	lsls	r2, r3, #16
 800c42a:	f897 30f3 	ldrb.w	r3, [r7, #243]	@ 0xf3
 800c42e:	021b      	lsls	r3, r3, #8
 800c430:	431a      	orrs	r2, r3
 800c432:	f897 30f2 	ldrb.w	r3, [r7, #242]	@ 0xf2
 800c436:	4313      	orrs	r3, r2
 800c438:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c43c:	f107 0388 	add.w	r3, r7, #136	@ 0x88
 800c440:	4611      	mov	r1, r2
 800c442:	4618      	mov	r0, r3
 800c444:	f7fd f99c 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c448:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800c44c:	4698      	mov	r8, r3
 800c44e:	2333      	movs	r3, #51	@ 0x33
 800c450:	f887 30f7 	strb.w	r3, [r7, #247]	@ 0xf7
 800c454:	2366      	movs	r3, #102	@ 0x66
 800c456:	f887 30f6 	strb.w	r3, [r7, #246]	@ 0xf6
 800c45a:	2399      	movs	r3, #153	@ 0x99
 800c45c:	f887 30f5 	strb.w	r3, [r7, #245]	@ 0xf5
 800c460:	f897 30f7 	ldrb.w	r3, [r7, #247]	@ 0xf7
 800c464:	041a      	lsls	r2, r3, #16
 800c466:	f897 30f6 	ldrb.w	r3, [r7, #246]	@ 0xf6
 800c46a:	021b      	lsls	r3, r3, #8
 800c46c:	431a      	orrs	r2, r3
 800c46e:	f897 30f5 	ldrb.w	r3, [r7, #245]	@ 0xf5
 800c472:	4313      	orrs	r3, r2
 800c474:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c478:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 800c47c:	4611      	mov	r1, r2
 800c47e:	4618      	mov	r0, r3
 800c480:	f7fd f97e 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c484:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800c488:	9300      	str	r3, [sp, #0]
 800c48a:	4643      	mov	r3, r8
 800c48c:	4632      	mov	r2, r6
 800c48e:	4629      	mov	r1, r5
 800c490:	4620      	mov	r0, r4
 800c492:	f7fe fd5f 	bl	800af54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800c496:	697b      	ldr	r3, [r7, #20]
 800c498:	f503 72ea 	add.w	r2, r3, #468	@ 0x1d4
 800c49c:	697b      	ldr	r3, [r7, #20]
 800c49e:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c4a2:	4619      	mov	r1, r3
 800c4a4:	4610      	mov	r0, r2
 800c4a6:	f7fd fe69 	bl	800a17c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(401, 13, 50, 50);
 800c4aa:	697b      	ldr	r3, [r7, #20]
 800c4ac:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800c4b0:	2332      	movs	r3, #50	@ 0x32
 800c4b2:	9300      	str	r3, [sp, #0]
 800c4b4:	2332      	movs	r3, #50	@ 0x32
 800c4b6:	220d      	movs	r2, #13
 800c4b8:	f240 1191 	movw	r1, #401	@ 0x191
 800c4bc:	f7fd fa30 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800c4c0:	697a      	ldr	r2, [r7, #20]
 800c4c2:	697b      	ldr	r3, [r7, #20]
 800c4c4:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c4c8:	4619      	mov	r1, r3
 800c4ca:	4610      	mov	r0, r2
 800c4cc:	f7fd fc0a 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_1.setBoxWithBorderPosition(0, 0, 50, 50);
 800c4d0:	697b      	ldr	r3, [r7, #20]
 800c4d2:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800c4d6:	2332      	movs	r3, #50	@ 0x32
 800c4d8:	9300      	str	r3, [sp, #0]
 800c4da:	2332      	movs	r3, #50	@ 0x32
 800c4dc:	2200      	movs	r2, #0
 800c4de:	2100      	movs	r1, #0
 800c4e0:	f7fe fd06 	bl	800aef0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_1.setBorderSize(5);
 800c4e4:	697b      	ldr	r3, [r7, #20]
 800c4e6:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c4ea:	2105      	movs	r1, #5
 800c4ec:	4618      	mov	r0, r3
 800c4ee:	f7fe fd1f 	bl	800af30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c4f2:	697b      	ldr	r3, [r7, #20]
 800c4f4:	f503 7413 	add.w	r4, r3, #588	@ 0x24c
 800c4f8:	2300      	movs	r3, #0
 800c4fa:	f887 30fa 	strb.w	r3, [r7, #250]	@ 0xfa
 800c4fe:	2366      	movs	r3, #102	@ 0x66
 800c500:	f887 30f9 	strb.w	r3, [r7, #249]	@ 0xf9
 800c504:	2399      	movs	r3, #153	@ 0x99
 800c506:	f887 30f8 	strb.w	r3, [r7, #248]	@ 0xf8
 800c50a:	f897 30fa 	ldrb.w	r3, [r7, #250]	@ 0xfa
 800c50e:	041a      	lsls	r2, r3, #16
 800c510:	f897 30f9 	ldrb.w	r3, [r7, #249]	@ 0xf9
 800c514:	021b      	lsls	r3, r3, #8
 800c516:	431a      	orrs	r2, r3
 800c518:	f897 30f8 	ldrb.w	r3, [r7, #248]	@ 0xf8
 800c51c:	4313      	orrs	r3, r2
 800c51e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c522:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 800c526:	4611      	mov	r1, r2
 800c528:	4618      	mov	r0, r3
 800c52a:	f7fd f929 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c52e:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800c532:	461d      	mov	r5, r3
 800c534:	2300      	movs	r3, #0
 800c536:	f887 30fd 	strb.w	r3, [r7, #253]	@ 0xfd
 800c53a:	2399      	movs	r3, #153	@ 0x99
 800c53c:	f887 30fc 	strb.w	r3, [r7, #252]	@ 0xfc
 800c540:	23cc      	movs	r3, #204	@ 0xcc
 800c542:	f887 30fb 	strb.w	r3, [r7, #251]	@ 0xfb
 800c546:	f897 30fd 	ldrb.w	r3, [r7, #253]	@ 0xfd
 800c54a:	041a      	lsls	r2, r3, #16
 800c54c:	f897 30fc 	ldrb.w	r3, [r7, #252]	@ 0xfc
 800c550:	021b      	lsls	r3, r3, #8
 800c552:	431a      	orrs	r2, r3
 800c554:	f897 30fb 	ldrb.w	r3, [r7, #251]	@ 0xfb
 800c558:	4313      	orrs	r3, r2
 800c55a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c55e:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800c562:	4611      	mov	r1, r2
 800c564:	4618      	mov	r0, r3
 800c566:	f7fd f90b 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c56a:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800c56c:	461e      	mov	r6, r3
 800c56e:	2300      	movs	r3, #0
 800c570:	f887 3100 	strb.w	r3, [r7, #256]	@ 0x100
 800c574:	2333      	movs	r3, #51	@ 0x33
 800c576:	f887 30ff 	strb.w	r3, [r7, #255]	@ 0xff
 800c57a:	2366      	movs	r3, #102	@ 0x66
 800c57c:	f887 30fe 	strb.w	r3, [r7, #254]	@ 0xfe
 800c580:	f897 3100 	ldrb.w	r3, [r7, #256]	@ 0x100
 800c584:	041a      	lsls	r2, r3, #16
 800c586:	f897 30ff 	ldrb.w	r3, [r7, #255]	@ 0xff
 800c58a:	021b      	lsls	r3, r3, #8
 800c58c:	431a      	orrs	r2, r3
 800c58e:	f897 30fe 	ldrb.w	r3, [r7, #254]	@ 0xfe
 800c592:	4313      	orrs	r3, r2
 800c594:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c598:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800c59c:	4611      	mov	r1, r2
 800c59e:	4618      	mov	r0, r3
 800c5a0:	f7fd f8ee 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c5a4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800c5a6:	4698      	mov	r8, r3
 800c5a8:	2333      	movs	r3, #51	@ 0x33
 800c5aa:	f887 3103 	strb.w	r3, [r7, #259]	@ 0x103
 800c5ae:	2366      	movs	r3, #102	@ 0x66
 800c5b0:	f887 3102 	strb.w	r3, [r7, #258]	@ 0x102
 800c5b4:	2399      	movs	r3, #153	@ 0x99
 800c5b6:	f887 3101 	strb.w	r3, [r7, #257]	@ 0x101
 800c5ba:	f897 3103 	ldrb.w	r3, [r7, #259]	@ 0x103
 800c5be:	041a      	lsls	r2, r3, #16
 800c5c0:	f897 3102 	ldrb.w	r3, [r7, #258]	@ 0x102
 800c5c4:	021b      	lsls	r3, r3, #8
 800c5c6:	431a      	orrs	r2, r3
 800c5c8:	f897 3101 	ldrb.w	r3, [r7, #257]	@ 0x101
 800c5cc:	4313      	orrs	r3, r2
 800c5ce:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c5d2:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800c5d6:	4611      	mov	r1, r2
 800c5d8:	4618      	mov	r0, r3
 800c5da:	f7fd f8d1 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c5de:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800c5e0:	9300      	str	r3, [sp, #0]
 800c5e2:	4643      	mov	r3, r8
 800c5e4:	4632      	mov	r2, r6
 800c5e6:	4629      	mov	r1, r5
 800c5e8:	4620      	mov	r0, r4
 800c5ea:	f7fe fcb3 	bl	800af54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_1.setAction(flexButtonCallback);
 800c5ee:	697b      	ldr	r3, [r7, #20]
 800c5f0:	f503 7213 	add.w	r2, r3, #588	@ 0x24c
 800c5f4:	697b      	ldr	r3, [r7, #20]
 800c5f6:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c5fa:	4619      	mov	r1, r3
 800c5fc:	4610      	mov	r0, r2
 800c5fe:	f7fd fdbd 	bl	800a17c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1_1.setPosition(401, 72, 50, 50);
 800c602:	697b      	ldr	r3, [r7, #20]
 800c604:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800c608:	2332      	movs	r3, #50	@ 0x32
 800c60a:	9300      	str	r3, [sp, #0]
 800c60c:	2332      	movs	r3, #50	@ 0x32
 800c60e:	2248      	movs	r2, #72	@ 0x48
 800c610:	f240 1191 	movw	r1, #401	@ 0x191
 800c614:	f7fd f984 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_1);
 800c618:	697a      	ldr	r2, [r7, #20]
 800c61a:	697b      	ldr	r3, [r7, #20]
 800c61c:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c620:	4619      	mov	r1, r3
 800c622:	4610      	mov	r0, r2
 800c624:	f7fd fb5e 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_2.setBoxWithBorderPosition(0, 0, 50, 50);
 800c628:	697b      	ldr	r3, [r7, #20]
 800c62a:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800c62e:	2332      	movs	r3, #50	@ 0x32
 800c630:	9300      	str	r3, [sp, #0]
 800c632:	2332      	movs	r3, #50	@ 0x32
 800c634:	2200      	movs	r2, #0
 800c636:	2100      	movs	r1, #0
 800c638:	f7fe fc5a 	bl	800aef0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_2.setBorderSize(5);
 800c63c:	697b      	ldr	r3, [r7, #20]
 800c63e:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c642:	2105      	movs	r1, #5
 800c644:	4618      	mov	r0, r3
 800c646:	f7fe fc73 	bl	800af30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c64a:	697b      	ldr	r3, [r7, #20]
 800c64c:	f503 7431 	add.w	r4, r3, #708	@ 0x2c4
 800c650:	2300      	movs	r3, #0
 800c652:	f887 3106 	strb.w	r3, [r7, #262]	@ 0x106
 800c656:	2366      	movs	r3, #102	@ 0x66
 800c658:	f887 3105 	strb.w	r3, [r7, #261]	@ 0x105
 800c65c:	2399      	movs	r3, #153	@ 0x99
 800c65e:	f887 3104 	strb.w	r3, [r7, #260]	@ 0x104
 800c662:	f897 3106 	ldrb.w	r3, [r7, #262]	@ 0x106
 800c666:	041a      	lsls	r2, r3, #16
 800c668:	f897 3105 	ldrb.w	r3, [r7, #261]	@ 0x105
 800c66c:	021b      	lsls	r3, r3, #8
 800c66e:	431a      	orrs	r2, r3
 800c670:	f897 3104 	ldrb.w	r3, [r7, #260]	@ 0x104
 800c674:	4313      	orrs	r3, r2
 800c676:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c67a:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800c67e:	4611      	mov	r1, r2
 800c680:	4618      	mov	r0, r3
 800c682:	f7fd f87d 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c686:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800c688:	461d      	mov	r5, r3
 800c68a:	2300      	movs	r3, #0
 800c68c:	f887 3109 	strb.w	r3, [r7, #265]	@ 0x109
 800c690:	2399      	movs	r3, #153	@ 0x99
 800c692:	f887 3108 	strb.w	r3, [r7, #264]	@ 0x108
 800c696:	23cc      	movs	r3, #204	@ 0xcc
 800c698:	f887 3107 	strb.w	r3, [r7, #263]	@ 0x107
 800c69c:	f897 3109 	ldrb.w	r3, [r7, #265]	@ 0x109
 800c6a0:	041a      	lsls	r2, r3, #16
 800c6a2:	f897 3108 	ldrb.w	r3, [r7, #264]	@ 0x108
 800c6a6:	021b      	lsls	r3, r3, #8
 800c6a8:	431a      	orrs	r2, r3
 800c6aa:	f897 3107 	ldrb.w	r3, [r7, #263]	@ 0x107
 800c6ae:	4313      	orrs	r3, r2
 800c6b0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c6b4:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800c6b8:	4611      	mov	r1, r2
 800c6ba:	4618      	mov	r0, r3
 800c6bc:	f7fd f860 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c6c0:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800c6c2:	461e      	mov	r6, r3
 800c6c4:	2300      	movs	r3, #0
 800c6c6:	f887 310c 	strb.w	r3, [r7, #268]	@ 0x10c
 800c6ca:	2333      	movs	r3, #51	@ 0x33
 800c6cc:	f887 310b 	strb.w	r3, [r7, #267]	@ 0x10b
 800c6d0:	2366      	movs	r3, #102	@ 0x66
 800c6d2:	f887 310a 	strb.w	r3, [r7, #266]	@ 0x10a
 800c6d6:	f897 310c 	ldrb.w	r3, [r7, #268]	@ 0x10c
 800c6da:	041a      	lsls	r2, r3, #16
 800c6dc:	f897 310b 	ldrb.w	r3, [r7, #267]	@ 0x10b
 800c6e0:	021b      	lsls	r3, r3, #8
 800c6e2:	431a      	orrs	r2, r3
 800c6e4:	f897 310a 	ldrb.w	r3, [r7, #266]	@ 0x10a
 800c6e8:	4313      	orrs	r3, r2
 800c6ea:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c6ee:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800c6f2:	4611      	mov	r1, r2
 800c6f4:	4618      	mov	r0, r3
 800c6f6:	f7fd f843 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c6fa:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800c6fc:	4698      	mov	r8, r3
 800c6fe:	2333      	movs	r3, #51	@ 0x33
 800c700:	f887 310f 	strb.w	r3, [r7, #271]	@ 0x10f
 800c704:	2366      	movs	r3, #102	@ 0x66
 800c706:	f887 310e 	strb.w	r3, [r7, #270]	@ 0x10e
 800c70a:	2399      	movs	r3, #153	@ 0x99
 800c70c:	f887 310d 	strb.w	r3, [r7, #269]	@ 0x10d
 800c710:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 800c714:	041a      	lsls	r2, r3, #16
 800c716:	f897 310e 	ldrb.w	r3, [r7, #270]	@ 0x10e
 800c71a:	021b      	lsls	r3, r3, #8
 800c71c:	431a      	orrs	r2, r3
 800c71e:	f897 310d 	ldrb.w	r3, [r7, #269]	@ 0x10d
 800c722:	4313      	orrs	r3, r2
 800c724:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c728:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800c72c:	4611      	mov	r1, r2
 800c72e:	4618      	mov	r0, r3
 800c730:	f7fd f826 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800c734:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800c736:	9300      	str	r3, [sp, #0]
 800c738:	4643      	mov	r3, r8
 800c73a:	4632      	mov	r2, r6
 800c73c:	4629      	mov	r1, r5
 800c73e:	4620      	mov	r0, r4
 800c740:	f7fe fc08 	bl	800af54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_2.setAction(flexButtonCallback);
 800c744:	697b      	ldr	r3, [r7, #20]
 800c746:	f503 7231 	add.w	r2, r3, #708	@ 0x2c4
 800c74a:	697b      	ldr	r3, [r7, #20]
 800c74c:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c750:	4619      	mov	r1, r3
 800c752:	4610      	mov	r0, r2
 800c754:	f7fd fd12 	bl	800a17c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1_2.setPosition(401, 127, 50, 50);
 800c758:	697b      	ldr	r3, [r7, #20]
 800c75a:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800c75e:	2332      	movs	r3, #50	@ 0x32
 800c760:	9300      	str	r3, [sp, #0]
 800c762:	2332      	movs	r3, #50	@ 0x32
 800c764:	227f      	movs	r2, #127	@ 0x7f
 800c766:	f240 1191 	movw	r1, #401	@ 0x191
 800c76a:	f7fd f8d9 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_2);
 800c76e:	697a      	ldr	r2, [r7, #20]
 800c770:	697b      	ldr	r3, [r7, #20]
 800c772:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c776:	4619      	mov	r1, r3
 800c778:	4610      	mov	r0, r2
 800c77a:	f7fd fab3 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800c77e:	697b      	ldr	r3, [r7, #20]
 800c780:	4618      	mov	r0, r3
 800c782:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800c786:	46bd      	mov	sp, r7
 800c788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c78c <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 800c78c:	b580      	push	{r7, lr}
 800c78e:	b082      	sub	sp, #8
 800c790:	af00      	add	r7, sp, #0
 800c792:	6078      	str	r0, [r7, #4]
 800c794:	4a24      	ldr	r2, [pc, #144]	@ (800c828 <_ZN12MainViewBaseD1Ev+0x9c>)
 800c796:	687b      	ldr	r3, [r7, #4]
 800c798:	601a      	str	r2, [r3, #0]
{

}
 800c79a:	687b      	ldr	r3, [r7, #4]
 800c79c:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c7a0:	4618      	mov	r0, r3
 800c7a2:	f000 f8f9 	bl	800c998 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800c7a6:	687b      	ldr	r3, [r7, #4]
 800c7a8:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800c7ac:	4618      	mov	r0, r3
 800c7ae:	f000 f915 	bl	800c9dc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800c7b2:	687b      	ldr	r3, [r7, #4]
 800c7b4:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c7b8:	4618      	mov	r0, r3
 800c7ba:	f7fe fc9f 	bl	800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800c7be:	687b      	ldr	r3, [r7, #4]
 800c7c0:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c7c4:	4618      	mov	r0, r3
 800c7c6:	f7fe fc99 	bl	800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800c7ca:	687b      	ldr	r3, [r7, #4]
 800c7cc:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c7d0:	4618      	mov	r0, r3
 800c7d2:	f7fe fc93 	bl	800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800c7d6:	687b      	ldr	r3, [r7, #4]
 800c7d8:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c7dc:	4618      	mov	r0, r3
 800c7de:	f7fe fcb5 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c7e2:	687b      	ldr	r3, [r7, #4]
 800c7e4:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c7e8:	4618      	mov	r0, r3
 800c7ea:	f7fe fcaf 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c7ee:	687b      	ldr	r3, [r7, #4]
 800c7f0:	33f0      	adds	r3, #240	@ 0xf0
 800c7f2:	4618      	mov	r0, r3
 800c7f4:	f7fe fcaa 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c7f8:	687b      	ldr	r3, [r7, #4]
 800c7fa:	33a4      	adds	r3, #164	@ 0xa4
 800c7fc:	4618      	mov	r0, r3
 800c7fe:	f7fe fca5 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800c802:	687b      	ldr	r3, [r7, #4]
 800c804:	336c      	adds	r3, #108	@ 0x6c
 800c806:	4618      	mov	r0, r3
 800c808:	f000 f90a 	bl	800ca20 <_ZN8touchgfx12ToggleButtonD1Ev>
 800c80c:	687b      	ldr	r3, [r7, #4]
 800c80e:	3340      	adds	r3, #64	@ 0x40
 800c810:	4618      	mov	r0, r3
 800c812:	f7fd fcfd 	bl	800a210 <_ZN8touchgfx3BoxD1Ev>
 800c816:	687b      	ldr	r3, [r7, #4]
 800c818:	4618      	mov	r0, r3
 800c81a:	f7ff fab9 	bl	800bd90 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	4618      	mov	r0, r3
 800c822:	3708      	adds	r7, #8
 800c824:	46bd      	mov	sp, r7
 800c826:	bd80      	pop	{r7, pc}
 800c828:	08028544 	.word	0x08028544

0800c82c <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800c82c:	b580      	push	{r7, lr}
 800c82e:	b082      	sub	sp, #8
 800c830:	af00      	add	r7, sp, #0
 800c832:	6078      	str	r0, [r7, #4]
}
 800c834:	6878      	ldr	r0, [r7, #4]
 800c836:	f7ff ffa9 	bl	800c78c <_ZN12MainViewBaseD1Ev>
 800c83a:	f44f 7175 	mov.w	r1, #980	@ 0x3d4
 800c83e:	6878      	ldr	r0, [r7, #4]
 800c840:	f019 f8f7 	bl	8025a32 <_ZdlPvj>
 800c844:	687b      	ldr	r3, [r7, #4]
 800c846:	4618      	mov	r0, r3
 800c848:	3708      	adds	r7, #8
 800c84a:	46bd      	mov	sp, r7
 800c84c:	bd80      	pop	{r7, pc}

0800c84e <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 800c84e:	b480      	push	{r7}
 800c850:	b083      	sub	sp, #12
 800c852:	af00      	add	r7, sp, #0
 800c854:	6078      	str	r0, [r7, #4]

}
 800c856:	bf00      	nop
 800c858:	370c      	adds	r7, #12
 800c85a:	46bd      	mov	sp, r7
 800c85c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c860:	4770      	bx	lr

0800c862 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800c862:	b580      	push	{r7, lr}
 800c864:	b082      	sub	sp, #8
 800c866:	af00      	add	r7, sp, #0
 800c868:	6078      	str	r0, [r7, #4]
 800c86a:	6039      	str	r1, [r7, #0]
    if (&src == &toggleButton1)
 800c86c:	687b      	ldr	r3, [r7, #4]
 800c86e:	336c      	adds	r3, #108	@ 0x6c
 800c870:	683a      	ldr	r2, [r7, #0]
 800c872:	429a      	cmp	r2, r3
 800c874:	d105      	bne.n	800c882 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 800c876:	687b      	ldr	r3, [r7, #4]
 800c878:	681b      	ldr	r3, [r3, #0]
 800c87a:	332c      	adds	r3, #44	@ 0x2c
 800c87c:	681b      	ldr	r3, [r3, #0]
 800c87e:	6878      	ldr	r0, [r7, #4]
 800c880:	4798      	blx	r3
    }
}
 800c882:	bf00      	nop
 800c884:	3708      	adds	r7, #8
 800c886:	46bd      	mov	sp, r7
 800c888:	bd80      	pop	{r7, pc}

0800c88a <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800c88a:	b580      	push	{r7, lr}
 800c88c:	b082      	sub	sp, #8
 800c88e:	af00      	add	r7, sp, #0
 800c890:	6078      	str	r0, [r7, #4]
 800c892:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800c894:	687b      	ldr	r3, [r7, #4]
 800c896:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c89a:	683a      	ldr	r2, [r7, #0]
 800c89c:	429a      	cmp	r2, r3
 800c89e:	d106      	bne.n	800c8ae <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //Interaction2
        //When flexButton1 clicked change screen to humidity_screen
        //Go to humidity_screen with no screen transition
        application().gotohumidity_screenScreenNoTransition();
 800c8a0:	6878      	ldr	r0, [r7, #4]
 800c8a2:	f7ff fa69 	bl	800bd78 <_ZN12MainViewBase11applicationEv>
 800c8a6:	4603      	mov	r3, r0
 800c8a8:	4618      	mov	r0, r3
 800c8aa:	f7fc f811 	bl	80088d0 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>
    }
    if (&src == &flexButton1_1)
 800c8ae:	687b      	ldr	r3, [r7, #4]
 800c8b0:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c8b4:	683a      	ldr	r2, [r7, #0]
 800c8b6:	429a      	cmp	r2, r3
 800c8b8:	d106      	bne.n	800c8c8 <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
    {
        //Interaction3
        //When flexButton1_1 clicked change screen to temperature_screen
        //Go to temperature_screen with no screen transition
        application().gototemperature_screenScreenNoTransition();
 800c8ba:	6878      	ldr	r0, [r7, #4]
 800c8bc:	f7ff fa5c 	bl	800bd78 <_ZN12MainViewBase11applicationEv>
 800c8c0:	4603      	mov	r3, r0
 800c8c2:	4618      	mov	r0, r3
 800c8c4:	f7fc f84a 	bl	800895c <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv>
    }
    if (&src == &flexButton1_2)
 800c8c8:	687b      	ldr	r3, [r7, #4]
 800c8ca:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c8ce:	683a      	ldr	r2, [r7, #0]
 800c8d0:	429a      	cmp	r2, r3
 800c8d2:	d106      	bne.n	800c8e2 <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x58>
    {
        //Interaction4
        //When flexButton1_2 clicked change screen to light_screen
        //Go to light_screen with no screen transition
        application().gotolight_screenScreenNoTransition();
 800c8d4:	6878      	ldr	r0, [r7, #4]
 800c8d6:	f7ff fa4f 	bl	800bd78 <_ZN12MainViewBase11applicationEv>
 800c8da:	4603      	mov	r3, r0
 800c8dc:	4618      	mov	r0, r3
 800c8de:	f7fc f883 	bl	80089e8 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv>
    }
}
 800c8e2:	bf00      	nop
 800c8e4:	3708      	adds	r7, #8
 800c8e6:	46bd      	mov	sp, r7
 800c8e8:	bd80      	pop	{r7, pc}
	...

0800c8ec <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 800c8ec:	b580      	push	{r7, lr}
 800c8ee:	b082      	sub	sp, #8
 800c8f0:	af00      	add	r7, sp, #0
 800c8f2:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800c8f4:	687b      	ldr	r3, [r7, #4]
 800c8f6:	4618      	mov	r0, r3
 800c8f8:	f008 fe58 	bl	80155ac <_ZN8touchgfx6ScreenC1Ev>
 800c8fc:	4a05      	ldr	r2, [pc, #20]	@ (800c914 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 800c8fe:	687b      	ldr	r3, [r7, #4]
 800c900:	601a      	str	r2, [r3, #0]
 800c902:	687b      	ldr	r3, [r7, #4]
 800c904:	2200      	movs	r2, #0
 800c906:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800c908:	687b      	ldr	r3, [r7, #4]
 800c90a:	4618      	mov	r0, r3
 800c90c:	3708      	adds	r7, #8
 800c90e:	46bd      	mov	sp, r7
 800c910:	bd80      	pop	{r7, pc}
 800c912:	bf00      	nop
 800c914:	080285ac 	.word	0x080285ac

0800c918 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800c918:	b580      	push	{r7, lr}
 800c91a:	b084      	sub	sp, #16
 800c91c:	af00      	add	r7, sp, #0
 800c91e:	60f8      	str	r0, [r7, #12]
 800c920:	60b9      	str	r1, [r7, #8]
 800c922:	4639      	mov	r1, r7
 800c924:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800c928:	68fb      	ldr	r3, [r7, #12]
 800c92a:	4618      	mov	r0, r3
 800c92c:	f7fe fab0 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800c930:	4a08      	ldr	r2, [pc, #32]	@ (800c954 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800c932:	68fb      	ldr	r3, [r7, #12]
 800c934:	601a      	str	r2, [r3, #0]
 800c936:	68fb      	ldr	r3, [r7, #12]
 800c938:	68ba      	ldr	r2, [r7, #8]
 800c93a:	605a      	str	r2, [r3, #4]
 800c93c:	68fb      	ldr	r3, [r7, #12]
 800c93e:	3308      	adds	r3, #8
 800c940:	463a      	mov	r2, r7
 800c942:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c946:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800c94a:	68fb      	ldr	r3, [r7, #12]
 800c94c:	4618      	mov	r0, r3
 800c94e:	3710      	adds	r7, #16
 800c950:	46bd      	mov	sp, r7
 800c952:	bd80      	pop	{r7, pc}
 800c954:	08028594 	.word	0x08028594

0800c958 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800c958:	b580      	push	{r7, lr}
 800c95a:	b084      	sub	sp, #16
 800c95c:	af00      	add	r7, sp, #0
 800c95e:	60f8      	str	r0, [r7, #12]
 800c960:	60b9      	str	r1, [r7, #8]
 800c962:	4639      	mov	r1, r7
 800c964:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800c968:	68fb      	ldr	r3, [r7, #12]
 800c96a:	4618      	mov	r0, r3
 800c96c:	f7fe fa60 	bl	800ae30 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800c970:	4a08      	ldr	r2, [pc, #32]	@ (800c994 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800c972:	68fb      	ldr	r3, [r7, #12]
 800c974:	601a      	str	r2, [r3, #0]
 800c976:	68fb      	ldr	r3, [r7, #12]
 800c978:	68ba      	ldr	r2, [r7, #8]
 800c97a:	605a      	str	r2, [r3, #4]
 800c97c:	68fb      	ldr	r3, [r7, #12]
 800c97e:	3308      	adds	r3, #8
 800c980:	463a      	mov	r2, r7
 800c982:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c986:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800c98a:	68fb      	ldr	r3, [r7, #12]
 800c98c:	4618      	mov	r0, r3
 800c98e:	3710      	adds	r7, #16
 800c990:	46bd      	mov	sp, r7
 800c992:	bd80      	pop	{r7, pc}
 800c994:	0802857c 	.word	0x0802857c

0800c998 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800c998:	b580      	push	{r7, lr}
 800c99a:	b082      	sub	sp, #8
 800c99c:	af00      	add	r7, sp, #0
 800c99e:	6078      	str	r0, [r7, #4]
 800c9a0:	4a05      	ldr	r2, [pc, #20]	@ (800c9b8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800c9a2:	687b      	ldr	r3, [r7, #4]
 800c9a4:	601a      	str	r2, [r3, #0]
 800c9a6:	687b      	ldr	r3, [r7, #4]
 800c9a8:	4618      	mov	r0, r3
 800c9aa:	f7fe faf1 	bl	800af90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	4618      	mov	r0, r3
 800c9b2:	3708      	adds	r7, #8
 800c9b4:	46bd      	mov	sp, r7
 800c9b6:	bd80      	pop	{r7, pc}
 800c9b8:	0802857c 	.word	0x0802857c

0800c9bc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800c9bc:	b580      	push	{r7, lr}
 800c9be:	b082      	sub	sp, #8
 800c9c0:	af00      	add	r7, sp, #0
 800c9c2:	6078      	str	r0, [r7, #4]
 800c9c4:	6878      	ldr	r0, [r7, #4]
 800c9c6:	f7ff ffe7 	bl	800c998 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800c9ca:	2110      	movs	r1, #16
 800c9cc:	6878      	ldr	r0, [r7, #4]
 800c9ce:	f019 f830 	bl	8025a32 <_ZdlPvj>
 800c9d2:	687b      	ldr	r3, [r7, #4]
 800c9d4:	4618      	mov	r0, r3
 800c9d6:	3708      	adds	r7, #8
 800c9d8:	46bd      	mov	sp, r7
 800c9da:	bd80      	pop	{r7, pc}

0800c9dc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 800c9dc:	b580      	push	{r7, lr}
 800c9de:	b082      	sub	sp, #8
 800c9e0:	af00      	add	r7, sp, #0
 800c9e2:	6078      	str	r0, [r7, #4]
 800c9e4:	4a05      	ldr	r2, [pc, #20]	@ (800c9fc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800c9e6:	687b      	ldr	r3, [r7, #4]
 800c9e8:	601a      	str	r2, [r3, #0]
 800c9ea:	687b      	ldr	r3, [r7, #4]
 800c9ec:	4618      	mov	r0, r3
 800c9ee:	f7fe faef 	bl	800afd0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800c9f2:	687b      	ldr	r3, [r7, #4]
 800c9f4:	4618      	mov	r0, r3
 800c9f6:	3708      	adds	r7, #8
 800c9f8:	46bd      	mov	sp, r7
 800c9fa:	bd80      	pop	{r7, pc}
 800c9fc:	08028594 	.word	0x08028594

0800ca00 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800ca00:	b580      	push	{r7, lr}
 800ca02:	b082      	sub	sp, #8
 800ca04:	af00      	add	r7, sp, #0
 800ca06:	6078      	str	r0, [r7, #4]
 800ca08:	6878      	ldr	r0, [r7, #4]
 800ca0a:	f7ff ffe7 	bl	800c9dc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ca0e:	2110      	movs	r1, #16
 800ca10:	6878      	ldr	r0, [r7, #4]
 800ca12:	f019 f80e 	bl	8025a32 <_ZdlPvj>
 800ca16:	687b      	ldr	r3, [r7, #4]
 800ca18:	4618      	mov	r0, r3
 800ca1a:	3708      	adds	r7, #8
 800ca1c:	46bd      	mov	sp, r7
 800ca1e:	bd80      	pop	{r7, pc}

0800ca20 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800ca20:	b580      	push	{r7, lr}
 800ca22:	b082      	sub	sp, #8
 800ca24:	af00      	add	r7, sp, #0
 800ca26:	6078      	str	r0, [r7, #4]
 800ca28:	4a05      	ldr	r2, [pc, #20]	@ (800ca40 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 800ca2a:	687b      	ldr	r3, [r7, #4]
 800ca2c:	601a      	str	r2, [r3, #0]
 800ca2e:	687b      	ldr	r3, [r7, #4]
 800ca30:	4618      	mov	r0, r3
 800ca32:	f7fe fbad 	bl	800b190 <_ZN8touchgfx6ButtonD1Ev>
 800ca36:	687b      	ldr	r3, [r7, #4]
 800ca38:	4618      	mov	r0, r3
 800ca3a:	3708      	adds	r7, #8
 800ca3c:	46bd      	mov	sp, r7
 800ca3e:	bd80      	pop	{r7, pc}
 800ca40:	08029034 	.word	0x08029034

0800ca44 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800ca44:	b580      	push	{r7, lr}
 800ca46:	b082      	sub	sp, #8
 800ca48:	af00      	add	r7, sp, #0
 800ca4a:	6078      	str	r0, [r7, #4]
 800ca4c:	6878      	ldr	r0, [r7, #4]
 800ca4e:	f7ff ffe7 	bl	800ca20 <_ZN8touchgfx12ToggleButtonD1Ev>
 800ca52:	2138      	movs	r1, #56	@ 0x38
 800ca54:	6878      	ldr	r0, [r7, #4]
 800ca56:	f018 ffec 	bl	8025a32 <_ZdlPvj>
 800ca5a:	687b      	ldr	r3, [r7, #4]
 800ca5c:	4618      	mov	r0, r3
 800ca5e:	3708      	adds	r7, #8
 800ca60:	46bd      	mov	sp, r7
 800ca62:	bd80      	pop	{r7, pc}

0800ca64 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800ca64:	b580      	push	{r7, lr}
 800ca66:	b082      	sub	sp, #8
 800ca68:	af00      	add	r7, sp, #0
 800ca6a:	6078      	str	r0, [r7, #4]
 800ca6c:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800ca6e:	687b      	ldr	r3, [r7, #4]
 800ca70:	685b      	ldr	r3, [r3, #4]
 800ca72:	687a      	ldr	r2, [r7, #4]
 800ca74:	68d2      	ldr	r2, [r2, #12]
 800ca76:	1052      	asrs	r2, r2, #1
 800ca78:	1898      	adds	r0, r3, r2
 800ca7a:	687b      	ldr	r3, [r7, #4]
 800ca7c:	68db      	ldr	r3, [r3, #12]
 800ca7e:	f003 0301 	and.w	r3, r3, #1
 800ca82:	2b00      	cmp	r3, #0
 800ca84:	d102      	bne.n	800ca8c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	689b      	ldr	r3, [r3, #8]
 800ca8a:	e00a      	b.n	800caa2 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800ca8c:	687b      	ldr	r3, [r7, #4]
 800ca8e:	685b      	ldr	r3, [r3, #4]
 800ca90:	687a      	ldr	r2, [r7, #4]
 800ca92:	68d2      	ldr	r2, [r2, #12]
 800ca94:	1052      	asrs	r2, r2, #1
 800ca96:	4413      	add	r3, r2
 800ca98:	681b      	ldr	r3, [r3, #0]
 800ca9a:	687a      	ldr	r2, [r7, #4]
 800ca9c:	6892      	ldr	r2, [r2, #8]
 800ca9e:	4413      	add	r3, r2
 800caa0:	681b      	ldr	r3, [r3, #0]
 800caa2:	6839      	ldr	r1, [r7, #0]
 800caa4:	4798      	blx	r3
    }
 800caa6:	bf00      	nop
 800caa8:	3708      	adds	r7, #8
 800caaa:	46bd      	mov	sp, r7
 800caac:	bd80      	pop	{r7, pc}

0800caae <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800caae:	b480      	push	{r7}
 800cab0:	b083      	sub	sp, #12
 800cab2:	af00      	add	r7, sp, #0
 800cab4:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800cab6:	687b      	ldr	r3, [r7, #4]
 800cab8:	685b      	ldr	r3, [r3, #4]
 800caba:	2b00      	cmp	r3, #0
 800cabc:	d010      	beq.n	800cae0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800cabe:	687b      	ldr	r3, [r7, #4]
 800cac0:	689b      	ldr	r3, [r3, #8]
 800cac2:	2b00      	cmp	r3, #0
 800cac4:	d107      	bne.n	800cad6 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800cac6:	687b      	ldr	r3, [r7, #4]
 800cac8:	68db      	ldr	r3, [r3, #12]
 800caca:	f003 0301 	and.w	r3, r3, #1
 800cace:	2b00      	cmp	r3, #0
 800cad0:	d101      	bne.n	800cad6 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800cad2:	2301      	movs	r3, #1
 800cad4:	e000      	b.n	800cad8 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800cad6:	2300      	movs	r3, #0
 800cad8:	2b01      	cmp	r3, #1
 800cada:	d001      	beq.n	800cae0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800cadc:	2301      	movs	r3, #1
 800cade:	e000      	b.n	800cae2 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800cae0:	2300      	movs	r3, #0
    }
 800cae2:	4618      	mov	r0, r3
 800cae4:	370c      	adds	r7, #12
 800cae6:	46bd      	mov	sp, r7
 800cae8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caec:	4770      	bx	lr

0800caee <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800caee:	b580      	push	{r7, lr}
 800caf0:	b082      	sub	sp, #8
 800caf2:	af00      	add	r7, sp, #0
 800caf4:	6078      	str	r0, [r7, #4]
 800caf6:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800caf8:	687b      	ldr	r3, [r7, #4]
 800cafa:	685b      	ldr	r3, [r3, #4]
 800cafc:	687a      	ldr	r2, [r7, #4]
 800cafe:	68d2      	ldr	r2, [r2, #12]
 800cb00:	1052      	asrs	r2, r2, #1
 800cb02:	1898      	adds	r0, r3, r2
 800cb04:	687b      	ldr	r3, [r7, #4]
 800cb06:	68db      	ldr	r3, [r3, #12]
 800cb08:	f003 0301 	and.w	r3, r3, #1
 800cb0c:	2b00      	cmp	r3, #0
 800cb0e:	d102      	bne.n	800cb16 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800cb10:	687b      	ldr	r3, [r7, #4]
 800cb12:	689b      	ldr	r3, [r3, #8]
 800cb14:	e00a      	b.n	800cb2c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800cb16:	687b      	ldr	r3, [r7, #4]
 800cb18:	685b      	ldr	r3, [r3, #4]
 800cb1a:	687a      	ldr	r2, [r7, #4]
 800cb1c:	68d2      	ldr	r2, [r2, #12]
 800cb1e:	1052      	asrs	r2, r2, #1
 800cb20:	4413      	add	r3, r2
 800cb22:	681b      	ldr	r3, [r3, #0]
 800cb24:	687a      	ldr	r2, [r7, #4]
 800cb26:	6892      	ldr	r2, [r2, #8]
 800cb28:	4413      	add	r3, r2
 800cb2a:	681b      	ldr	r3, [r3, #0]
 800cb2c:	6839      	ldr	r1, [r7, #0]
 800cb2e:	4798      	blx	r3
    }
 800cb30:	bf00      	nop
 800cb32:	3708      	adds	r7, #8
 800cb34:	46bd      	mov	sp, r7
 800cb36:	bd80      	pop	{r7, pc}

0800cb38 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800cb38:	b480      	push	{r7}
 800cb3a:	b083      	sub	sp, #12
 800cb3c:	af00      	add	r7, sp, #0
 800cb3e:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800cb40:	687b      	ldr	r3, [r7, #4]
 800cb42:	685b      	ldr	r3, [r3, #4]
 800cb44:	2b00      	cmp	r3, #0
 800cb46:	d010      	beq.n	800cb6a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cb48:	687b      	ldr	r3, [r7, #4]
 800cb4a:	689b      	ldr	r3, [r3, #8]
 800cb4c:	2b00      	cmp	r3, #0
 800cb4e:	d107      	bne.n	800cb60 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cb50:	687b      	ldr	r3, [r7, #4]
 800cb52:	68db      	ldr	r3, [r3, #12]
 800cb54:	f003 0301 	and.w	r3, r3, #1
 800cb58:	2b00      	cmp	r3, #0
 800cb5a:	d101      	bne.n	800cb60 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800cb5c:	2301      	movs	r3, #1
 800cb5e:	e000      	b.n	800cb62 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800cb60:	2300      	movs	r3, #0
 800cb62:	2b01      	cmp	r3, #1
 800cb64:	d001      	beq.n	800cb6a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800cb66:	2301      	movs	r3, #1
 800cb68:	e000      	b.n	800cb6c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800cb6a:	2300      	movs	r3, #0
    }
 800cb6c:	4618      	mov	r0, r3
 800cb6e:	370c      	adds	r7, #12
 800cb70:	46bd      	mov	sp, r7
 800cb72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb76:	4770      	bx	lr

0800cb78 <_ZN26temperature_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800cb78:	b480      	push	{r7}
 800cb7a:	b083      	sub	sp, #12
 800cb7c:	af00      	add	r7, sp, #0
 800cb7e:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in temperature_screen
    }
 800cb80:	bf00      	nop
 800cb82:	370c      	adds	r7, #12
 800cb84:	46bd      	mov	sp, r7
 800cb86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb8a:	4770      	bx	lr

0800cb8c <_ZN26temperature_screenViewBase8decreaseEv>:
    virtual void decrease()
 800cb8c:	b480      	push	{r7}
 800cb8e:	b083      	sub	sp, #12
 800cb90:	af00      	add	r7, sp, #0
 800cb92:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in temperature_screen
    }
 800cb94:	bf00      	nop
 800cb96:	370c      	adds	r7, #12
 800cb98:	46bd      	mov	sp, r7
 800cb9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb9e:	4770      	bx	lr

0800cba0 <_ZN26temperature_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800cba0:	b580      	push	{r7, lr}
 800cba2:	b082      	sub	sp, #8
 800cba4:	af00      	add	r7, sp, #0
 800cba6:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800cba8:	f007 f9ea 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 800cbac:	4603      	mov	r3, r0
    }
 800cbae:	4618      	mov	r0, r3
 800cbb0:	3708      	adds	r7, #8
 800cbb2:	46bd      	mov	sp, r7
 800cbb4:	bd80      	pop	{r7, pc}
	...

0800cbb8 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>:
class View : public Screen
 800cbb8:	b580      	push	{r7, lr}
 800cbba:	b082      	sub	sp, #8
 800cbbc:	af00      	add	r7, sp, #0
 800cbbe:	6078      	str	r0, [r7, #4]
 800cbc0:	4a05      	ldr	r2, [pc, #20]	@ (800cbd8 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev+0x20>)
 800cbc2:	687b      	ldr	r3, [r7, #4]
 800cbc4:	601a      	str	r2, [r3, #0]
 800cbc6:	687b      	ldr	r3, [r7, #4]
 800cbc8:	4618      	mov	r0, r3
 800cbca:	f7fd f833 	bl	8009c34 <_ZN8touchgfx6ScreenD1Ev>
 800cbce:	687b      	ldr	r3, [r7, #4]
 800cbd0:	4618      	mov	r0, r3
 800cbd2:	3708      	adds	r7, #8
 800cbd4:	46bd      	mov	sp, r7
 800cbd6:	bd80      	pop	{r7, pc}
 800cbd8:	0802864c 	.word	0x0802864c

0800cbdc <_ZN8touchgfx4ViewI27temperature_screenPresenterED0Ev>:
 800cbdc:	b580      	push	{r7, lr}
 800cbde:	b082      	sub	sp, #8
 800cbe0:	af00      	add	r7, sp, #0
 800cbe2:	6078      	str	r0, [r7, #4]
 800cbe4:	6878      	ldr	r0, [r7, #4]
 800cbe6:	f7ff ffe7 	bl	800cbb8 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>
 800cbea:	2140      	movs	r1, #64	@ 0x40
 800cbec:	6878      	ldr	r0, [r7, #4]
 800cbee:	f018 ff20 	bl	8025a32 <_ZdlPvj>
 800cbf2:	687b      	ldr	r3, [r7, #4]
 800cbf4:	4618      	mov	r0, r3
 800cbf6:	3708      	adds	r7, #8
 800cbf8:	46bd      	mov	sp, r7
 800cbfa:	bd80      	pop	{r7, pc}

0800cbfc <_ZN26temperature_screenViewBaseC1Ev>:
#include <gui_generated/temperature_screen_screen/temperature_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

temperature_screenViewBase::temperature_screenViewBase() :
 800cbfc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc00:	b0ae      	sub	sp, #184	@ 0xb8
 800cc02:	af02      	add	r7, sp, #8
 800cc04:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &temperature_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &temperature_screenViewBase::buttonCallbackHandler)
 800cc06:	697b      	ldr	r3, [r7, #20]
 800cc08:	4618      	mov	r0, r3
 800cc0a:	f000 fb37 	bl	800d27c <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev>
 800cc0e:	4add      	ldr	r2, [pc, #884]	@ (800cf84 <_ZN26temperature_screenViewBaseC1Ev+0x388>)
 800cc10:	697b      	ldr	r3, [r7, #20]
 800cc12:	601a      	str	r2, [r3, #0]
 800cc14:	697b      	ldr	r3, [r7, #20]
 800cc16:	3340      	adds	r3, #64	@ 0x40
 800cc18:	4618      	mov	r0, r3
 800cc1a:	f7fd f8a7 	bl	8009d6c <_ZN8touchgfx3BoxC1Ev>
 800cc1e:	697b      	ldr	r3, [r7, #20]
 800cc20:	336c      	adds	r3, #108	@ 0x6c
 800cc22:	4618      	mov	r0, r3
 800cc24:	f7fd f8fa 	bl	8009e1c <_ZN8touchgfx8TextAreaC1Ev>
 800cc28:	697b      	ldr	r3, [r7, #20]
 800cc2a:	33b4      	adds	r3, #180	@ 0xb4
 800cc2c:	4618      	mov	r0, r3
 800cc2e:	f7fe f8bf 	bl	800adb0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800cc32:	697b      	ldr	r3, [r7, #20]
 800cc34:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800cc38:	4618      	mov	r0, r3
 800cc3a:	f7fd fc27 	bl	800a48c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800cc3e:	697b      	ldr	r3, [r7, #20]
 800cc40:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800cc44:	4618      	mov	r0, r3
 800cc46:	f005 fc99 	bl	801257c <_ZN8touchgfx14ButtonWithIconC1Ev>
 800cc4a:	697b      	ldr	r3, [r7, #20]
 800cc4c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800cc50:	4618      	mov	r0, r3
 800cc52:	f005 fc93 	bl	801257c <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &temperature_screenViewBase::flexButtonCallbackHandler),
 800cc56:	697b      	ldr	r3, [r7, #20]
 800cc58:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800cc5c:	4bca      	ldr	r3, [pc, #808]	@ (800cf88 <_ZN26temperature_screenViewBaseC1Ev+0x38c>)
 800cc5e:	627b      	str	r3, [r7, #36]	@ 0x24
 800cc60:	2300      	movs	r3, #0
 800cc62:	62bb      	str	r3, [r7, #40]	@ 0x28
 800cc64:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800cc68:	cb0c      	ldmia	r3, {r2, r3}
 800cc6a:	6979      	ldr	r1, [r7, #20]
 800cc6c:	f000 fb1c 	bl	800d2a8 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &temperature_screenViewBase::buttonCallbackHandler)
 800cc70:	697b      	ldr	r3, [r7, #20]
 800cc72:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800cc76:	4bc5      	ldr	r3, [pc, #788]	@ (800cf8c <_ZN26temperature_screenViewBaseC1Ev+0x390>)
 800cc78:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800cc7a:	2300      	movs	r3, #0
 800cc7c:	633b      	str	r3, [r7, #48]	@ 0x30
 800cc7e:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800cc82:	cb0c      	ldmia	r3, {r2, r3}
 800cc84:	6979      	ldr	r1, [r7, #20]
 800cc86:	f000 fb2f 	bl	800d2e8 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800cc8a:	697b      	ldr	r3, [r7, #20]
 800cc8c:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800cc90:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800cc94:	9300      	str	r3, [sp, #0]
 800cc96:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800cc9a:	2200      	movs	r2, #0
 800cc9c:	2100      	movs	r1, #0
 800cc9e:	f7fc fe3f 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800cca2:	697b      	ldr	r3, [r7, #20]
 800cca4:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800cca8:	2300      	movs	r3, #0
 800ccaa:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800ccae:	2300      	movs	r3, #0
 800ccb0:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800ccb4:	2300      	movs	r3, #0
 800ccb6:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800ccba:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800ccbe:	041a      	lsls	r2, r3, #16
 800ccc0:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800ccc4:	021b      	lsls	r3, r3, #8
 800ccc6:	431a      	orrs	r2, r3
 800ccc8:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800cccc:	4313      	orrs	r3, r2
 800ccce:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ccd2:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800ccd6:	4611      	mov	r1, r2
 800ccd8:	4618      	mov	r0, r3
 800ccda:	f7fc fd51 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800ccde:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800cce0:	4619      	mov	r1, r3
 800cce2:	4620      	mov	r0, r4
 800cce4:	f7fd f866 	bl	8009db4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800cce8:	697a      	ldr	r2, [r7, #20]
 800ccea:	697b      	ldr	r3, [r7, #20]
 800ccec:	3340      	adds	r3, #64	@ 0x40
 800ccee:	4619      	mov	r1, r3
 800ccf0:	4610      	mov	r0, r2
 800ccf2:	f7fc fff7 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textarea.setPosition(87, 18, 306, 48);
 800ccf6:	697b      	ldr	r3, [r7, #20]
 800ccf8:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800ccfc:	2330      	movs	r3, #48	@ 0x30
 800ccfe:	9300      	str	r3, [sp, #0]
 800cd00:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800cd04:	2212      	movs	r2, #18
 800cd06:	2157      	movs	r1, #87	@ 0x57
 800cd08:	f7fc fe0a 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    textarea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800cd0c:	697b      	ldr	r3, [r7, #20]
 800cd0e:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800cd12:	23ff      	movs	r3, #255	@ 0xff
 800cd14:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800cd18:	23ff      	movs	r3, #255	@ 0xff
 800cd1a:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800cd1e:	23ff      	movs	r3, #255	@ 0xff
 800cd20:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800cd24:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800cd28:	041a      	lsls	r2, r3, #16
 800cd2a:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800cd2e:	021b      	lsls	r3, r3, #8
 800cd30:	431a      	orrs	r2, r3
 800cd32:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800cd36:	4313      	orrs	r3, r2
 800cd38:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cd3c:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800cd40:	4611      	mov	r1, r2
 800cd42:	4618      	mov	r0, r3
 800cd44:	f7fc fd1c 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800cd48:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800cd4a:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800cd4e:	623b      	str	r3, [r7, #32]
        color = newColor;
 800cd50:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800cd54:	6a3a      	ldr	r2, [r7, #32]
 800cd56:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800cd58:	bf00      	nop
    textarea.setLinespacing(0);
 800cd5a:	697b      	ldr	r3, [r7, #20]
 800cd5c:	336c      	adds	r3, #108	@ 0x6c
 800cd5e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800cd62:	2300      	movs	r3, #0
 800cd64:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800cd68:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800cd6c:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800cd70:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800cd72:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800cd76:	681b      	ldr	r3, [r3, #0]
 800cd78:	3384      	adds	r3, #132	@ 0x84
 800cd7a:	681b      	ldr	r3, [r3, #0]
 800cd7c:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800cd80:	463a      	mov	r2, r7
 800cd82:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800cd86:	4610      	mov	r0, r2
 800cd88:	4798      	blx	r3
 800cd8a:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800cd8e:	463a      	mov	r2, r7
 800cd90:	ca07      	ldmia	r2, {r0, r1, r2}
 800cd92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cd96:	bf00      	nop
    textarea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z66R));
 800cd98:	697b      	ldr	r3, [r7, #20]
 800cd9a:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800cd9e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800cda2:	2104      	movs	r1, #4
 800cda4:	4618      	mov	r0, r3
 800cda6:	f7fd f823 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800cdaa:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800cdae:	4619      	mov	r1, r3
 800cdb0:	4620      	mov	r0, r4
 800cdb2:	f005 f957 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800cdb6:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800cdba:	4618      	mov	r0, r3
 800cdbc:	f7fb f934 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(textarea);
 800cdc0:	697a      	ldr	r2, [r7, #20]
 800cdc2:	697b      	ldr	r3, [r7, #20]
 800cdc4:	336c      	adds	r3, #108	@ 0x6c
 800cdc6:	4619      	mov	r1, r3
 800cdc8:	4610      	mov	r0, r2
 800cdca:	f7fc ff8b 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800cdce:	697b      	ldr	r3, [r7, #20]
 800cdd0:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800cdd4:	2332      	movs	r3, #50	@ 0x32
 800cdd6:	9300      	str	r3, [sp, #0]
 800cdd8:	2332      	movs	r3, #50	@ 0x32
 800cdda:	2200      	movs	r2, #0
 800cddc:	2100      	movs	r1, #0
 800cdde:	f7fe f887 	bl	800aef0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800cde2:	697b      	ldr	r3, [r7, #20]
 800cde4:	33b4      	adds	r3, #180	@ 0xb4
 800cde6:	2105      	movs	r1, #5
 800cde8:	4618      	mov	r0, r3
 800cdea:	f7fe f8a1 	bl	800af30 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800cdee:	697b      	ldr	r3, [r7, #20]
 800cdf0:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800cdf4:	2300      	movs	r3, #0
 800cdf6:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800cdfa:	2366      	movs	r3, #102	@ 0x66
 800cdfc:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800ce00:	2399      	movs	r3, #153	@ 0x99
 800ce02:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800ce06:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800ce0a:	041a      	lsls	r2, r3, #16
 800ce0c:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800ce10:	021b      	lsls	r3, r3, #8
 800ce12:	431a      	orrs	r2, r3
 800ce14:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800ce18:	4313      	orrs	r3, r2
 800ce1a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ce1e:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800ce22:	4611      	mov	r1, r2
 800ce24:	4618      	mov	r0, r3
 800ce26:	f7fc fcab 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800ce2a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800ce2c:	461d      	mov	r5, r3
 800ce2e:	2300      	movs	r3, #0
 800ce30:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800ce34:	2399      	movs	r3, #153	@ 0x99
 800ce36:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800ce3a:	23cc      	movs	r3, #204	@ 0xcc
 800ce3c:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800ce40:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800ce44:	041a      	lsls	r2, r3, #16
 800ce46:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800ce4a:	021b      	lsls	r3, r3, #8
 800ce4c:	431a      	orrs	r2, r3
 800ce4e:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800ce52:	4313      	orrs	r3, r2
 800ce54:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ce58:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800ce5c:	4611      	mov	r1, r2
 800ce5e:	4618      	mov	r0, r3
 800ce60:	f7fc fc8e 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800ce64:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800ce66:	461e      	mov	r6, r3
 800ce68:	2300      	movs	r3, #0
 800ce6a:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800ce6e:	2333      	movs	r3, #51	@ 0x33
 800ce70:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800ce74:	2366      	movs	r3, #102	@ 0x66
 800ce76:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800ce7a:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800ce7e:	041a      	lsls	r2, r3, #16
 800ce80:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800ce84:	021b      	lsls	r3, r3, #8
 800ce86:	431a      	orrs	r2, r3
 800ce88:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800ce8c:	4313      	orrs	r3, r2
 800ce8e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ce92:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800ce96:	4611      	mov	r1, r2
 800ce98:	4618      	mov	r0, r3
 800ce9a:	f7fc fc71 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800ce9e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800cea0:	4698      	mov	r8, r3
 800cea2:	2333      	movs	r3, #51	@ 0x33
 800cea4:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800cea8:	2366      	movs	r3, #102	@ 0x66
 800ceaa:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800ceae:	2399      	movs	r3, #153	@ 0x99
 800ceb0:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800ceb4:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800ceb8:	041a      	lsls	r2, r3, #16
 800ceba:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800cebe:	021b      	lsls	r3, r3, #8
 800cec0:	431a      	orrs	r2, r3
 800cec2:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800cec6:	4313      	orrs	r3, r2
 800cec8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cecc:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800ced0:	4611      	mov	r1, r2
 800ced2:	4618      	mov	r0, r3
 800ced4:	f7fc fc54 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800ced8:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800ceda:	9300      	str	r3, [sp, #0]
 800cedc:	4643      	mov	r3, r8
 800cede:	4632      	mov	r2, r6
 800cee0:	4629      	mov	r1, r5
 800cee2:	4620      	mov	r0, r4
 800cee4:	f7fe f836 	bl	800af54 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800cee8:	697b      	ldr	r3, [r7, #20]
 800ceea:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800ceee:	697b      	ldr	r3, [r7, #20]
 800cef0:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800cef4:	4619      	mov	r1, r3
 800cef6:	4610      	mov	r0, r2
 800cef8:	f7fd f940 	bl	800a17c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800cefc:	697b      	ldr	r3, [r7, #20]
 800cefe:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800cf02:	2332      	movs	r3, #50	@ 0x32
 800cf04:	9300      	str	r3, [sp, #0]
 800cf06:	2332      	movs	r3, #50	@ 0x32
 800cf08:	22f5      	movs	r2, #245	@ 0xf5
 800cf0a:	f240 1189 	movw	r1, #393	@ 0x189
 800cf0e:	f7fc fd07 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800cf12:	697a      	ldr	r2, [r7, #20]
 800cf14:	697b      	ldr	r3, [r7, #20]
 800cf16:	33b4      	adds	r3, #180	@ 0xb4
 800cf18:	4619      	mov	r1, r3
 800cf1a:	4610      	mov	r0, r2
 800cf1c:	f7fc fee2 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    tempVal.setPosition(140, 140, 200, 40);
 800cf20:	697b      	ldr	r3, [r7, #20]
 800cf22:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800cf26:	2328      	movs	r3, #40	@ 0x28
 800cf28:	9300      	str	r3, [sp, #0]
 800cf2a:	23c8      	movs	r3, #200	@ 0xc8
 800cf2c:	228c      	movs	r2, #140	@ 0x8c
 800cf2e:	218c      	movs	r1, #140	@ 0x8c
 800cf30:	f7fc fcf6 	bl	8009920 <_ZN8touchgfx8Drawable11setPositionEssss>
    tempVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800cf34:	697b      	ldr	r3, [r7, #20]
 800cf36:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800cf3a:	23ff      	movs	r3, #255	@ 0xff
 800cf3c:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800cf40:	23ff      	movs	r3, #255	@ 0xff
 800cf42:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800cf46:	23ff      	movs	r3, #255	@ 0xff
 800cf48:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800cf4c:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800cf50:	041a      	lsls	r2, r3, #16
 800cf52:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800cf56:	021b      	lsls	r3, r3, #8
 800cf58:	431a      	orrs	r2, r3
 800cf5a:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800cf5e:	4313      	orrs	r3, r2
 800cf60:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cf64:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800cf68:	4611      	mov	r1, r2
 800cf6a:	4618      	mov	r0, r3
 800cf6c:	f7fc fc08 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800cf70:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800cf72:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800cf76:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800cf78:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800cf7c:	69fa      	ldr	r2, [r7, #28]
 800cf7e:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800cf80:	bf00      	nop
 800cf82:	e005      	b.n	800cf90 <_ZN26temperature_screenViewBaseC1Ev+0x394>
 800cf84:	080285e0 	.word	0x080285e0
 800cf88:	0800d20f 	.word	0x0800d20f
 800cf8c:	0800d239 	.word	0x0800d239
    tempVal.setLinespacing(0);
 800cf90:	697b      	ldr	r3, [r7, #20]
 800cf92:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800cf96:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800cf9a:	2300      	movs	r3, #0
 800cf9c:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800cfa0:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800cfa4:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800cfa8:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800cfaa:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800cfae:	681b      	ldr	r3, [r3, #0]
 800cfb0:	3384      	adds	r3, #132	@ 0x84
 800cfb2:	681b      	ldr	r3, [r3, #0]
 800cfb4:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800cfb8:	463a      	mov	r2, r7
 800cfba:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800cfbe:	4610      	mov	r0, r2
 800cfc0:	4798      	blx	r3
 800cfc2:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800cfc6:	463a      	mov	r2, r7
 800cfc8:	ca07      	ldmia	r2, {r0, r1, r2}
 800cfca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800cfce:	bf00      	nop
    tempValBuffer[0] = 0;
 800cfd0:	697b      	ldr	r3, [r7, #20]
 800cfd2:	2200      	movs	r2, #0
 800cfd4:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    tempVal.setWildcard(tempValBuffer);
 800cfd8:	697b      	ldr	r3, [r7, #20]
 800cfda:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800cfde:	697b      	ldr	r3, [r7, #20]
 800cfe0:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800cfe4:	4619      	mov	r1, r3
 800cfe6:	4610      	mov	r0, r2
 800cfe8:	f7fd fa80 	bl	800a4ec <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    tempVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VVL5));
 800cfec:	697b      	ldr	r3, [r7, #20]
 800cfee:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800cff2:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800cff6:	2103      	movs	r1, #3
 800cff8:	4618      	mov	r0, r3
 800cffa:	f7fc fef9 	bl	8009df0 <_ZN8touchgfx9TypedTextC1Et>
 800cffe:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d002:	4619      	mov	r1, r3
 800d004:	4620      	mov	r0, r4
 800d006:	f005 f82d 	bl	8012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d00a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d00e:	4618      	mov	r0, r3
 800d010:	f7fb f80a 	bl	8008028 <_ZN8touchgfx9TypedTextD1Ev>
    add(tempVal);
 800d014:	697a      	ldr	r2, [r7, #20]
 800d016:	697b      	ldr	r3, [r7, #20]
 800d018:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800d01c:	4619      	mov	r1, r3
 800d01e:	4610      	mov	r0, r2
 800d020:	f7fc fe60 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800d024:	697b      	ldr	r3, [r7, #20]
 800d026:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d02a:	2248      	movs	r2, #72	@ 0x48
 800d02c:	216f      	movs	r1, #111	@ 0x6f
 800d02e:	4618      	mov	r0, r3
 800d030:	f7fc fcb5 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800d034:	697b      	ldr	r3, [r7, #20]
 800d036:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800d03a:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800d03e:	2100      	movs	r1, #0
 800d040:	4618      	mov	r0, r3
 800d042:	f7fc fbe3 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d046:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800d04a:	2101      	movs	r1, #1
 800d04c:	4618      	mov	r0, r3
 800d04e:	f7fc fbdd 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d052:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800d056:	2106      	movs	r1, #6
 800d058:	4618      	mov	r0, r3
 800d05a:	f7fc fbd7 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d05e:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800d062:	2104      	movs	r1, #4
 800d064:	4618      	mov	r0, r3
 800d066:	f7fc fbd1 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d06a:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800d06e:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800d072:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800d076:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800d07a:	9300      	str	r3, [sp, #0]
 800d07c:	4603      	mov	r3, r0
 800d07e:	4620      	mov	r0, r4
 800d080:	f005 f9e6 	bl	8012450 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800d084:	697b      	ldr	r3, [r7, #20]
 800d086:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d08a:	2200      	movs	r2, #0
 800d08c:	2161      	movs	r1, #97	@ 0x61
 800d08e:	4618      	mov	r0, r3
 800d090:	f7fd fa88 	bl	800a5a4 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800d094:	697b      	ldr	r3, [r7, #20]
 800d096:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800d09a:	697b      	ldr	r3, [r7, #20]
 800d09c:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d0a0:	4619      	mov	r1, r3
 800d0a2:	4610      	mov	r0, r2
 800d0a4:	f7fd fa2f 	bl	800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800d0a8:	697a      	ldr	r2, [r7, #20]
 800d0aa:	697b      	ldr	r3, [r7, #20]
 800d0ac:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d0b0:	4619      	mov	r1, r3
 800d0b2:	4610      	mov	r0, r2
 800d0b4:	f7fc fe16 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800d0b8:	697b      	ldr	r3, [r7, #20]
 800d0ba:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d0be:	22c3      	movs	r2, #195	@ 0xc3
 800d0c0:	216f      	movs	r1, #111	@ 0x6f
 800d0c2:	4618      	mov	r0, r3
 800d0c4:	f7fc fc6b 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800d0c8:	697b      	ldr	r3, [r7, #20]
 800d0ca:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800d0ce:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800d0d2:	2100      	movs	r1, #0
 800d0d4:	4618      	mov	r0, r3
 800d0d6:	f7fc fb99 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d0da:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800d0de:	2101      	movs	r1, #1
 800d0e0:	4618      	mov	r0, r3
 800d0e2:	f7fc fb93 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d0e6:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800d0ea:	2105      	movs	r1, #5
 800d0ec:	4618      	mov	r0, r3
 800d0ee:	f7fc fb8d 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d0f2:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800d0f6:	2104      	movs	r1, #4
 800d0f8:	4618      	mov	r0, r3
 800d0fa:	f7fc fb87 	bl	800980c <_ZN8touchgfx6BitmapC1Et>
 800d0fe:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800d102:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800d106:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800d10a:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800d10e:	9300      	str	r3, [sp, #0]
 800d110:	4603      	mov	r3, r0
 800d112:	4620      	mov	r0, r4
 800d114:	f005 f99c 	bl	8012450 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800d118:	697b      	ldr	r3, [r7, #20]
 800d11a:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d11e:	2200      	movs	r2, #0
 800d120:	215f      	movs	r1, #95	@ 0x5f
 800d122:	4618      	mov	r0, r3
 800d124:	f7fd fa3e 	bl	800a5a4 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800d128:	697b      	ldr	r3, [r7, #20]
 800d12a:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800d12e:	697b      	ldr	r3, [r7, #20]
 800d130:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d134:	4619      	mov	r1, r3
 800d136:	4610      	mov	r0, r2
 800d138:	f7fd f9e5 	bl	800a506 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800d13c:	697a      	ldr	r2, [r7, #20]
 800d13e:	697b      	ldr	r3, [r7, #20]
 800d140:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d144:	4619      	mov	r1, r3
 800d146:	4610      	mov	r0, r2
 800d148:	f7fc fdcc 	bl	8009ce4 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d14c:	697b      	ldr	r3, [r7, #20]
 800d14e:	4618      	mov	r0, r3
 800d150:	37b0      	adds	r7, #176	@ 0xb0
 800d152:	46bd      	mov	sp, r7
 800d154:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d158 <_ZN26temperature_screenViewBaseD1Ev>:

temperature_screenViewBase::~temperature_screenViewBase()
 800d158:	b580      	push	{r7, lr}
 800d15a:	b082      	sub	sp, #8
 800d15c:	af00      	add	r7, sp, #0
 800d15e:	6078      	str	r0, [r7, #4]
 800d160:	4a1c      	ldr	r2, [pc, #112]	@ (800d1d4 <_ZN26temperature_screenViewBaseD1Ev+0x7c>)
 800d162:	687b      	ldr	r3, [r7, #4]
 800d164:	601a      	str	r2, [r3, #0]
{

}
 800d166:	687b      	ldr	r3, [r7, #4]
 800d168:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d16c:	4618      	mov	r0, r3
 800d16e:	f000 f8db 	bl	800d328 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d172:	687b      	ldr	r3, [r7, #4]
 800d174:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800d178:	4618      	mov	r0, r3
 800d17a:	f000 f8f7 	bl	800d36c <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800d17e:	687b      	ldr	r3, [r7, #4]
 800d180:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d184:	4618      	mov	r0, r3
 800d186:	f7fe f825 	bl	800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d18a:	687b      	ldr	r3, [r7, #4]
 800d18c:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d190:	4618      	mov	r0, r3
 800d192:	f7fe f81f 	bl	800b1d4 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d196:	687b      	ldr	r3, [r7, #4]
 800d198:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800d19c:	4618      	mov	r0, r3
 800d19e:	f7fd ffd5 	bl	800b14c <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800d1a2:	687b      	ldr	r3, [r7, #4]
 800d1a4:	33b4      	adds	r3, #180	@ 0xb4
 800d1a6:	4618      	mov	r0, r3
 800d1a8:	f7fd ffa8 	bl	800b0fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800d1ac:	687b      	ldr	r3, [r7, #4]
 800d1ae:	336c      	adds	r3, #108	@ 0x6c
 800d1b0:	4618      	mov	r0, r3
 800d1b2:	f7fd f8f7 	bl	800a3a4 <_ZN8touchgfx8TextAreaD1Ev>
 800d1b6:	687b      	ldr	r3, [r7, #4]
 800d1b8:	3340      	adds	r3, #64	@ 0x40
 800d1ba:	4618      	mov	r0, r3
 800d1bc:	f7fd f828 	bl	800a210 <_ZN8touchgfx3BoxD1Ev>
 800d1c0:	687b      	ldr	r3, [r7, #4]
 800d1c2:	4618      	mov	r0, r3
 800d1c4:	f7ff fcf8 	bl	800cbb8 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>
 800d1c8:	687b      	ldr	r3, [r7, #4]
 800d1ca:	4618      	mov	r0, r3
 800d1cc:	3708      	adds	r7, #8
 800d1ce:	46bd      	mov	sp, r7
 800d1d0:	bd80      	pop	{r7, pc}
 800d1d2:	bf00      	nop
 800d1d4:	080285e0 	.word	0x080285e0

0800d1d8 <_ZN26temperature_screenViewBaseD0Ev>:
temperature_screenViewBase::~temperature_screenViewBase()
 800d1d8:	b580      	push	{r7, lr}
 800d1da:	b082      	sub	sp, #8
 800d1dc:	af00      	add	r7, sp, #0
 800d1de:	6078      	str	r0, [r7, #4]
}
 800d1e0:	6878      	ldr	r0, [r7, #4]
 800d1e2:	f7ff ffb9 	bl	800d158 <_ZN26temperature_screenViewBaseD1Ev>
 800d1e6:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800d1ea:	6878      	ldr	r0, [r7, #4]
 800d1ec:	f018 fc21 	bl	8025a32 <_ZdlPvj>
 800d1f0:	687b      	ldr	r3, [r7, #4]
 800d1f2:	4618      	mov	r0, r3
 800d1f4:	3708      	adds	r7, #8
 800d1f6:	46bd      	mov	sp, r7
 800d1f8:	bd80      	pop	{r7, pc}

0800d1fa <_ZN26temperature_screenViewBase11setupScreenEv>:

void temperature_screenViewBase::setupScreen()
{
 800d1fa:	b480      	push	{r7}
 800d1fc:	b083      	sub	sp, #12
 800d1fe:	af00      	add	r7, sp, #0
 800d200:	6078      	str	r0, [r7, #4]

}
 800d202:	bf00      	nop
 800d204:	370c      	adds	r7, #12
 800d206:	46bd      	mov	sp, r7
 800d208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d20c:	4770      	bx	lr

0800d20e <_ZN26temperature_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void temperature_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800d20e:	b580      	push	{r7, lr}
 800d210:	b082      	sub	sp, #8
 800d212:	af00      	add	r7, sp, #0
 800d214:	6078      	str	r0, [r7, #4]
 800d216:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800d218:	687b      	ldr	r3, [r7, #4]
 800d21a:	33b4      	adds	r3, #180	@ 0xb4
 800d21c:	683a      	ldr	r2, [r7, #0]
 800d21e:	429a      	cmp	r2, r3
 800d220:	d106      	bne.n	800d230 <_ZN26temperature_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800d222:	6878      	ldr	r0, [r7, #4]
 800d224:	f7ff fcbc 	bl	800cba0 <_ZN26temperature_screenViewBase11applicationEv>
 800d228:	4603      	mov	r3, r0
 800d22a:	4618      	mov	r0, r3
 800d22c:	f7fb fc22 	bl	8008a74 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800d230:	bf00      	nop
 800d232:	3708      	adds	r7, #8
 800d234:	46bd      	mov	sp, r7
 800d236:	bd80      	pop	{r7, pc}

0800d238 <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void temperature_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800d238:	b580      	push	{r7, lr}
 800d23a:	b082      	sub	sp, #8
 800d23c:	af00      	add	r7, sp, #0
 800d23e:	6078      	str	r0, [r7, #4]
 800d240:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800d242:	687b      	ldr	r3, [r7, #4]
 800d244:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d248:	683a      	ldr	r2, [r7, #0]
 800d24a:	429a      	cmp	r2, r3
 800d24c:	d105      	bne.n	800d25a <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800d24e:	687b      	ldr	r3, [r7, #4]
 800d250:	681b      	ldr	r3, [r3, #0]
 800d252:	332c      	adds	r3, #44	@ 0x2c
 800d254:	681b      	ldr	r3, [r3, #0]
 800d256:	6878      	ldr	r0, [r7, #4]
 800d258:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800d25a:	687b      	ldr	r3, [r7, #4]
 800d25c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d260:	683a      	ldr	r2, [r7, #0]
 800d262:	429a      	cmp	r2, r3
 800d264:	d105      	bne.n	800d272 <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800d266:	687b      	ldr	r3, [r7, #4]
 800d268:	681b      	ldr	r3, [r3, #0]
 800d26a:	3330      	adds	r3, #48	@ 0x30
 800d26c:	681b      	ldr	r3, [r3, #0]
 800d26e:	6878      	ldr	r0, [r7, #4]
 800d270:	4798      	blx	r3
    }
}
 800d272:	bf00      	nop
 800d274:	3708      	adds	r7, #8
 800d276:	46bd      	mov	sp, r7
 800d278:	bd80      	pop	{r7, pc}
	...

0800d27c <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev>:
    View()
 800d27c:	b580      	push	{r7, lr}
 800d27e:	b082      	sub	sp, #8
 800d280:	af00      	add	r7, sp, #0
 800d282:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d284:	687b      	ldr	r3, [r7, #4]
 800d286:	4618      	mov	r0, r3
 800d288:	f008 f990 	bl	80155ac <_ZN8touchgfx6ScreenC1Ev>
 800d28c:	4a05      	ldr	r2, [pc, #20]	@ (800d2a4 <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev+0x28>)
 800d28e:	687b      	ldr	r3, [r7, #4]
 800d290:	601a      	str	r2, [r3, #0]
 800d292:	687b      	ldr	r3, [r7, #4]
 800d294:	2200      	movs	r2, #0
 800d296:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800d298:	687b      	ldr	r3, [r7, #4]
 800d29a:	4618      	mov	r0, r3
 800d29c:	3708      	adds	r7, #8
 800d29e:	46bd      	mov	sp, r7
 800d2a0:	bd80      	pop	{r7, pc}
 800d2a2:	bf00      	nop
 800d2a4:	0802864c 	.word	0x0802864c

0800d2a8 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d2a8:	b580      	push	{r7, lr}
 800d2aa:	b084      	sub	sp, #16
 800d2ac:	af00      	add	r7, sp, #0
 800d2ae:	60f8      	str	r0, [r7, #12]
 800d2b0:	60b9      	str	r1, [r7, #8]
 800d2b2:	4639      	mov	r1, r7
 800d2b4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d2b8:	68fb      	ldr	r3, [r7, #12]
 800d2ba:	4618      	mov	r0, r3
 800d2bc:	f7fd fdb8 	bl	800ae30 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800d2c0:	4a08      	ldr	r2, [pc, #32]	@ (800d2e4 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d2c2:	68fb      	ldr	r3, [r7, #12]
 800d2c4:	601a      	str	r2, [r3, #0]
 800d2c6:	68fb      	ldr	r3, [r7, #12]
 800d2c8:	68ba      	ldr	r2, [r7, #8]
 800d2ca:	605a      	str	r2, [r3, #4]
 800d2cc:	68fb      	ldr	r3, [r7, #12]
 800d2ce:	3308      	adds	r3, #8
 800d2d0:	463a      	mov	r2, r7
 800d2d2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d2d6:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d2da:	68fb      	ldr	r3, [r7, #12]
 800d2dc:	4618      	mov	r0, r3
 800d2de:	3710      	adds	r7, #16
 800d2e0:	46bd      	mov	sp, r7
 800d2e2:	bd80      	pop	{r7, pc}
 800d2e4:	08028634 	.word	0x08028634

0800d2e8 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d2e8:	b580      	push	{r7, lr}
 800d2ea:	b084      	sub	sp, #16
 800d2ec:	af00      	add	r7, sp, #0
 800d2ee:	60f8      	str	r0, [r7, #12]
 800d2f0:	60b9      	str	r1, [r7, #8]
 800d2f2:	4639      	mov	r1, r7
 800d2f4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d2f8:	68fb      	ldr	r3, [r7, #12]
 800d2fa:	4618      	mov	r0, r3
 800d2fc:	f7fd fdc8 	bl	800ae90 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800d300:	4a08      	ldr	r2, [pc, #32]	@ (800d324 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d302:	68fb      	ldr	r3, [r7, #12]
 800d304:	601a      	str	r2, [r3, #0]
 800d306:	68fb      	ldr	r3, [r7, #12]
 800d308:	68ba      	ldr	r2, [r7, #8]
 800d30a:	605a      	str	r2, [r3, #4]
 800d30c:	68fb      	ldr	r3, [r7, #12]
 800d30e:	3308      	adds	r3, #8
 800d310:	463a      	mov	r2, r7
 800d312:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d316:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d31a:	68fb      	ldr	r3, [r7, #12]
 800d31c:	4618      	mov	r0, r3
 800d31e:	3710      	adds	r7, #16
 800d320:	46bd      	mov	sp, r7
 800d322:	bd80      	pop	{r7, pc}
 800d324:	0802861c 	.word	0x0802861c

0800d328 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800d328:	b580      	push	{r7, lr}
 800d32a:	b082      	sub	sp, #8
 800d32c:	af00      	add	r7, sp, #0
 800d32e:	6078      	str	r0, [r7, #4]
 800d330:	4a05      	ldr	r2, [pc, #20]	@ (800d348 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800d332:	687b      	ldr	r3, [r7, #4]
 800d334:	601a      	str	r2, [r3, #0]
 800d336:	687b      	ldr	r3, [r7, #4]
 800d338:	4618      	mov	r0, r3
 800d33a:	f7fd fe49 	bl	800afd0 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	4618      	mov	r0, r3
 800d342:	3708      	adds	r7, #8
 800d344:	46bd      	mov	sp, r7
 800d346:	bd80      	pop	{r7, pc}
 800d348:	0802861c 	.word	0x0802861c

0800d34c <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800d34c:	b580      	push	{r7, lr}
 800d34e:	b082      	sub	sp, #8
 800d350:	af00      	add	r7, sp, #0
 800d352:	6078      	str	r0, [r7, #4]
 800d354:	6878      	ldr	r0, [r7, #4]
 800d356:	f7ff ffe7 	bl	800d328 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d35a:	2110      	movs	r1, #16
 800d35c:	6878      	ldr	r0, [r7, #4]
 800d35e:	f018 fb68 	bl	8025a32 <_ZdlPvj>
 800d362:	687b      	ldr	r3, [r7, #4]
 800d364:	4618      	mov	r0, r3
 800d366:	3708      	adds	r7, #8
 800d368:	46bd      	mov	sp, r7
 800d36a:	bd80      	pop	{r7, pc}

0800d36c <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800d36c:	b580      	push	{r7, lr}
 800d36e:	b082      	sub	sp, #8
 800d370:	af00      	add	r7, sp, #0
 800d372:	6078      	str	r0, [r7, #4]
 800d374:	4a05      	ldr	r2, [pc, #20]	@ (800d38c <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800d376:	687b      	ldr	r3, [r7, #4]
 800d378:	601a      	str	r2, [r3, #0]
 800d37a:	687b      	ldr	r3, [r7, #4]
 800d37c:	4618      	mov	r0, r3
 800d37e:	f7fd fe07 	bl	800af90 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800d382:	687b      	ldr	r3, [r7, #4]
 800d384:	4618      	mov	r0, r3
 800d386:	3708      	adds	r7, #8
 800d388:	46bd      	mov	sp, r7
 800d38a:	bd80      	pop	{r7, pc}
 800d38c:	08028634 	.word	0x08028634

0800d390 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800d390:	b580      	push	{r7, lr}
 800d392:	b082      	sub	sp, #8
 800d394:	af00      	add	r7, sp, #0
 800d396:	6078      	str	r0, [r7, #4]
 800d398:	6878      	ldr	r0, [r7, #4]
 800d39a:	f7ff ffe7 	bl	800d36c <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800d39e:	2110      	movs	r1, #16
 800d3a0:	6878      	ldr	r0, [r7, #4]
 800d3a2:	f018 fb46 	bl	8025a32 <_ZdlPvj>
 800d3a6:	687b      	ldr	r3, [r7, #4]
 800d3a8:	4618      	mov	r0, r3
 800d3aa:	3708      	adds	r7, #8
 800d3ac:	46bd      	mov	sp, r7
 800d3ae:	bd80      	pop	{r7, pc}

0800d3b0 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d3b0:	b580      	push	{r7, lr}
 800d3b2:	b082      	sub	sp, #8
 800d3b4:	af00      	add	r7, sp, #0
 800d3b6:	6078      	str	r0, [r7, #4]
 800d3b8:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d3ba:	687b      	ldr	r3, [r7, #4]
 800d3bc:	685b      	ldr	r3, [r3, #4]
 800d3be:	687a      	ldr	r2, [r7, #4]
 800d3c0:	68d2      	ldr	r2, [r2, #12]
 800d3c2:	1052      	asrs	r2, r2, #1
 800d3c4:	1898      	adds	r0, r3, r2
 800d3c6:	687b      	ldr	r3, [r7, #4]
 800d3c8:	68db      	ldr	r3, [r3, #12]
 800d3ca:	f003 0301 	and.w	r3, r3, #1
 800d3ce:	2b00      	cmp	r3, #0
 800d3d0:	d102      	bne.n	800d3d8 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800d3d2:	687b      	ldr	r3, [r7, #4]
 800d3d4:	689b      	ldr	r3, [r3, #8]
 800d3d6:	e00a      	b.n	800d3ee <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800d3d8:	687b      	ldr	r3, [r7, #4]
 800d3da:	685b      	ldr	r3, [r3, #4]
 800d3dc:	687a      	ldr	r2, [r7, #4]
 800d3de:	68d2      	ldr	r2, [r2, #12]
 800d3e0:	1052      	asrs	r2, r2, #1
 800d3e2:	4413      	add	r3, r2
 800d3e4:	681b      	ldr	r3, [r3, #0]
 800d3e6:	687a      	ldr	r2, [r7, #4]
 800d3e8:	6892      	ldr	r2, [r2, #8]
 800d3ea:	4413      	add	r3, r2
 800d3ec:	681b      	ldr	r3, [r3, #0]
 800d3ee:	6839      	ldr	r1, [r7, #0]
 800d3f0:	4798      	blx	r3
    }
 800d3f2:	bf00      	nop
 800d3f4:	3708      	adds	r7, #8
 800d3f6:	46bd      	mov	sp, r7
 800d3f8:	bd80      	pop	{r7, pc}

0800d3fa <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800d3fa:	b480      	push	{r7}
 800d3fc:	b083      	sub	sp, #12
 800d3fe:	af00      	add	r7, sp, #0
 800d400:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d402:	687b      	ldr	r3, [r7, #4]
 800d404:	685b      	ldr	r3, [r3, #4]
 800d406:	2b00      	cmp	r3, #0
 800d408:	d010      	beq.n	800d42c <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d40a:	687b      	ldr	r3, [r7, #4]
 800d40c:	689b      	ldr	r3, [r3, #8]
 800d40e:	2b00      	cmp	r3, #0
 800d410:	d107      	bne.n	800d422 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d412:	687b      	ldr	r3, [r7, #4]
 800d414:	68db      	ldr	r3, [r3, #12]
 800d416:	f003 0301 	and.w	r3, r3, #1
 800d41a:	2b00      	cmp	r3, #0
 800d41c:	d101      	bne.n	800d422 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d41e:	2301      	movs	r3, #1
 800d420:	e000      	b.n	800d424 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800d422:	2300      	movs	r3, #0
 800d424:	2b01      	cmp	r3, #1
 800d426:	d001      	beq.n	800d42c <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d428:	2301      	movs	r3, #1
 800d42a:	e000      	b.n	800d42e <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800d42c:	2300      	movs	r3, #0
    }
 800d42e:	4618      	mov	r0, r3
 800d430:	370c      	adds	r7, #12
 800d432:	46bd      	mov	sp, r7
 800d434:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d438:	4770      	bx	lr

0800d43a <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d43a:	b580      	push	{r7, lr}
 800d43c:	b082      	sub	sp, #8
 800d43e:	af00      	add	r7, sp, #0
 800d440:	6078      	str	r0, [r7, #4]
 800d442:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d444:	687b      	ldr	r3, [r7, #4]
 800d446:	685b      	ldr	r3, [r3, #4]
 800d448:	687a      	ldr	r2, [r7, #4]
 800d44a:	68d2      	ldr	r2, [r2, #12]
 800d44c:	1052      	asrs	r2, r2, #1
 800d44e:	1898      	adds	r0, r3, r2
 800d450:	687b      	ldr	r3, [r7, #4]
 800d452:	68db      	ldr	r3, [r3, #12]
 800d454:	f003 0301 	and.w	r3, r3, #1
 800d458:	2b00      	cmp	r3, #0
 800d45a:	d102      	bne.n	800d462 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800d45c:	687b      	ldr	r3, [r7, #4]
 800d45e:	689b      	ldr	r3, [r3, #8]
 800d460:	e00a      	b.n	800d478 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800d462:	687b      	ldr	r3, [r7, #4]
 800d464:	685b      	ldr	r3, [r3, #4]
 800d466:	687a      	ldr	r2, [r7, #4]
 800d468:	68d2      	ldr	r2, [r2, #12]
 800d46a:	1052      	asrs	r2, r2, #1
 800d46c:	4413      	add	r3, r2
 800d46e:	681b      	ldr	r3, [r3, #0]
 800d470:	687a      	ldr	r2, [r7, #4]
 800d472:	6892      	ldr	r2, [r2, #8]
 800d474:	4413      	add	r3, r2
 800d476:	681b      	ldr	r3, [r3, #0]
 800d478:	6839      	ldr	r1, [r7, #0]
 800d47a:	4798      	blx	r3
    }
 800d47c:	bf00      	nop
 800d47e:	3708      	adds	r7, #8
 800d480:	46bd      	mov	sp, r7
 800d482:	bd80      	pop	{r7, pc}

0800d484 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800d484:	b480      	push	{r7}
 800d486:	b083      	sub	sp, #12
 800d488:	af00      	add	r7, sp, #0
 800d48a:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d48c:	687b      	ldr	r3, [r7, #4]
 800d48e:	685b      	ldr	r3, [r3, #4]
 800d490:	2b00      	cmp	r3, #0
 800d492:	d010      	beq.n	800d4b6 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d494:	687b      	ldr	r3, [r7, #4]
 800d496:	689b      	ldr	r3, [r3, #8]
 800d498:	2b00      	cmp	r3, #0
 800d49a:	d107      	bne.n	800d4ac <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d49c:	687b      	ldr	r3, [r7, #4]
 800d49e:	68db      	ldr	r3, [r3, #12]
 800d4a0:	f003 0301 	and.w	r3, r3, #1
 800d4a4:	2b00      	cmp	r3, #0
 800d4a6:	d101      	bne.n	800d4ac <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d4a8:	2301      	movs	r3, #1
 800d4aa:	e000      	b.n	800d4ae <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800d4ac:	2300      	movs	r3, #0
 800d4ae:	2b01      	cmp	r3, #1
 800d4b0:	d001      	beq.n	800d4b6 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d4b2:	2301      	movs	r3, #1
 800d4b4:	e000      	b.n	800d4b8 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800d4b6:	2300      	movs	r3, #0
    }
 800d4b8:	4618      	mov	r0, r3
 800d4ba:	370c      	adds	r7, #12
 800d4bc:	46bd      	mov	sp, r7
 800d4be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4c2:	4770      	bx	lr

0800d4c4 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800d4c4:	b480      	push	{r7}
 800d4c6:	af00      	add	r7, sp, #0
    return bitmap_database;
 800d4c8:	4b02      	ldr	r3, [pc, #8]	@ (800d4d4 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800d4ca:	4618      	mov	r0, r3
 800d4cc:	46bd      	mov	sp, r7
 800d4ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4d2:	4770      	bx	lr
 800d4d4:	08028678 	.word	0x08028678

0800d4d8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800d4d8:	b480      	push	{r7}
 800d4da:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800d4dc:	2307      	movs	r3, #7
}
 800d4de:	4618      	mov	r0, r3
 800d4e0:	46bd      	mov	sp, r7
 800d4e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4e6:	4770      	bx	lr

0800d4e8 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800d4e8:	b480      	push	{r7}
 800d4ea:	b085      	sub	sp, #20
 800d4ec:	af00      	add	r7, sp, #0
 800d4ee:	60f8      	str	r0, [r7, #12]
 800d4f0:	460b      	mov	r3, r1
 800d4f2:	607a      	str	r2, [r7, #4]
 800d4f4:	817b      	strh	r3, [r7, #10]
        return 0;
 800d4f6:	2300      	movs	r3, #0
    }
 800d4f8:	4618      	mov	r0, r3
 800d4fa:	3714      	adds	r7, #20
 800d4fc:	46bd      	mov	sp, r7
 800d4fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d502:	4770      	bx	lr

0800d504 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800d504:	b480      	push	{r7}
 800d506:	b083      	sub	sp, #12
 800d508:	af00      	add	r7, sp, #0
 800d50a:	6078      	str	r0, [r7, #4]
        return 0;
 800d50c:	2300      	movs	r3, #0
    }
 800d50e:	4618      	mov	r0, r3
 800d510:	370c      	adds	r7, #12
 800d512:	46bd      	mov	sp, r7
 800d514:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d518:	4770      	bx	lr

0800d51a <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800d51a:	b480      	push	{r7}
 800d51c:	b083      	sub	sp, #12
 800d51e:	af00      	add	r7, sp, #0
 800d520:	6078      	str	r0, [r7, #4]
        return 0;
 800d522:	2300      	movs	r3, #0
    }
 800d524:	4618      	mov	r0, r3
 800d526:	370c      	adds	r7, #12
 800d528:	46bd      	mov	sp, r7
 800d52a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d52e:	4770      	bx	lr

0800d530 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800d530:	b480      	push	{r7}
 800d532:	b085      	sub	sp, #20
 800d534:	af00      	add	r7, sp, #0
 800d536:	60f8      	str	r0, [r7, #12]
 800d538:	60b9      	str	r1, [r7, #8]
 800d53a:	4613      	mov	r3, r2
 800d53c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800d53e:	4a07      	ldr	r2, [pc, #28]	@ (800d55c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800d540:	68fb      	ldr	r3, [r7, #12]
 800d542:	6013      	str	r3, [r2, #0]
        fonts = f;
 800d544:	4a06      	ldr	r2, [pc, #24]	@ (800d560 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800d546:	68bb      	ldr	r3, [r7, #8]
 800d548:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800d54a:	4a06      	ldr	r2, [pc, #24]	@ (800d564 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800d54c:	88fb      	ldrh	r3, [r7, #6]
 800d54e:	8013      	strh	r3, [r2, #0]
    }
 800d550:	bf00      	nop
 800d552:	3714      	adds	r7, #20
 800d554:	46bd      	mov	sp, r7
 800d556:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d55a:	4770      	bx	lr
 800d55c:	20002fa4 	.word	0x20002fa4
 800d560:	20002fac 	.word	0x20002fac
 800d564:	20002fa8 	.word	0x20002fa8

0800d568 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d568:	b40e      	push	{r1, r2, r3}
 800d56a:	b580      	push	{r7, lr}
 800d56c:	b085      	sub	sp, #20
 800d56e:	af00      	add	r7, sp, #0
 800d570:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800d572:	f107 0320 	add.w	r3, r7, #32
 800d576:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800d578:	68bb      	ldr	r3, [r7, #8]
 800d57a:	69fa      	ldr	r2, [r7, #28]
 800d57c:	2100      	movs	r1, #0
 800d57e:	6878      	ldr	r0, [r7, #4]
 800d580:	f007 fc4a 	bl	8014e18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d584:	4603      	mov	r3, r0
 800d586:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d588:	89fb      	ldrh	r3, [r7, #14]
}
 800d58a:	4618      	mov	r0, r3
 800d58c:	3714      	adds	r7, #20
 800d58e:	46bd      	mov	sp, r7
 800d590:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d594:	b003      	add	sp, #12
 800d596:	4770      	bx	lr

0800d598 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d598:	b40c      	push	{r2, r3}
 800d59a:	b580      	push	{r7, lr}
 800d59c:	b084      	sub	sp, #16
 800d59e:	af00      	add	r7, sp, #0
 800d5a0:	6078      	str	r0, [r7, #4]
 800d5a2:	460b      	mov	r3, r1
 800d5a4:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800d5a6:	f107 031c 	add.w	r3, r7, #28
 800d5aa:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800d5ac:	78f9      	ldrb	r1, [r7, #3]
 800d5ae:	68bb      	ldr	r3, [r7, #8]
 800d5b0:	69ba      	ldr	r2, [r7, #24]
 800d5b2:	6878      	ldr	r0, [r7, #4]
 800d5b4:	f007 fc30 	bl	8014e18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d5b8:	4603      	mov	r3, r0
 800d5ba:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d5bc:	89fb      	ldrh	r3, [r7, #14]
}
 800d5be:	4618      	mov	r0, r3
 800d5c0:	3710      	adds	r7, #16
 800d5c2:	46bd      	mov	sp, r7
 800d5c4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d5c8:	b002      	add	sp, #8
 800d5ca:	4770      	bx	lr

0800d5cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800d5cc:	b580      	push	{r7, lr}
 800d5ce:	b08a      	sub	sp, #40	@ 0x28
 800d5d0:	af00      	add	r7, sp, #0
 800d5d2:	6078      	str	r0, [r7, #4]
 800d5d4:	460b      	mov	r3, r1
 800d5d6:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800d5d8:	687b      	ldr	r3, [r7, #4]
 800d5da:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d5dc:	2b00      	cmp	r3, #0
 800d5de:	d016      	beq.n	800d60e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d5e0:	687b      	ldr	r3, [r7, #4]
 800d5e2:	3322      	adds	r3, #34	@ 0x22
 800d5e4:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800d5e6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d5e8:	8adb      	ldrh	r3, [r3, #22]
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	d105      	bne.n	800d5fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800d5ee:	4b43      	ldr	r3, [pc, #268]	@ (800d6fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d5f0:	4a43      	ldr	r2, [pc, #268]	@ (800d700 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d5f2:	21c5      	movs	r1, #197	@ 0xc5
 800d5f4:	4843      	ldr	r0, [pc, #268]	@ (800d704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d5f6:	f018 facb 	bl	8025b90 <__assert_func>
            return buffer[pos];
 800d5fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d5fc:	8a9b      	ldrh	r3, [r3, #20]
 800d5fe:	461a      	mov	r2, r3
 800d600:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d602:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800d606:	2b00      	cmp	r3, #0
 800d608:	d001      	beq.n	800d60e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d60a:	2301      	movs	r3, #1
 800d60c:	e000      	b.n	800d610 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800d60e:	2300      	movs	r3, #0
 800d610:	2b00      	cmp	r3, #0
 800d612:	d06a      	beq.n	800d6ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800d614:	6878      	ldr	r0, [r7, #4]
 800d616:	f008 fece 	bl	80163b6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800d61a:	687b      	ldr	r3, [r7, #4]
 800d61c:	3322      	adds	r3, #34	@ 0x22
 800d61e:	623b      	str	r3, [r7, #32]
 800d620:	2301      	movs	r3, #1
 800d622:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800d624:	6a3b      	ldr	r3, [r7, #32]
 800d626:	8adb      	ldrh	r3, [r3, #22]
 800d628:	8bfa      	ldrh	r2, [r7, #30]
 800d62a:	429a      	cmp	r2, r3
 800d62c:	d305      	bcc.n	800d63a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800d62e:	4b36      	ldr	r3, [pc, #216]	@ (800d708 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800d630:	4a36      	ldr	r2, [pc, #216]	@ (800d70c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800d632:	21cb      	movs	r1, #203	@ 0xcb
 800d634:	4833      	ldr	r0, [pc, #204]	@ (800d704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d636:	f018 faab 	bl	8025b90 <__assert_func>
            const uint16_t index = pos + offset;
 800d63a:	6a3b      	ldr	r3, [r7, #32]
 800d63c:	8a9a      	ldrh	r2, [r3, #20]
 800d63e:	8bfb      	ldrh	r3, [r7, #30]
 800d640:	4413      	add	r3, r2
 800d642:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800d644:	8bbb      	ldrh	r3, [r7, #28]
 800d646:	2b09      	cmp	r3, #9
 800d648:	d801      	bhi.n	800d64e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800d64a:	8bbb      	ldrh	r3, [r7, #28]
 800d64c:	e001      	b.n	800d652 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800d64e:	8bbb      	ldrh	r3, [r7, #28]
 800d650:	3b0a      	subs	r3, #10
 800d652:	6a3a      	ldr	r2, [r7, #32]
 800d654:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d658:	f640 123f 	movw	r2, #2367	@ 0x93f
 800d65c:	4293      	cmp	r3, r2
 800d65e:	bf0c      	ite	eq
 800d660:	2301      	moveq	r3, #1
 800d662:	2300      	movne	r3, #0
 800d664:	b2db      	uxtb	r3, r3
 800d666:	2b00      	cmp	r3, #0
 800d668:	d03f      	beq.n	800d6ea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800d66a:	687b      	ldr	r3, [r7, #4]
 800d66c:	3322      	adds	r3, #34	@ 0x22
 800d66e:	687a      	ldr	r2, [r7, #4]
 800d670:	3222      	adds	r2, #34	@ 0x22
 800d672:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800d674:	68ba      	ldr	r2, [r7, #8]
 800d676:	8ad2      	ldrh	r2, [r2, #22]
 800d678:	2a00      	cmp	r2, #0
 800d67a:	d105      	bne.n	800d688 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800d67c:	4b1f      	ldr	r3, [pc, #124]	@ (800d6fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d67e:	4a20      	ldr	r2, [pc, #128]	@ (800d700 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d680:	21c5      	movs	r1, #197	@ 0xc5
 800d682:	4820      	ldr	r0, [pc, #128]	@ (800d704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d684:	f018 fa84 	bl	8025b90 <__assert_func>
            return buffer[pos];
 800d688:	68ba      	ldr	r2, [r7, #8]
 800d68a:	8a92      	ldrh	r2, [r2, #20]
 800d68c:	4611      	mov	r1, r2
 800d68e:	68ba      	ldr	r2, [r7, #8]
 800d690:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800d694:	613b      	str	r3, [r7, #16]
 800d696:	4613      	mov	r3, r2
 800d698:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800d69a:	693b      	ldr	r3, [r7, #16]
 800d69c:	8adb      	ldrh	r3, [r3, #22]
 800d69e:	2b01      	cmp	r3, #1
 800d6a0:	d806      	bhi.n	800d6b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800d6a2:	4b1b      	ldr	r3, [pc, #108]	@ (800d710 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800d6a4:	4a1b      	ldr	r2, [pc, #108]	@ (800d714 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800d6a6:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800d6aa:	4816      	ldr	r0, [pc, #88]	@ (800d704 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d6ac:	f018 fa70 	bl	8025b90 <__assert_func>
            const uint16_t index = pos + 1;
 800d6b0:	693b      	ldr	r3, [r7, #16]
 800d6b2:	8a9b      	ldrh	r3, [r3, #20]
 800d6b4:	3301      	adds	r3, #1
 800d6b6:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800d6b8:	89bb      	ldrh	r3, [r7, #12]
 800d6ba:	2b09      	cmp	r3, #9
 800d6bc:	d801      	bhi.n	800d6c2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800d6be:	89bb      	ldrh	r3, [r7, #12]
 800d6c0:	e000      	b.n	800d6c4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800d6c2:	2300      	movs	r3, #0
 800d6c4:	693a      	ldr	r2, [r7, #16]
 800d6c6:	89f9      	ldrh	r1, [r7, #14]
 800d6c8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800d6cc:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800d6ce:	687b      	ldr	r3, [r7, #4]
 800d6d0:	3322      	adds	r3, #34	@ 0x22
 800d6d2:	61bb      	str	r3, [r7, #24]
 800d6d4:	f640 133f 	movw	r3, #2367	@ 0x93f
 800d6d8:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800d6da:	69bb      	ldr	r3, [r7, #24]
 800d6dc:	8a9b      	ldrh	r3, [r3, #20]
 800d6de:	4619      	mov	r1, r3
 800d6e0:	69bb      	ldr	r3, [r7, #24]
 800d6e2:	8afa      	ldrh	r2, [r7, #22]
 800d6e4:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800d6e8:	bf00      	nop
        }
    }
    return getNextChar();
 800d6ea:	6878      	ldr	r0, [r7, #4]
 800d6ec:	f008 fd66 	bl	80161bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d6f0:	4603      	mov	r3, r0
}
 800d6f2:	4618      	mov	r0, r3
 800d6f4:	3728      	adds	r7, #40	@ 0x28
 800d6f6:	46bd      	mov	sp, r7
 800d6f8:	bd80      	pop	{r7, pc}
 800d6fa:	bf00      	nop
 800d6fc:	08027284 	.word	0x08027284
 800d700:	08027290 	.word	0x08027290
 800d704:	0802733c 	.word	0x0802733c
 800d708:	08027384 	.word	0x08027384
 800d70c:	08027394 	.word	0x08027394
 800d710:	08027468 	.word	0x08027468
 800d714:	08027474 	.word	0x08027474

0800d718 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800d718:	b580      	push	{r7, lr}
 800d71a:	b082      	sub	sp, #8
 800d71c:	af00      	add	r7, sp, #0
 800d71e:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800d720:	6878      	ldr	r0, [r7, #4]
 800d722:	f008 fd12 	bl	801614a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800d726:	bf00      	nop
 800d728:	3708      	adds	r7, #8
 800d72a:	46bd      	mov	sp, r7
 800d72c:	bd80      	pop	{r7, pc}

0800d72e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800d72e:	b580      	push	{r7, lr}
 800d730:	b088      	sub	sp, #32
 800d732:	af02      	add	r7, sp, #8
 800d734:	60f8      	str	r0, [r7, #12]
 800d736:	1d38      	adds	r0, r7, #4
 800d738:	e880 0006 	stmia.w	r0, {r1, r2}
 800d73c:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800d73e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800d742:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800d744:	1d39      	adds	r1, r7, #4
 800d746:	697b      	ldr	r3, [r7, #20]
 800d748:	9301      	str	r3, [sp, #4]
 800d74a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d74c:	9300      	str	r3, [sp, #0]
 800d74e:	6a3b      	ldr	r3, [r7, #32]
 800d750:	683a      	ldr	r2, [r7, #0]
 800d752:	68f8      	ldr	r0, [r7, #12]
 800d754:	f005 ffbc 	bl	80136d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800d758:	bf00      	nop
 800d75a:	3718      	adds	r7, #24
 800d75c:	46bd      	mov	sp, r7
 800d75e:	bd80      	pop	{r7, pc}

0800d760 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800d760:	b590      	push	{r4, r7, lr}
 800d762:	b085      	sub	sp, #20
 800d764:	af00      	add	r7, sp, #0
 800d766:	4603      	mov	r3, r0
 800d768:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800d76a:	2300      	movs	r3, #0
 800d76c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800d76e:	88fb      	ldrh	r3, [r7, #6]
 800d770:	2b00      	cmp	r3, #0
 800d772:	d127      	bne.n	800d7c4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800d774:	88fb      	ldrh	r3, [r7, #6]
 800d776:	4a1e      	ldr	r2, [pc, #120]	@ (800d7f0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d778:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d77c:	2b00      	cmp	r3, #0
 800d77e:	d016      	beq.n	800d7ae <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800d780:	88fb      	ldrh	r3, [r7, #6]
 800d782:	4a1b      	ldr	r2, [pc, #108]	@ (800d7f0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800d784:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d788:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800d78a:	68bb      	ldr	r3, [r7, #8]
 800d78c:	681b      	ldr	r3, [r3, #0]
 800d78e:	68ba      	ldr	r2, [r7, #8]
 800d790:	4413      	add	r3, r2
 800d792:	4a18      	ldr	r2, [pc, #96]	@ (800d7f4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d794:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800d796:	68bb      	ldr	r3, [r7, #8]
 800d798:	685b      	ldr	r3, [r3, #4]
 800d79a:	68ba      	ldr	r2, [r7, #8]
 800d79c:	4413      	add	r3, r2
 800d79e:	4a16      	ldr	r2, [pc, #88]	@ (800d7f8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d7a0:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800d7a2:	68bb      	ldr	r3, [r7, #8]
 800d7a4:	689b      	ldr	r3, [r3, #8]
 800d7a6:	68ba      	ldr	r2, [r7, #8]
 800d7a8:	4413      	add	r3, r2
 800d7aa:	60fb      	str	r3, [r7, #12]
 800d7ac:	e00a      	b.n	800d7c4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800d7ae:	4b11      	ldr	r3, [pc, #68]	@ (800d7f4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800d7b0:	4a12      	ldr	r2, [pc, #72]	@ (800d7fc <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800d7b2:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800d7b4:	4a12      	ldr	r2, [pc, #72]	@ (800d800 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800d7b6:	4b10      	ldr	r3, [pc, #64]	@ (800d7f8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800d7b8:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800d7ba:	88fb      	ldrh	r3, [r7, #6]
 800d7bc:	4a11      	ldr	r2, [pc, #68]	@ (800d804 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800d7be:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800d7c2:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800d7c4:	68fb      	ldr	r3, [r7, #12]
 800d7c6:	2b00      	cmp	r3, #0
 800d7c8:	d00d      	beq.n	800d7e6 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800d7ca:	4a0f      	ldr	r2, [pc, #60]	@ (800d808 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800d7cc:	88fb      	ldrh	r3, [r7, #6]
 800d7ce:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800d7d0:	f000 f83e 	bl	800d850 <_ZN17TypedTextDatabase8getFontsEv>
 800d7d4:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800d7d6:	f000 f833 	bl	800d840 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800d7da:	4603      	mov	r3, r0
 800d7dc:	461a      	mov	r2, r3
 800d7de:	4621      	mov	r1, r4
 800d7e0:	68f8      	ldr	r0, [r7, #12]
 800d7e2:	f7ff fea5 	bl	800d530 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800d7e6:	bf00      	nop
 800d7e8:	3714      	adds	r7, #20
 800d7ea:	46bd      	mov	sp, r7
 800d7ec:	bd90      	pop	{r4, r7, pc}
 800d7ee:	bf00      	nop
 800d7f0:	20000668 	.word	0x20000668
 800d7f4:	20000670 	.word	0x20000670
 800d7f8:	20000674 	.word	0x20000674
 800d7fc:	0805ff78 	.word	0x0805ff78
 800d800:	0805ff4c 	.word	0x0805ff4c
 800d804:	08060068 	.word	0x08060068
 800d808:	2000066c 	.word	0x2000066c

0800d80c <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800d80c:	b480      	push	{r7}
 800d80e:	b083      	sub	sp, #12
 800d810:	af00      	add	r7, sp, #0
 800d812:	6078      	str	r0, [r7, #4]
 800d814:	460b      	mov	r3, r1
 800d816:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800d818:	4b07      	ldr	r3, [pc, #28]	@ (800d838 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800d81a:	681a      	ldr	r2, [r3, #0]
 800d81c:	4b07      	ldr	r3, [pc, #28]	@ (800d83c <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800d81e:	6819      	ldr	r1, [r3, #0]
 800d820:	887b      	ldrh	r3, [r7, #2]
 800d822:	009b      	lsls	r3, r3, #2
 800d824:	440b      	add	r3, r1
 800d826:	681b      	ldr	r3, [r3, #0]
 800d828:	005b      	lsls	r3, r3, #1
 800d82a:	4413      	add	r3, r2
}
 800d82c:	4618      	mov	r0, r3
 800d82e:	370c      	adds	r7, #12
 800d830:	46bd      	mov	sp, r7
 800d832:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d836:	4770      	bx	lr
 800d838:	20000670 	.word	0x20000670
 800d83c:	20000674 	.word	0x20000674

0800d840 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800d840:	b480      	push	{r7}
 800d842:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800d844:	230b      	movs	r3, #11
}
 800d846:	4618      	mov	r0, r3
 800d848:	46bd      	mov	sp, r7
 800d84a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d84e:	4770      	bx	lr

0800d850 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800d850:	b480      	push	{r7}
 800d852:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800d854:	4b02      	ldr	r3, [pc, #8]	@ (800d860 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800d856:	4618      	mov	r0, r3
 800d858:	46bd      	mov	sp, r7
 800d85a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d85e:	4770      	bx	lr
 800d860:	20000678 	.word	0x20000678

0800d864 <_Z41__static_initialization_and_destruction_0ii>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800d864:	b580      	push	{r7, lr}
 800d866:	b082      	sub	sp, #8
 800d868:	af00      	add	r7, sp, #0
 800d86a:	6078      	str	r0, [r7, #4]
 800d86c:	6039      	str	r1, [r7, #0]
 800d86e:	687b      	ldr	r3, [r7, #4]
 800d870:	2b01      	cmp	r3, #1
 800d872:	d10e      	bne.n	800d892 <_Z41__static_initialization_and_destruction_0ii+0x2e>
 800d874:	683b      	ldr	r3, [r7, #0]
 800d876:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d87a:	4293      	cmp	r3, r2
 800d87c:	d109      	bne.n	800d892 <_Z41__static_initialization_and_destruction_0ii+0x2e>
    &(getFont_Asap_Regular_80_4bpp()),
 800d87e:	f7fa fcb5 	bl	80081ec <_Z28getFont_Asap_Regular_80_4bppv>
 800d882:	4603      	mov	r3, r0
};
 800d884:	4a05      	ldr	r2, [pc, #20]	@ (800d89c <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800d886:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_30_4bpp())
 800d888:	f7fa fd0a 	bl	80082a0 <_Z23getFont_verdana_30_4bppv>
 800d88c:	4603      	mov	r3, r0
};
 800d88e:	4a03      	ldr	r2, [pc, #12]	@ (800d89c <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800d890:	6053      	str	r3, [r2, #4]
} // namespace TypedTextDatabase
 800d892:	bf00      	nop
 800d894:	3708      	adds	r7, #8
 800d896:	46bd      	mov	sp, r7
 800d898:	bd80      	pop	{r7, pc}
 800d89a:	bf00      	nop
 800d89c:	20000678 	.word	0x20000678

0800d8a0 <_GLOBAL__sub_I_touchgfx_fonts>:
 800d8a0:	b580      	push	{r7, lr}
 800d8a2:	af00      	add	r7, sp, #0
 800d8a4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d8a8:	2001      	movs	r0, #1
 800d8aa:	f7ff ffdb 	bl	800d864 <_Z41__static_initialization_and_destruction_0ii>
 800d8ae:	bd80      	pop	{r7, pc}

0800d8b0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800d8b0:	b580      	push	{r7, lr}
 800d8b2:	b082      	sub	sp, #8
 800d8b4:	af00      	add	r7, sp, #0
 800d8b6:	6078      	str	r0, [r7, #4]
 800d8b8:	4a05      	ldr	r2, [pc, #20]	@ (800d8d0 <_ZN19FrontendApplicationD1Ev+0x20>)
 800d8ba:	687b      	ldr	r3, [r7, #4]
 800d8bc:	601a      	str	r2, [r3, #0]
 800d8be:	687b      	ldr	r3, [r7, #4]
 800d8c0:	4618      	mov	r0, r3
 800d8c2:	f7fa ff4d 	bl	8008760 <_ZN23FrontendApplicationBaseD1Ev>
 800d8c6:	687b      	ldr	r3, [r7, #4]
 800d8c8:	4618      	mov	r0, r3
 800d8ca:	3708      	adds	r7, #8
 800d8cc:	46bd      	mov	sp, r7
 800d8ce:	bd80      	pop	{r7, pc}
 800d8d0:	08028770 	.word	0x08028770

0800d8d4 <_ZN19FrontendApplicationD0Ev>:
 800d8d4:	b580      	push	{r7, lr}
 800d8d6:	b082      	sub	sp, #8
 800d8d8:	af00      	add	r7, sp, #0
 800d8da:	6078      	str	r0, [r7, #4]
 800d8dc:	6878      	ldr	r0, [r7, #4]
 800d8de:	f7ff ffe7 	bl	800d8b0 <_ZN19FrontendApplicationD1Ev>
 800d8e2:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800d8e6:	6878      	ldr	r0, [r7, #4]
 800d8e8:	f018 f8a3 	bl	8025a32 <_ZdlPvj>
 800d8ec:	687b      	ldr	r3, [r7, #4]
 800d8ee:	4618      	mov	r0, r3
 800d8f0:	3708      	adds	r7, #8
 800d8f2:	46bd      	mov	sp, r7
 800d8f4:	bd80      	pop	{r7, pc}

0800d8f6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800d8f6:	b580      	push	{r7, lr}
 800d8f8:	b082      	sub	sp, #8
 800d8fa:	af00      	add	r7, sp, #0
 800d8fc:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800d8fe:	687b      	ldr	r3, [r7, #4]
 800d900:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800d904:	4618      	mov	r0, r3
 800d906:	f000 fcd3 	bl	800e2b0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800d90a:	687b      	ldr	r3, [r7, #4]
 800d90c:	4618      	mov	r0, r3
 800d90e:	f006 fbb9 	bl	8014084 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800d912:	bf00      	nop
 800d914:	3708      	adds	r7, #8
 800d916:	46bd      	mov	sp, r7
 800d918:	bd80      	pop	{r7, pc}
	...

0800d91c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800d91c:	b580      	push	{r7, lr}
 800d91e:	b084      	sub	sp, #16
 800d920:	af00      	add	r7, sp, #0
 800d922:	60f8      	str	r0, [r7, #12]
 800d924:	60b9      	str	r1, [r7, #8]
 800d926:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800d928:	68fb      	ldr	r3, [r7, #12]
 800d92a:	687a      	ldr	r2, [r7, #4]
 800d92c:	68b9      	ldr	r1, [r7, #8]
 800d92e:	4618      	mov	r0, r3
 800d930:	f7fa ff66 	bl	8008800 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800d934:	4a03      	ldr	r2, [pc, #12]	@ (800d944 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800d936:	68fb      	ldr	r3, [r7, #12]
 800d938:	601a      	str	r2, [r3, #0]
{
}
 800d93a:	68fb      	ldr	r3, [r7, #12]
 800d93c:	4618      	mov	r0, r3
 800d93e:	3710      	adds	r7, #16
 800d940:	46bd      	mov	sp, r7
 800d942:	bd80      	pop	{r7, pc}
 800d944:	08028770 	.word	0x08028770

0800d948 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800d948:	b480      	push	{r7}
 800d94a:	b083      	sub	sp, #12
 800d94c:	af00      	add	r7, sp, #0
 800d94e:	6078      	str	r0, [r7, #4]
    {
    }
 800d950:	bf00      	nop
 800d952:	370c      	adds	r7, #12
 800d954:	46bd      	mov	sp, r7
 800d956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d95a:	4770      	bx	lr

0800d95c <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800d95c:	b480      	push	{r7}
 800d95e:	b083      	sub	sp, #12
 800d960:	af00      	add	r7, sp, #0
 800d962:	6078      	str	r0, [r7, #4]
    {
    }
 800d964:	bf00      	nop
 800d966:	370c      	adds	r7, #12
 800d968:	46bd      	mov	sp, r7
 800d96a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d96e:	4770      	bx	lr

0800d970 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800d970:	b480      	push	{r7}
 800d972:	b083      	sub	sp, #12
 800d974:	af00      	add	r7, sp, #0
 800d976:	6078      	str	r0, [r7, #4]
    {
 800d978:	4a04      	ldr	r2, [pc, #16]	@ (800d98c <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800d97a:	687b      	ldr	r3, [r7, #4]
 800d97c:	601a      	str	r2, [r3, #0]
    }
 800d97e:	687b      	ldr	r3, [r7, #4]
 800d980:	4618      	mov	r0, r3
 800d982:	370c      	adds	r7, #12
 800d984:	46bd      	mov	sp, r7
 800d986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d98a:	4770      	bx	lr
 800d98c:	08028830 	.word	0x08028830

0800d990 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800d990:	b580      	push	{r7, lr}
 800d992:	b082      	sub	sp, #8
 800d994:	af00      	add	r7, sp, #0
 800d996:	6078      	str	r0, [r7, #4]
    }
 800d998:	6878      	ldr	r0, [r7, #4]
 800d99a:	f7ff ffe9 	bl	800d970 <_ZN8touchgfx9PresenterD1Ev>
 800d99e:	2104      	movs	r1, #4
 800d9a0:	6878      	ldr	r0, [r7, #4]
 800d9a2:	f018 f846 	bl	8025a32 <_ZdlPvj>
 800d9a6:	687b      	ldr	r3, [r7, #4]
 800d9a8:	4618      	mov	r0, r3
 800d9aa:	3708      	adds	r7, #8
 800d9ac:	46bd      	mov	sp, r7
 800d9ae:	bd80      	pop	{r7, pc}

0800d9b0 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800d9b0:	b480      	push	{r7}
 800d9b2:	b083      	sub	sp, #12
 800d9b4:	af00      	add	r7, sp, #0
 800d9b6:	6078      	str	r0, [r7, #4]
    {
 800d9b8:	4a04      	ldr	r2, [pc, #16]	@ (800d9cc <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800d9ba:	687b      	ldr	r3, [r7, #4]
 800d9bc:	601a      	str	r2, [r3, #0]
    }
 800d9be:	687b      	ldr	r3, [r7, #4]
 800d9c0:	4618      	mov	r0, r3
 800d9c2:	370c      	adds	r7, #12
 800d9c4:	46bd      	mov	sp, r7
 800d9c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9ca:	4770      	bx	lr
 800d9cc:	08028830 	.word	0x08028830

0800d9d0 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800d9d0:	b480      	push	{r7}
 800d9d2:	b083      	sub	sp, #12
 800d9d4:	af00      	add	r7, sp, #0
 800d9d6:	6078      	str	r0, [r7, #4]
 800d9d8:	4a06      	ldr	r2, [pc, #24]	@ (800d9f4 <_ZN13ModelListenerC1Ev+0x24>)
 800d9da:	687b      	ldr	r3, [r7, #4]
 800d9dc:	601a      	str	r2, [r3, #0]
 800d9de:	687b      	ldr	r3, [r7, #4]
 800d9e0:	2200      	movs	r2, #0
 800d9e2:	605a      	str	r2, [r3, #4]
 800d9e4:	687b      	ldr	r3, [r7, #4]
 800d9e6:	4618      	mov	r0, r3
 800d9e8:	370c      	adds	r7, #12
 800d9ea:	46bd      	mov	sp, r7
 800d9ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9f0:	4770      	bx	lr
 800d9f2:	bf00      	nop
 800d9f4:	08028808 	.word	0x08028808

0800d9f8 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800d9f8:	b480      	push	{r7}
 800d9fa:	b083      	sub	sp, #12
 800d9fc:	af00      	add	r7, sp, #0
 800d9fe:	6078      	str	r0, [r7, #4]
 800da00:	4a04      	ldr	r2, [pc, #16]	@ (800da14 <_ZN13ModelListenerD1Ev+0x1c>)
 800da02:	687b      	ldr	r3, [r7, #4]
 800da04:	601a      	str	r2, [r3, #0]
 800da06:	687b      	ldr	r3, [r7, #4]
 800da08:	4618      	mov	r0, r3
 800da0a:	370c      	adds	r7, #12
 800da0c:	46bd      	mov	sp, r7
 800da0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da12:	4770      	bx	lr
 800da14:	08028808 	.word	0x08028808

0800da18 <_ZN13ModelListenerD0Ev>:
 800da18:	b580      	push	{r7, lr}
 800da1a:	b082      	sub	sp, #8
 800da1c:	af00      	add	r7, sp, #0
 800da1e:	6078      	str	r0, [r7, #4]
 800da20:	6878      	ldr	r0, [r7, #4]
 800da22:	f7ff ffe9 	bl	800d9f8 <_ZN13ModelListenerD1Ev>
 800da26:	2108      	movs	r1, #8
 800da28:	6878      	ldr	r0, [r7, #4]
 800da2a:	f018 f802 	bl	8025a32 <_ZdlPvj>
 800da2e:	687b      	ldr	r3, [r7, #4]
 800da30:	4618      	mov	r0, r3
 800da32:	3708      	adds	r7, #8
 800da34:	46bd      	mov	sp, r7
 800da36:	bd80      	pop	{r7, pc}

0800da38 <_ZN13ModelListener16notifyADCChangedEm>:


    virtual void notifyADCChanged(uint32_t newVal) {}
 800da38:	b480      	push	{r7}
 800da3a:	b083      	sub	sp, #12
 800da3c:	af00      	add	r7, sp, #0
 800da3e:	6078      	str	r0, [r7, #4]
 800da40:	6039      	str	r1, [r7, #0]
 800da42:	bf00      	nop
 800da44:	370c      	adds	r7, #12
 800da46:	46bd      	mov	sp, r7
 800da48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da4c:	4770      	bx	lr

0800da4e <_ZN13ModelListener24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp) {}
 800da4e:	b480      	push	{r7}
 800da50:	b083      	sub	sp, #12
 800da52:	af00      	add	r7, sp, #0
 800da54:	6078      	str	r0, [r7, #4]
 800da56:	ed87 0a00 	vstr	s0, [r7]
 800da5a:	bf00      	nop
 800da5c:	370c      	adds	r7, #12
 800da5e:	46bd      	mov	sp, r7
 800da60:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da64:	4770      	bx	lr

0800da66 <_ZN13ModelListener21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity) {}
 800da66:	b480      	push	{r7}
 800da68:	b083      	sub	sp, #12
 800da6a:	af00      	add	r7, sp, #0
 800da6c:	6078      	str	r0, [r7, #4]
 800da6e:	ed87 0a00 	vstr	s0, [r7]
 800da72:	bf00      	nop
 800da74:	370c      	adds	r7, #12
 800da76:	46bd      	mov	sp, r7
 800da78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da7c:	4770      	bx	lr

0800da7e <_ZN13ModelListener29notifyHumiditySetPointChangedEf>:
    virtual void notifyHumiditySetPointChanged(float setPoint) {}
 800da7e:	b480      	push	{r7}
 800da80:	b083      	sub	sp, #12
 800da82:	af00      	add	r7, sp, #0
 800da84:	6078      	str	r0, [r7, #4]
 800da86:	ed87 0a00 	vstr	s0, [r7]
 800da8a:	bf00      	nop
 800da8c:	370c      	adds	r7, #12
 800da8e:	46bd      	mov	sp, r7
 800da90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da94:	4770      	bx	lr

0800da96 <_ZN13ModelListener32notifyTemperatureSetPointChangedEf>:
    virtual void notifyTemperatureSetPointChanged(float setPoint) {}
 800da96:	b480      	push	{r7}
 800da98:	b083      	sub	sp, #12
 800da9a:	af00      	add	r7, sp, #0
 800da9c:	6078      	str	r0, [r7, #4]
 800da9e:	ed87 0a00 	vstr	s0, [r7]
 800daa2:	bf00      	nop
 800daa4:	370c      	adds	r7, #12
 800daa6:	46bd      	mov	sp, r7
 800daa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daac:	4770      	bx	lr

0800daae <_ZN13ModelListener27notifyLightsSetPointChangedEi>:
    virtual void notifyLightsSetPointChanged(int setPoint) {}
 800daae:	b480      	push	{r7}
 800dab0:	b083      	sub	sp, #12
 800dab2:	af00      	add	r7, sp, #0
 800dab4:	6078      	str	r0, [r7, #4]
 800dab6:	6039      	str	r1, [r7, #0]
 800dab8:	bf00      	nop
 800daba:	370c      	adds	r7, #12
 800dabc:	46bd      	mov	sp, r7
 800dabe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dac2:	4770      	bx	lr

0800dac4 <_ZN24humidity_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~humidity_screenPresenter() {}
 800dac4:	b580      	push	{r7, lr}
 800dac6:	b082      	sub	sp, #8
 800dac8:	af00      	add	r7, sp, #0
 800daca:	6078      	str	r0, [r7, #4]
 800dacc:	4a09      	ldr	r2, [pc, #36]	@ (800daf4 <_ZN24humidity_screenPresenterD1Ev+0x30>)
 800dace:	687b      	ldr	r3, [r7, #4]
 800dad0:	601a      	str	r2, [r3, #0]
 800dad2:	4a09      	ldr	r2, [pc, #36]	@ (800daf8 <_ZN24humidity_screenPresenterD1Ev+0x34>)
 800dad4:	687b      	ldr	r3, [r7, #4]
 800dad6:	605a      	str	r2, [r3, #4]
 800dad8:	687b      	ldr	r3, [r7, #4]
 800dada:	3304      	adds	r3, #4
 800dadc:	4618      	mov	r0, r3
 800dade:	f7ff ff8b 	bl	800d9f8 <_ZN13ModelListenerD1Ev>
 800dae2:	687b      	ldr	r3, [r7, #4]
 800dae4:	4618      	mov	r0, r3
 800dae6:	f7ff ff43 	bl	800d970 <_ZN8touchgfx9PresenterD1Ev>
 800daea:	687b      	ldr	r3, [r7, #4]
 800daec:	4618      	mov	r0, r3
 800daee:	3708      	adds	r7, #8
 800daf0:	46bd      	mov	sp, r7
 800daf2:	bd80      	pop	{r7, pc}
 800daf4:	080287c4 	.word	0x080287c4
 800daf8:	080287e0 	.word	0x080287e0

0800dafc <_ZThn4_N24humidity_screenPresenterD1Ev>:
 800dafc:	f1a0 0004 	sub.w	r0, r0, #4
 800db00:	e7e0      	b.n	800dac4 <_ZN24humidity_screenPresenterD1Ev>
 800db02:	bf00      	nop

0800db04 <_ZN24humidity_screenPresenterD0Ev>:
 800db04:	b580      	push	{r7, lr}
 800db06:	b082      	sub	sp, #8
 800db08:	af00      	add	r7, sp, #0
 800db0a:	6078      	str	r0, [r7, #4]
 800db0c:	6878      	ldr	r0, [r7, #4]
 800db0e:	f7ff ffd9 	bl	800dac4 <_ZN24humidity_screenPresenterD1Ev>
 800db12:	2110      	movs	r1, #16
 800db14:	6878      	ldr	r0, [r7, #4]
 800db16:	f017 ff8c 	bl	8025a32 <_ZdlPvj>
 800db1a:	687b      	ldr	r3, [r7, #4]
 800db1c:	4618      	mov	r0, r3
 800db1e:	3708      	adds	r7, #8
 800db20:	46bd      	mov	sp, r7
 800db22:	bd80      	pop	{r7, pc}

0800db24 <_ZThn4_N24humidity_screenPresenterD0Ev>:
 800db24:	f1a0 0004 	sub.w	r0, r0, #4
 800db28:	e7ec      	b.n	800db04 <_ZN24humidity_screenPresenterD0Ev>
	...

0800db2c <_ZN24humidity_screenPresenterC1ER19humidity_screenView>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>
#include <gui/humidity_screen_screen/humidity_screenPresenter.hpp>

humidity_screenPresenter::humidity_screenPresenter(humidity_screenView& v)
 800db2c:	b580      	push	{r7, lr}
 800db2e:	b082      	sub	sp, #8
 800db30:	af00      	add	r7, sp, #0
 800db32:	6078      	str	r0, [r7, #4]
 800db34:	6039      	str	r1, [r7, #0]
    : view(v)
 800db36:	687b      	ldr	r3, [r7, #4]
 800db38:	4618      	mov	r0, r3
 800db3a:	f7ff ff39 	bl	800d9b0 <_ZN8touchgfx9PresenterC1Ev>
 800db3e:	687b      	ldr	r3, [r7, #4]
 800db40:	3304      	adds	r3, #4
 800db42:	4618      	mov	r0, r3
 800db44:	f7ff ff44 	bl	800d9d0 <_ZN13ModelListenerC1Ev>
 800db48:	4a06      	ldr	r2, [pc, #24]	@ (800db64 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x38>)
 800db4a:	687b      	ldr	r3, [r7, #4]
 800db4c:	601a      	str	r2, [r3, #0]
 800db4e:	4a06      	ldr	r2, [pc, #24]	@ (800db68 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x3c>)
 800db50:	687b      	ldr	r3, [r7, #4]
 800db52:	605a      	str	r2, [r3, #4]
 800db54:	687b      	ldr	r3, [r7, #4]
 800db56:	683a      	ldr	r2, [r7, #0]
 800db58:	60da      	str	r2, [r3, #12]
{

}
 800db5a:	687b      	ldr	r3, [r7, #4]
 800db5c:	4618      	mov	r0, r3
 800db5e:	3708      	adds	r7, #8
 800db60:	46bd      	mov	sp, r7
 800db62:	bd80      	pop	{r7, pc}
 800db64:	080287c4 	.word	0x080287c4
 800db68:	080287e0 	.word	0x080287e0

0800db6c <_ZN24humidity_screenPresenter8activateEv>:

void humidity_screenPresenter::activate()
{
 800db6c:	b480      	push	{r7}
 800db6e:	b083      	sub	sp, #12
 800db70:	af00      	add	r7, sp, #0
 800db72:	6078      	str	r0, [r7, #4]

}
 800db74:	bf00      	nop
 800db76:	370c      	adds	r7, #12
 800db78:	46bd      	mov	sp, r7
 800db7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db7e:	4770      	bx	lr

0800db80 <_ZN24humidity_screenPresenter10deactivateEv>:

void humidity_screenPresenter::deactivate()
{
 800db80:	b480      	push	{r7}
 800db82:	b083      	sub	sp, #12
 800db84:	af00      	add	r7, sp, #0
 800db86:	6078      	str	r0, [r7, #4]

}
 800db88:	bf00      	nop
 800db8a:	370c      	adds	r7, #12
 800db8c:	46bd      	mov	sp, r7
 800db8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db92:	4770      	bx	lr

0800db94 <_ZN24humidity_screenPresenter29notifyHumiditySetPointChangedEf>:

void humidity_screenPresenter::notifyHumiditySetPointChanged(float setPoint){
 800db94:	b580      	push	{r7, lr}
 800db96:	b082      	sub	sp, #8
 800db98:	af00      	add	r7, sp, #0
 800db9a:	6078      	str	r0, [r7, #4]
 800db9c:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(setPoint);
 800dba0:	687b      	ldr	r3, [r7, #4]
 800dba2:	68da      	ldr	r2, [r3, #12]
 800dba4:	687b      	ldr	r3, [r7, #4]
 800dba6:	68db      	ldr	r3, [r3, #12]
 800dba8:	681b      	ldr	r3, [r3, #0]
 800dbaa:	3334      	adds	r3, #52	@ 0x34
 800dbac:	681b      	ldr	r3, [r3, #0]
 800dbae:	ed97 0a00 	vldr	s0, [r7]
 800dbb2:	4610      	mov	r0, r2
 800dbb4:	4798      	blx	r3
}
 800dbb6:	bf00      	nop
 800dbb8:	3708      	adds	r7, #8
 800dbba:	46bd      	mov	sp, r7
 800dbbc:	bd80      	pop	{r7, pc}

0800dbbe <_ZThn4_N24humidity_screenPresenter29notifyHumiditySetPointChangedEf>:

    virtual void notifyHumiditySetPointChanged(float setPoint);
 800dbbe:	f1a0 0004 	sub.w	r0, r0, #4
 800dbc2:	f7ff bfe7 	b.w	800db94 <_ZN24humidity_screenPresenter29notifyHumiditySetPointChangedEf>

0800dbc6 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800dbc6:	b580      	push	{r7, lr}
 800dbc8:	b084      	sub	sp, #16
 800dbca:	af00      	add	r7, sp, #0
 800dbcc:	60f8      	str	r0, [r7, #12]
 800dbce:	460b      	mov	r3, r1
 800dbd0:	607a      	str	r2, [r7, #4]
 800dbd2:	ed87 0a00 	vstr	s0, [r7]
 800dbd6:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800dbd8:	463b      	mov	r3, r7
 800dbda:	8979      	ldrh	r1, [r7, #10]
 800dbdc:	687a      	ldr	r2, [r7, #4]
 800dbde:	68f8      	ldr	r0, [r7, #12]
 800dbe0:	f009 fb9e 	bl	8017320 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800dbe4:	4603      	mov	r3, r0
    }
 800dbe6:	4618      	mov	r0, r3
 800dbe8:	3710      	adds	r7, #16
 800dbea:	46bd      	mov	sp, r7
 800dbec:	bd80      	pop	{r7, pc}
	...

0800dbf0 <_ZN19humidity_screenViewD1Ev>:

class humidity_screenView : public humidity_screenViewBase
{
public:
    humidity_screenView();
    virtual ~humidity_screenView() {}
 800dbf0:	b580      	push	{r7, lr}
 800dbf2:	b082      	sub	sp, #8
 800dbf4:	af00      	add	r7, sp, #0
 800dbf6:	6078      	str	r0, [r7, #4]
 800dbf8:	4a05      	ldr	r2, [pc, #20]	@ (800dc10 <_ZN19humidity_screenViewD1Ev+0x20>)
 800dbfa:	687b      	ldr	r3, [r7, #4]
 800dbfc:	601a      	str	r2, [r3, #0]
 800dbfe:	687b      	ldr	r3, [r7, #4]
 800dc00:	4618      	mov	r0, r3
 800dc02:	f7fc ffd7 	bl	800abb4 <_ZN23humidity_screenViewBaseD1Ev>
 800dc06:	687b      	ldr	r3, [r7, #4]
 800dc08:	4618      	mov	r0, r3
 800dc0a:	3708      	adds	r7, #8
 800dc0c:	46bd      	mov	sp, r7
 800dc0e:	bd80      	pop	{r7, pc}
 800dc10:	08028848 	.word	0x08028848

0800dc14 <_ZN19humidity_screenViewD0Ev>:
 800dc14:	b580      	push	{r7, lr}
 800dc16:	b082      	sub	sp, #8
 800dc18:	af00      	add	r7, sp, #0
 800dc1a:	6078      	str	r0, [r7, #4]
 800dc1c:	6878      	ldr	r0, [r7, #4]
 800dc1e:	f7ff ffe7 	bl	800dbf0 <_ZN19humidity_screenViewD1Ev>
 800dc22:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800dc26:	6878      	ldr	r0, [r7, #4]
 800dc28:	f017 ff03 	bl	8025a32 <_ZdlPvj>
 800dc2c:	687b      	ldr	r3, [r7, #4]
 800dc2e:	4618      	mov	r0, r3
 800dc30:	3708      	adds	r7, #8
 800dc32:	46bd      	mov	sp, r7
 800dc34:	bd80      	pop	{r7, pc}
	...

0800dc38 <_ZN19humidity_screenViewC1Ev>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>

humidity_screenView::humidity_screenView()
 800dc38:	b580      	push	{r7, lr}
 800dc3a:	b082      	sub	sp, #8
 800dc3c:	af00      	add	r7, sp, #0
 800dc3e:	6078      	str	r0, [r7, #4]
 800dc40:	687b      	ldr	r3, [r7, #4]
 800dc42:	4618      	mov	r0, r3
 800dc44:	f7fc fd08 	bl	800a658 <_ZN23humidity_screenViewBaseC1Ev>
 800dc48:	4a03      	ldr	r2, [pc, #12]	@ (800dc58 <_ZN19humidity_screenViewC1Ev+0x20>)
 800dc4a:	687b      	ldr	r3, [r7, #4]
 800dc4c:	601a      	str	r2, [r3, #0]
{

}
 800dc4e:	687b      	ldr	r3, [r7, #4]
 800dc50:	4618      	mov	r0, r3
 800dc52:	3708      	adds	r7, #8
 800dc54:	46bd      	mov	sp, r7
 800dc56:	bd80      	pop	{r7, pc}
 800dc58:	08028848 	.word	0x08028848

0800dc5c <_ZN19humidity_screenView11setupScreenEv>:

void humidity_screenView::setupScreen()
{
 800dc5c:	b580      	push	{r7, lr}
 800dc5e:	b082      	sub	sp, #8
 800dc60:	af00      	add	r7, sp, #0
 800dc62:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::setupScreen();
 800dc64:	687b      	ldr	r3, [r7, #4]
 800dc66:	4618      	mov	r0, r3
 800dc68:	f7fc fff5 	bl	800ac56 <_ZN23humidity_screenViewBase11setupScreenEv>
}
 800dc6c:	bf00      	nop
 800dc6e:	3708      	adds	r7, #8
 800dc70:	46bd      	mov	sp, r7
 800dc72:	bd80      	pop	{r7, pc}

0800dc74 <_ZN19humidity_screenView14tearDownScreenEv>:

void humidity_screenView::tearDownScreen()
{
 800dc74:	b580      	push	{r7, lr}
 800dc76:	b082      	sub	sp, #8
 800dc78:	af00      	add	r7, sp, #0
 800dc7a:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::tearDownScreen();
 800dc7c:	687b      	ldr	r3, [r7, #4]
 800dc7e:	4618      	mov	r0, r3
 800dc80:	f7fc f810 	bl	8009ca4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800dc84:	bf00      	nop
 800dc86:	3708      	adds	r7, #8
 800dc88:	46bd      	mov	sp, r7
 800dc8a:	bd80      	pop	{r7, pc}

0800dc8c <_ZN19humidity_screenView11setHumidityEf>:

void humidity_screenView::setHumidity(float newVal){
 800dc8c:	b580      	push	{r7, lr}
 800dc8e:	b082      	sub	sp, #8
 800dc90:	af00      	add	r7, sp, #0
 800dc92:	6078      	str	r0, [r7, #4]
 800dc94:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(humValBuffer, HUMVAL_SIZE, "%.1f", newVal);
 800dc98:	687b      	ldr	r3, [r7, #4]
 800dc9a:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800dc9e:	ed97 0a00 	vldr	s0, [r7]
 800dca2:	4a07      	ldr	r2, [pc, #28]	@ (800dcc0 <_ZN19humidity_screenView11setHumidityEf+0x34>)
 800dca4:	210a      	movs	r1, #10
 800dca6:	4618      	mov	r0, r3
 800dca8:	f7ff ff8d 	bl	800dbc6 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	humVal.invalidate();
 800dcac:	687b      	ldr	r3, [r7, #4]
 800dcae:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800dcb2:	4618      	mov	r0, r3
 800dcb4:	f007 f9da 	bl	801506c <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800dcb8:	bf00      	nop
 800dcba:	3708      	adds	r7, #8
 800dcbc:	46bd      	mov	sp, r7
 800dcbe:	bd80      	pop	{r7, pc}
 800dcc0:	08027528 	.word	0x08027528

0800dcc4 <_ZN19humidity_screenView8increaseEv>:

void humidity_screenView::increase()
{
 800dcc4:	b480      	push	{r7}
 800dcc6:	b083      	sub	sp, #12
 800dcc8:	af00      	add	r7, sp, #0
 800dcca:	6078      	str	r0, [r7, #4]
	humidity_set_point = humidity_set_point + 5;
 800dccc:	4b07      	ldr	r3, [pc, #28]	@ (800dcec <_ZN19humidity_screenView8increaseEv+0x28>)
 800dcce:	edd3 7a00 	vldr	s15, [r3]
 800dcd2:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800dcd6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800dcda:	4b04      	ldr	r3, [pc, #16]	@ (800dcec <_ZN19humidity_screenView8increaseEv+0x28>)
 800dcdc:	edc3 7a00 	vstr	s15, [r3]
}
 800dce0:	bf00      	nop
 800dce2:	370c      	adds	r7, #12
 800dce4:	46bd      	mov	sp, r7
 800dce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcea:	4770      	bx	lr
 800dcec:	20000008 	.word	0x20000008

0800dcf0 <_ZN19humidity_screenView8decreaseEv>:

void humidity_screenView::decrease()
{
 800dcf0:	b480      	push	{r7}
 800dcf2:	b083      	sub	sp, #12
 800dcf4:	af00      	add	r7, sp, #0
 800dcf6:	6078      	str	r0, [r7, #4]
	humidity_set_point = humidity_set_point - 5;
 800dcf8:	4b07      	ldr	r3, [pc, #28]	@ (800dd18 <_ZN19humidity_screenView8decreaseEv+0x28>)
 800dcfa:	edd3 7a00 	vldr	s15, [r3]
 800dcfe:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800dd02:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800dd06:	4b04      	ldr	r3, [pc, #16]	@ (800dd18 <_ZN19humidity_screenView8decreaseEv+0x28>)
 800dd08:	edc3 7a00 	vstr	s15, [r3]
}
 800dd0c:	bf00      	nop
 800dd0e:	370c      	adds	r7, #12
 800dd10:	46bd      	mov	sp, r7
 800dd12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd16:	4770      	bx	lr
 800dd18:	20000008 	.word	0x20000008

0800dd1c <_ZN21light_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~light_screenPresenter() {}
 800dd1c:	b580      	push	{r7, lr}
 800dd1e:	b082      	sub	sp, #8
 800dd20:	af00      	add	r7, sp, #0
 800dd22:	6078      	str	r0, [r7, #4]
 800dd24:	4a09      	ldr	r2, [pc, #36]	@ (800dd4c <_ZN21light_screenPresenterD1Ev+0x30>)
 800dd26:	687b      	ldr	r3, [r7, #4]
 800dd28:	601a      	str	r2, [r3, #0]
 800dd2a:	4a09      	ldr	r2, [pc, #36]	@ (800dd50 <_ZN21light_screenPresenterD1Ev+0x34>)
 800dd2c:	687b      	ldr	r3, [r7, #4]
 800dd2e:	605a      	str	r2, [r3, #4]
 800dd30:	687b      	ldr	r3, [r7, #4]
 800dd32:	3304      	adds	r3, #4
 800dd34:	4618      	mov	r0, r3
 800dd36:	f7ff fe5f 	bl	800d9f8 <_ZN13ModelListenerD1Ev>
 800dd3a:	687b      	ldr	r3, [r7, #4]
 800dd3c:	4618      	mov	r0, r3
 800dd3e:	f7ff fe17 	bl	800d970 <_ZN8touchgfx9PresenterD1Ev>
 800dd42:	687b      	ldr	r3, [r7, #4]
 800dd44:	4618      	mov	r0, r3
 800dd46:	3708      	adds	r7, #8
 800dd48:	46bd      	mov	sp, r7
 800dd4a:	bd80      	pop	{r7, pc}
 800dd4c:	08028888 	.word	0x08028888
 800dd50:	080288a4 	.word	0x080288a4

0800dd54 <_ZThn4_N21light_screenPresenterD1Ev>:
 800dd54:	f1a0 0004 	sub.w	r0, r0, #4
 800dd58:	e7e0      	b.n	800dd1c <_ZN21light_screenPresenterD1Ev>
 800dd5a:	bf00      	nop

0800dd5c <_ZN21light_screenPresenterD0Ev>:
 800dd5c:	b580      	push	{r7, lr}
 800dd5e:	b082      	sub	sp, #8
 800dd60:	af00      	add	r7, sp, #0
 800dd62:	6078      	str	r0, [r7, #4]
 800dd64:	6878      	ldr	r0, [r7, #4]
 800dd66:	f7ff ffd9 	bl	800dd1c <_ZN21light_screenPresenterD1Ev>
 800dd6a:	2110      	movs	r1, #16
 800dd6c:	6878      	ldr	r0, [r7, #4]
 800dd6e:	f017 fe60 	bl	8025a32 <_ZdlPvj>
 800dd72:	687b      	ldr	r3, [r7, #4]
 800dd74:	4618      	mov	r0, r3
 800dd76:	3708      	adds	r7, #8
 800dd78:	46bd      	mov	sp, r7
 800dd7a:	bd80      	pop	{r7, pc}

0800dd7c <_ZThn4_N21light_screenPresenterD0Ev>:
 800dd7c:	f1a0 0004 	sub.w	r0, r0, #4
 800dd80:	e7ec      	b.n	800dd5c <_ZN21light_screenPresenterD0Ev>
	...

0800dd84 <_ZN21light_screenPresenterC1ER16light_screenView>:
#include <gui/light_screen_screen/light_screenView.hpp>
#include <gui/light_screen_screen/light_screenPresenter.hpp>

light_screenPresenter::light_screenPresenter(light_screenView& v)
 800dd84:	b580      	push	{r7, lr}
 800dd86:	b082      	sub	sp, #8
 800dd88:	af00      	add	r7, sp, #0
 800dd8a:	6078      	str	r0, [r7, #4]
 800dd8c:	6039      	str	r1, [r7, #0]
    : view(v)
 800dd8e:	687b      	ldr	r3, [r7, #4]
 800dd90:	4618      	mov	r0, r3
 800dd92:	f7ff fe0d 	bl	800d9b0 <_ZN8touchgfx9PresenterC1Ev>
 800dd96:	687b      	ldr	r3, [r7, #4]
 800dd98:	3304      	adds	r3, #4
 800dd9a:	4618      	mov	r0, r3
 800dd9c:	f7ff fe18 	bl	800d9d0 <_ZN13ModelListenerC1Ev>
 800dda0:	4a06      	ldr	r2, [pc, #24]	@ (800ddbc <_ZN21light_screenPresenterC1ER16light_screenView+0x38>)
 800dda2:	687b      	ldr	r3, [r7, #4]
 800dda4:	601a      	str	r2, [r3, #0]
 800dda6:	4a06      	ldr	r2, [pc, #24]	@ (800ddc0 <_ZN21light_screenPresenterC1ER16light_screenView+0x3c>)
 800dda8:	687b      	ldr	r3, [r7, #4]
 800ddaa:	605a      	str	r2, [r3, #4]
 800ddac:	687b      	ldr	r3, [r7, #4]
 800ddae:	683a      	ldr	r2, [r7, #0]
 800ddb0:	60da      	str	r2, [r3, #12]
{

}
 800ddb2:	687b      	ldr	r3, [r7, #4]
 800ddb4:	4618      	mov	r0, r3
 800ddb6:	3708      	adds	r7, #8
 800ddb8:	46bd      	mov	sp, r7
 800ddba:	bd80      	pop	{r7, pc}
 800ddbc:	08028888 	.word	0x08028888
 800ddc0:	080288a4 	.word	0x080288a4

0800ddc4 <_ZN21light_screenPresenter8activateEv>:

void light_screenPresenter::activate()
{
 800ddc4:	b480      	push	{r7}
 800ddc6:	b083      	sub	sp, #12
 800ddc8:	af00      	add	r7, sp, #0
 800ddca:	6078      	str	r0, [r7, #4]

}
 800ddcc:	bf00      	nop
 800ddce:	370c      	adds	r7, #12
 800ddd0:	46bd      	mov	sp, r7
 800ddd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddd6:	4770      	bx	lr

0800ddd8 <_ZN21light_screenPresenter10deactivateEv>:

void light_screenPresenter::deactivate()
{
 800ddd8:	b480      	push	{r7}
 800ddda:	b083      	sub	sp, #12
 800dddc:	af00      	add	r7, sp, #0
 800ddde:	6078      	str	r0, [r7, #4]

}
 800dde0:	bf00      	nop
 800dde2:	370c      	adds	r7, #12
 800dde4:	46bd      	mov	sp, r7
 800dde6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddea:	4770      	bx	lr

0800ddec <_ZN21light_screenPresenter27notifyLightsSetPointChangedEi>:

void light_screenPresenter::notifyLightsSetPointChanged(int setPoint)
{
 800ddec:	b580      	push	{r7, lr}
 800ddee:	b082      	sub	sp, #8
 800ddf0:	af00      	add	r7, sp, #0
 800ddf2:	6078      	str	r0, [r7, #4]
 800ddf4:	6039      	str	r1, [r7, #0]
	view.setLights(setPoint);
 800ddf6:	687b      	ldr	r3, [r7, #4]
 800ddf8:	68da      	ldr	r2, [r3, #12]
 800ddfa:	687b      	ldr	r3, [r7, #4]
 800ddfc:	68db      	ldr	r3, [r3, #12]
 800ddfe:	681b      	ldr	r3, [r3, #0]
 800de00:	3334      	adds	r3, #52	@ 0x34
 800de02:	681b      	ldr	r3, [r3, #0]
 800de04:	6839      	ldr	r1, [r7, #0]
 800de06:	4610      	mov	r0, r2
 800de08:	4798      	blx	r3
}
 800de0a:	bf00      	nop
 800de0c:	3708      	adds	r7, #8
 800de0e:	46bd      	mov	sp, r7
 800de10:	bd80      	pop	{r7, pc}

0800de12 <_ZThn4_N21light_screenPresenter27notifyLightsSetPointChangedEi>:

    virtual void notifyLightsSetPointChanged(int setPoint);
 800de12:	f1a0 0004 	sub.w	r0, r0, #4
 800de16:	f7ff bfe9 	b.w	800ddec <_ZN21light_screenPresenter27notifyLightsSetPointChangedEi>
	...

0800de1c <_ZN16light_screenViewD1Ev>:

class light_screenView : public light_screenViewBase
{
public:
    light_screenView();
    virtual ~light_screenView() {}
 800de1c:	b580      	push	{r7, lr}
 800de1e:	b082      	sub	sp, #8
 800de20:	af00      	add	r7, sp, #0
 800de22:	6078      	str	r0, [r7, #4]
 800de24:	4a05      	ldr	r2, [pc, #20]	@ (800de3c <_ZN16light_screenViewD1Ev+0x20>)
 800de26:	687b      	ldr	r3, [r7, #4]
 800de28:	601a      	str	r2, [r3, #0]
 800de2a:	687b      	ldr	r3, [r7, #4]
 800de2c:	4618      	mov	r0, r3
 800de2e:	f7fd fd85 	bl	800b93c <_ZN20light_screenViewBaseD1Ev>
 800de32:	687b      	ldr	r3, [r7, #4]
 800de34:	4618      	mov	r0, r3
 800de36:	3708      	adds	r7, #8
 800de38:	46bd      	mov	sp, r7
 800de3a:	bd80      	pop	{r7, pc}
 800de3c:	080288cc 	.word	0x080288cc

0800de40 <_ZN16light_screenViewD0Ev>:
 800de40:	b580      	push	{r7, lr}
 800de42:	b082      	sub	sp, #8
 800de44:	af00      	add	r7, sp, #0
 800de46:	6078      	str	r0, [r7, #4]
 800de48:	6878      	ldr	r0, [r7, #4]
 800de4a:	f7ff ffe7 	bl	800de1c <_ZN16light_screenViewD1Ev>
 800de4e:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800de52:	6878      	ldr	r0, [r7, #4]
 800de54:	f017 fded 	bl	8025a32 <_ZdlPvj>
 800de58:	687b      	ldr	r3, [r7, #4]
 800de5a:	4618      	mov	r0, r3
 800de5c:	3708      	adds	r7, #8
 800de5e:	46bd      	mov	sp, r7
 800de60:	bd80      	pop	{r7, pc}
	...

0800de64 <_ZN16light_screenViewC1Ev>:
#include <gui/light_screen_screen/light_screenView.hpp>

light_screenView::light_screenView()
 800de64:	b580      	push	{r7, lr}
 800de66:	b082      	sub	sp, #8
 800de68:	af00      	add	r7, sp, #0
 800de6a:	6078      	str	r0, [r7, #4]
 800de6c:	687b      	ldr	r3, [r7, #4]
 800de6e:	4618      	mov	r0, r3
 800de70:	f7fd fab6 	bl	800b3e0 <_ZN20light_screenViewBaseC1Ev>
 800de74:	4a03      	ldr	r2, [pc, #12]	@ (800de84 <_ZN16light_screenViewC1Ev+0x20>)
 800de76:	687b      	ldr	r3, [r7, #4]
 800de78:	601a      	str	r2, [r3, #0]
{

}
 800de7a:	687b      	ldr	r3, [r7, #4]
 800de7c:	4618      	mov	r0, r3
 800de7e:	3708      	adds	r7, #8
 800de80:	46bd      	mov	sp, r7
 800de82:	bd80      	pop	{r7, pc}
 800de84:	080288cc 	.word	0x080288cc

0800de88 <_ZN16light_screenView11setupScreenEv>:

void light_screenView::setupScreen()
{
 800de88:	b580      	push	{r7, lr}
 800de8a:	b082      	sub	sp, #8
 800de8c:	af00      	add	r7, sp, #0
 800de8e:	6078      	str	r0, [r7, #4]
    light_screenViewBase::setupScreen();
 800de90:	687b      	ldr	r3, [r7, #4]
 800de92:	4618      	mov	r0, r3
 800de94:	f7fd fda3 	bl	800b9de <_ZN20light_screenViewBase11setupScreenEv>
}
 800de98:	bf00      	nop
 800de9a:	3708      	adds	r7, #8
 800de9c:	46bd      	mov	sp, r7
 800de9e:	bd80      	pop	{r7, pc}

0800dea0 <_ZN16light_screenView14tearDownScreenEv>:

void light_screenView::tearDownScreen()
{
 800dea0:	b580      	push	{r7, lr}
 800dea2:	b082      	sub	sp, #8
 800dea4:	af00      	add	r7, sp, #0
 800dea6:	6078      	str	r0, [r7, #4]
    light_screenViewBase::tearDownScreen();
 800dea8:	687b      	ldr	r3, [r7, #4]
 800deaa:	4618      	mov	r0, r3
 800deac:	f7fb fefa 	bl	8009ca4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800deb0:	bf00      	nop
 800deb2:	3708      	adds	r7, #8
 800deb4:	46bd      	mov	sp, r7
 800deb6:	bd80      	pop	{r7, pc}

0800deb8 <_ZN16light_screenView9setLightsEi>:

void light_screenView::setLights(int newVal){
 800deb8:	b580      	push	{r7, lr}
 800deba:	b082      	sub	sp, #8
 800debc:	af00      	add	r7, sp, #0
 800debe:	6078      	str	r0, [r7, #4]
 800dec0:	6039      	str	r1, [r7, #0]
	Unicode::snprintfFloat(lightsValBuffer, LIGHTSVAL_SIZE, "%.0f", newVal);
 800dec2:	687b      	ldr	r3, [r7, #4]
 800dec4:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800dec8:	683a      	ldr	r2, [r7, #0]
 800deca:	ee07 2a90 	vmov	s15, r2
 800dece:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ded2:	eeb0 0a67 	vmov.f32	s0, s15
 800ded6:	4a07      	ldr	r2, [pc, #28]	@ (800def4 <_ZN16light_screenView9setLightsEi+0x3c>)
 800ded8:	210a      	movs	r1, #10
 800deda:	4618      	mov	r0, r3
 800dedc:	f7ff fe73 	bl	800dbc6 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	lightsVal.invalidate();
 800dee0:	687b      	ldr	r3, [r7, #4]
 800dee2:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800dee6:	4618      	mov	r0, r3
 800dee8:	f007 f8c0 	bl	801506c <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800deec:	bf00      	nop
 800deee:	3708      	adds	r7, #8
 800def0:	46bd      	mov	sp, r7
 800def2:	bd80      	pop	{r7, pc}
 800def4:	08027530 	.word	0x08027530

0800def8 <_ZN16light_screenView8increaseEv>:

void light_screenView::increase()
{
 800def8:	b480      	push	{r7}
 800defa:	b083      	sub	sp, #12
 800defc:	af00      	add	r7, sp, #0
 800defe:	6078      	str	r0, [r7, #4]
	lights_set_point++;
 800df00:	4b05      	ldr	r3, [pc, #20]	@ (800df18 <_ZN16light_screenView8increaseEv+0x20>)
 800df02:	681b      	ldr	r3, [r3, #0]
 800df04:	3301      	adds	r3, #1
 800df06:	4a04      	ldr	r2, [pc, #16]	@ (800df18 <_ZN16light_screenView8increaseEv+0x20>)
 800df08:	6013      	str	r3, [r2, #0]
}
 800df0a:	bf00      	nop
 800df0c:	370c      	adds	r7, #12
 800df0e:	46bd      	mov	sp, r7
 800df10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df14:	4770      	bx	lr
 800df16:	bf00      	nop
 800df18:	2000000c 	.word	0x2000000c

0800df1c <_ZN16light_screenView8decreaseEv>:

void light_screenView::decrease()
{
 800df1c:	b480      	push	{r7}
 800df1e:	b083      	sub	sp, #12
 800df20:	af00      	add	r7, sp, #0
 800df22:	6078      	str	r0, [r7, #4]
	lights_set_point--;
 800df24:	4b05      	ldr	r3, [pc, #20]	@ (800df3c <_ZN16light_screenView8decreaseEv+0x20>)
 800df26:	681b      	ldr	r3, [r3, #0]
 800df28:	3b01      	subs	r3, #1
 800df2a:	4a04      	ldr	r2, [pc, #16]	@ (800df3c <_ZN16light_screenView8decreaseEv+0x20>)
 800df2c:	6013      	str	r3, [r2, #0]
}
 800df2e:	bf00      	nop
 800df30:	370c      	adds	r7, #12
 800df32:	46bd      	mov	sp, r7
 800df34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df38:	4770      	bx	lr
 800df3a:	bf00      	nop
 800df3c:	2000000c 	.word	0x2000000c

0800df40 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800df40:	b580      	push	{r7, lr}
 800df42:	b082      	sub	sp, #8
 800df44:	af00      	add	r7, sp, #0
 800df46:	6078      	str	r0, [r7, #4]
 800df48:	4a09      	ldr	r2, [pc, #36]	@ (800df70 <_ZN13MainPresenterD1Ev+0x30>)
 800df4a:	687b      	ldr	r3, [r7, #4]
 800df4c:	601a      	str	r2, [r3, #0]
 800df4e:	4a09      	ldr	r2, [pc, #36]	@ (800df74 <_ZN13MainPresenterD1Ev+0x34>)
 800df50:	687b      	ldr	r3, [r7, #4]
 800df52:	605a      	str	r2, [r3, #4]
 800df54:	687b      	ldr	r3, [r7, #4]
 800df56:	3304      	adds	r3, #4
 800df58:	4618      	mov	r0, r3
 800df5a:	f7ff fd4d 	bl	800d9f8 <_ZN13ModelListenerD1Ev>
 800df5e:	687b      	ldr	r3, [r7, #4]
 800df60:	4618      	mov	r0, r3
 800df62:	f7ff fd05 	bl	800d970 <_ZN8touchgfx9PresenterD1Ev>
 800df66:	687b      	ldr	r3, [r7, #4]
 800df68:	4618      	mov	r0, r3
 800df6a:	3708      	adds	r7, #8
 800df6c:	46bd      	mov	sp, r7
 800df6e:	bd80      	pop	{r7, pc}
 800df70:	0802890c 	.word	0x0802890c
 800df74:	08028930 	.word	0x08028930

0800df78 <_ZThn4_N13MainPresenterD1Ev>:
 800df78:	f1a0 0004 	sub.w	r0, r0, #4
 800df7c:	e7e0      	b.n	800df40 <_ZN13MainPresenterD1Ev>
 800df7e:	bf00      	nop

0800df80 <_ZN13MainPresenterD0Ev>:
 800df80:	b580      	push	{r7, lr}
 800df82:	b082      	sub	sp, #8
 800df84:	af00      	add	r7, sp, #0
 800df86:	6078      	str	r0, [r7, #4]
 800df88:	6878      	ldr	r0, [r7, #4]
 800df8a:	f7ff ffd9 	bl	800df40 <_ZN13MainPresenterD1Ev>
 800df8e:	2110      	movs	r1, #16
 800df90:	6878      	ldr	r0, [r7, #4]
 800df92:	f017 fd4e 	bl	8025a32 <_ZdlPvj>
 800df96:	687b      	ldr	r3, [r7, #4]
 800df98:	4618      	mov	r0, r3
 800df9a:	3708      	adds	r7, #8
 800df9c:	46bd      	mov	sp, r7
 800df9e:	bd80      	pop	{r7, pc}

0800dfa0 <_ZThn4_N13MainPresenterD0Ev>:
 800dfa0:	f1a0 0004 	sub.w	r0, r0, #4
 800dfa4:	e7ec      	b.n	800df80 <_ZN13MainPresenterD0Ev>
	...

0800dfa8 <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800dfa8:	b580      	push	{r7, lr}
 800dfaa:	b082      	sub	sp, #8
 800dfac:	af00      	add	r7, sp, #0
 800dfae:	6078      	str	r0, [r7, #4]
 800dfb0:	6039      	str	r1, [r7, #0]
    : view(v)
 800dfb2:	687b      	ldr	r3, [r7, #4]
 800dfb4:	4618      	mov	r0, r3
 800dfb6:	f7ff fcfb 	bl	800d9b0 <_ZN8touchgfx9PresenterC1Ev>
 800dfba:	687b      	ldr	r3, [r7, #4]
 800dfbc:	3304      	adds	r3, #4
 800dfbe:	4618      	mov	r0, r3
 800dfc0:	f7ff fd06 	bl	800d9d0 <_ZN13ModelListenerC1Ev>
 800dfc4:	4a06      	ldr	r2, [pc, #24]	@ (800dfe0 <_ZN13MainPresenterC1ER8MainView+0x38>)
 800dfc6:	687b      	ldr	r3, [r7, #4]
 800dfc8:	601a      	str	r2, [r3, #0]
 800dfca:	4a06      	ldr	r2, [pc, #24]	@ (800dfe4 <_ZN13MainPresenterC1ER8MainView+0x3c>)
 800dfcc:	687b      	ldr	r3, [r7, #4]
 800dfce:	605a      	str	r2, [r3, #4]
 800dfd0:	687b      	ldr	r3, [r7, #4]
 800dfd2:	683a      	ldr	r2, [r7, #0]
 800dfd4:	60da      	str	r2, [r3, #12]
{
}
 800dfd6:	687b      	ldr	r3, [r7, #4]
 800dfd8:	4618      	mov	r0, r3
 800dfda:	3708      	adds	r7, #8
 800dfdc:	46bd      	mov	sp, r7
 800dfde:	bd80      	pop	{r7, pc}
 800dfe0:	0802890c 	.word	0x0802890c
 800dfe4:	08028930 	.word	0x08028930

0800dfe8 <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800dfe8:	b480      	push	{r7}
 800dfea:	b083      	sub	sp, #12
 800dfec:	af00      	add	r7, sp, #0
 800dfee:	6078      	str	r0, [r7, #4]
}
 800dff0:	bf00      	nop
 800dff2:	370c      	adds	r7, #12
 800dff4:	46bd      	mov	sp, r7
 800dff6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dffa:	4770      	bx	lr

0800dffc <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 800dffc:	b480      	push	{r7}
 800dffe:	b083      	sub	sp, #12
 800e000:	af00      	add	r7, sp, #0
 800e002:	6078      	str	r0, [r7, #4]
}
 800e004:	bf00      	nop
 800e006:	370c      	adds	r7, #12
 800e008:	46bd      	mov	sp, r7
 800e00a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e00e:	4770      	bx	lr

0800e010 <_ZN13MainPresenter16notifyADCChangedEm>:


void MainPresenter::notifyADCChanged(uint32_t newVal){
 800e010:	b580      	push	{r7, lr}
 800e012:	b082      	sub	sp, #8
 800e014:	af00      	add	r7, sp, #0
 800e016:	6078      	str	r0, [r7, #4]
 800e018:	6039      	str	r1, [r7, #0]
	view.setVal(newVal);
 800e01a:	687b      	ldr	r3, [r7, #4]
 800e01c:	68da      	ldr	r2, [r3, #12]
 800e01e:	687b      	ldr	r3, [r7, #4]
 800e020:	68db      	ldr	r3, [r3, #12]
 800e022:	681b      	ldr	r3, [r3, #0]
 800e024:	3338      	adds	r3, #56	@ 0x38
 800e026:	681b      	ldr	r3, [r3, #0]
 800e028:	6839      	ldr	r1, [r7, #0]
 800e02a:	4610      	mov	r0, r2
 800e02c:	4798      	blx	r3
}
 800e02e:	bf00      	nop
 800e030:	3708      	adds	r7, #8
 800e032:	46bd      	mov	sp, r7
 800e034:	bd80      	pop	{r7, pc}

0800e036 <_ZThn4_N13MainPresenter16notifyADCChangedEm>:

    virtual void notifyADCChanged(uint32_t newVal);
 800e036:	f1a0 0004 	sub.w	r0, r0, #4
 800e03a:	f7ff bfe9 	b.w	800e010 <_ZN13MainPresenter16notifyADCChangedEm>

0800e03e <_ZN13MainPresenter24notifyTemperatureChangedEf>:

void MainPresenter::notifyTemperatureChanged(float newTemp){
 800e03e:	b580      	push	{r7, lr}
 800e040:	b082      	sub	sp, #8
 800e042:	af00      	add	r7, sp, #0
 800e044:	6078      	str	r0, [r7, #4]
 800e046:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(newTemp);
 800e04a:	687b      	ldr	r3, [r7, #4]
 800e04c:	68da      	ldr	r2, [r3, #12]
 800e04e:	687b      	ldr	r3, [r7, #4]
 800e050:	68db      	ldr	r3, [r3, #12]
 800e052:	681b      	ldr	r3, [r3, #0]
 800e054:	3340      	adds	r3, #64	@ 0x40
 800e056:	681b      	ldr	r3, [r3, #0]
 800e058:	ed97 0a00 	vldr	s0, [r7]
 800e05c:	4610      	mov	r0, r2
 800e05e:	4798      	blx	r3

}
 800e060:	bf00      	nop
 800e062:	3708      	adds	r7, #8
 800e064:	46bd      	mov	sp, r7
 800e066:	bd80      	pop	{r7, pc}

0800e068 <_ZThn4_N13MainPresenter24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp);
 800e068:	f1a0 0004 	sub.w	r0, r0, #4
 800e06c:	f7ff bfe7 	b.w	800e03e <_ZN13MainPresenter24notifyTemperatureChangedEf>

0800e070 <_ZN13MainPresenter21notifyHumidityChangedEf>:

void MainPresenter::notifyHumidityChanged(float newHumidity){
 800e070:	b580      	push	{r7, lr}
 800e072:	b082      	sub	sp, #8
 800e074:	af00      	add	r7, sp, #0
 800e076:	6078      	str	r0, [r7, #4]
 800e078:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(newHumidity);
 800e07c:	687b      	ldr	r3, [r7, #4]
 800e07e:	68da      	ldr	r2, [r3, #12]
 800e080:	687b      	ldr	r3, [r7, #4]
 800e082:	68db      	ldr	r3, [r3, #12]
 800e084:	681b      	ldr	r3, [r3, #0]
 800e086:	333c      	adds	r3, #60	@ 0x3c
 800e088:	681b      	ldr	r3, [r3, #0]
 800e08a:	ed97 0a00 	vldr	s0, [r7]
 800e08e:	4610      	mov	r0, r2
 800e090:	4798      	blx	r3
}
 800e092:	bf00      	nop
 800e094:	3708      	adds	r7, #8
 800e096:	46bd      	mov	sp, r7
 800e098:	bd80      	pop	{r7, pc}

0800e09a <_ZThn4_N13MainPresenter21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity);
 800e09a:	f1a0 0004 	sub.w	r0, r0, #4
 800e09e:	f7ff bfe7 	b.w	800e070 <_ZN13MainPresenter21notifyHumidityChangedEf>
	...

0800e0a4 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 800e0a4:	b580      	push	{r7, lr}
 800e0a6:	b082      	sub	sp, #8
 800e0a8:	af00      	add	r7, sp, #0
 800e0aa:	6078      	str	r0, [r7, #4]
 800e0ac:	4a05      	ldr	r2, [pc, #20]	@ (800e0c4 <_ZN8MainViewD1Ev+0x20>)
 800e0ae:	687b      	ldr	r3, [r7, #4]
 800e0b0:	601a      	str	r2, [r3, #0]
 800e0b2:	687b      	ldr	r3, [r7, #4]
 800e0b4:	4618      	mov	r0, r3
 800e0b6:	f7fe fb69 	bl	800c78c <_ZN12MainViewBaseD1Ev>
 800e0ba:	687b      	ldr	r3, [r7, #4]
 800e0bc:	4618      	mov	r0, r3
 800e0be:	3708      	adds	r7, #8
 800e0c0:	46bd      	mov	sp, r7
 800e0c2:	bd80      	pop	{r7, pc}
 800e0c4:	08028958 	.word	0x08028958

0800e0c8 <_ZN8MainViewD0Ev>:
 800e0c8:	b580      	push	{r7, lr}
 800e0ca:	b082      	sub	sp, #8
 800e0cc:	af00      	add	r7, sp, #0
 800e0ce:	6078      	str	r0, [r7, #4]
 800e0d0:	6878      	ldr	r0, [r7, #4]
 800e0d2:	f7ff ffe7 	bl	800e0a4 <_ZN8MainViewD1Ev>
 800e0d6:	f44f 7176 	mov.w	r1, #984	@ 0x3d8
 800e0da:	6878      	ldr	r0, [r7, #4]
 800e0dc:	f017 fca9 	bl	8025a32 <_ZdlPvj>
 800e0e0:	687b      	ldr	r3, [r7, #4]
 800e0e2:	4618      	mov	r0, r3
 800e0e4:	3708      	adds	r7, #8
 800e0e6:	46bd      	mov	sp, r7
 800e0e8:	bd80      	pop	{r7, pc}
	...

0800e0ec <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800e0ec:	b580      	push	{r7, lr}
 800e0ee:	b082      	sub	sp, #8
 800e0f0:	af00      	add	r7, sp, #0
 800e0f2:	6078      	str	r0, [r7, #4]
 800e0f4:	687b      	ldr	r3, [r7, #4]
 800e0f6:	4618      	mov	r0, r3
 800e0f8:	f7fd fe86 	bl	800be08 <_ZN12MainViewBaseC1Ev>
 800e0fc:	4a05      	ldr	r2, [pc, #20]	@ (800e114 <_ZN8MainViewC1Ev+0x28>)
 800e0fe:	687b      	ldr	r3, [r7, #4]
 800e100:	601a      	str	r2, [r3, #0]
 800e102:	687b      	ldr	r3, [r7, #4]
 800e104:	2200      	movs	r2, #0
 800e106:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
 800e10a:	687b      	ldr	r3, [r7, #4]
 800e10c:	4618      	mov	r0, r3
 800e10e:	3708      	adds	r7, #8
 800e110:	46bd      	mov	sp, r7
 800e112:	bd80      	pop	{r7, pc}
 800e114:	08028958 	.word	0x08028958

0800e118 <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 800e118:	b580      	push	{r7, lr}
 800e11a:	b082      	sub	sp, #8
 800e11c:	af00      	add	r7, sp, #0
 800e11e:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 800e120:	6878      	ldr	r0, [r7, #4]
 800e122:	f000 f85b 	bl	800e1dc <_ZN8MainView17updateGFXElementsEv>
    MainViewBase::setupScreen();
 800e126:	687b      	ldr	r3, [r7, #4]
 800e128:	4618      	mov	r0, r3
 800e12a:	f7fe fb90 	bl	800c84e <_ZN12MainViewBase11setupScreenEv>

}
 800e12e:	bf00      	nop
 800e130:	3708      	adds	r7, #8
 800e132:	46bd      	mov	sp, r7
 800e134:	bd80      	pop	{r7, pc}

0800e136 <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 800e136:	b580      	push	{r7, lr}
 800e138:	b082      	sub	sp, #8
 800e13a:	af00      	add	r7, sp, #0
 800e13c:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800e13e:	687b      	ldr	r3, [r7, #4]
 800e140:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800e144:	1c5a      	adds	r2, r3, #1
 800e146:	b2d1      	uxtb	r1, r2
 800e148:	687a      	ldr	r2, [r7, #4]
 800e14a:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800e14e:	2b2a      	cmp	r3, #42	@ 0x2a
 800e150:	d804      	bhi.n	800e15c <_ZN8MainView13increaseValueEv+0x26>
 800e152:	687b      	ldr	r3, [r7, #4]
 800e154:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800e158:	781a      	ldrb	r2, [r3, #0]
 800e15a:	e000      	b.n	800e15e <_ZN8MainView13increaseValueEv+0x28>
 800e15c:	222a      	movs	r2, #42	@ 0x2a
 800e15e:	687b      	ldr	r3, [r7, #4]
 800e160:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800e164:	6878      	ldr	r0, [r7, #4]
 800e166:	f000 f839 	bl	800e1dc <_ZN8MainView17updateGFXElementsEv>
}
 800e16a:	bf00      	nop
 800e16c:	3708      	adds	r7, #8
 800e16e:	46bd      	mov	sp, r7
 800e170:	bd80      	pop	{r7, pc}

0800e172 <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 800e172:	b580      	push	{r7, lr}
 800e174:	b082      	sub	sp, #8
 800e176:	af00      	add	r7, sp, #0
 800e178:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 800e17a:	687b      	ldr	r3, [r7, #4]
 800e17c:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800e180:	1e5a      	subs	r2, r3, #1
 800e182:	b2d1      	uxtb	r1, r2
 800e184:	687a      	ldr	r2, [r7, #4]
 800e186:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800e18a:	2b00      	cmp	r3, #0
 800e18c:	d004      	beq.n	800e198 <_ZN8MainView13decreaseValueEv+0x26>
 800e18e:	687b      	ldr	r3, [r7, #4]
 800e190:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800e194:	781a      	ldrb	r2, [r3, #0]
 800e196:	e000      	b.n	800e19a <_ZN8MainView13decreaseValueEv+0x28>
 800e198:	2200      	movs	r2, #0
 800e19a:	687b      	ldr	r3, [r7, #4]
 800e19c:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800e1a0:	6878      	ldr	r0, [r7, #4]
 800e1a2:	f000 f81b 	bl	800e1dc <_ZN8MainView17updateGFXElementsEv>
}
 800e1a6:	bf00      	nop
 800e1a8:	3708      	adds	r7, #8
 800e1aa:	46bd      	mov	sp, r7
 800e1ac:	bd80      	pop	{r7, pc}
	...

0800e1b0 <_ZN8MainView12ToggleLightsEv>:

void MainView::ToggleLights(){
 800e1b0:	b580      	push	{r7, lr}
 800e1b2:	b082      	sub	sp, #8
 800e1b4:	af00      	add	r7, sp, #0
 800e1b6:	6078      	str	r0, [r7, #4]
	//HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
	HAL_GPIO_TogglePin(PUMP1_EN_GPIO_Port, PUMP1_EN_Pin);
 800e1b8:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 800e1bc:	4805      	ldr	r0, [pc, #20]	@ (800e1d4 <_ZN8MainView12ToggleLightsEv+0x24>)
 800e1be:	f7f5 ff42 	bl	8004046 <HAL_GPIO_TogglePin>
	HAL_GPIO_TogglePin(PUMP2_EN_GPIO_Port, PUMP2_EN_Pin);
 800e1c2:	2140      	movs	r1, #64	@ 0x40
 800e1c4:	4804      	ldr	r0, [pc, #16]	@ (800e1d8 <_ZN8MainView12ToggleLightsEv+0x28>)
 800e1c6:	f7f5 ff3e 	bl	8004046 <HAL_GPIO_TogglePin>


}
 800e1ca:	bf00      	nop
 800e1cc:	3708      	adds	r7, #8
 800e1ce:	46bd      	mov	sp, r7
 800e1d0:	bd80      	pop	{r7, pc}
 800e1d2:	bf00      	nop
 800e1d4:	40020400 	.word	0x40020400
 800e1d8:	40020800 	.word	0x40020800

0800e1dc <_ZN8MainView17updateGFXElementsEv>:
void MainView::updateGFXElements()
{
 800e1dc:	b480      	push	{r7}
 800e1de:	b083      	sub	sp, #12
 800e1e0:	af00      	add	r7, sp, #0
 800e1e2:	6078      	str	r0, [r7, #4]
//    }
//    // Invalidate all GFX area, which will result in it being redrawn in next tick.
//    countTxt.invalidate();
//    buttonUp.invalidate();
//    buttonDown.invalidate();
}
 800e1e4:	bf00      	nop
 800e1e6:	370c      	adds	r7, #12
 800e1e8:	46bd      	mov	sp, r7
 800e1ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1ee:	4770      	bx	lr

0800e1f0 <_ZN8MainView6setValEm>:

void MainView::setVal(uint32_t val){
 800e1f0:	b580      	push	{r7, lr}
 800e1f2:	b082      	sub	sp, #8
 800e1f4:	af00      	add	r7, sp, #0
 800e1f6:	6078      	str	r0, [r7, #4]
 800e1f8:	6039      	str	r1, [r7, #0]

	Unicode::snprintf(ADCVALBuffer, ADCVAL_SIZE, "%d", val);
 800e1fa:	687b      	ldr	r3, [r7, #4]
 800e1fc:	f503 7063 	add.w	r0, r3, #908	@ 0x38c
 800e200:	683b      	ldr	r3, [r7, #0]
 800e202:	4a07      	ldr	r2, [pc, #28]	@ (800e220 <_ZN8MainView6setValEm+0x30>)
 800e204:	2114      	movs	r1, #20
 800e206:	f008 fe8b 	bl	8016f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ADCVAL.invalidate();
 800e20a:	687b      	ldr	r3, [r7, #4]
 800e20c:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800e210:	4618      	mov	r0, r3
 800e212:	f006 ff2b 	bl	801506c <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800e216:	bf00      	nop
 800e218:	3708      	adds	r7, #8
 800e21a:	46bd      	mov	sp, r7
 800e21c:	bd80      	pop	{r7, pc}
 800e21e:	bf00      	nop
 800e220:	08027538 	.word	0x08027538

0800e224 <_ZN8MainView14setTemperatureEf>:

void MainView::setTemperature(float temp){
 800e224:	b580      	push	{r7, lr}
 800e226:	b082      	sub	sp, #8
 800e228:	af00      	add	r7, sp, #0
 800e22a:	6078      	str	r0, [r7, #4]
 800e22c:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(TEMPVALBuffer, TEMPVAL_SIZE, "%.1f", temp);
 800e230:	687b      	ldr	r3, [r7, #4]
 800e232:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800e236:	ed97 0a00 	vldr	s0, [r7]
 800e23a:	4a07      	ldr	r2, [pc, #28]	@ (800e258 <_ZN8MainView14setTemperatureEf+0x34>)
 800e23c:	2114      	movs	r1, #20
 800e23e:	4618      	mov	r0, r3
 800e240:	f7ff fcc1 	bl	800dbc6 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	TEMPVAL.invalidate();
 800e244:	687b      	ldr	r3, [r7, #4]
 800e246:	33f0      	adds	r3, #240	@ 0xf0
 800e248:	4618      	mov	r0, r3
 800e24a:	f006 ff0f 	bl	801506c <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800e24e:	bf00      	nop
 800e250:	3708      	adds	r7, #8
 800e252:	46bd      	mov	sp, r7
 800e254:	bd80      	pop	{r7, pc}
 800e256:	bf00      	nop
 800e258:	0802753c 	.word	0x0802753c

0800e25c <_ZN8MainView11setHumidityEf>:

void MainView::setHumidity(float humidity){
 800e25c:	b580      	push	{r7, lr}
 800e25e:	b082      	sub	sp, #8
 800e260:	af00      	add	r7, sp, #0
 800e262:	6078      	str	r0, [r7, #4]
 800e264:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(HUMVALBuffer, HUMVAL_SIZE, "%.1f", humidity);
 800e268:	687b      	ldr	r3, [r7, #4]
 800e26a:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800e26e:	ed97 0a00 	vldr	s0, [r7]
 800e272:	4a07      	ldr	r2, [pc, #28]	@ (800e290 <_ZN8MainView11setHumidityEf+0x34>)
 800e274:	2114      	movs	r1, #20
 800e276:	4618      	mov	r0, r3
 800e278:	f7ff fca5 	bl	800dbc6 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	HUMVAL.invalidate();
 800e27c:	687b      	ldr	r3, [r7, #4]
 800e27e:	33a4      	adds	r3, #164	@ 0xa4
 800e280:	4618      	mov	r0, r3
 800e282:	f006 fef3 	bl	801506c <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800e286:	bf00      	nop
 800e288:	3708      	adds	r7, #8
 800e28a:	46bd      	mov	sp, r7
 800e28c:	bd80      	pop	{r7, pc}
 800e28e:	bf00      	nop
 800e290:	0802753c 	.word	0x0802753c

0800e294 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 800e294:	b480      	push	{r7}
 800e296:	b083      	sub	sp, #12
 800e298:	af00      	add	r7, sp, #0
 800e29a:	6078      	str	r0, [r7, #4]
 800e29c:	687b      	ldr	r3, [r7, #4]
 800e29e:	2200      	movs	r2, #0
 800e2a0:	601a      	str	r2, [r3, #0]
{
}
 800e2a2:	687b      	ldr	r3, [r7, #4]
 800e2a4:	4618      	mov	r0, r3
 800e2a6:	370c      	adds	r7, #12
 800e2a8:	46bd      	mov	sp, r7
 800e2aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2ae:	4770      	bx	lr

0800e2b0 <_ZN5Model4tickEv>:

void Model::tick()
{
 800e2b0:	b580      	push	{r7, lr}
 800e2b2:	b088      	sub	sp, #32
 800e2b4:	af00      	add	r7, sp, #0
 800e2b6:	6078      	str	r0, [r7, #4]

	float humidity = hum;
 800e2b8:	4b2c      	ldr	r3, [pc, #176]	@ (800e36c <_ZN5Model4tickEv+0xbc>)
 800e2ba:	681b      	ldr	r3, [r3, #0]
 800e2bc:	61fb      	str	r3, [r7, #28]
	float temperature = temp;
 800e2be:	4b2c      	ldr	r3, [pc, #176]	@ (800e370 <_ZN5Model4tickEv+0xc0>)
 800e2c0:	681b      	ldr	r3, [r3, #0]
 800e2c2:	61bb      	str	r3, [r7, #24]
	//uint32_t val = htim4.Instance->CCR2;
	uint32_t val = value_adc;
 800e2c4:	4b2b      	ldr	r3, [pc, #172]	@ (800e374 <_ZN5Model4tickEv+0xc4>)
 800e2c6:	681b      	ldr	r3, [r3, #0]
 800e2c8:	617b      	str	r3, [r7, #20]
	float temp_set = temp_set_point;
 800e2ca:	4b2b      	ldr	r3, [pc, #172]	@ (800e378 <_ZN5Model4tickEv+0xc8>)
 800e2cc:	681b      	ldr	r3, [r3, #0]
 800e2ce:	613b      	str	r3, [r7, #16]
	float humidity_set = humidity_set_point;
 800e2d0:	4b2a      	ldr	r3, [pc, #168]	@ (800e37c <_ZN5Model4tickEv+0xcc>)
 800e2d2:	681b      	ldr	r3, [r3, #0]
 800e2d4:	60fb      	str	r3, [r7, #12]
	int lights_set = lights_set_point;
 800e2d6:	4b2a      	ldr	r3, [pc, #168]	@ (800e380 <_ZN5Model4tickEv+0xd0>)
 800e2d8:	681b      	ldr	r3, [r3, #0]
 800e2da:	60bb      	str	r3, [r7, #8]



	if (modelListener != 0) {
 800e2dc:	687b      	ldr	r3, [r7, #4]
 800e2de:	681b      	ldr	r3, [r3, #0]
 800e2e0:	2b00      	cmp	r3, #0
 800e2e2:	d03f      	beq.n	800e364 <_ZN5Model4tickEv+0xb4>
		modelListener -> notifyADCChanged(val);
 800e2e4:	687b      	ldr	r3, [r7, #4]
 800e2e6:	681a      	ldr	r2, [r3, #0]
 800e2e8:	687b      	ldr	r3, [r7, #4]
 800e2ea:	681b      	ldr	r3, [r3, #0]
 800e2ec:	681b      	ldr	r3, [r3, #0]
 800e2ee:	3308      	adds	r3, #8
 800e2f0:	681b      	ldr	r3, [r3, #0]
 800e2f2:	6979      	ldr	r1, [r7, #20]
 800e2f4:	4610      	mov	r0, r2
 800e2f6:	4798      	blx	r3
		modelListener -> notifyTemperatureChanged(temperature);
 800e2f8:	687b      	ldr	r3, [r7, #4]
 800e2fa:	681a      	ldr	r2, [r3, #0]
 800e2fc:	687b      	ldr	r3, [r7, #4]
 800e2fe:	681b      	ldr	r3, [r3, #0]
 800e300:	681b      	ldr	r3, [r3, #0]
 800e302:	330c      	adds	r3, #12
 800e304:	681b      	ldr	r3, [r3, #0]
 800e306:	ed97 0a06 	vldr	s0, [r7, #24]
 800e30a:	4610      	mov	r0, r2
 800e30c:	4798      	blx	r3
		modelListener -> notifyHumidityChanged(humidity);
 800e30e:	687b      	ldr	r3, [r7, #4]
 800e310:	681a      	ldr	r2, [r3, #0]
 800e312:	687b      	ldr	r3, [r7, #4]
 800e314:	681b      	ldr	r3, [r3, #0]
 800e316:	681b      	ldr	r3, [r3, #0]
 800e318:	3310      	adds	r3, #16
 800e31a:	681b      	ldr	r3, [r3, #0]
 800e31c:	ed97 0a07 	vldr	s0, [r7, #28]
 800e320:	4610      	mov	r0, r2
 800e322:	4798      	blx	r3
		modelListener -> notifyHumiditySetPointChanged(humidity_set);
 800e324:	687b      	ldr	r3, [r7, #4]
 800e326:	681a      	ldr	r2, [r3, #0]
 800e328:	687b      	ldr	r3, [r7, #4]
 800e32a:	681b      	ldr	r3, [r3, #0]
 800e32c:	681b      	ldr	r3, [r3, #0]
 800e32e:	3314      	adds	r3, #20
 800e330:	681b      	ldr	r3, [r3, #0]
 800e332:	ed97 0a03 	vldr	s0, [r7, #12]
 800e336:	4610      	mov	r0, r2
 800e338:	4798      	blx	r3
		modelListener -> notifyTemperatureSetPointChanged(temp_set);
 800e33a:	687b      	ldr	r3, [r7, #4]
 800e33c:	681a      	ldr	r2, [r3, #0]
 800e33e:	687b      	ldr	r3, [r7, #4]
 800e340:	681b      	ldr	r3, [r3, #0]
 800e342:	681b      	ldr	r3, [r3, #0]
 800e344:	3318      	adds	r3, #24
 800e346:	681b      	ldr	r3, [r3, #0]
 800e348:	ed97 0a04 	vldr	s0, [r7, #16]
 800e34c:	4610      	mov	r0, r2
 800e34e:	4798      	blx	r3
		modelListener -> notifyLightsSetPointChanged(lights_set);
 800e350:	687b      	ldr	r3, [r7, #4]
 800e352:	681a      	ldr	r2, [r3, #0]
 800e354:	687b      	ldr	r3, [r7, #4]
 800e356:	681b      	ldr	r3, [r3, #0]
 800e358:	681b      	ldr	r3, [r3, #0]
 800e35a:	331c      	adds	r3, #28
 800e35c:	681b      	ldr	r3, [r3, #0]
 800e35e:	68b9      	ldr	r1, [r7, #8]
 800e360:	4610      	mov	r0, r2
 800e362:	4798      	blx	r3
	}

//    virtual void notifyHumiditySetPointChanged(float setPoint) {}
//    virtual void notifyTemperatureSetPointChanged(float setPoint) {}
//    virtual void notifyLightsSetPointChanged(float setPoint) {}
}
 800e364:	bf00      	nop
 800e366:	3720      	adds	r7, #32
 800e368:	46bd      	mov	sp, r7
 800e36a:	bd80      	pop	{r7, pc}
 800e36c:	200005d8 	.word	0x200005d8
 800e370:	200005d4 	.word	0x200005d4
 800e374:	200005d0 	.word	0x200005d0
 800e378:	20000004 	.word	0x20000004
 800e37c:	20000008 	.word	0x20000008
 800e380:	2000000c 	.word	0x2000000c

0800e384 <_ZN27temperature_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~temperature_screenPresenter() {}
 800e384:	b580      	push	{r7, lr}
 800e386:	b082      	sub	sp, #8
 800e388:	af00      	add	r7, sp, #0
 800e38a:	6078      	str	r0, [r7, #4]
 800e38c:	4a09      	ldr	r2, [pc, #36]	@ (800e3b4 <_ZN27temperature_screenPresenterD1Ev+0x30>)
 800e38e:	687b      	ldr	r3, [r7, #4]
 800e390:	601a      	str	r2, [r3, #0]
 800e392:	4a09      	ldr	r2, [pc, #36]	@ (800e3b8 <_ZN27temperature_screenPresenterD1Ev+0x34>)
 800e394:	687b      	ldr	r3, [r7, #4]
 800e396:	605a      	str	r2, [r3, #4]
 800e398:	687b      	ldr	r3, [r7, #4]
 800e39a:	3304      	adds	r3, #4
 800e39c:	4618      	mov	r0, r3
 800e39e:	f7ff fb2b 	bl	800d9f8 <_ZN13ModelListenerD1Ev>
 800e3a2:	687b      	ldr	r3, [r7, #4]
 800e3a4:	4618      	mov	r0, r3
 800e3a6:	f7ff fae3 	bl	800d970 <_ZN8touchgfx9PresenterD1Ev>
 800e3aa:	687b      	ldr	r3, [r7, #4]
 800e3ac:	4618      	mov	r0, r3
 800e3ae:	3708      	adds	r7, #8
 800e3b0:	46bd      	mov	sp, r7
 800e3b2:	bd80      	pop	{r7, pc}
 800e3b4:	080289a4 	.word	0x080289a4
 800e3b8:	080289c0 	.word	0x080289c0

0800e3bc <_ZThn4_N27temperature_screenPresenterD1Ev>:
 800e3bc:	f1a0 0004 	sub.w	r0, r0, #4
 800e3c0:	e7e0      	b.n	800e384 <_ZN27temperature_screenPresenterD1Ev>
 800e3c2:	bf00      	nop

0800e3c4 <_ZN27temperature_screenPresenterD0Ev>:
 800e3c4:	b580      	push	{r7, lr}
 800e3c6:	b082      	sub	sp, #8
 800e3c8:	af00      	add	r7, sp, #0
 800e3ca:	6078      	str	r0, [r7, #4]
 800e3cc:	6878      	ldr	r0, [r7, #4]
 800e3ce:	f7ff ffd9 	bl	800e384 <_ZN27temperature_screenPresenterD1Ev>
 800e3d2:	2110      	movs	r1, #16
 800e3d4:	6878      	ldr	r0, [r7, #4]
 800e3d6:	f017 fb2c 	bl	8025a32 <_ZdlPvj>
 800e3da:	687b      	ldr	r3, [r7, #4]
 800e3dc:	4618      	mov	r0, r3
 800e3de:	3708      	adds	r7, #8
 800e3e0:	46bd      	mov	sp, r7
 800e3e2:	bd80      	pop	{r7, pc}

0800e3e4 <_ZThn4_N27temperature_screenPresenterD0Ev>:
 800e3e4:	f1a0 0004 	sub.w	r0, r0, #4
 800e3e8:	e7ec      	b.n	800e3c4 <_ZN27temperature_screenPresenterD0Ev>
	...

0800e3ec <_ZN27temperature_screenPresenterC1ER22temperature_screenView>:
#include <gui/temperature_screen_screen/temperature_screenView.hpp>
#include <gui/temperature_screen_screen/temperature_screenPresenter.hpp>

temperature_screenPresenter::temperature_screenPresenter(temperature_screenView& v)
 800e3ec:	b580      	push	{r7, lr}
 800e3ee:	b082      	sub	sp, #8
 800e3f0:	af00      	add	r7, sp, #0
 800e3f2:	6078      	str	r0, [r7, #4]
 800e3f4:	6039      	str	r1, [r7, #0]
    : view(v)
 800e3f6:	687b      	ldr	r3, [r7, #4]
 800e3f8:	4618      	mov	r0, r3
 800e3fa:	f7ff fad9 	bl	800d9b0 <_ZN8touchgfx9PresenterC1Ev>
 800e3fe:	687b      	ldr	r3, [r7, #4]
 800e400:	3304      	adds	r3, #4
 800e402:	4618      	mov	r0, r3
 800e404:	f7ff fae4 	bl	800d9d0 <_ZN13ModelListenerC1Ev>
 800e408:	4a06      	ldr	r2, [pc, #24]	@ (800e424 <_ZN27temperature_screenPresenterC1ER22temperature_screenView+0x38>)
 800e40a:	687b      	ldr	r3, [r7, #4]
 800e40c:	601a      	str	r2, [r3, #0]
 800e40e:	4a06      	ldr	r2, [pc, #24]	@ (800e428 <_ZN27temperature_screenPresenterC1ER22temperature_screenView+0x3c>)
 800e410:	687b      	ldr	r3, [r7, #4]
 800e412:	605a      	str	r2, [r3, #4]
 800e414:	687b      	ldr	r3, [r7, #4]
 800e416:	683a      	ldr	r2, [r7, #0]
 800e418:	60da      	str	r2, [r3, #12]
{

}
 800e41a:	687b      	ldr	r3, [r7, #4]
 800e41c:	4618      	mov	r0, r3
 800e41e:	3708      	adds	r7, #8
 800e420:	46bd      	mov	sp, r7
 800e422:	bd80      	pop	{r7, pc}
 800e424:	080289a4 	.word	0x080289a4
 800e428:	080289c0 	.word	0x080289c0

0800e42c <_ZN27temperature_screenPresenter8activateEv>:

void temperature_screenPresenter::activate()
{
 800e42c:	b480      	push	{r7}
 800e42e:	b083      	sub	sp, #12
 800e430:	af00      	add	r7, sp, #0
 800e432:	6078      	str	r0, [r7, #4]

}
 800e434:	bf00      	nop
 800e436:	370c      	adds	r7, #12
 800e438:	46bd      	mov	sp, r7
 800e43a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e43e:	4770      	bx	lr

0800e440 <_ZN27temperature_screenPresenter10deactivateEv>:

void temperature_screenPresenter::deactivate()
{
 800e440:	b480      	push	{r7}
 800e442:	b083      	sub	sp, #12
 800e444:	af00      	add	r7, sp, #0
 800e446:	6078      	str	r0, [r7, #4]

}
 800e448:	bf00      	nop
 800e44a:	370c      	adds	r7, #12
 800e44c:	46bd      	mov	sp, r7
 800e44e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e452:	4770      	bx	lr

0800e454 <_ZN27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>:

void temperature_screenPresenter::notifyTemperatureSetPointChanged(float setPoint)
{
 800e454:	b580      	push	{r7, lr}
 800e456:	b082      	sub	sp, #8
 800e458:	af00      	add	r7, sp, #0
 800e45a:	6078      	str	r0, [r7, #4]
 800e45c:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(setPoint);
 800e460:	687b      	ldr	r3, [r7, #4]
 800e462:	68da      	ldr	r2, [r3, #12]
 800e464:	687b      	ldr	r3, [r7, #4]
 800e466:	68db      	ldr	r3, [r3, #12]
 800e468:	681b      	ldr	r3, [r3, #0]
 800e46a:	3334      	adds	r3, #52	@ 0x34
 800e46c:	681b      	ldr	r3, [r3, #0]
 800e46e:	ed97 0a00 	vldr	s0, [r7]
 800e472:	4610      	mov	r0, r2
 800e474:	4798      	blx	r3
}
 800e476:	bf00      	nop
 800e478:	3708      	adds	r7, #8
 800e47a:	46bd      	mov	sp, r7
 800e47c:	bd80      	pop	{r7, pc}

0800e47e <_ZThn4_N27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>:

    virtual void notifyTemperatureSetPointChanged(float setPoint);
 800e47e:	f1a0 0004 	sub.w	r0, r0, #4
 800e482:	f7ff bfe7 	b.w	800e454 <_ZN27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>
	...

0800e488 <_ZN22temperature_screenViewD1Ev>:

class temperature_screenView : public temperature_screenViewBase
{
public:
    temperature_screenView();
    virtual ~temperature_screenView() {}
 800e488:	b580      	push	{r7, lr}
 800e48a:	b082      	sub	sp, #8
 800e48c:	af00      	add	r7, sp, #0
 800e48e:	6078      	str	r0, [r7, #4]
 800e490:	4a05      	ldr	r2, [pc, #20]	@ (800e4a8 <_ZN22temperature_screenViewD1Ev+0x20>)
 800e492:	687b      	ldr	r3, [r7, #4]
 800e494:	601a      	str	r2, [r3, #0]
 800e496:	687b      	ldr	r3, [r7, #4]
 800e498:	4618      	mov	r0, r3
 800e49a:	f7fe fe5d 	bl	800d158 <_ZN26temperature_screenViewBaseD1Ev>
 800e49e:	687b      	ldr	r3, [r7, #4]
 800e4a0:	4618      	mov	r0, r3
 800e4a2:	3708      	adds	r7, #8
 800e4a4:	46bd      	mov	sp, r7
 800e4a6:	bd80      	pop	{r7, pc}
 800e4a8:	080289e8 	.word	0x080289e8

0800e4ac <_ZN22temperature_screenViewD0Ev>:
 800e4ac:	b580      	push	{r7, lr}
 800e4ae:	b082      	sub	sp, #8
 800e4b0:	af00      	add	r7, sp, #0
 800e4b2:	6078      	str	r0, [r7, #4]
 800e4b4:	6878      	ldr	r0, [r7, #4]
 800e4b6:	f7ff ffe7 	bl	800e488 <_ZN22temperature_screenViewD1Ev>
 800e4ba:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800e4be:	6878      	ldr	r0, [r7, #4]
 800e4c0:	f017 fab7 	bl	8025a32 <_ZdlPvj>
 800e4c4:	687b      	ldr	r3, [r7, #4]
 800e4c6:	4618      	mov	r0, r3
 800e4c8:	3708      	adds	r7, #8
 800e4ca:	46bd      	mov	sp, r7
 800e4cc:	bd80      	pop	{r7, pc}
	...

0800e4d0 <_ZN22temperature_screenViewC1Ev>:
#include <gui/temperature_screen_screen/temperature_screenView.hpp>

temperature_screenView::temperature_screenView()
 800e4d0:	b580      	push	{r7, lr}
 800e4d2:	b082      	sub	sp, #8
 800e4d4:	af00      	add	r7, sp, #0
 800e4d6:	6078      	str	r0, [r7, #4]
 800e4d8:	687b      	ldr	r3, [r7, #4]
 800e4da:	4618      	mov	r0, r3
 800e4dc:	f7fe fb8e 	bl	800cbfc <_ZN26temperature_screenViewBaseC1Ev>
 800e4e0:	4a03      	ldr	r2, [pc, #12]	@ (800e4f0 <_ZN22temperature_screenViewC1Ev+0x20>)
 800e4e2:	687b      	ldr	r3, [r7, #4]
 800e4e4:	601a      	str	r2, [r3, #0]
{

}
 800e4e6:	687b      	ldr	r3, [r7, #4]
 800e4e8:	4618      	mov	r0, r3
 800e4ea:	3708      	adds	r7, #8
 800e4ec:	46bd      	mov	sp, r7
 800e4ee:	bd80      	pop	{r7, pc}
 800e4f0:	080289e8 	.word	0x080289e8

0800e4f4 <_ZN22temperature_screenView11setupScreenEv>:

void temperature_screenView::setupScreen()
{
 800e4f4:	b580      	push	{r7, lr}
 800e4f6:	b082      	sub	sp, #8
 800e4f8:	af00      	add	r7, sp, #0
 800e4fa:	6078      	str	r0, [r7, #4]
    temperature_screenViewBase::setupScreen();
 800e4fc:	687b      	ldr	r3, [r7, #4]
 800e4fe:	4618      	mov	r0, r3
 800e500:	f7fe fe7b 	bl	800d1fa <_ZN26temperature_screenViewBase11setupScreenEv>
}
 800e504:	bf00      	nop
 800e506:	3708      	adds	r7, #8
 800e508:	46bd      	mov	sp, r7
 800e50a:	bd80      	pop	{r7, pc}

0800e50c <_ZN22temperature_screenView14tearDownScreenEv>:

void temperature_screenView::tearDownScreen()
{
 800e50c:	b580      	push	{r7, lr}
 800e50e:	b082      	sub	sp, #8
 800e510:	af00      	add	r7, sp, #0
 800e512:	6078      	str	r0, [r7, #4]
    temperature_screenViewBase::tearDownScreen();
 800e514:	687b      	ldr	r3, [r7, #4]
 800e516:	4618      	mov	r0, r3
 800e518:	f7fb fbc4 	bl	8009ca4 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800e51c:	bf00      	nop
 800e51e:	3708      	adds	r7, #8
 800e520:	46bd      	mov	sp, r7
 800e522:	bd80      	pop	{r7, pc}

0800e524 <_ZN22temperature_screenView14setTemperatureEf>:


void temperature_screenView::setTemperature(float newVal){
 800e524:	b580      	push	{r7, lr}
 800e526:	b082      	sub	sp, #8
 800e528:	af00      	add	r7, sp, #0
 800e52a:	6078      	str	r0, [r7, #4]
 800e52c:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(tempValBuffer, TEMPVAL_SIZE, "%.1f", newVal);
 800e530:	687b      	ldr	r3, [r7, #4]
 800e532:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800e536:	ed97 0a00 	vldr	s0, [r7]
 800e53a:	4a07      	ldr	r2, [pc, #28]	@ (800e558 <_ZN22temperature_screenView14setTemperatureEf+0x34>)
 800e53c:	210a      	movs	r1, #10
 800e53e:	4618      	mov	r0, r3
 800e540:	f7ff fb41 	bl	800dbc6 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	tempVal.invalidate();
 800e544:	687b      	ldr	r3, [r7, #4]
 800e546:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800e54a:	4618      	mov	r0, r3
 800e54c:	f006 fd8e 	bl	801506c <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800e550:	bf00      	nop
 800e552:	3708      	adds	r7, #8
 800e554:	46bd      	mov	sp, r7
 800e556:	bd80      	pop	{r7, pc}
 800e558:	08027544 	.word	0x08027544

0800e55c <_ZN22temperature_screenView8increaseEv>:

void temperature_screenView::increase()
{
 800e55c:	b480      	push	{r7}
 800e55e:	b083      	sub	sp, #12
 800e560:	af00      	add	r7, sp, #0
 800e562:	6078      	str	r0, [r7, #4]
	temp_set_point = temp_set_point + 5;
 800e564:	4b07      	ldr	r3, [pc, #28]	@ (800e584 <_ZN22temperature_screenView8increaseEv+0x28>)
 800e566:	edd3 7a00 	vldr	s15, [r3]
 800e56a:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800e56e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e572:	4b04      	ldr	r3, [pc, #16]	@ (800e584 <_ZN22temperature_screenView8increaseEv+0x28>)
 800e574:	edc3 7a00 	vstr	s15, [r3]
}
 800e578:	bf00      	nop
 800e57a:	370c      	adds	r7, #12
 800e57c:	46bd      	mov	sp, r7
 800e57e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e582:	4770      	bx	lr
 800e584:	20000004 	.word	0x20000004

0800e588 <_ZN22temperature_screenView8decreaseEv>:

void temperature_screenView::decrease()
{
 800e588:	b480      	push	{r7}
 800e58a:	b083      	sub	sp, #12
 800e58c:	af00      	add	r7, sp, #0
 800e58e:	6078      	str	r0, [r7, #4]
	temp_set_point = temp_set_point - 5;
 800e590:	4b07      	ldr	r3, [pc, #28]	@ (800e5b0 <_ZN22temperature_screenView8decreaseEv+0x28>)
 800e592:	edd3 7a00 	vldr	s15, [r3]
 800e596:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800e59a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e59e:	4b04      	ldr	r3, [pc, #16]	@ (800e5b0 <_ZN22temperature_screenView8decreaseEv+0x28>)
 800e5a0:	edc3 7a00 	vstr	s15, [r3]
}
 800e5a4:	bf00      	nop
 800e5a6:	370c      	adds	r7, #12
 800e5a8:	46bd      	mov	sp, r7
 800e5aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5ae:	4770      	bx	lr
 800e5b0:	20000004 	.word	0x20000004

0800e5b4 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800e5b4:	b480      	push	{r7}
 800e5b6:	b083      	sub	sp, #12
 800e5b8:	af00      	add	r7, sp, #0
 800e5ba:	6078      	str	r0, [r7, #4]
    {
 800e5bc:	4a04      	ldr	r2, [pc, #16]	@ (800e5d0 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800e5be:	687b      	ldr	r3, [r7, #4]
 800e5c0:	601a      	str	r2, [r3, #0]
    }
 800e5c2:	687b      	ldr	r3, [r7, #4]
 800e5c4:	4618      	mov	r0, r3
 800e5c6:	370c      	adds	r7, #12
 800e5c8:	46bd      	mov	sp, r7
 800e5ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e5ce:	4770      	bx	lr
 800e5d0:	08028a40 	.word	0x08028a40

0800e5d4 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800e5d4:	b580      	push	{r7, lr}
 800e5d6:	b082      	sub	sp, #8
 800e5d8:	af00      	add	r7, sp, #0
 800e5da:	6078      	str	r0, [r7, #4]
    }
 800e5dc:	6878      	ldr	r0, [r7, #4]
 800e5de:	f7ff ffe9 	bl	800e5b4 <_ZN8touchgfx15TouchControllerD1Ev>
 800e5e2:	2104      	movs	r1, #4
 800e5e4:	6878      	ldr	r0, [r7, #4]
 800e5e6:	f017 fa24 	bl	8025a32 <_ZdlPvj>
 800e5ea:	687b      	ldr	r3, [r7, #4]
 800e5ec:	4618      	mov	r0, r3
 800e5ee:	3708      	adds	r7, #8
 800e5f0:	46bd      	mov	sp, r7
 800e5f2:	bd80      	pop	{r7, pc}

0800e5f4 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 800e5f4:	b480      	push	{r7}
 800e5f6:	b083      	sub	sp, #12
 800e5f8:	af00      	add	r7, sp, #0
 800e5fa:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800e5fc:	bf00      	nop
 800e5fe:	370c      	adds	r7, #12
 800e600:	46bd      	mov	sp, r7
 800e602:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e606:	4770      	bx	lr

0800e608 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800e608:	b580      	push	{r7, lr}
 800e60a:	b084      	sub	sp, #16
 800e60c:	af00      	add	r7, sp, #0
 800e60e:	60f8      	str	r0, [r7, #12]
 800e610:	60b9      	str	r1, [r7, #8]
 800e612:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

	return((bool) Touch_TouchGFXSampleTouch(&x,&y));
 800e614:	6879      	ldr	r1, [r7, #4]
 800e616:	68b8      	ldr	r0, [r7, #8]
 800e618:	f7f4 f8ce 	bl	80027b8 <Touch_TouchGFXSampleTouch>
 800e61c:	4603      	mov	r3, r0
 800e61e:	2b00      	cmp	r3, #0
 800e620:	bf14      	ite	ne
 800e622:	2301      	movne	r3, #1
 800e624:	2300      	moveq	r3, #0
 800e626:	b2db      	uxtb	r3, r3
}
 800e628:	4618      	mov	r0, r3
 800e62a:	3710      	adds	r7, #16
 800e62c:	46bd      	mov	sp, r7
 800e62e:	bd80      	pop	{r7, pc}

0800e630 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800e630:	b580      	push	{r7, lr}
 800e632:	b082      	sub	sp, #8
 800e634:	af00      	add	r7, sp, #0
 800e636:	6078      	str	r0, [r7, #4]
 800e638:	4a05      	ldr	r2, [pc, #20]	@ (800e650 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800e63a:	687b      	ldr	r3, [r7, #4]
 800e63c:	601a      	str	r2, [r3, #0]
 800e63e:	687b      	ldr	r3, [r7, #4]
 800e640:	4618      	mov	r0, r3
 800e642:	f7ff ffb7 	bl	800e5b4 <_ZN8touchgfx15TouchControllerD1Ev>
 800e646:	687b      	ldr	r3, [r7, #4]
 800e648:	4618      	mov	r0, r3
 800e64a:	3708      	adds	r7, #8
 800e64c:	46bd      	mov	sp, r7
 800e64e:	bd80      	pop	{r7, pc}
 800e650:	08028a28 	.word	0x08028a28

0800e654 <_ZN20STM32TouchControllerD0Ev>:
 800e654:	b580      	push	{r7, lr}
 800e656:	b082      	sub	sp, #8
 800e658:	af00      	add	r7, sp, #0
 800e65a:	6078      	str	r0, [r7, #4]
 800e65c:	6878      	ldr	r0, [r7, #4]
 800e65e:	f7ff ffe7 	bl	800e630 <_ZN20STM32TouchControllerD1Ev>
 800e662:	2104      	movs	r1, #4
 800e664:	6878      	ldr	r0, [r7, #4]
 800e666:	f017 f9e4 	bl	8025a32 <_ZdlPvj>
 800e66a:	687b      	ldr	r3, [r7, #4]
 800e66c:	4618      	mov	r0, r3
 800e66e:	3708      	adds	r7, #8
 800e670:	46bd      	mov	sp, r7
 800e672:	bd80      	pop	{r7, pc}

0800e674 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800e674:	b480      	push	{r7}
 800e676:	af00      	add	r7, sp, #0

}
 800e678:	bf00      	nop
 800e67a:	46bd      	mov	sp, r7
 800e67c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e680:	4770      	bx	lr
	...

0800e684 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800e684:	b480      	push	{r7}
 800e686:	b083      	sub	sp, #12
 800e688:	af00      	add	r7, sp, #0
 800e68a:	4603      	mov	r3, r0
 800e68c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e68e:	79fb      	ldrb	r3, [r7, #7]
 800e690:	2b03      	cmp	r3, #3
 800e692:	d80c      	bhi.n	800e6ae <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800e694:	a201      	add	r2, pc, #4	@ (adr r2, 800e69c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800e696:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e69a:	bf00      	nop
 800e69c:	0800e6ad 	.word	0x0800e6ad
 800e6a0:	0800e6ad 	.word	0x0800e6ad
 800e6a4:	0800e6ad 	.word	0x0800e6ad
 800e6a8:	0800e6ad 	.word	0x0800e6ad
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800e6ac:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800e6ae:	bf00      	nop
 800e6b0:	370c      	adds	r7, #12
 800e6b2:	46bd      	mov	sp, r7
 800e6b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6b8:	4770      	bx	lr
 800e6ba:	bf00      	nop

0800e6bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800e6bc:	b480      	push	{r7}
 800e6be:	b083      	sub	sp, #12
 800e6c0:	af00      	add	r7, sp, #0
 800e6c2:	4603      	mov	r3, r0
 800e6c4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e6c6:	79fb      	ldrb	r3, [r7, #7]
 800e6c8:	2b03      	cmp	r3, #3
 800e6ca:	d80c      	bhi.n	800e6e6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800e6cc:	a201      	add	r2, pc, #4	@ (adr r2, 800e6d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800e6ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e6d2:	bf00      	nop
 800e6d4:	0800e6e5 	.word	0x0800e6e5
 800e6d8:	0800e6e5 	.word	0x0800e6e5
 800e6dc:	0800e6e5 	.word	0x0800e6e5
 800e6e0:	0800e6e5 	.word	0x0800e6e5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800e6e4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800e6e6:	bf00      	nop
 800e6e8:	370c      	adds	r7, #12
 800e6ea:	46bd      	mov	sp, r7
 800e6ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6f0:	4770      	bx	lr
 800e6f2:	bf00      	nop

0800e6f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800e6f4:	b480      	push	{r7}
 800e6f6:	b083      	sub	sp, #12
 800e6f8:	af00      	add	r7, sp, #0
 800e6fa:	4603      	mov	r3, r0
 800e6fc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e6fe:	79fb      	ldrb	r3, [r7, #7]
 800e700:	2b03      	cmp	r3, #3
 800e702:	d80c      	bhi.n	800e71e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800e704:	a201      	add	r2, pc, #4	@ (adr r2, 800e70c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800e706:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e70a:	bf00      	nop
 800e70c:	0800e71d 	.word	0x0800e71d
 800e710:	0800e71d 	.word	0x0800e71d
 800e714:	0800e71d 	.word	0x0800e71d
 800e718:	0800e71d 	.word	0x0800e71d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800e71c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800e71e:	bf00      	nop
 800e720:	370c      	adds	r7, #12
 800e722:	46bd      	mov	sp, r7
 800e724:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e728:	4770      	bx	lr
 800e72a:	bf00      	nop

0800e72c <_ZN8touchgfx3HALD1Ev>:
 800e72c:	b480      	push	{r7}
 800e72e:	b083      	sub	sp, #12
 800e730:	af00      	add	r7, sp, #0
 800e732:	6078      	str	r0, [r7, #4]
 800e734:	4a04      	ldr	r2, [pc, #16]	@ (800e748 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800e736:	687b      	ldr	r3, [r7, #4]
 800e738:	601a      	str	r2, [r3, #0]
 800e73a:	687b      	ldr	r3, [r7, #4]
 800e73c:	4618      	mov	r0, r3
 800e73e:	370c      	adds	r7, #12
 800e740:	46bd      	mov	sp, r7
 800e742:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e746:	4770      	bx	lr
 800e748:	08028e78 	.word	0x08028e78

0800e74c <_ZN8touchgfx3HALD0Ev>:
 800e74c:	b580      	push	{r7, lr}
 800e74e:	b082      	sub	sp, #8
 800e750:	af00      	add	r7, sp, #0
 800e752:	6078      	str	r0, [r7, #4]
 800e754:	6878      	ldr	r0, [r7, #4]
 800e756:	f7ff ffe9 	bl	800e72c <_ZN8touchgfx3HALD1Ev>
 800e75a:	217c      	movs	r1, #124	@ 0x7c
 800e75c:	6878      	ldr	r0, [r7, #4]
 800e75e:	f017 f968 	bl	8025a32 <_ZdlPvj>
 800e762:	687b      	ldr	r3, [r7, #4]
 800e764:	4618      	mov	r0, r3
 800e766:	3708      	adds	r7, #8
 800e768:	46bd      	mov	sp, r7
 800e76a:	bd80      	pop	{r7, pc}

0800e76c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
 800e76c:	b480      	push	{r7}
 800e76e:	b083      	sub	sp, #12
 800e770:	af00      	add	r7, sp, #0
 800e772:	6078      	str	r0, [r7, #4]
 800e774:	460b      	mov	r3, r1
 800e776:	70fb      	strb	r3, [r7, #3]
 800e778:	687b      	ldr	r3, [r7, #4]
 800e77a:	78fa      	ldrb	r2, [r7, #3]
 800e77c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800e780:	687b      	ldr	r3, [r7, #4]
 800e782:	2201      	movs	r2, #1
 800e784:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
 800e788:	bf00      	nop
 800e78a:	370c      	adds	r7, #12
 800e78c:	46bd      	mov	sp, r7
 800e78e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e792:	4770      	bx	lr

0800e794 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
 800e794:	b580      	push	{r7, lr}
 800e796:	b082      	sub	sp, #8
 800e798:	af00      	add	r7, sp, #0
 800e79a:	6078      	str	r0, [r7, #4]
 800e79c:	460b      	mov	r3, r1
 800e79e:	807b      	strh	r3, [r7, #2]
 800e7a0:	4613      	mov	r3, r2
 800e7a2:	803b      	strh	r3, [r7, #0]
 800e7a4:	4b0c      	ldr	r3, [pc, #48]	@ (800e7d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800e7a6:	881b      	ldrh	r3, [r3, #0]
 800e7a8:	887a      	ldrh	r2, [r7, #2]
 800e7aa:	429a      	cmp	r2, r3
 800e7ac:	d304      	bcc.n	800e7b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800e7ae:	4b0b      	ldr	r3, [pc, #44]	@ (800e7dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800e7b0:	881b      	ldrh	r3, [r3, #0]
 800e7b2:	883a      	ldrh	r2, [r7, #0]
 800e7b4:	429a      	cmp	r2, r3
 800e7b6:	d205      	bcs.n	800e7c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800e7b8:	4b09      	ldr	r3, [pc, #36]	@ (800e7e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800e7ba:	4a0a      	ldr	r2, [pc, #40]	@ (800e7e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800e7bc:	219e      	movs	r1, #158	@ 0x9e
 800e7be:	480a      	ldr	r0, [pc, #40]	@ (800e7e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800e7c0:	f017 f9e6 	bl	8025b90 <__assert_func>
 800e7c4:	4a09      	ldr	r2, [pc, #36]	@ (800e7ec <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800e7c6:	887b      	ldrh	r3, [r7, #2]
 800e7c8:	8013      	strh	r3, [r2, #0]
 800e7ca:	4a09      	ldr	r2, [pc, #36]	@ (800e7f0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800e7cc:	883b      	ldrh	r3, [r7, #0]
 800e7ce:	8013      	strh	r3, [r2, #0]
 800e7d0:	bf00      	nop
 800e7d2:	3708      	adds	r7, #8
 800e7d4:	46bd      	mov	sp, r7
 800e7d6:	bd80      	pop	{r7, pc}
 800e7d8:	20002f48 	.word	0x20002f48
 800e7dc:	20002f4a 	.word	0x20002f4a
 800e7e0:	0802754c 	.word	0x0802754c
 800e7e4:	080275b0 	.word	0x080275b0
 800e7e8:	080275f4 	.word	0x080275f4
 800e7ec:	20002f4e 	.word	0x20002f4e
 800e7f0:	20002f50 	.word	0x20002f50

0800e7f4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
 800e7f4:	b580      	push	{r7, lr}
 800e7f6:	b082      	sub	sp, #8
 800e7f8:	af00      	add	r7, sp, #0
 800e7fa:	6078      	str	r0, [r7, #4]
 800e7fc:	687b      	ldr	r3, [r7, #4]
 800e7fe:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800e802:	2b00      	cmp	r3, #0
 800e804:	d009      	beq.n	800e81a <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
 800e806:	687b      	ldr	r3, [r7, #4]
 800e808:	685a      	ldr	r2, [r3, #4]
 800e80a:	687b      	ldr	r3, [r7, #4]
 800e80c:	685b      	ldr	r3, [r3, #4]
 800e80e:	681b      	ldr	r3, [r3, #0]
 800e810:	681b      	ldr	r3, [r3, #0]
 800e812:	4610      	mov	r0, r2
 800e814:	4798      	blx	r3
 800e816:	4603      	mov	r3, r0
 800e818:	e000      	b.n	800e81c <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
 800e81a:	2300      	movs	r3, #0
 800e81c:	4618      	mov	r0, r3
 800e81e:	3708      	adds	r7, #8
 800e820:	46bd      	mov	sp, r7
 800e822:	bd80      	pop	{r7, pc}

0800e824 <_ZN8touchgfx3HAL15backPorchExitedEv>:
 800e824:	b580      	push	{r7, lr}
 800e826:	b082      	sub	sp, #8
 800e828:	af00      	add	r7, sp, #0
 800e82a:	6078      	str	r0, [r7, #4]
 800e82c:	6878      	ldr	r0, [r7, #4]
 800e82e:	f002 ff07 	bl	8011640 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 800e832:	687b      	ldr	r3, [r7, #4]
 800e834:	681b      	ldr	r3, [r3, #0]
 800e836:	33ac      	adds	r3, #172	@ 0xac
 800e838:	681b      	ldr	r3, [r3, #0]
 800e83a:	6878      	ldr	r0, [r7, #4]
 800e83c:	4798      	blx	r3
 800e83e:	bf00      	nop
 800e840:	3708      	adds	r7, #8
 800e842:	46bd      	mov	sp, r7
 800e844:	bd80      	pop	{r7, pc}

0800e846 <_ZN8touchgfx3HAL9sampleKeyERh>:
 800e846:	b480      	push	{r7}
 800e848:	b083      	sub	sp, #12
 800e84a:	af00      	add	r7, sp, #0
 800e84c:	6078      	str	r0, [r7, #4]
 800e84e:	6039      	str	r1, [r7, #0]
 800e850:	2300      	movs	r3, #0
 800e852:	4618      	mov	r0, r3
 800e854:	370c      	adds	r7, #12
 800e856:	46bd      	mov	sp, r7
 800e858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e85c:	4770      	bx	lr
	...

0800e860 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
 800e860:	b580      	push	{r7, lr}
 800e862:	b084      	sub	sp, #16
 800e864:	af00      	add	r7, sp, #0
 800e866:	60f8      	str	r0, [r7, #12]
 800e868:	60b9      	str	r1, [r7, #8]
 800e86a:	607a      	str	r2, [r7, #4]
 800e86c:	603b      	str	r3, [r7, #0]
 800e86e:	68bb      	ldr	r3, [r7, #8]
 800e870:	2b00      	cmp	r3, #0
 800e872:	d106      	bne.n	800e882 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800e874:	4b0f      	ldr	r3, [pc, #60]	@ (800e8b4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800e876:	4a10      	ldr	r2, [pc, #64]	@ (800e8b8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800e878:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800e87c:	480f      	ldr	r0, [pc, #60]	@ (800e8bc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800e87e:	f017 f987 	bl	8025b90 <__assert_func>
 800e882:	68fb      	ldr	r3, [r7, #12]
 800e884:	68ba      	ldr	r2, [r7, #8]
 800e886:	63da      	str	r2, [r3, #60]	@ 0x3c
 800e888:	68fb      	ldr	r3, [r7, #12]
 800e88a:	687a      	ldr	r2, [r7, #4]
 800e88c:	641a      	str	r2, [r3, #64]	@ 0x40
 800e88e:	687b      	ldr	r3, [r7, #4]
 800e890:	2b00      	cmp	r3, #0
 800e892:	bf14      	ite	ne
 800e894:	2301      	movne	r3, #1
 800e896:	2300      	moveq	r3, #0
 800e898:	b2da      	uxtb	r2, r3
 800e89a:	4b09      	ldr	r3, [pc, #36]	@ (800e8c0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800e89c:	701a      	strb	r2, [r3, #0]
 800e89e:	68fb      	ldr	r3, [r7, #12]
 800e8a0:	681b      	ldr	r3, [r3, #0]
 800e8a2:	338c      	adds	r3, #140	@ 0x8c
 800e8a4:	681b      	ldr	r3, [r3, #0]
 800e8a6:	6839      	ldr	r1, [r7, #0]
 800e8a8:	68f8      	ldr	r0, [r7, #12]
 800e8aa:	4798      	blx	r3
 800e8ac:	bf00      	nop
 800e8ae:	3710      	adds	r7, #16
 800e8b0:	46bd      	mov	sp, r7
 800e8b2:	bd80      	pop	{r7, pc}
 800e8b4:	08027638 	.word	0x08027638
 800e8b8:	08027670 	.word	0x08027670
 800e8bc:	080275f4 	.word	0x080275f4
 800e8c0:	20002f52 	.word	0x20002f52

0800e8c4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
 800e8c4:	b480      	push	{r7}
 800e8c6:	b083      	sub	sp, #12
 800e8c8:	af00      	add	r7, sp, #0
 800e8ca:	6078      	str	r0, [r7, #4]
 800e8cc:	6039      	str	r1, [r7, #0]
 800e8ce:	687b      	ldr	r3, [r7, #4]
 800e8d0:	683a      	ldr	r2, [r7, #0]
 800e8d2:	645a      	str	r2, [r3, #68]	@ 0x44
 800e8d4:	683b      	ldr	r3, [r7, #0]
 800e8d6:	2b00      	cmp	r3, #0
 800e8d8:	bf14      	ite	ne
 800e8da:	2301      	movne	r3, #1
 800e8dc:	2300      	moveq	r3, #0
 800e8de:	b2da      	uxtb	r2, r3
 800e8e0:	4b03      	ldr	r3, [pc, #12]	@ (800e8f0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800e8e2:	701a      	strb	r2, [r3, #0]
 800e8e4:	bf00      	nop
 800e8e6:	370c      	adds	r7, #12
 800e8e8:	46bd      	mov	sp, r7
 800e8ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8ee:	4770      	bx	lr
 800e8f0:	20002f53 	.word	0x20002f53

0800e8f4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
 800e8f4:	b480      	push	{r7}
 800e8f6:	b083      	sub	sp, #12
 800e8f8:	af00      	add	r7, sp, #0
 800e8fa:	6078      	str	r0, [r7, #4]
 800e8fc:	2300      	movs	r3, #0
 800e8fe:	4618      	mov	r0, r3
 800e900:	370c      	adds	r7, #12
 800e902:	46bd      	mov	sp, r7
 800e904:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e908:	4770      	bx	lr

0800e90a <_ZN8touchgfx3HAL9taskDelayEt>:
 800e90a:	b580      	push	{r7, lr}
 800e90c:	b082      	sub	sp, #8
 800e90e:	af00      	add	r7, sp, #0
 800e910:	6078      	str	r0, [r7, #4]
 800e912:	460b      	mov	r3, r1
 800e914:	807b      	strh	r3, [r7, #2]
 800e916:	687b      	ldr	r3, [r7, #4]
 800e918:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e91a:	2b00      	cmp	r3, #0
 800e91c:	d004      	beq.n	800e928 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
 800e91e:	687b      	ldr	r3, [r7, #4]
 800e920:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e922:	887a      	ldrh	r2, [r7, #2]
 800e924:	4610      	mov	r0, r2
 800e926:	4798      	blx	r3
 800e928:	bf00      	nop
 800e92a:	3708      	adds	r7, #8
 800e92c:	46bd      	mov	sp, r7
 800e92e:	bd80      	pop	{r7, pc}

0800e930 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800e930:	b480      	push	{r7}
 800e932:	b083      	sub	sp, #12
 800e934:	af00      	add	r7, sp, #0
 800e936:	6078      	str	r0, [r7, #4]
 800e938:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800e93c:	4618      	mov	r0, r3
 800e93e:	370c      	adds	r7, #12
 800e940:	46bd      	mov	sp, r7
 800e942:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e946:	4770      	bx	lr

0800e948 <_ZN8touchgfx3HAL10getDMATypeEv>:
 800e948:	b580      	push	{r7, lr}
 800e94a:	b082      	sub	sp, #8
 800e94c:	af00      	add	r7, sp, #0
 800e94e:	6078      	str	r0, [r7, #4]
 800e950:	687b      	ldr	r3, [r7, #4]
 800e952:	685a      	ldr	r2, [r3, #4]
 800e954:	687b      	ldr	r3, [r7, #4]
 800e956:	685b      	ldr	r3, [r3, #4]
 800e958:	681b      	ldr	r3, [r3, #0]
 800e95a:	3318      	adds	r3, #24
 800e95c:	681b      	ldr	r3, [r3, #0]
 800e95e:	4610      	mov	r0, r2
 800e960:	4798      	blx	r3
 800e962:	4603      	mov	r3, r0
 800e964:	4618      	mov	r0, r3
 800e966:	3708      	adds	r7, #8
 800e968:	46bd      	mov	sp, r7
 800e96a:	bd80      	pop	{r7, pc}

0800e96c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
 800e96c:	b480      	push	{r7}
 800e96e:	b085      	sub	sp, #20
 800e970:	af00      	add	r7, sp, #0
 800e972:	6078      	str	r0, [r7, #4]
 800e974:	687b      	ldr	r3, [r7, #4]
 800e976:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800e97a:	687b      	ldr	r3, [r7, #4]
 800e97c:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800e980:	429a      	cmp	r2, r3
 800e982:	d011      	beq.n	800e9a8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
 800e984:	4b14      	ldr	r3, [pc, #80]	@ (800e9d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800e986:	781b      	ldrb	r3, [r3, #0]
 800e988:	2b00      	cmp	r3, #0
 800e98a:	d11e      	bne.n	800e9ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800e98c:	4b13      	ldr	r3, [pc, #76]	@ (800e9dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800e98e:	881b      	ldrh	r3, [r3, #0]
 800e990:	81bb      	strh	r3, [r7, #12]
 800e992:	4b13      	ldr	r3, [pc, #76]	@ (800e9e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800e994:	881a      	ldrh	r2, [r3, #0]
 800e996:	4b11      	ldr	r3, [pc, #68]	@ (800e9dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800e998:	801a      	strh	r2, [r3, #0]
 800e99a:	4a11      	ldr	r2, [pc, #68]	@ (800e9e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800e99c:	89bb      	ldrh	r3, [r7, #12]
 800e99e:	8013      	strh	r3, [r2, #0]
 800e9a0:	4b0d      	ldr	r3, [pc, #52]	@ (800e9d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800e9a2:	2201      	movs	r2, #1
 800e9a4:	701a      	strb	r2, [r3, #0]
 800e9a6:	e010      	b.n	800e9ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800e9a8:	4b0b      	ldr	r3, [pc, #44]	@ (800e9d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800e9aa:	781b      	ldrb	r3, [r3, #0]
 800e9ac:	2b00      	cmp	r3, #0
 800e9ae:	d00c      	beq.n	800e9ca <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800e9b0:	4b0a      	ldr	r3, [pc, #40]	@ (800e9dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800e9b2:	881b      	ldrh	r3, [r3, #0]
 800e9b4:	81fb      	strh	r3, [r7, #14]
 800e9b6:	4b0a      	ldr	r3, [pc, #40]	@ (800e9e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800e9b8:	881a      	ldrh	r2, [r3, #0]
 800e9ba:	4b08      	ldr	r3, [pc, #32]	@ (800e9dc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800e9bc:	801a      	strh	r2, [r3, #0]
 800e9be:	4a08      	ldr	r2, [pc, #32]	@ (800e9e0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800e9c0:	89fb      	ldrh	r3, [r7, #14]
 800e9c2:	8013      	strh	r3, [r2, #0]
 800e9c4:	4b04      	ldr	r3, [pc, #16]	@ (800e9d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800e9c6:	2200      	movs	r2, #0
 800e9c8:	701a      	strb	r2, [r3, #0]
 800e9ca:	bf00      	nop
 800e9cc:	3714      	adds	r7, #20
 800e9ce:	46bd      	mov	sp, r7
 800e9d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9d4:	4770      	bx	lr
 800e9d6:	bf00      	nop
 800e9d8:	20002f4c 	.word	0x20002f4c
 800e9dc:	20002f4a 	.word	0x20002f4a
 800e9e0:	20002f48 	.word	0x20002f48

0800e9e4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800e9e4:	b480      	push	{r7}
 800e9e6:	b083      	sub	sp, #12
 800e9e8:	af00      	add	r7, sp, #0
 800e9ea:	6078      	str	r0, [r7, #4]
 800e9ec:	bf00      	nop
 800e9ee:	370c      	adds	r7, #12
 800e9f0:	46bd      	mov	sp, r7
 800e9f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9f6:	4770      	bx	lr

0800e9f8 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800e9f8:	b480      	push	{r7}
 800e9fa:	b083      	sub	sp, #12
 800e9fc:	af00      	add	r7, sp, #0
 800e9fe:	6078      	str	r0, [r7, #4]
 800ea00:	bf00      	nop
 800ea02:	370c      	adds	r7, #12
 800ea04:	46bd      	mov	sp, r7
 800ea06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea0a:	4770      	bx	lr

0800ea0c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
 800ea0c:	b580      	push	{r7, lr}
 800ea0e:	b082      	sub	sp, #8
 800ea10:	af00      	add	r7, sp, #0
 800ea12:	6078      	str	r0, [r7, #4]
 800ea14:	687b      	ldr	r3, [r7, #4]
 800ea16:	4618      	mov	r0, r3
 800ea18:	f002 f870 	bl	8010afc <_ZN8touchgfx3HAL16flushFrameBufferEv>
 800ea1c:	bf00      	nop
 800ea1e:	3708      	adds	r7, #8
 800ea20:	46bd      	mov	sp, r7
 800ea22:	bd80      	pop	{r7, pc}

0800ea24 <_ZN20TouchGFXGeneratedHALD1Ev>:
 800ea24:	b580      	push	{r7, lr}
 800ea26:	b082      	sub	sp, #8
 800ea28:	af00      	add	r7, sp, #0
 800ea2a:	6078      	str	r0, [r7, #4]
 800ea2c:	4a05      	ldr	r2, [pc, #20]	@ (800ea44 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800ea2e:	687b      	ldr	r3, [r7, #4]
 800ea30:	601a      	str	r2, [r3, #0]
 800ea32:	687b      	ldr	r3, [r7, #4]
 800ea34:	4618      	mov	r0, r3
 800ea36:	f7ff fe79 	bl	800e72c <_ZN8touchgfx3HALD1Ev>
 800ea3a:	687b      	ldr	r3, [r7, #4]
 800ea3c:	4618      	mov	r0, r3
 800ea3e:	3708      	adds	r7, #8
 800ea40:	46bd      	mov	sp, r7
 800ea42:	bd80      	pop	{r7, pc}
 800ea44:	08028ca4 	.word	0x08028ca4

0800ea48 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800ea48:	b580      	push	{r7, lr}
 800ea4a:	b082      	sub	sp, #8
 800ea4c:	af00      	add	r7, sp, #0
 800ea4e:	6078      	str	r0, [r7, #4]
 800ea50:	6878      	ldr	r0, [r7, #4]
 800ea52:	f7ff ffe7 	bl	800ea24 <_ZN20TouchGFXGeneratedHALD1Ev>
 800ea56:	217c      	movs	r1, #124	@ 0x7c
 800ea58:	6878      	ldr	r0, [r7, #4]
 800ea5a:	f016 ffea 	bl	8025a32 <_ZdlPvj>
 800ea5e:	687b      	ldr	r3, [r7, #4]
 800ea60:	4618      	mov	r0, r3
 800ea62:	3708      	adds	r7, #8
 800ea64:	46bd      	mov	sp, r7
 800ea66:	bd80      	pop	{r7, pc}

0800ea68 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
 800ea68:	b580      	push	{r7, lr}
 800ea6a:	b082      	sub	sp, #8
 800ea6c:	af00      	add	r7, sp, #0
 800ea6e:	6078      	str	r0, [r7, #4]
 800ea70:	687b      	ldr	r3, [r7, #4]
 800ea72:	4618      	mov	r0, r3
 800ea74:	f7ff ffca 	bl	800ea0c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
 800ea78:	bf00      	nop
 800ea7a:	3708      	adds	r7, #8
 800ea7c:	46bd      	mov	sp, r7
 800ea7e:	bd80      	pop	{r7, pc}

0800ea80 <_ZN11TouchGFXHAL10initializeEv>:
 800ea80:	b580      	push	{r7, lr}
 800ea82:	b082      	sub	sp, #8
 800ea84:	af00      	add	r7, sp, #0
 800ea86:	6078      	str	r0, [r7, #4]
 800ea88:	687b      	ldr	r3, [r7, #4]
 800ea8a:	4618      	mov	r0, r3
 800ea8c:	f001 f9aa 	bl	800fde4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
 800ea90:	bf00      	nop
 800ea92:	3708      	adds	r7, #8
 800ea94:	46bd      	mov	sp, r7
 800ea96:	bd80      	pop	{r7, pc}

0800ea98 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 800ea98:	b580      	push	{r7, lr}
 800ea9a:	b082      	sub	sp, #8
 800ea9c:	af00      	add	r7, sp, #0
 800ea9e:	6078      	str	r0, [r7, #4]
 800eaa0:	687b      	ldr	r3, [r7, #4]
 800eaa2:	4618      	mov	r0, r3
 800eaa4:	f001 fa1c 	bl	800fee0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800eaa8:	4603      	mov	r3, r0
 800eaaa:	4618      	mov	r0, r3
 800eaac:	3708      	adds	r7, #8
 800eaae:	46bd      	mov	sp, r7
 800eab0:	bd80      	pop	{r7, pc}

0800eab2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 800eab2:	b580      	push	{r7, lr}
 800eab4:	b082      	sub	sp, #8
 800eab6:	af00      	add	r7, sp, #0
 800eab8:	6078      	str	r0, [r7, #4]
 800eaba:	6039      	str	r1, [r7, #0]
 800eabc:	687b      	ldr	r3, [r7, #4]
 800eabe:	6839      	ldr	r1, [r7, #0]
 800eac0:	4618      	mov	r0, r3
 800eac2:	f001 fa18 	bl	800fef6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
 800eac6:	bf00      	nop
 800eac8:	3708      	adds	r7, #8
 800eaca:	46bd      	mov	sp, r7
 800eacc:	bd80      	pop	{r7, pc}

0800eace <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 800eace:	b580      	push	{r7, lr}
 800ead0:	b082      	sub	sp, #8
 800ead2:	af00      	add	r7, sp, #0
 800ead4:	6078      	str	r0, [r7, #4]
 800ead6:	6039      	str	r1, [r7, #0]
 800ead8:	687b      	ldr	r3, [r7, #4]
 800eada:	6839      	ldr	r1, [r7, #0]
 800eadc:	4618      	mov	r0, r3
 800eade:	f001 fa15 	bl	800ff0c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 800eae2:	bf00      	nop
 800eae4:	3708      	adds	r7, #8
 800eae6:	46bd      	mov	sp, r7
 800eae8:	bd80      	pop	{r7, pc}

0800eaea <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
 800eaea:	b580      	push	{r7, lr}
 800eaec:	b084      	sub	sp, #16
 800eaee:	af00      	add	r7, sp, #0
 800eaf0:	60f8      	str	r0, [r7, #12]
 800eaf2:	60b9      	str	r1, [r7, #8]
 800eaf4:	607a      	str	r2, [r7, #4]
 800eaf6:	603b      	str	r3, [r7, #0]
 800eaf8:	68f8      	ldr	r0, [r7, #12]
 800eafa:	683b      	ldr	r3, [r7, #0]
 800eafc:	687a      	ldr	r2, [r7, #4]
 800eafe:	68b9      	ldr	r1, [r7, #8]
 800eb00:	f001 fa47 	bl	800ff92 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800eb04:	4603      	mov	r3, r0
 800eb06:	4618      	mov	r0, r3
 800eb08:	3710      	adds	r7, #16
 800eb0a:	46bd      	mov	sp, r7
 800eb0c:	bd80      	pop	{r7, pc}

0800eb0e <_ZN11TouchGFXHAL19configureInterruptsEv>:
 800eb0e:	b580      	push	{r7, lr}
 800eb10:	b082      	sub	sp, #8
 800eb12:	af00      	add	r7, sp, #0
 800eb14:	6078      	str	r0, [r7, #4]
 800eb16:	687b      	ldr	r3, [r7, #4]
 800eb18:	4618      	mov	r0, r3
 800eb1a:	f001 f993 	bl	800fe44 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 800eb1e:	bf00      	nop
 800eb20:	3708      	adds	r7, #8
 800eb22:	46bd      	mov	sp, r7
 800eb24:	bd80      	pop	{r7, pc}

0800eb26 <_ZN11TouchGFXHAL16enableInterruptsEv>:
 800eb26:	b580      	push	{r7, lr}
 800eb28:	b082      	sub	sp, #8
 800eb2a:	af00      	add	r7, sp, #0
 800eb2c:	6078      	str	r0, [r7, #4]
 800eb2e:	687b      	ldr	r3, [r7, #4]
 800eb30:	4618      	mov	r0, r3
 800eb32:	f001 f991 	bl	800fe58 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
 800eb36:	bf00      	nop
 800eb38:	3708      	adds	r7, #8
 800eb3a:	46bd      	mov	sp, r7
 800eb3c:	bd80      	pop	{r7, pc}

0800eb3e <_ZN11TouchGFXHAL17disableInterruptsEv>:
 800eb3e:	b580      	push	{r7, lr}
 800eb40:	b082      	sub	sp, #8
 800eb42:	af00      	add	r7, sp, #0
 800eb44:	6078      	str	r0, [r7, #4]
 800eb46:	687b      	ldr	r3, [r7, #4]
 800eb48:	4618      	mov	r0, r3
 800eb4a:	f001 f98f 	bl	800fe6c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
 800eb4e:	bf00      	nop
 800eb50:	3708      	adds	r7, #8
 800eb52:	46bd      	mov	sp, r7
 800eb54:	bd80      	pop	{r7, pc}

0800eb56 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
 800eb56:	b580      	push	{r7, lr}
 800eb58:	b082      	sub	sp, #8
 800eb5a:	af00      	add	r7, sp, #0
 800eb5c:	6078      	str	r0, [r7, #4]
 800eb5e:	687b      	ldr	r3, [r7, #4]
 800eb60:	4618      	mov	r0, r3
 800eb62:	f001 f98d 	bl	800fe80 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 800eb66:	bf00      	nop
 800eb68:	3708      	adds	r7, #8
 800eb6a:	46bd      	mov	sp, r7
 800eb6c:	bd80      	pop	{r7, pc}

0800eb6e <_ZN11TouchGFXHAL10beginFrameEv>:
 800eb6e:	b580      	push	{r7, lr}
 800eb70:	b082      	sub	sp, #8
 800eb72:	af00      	add	r7, sp, #0
 800eb74:	6078      	str	r0, [r7, #4]
 800eb76:	687b      	ldr	r3, [r7, #4]
 800eb78:	4618      	mov	r0, r3
 800eb7a:	f001 f98b 	bl	800fe94 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800eb7e:	4603      	mov	r3, r0
 800eb80:	4618      	mov	r0, r3
 800eb82:	3708      	adds	r7, #8
 800eb84:	46bd      	mov	sp, r7
 800eb86:	bd80      	pop	{r7, pc}

0800eb88 <_ZN11TouchGFXHAL8endFrameEv>:
 800eb88:	b580      	push	{r7, lr}
 800eb8a:	b082      	sub	sp, #8
 800eb8c:	af00      	add	r7, sp, #0
 800eb8e:	6078      	str	r0, [r7, #4]
 800eb90:	687b      	ldr	r3, [r7, #4]
 800eb92:	4618      	mov	r0, r3
 800eb94:	f001 f98b 	bl	800feae <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 800eb98:	bf00      	nop
 800eb9a:	3708      	adds	r7, #8
 800eb9c:	46bd      	mov	sp, r7
 800eb9e:	bd80      	pop	{r7, pc}

0800eba0 <_ZN11TouchGFXHALD1Ev>:
 800eba0:	b580      	push	{r7, lr}
 800eba2:	b082      	sub	sp, #8
 800eba4:	af00      	add	r7, sp, #0
 800eba6:	6078      	str	r0, [r7, #4]
 800eba8:	4a05      	ldr	r2, [pc, #20]	@ (800ebc0 <_ZN11TouchGFXHALD1Ev+0x20>)
 800ebaa:	687b      	ldr	r3, [r7, #4]
 800ebac:	601a      	str	r2, [r3, #0]
 800ebae:	687b      	ldr	r3, [r7, #4]
 800ebb0:	4618      	mov	r0, r3
 800ebb2:	f7ff ff37 	bl	800ea24 <_ZN20TouchGFXGeneratedHALD1Ev>
 800ebb6:	687b      	ldr	r3, [r7, #4]
 800ebb8:	4618      	mov	r0, r3
 800ebba:	3708      	adds	r7, #8
 800ebbc:	46bd      	mov	sp, r7
 800ebbe:	bd80      	pop	{r7, pc}
 800ebc0:	08028a58 	.word	0x08028a58

0800ebc4 <_ZN11TouchGFXHALD0Ev>:
 800ebc4:	b580      	push	{r7, lr}
 800ebc6:	b082      	sub	sp, #8
 800ebc8:	af00      	add	r7, sp, #0
 800ebca:	6078      	str	r0, [r7, #4]
 800ebcc:	6878      	ldr	r0, [r7, #4]
 800ebce:	f7ff ffe7 	bl	800eba0 <_ZN11TouchGFXHALD1Ev>
 800ebd2:	217c      	movs	r1, #124	@ 0x7c
 800ebd4:	6878      	ldr	r0, [r7, #4]
 800ebd6:	f016 ff2c 	bl	8025a32 <_ZdlPvj>
 800ebda:	687b      	ldr	r3, [r7, #4]
 800ebdc:	4618      	mov	r0, r3
 800ebde:	3708      	adds	r7, #8
 800ebe0:	46bd      	mov	sp, r7
 800ebe2:	bd80      	pop	{r7, pc}

0800ebe4 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800ebe4:	b480      	push	{r7}
 800ebe6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ebe8:	4b05      	ldr	r3, [pc, #20]	@ (800ec00 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800ebea:	2200      	movs	r2, #0
 800ebec:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800ebee:	4b05      	ldr	r3, [pc, #20]	@ (800ec04 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800ebf0:	2200      	movs	r2, #0
 800ebf2:	601a      	str	r2, [r3, #0]
}
 800ebf4:	bf00      	nop
 800ebf6:	46bd      	mov	sp, r7
 800ebf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebfc:	4770      	bx	lr
 800ebfe:	bf00      	nop
 800ec00:	20000680 	.word	0x20000680
 800ec04:	20000684 	.word	0x20000684

0800ec08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800ec08:	b480      	push	{r7}
 800ec0a:	af00      	add	r7, sp, #0
    while (fb_sem);
 800ec0c:	bf00      	nop
 800ec0e:	4b08      	ldr	r3, [pc, #32]	@ (800ec30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800ec10:	681b      	ldr	r3, [r3, #0]
 800ec12:	2b00      	cmp	r3, #0
 800ec14:	bf14      	ite	ne
 800ec16:	2301      	movne	r3, #1
 800ec18:	2300      	moveq	r3, #0
 800ec1a:	b2db      	uxtb	r3, r3
 800ec1c:	2b00      	cmp	r3, #0
 800ec1e:	d1f6      	bne.n	800ec0e <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800ec20:	4b03      	ldr	r3, [pc, #12]	@ (800ec30 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800ec22:	2201      	movs	r2, #1
 800ec24:	601a      	str	r2, [r3, #0]
}
 800ec26:	bf00      	nop
 800ec28:	46bd      	mov	sp, r7
 800ec2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec2e:	4770      	bx	lr
 800ec30:	20000680 	.word	0x20000680

0800ec34 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800ec34:	b480      	push	{r7}
 800ec36:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ec38:	4b03      	ldr	r3, [pc, #12]	@ (800ec48 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800ec3a:	2200      	movs	r2, #0
 800ec3c:	601a      	str	r2, [r3, #0]
}
 800ec3e:	bf00      	nop
 800ec40:	46bd      	mov	sp, r7
 800ec42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec46:	4770      	bx	lr
 800ec48:	20000680 	.word	0x20000680

0800ec4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800ec4c:	b480      	push	{r7}
 800ec4e:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800ec50:	4b03      	ldr	r3, [pc, #12]	@ (800ec60 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800ec52:	2201      	movs	r2, #1
 800ec54:	601a      	str	r2, [r3, #0]
}
 800ec56:	bf00      	nop
 800ec58:	46bd      	mov	sp, r7
 800ec5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec5e:	4770      	bx	lr
 800ec60:	20000680 	.word	0x20000680

0800ec64 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800ec64:	b480      	push	{r7}
 800ec66:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ec68:	4b03      	ldr	r3, [pc, #12]	@ (800ec78 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800ec6a:	2200      	movs	r2, #0
 800ec6c:	601a      	str	r2, [r3, #0]
}
 800ec6e:	bf00      	nop
 800ec70:	46bd      	mov	sp, r7
 800ec72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec76:	4770      	bx	lr
 800ec78:	20000680 	.word	0x20000680

0800ec7c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800ec7c:	b480      	push	{r7}
 800ec7e:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800ec80:	4b03      	ldr	r3, [pc, #12]	@ (800ec90 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800ec82:	2201      	movs	r2, #1
 800ec84:	601a      	str	r2, [r3, #0]
}
 800ec86:	bf00      	nop
 800ec88:	46bd      	mov	sp, r7
 800ec8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec8e:	4770      	bx	lr
 800ec90:	20000684 	.word	0x20000684

0800ec94 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800ec94:	b480      	push	{r7}
 800ec96:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800ec98:	4b03      	ldr	r3, [pc, #12]	@ (800eca8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800ec9a:	2200      	movs	r2, #0
 800ec9c:	601a      	str	r2, [r3, #0]
}
 800ec9e:	bf00      	nop
 800eca0:	46bd      	mov	sp, r7
 800eca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eca6:	4770      	bx	lr
 800eca8:	20000684 	.word	0x20000684

0800ecac <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800ecac:	b480      	push	{r7}
 800ecae:	af00      	add	r7, sp, #0
    return vsync_sem;
 800ecb0:	4b05      	ldr	r3, [pc, #20]	@ (800ecc8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800ecb2:	681b      	ldr	r3, [r3, #0]
 800ecb4:	2b00      	cmp	r3, #0
 800ecb6:	bf14      	ite	ne
 800ecb8:	2301      	movne	r3, #1
 800ecba:	2300      	moveq	r3, #0
 800ecbc:	b2db      	uxtb	r3, r3
}
 800ecbe:	4618      	mov	r0, r3
 800ecc0:	46bd      	mov	sp, r7
 800ecc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecc6:	4770      	bx	lr
 800ecc8:	20000684 	.word	0x20000684

0800eccc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800eccc:	b580      	push	{r7, lr}
 800ecce:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800ecd0:	4b0a      	ldr	r3, [pc, #40]	@ (800ecfc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800ecd2:	681b      	ldr	r3, [r3, #0]
 800ecd4:	2b00      	cmp	r3, #0
 800ecd6:	bf14      	ite	ne
 800ecd8:	2301      	movne	r3, #1
 800ecda:	2300      	moveq	r3, #0
 800ecdc:	b2db      	uxtb	r3, r3
 800ecde:	2b00      	cmp	r3, #0
 800ece0:	d00a      	beq.n	800ecf8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800ece2:	4b06      	ldr	r3, [pc, #24]	@ (800ecfc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800ece4:	2200      	movs	r2, #0
 800ece6:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800ece8:	f7f9 fbf0 	bl	80084cc <_ZN8touchgfx3HAL11getInstanceEv>
 800ecec:	4603      	mov	r3, r0
 800ecee:	681a      	ldr	r2, [r3, #0]
 800ecf0:	3270      	adds	r2, #112	@ 0x70
 800ecf2:	6812      	ldr	r2, [r2, #0]
 800ecf4:	4618      	mov	r0, r3
 800ecf6:	4790      	blx	r2
    }
}
 800ecf8:	bf00      	nop
 800ecfa:	bd80      	pop	{r7, pc}
 800ecfc:	20000684 	.word	0x20000684

0800ed00 <_ZN8touchgfx9DMA_QueueD1Ev>:
 800ed00:	b480      	push	{r7}
 800ed02:	b083      	sub	sp, #12
 800ed04:	af00      	add	r7, sp, #0
 800ed06:	6078      	str	r0, [r7, #4]
 800ed08:	4a04      	ldr	r2, [pc, #16]	@ (800ed1c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800ed0a:	687b      	ldr	r3, [r7, #4]
 800ed0c:	601a      	str	r2, [r3, #0]
 800ed0e:	687b      	ldr	r3, [r7, #4]
 800ed10:	4618      	mov	r0, r3
 800ed12:	370c      	adds	r7, #12
 800ed14:	46bd      	mov	sp, r7
 800ed16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed1a:	4770      	bx	lr
 800ed1c:	08028b80 	.word	0x08028b80

0800ed20 <_ZN8touchgfx9DMA_QueueD0Ev>:
 800ed20:	b580      	push	{r7, lr}
 800ed22:	b082      	sub	sp, #8
 800ed24:	af00      	add	r7, sp, #0
 800ed26:	6078      	str	r0, [r7, #4]
 800ed28:	6878      	ldr	r0, [r7, #4]
 800ed2a:	f7ff ffe9 	bl	800ed00 <_ZN8touchgfx9DMA_QueueD1Ev>
 800ed2e:	2104      	movs	r1, #4
 800ed30:	6878      	ldr	r0, [r7, #4]
 800ed32:	f016 fe7e 	bl	8025a32 <_ZdlPvj>
 800ed36:	687b      	ldr	r3, [r7, #4]
 800ed38:	4618      	mov	r0, r3
 800ed3a:	3708      	adds	r7, #8
 800ed3c:	46bd      	mov	sp, r7
 800ed3e:	bd80      	pop	{r7, pc}

0800ed40 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800ed40:	b480      	push	{r7}
 800ed42:	b083      	sub	sp, #12
 800ed44:	af00      	add	r7, sp, #0
 800ed46:	6078      	str	r0, [r7, #4]
 800ed48:	bf00      	nop
 800ed4a:	370c      	adds	r7, #12
 800ed4c:	46bd      	mov	sp, r7
 800ed4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed52:	4770      	bx	lr

0800ed54 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800ed54:	b480      	push	{r7}
 800ed56:	b083      	sub	sp, #12
 800ed58:	af00      	add	r7, sp, #0
 800ed5a:	6078      	str	r0, [r7, #4]
 800ed5c:	2300      	movs	r3, #0
 800ed5e:	4618      	mov	r0, r3
 800ed60:	370c      	adds	r7, #12
 800ed62:	46bd      	mov	sp, r7
 800ed64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed68:	4770      	bx	lr
	...

0800ed6c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
 800ed6c:	b480      	push	{r7}
 800ed6e:	b083      	sub	sp, #12
 800ed70:	af00      	add	r7, sp, #0
 800ed72:	6078      	str	r0, [r7, #4]
 800ed74:	4a04      	ldr	r2, [pc, #16]	@ (800ed88 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800ed76:	687b      	ldr	r3, [r7, #4]
 800ed78:	601a      	str	r2, [r3, #0]
 800ed7a:	687b      	ldr	r3, [r7, #4]
 800ed7c:	4618      	mov	r0, r3
 800ed7e:	370c      	adds	r7, #12
 800ed80:	46bd      	mov	sp, r7
 800ed82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ed86:	4770      	bx	lr
 800ed88:	08028f50 	.word	0x08028f50

0800ed8c <_ZN8touchgfx13DMA_InterfaceD0Ev>:
 800ed8c:	b580      	push	{r7, lr}
 800ed8e:	b082      	sub	sp, #8
 800ed90:	af00      	add	r7, sp, #0
 800ed92:	6078      	str	r0, [r7, #4]
 800ed94:	6878      	ldr	r0, [r7, #4]
 800ed96:	f7ff ffe9 	bl	800ed6c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800ed9a:	210c      	movs	r1, #12
 800ed9c:	6878      	ldr	r0, [r7, #4]
 800ed9e:	f016 fe48 	bl	8025a32 <_ZdlPvj>
 800eda2:	687b      	ldr	r3, [r7, #4]
 800eda4:	4618      	mov	r0, r3
 800eda6:	3708      	adds	r7, #8
 800eda8:	46bd      	mov	sp, r7
 800edaa:	bd80      	pop	{r7, pc}

0800edac <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
 800edac:	b480      	push	{r7}
 800edae:	b083      	sub	sp, #12
 800edb0:	af00      	add	r7, sp, #0
 800edb2:	6078      	str	r0, [r7, #4]
 800edb4:	6039      	str	r1, [r7, #0]
 800edb6:	4a09      	ldr	r2, [pc, #36]	@ (800eddc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800edb8:	687b      	ldr	r3, [r7, #4]
 800edba:	601a      	str	r2, [r3, #0]
 800edbc:	687b      	ldr	r3, [r7, #4]
 800edbe:	683a      	ldr	r2, [r7, #0]
 800edc0:	605a      	str	r2, [r3, #4]
 800edc2:	687b      	ldr	r3, [r7, #4]
 800edc4:	2200      	movs	r2, #0
 800edc6:	721a      	strb	r2, [r3, #8]
 800edc8:	687b      	ldr	r3, [r7, #4]
 800edca:	2200      	movs	r2, #0
 800edcc:	725a      	strb	r2, [r3, #9]
 800edce:	687b      	ldr	r3, [r7, #4]
 800edd0:	4618      	mov	r0, r3
 800edd2:	370c      	adds	r7, #12
 800edd4:	46bd      	mov	sp, r7
 800edd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edda:	4770      	bx	lr
 800eddc:	08028f50 	.word	0x08028f50

0800ede0 <_ZN8STM32DMA18signalDMAInterruptEv>:
 800ede0:	b480      	push	{r7}
 800ede2:	b083      	sub	sp, #12
 800ede4:	af00      	add	r7, sp, #0
 800ede6:	6078      	str	r0, [r7, #4]
 800ede8:	bf00      	nop
 800edea:	370c      	adds	r7, #12
 800edec:	46bd      	mov	sp, r7
 800edee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edf2:	4770      	bx	lr

0800edf4 <_ZN8STM32DMA5flushEv>:
 800edf4:	b480      	push	{r7}
 800edf6:	b083      	sub	sp, #12
 800edf8:	af00      	add	r7, sp, #0
 800edfa:	6078      	str	r0, [r7, #4]
 800edfc:	bf00      	nop
 800edfe:	370c      	adds	r7, #12
 800ee00:	46bd      	mov	sp, r7
 800ee02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee06:	4770      	bx	lr

0800ee08 <_ZN8touchgfx6BlitOpC1Ev>:
 800ee08:	b580      	push	{r7, lr}
 800ee0a:	b082      	sub	sp, #8
 800ee0c:	af00      	add	r7, sp, #0
 800ee0e:	6078      	str	r0, [r7, #4]
 800ee10:	687b      	ldr	r3, [r7, #4]
 800ee12:	330c      	adds	r3, #12
 800ee14:	4618      	mov	r0, r3
 800ee16:	f7fa fca5 	bl	8009764 <_ZN8touchgfx9colortypeC1Ev>
 800ee1a:	687b      	ldr	r3, [r7, #4]
 800ee1c:	4618      	mov	r0, r3
 800ee1e:	3708      	adds	r7, #8
 800ee20:	46bd      	mov	sp, r7
 800ee22:	bd80      	pop	{r7, pc}

0800ee24 <_ZN8STM32DMAC1Ev>:
 800ee24:	b580      	push	{r7, lr}
 800ee26:	b082      	sub	sp, #8
 800ee28:	af00      	add	r7, sp, #0
 800ee2a:	6078      	str	r0, [r7, #4]
 800ee2c:	687a      	ldr	r2, [r7, #4]
 800ee2e:	687b      	ldr	r3, [r7, #4]
 800ee30:	330c      	adds	r3, #12
 800ee32:	4619      	mov	r1, r3
 800ee34:	4610      	mov	r0, r2
 800ee36:	f7ff ffb9 	bl	800edac <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800ee3a:	4a0b      	ldr	r2, [pc, #44]	@ (800ee68 <_ZN8STM32DMAC1Ev+0x44>)
 800ee3c:	687b      	ldr	r3, [r7, #4]
 800ee3e:	601a      	str	r2, [r3, #0]
 800ee40:	687b      	ldr	r3, [r7, #4]
 800ee42:	f103 000c 	add.w	r0, r3, #12
 800ee46:	687b      	ldr	r3, [r7, #4]
 800ee48:	3320      	adds	r3, #32
 800ee4a:	2201      	movs	r2, #1
 800ee4c:	4619      	mov	r1, r3
 800ee4e:	f002 fd31 	bl	80118b4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800ee52:	687b      	ldr	r3, [r7, #4]
 800ee54:	3320      	adds	r3, #32
 800ee56:	4618      	mov	r0, r3
 800ee58:	f7ff ffd6 	bl	800ee08 <_ZN8touchgfx6BlitOpC1Ev>
 800ee5c:	687b      	ldr	r3, [r7, #4]
 800ee5e:	4618      	mov	r0, r3
 800ee60:	3708      	adds	r7, #8
 800ee62:	46bd      	mov	sp, r7
 800ee64:	bd80      	pop	{r7, pc}
 800ee66:	bf00      	nop
 800ee68:	08028b30 	.word	0x08028b30

0800ee6c <_ZN8STM32DMA11getBlitCapsEv>:
 800ee6c:	b480      	push	{r7}
 800ee6e:	b083      	sub	sp, #12
 800ee70:	af00      	add	r7, sp, #0
 800ee72:	6078      	str	r0, [r7, #4]
 800ee74:	2300      	movs	r3, #0
 800ee76:	4618      	mov	r0, r3
 800ee78:	370c      	adds	r7, #12
 800ee7a:	46bd      	mov	sp, r7
 800ee7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee80:	4770      	bx	lr
	...

0800ee84 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 800ee84:	b580      	push	{r7, lr}
 800ee86:	b082      	sub	sp, #8
 800ee88:	af00      	add	r7, sp, #0
 800ee8a:	6078      	str	r0, [r7, #4]
 800ee8c:	6039      	str	r1, [r7, #0]
 800ee8e:	4b03      	ldr	r3, [pc, #12]	@ (800ee9c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800ee90:	4a03      	ldr	r2, [pc, #12]	@ (800eea0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800ee92:	2122      	movs	r1, #34	@ 0x22
 800ee94:	4803      	ldr	r0, [pc, #12]	@ (800eea4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800ee96:	f016 fe7b 	bl	8025b90 <__assert_func>
 800ee9a:	bf00      	nop
 800ee9c:	080276c0 	.word	0x080276c0
 800eea0:	080276e4 	.word	0x080276e4
 800eea4:	08027724 	.word	0x08027724

0800eea8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 800eea8:	b580      	push	{r7, lr}
 800eeaa:	b082      	sub	sp, #8
 800eeac:	af00      	add	r7, sp, #0
 800eeae:	6078      	str	r0, [r7, #4]
 800eeb0:	6039      	str	r1, [r7, #0]
 800eeb2:	4b03      	ldr	r3, [pc, #12]	@ (800eec0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800eeb4:	4a03      	ldr	r2, [pc, #12]	@ (800eec4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800eeb6:	2127      	movs	r1, #39	@ 0x27
 800eeb8:	4803      	ldr	r0, [pc, #12]	@ (800eec8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800eeba:	f016 fe69 	bl	8025b90 <__assert_func>
 800eebe:	bf00      	nop
 800eec0:	080276c0 	.word	0x080276c0
 800eec4:	08027750 	.word	0x08027750
 800eec8:	08027724 	.word	0x08027724

0800eecc <_ZN8STM32DMAD1Ev>:
 800eecc:	b580      	push	{r7, lr}
 800eece:	b082      	sub	sp, #8
 800eed0:	af00      	add	r7, sp, #0
 800eed2:	6078      	str	r0, [r7, #4]
 800eed4:	4a08      	ldr	r2, [pc, #32]	@ (800eef8 <_ZN8STM32DMAD1Ev+0x2c>)
 800eed6:	687b      	ldr	r3, [r7, #4]
 800eed8:	601a      	str	r2, [r3, #0]
 800eeda:	687b      	ldr	r3, [r7, #4]
 800eedc:	330c      	adds	r3, #12
 800eede:	4618      	mov	r0, r3
 800eee0:	f000 f81c 	bl	800ef1c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800eee4:	687b      	ldr	r3, [r7, #4]
 800eee6:	4618      	mov	r0, r3
 800eee8:	f7ff ff40 	bl	800ed6c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800eeec:	687b      	ldr	r3, [r7, #4]
 800eeee:	4618      	mov	r0, r3
 800eef0:	3708      	adds	r7, #8
 800eef2:	46bd      	mov	sp, r7
 800eef4:	bd80      	pop	{r7, pc}
 800eef6:	bf00      	nop
 800eef8:	08028b30 	.word	0x08028b30

0800eefc <_ZN8STM32DMAD0Ev>:
 800eefc:	b580      	push	{r7, lr}
 800eefe:	b082      	sub	sp, #8
 800ef00:	af00      	add	r7, sp, #0
 800ef02:	6078      	str	r0, [r7, #4]
 800ef04:	6878      	ldr	r0, [r7, #4]
 800ef06:	f7ff ffe1 	bl	800eecc <_ZN8STM32DMAD1Ev>
 800ef0a:	2144      	movs	r1, #68	@ 0x44
 800ef0c:	6878      	ldr	r0, [r7, #4]
 800ef0e:	f016 fd90 	bl	8025a32 <_ZdlPvj>
 800ef12:	687b      	ldr	r3, [r7, #4]
 800ef14:	4618      	mov	r0, r3
 800ef16:	3708      	adds	r7, #8
 800ef18:	46bd      	mov	sp, r7
 800ef1a:	bd80      	pop	{r7, pc}

0800ef1c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800ef1c:	b580      	push	{r7, lr}
 800ef1e:	b082      	sub	sp, #8
 800ef20:	af00      	add	r7, sp, #0
 800ef22:	6078      	str	r0, [r7, #4]
 800ef24:	4a05      	ldr	r2, [pc, #20]	@ (800ef3c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800ef26:	687b      	ldr	r3, [r7, #4]
 800ef28:	601a      	str	r2, [r3, #0]
 800ef2a:	687b      	ldr	r3, [r7, #4]
 800ef2c:	4618      	mov	r0, r3
 800ef2e:	f7ff fee7 	bl	800ed00 <_ZN8touchgfx9DMA_QueueD1Ev>
 800ef32:	687b      	ldr	r3, [r7, #4]
 800ef34:	4618      	mov	r0, r3
 800ef36:	3708      	adds	r7, #8
 800ef38:	46bd      	mov	sp, r7
 800ef3a:	bd80      	pop	{r7, pc}
 800ef3c:	08028fa0 	.word	0x08028fa0

0800ef40 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800ef40:	b580      	push	{r7, lr}
 800ef42:	b082      	sub	sp, #8
 800ef44:	af00      	add	r7, sp, #0
 800ef46:	6078      	str	r0, [r7, #4]
 800ef48:	6878      	ldr	r0, [r7, #4]
 800ef4a:	f7ff ffe7 	bl	800ef1c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800ef4e:	2114      	movs	r1, #20
 800ef50:	6878      	ldr	r0, [r7, #4]
 800ef52:	f016 fd6e 	bl	8025a32 <_ZdlPvj>
 800ef56:	687b      	ldr	r3, [r7, #4]
 800ef58:	4618      	mov	r0, r3
 800ef5a:	3708      	adds	r7, #8
 800ef5c:	46bd      	mov	sp, r7
 800ef5e:	bd80      	pop	{r7, pc}

0800ef60 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800ef60:	b480      	push	{r7}
 800ef62:	b083      	sub	sp, #12
 800ef64:	af00      	add	r7, sp, #0
 800ef66:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800ef68:	4a04      	ldr	r2, [pc, #16]	@ (800ef7c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800ef6a:	687b      	ldr	r3, [r7, #4]
 800ef6c:	6013      	str	r3, [r2, #0]
    }
 800ef6e:	bf00      	nop
 800ef70:	370c      	adds	r7, #12
 800ef72:	46bd      	mov	sp, r7
 800ef74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef78:	4770      	bx	lr
 800ef7a:	bf00      	nop
 800ef7c:	20002fb0 	.word	0x20002fb0

0800ef80 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800ef80:	b480      	push	{r7}
 800ef82:	b085      	sub	sp, #20
 800ef84:	af00      	add	r7, sp, #0
 800ef86:	60f8      	str	r0, [r7, #12]
 800ef88:	60b9      	str	r1, [r7, #8]
 800ef8a:	607a      	str	r2, [r7, #4]
 800ef8c:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800ef8e:	4a0b      	ldr	r2, [pc, #44]	@ (800efbc <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800ef90:	68fb      	ldr	r3, [r7, #12]
 800ef92:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800ef94:	68fb      	ldr	r3, [r7, #12]
 800ef96:	68ba      	ldr	r2, [r7, #8]
 800ef98:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800ef9a:	68fb      	ldr	r3, [r7, #12]
 800ef9c:	687a      	ldr	r2, [r7, #4]
 800ef9e:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800efa0:	68fb      	ldr	r3, [r7, #12]
 800efa2:	683a      	ldr	r2, [r7, #0]
 800efa4:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800efa6:	68fb      	ldr	r3, [r7, #12]
 800efa8:	69ba      	ldr	r2, [r7, #24]
 800efaa:	611a      	str	r2, [r3, #16]
    {
    }
 800efac:	68fb      	ldr	r3, [r7, #12]
 800efae:	4618      	mov	r0, r3
 800efb0:	3714      	adds	r7, #20
 800efb2:	46bd      	mov	sp, r7
 800efb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efb8:	4770      	bx	lr
 800efba:	bf00      	nop
 800efbc:	08028c68 	.word	0x08028c68

0800efc0 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800efc0:	b480      	push	{r7}
 800efc2:	b083      	sub	sp, #12
 800efc4:	af00      	add	r7, sp, #0
 800efc6:	6078      	str	r0, [r7, #4]
    {
 800efc8:	4a04      	ldr	r2, [pc, #16]	@ (800efdc <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800efca:	687b      	ldr	r3, [r7, #4]
 800efcc:	601a      	str	r2, [r3, #0]
    }
 800efce:	687b      	ldr	r3, [r7, #4]
 800efd0:	4618      	mov	r0, r3
 800efd2:	370c      	adds	r7, #12
 800efd4:	46bd      	mov	sp, r7
 800efd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efda:	4770      	bx	lr
 800efdc:	08028c68 	.word	0x08028c68

0800efe0 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800efe0:	b580      	push	{r7, lr}
 800efe2:	b082      	sub	sp, #8
 800efe4:	af00      	add	r7, sp, #0
 800efe6:	6078      	str	r0, [r7, #4]
    }
 800efe8:	6878      	ldr	r0, [r7, #4]
 800efea:	f7ff ffe9 	bl	800efc0 <_ZN8touchgfx7MVPHeapD1Ev>
 800efee:	2114      	movs	r1, #20
 800eff0:	6878      	ldr	r0, [r7, #4]
 800eff2:	f016 fd1e 	bl	8025a32 <_ZdlPvj>
 800eff6:	687b      	ldr	r3, [r7, #4]
 800eff8:	4618      	mov	r0, r3
 800effa:	3708      	adds	r7, #8
 800effc:	46bd      	mov	sp, r7
 800effe:	bd80      	pop	{r7, pc}

0800f000 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800f000:	b480      	push	{r7}
 800f002:	b083      	sub	sp, #12
 800f004:	af00      	add	r7, sp, #0
 800f006:	6078      	str	r0, [r7, #4]
    {
 800f008:	4a04      	ldr	r2, [pc, #16]	@ (800f01c <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800f00a:	687b      	ldr	r3, [r7, #4]
 800f00c:	601a      	str	r2, [r3, #0]
    }
 800f00e:	687b      	ldr	r3, [r7, #4]
 800f010:	4618      	mov	r0, r3
 800f012:	370c      	adds	r7, #12
 800f014:	46bd      	mov	sp, r7
 800f016:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f01a:	4770      	bx	lr
 800f01c:	08029384 	.word	0x08029384

0800f020 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800f020:	b580      	push	{r7, lr}
 800f022:	b082      	sub	sp, #8
 800f024:	af00      	add	r7, sp, #0
 800f026:	6078      	str	r0, [r7, #4]
    }
 800f028:	6878      	ldr	r0, [r7, #4]
 800f02a:	f7ff ffe9 	bl	800f000 <_ZN8touchgfx3LCDD1Ev>
 800f02e:	210c      	movs	r1, #12
 800f030:	6878      	ldr	r0, [r7, #4]
 800f032:	f016 fcfe 	bl	8025a32 <_ZdlPvj>
 800f036:	687b      	ldr	r3, [r7, #4]
 800f038:	4618      	mov	r0, r3
 800f03a:	3708      	adds	r7, #8
 800f03c:	46bd      	mov	sp, r7
 800f03e:	bd80      	pop	{r7, pc}

0800f040 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800f040:	b480      	push	{r7}
 800f042:	b083      	sub	sp, #12
 800f044:	af00      	add	r7, sp, #0
 800f046:	6078      	str	r0, [r7, #4]
            : startX(0),
 800f048:	687b      	ldr	r3, [r7, #4]
 800f04a:	2200      	movs	r2, #0
 800f04c:	801a      	strh	r2, [r3, #0]
              startY(0),
 800f04e:	687b      	ldr	r3, [r7, #4]
 800f050:	2200      	movs	r2, #0
 800f052:	805a      	strh	r2, [r3, #2]
              downX(0),
 800f054:	687b      	ldr	r3, [r7, #4]
 800f056:	2200      	movs	r2, #0
 800f058:	809a      	strh	r2, [r3, #4]
              downY(0),
 800f05a:	687b      	ldr	r3, [r7, #4]
 800f05c:	2200      	movs	r2, #0
 800f05e:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800f060:	687b      	ldr	r3, [r7, #4]
 800f062:	2200      	movs	r2, #0
 800f064:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800f066:	687b      	ldr	r3, [r7, #4]
 800f068:	2200      	movs	r2, #0
 800f06a:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800f06c:	687b      	ldr	r3, [r7, #4]
 800f06e:	2200      	movs	r2, #0
 800f070:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800f072:	687b      	ldr	r3, [r7, #4]
 800f074:	2200      	movs	r2, #0
 800f076:	739a      	strb	r2, [r3, #14]
        {
        }
 800f078:	687b      	ldr	r3, [r7, #4]
 800f07a:	4618      	mov	r0, r3
 800f07c:	370c      	adds	r7, #12
 800f07e:	46bd      	mov	sp, r7
 800f080:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f084:	4770      	bx	lr

0800f086 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800f086:	b580      	push	{r7, lr}
 800f088:	b082      	sub	sp, #8
 800f08a:	af00      	add	r7, sp, #0
 800f08c:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800f08e:	687b      	ldr	r3, [r7, #4]
 800f090:	4618      	mov	r0, r3
 800f092:	f7ff ffd5 	bl	800f040 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800f096:	687b      	ldr	r3, [r7, #4]
 800f098:	2200      	movs	r2, #0
 800f09a:	611a      	str	r2, [r3, #16]
 800f09c:	687b      	ldr	r3, [r7, #4]
 800f09e:	2200      	movs	r2, #0
 800f0a0:	829a      	strh	r2, [r3, #20]
    {
    }
 800f0a2:	687b      	ldr	r3, [r7, #4]
 800f0a4:	4618      	mov	r0, r3
 800f0a6:	3708      	adds	r7, #8
 800f0a8:	46bd      	mov	sp, r7
 800f0aa:	bd80      	pop	{r7, pc}

0800f0ac <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800f0ac:	b580      	push	{r7, lr}
 800f0ae:	b084      	sub	sp, #16
 800f0b0:	af00      	add	r7, sp, #0
 800f0b2:	60f8      	str	r0, [r7, #12]
 800f0b4:	60b9      	str	r1, [r7, #8]
 800f0b6:	607a      	str	r2, [r7, #4]
 800f0b8:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800f0ba:	4a55      	ldr	r2, [pc, #340]	@ (800f210 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800f0bc:	68fb      	ldr	r3, [r7, #12]
 800f0be:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800f0c0:	68fb      	ldr	r3, [r7, #12]
 800f0c2:	68ba      	ldr	r2, [r7, #8]
 800f0c4:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800f0c6:	68fb      	ldr	r3, [r7, #12]
 800f0c8:	687a      	ldr	r2, [r7, #4]
 800f0ca:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800f0cc:	68fb      	ldr	r3, [r7, #12]
 800f0ce:	683a      	ldr	r2, [r7, #0]
 800f0d0:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800f0d2:	68fb      	ldr	r3, [r7, #12]
 800f0d4:	2200      	movs	r2, #0
 800f0d6:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800f0d8:	68fb      	ldr	r3, [r7, #12]
 800f0da:	2200      	movs	r2, #0
 800f0dc:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800f0de:	68fb      	ldr	r3, [r7, #12]
 800f0e0:	2200      	movs	r2, #0
 800f0e2:	619a      	str	r2, [r3, #24]
          gestures(),
 800f0e4:	68fb      	ldr	r3, [r7, #12]
 800f0e6:	331c      	adds	r3, #28
 800f0e8:	4618      	mov	r0, r3
 800f0ea:	f7ff ffcc 	bl	800f086 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800f0ee:	68fb      	ldr	r3, [r7, #12]
 800f0f0:	2200      	movs	r2, #0
 800f0f2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800f0f6:	68fb      	ldr	r3, [r7, #12]
 800f0f8:	2200      	movs	r2, #0
 800f0fa:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800f0fc:	68fb      	ldr	r3, [r7, #12]
 800f0fe:	2200      	movs	r2, #0
 800f100:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800f102:	68fb      	ldr	r3, [r7, #12]
 800f104:	2200      	movs	r2, #0
 800f106:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800f108:	68fb      	ldr	r3, [r7, #12]
 800f10a:	2200      	movs	r2, #0
 800f10c:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800f10e:	68fb      	ldr	r3, [r7, #12]
 800f110:	2200      	movs	r2, #0
 800f112:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800f116:	68fb      	ldr	r3, [r7, #12]
 800f118:	2201      	movs	r2, #1
 800f11a:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800f11e:	68fb      	ldr	r3, [r7, #12]
 800f120:	2200      	movs	r2, #0
 800f122:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800f126:	68fb      	ldr	r3, [r7, #12]
 800f128:	2200      	movs	r2, #0
 800f12a:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800f12e:	68fb      	ldr	r3, [r7, #12]
 800f130:	2200      	movs	r2, #0
 800f132:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800f134:	68fb      	ldr	r3, [r7, #12]
 800f136:	3350      	adds	r3, #80	@ 0x50
 800f138:	4618      	mov	r0, r3
 800f13a:	f7fa fb30 	bl	800979e <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800f13e:	68fb      	ldr	r3, [r7, #12]
 800f140:	2200      	movs	r2, #0
 800f142:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800f146:	68fb      	ldr	r3, [r7, #12]
 800f148:	2200      	movs	r2, #0
 800f14a:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800f14c:	68fb      	ldr	r3, [r7, #12]
 800f14e:	2200      	movs	r2, #0
 800f150:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800f152:	68fb      	ldr	r3, [r7, #12]
 800f154:	2200      	movs	r2, #0
 800f156:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800f158:	68fb      	ldr	r3, [r7, #12]
 800f15a:	2201      	movs	r2, #1
 800f15c:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800f160:	68fb      	ldr	r3, [r7, #12]
 800f162:	2200      	movs	r2, #0
 800f164:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800f168:	68fb      	ldr	r3, [r7, #12]
 800f16a:	2200      	movs	r2, #0
 800f16c:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800f170:	68fb      	ldr	r3, [r7, #12]
 800f172:	2201      	movs	r2, #1
 800f174:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800f178:	68fb      	ldr	r3, [r7, #12]
 800f17a:	2200      	movs	r2, #0
 800f17c:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800f180:	68fb      	ldr	r3, [r7, #12]
 800f182:	2200      	movs	r2, #0
 800f184:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800f188:	68fb      	ldr	r3, [r7, #12]
 800f18a:	2200      	movs	r2, #0
 800f18c:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800f190:	68fb      	ldr	r3, [r7, #12]
 800f192:	2200      	movs	r2, #0
 800f194:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800f198:	68fb      	ldr	r3, [r7, #12]
 800f19a:	2200      	movs	r2, #0
 800f19c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800f1a0:	68fb      	ldr	r3, [r7, #12]
 800f1a2:	2200      	movs	r2, #0
 800f1a4:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800f1a6:	68fb      	ldr	r3, [r7, #12]
 800f1a8:	2200      	movs	r2, #0
 800f1aa:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800f1ae:	68fb      	ldr	r3, [r7, #12]
 800f1b0:	2200      	movs	r2, #0
 800f1b2:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800f1b6:	68fb      	ldr	r3, [r7, #12]
 800f1b8:	2201      	movs	r2, #1
 800f1ba:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800f1be:	68fb      	ldr	r3, [r7, #12]
 800f1c0:	2201      	movs	r2, #1
 800f1c2:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800f1c6:	4a13      	ldr	r2, [pc, #76]	@ (800f214 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800f1c8:	68fb      	ldr	r3, [r7, #12]
 800f1ca:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800f1cc:	4a12      	ldr	r2, [pc, #72]	@ (800f218 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800f1ce:	8b3b      	ldrh	r3, [r7, #24]
 800f1d0:	8013      	strh	r3, [r2, #0]
 800f1d2:	4b11      	ldr	r3, [pc, #68]	@ (800f218 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800f1d4:	881a      	ldrh	r2, [r3, #0]
 800f1d6:	4b11      	ldr	r3, [pc, #68]	@ (800f21c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800f1d8:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800f1da:	4a11      	ldr	r2, [pc, #68]	@ (800f220 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800f1dc:	8bbb      	ldrh	r3, [r7, #28]
 800f1de:	8013      	strh	r3, [r2, #0]
 800f1e0:	4b0f      	ldr	r3, [pc, #60]	@ (800f220 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800f1e2:	881a      	ldrh	r2, [r3, #0]
 800f1e4:	4b0f      	ldr	r3, [pc, #60]	@ (800f224 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800f1e6:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800f1e8:	4b0f      	ldr	r3, [pc, #60]	@ (800f228 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800f1ea:	2200      	movs	r2, #0
 800f1ec:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800f1ee:	8b3a      	ldrh	r2, [r7, #24]
 800f1f0:	8bbb      	ldrh	r3, [r7, #28]
 800f1f2:	429a      	cmp	r2, r3
 800f1f4:	bf34      	ite	cc
 800f1f6:	2301      	movcc	r3, #1
 800f1f8:	2300      	movcs	r3, #0
 800f1fa:	b2db      	uxtb	r3, r3
 800f1fc:	461a      	mov	r2, r3
 800f1fe:	68fb      	ldr	r3, [r7, #12]
 800f200:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800f204:	68fb      	ldr	r3, [r7, #12]
 800f206:	4618      	mov	r0, r3
 800f208:	3710      	adds	r7, #16
 800f20a:	46bd      	mov	sp, r7
 800f20c:	bd80      	pop	{r7, pc}
 800f20e:	bf00      	nop
 800f210:	08028e78 	.word	0x08028e78
 800f214:	20002f54 	.word	0x20002f54
 800f218:	20002f48 	.word	0x20002f48
 800f21c:	20002f4e 	.word	0x20002f4e
 800f220:	20002f4a 	.word	0x20002f4a
 800f224:	20002f50 	.word	0x20002f50
 800f228:	20002f4c 	.word	0x20002f4c

0800f22c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800f22c:	b580      	push	{r7, lr}
 800f22e:	b082      	sub	sp, #8
 800f230:	af00      	add	r7, sp, #0
 800f232:	6078      	str	r0, [r7, #4]
 800f234:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 800f236:	683b      	ldr	r3, [r7, #0]
 800f238:	4618      	mov	r0, r3
 800f23a:	f7f9 fc1b 	bl	8008a74 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800f23e:	bf00      	nop
 800f240:	3708      	adds	r7, #8
 800f242:	46bd      	mov	sp, r7
 800f244:	bd80      	pop	{r7, pc}
	...

0800f248 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800f248:	b580      	push	{r7, lr}
 800f24a:	b086      	sub	sp, #24
 800f24c:	af02      	add	r7, sp, #8
 800f24e:	60f8      	str	r0, [r7, #12]
 800f250:	60b9      	str	r1, [r7, #8]
 800f252:	607a      	str	r2, [r7, #4]
 800f254:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800f256:	68f8      	ldr	r0, [r7, #12]
 800f258:	69bb      	ldr	r3, [r7, #24]
 800f25a:	9300      	str	r3, [sp, #0]
 800f25c:	683b      	ldr	r3, [r7, #0]
 800f25e:	687a      	ldr	r2, [r7, #4]
 800f260:	68b9      	ldr	r1, [r7, #8]
 800f262:	f7ff fe8d 	bl	800ef80 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800f266:	4a04      	ldr	r2, [pc, #16]	@ (800f278 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800f268:	68fb      	ldr	r3, [r7, #12]
 800f26a:	601a      	str	r2, [r3, #0]
    {

    }
 800f26c:	68fb      	ldr	r3, [r7, #12]
 800f26e:	4618      	mov	r0, r3
 800f270:	3710      	adds	r7, #16
 800f272:	46bd      	mov	sp, r7
 800f274:	bd80      	pop	{r7, pc}
 800f276:	bf00      	nop
 800f278:	08028c54 	.word	0x08028c54

0800f27c <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800f27c:	b580      	push	{r7, lr}
 800f27e:	af00      	add	r7, sp, #0
 800f280:	4801      	ldr	r0, [pc, #4]	@ (800f288 <__tcf_0+0xc>)
 800f282:	f000 f969 	bl	800f558 <_ZN12FrontendHeapD1Ev>
 800f286:	bd80      	pop	{r7, pc}
 800f288:	20000688 	.word	0x20000688

0800f28c <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800f28c:	b580      	push	{r7, lr}
 800f28e:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800f290:	4b11      	ldr	r3, [pc, #68]	@ (800f2d8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f292:	681b      	ldr	r3, [r3, #0]
 800f294:	f3bf 8f5b 	dmb	ish
 800f298:	f003 0301 	and.w	r3, r3, #1
 800f29c:	2b00      	cmp	r3, #0
 800f29e:	bf0c      	ite	eq
 800f2a0:	2301      	moveq	r3, #1
 800f2a2:	2300      	movne	r3, #0
 800f2a4:	b2db      	uxtb	r3, r3
 800f2a6:	2b00      	cmp	r3, #0
 800f2a8:	d013      	beq.n	800f2d2 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800f2aa:	480b      	ldr	r0, [pc, #44]	@ (800f2d8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f2ac:	f016 fbc3 	bl	8025a36 <__cxa_guard_acquire>
 800f2b0:	4603      	mov	r3, r0
 800f2b2:	2b00      	cmp	r3, #0
 800f2b4:	bf14      	ite	ne
 800f2b6:	2301      	movne	r3, #1
 800f2b8:	2300      	moveq	r3, #0
 800f2ba:	b2db      	uxtb	r3, r3
 800f2bc:	2b00      	cmp	r3, #0
 800f2be:	d008      	beq.n	800f2d2 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800f2c0:	4806      	ldr	r0, [pc, #24]	@ (800f2dc <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800f2c2:	f000 f867 	bl	800f394 <_ZN12FrontendHeapC1Ev>
 800f2c6:	4806      	ldr	r0, [pc, #24]	@ (800f2e0 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800f2c8:	f016 fc80 	bl	8025bcc <atexit>
 800f2cc:	4802      	ldr	r0, [pc, #8]	@ (800f2d8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f2ce:	f016 fbbe 	bl	8025a4e <__cxa_guard_release>
        return instance;
 800f2d2:	4b02      	ldr	r3, [pc, #8]	@ (800f2dc <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800f2d4:	4618      	mov	r0, r3
 800f2d6:	bd80      	pop	{r7, pc}
 800f2d8:	20000c08 	.word	0x20000c08
 800f2dc:	20000688 	.word	0x20000688
 800f2e0:	0800f27d 	.word	0x0800f27d

0800f2e4 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800f2e4:	b580      	push	{r7, lr}
 800f2e6:	b082      	sub	sp, #8
 800f2e8:	af00      	add	r7, sp, #0
 800f2ea:	6078      	str	r0, [r7, #4]
 800f2ec:	4a05      	ldr	r2, [pc, #20]	@ (800f304 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800f2ee:	687b      	ldr	r3, [r7, #4]
 800f2f0:	601a      	str	r2, [r3, #0]
 800f2f2:	687b      	ldr	r3, [r7, #4]
 800f2f4:	4618      	mov	r0, r3
 800f2f6:	f7ff fe63 	bl	800efc0 <_ZN8touchgfx7MVPHeapD1Ev>
 800f2fa:	687b      	ldr	r3, [r7, #4]
 800f2fc:	4618      	mov	r0, r3
 800f2fe:	3708      	adds	r7, #8
 800f300:	46bd      	mov	sp, r7
 800f302:	bd80      	pop	{r7, pc}
 800f304:	08028c54 	.word	0x08028c54

0800f308 <_ZN16FrontendHeapBaseD0Ev>:
 800f308:	b580      	push	{r7, lr}
 800f30a:	b082      	sub	sp, #8
 800f30c:	af00      	add	r7, sp, #0
 800f30e:	6078      	str	r0, [r7, #4]
 800f310:	6878      	ldr	r0, [r7, #4]
 800f312:	f7ff ffe7 	bl	800f2e4 <_ZN16FrontendHeapBaseD1Ev>
 800f316:	2114      	movs	r1, #20
 800f318:	6878      	ldr	r0, [r7, #4]
 800f31a:	f016 fb8a 	bl	8025a32 <_ZdlPvj>
 800f31e:	687b      	ldr	r3, [r7, #4]
 800f320:	4618      	mov	r0, r3
 800f322:	3708      	adds	r7, #8
 800f324:	46bd      	mov	sp, r7
 800f326:	bd80      	pop	{r7, pc}

0800f328 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800f328:	b580      	push	{r7, lr}
 800f32a:	b082      	sub	sp, #8
 800f32c:	af00      	add	r7, sp, #0
 800f32e:	6078      	str	r0, [r7, #4]
 800f330:	687b      	ldr	r3, [r7, #4]
 800f332:	4618      	mov	r0, r3
 800f334:	f001 f942 	bl	80105bc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f338:	4a03      	ldr	r2, [pc, #12]	@ (800f348 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f33a:	687b      	ldr	r3, [r7, #4]
 800f33c:	601a      	str	r2, [r3, #0]
 800f33e:	687b      	ldr	r3, [r7, #4]
 800f340:	4618      	mov	r0, r3
 800f342:	3708      	adds	r7, #8
 800f344:	46bd      	mov	sp, r7
 800f346:	bd80      	pop	{r7, pc}
 800f348:	08028c20 	.word	0x08028c20

0800f34c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f34c:	b580      	push	{r7, lr}
 800f34e:	b082      	sub	sp, #8
 800f350:	af00      	add	r7, sp, #0
 800f352:	6078      	str	r0, [r7, #4]
 800f354:	687b      	ldr	r3, [r7, #4]
 800f356:	4618      	mov	r0, r3
 800f358:	f001 f930 	bl	80105bc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f35c:	4a03      	ldr	r2, [pc, #12]	@ (800f36c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f35e:	687b      	ldr	r3, [r7, #4]
 800f360:	601a      	str	r2, [r3, #0]
 800f362:	687b      	ldr	r3, [r7, #4]
 800f364:	4618      	mov	r0, r3
 800f366:	3708      	adds	r7, #8
 800f368:	46bd      	mov	sp, r7
 800f36a:	bd80      	pop	{r7, pc}
 800f36c:	08028bec 	.word	0x08028bec

0800f370 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f370:	b580      	push	{r7, lr}
 800f372:	b082      	sub	sp, #8
 800f374:	af00      	add	r7, sp, #0
 800f376:	6078      	str	r0, [r7, #4]
 800f378:	687b      	ldr	r3, [r7, #4]
 800f37a:	4618      	mov	r0, r3
 800f37c:	f001 f91e 	bl	80105bc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f380:	4a03      	ldr	r2, [pc, #12]	@ (800f390 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f382:	687b      	ldr	r3, [r7, #4]
 800f384:	601a      	str	r2, [r3, #0]
 800f386:	687b      	ldr	r3, [r7, #4]
 800f388:	4618      	mov	r0, r3
 800f38a:	3708      	adds	r7, #8
 800f38c:	46bd      	mov	sp, r7
 800f38e:	bd80      	pop	{r7, pc}
 800f390:	08028bb8 	.word	0x08028bb8

0800f394 <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f394:	b590      	push	{r4, r7, lr}
 800f396:	b085      	sub	sp, #20
 800f398:	af02      	add	r7, sp, #8
 800f39a:	6078      	str	r0, [r7, #4]
        app(model, *this)
 800f39c:	6878      	ldr	r0, [r7, #4]
 800f39e:	687b      	ldr	r3, [r7, #4]
 800f3a0:	f103 0114 	add.w	r1, r3, #20
 800f3a4:	687b      	ldr	r3, [r7, #4]
 800f3a6:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f3aa:	687b      	ldr	r3, [r7, #4]
 800f3ac:	f203 440c 	addw	r4, r3, #1036	@ 0x40c
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f3b0:	687b      	ldr	r3, [r7, #4]
 800f3b2:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
        app(model, *this)
 800f3b6:	9300      	str	r3, [sp, #0]
 800f3b8:	4623      	mov	r3, r4
 800f3ba:	f7ff ff45 	bl	800f248 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800f3be:	4a18      	ldr	r2, [pc, #96]	@ (800f420 <_ZN12FrontendHeapC1Ev+0x8c>)
 800f3c0:	687b      	ldr	r3, [r7, #4]
 800f3c2:	601a      	str	r2, [r3, #0]
 800f3c4:	687b      	ldr	r3, [r7, #4]
 800f3c6:	3314      	adds	r3, #20
 800f3c8:	4618      	mov	r0, r3
 800f3ca:	f7ff ffad 	bl	800f328 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f3ce:	687b      	ldr	r3, [r7, #4]
 800f3d0:	332c      	adds	r3, #44	@ 0x2c
 800f3d2:	4618      	mov	r0, r3
 800f3d4:	f7ff ffba 	bl	800f34c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f3d8:	687b      	ldr	r3, [r7, #4]
 800f3da:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800f3de:	4618      	mov	r0, r3
 800f3e0:	f7ff ffc6 	bl	800f370 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f3e4:	687b      	ldr	r3, [r7, #4]
 800f3e6:	f503 6084 	add.w	r0, r3, #1056	@ 0x420
 800f3ea:	687b      	ldr	r3, [r7, #4]
 800f3ec:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800f3f0:	687a      	ldr	r2, [r7, #4]
 800f3f2:	4619      	mov	r1, r3
 800f3f4:	f7fe fa92 	bl	800d91c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800f3f8:	687b      	ldr	r3, [r7, #4]
 800f3fa:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800f3fe:	4618      	mov	r0, r3
 800f400:	f7fe ff48 	bl	800e294 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800f404:	687a      	ldr	r2, [r7, #4]
 800f406:	687b      	ldr	r3, [r7, #4]
 800f408:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800f40c:	4619      	mov	r1, r3
 800f40e:	4610      	mov	r0, r2
 800f410:	f7ff ff0c 	bl	800f22c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800f414:	687b      	ldr	r3, [r7, #4]
 800f416:	4618      	mov	r0, r3
 800f418:	370c      	adds	r7, #12
 800f41a:	46bd      	mov	sp, r7
 800f41c:	bd90      	pop	{r4, r7, pc}
 800f41e:	bf00      	nop
 800f420:	08028ba4 	.word	0x08028ba4

0800f424 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800f424:	b580      	push	{r7, lr}
 800f426:	b086      	sub	sp, #24
 800f428:	af02      	add	r7, sp, #8
 800f42a:	60f8      	str	r0, [r7, #12]
 800f42c:	60b9      	str	r1, [r7, #8]
 800f42e:	607a      	str	r2, [r7, #4]
 800f430:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800f432:	68f8      	ldr	r0, [r7, #12]
 800f434:	8bbb      	ldrh	r3, [r7, #28]
 800f436:	9301      	str	r3, [sp, #4]
 800f438:	8b3b      	ldrh	r3, [r7, #24]
 800f43a:	9300      	str	r3, [sp, #0]
 800f43c:	683b      	ldr	r3, [r7, #0]
 800f43e:	687a      	ldr	r2, [r7, #4]
 800f440:	68b9      	ldr	r1, [r7, #8]
 800f442:	f7ff fe33 	bl	800f0ac <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800f446:	4a04      	ldr	r2, [pc, #16]	@ (800f458 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f448:	68fb      	ldr	r3, [r7, #12]
 800f44a:	601a      	str	r2, [r3, #0]
    {
    }
 800f44c:	68fb      	ldr	r3, [r7, #12]
 800f44e:	4618      	mov	r0, r3
 800f450:	3710      	adds	r7, #16
 800f452:	46bd      	mov	sp, r7
 800f454:	bd80      	pop	{r7, pc}
 800f456:	bf00      	nop
 800f458:	08028ca4 	.word	0x08028ca4

0800f45c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800f45c:	b580      	push	{r7, lr}
 800f45e:	b086      	sub	sp, #24
 800f460:	af02      	add	r7, sp, #8
 800f462:	60f8      	str	r0, [r7, #12]
 800f464:	60b9      	str	r1, [r7, #8]
 800f466:	607a      	str	r2, [r7, #4]
 800f468:	603b      	str	r3, [r7, #0]
 800f46a:	68f8      	ldr	r0, [r7, #12]
 800f46c:	8bbb      	ldrh	r3, [r7, #28]
 800f46e:	9301      	str	r3, [sp, #4]
 800f470:	8b3b      	ldrh	r3, [r7, #24]
 800f472:	9300      	str	r3, [sp, #0]
 800f474:	683b      	ldr	r3, [r7, #0]
 800f476:	687a      	ldr	r2, [r7, #4]
 800f478:	68b9      	ldr	r1, [r7, #8]
 800f47a:	f7ff ffd3 	bl	800f424 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f47e:	4a04      	ldr	r2, [pc, #16]	@ (800f490 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f480:	68fb      	ldr	r3, [r7, #12]
 800f482:	601a      	str	r2, [r3, #0]
    {
    }
 800f484:	68fb      	ldr	r3, [r7, #12]
 800f486:	4618      	mov	r0, r3
 800f488:	3710      	adds	r7, #16
 800f48a:	46bd      	mov	sp, r7
 800f48c:	bd80      	pop	{r7, pc}
 800f48e:	bf00      	nop
 800f490:	08028a58 	.word	0x08028a58

0800f494 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800f494:	b480      	push	{r7}
 800f496:	b083      	sub	sp, #12
 800f498:	af00      	add	r7, sp, #0
 800f49a:	6078      	str	r0, [r7, #4]
 800f49c:	4a04      	ldr	r2, [pc, #16]	@ (800f4b0 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800f49e:	687b      	ldr	r3, [r7, #4]
 800f4a0:	601a      	str	r2, [r3, #0]
 800f4a2:	687b      	ldr	r3, [r7, #4]
 800f4a4:	4618      	mov	r0, r3
 800f4a6:	370c      	adds	r7, #12
 800f4a8:	46bd      	mov	sp, r7
 800f4aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4ae:	4770      	bx	lr
 800f4b0:	08028a40 	.word	0x08028a40

0800f4b4 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800f4b4:	b580      	push	{r7, lr}
 800f4b6:	b082      	sub	sp, #8
 800f4b8:	af00      	add	r7, sp, #0
 800f4ba:	6078      	str	r0, [r7, #4]
 800f4bc:	687b      	ldr	r3, [r7, #4]
 800f4be:	4618      	mov	r0, r3
 800f4c0:	f7ff ffe8 	bl	800f494 <_ZN8touchgfx15TouchControllerC1Ev>
 800f4c4:	4a03      	ldr	r2, [pc, #12]	@ (800f4d4 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800f4c6:	687b      	ldr	r3, [r7, #4]
 800f4c8:	601a      	str	r2, [r3, #0]
 800f4ca:	687b      	ldr	r3, [r7, #4]
 800f4cc:	4618      	mov	r0, r3
 800f4ce:	3708      	adds	r7, #8
 800f4d0:	46bd      	mov	sp, r7
 800f4d2:	bd80      	pop	{r7, pc}
 800f4d4:	08028a28 	.word	0x08028a28

0800f4d8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 800f4d8:	b590      	push	{r4, r7, lr}
 800f4da:	b085      	sub	sp, #20
 800f4dc:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800f4de:	f7fd fff1 	bl	800d4c4 <_ZN14BitmapDatabase11getInstanceEv>
 800f4e2:	4604      	mov	r4, r0
 800f4e4:	f7fd fff8 	bl	800d4d8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800f4e8:	4603      	mov	r3, r0
 800f4ea:	4619      	mov	r1, r3
 800f4ec:	2300      	movs	r3, #0
 800f4ee:	9300      	str	r3, [sp, #0]
 800f4f0:	2300      	movs	r3, #0
 800f4f2:	2200      	movs	r2, #0
 800f4f4:	4620      	mov	r0, r4
 800f4f6:	f007 ffb5 	bl	8017464 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800f4fa:	4809      	ldr	r0, [pc, #36]	@ (800f520 <touchgfx_init+0x48>)
 800f4fc:	f7ff fd30 	bl	800ef60 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800f500:	2000      	movs	r0, #0
 800f502:	f7fe f92d 	bl	800d760 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800f506:	4807      	ldr	r0, [pc, #28]	@ (800f524 <touchgfx_init+0x4c>)
 800f508:	f007 ff14 	bl	8017334 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800f50c:	f7ff febe 	bl	800f28c <_ZN12FrontendHeap11getInstanceEv>
 800f510:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800f512:	4805      	ldr	r0, [pc, #20]	@ (800f528 <touchgfx_init+0x50>)
 800f514:	f7ff fab4 	bl	800ea80 <_ZN11TouchGFXHAL10initializeEv>
}
 800f518:	bf00      	nop
 800f51a:	370c      	adds	r7, #12
 800f51c:	46bd      	mov	sp, r7
 800f51e:	bd90      	pop	{r4, r7, pc}
 800f520:	20000ce0 	.word	0x20000ce0
 800f524:	20000028 	.word	0x20000028
 800f528:	20000ce4 	.word	0x20000ce4

0800f52c <touchgfx_components_init>:

void touchgfx_components_init()
{
 800f52c:	b480      	push	{r7}
 800f52e:	af00      	add	r7, sp, #0
}
 800f530:	bf00      	nop
 800f532:	46bd      	mov	sp, r7
 800f534:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f538:	4770      	bx	lr
	...

0800f53c <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800f53c:	b580      	push	{r7, lr}
 800f53e:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800f540:	f7ff fbb4 	bl	800ecac <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800f544:	4603      	mov	r3, r0
 800f546:	2b00      	cmp	r3, #0
 800f548:	d002      	beq.n	800f550 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800f54a:	4802      	ldr	r0, [pc, #8]	@ (800f554 <touchgfx_taskEntry+0x18>)
 800f54c:	f7ff f96a 	bl	800e824 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800f550:	bf00      	nop
 800f552:	bd80      	pop	{r7, pc}
 800f554:	20000ce4 	.word	0x20000ce4

0800f558 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800f558:	b580      	push	{r7, lr}
 800f55a:	b082      	sub	sp, #8
 800f55c:	af00      	add	r7, sp, #0
 800f55e:	6078      	str	r0, [r7, #4]
 800f560:	4a10      	ldr	r2, [pc, #64]	@ (800f5a4 <_ZN12FrontendHeapD1Ev+0x4c>)
 800f562:	687b      	ldr	r3, [r7, #4]
 800f564:	601a      	str	r2, [r3, #0]
 800f566:	687b      	ldr	r3, [r7, #4]
 800f568:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800f56c:	4618      	mov	r0, r3
 800f56e:	f7fe f99f 	bl	800d8b0 <_ZN19FrontendApplicationD1Ev>
 800f572:	687b      	ldr	r3, [r7, #4]
 800f574:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800f578:	4618      	mov	r0, r3
 800f57a:	f000 f827 	bl	800f5cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f57e:	687b      	ldr	r3, [r7, #4]
 800f580:	332c      	adds	r3, #44	@ 0x2c
 800f582:	4618      	mov	r0, r3
 800f584:	f000 f844 	bl	800f610 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f588:	687b      	ldr	r3, [r7, #4]
 800f58a:	3314      	adds	r3, #20
 800f58c:	4618      	mov	r0, r3
 800f58e:	f000 f863 	bl	800f658 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f592:	687b      	ldr	r3, [r7, #4]
 800f594:	4618      	mov	r0, r3
 800f596:	f7ff fea5 	bl	800f2e4 <_ZN16FrontendHeapBaseD1Ev>
 800f59a:	687b      	ldr	r3, [r7, #4]
 800f59c:	4618      	mov	r0, r3
 800f59e:	3708      	adds	r7, #8
 800f5a0:	46bd      	mov	sp, r7
 800f5a2:	bd80      	pop	{r7, pc}
 800f5a4:	08028ba4 	.word	0x08028ba4

0800f5a8 <_ZN12FrontendHeapD0Ev>:
 800f5a8:	b580      	push	{r7, lr}
 800f5aa:	b082      	sub	sp, #8
 800f5ac:	af00      	add	r7, sp, #0
 800f5ae:	6078      	str	r0, [r7, #4]
 800f5b0:	6878      	ldr	r0, [r7, #4]
 800f5b2:	f7ff ffd1 	bl	800f558 <_ZN12FrontendHeapD1Ev>
 800f5b6:	f44f 61b0 	mov.w	r1, #1408	@ 0x580
 800f5ba:	6878      	ldr	r0, [r7, #4]
 800f5bc:	f016 fa39 	bl	8025a32 <_ZdlPvj>
 800f5c0:	687b      	ldr	r3, [r7, #4]
 800f5c2:	4618      	mov	r0, r3
 800f5c4:	3708      	adds	r7, #8
 800f5c6:	46bd      	mov	sp, r7
 800f5c8:	bd80      	pop	{r7, pc}
	...

0800f5cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f5cc:	b580      	push	{r7, lr}
 800f5ce:	b082      	sub	sp, #8
 800f5d0:	af00      	add	r7, sp, #0
 800f5d2:	6078      	str	r0, [r7, #4]
 800f5d4:	4a05      	ldr	r2, [pc, #20]	@ (800f5ec <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f5d6:	687b      	ldr	r3, [r7, #4]
 800f5d8:	601a      	str	r2, [r3, #0]
 800f5da:	687b      	ldr	r3, [r7, #4]
 800f5dc:	4618      	mov	r0, r3
 800f5de:	f000 ffec 	bl	80105ba <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f5e2:	687b      	ldr	r3, [r7, #4]
 800f5e4:	4618      	mov	r0, r3
 800f5e6:	3708      	adds	r7, #8
 800f5e8:	46bd      	mov	sp, r7
 800f5ea:	bd80      	pop	{r7, pc}
 800f5ec:	08028bb8 	.word	0x08028bb8

0800f5f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f5f0:	b580      	push	{r7, lr}
 800f5f2:	b082      	sub	sp, #8
 800f5f4:	af00      	add	r7, sp, #0
 800f5f6:	6078      	str	r0, [r7, #4]
 800f5f8:	6878      	ldr	r0, [r7, #4]
 800f5fa:	f7ff ffe7 	bl	800f5cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f5fe:	2114      	movs	r1, #20
 800f600:	6878      	ldr	r0, [r7, #4]
 800f602:	f016 fa16 	bl	8025a32 <_ZdlPvj>
 800f606:	687b      	ldr	r3, [r7, #4]
 800f608:	4618      	mov	r0, r3
 800f60a:	3708      	adds	r7, #8
 800f60c:	46bd      	mov	sp, r7
 800f60e:	bd80      	pop	{r7, pc}

0800f610 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f610:	b580      	push	{r7, lr}
 800f612:	b082      	sub	sp, #8
 800f614:	af00      	add	r7, sp, #0
 800f616:	6078      	str	r0, [r7, #4]
 800f618:	4a05      	ldr	r2, [pc, #20]	@ (800f630 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f61a:	687b      	ldr	r3, [r7, #4]
 800f61c:	601a      	str	r2, [r3, #0]
 800f61e:	687b      	ldr	r3, [r7, #4]
 800f620:	4618      	mov	r0, r3
 800f622:	f000 ffca 	bl	80105ba <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f626:	687b      	ldr	r3, [r7, #4]
 800f628:	4618      	mov	r0, r3
 800f62a:	3708      	adds	r7, #8
 800f62c:	46bd      	mov	sp, r7
 800f62e:	bd80      	pop	{r7, pc}
 800f630:	08028bec 	.word	0x08028bec

0800f634 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f634:	b580      	push	{r7, lr}
 800f636:	b082      	sub	sp, #8
 800f638:	af00      	add	r7, sp, #0
 800f63a:	6078      	str	r0, [r7, #4]
 800f63c:	6878      	ldr	r0, [r7, #4]
 800f63e:	f7ff ffe7 	bl	800f610 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f642:	f44f 7178 	mov.w	r1, #992	@ 0x3e0
 800f646:	6878      	ldr	r0, [r7, #4]
 800f648:	f016 f9f3 	bl	8025a32 <_ZdlPvj>
 800f64c:	687b      	ldr	r3, [r7, #4]
 800f64e:	4618      	mov	r0, r3
 800f650:	3708      	adds	r7, #8
 800f652:	46bd      	mov	sp, r7
 800f654:	bd80      	pop	{r7, pc}
	...

0800f658 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f658:	b580      	push	{r7, lr}
 800f65a:	b082      	sub	sp, #8
 800f65c:	af00      	add	r7, sp, #0
 800f65e:	6078      	str	r0, [r7, #4]
 800f660:	4a05      	ldr	r2, [pc, #20]	@ (800f678 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f662:	687b      	ldr	r3, [r7, #4]
 800f664:	601a      	str	r2, [r3, #0]
 800f666:	687b      	ldr	r3, [r7, #4]
 800f668:	4618      	mov	r0, r3
 800f66a:	f000 ffa6 	bl	80105ba <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f66e:	687b      	ldr	r3, [r7, #4]
 800f670:	4618      	mov	r0, r3
 800f672:	3708      	adds	r7, #8
 800f674:	46bd      	mov	sp, r7
 800f676:	bd80      	pop	{r7, pc}
 800f678:	08028c20 	.word	0x08028c20

0800f67c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f67c:	b580      	push	{r7, lr}
 800f67e:	b082      	sub	sp, #8
 800f680:	af00      	add	r7, sp, #0
 800f682:	6078      	str	r0, [r7, #4]
 800f684:	6878      	ldr	r0, [r7, #4]
 800f686:	f7ff ffe7 	bl	800f658 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f68a:	2118      	movs	r1, #24
 800f68c:	6878      	ldr	r0, [r7, #4]
 800f68e:	f016 f9d0 	bl	8025a32 <_ZdlPvj>
 800f692:	687b      	ldr	r3, [r7, #4]
 800f694:	4618      	mov	r0, r3
 800f696:	3708      	adds	r7, #8
 800f698:	46bd      	mov	sp, r7
 800f69a:	bd80      	pop	{r7, pc}

0800f69c <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800f69c:	b580      	push	{r7, lr}
 800f69e:	b082      	sub	sp, #8
 800f6a0:	af00      	add	r7, sp, #0
 800f6a2:	6078      	str	r0, [r7, #4]
 800f6a4:	4a05      	ldr	r2, [pc, #20]	@ (800f6bc <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800f6a6:	687b      	ldr	r3, [r7, #4]
 800f6a8:	601a      	str	r2, [r3, #0]
 800f6aa:	687b      	ldr	r3, [r7, #4]
 800f6ac:	4618      	mov	r0, r3
 800f6ae:	f7ff fca7 	bl	800f000 <_ZN8touchgfx3LCDD1Ev>
 800f6b2:	687b      	ldr	r3, [r7, #4]
 800f6b4:	4618      	mov	r0, r3
 800f6b6:	3708      	adds	r7, #8
 800f6b8:	46bd      	mov	sp, r7
 800f6ba:	bd80      	pop	{r7, pc}
 800f6bc:	0802980c 	.word	0x0802980c

0800f6c0 <_ZN8touchgfx8LCD16bppD0Ev>:
 800f6c0:	b580      	push	{r7, lr}
 800f6c2:	b082      	sub	sp, #8
 800f6c4:	af00      	add	r7, sp, #0
 800f6c6:	6078      	str	r0, [r7, #4]
 800f6c8:	6878      	ldr	r0, [r7, #4]
 800f6ca:	f7ff ffe7 	bl	800f69c <_ZN8touchgfx8LCD16bppD1Ev>
 800f6ce:	218c      	movs	r1, #140	@ 0x8c
 800f6d0:	6878      	ldr	r0, [r7, #4]
 800f6d2:	f016 f9ae 	bl	8025a32 <_ZdlPvj>
 800f6d6:	687b      	ldr	r3, [r7, #4]
 800f6d8:	4618      	mov	r0, r3
 800f6da:	3708      	adds	r7, #8
 800f6dc:	46bd      	mov	sp, r7
 800f6de:	bd80      	pop	{r7, pc}

0800f6e0 <_Z41__static_initialization_and_destruction_0ii>:
 800f6e0:	b580      	push	{r7, lr}
 800f6e2:	b084      	sub	sp, #16
 800f6e4:	af02      	add	r7, sp, #8
 800f6e6:	6078      	str	r0, [r7, #4]
 800f6e8:	6039      	str	r1, [r7, #0]
 800f6ea:	687b      	ldr	r3, [r7, #4]
 800f6ec:	2b01      	cmp	r3, #1
 800f6ee:	d119      	bne.n	800f724 <_Z41__static_initialization_and_destruction_0ii+0x44>
 800f6f0:	683b      	ldr	r3, [r7, #0]
 800f6f2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f6f6:	4293      	cmp	r3, r2
 800f6f8:	d114      	bne.n	800f724 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800f6fa:	4818      	ldr	r0, [pc, #96]	@ (800f75c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f6fc:	f7ff feda 	bl	800f4b4 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800f700:	4817      	ldr	r0, [pc, #92]	@ (800f760 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f702:	f7ff fb8f 	bl	800ee24 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800f706:	4817      	ldr	r0, [pc, #92]	@ (800f764 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f708:	f00c ffa8 	bl	801c65c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 800f70c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800f710:	9301      	str	r3, [sp, #4]
 800f712:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800f716:	9300      	str	r3, [sp, #0]
 800f718:	4b10      	ldr	r3, [pc, #64]	@ (800f75c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f71a:	4a12      	ldr	r2, [pc, #72]	@ (800f764 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f71c:	4910      	ldr	r1, [pc, #64]	@ (800f760 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f71e:	4812      	ldr	r0, [pc, #72]	@ (800f768 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f720:	f7ff fe9c 	bl	800f45c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f724:	687b      	ldr	r3, [r7, #4]
 800f726:	2b00      	cmp	r3, #0
 800f728:	d113      	bne.n	800f752 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f72a:	683b      	ldr	r3, [r7, #0]
 800f72c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f730:	4293      	cmp	r3, r2
 800f732:	d10e      	bne.n	800f752 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f734:	480c      	ldr	r0, [pc, #48]	@ (800f768 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f736:	f7ff fa33 	bl	800eba0 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800f73a:	480c      	ldr	r0, [pc, #48]	@ (800f76c <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800f73c:	f7f8 fb66 	bl	8007e0c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800f740:	4808      	ldr	r0, [pc, #32]	@ (800f764 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f742:	f7ff ffab 	bl	800f69c <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800f746:	4806      	ldr	r0, [pc, #24]	@ (800f760 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f748:	f7ff fbc0 	bl	800eecc <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800f74c:	4803      	ldr	r0, [pc, #12]	@ (800f75c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f74e:	f7fe ff6f 	bl	800e630 <_ZN20STM32TouchControllerD1Ev>
}
 800f752:	bf00      	nop
 800f754:	3708      	adds	r7, #8
 800f756:	46bd      	mov	sp, r7
 800f758:	bd80      	pop	{r7, pc}
 800f75a:	bf00      	nop
 800f75c:	20000c0c 	.word	0x20000c0c
 800f760:	20000c10 	.word	0x20000c10
 800f764:	20000c54 	.word	0x20000c54
 800f768:	20000ce4 	.word	0x20000ce4
 800f76c:	20000028 	.word	0x20000028

0800f770 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800f770:	b480      	push	{r7}
 800f772:	b083      	sub	sp, #12
 800f774:	af00      	add	r7, sp, #0
 800f776:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800f778:	2301      	movs	r3, #1
    }
 800f77a:	4618      	mov	r0, r3
 800f77c:	370c      	adds	r7, #12
 800f77e:	46bd      	mov	sp, r7
 800f780:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f784:	4770      	bx	lr

0800f786 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800f786:	b480      	push	{r7}
 800f788:	b083      	sub	sp, #12
 800f78a:	af00      	add	r7, sp, #0
 800f78c:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800f78e:	230c      	movs	r3, #12
    }
 800f790:	4618      	mov	r0, r3
 800f792:	370c      	adds	r7, #12
 800f794:	46bd      	mov	sp, r7
 800f796:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f79a:	4770      	bx	lr

0800f79c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800f79c:	b480      	push	{r7}
 800f79e:	b083      	sub	sp, #12
 800f7a0:	af00      	add	r7, sp, #0
 800f7a2:	6078      	str	r0, [r7, #4]
 800f7a4:	460b      	mov	r3, r1
 800f7a6:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800f7a8:	887a      	ldrh	r2, [r7, #2]
 800f7aa:	4613      	mov	r3, r2
 800f7ac:	005b      	lsls	r3, r3, #1
 800f7ae:	4413      	add	r3, r2
 800f7b0:	009b      	lsls	r3, r3, #2
 800f7b2:	3308      	adds	r3, #8
 800f7b4:	687a      	ldr	r2, [r7, #4]
 800f7b6:	4413      	add	r3, r2
    }
 800f7b8:	4618      	mov	r0, r3
 800f7ba:	370c      	adds	r7, #12
 800f7bc:	46bd      	mov	sp, r7
 800f7be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7c2:	4770      	bx	lr

0800f7c4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800f7c4:	b480      	push	{r7}
 800f7c6:	b083      	sub	sp, #12
 800f7c8:	af00      	add	r7, sp, #0
 800f7ca:	6078      	str	r0, [r7, #4]
 800f7cc:	460b      	mov	r3, r1
 800f7ce:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800f7d0:	887a      	ldrh	r2, [r7, #2]
 800f7d2:	4613      	mov	r3, r2
 800f7d4:	005b      	lsls	r3, r3, #1
 800f7d6:	4413      	add	r3, r2
 800f7d8:	009b      	lsls	r3, r3, #2
 800f7da:	3308      	adds	r3, #8
 800f7dc:	687a      	ldr	r2, [r7, #4]
 800f7de:	4413      	add	r3, r2
    }
 800f7e0:	4618      	mov	r0, r3
 800f7e2:	370c      	adds	r7, #12
 800f7e4:	46bd      	mov	sp, r7
 800f7e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7ea:	4770      	bx	lr

0800f7ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800f7ec:	b480      	push	{r7}
 800f7ee:	b083      	sub	sp, #12
 800f7f0:	af00      	add	r7, sp, #0
 800f7f2:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800f7f4:	2301      	movs	r3, #1
    }
 800f7f6:	4618      	mov	r0, r3
 800f7f8:	370c      	adds	r7, #12
 800f7fa:	46bd      	mov	sp, r7
 800f7fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f800:	4770      	bx	lr

0800f802 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800f802:	b480      	push	{r7}
 800f804:	b083      	sub	sp, #12
 800f806:	af00      	add	r7, sp, #0
 800f808:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800f80a:	f44f 7376 	mov.w	r3, #984	@ 0x3d8
    }
 800f80e:	4618      	mov	r0, r3
 800f810:	370c      	adds	r7, #12
 800f812:	46bd      	mov	sp, r7
 800f814:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f818:	4770      	bx	lr

0800f81a <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800f81a:	b480      	push	{r7}
 800f81c:	b083      	sub	sp, #12
 800f81e:	af00      	add	r7, sp, #0
 800f820:	6078      	str	r0, [r7, #4]
 800f822:	460b      	mov	r3, r1
 800f824:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f826:	887b      	ldrh	r3, [r7, #2]
 800f828:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800f82c:	fb02 f303 	mul.w	r3, r2, r3
 800f830:	3308      	adds	r3, #8
 800f832:	687a      	ldr	r2, [r7, #4]
 800f834:	4413      	add	r3, r2
    }
 800f836:	4618      	mov	r0, r3
 800f838:	370c      	adds	r7, #12
 800f83a:	46bd      	mov	sp, r7
 800f83c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f840:	4770      	bx	lr

0800f842 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800f842:	b480      	push	{r7}
 800f844:	b083      	sub	sp, #12
 800f846:	af00      	add	r7, sp, #0
 800f848:	6078      	str	r0, [r7, #4]
 800f84a:	460b      	mov	r3, r1
 800f84c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f84e:	887b      	ldrh	r3, [r7, #2]
 800f850:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800f854:	fb02 f303 	mul.w	r3, r2, r3
 800f858:	3308      	adds	r3, #8
 800f85a:	687a      	ldr	r2, [r7, #4]
 800f85c:	4413      	add	r3, r2
    }
 800f85e:	4618      	mov	r0, r3
 800f860:	370c      	adds	r7, #12
 800f862:	46bd      	mov	sp, r7
 800f864:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f868:	4770      	bx	lr

0800f86a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800f86a:	b480      	push	{r7}
 800f86c:	b083      	sub	sp, #12
 800f86e:	af00      	add	r7, sp, #0
 800f870:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800f872:	2301      	movs	r3, #1
    }
 800f874:	4618      	mov	r0, r3
 800f876:	370c      	adds	r7, #12
 800f878:	46bd      	mov	sp, r7
 800f87a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f87e:	4770      	bx	lr

0800f880 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800f880:	b480      	push	{r7}
 800f882:	b083      	sub	sp, #12
 800f884:	af00      	add	r7, sp, #0
 800f886:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800f888:	2310      	movs	r3, #16
    }
 800f88a:	4618      	mov	r0, r3
 800f88c:	370c      	adds	r7, #12
 800f88e:	46bd      	mov	sp, r7
 800f890:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f894:	4770      	bx	lr

0800f896 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800f896:	b480      	push	{r7}
 800f898:	b083      	sub	sp, #12
 800f89a:	af00      	add	r7, sp, #0
 800f89c:	6078      	str	r0, [r7, #4]
 800f89e:	460b      	mov	r3, r1
 800f8a0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f8a2:	887b      	ldrh	r3, [r7, #2]
 800f8a4:	011b      	lsls	r3, r3, #4
 800f8a6:	3308      	adds	r3, #8
 800f8a8:	687a      	ldr	r2, [r7, #4]
 800f8aa:	4413      	add	r3, r2
    }
 800f8ac:	4618      	mov	r0, r3
 800f8ae:	370c      	adds	r7, #12
 800f8b0:	46bd      	mov	sp, r7
 800f8b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8b6:	4770      	bx	lr

0800f8b8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800f8b8:	b480      	push	{r7}
 800f8ba:	b083      	sub	sp, #12
 800f8bc:	af00      	add	r7, sp, #0
 800f8be:	6078      	str	r0, [r7, #4]
 800f8c0:	460b      	mov	r3, r1
 800f8c2:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800f8c4:	887b      	ldrh	r3, [r7, #2]
 800f8c6:	011b      	lsls	r3, r3, #4
 800f8c8:	3308      	adds	r3, #8
 800f8ca:	687a      	ldr	r2, [r7, #4]
 800f8cc:	4413      	add	r3, r2
    }
 800f8ce:	4618      	mov	r0, r3
 800f8d0:	370c      	adds	r7, #12
 800f8d2:	46bd      	mov	sp, r7
 800f8d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f8d8:	4770      	bx	lr

0800f8da <_GLOBAL__sub_I_touchgfx_init>:
 800f8da:	b580      	push	{r7, lr}
 800f8dc:	af00      	add	r7, sp, #0
 800f8de:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f8e2:	2001      	movs	r0, #1
 800f8e4:	f7ff fefc 	bl	800f6e0 <_Z41__static_initialization_and_destruction_0ii>
 800f8e8:	bd80      	pop	{r7, pc}

0800f8ea <_GLOBAL__sub_D_touchgfx_init>:
 800f8ea:	b580      	push	{r7, lr}
 800f8ec:	af00      	add	r7, sp, #0
 800f8ee:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f8f2:	2000      	movs	r0, #0
 800f8f4:	f7ff fef4 	bl	800f6e0 <_Z41__static_initialization_and_destruction_0ii>
 800f8f8:	bd80      	pop	{r7, pc}

0800f8fa <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800f8fa:	b480      	push	{r7}
 800f8fc:	b083      	sub	sp, #12
 800f8fe:	af00      	add	r7, sp, #0
 800f900:	6078      	str	r0, [r7, #4]
        return color;
 800f902:	687b      	ldr	r3, [r7, #4]
 800f904:	681b      	ldr	r3, [r3, #0]
    }
 800f906:	4618      	mov	r0, r3
 800f908:	370c      	adds	r7, #12
 800f90a:	46bd      	mov	sp, r7
 800f90c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f910:	4770      	bx	lr
	...

0800f914 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800f914:	b480      	push	{r7}
 800f916:	b083      	sub	sp, #12
 800f918:	af00      	add	r7, sp, #0
 800f91a:	6078      	str	r0, [r7, #4]
    {
 800f91c:	4a04      	ldr	r2, [pc, #16]	@ (800f930 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800f91e:	687b      	ldr	r3, [r7, #4]
 800f920:	601a      	str	r2, [r3, #0]
    }
 800f922:	687b      	ldr	r3, [r7, #4]
 800f924:	4618      	mov	r0, r3
 800f926:	370c      	adds	r7, #12
 800f928:	46bd      	mov	sp, r7
 800f92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f92e:	4770      	bx	lr
 800f930:	08028d7c 	.word	0x08028d7c

0800f934 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800f934:	b580      	push	{r7, lr}
 800f936:	b082      	sub	sp, #8
 800f938:	af00      	add	r7, sp, #0
 800f93a:	6078      	str	r0, [r7, #4]
    }
 800f93c:	6878      	ldr	r0, [r7, #4]
 800f93e:	f7ff ffe9 	bl	800f914 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800f942:	2104      	movs	r1, #4
 800f944:	6878      	ldr	r0, [r7, #4]
 800f946:	f016 f874 	bl	8025a32 <_ZdlPvj>
 800f94a:	687b      	ldr	r3, [r7, #4]
 800f94c:	4618      	mov	r0, r3
 800f94e:	3708      	adds	r7, #8
 800f950:	46bd      	mov	sp, r7
 800f952:	bd80      	pop	{r7, pc}

0800f954 <_ZN8touchgfx3HAL5vSyncEv>:
    /**
     * Called by the VSync interrupt.
     *
     * Called by the VSync interrupt for counting of LCD refreshes.
     */
    void vSync()
 800f954:	b480      	push	{r7}
 800f956:	b083      	sub	sp, #12
 800f958:	af00      	add	r7, sp, #0
 800f95a:	6078      	str	r0, [r7, #4]
    {
        vSyncCnt++;
 800f95c:	687b      	ldr	r3, [r7, #4]
 800f95e:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800f962:	3301      	adds	r3, #1
 800f964:	b2da      	uxtb	r2, r3
 800f966:	687b      	ldr	r3, [r7, #4]
 800f968:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800f96c:	bf00      	nop
 800f96e:	370c      	adds	r7, #12
 800f970:	46bd      	mov	sp, r7
 800f972:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f976:	4770      	bx	lr

0800f978 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
     * Sets a framebuffer allocator. The framebuffer allocator is only used in partial
     * framebuffer mode.
     *
     * @param [in] allocator pointer to a framebuffer allocator object.
     */
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800f978:	b480      	push	{r7}
 800f97a:	b083      	sub	sp, #12
 800f97c:	af00      	add	r7, sp, #0
 800f97e:	6078      	str	r0, [r7, #4]
 800f980:	6039      	str	r1, [r7, #0]
    {
        frameBufferAllocator = allocator;
 800f982:	687b      	ldr	r3, [r7, #4]
 800f984:	683a      	ldr	r2, [r7, #0]
 800f986:	619a      	str	r2, [r3, #24]
    }
 800f988:	bf00      	nop
 800f98a:	370c      	adds	r7, #12
 800f98c:	46bd      	mov	sp, r7
 800f98e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f992:	4770      	bx	lr

0800f994 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    /**
     * Gets the framebuffer allocator.
     *
     * @return The framebuffer allocator.
     */
    FrameBufferAllocator* getFrameBufferAllocator()
 800f994:	b480      	push	{r7}
 800f996:	b083      	sub	sp, #12
 800f998:	af00      	add	r7, sp, #0
 800f99a:	6078      	str	r0, [r7, #4]
    {
        return frameBufferAllocator;
 800f99c:	687b      	ldr	r3, [r7, #4]
 800f99e:	699b      	ldr	r3, [r3, #24]
    }
 800f9a0:	4618      	mov	r0, r3
 800f9a2:	370c      	adds	r7, #12
 800f9a4:	46bd      	mov	sp, r7
 800f9a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9aa:	4770      	bx	lr

0800f9ac <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
     *
     * @param  s The desired strategy to use.
     *
     * @return true if the desired strategy will be used, false otherwise.
     */
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800f9ac:	b580      	push	{r7, lr}
 800f9ae:	b082      	sub	sp, #8
 800f9b0:	af00      	add	r7, sp, #0
 800f9b2:	6078      	str	r0, [r7, #4]
 800f9b4:	460b      	mov	r3, r1
 800f9b6:	70fb      	strb	r3, [r7, #3]
    {
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800f9b8:	78fb      	ldrb	r3, [r7, #3]
 800f9ba:	2b00      	cmp	r3, #0
 800f9bc:	d002      	beq.n	800f9c4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800f9be:	78fb      	ldrb	r3, [r7, #3]
 800f9c0:	2b02      	cmp	r3, #2
 800f9c2:	d105      	bne.n	800f9d0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
        {
            refreshStrategy = s;
 800f9c4:	687b      	ldr	r3, [r7, #4]
 800f9c6:	78fa      	ldrb	r2, [r7, #3]
 800f9c8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800f9cc:	2301      	movs	r3, #1
 800f9ce:	e027      	b.n	800fa20 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800f9d0:	78fb      	ldrb	r3, [r7, #3]
 800f9d2:	2b01      	cmp	r3, #1
 800f9d4:	d123      	bne.n	800fa1e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
        {
            // Perform sanity checks. This strategy requires
            //   - task delay function
            //   - a TFT controller (+ an impl of getTFTCurrentLine())
            //   - single buffering
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800f9d6:	687b      	ldr	r3, [r7, #4]
 800f9d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f9da:	2b00      	cmp	r3, #0
 800f9dc:	d014      	beq.n	800fa08 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800f9de:	687b      	ldr	r3, [r7, #4]
 800f9e0:	681b      	ldr	r3, [r3, #0]
 800f9e2:	339c      	adds	r3, #156	@ 0x9c
 800f9e4:	681b      	ldr	r3, [r3, #0]
 800f9e6:	6878      	ldr	r0, [r7, #4]
 800f9e8:	4798      	blx	r3
 800f9ea:	4603      	mov	r3, r0
 800f9ec:	461a      	mov	r2, r3
 800f9ee:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800f9f2:	429a      	cmp	r2, r3
 800f9f4:	d008      	beq.n	800fa08 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800f9f6:	4b0c      	ldr	r3, [pc, #48]	@ (800fa28 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800f9f8:	781b      	ldrb	r3, [r3, #0]
 800f9fa:	f083 0301 	eor.w	r3, r3, #1
 800f9fe:	b2db      	uxtb	r3, r3
 800fa00:	2b00      	cmp	r3, #0
 800fa02:	d001      	beq.n	800fa08 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800fa04:	2301      	movs	r3, #1
 800fa06:	e000      	b.n	800fa0a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800fa08:	2300      	movs	r3, #0
 800fa0a:	2b00      	cmp	r3, #0
 800fa0c:	d005      	beq.n	800fa1a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
            {
                refreshStrategy = s;
 800fa0e:	687b      	ldr	r3, [r7, #4]
 800fa10:	78fa      	ldrb	r2, [r7, #3]
 800fa12:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800fa16:	2301      	movs	r3, #1
 800fa18:	e002      	b.n	800fa20 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            }
            return false;
 800fa1a:	2300      	movs	r3, #0
 800fa1c:	e000      	b.n	800fa20 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        // Unknown strategy
        return false;
 800fa1e:	2300      	movs	r3, #0
    }
 800fa20:	4618      	mov	r0, r3
 800fa22:	3708      	adds	r7, #8
 800fa24:	46bd      	mov	sp, r7
 800fa26:	bd80      	pop	{r7, pc}
 800fa28:	20002f52 	.word	0x20002f52

0800fa2c <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800fa2c:	b480      	push	{r7}
 800fa2e:	af00      	add	r7, sp, #0
}
 800fa30:	bf00      	nop
 800fa32:	46bd      	mov	sp, r7
 800fa34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa38:	4770      	bx	lr

0800fa3a <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800fa3a:	b480      	push	{r7}
 800fa3c:	b083      	sub	sp, #12
 800fa3e:	af00      	add	r7, sp, #0
 800fa40:	6078      	str	r0, [r7, #4]
 800fa42:	6039      	str	r1, [r7, #0]
}
 800fa44:	bf00      	nop
 800fa46:	370c      	adds	r7, #12
 800fa48:	46bd      	mov	sp, r7
 800fa4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa4e:	4770      	bx	lr

0800fa50 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800fa50:	b480      	push	{r7}
 800fa52:	b08d      	sub	sp, #52	@ 0x34
 800fa54:	af00      	add	r7, sp, #0
 800fa56:	60f8      	str	r0, [r7, #12]
 800fa58:	60b9      	str	r1, [r7, #8]
 800fa5a:	607a      	str	r2, [r7, #4]
 800fa5c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800fa5e:	68fb      	ldr	r3, [r7, #12]
 800fa60:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800fa62:	68bb      	ldr	r3, [r7, #8]
 800fa64:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800fa66:	687b      	ldr	r3, [r7, #4]
 800fa68:	005b      	lsls	r3, r3, #1
 800fa6a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fa6c:	4413      	add	r3, r2
 800fa6e:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800fa70:	78fb      	ldrb	r3, [r7, #3]
 800fa72:	2bff      	cmp	r3, #255	@ 0xff
 800fa74:	d112      	bne.n	800fa9c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800fa76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fa78:	1c9a      	adds	r2, r3, #2
 800fa7a:	62ba      	str	r2, [r7, #40]	@ 0x28
 800fa7c:	881a      	ldrh	r2, [r3, #0]
 800fa7e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fa80:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800fa82:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fa84:	3302      	adds	r3, #2
 800fa86:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fa88:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fa8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fa8c:	429a      	cmp	r2, r3
 800fa8e:	bf34      	ite	cc
 800fa90:	2301      	movcc	r3, #1
 800fa92:	2300      	movcs	r3, #0
 800fa94:	b2db      	uxtb	r3, r3
 800fa96:	2b00      	cmp	r3, #0
 800fa98:	d1ed      	bne.n	800fa76 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800fa9a:	e079      	b.n	800fb90 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800fa9c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fa9e:	1c9a      	adds	r2, r3, #2
 800faa0:	62ba      	str	r2, [r7, #40]	@ 0x28
 800faa2:	881a      	ldrh	r2, [r3, #0]
 800faa4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800faa6:	881b      	ldrh	r3, [r3, #0]
 800faa8:	847a      	strh	r2, [r7, #34]	@ 0x22
 800faaa:	843b      	strh	r3, [r7, #32]
 800faac:	78fb      	ldrb	r3, [r7, #3]
 800faae:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800fab0:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fab2:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fab6:	f023 0307 	bic.w	r3, r3, #7
 800faba:	b299      	uxth	r1, r3
 800fabc:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fabe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fac2:	b29a      	uxth	r2, r3
 800fac4:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fac6:	f003 031f 	and.w	r3, r3, #31
 800faca:	b29b      	uxth	r3, r3
 800facc:	83b9      	strh	r1, [r7, #28]
 800face:	837a      	strh	r2, [r7, #26]
 800fad0:	833b      	strh	r3, [r7, #24]
 800fad2:	8c3b      	ldrh	r3, [r7, #32]
 800fad4:	82fb      	strh	r3, [r7, #22]
 800fad6:	7ffb      	ldrb	r3, [r7, #31]
 800fad8:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800fada:	7d7b      	ldrb	r3, [r7, #21]
 800fadc:	43db      	mvns	r3, r3
 800fade:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800fae0:	8bbb      	ldrh	r3, [r7, #28]
 800fae2:	7d7a      	ldrb	r2, [r7, #21]
 800fae4:	fb03 f202 	mul.w	r2, r3, r2
 800fae8:	8afb      	ldrh	r3, [r7, #22]
 800faea:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800faee:	7d39      	ldrb	r1, [r7, #20]
 800faf0:	fb01 f303 	mul.w	r3, r1, r3
 800faf4:	4413      	add	r3, r2
 800faf6:	4a29      	ldr	r2, [pc, #164]	@ (800fb9c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800faf8:	fb82 1203 	smull	r1, r2, r2, r3
 800fafc:	441a      	add	r2, r3
 800fafe:	11d2      	asrs	r2, r2, #7
 800fb00:	17db      	asrs	r3, r3, #31
 800fb02:	1ad3      	subs	r3, r2, r3
 800fb04:	b21b      	sxth	r3, r3
 800fb06:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fb0a:	f023 0307 	bic.w	r3, r3, #7
 800fb0e:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800fb10:	8b7b      	ldrh	r3, [r7, #26]
 800fb12:	7d79      	ldrb	r1, [r7, #21]
 800fb14:	fb03 f101 	mul.w	r1, r3, r1
 800fb18:	8afb      	ldrh	r3, [r7, #22]
 800fb1a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fb1e:	7d38      	ldrb	r0, [r7, #20]
 800fb20:	fb00 f303 	mul.w	r3, r0, r3
 800fb24:	440b      	add	r3, r1
 800fb26:	491d      	ldr	r1, [pc, #116]	@ (800fb9c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fb28:	fb81 0103 	smull	r0, r1, r1, r3
 800fb2c:	4419      	add	r1, r3
 800fb2e:	11c9      	asrs	r1, r1, #7
 800fb30:	17db      	asrs	r3, r3, #31
 800fb32:	1acb      	subs	r3, r1, r3
 800fb34:	b21b      	sxth	r3, r3
 800fb36:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fb3a:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800fb3c:	4313      	orrs	r3, r2
 800fb3e:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800fb40:	8b3b      	ldrh	r3, [r7, #24]
 800fb42:	7d79      	ldrb	r1, [r7, #21]
 800fb44:	fb03 f101 	mul.w	r1, r3, r1
 800fb48:	8afb      	ldrh	r3, [r7, #22]
 800fb4a:	f003 031f 	and.w	r3, r3, #31
 800fb4e:	7d38      	ldrb	r0, [r7, #20]
 800fb50:	fb00 f303 	mul.w	r3, r0, r3
 800fb54:	440b      	add	r3, r1
 800fb56:	4911      	ldr	r1, [pc, #68]	@ (800fb9c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fb58:	fb81 0103 	smull	r0, r1, r1, r3
 800fb5c:	4419      	add	r1, r3
 800fb5e:	11c9      	asrs	r1, r1, #7
 800fb60:	17db      	asrs	r3, r3, #31
 800fb62:	1acb      	subs	r3, r1, r3
 800fb64:	b21b      	sxth	r3, r3
 800fb66:	f003 031f 	and.w	r3, r3, #31
 800fb6a:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800fb6c:	4313      	orrs	r3, r2
 800fb6e:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800fb70:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800fb72:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800fb74:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fb76:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800fb78:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fb7a:	3302      	adds	r3, #2
 800fb7c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fb7e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fb80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fb82:	429a      	cmp	r2, r3
 800fb84:	bf34      	ite	cc
 800fb86:	2301      	movcc	r3, #1
 800fb88:	2300      	movcs	r3, #0
 800fb8a:	b2db      	uxtb	r3, r3
 800fb8c:	2b00      	cmp	r3, #0
 800fb8e:	d185      	bne.n	800fa9c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800fb90:	bf00      	nop
 800fb92:	3734      	adds	r7, #52	@ 0x34
 800fb94:	46bd      	mov	sp, r7
 800fb96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb9a:	4770      	bx	lr
 800fb9c:	80808081 	.word	0x80808081

0800fba0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800fba0:	b590      	push	{r4, r7, lr}
 800fba2:	b093      	sub	sp, #76	@ 0x4c
 800fba4:	af00      	add	r7, sp, #0
 800fba6:	60f8      	str	r0, [r7, #12]
 800fba8:	60b9      	str	r1, [r7, #8]
 800fbaa:	607a      	str	r2, [r7, #4]
 800fbac:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800fbae:	68fb      	ldr	r3, [r7, #12]
 800fbb0:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800fbb2:	68bb      	ldr	r3, [r7, #8]
 800fbb4:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800fbb6:	687b      	ldr	r3, [r7, #4]
 800fbb8:	005b      	lsls	r3, r3, #1
 800fbba:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800fbbc:	4413      	add	r3, r2
 800fbbe:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800fbc0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fbc2:	681b      	ldr	r3, [r3, #0]
 800fbc4:	0e1b      	lsrs	r3, r3, #24
 800fbc6:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800fbca:	78fb      	ldrb	r3, [r7, #3]
 800fbcc:	b29a      	uxth	r2, r3
 800fbce:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800fbd2:	b29b      	uxth	r3, r3
 800fbd4:	fb12 f303 	smulbb	r3, r2, r3
 800fbd8:	b29b      	uxth	r3, r3
 800fbda:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800fbdc:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800fbde:	3301      	adds	r3, #1
 800fbe0:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800fbe2:	0a12      	lsrs	r2, r2, #8
 800fbe4:	b292      	uxth	r2, r2
 800fbe6:	4413      	add	r3, r2
 800fbe8:	121b      	asrs	r3, r3, #8
 800fbea:	b2db      	uxtb	r3, r3
 800fbec:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800fbf0:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800fbf4:	2bff      	cmp	r3, #255	@ 0xff
 800fbf6:	d133      	bne.n	800fc60 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800fbf8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fbfa:	681a      	ldr	r2, [r3, #0]
 800fbfc:	f107 0318 	add.w	r3, r7, #24
 800fc00:	4611      	mov	r1, r2
 800fc02:	4618      	mov	r0, r3
 800fc04:	f7f9 fdbc 	bl	8009780 <_ZN8touchgfx9colortypeC1Em>
 800fc08:	69bb      	ldr	r3, [r7, #24]
 800fc0a:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800fc0c:	f107 0314 	add.w	r3, r7, #20
 800fc10:	4618      	mov	r0, r3
 800fc12:	f7ff fe72 	bl	800f8fa <_ZNK8touchgfx9colortypecvmEv>
 800fc16:	4603      	mov	r3, r0
 800fc18:	0a1b      	lsrs	r3, r3, #8
 800fc1a:	b29b      	uxth	r3, r3
 800fc1c:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fc20:	f023 0307 	bic.w	r3, r3, #7
 800fc24:	b29c      	uxth	r4, r3
 800fc26:	f107 0314 	add.w	r3, r7, #20
 800fc2a:	4618      	mov	r0, r3
 800fc2c:	f7ff fe65 	bl	800f8fa <_ZNK8touchgfx9colortypecvmEv>
 800fc30:	4603      	mov	r3, r0
 800fc32:	095b      	lsrs	r3, r3, #5
 800fc34:	b29b      	uxth	r3, r3
 800fc36:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fc3a:	b29b      	uxth	r3, r3
 800fc3c:	4323      	orrs	r3, r4
 800fc3e:	b29c      	uxth	r4, r3
 800fc40:	f107 0314 	add.w	r3, r7, #20
 800fc44:	4618      	mov	r0, r3
 800fc46:	f7ff fe58 	bl	800f8fa <_ZNK8touchgfx9colortypecvmEv>
 800fc4a:	4603      	mov	r3, r0
 800fc4c:	08db      	lsrs	r3, r3, #3
 800fc4e:	b29b      	uxth	r3, r3
 800fc50:	f003 031f 	and.w	r3, r3, #31
 800fc54:	b29b      	uxth	r3, r3
 800fc56:	4323      	orrs	r3, r4
 800fc58:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800fc5a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fc5c:	801a      	strh	r2, [r3, #0]
 800fc5e:	e0a9      	b.n	800fdb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800fc60:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800fc64:	2b00      	cmp	r3, #0
 800fc66:	f000 80a5 	beq.w	800fdb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800fc6a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fc6c:	681b      	ldr	r3, [r3, #0]
 800fc6e:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800fc70:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800fc72:	0c1b      	lsrs	r3, r3, #16
 800fc74:	b2d8      	uxtb	r0, r3
 800fc76:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800fc78:	0a1b      	lsrs	r3, r3, #8
 800fc7a:	b2d9      	uxtb	r1, r3
 800fc7c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800fc7e:	b2da      	uxtb	r2, r3
 800fc80:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fc82:	881b      	ldrh	r3, [r3, #0]
 800fc84:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800fc88:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800fc8c:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800fc90:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800fc92:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800fc96:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800fc9a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800fc9e:	43db      	mvns	r3, r3
 800fca0:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800fca4:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800fca6:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800fca8:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800fcaa:	0a1b      	lsrs	r3, r3, #8
 800fcac:	b29b      	uxth	r3, r3
 800fcae:	b2db      	uxtb	r3, r3
 800fcb0:	f023 0307 	bic.w	r3, r3, #7
 800fcb4:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800fcb8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800fcbc:	095b      	lsrs	r3, r3, #5
 800fcbe:	b2da      	uxtb	r2, r3
 800fcc0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800fcc4:	4313      	orrs	r3, r2
 800fcc6:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800fcc8:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800fccc:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800fcce:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800fcd0:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800fcd2:	08db      	lsrs	r3, r3, #3
 800fcd4:	b29b      	uxth	r3, r3
 800fcd6:	b2db      	uxtb	r3, r3
 800fcd8:	f023 0303 	bic.w	r3, r3, #3
 800fcdc:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800fce0:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800fce4:	099b      	lsrs	r3, r3, #6
 800fce6:	b2da      	uxtb	r2, r3
 800fce8:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800fcec:	4313      	orrs	r3, r2
 800fcee:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800fcf0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800fcf4:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800fcf6:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800fcf8:	8c3b      	ldrh	r3, [r7, #32]
 800fcfa:	b2db      	uxtb	r3, r3
 800fcfc:	00db      	lsls	r3, r3, #3
 800fcfe:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800fd00:	7ffb      	ldrb	r3, [r7, #31]
 800fd02:	095b      	lsrs	r3, r3, #5
 800fd04:	b2da      	uxtb	r2, r3
 800fd06:	7ffb      	ldrb	r3, [r7, #31]
 800fd08:	4313      	orrs	r3, r2
 800fd0a:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800fd0c:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800fd0e:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800fd12:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800fd16:	fb03 f202 	mul.w	r2, r3, r2
 800fd1a:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800fd1e:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800fd22:	fb01 f303 	mul.w	r3, r1, r3
 800fd26:	4413      	add	r3, r2
 800fd28:	4a2d      	ldr	r2, [pc, #180]	@ (800fde0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800fd2a:	fb82 1203 	smull	r1, r2, r2, r3
 800fd2e:	441a      	add	r2, r3
 800fd30:	11d2      	asrs	r2, r2, #7
 800fd32:	17db      	asrs	r3, r3, #31
 800fd34:	1ad3      	subs	r3, r2, r3
 800fd36:	021b      	lsls	r3, r3, #8
 800fd38:	b21b      	sxth	r3, r3
 800fd3a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fd3e:	f023 0307 	bic.w	r3, r3, #7
 800fd42:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800fd44:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800fd48:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800fd4c:	fb03 f101 	mul.w	r1, r3, r1
 800fd50:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800fd54:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800fd58:	fb00 f303 	mul.w	r3, r0, r3
 800fd5c:	440b      	add	r3, r1
 800fd5e:	4920      	ldr	r1, [pc, #128]	@ (800fde0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800fd60:	fb81 0103 	smull	r0, r1, r1, r3
 800fd64:	4419      	add	r1, r3
 800fd66:	11c9      	asrs	r1, r1, #7
 800fd68:	17db      	asrs	r3, r3, #31
 800fd6a:	1acb      	subs	r3, r1, r3
 800fd6c:	00db      	lsls	r3, r3, #3
 800fd6e:	b21b      	sxth	r3, r3
 800fd70:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fd74:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800fd76:	4313      	orrs	r3, r2
 800fd78:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800fd7a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800fd7e:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800fd82:	fb03 f101 	mul.w	r1, r3, r1
 800fd86:	7fbb      	ldrb	r3, [r7, #30]
 800fd88:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800fd8c:	fb00 f303 	mul.w	r3, r0, r3
 800fd90:	440b      	add	r3, r1
 800fd92:	4913      	ldr	r1, [pc, #76]	@ (800fde0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800fd94:	fb81 0103 	smull	r0, r1, r1, r3
 800fd98:	4419      	add	r1, r3
 800fd9a:	11c9      	asrs	r1, r1, #7
 800fd9c:	17db      	asrs	r3, r3, #31
 800fd9e:	1acb      	subs	r3, r1, r3
 800fda0:	10db      	asrs	r3, r3, #3
 800fda2:	b21b      	sxth	r3, r3
 800fda4:	f003 031f 	and.w	r3, r3, #31
 800fda8:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800fdaa:	4313      	orrs	r3, r2
 800fdac:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800fdae:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800fdb0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fdb2:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800fdb4:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fdb6:	3304      	adds	r3, #4
 800fdb8:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800fdba:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800fdbc:	3302      	adds	r3, #2
 800fdbe:	647b      	str	r3, [r7, #68]	@ 0x44
 800fdc0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800fdc2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800fdc4:	429a      	cmp	r2, r3
 800fdc6:	bf34      	ite	cc
 800fdc8:	2301      	movcc	r3, #1
 800fdca:	2300      	movcs	r3, #0
 800fdcc:	b2db      	uxtb	r3, r3
 800fdce:	2b00      	cmp	r3, #0
 800fdd0:	f47f aef6 	bne.w	800fbc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800fdd4:	bf00      	nop
 800fdd6:	bf00      	nop
 800fdd8:	374c      	adds	r7, #76	@ 0x4c
 800fdda:	46bd      	mov	sp, r7
 800fddc:	bd90      	pop	{r4, r7, pc}
 800fdde:	bf00      	nop
 800fde0:	80808081 	.word	0x80808081

0800fde4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800fde4:	b5b0      	push	{r4, r5, r7, lr}
 800fde6:	b082      	sub	sp, #8
 800fde8:	af00      	add	r7, sp, #0
 800fdea:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800fdec:	687b      	ldr	r3, [r7, #4]
 800fdee:	4618      	mov	r0, r3
 800fdf0:	f000 fed9 	bl	8010ba6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800fdf4:	687d      	ldr	r5, [r7, #4]
 800fdf6:	687b      	ldr	r3, [r7, #4]
 800fdf8:	681b      	ldr	r3, [r3, #0]
 800fdfa:	3364      	adds	r3, #100	@ 0x64
 800fdfc:	681c      	ldr	r4, [r3, #0]
 800fdfe:	f004 f8bf 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 800fe02:	4603      	mov	r3, r0
 800fe04:	4619      	mov	r1, r3
 800fe06:	4628      	mov	r0, r5
 800fe08:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800fe0a:	687b      	ldr	r3, [r7, #4]
 800fe0c:	681b      	ldr	r3, [r3, #0]
 800fe0e:	3380      	adds	r3, #128	@ 0x80
 800fe10:	681b      	ldr	r3, [r3, #0]
 800fe12:	6878      	ldr	r0, [r7, #4]
 800fe14:	4798      	blx	r3
    enableInterrupts();
 800fe16:	687b      	ldr	r3, [r7, #4]
 800fe18:	681b      	ldr	r3, [r3, #0]
 800fe1a:	3378      	adds	r3, #120	@ 0x78
 800fe1c:	681b      	ldr	r3, [r3, #0]
 800fe1e:	6878      	ldr	r0, [r7, #4]
 800fe20:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800fe22:	687b      	ldr	r3, [r7, #4]
 800fe24:	4906      	ldr	r1, [pc, #24]	@ (800fe40 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800fe26:	4618      	mov	r0, r3
 800fe28:	f7ff fda6 	bl	800f978 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800fe2c:	687b      	ldr	r3, [r7, #4]
 800fe2e:	2102      	movs	r1, #2
 800fe30:	4618      	mov	r0, r3
 800fe32:	f7ff fdbb 	bl	800f9ac <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800fe36:	bf00      	nop
 800fe38:	3708      	adds	r7, #8
 800fe3a:	46bd      	mov	sp, r7
 800fe3c:	bdb0      	pop	{r4, r5, r7, pc}
 800fe3e:	bf00      	nop
 800fe40:	20000d60 	.word	0x20000d60

0800fe44 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800fe44:	b480      	push	{r7}
 800fe46:	b083      	sub	sp, #12
 800fe48:	af00      	add	r7, sp, #0
 800fe4a:	6078      	str	r0, [r7, #4]
}
 800fe4c:	bf00      	nop
 800fe4e:	370c      	adds	r7, #12
 800fe50:	46bd      	mov	sp, r7
 800fe52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe56:	4770      	bx	lr

0800fe58 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800fe58:	b480      	push	{r7}
 800fe5a:	b083      	sub	sp, #12
 800fe5c:	af00      	add	r7, sp, #0
 800fe5e:	6078      	str	r0, [r7, #4]
}
 800fe60:	bf00      	nop
 800fe62:	370c      	adds	r7, #12
 800fe64:	46bd      	mov	sp, r7
 800fe66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe6a:	4770      	bx	lr

0800fe6c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800fe6c:	b480      	push	{r7}
 800fe6e:	b083      	sub	sp, #12
 800fe70:	af00      	add	r7, sp, #0
 800fe72:	6078      	str	r0, [r7, #4]
}
 800fe74:	bf00      	nop
 800fe76:	370c      	adds	r7, #12
 800fe78:	46bd      	mov	sp, r7
 800fe7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe7e:	4770      	bx	lr

0800fe80 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800fe80:	b480      	push	{r7}
 800fe82:	b083      	sub	sp, #12
 800fe84:	af00      	add	r7, sp, #0
 800fe86:	6078      	str	r0, [r7, #4]
}
 800fe88:	bf00      	nop
 800fe8a:	370c      	adds	r7, #12
 800fe8c:	46bd      	mov	sp, r7
 800fe8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe92:	4770      	bx	lr

0800fe94 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800fe94:	b580      	push	{r7, lr}
 800fe96:	b082      	sub	sp, #8
 800fe98:	af00      	add	r7, sp, #0
 800fe9a:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800fe9c:	687b      	ldr	r3, [r7, #4]
 800fe9e:	4618      	mov	r0, r3
 800fea0:	f000 fe68 	bl	8010b74 <_ZN8touchgfx3HAL10beginFrameEv>
 800fea4:	4603      	mov	r3, r0
}
 800fea6:	4618      	mov	r0, r3
 800fea8:	3708      	adds	r7, #8
 800feaa:	46bd      	mov	sp, r7
 800feac:	bd80      	pop	{r7, pc}

0800feae <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800feae:	b580      	push	{r7, lr}
 800feb0:	b082      	sub	sp, #8
 800feb2:	af00      	add	r7, sp, #0
 800feb4:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800feb6:	bf00      	nop
 800feb8:	f7f2 fa84 	bl	80023c4 <touchgfxDisplayDriverTransmitActive>
 800febc:	4603      	mov	r3, r0
 800febe:	2b00      	cmp	r3, #0
 800fec0:	bf14      	ite	ne
 800fec2:	2301      	movne	r3, #1
 800fec4:	2300      	moveq	r3, #0
 800fec6:	b2db      	uxtb	r3, r3
 800fec8:	2b00      	cmp	r3, #0
 800feca:	d1f5      	bne.n	800feb8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800fecc:	687b      	ldr	r3, [r7, #4]
 800fece:	4618      	mov	r0, r3
 800fed0:	f000 fe5c 	bl	8010b8c <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800fed4:	f7fe fede 	bl	800ec94 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800fed8:	bf00      	nop
 800feda:	3708      	adds	r7, #8
 800fedc:	46bd      	mov	sp, r7
 800fede:	bd80      	pop	{r7, pc}

0800fee0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800fee0:	b480      	push	{r7}
 800fee2:	b083      	sub	sp, #12
 800fee4:	af00      	add	r7, sp, #0
 800fee6:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800fee8:	2300      	movs	r3, #0
}
 800feea:	4618      	mov	r0, r3
 800feec:	370c      	adds	r7, #12
 800feee:	46bd      	mov	sp, r7
 800fef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fef4:	4770      	bx	lr

0800fef6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800fef6:	b480      	push	{r7}
 800fef8:	b083      	sub	sp, #12
 800fefa:	af00      	add	r7, sp, #0
 800fefc:	6078      	str	r0, [r7, #4]
 800fefe:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800ff00:	bf00      	nop
 800ff02:	370c      	adds	r7, #12
 800ff04:	46bd      	mov	sp, r7
 800ff06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff0a:	4770      	bx	lr

0800ff0c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800ff0c:	b580      	push	{r7, lr}
 800ff0e:	b088      	sub	sp, #32
 800ff10:	af02      	add	r7, sp, #8
 800ff12:	6078      	str	r0, [r7, #4]
 800ff14:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800ff16:	687b      	ldr	r3, [r7, #4]
 800ff18:	6839      	ldr	r1, [r7, #0]
 800ff1a:	4618      	mov	r0, r3
 800ff1c:	f000 fdf4 	bl	8010b08 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800ff20:	687b      	ldr	r3, [r7, #4]
 800ff22:	699a      	ldr	r2, [r3, #24]
 800ff24:	687b      	ldr	r3, [r7, #4]
 800ff26:	699b      	ldr	r3, [r3, #24]
 800ff28:	681b      	ldr	r3, [r3, #0]
 800ff2a:	3304      	adds	r3, #4
 800ff2c:	681b      	ldr	r3, [r3, #0]
 800ff2e:	4610      	mov	r0, r2
 800ff30:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800ff32:	f7f2 fa47 	bl	80023c4 <touchgfxDisplayDriverTransmitActive>
 800ff36:	4603      	mov	r3, r0
 800ff38:	2b00      	cmp	r3, #0
 800ff3a:	bf0c      	ite	eq
 800ff3c:	2301      	moveq	r3, #1
 800ff3e:	2300      	movne	r3, #0
 800ff40:	b2db      	uxtb	r3, r3
 800ff42:	2b00      	cmp	r3, #0
 800ff44:	d021      	beq.n	800ff8a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800ff46:	f107 030c 	add.w	r3, r7, #12
 800ff4a:	4618      	mov	r0, r3
 800ff4c:	f7f9 fc27 	bl	800979e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800ff50:	687b      	ldr	r3, [r7, #4]
 800ff52:	699a      	ldr	r2, [r3, #24]
 800ff54:	687b      	ldr	r3, [r7, #4]
 800ff56:	699b      	ldr	r3, [r3, #24]
 800ff58:	681b      	ldr	r3, [r3, #0]
 800ff5a:	330c      	adds	r3, #12
 800ff5c:	681b      	ldr	r3, [r3, #0]
 800ff5e:	f107 010c 	add.w	r1, r7, #12
 800ff62:	4610      	mov	r0, r2
 800ff64:	4798      	blx	r3
 800ff66:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800ff68:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800ff6c:	b299      	uxth	r1, r3
 800ff6e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800ff72:	b29a      	uxth	r2, r3
 800ff74:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800ff78:	b298      	uxth	r0, r3
 800ff7a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800ff7e:	b29b      	uxth	r3, r3
 800ff80:	9300      	str	r3, [sp, #0]
 800ff82:	4603      	mov	r3, r0
 800ff84:	6978      	ldr	r0, [r7, #20]
 800ff86:	f7f2 fa2f 	bl	80023e8 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800ff8a:	bf00      	nop
 800ff8c:	3718      	adds	r7, #24
 800ff8e:	46bd      	mov	sp, r7
 800ff90:	bd80      	pop	{r7, pc}

0800ff92 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800ff92:	b580      	push	{r7, lr}
 800ff94:	b084      	sub	sp, #16
 800ff96:	af00      	add	r7, sp, #0
 800ff98:	60f8      	str	r0, [r7, #12]
 800ff9a:	60b9      	str	r1, [r7, #8]
 800ff9c:	607a      	str	r2, [r7, #4]
 800ff9e:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800ffa0:	68f8      	ldr	r0, [r7, #12]
 800ffa2:	683b      	ldr	r3, [r7, #0]
 800ffa4:	687a      	ldr	r2, [r7, #4]
 800ffa6:	68b9      	ldr	r1, [r7, #8]
 800ffa8:	f000 ff1f 	bl	8010dea <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800ffac:	4603      	mov	r3, r0
}
 800ffae:	4618      	mov	r0, r3
 800ffb0:	3710      	adds	r7, #16
 800ffb2:	46bd      	mov	sp, r7
 800ffb4:	bd80      	pop	{r7, pc}

0800ffb6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800ffb6:	b480      	push	{r7}
 800ffb8:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800ffba:	bf00      	nop
 800ffbc:	46bd      	mov	sp, r7
 800ffbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffc2:	4770      	bx	lr

0800ffc4 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800ffc4:	b480      	push	{r7}
 800ffc6:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800ffc8:	bf00      	nop
 800ffca:	46bd      	mov	sp, r7
 800ffcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ffd0:	4770      	bx	lr

0800ffd2 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800ffd2:	b580      	push	{r7, lr}
 800ffd4:	b086      	sub	sp, #24
 800ffd6:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800ffd8:	f7f8 fa78 	bl	80084cc <_ZN8touchgfx3HAL11getInstanceEv>
 800ffdc:	4603      	mov	r3, r0
 800ffde:	4618      	mov	r0, r3
 800ffe0:	f7ff fcd8 	bl	800f994 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800ffe4:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800ffe6:	68fb      	ldr	r3, [r7, #12]
 800ffe8:	681b      	ldr	r3, [r3, #0]
 800ffea:	3318      	adds	r3, #24
 800ffec:	681b      	ldr	r3, [r3, #0]
 800ffee:	68f8      	ldr	r0, [r7, #12]
 800fff0:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800fff2:	68fb      	ldr	r3, [r7, #12]
 800fff4:	681b      	ldr	r3, [r3, #0]
 800fff6:	3308      	adds	r3, #8
 800fff8:	681b      	ldr	r3, [r3, #0]
 800fffa:	68f8      	ldr	r0, [r7, #12]
 800fffc:	4798      	blx	r3
 800fffe:	4603      	mov	r3, r0
 8010000:	2b00      	cmp	r3, #0
 8010002:	d01d      	beq.n	8010040 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 8010004:	463b      	mov	r3, r7
 8010006:	4618      	mov	r0, r3
 8010008:	f7f9 fbc9 	bl	800979e <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 801000c:	68fb      	ldr	r3, [r7, #12]
 801000e:	681b      	ldr	r3, [r3, #0]
 8010010:	330c      	adds	r3, #12
 8010012:	681b      	ldr	r3, [r3, #0]
 8010014:	463a      	mov	r2, r7
 8010016:	4611      	mov	r1, r2
 8010018:	68f8      	ldr	r0, [r7, #12]
 801001a:	4798      	blx	r3
 801001c:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 801001e:	f9b7 3000 	ldrsh.w	r3, [r7]
 8010022:	b299      	uxth	r1, r3
 8010024:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8010028:	b29a      	uxth	r2, r3
 801002a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 801002e:	b298      	uxth	r0, r3
 8010030:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010034:	b29b      	uxth	r3, r3
 8010036:	9300      	str	r3, [sp, #0]
 8010038:	4603      	mov	r3, r0
 801003a:	68b8      	ldr	r0, [r7, #8]
 801003c:	f7f2 f9d4 	bl	80023e8 <touchgfxDisplayDriverTransmitBlock>
    }
}
 8010040:	bf00      	nop
 8010042:	3710      	adds	r7, #16
 8010044:	46bd      	mov	sp, r7
 8010046:	bd80      	pop	{r7, pc}

08010048 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8010048:	b580      	push	{r7, lr}
 801004a:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 801004c:	f7ff ffc1 	bl	800ffd2 <_ZN8touchgfx16startNewTransferEv>
}
 8010050:	bf00      	nop
 8010052:	bd80      	pop	{r7, pc}

08010054 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8010054:	b580      	push	{r7, lr}
 8010056:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8010058:	f7f8 fa38 	bl	80084cc <_ZN8touchgfx3HAL11getInstanceEv>
 801005c:	4603      	mov	r3, r0
 801005e:	4618      	mov	r0, r3
 8010060:	f7ff fc78 	bl	800f954 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 8010064:	f7fe fe0a 	bl	800ec7c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8010068:	bf00      	nop
 801006a:	bd80      	pop	{r7, pc}

0801006c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 801006c:	b480      	push	{r7}
 801006e:	b083      	sub	sp, #12
 8010070:	af00      	add	r7, sp, #0
 8010072:	6078      	str	r0, [r7, #4]
 8010074:	4a04      	ldr	r2, [pc, #16]	@ (8010088 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 8010076:	687b      	ldr	r3, [r7, #4]
 8010078:	601a      	str	r2, [r3, #0]
 801007a:	687b      	ldr	r3, [r7, #4]
 801007c:	4618      	mov	r0, r3
 801007e:	370c      	adds	r7, #12
 8010080:	46bd      	mov	sp, r7
 8010082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010086:	4770      	bx	lr
 8010088:	08028d7c 	.word	0x08028d7c

0801008c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 801008c:	b5b0      	push	{r4, r5, r7, lr}
 801008e:	b084      	sub	sp, #16
 8010090:	af00      	add	r7, sp, #0
 8010092:	6078      	str	r0, [r7, #4]
    {
 8010094:	687b      	ldr	r3, [r7, #4]
 8010096:	4618      	mov	r0, r3
 8010098:	f7ff ffe8 	bl	801006c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 801009c:	4a1a      	ldr	r2, [pc, #104]	@ (8010108 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 801009e:	687b      	ldr	r3, [r7, #4]
 80100a0:	601a      	str	r2, [r3, #0]
 80100a2:	687b      	ldr	r3, [r7, #4]
 80100a4:	f503 5307 	add.w	r3, r3, #8640	@ 0x21c0
 80100a8:	3308      	adds	r3, #8
 80100aa:	2402      	movs	r4, #2
 80100ac:	461d      	mov	r5, r3
 80100ae:	e004      	b.n	80100ba <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 80100b0:	4628      	mov	r0, r5
 80100b2:	f7f9 fb74 	bl	800979e <_ZN8touchgfx4RectC1Ev>
 80100b6:	3c01      	subs	r4, #1
 80100b8:	3508      	adds	r5, #8
 80100ba:	2c00      	cmp	r4, #0
 80100bc:	daf8      	bge.n	80100b0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 80100be:	687b      	ldr	r3, [r7, #4]
 80100c0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80100c4:	461a      	mov	r2, r3
 80100c6:	f04f 33ff 	mov.w	r3, #4294967295
 80100ca:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        drawingBlock = -1;
 80100ce:	687b      	ldr	r3, [r7, #4]
 80100d0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80100d4:	461a      	mov	r2, r3
 80100d6:	f04f 33ff 	mov.w	r3, #4294967295
 80100da:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 80100de:	2300      	movs	r3, #0
 80100e0:	60fb      	str	r3, [r7, #12]
 80100e2:	e008      	b.n	80100f6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 80100e4:	687a      	ldr	r2, [r7, #4]
 80100e6:	68fb      	ldr	r3, [r7, #12]
 80100e8:	4413      	add	r3, r2
 80100ea:	3304      	adds	r3, #4
 80100ec:	2200      	movs	r2, #0
 80100ee:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 80100f0:	68fb      	ldr	r3, [r7, #12]
 80100f2:	3301      	adds	r3, #1
 80100f4:	60fb      	str	r3, [r7, #12]
 80100f6:	68fb      	ldr	r3, [r7, #12]
 80100f8:	2b02      	cmp	r3, #2
 80100fa:	d9f3      	bls.n	80100e4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 80100fc:	687b      	ldr	r3, [r7, #4]
 80100fe:	4618      	mov	r0, r3
 8010100:	3710      	adds	r7, #16
 8010102:	46bd      	mov	sp, r7
 8010104:	bdb0      	pop	{r4, r5, r7, pc}
 8010106:	bf00      	nop
 8010108:	08028c78 	.word	0x08028c78

0801010c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 801010c:	b580      	push	{r7, lr}
 801010e:	b082      	sub	sp, #8
 8010110:	af00      	add	r7, sp, #0
 8010112:	6078      	str	r0, [r7, #4]
 8010114:	4a05      	ldr	r2, [pc, #20]	@ (801012c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 8010116:	687b      	ldr	r3, [r7, #4]
 8010118:	601a      	str	r2, [r3, #0]
 801011a:	687b      	ldr	r3, [r7, #4]
 801011c:	4618      	mov	r0, r3
 801011e:	f7ff fbf9 	bl	800f914 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 8010122:	687b      	ldr	r3, [r7, #4]
 8010124:	4618      	mov	r0, r3
 8010126:	3708      	adds	r7, #8
 8010128:	46bd      	mov	sp, r7
 801012a:	bd80      	pop	{r7, pc}
 801012c:	08028c78 	.word	0x08028c78

08010130 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 8010130:	b580      	push	{r7, lr}
 8010132:	b082      	sub	sp, #8
 8010134:	af00      	add	r7, sp, #0
 8010136:	6078      	str	r0, [r7, #4]
 8010138:	6878      	ldr	r0, [r7, #4]
 801013a:	f7ff ffe7 	bl	801010c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 801013e:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 8010142:	6878      	ldr	r0, [r7, #4]
 8010144:	f015 fc75 	bl	8025a32 <_ZdlPvj>
 8010148:	687b      	ldr	r3, [r7, #4]
 801014a:	4618      	mov	r0, r3
 801014c:	3708      	adds	r7, #8
 801014e:	46bd      	mov	sp, r7
 8010150:	bd80      	pop	{r7, pc}
	...

08010154 <_Z41__static_initialization_and_destruction_0ii>:
 8010154:	b580      	push	{r7, lr}
 8010156:	b082      	sub	sp, #8
 8010158:	af00      	add	r7, sp, #0
 801015a:	6078      	str	r0, [r7, #4]
 801015c:	6039      	str	r1, [r7, #0]
 801015e:	687b      	ldr	r3, [r7, #4]
 8010160:	2b01      	cmp	r3, #1
 8010162:	d107      	bne.n	8010174 <_Z41__static_initialization_and_destruction_0ii+0x20>
 8010164:	683b      	ldr	r3, [r7, #0]
 8010166:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 801016a:	4293      	cmp	r3, r2
 801016c:	d102      	bne.n	8010174 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 801016e:	4809      	ldr	r0, [pc, #36]	@ (8010194 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010170:	f7ff ff8c 	bl	801008c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 8010174:	687b      	ldr	r3, [r7, #4]
 8010176:	2b00      	cmp	r3, #0
 8010178:	d107      	bne.n	801018a <_Z41__static_initialization_and_destruction_0ii+0x36>
 801017a:	683b      	ldr	r3, [r7, #0]
 801017c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010180:	4293      	cmp	r3, r2
 8010182:	d102      	bne.n	801018a <_Z41__static_initialization_and_destruction_0ii+0x36>
 8010184:	4803      	ldr	r0, [pc, #12]	@ (8010194 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010186:	f7ff ffc1 	bl	801010c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 801018a:	bf00      	nop
 801018c:	3708      	adds	r7, #8
 801018e:	46bd      	mov	sp, r7
 8010190:	bd80      	pop	{r7, pc}
 8010192:	bf00      	nop
 8010194:	20000d60 	.word	0x20000d60

08010198 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8010198:	b580      	push	{r7, lr}
 801019a:	b086      	sub	sp, #24
 801019c:	af00      	add	r7, sp, #0
 801019e:	60f8      	str	r0, [r7, #12]
 80101a0:	4608      	mov	r0, r1
 80101a2:	4611      	mov	r1, r2
 80101a4:	461a      	mov	r2, r3
 80101a6:	4603      	mov	r3, r0
 80101a8:	817b      	strh	r3, [r7, #10]
 80101aa:	460b      	mov	r3, r1
 80101ac:	813b      	strh	r3, [r7, #8]
 80101ae:	4613      	mov	r3, r2
 80101b0:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 80101b2:	68fb      	ldr	r3, [r7, #12]
 80101b4:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80101b8:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80101bc:	3301      	adds	r3, #1
 80101be:	68fa      	ldr	r2, [r7, #12]
 80101c0:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 80101c4:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        if (drawingBlock == blocks)
 80101c8:	68fb      	ldr	r3, [r7, #12]
 80101ca:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80101ce:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80101d2:	2b03      	cmp	r3, #3
 80101d4:	d109      	bne.n	80101ea <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 80101d6:	68fb      	ldr	r3, [r7, #12]
 80101d8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80101dc:	461a      	mov	r2, r3
 80101de:	2300      	movs	r3, #0
 80101e0:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 80101e4:	e001      	b.n	80101ea <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 80101e6:	f7ff fee6 	bl	800ffb6 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 80101ea:	68fb      	ldr	r3, [r7, #12]
 80101ec:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80101f0:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80101f4:	68fa      	ldr	r2, [r7, #12]
 80101f6:	4413      	add	r3, r2
 80101f8:	791b      	ldrb	r3, [r3, #4]
 80101fa:	b2db      	uxtb	r3, r3
 80101fc:	2b00      	cmp	r3, #0
 80101fe:	bf14      	ite	ne
 8010200:	2301      	movne	r3, #1
 8010202:	2300      	moveq	r3, #0
 8010204:	b2db      	uxtb	r3, r3
 8010206:	2b00      	cmp	r3, #0
 8010208:	d1ed      	bne.n	80101e6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 801020a:	68fb      	ldr	r3, [r7, #12]
 801020c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010210:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010214:	68fa      	ldr	r2, [r7, #12]
 8010216:	4413      	add	r3, r2
 8010218:	791b      	ldrb	r3, [r3, #4]
 801021a:	b2db      	uxtb	r3, r3
 801021c:	2b00      	cmp	r3, #0
 801021e:	d005      	beq.n	801022c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 8010220:	4b38      	ldr	r3, [pc, #224]	@ (8010304 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 8010222:	4a39      	ldr	r2, [pc, #228]	@ (8010308 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 8010224:	21aa      	movs	r1, #170	@ 0xaa
 8010226:	4839      	ldr	r0, [pc, #228]	@ (801030c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 8010228:	f015 fcb2 	bl	8025b90 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 801022c:	68fb      	ldr	r3, [r7, #12]
 801022e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010232:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010236:	68fa      	ldr	r2, [r7, #12]
 8010238:	4413      	add	r3, r2
 801023a:	2201      	movs	r2, #1
 801023c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 801023e:	88fb      	ldrh	r3, [r7, #6]
 8010240:	005b      	lsls	r3, r3, #1
 8010242:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 8010244:	697b      	ldr	r3, [r7, #20]
 8010246:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 801024a:	fbb2 f3f3 	udiv	r3, r2, r3
 801024e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8010250:	68fb      	ldr	r3, [r7, #12]
 8010252:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010256:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801025a:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 801025e:	fb02 f303 	mul.w	r3, r2, r3
 8010262:	3308      	adds	r3, #8
 8010264:	68fa      	ldr	r2, [r7, #12]
 8010266:	441a      	add	r2, r3
 8010268:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801026a:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 801026c:	68fb      	ldr	r3, [r7, #12]
 801026e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010272:	f8d3 21e4 	ldr.w	r2, [r3, #484]	@ 0x1e4
 8010276:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 801027a:	68fb      	ldr	r3, [r7, #12]
 801027c:	f202 4239 	addw	r2, r2, #1081	@ 0x439
 8010280:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 8010284:	68fb      	ldr	r3, [r7, #12]
 8010286:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801028a:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801028e:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 8010292:	68fa      	ldr	r2, [r7, #12]
 8010294:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010298:	00db      	lsls	r3, r3, #3
 801029a:	4413      	add	r3, r2
 801029c:	460a      	mov	r2, r1
 801029e:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 80102a0:	68fb      	ldr	r3, [r7, #12]
 80102a2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80102a6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80102aa:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 80102ae:	68fa      	ldr	r2, [r7, #12]
 80102b0:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 80102b4:	00db      	lsls	r3, r3, #3
 80102b6:	4413      	add	r3, r2
 80102b8:	460a      	mov	r2, r1
 80102ba:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 80102bc:	8c3a      	ldrh	r2, [r7, #32]
 80102be:	693b      	ldr	r3, [r7, #16]
 80102c0:	429a      	cmp	r2, r3
 80102c2:	bfa8      	it	ge
 80102c4:	461a      	movge	r2, r3
 80102c6:	68fb      	ldr	r3, [r7, #12]
 80102c8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80102cc:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80102d0:	b211      	sxth	r1, r2
 80102d2:	68fa      	ldr	r2, [r7, #12]
 80102d4:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 80102d8:	00db      	lsls	r3, r3, #3
 80102da:	4413      	add	r3, r2
 80102dc:	460a      	mov	r2, r1
 80102de:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 80102e0:	68fb      	ldr	r3, [r7, #12]
 80102e2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80102e6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80102ea:	68fa      	ldr	r2, [r7, #12]
 80102ec:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 80102f0:	00db      	lsls	r3, r3, #3
 80102f2:	4413      	add	r3, r2
 80102f4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80102f8:	b29b      	uxth	r3, r3
    }
 80102fa:	4618      	mov	r0, r3
 80102fc:	3718      	adds	r7, #24
 80102fe:	46bd      	mov	sp, r7
 8010300:	bd80      	pop	{r7, pc}
 8010302:	bf00      	nop
 8010304:	08027904 	.word	0x08027904
 8010308:	08027924 	.word	0x08027924
 801030c:	08027a58 	.word	0x08027a58

08010310 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 8010310:	b580      	push	{r7, lr}
 8010312:	b082      	sub	sp, #8
 8010314:	af00      	add	r7, sp, #0
 8010316:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 8010318:	687b      	ldr	r3, [r7, #4]
 801031a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801031e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010322:	687a      	ldr	r2, [r7, #4]
 8010324:	4413      	add	r3, r2
 8010326:	791b      	ldrb	r3, [r3, #4]
 8010328:	b2db      	uxtb	r3, r3
 801032a:	2b01      	cmp	r3, #1
 801032c:	d005      	beq.n	801033a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 801032e:	4b0a      	ldr	r3, [pc, #40]	@ (8010358 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 8010330:	4a0a      	ldr	r2, [pc, #40]	@ (801035c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 8010332:	21b9      	movs	r1, #185	@ 0xb9
 8010334:	480a      	ldr	r0, [pc, #40]	@ (8010360 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 8010336:	f015 fc2b 	bl	8025b90 <__assert_func>
        state[drawingBlock] = DRAWN;
 801033a:	687b      	ldr	r3, [r7, #4]
 801033c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010340:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010344:	687a      	ldr	r2, [r7, #4]
 8010346:	4413      	add	r3, r2
 8010348:	2202      	movs	r2, #2
 801034a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 801034c:	f7ff fe3a 	bl	800ffc4 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8010350:	bf00      	nop
 8010352:	3708      	adds	r7, #8
 8010354:	46bd      	mov	sp, r7
 8010356:	bd80      	pop	{r7, pc}
 8010358:	08027aac 	.word	0x08027aac
 801035c:	08027ad0 	.word	0x08027ad0
 8010360:	08027a58 	.word	0x08027a58

08010364 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 8010364:	b480      	push	{r7}
 8010366:	b085      	sub	sp, #20
 8010368:	af00      	add	r7, sp, #0
 801036a:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 801036c:	2300      	movs	r3, #0
 801036e:	60fb      	str	r3, [r7, #12]
 8010370:	e011      	b.n	8010396 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 8010372:	687a      	ldr	r2, [r7, #4]
 8010374:	68fb      	ldr	r3, [r7, #12]
 8010376:	4413      	add	r3, r2
 8010378:	3304      	adds	r3, #4
 801037a:	781b      	ldrb	r3, [r3, #0]
 801037c:	b2db      	uxtb	r3, r3
 801037e:	2b02      	cmp	r3, #2
 8010380:	bf0c      	ite	eq
 8010382:	2301      	moveq	r3, #1
 8010384:	2300      	movne	r3, #0
 8010386:	b2db      	uxtb	r3, r3
 8010388:	2b00      	cmp	r3, #0
 801038a:	d001      	beq.n	8010390 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 801038c:	2301      	movs	r3, #1
 801038e:	e006      	b.n	801039e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 8010390:	68fb      	ldr	r3, [r7, #12]
 8010392:	3301      	adds	r3, #1
 8010394:	60fb      	str	r3, [r7, #12]
 8010396:	68fb      	ldr	r3, [r7, #12]
 8010398:	2b02      	cmp	r3, #2
 801039a:	d9ea      	bls.n	8010372 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 801039c:	2300      	movs	r3, #0
    }
 801039e:	4618      	mov	r0, r3
 80103a0:	3714      	adds	r7, #20
 80103a2:	46bd      	mov	sp, r7
 80103a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103a8:	4770      	bx	lr
	...

080103ac <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 80103ac:	b580      	push	{r7, lr}
 80103ae:	b082      	sub	sp, #8
 80103b0:	af00      	add	r7, sp, #0
 80103b2:	6078      	str	r0, [r7, #4]
 80103b4:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 80103b6:	687b      	ldr	r3, [r7, #4]
 80103b8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80103bc:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80103c0:	3301      	adds	r3, #1
 80103c2:	687a      	ldr	r2, [r7, #4]
 80103c4:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 80103c8:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        if (sendingBlock == blocks)
 80103cc:	687b      	ldr	r3, [r7, #4]
 80103ce:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80103d2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80103d6:	2b03      	cmp	r3, #3
 80103d8:	d106      	bne.n	80103e8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 80103da:	687b      	ldr	r3, [r7, #4]
 80103dc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80103e0:	461a      	mov	r2, r3
 80103e2:	2300      	movs	r3, #0
 80103e4:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 80103e8:	687b      	ldr	r3, [r7, #4]
 80103ea:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80103ee:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80103f2:	687a      	ldr	r2, [r7, #4]
 80103f4:	4413      	add	r3, r2
 80103f6:	791b      	ldrb	r3, [r3, #4]
 80103f8:	b2db      	uxtb	r3, r3
 80103fa:	2b02      	cmp	r3, #2
 80103fc:	d005      	beq.n	801040a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 80103fe:	4b16      	ldr	r3, [pc, #88]	@ (8010458 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 8010400:	4a16      	ldr	r2, [pc, #88]	@ (801045c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 8010402:	21dd      	movs	r1, #221	@ 0xdd
 8010404:	4816      	ldr	r0, [pc, #88]	@ (8010460 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 8010406:	f015 fbc3 	bl	8025b90 <__assert_func>
        rect = blockRect[sendingBlock];
 801040a:	687b      	ldr	r3, [r7, #4]
 801040c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010410:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010414:	683a      	ldr	r2, [r7, #0]
 8010416:	6879      	ldr	r1, [r7, #4]
 8010418:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 801041c:	00db      	lsls	r3, r3, #3
 801041e:	440b      	add	r3, r1
 8010420:	cb03      	ldmia	r3!, {r0, r1}
 8010422:	6010      	str	r0, [r2, #0]
 8010424:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 8010426:	687b      	ldr	r3, [r7, #4]
 8010428:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801042c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010430:	687a      	ldr	r2, [r7, #4]
 8010432:	4413      	add	r3, r2
 8010434:	2203      	movs	r2, #3
 8010436:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 8010438:	687b      	ldr	r3, [r7, #4]
 801043a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801043e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010442:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 8010446:	fb02 f303 	mul.w	r3, r2, r3
 801044a:	3308      	adds	r3, #8
 801044c:	687a      	ldr	r2, [r7, #4]
 801044e:	4413      	add	r3, r2
    }
 8010450:	4618      	mov	r0, r3
 8010452:	3708      	adds	r7, #8
 8010454:	46bd      	mov	sp, r7
 8010456:	bd80      	pop	{r7, pc}
 8010458:	08027ba4 	.word	0x08027ba4
 801045c:	08027bc4 	.word	0x08027bc4
 8010460:	08027a58 	.word	0x08027a58

08010464 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 8010464:	b580      	push	{r7, lr}
 8010466:	b084      	sub	sp, #16
 8010468:	af00      	add	r7, sp, #0
 801046a:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 801046c:	687b      	ldr	r3, [r7, #4]
 801046e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010472:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010476:	3301      	adds	r3, #1
 8010478:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 801047a:	68fb      	ldr	r3, [r7, #12]
 801047c:	2b03      	cmp	r3, #3
 801047e:	d101      	bne.n	8010484 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 8010480:	2300      	movs	r3, #0
 8010482:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 8010484:	687a      	ldr	r2, [r7, #4]
 8010486:	68fb      	ldr	r3, [r7, #12]
 8010488:	4413      	add	r3, r2
 801048a:	3304      	adds	r3, #4
 801048c:	781b      	ldrb	r3, [r3, #0]
 801048e:	b2db      	uxtb	r3, r3
 8010490:	2b02      	cmp	r3, #2
 8010492:	d005      	beq.n	80104a0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 8010494:	4b07      	ldr	r3, [pc, #28]	@ (80104b4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 8010496:	4a08      	ldr	r2, [pc, #32]	@ (80104b8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 8010498:	21ea      	movs	r1, #234	@ 0xea
 801049a:	4808      	ldr	r0, [pc, #32]	@ (80104bc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 801049c:	f015 fb78 	bl	8025b90 <__assert_func>
        return blockRect[nextSendingBlock];
 80104a0:	68fb      	ldr	r3, [r7, #12]
 80104a2:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 80104a6:	00db      	lsls	r3, r3, #3
 80104a8:	687a      	ldr	r2, [r7, #4]
 80104aa:	4413      	add	r3, r2
    }
 80104ac:	4618      	mov	r0, r3
 80104ae:	3710      	adds	r7, #16
 80104b0:	46bd      	mov	sp, r7
 80104b2:	bd80      	pop	{r7, pc}
 80104b4:	08027cc4 	.word	0x08027cc4
 80104b8:	08027ce8 	.word	0x08027ce8
 80104bc:	08027a58 	.word	0x08027a58

080104c0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 80104c0:	b480      	push	{r7}
 80104c2:	b085      	sub	sp, #20
 80104c4:	af00      	add	r7, sp, #0
 80104c6:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 80104c8:	687b      	ldr	r3, [r7, #4]
 80104ca:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80104ce:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80104d2:	3301      	adds	r3, #1
 80104d4:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 80104d6:	68fb      	ldr	r3, [r7, #12]
 80104d8:	2b03      	cmp	r3, #3
 80104da:	d101      	bne.n	80104e0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 80104dc:	2300      	movs	r3, #0
 80104de:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 80104e0:	687a      	ldr	r2, [r7, #4]
 80104e2:	68fb      	ldr	r3, [r7, #12]
 80104e4:	4413      	add	r3, r2
 80104e6:	3304      	adds	r3, #4
 80104e8:	781b      	ldrb	r3, [r3, #0]
 80104ea:	b2db      	uxtb	r3, r3
 80104ec:	2b00      	cmp	r3, #0
 80104ee:	bf0c      	ite	eq
 80104f0:	2301      	moveq	r3, #1
 80104f2:	2300      	movne	r3, #0
 80104f4:	b2db      	uxtb	r3, r3
    }
 80104f6:	4618      	mov	r0, r3
 80104f8:	3714      	adds	r7, #20
 80104fa:	46bd      	mov	sp, r7
 80104fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010500:	4770      	bx	lr
	...

08010504 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 8010504:	b580      	push	{r7, lr}
 8010506:	b082      	sub	sp, #8
 8010508:	af00      	add	r7, sp, #0
 801050a:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 801050c:	687b      	ldr	r3, [r7, #4]
 801050e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010512:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010516:	687a      	ldr	r2, [r7, #4]
 8010518:	4413      	add	r3, r2
 801051a:	791b      	ldrb	r3, [r3, #4]
 801051c:	b2db      	uxtb	r3, r3
 801051e:	2b03      	cmp	r3, #3
 8010520:	d005      	beq.n	801052e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 8010522:	4b09      	ldr	r3, [pc, #36]	@ (8010548 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 8010524:	4a09      	ldr	r2, [pc, #36]	@ (801054c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 8010526:	21ff      	movs	r1, #255	@ 0xff
 8010528:	4809      	ldr	r0, [pc, #36]	@ (8010550 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 801052a:	f015 fb31 	bl	8025b90 <__assert_func>
        state[sendingBlock] = EMPTY;
 801052e:	687b      	ldr	r3, [r7, #4]
 8010530:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010534:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010538:	687a      	ldr	r2, [r7, #4]
 801053a:	4413      	add	r3, r2
 801053c:	2200      	movs	r2, #0
 801053e:	711a      	strb	r2, [r3, #4]
    }
 8010540:	bf00      	nop
 8010542:	3708      	adds	r7, #8
 8010544:	46bd      	mov	sp, r7
 8010546:	bd80      	pop	{r7, pc}
 8010548:	08027dc8 	.word	0x08027dc8
 801054c:	08027de8 	.word	0x08027de8
 8010550:	08027a58 	.word	0x08027a58

08010554 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8010554:	b580      	push	{r7, lr}
 8010556:	af00      	add	r7, sp, #0
 8010558:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801055c:	2001      	movs	r0, #1
 801055e:	f7ff fdf9 	bl	8010154 <_Z41__static_initialization_and_destruction_0ii>
 8010562:	bd80      	pop	{r7, pc}

08010564 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8010564:	b580      	push	{r7, lr}
 8010566:	af00      	add	r7, sp, #0
 8010568:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801056c:	2000      	movs	r0, #0
 801056e:	f7ff fdf1 	bl	8010154 <_Z41__static_initialization_and_destruction_0ii>
 8010572:	bd80      	pop	{r7, pc}

08010574 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010574:	8880      	ldrh	r0, [r0, #4]
 8010576:	4770      	bx	lr

08010578 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8010578:	b570      	push	{r4, r5, r6, lr}
 801057a:	6803      	ldr	r3, [r0, #0]
 801057c:	4605      	mov	r5, r0
 801057e:	460c      	mov	r4, r1
 8010580:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010582:	2100      	movs	r1, #0
 8010584:	4798      	blx	r3
 8010586:	682b      	ldr	r3, [r5, #0]
 8010588:	4606      	mov	r6, r0
 801058a:	6a1b      	ldr	r3, [r3, #32]
 801058c:	4628      	mov	r0, r5
 801058e:	4798      	blx	r3
 8010590:	1ba4      	subs	r4, r4, r6
 8010592:	b2a4      	uxth	r4, r4
 8010594:	fbb4 f0f0 	udiv	r0, r4, r0
 8010598:	bd70      	pop	{r4, r5, r6, pc}

0801059a <_ZN8touchgfx17AbstractPartition5clearEv>:
 801059a:	2300      	movs	r3, #0
 801059c:	8083      	strh	r3, [r0, #4]
 801059e:	4770      	bx	lr

080105a0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 80105a0:	b510      	push	{r4, lr}
 80105a2:	6803      	ldr	r3, [r0, #0]
 80105a4:	8881      	ldrh	r1, [r0, #4]
 80105a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80105a8:	4604      	mov	r4, r0
 80105aa:	4798      	blx	r3
 80105ac:	88a3      	ldrh	r3, [r4, #4]
 80105ae:	3301      	adds	r3, #1
 80105b0:	80a3      	strh	r3, [r4, #4]
 80105b2:	bd10      	pop	{r4, pc}

080105b4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80105b4:	6803      	ldr	r3, [r0, #0]
 80105b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80105b8:	4718      	bx	r3

080105ba <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80105ba:	4770      	bx	lr

080105bc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80105bc:	4a02      	ldr	r2, [pc, #8]	@ (80105c8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80105be:	6002      	str	r2, [r0, #0]
 80105c0:	2200      	movs	r2, #0
 80105c2:	8082      	strh	r2, [r0, #4]
 80105c4:	4770      	bx	lr
 80105c6:	bf00      	nop
 80105c8:	08028da8 	.word	0x08028da8

080105cc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80105cc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80105ce:	2000      	movs	r0, #0
 80105d0:	b12b      	cbz	r3, 80105de <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80105d2:	b920      	cbnz	r0, 80105de <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80105d4:	1a5a      	subs	r2, r3, r1
 80105d6:	4250      	negs	r0, r2
 80105d8:	4150      	adcs	r0, r2
 80105da:	699b      	ldr	r3, [r3, #24]
 80105dc:	e7f8      	b.n	80105d0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80105de:	4770      	bx	lr

080105e0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80105e0:	2300      	movs	r3, #0
 80105e2:	6148      	str	r0, [r1, #20]
 80105e4:	618b      	str	r3, [r1, #24]
 80105e6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80105e8:	b913      	cbnz	r3, 80105f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80105ea:	6281      	str	r1, [r0, #40]	@ 0x28
 80105ec:	4770      	bx	lr
 80105ee:	4613      	mov	r3, r2
 80105f0:	699a      	ldr	r2, [r3, #24]
 80105f2:	2a00      	cmp	r2, #0
 80105f4:	d1fb      	bne.n	80105ee <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80105f6:	6199      	str	r1, [r3, #24]
 80105f8:	4770      	bx	lr

080105fa <_ZN8touchgfx9Container9removeAllEv>:
 80105fa:	2200      	movs	r2, #0
 80105fc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80105fe:	b123      	cbz	r3, 801060a <_ZN8touchgfx9Container9removeAllEv+0x10>
 8010600:	6999      	ldr	r1, [r3, #24]
 8010602:	6281      	str	r1, [r0, #40]	@ 0x28
 8010604:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8010608:	e7f8      	b.n	80105fc <_ZN8touchgfx9Container9removeAllEv+0x2>
 801060a:	4770      	bx	lr

0801060c <_ZN8touchgfx9Container6unlinkEv>:
 801060c:	2300      	movs	r3, #0
 801060e:	6283      	str	r3, [r0, #40]	@ 0x28
 8010610:	4770      	bx	lr

08010612 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8010612:	2200      	movs	r2, #0
 8010614:	8002      	strh	r2, [r0, #0]
 8010616:	8042      	strh	r2, [r0, #2]
 8010618:	8082      	strh	r2, [r0, #4]
 801061a:	80c2      	strh	r2, [r0, #6]
 801061c:	4770      	bx	lr

0801061e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 801061e:	b570      	push	{r4, r5, r6, lr}
 8010620:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010622:	460d      	mov	r5, r1
 8010624:	4616      	mov	r6, r2
 8010626:	b13c      	cbz	r4, 8010638 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8010628:	6823      	ldr	r3, [r4, #0]
 801062a:	4620      	mov	r0, r4
 801062c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801062e:	4632      	mov	r2, r6
 8010630:	4629      	mov	r1, r5
 8010632:	4798      	blx	r3
 8010634:	69a4      	ldr	r4, [r4, #24]
 8010636:	e7f6      	b.n	8010626 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8010638:	bd70      	pop	{r4, r5, r6, pc}

0801063a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801063a:	b538      	push	{r3, r4, r5, lr}
 801063c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801063e:	460d      	mov	r5, r1
 8010640:	b134      	cbz	r4, 8010650 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010642:	682b      	ldr	r3, [r5, #0]
 8010644:	4621      	mov	r1, r4
 8010646:	689b      	ldr	r3, [r3, #8]
 8010648:	4628      	mov	r0, r5
 801064a:	4798      	blx	r3
 801064c:	69a4      	ldr	r4, [r4, #24]
 801064e:	e7f7      	b.n	8010640 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010650:	bd38      	pop	{r3, r4, r5, pc}

08010652 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010652:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010654:	b19b      	cbz	r3, 801067e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010656:	428b      	cmp	r3, r1
 8010658:	d109      	bne.n	801066e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801065a:	699a      	ldr	r2, [r3, #24]
 801065c:	2100      	movs	r1, #0
 801065e:	6159      	str	r1, [r3, #20]
 8010660:	6282      	str	r2, [r0, #40]	@ 0x28
 8010662:	b902      	cbnz	r2, 8010666 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010664:	4770      	bx	lr
 8010666:	6199      	str	r1, [r3, #24]
 8010668:	4770      	bx	lr
 801066a:	4613      	mov	r3, r2
 801066c:	b13a      	cbz	r2, 801067e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801066e:	699a      	ldr	r2, [r3, #24]
 8010670:	428a      	cmp	r2, r1
 8010672:	d1fa      	bne.n	801066a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010674:	698a      	ldr	r2, [r1, #24]
 8010676:	619a      	str	r2, [r3, #24]
 8010678:	2300      	movs	r3, #0
 801067a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801067e:	4770      	bx	lr

08010680 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010680:	b410      	push	{r4}
 8010682:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010684:	4604      	mov	r4, r0
 8010686:	b92b      	cbnz	r3, 8010694 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010688:	6803      	ldr	r3, [r0, #0]
 801068a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801068e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010690:	4611      	mov	r1, r2
 8010692:	4718      	bx	r3
 8010694:	b941      	cbnz	r1, 80106a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010696:	6193      	str	r3, [r2, #24]
 8010698:	6282      	str	r2, [r0, #40]	@ 0x28
 801069a:	6154      	str	r4, [r2, #20]
 801069c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80106a0:	4770      	bx	lr
 80106a2:	4603      	mov	r3, r0
 80106a4:	2800      	cmp	r0, #0
 80106a6:	d0f9      	beq.n	801069c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80106a8:	4299      	cmp	r1, r3
 80106aa:	6998      	ldr	r0, [r3, #24]
 80106ac:	d1f9      	bne.n	80106a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80106ae:	6190      	str	r0, [r2, #24]
 80106b0:	618a      	str	r2, [r1, #24]
 80106b2:	e7f2      	b.n	801069a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080106b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80106b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106b8:	461f      	mov	r7, r3
 80106ba:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80106be:	460d      	mov	r5, r1
 80106c0:	4616      	mov	r6, r2
 80106c2:	b103      	cbz	r3, 80106c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80106c4:	6038      	str	r0, [r7, #0]
 80106c6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80106c8:	b314      	cbz	r4, 8010710 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80106ca:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80106ce:	b1eb      	cbz	r3, 801070c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80106d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80106d4:	428d      	cmp	r5, r1
 80106d6:	db19      	blt.n	801070c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80106d8:	8923      	ldrh	r3, [r4, #8]
 80106da:	b289      	uxth	r1, r1
 80106dc:	440b      	add	r3, r1
 80106de:	b21b      	sxth	r3, r3
 80106e0:	429d      	cmp	r5, r3
 80106e2:	da13      	bge.n	801070c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80106e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80106e8:	4296      	cmp	r6, r2
 80106ea:	db0f      	blt.n	801070c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80106ec:	8963      	ldrh	r3, [r4, #10]
 80106ee:	b292      	uxth	r2, r2
 80106f0:	4413      	add	r3, r2
 80106f2:	b21b      	sxth	r3, r3
 80106f4:	429e      	cmp	r6, r3
 80106f6:	da09      	bge.n	801070c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80106f8:	6823      	ldr	r3, [r4, #0]
 80106fa:	1ab2      	subs	r2, r6, r2
 80106fc:	1a69      	subs	r1, r5, r1
 80106fe:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8010702:	b212      	sxth	r2, r2
 8010704:	463b      	mov	r3, r7
 8010706:	b209      	sxth	r1, r1
 8010708:	4620      	mov	r0, r4
 801070a:	47c0      	blx	r8
 801070c:	69a4      	ldr	r4, [r4, #24]
 801070e:	e7db      	b.n	80106c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8010710:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8010714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010718:	4c6e      	ldr	r4, [pc, #440]	@ (80108d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801071a:	b0a1      	sub	sp, #132	@ 0x84
 801071c:	6824      	ldr	r4, [r4, #0]
 801071e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8010720:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 8010724:	9303      	str	r3, [sp, #12]
 8010726:	2400      	movs	r4, #0
 8010728:	802c      	strh	r4, [r5, #0]
 801072a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 801072c:	802c      	strh	r4, [r5, #0]
 801072e:	601c      	str	r4, [r3, #0]
 8010730:	4606      	mov	r6, r0
 8010732:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010736:	f7ff ffbd 	bl	80106b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801073a:	f1b9 0f03 	cmp.w	r9, #3
 801073e:	f340 80c2 	ble.w	80108c6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010742:	4631      	mov	r1, r6
 8010744:	a80c      	add	r0, sp, #48	@ 0x30
 8010746:	f004 fd2d 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801074a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801074e:	9306      	str	r3, [sp, #24]
 8010750:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010754:	9307      	str	r3, [sp, #28]
 8010756:	9b03      	ldr	r3, [sp, #12]
 8010758:	f8d3 a000 	ldr.w	sl, [r3]
 801075c:	f1ba 0f00 	cmp.w	sl, #0
 8010760:	f000 80b4 	beq.w	80108cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010764:	4651      	mov	r1, sl
 8010766:	a810      	add	r0, sp, #64	@ 0x40
 8010768:	f004 fd1c 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801076c:	9b01      	ldr	r3, [sp, #4]
 801076e:	9a06      	ldr	r2, [sp, #24]
 8010770:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8010774:	189d      	adds	r5, r3, r2
 8010776:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 801077a:	9a07      	ldr	r2, [sp, #28]
 801077c:	2002      	movs	r0, #2
 801077e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010782:	4419      	add	r1, r3
 8010784:	1a6d      	subs	r5, r5, r1
 8010786:	9b02      	ldr	r3, [sp, #8]
 8010788:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 801078c:	4413      	add	r3, r2
 801078e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8010792:	fb92 f2f0 	sdiv	r2, r2, r0
 8010796:	440a      	add	r2, r1
 8010798:	1a9b      	subs	r3, r3, r2
 801079a:	435b      	muls	r3, r3
 801079c:	fb05 3505 	mla	r5, r5, r5, r3
 80107a0:	4f4d      	ldr	r7, [pc, #308]	@ (80108d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80107a2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107a4:	ac10      	add	r4, sp, #64	@ 0x40
 80107a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80107ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80107b0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80107b4:	f1b9 0f0c 	cmp.w	r9, #12
 80107b8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80107bc:	f04f 0303 	mov.w	r3, #3
 80107c0:	bfc8      	it	gt
 80107c2:	4698      	movgt	r8, r3
 80107c4:	f8cd 9000 	str.w	r9, [sp]
 80107c8:	f04f 0400 	mov.w	r4, #0
 80107cc:	bfdc      	itt	le
 80107ce:	f109 32ff 	addle.w	r2, r9, #4294967295
 80107d2:	fb92 f8f3 	sdivle	r8, r2, r3
 80107d6:	1c63      	adds	r3, r4, #1
 80107d8:	aa10      	add	r2, sp, #64	@ 0x40
 80107da:	f004 0401 	and.w	r4, r4, #1
 80107de:	9308      	str	r3, [sp, #32]
 80107e0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80107e4:	9b00      	ldr	r3, [sp, #0]
 80107e6:	fb93 f3f8 	sdiv	r3, r3, r8
 80107ea:	b29b      	uxth	r3, r3
 80107ec:	3404      	adds	r4, #4
 80107ee:	f04f 0b00 	mov.w	fp, #0
 80107f2:	9304      	str	r3, [sp, #16]
 80107f4:	9a04      	ldr	r2, [sp, #16]
 80107f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80107fa:	fb13 f302 	smulbb	r3, r3, r2
 80107fe:	9a01      	ldr	r2, [sp, #4]
 8010800:	b29b      	uxth	r3, r3
 8010802:	1899      	adds	r1, r3, r2
 8010804:	9305      	str	r3, [sp, #20]
 8010806:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801080a:	b209      	sxth	r1, r1
 801080c:	4299      	cmp	r1, r3
 801080e:	db4d      	blt.n	80108ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010810:	8932      	ldrh	r2, [r6, #8]
 8010812:	4413      	add	r3, r2
 8010814:	b21b      	sxth	r3, r3
 8010816:	4299      	cmp	r1, r3
 8010818:	da48      	bge.n	80108ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801081a:	9b04      	ldr	r3, [sp, #16]
 801081c:	6827      	ldr	r7, [r4, #0]
 801081e:	fb17 f703 	smulbb	r7, r7, r3
 8010822:	9b02      	ldr	r3, [sp, #8]
 8010824:	b2bf      	uxth	r7, r7
 8010826:	18fa      	adds	r2, r7, r3
 8010828:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801082c:	b212      	sxth	r2, r2
 801082e:	429a      	cmp	r2, r3
 8010830:	db3c      	blt.n	80108ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010832:	8970      	ldrh	r0, [r6, #10]
 8010834:	4403      	add	r3, r0
 8010836:	b21b      	sxth	r3, r3
 8010838:	429a      	cmp	r2, r3
 801083a:	da37      	bge.n	80108ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801083c:	2300      	movs	r3, #0
 801083e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010840:	4630      	mov	r0, r6
 8010842:	ab0b      	add	r3, sp, #44	@ 0x2c
 8010844:	f7ff ff36 	bl	80106b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010848:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801084a:	b37a      	cbz	r2, 80108ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801084c:	4552      	cmp	r2, sl
 801084e:	d02d      	beq.n	80108ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010850:	4611      	mov	r1, r2
 8010852:	a80e      	add	r0, sp, #56	@ 0x38
 8010854:	9209      	str	r2, [sp, #36]	@ 0x24
 8010856:	f004 fca5 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801085a:	9a06      	ldr	r2, [sp, #24]
 801085c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8010860:	9b01      	ldr	r3, [sp, #4]
 8010862:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8010866:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 801086a:	4413      	add	r3, r2
 801086c:	f04f 0e02 	mov.w	lr, #2
 8010870:	fb91 f1fe 	sdiv	r1, r1, lr
 8010874:	4401      	add	r1, r0
 8010876:	1a58      	subs	r0, r3, r1
 8010878:	9a07      	ldr	r2, [sp, #28]
 801087a:	9b02      	ldr	r3, [sp, #8]
 801087c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8010880:	fb9c fcfe 	sdiv	ip, ip, lr
 8010884:	4413      	add	r3, r2
 8010886:	448c      	add	ip, r1
 8010888:	eba3 030c 	sub.w	r3, r3, ip
 801088c:	435b      	muls	r3, r3
 801088e:	fb00 3300 	mla	r3, r0, r0, r3
 8010892:	42ab      	cmp	r3, r5
 8010894:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010896:	d208      	bcs.n	80108aa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010898:	9803      	ldr	r0, [sp, #12]
 801089a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801089c:	6001      	str	r1, [r0, #0]
 801089e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80108a0:	9805      	ldr	r0, [sp, #20]
 80108a2:	8008      	strh	r0, [r1, #0]
 80108a4:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80108a6:	461d      	mov	r5, r3
 80108a8:	800f      	strh	r7, [r1, #0]
 80108aa:	4692      	mov	sl, r2
 80108ac:	f10b 0b01 	add.w	fp, fp, #1
 80108b0:	f1bb 0f04 	cmp.w	fp, #4
 80108b4:	f104 0408 	add.w	r4, r4, #8
 80108b8:	d19c      	bne.n	80107f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80108ba:	9b00      	ldr	r3, [sp, #0]
 80108bc:	9c08      	ldr	r4, [sp, #32]
 80108be:	444b      	add	r3, r9
 80108c0:	4544      	cmp	r4, r8
 80108c2:	9300      	str	r3, [sp, #0]
 80108c4:	d187      	bne.n	80107d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80108c6:	b021      	add	sp, #132	@ 0x84
 80108c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108cc:	f04f 35ff 	mov.w	r5, #4294967295
 80108d0:	e766      	b.n	80107a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80108d2:	bf00      	nop
 80108d4:	20002f54 	.word	0x20002f54
 80108d8:	08027eb8 	.word	0x08027eb8

080108dc <_ZN8touchgfx4RectaNERKS0_>:
 80108dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80108e0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80108e4:	888c      	ldrh	r4, [r1, #4]
 80108e6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80108ea:	443c      	add	r4, r7
 80108ec:	b2a4      	uxth	r4, r4
 80108ee:	fa0f f884 	sxth.w	r8, r4
 80108f2:	45c1      	cmp	r9, r8
 80108f4:	da2f      	bge.n	8010956 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80108f6:	8882      	ldrh	r2, [r0, #4]
 80108f8:	444a      	add	r2, r9
 80108fa:	b292      	uxth	r2, r2
 80108fc:	fa0f fe82 	sxth.w	lr, r2
 8010900:	4577      	cmp	r7, lr
 8010902:	da28      	bge.n	8010956 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010904:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010908:	88cb      	ldrh	r3, [r1, #6]
 801090a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801090e:	442b      	add	r3, r5
 8010910:	b21b      	sxth	r3, r3
 8010912:	429e      	cmp	r6, r3
 8010914:	da1f      	bge.n	8010956 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010916:	88c3      	ldrh	r3, [r0, #6]
 8010918:	4433      	add	r3, r6
 801091a:	b29b      	uxth	r3, r3
 801091c:	fa0f fc83 	sxth.w	ip, r3
 8010920:	4565      	cmp	r5, ip
 8010922:	da18      	bge.n	8010956 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010924:	454f      	cmp	r7, r9
 8010926:	bfb8      	it	lt
 8010928:	464f      	movlt	r7, r9
 801092a:	42b5      	cmp	r5, r6
 801092c:	bfb8      	it	lt
 801092e:	4635      	movlt	r5, r6
 8010930:	45f0      	cmp	r8, lr
 8010932:	bfd8      	it	le
 8010934:	4622      	movle	r2, r4
 8010936:	1bd2      	subs	r2, r2, r7
 8010938:	8082      	strh	r2, [r0, #4]
 801093a:	884a      	ldrh	r2, [r1, #2]
 801093c:	88c9      	ldrh	r1, [r1, #6]
 801093e:	8007      	strh	r7, [r0, #0]
 8010940:	440a      	add	r2, r1
 8010942:	b292      	uxth	r2, r2
 8010944:	b211      	sxth	r1, r2
 8010946:	458c      	cmp	ip, r1
 8010948:	bfa8      	it	ge
 801094a:	4613      	movge	r3, r2
 801094c:	1b5b      	subs	r3, r3, r5
 801094e:	80c3      	strh	r3, [r0, #6]
 8010950:	8045      	strh	r5, [r0, #2]
 8010952:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010956:	2300      	movs	r3, #0
 8010958:	8003      	strh	r3, [r0, #0]
 801095a:	8043      	strh	r3, [r0, #2]
 801095c:	8083      	strh	r3, [r0, #4]
 801095e:	80c3      	strh	r3, [r0, #6]
 8010960:	e7f7      	b.n	8010952 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010962 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010962:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010966:	2b00      	cmp	r3, #0
 8010968:	dd06      	ble.n	8010978 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801096a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801096e:	2800      	cmp	r0, #0
 8010970:	bfcc      	ite	gt
 8010972:	2000      	movgt	r0, #0
 8010974:	2001      	movle	r0, #1
 8010976:	4770      	bx	lr
 8010978:	2001      	movs	r0, #1
 801097a:	4770      	bx	lr

0801097c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801097c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010980:	2300      	movs	r3, #0
 8010982:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8010984:	8003      	strh	r3, [r0, #0]
 8010986:	4604      	mov	r4, r0
 8010988:	8043      	strh	r3, [r0, #2]
 801098a:	8083      	strh	r3, [r0, #4]
 801098c:	80c3      	strh	r3, [r0, #6]
 801098e:	2d00      	cmp	r5, #0
 8010990:	d040      	beq.n	8010a14 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010992:	1d28      	adds	r0, r5, #4
 8010994:	f7ff ffe5 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010998:	b988      	cbnz	r0, 80109be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801099a:	4620      	mov	r0, r4
 801099c:	f7ff ffe1 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 80109a0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80109a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80109a8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80109ac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80109b0:	b138      	cbz	r0, 80109c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80109b2:	8022      	strh	r2, [r4, #0]
 80109b4:	8063      	strh	r3, [r4, #2]
 80109b6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80109ba:	f8a4 c006 	strh.w	ip, [r4, #6]
 80109be:	69ad      	ldr	r5, [r5, #24]
 80109c0:	e7e5      	b.n	801098e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80109c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80109c6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80109ca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80109ce:	4290      	cmp	r0, r2
 80109d0:	4607      	mov	r7, r0
 80109d2:	bfa8      	it	ge
 80109d4:	4617      	movge	r7, r2
 80109d6:	4472      	add	r2, lr
 80109d8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80109dc:	8027      	strh	r7, [r4, #0]
 80109de:	4299      	cmp	r1, r3
 80109e0:	460e      	mov	r6, r1
 80109e2:	4440      	add	r0, r8
 80109e4:	bfa8      	it	ge
 80109e6:	461e      	movge	r6, r3
 80109e8:	4471      	add	r1, lr
 80109ea:	4463      	add	r3, ip
 80109ec:	b200      	sxth	r0, r0
 80109ee:	b212      	sxth	r2, r2
 80109f0:	b209      	sxth	r1, r1
 80109f2:	b21b      	sxth	r3, r3
 80109f4:	4290      	cmp	r0, r2
 80109f6:	bfac      	ite	ge
 80109f8:	ebc7 0200 	rsbge	r2, r7, r0
 80109fc:	ebc7 0202 	rsblt	r2, r7, r2
 8010a00:	4299      	cmp	r1, r3
 8010a02:	bfac      	ite	ge
 8010a04:	ebc6 0301 	rsbge	r3, r6, r1
 8010a08:	ebc6 0303 	rsblt	r3, r6, r3
 8010a0c:	8066      	strh	r6, [r4, #2]
 8010a0e:	80a2      	strh	r2, [r4, #4]
 8010a10:	80e3      	strh	r3, [r4, #6]
 8010a12:	e7d4      	b.n	80109be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010a14:	4620      	mov	r0, r4
 8010a16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010a1a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010a1e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010a22:	b383      	cbz	r3, 8010a86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a24:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010a26:	b374      	cbz	r4, 8010a86 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010a28:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010a2c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010a30:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010a34:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010a38:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010a3c:	b303      	cbz	r3, 8010a80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010a3e:	4668      	mov	r0, sp
 8010a40:	1d21      	adds	r1, r4, #4
 8010a42:	f8ad 5000 	strh.w	r5, [sp]
 8010a46:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010a4a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010a4e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010a52:	f7ff ff43 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 8010a56:	4668      	mov	r0, sp
 8010a58:	f7ff ff83 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010a5c:	b980      	cbnz	r0, 8010a80 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010a5e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010a62:	88a2      	ldrh	r2, [r4, #4]
 8010a64:	1a9b      	subs	r3, r3, r2
 8010a66:	f8ad 3000 	strh.w	r3, [sp]
 8010a6a:	88e2      	ldrh	r2, [r4, #6]
 8010a6c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010a70:	1a9b      	subs	r3, r3, r2
 8010a72:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010a76:	6823      	ldr	r3, [r4, #0]
 8010a78:	4669      	mov	r1, sp
 8010a7a:	689b      	ldr	r3, [r3, #8]
 8010a7c:	4620      	mov	r0, r4
 8010a7e:	4798      	blx	r3
 8010a80:	69a4      	ldr	r4, [r4, #24]
 8010a82:	2c00      	cmp	r4, #0
 8010a84:	d1d8      	bne.n	8010a38 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010a86:	b002      	add	sp, #8
 8010a88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010a8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010a8c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010a8e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010a92:	460d      	mov	r5, r1
 8010a94:	4616      	mov	r6, r2
 8010a96:	b323      	cbz	r3, 8010ae2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010a98:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010a9a:	b314      	cbz	r4, 8010ae2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010a9c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010aa0:	b1eb      	cbz	r3, 8010ade <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010aa2:	6828      	ldr	r0, [r5, #0]
 8010aa4:	6869      	ldr	r1, [r5, #4]
 8010aa6:	466b      	mov	r3, sp
 8010aa8:	c303      	stmia	r3!, {r0, r1}
 8010aaa:	4668      	mov	r0, sp
 8010aac:	1d21      	adds	r1, r4, #4
 8010aae:	f7ff ff15 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 8010ab2:	4668      	mov	r0, sp
 8010ab4:	f7ff ff55 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ab8:	b988      	cbnz	r0, 8010ade <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010aba:	f8bd 3000 	ldrh.w	r3, [sp]
 8010abe:	88a2      	ldrh	r2, [r4, #4]
 8010ac0:	1a9b      	subs	r3, r3, r2
 8010ac2:	f8ad 3000 	strh.w	r3, [sp]
 8010ac6:	88e2      	ldrh	r2, [r4, #6]
 8010ac8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010acc:	1a9b      	subs	r3, r3, r2
 8010ace:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010ad2:	6823      	ldr	r3, [r4, #0]
 8010ad4:	4632      	mov	r2, r6
 8010ad6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010ad8:	4669      	mov	r1, sp
 8010ada:	4620      	mov	r0, r4
 8010adc:	4798      	blx	r3
 8010ade:	69a4      	ldr	r4, [r4, #24]
 8010ae0:	e7db      	b.n	8010a9a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010ae2:	b002      	add	sp, #8
 8010ae4:	bd70      	pop	{r4, r5, r6, pc}

08010ae6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010ae6:	b513      	push	{r0, r1, r4, lr}
 8010ae8:	6803      	ldr	r3, [r0, #0]
 8010aea:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8010aee:	2300      	movs	r3, #0
 8010af0:	e9cd 3300 	strd	r3, r3, [sp]
 8010af4:	466b      	mov	r3, sp
 8010af6:	47a0      	blx	r4
 8010af8:	b002      	add	sp, #8
 8010afa:	bd10      	pop	{r4, pc}

08010afc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010afc:	2301      	movs	r3, #1
 8010afe:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010b02:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010b06:	4770      	bx	lr

08010b08 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010b08:	2301      	movs	r3, #1
 8010b0a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010b0e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010b12:	4770      	bx	lr

08010b14 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010b14:	6843      	ldr	r3, [r0, #4]
 8010b16:	2201      	movs	r2, #1
 8010b18:	725a      	strb	r2, [r3, #9]
 8010b1a:	6840      	ldr	r0, [r0, #4]
 8010b1c:	6803      	ldr	r3, [r0, #0]
 8010b1e:	691b      	ldr	r3, [r3, #16]
 8010b20:	4718      	bx	r3

08010b22 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010b22:	6840      	ldr	r0, [r0, #4]
 8010b24:	6803      	ldr	r3, [r0, #0]
 8010b26:	689b      	ldr	r3, [r3, #8]
 8010b28:	4718      	bx	r3

08010b2a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010b2a:	b530      	push	{r4, r5, lr}
 8010b2c:	b08b      	sub	sp, #44	@ 0x2c
 8010b2e:	6804      	ldr	r4, [r0, #0]
 8010b30:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8010b34:	9509      	str	r5, [sp, #36]	@ 0x24
 8010b36:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8010b3a:	9508      	str	r5, [sp, #32]
 8010b3c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8010b40:	9507      	str	r5, [sp, #28]
 8010b42:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8010b46:	9506      	str	r5, [sp, #24]
 8010b48:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8010b4c:	9505      	str	r5, [sp, #20]
 8010b4e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8010b52:	9504      	str	r5, [sp, #16]
 8010b54:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8010b58:	9503      	str	r5, [sp, #12]
 8010b5a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8010b5e:	9502      	str	r5, [sp, #8]
 8010b60:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8010b64:	e9cd 3500 	strd	r3, r5, [sp]
 8010b68:	4613      	mov	r3, r2
 8010b6a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8010b6c:	2200      	movs	r2, #0
 8010b6e:	47a0      	blx	r4
 8010b70:	b00b      	add	sp, #44	@ 0x2c
 8010b72:	bd30      	pop	{r4, r5, pc}

08010b74 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010b74:	4b04      	ldr	r3, [pc, #16]	@ (8010b88 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010b76:	781b      	ldrb	r3, [r3, #0]
 8010b78:	b123      	cbz	r3, 8010b84 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010b7a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8010b7e:	f080 0001 	eor.w	r0, r0, #1
 8010b82:	4770      	bx	lr
 8010b84:	2001      	movs	r0, #1
 8010b86:	4770      	bx	lr
 8010b88:	20002f52 	.word	0x20002f52

08010b8c <_ZN8touchgfx3HAL8endFrameEv>:
 8010b8c:	b510      	push	{r4, lr}
 8010b8e:	4604      	mov	r4, r0
 8010b90:	6840      	ldr	r0, [r0, #4]
 8010b92:	6803      	ldr	r3, [r0, #0]
 8010b94:	689b      	ldr	r3, [r3, #8]
 8010b96:	4798      	blx	r3
 8010b98:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8010b9c:	b113      	cbz	r3, 8010ba4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010b9e:	2301      	movs	r3, #1
 8010ba0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8010ba4:	bd10      	pop	{r4, pc}

08010ba6 <_ZN8touchgfx3HAL10initializeEv>:
 8010ba6:	b510      	push	{r4, lr}
 8010ba8:	4604      	mov	r4, r0
 8010baa:	f7fe f81b 	bl	800ebe4 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010bae:	f7fd fd61 	bl	800e674 <_ZN8touchgfx4GPIO4initEv>
 8010bb2:	6860      	ldr	r0, [r4, #4]
 8010bb4:	6803      	ldr	r3, [r0, #0]
 8010bb6:	68db      	ldr	r3, [r3, #12]
 8010bb8:	4798      	blx	r3
 8010bba:	68e0      	ldr	r0, [r4, #12]
 8010bbc:	6803      	ldr	r3, [r0, #0]
 8010bbe:	689b      	ldr	r3, [r3, #8]
 8010bc0:	4798      	blx	r3
 8010bc2:	6823      	ldr	r3, [r4, #0]
 8010bc4:	4620      	mov	r0, r4
 8010bc6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010bc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010bcc:	4718      	bx	r3

08010bce <_ZN8touchgfx3HAL9taskEntryEv>:
 8010bce:	b508      	push	{r3, lr}
 8010bd0:	6803      	ldr	r3, [r0, #0]
 8010bd2:	4604      	mov	r4, r0
 8010bd4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8010bd8:	4798      	blx	r3
 8010bda:	6823      	ldr	r3, [r4, #0]
 8010bdc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8010bde:	4620      	mov	r0, r4
 8010be0:	4798      	blx	r3
 8010be2:	f7fe f873 	bl	800eccc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8010be6:	6823      	ldr	r3, [r4, #0]
 8010be8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010bea:	e7f8      	b.n	8010bde <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08010bec <_ZN8touchgfx3HAL4tickEv>:
 8010bec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010bee:	6803      	ldr	r3, [r0, #0]
 8010bf0:	4d5b      	ldr	r5, [pc, #364]	@ (8010d60 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010bf2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8010bf6:	4604      	mov	r4, r0
 8010bf8:	4798      	blx	r3
 8010bfa:	2800      	cmp	r0, #0
 8010bfc:	f000 8095 	beq.w	8010d2a <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010c00:	2001      	movs	r0, #1
 8010c02:	f7fd fd3f 	bl	800e684 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010c06:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8010c0a:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010c0e:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8010c12:	2600      	movs	r6, #0
 8010c14:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8010c18:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8010c1c:	b133      	cbz	r3, 8010c2c <_ZN8touchgfx3HAL4tickEv+0x40>
 8010c1e:	6823      	ldr	r3, [r4, #0]
 8010c20:	4620      	mov	r0, r4
 8010c22:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8010c26:	4798      	blx	r3
 8010c28:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8010c2c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8010c30:	6862      	ldr	r2, [r4, #4]
 8010c32:	f083 0301 	eor.w	r3, r3, #1
 8010c36:	7253      	strb	r3, [r2, #9]
 8010c38:	2601      	movs	r6, #1
 8010c3a:	702e      	strb	r6, [r5, #0]
 8010c3c:	f003 f9a0 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 8010c40:	6803      	ldr	r3, [r0, #0]
 8010c42:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010c44:	4798      	blx	r3
 8010c46:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010c4a:	b90b      	cbnz	r3, 8010c50 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010c4c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8010c50:	f003 f996 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 8010c54:	6803      	ldr	r3, [r0, #0]
 8010c56:	695b      	ldr	r3, [r3, #20]
 8010c58:	4798      	blx	r3
 8010c5a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010c5c:	6803      	ldr	r3, [r0, #0]
 8010c5e:	691b      	ldr	r3, [r3, #16]
 8010c60:	4798      	blx	r3
 8010c62:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010c66:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8010c6a:	3b01      	subs	r3, #1
 8010c6c:	b2db      	uxtb	r3, r3
 8010c6e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010c72:	b10a      	cbz	r2, 8010c78 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010c74:	2b00      	cmp	r3, #0
 8010c76:	d1eb      	bne.n	8010c50 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010c78:	4a3a      	ldr	r2, [pc, #232]	@ (8010d64 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010c7a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8010c7e:	7813      	ldrb	r3, [r2, #0]
 8010c80:	3301      	adds	r3, #1
 8010c82:	b25b      	sxtb	r3, r3
 8010c84:	4299      	cmp	r1, r3
 8010c86:	7013      	strb	r3, [r2, #0]
 8010c88:	dc10      	bgt.n	8010cac <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010c8a:	68e0      	ldr	r0, [r4, #12]
 8010c8c:	2300      	movs	r3, #0
 8010c8e:	7013      	strb	r3, [r2, #0]
 8010c90:	6803      	ldr	r3, [r0, #0]
 8010c92:	aa03      	add	r2, sp, #12
 8010c94:	68db      	ldr	r3, [r3, #12]
 8010c96:	a902      	add	r1, sp, #8
 8010c98:	4798      	blx	r3
 8010c9a:	6823      	ldr	r3, [r4, #0]
 8010c9c:	2800      	cmp	r0, #0
 8010c9e:	d050      	beq.n	8010d42 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010ca0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8010ca4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010ca8:	4620      	mov	r0, r4
 8010caa:	4798      	blx	r3
 8010cac:	6960      	ldr	r0, [r4, #20]
 8010cae:	2300      	movs	r3, #0
 8010cb0:	f88d 3007 	strb.w	r3, [sp, #7]
 8010cb4:	b158      	cbz	r0, 8010cce <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010cb6:	6803      	ldr	r3, [r0, #0]
 8010cb8:	f10d 0107 	add.w	r1, sp, #7
 8010cbc:	68db      	ldr	r3, [r3, #12]
 8010cbe:	4798      	blx	r3
 8010cc0:	b128      	cbz	r0, 8010cce <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010cc2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010cc4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010cc8:	6803      	ldr	r3, [r0, #0]
 8010cca:	68db      	ldr	r3, [r3, #12]
 8010ccc:	4798      	blx	r3
 8010cce:	f104 001c 	add.w	r0, r4, #28
 8010cd2:	f014 fdf9 	bl	80258c8 <_ZN8touchgfx8Gestures4tickEv>
 8010cd6:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8010cda:	b30b      	cbz	r3, 8010d20 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010cdc:	6920      	ldr	r0, [r4, #16]
 8010cde:	6803      	ldr	r3, [r0, #0]
 8010ce0:	691b      	ldr	r3, [r3, #16]
 8010ce2:	4798      	blx	r3
 8010ce4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010ce6:	4606      	mov	r6, r0
 8010ce8:	b903      	cbnz	r3, 8010cec <_ZN8touchgfx3HAL4tickEv+0x100>
 8010cea:	6760      	str	r0, [r4, #116]	@ 0x74
 8010cec:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010cee:	4a1e      	ldr	r2, [pc, #120]	@ (8010d68 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010cf0:	1af3      	subs	r3, r6, r3
 8010cf2:	4293      	cmp	r3, r2
 8010cf4:	d914      	bls.n	8010d20 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010cf6:	6920      	ldr	r0, [r4, #16]
 8010cf8:	6803      	ldr	r3, [r0, #0]
 8010cfa:	699b      	ldr	r3, [r3, #24]
 8010cfc:	4798      	blx	r3
 8010cfe:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010d00:	2264      	movs	r2, #100	@ 0x64
 8010d02:	1af3      	subs	r3, r6, r3
 8010d04:	fbb3 f3f2 	udiv	r3, r3, r2
 8010d08:	fbb0 f0f3 	udiv	r0, r0, r3
 8010d0c:	2800      	cmp	r0, #0
 8010d0e:	dc1d      	bgt.n	8010d4c <_ZN8touchgfx3HAL4tickEv+0x160>
 8010d10:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8010d14:	6920      	ldr	r0, [r4, #16]
 8010d16:	6803      	ldr	r3, [r0, #0]
 8010d18:	2100      	movs	r1, #0
 8010d1a:	69db      	ldr	r3, [r3, #28]
 8010d1c:	4798      	blx	r3
 8010d1e:	6766      	str	r6, [r4, #116]	@ 0x74
 8010d20:	f003 f92e 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 8010d24:	6803      	ldr	r3, [r0, #0]
 8010d26:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010d28:	4798      	blx	r3
 8010d2a:	6823      	ldr	r3, [r4, #0]
 8010d2c:	4620      	mov	r0, r4
 8010d2e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8010d32:	4798      	blx	r3
 8010d34:	2001      	movs	r0, #1
 8010d36:	f7fd fcc1 	bl	800e6bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010d3a:	2300      	movs	r3, #0
 8010d3c:	702b      	strb	r3, [r5, #0]
 8010d3e:	b004      	add	sp, #16
 8010d40:	bd70      	pop	{r4, r5, r6, pc}
 8010d42:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8010d46:	4620      	mov	r0, r4
 8010d48:	4798      	blx	r3
 8010d4a:	e7af      	b.n	8010cac <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010d4c:	2863      	cmp	r0, #99	@ 0x63
 8010d4e:	bfcb      	itete	gt
 8010d50:	2300      	movgt	r3, #0
 8010d52:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8010d56:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8010d5a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8010d5e:	e7d9      	b.n	8010d14 <_ZN8touchgfx3HAL4tickEv+0x128>
 8010d60:	20002f58 	.word	0x20002f58
 8010d64:	20002f59 	.word	0x20002f59
 8010d68:	05f5e100 	.word	0x05f5e100

08010d6c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8010d6c:	b510      	push	{r4, lr}
 8010d6e:	4604      	mov	r4, r0
 8010d70:	f7fd ff60 	bl	800ec34 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8010d74:	6863      	ldr	r3, [r4, #4]
 8010d76:	2200      	movs	r2, #0
 8010d78:	729a      	strb	r2, [r3, #10]
 8010d7a:	bd10      	pop	{r4, pc}

08010d7c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8010d7c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8010d7e:	301c      	adds	r0, #28
 8010d80:	f014 bda0 	b.w	80258c4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08010d84 <_ZN8touchgfx3HAL5touchEll>:
 8010d84:	b530      	push	{r4, r5, lr}
 8010d86:	b087      	sub	sp, #28
 8010d88:	4604      	mov	r4, r0
 8010d8a:	a804      	add	r0, sp, #16
 8010d8c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8010d90:	f002 fee8 	bl	8013b64 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8010d94:	9b04      	ldr	r3, [sp, #16]
 8010d96:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010d9a:	a906      	add	r1, sp, #24
 8010d9c:	9b05      	ldr	r3, [sp, #20]
 8010d9e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8010da2:	a803      	add	r0, sp, #12
 8010da4:	f002 ff30 	bl	8013c08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8010da8:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8010dac:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8010db0:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8010db4:	f104 001c 	add.w	r0, r4, #28
 8010db8:	b189      	cbz	r1, 8010dde <_ZN8touchgfx3HAL5touchEll+0x5a>
 8010dba:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8010dbe:	9300      	str	r3, [sp, #0]
 8010dc0:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8010dc4:	4613      	mov	r3, r2
 8010dc6:	462a      	mov	r2, r5
 8010dc8:	f014 fd8c 	bl	80258e4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8010dcc:	b128      	cbz	r0, 8010dda <_ZN8touchgfx3HAL5touchEll+0x56>
 8010dce:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010dd2:	6623      	str	r3, [r4, #96]	@ 0x60
 8010dd4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8010dd8:	6663      	str	r3, [r4, #100]	@ 0x64
 8010dda:	b007      	add	sp, #28
 8010ddc:	bd30      	pop	{r4, r5, pc}
 8010dde:	f014 fdc1 	bl	8025964 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010de2:	2301      	movs	r3, #1
 8010de4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010de8:	e7f1      	b.n	8010dce <_ZN8touchgfx3HAL5touchEll+0x4a>

08010dea <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8010dea:	b510      	push	{r4, lr}
 8010dec:	2b00      	cmp	r3, #0
 8010dee:	d046      	beq.n	8010e7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010df0:	ea81 0002 	eor.w	r0, r1, r2
 8010df4:	07c4      	lsls	r4, r0, #31
 8010df6:	d508      	bpl.n	8010e0a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8010df8:	440b      	add	r3, r1
 8010dfa:	3a01      	subs	r2, #1
 8010dfc:	428b      	cmp	r3, r1
 8010dfe:	d93e      	bls.n	8010e7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e00:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010e04:	f801 0b01 	strb.w	r0, [r1], #1
 8010e08:	e7f8      	b.n	8010dfc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8010e0a:	07d0      	lsls	r0, r2, #31
 8010e0c:	bf42      	ittt	mi
 8010e0e:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8010e12:	f801 0b01 	strbmi.w	r0, [r1], #1
 8010e16:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8010e1a:	2b01      	cmp	r3, #1
 8010e1c:	d911      	bls.n	8010e42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e1e:	ea81 0402 	eor.w	r4, r1, r2
 8010e22:	07a4      	lsls	r4, r4, #30
 8010e24:	4610      	mov	r0, r2
 8010e26:	d022      	beq.n	8010e6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8010e28:	f023 0401 	bic.w	r4, r3, #1
 8010e2c:	440c      	add	r4, r1
 8010e2e:	428c      	cmp	r4, r1
 8010e30:	4602      	mov	r2, r0
 8010e32:	d904      	bls.n	8010e3e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8010e34:	8812      	ldrh	r2, [r2, #0]
 8010e36:	f821 2b02 	strh.w	r2, [r1], #2
 8010e3a:	3002      	adds	r0, #2
 8010e3c:	e7f7      	b.n	8010e2e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8010e3e:	f003 0301 	and.w	r3, r3, #1
 8010e42:	f023 0003 	bic.w	r0, r3, #3
 8010e46:	4408      	add	r0, r1
 8010e48:	4288      	cmp	r0, r1
 8010e4a:	4614      	mov	r4, r2
 8010e4c:	d904      	bls.n	8010e58 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8010e4e:	6824      	ldr	r4, [r4, #0]
 8010e50:	f841 4b04 	str.w	r4, [r1], #4
 8010e54:	3204      	adds	r2, #4
 8010e56:	e7f7      	b.n	8010e48 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8010e58:	f003 0303 	and.w	r3, r3, #3
 8010e5c:	440b      	add	r3, r1
 8010e5e:	3a01      	subs	r2, #1
 8010e60:	428b      	cmp	r3, r1
 8010e62:	d90c      	bls.n	8010e7e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8010e64:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8010e68:	f801 0b01 	strb.w	r0, [r1], #1
 8010e6c:	e7f8      	b.n	8010e60 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8010e6e:	0790      	lsls	r0, r2, #30
 8010e70:	d0e7      	beq.n	8010e42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e72:	f832 0b02 	ldrh.w	r0, [r2], #2
 8010e76:	f821 0b02 	strh.w	r0, [r1], #2
 8010e7a:	3b02      	subs	r3, #2
 8010e7c:	e7e1      	b.n	8010e42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010e7e:	2001      	movs	r0, #1
 8010e80:	bd10      	pop	{r4, pc}

08010e82 <_ZN8touchgfx3HAL7noTouchEv>:
 8010e82:	b510      	push	{r4, lr}
 8010e84:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8010e88:	4604      	mov	r4, r0
 8010e8a:	b153      	cbz	r3, 8010ea2 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010e8c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8010e90:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8010e94:	2101      	movs	r1, #1
 8010e96:	301c      	adds	r0, #28
 8010e98:	f014 fd64 	bl	8025964 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010e9c:	2300      	movs	r3, #0
 8010e9e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8010ea2:	bd10      	pop	{r4, pc}

08010ea4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010ea4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010ea8:	b085      	sub	sp, #20
 8010eaa:	ad04      	add	r5, sp, #16
 8010eac:	4604      	mov	r4, r0
 8010eae:	2000      	movs	r0, #0
 8010eb0:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010eb4:	69a0      	ldr	r0, [r4, #24]
 8010eb6:	6806      	ldr	r6, [r0, #0]
 8010eb8:	9501      	str	r5, [sp, #4]
 8010eba:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8010ebe:	9500      	str	r5, [sp, #0]
 8010ec0:	6835      	ldr	r5, [r6, #0]
 8010ec2:	4699      	mov	r9, r3
 8010ec4:	460f      	mov	r7, r1
 8010ec6:	4690      	mov	r8, r2
 8010ec8:	47a8      	blx	r5
 8010eca:	4d10      	ldr	r5, [pc, #64]	@ (8010f0c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010ecc:	4606      	mov	r6, r0
 8010ece:	f8a5 9000 	strh.w	r9, [r5]
 8010ed2:	f7f7 fb07 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 8010ed6:	6803      	ldr	r3, [r0, #0]
 8010ed8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010eda:	4798      	blx	r3
 8010edc:	b128      	cbz	r0, 8010eea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010ede:	2801      	cmp	r0, #1
 8010ee0:	d00b      	beq.n	8010efa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010ee2:	4630      	mov	r0, r6
 8010ee4:	b005      	add	sp, #20
 8010ee6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010eea:	882b      	ldrh	r3, [r5, #0]
 8010eec:	fb08 7203 	mla	r2, r8, r3, r7
 8010ef0:	9b03      	ldr	r3, [sp, #12]
 8010ef2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8010ef6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8010ef8:	e7f3      	b.n	8010ee2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010efa:	882a      	ldrh	r2, [r5, #0]
 8010efc:	9b03      	ldr	r3, [sp, #12]
 8010efe:	fb08 7202 	mla	r2, r8, r2, r7
 8010f02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010f06:	1a9a      	subs	r2, r3, r2
 8010f08:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8010f0a:	e7ea      	b.n	8010ee2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010f0c:	20002f4e 	.word	0x20002f4e

08010f10 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010f10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010f12:	b08b      	sub	sp, #44	@ 0x2c
 8010f14:	4617      	mov	r7, r2
 8010f16:	4604      	mov	r4, r0
 8010f18:	460e      	mov	r6, r1
 8010f1a:	461d      	mov	r5, r3
 8010f1c:	f7f7 fae2 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 8010f20:	6803      	ldr	r3, [r0, #0]
 8010f22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f24:	4798      	blx	r3
 8010f26:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8010f2a:	9007      	str	r0, [sp, #28]
 8010f2c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010f30:	4b0d      	ldr	r3, [pc, #52]	@ (8010f68 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8010f32:	6822      	ldr	r2, [r4, #0]
 8010f34:	881b      	ldrh	r3, [r3, #0]
 8010f36:	9306      	str	r3, [sp, #24]
 8010f38:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8010f3c:	9305      	str	r3, [sp, #20]
 8010f3e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8010f42:	9304      	str	r3, [sp, #16]
 8010f44:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010f48:	9303      	str	r3, [sp, #12]
 8010f4a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8010f4e:	9302      	str	r3, [sp, #8]
 8010f50:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8010f54:	e9cd 5300 	strd	r5, r3, [sp]
 8010f58:	4631      	mov	r1, r6
 8010f5a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8010f5c:	463b      	mov	r3, r7
 8010f5e:	2200      	movs	r2, #0
 8010f60:	4620      	mov	r0, r4
 8010f62:	47a8      	blx	r5
 8010f64:	b00b      	add	sp, #44	@ 0x2c
 8010f66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f68:	20002f4e 	.word	0x20002f4e

08010f6c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8010f6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010f70:	4698      	mov	r8, r3
 8010f72:	6803      	ldr	r3, [r0, #0]
 8010f74:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8010f76:	4b15      	ldr	r3, [pc, #84]	@ (8010fcc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8010f78:	b08b      	sub	sp, #44	@ 0x2c
 8010f7a:	4617      	mov	r7, r2
 8010f7c:	f8b3 9000 	ldrh.w	r9, [r3]
 8010f80:	460e      	mov	r6, r1
 8010f82:	4604      	mov	r4, r0
 8010f84:	f7f7 faae 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 8010f88:	6803      	ldr	r3, [r0, #0]
 8010f8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f8c:	4798      	blx	r3
 8010f8e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8010f92:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8010f96:	2302      	movs	r3, #2
 8010f98:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010f9c:	2301      	movs	r3, #1
 8010f9e:	9305      	str	r3, [sp, #20]
 8010fa0:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8010fa4:	9304      	str	r3, [sp, #16]
 8010fa6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8010faa:	9303      	str	r3, [sp, #12]
 8010fac:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8010fb0:	9302      	str	r3, [sp, #8]
 8010fb2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8010fb6:	2200      	movs	r2, #0
 8010fb8:	e9cd 8300 	strd	r8, r3, [sp]
 8010fbc:	4631      	mov	r1, r6
 8010fbe:	463b      	mov	r3, r7
 8010fc0:	4620      	mov	r0, r4
 8010fc2:	47a8      	blx	r5
 8010fc4:	b00b      	add	sp, #44	@ 0x2c
 8010fc6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010fca:	bf00      	nop
 8010fcc:	20002f4e 	.word	0x20002f4e

08010fd0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010fd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010fd4:	4698      	mov	r8, r3
 8010fd6:	6803      	ldr	r3, [r0, #0]
 8010fd8:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 8010fda:	4b11      	ldr	r3, [pc, #68]	@ (8011020 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010fdc:	b087      	sub	sp, #28
 8010fde:	f8b3 9000 	ldrh.w	r9, [r3]
 8010fe2:	460e      	mov	r6, r1
 8010fe4:	4617      	mov	r7, r2
 8010fe6:	4604      	mov	r4, r0
 8010fe8:	f7f7 fa7c 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 8010fec:	6803      	ldr	r3, [r0, #0]
 8010fee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010ff0:	4798      	blx	r3
 8010ff2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8010ff6:	f8cd 900c 	str.w	r9, [sp, #12]
 8010ffa:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010ffe:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8011002:	9302      	str	r3, [sp, #8]
 8011004:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8011008:	9301      	str	r3, [sp, #4]
 801100a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801100e:	9300      	str	r3, [sp, #0]
 8011010:	463a      	mov	r2, r7
 8011012:	4643      	mov	r3, r8
 8011014:	4631      	mov	r1, r6
 8011016:	4620      	mov	r0, r4
 8011018:	47a8      	blx	r5
 801101a:	b007      	add	sp, #28
 801101c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011020:	20002f4e 	.word	0x20002f4e

08011024 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011028:	4604      	mov	r4, r0
 801102a:	b08f      	sub	sp, #60	@ 0x3c
 801102c:	4610      	mov	r0, r2
 801102e:	460d      	mov	r5, r1
 8011030:	4691      	mov	r9, r2
 8011032:	461e      	mov	r6, r3
 8011034:	f006 f996 	bl	8017364 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011038:	2800      	cmp	r0, #0
 801103a:	f000 809d 	beq.w	8011178 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 801103e:	6823      	ldr	r3, [r4, #0]
 8011040:	f8df b198 	ldr.w	fp, [pc, #408]	@ 80111dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011044:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011046:	f8df a198 	ldr.w	sl, [pc, #408]	@ 80111e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801104a:	4f61      	ldr	r7, [pc, #388]	@ (80111d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801104c:	4620      	mov	r0, r4
 801104e:	4798      	blx	r3
 8011050:	6823      	ldr	r3, [r4, #0]
 8011052:	4620      	mov	r0, r4
 8011054:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011056:	4798      	blx	r3
 8011058:	f8bb 3000 	ldrh.w	r3, [fp]
 801105c:	9301      	str	r3, [sp, #4]
 801105e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8011062:	f8ba 3000 	ldrh.w	r3, [sl]
 8011066:	9302      	str	r3, [sp, #8]
 8011068:	883b      	ldrh	r3, [r7, #0]
 801106a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801106e:	9303      	str	r3, [sp, #12]
 8011070:	4b58      	ldr	r3, [pc, #352]	@ (80111d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011072:	9305      	str	r3, [sp, #20]
 8011074:	881a      	ldrh	r2, [r3, #0]
 8011076:	9204      	str	r2, [sp, #16]
 8011078:	4640      	mov	r0, r8
 801107a:	f006 fa07 	bl	801748c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801107e:	8038      	strh	r0, [r7, #0]
 8011080:	4640      	mov	r0, r8
 8011082:	f006 fa37 	bl	80174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011086:	9b05      	ldr	r3, [sp, #20]
 8011088:	b280      	uxth	r0, r0
 801108a:	8018      	strh	r0, [r3, #0]
 801108c:	4b52      	ldr	r3, [pc, #328]	@ (80111d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801108e:	781b      	ldrb	r3, [r3, #0]
 8011090:	2b00      	cmp	r3, #0
 8011092:	d174      	bne.n	801117e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011094:	883b      	ldrh	r3, [r7, #0]
 8011096:	f8ab 3000 	strh.w	r3, [fp]
 801109a:	f8aa 0000 	strh.w	r0, [sl]
 801109e:	4648      	mov	r0, r9
 80110a0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 80110a4:	f006 f95e 	bl	8017364 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80110a8:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 80110ac:	2200      	movs	r2, #0
 80110ae:	4611      	mov	r1, r2
 80110b0:	4628      	mov	r0, r5
 80110b2:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 80110b6:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 80110ba:	f7f8 fc70 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
 80110be:	2301      	movs	r3, #1
 80110c0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 80110c4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 80110c8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 80110cc:	2b00      	cmp	r3, #0
 80110ce:	dd5c      	ble.n	801118a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80110d0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 80110d4:	2b00      	cmp	r3, #0
 80110d6:	dd58      	ble.n	801118a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 80110d8:	462a      	mov	r2, r5
 80110da:	ab0a      	add	r3, sp, #40	@ 0x28
 80110dc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80110e0:	6851      	ldr	r1, [r2, #4]
 80110e2:	c303      	stmia	r3!, {r0, r1}
 80110e4:	4631      	mov	r1, r6
 80110e6:	a80a      	add	r0, sp, #40	@ 0x28
 80110e8:	f7ff fbf8 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 80110ec:	4b38      	ldr	r3, [pc, #224]	@ (80111d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80110ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80110f2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80110f6:	2100      	movs	r1, #0
 80110f8:	aa0a      	add	r2, sp, #40	@ 0x28
 80110fa:	4b36      	ldr	r3, [pc, #216]	@ (80111d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80110fc:	910c      	str	r1, [sp, #48]	@ 0x30
 80110fe:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011102:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011106:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801110a:	ab08      	add	r3, sp, #32
 801110c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011110:	4618      	mov	r0, r3
 8011112:	a90c      	add	r1, sp, #48	@ 0x30
 8011114:	f7ff fbe2 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 8011118:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 801111a:	2b00      	cmp	r3, #0
 801111c:	d13c      	bne.n	8011198 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 801111e:	2000      	movs	r0, #0
 8011120:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8011124:	2600      	movs	r6, #0
 8011126:	682a      	ldr	r2, [r5, #0]
 8011128:	696b      	ldr	r3, [r5, #20]
 801112a:	616e      	str	r6, [r5, #20]
 801112c:	9305      	str	r3, [sp, #20]
 801112e:	6892      	ldr	r2, [r2, #8]
 8011130:	a908      	add	r1, sp, #32
 8011132:	4628      	mov	r0, r5
 8011134:	4790      	blx	r2
 8011136:	9b05      	ldr	r3, [sp, #20]
 8011138:	616b      	str	r3, [r5, #20]
 801113a:	4652      	mov	r2, sl
 801113c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8011140:	4649      	mov	r1, r9
 8011142:	4628      	mov	r0, r5
 8011144:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8011148:	f7f8 fc29 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
 801114c:	4b23      	ldr	r3, [pc, #140]	@ (80111dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 801114e:	9a01      	ldr	r2, [sp, #4]
 8011150:	801a      	strh	r2, [r3, #0]
 8011152:	4b23      	ldr	r3, [pc, #140]	@ (80111e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011154:	9a02      	ldr	r2, [sp, #8]
 8011156:	801a      	strh	r2, [r3, #0]
 8011158:	4b1d      	ldr	r3, [pc, #116]	@ (80111d0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801115a:	9a03      	ldr	r2, [sp, #12]
 801115c:	801a      	strh	r2, [r3, #0]
 801115e:	4b1d      	ldr	r3, [pc, #116]	@ (80111d4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011160:	9a04      	ldr	r2, [sp, #16]
 8011162:	801a      	strh	r2, [r3, #0]
 8011164:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8011168:	6823      	ldr	r3, [r4, #0]
 801116a:	4620      	mov	r0, r4
 801116c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801116e:	4798      	blx	r3
 8011170:	6823      	ldr	r3, [r4, #0]
 8011172:	4620      	mov	r0, r4
 8011174:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011176:	4798      	blx	r3
 8011178:	b00f      	add	sp, #60	@ 0x3c
 801117a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801117e:	883b      	ldrh	r3, [r7, #0]
 8011180:	f8ab 0000 	strh.w	r0, [fp]
 8011184:	f8aa 3000 	strh.w	r3, [sl]
 8011188:	e789      	b.n	801109e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801118a:	462a      	mov	r2, r5
 801118c:	ab0a      	add	r3, sp, #40	@ 0x28
 801118e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011192:	6851      	ldr	r1, [r2, #4]
 8011194:	c303      	stmia	r3!, {r0, r1}
 8011196:	e7a9      	b.n	80110ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011198:	a807      	add	r0, sp, #28
 801119a:	f006 faed 	bl	8017778 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801119e:	4606      	mov	r6, r0
 80111a0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 80111a2:	6803      	ldr	r3, [r0, #0]
 80111a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80111a6:	4798      	blx	r3
 80111a8:	4286      	cmp	r6, r0
 80111aa:	d1b8      	bne.n	801111e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 80111ac:	f7f7 f99a 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 80111b0:	6803      	ldr	r3, [r0, #0]
 80111b2:	4606      	mov	r6, r0
 80111b4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80111b6:	9305      	str	r3, [sp, #20]
 80111b8:	a807      	add	r0, sp, #28
 80111ba:	f006 fadd 	bl	8017778 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80111be:	9b05      	ldr	r3, [sp, #20]
 80111c0:	4601      	mov	r1, r0
 80111c2:	4630      	mov	r0, r6
 80111c4:	4798      	blx	r3
 80111c6:	f080 0001 	eor.w	r0, r0, #1
 80111ca:	b2c0      	uxtb	r0, r0
 80111cc:	e7a8      	b.n	8011120 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80111ce:	bf00      	nop
 80111d0:	20002f48 	.word	0x20002f48
 80111d4:	20002f4a 	.word	0x20002f4a
 80111d8:	20002f4c 	.word	0x20002f4c
 80111dc:	20002f4e 	.word	0x20002f4e
 80111e0:	20002f50 	.word	0x20002f50

080111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80111e4:	b510      	push	{r4, lr}
 80111e6:	4b07      	ldr	r3, [pc, #28]	@ (8011204 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80111e8:	781b      	ldrb	r3, [r3, #0]
 80111ea:	4604      	mov	r4, r0
 80111ec:	b13b      	cbz	r3, 80111fe <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80111ee:	6803      	ldr	r3, [r0, #0]
 80111f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80111f2:	4798      	blx	r3
 80111f4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80111f6:	4283      	cmp	r3, r0
 80111f8:	d101      	bne.n	80111fe <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80111fa:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80111fc:	bd10      	pop	{r4, pc}
 80111fe:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8011200:	e7fc      	b.n	80111fc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011202:	bf00      	nop
 8011204:	20002f52 	.word	0x20002f52

08011208 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8011208:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801120c:	b08a      	sub	sp, #40	@ 0x28
 801120e:	461d      	mov	r5, r3
 8011210:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8011214:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011218:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801121c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011220:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011224:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011228:	2400      	movs	r4, #0
 801122a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801122e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8011232:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011236:	4690      	mov	r8, r2
 8011238:	4607      	mov	r7, r0
 801123a:	9404      	str	r4, [sp, #16]
 801123c:	f88d 4020 	strb.w	r4, [sp, #32]
 8011240:	f7ff ffd0 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011244:	fb06 8505 	mla	r5, r6, r5, r8
 8011248:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801124c:	6878      	ldr	r0, [r7, #4]
 801124e:	9505      	str	r5, [sp, #20]
 8011250:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011254:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011258:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 801125c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8011260:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8011264:	6803      	ldr	r3, [r0, #0]
 8011266:	a901      	add	r1, sp, #4
 8011268:	685b      	ldr	r3, [r3, #4]
 801126a:	4798      	blx	r3
 801126c:	b00a      	add	sp, #40	@ 0x28
 801126e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011272 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011272:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011276:	b08b      	sub	sp, #44	@ 0x2c
 8011278:	2400      	movs	r4, #0
 801127a:	461d      	mov	r5, r3
 801127c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8011280:	4688      	mov	r8, r1
 8011282:	4691      	mov	r9, r2
 8011284:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8011288:	9404      	str	r4, [sp, #16]
 801128a:	4607      	mov	r7, r0
 801128c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011290:	f7ff ffa8 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011294:	fb06 9505 	mla	r5, r6, r5, r9
 8011298:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801129c:	f8ad 3018 	strh.w	r3, [sp, #24]
 80112a0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80112a4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80112a8:	6878      	ldr	r0, [r7, #4]
 80112aa:	9505      	str	r5, [sp, #20]
 80112ac:	f8ad 301a 	strh.w	r3, [sp, #26]
 80112b0:	f8ad 401c 	strh.w	r4, [sp, #28]
 80112b4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80112b8:	f8cd 8010 	str.w	r8, [sp, #16]
 80112bc:	f8ad 4020 	strh.w	r4, [sp, #32]
 80112c0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80112c4:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80112c8:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 80112cc:	6803      	ldr	r3, [r0, #0]
 80112ce:	a901      	add	r1, sp, #4
 80112d0:	685b      	ldr	r3, [r3, #4]
 80112d2:	4798      	blx	r3
 80112d4:	b00b      	add	sp, #44	@ 0x2c
 80112d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080112dc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80112dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80112e0:	b08a      	sub	sp, #40	@ 0x28
 80112e2:	4698      	mov	r8, r3
 80112e4:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 80112e8:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80112ec:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 80112f0:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 80112f4:	2300      	movs	r3, #0
 80112f6:	2d0b      	cmp	r5, #11
 80112f8:	4606      	mov	r6, r0
 80112fa:	9304      	str	r3, [sp, #16]
 80112fc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8011300:	d138      	bne.n	8011374 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8011302:	2380      	movs	r3, #128	@ 0x80
 8011304:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8011308:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801130c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011310:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011314:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011318:	f88d 0020 	strb.w	r0, [sp, #32]
 801131c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011320:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011324:	4630      	mov	r0, r6
 8011326:	9203      	str	r2, [sp, #12]
 8011328:	f7ff ff5c 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801132c:	2c0b      	cmp	r4, #11
 801132e:	bf98      	it	ls
 8011330:	4b1b      	ldrls	r3, [pc, #108]	@ (80113a0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8011332:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8011336:	bf98      	it	ls
 8011338:	5d19      	ldrbls	r1, [r3, r4]
 801133a:	f8ad 701e 	strh.w	r7, [sp, #30]
 801133e:	bf88      	it	hi
 8011340:	2100      	movhi	r1, #0
 8011342:	fb02 8307 	mla	r3, r2, r7, r8
 8011346:	10c9      	asrs	r1, r1, #3
 8011348:	fb01 0003 	mla	r0, r1, r3, r0
 801134c:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8011350:	9005      	str	r0, [sp, #20]
 8011352:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8011356:	6870      	ldr	r0, [r6, #4]
 8011358:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 801135c:	2300      	movs	r3, #0
 801135e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011362:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8011366:	6803      	ldr	r3, [r0, #0]
 8011368:	a901      	add	r1, sp, #4
 801136a:	685b      	ldr	r3, [r3, #4]
 801136c:	4798      	blx	r3
 801136e:	b00a      	add	sp, #40	@ 0x28
 8011370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011374:	2d02      	cmp	r5, #2
 8011376:	d109      	bne.n	801138c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011378:	28ff      	cmp	r0, #255	@ 0xff
 801137a:	d105      	bne.n	8011388 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 801137c:	f1bc 0f00 	cmp.w	ip, #0
 8011380:	bf14      	ite	ne
 8011382:	2340      	movne	r3, #64	@ 0x40
 8011384:	2320      	moveq	r3, #32
 8011386:	e7bd      	b.n	8011304 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011388:	2340      	movs	r3, #64	@ 0x40
 801138a:	e7bb      	b.n	8011304 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801138c:	28ff      	cmp	r0, #255	@ 0xff
 801138e:	d105      	bne.n	801139c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011390:	f1bc 0f00 	cmp.w	ip, #0
 8011394:	bf14      	ite	ne
 8011396:	2304      	movne	r3, #4
 8011398:	2301      	moveq	r3, #1
 801139a:	e7b3      	b.n	8011304 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801139c:	2304      	movs	r3, #4
 801139e:	e7b1      	b.n	8011304 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 80113a0:	08028e64 	.word	0x08028e64

080113a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 80113a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113a8:	b08b      	sub	sp, #44	@ 0x2c
 80113aa:	461d      	mov	r5, r3
 80113ac:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 80113b0:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 80113b4:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 80113b8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80113bc:	bf14      	ite	ne
 80113be:	2308      	movne	r3, #8
 80113c0:	2302      	moveq	r3, #2
 80113c2:	2400      	movs	r4, #0
 80113c4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80113c8:	4688      	mov	r8, r1
 80113ca:	4693      	mov	fp, r2
 80113cc:	9404      	str	r4, [sp, #16]
 80113ce:	4607      	mov	r7, r0
 80113d0:	f7ff ff08 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80113d4:	2e0b      	cmp	r6, #11
 80113d6:	bf98      	it	ls
 80113d8:	4b15      	ldrls	r3, [pc, #84]	@ (8011430 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80113da:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80113de:	bf98      	it	ls
 80113e0:	5d9c      	ldrbls	r4, [r3, r6]
 80113e2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80113e6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80113ea:	fb05 b50a 	mla	r5, r5, sl, fp
 80113ee:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80113f2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80113f6:	10e4      	asrs	r4, r4, #3
 80113f8:	fb04 0405 	mla	r4, r4, r5, r0
 80113fc:	2300      	movs	r3, #0
 80113fe:	6878      	ldr	r0, [r7, #4]
 8011400:	9405      	str	r4, [sp, #20]
 8011402:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011406:	f8ad a01e 	strh.w	sl, [sp, #30]
 801140a:	f8cd 8010 	str.w	r8, [sp, #16]
 801140e:	f88d 9020 	strb.w	r9, [sp, #32]
 8011412:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8011416:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801141a:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 801141e:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 8011422:	6803      	ldr	r3, [r0, #0]
 8011424:	a901      	add	r1, sp, #4
 8011426:	685b      	ldr	r3, [r3, #4]
 8011428:	4798      	blx	r3
 801142a:	b00b      	add	sp, #44	@ 0x2c
 801142c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011430:	08028e64 	.word	0x08028e64

08011434 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8011434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011438:	461e      	mov	r6, r3
 801143a:	4b0a      	ldr	r3, [pc, #40]	@ (8011464 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 801143c:	460f      	mov	r7, r1
 801143e:	881d      	ldrh	r5, [r3, #0]
 8011440:	4690      	mov	r8, r2
 8011442:	f7f7 f84f 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 8011446:	6803      	ldr	r3, [r0, #0]
 8011448:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801144a:	4798      	blx	r3
 801144c:	280b      	cmp	r0, #11
 801144e:	bf9a      	itte	ls
 8011450:	4b05      	ldrls	r3, [pc, #20]	@ (8011468 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011452:	5c1c      	ldrbls	r4, [r3, r0]
 8011454:	2400      	movhi	r4, #0
 8011456:	fb08 7005 	mla	r0, r8, r5, r7
 801145a:	10e4      	asrs	r4, r4, #3
 801145c:	fb04 6000 	mla	r0, r4, r0, r6
 8011460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011464:	20002f4e 	.word	0x20002f4e
 8011468:	08028e64 	.word	0x08028e64

0801146c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 801146c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801146e:	b08b      	sub	sp, #44	@ 0x2c
 8011470:	461f      	mov	r7, r3
 8011472:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8011476:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801147a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801147e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011482:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011486:	f8ad 301a 	strh.w	r3, [sp, #26]
 801148a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801148e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011492:	2500      	movs	r5, #0
 8011494:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8011498:	f88d 3020 	strb.w	r3, [sp, #32]
 801149c:	4604      	mov	r4, r0
 801149e:	4616      	mov	r6, r2
 80114a0:	9504      	str	r5, [sp, #16]
 80114a2:	f7ff fe9f 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80114a6:	463a      	mov	r2, r7
 80114a8:	4631      	mov	r1, r6
 80114aa:	4603      	mov	r3, r0
 80114ac:	4620      	mov	r0, r4
 80114ae:	f7ff ffc1 	bl	8011434 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80114b2:	4b0e      	ldr	r3, [pc, #56]	@ (80114ec <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80114b4:	9005      	str	r0, [sp, #20]
 80114b6:	881b      	ldrh	r3, [r3, #0]
 80114b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80114bc:	f7f7 f812 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 80114c0:	6803      	ldr	r3, [r0, #0]
 80114c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80114c4:	4798      	blx	r3
 80114c6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80114c8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 80114cc:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80114d0:	9304      	str	r3, [sp, #16]
 80114d2:	6860      	ldr	r0, [r4, #4]
 80114d4:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 80114d8:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80114dc:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 80114e0:	6803      	ldr	r3, [r0, #0]
 80114e2:	a901      	add	r1, sp, #4
 80114e4:	685b      	ldr	r3, [r3, #4]
 80114e6:	4798      	blx	r3
 80114e8:	b00b      	add	sp, #44	@ 0x2c
 80114ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80114ec:	20002f4e 	.word	0x20002f4e

080114f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80114f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80114f2:	b08d      	sub	sp, #52	@ 0x34
 80114f4:	466b      	mov	r3, sp
 80114f6:	e883 0006 	stmia.w	r3, {r1, r2}
 80114fa:	2300      	movs	r3, #0
 80114fc:	9306      	str	r3, [sp, #24]
 80114fe:	6803      	ldr	r3, [r0, #0]
 8011500:	f8bd 6000 	ldrh.w	r6, [sp]
 8011504:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011506:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801150a:	2501      	movs	r5, #1
 801150c:	9503      	str	r5, [sp, #12]
 801150e:	4604      	mov	r4, r0
 8011510:	4798      	blx	r3
 8011512:	463a      	mov	r2, r7
 8011514:	4631      	mov	r1, r6
 8011516:	4603      	mov	r3, r0
 8011518:	4620      	mov	r0, r4
 801151a:	f7ff ff8b 	bl	8011434 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801151e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011520:	9307      	str	r3, [sp, #28]
 8011522:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8011526:	f8ad 3020 	strh.w	r3, [sp, #32]
 801152a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801152e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8011532:	4b0f      	ldr	r3, [pc, #60]	@ (8011570 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8011534:	9004      	str	r0, [sp, #16]
 8011536:	881b      	ldrh	r3, [r3, #0]
 8011538:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 801153c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8011540:	f7f6 ffd0 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 8011544:	6803      	ldr	r3, [r0, #0]
 8011546:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011548:	4798      	blx	r3
 801154a:	23ff      	movs	r3, #255	@ 0xff
 801154c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8011550:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8011554:	6860      	ldr	r0, [r4, #4]
 8011556:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 801155a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 801155e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8011562:	6803      	ldr	r3, [r0, #0]
 8011564:	a903      	add	r1, sp, #12
 8011566:	685b      	ldr	r3, [r3, #4]
 8011568:	4798      	blx	r3
 801156a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 801156c:	b00d      	add	sp, #52	@ 0x34
 801156e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011570:	20002f4e 	.word	0x20002f4e

08011574 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011574:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011578:	b08c      	sub	sp, #48	@ 0x30
 801157a:	461e      	mov	r6, r3
 801157c:	466d      	mov	r5, sp
 801157e:	2300      	movs	r3, #0
 8011580:	e885 0006 	stmia.w	r5, {r1, r2}
 8011584:	9306      	str	r3, [sp, #24]
 8011586:	6803      	ldr	r3, [r0, #0]
 8011588:	f8bd 7000 	ldrh.w	r7, [sp]
 801158c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801158e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011592:	2501      	movs	r5, #1
 8011594:	9503      	str	r5, [sp, #12]
 8011596:	4604      	mov	r4, r0
 8011598:	4798      	blx	r3
 801159a:	4642      	mov	r2, r8
 801159c:	4639      	mov	r1, r7
 801159e:	4603      	mov	r3, r0
 80115a0:	4620      	mov	r0, r4
 80115a2:	f7ff ff47 	bl	8011434 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80115a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80115aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80115ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80115b2:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80115b6:	4b11      	ldr	r3, [pc, #68]	@ (80115fc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80115b8:	9004      	str	r0, [sp, #16]
 80115ba:	881b      	ldrh	r3, [r3, #0]
 80115bc:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80115c0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80115c2:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80115c6:	9607      	str	r6, [sp, #28]
 80115c8:	f7f6 ff8c 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 80115cc:	6803      	ldr	r3, [r0, #0]
 80115ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80115d0:	4798      	blx	r3
 80115d2:	23ff      	movs	r3, #255	@ 0xff
 80115d4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80115d8:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80115dc:	6860      	ldr	r0, [r4, #4]
 80115de:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80115e2:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80115e6:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80115ea:	6803      	ldr	r3, [r0, #0]
 80115ec:	a903      	add	r1, sp, #12
 80115ee:	685b      	ldr	r3, [r3, #4]
 80115f0:	4798      	blx	r3
 80115f2:	4630      	mov	r0, r6
 80115f4:	b00c      	add	sp, #48	@ 0x30
 80115f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115fa:	bf00      	nop
 80115fc:	20002f4e 	.word	0x20002f4e

08011600 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8011600:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011602:	b085      	sub	sp, #20
 8011604:	ac02      	add	r4, sp, #8
 8011606:	e884 0006 	stmia.w	r4, {r1, r2}
 801160a:	4605      	mov	r5, r0
 801160c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8011610:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8011614:	f7ff fde6 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011618:	463a      	mov	r2, r7
 801161a:	4603      	mov	r3, r0
 801161c:	4631      	mov	r1, r6
 801161e:	4628      	mov	r0, r5
 8011620:	f7ff ff08 	bl	8011434 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011624:	4a05      	ldr	r2, [pc, #20]	@ (801163c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 8011626:	682b      	ldr	r3, [r5, #0]
 8011628:	8812      	ldrh	r2, [r2, #0]
 801162a:	9200      	str	r2, [sp, #0]
 801162c:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801162e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8011632:	4603      	mov	r3, r0
 8011634:	4628      	mov	r0, r5
 8011636:	47b0      	blx	r6
 8011638:	b005      	add	sp, #20
 801163a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801163c:	20002f4e 	.word	0x20002f4e

08011640 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011640:	b570      	push	{r4, r5, r6, lr}
 8011642:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 8011646:	4604      	mov	r4, r0
 8011648:	b19b      	cbz	r3, 8011672 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801164a:	2002      	movs	r0, #2
 801164c:	f7fd f852 	bl	800e6f4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011650:	2300      	movs	r3, #0
 8011652:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8011656:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 801165a:	6823      	ldr	r3, [r4, #0]
 801165c:	4620      	mov	r0, r4
 801165e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 8011662:	f7ff fdbf 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011666:	462b      	mov	r3, r5
 8011668:	4601      	mov	r1, r0
 801166a:	4620      	mov	r0, r4
 801166c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011670:	4718      	bx	r3
 8011672:	bd70      	pop	{r4, r5, r6, pc}

08011674 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011674:	b538      	push	{r3, r4, r5, lr}
 8011676:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 801167a:	428b      	cmp	r3, r1
 801167c:	4604      	mov	r4, r0
 801167e:	460d      	mov	r5, r1
 8011680:	d006      	beq.n	8011690 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011682:	6803      	ldr	r3, [r0, #0]
 8011684:	b929      	cbnz	r1, 8011692 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011686:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 801168a:	4798      	blx	r3
 801168c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8011690:	bd38      	pop	{r3, r4, r5, pc}
 8011692:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8011696:	e7f8      	b.n	801168a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011698 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011698:	b510      	push	{r4, lr}
 801169a:	4b0d      	ldr	r3, [pc, #52]	@ (80116d0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 801169c:	781b      	ldrb	r3, [r3, #0]
 801169e:	4604      	mov	r4, r0
 80116a0:	b95b      	cbnz	r3, 80116ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80116a2:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 80116a6:	2b02      	cmp	r3, #2
 80116a8:	d007      	beq.n	80116ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80116aa:	6840      	ldr	r0, [r0, #4]
 80116ac:	f000 f90e 	bl	80118cc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80116b0:	b118      	cbz	r0, 80116ba <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80116b2:	6862      	ldr	r2, [r4, #4]
 80116b4:	7a53      	ldrb	r3, [r2, #9]
 80116b6:	2b00      	cmp	r3, #0
 80116b8:	d0fc      	beq.n	80116b4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80116ba:	f7fd faa5 	bl	800ec08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80116be:	4620      	mov	r0, r4
 80116c0:	2100      	movs	r1, #0
 80116c2:	f7ff ffd7 	bl	8011674 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80116c6:	4620      	mov	r0, r4
 80116c8:	f7ff fd8c 	bl	80111e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80116cc:	bd10      	pop	{r4, pc}
 80116ce:	bf00      	nop
 80116d0:	20002f52 	.word	0x20002f52

080116d4 <_ZN8touchgfx13DMA_Interface5flushEv>:
 80116d4:	6803      	ldr	r3, [r0, #0]
 80116d6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80116d8:	4718      	bx	r3

080116da <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80116da:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80116de:	1a13      	subs	r3, r2, r0
 80116e0:	4258      	negs	r0, r3
 80116e2:	4158      	adcs	r0, r3
 80116e4:	4770      	bx	lr

080116e6 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80116e6:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80116ea:	1a9b      	subs	r3, r3, r2
 80116ec:	2b00      	cmp	r3, #0
 80116ee:	bfdc      	itt	le
 80116f0:	6882      	ldrle	r2, [r0, #8]
 80116f2:	189b      	addle	r3, r3, r2
 80116f4:	2b01      	cmp	r3, #1
 80116f6:	bfcc      	ite	gt
 80116f8:	2000      	movgt	r0, #0
 80116fa:	2001      	movle	r0, #1
 80116fc:	4770      	bx	lr

080116fe <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80116fe:	6902      	ldr	r2, [r0, #16]
 8011700:	6843      	ldr	r3, [r0, #4]
 8011702:	2024      	movs	r0, #36	@ 0x24
 8011704:	fb00 3002 	mla	r0, r0, r2, r3
 8011708:	4770      	bx	lr

0801170a <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801170a:	6803      	ldr	r3, [r0, #0]
 801170c:	691b      	ldr	r3, [r3, #16]
 801170e:	4718      	bx	r3

08011710 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8011710:	b570      	push	{r4, r5, r6, lr}
 8011712:	2301      	movs	r3, #1
 8011714:	7203      	strb	r3, [r0, #8]
 8011716:	4604      	mov	r4, r0
 8011718:	6840      	ldr	r0, [r0, #4]
 801171a:	6803      	ldr	r3, [r0, #0]
 801171c:	699b      	ldr	r3, [r3, #24]
 801171e:	4798      	blx	r3
 8011720:	6803      	ldr	r3, [r0, #0]
 8011722:	2b40      	cmp	r3, #64	@ 0x40
 8011724:	4605      	mov	r5, r0
 8011726:	d00c      	beq.n	8011742 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011728:	d810      	bhi.n	801174c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801172a:	2b04      	cmp	r3, #4
 801172c:	d01d      	beq.n	801176a <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 801172e:	d804      	bhi.n	801173a <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8011730:	2b01      	cmp	r3, #1
 8011732:	d006      	beq.n	8011742 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011734:	2b02      	cmp	r3, #2
 8011736:	d02c      	beq.n	8011792 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8011738:	bd70      	pop	{r4, r5, r6, pc}
 801173a:	2b08      	cmp	r3, #8
 801173c:	d01d      	beq.n	801177a <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 801173e:	2b20      	cmp	r3, #32
 8011740:	d1fa      	bne.n	8011738 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011742:	6823      	ldr	r3, [r4, #0]
 8011744:	4620      	mov	r0, r4
 8011746:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011748:	4798      	blx	r3
 801174a:	e013      	b.n	8011774 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801174c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8011750:	d0f7      	beq.n	8011742 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011752:	d804      	bhi.n	801175e <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011754:	2b80      	cmp	r3, #128	@ 0x80
 8011756:	d0f4      	beq.n	8011742 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011758:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801175c:	e7f0      	b.n	8011740 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 801175e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011762:	d0ee      	beq.n	8011742 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011764:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8011768:	e7e5      	b.n	8011736 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801176a:	6823      	ldr	r3, [r4, #0]
 801176c:	7f01      	ldrb	r1, [r0, #28]
 801176e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011770:	4620      	mov	r0, r4
 8011772:	4798      	blx	r3
 8011774:	6823      	ldr	r3, [r4, #0]
 8011776:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011778:	e006      	b.n	8011788 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801177a:	6823      	ldr	r3, [r4, #0]
 801177c:	7f01      	ldrb	r1, [r0, #28]
 801177e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011780:	4620      	mov	r0, r4
 8011782:	4798      	blx	r3
 8011784:	6823      	ldr	r3, [r4, #0]
 8011786:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011788:	4629      	mov	r1, r5
 801178a:	4620      	mov	r0, r4
 801178c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011790:	4718      	bx	r3
 8011792:	6823      	ldr	r3, [r4, #0]
 8011794:	4620      	mov	r0, r4
 8011796:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011798:	4798      	blx	r3
 801179a:	e7f3      	b.n	8011784 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801179c <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801179c:	4770      	bx	lr

0801179e <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 801179e:	4770      	bx	lr

080117a0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80117a0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80117a4:	1ad2      	subs	r2, r2, r3
 80117a6:	2a00      	cmp	r2, #0
 80117a8:	b510      	push	{r4, lr}
 80117aa:	bfdc      	itt	le
 80117ac:	6884      	ldrle	r4, [r0, #8]
 80117ae:	1912      	addle	r2, r2, r4
 80117b0:	2a01      	cmp	r2, #1
 80117b2:	dd16      	ble.n	80117e2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80117b4:	6842      	ldr	r2, [r0, #4]
 80117b6:	2424      	movs	r4, #36	@ 0x24
 80117b8:	fb04 2303 	mla	r3, r4, r3, r2
 80117bc:	f101 0220 	add.w	r2, r1, #32
 80117c0:	f851 4b04 	ldr.w	r4, [r1], #4
 80117c4:	f843 4b04 	str.w	r4, [r3], #4
 80117c8:	4291      	cmp	r1, r2
 80117ca:	d1f9      	bne.n	80117c0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80117cc:	780a      	ldrb	r2, [r1, #0]
 80117ce:	701a      	strb	r2, [r3, #0]
 80117d0:	68c3      	ldr	r3, [r0, #12]
 80117d2:	6882      	ldr	r2, [r0, #8]
 80117d4:	f3bf 8f5b 	dmb	ish
 80117d8:	3301      	adds	r3, #1
 80117da:	429a      	cmp	r2, r3
 80117dc:	bfd8      	it	le
 80117de:	1a9b      	suble	r3, r3, r2
 80117e0:	60c3      	str	r3, [r0, #12]
 80117e2:	bd10      	pop	{r4, pc}

080117e4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80117e4:	6903      	ldr	r3, [r0, #16]
 80117e6:	6882      	ldr	r2, [r0, #8]
 80117e8:	f3bf 8f5b 	dmb	ish
 80117ec:	3301      	adds	r3, #1
 80117ee:	429a      	cmp	r2, r3
 80117f0:	bfd8      	it	le
 80117f2:	1a9b      	suble	r3, r3, r2
 80117f4:	6103      	str	r3, [r0, #16]
 80117f6:	4770      	bx	lr

080117f8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80117f8:	b570      	push	{r4, r5, r6, lr}
 80117fa:	4604      	mov	r4, r0
 80117fc:	460e      	mov	r6, r1
 80117fe:	6860      	ldr	r0, [r4, #4]
 8011800:	6803      	ldr	r3, [r0, #0]
 8011802:	685b      	ldr	r3, [r3, #4]
 8011804:	4798      	blx	r3
 8011806:	2800      	cmp	r0, #0
 8011808:	d1f9      	bne.n	80117fe <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801180a:	4d0d      	ldr	r5, [pc, #52]	@ (8011840 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 801180c:	6828      	ldr	r0, [r5, #0]
 801180e:	6803      	ldr	r3, [r0, #0]
 8011810:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011812:	4798      	blx	r3
 8011814:	f7fd fa1a 	bl	800ec4c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011818:	6828      	ldr	r0, [r5, #0]
 801181a:	2101      	movs	r1, #1
 801181c:	f7ff ff2a 	bl	8011674 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011820:	6860      	ldr	r0, [r4, #4]
 8011822:	6803      	ldr	r3, [r0, #0]
 8011824:	4631      	mov	r1, r6
 8011826:	689b      	ldr	r3, [r3, #8]
 8011828:	4798      	blx	r3
 801182a:	6823      	ldr	r3, [r4, #0]
 801182c:	4620      	mov	r0, r4
 801182e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011830:	4798      	blx	r3
 8011832:	6828      	ldr	r0, [r5, #0]
 8011834:	6803      	ldr	r3, [r0, #0]
 8011836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801183a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 801183c:	4718      	bx	r3
 801183e:	bf00      	nop
 8011840:	20002f54 	.word	0x20002f54

08011844 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011844:	b508      	push	{r3, lr}
 8011846:	f7fd f9df 	bl	800ec08 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801184a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801184e:	f7fd b9f1 	b.w	800ec34 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011852 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011852:	b510      	push	{r4, lr}
 8011854:	4604      	mov	r4, r0
 8011856:	6840      	ldr	r0, [r0, #4]
 8011858:	6803      	ldr	r3, [r0, #0]
 801185a:	681b      	ldr	r3, [r3, #0]
 801185c:	4798      	blx	r3
 801185e:	b948      	cbnz	r0, 8011874 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011860:	7a63      	ldrb	r3, [r4, #9]
 8011862:	b13b      	cbz	r3, 8011874 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011864:	7a23      	ldrb	r3, [r4, #8]
 8011866:	b92b      	cbnz	r3, 8011874 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011868:	6823      	ldr	r3, [r4, #0]
 801186a:	4620      	mov	r0, r4
 801186c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801186e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011872:	4718      	bx	r3
 8011874:	bd10      	pop	{r4, pc}

08011876 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011876:	b570      	push	{r4, r5, r6, lr}
 8011878:	4604      	mov	r4, r0
 801187a:	6840      	ldr	r0, [r0, #4]
 801187c:	6803      	ldr	r3, [r0, #0]
 801187e:	681b      	ldr	r3, [r3, #0]
 8011880:	4798      	blx	r3
 8011882:	4605      	mov	r5, r0
 8011884:	b930      	cbnz	r0, 8011894 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011886:	7a23      	ldrb	r3, [r4, #8]
 8011888:	b123      	cbz	r3, 8011894 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801188a:	6860      	ldr	r0, [r4, #4]
 801188c:	6803      	ldr	r3, [r0, #0]
 801188e:	695b      	ldr	r3, [r3, #20]
 8011890:	4798      	blx	r3
 8011892:	7225      	strb	r5, [r4, #8]
 8011894:	6860      	ldr	r0, [r4, #4]
 8011896:	6803      	ldr	r3, [r0, #0]
 8011898:	681b      	ldr	r3, [r3, #0]
 801189a:	4798      	blx	r3
 801189c:	b928      	cbnz	r0, 80118aa <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 801189e:	6823      	ldr	r3, [r4, #0]
 80118a0:	4620      	mov	r0, r4
 80118a2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80118a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118a8:	4718      	bx	r3
 80118aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80118ae:	f7fd b9d9 	b.w	800ec64 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

080118b4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80118b4:	b510      	push	{r4, lr}
 80118b6:	4c04      	ldr	r4, [pc, #16]	@ (80118c8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80118b8:	6082      	str	r2, [r0, #8]
 80118ba:	2200      	movs	r2, #0
 80118bc:	e9c0 4100 	strd	r4, r1, [r0]
 80118c0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80118c4:	bd10      	pop	{r4, pc}
 80118c6:	bf00      	nop
 80118c8:	08028fa0 	.word	0x08028fa0

080118cc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80118cc:	6840      	ldr	r0, [r0, #4]
 80118ce:	6803      	ldr	r3, [r0, #0]
 80118d0:	681b      	ldr	r3, [r3, #0]
 80118d2:	4718      	bx	r3

080118d4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80118d4:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 80118d8:	4770      	bx	lr

080118da <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80118da:	b510      	push	{r4, lr}
 80118dc:	4604      	mov	r4, r0
 80118de:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80118e0:	b150      	cbz	r0, 80118f8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80118e2:	6803      	ldr	r3, [r0, #0]
 80118e4:	68db      	ldr	r3, [r3, #12]
 80118e6:	4798      	blx	r3
 80118e8:	b130      	cbz	r0, 80118f8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80118ea:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80118ec:	6803      	ldr	r3, [r0, #0]
 80118ee:	4621      	mov	r1, r4
 80118f0:	689b      	ldr	r3, [r3, #8]
 80118f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80118f6:	4718      	bx	r3
 80118f8:	bd10      	pop	{r4, pc}

080118fa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80118fa:	b570      	push	{r4, r5, r6, lr}
 80118fc:	790b      	ldrb	r3, [r1, #4]
 80118fe:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8011902:	2b00      	cmp	r3, #0
 8011904:	bf0c      	ite	eq
 8011906:	2301      	moveq	r3, #1
 8011908:	2300      	movne	r3, #0
 801190a:	4604      	mov	r4, r0
 801190c:	460e      	mov	r6, r1
 801190e:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8011912:	d109      	bne.n	8011928 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8011914:	b14d      	cbz	r5, 801192a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8011916:	7933      	ldrb	r3, [r6, #4]
 8011918:	2b01      	cmp	r3, #1
 801191a:	d10c      	bne.n	8011936 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801191c:	6823      	ldr	r3, [r4, #0]
 801191e:	4620      	mov	r0, r4
 8011920:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011922:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011926:	4718      	bx	r3
 8011928:	b12d      	cbz	r5, 8011936 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801192a:	6823      	ldr	r3, [r4, #0]
 801192c:	4620      	mov	r0, r4
 801192e:	695b      	ldr	r3, [r3, #20]
 8011930:	4798      	blx	r3
 8011932:	2d00      	cmp	r5, #0
 8011934:	d1ef      	bne.n	8011916 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8011936:	bd70      	pop	{r4, r5, r6, pc}

08011938 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8011938:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 801193c:	b133      	cbz	r3, 801194c <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 801193e:	790b      	ldrb	r3, [r1, #4]
 8011940:	2b01      	cmp	r3, #1
 8011942:	bf01      	itttt	eq
 8011944:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 8011946:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 8011948:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 801194a:	8603      	strheq	r3, [r0, #48]	@ 0x30
 801194c:	f7ff bfd5 	b.w	80118fa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

08011950 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011950:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 8011954:	b12a      	cbz	r2, 8011962 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011956:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 801195a:	b112      	cbz	r2, 8011962 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801195c:	6803      	ldr	r3, [r0, #0]
 801195e:	695b      	ldr	r3, [r3, #20]
 8011960:	4718      	bx	r3
 8011962:	4770      	bx	lr

08011964 <_ZN8touchgfx12ToggleButton10forceStateEb>:
 8011964:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
 8011966:	b129      	cbz	r1, 8011974 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 8011968:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
 801196a:	429a      	cmp	r2, r3
 801196c:	d007      	beq.n	801197e <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 801196e:	8602      	strh	r2, [r0, #48]	@ 0x30
 8011970:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8011972:	4770      	bx	lr
 8011974:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 8011976:	429a      	cmp	r2, r3
 8011978:	bf1c      	itt	ne
 801197a:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
 801197c:	8603      	strhne	r3, [r0, #48]	@ 0x30
 801197e:	4770      	bx	lr

08011980 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011980:	2000      	movs	r0, #0
 8011982:	4770      	bx	lr

08011984 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011984:	4b07      	ldr	r3, [pc, #28]	@ (80119a4 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011986:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8011988:	881b      	ldrh	r3, [r3, #0]
 801198a:	4293      	cmp	r3, r2
 801198c:	bf81      	itttt	hi
 801198e:	4b06      	ldrhi	r3, [pc, #24]	@ (80119a8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011990:	681b      	ldrhi	r3, [r3, #0]
 8011992:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011996:	7858      	ldrbhi	r0, [r3, #1]
 8011998:	bf8c      	ite	hi
 801199a:	f000 0003 	andhi.w	r0, r0, #3
 801199e:	2000      	movls	r0, #0
 80119a0:	4770      	bx	lr
 80119a2:	bf00      	nop
 80119a4:	20002fa8 	.word	0x20002fa8
 80119a8:	20002fa4 	.word	0x20002fa4

080119ac <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80119ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119b0:	4b10      	ldr	r3, [pc, #64]	@ (80119f4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80119b2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 80119b4:	881b      	ldrh	r3, [r3, #0]
 80119b6:	428b      	cmp	r3, r1
 80119b8:	4604      	mov	r4, r0
 80119ba:	d918      	bls.n	80119ee <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80119bc:	6803      	ldr	r3, [r0, #0]
 80119be:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 80119c0:	4b0d      	ldr	r3, [pc, #52]	@ (80119f8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80119c2:	6818      	ldr	r0, [r3, #0]
 80119c4:	f7fb ff22 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 80119c8:	6823      	ldr	r3, [r4, #0]
 80119ca:	4606      	mov	r6, r0
 80119cc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80119ce:	4620      	mov	r0, r4
 80119d0:	4798      	blx	r3
 80119d2:	6823      	ldr	r3, [r4, #0]
 80119d4:	4607      	mov	r7, r0
 80119d6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80119da:	4620      	mov	r0, r4
 80119dc:	4798      	blx	r3
 80119de:	463a      	mov	r2, r7
 80119e0:	4603      	mov	r3, r0
 80119e2:	4631      	mov	r1, r6
 80119e4:	4620      	mov	r0, r4
 80119e6:	46ac      	mov	ip, r5
 80119e8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80119ec:	4760      	bx	ip
 80119ee:	2000      	movs	r0, #0
 80119f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80119f4:	20002fa8 	.word	0x20002fa8
 80119f8:	20002fb0 	.word	0x20002fb0

080119fc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80119fc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011a00:	4b17      	ldr	r3, [pc, #92]	@ (8011a60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011a02:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011a04:	881b      	ldrh	r3, [r3, #0]
 8011a06:	428b      	cmp	r3, r1
 8011a08:	4604      	mov	r4, r0
 8011a0a:	d926      	bls.n	8011a5a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011a0c:	4b15      	ldr	r3, [pc, #84]	@ (8011a64 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011a0e:	681b      	ldr	r3, [r3, #0]
 8011a10:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011a14:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011a18:	4b13      	ldr	r3, [pc, #76]	@ (8011a68 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011a1a:	7855      	ldrb	r5, [r2, #1]
 8011a1c:	681b      	ldr	r3, [r3, #0]
 8011a1e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011a22:	6833      	ldr	r3, [r6, #0]
 8011a24:	69df      	ldr	r7, [r3, #28]
 8011a26:	4b11      	ldr	r3, [pc, #68]	@ (8011a6c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011a28:	6818      	ldr	r0, [r3, #0]
 8011a2a:	f7fb feef 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 8011a2e:	6823      	ldr	r3, [r4, #0]
 8011a30:	4680      	mov	r8, r0
 8011a32:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011a34:	4620      	mov	r0, r4
 8011a36:	4798      	blx	r3
 8011a38:	6823      	ldr	r3, [r4, #0]
 8011a3a:	4681      	mov	r9, r0
 8011a3c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011a40:	4620      	mov	r0, r4
 8011a42:	4798      	blx	r3
 8011a44:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011a48:	9000      	str	r0, [sp, #0]
 8011a4a:	464b      	mov	r3, r9
 8011a4c:	4642      	mov	r2, r8
 8011a4e:	4629      	mov	r1, r5
 8011a50:	4630      	mov	r0, r6
 8011a52:	47b8      	blx	r7
 8011a54:	b003      	add	sp, #12
 8011a56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a5a:	2000      	movs	r0, #0
 8011a5c:	e7fa      	b.n	8011a54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011a5e:	bf00      	nop
 8011a60:	20002fa8 	.word	0x20002fa8
 8011a64:	20002fa4 	.word	0x20002fa4
 8011a68:	20002fac 	.word	0x20002fac
 8011a6c:	20002fb0 	.word	0x20002fb0

08011a70 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011a70:	b40e      	push	{r1, r2, r3}
 8011a72:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a76:	4b2f      	ldr	r3, [pc, #188]	@ (8011b34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011a78:	881a      	ldrh	r2, [r3, #0]
 8011a7a:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8011a7c:	429a      	cmp	r2, r3
 8011a7e:	b09d      	sub	sp, #116	@ 0x74
 8011a80:	4604      	mov	r4, r0
 8011a82:	d954      	bls.n	8011b2e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011a84:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8011b38 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011a88:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8011b3c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011a8c:	aa26      	add	r2, sp, #152	@ 0x98
 8011a8e:	9202      	str	r2, [sp, #8]
 8011a90:	f8d9 2000 	ldr.w	r2, [r9]
 8011a94:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011a98:	f8d8 3000 	ldr.w	r3, [r8]
 8011a9c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011aa0:	682b      	ldr	r3, [r5, #0]
 8011aa2:	4628      	mov	r0, r5
 8011aa4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011aa6:	4798      	blx	r3
 8011aa8:	b207      	sxth	r7, r0
 8011aaa:	4606      	mov	r6, r0
 8011aac:	a803      	add	r0, sp, #12
 8011aae:	f003 ff2f 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 8011ab2:	682b      	ldr	r3, [r5, #0]
 8011ab4:	4628      	mov	r0, r5
 8011ab6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011ab8:	4798      	blx	r3
 8011aba:	682b      	ldr	r3, [r5, #0]
 8011abc:	4682      	mov	sl, r0
 8011abe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011ac0:	4628      	mov	r0, r5
 8011ac2:	4798      	blx	r3
 8011ac4:	4653      	mov	r3, sl
 8011ac6:	9000      	str	r0, [sp, #0]
 8011ac8:	9a02      	ldr	r2, [sp, #8]
 8011aca:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8011acc:	a803      	add	r0, sp, #12
 8011ace:	f003 ff7a 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011ad2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011ad4:	f8d9 3000 	ldr.w	r3, [r9]
 8011ad8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8011adc:	8925      	ldrh	r5, [r4, #8]
 8011ade:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011ae2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011ae6:	eba5 050c 	sub.w	r5, r5, ip
 8011aea:	784a      	ldrb	r2, [r1, #1]
 8011aec:	f8d8 3000 	ldr.w	r3, [r8]
 8011af0:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8011af4:	b22d      	sxth	r5, r5
 8011af6:	9500      	str	r5, [sp, #0]
 8011af8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011afc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011b00:	a803      	add	r0, sp, #12
 8011b02:	f001 fdb5 	bl	8013670 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011b06:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8011b0a:	18b9      	adds	r1, r7, r2
 8011b0c:	2900      	cmp	r1, #0
 8011b0e:	b203      	sxth	r3, r0
 8011b10:	dd0b      	ble.n	8011b2a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011b12:	3b01      	subs	r3, #1
 8011b14:	fb13 f302 	smulbb	r3, r3, r2
 8011b18:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011b1c:	b21f      	sxth	r7, r3
 8011b1e:	4638      	mov	r0, r7
 8011b20:	b01d      	add	sp, #116	@ 0x74
 8011b22:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b26:	b003      	add	sp, #12
 8011b28:	4770      	bx	lr
 8011b2a:	2b00      	cmp	r3, #0
 8011b2c:	dcf7      	bgt.n	8011b1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b2e:	2700      	movs	r7, #0
 8011b30:	e7f5      	b.n	8011b1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b32:	bf00      	nop
 8011b34:	20002fa8 	.word	0x20002fa8
 8011b38:	20002fa4 	.word	0x20002fa4
 8011b3c:	20002fac 	.word	0x20002fac

08011b40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011b40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b44:	4bbc      	ldr	r3, [pc, #752]	@ (8011e38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011b46:	460c      	mov	r4, r1
 8011b48:	881b      	ldrh	r3, [r3, #0]
 8011b4a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 8011b4c:	428b      	cmp	r3, r1
 8011b4e:	b0a9      	sub	sp, #164	@ 0xa4
 8011b50:	4680      	mov	r8, r0
 8011b52:	d809      	bhi.n	8011b68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011b54:	2300      	movs	r3, #0
 8011b56:	f04f 32ff 	mov.w	r2, #4294967295
 8011b5a:	e9c0 3200 	strd	r3, r2, [r0]
 8011b5e:	6083      	str	r3, [r0, #8]
 8011b60:	4640      	mov	r0, r8
 8011b62:	b029      	add	sp, #164	@ 0xa4
 8011b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b68:	4eb4      	ldr	r6, [pc, #720]	@ (8011e3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011b6a:	6833      	ldr	r3, [r6, #0]
 8011b6c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011b70:	4bb3      	ldr	r3, [pc, #716]	@ (8011e40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011b72:	681b      	ldr	r3, [r3, #0]
 8011b74:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011b78:	4bb2      	ldr	r3, [pc, #712]	@ (8011e44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011b7a:	6818      	ldr	r0, [r3, #0]
 8011b7c:	f7fb fe46 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 8011b80:	682b      	ldr	r3, [r5, #0]
 8011b82:	4681      	mov	r9, r0
 8011b84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011b86:	4628      	mov	r0, r5
 8011b88:	4798      	blx	r3
 8011b8a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8011b8c:	b203      	sxth	r3, r0
 8011b8e:	4407      	add	r7, r0
 8011b90:	9304      	str	r3, [sp, #16]
 8011b92:	b2bb      	uxth	r3, r7
 8011b94:	9303      	str	r3, [sp, #12]
 8011b96:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8011b9a:	4682      	mov	sl, r0
 8011b9c:	a80f      	add	r0, sp, #60	@ 0x3c
 8011b9e:	2b00      	cmp	r3, #0
 8011ba0:	f040 80a6 	bne.w	8011cf0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011ba4:	f003 feb4 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 8011ba8:	682b      	ldr	r3, [r5, #0]
 8011baa:	4628      	mov	r0, r5
 8011bac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011bae:	4798      	blx	r3
 8011bb0:	682b      	ldr	r3, [r5, #0]
 8011bb2:	4606      	mov	r6, r0
 8011bb4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011bb6:	4628      	mov	r0, r5
 8011bb8:	4798      	blx	r3
 8011bba:	6823      	ldr	r3, [r4, #0]
 8011bbc:	4607      	mov	r7, r0
 8011bbe:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011bc0:	4620      	mov	r0, r4
 8011bc2:	4798      	blx	r3
 8011bc4:	6823      	ldr	r3, [r4, #0]
 8011bc6:	4683      	mov	fp, r0
 8011bc8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011bcc:	4620      	mov	r0, r4
 8011bce:	4798      	blx	r3
 8011bd0:	463b      	mov	r3, r7
 8011bd2:	e9cd b000 	strd	fp, r0, [sp]
 8011bd6:	4649      	mov	r1, r9
 8011bd8:	4632      	mov	r2, r6
 8011bda:	a80f      	add	r0, sp, #60	@ 0x3c
 8011bdc:	f003 ff08 	bl	80159f0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011be0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011be4:	f8df b254 	ldr.w	fp, [pc, #596]	@ 8011e3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011be8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011bec:	f04f 0600 	mov.w	r6, #0
 8011bf0:	bf0c      	ite	eq
 8011bf2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011bf6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011bfa:	4637      	mov	r7, r6
 8011bfc:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011bfe:	f8db 3000 	ldr.w	r3, [fp]
 8011c02:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011c06:	4629      	mov	r1, r5
 8011c08:	785b      	ldrb	r3, [r3, #1]
 8011c0a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8011c0e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011c12:	a80f      	add	r0, sp, #60	@ 0x3c
 8011c14:	f001 fa33 	bl	801307e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011c18:	9b03      	ldr	r3, [sp, #12]
 8011c1a:	4286      	cmp	r6, r0
 8011c1c:	bfb8      	it	lt
 8011c1e:	4606      	movlt	r6, r0
 8011c20:	3701      	adds	r7, #1
 8011c22:	eba9 0903 	sub.w	r9, r9, r3
 8011c26:	a80f      	add	r0, sp, #60	@ 0x3c
 8011c28:	b236      	sxth	r6, r6
 8011c2a:	b2bf      	uxth	r7, r7
 8011c2c:	fa0f f989 	sxth.w	r9, r9
 8011c30:	f003 fe95 	bl	801595e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011c34:	b918      	cbnz	r0, 8011c3e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011c36:	7a2b      	ldrb	r3, [r5, #8]
 8011c38:	444b      	add	r3, r9
 8011c3a:	2b00      	cmp	r3, #0
 8011c3c:	dcde      	bgt.n	8011bfc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011c3e:	9b03      	ldr	r3, [sp, #12]
 8011c40:	9a04      	ldr	r2, [sp, #16]
 8011c42:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011c46:	fb13 f707 	smulbb	r7, r3, r7
 8011c4a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011c4c:	1aff      	subs	r7, r7, r3
 8011c4e:	b2bf      	uxth	r7, r7
 8011c50:	b23b      	sxth	r3, r7
 8011c52:	429a      	cmp	r2, r3
 8011c54:	bfa8      	it	ge
 8011c56:	4657      	movge	r7, sl
 8011c58:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011c5c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011c60:	6823      	ldr	r3, [r4, #0]
 8011c62:	bf08      	it	eq
 8011c64:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011c68:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011c6a:	bf18      	it	ne
 8011c6c:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011c70:	4620      	mov	r0, r4
 8011c72:	4798      	blx	r3
 8011c74:	444f      	add	r7, r9
 8011c76:	fa1f f987 	uxth.w	r9, r7
 8011c7a:	2801      	cmp	r0, #1
 8011c7c:	fa0f f789 	sxth.w	r7, r9
 8011c80:	b2b3      	uxth	r3, r6
 8011c82:	f000 80e1 	beq.w	8011e48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011c86:	2802      	cmp	r0, #2
 8011c88:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8011c8c:	f000 80e2 	beq.w	8011e54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011c90:	7aea      	ldrb	r2, [r5, #11]
 8011c92:	7b2d      	ldrb	r5, [r5, #12]
 8011c94:	b236      	sxth	r6, r6
 8011c96:	1ab6      	subs	r6, r6, r2
 8011c98:	442a      	add	r2, r5
 8011c9a:	4413      	add	r3, r2
 8011c9c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8011ca0:	fa1f fa86 	uxth.w	sl, r6
 8011ca4:	b29b      	uxth	r3, r3
 8011ca6:	2a02      	cmp	r2, #2
 8011ca8:	fa0f fb8a 	sxth.w	fp, sl
 8011cac:	b21e      	sxth	r6, r3
 8011cae:	f000 80d5 	beq.w	8011e5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011cb2:	2a03      	cmp	r2, #3
 8011cb4:	f000 80dd 	beq.w	8011e72 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011cb8:	2a01      	cmp	r2, #1
 8011cba:	f040 80e5 	bne.w	8011e88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011cbe:	8925      	ldrh	r5, [r4, #8]
 8011cc0:	4633      	mov	r3, r6
 8011cc2:	eba5 0909 	sub.w	r9, r5, r9
 8011cc6:	463e      	mov	r6, r7
 8011cc8:	465d      	mov	r5, fp
 8011cca:	461f      	mov	r7, r3
 8011ccc:	fa0f fb89 	sxth.w	fp, r9
 8011cd0:	4b5c      	ldr	r3, [pc, #368]	@ (8011e44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011cd2:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011cd4:	6818      	ldr	r0, [r3, #0]
 8011cd6:	f7fb fd99 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 8011cda:	f8a8 b000 	strh.w	fp, [r8]
 8011cde:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011ce2:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011ce6:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011cea:	f8c8 0008 	str.w	r0, [r8, #8]
 8011cee:	e737      	b.n	8011b60 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011cf0:	f003 fe0e 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 8011cf4:	682b      	ldr	r3, [r5, #0]
 8011cf6:	4628      	mov	r0, r5
 8011cf8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011cfa:	4798      	blx	r3
 8011cfc:	682b      	ldr	r3, [r5, #0]
 8011cfe:	4607      	mov	r7, r0
 8011d00:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011d02:	4628      	mov	r0, r5
 8011d04:	4798      	blx	r3
 8011d06:	6823      	ldr	r3, [r4, #0]
 8011d08:	4683      	mov	fp, r0
 8011d0a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011d0c:	4620      	mov	r0, r4
 8011d0e:	4798      	blx	r3
 8011d10:	6822      	ldr	r2, [r4, #0]
 8011d12:	9005      	str	r0, [sp, #20]
 8011d14:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8011d18:	4620      	mov	r0, r4
 8011d1a:	4790      	blx	r2
 8011d1c:	9b05      	ldr	r3, [sp, #20]
 8011d1e:	9001      	str	r0, [sp, #4]
 8011d20:	463a      	mov	r2, r7
 8011d22:	4649      	mov	r1, r9
 8011d24:	9300      	str	r3, [sp, #0]
 8011d26:	a80f      	add	r0, sp, #60	@ 0x3c
 8011d28:	465b      	mov	r3, fp
 8011d2a:	f003 fe61 	bl	80159f0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011d2e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011d32:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011d36:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011d38:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8011d3c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011d40:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d44:	bf0a      	itet	eq
 8011d46:	464a      	moveq	r2, r9
 8011d48:	461a      	movne	r2, r3
 8011d4a:	4699      	moveq	r9, r3
 8011d4c:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8011d50:	1ad2      	subs	r2, r2, r3
 8011d52:	6833      	ldr	r3, [r6, #0]
 8011d54:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8011d58:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011d5c:	af0f      	add	r7, sp, #60	@ 0x3c
 8011d5e:	7859      	ldrb	r1, [r3, #1]
 8011d60:	9707      	str	r7, [sp, #28]
 8011d62:	2300      	movs	r3, #0
 8011d64:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011d68:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011d6c:	f88d 1020 	strb.w	r1, [sp, #32]
 8011d70:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8011d74:	9509      	str	r5, [sp, #36]	@ 0x24
 8011d76:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8011d7a:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 8011d7e:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8011d82:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8011d86:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 8011d8a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011d8e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8011d92:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011d96:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011d9a:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 8011d9e:	b350      	cbz	r0, 8011df6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011da0:	682b      	ldr	r3, [r5, #0]
 8011da2:	4628      	mov	r0, r5
 8011da4:	695b      	ldr	r3, [r3, #20]
 8011da6:	4798      	blx	r3
 8011da8:	4607      	mov	r7, r0
 8011daa:	b320      	cbz	r0, 8011df6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011dac:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011dae:	6803      	ldr	r3, [r0, #0]
 8011db0:	4639      	mov	r1, r7
 8011db2:	68db      	ldr	r3, [r3, #12]
 8011db4:	4798      	blx	r3
 8011db6:	4606      	mov	r6, r0
 8011db8:	b1e8      	cbz	r0, 8011df6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011dba:	7b43      	ldrb	r3, [r0, #13]
 8011dbc:	7a82      	ldrb	r2, [r0, #10]
 8011dbe:	005b      	lsls	r3, r3, #1
 8011dc0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011dc4:	4313      	orrs	r3, r2
 8011dc6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 8011dca:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 8011dce:	2b06      	cmp	r3, #6
 8011dd0:	d111      	bne.n	8011df6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011dd2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8011dd4:	6803      	ldr	r3, [r0, #0]
 8011dd6:	4632      	mov	r2, r6
 8011dd8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011dda:	4639      	mov	r1, r7
 8011ddc:	4798      	blx	r3
 8011dde:	7b73      	ldrb	r3, [r6, #13]
 8011de0:	005b      	lsls	r3, r3, #1
 8011de2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011de6:	7ab3      	ldrb	r3, [r6, #10]
 8011de8:	4313      	orrs	r3, r2
 8011dea:	4418      	add	r0, r3
 8011dec:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011df0:	4418      	add	r0, r3
 8011df2:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 8011df6:	2600      	movs	r6, #0
 8011df8:	4637      	mov	r7, r6
 8011dfa:	a806      	add	r0, sp, #24
 8011dfc:	f001 fb34 	bl	8013468 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011e00:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 8011e04:	9b03      	ldr	r3, [sp, #12]
 8011e06:	4286      	cmp	r6, r0
 8011e08:	eba9 0903 	sub.w	r9, r9, r3
 8011e0c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011e10:	bfb8      	it	lt
 8011e12:	4606      	movlt	r6, r0
 8011e14:	3701      	adds	r7, #1
 8011e16:	b236      	sxth	r6, r6
 8011e18:	b2bf      	uxth	r7, r7
 8011e1a:	fa0f f989 	sxth.w	r9, r9
 8011e1e:	2b00      	cmp	r3, #0
 8011e20:	f43f af0d 	beq.w	8011c3e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e24:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8011e28:	2b00      	cmp	r3, #0
 8011e2a:	f47f af08 	bne.w	8011c3e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e2e:	7a2b      	ldrb	r3, [r5, #8]
 8011e30:	444b      	add	r3, r9
 8011e32:	2b00      	cmp	r3, #0
 8011e34:	dce1      	bgt.n	8011dfa <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011e36:	e702      	b.n	8011c3e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e38:	20002fa8 	.word	0x20002fa8
 8011e3c:	20002fa4 	.word	0x20002fa4
 8011e40:	20002fac 	.word	0x20002fac
 8011e44:	20002fb0 	.word	0x20002fb0
 8011e48:	ebaa 0606 	sub.w	r6, sl, r6
 8011e4c:	2002      	movs	r0, #2
 8011e4e:	fb96 f6f0 	sdiv	r6, r6, r0
 8011e52:	e71d      	b.n	8011c90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011e54:	441e      	add	r6, r3
 8011e56:	ebaa 0606 	sub.w	r6, sl, r6
 8011e5a:	e719      	b.n	8011c90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011e5c:	8925      	ldrh	r5, [r4, #8]
 8011e5e:	1aed      	subs	r5, r5, r3
 8011e60:	eba5 050a 	sub.w	r5, r5, sl
 8011e64:	fa0f fb85 	sxth.w	fp, r5
 8011e68:	8965      	ldrh	r5, [r4, #10]
 8011e6a:	eba5 0509 	sub.w	r5, r5, r9
 8011e6e:	b22d      	sxth	r5, r5
 8011e70:	e72e      	b.n	8011cd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011e72:	8965      	ldrh	r5, [r4, #10]
 8011e74:	1aed      	subs	r5, r5, r3
 8011e76:	eba5 050a 	sub.w	r5, r5, sl
 8011e7a:	4633      	mov	r3, r6
 8011e7c:	b22d      	sxth	r5, r5
 8011e7e:	463e      	mov	r6, r7
 8011e80:	f04f 0b00 	mov.w	fp, #0
 8011e84:	461f      	mov	r7, r3
 8011e86:	e723      	b.n	8011cd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011e88:	2500      	movs	r5, #0
 8011e8a:	e721      	b.n	8011cd0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011e8c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011e8c:	b513      	push	{r0, r1, r4, lr}
 8011e8e:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 8011e92:	4604      	mov	r4, r0
 8011e94:	b1fb      	cbz	r3, 8011ed6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e96:	4b16      	ldr	r3, [pc, #88]	@ (8011ef0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011e98:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011e9a:	881b      	ldrh	r3, [r3, #0]
 8011e9c:	428b      	cmp	r3, r1
 8011e9e:	d91a      	bls.n	8011ed6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ea0:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011ea4:	2b00      	cmp	r3, #0
 8011ea6:	dd16      	ble.n	8011ed6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ea8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011eac:	2b00      	cmp	r3, #0
 8011eae:	dd12      	ble.n	8011ed6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011eb0:	4b10      	ldr	r3, [pc, #64]	@ (8011ef4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011eb2:	6818      	ldr	r0, [r3, #0]
 8011eb4:	f7fb fcaa 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 8011eb8:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8011ebc:	6822      	ldr	r2, [r4, #0]
 8011ebe:	2b00      	cmp	r3, #0
 8011ec0:	db06      	blt.n	8011ed0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011ec2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8011ec6:	2b00      	cmp	r3, #0
 8011ec8:	db02      	blt.n	8011ed0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011eca:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011ecc:	4298      	cmp	r0, r3
 8011ece:	d004      	beq.n	8011eda <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011ed0:	6953      	ldr	r3, [r2, #20]
 8011ed2:	4620      	mov	r0, r4
 8011ed4:	4798      	blx	r3
 8011ed6:	b002      	add	sp, #8
 8011ed8:	bd10      	pop	{r4, pc}
 8011eda:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 8011ede:	c903      	ldmia	r1, {r0, r1}
 8011ee0:	466b      	mov	r3, sp
 8011ee2:	e883 0003 	stmia.w	r3, {r0, r1}
 8011ee6:	6912      	ldr	r2, [r2, #16]
 8011ee8:	4619      	mov	r1, r3
 8011eea:	4620      	mov	r0, r4
 8011eec:	4790      	blx	r2
 8011eee:	e7f2      	b.n	8011ed6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011ef0:	20002fa8 	.word	0x20002fa8
 8011ef4:	20002fb0 	.word	0x20002fb0

08011ef8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011ef8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011efc:	4b44      	ldr	r3, [pc, #272]	@ (8012010 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011efe:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8011f00:	881b      	ldrh	r3, [r3, #0]
 8011f02:	4293      	cmp	r3, r2
 8011f04:	b08e      	sub	sp, #56	@ 0x38
 8011f06:	4604      	mov	r4, r0
 8011f08:	d97e      	bls.n	8012008 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f0a:	6808      	ldr	r0, [r1, #0]
 8011f0c:	4d41      	ldr	r5, [pc, #260]	@ (8012014 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011f0e:	6849      	ldr	r1, [r1, #4]
 8011f10:	ab05      	add	r3, sp, #20
 8011f12:	c303      	stmia	r3!, {r0, r1}
 8011f14:	4611      	mov	r1, r2
 8011f16:	6828      	ldr	r0, [r5, #0]
 8011f18:	f7fb fc78 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 8011f1c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8011f20:	2b00      	cmp	r3, #0
 8011f22:	db11      	blt.n	8011f48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f24:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8011f28:	2b00      	cmp	r3, #0
 8011f2a:	db0d      	blt.n	8011f48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f2c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8011f2e:	4298      	cmp	r0, r3
 8011f30:	d10a      	bne.n	8011f48 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f32:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8011f36:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f3a:	ab09      	add	r3, sp, #36	@ 0x24
 8011f3c:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f40:	4619      	mov	r1, r3
 8011f42:	a805      	add	r0, sp, #20
 8011f44:	f7fe fcca 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 8011f48:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011f4c:	2b00      	cmp	r3, #0
 8011f4e:	dd5b      	ble.n	8012008 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f50:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011f54:	2b00      	cmp	r3, #0
 8011f56:	dd57      	ble.n	8012008 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f58:	4f2f      	ldr	r7, [pc, #188]	@ (8012018 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011f5a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011f5c:	683b      	ldr	r3, [r7, #0]
 8011f5e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011f62:	4b2e      	ldr	r3, [pc, #184]	@ (801201c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011f64:	681b      	ldr	r3, [r3, #0]
 8011f66:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011f6a:	2e00      	cmp	r6, #0
 8011f6c:	d04c      	beq.n	8012008 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f6e:	6823      	ldr	r3, [r4, #0]
 8011f70:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8011f74:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011f76:	4620      	mov	r0, r4
 8011f78:	4798      	blx	r3
 8011f7a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011f7c:	683b      	ldr	r3, [r7, #0]
 8011f7e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 8011f82:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8011f86:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 8011f8a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011f8c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011f90:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8011f94:	785b      	ldrb	r3, [r3, #1]
 8011f96:	9609      	str	r6, [sp, #36]	@ 0x24
 8011f98:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011f9c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8011fa0:	4b1f      	ldr	r3, [pc, #124]	@ (8012020 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011fa2:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8011fa6:	681b      	ldr	r3, [r3, #0]
 8011fa8:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 8011fac:	910b      	str	r1, [sp, #44]	@ 0x2c
 8011fae:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 8011fb2:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8011fb6:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 8011fba:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 8011fbe:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8011fc2:	b10a      	cbz	r2, 8011fc8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011fc4:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8011fc6:	b906      	cbnz	r6, 8011fca <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011fc8:	689e      	ldr	r6, [r3, #8]
 8011fca:	af07      	add	r7, sp, #28
 8011fcc:	4621      	mov	r1, r4
 8011fce:	4638      	mov	r0, r7
 8011fd0:	f003 f8e8 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011fd4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011fd6:	6828      	ldr	r0, [r5, #0]
 8011fd8:	f7fb fc18 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 8011fdc:	6823      	ldr	r3, [r4, #0]
 8011fde:	4605      	mov	r5, r0
 8011fe0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011fe2:	4620      	mov	r0, r4
 8011fe4:	4798      	blx	r3
 8011fe6:	6823      	ldr	r3, [r4, #0]
 8011fe8:	4680      	mov	r8, r0
 8011fea:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011fee:	4620      	mov	r0, r4
 8011ff0:	4798      	blx	r3
 8011ff2:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011ff6:	ab09      	add	r3, sp, #36	@ 0x24
 8011ff8:	9300      	str	r3, [sp, #0]
 8011ffa:	9501      	str	r5, [sp, #4]
 8011ffc:	ab05      	add	r3, sp, #20
 8011ffe:	e897 0006 	ldmia.w	r7, {r1, r2}
 8012002:	4630      	mov	r0, r6
 8012004:	f7fb fb93 	bl	800d72e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012008:	b00e      	add	sp, #56	@ 0x38
 801200a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801200e:	bf00      	nop
 8012010:	20002fa8 	.word	0x20002fa8
 8012014:	20002fb0 	.word	0x20002fb0
 8012018:	20002fa4 	.word	0x20002fa4
 801201c:	20002fac 	.word	0x20002fac
 8012020:	20002f54 	.word	0x20002f54

08012024 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012024:	b538      	push	{r3, r4, r5, lr}
 8012026:	4b0e      	ldr	r3, [pc, #56]	@ (8012060 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012028:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 801202a:	881b      	ldrh	r3, [r3, #0]
 801202c:	429a      	cmp	r2, r3
 801202e:	4604      	mov	r4, r0
 8012030:	d214      	bcs.n	801205c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8012032:	6803      	ldr	r3, [r0, #0]
 8012034:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8012036:	4798      	blx	r3
 8012038:	6823      	ldr	r3, [r4, #0]
 801203a:	4605      	mov	r5, r0
 801203c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801203e:	4620      	mov	r0, r4
 8012040:	4798      	blx	r3
 8012042:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8012046:	b22d      	sxth	r5, r5
 8012048:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 801204c:	4601      	mov	r1, r0
 801204e:	bf06      	itte	eq
 8012050:	4602      	moveq	r2, r0
 8012052:	4629      	moveq	r1, r5
 8012054:	462a      	movne	r2, r5
 8012056:	4620      	mov	r0, r4
 8012058:	f7f7 fcfd 	bl	8009a56 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801205c:	bd38      	pop	{r3, r4, r5, pc}
 801205e:	bf00      	nop
 8012060:	20002fa8 	.word	0x20002fa8

08012064 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012064:	b530      	push	{r4, r5, lr}
 8012066:	888b      	ldrh	r3, [r1, #4]
 8012068:	8583      	strh	r3, [r0, #44]	@ 0x2c
 801206a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801206e:	b085      	sub	sp, #20
 8012070:	4604      	mov	r4, r0
 8012072:	b923      	cbnz	r3, 801207e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012074:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012078:	b90b      	cbnz	r3, 801207e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801207a:	f7ff ffd3 	bl	8012024 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801207e:	6823      	ldr	r3, [r4, #0]
 8012080:	466d      	mov	r5, sp
 8012082:	4621      	mov	r1, r4
 8012084:	4628      	mov	r0, r5
 8012086:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 801208a:	4798      	blx	r3
 801208c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012090:	343c      	adds	r4, #60	@ 0x3c
 8012092:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012096:	b005      	add	sp, #20
 8012098:	bd30      	pop	{r4, r5, pc}

0801209a <_ZNK8touchgfx3Box12getSolidRectEv>:
 801209a:	2300      	movs	r3, #0
 801209c:	8083      	strh	r3, [r0, #4]
 801209e:	80c3      	strh	r3, [r0, #6]
 80120a0:	8003      	strh	r3, [r0, #0]
 80120a2:	8043      	strh	r3, [r0, #2]
 80120a4:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 80120a8:	2bff      	cmp	r3, #255	@ 0xff
 80120aa:	bf01      	itttt	eq
 80120ac:	890b      	ldrheq	r3, [r1, #8]
 80120ae:	8083      	strheq	r3, [r0, #4]
 80120b0:	894b      	ldrheq	r3, [r1, #10]
 80120b2:	80c3      	strheq	r3, [r0, #6]
 80120b4:	4770      	bx	lr
	...

080120b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80120b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80120ba:	4604      	mov	r4, r0
 80120bc:	6808      	ldr	r0, [r1, #0]
 80120be:	6849      	ldr	r1, [r1, #4]
 80120c0:	466b      	mov	r3, sp
 80120c2:	c303      	stmia	r3!, {r0, r1}
 80120c4:	6823      	ldr	r3, [r4, #0]
 80120c6:	4669      	mov	r1, sp
 80120c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80120ca:	4620      	mov	r0, r4
 80120cc:	4798      	blx	r3
 80120ce:	4b08      	ldr	r3, [pc, #32]	@ (80120f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80120d0:	681b      	ldr	r3, [r3, #0]
 80120d2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80120d6:	b10a      	cbz	r2, 80120dc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80120d8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80120da:	b900      	cbnz	r0, 80120de <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80120dc:	6898      	ldr	r0, [r3, #8]
 80120de:	6803      	ldr	r3, [r0, #0]
 80120e0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80120e2:	6a1d      	ldr	r5, [r3, #32]
 80120e4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80120e8:	4669      	mov	r1, sp
 80120ea:	47a8      	blx	r5
 80120ec:	b003      	add	sp, #12
 80120ee:	bd30      	pop	{r4, r5, pc}
 80120f0:	20002f54 	.word	0x20002f54

080120f4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80120f4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 80120f8:	b12a      	cbz	r2, 8012106 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80120fa:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80120fe:	b112      	cbz	r2, 8012106 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012100:	6803      	ldr	r3, [r0, #0]
 8012102:	695b      	ldr	r3, [r3, #20]
 8012104:	4718      	bx	r3
 8012106:	4770      	bx	lr

08012108 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012108:	b570      	push	{r4, r5, r6, lr}
 801210a:	880b      	ldrh	r3, [r1, #0]
 801210c:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 801210e:	4605      	mov	r5, r0
 8012110:	8813      	ldrh	r3, [r2, #0]
 8012112:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012116:	4604      	mov	r4, r0
 8012118:	4628      	mov	r0, r5
 801211a:	f005 f9b7 	bl	801748c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801211e:	4606      	mov	r6, r0
 8012120:	4628      	mov	r0, r5
 8012122:	f005 f9e7 	bl	80174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012126:	6823      	ldr	r3, [r4, #0]
 8012128:	4605      	mov	r5, r0
 801212a:	4631      	mov	r1, r6
 801212c:	4620      	mov	r0, r4
 801212e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012130:	4798      	blx	r3
 8012132:	6823      	ldr	r3, [r4, #0]
 8012134:	4629      	mov	r1, r5
 8012136:	4620      	mov	r0, r4
 8012138:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801213a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801213e:	4718      	bx	r3

08012140 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012140:	b510      	push	{r4, lr}
 8012142:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8012146:	2bff      	cmp	r3, #255	@ 0xff
 8012148:	4604      	mov	r4, r0
 801214a:	d006      	beq.n	801215a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801214c:	2300      	movs	r3, #0
 801214e:	8003      	strh	r3, [r0, #0]
 8012150:	8043      	strh	r3, [r0, #2]
 8012152:	8083      	strh	r3, [r0, #4]
 8012154:	80c3      	strh	r3, [r0, #6]
 8012156:	4620      	mov	r0, r4
 8012158:	bd10      	pop	{r4, pc}
 801215a:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 801215e:	b11b      	cbz	r3, 8012168 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012160:	3130      	adds	r1, #48	@ 0x30
 8012162:	f005 f9fb 	bl	801755c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012166:	e7f6      	b.n	8012156 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012168:	312e      	adds	r1, #46	@ 0x2e
 801216a:	e7fa      	b.n	8012162 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0801216c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801216c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012170:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8012174:	b08a      	sub	sp, #40	@ 0x28
 8012176:	4604      	mov	r4, r0
 8012178:	4688      	mov	r8, r1
 801217a:	2b00      	cmp	r3, #0
 801217c:	d066      	beq.n	801224c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801217e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8012180:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012184:	a805      	add	r0, sp, #20
 8012186:	f005 f981 	bl	801748c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801218a:	4607      	mov	r7, r0
 801218c:	a805      	add	r0, sp, #20
 801218e:	f005 f9b1 	bl	80174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012192:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012196:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801219a:	4432      	add	r2, r6
 801219c:	b292      	uxth	r2, r2
 801219e:	2300      	movs	r3, #0
 80121a0:	fa0f fc82 	sxth.w	ip, r2
 80121a4:	459c      	cmp	ip, r3
 80121a6:	9306      	str	r3, [sp, #24]
 80121a8:	dd52      	ble.n	8012250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121aa:	42b7      	cmp	r7, r6
 80121ac:	dd50      	ble.n	8012250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121ae:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80121b2:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80121b6:	442b      	add	r3, r5
 80121b8:	b29b      	uxth	r3, r3
 80121ba:	b219      	sxth	r1, r3
 80121bc:	2900      	cmp	r1, #0
 80121be:	dd47      	ble.n	8012250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121c0:	42a8      	cmp	r0, r5
 80121c2:	dd45      	ble.n	8012250 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121c4:	4567      	cmp	r7, ip
 80121c6:	bfb8      	it	lt
 80121c8:	b2ba      	uxthlt	r2, r7
 80121ca:	4288      	cmp	r0, r1
 80121cc:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80121d0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80121d4:	bfb8      	it	lt
 80121d6:	b283      	uxthlt	r3, r0
 80121d8:	1b92      	subs	r2, r2, r6
 80121da:	1b5b      	subs	r3, r3, r5
 80121dc:	f8ad 201c 	strh.w	r2, [sp, #28]
 80121e0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80121e4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80121e8:	f8ad 501a 	strh.w	r5, [sp, #26]
 80121ec:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80121f0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80121f4:	429a      	cmp	r2, r3
 80121f6:	d026      	beq.n	8012246 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80121f8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80121fc:	2b00      	cmp	r3, #0
 80121fe:	dd22      	ble.n	8012246 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012200:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012204:	2b00      	cmp	r3, #0
 8012206:	dd1e      	ble.n	8012246 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012208:	2300      	movs	r3, #0
 801220a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801220e:	6823      	ldr	r3, [r4, #0]
 8012210:	a908      	add	r1, sp, #32
 8012212:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012214:	4620      	mov	r0, r4
 8012216:	4798      	blx	r3
 8012218:	4b0f      	ldr	r3, [pc, #60]	@ (8012258 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801221a:	681b      	ldr	r3, [r3, #0]
 801221c:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012220:	b10a      	cbz	r2, 8012226 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012222:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8012224:	b900      	cbnz	r0, 8012228 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012226:	6898      	ldr	r0, [r3, #8]
 8012228:	6801      	ldr	r1, [r0, #0]
 801222a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801222e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012232:	2501      	movs	r5, #1
 8012234:	9502      	str	r5, [sp, #8]
 8012236:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 801223a:	9401      	str	r4, [sp, #4]
 801223c:	ac06      	add	r4, sp, #24
 801223e:	9400      	str	r4, [sp, #0]
 8012240:	688c      	ldr	r4, [r1, #8]
 8012242:	a905      	add	r1, sp, #20
 8012244:	47a0      	blx	r4
 8012246:	b00a      	add	sp, #40	@ 0x28
 8012248:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801224c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801224e:	e797      	b.n	8012180 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012250:	2300      	movs	r3, #0
 8012252:	9307      	str	r3, [sp, #28]
 8012254:	e7ca      	b.n	80121ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012256:	bf00      	nop
 8012258:	20002f54 	.word	0x20002f54

0801225c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801225c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012260:	4b2f      	ldr	r3, [pc, #188]	@ (8012320 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012262:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8012264:	881b      	ldrh	r3, [r3, #0]
 8012266:	4293      	cmp	r3, r2
 8012268:	b08d      	sub	sp, #52	@ 0x34
 801226a:	4604      	mov	r4, r0
 801226c:	460f      	mov	r7, r1
 801226e:	d954      	bls.n	801231a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012270:	4b2c      	ldr	r3, [pc, #176]	@ (8012324 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012272:	6819      	ldr	r1, [r3, #0]
 8012274:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012278:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801227c:	4a2a      	ldr	r2, [pc, #168]	@ (8012328 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801227e:	6812      	ldr	r2, [r2, #0]
 8012280:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012284:	2900      	cmp	r1, #0
 8012286:	d048      	beq.n	801231a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012288:	785a      	ldrb	r2, [r3, #1]
 801228a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 801228e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8012292:	4b26      	ldr	r3, [pc, #152]	@ (801232c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012294:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8012298:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 801229c:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 80122a0:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 80122a2:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 80122a6:	9107      	str	r1, [sp, #28]
 80122a8:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80122ac:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80122b0:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 80122b4:	681a      	ldr	r2, [r3, #0]
 80122b6:	f88d 8020 	strb.w	r8, [sp, #32]
 80122ba:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 80122be:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 80122c2:	9609      	str	r6, [sp, #36]	@ 0x24
 80122c4:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 80122c8:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 80122cc:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 80122d0:	b10b      	cbz	r3, 80122d6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80122d2:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 80122d4:	b905      	cbnz	r5, 80122d8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80122d6:	6895      	ldr	r5, [r2, #8]
 80122d8:	ae05      	add	r6, sp, #20
 80122da:	4621      	mov	r1, r4
 80122dc:	4630      	mov	r0, r6
 80122de:	f002 ff61 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122e2:	4b13      	ldr	r3, [pc, #76]	@ (8012330 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80122e4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80122e6:	6818      	ldr	r0, [r3, #0]
 80122e8:	f7fb fa90 	bl	800d80c <_ZNK8touchgfx5Texts7getTextEt>
 80122ec:	6823      	ldr	r3, [r4, #0]
 80122ee:	4680      	mov	r8, r0
 80122f0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80122f2:	4620      	mov	r0, r4
 80122f4:	4798      	blx	r3
 80122f6:	6823      	ldr	r3, [r4, #0]
 80122f8:	4681      	mov	r9, r0
 80122fa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80122fe:	4620      	mov	r0, r4
 8012300:	4798      	blx	r3
 8012302:	e9cd 9002 	strd	r9, r0, [sp, #8]
 8012306:	ab07      	add	r3, sp, #28
 8012308:	9300      	str	r3, [sp, #0]
 801230a:	f8cd 8004 	str.w	r8, [sp, #4]
 801230e:	463b      	mov	r3, r7
 8012310:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012314:	4628      	mov	r0, r5
 8012316:	f7fb fa0a 	bl	800d72e <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801231a:	b00d      	add	sp, #52	@ 0x34
 801231c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012320:	20002fa8 	.word	0x20002fa8
 8012324:	20002fa4 	.word	0x20002fa4
 8012328:	20002fac 	.word	0x20002fac
 801232c:	20002f54 	.word	0x20002f54
 8012330:	20002fb0 	.word	0x20002fb0

08012334 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8012334:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012338:	4604      	mov	r4, r0
 801233a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801233c:	8962      	ldrh	r2, [r4, #10]
 801233e:	b218      	sxth	r0, r3
 8012340:	460e      	mov	r6, r1
 8012342:	005b      	lsls	r3, r3, #1
 8012344:	8921      	ldrh	r1, [r4, #8]
 8012346:	b29b      	uxth	r3, r3
 8012348:	1ac9      	subs	r1, r1, r3
 801234a:	b08e      	sub	sp, #56	@ 0x38
 801234c:	b209      	sxth	r1, r1
 801234e:	1ad3      	subs	r3, r2, r3
 8012350:	b21b      	sxth	r3, r3
 8012352:	2900      	cmp	r1, #0
 8012354:	f8ad 0000 	strh.w	r0, [sp]
 8012358:	f8ad 0002 	strh.w	r0, [sp, #2]
 801235c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012360:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012364:	dd5e      	ble.n	8012424 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8012366:	2b00      	cmp	r3, #0
 8012368:	dd5c      	ble.n	8012424 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801236a:	6830      	ldr	r0, [r6, #0]
 801236c:	6871      	ldr	r1, [r6, #4]
 801236e:	ab02      	add	r3, sp, #8
 8012370:	c303      	stmia	r3!, {r0, r1}
 8012372:	4669      	mov	r1, sp
 8012374:	a802      	add	r0, sp, #8
 8012376:	f7fe fab1 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 801237a:	4620      	mov	r0, r4
 801237c:	a902      	add	r1, sp, #8
 801237e:	f7ff fe9b 	bl	80120b8 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8012382:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8012384:	2800      	cmp	r0, #0
 8012386:	d05f      	beq.n	8012448 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012388:	8963      	ldrh	r3, [r4, #10]
 801238a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801238e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012392:	1a1f      	subs	r7, r3, r0
 8012394:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8012398:	b202      	sxth	r2, r0
 801239a:	2500      	movs	r5, #0
 801239c:	b21b      	sxth	r3, r3
 801239e:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 80123a2:	1a09      	subs	r1, r1, r0
 80123a4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80123a8:	9506      	str	r5, [sp, #24]
 80123aa:	f8ad 201e 	strh.w	r2, [sp, #30]
 80123ae:	f8ad 5020 	strh.w	r5, [sp, #32]
 80123b2:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 80123b6:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 80123ba:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80123be:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80123c2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80123c6:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80123ca:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80123ce:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80123d2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80123d6:	af04      	add	r7, sp, #16
 80123d8:	ab06      	add	r3, sp, #24
 80123da:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80123de:	e893 0003 	ldmia.w	r3, {r0, r1}
 80123e2:	e887 0003 	stmia.w	r7, {r0, r1}
 80123e6:	4631      	mov	r1, r6
 80123e8:	4638      	mov	r0, r7
 80123ea:	f7fe fa77 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 80123ee:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80123f2:	2b00      	cmp	r3, #0
 80123f4:	dd12      	ble.n	801241c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80123f6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80123fa:	2b00      	cmp	r3, #0
 80123fc:	dd0e      	ble.n	801241c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80123fe:	6823      	ldr	r3, [r4, #0]
 8012400:	4639      	mov	r1, r7
 8012402:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012404:	4620      	mov	r0, r4
 8012406:	4798      	blx	r3
 8012408:	f7f6 f86c 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 801240c:	6803      	ldr	r3, [r0, #0]
 801240e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012410:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8012414:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012418:	4639      	mov	r1, r7
 801241a:	47c0      	blx	r8
 801241c:	3501      	adds	r5, #1
 801241e:	2d04      	cmp	r5, #4
 8012420:	d1da      	bne.n	80123d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8012422:	e011      	b.n	8012448 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012424:	6830      	ldr	r0, [r6, #0]
 8012426:	6871      	ldr	r1, [r6, #4]
 8012428:	ab06      	add	r3, sp, #24
 801242a:	c303      	stmia	r3!, {r0, r1}
 801242c:	6823      	ldr	r3, [r4, #0]
 801242e:	a906      	add	r1, sp, #24
 8012430:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012432:	4620      	mov	r0, r4
 8012434:	4798      	blx	r3
 8012436:	f7f6 f855 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 801243a:	6803      	ldr	r3, [r0, #0]
 801243c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 801243e:	6a1d      	ldr	r5, [r3, #32]
 8012440:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012444:	a906      	add	r1, sp, #24
 8012446:	47a8      	blx	r5
 8012448:	b00e      	add	sp, #56	@ 0x38
 801244a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801244e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 801244e:	4770      	bx	lr

08012450 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012450:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012454:	461c      	mov	r4, r3
 8012456:	4606      	mov	r6, r0
 8012458:	9f06      	ldr	r7, [sp, #24]
 801245a:	f7ff fe55 	bl	8012108 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 801245e:	8823      	ldrh	r3, [r4, #0]
 8012460:	86b3      	strh	r3, [r6, #52]	@ 0x34
 8012462:	883b      	ldrh	r3, [r7, #0]
 8012464:	86f3      	strh	r3, [r6, #54]	@ 0x36
 8012466:	4638      	mov	r0, r7
 8012468:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 801246c:	f005 f80e 	bl	801748c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012470:	f04f 0802 	mov.w	r8, #2
 8012474:	fb95 f5f8 	sdiv	r5, r5, r8
 8012478:	b2ad      	uxth	r5, r5
 801247a:	fb90 f0f8 	sdiv	r0, r0, r8
 801247e:	1a2d      	subs	r5, r5, r0
 8012480:	8735      	strh	r5, [r6, #56]	@ 0x38
 8012482:	4638      	mov	r0, r7
 8012484:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8012488:	fb94 f4f8 	sdiv	r4, r4, r8
 801248c:	f005 f832 	bl	80174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012490:	b2a4      	uxth	r4, r4
 8012492:	fb90 f0f8 	sdiv	r0, r0, r8
 8012496:	1a24      	subs	r4, r4, r0
 8012498:	8774      	strh	r4, [r6, #58]	@ 0x3a
 801249a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080124a0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 80124a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124a4:	4604      	mov	r4, r0
 80124a6:	b08c      	sub	sp, #48	@ 0x30
 80124a8:	460d      	mov	r5, r1
 80124aa:	f7ff fe5f 	bl	801216c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80124ae:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 80124b2:	2b00      	cmp	r3, #0
 80124b4:	d05d      	beq.n	8012572 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 80124b6:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80124b8:	f8ad 3014 	strh.w	r3, [sp, #20]
 80124bc:	a805      	add	r0, sp, #20
 80124be:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 80124c2:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 80124c6:	f004 ffe1 	bl	801748c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80124ca:	4606      	mov	r6, r0
 80124cc:	a805      	add	r0, sp, #20
 80124ce:	f005 f811 	bl	80174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80124d2:	6869      	ldr	r1, [r5, #4]
 80124d4:	f8ad 001e 	strh.w	r0, [sp, #30]
 80124d8:	6828      	ldr	r0, [r5, #0]
 80124da:	f8ad 8018 	strh.w	r8, [sp, #24]
 80124de:	ab08      	add	r3, sp, #32
 80124e0:	ad08      	add	r5, sp, #32
 80124e2:	c303      	stmia	r3!, {r0, r1}
 80124e4:	a906      	add	r1, sp, #24
 80124e6:	4628      	mov	r0, r5
 80124e8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80124ec:	f8ad 601c 	strh.w	r6, [sp, #28]
 80124f0:	f7fe f9f4 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 80124f4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80124f8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80124fc:	429a      	cmp	r2, r3
 80124fe:	d035      	beq.n	801256c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012500:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8012504:	2b00      	cmp	r3, #0
 8012506:	dd31      	ble.n	801256c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012508:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 801250c:	2b00      	cmp	r3, #0
 801250e:	dd2d      	ble.n	801256c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 8012510:	2300      	movs	r3, #0
 8012512:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 8012516:	6823      	ldr	r3, [r4, #0]
 8012518:	a90a      	add	r1, sp, #40	@ 0x28
 801251a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801251c:	4620      	mov	r0, r4
 801251e:	4798      	blx	r3
 8012520:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012524:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 8012526:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801252a:	1a9b      	subs	r3, r3, r2
 801252c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012530:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 8012532:	1ac9      	subs	r1, r1, r3
 8012534:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 8012538:	490f      	ldr	r1, [pc, #60]	@ (8012578 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801253a:	6809      	ldr	r1, [r1, #0]
 801253c:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 8012540:	b108      	cbz	r0, 8012546 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012542:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 8012544:	b900      	cbnz	r0, 8012548 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8012546:	6888      	ldr	r0, [r1, #8]
 8012548:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 801254c:	440b      	add	r3, r1
 801254e:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8012552:	2601      	movs	r6, #1
 8012554:	440a      	add	r2, r1
 8012556:	6801      	ldr	r1, [r0, #0]
 8012558:	9602      	str	r6, [sp, #8]
 801255a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 801255e:	e9cd 5400 	strd	r5, r4, [sp]
 8012562:	b21b      	sxth	r3, r3
 8012564:	688c      	ldr	r4, [r1, #8]
 8012566:	b212      	sxth	r2, r2
 8012568:	a905      	add	r1, sp, #20
 801256a:	47a0      	blx	r4
 801256c:	b00c      	add	sp, #48	@ 0x30
 801256e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012572:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8012574:	e7a0      	b.n	80124b8 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8012576:	bf00      	nop
 8012578:	20002f54 	.word	0x20002f54

0801257c <_ZN8touchgfx14ButtonWithIconC1Ev>:
 801257c:	b510      	push	{r4, lr}
 801257e:	2101      	movs	r1, #1
 8012580:	2200      	movs	r2, #0
 8012582:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8012586:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 801258a:	4c0e      	ldr	r4, [pc, #56]	@ (80125c4 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 801258c:	8082      	strh	r2, [r0, #4]
 801258e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8012592:	80c2      	strh	r2, [r0, #6]
 8012594:	8102      	strh	r2, [r0, #8]
 8012596:	8142      	strh	r2, [r0, #10]
 8012598:	8182      	strh	r2, [r0, #12]
 801259a:	81c2      	strh	r2, [r0, #14]
 801259c:	8202      	strh	r2, [r0, #16]
 801259e:	8242      	strh	r2, [r0, #18]
 80125a0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80125a4:	61c2      	str	r2, [r0, #28]
 80125a6:	8402      	strh	r2, [r0, #32]
 80125a8:	8442      	strh	r2, [r0, #34]	@ 0x22
 80125aa:	6282      	str	r2, [r0, #40]	@ 0x28
 80125ac:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 80125b0:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 80125b2:	8601      	strh	r1, [r0, #48]	@ 0x30
 80125b4:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 80125b8:	6004      	str	r4, [r0, #0]
 80125ba:	8681      	strh	r1, [r0, #52]	@ 0x34
 80125bc:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80125be:	8702      	strh	r2, [r0, #56]	@ 0x38
 80125c0:	8742      	strh	r2, [r0, #58]	@ 0x3a
 80125c2:	bd10      	pop	{r4, pc}
 80125c4:	0802930c 	.word	0x0802930c

080125c8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80125c8:	b510      	push	{r4, lr}
 80125ca:	6803      	ldr	r3, [r0, #0]
 80125cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80125ce:	460c      	mov	r4, r1
 80125d0:	4798      	blx	r3
 80125d2:	1b03      	subs	r3, r0, r4
 80125d4:	4258      	negs	r0, r3
 80125d6:	4158      	adcs	r0, r3
 80125d8:	bd10      	pop	{r4, pc}
	...

080125dc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80125dc:	4b01      	ldr	r3, [pc, #4]	@ (80125e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80125de:	6019      	str	r1, [r3, #0]
 80125e0:	4770      	bx	lr
 80125e2:	bf00      	nop
 80125e4:	20002f5c 	.word	0x20002f5c

080125e8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80125e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125ec:	4696      	mov	lr, r2
 80125ee:	4605      	mov	r5, r0
 80125f0:	4614      	mov	r4, r2
 80125f2:	460e      	mov	r6, r1
 80125f4:	461f      	mov	r7, r3
 80125f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80125fa:	b097      	sub	sp, #92	@ 0x5c
 80125fc:	f10d 0c1c 	add.w	ip, sp, #28
 8012600:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012604:	f8de 3000 	ldr.w	r3, [lr]
 8012608:	f8cc 3000 	str.w	r3, [ip]
 801260c:	f104 0e14 	add.w	lr, r4, #20
 8012610:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012614:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012618:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801261c:	f8de 3000 	ldr.w	r3, [lr]
 8012620:	f8cc 3000 	str.w	r3, [ip]
 8012624:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012628:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801262c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012630:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012634:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8012638:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 801263c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8012640:	f8de 3000 	ldr.w	r3, [lr]
 8012644:	f8cc 3000 	str.w	r3, [ip]
 8012648:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801264a:	682b      	ldr	r3, [r5, #0]
 801264c:	9201      	str	r2, [sp, #4]
 801264e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012652:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012654:	9200      	str	r2, [sp, #0]
 8012656:	f8cd 8008 	str.w	r8, [sp, #8]
 801265a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 801265e:	aa07      	add	r2, sp, #28
 8012660:	463b      	mov	r3, r7
 8012662:	4631      	mov	r1, r6
 8012664:	4628      	mov	r0, r5
 8012666:	47d8      	blx	fp
 8012668:	46a6      	mov	lr, r4
 801266a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801266e:	f10d 0c1c 	add.w	ip, sp, #28
 8012672:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012676:	f8de 3000 	ldr.w	r3, [lr]
 801267a:	f8cc 3000 	str.w	r3, [ip]
 801267e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012682:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012686:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801268a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801268e:	343c      	adds	r4, #60	@ 0x3c
 8012690:	f8de 3000 	ldr.w	r3, [lr]
 8012694:	f8cc 3000 	str.w	r3, [ip]
 8012698:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801269a:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 801269e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80126a2:	6823      	ldr	r3, [r4, #0]
 80126a4:	f8cc 3000 	str.w	r3, [ip]
 80126a8:	682b      	ldr	r3, [r5, #0]
 80126aa:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80126ae:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80126b0:	9201      	str	r2, [sp, #4]
 80126b2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80126b4:	9200      	str	r2, [sp, #0]
 80126b6:	f8cd 8008 	str.w	r8, [sp, #8]
 80126ba:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80126bc:	aa07      	add	r2, sp, #28
 80126be:	463b      	mov	r3, r7
 80126c0:	4631      	mov	r1, r6
 80126c2:	4628      	mov	r0, r5
 80126c4:	47a0      	blx	r4
 80126c6:	b017      	add	sp, #92	@ 0x5c
 80126c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080126cc <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80126cc:	2000      	movs	r0, #0
 80126ce:	4770      	bx	lr

080126d0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80126d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126d4:	b08d      	sub	sp, #52	@ 0x34
 80126d6:	4688      	mov	r8, r1
 80126d8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80126da:	f8d3 c000 	ldr.w	ip, [r3]
 80126de:	680f      	ldr	r7, [r1, #0]
 80126e0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80126e4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80126e8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80126ec:	edd3 6a07 	vldr	s13, [r3, #28]
 80126f0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80126f2:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80126f6:	f9b1 9000 	ldrsh.w	r9, [r1]
 80126fa:	f9ba 1000 	ldrsh.w	r1, [sl]
 80126fe:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8012702:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8012706:	eba7 070c 	sub.w	r7, r7, ip
 801270a:	42bc      	cmp	r4, r7
 801270c:	bfa8      	it	ge
 801270e:	463c      	movge	r4, r7
 8012710:	ee07 4a90 	vmov	s15, r4
 8012714:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012718:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 801271c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8012720:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012724:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012728:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801272c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8012730:	eb09 0e0c 	add.w	lr, r9, ip
 8012734:	4571      	cmp	r1, lr
 8012736:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801273a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801273e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8012742:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012746:	ee22 2a07 	vmul.f32	s4, s4, s14
 801274a:	f340 808d 	ble.w	8012868 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801274e:	eba1 060e 	sub.w	r6, r1, lr
 8012752:	fb96 f5f4 	sdiv	r5, r6, r4
 8012756:	ee07 5a10 	vmov	s14, r5
 801275a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801275e:	2d00      	cmp	r5, #0
 8012760:	fb04 6615 	mls	r6, r4, r5, r6
 8012764:	eea7 0a04 	vfma.f32	s0, s14, s8
 8012768:	eee7 0a24 	vfma.f32	s1, s14, s9
 801276c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8012770:	dd13      	ble.n	801279a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8012772:	ee70 6a44 	vsub.f32	s13, s0, s8
 8012776:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801277a:	eef5 6a40 	vcmp.f32	s13, #0.0
 801277e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012782:	bf18      	it	ne
 8012784:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8012788:	ee31 2a45 	vsub.f32	s4, s2, s10
 801278c:	bf08      	it	eq
 801278e:	eeb0 7a67 	vmoveq.f32	s14, s15
 8012792:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012796:	ee22 2a07 	vmul.f32	s4, s4, s14
 801279a:	fb05 f204 	mul.w	r2, r5, r4
 801279e:	1abf      	subs	r7, r7, r2
 80127a0:	4494      	add	ip, r2
 80127a2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80127a6:	4411      	add	r1, r2
 80127a8:	eb09 020c 	add.w	r2, r9, ip
 80127ac:	443a      	add	r2, r7
 80127ae:	b209      	sxth	r1, r1
 80127b0:	428a      	cmp	r2, r1
 80127b2:	bfc4      	itt	gt
 80127b4:	eba1 0209 	subgt.w	r2, r1, r9
 80127b8:	eba2 070c 	subgt.w	r7, r2, ip
 80127bc:	2f00      	cmp	r7, #0
 80127be:	dd50      	ble.n	8012862 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80127c0:	fb97 f1f4 	sdiv	r1, r7, r4
 80127c4:	fb04 7211 	mls	r2, r4, r1, r7
 80127c8:	b90a      	cbnz	r2, 80127ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80127ca:	3901      	subs	r1, #1
 80127cc:	4622      	mov	r2, r4
 80127ce:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80127d2:	6840      	ldr	r0, [r0, #4]
 80127d4:	900b      	str	r0, [sp, #44]	@ 0x2c
 80127d6:	f8d0 a000 	ldr.w	sl, [r0]
 80127da:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80127dc:	9008      	str	r0, [sp, #32]
 80127de:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80127e2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80127e4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80127e8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80127ec:	695b      	ldr	r3, [r3, #20]
 80127ee:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80127f0:	445b      	add	r3, fp
 80127f2:	eef0 6a42 	vmov.f32	s13, s4
 80127f6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80127fa:	ee21 3a23 	vmul.f32	s6, s2, s7
 80127fe:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8012802:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012806:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801280a:	9307      	str	r3, [sp, #28]
 801280c:	ee17 7a90 	vmov	r7, s15
 8012810:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012814:	eeb0 7a61 	vmov.f32	s14, s3
 8012818:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801281c:	ee16 3a90 	vmov	r3, s13
 8012820:	fb97 f7f4 	sdiv	r7, r7, r4
 8012824:	ee17 ca90 	vmov	ip, s15
 8012828:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801282c:	fb9c fcf4 	sdiv	ip, ip, r4
 8012830:	fb0c 3306 	mla	r3, ip, r6, r3
 8012834:	9302      	str	r3, [sp, #8]
 8012836:	ee17 3a10 	vmov	r3, s14
 801283a:	44b6      	add	lr, r6
 801283c:	fb04 e505 	mla	r5, r4, r5, lr
 8012840:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012844:	fb07 3706 	mla	r7, r7, r6, r3
 8012848:	e9cd 8505 	strd	r8, r5, [sp, #20]
 801284c:	e9cd 4700 	strd	r4, r7, [sp]
 8012850:	2900      	cmp	r1, #0
 8012852:	bfcc      	ite	gt
 8012854:	46a1      	movgt	r9, r4
 8012856:	4691      	movle	r9, r2
 8012858:	eba9 0306 	sub.w	r3, r9, r6
 801285c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8012860:	47a0      	blx	r4
 8012862:	b00d      	add	sp, #52	@ 0x34
 8012864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012868:	2500      	movs	r5, #0
 801286a:	462e      	mov	r6, r5
 801286c:	e799      	b.n	80127a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08012870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012874:	b0db      	sub	sp, #364	@ 0x16c
 8012876:	461d      	mov	r5, r3
 8012878:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 801287c:	930a      	str	r3, [sp, #40]	@ 0x28
 801287e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8012882:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012884:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8012888:	9310      	str	r3, [sp, #64]	@ 0x40
 801288a:	6803      	ldr	r3, [r0, #0]
 801288c:	910f      	str	r1, [sp, #60]	@ 0x3c
 801288e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8012890:	9009      	str	r0, [sp, #36]	@ 0x24
 8012892:	4614      	mov	r4, r2
 8012894:	4629      	mov	r1, r5
 8012896:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801289a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 801289e:	47b8      	blx	r7
 80128a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80128a2:	6058      	str	r0, [r3, #4]
 80128a4:	2800      	cmp	r0, #0
 80128a6:	f000 83a1 	beq.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80128aa:	682b      	ldr	r3, [r5, #0]
 80128ac:	9314      	str	r3, [sp, #80]	@ 0x50
 80128ae:	686b      	ldr	r3, [r5, #4]
 80128b0:	9315      	str	r3, [sp, #84]	@ 0x54
 80128b2:	4bc4      	ldr	r3, [pc, #784]	@ (8012bc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80128b4:	ed94 7a02 	vldr	s14, [r4, #8]
 80128b8:	7819      	ldrb	r1, [r3, #0]
 80128ba:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80128be:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80128c2:	2900      	cmp	r1, #0
 80128c4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80128c8:	bf16      	itet	ne
 80128ca:	4619      	movne	r1, r3
 80128cc:	4611      	moveq	r1, r2
 80128ce:	4613      	movne	r3, r2
 80128d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128d4:	9116      	str	r1, [sp, #88]	@ 0x58
 80128d6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 80128da:	f240 8387 	bls.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80128de:	ed94 7a07 	vldr	s14, [r4, #28]
 80128e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80128e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128ea:	f240 837f 	bls.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80128ee:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80128f2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80128f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80128fa:	f240 8377 	bls.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80128fe:	6822      	ldr	r2, [r4, #0]
 8012900:	4bb1      	ldr	r3, [pc, #708]	@ (8012bc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8012902:	429a      	cmp	r2, r3
 8012904:	f2c0 8372 	blt.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012908:	49b0      	ldr	r1, [pc, #704]	@ (8012bcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801290a:	6963      	ldr	r3, [r4, #20]
 801290c:	428a      	cmp	r2, r1
 801290e:	f300 836d 	bgt.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012912:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012916:	48ae      	ldr	r0, [pc, #696]	@ (8012bd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012918:	33ff      	adds	r3, #255	@ 0xff
 801291a:	4283      	cmp	r3, r0
 801291c:	f200 8366 	bhi.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012920:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8012922:	4dac      	ldr	r5, [pc, #688]	@ (8012bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012924:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012928:	33ff      	adds	r3, #255	@ 0xff
 801292a:	42ab      	cmp	r3, r5
 801292c:	f200 835e 	bhi.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012930:	6862      	ldr	r2, [r4, #4]
 8012932:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8012936:	33ff      	adds	r3, #255	@ 0xff
 8012938:	4283      	cmp	r3, r0
 801293a:	f200 8357 	bhi.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801293e:	69a1      	ldr	r1, [r4, #24]
 8012940:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8012944:	33ff      	adds	r3, #255	@ 0xff
 8012946:	4283      	cmp	r3, r0
 8012948:	f200 8350 	bhi.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801294c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801294e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8012952:	30ff      	adds	r0, #255	@ 0xff
 8012954:	42a8      	cmp	r0, r5
 8012956:	f200 8349 	bhi.w	8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801295a:	428a      	cmp	r2, r1
 801295c:	f280 8110 	bge.w	8012b80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8012960:	429a      	cmp	r2, r3
 8012962:	f300 8119 	bgt.w	8012b98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012966:	4299      	cmp	r1, r3
 8012968:	f280 811d 	bge.w	8012ba6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 801296c:	2502      	movs	r5, #2
 801296e:	2701      	movs	r7, #1
 8012970:	46a9      	mov	r9, r5
 8012972:	46b8      	mov	r8, r7
 8012974:	f04f 0a00 	mov.w	sl, #0
 8012978:	4621      	mov	r1, r4
 801297a:	a849      	add	r0, sp, #292	@ 0x124
 801297c:	f003 fd3a 	bl	80163f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8012980:	4622      	mov	r2, r4
 8012982:	4653      	mov	r3, sl
 8012984:	a949      	add	r1, sp, #292	@ 0x124
 8012986:	f8cd 9000 	str.w	r9, [sp]
 801298a:	a819      	add	r0, sp, #100	@ 0x64
 801298c:	f003 fe62 	bl	8016654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012990:	4622      	mov	r2, r4
 8012992:	4653      	mov	r3, sl
 8012994:	a949      	add	r1, sp, #292	@ 0x124
 8012996:	f8cd 8000 	str.w	r8, [sp]
 801299a:	a829      	add	r0, sp, #164	@ 0xa4
 801299c:	f003 fe5a 	bl	8016654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80129a0:	4643      	mov	r3, r8
 80129a2:	4622      	mov	r2, r4
 80129a4:	a949      	add	r1, sp, #292	@ 0x124
 80129a6:	f8cd 9000 	str.w	r9, [sp]
 80129aa:	a839      	add	r0, sp, #228	@ 0xe4
 80129ac:	f003 fe52 	bl	8016654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80129b0:	42af      	cmp	r7, r5
 80129b2:	bfb5      	itete	lt
 80129b4:	2300      	movlt	r3, #0
 80129b6:	2301      	movge	r3, #1
 80129b8:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80129ba:	930e      	strge	r3, [sp, #56]	@ 0x38
 80129bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80129be:	e893 0003 	ldmia.w	r3, {r0, r1}
 80129c2:	af12      	add	r7, sp, #72	@ 0x48
 80129c4:	bfb9      	ittee	lt
 80129c6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80129c8:	ac19      	addlt	r4, sp, #100	@ 0x64
 80129ca:	ad19      	addge	r5, sp, #100	@ 0x64
 80129cc:	ac29      	addge	r4, sp, #164	@ 0xa4
 80129ce:	e887 0003 	stmia.w	r7, {r0, r1}
 80129d2:	b928      	cbnz	r0, 80129e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80129d4:	4b80      	ldr	r3, [pc, #512]	@ (8012bd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80129d6:	6818      	ldr	r0, [r3, #0]
 80129d8:	6803      	ldr	r3, [r0, #0]
 80129da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80129dc:	4798      	blx	r3
 80129de:	6038      	str	r0, [r7, #0]
 80129e0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80129e2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80129e6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80129ea:	930c      	str	r3, [sp, #48]	@ 0x30
 80129ec:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80129ee:	6963      	ldr	r3, [r4, #20]
 80129f0:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80129f2:	440b      	add	r3, r1
 80129f4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80129f8:	4408      	add	r0, r1
 80129fa:	b200      	sxth	r0, r0
 80129fc:	4283      	cmp	r3, r0
 80129fe:	900d      	str	r0, [sp, #52]	@ 0x34
 8012a00:	f280 80dd 	bge.w	8012bbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012a04:	428b      	cmp	r3, r1
 8012a06:	da08      	bge.n	8012a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012a08:	2a00      	cmp	r2, #0
 8012a0a:	dd06      	ble.n	8012a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012a0c:	1acb      	subs	r3, r1, r3
 8012a0e:	429a      	cmp	r2, r3
 8012a10:	f2c0 80e4 	blt.w	8012bdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012a14:	2b00      	cmp	r3, #0
 8012a16:	f300 80e2 	bgt.w	8012bde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012a1a:	6967      	ldr	r7, [r4, #20]
 8012a1c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012a1e:	443b      	add	r3, r7
 8012a20:	461f      	mov	r7, r3
 8012a22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012a24:	1bdf      	subs	r7, r3, r7
 8012a26:	4297      	cmp	r7, r2
 8012a28:	bfa8      	it	ge
 8012a2a:	4617      	movge	r7, r2
 8012a2c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8012a30:	2f00      	cmp	r7, #0
 8012a32:	f340 8166 	ble.w	8012d02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012a36:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012a38:	6829      	ldr	r1, [r5, #0]
 8012a3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012a3e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012a42:	6820      	ldr	r0, [r4, #0]
 8012a44:	4411      	add	r1, r2
 8012a46:	4299      	cmp	r1, r3
 8012a48:	dd1a      	ble.n	8012a80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012a4a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012a4e:	440b      	add	r3, r1
 8012a50:	4402      	add	r2, r0
 8012a52:	b21b      	sxth	r3, r3
 8012a54:	429a      	cmp	r2, r3
 8012a56:	dc13      	bgt.n	8012a80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012a58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012a5a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012a5c:	681b      	ldr	r3, [r3, #0]
 8012a5e:	9206      	str	r2, [sp, #24]
 8012a60:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012a62:	9205      	str	r2, [sp, #20]
 8012a64:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012a66:	9500      	str	r5, [sp, #0]
 8012a68:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012a6c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8012a6e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012a70:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012a74:	a912      	add	r1, sp, #72	@ 0x48
 8012a76:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8012a7a:	aa49      	add	r2, sp, #292	@ 0x124
 8012a7c:	4623      	mov	r3, r4
 8012a7e:	47c8      	blx	r9
 8012a80:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012a84:	441a      	add	r2, r3
 8012a86:	6963      	ldr	r3, [r4, #20]
 8012a88:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012a8c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8012a90:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8012a94:	68a1      	ldr	r1, [r4, #8]
 8012a96:	ed94 6a08 	vldr	s12, [r4, #32]
 8012a9a:	6022      	str	r2, [r4, #0]
 8012a9c:	3301      	adds	r3, #1
 8012a9e:	6163      	str	r3, [r4, #20]
 8012aa0:	69a3      	ldr	r3, [r4, #24]
 8012aa2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012aa6:	3b01      	subs	r3, #1
 8012aa8:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8012aac:	61a3      	str	r3, [r4, #24]
 8012aae:	6923      	ldr	r3, [r4, #16]
 8012ab0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012ab4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012ab8:	edd4 6a07 	vldr	s13, [r4, #28]
 8012abc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012ac0:	440b      	add	r3, r1
 8012ac2:	68e1      	ldr	r1, [r4, #12]
 8012ac4:	6123      	str	r3, [r4, #16]
 8012ac6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012aca:	428b      	cmp	r3, r1
 8012acc:	edc4 6a07 	vstr	s13, [r4, #28]
 8012ad0:	db15      	blt.n	8012afe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8012ad2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8012ad6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012ada:	3201      	adds	r2, #1
 8012adc:	edc4 6a07 	vstr	s13, [r4, #28]
 8012ae0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8012ae4:	6022      	str	r2, [r4, #0]
 8012ae6:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012aea:	1a5b      	subs	r3, r3, r1
 8012aec:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012af0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8012af4:	6123      	str	r3, [r4, #16]
 8012af6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012afa:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012afe:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012b02:	441a      	add	r2, r3
 8012b04:	696b      	ldr	r3, [r5, #20]
 8012b06:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012b0a:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8012b0e:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8012b12:	68a9      	ldr	r1, [r5, #8]
 8012b14:	ed95 6a08 	vldr	s12, [r5, #32]
 8012b18:	602a      	str	r2, [r5, #0]
 8012b1a:	3301      	adds	r3, #1
 8012b1c:	616b      	str	r3, [r5, #20]
 8012b1e:	69ab      	ldr	r3, [r5, #24]
 8012b20:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012b24:	3b01      	subs	r3, #1
 8012b26:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8012b2a:	61ab      	str	r3, [r5, #24]
 8012b2c:	692b      	ldr	r3, [r5, #16]
 8012b2e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012b32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012b36:	edd5 6a07 	vldr	s13, [r5, #28]
 8012b3a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012b3e:	440b      	add	r3, r1
 8012b40:	68e9      	ldr	r1, [r5, #12]
 8012b42:	612b      	str	r3, [r5, #16]
 8012b44:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012b48:	428b      	cmp	r3, r1
 8012b4a:	edc5 6a07 	vstr	s13, [r5, #28]
 8012b4e:	db15      	blt.n	8012b7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8012b50:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8012b54:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012b58:	3201      	adds	r2, #1
 8012b5a:	edc5 6a07 	vstr	s13, [r5, #28]
 8012b5e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8012b62:	602a      	str	r2, [r5, #0]
 8012b64:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012b68:	1a5b      	subs	r3, r3, r1
 8012b6a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012b6e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8012b72:	612b      	str	r3, [r5, #16]
 8012b74:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012b78:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012b7c:	3f01      	subs	r7, #1
 8012b7e:	e757      	b.n	8012a30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8012b80:	4299      	cmp	r1, r3
 8012b82:	dc13      	bgt.n	8012bac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8012b84:	429a      	cmp	r2, r3
 8012b86:	da14      	bge.n	8012bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8012b88:	2502      	movs	r5, #2
 8012b8a:	2703      	movs	r7, #3
 8012b8c:	46a9      	mov	r9, r5
 8012b8e:	f04f 0800 	mov.w	r8, #0
 8012b92:	f04f 0a01 	mov.w	sl, #1
 8012b96:	e6ef      	b.n	8012978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012b98:	2501      	movs	r5, #1
 8012b9a:	2700      	movs	r7, #0
 8012b9c:	46a9      	mov	r9, r5
 8012b9e:	46b8      	mov	r8, r7
 8012ba0:	f04f 0a02 	mov.w	sl, #2
 8012ba4:	e6e8      	b.n	8012978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012ba6:	2501      	movs	r5, #1
 8012ba8:	2702      	movs	r7, #2
 8012baa:	e6e1      	b.n	8012970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8012bac:	2500      	movs	r5, #0
 8012bae:	2701      	movs	r7, #1
 8012bb0:	e7f4      	b.n	8012b9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8012bb2:	2702      	movs	r7, #2
 8012bb4:	2503      	movs	r5, #3
 8012bb6:	f04f 0900 	mov.w	r9, #0
 8012bba:	46b8      	mov	r8, r7
 8012bbc:	e7e9      	b.n	8012b92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8012bbe:	4613      	mov	r3, r2
 8012bc0:	e728      	b.n	8012a14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8012bc2:	bf00      	nop
 8012bc4:	20002f4c 	.word	0x20002f4c
 8012bc8:	fffd8f01 	.word	0xfffd8f01
 8012bcc:	00027100 	.word	0x00027100
 8012bd0:	0004e1ff 	.word	0x0004e1ff
 8012bd4:	0004e1fe 	.word	0x0004e1fe
 8012bd8:	20002f54 	.word	0x20002f54
 8012bdc:	4613      	mov	r3, r2
 8012bde:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8012be0:	9111      	str	r1, [sp, #68]	@ 0x44
 8012be2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8012be6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8012bea:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 8012bec:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8012bf0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8012bf4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8012bf8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8012bfc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8012c00:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8012c04:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8012c08:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8012c0c:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8012c10:	469e      	mov	lr, r3
 8012c12:	469c      	mov	ip, r3
 8012c14:	f04f 0900 	mov.w	r9, #0
 8012c18:	f1bc 0f00 	cmp.w	ip, #0
 8012c1c:	d147      	bne.n	8012cae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8012c1e:	eb03 0c07 	add.w	ip, r3, r7
 8012c22:	1ad7      	subs	r7, r2, r3
 8012c24:	f1b9 0f00 	cmp.w	r9, #0
 8012c28:	d009      	beq.n	8012c3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8012c2a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8012c2e:	9029      	str	r0, [sp, #164]	@ 0xa4
 8012c30:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8012c34:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8012c38:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8012c3c:	912d      	str	r1, [sp, #180]	@ 0xb4
 8012c3e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8012c40:	9111      	str	r1, [sp, #68]	@ 0x44
 8012c42:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8012c46:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8012c4a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8012c4e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8012c52:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8012c56:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8012c5a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8012c5e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8012c62:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8012c66:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8012c6a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8012c6e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8012c72:	f04f 0800 	mov.w	r8, #0
 8012c76:	f1be 0f00 	cmp.w	lr, #0
 8012c7a:	d031      	beq.n	8012ce0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8012c7c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8012c7e:	4431      	add	r1, r6
 8012c80:	4549      	cmp	r1, r9
 8012c82:	4450      	add	r0, sl
 8012c84:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012c88:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012c8c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012c90:	db08      	blt.n	8012ca4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8012c92:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012c96:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012c9a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012c9e:	3001      	adds	r0, #1
 8012ca0:	eba1 0109 	sub.w	r1, r1, r9
 8012ca4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012ca8:	f04f 0801 	mov.w	r8, #1
 8012cac:	e7e3      	b.n	8012c76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8012cae:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8012cb0:	4431      	add	r1, r6
 8012cb2:	4541      	cmp	r1, r8
 8012cb4:	4450      	add	r0, sl
 8012cb6:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012cba:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012cbe:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012cc2:	db08      	blt.n	8012cd6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8012cc4:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012cc8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012ccc:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012cd0:	3001      	adds	r0, #1
 8012cd2:	eba1 0108 	sub.w	r1, r1, r8
 8012cd6:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012cda:	f04f 0901 	mov.w	r9, #1
 8012cde:	e79b      	b.n	8012c18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8012ce0:	449c      	add	ip, r3
 8012ce2:	1aff      	subs	r7, r7, r3
 8012ce4:	f1b8 0f00 	cmp.w	r8, #0
 8012ce8:	d009      	beq.n	8012cfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8012cea:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8012cee:	9019      	str	r0, [sp, #100]	@ 0x64
 8012cf0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8012cf4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8012cf8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8012cfc:	911d      	str	r1, [sp, #116]	@ 0x74
 8012cfe:	1ad2      	subs	r2, r2, r3
 8012d00:	e68b      	b.n	8012a1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012d02:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012d04:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8012d06:	2b00      	cmp	r3, #0
 8012d08:	f000 80d1 	beq.w	8012eae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8012d0c:	ad19      	add	r5, sp, #100	@ 0x64
 8012d0e:	ac39      	add	r4, sp, #228	@ 0xe4
 8012d10:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012d12:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012d16:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012d1a:	930c      	str	r3, [sp, #48]	@ 0x30
 8012d1c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012d1e:	6963      	ldr	r3, [r4, #20]
 8012d20:	440b      	add	r3, r1
 8012d22:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012d26:	4408      	add	r0, r1
 8012d28:	b200      	sxth	r0, r0
 8012d2a:	4283      	cmp	r3, r0
 8012d2c:	900d      	str	r0, [sp, #52]	@ 0x34
 8012d2e:	f280 80c1 	bge.w	8012eb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8012d32:	428b      	cmp	r3, r1
 8012d34:	da08      	bge.n	8012d48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012d36:	2a00      	cmp	r2, #0
 8012d38:	dd06      	ble.n	8012d48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012d3a:	1acb      	subs	r3, r1, r3
 8012d3c:	429a      	cmp	r2, r3
 8012d3e:	f2c0 80bb 	blt.w	8012eb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8012d42:	2b00      	cmp	r3, #0
 8012d44:	f300 80b9 	bgt.w	8012eba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8012d48:	6967      	ldr	r7, [r4, #20]
 8012d4a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012d4c:	443b      	add	r3, r7
 8012d4e:	461f      	mov	r7, r3
 8012d50:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012d52:	1bdf      	subs	r7, r3, r7
 8012d54:	4297      	cmp	r7, r2
 8012d56:	bfa8      	it	ge
 8012d58:	4617      	movge	r7, r2
 8012d5a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8012d5e:	2f00      	cmp	r7, #0
 8012d60:	f340 813c 	ble.w	8012fdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8012d64:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012d66:	6829      	ldr	r1, [r5, #0]
 8012d68:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012d6c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012d70:	6820      	ldr	r0, [r4, #0]
 8012d72:	4411      	add	r1, r2
 8012d74:	4299      	cmp	r1, r3
 8012d76:	dd1a      	ble.n	8012dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012d78:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012d7c:	440b      	add	r3, r1
 8012d7e:	4402      	add	r2, r0
 8012d80:	b21b      	sxth	r3, r3
 8012d82:	429a      	cmp	r2, r3
 8012d84:	dc13      	bgt.n	8012dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8012d86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012d88:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012d8a:	681b      	ldr	r3, [r3, #0]
 8012d8c:	9206      	str	r2, [sp, #24]
 8012d8e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012d90:	9205      	str	r2, [sp, #20]
 8012d92:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012d94:	9500      	str	r5, [sp, #0]
 8012d96:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012d9a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8012d9c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012d9e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012da2:	a912      	add	r1, sp, #72	@ 0x48
 8012da4:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8012da8:	aa49      	add	r2, sp, #292	@ 0x124
 8012daa:	4623      	mov	r3, r4
 8012dac:	47c8      	blx	r9
 8012dae:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012db2:	441a      	add	r2, r3
 8012db4:	6963      	ldr	r3, [r4, #20]
 8012db6:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012dba:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8012dbe:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8012dc2:	68a1      	ldr	r1, [r4, #8]
 8012dc4:	ed94 6a08 	vldr	s12, [r4, #32]
 8012dc8:	6022      	str	r2, [r4, #0]
 8012dca:	3301      	adds	r3, #1
 8012dcc:	6163      	str	r3, [r4, #20]
 8012dce:	69a3      	ldr	r3, [r4, #24]
 8012dd0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012dd4:	3b01      	subs	r3, #1
 8012dd6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8012dda:	61a3      	str	r3, [r4, #24]
 8012ddc:	6923      	ldr	r3, [r4, #16]
 8012dde:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012de2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012de6:	edd4 6a07 	vldr	s13, [r4, #28]
 8012dea:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012dee:	440b      	add	r3, r1
 8012df0:	68e1      	ldr	r1, [r4, #12]
 8012df2:	6123      	str	r3, [r4, #16]
 8012df4:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012df8:	428b      	cmp	r3, r1
 8012dfa:	edc4 6a07 	vstr	s13, [r4, #28]
 8012dfe:	db15      	blt.n	8012e2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8012e00:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8012e04:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012e08:	3201      	adds	r2, #1
 8012e0a:	edc4 6a07 	vstr	s13, [r4, #28]
 8012e0e:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8012e12:	6022      	str	r2, [r4, #0]
 8012e14:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012e18:	1a5b      	subs	r3, r3, r1
 8012e1a:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012e1e:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8012e22:	6123      	str	r3, [r4, #16]
 8012e24:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012e28:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012e2c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012e30:	441a      	add	r2, r3
 8012e32:	696b      	ldr	r3, [r5, #20]
 8012e34:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012e38:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8012e3c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8012e40:	68a9      	ldr	r1, [r5, #8]
 8012e42:	ed95 6a08 	vldr	s12, [r5, #32]
 8012e46:	602a      	str	r2, [r5, #0]
 8012e48:	3301      	adds	r3, #1
 8012e4a:	616b      	str	r3, [r5, #20]
 8012e4c:	69ab      	ldr	r3, [r5, #24]
 8012e4e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012e52:	3b01      	subs	r3, #1
 8012e54:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8012e58:	61ab      	str	r3, [r5, #24]
 8012e5a:	692b      	ldr	r3, [r5, #16]
 8012e5c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012e60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012e64:	edd5 6a07 	vldr	s13, [r5, #28]
 8012e68:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012e6c:	440b      	add	r3, r1
 8012e6e:	68e9      	ldr	r1, [r5, #12]
 8012e70:	612b      	str	r3, [r5, #16]
 8012e72:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012e76:	428b      	cmp	r3, r1
 8012e78:	edc5 6a07 	vstr	s13, [r5, #28]
 8012e7c:	db15      	blt.n	8012eaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8012e7e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8012e82:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012e86:	3201      	adds	r2, #1
 8012e88:	edc5 6a07 	vstr	s13, [r5, #28]
 8012e8c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8012e90:	602a      	str	r2, [r5, #0]
 8012e92:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012e96:	1a5b      	subs	r3, r3, r1
 8012e98:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012e9c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8012ea0:	612b      	str	r3, [r5, #16]
 8012ea2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012ea6:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012eaa:	3f01      	subs	r7, #1
 8012eac:	e757      	b.n	8012d5e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8012eae:	ad39      	add	r5, sp, #228	@ 0xe4
 8012eb0:	ac19      	add	r4, sp, #100	@ 0x64
 8012eb2:	e72d      	b.n	8012d10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8012eb4:	4613      	mov	r3, r2
 8012eb6:	e744      	b.n	8012d42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8012eb8:	4613      	mov	r3, r2
 8012eba:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 8012ebe:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8012ec0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8012ec4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8012ec8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 8012ecc:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8012ed0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8012ed4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8012ed8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 8012edc:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8012ede:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8012ee2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8012ee6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 8012eea:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 8012eee:	960e      	str	r6, [sp, #56]	@ 0x38
 8012ef0:	469e      	mov	lr, r3
 8012ef2:	461f      	mov	r7, r3
 8012ef4:	f04f 0900 	mov.w	r9, #0
 8012ef8:	2f00      	cmp	r7, #0
 8012efa:	d146      	bne.n	8012f8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8012efc:	449c      	add	ip, r3
 8012efe:	1ad7      	subs	r7, r2, r3
 8012f00:	f1b9 0f00 	cmp.w	r9, #0
 8012f04:	d009      	beq.n	8012f1a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8012f06:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8012f0a:	9039      	str	r0, [sp, #228]	@ 0xe4
 8012f0c:	913d      	str	r1, [sp, #244]	@ 0xf4
 8012f0e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8012f12:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8012f16:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8012f1a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8012f1c:	910e      	str	r1, [sp, #56]	@ 0x38
 8012f1e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8012f22:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8012f26:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8012f2a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8012f2e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8012f32:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8012f36:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8012f3a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8012f3e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8012f42:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8012f46:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8012f4a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8012f4e:	f04f 0800 	mov.w	r8, #0
 8012f52:	f1be 0f00 	cmp.w	lr, #0
 8012f56:	d030      	beq.n	8012fba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8012f58:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8012f5a:	4431      	add	r1, r6
 8012f5c:	4549      	cmp	r1, r9
 8012f5e:	4450      	add	r0, sl
 8012f60:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012f64:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012f68:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012f6c:	db08      	blt.n	8012f80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8012f6e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012f72:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012f76:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012f7a:	3001      	adds	r0, #1
 8012f7c:	eba1 0109 	sub.w	r1, r1, r9
 8012f80:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012f84:	f04f 0801 	mov.w	r8, #1
 8012f88:	e7e3      	b.n	8012f52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8012f8a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8012f8c:	4431      	add	r1, r6
 8012f8e:	4541      	cmp	r1, r8
 8012f90:	4450      	add	r0, sl
 8012f92:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012f96:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012f9a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012f9e:	db08      	blt.n	8012fb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8012fa0:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012fa4:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012fa8:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012fac:	3001      	adds	r0, #1
 8012fae:	eba1 0108 	sub.w	r1, r1, r8
 8012fb2:	3f01      	subs	r7, #1
 8012fb4:	f04f 0901 	mov.w	r9, #1
 8012fb8:	e79e      	b.n	8012ef8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8012fba:	449c      	add	ip, r3
 8012fbc:	1aff      	subs	r7, r7, r3
 8012fbe:	f1b8 0f00 	cmp.w	r8, #0
 8012fc2:	d009      	beq.n	8012fd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8012fc4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8012fc8:	9019      	str	r0, [sp, #100]	@ 0x64
 8012fca:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8012fce:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8012fd2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8012fd6:	911d      	str	r1, [sp, #116]	@ 0x74
 8012fd8:	1ad2      	subs	r2, r2, r3
 8012fda:	e6b5      	b.n	8012d48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012fdc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012fde:	681b      	ldr	r3, [r3, #0]
 8012fe0:	b923      	cbnz	r3, 8012fec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012fe2:	4b04      	ldr	r3, [pc, #16]	@ (8012ff4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8012fe4:	6818      	ldr	r0, [r3, #0]
 8012fe6:	6803      	ldr	r3, [r0, #0]
 8012fe8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012fea:	4798      	blx	r3
 8012fec:	b05b      	add	sp, #364	@ 0x16c
 8012fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ff2:	bf00      	nop
 8012ff4:	20002f54 	.word	0x20002f54

08012ff8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8012ff8:	b570      	push	{r4, r5, r6, lr}
 8012ffa:	4604      	mov	r4, r0
 8012ffc:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013000:	9805      	ldr	r0, [sp, #20]
 8013002:	6061      	str	r1, [r4, #4]
 8013004:	2500      	movs	r5, #0
 8013006:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801300a:	8263      	strh	r3, [r4, #18]
 801300c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013010:	8025      	strh	r5, [r4, #0]
 8013012:	7221      	strb	r1, [r4, #8]
 8013014:	7266      	strb	r6, [r4, #9]
 8013016:	60e0      	str	r0, [r4, #12]
 8013018:	8222      	strh	r2, [r4, #16]
 801301a:	82a3      	strh	r3, [r4, #20]
 801301c:	82e5      	strh	r5, [r4, #22]
 801301e:	8325      	strh	r5, [r4, #24]
 8013020:	8365      	strh	r5, [r4, #26]
 8013022:	83a5      	strh	r5, [r4, #28]
 8013024:	83e5      	strh	r5, [r4, #30]
 8013026:	8425      	strh	r5, [r4, #32]
 8013028:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 801302c:	b32e      	cbz	r6, 801307a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801302e:	6803      	ldr	r3, [r0, #0]
 8013030:	695b      	ldr	r3, [r3, #20]
 8013032:	4798      	blx	r3
 8013034:	4606      	mov	r6, r0
 8013036:	b300      	cbz	r0, 801307a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013038:	68e0      	ldr	r0, [r4, #12]
 801303a:	6803      	ldr	r3, [r0, #0]
 801303c:	4631      	mov	r1, r6
 801303e:	68db      	ldr	r3, [r3, #12]
 8013040:	4798      	blx	r3
 8013042:	4605      	mov	r5, r0
 8013044:	b1c8      	cbz	r0, 801307a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013046:	7b43      	ldrb	r3, [r0, #13]
 8013048:	7a82      	ldrb	r2, [r0, #10]
 801304a:	005b      	lsls	r3, r3, #1
 801304c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013050:	4313      	orrs	r3, r2
 8013052:	8423      	strh	r3, [r4, #32]
 8013054:	7a63      	ldrb	r3, [r4, #9]
 8013056:	2b06      	cmp	r3, #6
 8013058:	d10f      	bne.n	801307a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801305a:	68e0      	ldr	r0, [r4, #12]
 801305c:	6803      	ldr	r3, [r0, #0]
 801305e:	462a      	mov	r2, r5
 8013060:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013062:	4631      	mov	r1, r6
 8013064:	4798      	blx	r3
 8013066:	7b6b      	ldrb	r3, [r5, #13]
 8013068:	005b      	lsls	r3, r3, #1
 801306a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801306e:	7aab      	ldrb	r3, [r5, #10]
 8013070:	4313      	orrs	r3, r2
 8013072:	4418      	add	r0, r3
 8013074:	8c23      	ldrh	r3, [r4, #32]
 8013076:	4418      	add	r0, r3
 8013078:	8420      	strh	r0, [r4, #32]
 801307a:	4620      	mov	r0, r4
 801307c:	bd70      	pop	{r4, r5, r6, pc}

0801307e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801307e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013082:	2400      	movs	r4, #0
 8013084:	b085      	sub	sp, #20
 8013086:	4681      	mov	r9, r0
 8013088:	4688      	mov	r8, r1
 801308a:	4692      	mov	sl, r2
 801308c:	469b      	mov	fp, r3
 801308e:	4627      	mov	r7, r4
 8013090:	4625      	mov	r5, r4
 8013092:	4626      	mov	r6, r4
 8013094:	4554      	cmp	r4, sl
 8013096:	da2a      	bge.n	80130ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013098:	2300      	movs	r3, #0
 801309a:	9303      	str	r3, [sp, #12]
 801309c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80130a0:	429d      	cmp	r5, r3
 80130a2:	d004      	beq.n	80130ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80130a4:	f242 030b 	movw	r3, #8203	@ 0x200b
 80130a8:	429d      	cmp	r5, r3
 80130aa:	bf18      	it	ne
 80130ac:	462f      	movne	r7, r5
 80130ae:	ab03      	add	r3, sp, #12
 80130b0:	4642      	mov	r2, r8
 80130b2:	4659      	mov	r1, fp
 80130b4:	4648      	mov	r0, r9
 80130b6:	f002 ffb3 	bl	8016020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80130ba:	4605      	mov	r5, r0
 80130bc:	b1b8      	cbz	r0, 80130ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80130be:	280a      	cmp	r0, #10
 80130c0:	d015      	beq.n	80130ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80130c2:	9a03      	ldr	r2, [sp, #12]
 80130c4:	b18a      	cbz	r2, 80130ea <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80130c6:	7b50      	ldrb	r0, [r2, #13]
 80130c8:	7a93      	ldrb	r3, [r2, #10]
 80130ca:	8895      	ldrh	r5, [r2, #4]
 80130cc:	0040      	lsls	r0, r0, #1
 80130ce:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80130d2:	4303      	orrs	r3, r0
 80130d4:	9301      	str	r3, [sp, #4]
 80130d6:	f8d8 3000 	ldr.w	r3, [r8]
 80130da:	4639      	mov	r1, r7
 80130dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80130de:	4640      	mov	r0, r8
 80130e0:	4798      	blx	r3
 80130e2:	9b01      	ldr	r3, [sp, #4]
 80130e4:	4418      	add	r0, r3
 80130e6:	4406      	add	r6, r0
 80130e8:	b2b6      	uxth	r6, r6
 80130ea:	3401      	adds	r4, #1
 80130ec:	e7d2      	b.n	8013094 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80130ee:	4630      	mov	r0, r6
 80130f0:	b005      	add	sp, #20
 80130f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080130f6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80130f6:	2a02      	cmp	r2, #2
 80130f8:	b530      	push	{r4, r5, lr}
 80130fa:	d011      	beq.n	8013120 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80130fc:	2a03      	cmp	r2, #3
 80130fe:	d01c      	beq.n	801313a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013100:	2a01      	cmp	r2, #1
 8013102:	d10c      	bne.n	801311e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013104:	888b      	ldrh	r3, [r1, #4]
 8013106:	8801      	ldrh	r1, [r0, #0]
 8013108:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801310c:	8844      	ldrh	r4, [r0, #2]
 801310e:	8004      	strh	r4, [r0, #0]
 8013110:	1a5b      	subs	r3, r3, r1
 8013112:	1a9b      	subs	r3, r3, r2
 8013114:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013118:	8043      	strh	r3, [r0, #2]
 801311a:	8081      	strh	r1, [r0, #4]
 801311c:	80c2      	strh	r2, [r0, #6]
 801311e:	bd30      	pop	{r4, r5, pc}
 8013120:	88cb      	ldrh	r3, [r1, #6]
 8013122:	8842      	ldrh	r2, [r0, #2]
 8013124:	1a9b      	subs	r3, r3, r2
 8013126:	88c2      	ldrh	r2, [r0, #6]
 8013128:	1a9b      	subs	r3, r3, r2
 801312a:	888a      	ldrh	r2, [r1, #4]
 801312c:	8801      	ldrh	r1, [r0, #0]
 801312e:	8043      	strh	r3, [r0, #2]
 8013130:	1a52      	subs	r2, r2, r1
 8013132:	8881      	ldrh	r1, [r0, #4]
 8013134:	1a52      	subs	r2, r2, r1
 8013136:	8002      	strh	r2, [r0, #0]
 8013138:	e7f1      	b.n	801311e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801313a:	88cb      	ldrh	r3, [r1, #6]
 801313c:	8841      	ldrh	r1, [r0, #2]
 801313e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013142:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013146:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801314a:	8045      	strh	r5, [r0, #2]
 801314c:	1a5b      	subs	r3, r3, r1
 801314e:	1a9b      	subs	r3, r3, r2
 8013150:	8003      	strh	r3, [r0, #0]
 8013152:	8082      	strh	r2, [r0, #4]
 8013154:	80c4      	strh	r4, [r0, #6]
 8013156:	e7e2      	b.n	801311e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013158 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801315c:	b09f      	sub	sp, #124	@ 0x7c
 801315e:	920f      	str	r2, [sp, #60]	@ 0x3c
 8013160:	9312      	str	r3, [sp, #72]	@ 0x48
 8013162:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013164:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013166:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8013168:	8812      	ldrh	r2, [r2, #0]
 801316a:	889b      	ldrh	r3, [r3, #4]
 801316c:	900e      	str	r0, [sp, #56]	@ 0x38
 801316e:	4413      	add	r3, r2
 8013170:	6828      	ldr	r0, [r5, #0]
 8013172:	9117      	str	r1, [sp, #92]	@ 0x5c
 8013174:	b21b      	sxth	r3, r3
 8013176:	9311      	str	r3, [sp, #68]	@ 0x44
 8013178:	6803      	ldr	r3, [r0, #0]
 801317a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 801317e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013180:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8013184:	4798      	blx	r3
 8013186:	682b      	ldr	r3, [r5, #0]
 8013188:	9013      	str	r0, [sp, #76]	@ 0x4c
 801318a:	7b1a      	ldrb	r2, [r3, #12]
 801318c:	7adb      	ldrb	r3, [r3, #11]
 801318e:	9215      	str	r2, [sp, #84]	@ 0x54
 8013190:	9316      	str	r3, [sp, #88]	@ 0x58
 8013192:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8013196:	2c00      	cmp	r4, #0
 8013198:	d067      	beq.n	801326a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801319a:	7c2b      	ldrb	r3, [r5, #16]
 801319c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801319e:	2b06      	cmp	r3, #6
 80131a0:	bf14      	ite	ne
 80131a2:	2301      	movne	r3, #1
 80131a4:	2302      	moveq	r3, #2
 80131a6:	4413      	add	r3, r2
 80131a8:	f04f 0900 	mov.w	r9, #0
 80131ac:	9310      	str	r3, [sp, #64]	@ 0x40
 80131ae:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 80131b2:	464c      	mov	r4, r9
 80131b4:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 80131b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80131ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80131bc:	4293      	cmp	r3, r2
 80131be:	f280 808b 	bge.w	80132d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80131c2:	2300      	movs	r3, #0
 80131c4:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 80131c8:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 80131cc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80131d0:	429c      	cmp	r4, r3
 80131d2:	d006      	beq.n	80131e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 80131d4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80131d6:	f242 020b 	movw	r2, #8203	@ 0x200b
 80131da:	4294      	cmp	r4, r2
 80131dc:	bf18      	it	ne
 80131de:	4623      	movne	r3, r4
 80131e0:	930c      	str	r3, [sp, #48]	@ 0x30
 80131e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80131e4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80131e6:	682a      	ldr	r2, [r5, #0]
 80131e8:	428b      	cmp	r3, r1
 80131ea:	db40      	blt.n	801326e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80131ec:	6813      	ldr	r3, [r2, #0]
 80131ee:	4610      	mov	r0, r2
 80131f0:	695b      	ldr	r3, [r3, #20]
 80131f2:	4798      	blx	r3
 80131f4:	4604      	mov	r4, r0
 80131f6:	6828      	ldr	r0, [r5, #0]
 80131f8:	6803      	ldr	r3, [r0, #0]
 80131fa:	aa1d      	add	r2, sp, #116	@ 0x74
 80131fc:	689f      	ldr	r7, [r3, #8]
 80131fe:	4621      	mov	r1, r4
 8013200:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013204:	47b8      	blx	r7
 8013206:	901c      	str	r0, [sp, #112]	@ 0x70
 8013208:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801320c:	429c      	cmp	r4, r3
 801320e:	f000 80ea 	beq.w	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013212:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013216:	429c      	cmp	r4, r3
 8013218:	f000 80e5 	beq.w	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801321c:	2c00      	cmp	r4, #0
 801321e:	f000 810c 	beq.w	801343a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8013222:	2c0a      	cmp	r4, #10
 8013224:	d05e      	beq.n	80132e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8013226:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013228:	b36a      	cbz	r2, 8013286 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801322a:	8894      	ldrh	r4, [r2, #4]
 801322c:	f1bb 0f00 	cmp.w	fp, #0
 8013230:	d03a      	beq.n	80132a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8013232:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013236:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801323a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801323e:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013242:	f1bb 0f01 	cmp.w	fp, #1
 8013246:	ea49 0903 	orr.w	r9, r9, r3
 801324a:	d133      	bne.n	80132b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 801324c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801324e:	eba6 0609 	sub.w	r6, r6, r9
 8013252:	2b00      	cmp	r3, #0
 8013254:	d14d      	bne.n	80132f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013256:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8013258:	eb09 0306 	add.w	r3, r9, r6
 801325c:	4413      	add	r3, r2
 801325e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013260:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013264:	4293      	cmp	r3, r2
 8013266:	da4e      	bge.n	8013306 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013268:	e036      	b.n	80132d8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801326a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801326c:	e79c      	b.n	80131a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 801326e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013272:	9301      	str	r3, [sp, #4]
 8013274:	ab1d      	add	r3, sp, #116	@ 0x74
 8013276:	9300      	str	r3, [sp, #0]
 8013278:	4659      	mov	r1, fp
 801327a:	ab1c      	add	r3, sp, #112	@ 0x70
 801327c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801327e:	f002 ff18 	bl	80160b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013282:	4604      	mov	r4, r0
 8013284:	e7c0      	b.n	8013208 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013286:	6828      	ldr	r0, [r5, #0]
 8013288:	6803      	ldr	r3, [r0, #0]
 801328a:	691b      	ldr	r3, [r3, #16]
 801328c:	4798      	blx	r3
 801328e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013292:	4298      	cmp	r0, r3
 8013294:	f000 80a7 	beq.w	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013298:	f242 030b 	movw	r3, #8203	@ 0x200b
 801329c:	4298      	cmp	r0, r3
 801329e:	f000 80a2 	beq.w	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80132a2:	f1bb 0f00 	cmp.w	fp, #0
 80132a6:	d100      	bne.n	80132aa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 80132a8:	444e      	add	r6, r9
 80132aa:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80132ac:	2a00      	cmp	r2, #0
 80132ae:	d1c0      	bne.n	8013232 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80132b0:	4691      	mov	r9, r2
 80132b2:	e098      	b.n	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80132b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80132b6:	2b00      	cmp	r3, #0
 80132b8:	f000 80c1 	beq.w	801343e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 80132bc:	f1bb 0f00 	cmp.w	fp, #0
 80132c0:	d117      	bne.n	80132f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80132c2:	6828      	ldr	r0, [r5, #0]
 80132c4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80132c6:	6803      	ldr	r3, [r0, #0]
 80132c8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80132ca:	4798      	blx	r3
 80132cc:	4406      	add	r6, r0
 80132ce:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80132d0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80132d2:	1af3      	subs	r3, r6, r3
 80132d4:	4293      	cmp	r3, r2
 80132d6:	dd16      	ble.n	8013306 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80132d8:	2c00      	cmp	r4, #0
 80132da:	f000 80ae 	beq.w	801343a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80132de:	2c0a      	cmp	r4, #10
 80132e0:	f040 809c 	bne.w	801341c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 80132e4:	240a      	movs	r4, #10
 80132e6:	fab4 f084 	clz	r0, r4
 80132ea:	0940      	lsrs	r0, r0, #5
 80132ec:	b01f      	add	sp, #124	@ 0x7c
 80132ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132f2:	6828      	ldr	r0, [r5, #0]
 80132f4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80132f6:	6803      	ldr	r3, [r0, #0]
 80132f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80132fa:	4798      	blx	r3
 80132fc:	f1bb 0f01 	cmp.w	fp, #1
 8013300:	eba6 0600 	sub.w	r6, r6, r0
 8013304:	d0a7      	beq.n	8013256 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013306:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8013308:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801330a:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801330e:	f9b3 8000 	ldrsh.w	r8, [r3]
 8013312:	7b43      	ldrb	r3, [r0, #13]
 8013314:	015b      	lsls	r3, r3, #5
 8013316:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801331a:	7983      	ldrb	r3, [r0, #6]
 801331c:	4431      	add	r1, r6
 801331e:	4313      	orrs	r3, r2
 8013320:	440b      	add	r3, r1
 8013322:	4543      	cmp	r3, r8
 8013324:	db5f      	blt.n	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013326:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8013328:	4299      	cmp	r1, r3
 801332a:	da5c      	bge.n	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801332c:	6828      	ldr	r0, [r5, #0]
 801332e:	6803      	ldr	r3, [r0, #0]
 8013330:	45b0      	cmp	r8, r6
 8013332:	bfc8      	it	gt
 8013334:	eba8 0806 	subgt.w	r8, r8, r6
 8013338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801333a:	bfcc      	ite	gt
 801333c:	fa1f f888 	uxthgt.w	r8, r8
 8013340:	f04f 0800 	movle.w	r8, #0
 8013344:	4798      	blx	r3
 8013346:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013348:	7b53      	ldrb	r3, [r2, #13]
 801334a:	00d9      	lsls	r1, r3, #3
 801334c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8013350:	7a11      	ldrb	r1, [r2, #8]
 8013352:	4339      	orrs	r1, r7
 8013354:	065f      	lsls	r7, r3, #25
 8013356:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8013358:	bf44      	itt	mi
 801335a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 801335e:	b209      	sxthmi	r1, r1
 8013360:	19c7      	adds	r7, r0, r7
 8013362:	1a7f      	subs	r7, r7, r1
 8013364:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8013366:	b2bf      	uxth	r7, r7
 8013368:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801336c:	fa0f fa87 	sxth.w	sl, r7
 8013370:	4551      	cmp	r1, sl
 8013372:	dd3c      	ble.n	80133ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8013374:	011b      	lsls	r3, r3, #4
 8013376:	79d0      	ldrb	r0, [r2, #7]
 8013378:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801337c:	4303      	orrs	r3, r0
 801337e:	449a      	add	sl, r3
 8013380:	4551      	cmp	r1, sl
 8013382:	dc30      	bgt.n	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013384:	1bcf      	subs	r7, r1, r7
 8013386:	b23f      	sxth	r7, r7
 8013388:	468a      	mov	sl, r1
 801338a:	9219      	str	r2, [sp, #100]	@ 0x64
 801338c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801338e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8013390:	6828      	ldr	r0, [r5, #0]
 8013392:	2a00      	cmp	r2, #0
 8013394:	d12d      	bne.n	80133f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8013396:	9318      	str	r3, [sp, #96]	@ 0x60
 8013398:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801339a:	6819      	ldr	r1, [r3, #0]
 801339c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801339e:	6801      	ldr	r1, [r0, #0]
 80133a0:	9314      	str	r3, [sp, #80]	@ 0x50
 80133a2:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 80133a4:	4788      	blx	r1
 80133a6:	79a9      	ldrb	r1, [r5, #6]
 80133a8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80133aa:	7ba9      	ldrb	r1, [r5, #14]
 80133ac:	910a      	str	r1, [sp, #40]	@ 0x28
 80133ae:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 80133b2:	9109      	str	r1, [sp, #36]	@ 0x24
 80133b4:	68a9      	ldr	r1, [r5, #8]
 80133b6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80133b8:	9306      	str	r3, [sp, #24]
 80133ba:	b2bf      	uxth	r7, r7
 80133bc:	e9cd 8702 	strd	r8, r7, [sp, #8]
 80133c0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80133c2:	9304      	str	r3, [sp, #16]
 80133c4:	44b0      	add	r8, r6
 80133c6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80133ca:	fa0f f388 	sxth.w	r3, r8
 80133ce:	9300      	str	r3, [sp, #0]
 80133d0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80133d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80133d4:	9205      	str	r2, [sp, #20]
 80133d6:	f8cd a004 	str.w	sl, [sp, #4]
 80133da:	681a      	ldr	r2, [r3, #0]
 80133dc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80133de:	685b      	ldr	r3, [r3, #4]
 80133e0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80133e2:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80133e4:	47b8      	blx	r7
 80133e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80133e8:	3301      	adds	r3, #1
 80133ea:	930d      	str	r3, [sp, #52]	@ 0x34
 80133ec:	e6e4      	b.n	80131b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 80133ee:	2700      	movs	r7, #0
 80133f0:	e7cb      	b.n	801338a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 80133f2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80133f4:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80133f8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80133fa:	f8dc 1000 	ldr.w	r1, [ip]
 80133fe:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8013402:	79aa      	ldrb	r2, [r5, #6]
 8013404:	9203      	str	r2, [sp, #12]
 8013406:	7baa      	ldrb	r2, [r5, #14]
 8013408:	9202      	str	r2, [sp, #8]
 801340a:	68aa      	ldr	r2, [r5, #8]
 801340c:	e9cd 0200 	strd	r0, r2, [sp]
 8013410:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013412:	688f      	ldr	r7, [r1, #8]
 8013414:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8013416:	4660      	mov	r0, ip
 8013418:	47b8      	blx	r7
 801341a:	e7e4      	b.n	80133e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801341c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801341e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8013420:	3501      	adds	r5, #1
 8013422:	429d      	cmp	r5, r3
 8013424:	f6bf af5f 	bge.w	80132e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8013428:	4659      	mov	r1, fp
 801342a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801342c:	f7fa f8ce 	bl	800d5cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013430:	4604      	mov	r4, r0
 8013432:	b110      	cbz	r0, 801343a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8013434:	280a      	cmp	r0, #10
 8013436:	d1f2      	bne.n	801341e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8013438:	e754      	b.n	80132e4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801343a:	2400      	movs	r4, #0
 801343c:	e753      	b.n	80132e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801343e:	f1bb 0f00 	cmp.w	fp, #0
 8013442:	f43f af44 	beq.w	80132ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8013446:	e75e      	b.n	8013306 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08013448 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013448:	b530      	push	{r4, r5, lr}
 801344a:	8ac4      	ldrh	r4, [r0, #22]
 801344c:	8b45      	ldrh	r5, [r0, #26]
 801344e:	8343      	strh	r3, [r0, #26]
 8013450:	442c      	add	r4, r5
 8013452:	1ae4      	subs	r4, r4, r3
 8013454:	82c4      	strh	r4, [r0, #22]
 8013456:	8b83      	ldrh	r3, [r0, #28]
 8013458:	8b04      	ldrh	r4, [r0, #24]
 801345a:	4422      	add	r2, r4
 801345c:	440c      	add	r4, r1
 801345e:	1a59      	subs	r1, r3, r1
 8013460:	83c2      	strh	r2, [r0, #30]
 8013462:	8304      	strh	r4, [r0, #24]
 8013464:	8381      	strh	r1, [r0, #28]
 8013466:	bd30      	pop	{r4, r5, pc}

08013468 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8013468:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801346c:	4604      	mov	r4, r0
 801346e:	8a47      	ldrh	r7, [r0, #18]
 8013470:	68c0      	ldr	r0, [r0, #12]
 8013472:	6803      	ldr	r3, [r0, #0]
 8013474:	b085      	sub	sp, #20
 8013476:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013478:	4798      	blx	r3
 801347a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801347e:	7a63      	ldrb	r3, [r4, #9]
 8013480:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013484:	42b7      	cmp	r7, r6
 8013486:	f103 33ff 	add.w	r3, r3, #4294967295
 801348a:	bfac      	ite	ge
 801348c:	f04f 0900 	movge.w	r9, #0
 8013490:	f04f 0901 	movlt.w	r9, #1
 8013494:	2b05      	cmp	r3, #5
 8013496:	d804      	bhi.n	80134a2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8013498:	e8df f003 	tbb	[pc, r3]
 801349c:	470e0854 	.word	0x470e0854
 80134a0:	4c4c      	.short	0x4c4c
 80134a2:	2500      	movs	r5, #0
 80134a4:	46a9      	mov	r9, r5
 80134a6:	462e      	mov	r6, r5
 80134a8:	462f      	mov	r7, r5
 80134aa:	e00d      	b.n	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80134ac:	42b7      	cmp	r7, r6
 80134ae:	bfb4      	ite	lt
 80134b0:	2600      	movlt	r6, #0
 80134b2:	2601      	movge	r6, #1
 80134b4:	2500      	movs	r5, #0
 80134b6:	e7f7      	b.n	80134a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80134b8:	42b7      	cmp	r7, r6
 80134ba:	464d      	mov	r5, r9
 80134bc:	f04f 0900 	mov.w	r9, #0
 80134c0:	bfb4      	ite	lt
 80134c2:	2600      	movlt	r6, #0
 80134c4:	2601      	movge	r6, #1
 80134c6:	464f      	mov	r7, r9
 80134c8:	f04f 0800 	mov.w	r8, #0
 80134cc:	f8a4 8016 	strh.w	r8, [r4, #22]
 80134d0:	f8a4 8018 	strh.w	r8, [r4, #24]
 80134d4:	f8cd 8004 	str.w	r8, [sp, #4]
 80134d8:	2300      	movs	r3, #0
 80134da:	9303      	str	r3, [sp, #12]
 80134dc:	8823      	ldrh	r3, [r4, #0]
 80134de:	2b20      	cmp	r3, #32
 80134e0:	d034      	beq.n	801354c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80134e2:	f242 010b 	movw	r1, #8203	@ 0x200b
 80134e6:	1a5a      	subs	r2, r3, r1
 80134e8:	f1d2 0a00 	rsbs	sl, r2, #0
 80134ec:	eb4a 0a02 	adc.w	sl, sl, r2
 80134f0:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80134f4:	4293      	cmp	r3, r2
 80134f6:	d009      	beq.n	801350c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80134f8:	428b      	cmp	r3, r1
 80134fa:	9a01      	ldr	r2, [sp, #4]
 80134fc:	bf18      	it	ne
 80134fe:	461a      	movne	r2, r3
 8013500:	9201      	str	r2, [sp, #4]
 8013502:	bf0c      	ite	eq
 8013504:	f04f 0a01 	moveq.w	sl, #1
 8013508:	f04f 0a00 	movne.w	sl, #0
 801350c:	ab03      	add	r3, sp, #12
 801350e:	68e2      	ldr	r2, [r4, #12]
 8013510:	7a21      	ldrb	r1, [r4, #8]
 8013512:	6860      	ldr	r0, [r4, #4]
 8013514:	f002 fd84 	bl	8016020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013518:	8020      	strh	r0, [r4, #0]
 801351a:	b9d8      	cbnz	r0, 8013554 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 801351c:	8ba2      	ldrh	r2, [r4, #28]
 801351e:	2300      	movs	r3, #0
 8013520:	4611      	mov	r1, r2
 8013522:	4620      	mov	r0, r4
 8013524:	f7ff ff90 	bl	8013448 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013528:	e06e      	b.n	8013608 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801352a:	2500      	movs	r5, #0
 801352c:	46a9      	mov	r9, r5
 801352e:	462e      	mov	r6, r5
 8013530:	2701      	movs	r7, #1
 8013532:	e7c9      	b.n	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013534:	42b7      	cmp	r7, r6
 8013536:	f04f 0500 	mov.w	r5, #0
 801353a:	bfb4      	ite	lt
 801353c:	2700      	movlt	r7, #0
 801353e:	2701      	movge	r7, #1
 8013540:	462e      	mov	r6, r5
 8013542:	e7c1      	b.n	80134c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013544:	2500      	movs	r5, #0
 8013546:	46a9      	mov	r9, r5
 8013548:	2601      	movs	r6, #1
 801354a:	e7ad      	b.n	80134a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801354c:	9301      	str	r3, [sp, #4]
 801354e:	f04f 0a01 	mov.w	sl, #1
 8013552:	e7db      	b.n	801350c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013554:	8b63      	ldrh	r3, [r4, #26]
 8013556:	280a      	cmp	r0, #10
 8013558:	f103 0301 	add.w	r3, r3, #1
 801355c:	8363      	strh	r3, [r4, #26]
 801355e:	d0dd      	beq.n	801351c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8013560:	9a03      	ldr	r2, [sp, #12]
 8013562:	bb62      	cbnz	r2, 80135be <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8013564:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013568:	4298      	cmp	r0, r3
 801356a:	d003      	beq.n	8013574 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801356c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013570:	4298      	cmp	r0, r3
 8013572:	d1b1      	bne.n	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013574:	8823      	ldrh	r3, [r4, #0]
 8013576:	8ba1      	ldrh	r1, [r4, #28]
 8013578:	2b20      	cmp	r3, #32
 801357a:	d003      	beq.n	8013584 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801357c:	f242 000b 	movw	r0, #8203	@ 0x200b
 8013580:	4283      	cmp	r3, r0
 8013582:	d131      	bne.n	80135e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8013584:	f1ba 0f00 	cmp.w	sl, #0
 8013588:	bf0a      	itet	eq
 801358a:	4688      	moveq	r8, r1
 801358c:	4650      	movne	r0, sl
 801358e:	2001      	moveq	r0, #1
 8013590:	440a      	add	r2, r1
 8013592:	8b23      	ldrh	r3, [r4, #24]
 8013594:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8013598:	b292      	uxth	r2, r2
 801359a:	83a2      	strh	r2, [r4, #28]
 801359c:	4413      	add	r3, r2
 801359e:	f1b9 0f00 	cmp.w	r9, #0
 80135a2:	d102      	bne.n	80135aa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80135a4:	2d00      	cmp	r5, #0
 80135a6:	d042      	beq.n	801362e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80135a8:	b300      	cbz	r0, 80135ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80135aa:	8c21      	ldrh	r1, [r4, #32]
 80135ac:	4419      	add	r1, r3
 80135ae:	458c      	cmp	ip, r1
 80135b0:	da37      	bge.n	8013622 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80135b2:	8ae1      	ldrh	r1, [r4, #22]
 80135b4:	2900      	cmp	r1, #0
 80135b6:	d034      	beq.n	8013622 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80135b8:	4563      	cmp	r3, ip
 80135ba:	dd8d      	ble.n	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80135bc:	e01d      	b.n	80135fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80135be:	8893      	ldrh	r3, [r2, #4]
 80135c0:	8023      	strh	r3, [r4, #0]
 80135c2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80135c6:	9901      	ldr	r1, [sp, #4]
 80135c8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80135cc:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 80135d0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80135d4:	ea4b 0b00 	orr.w	fp, fp, r0
 80135d8:	68e0      	ldr	r0, [r4, #12]
 80135da:	6803      	ldr	r3, [r0, #0]
 80135dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80135de:	4798      	blx	r3
 80135e0:	eb0b 0200 	add.w	r2, fp, r0
 80135e4:	b292      	uxth	r2, r2
 80135e6:	e7c5      	b.n	8013574 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80135e8:	2000      	movs	r0, #0
 80135ea:	e7d1      	b.n	8013590 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80135ec:	4563      	cmp	r3, ip
 80135ee:	f77f af73 	ble.w	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80135f2:	8ae3      	ldrh	r3, [r4, #22]
 80135f4:	2b00      	cmp	r3, #0
 80135f6:	f43f af6f 	beq.w	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80135fa:	2301      	movs	r3, #1
 80135fc:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8013600:	8c22      	ldrh	r2, [r4, #32]
 8013602:	8be3      	ldrh	r3, [r4, #30]
 8013604:	4413      	add	r3, r2
 8013606:	83e3      	strh	r3, [r4, #30]
 8013608:	68e0      	ldr	r0, [r4, #12]
 801360a:	6803      	ldr	r3, [r0, #0]
 801360c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801360e:	4798      	blx	r3
 8013610:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013614:	4418      	add	r0, r3
 8013616:	8a63      	ldrh	r3, [r4, #18]
 8013618:	1a18      	subs	r0, r3, r0
 801361a:	8260      	strh	r0, [r4, #18]
 801361c:	b005      	add	sp, #20
 801361e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013622:	2300      	movs	r3, #0
 8013624:	4611      	mov	r1, r2
 8013626:	4620      	mov	r0, r4
 8013628:	f7ff ff0e 	bl	8013448 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801362c:	e754      	b.n	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801362e:	4563      	cmp	r3, ip
 8013630:	dd14      	ble.n	801365c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8013632:	b117      	cbz	r7, 801363a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8013634:	2301      	movs	r3, #1
 8013636:	460a      	mov	r2, r1
 8013638:	e772      	b.n	8013520 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801363a:	2e00      	cmp	r6, #0
 801363c:	f43f af4c 	beq.w	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013640:	2800      	cmp	r0, #0
 8013642:	f47f af49 	bne.w	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013646:	f1ba 0f00 	cmp.w	sl, #0
 801364a:	d002      	beq.n	8013652 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801364c:	2301      	movs	r3, #1
 801364e:	4642      	mov	r2, r8
 8013650:	e767      	b.n	8013522 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013652:	8ae3      	ldrh	r3, [r4, #22]
 8013654:	2b00      	cmp	r3, #0
 8013656:	f43f af3f 	beq.w	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801365a:	e7d5      	b.n	8013608 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801365c:	2800      	cmp	r0, #0
 801365e:	f47f af3b 	bne.w	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013662:	f1ba 0f00 	cmp.w	sl, #0
 8013666:	f43f af37 	beq.w	80134d8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801366a:	2301      	movs	r3, #1
 801366c:	4642      	mov	r2, r8
 801366e:	e7da      	b.n	8013626 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08013670 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013670:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013672:	4605      	mov	r5, r0
 8013674:	b08f      	sub	sp, #60	@ 0x3c
 8013676:	4617      	mov	r7, r2
 8013678:	461c      	mov	r4, r3
 801367a:	460e      	mov	r6, r1
 801367c:	b1d1      	cbz	r1, 80136b4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801367e:	681b      	ldr	r3, [r3, #0]
 8013680:	4620      	mov	r0, r4
 8013682:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013684:	4798      	blx	r3
 8013686:	4240      	negs	r0, r0
 8013688:	b200      	sxth	r0, r0
 801368a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801368e:	9603      	str	r6, [sp, #12]
 8013690:	9700      	str	r7, [sp, #0]
 8013692:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013696:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801369a:	4629      	mov	r1, r5
 801369c:	a805      	add	r0, sp, #20
 801369e:	f7ff fcab 	bl	8012ff8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80136a2:	2401      	movs	r4, #1
 80136a4:	a805      	add	r0, sp, #20
 80136a6:	f7ff fedf 	bl	8013468 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80136aa:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80136ae:	b163      	cbz	r3, 80136ca <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80136b0:	3401      	adds	r4, #1
 80136b2:	e7f7      	b.n	80136a4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80136b4:	f002 fd82 	bl	80161bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80136b8:	2401      	movs	r4, #1
 80136ba:	280a      	cmp	r0, #10
 80136bc:	4628      	mov	r0, r5
 80136be:	bf08      	it	eq
 80136c0:	3401      	addeq	r4, #1
 80136c2:	f002 fd7b 	bl	80161bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80136c6:	2800      	cmp	r0, #0
 80136c8:	d1f7      	bne.n	80136ba <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80136ca:	b2a0      	uxth	r0, r4
 80136cc:	b00f      	add	sp, #60	@ 0x3c
 80136ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

080136d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80136d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136d4:	b0e3      	sub	sp, #396	@ 0x18c
 80136d6:	461c      	mov	r4, r3
 80136d8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 80136da:	4683      	mov	fp, r0
 80136dc:	4688      	mov	r8, r1
 80136de:	2b00      	cmp	r3, #0
 80136e0:	f000 8112 	beq.w	8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80136e4:	6823      	ldr	r3, [r4, #0]
 80136e6:	2b00      	cmp	r3, #0
 80136e8:	f000 810e 	beq.w	8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80136ec:	7ba3      	ldrb	r3, [r4, #14]
 80136ee:	2b00      	cmp	r3, #0
 80136f0:	f000 810a 	beq.w	8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80136f4:	6810      	ldr	r0, [r2, #0]
 80136f6:	6851      	ldr	r1, [r2, #4]
 80136f8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80136fc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8013700:	ad0a      	add	r5, sp, #40	@ 0x28
 8013702:	462b      	mov	r3, r5
 8013704:	c303      	stmia	r3!, {r0, r1}
 8013706:	2100      	movs	r1, #0
 8013708:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 801370c:	910c      	str	r1, [sp, #48]	@ 0x30
 801370e:	79a2      	ldrb	r2, [r4, #6]
 8013710:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013714:	a90c      	add	r1, sp, #48	@ 0x30
 8013716:	4628      	mov	r0, r5
 8013718:	f7ff fced 	bl	80130f6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801371c:	a90c      	add	r1, sp, #48	@ 0x30
 801371e:	4608      	mov	r0, r1
 8013720:	79a2      	ldrb	r2, [r4, #6]
 8013722:	f7ff fce8 	bl	80130f6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013726:	a817      	add	r0, sp, #92	@ 0x5c
 8013728:	f002 f8f2 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 801372c:	6820      	ldr	r0, [r4, #0]
 801372e:	6803      	ldr	r3, [r0, #0]
 8013730:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013732:	4798      	blx	r3
 8013734:	4606      	mov	r6, r0
 8013736:	6820      	ldr	r0, [r4, #0]
 8013738:	6803      	ldr	r3, [r0, #0]
 801373a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801373c:	4798      	blx	r3
 801373e:	4633      	mov	r3, r6
 8013740:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013742:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013744:	9000      	str	r0, [sp, #0]
 8013746:	a817      	add	r0, sp, #92	@ 0x5c
 8013748:	f002 f93d 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801374c:	6820      	ldr	r0, [r4, #0]
 801374e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013752:	6803      	ldr	r3, [r0, #0]
 8013754:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013756:	4798      	blx	r3
 8013758:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 801375c:	6823      	ldr	r3, [r4, #0]
 801375e:	4607      	mov	r7, r0
 8013760:	4406      	add	r6, r0
 8013762:	a830      	add	r0, sp, #192	@ 0xc0
 8013764:	f893 9009 	ldrb.w	r9, [r3, #9]
 8013768:	f002 f8d2 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 801376c:	7c23      	ldrb	r3, [r4, #16]
 801376e:	b17b      	cbz	r3, 8013790 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013770:	6820      	ldr	r0, [r4, #0]
 8013772:	6803      	ldr	r3, [r0, #0]
 8013774:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013776:	4798      	blx	r3
 8013778:	9009      	str	r0, [sp, #36]	@ 0x24
 801377a:	6820      	ldr	r0, [r4, #0]
 801377c:	6802      	ldr	r2, [r0, #0]
 801377e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8013780:	4790      	blx	r2
 8013782:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013784:	9000      	str	r0, [sp, #0]
 8013786:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013788:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801378a:	a830      	add	r0, sp, #192	@ 0xc0
 801378c:	f002 f91b 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013790:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8013794:	7be2      	ldrb	r2, [r4, #15]
 8013796:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801379a:	1a8a      	subs	r2, r1, r2
 801379c:	7c21      	ldrb	r1, [r4, #16]
 801379e:	9103      	str	r1, [sp, #12]
 80137a0:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80137a4:	9102      	str	r1, [sp, #8]
 80137a6:	6821      	ldr	r1, [r4, #0]
 80137a8:	9101      	str	r1, [sp, #4]
 80137aa:	7961      	ldrb	r1, [r4, #5]
 80137ac:	9100      	str	r1, [sp, #0]
 80137ae:	b292      	uxth	r2, r2
 80137b0:	a930      	add	r1, sp, #192	@ 0xc0
 80137b2:	a80e      	add	r0, sp, #56	@ 0x38
 80137b4:	f7ff fc20 	bl	8012ff8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80137b8:	2e00      	cmp	r6, #0
 80137ba:	dc5b      	bgt.n	8013874 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80137bc:	af17      	add	r7, sp, #92	@ 0x5c
 80137be:	f04f 0900 	mov.w	r9, #0
 80137c2:	7c23      	ldrb	r3, [r4, #16]
 80137c4:	2b00      	cmp	r3, #0
 80137c6:	f000 80b1 	beq.w	801392c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80137ca:	a80e      	add	r0, sp, #56	@ 0x38
 80137cc:	f7ff fe4c 	bl	8013468 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80137d0:	f1ba 0f00 	cmp.w	sl, #0
 80137d4:	f000 80a5 	beq.w	8013922 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80137d8:	7c23      	ldrb	r3, [r4, #16]
 80137da:	9309      	str	r3, [sp, #36]	@ 0x24
 80137dc:	2264      	movs	r2, #100	@ 0x64
 80137de:	4639      	mov	r1, r7
 80137e0:	a849      	add	r0, sp, #292	@ 0x124
 80137e2:	f012 fcac 	bl	802613e <memcpy>
 80137e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80137e8:	2b00      	cmp	r3, #0
 80137ea:	f000 80a7 	beq.w	801393c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80137ee:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80137f2:	7922      	ldrb	r2, [r4, #4]
 80137f4:	2a01      	cmp	r2, #1
 80137f6:	f040 808a 	bne.w	801390e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80137fa:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 80137fe:	1ac0      	subs	r0, r0, r3
 8013800:	2302      	movs	r3, #2
 8013802:	fb90 f0f3 	sdiv	r0, r0, r3
 8013806:	b200      	sxth	r0, r0
 8013808:	7c23      	ldrb	r3, [r4, #16]
 801380a:	2b00      	cmp	r3, #0
 801380c:	f000 808b 	beq.w	8013926 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013810:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8013814:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8013818:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801381c:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013820:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8013824:	4410      	add	r0, r2
 8013826:	b200      	sxth	r0, r0
 8013828:	9000      	str	r0, [sp, #0]
 801382a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801382e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013832:	4642      	mov	r2, r8
 8013834:	2100      	movs	r1, #0
 8013836:	4658      	mov	r0, fp
 8013838:	f7ff fc8e 	bl	8013158 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801383c:	2800      	cmp	r0, #0
 801383e:	d163      	bne.n	8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013840:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013844:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8013848:	b2b2      	uxth	r2, r6
 801384a:	4413      	add	r3, r2
 801384c:	1a8a      	subs	r2, r1, r2
 801384e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8013852:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8013856:	b21b      	sxth	r3, r3
 8013858:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801385c:	2a00      	cmp	r2, #0
 801385e:	d153      	bne.n	8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013860:	6822      	ldr	r2, [r4, #0]
 8013862:	8869      	ldrh	r1, [r5, #2]
 8013864:	7a12      	ldrb	r2, [r2, #8]
 8013866:	1a9b      	subs	r3, r3, r2
 8013868:	88ea      	ldrh	r2, [r5, #6]
 801386a:	440a      	add	r2, r1
 801386c:	b212      	sxth	r2, r2
 801386e:	4293      	cmp	r3, r2
 8013870:	dda7      	ble.n	80137c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8013872:	e049      	b.n	8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013874:	7c23      	ldrb	r3, [r4, #16]
 8013876:	444f      	add	r7, r9
 8013878:	b1c3      	cbz	r3, 80138ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 801387a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 801387e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013882:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013886:	443b      	add	r3, r7
 8013888:	4293      	cmp	r3, r2
 801388a:	da97      	bge.n	80137bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801388c:	a80e      	add	r0, sp, #56	@ 0x38
 801388e:	f7ff fdeb 	bl	8013468 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013892:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8013896:	3b01      	subs	r3, #1
 8013898:	b29b      	uxth	r3, r3
 801389a:	454b      	cmp	r3, r9
 801389c:	9309      	str	r3, [sp, #36]	@ 0x24
 801389e:	d021      	beq.n	80138e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80138a0:	7961      	ldrb	r1, [r4, #5]
 80138a2:	a817      	add	r0, sp, #92	@ 0x5c
 80138a4:	f7f9 fe92 	bl	800d5cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80138a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80138aa:	e7f4      	b.n	8013896 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80138ac:	fa1f f986 	uxth.w	r9, r6
 80138b0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80138b4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80138b8:	443b      	add	r3, r7
 80138ba:	4293      	cmp	r3, r2
 80138bc:	f6bf af7e 	bge.w	80137bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80138c0:	a817      	add	r0, sp, #92	@ 0x5c
 80138c2:	f002 fc7b 	bl	80161bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 80138c6:	b1f8      	cbz	r0, 8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80138c8:	280a      	cmp	r0, #10
 80138ca:	d1f1      	bne.n	80138b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80138cc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80138d0:	444b      	add	r3, r9
 80138d2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80138d6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 80138da:	eba3 0309 	sub.w	r3, r3, r9
 80138de:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80138e2:	e7e5      	b.n	80138b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80138e4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 80138e8:	b2b3      	uxth	r3, r6
 80138ea:	441a      	add	r2, r3
 80138ec:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80138f0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 80138f4:	1ad3      	subs	r3, r2, r3
 80138f6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80138fa:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80138fe:	b11b      	cbz	r3, 8013908 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013900:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8013904:	2b00      	cmp	r3, #0
 8013906:	d0ba      	beq.n	801387e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8013908:	b063      	add	sp, #396	@ 0x18c
 801390a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801390e:	2a02      	cmp	r2, #2
 8013910:	d105      	bne.n	801391e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013912:	7be2      	ldrb	r2, [r4, #15]
 8013914:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8013918:	1a80      	subs	r0, r0, r2
 801391a:	1ac0      	subs	r0, r0, r3
 801391c:	e773      	b.n	8013806 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801391e:	2000      	movs	r0, #0
 8013920:	e772      	b.n	8013808 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013922:	7be0      	ldrb	r0, [r4, #15]
 8013924:	e770      	b.n	8013808 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013926:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801392a:	e773      	b.n	8013814 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801392c:	f1ba 0f00 	cmp.w	sl, #0
 8013930:	d0f7      	beq.n	8013922 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013932:	2264      	movs	r2, #100	@ 0x64
 8013934:	4639      	mov	r1, r7
 8013936:	a849      	add	r0, sp, #292	@ 0x124
 8013938:	f012 fc01 	bl	802613e <memcpy>
 801393c:	2300      	movs	r3, #0
 801393e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013942:	6821      	ldr	r1, [r4, #0]
 8013944:	a849      	add	r0, sp, #292	@ 0x124
 8013946:	f7ff fb9a 	bl	801307e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801394a:	b203      	sxth	r3, r0
 801394c:	e751      	b.n	80137f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801394e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801394e:	2b03      	cmp	r3, #3
 8013950:	d818      	bhi.n	8013984 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013952:	e8df f003 	tbb	[pc, r3]
 8013956:	0602      	.short	0x0602
 8013958:	130d      	.short	0x130d
 801395a:	f9b0 2000 	ldrsh.w	r2, [r0]
 801395e:	1850      	adds	r0, r2, r1
 8013960:	4770      	bx	lr
 8013962:	8803      	ldrh	r3, [r0, #0]
 8013964:	8880      	ldrh	r0, [r0, #4]
 8013966:	4418      	add	r0, r3
 8013968:	b200      	sxth	r0, r0
 801396a:	1a80      	subs	r0, r0, r2
 801396c:	3801      	subs	r0, #1
 801396e:	4770      	bx	lr
 8013970:	8803      	ldrh	r3, [r0, #0]
 8013972:	8880      	ldrh	r0, [r0, #4]
 8013974:	4418      	add	r0, r3
 8013976:	b200      	sxth	r0, r0
 8013978:	1a40      	subs	r0, r0, r1
 801397a:	e7f7      	b.n	801396c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801397c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8013980:	4410      	add	r0, r2
 8013982:	4770      	bx	lr
 8013984:	2000      	movs	r0, #0
 8013986:	4770      	bx	lr

08013988 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8013988:	2b03      	cmp	r3, #3
 801398a:	d817      	bhi.n	80139bc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801398c:	e8df f003 	tbb	[pc, r3]
 8013990:	10090602 	.word	0x10090602
 8013994:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013998:	1850      	adds	r0, r2, r1
 801399a:	4770      	bx	lr
 801399c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80139a0:	e7fa      	b.n	8013998 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80139a2:	8843      	ldrh	r3, [r0, #2]
 80139a4:	88c0      	ldrh	r0, [r0, #6]
 80139a6:	4418      	add	r0, r3
 80139a8:	b200      	sxth	r0, r0
 80139aa:	1a80      	subs	r0, r0, r2
 80139ac:	3801      	subs	r0, #1
 80139ae:	4770      	bx	lr
 80139b0:	8843      	ldrh	r3, [r0, #2]
 80139b2:	88c0      	ldrh	r0, [r0, #6]
 80139b4:	4418      	add	r0, r3
 80139b6:	b200      	sxth	r0, r0
 80139b8:	1a40      	subs	r0, r0, r1
 80139ba:	e7f7      	b.n	80139ac <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80139bc:	2000      	movs	r0, #0
 80139be:	4770      	bx	lr

080139c0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80139c0:	4b01      	ldr	r3, [pc, #4]	@ (80139c8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80139c2:	2200      	movs	r2, #0
 80139c4:	601a      	str	r2, [r3, #0]
 80139c6:	4770      	bx	lr
 80139c8:	20002f5c 	.word	0x20002f5c

080139cc <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80139cc:	4603      	mov	r3, r0
 80139ce:	b1c8      	cbz	r0, 8013a04 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80139d0:	0c02      	lsrs	r2, r0, #16
 80139d2:	0412      	lsls	r2, r2, #16
 80139d4:	b9a2      	cbnz	r2, 8013a00 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80139d6:	0403      	lsls	r3, r0, #16
 80139d8:	2010      	movs	r0, #16
 80139da:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 80139de:	bf04      	itt	eq
 80139e0:	021b      	lsleq	r3, r3, #8
 80139e2:	3008      	addeq	r0, #8
 80139e4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 80139e8:	bf04      	itt	eq
 80139ea:	011b      	lsleq	r3, r3, #4
 80139ec:	3004      	addeq	r0, #4
 80139ee:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 80139f2:	bf04      	itt	eq
 80139f4:	009b      	lsleq	r3, r3, #2
 80139f6:	3002      	addeq	r0, #2
 80139f8:	2b00      	cmp	r3, #0
 80139fa:	db04      	blt.n	8013a06 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80139fc:	3001      	adds	r0, #1
 80139fe:	4770      	bx	lr
 8013a00:	2000      	movs	r0, #0
 8013a02:	e7ea      	b.n	80139da <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013a04:	2020      	movs	r0, #32
 8013a06:	4770      	bx	lr

08013a08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8013a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a0c:	b087      	sub	sp, #28
 8013a0e:	460d      	mov	r5, r1
 8013a10:	4616      	mov	r6, r2
 8013a12:	4698      	mov	r8, r3
 8013a14:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8013a18:	4601      	mov	r1, r0
 8013a1a:	b120      	cbz	r0, 8013a26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013a1c:	b11a      	cbz	r2, 8013a26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013a1e:	2d1f      	cmp	r5, #31
 8013a20:	d801      	bhi.n	8013a26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013a22:	2b1f      	cmp	r3, #31
 8013a24:	d904      	bls.n	8013a30 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8013a26:	2000      	movs	r0, #0
 8013a28:	6038      	str	r0, [r7, #0]
 8013a2a:	b007      	add	sp, #28
 8013a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a30:	b97d      	cbnz	r5, 8013a52 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013a32:	b143      	cbz	r3, 8013a46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013a34:	4602      	mov	r2, r0
 8013a36:	e9cd 4700 	strd	r4, r7, [sp]
 8013a3a:	462b      	mov	r3, r5
 8013a3c:	4641      	mov	r1, r8
 8013a3e:	4630      	mov	r0, r6
 8013a40:	f7ff ffe2 	bl	8013a08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013a44:	e7f1      	b.n	8013a2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013a46:	f04f 33ff 	mov.w	r3, #4294967295
 8013a4a:	603b      	str	r3, [r7, #0]
 8013a4c:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8013a50:	e7eb      	b.n	8013a2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013a52:	fa32 fa05 	lsrs.w	sl, r2, r5
 8013a56:	d106      	bne.n	8013a66 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8013a58:	4346      	muls	r6, r0
 8013a5a:	fbb6 f0f4 	udiv	r0, r6, r4
 8013a5e:	fb04 6610 	mls	r6, r4, r0, r6
 8013a62:	603e      	str	r6, [r7, #0]
 8013a64:	e7e1      	b.n	8013a2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013a66:	2201      	movs	r2, #1
 8013a68:	40aa      	lsls	r2, r5
 8013a6a:	3a01      	subs	r2, #1
 8013a6c:	4016      	ands	r6, r2
 8013a6e:	fa00 fb05 	lsl.w	fp, r0, r5
 8013a72:	4630      	mov	r0, r6
 8013a74:	fbbb f9f4 	udiv	r9, fp, r4
 8013a78:	fb0a f309 	mul.w	r3, sl, r9
 8013a7c:	9303      	str	r3, [sp, #12]
 8013a7e:	f7ff ffa5 	bl	80139cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013a82:	462b      	mov	r3, r5
 8013a84:	460a      	mov	r2, r1
 8013a86:	e9cd 4700 	strd	r4, r7, [sp]
 8013a8a:	4601      	mov	r1, r0
 8013a8c:	4630      	mov	r0, r6
 8013a8e:	f7ff ffbb 	bl	8013a08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013a92:	fb04 b919 	mls	r9, r4, r9, fp
 8013a96:	4606      	mov	r6, r0
 8013a98:	4648      	mov	r0, r9
 8013a9a:	eb05 0108 	add.w	r1, r5, r8
 8013a9e:	f7ff ff95 	bl	80139cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013aa2:	ab05      	add	r3, sp, #20
 8013aa4:	e9cd 4300 	strd	r4, r3, [sp]
 8013aa8:	464a      	mov	r2, r9
 8013aaa:	4603      	mov	r3, r0
 8013aac:	4650      	mov	r0, sl
 8013aae:	f7ff ffab 	bl	8013a08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013ab2:	6839      	ldr	r1, [r7, #0]
 8013ab4:	9a05      	ldr	r2, [sp, #20]
 8013ab6:	9b03      	ldr	r3, [sp, #12]
 8013ab8:	4411      	add	r1, r2
 8013aba:	fbb1 f2f4 	udiv	r2, r1, r4
 8013abe:	18d3      	adds	r3, r2, r3
 8013ac0:	441e      	add	r6, r3
 8013ac2:	fb04 1412 	mls	r4, r4, r2, r1
 8013ac6:	4430      	add	r0, r6
 8013ac8:	603c      	str	r4, [r7, #0]
 8013aca:	e7ae      	b.n	8013a2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013acc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013acc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ad0:	b085      	sub	sp, #20
 8013ad2:	f1b0 0900 	subs.w	r9, r0, #0
 8013ad6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013ad8:	461d      	mov	r5, r3
 8013ada:	bfbf      	itttt	lt
 8013adc:	6823      	ldrlt	r3, [r4, #0]
 8013ade:	425b      	neglt	r3, r3
 8013ae0:	f1c9 0900 	rsblt	r9, r9, #0
 8013ae4:	6023      	strlt	r3, [r4, #0]
 8013ae6:	bfb4      	ite	lt
 8013ae8:	f04f 36ff 	movlt.w	r6, #4294967295
 8013aec:	2601      	movge	r6, #1
 8013aee:	2a00      	cmp	r2, #0
 8013af0:	4617      	mov	r7, r2
 8013af2:	da04      	bge.n	8013afe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8013af4:	6823      	ldr	r3, [r4, #0]
 8013af6:	425b      	negs	r3, r3
 8013af8:	4257      	negs	r7, r2
 8013afa:	4276      	negs	r6, r6
 8013afc:	6023      	str	r3, [r4, #0]
 8013afe:	2d00      	cmp	r5, #0
 8013b00:	4638      	mov	r0, r7
 8013b02:	bfba      	itte	lt
 8013b04:	426d      	neglt	r5, r5
 8013b06:	f04f 38ff 	movlt.w	r8, #4294967295
 8013b0a:	f04f 0801 	movge.w	r8, #1
 8013b0e:	f7ff ff5d 	bl	80139cc <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013b12:	ab03      	add	r3, sp, #12
 8013b14:	e9cd 5300 	strd	r5, r3, [sp]
 8013b18:	463a      	mov	r2, r7
 8013b1a:	4603      	mov	r3, r0
 8013b1c:	4648      	mov	r0, r9
 8013b1e:	f7ff ff73 	bl	8013a08 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013b22:	6823      	ldr	r3, [r4, #0]
 8013b24:	9a03      	ldr	r2, [sp, #12]
 8013b26:	4546      	cmp	r6, r8
 8013b28:	441a      	add	r2, r3
 8013b2a:	fb92 f3f5 	sdiv	r3, r2, r5
 8013b2e:	4418      	add	r0, r3
 8013b30:	bf18      	it	ne
 8013b32:	4240      	negne	r0, r0
 8013b34:	fb05 2313 	mls	r3, r5, r3, r2
 8013b38:	1c72      	adds	r2, r6, #1
 8013b3a:	6023      	str	r3, [r4, #0]
 8013b3c:	d105      	bne.n	8013b4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8013b3e:	2b00      	cmp	r3, #0
 8013b40:	f1c3 0200 	rsb	r2, r3, #0
 8013b44:	db0b      	blt.n	8013b5e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8013b46:	6022      	str	r2, [r4, #0]
 8013b48:	e006      	b.n	8013b58 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013b4a:	2e01      	cmp	r6, #1
 8013b4c:	d104      	bne.n	8013b58 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013b4e:	2b00      	cmp	r3, #0
 8013b50:	da02      	bge.n	8013b58 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013b52:	442b      	add	r3, r5
 8013b54:	3801      	subs	r0, #1
 8013b56:	6023      	str	r3, [r4, #0]
 8013b58:	b005      	add	sp, #20
 8013b5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013b5e:	3801      	subs	r0, #1
 8013b60:	1b52      	subs	r2, r2, r5
 8013b62:	e7f0      	b.n	8013b46 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08013b64 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8013b64:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013b68:	4c1c      	ldr	r4, [pc, #112]	@ (8013bdc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8013b6a:	6807      	ldr	r7, [r0, #0]
 8013b6c:	69a3      	ldr	r3, [r4, #24]
 8013b6e:	4605      	mov	r5, r0
 8013b70:	b92b      	cbnz	r3, 8013b7e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8013b72:	6840      	ldr	r0, [r0, #4]
 8013b74:	e9c5 7000 	strd	r7, r0, [r5]
 8013b78:	b004      	add	sp, #16
 8013b7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013b7e:	68a2      	ldr	r2, [r4, #8]
 8013b80:	6820      	ldr	r0, [r4, #0]
 8013b82:	ae04      	add	r6, sp, #16
 8013b84:	f04f 0802 	mov.w	r8, #2
 8013b88:	fb93 f1f8 	sdiv	r1, r3, r8
 8013b8c:	440a      	add	r2, r1
 8013b8e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8013b92:	69e1      	ldr	r1, [r4, #28]
 8013b94:	9600      	str	r6, [sp, #0]
 8013b96:	463a      	mov	r2, r7
 8013b98:	f7ff ff98 	bl	8013acc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013b9c:	69a3      	ldr	r3, [r4, #24]
 8013b9e:	686a      	ldr	r2, [r5, #4]
 8013ba0:	6a21      	ldr	r1, [r4, #32]
 8013ba2:	9600      	str	r6, [sp, #0]
 8013ba4:	4607      	mov	r7, r0
 8013ba6:	6860      	ldr	r0, [r4, #4]
 8013ba8:	f7ff ff90 	bl	8013acc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013bac:	6962      	ldr	r2, [r4, #20]
 8013bae:	69a3      	ldr	r3, [r4, #24]
 8013bb0:	fb93 f8f8 	sdiv	r8, r3, r8
 8013bb4:	4442      	add	r2, r8
 8013bb6:	9203      	str	r2, [sp, #12]
 8013bb8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8013bba:	682a      	ldr	r2, [r5, #0]
 8013bbc:	9600      	str	r6, [sp, #0]
 8013bbe:	4407      	add	r7, r0
 8013bc0:	68e0      	ldr	r0, [r4, #12]
 8013bc2:	f7ff ff83 	bl	8013acc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013bc6:	9600      	str	r6, [sp, #0]
 8013bc8:	4680      	mov	r8, r0
 8013bca:	69a3      	ldr	r3, [r4, #24]
 8013bcc:	686a      	ldr	r2, [r5, #4]
 8013bce:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8013bd0:	6920      	ldr	r0, [r4, #16]
 8013bd2:	f7ff ff7b 	bl	8013acc <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013bd6:	4440      	add	r0, r8
 8013bd8:	e7cc      	b.n	8013b74 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8013bda:	bf00      	nop
 8013bdc:	20002f60 	.word	0x20002f60

08013be0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8013be0:	4b07      	ldr	r3, [pc, #28]	@ (8013c00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8013be2:	781b      	ldrb	r3, [r3, #0]
 8013be4:	2b01      	cmp	r3, #1
 8013be6:	d109      	bne.n	8013bfc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8013be8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013bec:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013bf0:	8003      	strh	r3, [r0, #0]
 8013bf2:	4b04      	ldr	r3, [pc, #16]	@ (8013c04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8013bf4:	881b      	ldrh	r3, [r3, #0]
 8013bf6:	3b01      	subs	r3, #1
 8013bf8:	1a9b      	subs	r3, r3, r2
 8013bfa:	800b      	strh	r3, [r1, #0]
 8013bfc:	4770      	bx	lr
 8013bfe:	bf00      	nop
 8013c00:	20002f4c 	.word	0x20002f4c
 8013c04:	20002f48 	.word	0x20002f48

08013c08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8013c08:	b510      	push	{r4, lr}
 8013c0a:	4b07      	ldr	r3, [pc, #28]	@ (8013c28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8013c0c:	781b      	ldrb	r3, [r3, #0]
 8013c0e:	2b01      	cmp	r3, #1
 8013c10:	d108      	bne.n	8013c24 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8013c12:	4b06      	ldr	r3, [pc, #24]	@ (8013c2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8013c14:	880c      	ldrh	r4, [r1, #0]
 8013c16:	881b      	ldrh	r3, [r3, #0]
 8013c18:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013c1c:	3b01      	subs	r3, #1
 8013c1e:	1b1b      	subs	r3, r3, r4
 8013c20:	8003      	strh	r3, [r0, #0]
 8013c22:	800a      	strh	r2, [r1, #0]
 8013c24:	bd10      	pop	{r4, pc}
 8013c26:	bf00      	nop
 8013c28:	20002f4c 	.word	0x20002f4c
 8013c2c:	20002f48 	.word	0x20002f48

08013c30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8013c30:	b510      	push	{r4, lr}
 8013c32:	4b0a      	ldr	r3, [pc, #40]	@ (8013c5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8013c34:	781b      	ldrb	r3, [r3, #0]
 8013c36:	2b01      	cmp	r3, #1
 8013c38:	d10e      	bne.n	8013c58 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8013c3a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013c3e:	8843      	ldrh	r3, [r0, #2]
 8013c40:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013c44:	8044      	strh	r4, [r0, #2]
 8013c46:	18ca      	adds	r2, r1, r3
 8013c48:	4b05      	ldr	r3, [pc, #20]	@ (8013c60 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8013c4a:	881b      	ldrh	r3, [r3, #0]
 8013c4c:	1a9b      	subs	r3, r3, r2
 8013c4e:	8003      	strh	r3, [r0, #0]
 8013c50:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013c54:	80c3      	strh	r3, [r0, #6]
 8013c56:	8081      	strh	r1, [r0, #4]
 8013c58:	bd10      	pop	{r4, pc}
 8013c5a:	bf00      	nop
 8013c5c:	20002f4c 	.word	0x20002f4c
 8013c60:	20002f48 	.word	0x20002f48

08013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8013c64:	4b08      	ldr	r3, [pc, #32]	@ (8013c88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8013c66:	781b      	ldrb	r3, [r3, #0]
 8013c68:	2b01      	cmp	r3, #1
 8013c6a:	d10c      	bne.n	8013c86 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8013c6c:	8803      	ldrh	r3, [r0, #0]
 8013c6e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8013c72:	8842      	ldrh	r2, [r0, #2]
 8013c74:	8002      	strh	r2, [r0, #0]
 8013c76:	185a      	adds	r2, r3, r1
 8013c78:	4b04      	ldr	r3, [pc, #16]	@ (8013c8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8013c7a:	881b      	ldrh	r3, [r3, #0]
 8013c7c:	1a9b      	subs	r3, r3, r2
 8013c7e:	8043      	strh	r3, [r0, #2]
 8013c80:	88c3      	ldrh	r3, [r0, #6]
 8013c82:	8083      	strh	r3, [r0, #4]
 8013c84:	80c1      	strh	r1, [r0, #6]
 8013c86:	4770      	bx	lr
 8013c88:	20002f4c 	.word	0x20002f4c
 8013c8c:	20002f48 	.word	0x20002f48

08013c90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8013c90:	b510      	push	{r4, lr}
 8013c92:	4b07      	ldr	r3, [pc, #28]	@ (8013cb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8013c94:	781b      	ldrb	r3, [r3, #0]
 8013c96:	2b01      	cmp	r3, #1
 8013c98:	d108      	bne.n	8013cac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8013c9a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013c9e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013ca2:	8003      	strh	r3, [r0, #0]
 8013ca4:	8893      	ldrh	r3, [r2, #4]
 8013ca6:	3b01      	subs	r3, #1
 8013ca8:	1b1b      	subs	r3, r3, r4
 8013caa:	800b      	strh	r3, [r1, #0]
 8013cac:	bd10      	pop	{r4, pc}
 8013cae:	bf00      	nop
 8013cb0:	20002f4c 	.word	0x20002f4c

08013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8013cb4:	b510      	push	{r4, lr}
 8013cb6:	4b0a      	ldr	r3, [pc, #40]	@ (8013ce0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8013cb8:	781b      	ldrb	r3, [r3, #0]
 8013cba:	2b01      	cmp	r3, #1
 8013cbc:	460a      	mov	r2, r1
 8013cbe:	d10d      	bne.n	8013cdc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8013cc0:	8881      	ldrh	r1, [r0, #4]
 8013cc2:	8803      	ldrh	r3, [r0, #0]
 8013cc4:	440b      	add	r3, r1
 8013cc6:	4601      	mov	r1, r0
 8013cc8:	3b01      	subs	r3, #1
 8013cca:	f821 3b02 	strh.w	r3, [r1], #2
 8013cce:	f7ff ffdf 	bl	8013c90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8013cd2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013cd6:	88c2      	ldrh	r2, [r0, #6]
 8013cd8:	8082      	strh	r2, [r0, #4]
 8013cda:	80c3      	strh	r3, [r0, #6]
 8013cdc:	bd10      	pop	{r4, pc}
 8013cde:	bf00      	nop
 8013ce0:	20002f4c 	.word	0x20002f4c

08013ce4 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013ce4:	4b06      	ldr	r3, [pc, #24]	@ (8013d00 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013ce6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013cea:	4b06      	ldr	r3, [pc, #24]	@ (8013d04 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8013cec:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8013cf0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013cf4:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8013cf8:	2100      	movs	r1, #0
 8013cfa:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8013cfe:	4770      	bx	lr
 8013d00:	20002f48 	.word	0x20002f48
 8013d04:	20002f4a 	.word	0x20002f4a

08013d08 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013d08:	4b03      	ldr	r3, [pc, #12]	@ (8013d18 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013d0a:	6818      	ldr	r0, [r3, #0]
 8013d0c:	b110      	cbz	r0, 8013d14 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8013d0e:	6803      	ldr	r3, [r0, #0]
 8013d10:	699b      	ldr	r3, [r3, #24]
 8013d12:	4718      	bx	r3
 8013d14:	4770      	bx	lr
 8013d16:	bf00      	nop
 8013d18:	20002f90 	.word	0x20002f90

08013d1c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013d1c:	4770      	bx	lr
	...

08013d20 <_ZN8touchgfx11Application4drawEv>:
 8013d20:	b507      	push	{r0, r1, r2, lr}
 8013d22:	4b09      	ldr	r3, [pc, #36]	@ (8013d48 <_ZN8touchgfx11Application4drawEv+0x28>)
 8013d24:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d28:	4b08      	ldr	r3, [pc, #32]	@ (8013d4c <_ZN8touchgfx11Application4drawEv+0x2c>)
 8013d2a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013d2e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013d32:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013d36:	6803      	ldr	r3, [r0, #0]
 8013d38:	2100      	movs	r1, #0
 8013d3a:	9100      	str	r1, [sp, #0]
 8013d3c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013d3e:	4669      	mov	r1, sp
 8013d40:	4798      	blx	r3
 8013d42:	b003      	add	sp, #12
 8013d44:	f85d fb04 	ldr.w	pc, [sp], #4
 8013d48:	20002f48 	.word	0x20002f48
 8013d4c:	20002f4a 	.word	0x20002f4a

08013d50 <_ZN8touchgfx11Application10invalidateEv>:
 8013d50:	4b09      	ldr	r3, [pc, #36]	@ (8013d78 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8013d52:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d56:	4b09      	ldr	r3, [pc, #36]	@ (8013d7c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8013d58:	b082      	sub	sp, #8
 8013d5a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013d5e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013d62:	2100      	movs	r1, #0
 8013d64:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013d68:	9100      	str	r1, [sp, #0]
 8013d6a:	6803      	ldr	r3, [r0, #0]
 8013d6c:	aa02      	add	r2, sp, #8
 8013d6e:	e912 0006 	ldmdb	r2, {r1, r2}
 8013d72:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8013d74:	b002      	add	sp, #8
 8013d76:	4718      	bx	r3
 8013d78:	20002f48 	.word	0x20002f48
 8013d7c:	20002f4a 	.word	0x20002f4a

08013d80 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8013d80:	4b03      	ldr	r3, [pc, #12]	@ (8013d90 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8013d82:	6818      	ldr	r0, [r3, #0]
 8013d84:	b110      	cbz	r0, 8013d8c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8013d86:	6803      	ldr	r3, [r0, #0]
 8013d88:	69db      	ldr	r3, [r3, #28]
 8013d8a:	4718      	bx	r3
 8013d8c:	4770      	bx	lr
 8013d8e:	bf00      	nop
 8013d90:	20002f90 	.word	0x20002f90

08013d94 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8013d94:	4b03      	ldr	r3, [pc, #12]	@ (8013da4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8013d96:	6818      	ldr	r0, [r3, #0]
 8013d98:	b110      	cbz	r0, 8013da0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8013d9a:	6803      	ldr	r3, [r0, #0]
 8013d9c:	6a1b      	ldr	r3, [r3, #32]
 8013d9e:	4718      	bx	r3
 8013da0:	4770      	bx	lr
 8013da2:	bf00      	nop
 8013da4:	20002f90 	.word	0x20002f90

08013da8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8013da8:	2300      	movs	r3, #0
 8013daa:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8013dae:	4770      	bx	lr

08013db0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8013db0:	4b03      	ldr	r3, [pc, #12]	@ (8013dc0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8013db2:	6818      	ldr	r0, [r3, #0]
 8013db4:	b110      	cbz	r0, 8013dbc <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8013db6:	6803      	ldr	r3, [r0, #0]
 8013db8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013dba:	4718      	bx	r3
 8013dbc:	4770      	bx	lr
 8013dbe:	bf00      	nop
 8013dc0:	20002f90 	.word	0x20002f90

08013dc4 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8013dc4:	b510      	push	{r4, lr}
 8013dc6:	f9b1 4000 	ldrsh.w	r4, [r1]
 8013dca:	888a      	ldrh	r2, [r1, #4]
 8013dcc:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013dd0:	4422      	add	r2, r4
 8013dd2:	b212      	sxth	r2, r2
 8013dd4:	4293      	cmp	r3, r2
 8013dd6:	da15      	bge.n	8013e04 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013dd8:	8882      	ldrh	r2, [r0, #4]
 8013dda:	4413      	add	r3, r2
 8013ddc:	b21b      	sxth	r3, r3
 8013dde:	429c      	cmp	r4, r3
 8013de0:	da10      	bge.n	8013e04 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013de2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8013de6:	88c9      	ldrh	r1, [r1, #6]
 8013de8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013dec:	4419      	add	r1, r3
 8013dee:	b209      	sxth	r1, r1
 8013df0:	428a      	cmp	r2, r1
 8013df2:	da07      	bge.n	8013e04 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8013df4:	88c0      	ldrh	r0, [r0, #6]
 8013df6:	4410      	add	r0, r2
 8013df8:	b200      	sxth	r0, r0
 8013dfa:	4283      	cmp	r3, r0
 8013dfc:	bfac      	ite	ge
 8013dfe:	2000      	movge	r0, #0
 8013e00:	2001      	movlt	r0, #1
 8013e02:	bd10      	pop	{r4, pc}
 8013e04:	2000      	movs	r0, #0
 8013e06:	e7fc      	b.n	8013e02 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08013e08 <_ZN8touchgfx4Rect10restrictToEss>:
 8013e08:	f9b0 3000 	ldrsh.w	r3, [r0]
 8013e0c:	2b00      	cmp	r3, #0
 8013e0e:	b510      	push	{r4, lr}
 8013e10:	da04      	bge.n	8013e1c <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8013e12:	8884      	ldrh	r4, [r0, #4]
 8013e14:	4423      	add	r3, r4
 8013e16:	8083      	strh	r3, [r0, #4]
 8013e18:	2300      	movs	r3, #0
 8013e1a:	8003      	strh	r3, [r0, #0]
 8013e1c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013e20:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013e24:	1b09      	subs	r1, r1, r4
 8013e26:	428b      	cmp	r3, r1
 8013e28:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8013e2c:	bfc8      	it	gt
 8013e2e:	8081      	strhgt	r1, [r0, #4]
 8013e30:	2b00      	cmp	r3, #0
 8013e32:	da04      	bge.n	8013e3e <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8013e34:	88c1      	ldrh	r1, [r0, #6]
 8013e36:	440b      	add	r3, r1
 8013e38:	80c3      	strh	r3, [r0, #6]
 8013e3a:	2300      	movs	r3, #0
 8013e3c:	8043      	strh	r3, [r0, #2]
 8013e3e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013e42:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8013e46:	1a52      	subs	r2, r2, r1
 8013e48:	4293      	cmp	r3, r2
 8013e4a:	bfc8      	it	gt
 8013e4c:	80c2      	strhgt	r2, [r0, #6]
 8013e4e:	bd10      	pop	{r4, pc}

08013e50 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8013e50:	b510      	push	{r4, lr}
 8013e52:	4b10      	ldr	r3, [pc, #64]	@ (8013e94 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8013e54:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013e58:	4b0f      	ldr	r3, [pc, #60]	@ (8013e98 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8013e5a:	460c      	mov	r4, r1
 8013e5c:	4620      	mov	r0, r4
 8013e5e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8013e62:	f7ff ffd1 	bl	8013e08 <_ZN8touchgfx4Rect10restrictToEss>
 8013e66:	4b0d      	ldr	r3, [pc, #52]	@ (8013e9c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8013e68:	6818      	ldr	r0, [r3, #0]
 8013e6a:	b190      	cbz	r0, 8013e92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8013e6c:	6803      	ldr	r3, [r0, #0]
 8013e6e:	4621      	mov	r1, r4
 8013e70:	689b      	ldr	r3, [r3, #8]
 8013e72:	4798      	blx	r3
 8013e74:	4b0a      	ldr	r3, [pc, #40]	@ (8013ea0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8013e76:	6818      	ldr	r0, [r3, #0]
 8013e78:	b118      	cbz	r0, 8013e82 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8013e7a:	6803      	ldr	r3, [r0, #0]
 8013e7c:	4621      	mov	r1, r4
 8013e7e:	689b      	ldr	r3, [r3, #8]
 8013e80:	4798      	blx	r3
 8013e82:	4b08      	ldr	r3, [pc, #32]	@ (8013ea4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8013e84:	6818      	ldr	r0, [r3, #0]
 8013e86:	6803      	ldr	r3, [r0, #0]
 8013e88:	4621      	mov	r1, r4
 8013e8a:	69db      	ldr	r3, [r3, #28]
 8013e8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013e90:	4718      	bx	r3
 8013e92:	bd10      	pop	{r4, pc}
 8013e94:	20002f4a 	.word	0x20002f4a
 8013e98:	20002f48 	.word	0x20002f48
 8013e9c:	20002f90 	.word	0x20002f90
 8013ea0:	20002f8c 	.word	0x20002f8c
 8013ea4:	20002f54 	.word	0x20002f54

08013ea8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8013ea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013eaa:	4606      	mov	r6, r0
 8013eac:	4608      	mov	r0, r1
 8013eae:	460f      	mov	r7, r1
 8013eb0:	f7fc fd57 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013eb4:	b9e8      	cbnz	r0, 8013ef2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013eb6:	f9b7 5000 	ldrsh.w	r5, [r7]
 8013eba:	f9b6 4000 	ldrsh.w	r4, [r6]
 8013ebe:	42a5      	cmp	r5, r4
 8013ec0:	db17      	blt.n	8013ef2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013ec2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8013ec6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8013eca:	429a      	cmp	r2, r3
 8013ecc:	db11      	blt.n	8013ef2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013ece:	88b9      	ldrh	r1, [r7, #4]
 8013ed0:	440d      	add	r5, r1
 8013ed2:	88b1      	ldrh	r1, [r6, #4]
 8013ed4:	440c      	add	r4, r1
 8013ed6:	b22d      	sxth	r5, r5
 8013ed8:	b224      	sxth	r4, r4
 8013eda:	42a5      	cmp	r5, r4
 8013edc:	dc09      	bgt.n	8013ef2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8013ede:	88f8      	ldrh	r0, [r7, #6]
 8013ee0:	4410      	add	r0, r2
 8013ee2:	88f2      	ldrh	r2, [r6, #6]
 8013ee4:	4413      	add	r3, r2
 8013ee6:	b200      	sxth	r0, r0
 8013ee8:	b21b      	sxth	r3, r3
 8013eea:	4298      	cmp	r0, r3
 8013eec:	bfcc      	ite	gt
 8013eee:	2000      	movgt	r0, #0
 8013ef0:	2001      	movle	r0, #1
 8013ef2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013ef4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8013ef4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013ef6:	4604      	mov	r4, r0
 8013ef8:	4608      	mov	r0, r1
 8013efa:	460d      	mov	r5, r1
 8013efc:	f7fc fd31 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f00:	b978      	cbnz	r0, 8013f22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8013f02:	4620      	mov	r0, r4
 8013f04:	f7fc fd2d 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f08:	f9b5 6000 	ldrsh.w	r6, [r5]
 8013f0c:	b150      	cbz	r0, 8013f24 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8013f0e:	8026      	strh	r6, [r4, #0]
 8013f10:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8013f14:	8063      	strh	r3, [r4, #2]
 8013f16:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8013f1a:	80a3      	strh	r3, [r4, #4]
 8013f1c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8013f20:	80e3      	strh	r3, [r4, #6]
 8013f22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013f24:	f9b4 1000 	ldrsh.w	r1, [r4]
 8013f28:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013f2c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8013f30:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8013f34:	88ed      	ldrh	r5, [r5, #6]
 8013f36:	42b1      	cmp	r1, r6
 8013f38:	460f      	mov	r7, r1
 8013f3a:	bfa8      	it	ge
 8013f3c:	4637      	movge	r7, r6
 8013f3e:	4293      	cmp	r3, r2
 8013f40:	4618      	mov	r0, r3
 8013f42:	4466      	add	r6, ip
 8013f44:	bfa8      	it	ge
 8013f46:	4610      	movge	r0, r2
 8013f48:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8013f4c:	8027      	strh	r7, [r4, #0]
 8013f4e:	442a      	add	r2, r5
 8013f50:	88e5      	ldrh	r5, [r4, #6]
 8013f52:	8060      	strh	r0, [r4, #2]
 8013f54:	4461      	add	r1, ip
 8013f56:	442b      	add	r3, r5
 8013f58:	b236      	sxth	r6, r6
 8013f5a:	b209      	sxth	r1, r1
 8013f5c:	b212      	sxth	r2, r2
 8013f5e:	b21b      	sxth	r3, r3
 8013f60:	428e      	cmp	r6, r1
 8013f62:	bfac      	ite	ge
 8013f64:	ebc7 0106 	rsbge	r1, r7, r6
 8013f68:	ebc7 0101 	rsblt	r1, r7, r1
 8013f6c:	429a      	cmp	r2, r3
 8013f6e:	bfac      	ite	ge
 8013f70:	ebc0 0202 	rsbge	r2, r0, r2
 8013f74:	ebc0 0203 	rsblt	r2, r0, r3
 8013f78:	80a1      	strh	r1, [r4, #4]
 8013f7a:	80e2      	strh	r2, [r4, #6]
 8013f7c:	e7d1      	b.n	8013f22 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08013f80 <_ZN8touchgfx11Application11getInstanceEv>:
 8013f80:	4b01      	ldr	r3, [pc, #4]	@ (8013f88 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8013f82:	6818      	ldr	r0, [r3, #0]
 8013f84:	4770      	bx	lr
 8013f86:	bf00      	nop
 8013f88:	20002fa0 	.word	0x20002fa0

08013f8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8013f8c:	b510      	push	{r4, lr}
 8013f8e:	2300      	movs	r3, #0
 8013f90:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8013f94:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8013f98:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8013f9c:	4604      	mov	r4, r0
 8013f9e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8013fa2:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8013fa6:	429a      	cmp	r2, r3
 8013fa8:	d90e      	bls.n	8013fc8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8013faa:	18e2      	adds	r2, r4, r3
 8013fac:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8013fb0:	b122      	cbz	r2, 8013fbc <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8013fb2:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8013fb6:	6803      	ldr	r3, [r0, #0]
 8013fb8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013fba:	4798      	blx	r3
 8013fbc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8013fc0:	3301      	adds	r3, #1
 8013fc2:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8013fc6:	e7ea      	b.n	8013f9e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8013fc8:	bd10      	pop	{r4, pc}

08013fca <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8013fca:	2300      	movs	r3, #0
 8013fcc:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8013fd0:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8013fd4:	30a4      	adds	r0, #164	@ 0xa4
 8013fd6:	f802 3b01 	strb.w	r3, [r2], #1
 8013fda:	4282      	cmp	r2, r0
 8013fdc:	d1fb      	bne.n	8013fd6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8013fde:	4770      	bx	lr

08013fe0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8013fe0:	b570      	push	{r4, r5, r6, lr}
 8013fe2:	4c0b      	ldr	r4, [pc, #44]	@ (8014010 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8013fe4:	4605      	mov	r5, r0
 8013fe6:	6820      	ldr	r0, [r4, #0]
 8013fe8:	460e      	mov	r6, r1
 8013fea:	b110      	cbz	r0, 8013ff2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8013fec:	6803      	ldr	r3, [r0, #0]
 8013fee:	695b      	ldr	r3, [r3, #20]
 8013ff0:	4798      	blx	r3
 8013ff2:	1d28      	adds	r0, r5, #4
 8013ff4:	f7ff ffe9 	bl	8013fca <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8013ff8:	6026      	str	r6, [r4, #0]
 8013ffa:	6833      	ldr	r3, [r6, #0]
 8013ffc:	4630      	mov	r0, r6
 8013ffe:	68db      	ldr	r3, [r3, #12]
 8014000:	4798      	blx	r3
 8014002:	682b      	ldr	r3, [r5, #0]
 8014004:	4628      	mov	r0, r5
 8014006:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8014008:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801400c:	4718      	bx	r3
 801400e:	bf00      	nop
 8014010:	20002f90 	.word	0x20002f90

08014014 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014014:	2300      	movs	r3, #0
 8014016:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801401a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 801401e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014020:	461a      	mov	r2, r3
 8014022:	461c      	mov	r4, r3
 8014024:	461d      	mov	r5, r3
 8014026:	459c      	cmp	ip, r3
 8014028:	dd1a      	ble.n	8014060 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801402a:	18c6      	adds	r6, r0, r3
 801402c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8014030:	b16e      	cbz	r6, 801404e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014032:	429a      	cmp	r2, r3
 8014034:	d008      	beq.n	8014048 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014036:	fa1f fe82 	uxth.w	lr, r2
 801403a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801403e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014042:	1887      	adds	r7, r0, r2
 8014044:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8014048:	3201      	adds	r2, #1
 801404a:	3301      	adds	r3, #1
 801404c:	e7eb      	b.n	8014026 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801404e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8014052:	4299      	cmp	r1, r3
 8014054:	bfa8      	it	ge
 8014056:	3501      	addge	r5, #1
 8014058:	429e      	cmp	r6, r3
 801405a:	bfc8      	it	gt
 801405c:	3401      	addgt	r4, #1
 801405e:	e7f4      	b.n	801404a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014060:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8014064:	1b49      	subs	r1, r1, r5
 8014066:	1b1b      	subs	r3, r3, r4
 8014068:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801406c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014070:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8014074:	4293      	cmp	r3, r2
 8014076:	dd03      	ble.n	8014080 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014078:	3b01      	subs	r3, #1
 801407a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801407e:	e7f7      	b.n	8014070 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014080:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014084 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014084:	b570      	push	{r4, r5, r6, lr}
 8014086:	4d16      	ldr	r5, [pc, #88]	@ (80140e0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014088:	4604      	mov	r4, r0
 801408a:	6828      	ldr	r0, [r5, #0]
 801408c:	b140      	cbz	r0, 80140a0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801408e:	7a03      	ldrb	r3, [r0, #8]
 8014090:	b933      	cbnz	r3, 80140a0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014092:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8014096:	6803      	ldr	r3, [r0, #0]
 8014098:	689b      	ldr	r3, [r3, #8]
 801409a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801409e:	4718      	bx	r3
 80140a0:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80140a4:	4e0f      	ldr	r6, [pc, #60]	@ (80140e4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80140a6:	b973      	cbnz	r3, 80140c6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80140a8:	b168      	cbz	r0, 80140c6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80140aa:	7a03      	ldrb	r3, [r0, #8]
 80140ac:	b15b      	cbz	r3, 80140c6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80140ae:	6830      	ldr	r0, [r6, #0]
 80140b0:	b110      	cbz	r0, 80140b8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80140b2:	6803      	ldr	r3, [r0, #0]
 80140b4:	691b      	ldr	r3, [r3, #16]
 80140b6:	4798      	blx	r3
 80140b8:	6828      	ldr	r0, [r5, #0]
 80140ba:	6803      	ldr	r3, [r0, #0]
 80140bc:	68db      	ldr	r3, [r3, #12]
 80140be:	4798      	blx	r3
 80140c0:	2301      	movs	r3, #1
 80140c2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80140c6:	3404      	adds	r4, #4
 80140c8:	4620      	mov	r0, r4
 80140ca:	f7ff ff5f 	bl	8013f8c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80140ce:	4620      	mov	r0, r4
 80140d0:	f7ff ffa0 	bl	8014014 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80140d4:	6830      	ldr	r0, [r6, #0]
 80140d6:	b110      	cbz	r0, 80140de <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80140d8:	6803      	ldr	r3, [r0, #0]
 80140da:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80140dc:	e7dd      	b.n	801409a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80140de:	bd70      	pop	{r4, r5, r6, pc}
 80140e0:	20002f94 	.word	0x20002f94
 80140e4:	20002f90 	.word	0x20002f90

080140e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80140e8:	4603      	mov	r3, r0
 80140ea:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80140ee:	2200      	movs	r2, #0
 80140f0:	801a      	strh	r2, [r3, #0]
 80140f2:	805a      	strh	r2, [r3, #2]
 80140f4:	809a      	strh	r2, [r3, #4]
 80140f6:	80da      	strh	r2, [r3, #6]
 80140f8:	3308      	adds	r3, #8
 80140fa:	428b      	cmp	r3, r1
 80140fc:	d1f8      	bne.n	80140f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80140fe:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8014102:	4770      	bx	lr

08014104 <_ZN8touchgfx11ApplicationC1Ev>:
 8014104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014106:	4606      	mov	r6, r0
 8014108:	4b1c      	ldr	r3, [pc, #112]	@ (801417c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801410a:	f846 3b04 	str.w	r3, [r6], #4
 801410e:	4604      	mov	r4, r0
 8014110:	2500      	movs	r5, #0
 8014112:	22a8      	movs	r2, #168	@ 0xa8
 8014114:	2100      	movs	r1, #0
 8014116:	4630      	mov	r0, r6
 8014118:	f011 ff41 	bl	8025f9e <memset>
 801411c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8014120:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014124:	f7ff ffe0 	bl	80140e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014128:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 801412c:	f7ff ffdc 	bl	80140e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014130:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8014134:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8014138:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801413c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8014140:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8014144:	490e      	ldr	r1, [pc, #56]	@ (8014180 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014146:	480f      	ldr	r0, [pc, #60]	@ (8014184 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014148:	4f0f      	ldr	r7, [pc, #60]	@ (8014188 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801414a:	f011 fb49 	bl	80257e0 <CRC_Lock>
 801414e:	4b0f      	ldr	r3, [pc, #60]	@ (801418c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014150:	b158      	cbz	r0, 801416a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014152:	801d      	strh	r5, [r3, #0]
 8014154:	4a0e      	ldr	r2, [pc, #56]	@ (8014190 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014156:	2300      	movs	r3, #0
 8014158:	6013      	str	r3, [r2, #0]
 801415a:	4a0e      	ldr	r2, [pc, #56]	@ (8014194 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801415c:	603b      	str	r3, [r7, #0]
 801415e:	4630      	mov	r0, r6
 8014160:	6013      	str	r3, [r2, #0]
 8014162:	f7ff ff32 	bl	8013fca <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014166:	4620      	mov	r0, r4
 8014168:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801416a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801416e:	2002      	movs	r0, #2
 8014170:	801a      	strh	r2, [r3, #0]
 8014172:	6038      	str	r0, [r7, #0]
 8014174:	f001 fa52 	bl	801561c <_ZN8touchgfx6Screen4drawEv>
 8014178:	e7ec      	b.n	8014154 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801417a:	bf00      	nop
 801417c:	080293dc 	.word	0x080293dc
 8014180:	b5e8b5cd 	.word	0xb5e8b5cd
 8014184:	f407a5c2 	.word	0xf407a5c2
 8014188:	20002f90 	.word	0x20002f90
 801418c:	2000002c 	.word	0x2000002c
 8014190:	20002fa0 	.word	0x20002fa0
 8014194:	20002f94 	.word	0x20002f94

08014198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014198:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801419c:	3b01      	subs	r3, #1
 801419e:	b29b      	uxth	r3, r3
 80141a0:	428b      	cmp	r3, r1
 80141a2:	b510      	push	{r4, lr}
 80141a4:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 80141a8:	d908      	bls.n	80141bc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80141aa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80141ae:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80141b2:	681a      	ldr	r2, [r3, #0]
 80141b4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80141b8:	685a      	ldr	r2, [r3, #4]
 80141ba:	6062      	str	r2, [r4, #4]
 80141bc:	bd10      	pop	{r4, pc}
	...

080141c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80141c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141c4:	4b8f      	ldr	r3, [pc, #572]	@ (8014404 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80141c6:	b08f      	sub	sp, #60	@ 0x3c
 80141c8:	ac0a      	add	r4, sp, #40	@ 0x28
 80141ca:	e884 0006 	stmia.w	r4, {r1, r2}
 80141ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 80141d2:	4b8d      	ldr	r3, [pc, #564]	@ (8014408 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80141d4:	4683      	mov	fp, r0
 80141d6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80141da:	4620      	mov	r0, r4
 80141dc:	f7ff fe14 	bl	8013e08 <_ZN8touchgfx4Rect10restrictToEss>
 80141e0:	4620      	mov	r0, r4
 80141e2:	f7fc fbbe 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 80141e6:	2800      	cmp	r0, #0
 80141e8:	d16a      	bne.n	80142c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80141ea:	9403      	str	r4, [sp, #12]
 80141ec:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80141f0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80141f4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80141f8:	35a4      	adds	r5, #164	@ 0xa4
 80141fa:	9301      	str	r3, [sp, #4]
 80141fc:	b15c      	cbz	r4, 8014216 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80141fe:	4629      	mov	r1, r5
 8014200:	9803      	ldr	r0, [sp, #12]
 8014202:	f7ff fe51 	bl	8013ea8 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014206:	3c01      	subs	r4, #1
 8014208:	b118      	cbz	r0, 8014212 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 801420a:	b2a1      	uxth	r1, r4
 801420c:	9801      	ldr	r0, [sp, #4]
 801420e:	f7ff ffc3 	bl	8014198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014212:	3d08      	subs	r5, #8
 8014214:	e7f2      	b.n	80141fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014216:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 801421a:	f8cd a010 	str.w	sl, [sp, #16]
 801421e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014222:	9302      	str	r3, [sp, #8]
 8014224:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014228:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 801422c:	9306      	str	r3, [sp, #24]
 801422e:	445c      	add	r4, fp
 8014230:	2500      	movs	r5, #0
 8014232:	4626      	mov	r6, r4
 8014234:	f8cd a014 	str.w	sl, [sp, #20]
 8014238:	462f      	mov	r7, r5
 801423a:	9b05      	ldr	r3, [sp, #20]
 801423c:	2b00      	cmp	r3, #0
 801423e:	d073      	beq.n	8014328 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014240:	9903      	ldr	r1, [sp, #12]
 8014242:	4630      	mov	r0, r6
 8014244:	f7ff fdbe 	bl	8013dc4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014248:	b350      	cbz	r0, 80142a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801424a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801424e:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014252:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8014256:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801425a:	45e6      	cmp	lr, ip
 801425c:	db33      	blt.n	80142c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801425e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014262:	88b3      	ldrh	r3, [r6, #4]
 8014264:	4472      	add	r2, lr
 8014266:	4463      	add	r3, ip
 8014268:	b212      	sxth	r2, r2
 801426a:	b21b      	sxth	r3, r3
 801426c:	429a      	cmp	r2, r3
 801426e:	dc2a      	bgt.n	80142c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014270:	88f3      	ldrh	r3, [r6, #6]
 8014272:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8014276:	fa1f f289 	uxth.w	r2, r9
 801427a:	4413      	add	r3, r2
 801427c:	b29b      	uxth	r3, r3
 801427e:	45c8      	cmp	r8, r9
 8014280:	fa1f fc88 	uxth.w	ip, r8
 8014284:	fa0f fe83 	sxth.w	lr, r3
 8014288:	db0f      	blt.n	80142aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801428a:	eba3 030c 	sub.w	r3, r3, ip
 801428e:	1ac9      	subs	r1, r1, r3
 8014290:	b209      	sxth	r1, r1
 8014292:	2900      	cmp	r1, #0
 8014294:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014298:	dd12      	ble.n	80142c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801429a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801429e:	4605      	mov	r5, r0
 80142a0:	9b05      	ldr	r3, [sp, #20]
 80142a2:	3b01      	subs	r3, #1
 80142a4:	9305      	str	r3, [sp, #20]
 80142a6:	3e08      	subs	r6, #8
 80142a8:	e7c7      	b.n	801423a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80142aa:	4461      	add	r1, ip
 80142ac:	b209      	sxth	r1, r1
 80142ae:	4571      	cmp	r1, lr
 80142b0:	dc38      	bgt.n	8014324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80142b2:	eba2 020c 	sub.w	r2, r2, ip
 80142b6:	b212      	sxth	r2, r2
 80142b8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80142bc:	2a00      	cmp	r2, #0
 80142be:	dcee      	bgt.n	801429e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80142c0:	b00f      	add	sp, #60	@ 0x3c
 80142c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80142c6:	45c8      	cmp	r8, r9
 80142c8:	db2c      	blt.n	8014324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80142ca:	88f3      	ldrh	r3, [r6, #6]
 80142cc:	4499      	add	r9, r3
 80142ce:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80142d2:	4498      	add	r8, r3
 80142d4:	fa0f f989 	sxth.w	r9, r9
 80142d8:	fa0f f888 	sxth.w	r8, r8
 80142dc:	45c1      	cmp	r9, r8
 80142de:	db21      	blt.n	8014324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80142e0:	88b3      	ldrh	r3, [r6, #4]
 80142e2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80142e6:	fa1f f28c 	uxth.w	r2, ip
 80142ea:	4413      	add	r3, r2
 80142ec:	b29b      	uxth	r3, r3
 80142ee:	45e6      	cmp	lr, ip
 80142f0:	fa1f f88e 	uxth.w	r8, lr
 80142f4:	fa0f f983 	sxth.w	r9, r3
 80142f8:	db0a      	blt.n	8014310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80142fa:	eba3 0308 	sub.w	r3, r3, r8
 80142fe:	1ac9      	subs	r1, r1, r3
 8014300:	b209      	sxth	r1, r1
 8014302:	2900      	cmp	r1, #0
 8014304:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8014308:	ddda      	ble.n	80142c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801430a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801430e:	e7c6      	b.n	801429e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014310:	4441      	add	r1, r8
 8014312:	b209      	sxth	r1, r1
 8014314:	4549      	cmp	r1, r9
 8014316:	dc05      	bgt.n	8014324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014318:	eba2 0208 	sub.w	r2, r2, r8
 801431c:	b212      	sxth	r2, r2
 801431e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8014322:	e7cb      	b.n	80142bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014324:	4607      	mov	r7, r0
 8014326:	e7bb      	b.n	80142a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014328:	2d00      	cmp	r5, #0
 801432a:	d181      	bne.n	8014230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 801432c:	2f00      	cmp	r7, #0
 801432e:	f000 81dd 	beq.w	80146ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014332:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8014336:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801433a:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801433e:	b2b3      	uxth	r3, r6
 8014340:	9305      	str	r3, [sp, #20]
 8014342:	9a05      	ldr	r2, [sp, #20]
 8014344:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8014348:	4413      	add	r3, r2
 801434a:	b2ba      	uxth	r2, r7
 801434c:	4492      	add	sl, r2
 801434e:	b29b      	uxth	r3, r3
 8014350:	fa1f fa8a 	uxth.w	sl, sl
 8014354:	fa0f f883 	sxth.w	r8, r3
 8014358:	fa0f f98a 	sxth.w	r9, sl
 801435c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014360:	9b04      	ldr	r3, [sp, #16]
 8014362:	2b00      	cmp	r3, #0
 8014364:	d052      	beq.n	801440c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014366:	9903      	ldr	r1, [sp, #12]
 8014368:	4620      	mov	r0, r4
 801436a:	f7ff fd2b 	bl	8013dc4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801436e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014372:	b1c0      	cbz	r0, 80143a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014374:	f9b4 e000 	ldrsh.w	lr, [r4]
 8014378:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801437c:	4576      	cmp	r6, lr
 801437e:	dc22      	bgt.n	80143c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014380:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014384:	44f4      	add	ip, lr
 8014386:	fa0f fc8c 	sxth.w	ip, ip
 801438a:	45e0      	cmp	r8, ip
 801438c:	db1b      	blt.n	80143c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801438e:	428f      	cmp	r7, r1
 8014390:	fa1f fc81 	uxth.w	ip, r1
 8014394:	88e1      	ldrh	r1, [r4, #6]
 8014396:	dc0d      	bgt.n	80143b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014398:	ebaa 0c0c 	sub.w	ip, sl, ip
 801439c:	eba1 010c 	sub.w	r1, r1, ip
 80143a0:	f8a4 9002 	strh.w	r9, [r4, #2]
 80143a4:	80e1      	strh	r1, [r4, #6]
 80143a6:	4628      	mov	r0, r5
 80143a8:	9904      	ldr	r1, [sp, #16]
 80143aa:	3901      	subs	r1, #1
 80143ac:	9104      	str	r1, [sp, #16]
 80143ae:	3c08      	subs	r4, #8
 80143b0:	4605      	mov	r5, r0
 80143b2:	e7d3      	b.n	801435c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80143b4:	4461      	add	r1, ip
 80143b6:	b209      	sxth	r1, r1
 80143b8:	4549      	cmp	r1, r9
 80143ba:	dcf5      	bgt.n	80143a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80143bc:	eba2 0c0c 	sub.w	ip, r2, ip
 80143c0:	f8a4 c006 	strh.w	ip, [r4, #6]
 80143c4:	e7ef      	b.n	80143a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80143c6:	428f      	cmp	r7, r1
 80143c8:	dcee      	bgt.n	80143a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80143ca:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80143ce:	4461      	add	r1, ip
 80143d0:	b209      	sxth	r1, r1
 80143d2:	4589      	cmp	r9, r1
 80143d4:	dbe8      	blt.n	80143a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80143d6:	4576      	cmp	r6, lr
 80143d8:	fa1f fc8e 	uxth.w	ip, lr
 80143dc:	88a1      	ldrh	r1, [r4, #4]
 80143de:	dc07      	bgt.n	80143f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80143e0:	eba3 0c0c 	sub.w	ip, r3, ip
 80143e4:	eba1 010c 	sub.w	r1, r1, ip
 80143e8:	f8a4 8000 	strh.w	r8, [r4]
 80143ec:	80a1      	strh	r1, [r4, #4]
 80143ee:	e7da      	b.n	80143a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80143f0:	4461      	add	r1, ip
 80143f2:	b209      	sxth	r1, r1
 80143f4:	4588      	cmp	r8, r1
 80143f6:	dbd7      	blt.n	80143a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80143f8:	9905      	ldr	r1, [sp, #20]
 80143fa:	eba1 0c0c 	sub.w	ip, r1, ip
 80143fe:	f8a4 c004 	strh.w	ip, [r4, #4]
 8014402:	e7d0      	b.n	80143a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014404:	20002f4a 	.word	0x20002f4a
 8014408:	20002f48 	.word	0x20002f48
 801440c:	2d00      	cmp	r5, #0
 801440e:	f000 816d 	beq.w	80146ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014412:	9b06      	ldr	r3, [sp, #24]
 8014414:	445b      	add	r3, fp
 8014416:	461c      	mov	r4, r3
 8014418:	9b02      	ldr	r3, [sp, #8]
 801441a:	3301      	adds	r3, #1
 801441c:	f000 8166 	beq.w	80146ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014420:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8014424:	4629      	mov	r1, r5
 8014426:	9803      	ldr	r0, [sp, #12]
 8014428:	f7ff fd3e 	bl	8013ea8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801442c:	b120      	cbz	r0, 8014438 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801442e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014432:	9801      	ldr	r0, [sp, #4]
 8014434:	f7ff feb0 	bl	8014198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014438:	9903      	ldr	r1, [sp, #12]
 801443a:	4628      	mov	r0, r5
 801443c:	f7ff fcc2 	bl	8013dc4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014440:	2800      	cmp	r0, #0
 8014442:	f000 809c 	beq.w	801457e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014446:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801444a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801444e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014452:	9309      	str	r3, [sp, #36]	@ 0x24
 8014454:	fa1f f189 	uxth.w	r1, r9
 8014458:	eb01 0c03 	add.w	ip, r1, r3
 801445c:	fa1f fa8c 	uxth.w	sl, ip
 8014460:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8014464:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8014468:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801446c:	b283      	uxth	r3, r0
 801446e:	eb03 050c 	add.w	r5, r3, ip
 8014472:	b2ad      	uxth	r5, r5
 8014474:	9505      	str	r5, [sp, #20]
 8014476:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801447a:	9504      	str	r5, [sp, #16]
 801447c:	4548      	cmp	r0, r9
 801447e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8014482:	f340 8099 	ble.w	80145b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8014486:	1a5b      	subs	r3, r3, r1
 8014488:	b29b      	uxth	r3, r3
 801448a:	4596      	cmp	lr, r2
 801448c:	fa0f f08a 	sxth.w	r0, sl
 8014490:	b21e      	sxth	r6, r3
 8014492:	dd2e      	ble.n	80144f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8014494:	9f02      	ldr	r7, [sp, #8]
 8014496:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801449a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801449e:	9f04      	ldr	r7, [sp, #16]
 80144a0:	1a3f      	subs	r7, r7, r0
 80144a2:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 80144a6:	fa1f fe8e 	uxth.w	lr, lr
 80144aa:	b292      	uxth	r2, r2
 80144ac:	ebae 0102 	sub.w	r1, lr, r2
 80144b0:	44a6      	add	lr, r4
 80144b2:	4402      	add	r2, r0
 80144b4:	b289      	uxth	r1, r1
 80144b6:	fa0f fe8e 	sxth.w	lr, lr
 80144ba:	b212      	sxth	r2, r2
 80144bc:	b20d      	sxth	r5, r1
 80144be:	ebae 0202 	sub.w	r2, lr, r2
 80144c2:	436f      	muls	r7, r5
 80144c4:	4372      	muls	r2, r6
 80144c6:	4297      	cmp	r7, r2
 80144c8:	db09      	blt.n	80144de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80144ca:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 80144ce:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80144d2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80144d6:	449c      	add	ip, r3
 80144d8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80144dc:	e686      	b.n	80141ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80144de:	4421      	add	r1, r4
 80144e0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80144e4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 80144e8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80144ec:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80144f0:	e67c      	b.n	80141ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80144f2:	9f04      	ldr	r7, [sp, #16]
 80144f4:	42b8      	cmp	r0, r7
 80144f6:	da27      	bge.n	8014548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80144f8:	9902      	ldr	r1, [sp, #8]
 80144fa:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 80144fe:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014502:	eb05 010e 	add.w	r1, r5, lr
 8014506:	fa1f f881 	uxth.w	r8, r1
 801450a:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 801450e:	4411      	add	r1, r2
 8014510:	eba1 0108 	sub.w	r1, r1, r8
 8014514:	b289      	uxth	r1, r1
 8014516:	fa0f f988 	sxth.w	r9, r8
 801451a:	eba2 020e 	sub.w	r2, r2, lr
 801451e:	fa0f f881 	sxth.w	r8, r1
 8014522:	1a3f      	subs	r7, r7, r0
 8014524:	4372      	muls	r2, r6
 8014526:	fb08 f707 	mul.w	r7, r8, r7
 801452a:	42ba      	cmp	r2, r7
 801452c:	dc06      	bgt.n	801453c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801452e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8014532:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8014536:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801453a:	e7ca      	b.n	80144d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 801453c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8014540:	4429      	add	r1, r5
 8014542:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014546:	e651      	b.n	80141ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014548:	9805      	ldr	r0, [sp, #20]
 801454a:	ebaa 0000 	sub.w	r0, sl, r0
 801454e:	b280      	uxth	r0, r0
 8014550:	2d06      	cmp	r5, #6
 8014552:	fa0f fe80 	sxth.w	lr, r0
 8014556:	d817      	bhi.n	8014588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8014558:	9b04      	ldr	r3, [sp, #16]
 801455a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801455e:	1c6b      	adds	r3, r5, #1
 8014560:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8014564:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8014568:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801456c:	9b01      	ldr	r3, [sp, #4]
 801456e:	9801      	ldr	r0, [sp, #4]
 8014570:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014574:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014578:	805a      	strh	r2, [r3, #2]
 801457a:	809e      	strh	r6, [r3, #4]
 801457c:	80d9      	strh	r1, [r3, #6]
 801457e:	9b02      	ldr	r3, [sp, #8]
 8014580:	3b01      	subs	r3, #1
 8014582:	9302      	str	r3, [sp, #8]
 8014584:	3c08      	subs	r4, #8
 8014586:	e747      	b.n	8014418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8014588:	9a02      	ldr	r2, [sp, #8]
 801458a:	45b6      	cmp	lr, r6
 801458c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014590:	db0d      	blt.n	80145ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014592:	449c      	add	ip, r3
 8014594:	fa1f fc8c 	uxth.w	ip, ip
 8014598:	445a      	add	r2, fp
 801459a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801459e:	448c      	add	ip, r1
 80145a0:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80145a4:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 80145a8:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 80145ac:	e61e      	b.n	80141ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80145ae:	445a      	add	r2, fp
 80145b0:	4484      	add	ip, r0
 80145b2:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 80145b6:	e78f      	b.n	80144d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80145b8:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 80145bc:	fa1f f18e 	uxth.w	r1, lr
 80145c0:	eb01 0806 	add.w	r8, r1, r6
 80145c4:	b293      	uxth	r3, r2
 80145c6:	fa1f f888 	uxth.w	r8, r8
 80145ca:	9306      	str	r3, [sp, #24]
 80145cc:	fa0f f388 	sxth.w	r3, r8
 80145d0:	9307      	str	r3, [sp, #28]
 80145d2:	9f06      	ldr	r7, [sp, #24]
 80145d4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80145d8:	443b      	add	r3, r7
 80145da:	b29b      	uxth	r3, r3
 80145dc:	4596      	cmp	lr, r2
 80145de:	9308      	str	r3, [sp, #32]
 80145e0:	da24      	bge.n	801462c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80145e2:	9905      	ldr	r1, [sp, #20]
 80145e4:	eba3 0308 	sub.w	r3, r3, r8
 80145e8:	ebaa 0401 	sub.w	r4, sl, r1
 80145ec:	b2a4      	uxth	r4, r4
 80145ee:	b29b      	uxth	r3, r3
 80145f0:	b225      	sxth	r5, r4
 80145f2:	b219      	sxth	r1, r3
 80145f4:	eba2 020e 	sub.w	r2, r2, lr
 80145f8:	eba9 0000 	sub.w	r0, r9, r0
 80145fc:	436a      	muls	r2, r5
 80145fe:	4348      	muls	r0, r1
 8014600:	4282      	cmp	r2, r0
 8014602:	9a02      	ldr	r2, [sp, #8]
 8014604:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014608:	445a      	add	r2, fp
 801460a:	dc06      	bgt.n	801461a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 801460c:	9b07      	ldr	r3, [sp, #28]
 801460e:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8014612:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8014616:	44a4      	add	ip, r4
 8014618:	e75e      	b.n	80144d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801461a:	9904      	ldr	r1, [sp, #16]
 801461c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8014620:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8014624:	4433      	add	r3, r6
 8014626:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801462a:	e5df      	b.n	80141ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801462c:	9f06      	ldr	r7, [sp, #24]
 801462e:	9b04      	ldr	r3, [sp, #16]
 8014630:	1bc9      	subs	r1, r1, r7
 8014632:	fa0f f78a 	sxth.w	r7, sl
 8014636:	b289      	uxth	r1, r1
 8014638:	429f      	cmp	r7, r3
 801463a:	fa0f fe81 	sxth.w	lr, r1
 801463e:	dd23      	ble.n	8014688 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014640:	9a05      	ldr	r2, [sp, #20]
 8014642:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014646:	9d07      	ldr	r5, [sp, #28]
 8014648:	ebaa 0202 	sub.w	r2, sl, r2
 801464c:	b292      	uxth	r2, r2
 801464e:	eba5 0a03 	sub.w	sl, r5, r3
 8014652:	b214      	sxth	r4, r2
 8014654:	eba9 0000 	sub.w	r0, r9, r0
 8014658:	9b02      	ldr	r3, [sp, #8]
 801465a:	fb0e f000 	mul.w	r0, lr, r0
 801465e:	fb04 fa0a 	mul.w	sl, r4, sl
 8014662:	00db      	lsls	r3, r3, #3
 8014664:	4550      	cmp	r0, sl
 8014666:	445b      	add	r3, fp
 8014668:	db03      	blt.n	8014672 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801466a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801466e:	4494      	add	ip, r2
 8014670:	e732      	b.n	80144d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014672:	9a04      	ldr	r2, [sp, #16]
 8014674:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8014678:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801467c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8014680:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014684:	4431      	add	r1, r6
 8014686:	e75c      	b.n	8014542 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8014688:	9b08      	ldr	r3, [sp, #32]
 801468a:	eba3 0308 	sub.w	r3, r3, r8
 801468e:	b29b      	uxth	r3, r3
 8014690:	2d06      	cmp	r5, #6
 8014692:	b218      	sxth	r0, r3
 8014694:	d813      	bhi.n	80146be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8014696:	9b07      	ldr	r3, [sp, #28]
 8014698:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801469c:	1c6b      	adds	r3, r5, #1
 801469e:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 80146a2:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80146a6:	9b01      	ldr	r3, [sp, #4]
 80146a8:	9901      	ldr	r1, [sp, #4]
 80146aa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80146ae:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80146b2:	805a      	strh	r2, [r3, #2]
 80146b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80146b6:	809a      	strh	r2, [r3, #4]
 80146b8:	f8a3 e006 	strh.w	lr, [r3, #6]
 80146bc:	e75f      	b.n	801457e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80146be:	9c02      	ldr	r4, [sp, #8]
 80146c0:	4570      	cmp	r0, lr
 80146c2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80146c6:	db0d      	blt.n	80146e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80146c8:	4431      	add	r1, r6
 80146ca:	9b06      	ldr	r3, [sp, #24]
 80146cc:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80146d0:	b289      	uxth	r1, r1
 80146d2:	445c      	add	r4, fp
 80146d4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80146d8:	4419      	add	r1, r3
 80146da:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80146de:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80146e2:	e583      	b.n	80141ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80146e4:	445c      	add	r4, fp
 80146e6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 80146ea:	e79b      	b.n	8014624 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80146ec:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80146f0:	1e65      	subs	r5, r4, #1
 80146f2:	b2ad      	uxth	r5, r5
 80146f4:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80146f8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80146fc:	42b5      	cmp	r5, r6
 80146fe:	d044      	beq.n	801478a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8014700:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8014704:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8014708:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801470c:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8014710:	4282      	cmp	r2, r0
 8014712:	d11f      	bne.n	8014754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014714:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8014718:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801471c:	459c      	cmp	ip, r3
 801471e:	d119      	bne.n	8014754 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8014720:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8014724:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014728:	19d8      	adds	r0, r3, r7
 801472a:	b200      	sxth	r0, r0
 801472c:	4288      	cmp	r0, r1
 801472e:	d109      	bne.n	8014744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8014730:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8014734:	4413      	add	r3, r2
 8014736:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801473a:	4629      	mov	r1, r5
 801473c:	9801      	ldr	r0, [sp, #4]
 801473e:	f7ff fd2b 	bl	8014198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014742:	e003      	b.n	801474c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014744:	4411      	add	r1, r2
 8014746:	b209      	sxth	r1, r1
 8014748:	42b9      	cmp	r1, r7
 801474a:	d0f3      	beq.n	8014734 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 801474c:	3d01      	subs	r5, #1
 801474e:	b2ad      	uxth	r5, r5
 8014750:	3c08      	subs	r4, #8
 8014752:	e7d3      	b.n	80146fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8014754:	42b9      	cmp	r1, r7
 8014756:	d1f9      	bne.n	801474c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014758:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801475c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014760:	4299      	cmp	r1, r3
 8014762:	d1f3      	bne.n	801474c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014764:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014768:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801476c:	181f      	adds	r7, r3, r0
 801476e:	b23f      	sxth	r7, r7
 8014770:	42ba      	cmp	r2, r7
 8014772:	d105      	bne.n	8014780 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8014774:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8014778:	440b      	add	r3, r1
 801477a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801477e:	e7dc      	b.n	801473a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8014780:	440a      	add	r2, r1
 8014782:	b212      	sxth	r2, r2
 8014784:	4290      	cmp	r0, r2
 8014786:	d1e1      	bne.n	801474c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014788:	e7f6      	b.n	8014778 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801478a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801478e:	2e07      	cmp	r6, #7
 8014790:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8014794:	d812      	bhi.n	80147bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8014796:	1c75      	adds	r5, r6, #1
 8014798:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801479c:	9d01      	ldr	r5, [sp, #4]
 801479e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80147a2:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80147a6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80147aa:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80147ae:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80147b2:	442c      	add	r4, r5
 80147b4:	8061      	strh	r1, [r4, #2]
 80147b6:	80a2      	strh	r2, [r4, #4]
 80147b8:	80e3      	strh	r3, [r4, #6]
 80147ba:	e581      	b.n	80142c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80147bc:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80147c0:	3e01      	subs	r6, #1
 80147c2:	445c      	add	r4, fp
 80147c4:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80147c8:	f04f 37ff 	mov.w	r7, #4294967295
 80147cc:	2500      	movs	r5, #0
 80147ce:	9305      	str	r3, [sp, #20]
 80147d0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80147d4:	9302      	str	r3, [sp, #8]
 80147d6:	1e72      	subs	r2, r6, #1
 80147d8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80147dc:	9304      	str	r3, [sp, #16]
 80147de:	4691      	mov	r9, r2
 80147e0:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80147e4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80147e8:	bf14      	ite	ne
 80147ea:	9905      	ldrne	r1, [sp, #20]
 80147ec:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80147f0:	6818      	ldr	r0, [r3, #0]
 80147f2:	9207      	str	r2, [sp, #28]
 80147f4:	bf18      	it	ne
 80147f6:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80147fa:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80147fe:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014802:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8014806:	9306      	str	r3, [sp, #24]
 8014808:	fb18 f801 	smulbb	r8, r8, r1
 801480c:	6859      	ldr	r1, [r3, #4]
 801480e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014812:	4671      	mov	r1, lr
 8014814:	a80c      	add	r0, sp, #48	@ 0x30
 8014816:	f7ff fb6d 	bl	8013ef4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801481a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801481e:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8014822:	9b04      	ldr	r3, [sp, #16]
 8014824:	9a02      	ldr	r2, [sp, #8]
 8014826:	fb10 f001 	smulbb	r0, r0, r1
 801482a:	fb02 8803 	mla	r8, r2, r3, r8
 801482e:	eba0 0108 	sub.w	r1, r0, r8
 8014832:	f04f 0c08 	mov.w	ip, #8
 8014836:	fb90 f0fc 	sdiv	r0, r0, ip
 801483a:	4288      	cmp	r0, r1
 801483c:	dc20      	bgt.n	8014880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801483e:	4551      	cmp	r1, sl
 8014840:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014844:	da03      	bge.n	801484e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8014846:	b1d9      	cbz	r1, 8014880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014848:	468a      	mov	sl, r1
 801484a:	464f      	mov	r7, r9
 801484c:	4635      	mov	r5, r6
 801484e:	f109 39ff 	add.w	r9, r9, #4294967295
 8014852:	f119 0f02 	cmn.w	r9, #2
 8014856:	d1c5      	bne.n	80147e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8014858:	4616      	mov	r6, r2
 801485a:	3201      	adds	r2, #1
 801485c:	f1a4 0408 	sub.w	r4, r4, #8
 8014860:	d1b6      	bne.n	80147d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8014862:	9b01      	ldr	r3, [sp, #4]
 8014864:	b2ac      	uxth	r4, r5
 8014866:	00ed      	lsls	r5, r5, #3
 8014868:	1958      	adds	r0, r3, r5
 801486a:	1c7b      	adds	r3, r7, #1
 801486c:	d10b      	bne.n	8014886 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 801486e:	4601      	mov	r1, r0
 8014870:	9803      	ldr	r0, [sp, #12]
 8014872:	f7ff fb3f 	bl	8013ef4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014876:	4621      	mov	r1, r4
 8014878:	9801      	ldr	r0, [sp, #4]
 801487a:	f7ff fc8d 	bl	8014198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801487e:	e4b5      	b.n	80141ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014880:	464f      	mov	r7, r9
 8014882:	4635      	mov	r5, r6
 8014884:	e7ed      	b.n	8014862 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8014886:	9b01      	ldr	r3, [sp, #4]
 8014888:	00ff      	lsls	r7, r7, #3
 801488a:	19d9      	adds	r1, r3, r7
 801488c:	f7ff fb32 	bl	8013ef4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014890:	9b03      	ldr	r3, [sp, #12]
 8014892:	cb03      	ldmia	r3!, {r0, r1}
 8014894:	445f      	add	r7, fp
 8014896:	445d      	add	r5, fp
 8014898:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801489c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80148a0:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80148a4:	9b03      	ldr	r3, [sp, #12]
 80148a6:	6869      	ldr	r1, [r5, #4]
 80148a8:	c303      	stmia	r3!, {r0, r1}
 80148aa:	e7e4      	b.n	8014876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080148ac <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80148ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148b0:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 80148b4:	b09b      	sub	sp, #108	@ 0x6c
 80148b6:	4604      	mov	r4, r0
 80148b8:	4630      	mov	r0, r6
 80148ba:	f7fc f852 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 80148be:	4605      	mov	r5, r0
 80148c0:	b948      	cbnz	r0, 80148d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80148c2:	6823      	ldr	r3, [r4, #0]
 80148c4:	e896 0006 	ldmia.w	r6, {r1, r2}
 80148c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80148ca:	4620      	mov	r0, r4
 80148cc:	4798      	blx	r3
 80148ce:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80148d2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80148d6:	4bc6      	ldr	r3, [pc, #792]	@ (8014bf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80148d8:	681b      	ldr	r3, [r3, #0]
 80148da:	2b00      	cmp	r3, #0
 80148dc:	d03f      	beq.n	801495e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80148de:	4dc5      	ldr	r5, [pc, #788]	@ (8014bf4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80148e0:	4628      	mov	r0, r5
 80148e2:	f7fc f83e 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 80148e6:	4606      	mov	r6, r0
 80148e8:	2800      	cmp	r0, #0
 80148ea:	d138      	bne.n	801495e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80148ec:	4628      	mov	r0, r5
 80148ee:	f7ff f99f 	bl	8013c30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80148f2:	6823      	ldr	r3, [r4, #0]
 80148f4:	6829      	ldr	r1, [r5, #0]
 80148f6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80148f8:	686a      	ldr	r2, [r5, #4]
 80148fa:	4620      	mov	r0, r4
 80148fc:	4798      	blx	r3
 80148fe:	802e      	strh	r6, [r5, #0]
 8014900:	806e      	strh	r6, [r5, #2]
 8014902:	80ae      	strh	r6, [r5, #4]
 8014904:	80ee      	strh	r6, [r5, #6]
 8014906:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 801490a:	4dbb      	ldr	r5, [pc, #748]	@ (8014bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 801490c:	4640      	mov	r0, r8
 801490e:	f7ff fbeb 	bl	80140e8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014912:	882e      	ldrh	r6, [r5, #0]
 8014914:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014918:	4633      	mov	r3, r6
 801491a:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801491e:	42bb      	cmp	r3, r7
 8014920:	d224      	bcs.n	801496c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014922:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8014926:	2907      	cmp	r1, #7
 8014928:	d816      	bhi.n	8014958 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801492a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801492e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014932:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8014936:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801493a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801493e:	1c4a      	adds	r2, r1, #1
 8014940:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8014944:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8014948:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 801494c:	f8a2 a002 	strh.w	sl, [r2, #2]
 8014950:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014954:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014958:	3301      	adds	r3, #1
 801495a:	b29b      	uxth	r3, r3
 801495c:	e7df      	b.n	801491e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 801495e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014962:	2b00      	cmp	r3, #0
 8014964:	d1cf      	bne.n	8014906 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8014966:	b01b      	add	sp, #108	@ 0x6c
 8014968:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801496c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8014970:	42b3      	cmp	r3, r6
 8014972:	d90c      	bls.n	801498e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8014974:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8014978:	6822      	ldr	r2, [r4, #0]
 801497a:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 801497e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8014980:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8014984:	4620      	mov	r0, r4
 8014986:	3601      	adds	r6, #1
 8014988:	47b8      	blx	r7
 801498a:	b2b6      	uxth	r6, r6
 801498c:	e7ee      	b.n	801496c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801498e:	4a9b      	ldr	r2, [pc, #620]	@ (8014bfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014990:	6813      	ldr	r3, [r2, #0]
 8014992:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8014996:	2b01      	cmp	r3, #1
 8014998:	4691      	mov	r9, r2
 801499a:	f040 80e2 	bne.w	8014b62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 801499e:	8829      	ldrh	r1, [r5, #0]
 80149a0:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80149a4:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80149a8:	33ae      	adds	r3, #174	@ 0xae
 80149aa:	2600      	movs	r6, #0
 80149ac:	428f      	cmp	r7, r1
 80149ae:	f103 0308 	add.w	r3, r3, #8
 80149b2:	dd0a      	ble.n	80149ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80149b4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80149b8:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80149bc:	4402      	add	r2, r0
 80149be:	b212      	sxth	r2, r2
 80149c0:	4296      	cmp	r6, r2
 80149c2:	bfb8      	it	lt
 80149c4:	4616      	movlt	r6, r2
 80149c6:	3101      	adds	r1, #1
 80149c8:	e7f0      	b.n	80149ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80149ca:	4b8d      	ldr	r3, [pc, #564]	@ (8014c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80149cc:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8014bfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80149d0:	881b      	ldrh	r3, [r3, #0]
 80149d2:	2b0f      	cmp	r3, #15
 80149d4:	bf88      	it	hi
 80149d6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80149da:	f04f 0300 	mov.w	r3, #0
 80149de:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80149e2:	bf98      	it	ls
 80149e4:	f04f 0b01 	movls.w	fp, #1
 80149e8:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80149ec:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80149f0:	4b82      	ldr	r3, [pc, #520]	@ (8014bfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80149f2:	4438      	add	r0, r7
 80149f4:	b207      	sxth	r7, r0
 80149f6:	6818      	ldr	r0, [r3, #0]
 80149f8:	42b7      	cmp	r7, r6
 80149fa:	6803      	ldr	r3, [r0, #0]
 80149fc:	f280 8083 	bge.w	8014b06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014a00:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8014a04:	4798      	blx	r3
 8014a06:	eb07 030b 	add.w	r3, r7, fp
 8014a0a:	4298      	cmp	r0, r3
 8014a0c:	da07      	bge.n	8014a1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014a0e:	42b0      	cmp	r0, r6
 8014a10:	da05      	bge.n	8014a1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014a12:	4287      	cmp	r7, r0
 8014a14:	dd6c      	ble.n	8014af0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014a16:	2f00      	cmp	r7, #0
 8014a18:	dd6a      	ble.n	8014af0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014a1a:	4630      	mov	r0, r6
 8014a1c:	e004      	b.n	8014a28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014a1e:	4287      	cmp	r7, r0
 8014a20:	dcfb      	bgt.n	8014a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014a22:	42b0      	cmp	r0, r6
 8014a24:	bfa8      	it	ge
 8014a26:	4630      	movge	r0, r6
 8014a28:	4b76      	ldr	r3, [pc, #472]	@ (8014c04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8014a2a:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014a2e:	1bc0      	subs	r0, r0, r7
 8014a30:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014a34:	882f      	ldrh	r7, [r5, #0]
 8014a36:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014a3a:	2200      	movs	r2, #0
 8014a3c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014a40:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014a44:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014a48:	42bb      	cmp	r3, r7
 8014a4a:	d9cd      	bls.n	80149e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014a4c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8014a50:	ab07      	add	r3, sp, #28
 8014a52:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014a56:	6851      	ldr	r1, [r2, #4]
 8014a58:	c303      	stmia	r3!, {r0, r1}
 8014a5a:	a905      	add	r1, sp, #20
 8014a5c:	a807      	add	r0, sp, #28
 8014a5e:	f7ff f9b1 	bl	8013dc4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014a62:	2800      	cmp	r0, #0
 8014a64:	d04c      	beq.n	8014b00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8014a66:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8014a6a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8014a6e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8014a72:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8014a76:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014a7a:	9302      	str	r3, [sp, #8]
 8014a7c:	4686      	mov	lr, r0
 8014a7e:	4290      	cmp	r0, r2
 8014a80:	4450      	add	r0, sl
 8014a82:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8014a86:	bfb8      	it	lt
 8014a88:	4696      	movlt	lr, r2
 8014a8a:	4452      	add	r2, sl
 8014a8c:	4299      	cmp	r1, r3
 8014a8e:	b280      	uxth	r0, r0
 8014a90:	b292      	uxth	r2, r2
 8014a92:	468c      	mov	ip, r1
 8014a94:	fa0f fa82 	sxth.w	sl, r2
 8014a98:	bfb8      	it	lt
 8014a9a:	469c      	movlt	ip, r3
 8014a9c:	b203      	sxth	r3, r0
 8014a9e:	4553      	cmp	r3, sl
 8014aa0:	bfb8      	it	lt
 8014aa2:	4602      	movlt	r2, r0
 8014aa4:	eba2 020e 	sub.w	r2, r2, lr
 8014aa8:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014aac:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8014ab0:	9b02      	ldr	r3, [sp, #8]
 8014ab2:	f8ad e01c 	strh.w	lr, [sp, #28]
 8014ab6:	4411      	add	r1, r2
 8014ab8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014abc:	f8ad c01e 	strh.w	ip, [sp, #30]
 8014ac0:	4413      	add	r3, r2
 8014ac2:	b289      	uxth	r1, r1
 8014ac4:	b29b      	uxth	r3, r3
 8014ac6:	b208      	sxth	r0, r1
 8014ac8:	b21a      	sxth	r2, r3
 8014aca:	4290      	cmp	r0, r2
 8014acc:	bfb8      	it	lt
 8014ace:	460b      	movlt	r3, r1
 8014ad0:	eba3 030c 	sub.w	r3, r3, ip
 8014ad4:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8014ad8:	a807      	add	r0, sp, #28
 8014ada:	f7fb ff42 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ade:	b920      	cbnz	r0, 8014aea <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8014ae0:	6823      	ldr	r3, [r4, #0]
 8014ae2:	a907      	add	r1, sp, #28
 8014ae4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014ae6:	4620      	mov	r0, r4
 8014ae8:	4798      	blx	r3
 8014aea:	3701      	adds	r7, #1
 8014aec:	b2bf      	uxth	r7, r7
 8014aee:	e7a9      	b.n	8014a44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8014af0:	f8d9 0000 	ldr.w	r0, [r9]
 8014af4:	6803      	ldr	r3, [r0, #0]
 8014af6:	2101      	movs	r1, #1
 8014af8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8014afc:	4798      	blx	r3
 8014afe:	e773      	b.n	80149e8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014b00:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8014b04:	e7e8      	b.n	8014ad8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8014b06:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8014b08:	4798      	blx	r3
 8014b0a:	4b3f      	ldr	r3, [pc, #252]	@ (8014c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8014b0c:	781b      	ldrb	r3, [r3, #0]
 8014b0e:	2b00      	cmp	r3, #0
 8014b10:	f43f af29 	beq.w	8014966 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014b14:	2300      	movs	r3, #0
 8014b16:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8014b1a:	882b      	ldrh	r3, [r5, #0]
 8014b1c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8014b20:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014b24:	42ab      	cmp	r3, r5
 8014b26:	f4bf af1e 	bcs.w	8014966 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014b2a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8014b2e:	2907      	cmp	r1, #7
 8014b30:	d814      	bhi.n	8014b5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8014b32:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8014b36:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8014b3a:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8014b3e:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8014b42:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8014b46:	1c4a      	adds	r2, r1, #1
 8014b48:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8014b4c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8014b50:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8014b54:	f8a2 c002 	strh.w	ip, [r2, #2]
 8014b58:	8097      	strh	r7, [r2, #4]
 8014b5a:	80d6      	strh	r6, [r2, #6]
 8014b5c:	3301      	adds	r3, #1
 8014b5e:	b29b      	uxth	r3, r3
 8014b60:	e7e0      	b.n	8014b24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8014b62:	2b02      	cmp	r3, #2
 8014b64:	f040 8133 	bne.w	8014dce <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8014b68:	4b28      	ldr	r3, [pc, #160]	@ (8014c0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8014b6a:	781b      	ldrb	r3, [r3, #0]
 8014b6c:	2b01      	cmp	r3, #1
 8014b6e:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8014b72:	f000 8098 	beq.w	8014ca6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014b76:	882a      	ldrh	r2, [r5, #0]
 8014b78:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8014b7c:	3201      	adds	r2, #1
 8014b7e:	b292      	uxth	r2, r2
 8014b80:	2900      	cmp	r1, #0
 8014b82:	d0c2      	beq.n	8014b0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014b84:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8014b88:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8014b8c:	441e      	add	r6, r3
 8014b8e:	b236      	sxth	r6, r6
 8014b90:	4694      	mov	ip, r2
 8014b92:	f04f 0900 	mov.w	r9, #0
 8014b96:	fa1f f38c 	uxth.w	r3, ip
 8014b9a:	4299      	cmp	r1, r3
 8014b9c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8014ba0:	f240 80bf 	bls.w	8014d22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8014ba4:	4427      	add	r7, r4
 8014ba6:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8014baa:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8014bae:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8014bb2:	4283      	cmp	r3, r0
 8014bb4:	f340 80a1 	ble.w	8014cfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8014bb8:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8014bbc:	4406      	add	r6, r0
 8014bbe:	b236      	sxth	r6, r6
 8014bc0:	429e      	cmp	r6, r3
 8014bc2:	bfa8      	it	ge
 8014bc4:	461e      	movge	r6, r3
 8014bc6:	46e1      	mov	r9, ip
 8014bc8:	f10c 0c01 	add.w	ip, ip, #1
 8014bcc:	e7e3      	b.n	8014b96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8014bce:	d10a      	bne.n	8014be6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8014bd0:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8014bd4:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8014bd8:	4562      	cmp	r2, ip
 8014bda:	bfb8      	it	lt
 8014bdc:	4662      	movlt	r2, ip
 8014bde:	4288      	cmp	r0, r1
 8014be0:	bfb8      	it	lt
 8014be2:	461f      	movlt	r7, r3
 8014be4:	e087      	b.n	8014cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014be6:	428a      	cmp	r2, r1
 8014be8:	bfb8      	it	lt
 8014bea:	460a      	movlt	r2, r1
 8014bec:	e083      	b.n	8014cf6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014bee:	bf00      	nop
 8014bf0:	20002f8c 	.word	0x20002f8c
 8014bf4:	20002f98 	.word	0x20002f98
 8014bf8:	2000002c 	.word	0x2000002c
 8014bfc:	20002f54 	.word	0x20002f54
 8014c00:	20002f4a 	.word	0x20002f4a
 8014c04:	20002f48 	.word	0x20002f48
 8014c08:	20002f52 	.word	0x20002f52
 8014c0c:	20002f4c 	.word	0x20002f4c
 8014c10:	19a1      	adds	r1, r4, r6
 8014c12:	ab07      	add	r3, sp, #28
 8014c14:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8014c18:	6849      	ldr	r1, [r1, #4]
 8014c1a:	c303      	stmia	r3!, {r0, r1}
 8014c1c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014c20:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014c24:	2b13      	cmp	r3, #19
 8014c26:	bfd8      	it	le
 8014c28:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8014c2c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014c30:	440b      	add	r3, r1
 8014c32:	1a9b      	subs	r3, r3, r2
 8014c34:	a807      	add	r0, sp, #28
 8014c36:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014c3a:	f7ff f813 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c3e:	a807      	add	r0, sp, #28
 8014c40:	f7fb fe8f 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014c44:	bb78      	cbnz	r0, 8014ca6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014c46:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8014c4a:	f8d9 0000 	ldr.w	r0, [r9]
 8014c4e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014c52:	f8d0 e000 	ldr.w	lr, [r0]
 8014c56:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8014c5a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014c5e:	f1bc 0f14 	cmp.w	ip, #20
 8014c62:	bfa8      	it	ge
 8014c64:	f04f 0c14 	movge.w	ip, #20
 8014c68:	fa1f fc8c 	uxth.w	ip, ip
 8014c6c:	f8cd c000 	str.w	ip, [sp]
 8014c70:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8014c74:	47d8      	blx	fp
 8014c76:	4683      	mov	fp, r0
 8014c78:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014c7c:	a807      	add	r0, sp, #28
 8014c7e:	f7fe ffd7 	bl	8013c30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014c82:	6823      	ldr	r3, [r4, #0]
 8014c84:	4426      	add	r6, r4
 8014c86:	4620      	mov	r0, r4
 8014c88:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014c8a:	a907      	add	r1, sp, #28
 8014c8c:	4798      	blx	r3
 8014c8e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8014c92:	eba0 000b 	sub.w	r0, r0, fp
 8014c96:	b200      	sxth	r0, r0
 8014c98:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8014c9c:	b918      	cbnz	r0, 8014ca6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014c9e:	b2b9      	uxth	r1, r7
 8014ca0:	4650      	mov	r0, sl
 8014ca2:	f7ff fa79 	bl	8014198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014ca6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8014caa:	f1bb 0f00 	cmp.w	fp, #0
 8014cae:	f43f af2c 	beq.w	8014b0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014cb2:	882b      	ldrh	r3, [r5, #0]
 8014cb4:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8014cb8:	3301      	adds	r3, #1
 8014cba:	b29b      	uxth	r3, r3
 8014cbc:	2700      	movs	r7, #0
 8014cbe:	b299      	uxth	r1, r3
 8014cc0:	458b      	cmp	fp, r1
 8014cc2:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8014cc6:	d9a3      	bls.n	8014c10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8014cc8:	4426      	add	r6, r4
 8014cca:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8014cce:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8014cd2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8014cd6:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8014cda:	4408      	add	r0, r1
 8014cdc:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8014ce0:	4461      	add	r1, ip
 8014ce2:	b200      	sxth	r0, r0
 8014ce4:	b209      	sxth	r1, r1
 8014ce6:	4288      	cmp	r0, r1
 8014ce8:	f6bf af71 	bge.w	8014bce <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8014cec:	4584      	cmp	ip, r0
 8014cee:	4662      	mov	r2, ip
 8014cf0:	461f      	mov	r7, r3
 8014cf2:	bfb8      	it	lt
 8014cf4:	4602      	movlt	r2, r0
 8014cf6:	3301      	adds	r3, #1
 8014cf8:	e7e1      	b.n	8014cbe <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8014cfa:	d10e      	bne.n	8014d1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8014cfc:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8014d00:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8014d04:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8014d08:	4473      	add	r3, lr
 8014d0a:	b21b      	sxth	r3, r3
 8014d0c:	429e      	cmp	r6, r3
 8014d0e:	bfa8      	it	ge
 8014d10:	461e      	movge	r6, r3
 8014d12:	4287      	cmp	r7, r0
 8014d14:	bfb8      	it	lt
 8014d16:	46e1      	movlt	r9, ip
 8014d18:	e756      	b.n	8014bc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014d1a:	4286      	cmp	r6, r0
 8014d1c:	bfa8      	it	ge
 8014d1e:	4606      	movge	r6, r0
 8014d20:	e752      	b.n	8014bc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014d22:	eb0a 0007 	add.w	r0, sl, r7
 8014d26:	4427      	add	r7, r4
 8014d28:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8014d2c:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8014d30:	f1bb 0f13 	cmp.w	fp, #19
 8014d34:	bfde      	ittt	le
 8014d36:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8014d3a:	445e      	addle	r6, fp
 8014d3c:	b236      	sxthle	r6, r6
 8014d3e:	f7fb fe10 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014d42:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8014d46:	2800      	cmp	r0, #0
 8014d48:	f47f af1a 	bne.w	8014b80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8014d4c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8014d50:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014d54:	482a      	ldr	r0, [pc, #168]	@ (8014e00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8014d56:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8014d5a:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8014d5e:	6800      	ldr	r0, [r0, #0]
 8014d60:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014d64:	1ab6      	subs	r6, r6, r2
 8014d66:	2e14      	cmp	r6, #20
 8014d68:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014d6c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014d70:	bfa8      	it	ge
 8014d72:	2614      	movge	r6, #20
 8014d74:	f8d0 c000 	ldr.w	ip, [r0]
 8014d78:	b2b6      	uxth	r6, r6
 8014d7a:	fa1f fb8b 	uxth.w	fp, fp
 8014d7e:	455e      	cmp	r6, fp
 8014d80:	bf94      	ite	ls
 8014d82:	9600      	strls	r6, [sp, #0]
 8014d84:	f8cd b000 	strhi.w	fp, [sp]
 8014d88:	b292      	uxth	r2, r2
 8014d8a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8014d8e:	b29b      	uxth	r3, r3
 8014d90:	b289      	uxth	r1, r1
 8014d92:	47b0      	blx	r6
 8014d94:	6823      	ldr	r3, [r4, #0]
 8014d96:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014d9a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014d9c:	a907      	add	r1, sp, #28
 8014d9e:	4620      	mov	r0, r4
 8014da0:	4798      	blx	r3
 8014da2:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8014da6:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8014daa:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8014dae:	1a5b      	subs	r3, r3, r1
 8014db0:	440a      	add	r2, r1
 8014db2:	b21b      	sxth	r3, r3
 8014db4:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8014db8:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8014dbc:	2b00      	cmp	r3, #0
 8014dbe:	f47f aeda 	bne.w	8014b76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014dc2:	fa1f f189 	uxth.w	r1, r9
 8014dc6:	4650      	mov	r0, sl
 8014dc8:	f7ff f9e6 	bl	8014198 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014dcc:	e6d3      	b.n	8014b76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8014dce:	882e      	ldrh	r6, [r5, #0]
 8014dd0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014dd4:	42b3      	cmp	r3, r6
 8014dd6:	f67f ae98 	bls.w	8014b0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014dda:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8014dde:	ab07      	add	r3, sp, #28
 8014de0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014de4:	6851      	ldr	r1, [r2, #4]
 8014de6:	c303      	stmia	r3!, {r0, r1}
 8014de8:	a807      	add	r0, sp, #28
 8014dea:	f7fb fdba 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014dee:	b920      	cbnz	r0, 8014dfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8014df0:	6823      	ldr	r3, [r4, #0]
 8014df2:	a907      	add	r1, sp, #28
 8014df4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014df6:	4620      	mov	r0, r4
 8014df8:	4798      	blx	r3
 8014dfa:	3601      	adds	r6, #1
 8014dfc:	b2b6      	uxth	r6, r6
 8014dfe:	e7e7      	b.n	8014dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8014e00:	20002f54 	.word	0x20002f54

08014e04 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8014e04:	4b03      	ldr	r3, [pc, #12]	@ (8014e14 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8014e06:	2200      	movs	r2, #0
 8014e08:	801a      	strh	r2, [r3, #0]
 8014e0a:	805a      	strh	r2, [r3, #2]
 8014e0c:	809a      	strh	r2, [r3, #4]
 8014e0e:	80da      	strh	r2, [r3, #6]
 8014e10:	4770      	bx	lr
 8014e12:	bf00      	nop
 8014e14:	20002f98 	.word	0x20002f98

08014e18 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8014e18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e1c:	4606      	mov	r6, r0
 8014e1e:	b09d      	sub	sp, #116	@ 0x74
 8014e20:	a803      	add	r0, sp, #12
 8014e22:	4614      	mov	r4, r2
 8014e24:	468a      	mov	sl, r1
 8014e26:	461d      	mov	r5, r3
 8014e28:	f000 fd72 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 8014e2c:	6833      	ldr	r3, [r6, #0]
 8014e2e:	4630      	mov	r0, r6
 8014e30:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014e32:	4798      	blx	r3
 8014e34:	6833      	ldr	r3, [r6, #0]
 8014e36:	4607      	mov	r7, r0
 8014e38:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014e3a:	4630      	mov	r0, r6
 8014e3c:	4798      	blx	r3
 8014e3e:	462a      	mov	r2, r5
 8014e40:	9000      	str	r0, [sp, #0]
 8014e42:	4621      	mov	r1, r4
 8014e44:	463b      	mov	r3, r7
 8014e46:	a803      	add	r0, sp, #12
 8014e48:	f000 fdbd 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014e4c:	2500      	movs	r5, #0
 8014e4e:	462c      	mov	r4, r5
 8014e50:	46a9      	mov	r9, r5
 8014e52:	46a8      	mov	r8, r5
 8014e54:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8014e58:	2300      	movs	r3, #0
 8014e5a:	9302      	str	r3, [sp, #8]
 8014e5c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8014e60:	429c      	cmp	r4, r3
 8014e62:	d002      	beq.n	8014e6a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8014e64:	455c      	cmp	r4, fp
 8014e66:	bf18      	it	ne
 8014e68:	4625      	movne	r5, r4
 8014e6a:	ab02      	add	r3, sp, #8
 8014e6c:	4632      	mov	r2, r6
 8014e6e:	4651      	mov	r1, sl
 8014e70:	a803      	add	r0, sp, #12
 8014e72:	f001 f8d5 	bl	8016020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014e76:	4604      	mov	r4, r0
 8014e78:	b108      	cbz	r0, 8014e7e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8014e7a:	280a      	cmp	r0, #10
 8014e7c:	d10a      	bne.n	8014e94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8014e7e:	45c1      	cmp	r9, r8
 8014e80:	bf38      	it	cc
 8014e82:	46c1      	movcc	r9, r8
 8014e84:	f04f 0800 	mov.w	r8, #0
 8014e88:	2c00      	cmp	r4, #0
 8014e8a:	d1e5      	bne.n	8014e58 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014e8c:	4648      	mov	r0, r9
 8014e8e:	b01d      	add	sp, #116	@ 0x74
 8014e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e94:	9a02      	ldr	r2, [sp, #8]
 8014e96:	2a00      	cmp	r2, #0
 8014e98:	d0de      	beq.n	8014e58 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8014e9a:	7b57      	ldrb	r7, [r2, #13]
 8014e9c:	6833      	ldr	r3, [r6, #0]
 8014e9e:	8894      	ldrh	r4, [r2, #4]
 8014ea0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8014ea2:	007f      	lsls	r7, r7, #1
 8014ea4:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8014ea8:	7a97      	ldrb	r7, [r2, #10]
 8014eaa:	4629      	mov	r1, r5
 8014eac:	4307      	orrs	r7, r0
 8014eae:	4630      	mov	r0, r6
 8014eb0:	4798      	blx	r3
 8014eb2:	4438      	add	r0, r7
 8014eb4:	4480      	add	r8, r0
 8014eb6:	fa1f f888 	uxth.w	r8, r8
 8014eba:	e7e5      	b.n	8014e88 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08014ebc <_ZNK8touchgfx4Font12getCharWidthEt>:
 8014ebc:	b508      	push	{r3, lr}
 8014ebe:	6803      	ldr	r3, [r0, #0]
 8014ec0:	68db      	ldr	r3, [r3, #12]
 8014ec2:	4798      	blx	r3
 8014ec4:	b128      	cbz	r0, 8014ed2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8014ec6:	7b43      	ldrb	r3, [r0, #13]
 8014ec8:	7a80      	ldrb	r0, [r0, #10]
 8014eca:	005b      	lsls	r3, r3, #1
 8014ecc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8014ed0:	4318      	orrs	r0, r3
 8014ed2:	bd08      	pop	{r3, pc}

08014ed4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8014ed4:	b40e      	push	{r1, r2, r3}
 8014ed6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ed8:	b09e      	sub	sp, #120	@ 0x78
 8014eda:	ab23      	add	r3, sp, #140	@ 0x8c
 8014edc:	4605      	mov	r5, r0
 8014ede:	f853 4b04 	ldr.w	r4, [r3], #4
 8014ee2:	9303      	str	r3, [sp, #12]
 8014ee4:	a805      	add	r0, sp, #20
 8014ee6:	f000 fd13 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 8014eea:	682b      	ldr	r3, [r5, #0]
 8014eec:	4628      	mov	r0, r5
 8014eee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014ef0:	4798      	blx	r3
 8014ef2:	682b      	ldr	r3, [r5, #0]
 8014ef4:	4606      	mov	r6, r0
 8014ef6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014ef8:	4628      	mov	r0, r5
 8014efa:	4798      	blx	r3
 8014efc:	4633      	mov	r3, r6
 8014efe:	ae1e      	add	r6, sp, #120	@ 0x78
 8014f00:	4621      	mov	r1, r4
 8014f02:	9000      	str	r0, [sp, #0]
 8014f04:	9a03      	ldr	r2, [sp, #12]
 8014f06:	2400      	movs	r4, #0
 8014f08:	a805      	add	r0, sp, #20
 8014f0a:	f000 fd5c 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014f0e:	f846 4d68 	str.w	r4, [r6, #-104]!
 8014f12:	462a      	mov	r2, r5
 8014f14:	4633      	mov	r3, r6
 8014f16:	4621      	mov	r1, r4
 8014f18:	a805      	add	r0, sp, #20
 8014f1a:	f001 f881 	bl	8016020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014f1e:	b1f0      	cbz	r0, 8014f5e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8014f20:	280a      	cmp	r0, #10
 8014f22:	d018      	beq.n	8014f56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014f24:	9f04      	ldr	r7, [sp, #16]
 8014f26:	b1b7      	cbz	r7, 8014f56 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8014f28:	7b78      	ldrb	r0, [r7, #13]
 8014f2a:	7a3b      	ldrb	r3, [r7, #8]
 8014f2c:	88ea      	ldrh	r2, [r5, #6]
 8014f2e:	00c1      	lsls	r1, r0, #3
 8014f30:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8014f34:	4319      	orrs	r1, r3
 8014f36:	0643      	lsls	r3, r0, #25
 8014f38:	bf44      	itt	mi
 8014f3a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8014f3e:	b219      	sxthmi	r1, r3
 8014f40:	0100      	lsls	r0, r0, #4
 8014f42:	79fb      	ldrb	r3, [r7, #7]
 8014f44:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8014f48:	4303      	orrs	r3, r0
 8014f4a:	4413      	add	r3, r2
 8014f4c:	1a5b      	subs	r3, r3, r1
 8014f4e:	b21b      	sxth	r3, r3
 8014f50:	429c      	cmp	r4, r3
 8014f52:	bfb8      	it	lt
 8014f54:	461c      	movlt	r4, r3
 8014f56:	4633      	mov	r3, r6
 8014f58:	462a      	mov	r2, r5
 8014f5a:	2100      	movs	r1, #0
 8014f5c:	e7dc      	b.n	8014f18 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8014f5e:	b2a0      	uxth	r0, r4
 8014f60:	b01e      	add	sp, #120	@ 0x78
 8014f62:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8014f66:	b003      	add	sp, #12
 8014f68:	4770      	bx	lr

08014f6a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8014f6a:	7a43      	ldrb	r3, [r0, #9]
 8014f6c:	8880      	ldrh	r0, [r0, #4]
 8014f6e:	4418      	add	r0, r3
 8014f70:	b280      	uxth	r0, r0
 8014f72:	4770      	bx	lr

08014f74 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8014f74:	6803      	ldr	r3, [r0, #0]
 8014f76:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8014f78:	4718      	bx	r3

08014f7a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8014f7a:	b40e      	push	{r1, r2, r3}
 8014f7c:	b570      	push	{r4, r5, r6, lr}
 8014f7e:	b09d      	sub	sp, #116	@ 0x74
 8014f80:	ab21      	add	r3, sp, #132	@ 0x84
 8014f82:	4604      	mov	r4, r0
 8014f84:	f853 5b04 	ldr.w	r5, [r3], #4
 8014f88:	9302      	str	r3, [sp, #8]
 8014f8a:	a803      	add	r0, sp, #12
 8014f8c:	f000 fcc0 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 8014f90:	6823      	ldr	r3, [r4, #0]
 8014f92:	4620      	mov	r0, r4
 8014f94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014f96:	4798      	blx	r3
 8014f98:	6823      	ldr	r3, [r4, #0]
 8014f9a:	4606      	mov	r6, r0
 8014f9c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014f9e:	4620      	mov	r0, r4
 8014fa0:	4798      	blx	r3
 8014fa2:	4633      	mov	r3, r6
 8014fa4:	9000      	str	r0, [sp, #0]
 8014fa6:	9a02      	ldr	r2, [sp, #8]
 8014fa8:	4629      	mov	r1, r5
 8014faa:	a803      	add	r0, sp, #12
 8014fac:	f000 fd0b 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014fb0:	a803      	add	r0, sp, #12
 8014fb2:	f001 f903 	bl	80161bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014fb6:	2401      	movs	r4, #1
 8014fb8:	b2a3      	uxth	r3, r4
 8014fba:	b140      	cbz	r0, 8014fce <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8014fbc:	280a      	cmp	r0, #10
 8014fbe:	bf08      	it	eq
 8014fc0:	3301      	addeq	r3, #1
 8014fc2:	a803      	add	r0, sp, #12
 8014fc4:	bf08      	it	eq
 8014fc6:	b21c      	sxtheq	r4, r3
 8014fc8:	f001 f8f8 	bl	80161bc <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014fcc:	e7f4      	b.n	8014fb8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8014fce:	4618      	mov	r0, r3
 8014fd0:	b01d      	add	sp, #116	@ 0x74
 8014fd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014fd6:	b003      	add	sp, #12
 8014fd8:	4770      	bx	lr

08014fda <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8014fda:	b40e      	push	{r1, r2, r3}
 8014fdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014fde:	b09e      	sub	sp, #120	@ 0x78
 8014fe0:	ab23      	add	r3, sp, #140	@ 0x8c
 8014fe2:	4604      	mov	r4, r0
 8014fe4:	f853 5b04 	ldr.w	r5, [r3], #4
 8014fe8:	9303      	str	r3, [sp, #12]
 8014fea:	a805      	add	r0, sp, #20
 8014fec:	f000 fc90 	bl	8015910 <_ZN8touchgfx12TextProviderC1Ev>
 8014ff0:	6823      	ldr	r3, [r4, #0]
 8014ff2:	4620      	mov	r0, r4
 8014ff4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8014ff6:	4798      	blx	r3
 8014ff8:	6823      	ldr	r3, [r4, #0]
 8014ffa:	4606      	mov	r6, r0
 8014ffc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8014ffe:	4620      	mov	r0, r4
 8015000:	4798      	blx	r3
 8015002:	4633      	mov	r3, r6
 8015004:	4629      	mov	r1, r5
 8015006:	9000      	str	r0, [sp, #0]
 8015008:	9a03      	ldr	r2, [sp, #12]
 801500a:	a805      	add	r0, sp, #20
 801500c:	ad1e      	add	r5, sp, #120	@ 0x78
 801500e:	f000 fcda 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015012:	2100      	movs	r1, #0
 8015014:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015018:	4622      	mov	r2, r4
 801501a:	462b      	mov	r3, r5
 801501c:	a805      	add	r0, sp, #20
 801501e:	f000 ffff 	bl	8016020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015022:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8015026:	b1d8      	cbz	r0, 8015060 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015028:	280a      	cmp	r0, #10
 801502a:	d012      	beq.n	8015052 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801502c:	9804      	ldr	r0, [sp, #16]
 801502e:	b180      	cbz	r0, 8015052 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015030:	7b47      	ldrb	r7, [r0, #13]
 8015032:	88e2      	ldrh	r2, [r4, #6]
 8015034:	00fb      	lsls	r3, r7, #3
 8015036:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801503a:	7a03      	ldrb	r3, [r0, #8]
 801503c:	430b      	orrs	r3, r1
 801503e:	0679      	lsls	r1, r7, #25
 8015040:	bf44      	itt	mi
 8015042:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015046:	b21b      	sxthmi	r3, r3
 8015048:	1ad3      	subs	r3, r2, r3
 801504a:	b21b      	sxth	r3, r3
 801504c:	429e      	cmp	r6, r3
 801504e:	bfa8      	it	ge
 8015050:	461e      	movge	r6, r3
 8015052:	462b      	mov	r3, r5
 8015054:	4622      	mov	r2, r4
 8015056:	2100      	movs	r1, #0
 8015058:	a805      	add	r0, sp, #20
 801505a:	f000 ffe1 	bl	8016020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801505e:	e7e2      	b.n	8015026 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015060:	4630      	mov	r0, r6
 8015062:	b01e      	add	sp, #120	@ 0x78
 8015064:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015068:	b003      	add	sp, #12
 801506a:	4770      	bx	lr

0801506c <_ZNK8touchgfx8Drawable10invalidateEv>:
 801506c:	b513      	push	{r0, r1, r4, lr}
 801506e:	6803      	ldr	r3, [r0, #0]
 8015070:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015074:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015078:	f8ad 1004 	strh.w	r1, [sp, #4]
 801507c:	2400      	movs	r4, #0
 801507e:	9400      	str	r4, [sp, #0]
 8015080:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015084:	691b      	ldr	r3, [r3, #16]
 8015086:	4669      	mov	r1, sp
 8015088:	4798      	blx	r3
 801508a:	b002      	add	sp, #8
 801508c:	bd10      	pop	{r4, pc}

0801508e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801508e:	b538      	push	{r3, r4, r5, lr}
 8015090:	680b      	ldr	r3, [r1, #0]
 8015092:	460c      	mov	r4, r1
 8015094:	68db      	ldr	r3, [r3, #12]
 8015096:	4605      	mov	r5, r0
 8015098:	4798      	blx	r3
 801509a:	6823      	ldr	r3, [r4, #0]
 801509c:	4620      	mov	r0, r4
 801509e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80150a0:	4629      	mov	r1, r5
 80150a2:	4798      	blx	r3
 80150a4:	4628      	mov	r0, r5
 80150a6:	bd38      	pop	{r3, r4, r5, pc}

080150a8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80150a8:	b410      	push	{r4}
 80150aa:	880a      	ldrh	r2, [r1, #0]
 80150ac:	8884      	ldrh	r4, [r0, #4]
 80150ae:	4422      	add	r2, r4
 80150b0:	800a      	strh	r2, [r1, #0]
 80150b2:	88c4      	ldrh	r4, [r0, #6]
 80150b4:	884a      	ldrh	r2, [r1, #2]
 80150b6:	4422      	add	r2, r4
 80150b8:	804a      	strh	r2, [r1, #2]
 80150ba:	6940      	ldr	r0, [r0, #20]
 80150bc:	b120      	cbz	r0, 80150c8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80150be:	6803      	ldr	r3, [r0, #0]
 80150c0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80150c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80150c6:	4718      	bx	r3
 80150c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80150cc:	4770      	bx	lr

080150ce <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80150ce:	b570      	push	{r4, r5, r6, lr}
 80150d0:	8882      	ldrh	r2, [r0, #4]
 80150d2:	880b      	ldrh	r3, [r1, #0]
 80150d4:	4413      	add	r3, r2
 80150d6:	800b      	strh	r3, [r1, #0]
 80150d8:	88c2      	ldrh	r2, [r0, #6]
 80150da:	884b      	ldrh	r3, [r1, #2]
 80150dc:	460c      	mov	r4, r1
 80150de:	4413      	add	r3, r2
 80150e0:	804b      	strh	r3, [r1, #2]
 80150e2:	4605      	mov	r5, r0
 80150e4:	1d01      	adds	r1, r0, #4
 80150e6:	4620      	mov	r0, r4
 80150e8:	f7fb fbf8 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 80150ec:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80150f0:	2b00      	cmp	r3, #0
 80150f2:	dd0b      	ble.n	801510c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80150f4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80150f8:	2b00      	cmp	r3, #0
 80150fa:	dd07      	ble.n	801510c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80150fc:	6968      	ldr	r0, [r5, #20]
 80150fe:	b128      	cbz	r0, 801510c <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015100:	6803      	ldr	r3, [r0, #0]
 8015102:	4621      	mov	r1, r4
 8015104:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015106:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801510a:	4718      	bx	r3
 801510c:	bd70      	pop	{r4, r5, r6, pc}
	...

08015110 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015110:	b570      	push	{r4, r5, r6, lr}
 8015112:	8882      	ldrh	r2, [r0, #4]
 8015114:	880b      	ldrh	r3, [r1, #0]
 8015116:	4413      	add	r3, r2
 8015118:	800b      	strh	r3, [r1, #0]
 801511a:	88c2      	ldrh	r2, [r0, #6]
 801511c:	884b      	ldrh	r3, [r1, #2]
 801511e:	460c      	mov	r4, r1
 8015120:	4413      	add	r3, r2
 8015122:	804b      	strh	r3, [r1, #2]
 8015124:	4605      	mov	r5, r0
 8015126:	1d01      	adds	r1, r0, #4
 8015128:	4620      	mov	r0, r4
 801512a:	f7fb fbd7 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 801512e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015132:	2b00      	cmp	r3, #0
 8015134:	dd19      	ble.n	801516a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015136:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801513a:	2b00      	cmp	r3, #0
 801513c:	dd15      	ble.n	801516a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801513e:	6968      	ldr	r0, [r5, #20]
 8015140:	b128      	cbz	r0, 801514e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015142:	6803      	ldr	r3, [r0, #0]
 8015144:	4621      	mov	r1, r4
 8015146:	691b      	ldr	r3, [r3, #16]
 8015148:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801514c:	4718      	bx	r3
 801514e:	4b07      	ldr	r3, [pc, #28]	@ (801516c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015150:	681b      	ldr	r3, [r3, #0]
 8015152:	3304      	adds	r3, #4
 8015154:	429d      	cmp	r5, r3
 8015156:	d108      	bne.n	801516a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015158:	f7fe ff12 	bl	8013f80 <_ZN8touchgfx11Application11getInstanceEv>
 801515c:	6803      	ldr	r3, [r0, #0]
 801515e:	6821      	ldr	r1, [r4, #0]
 8015160:	6862      	ldr	r2, [r4, #4]
 8015162:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015164:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015168:	4718      	bx	r3
 801516a:	bd70      	pop	{r4, r5, r6, pc}
 801516c:	20002f90 	.word	0x20002f90

08015170 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015170:	b570      	push	{r4, r5, r6, lr}
 8015172:	4604      	mov	r4, r0
 8015174:	4616      	mov	r6, r2
 8015176:	460d      	mov	r5, r1
 8015178:	b901      	cbnz	r1, 801517c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801517a:	b192      	cbz	r2, 80151a2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801517c:	6823      	ldr	r3, [r4, #0]
 801517e:	4620      	mov	r0, r4
 8015180:	699b      	ldr	r3, [r3, #24]
 8015182:	4798      	blx	r3
 8015184:	88e2      	ldrh	r2, [r4, #6]
 8015186:	88a1      	ldrh	r1, [r4, #4]
 8015188:	4432      	add	r2, r6
 801518a:	4429      	add	r1, r5
 801518c:	4620      	mov	r0, r4
 801518e:	b212      	sxth	r2, r2
 8015190:	b209      	sxth	r1, r1
 8015192:	f7f4 fc04 	bl	800999e <_ZN8touchgfx8Drawable5setXYEss>
 8015196:	6823      	ldr	r3, [r4, #0]
 8015198:	4620      	mov	r0, r4
 801519a:	699b      	ldr	r3, [r3, #24]
 801519c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80151a0:	4718      	bx	r3
 80151a2:	bd70      	pop	{r4, r5, r6, pc}

080151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80151a4:	b510      	push	{r4, lr}
 80151a6:	4604      	mov	r4, r0
 80151a8:	4608      	mov	r0, r1
 80151aa:	2300      	movs	r3, #0
 80151ac:	8023      	strh	r3, [r4, #0]
 80151ae:	8063      	strh	r3, [r4, #2]
 80151b0:	6803      	ldr	r3, [r0, #0]
 80151b2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80151b6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80151ba:	80a1      	strh	r1, [r4, #4]
 80151bc:	80e2      	strh	r2, [r4, #6]
 80151be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80151c0:	4621      	mov	r1, r4
 80151c2:	4798      	blx	r3
 80151c4:	4620      	mov	r0, r4
 80151c6:	bd10      	pop	{r4, pc}

080151c8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80151c8:	b530      	push	{r4, r5, lr}
 80151ca:	8083      	strh	r3, [r0, #4]
 80151cc:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80151d0:	80c3      	strh	r3, [r0, #6]
 80151d2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80151d6:	7203      	strb	r3, [r0, #8]
 80151d8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80151dc:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80151e0:	7243      	strb	r3, [r0, #9]
 80151e2:	7a83      	ldrb	r3, [r0, #10]
 80151e4:	6141      	str	r1, [r0, #20]
 80151e6:	f365 0306 	bfi	r3, r5, #0, #7
 80151ea:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80151ee:	8302      	strh	r2, [r0, #24]
 80151f0:	f365 13c7 	bfi	r3, r5, #7, #1
 80151f4:	7283      	strb	r3, [r0, #10]
 80151f6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80151fa:	72c3      	strb	r3, [r0, #11]
 80151fc:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8015200:	7303      	strb	r3, [r0, #12]
 8015202:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015206:	81c3      	strh	r3, [r0, #14]
 8015208:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 801520c:	8203      	strh	r3, [r0, #16]
 801520e:	4b01      	ldr	r3, [pc, #4]	@ (8015214 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015210:	6003      	str	r3, [r0, #0]
 8015212:	bd30      	pop	{r4, r5, pc}
 8015214:	08029498 	.word	0x08029498

08015218 <_ZNK8touchgfx9ConstFont4findEt>:
 8015218:	b5f0      	push	{r4, r5, r6, r7, lr}
 801521a:	6944      	ldr	r4, [r0, #20]
 801521c:	b3bc      	cbz	r4, 801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801521e:	88a3      	ldrh	r3, [r4, #4]
 8015220:	8b02      	ldrh	r2, [r0, #24]
 8015222:	1acb      	subs	r3, r1, r3
 8015224:	f102 32ff 	add.w	r2, r2, #4294967295
 8015228:	d431      	bmi.n	801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801522a:	4293      	cmp	r3, r2
 801522c:	dd0c      	ble.n	8015248 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801522e:	230e      	movs	r3, #14
 8015230:	fb03 4302 	mla	r3, r3, r2, r4
 8015234:	889b      	ldrh	r3, [r3, #4]
 8015236:	1a5b      	subs	r3, r3, r1
 8015238:	1ad3      	subs	r3, r2, r3
 801523a:	429a      	cmp	r2, r3
 801523c:	db27      	blt.n	801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801523e:	2b00      	cmp	r3, #0
 8015240:	bfbc      	itt	lt
 8015242:	2302      	movlt	r3, #2
 8015244:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015248:	2500      	movs	r5, #0
 801524a:	260e      	movs	r6, #14
 801524c:	4295      	cmp	r5, r2
 801524e:	dc1e      	bgt.n	801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015250:	fb06 4003 	mla	r0, r6, r3, r4
 8015254:	8887      	ldrh	r7, [r0, #4]
 8015256:	42b9      	cmp	r1, r7
 8015258:	d01a      	beq.n	8015290 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801525a:	d20d      	bcs.n	8015278 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801525c:	1e5a      	subs	r2, r3, #1
 801525e:	4295      	cmp	r5, r2
 8015260:	dc15      	bgt.n	801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015262:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015266:	1a5b      	subs	r3, r3, r1
 8015268:	1ad3      	subs	r3, r2, r3
 801526a:	429a      	cmp	r2, r3
 801526c:	db0f      	blt.n	801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801526e:	429d      	cmp	r5, r3
 8015270:	ddec      	ble.n	801524c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015272:	1953      	adds	r3, r2, r5
 8015274:	105b      	asrs	r3, r3, #1
 8015276:	e7e9      	b.n	801524c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015278:	1c5d      	adds	r5, r3, #1
 801527a:	42aa      	cmp	r2, r5
 801527c:	db07      	blt.n	801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801527e:	8a43      	ldrh	r3, [r0, #18]
 8015280:	1acb      	subs	r3, r1, r3
 8015282:	442b      	add	r3, r5
 8015284:	429d      	cmp	r5, r3
 8015286:	dc02      	bgt.n	801528e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015288:	429a      	cmp	r2, r3
 801528a:	dadf      	bge.n	801524c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801528c:	e7f1      	b.n	8015272 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801528e:	2000      	movs	r0, #0
 8015290:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015292 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015292:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015294:	4604      	mov	r4, r0
 8015296:	4617      	mov	r7, r2
 8015298:	461e      	mov	r6, r3
 801529a:	b911      	cbnz	r1, 80152a2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801529c:	2500      	movs	r5, #0
 801529e:	4628      	mov	r0, r5
 80152a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80152a2:	290a      	cmp	r1, #10
 80152a4:	d0fa      	beq.n	801529c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80152a6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80152aa:	4291      	cmp	r1, r2
 80152ac:	d0f6      	beq.n	801529c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80152ae:	f242 020b 	movw	r2, #8203	@ 0x200b
 80152b2:	4291      	cmp	r1, r2
 80152b4:	d0f2      	beq.n	801529c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80152b6:	f7ff ffaf 	bl	8015218 <_ZNK8touchgfx9ConstFont4findEt>
 80152ba:	4605      	mov	r5, r0
 80152bc:	b950      	cbnz	r0, 80152d4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80152be:	6823      	ldr	r3, [r4, #0]
 80152c0:	4620      	mov	r0, r4
 80152c2:	691b      	ldr	r3, [r3, #16]
 80152c4:	4798      	blx	r3
 80152c6:	4601      	mov	r1, r0
 80152c8:	4620      	mov	r0, r4
 80152ca:	f7ff ffa5 	bl	8015218 <_ZNK8touchgfx9ConstFont4findEt>
 80152ce:	4605      	mov	r5, r0
 80152d0:	2800      	cmp	r0, #0
 80152d2:	d0e3      	beq.n	801529c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80152d4:	6823      	ldr	r3, [r4, #0]
 80152d6:	4629      	mov	r1, r5
 80152d8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80152da:	4620      	mov	r0, r4
 80152dc:	4798      	blx	r3
 80152de:	6038      	str	r0, [r7, #0]
 80152e0:	6823      	ldr	r3, [r4, #0]
 80152e2:	4620      	mov	r0, r4
 80152e4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80152e6:	4798      	blx	r3
 80152e8:	7030      	strb	r0, [r6, #0]
 80152ea:	e7d8      	b.n	801529e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080152ec <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80152ec:	2000      	movs	r0, #0
 80152ee:	4770      	bx	lr

080152f0 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80152f0:	2001      	movs	r0, #1
 80152f2:	4770      	bx	lr

080152f4 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80152f4:	2002      	movs	r0, #2
 80152f6:	4770      	bx	lr

080152f8 <_ZN8touchgfx12GestureEventD1Ev>:
 80152f8:	4770      	bx	lr

080152fa <_ZN8touchgfx9DragEventD1Ev>:
 80152fa:	4770      	bx	lr

080152fc <_ZN8touchgfx10ClickEventD1Ev>:
 80152fc:	4770      	bx	lr

080152fe <_ZN8touchgfx10ClickEventD0Ev>:
 80152fe:	b510      	push	{r4, lr}
 8015300:	210c      	movs	r1, #12
 8015302:	4604      	mov	r4, r0
 8015304:	f010 fb95 	bl	8025a32 <_ZdlPvj>
 8015308:	4620      	mov	r0, r4
 801530a:	bd10      	pop	{r4, pc}

0801530c <_ZN8touchgfx9DragEventD0Ev>:
 801530c:	b510      	push	{r4, lr}
 801530e:	2110      	movs	r1, #16
 8015310:	4604      	mov	r4, r0
 8015312:	f010 fb8e 	bl	8025a32 <_ZdlPvj>
 8015316:	4620      	mov	r0, r4
 8015318:	bd10      	pop	{r4, pc}

0801531a <_ZN8touchgfx12GestureEventD0Ev>:
 801531a:	b510      	push	{r4, lr}
 801531c:	210c      	movs	r1, #12
 801531e:	4604      	mov	r4, r0
 8015320:	f010 fb87 	bl	8025a32 <_ZdlPvj>
 8015324:	4620      	mov	r0, r4
 8015326:	bd10      	pop	{r4, pc}

08015328 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8015328:	b530      	push	{r4, r5, lr}
 801532a:	460d      	mov	r5, r1
 801532c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801532e:	b087      	sub	sp, #28
 8015330:	4604      	mov	r4, r0
 8015332:	b301      	cbz	r1, 8015376 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015334:	a801      	add	r0, sp, #4
 8015336:	f7ff ff35 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801533a:	892a      	ldrh	r2, [r5, #8]
 801533c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015340:	7928      	ldrb	r0, [r5, #4]
 8015342:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015346:	f88d 0010 	strb.w	r0, [sp, #16]
 801534a:	1ad2      	subs	r2, r2, r3
 801534c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801534e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8015350:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015354:	441a      	add	r2, r3
 8015356:	896b      	ldrh	r3, [r5, #10]
 8015358:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801535c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015360:	1b5b      	subs	r3, r3, r5
 8015362:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8015364:	442b      	add	r3, r5
 8015366:	4d05      	ldr	r5, [pc, #20]	@ (801537c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8015368:	9503      	str	r5, [sp, #12]
 801536a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801536e:	6803      	ldr	r3, [r0, #0]
 8015370:	a903      	add	r1, sp, #12
 8015372:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8015374:	4798      	blx	r3
 8015376:	b007      	add	sp, #28
 8015378:	bd30      	pop	{r4, r5, pc}
 801537a:	bf00      	nop
 801537c:	08029528 	.word	0x08029528

08015380 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8015380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015384:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8015386:	b08a      	sub	sp, #40	@ 0x28
 8015388:	4604      	mov	r4, r0
 801538a:	460d      	mov	r5, r1
 801538c:	b113      	cbz	r3, 8015394 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801538e:	790b      	ldrb	r3, [r1, #4]
 8015390:	2b00      	cmp	r3, #0
 8015392:	d044      	beq.n	801541e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015394:	f104 0804 	add.w	r8, r4, #4
 8015398:	4641      	mov	r1, r8
 801539a:	a803      	add	r0, sp, #12
 801539c:	f7ff ff02 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80153a0:	792b      	ldrb	r3, [r5, #4]
 80153a2:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80153a6:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80153aa:	b983      	cbnz	r3, 80153ce <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80153ac:	892a      	ldrh	r2, [r5, #8]
 80153ae:	88e9      	ldrh	r1, [r5, #6]
 80153b0:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 80153b4:	1b92      	subs	r2, r2, r6
 80153b6:	1bc9      	subs	r1, r1, r7
 80153b8:	9301      	str	r3, [sp, #4]
 80153ba:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 80153be:	9300      	str	r3, [sp, #0]
 80153c0:	b212      	sxth	r2, r2
 80153c2:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80153c6:	b209      	sxth	r1, r1
 80153c8:	4640      	mov	r0, r8
 80153ca:	f7fb f9a3 	bl	8010714 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80153ce:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80153d0:	b329      	cbz	r1, 801541e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80153d2:	a805      	add	r0, sp, #20
 80153d4:	f7ff fee6 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80153d8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80153dc:	792b      	ldrb	r3, [r5, #4]
 80153de:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80153e0:	f88d 3020 	strb.w	r3, [sp, #32]
 80153e4:	1abf      	subs	r7, r7, r2
 80153e6:	88ea      	ldrh	r2, [r5, #6]
 80153e8:	4417      	add	r7, r2
 80153ea:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80153ec:	4417      	add	r7, r2
 80153ee:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80153f2:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80153f6:	1ab6      	subs	r6, r6, r2
 80153f8:	892a      	ldrh	r2, [r5, #8]
 80153fa:	4416      	add	r6, r2
 80153fc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80153fe:	4416      	add	r6, r2
 8015400:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8015404:	4a07      	ldr	r2, [pc, #28]	@ (8015424 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8015406:	9207      	str	r2, [sp, #28]
 8015408:	2600      	movs	r6, #0
 801540a:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 801540e:	6803      	ldr	r3, [r0, #0]
 8015410:	a907      	add	r1, sp, #28
 8015412:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015414:	4798      	blx	r3
 8015416:	792b      	ldrb	r3, [r5, #4]
 8015418:	b10b      	cbz	r3, 801541e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801541a:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 801541e:	b00a      	add	sp, #40	@ 0x28
 8015420:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015424:	08029500 	.word	0x08029500

08015428 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8015428:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801542c:	460c      	mov	r4, r1
 801542e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8015430:	b088      	sub	sp, #32
 8015432:	4605      	mov	r5, r0
 8015434:	2900      	cmp	r1, #0
 8015436:	d06d      	beq.n	8015514 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8015438:	4668      	mov	r0, sp
 801543a:	f7ff feb3 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801543e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8015440:	88e3      	ldrh	r3, [r4, #6]
 8015442:	f9bd 8000 	ldrsh.w	r8, [sp]
 8015446:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801544a:	440b      	add	r3, r1
 801544c:	b21b      	sxth	r3, r3
 801544e:	4543      	cmp	r3, r8
 8015450:	db31      	blt.n	80154b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015452:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8015456:	44c4      	add	ip, r8
 8015458:	fa0f fc8c 	sxth.w	ip, ip
 801545c:	4563      	cmp	r3, ip
 801545e:	da2a      	bge.n	80154b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015460:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8015462:	8926      	ldrh	r6, [r4, #8]
 8015464:	4416      	add	r6, r2
 8015466:	b236      	sxth	r6, r6
 8015468:	42be      	cmp	r6, r7
 801546a:	db24      	blt.n	80154b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801546c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015470:	4438      	add	r0, r7
 8015472:	b200      	sxth	r0, r0
 8015474:	4286      	cmp	r6, r0
 8015476:	da1e      	bge.n	80154b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015478:	8963      	ldrh	r3, [r4, #10]
 801547a:	4419      	add	r1, r3
 801547c:	b209      	sxth	r1, r1
 801547e:	4541      	cmp	r1, r8
 8015480:	db08      	blt.n	8015494 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015482:	4561      	cmp	r1, ip
 8015484:	da06      	bge.n	8015494 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015486:	89a3      	ldrh	r3, [r4, #12]
 8015488:	441a      	add	r2, r3
 801548a:	b212      	sxth	r2, r2
 801548c:	42ba      	cmp	r2, r7
 801548e:	db01      	blt.n	8015494 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015490:	4282      	cmp	r2, r0
 8015492:	db10      	blt.n	80154b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015494:	4b21      	ldr	r3, [pc, #132]	@ (801551c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8015496:	9304      	str	r3, [sp, #16]
 8015498:	2302      	movs	r3, #2
 801549a:	f88d 3014 	strb.w	r3, [sp, #20]
 801549e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80154a0:	2300      	movs	r3, #0
 80154a2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80154a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80154aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 80154ae:	6803      	ldr	r3, [r0, #0]
 80154b0:	a904      	add	r1, sp, #16
 80154b2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80154b4:	4798      	blx	r3
 80154b6:	1d29      	adds	r1, r5, #4
 80154b8:	a802      	add	r0, sp, #8
 80154ba:	f7ff fe73 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80154be:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80154c2:	88e0      	ldrh	r0, [r4, #6]
 80154c4:	7921      	ldrb	r1, [r4, #4]
 80154c6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80154ca:	8922      	ldrh	r2, [r4, #8]
 80154cc:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80154ce:	f88d 1014 	strb.w	r1, [sp, #20]
 80154d2:	eba3 0808 	sub.w	r8, r3, r8
 80154d6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80154da:	1bdf      	subs	r7, r3, r7
 80154dc:	b2bb      	uxth	r3, r7
 80154de:	fa1f f888 	uxth.w	r8, r8
 80154e2:	8967      	ldrh	r7, [r4, #10]
 80154e4:	89a4      	ldrh	r4, [r4, #12]
 80154e6:	4440      	add	r0, r8
 80154e8:	4460      	add	r0, ip
 80154ea:	441a      	add	r2, r3
 80154ec:	44b8      	add	r8, r7
 80154ee:	4423      	add	r3, r4
 80154f0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80154f4:	4433      	add	r3, r6
 80154f6:	4432      	add	r2, r6
 80154f8:	44e0      	add	r8, ip
 80154fa:	4c09      	ldr	r4, [pc, #36]	@ (8015520 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80154fc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80154fe:	9404      	str	r4, [sp, #16]
 8015500:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015504:	f8ad 801a 	strh.w	r8, [sp, #26]
 8015508:	f8ad 301c 	strh.w	r3, [sp, #28]
 801550c:	6803      	ldr	r3, [r0, #0]
 801550e:	a904      	add	r1, sp, #16
 8015510:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015512:	4798      	blx	r3
 8015514:	b008      	add	sp, #32
 8015516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801551a:	bf00      	nop
 801551c:	08029500 	.word	0x08029500
 8015520:	08029514 	.word	0x08029514

08015524 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8015524:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015526:	4604      	mov	r4, r0
 8015528:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801552c:	3201      	adds	r2, #1
 801552e:	d112      	bne.n	8015556 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015530:	6803      	ldr	r3, [r0, #0]
 8015532:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015536:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801553a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801553e:	2500      	movs	r5, #0
 8015540:	9500      	str	r5, [sp, #0]
 8015542:	466d      	mov	r5, sp
 8015544:	4629      	mov	r1, r5
 8015546:	f8ad 2006 	strh.w	r2, [sp, #6]
 801554a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801554c:	4798      	blx	r3
 801554e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8015552:	e884 0003 	stmia.w	r4, {r0, r1}
 8015556:	4620      	mov	r0, r4
 8015558:	b003      	add	sp, #12
 801555a:	bd30      	pop	{r4, r5, pc}

0801555c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801555c:	b513      	push	{r0, r1, r4, lr}
 801555e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8015562:	3301      	adds	r3, #1
 8015564:	4604      	mov	r4, r0
 8015566:	d109      	bne.n	801557c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8015568:	4601      	mov	r1, r0
 801556a:	4668      	mov	r0, sp
 801556c:	f7ff fe1a 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015570:	f8bd 3000 	ldrh.w	r3, [sp]
 8015574:	8423      	strh	r3, [r4, #32]
 8015576:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801557a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801557c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8015580:	b002      	add	sp, #8
 8015582:	bd10      	pop	{r4, pc}

08015584 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8015584:	b513      	push	{r0, r1, r4, lr}
 8015586:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801558a:	3301      	adds	r3, #1
 801558c:	4604      	mov	r4, r0
 801558e:	d109      	bne.n	80155a4 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8015590:	4601      	mov	r1, r0
 8015592:	4668      	mov	r0, sp
 8015594:	f7ff fe06 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015598:	f8bd 3000 	ldrh.w	r3, [sp]
 801559c:	8423      	strh	r3, [r4, #32]
 801559e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80155a2:	8463      	strh	r3, [r4, #34]	@ 0x22
 80155a4:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 80155a8:	b002      	add	sp, #8
 80155aa:	bd10      	pop	{r4, pc}

080155ac <_ZN8touchgfx6ScreenC1Ev>:
 80155ac:	b570      	push	{r4, r5, r6, lr}
 80155ae:	4605      	mov	r5, r0
 80155b0:	4b16      	ldr	r3, [pc, #88]	@ (801560c <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80155b2:	f845 3b04 	str.w	r3, [r5], #4
 80155b6:	2300      	movs	r3, #0
 80155b8:	8103      	strh	r3, [r0, #8]
 80155ba:	8143      	strh	r3, [r0, #10]
 80155bc:	8183      	strh	r3, [r0, #12]
 80155be:	81c3      	strh	r3, [r0, #14]
 80155c0:	8203      	strh	r3, [r0, #16]
 80155c2:	8243      	strh	r3, [r0, #18]
 80155c4:	8283      	strh	r3, [r0, #20]
 80155c6:	82c3      	strh	r3, [r0, #22]
 80155c8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80155cc:	6203      	str	r3, [r0, #32]
 80155ce:	8483      	strh	r3, [r0, #36]	@ 0x24
 80155d0:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80155d2:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80155d6:	4a0e      	ldr	r2, [pc, #56]	@ (8015610 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80155d8:	6343      	str	r3, [r0, #52]	@ 0x34
 80155da:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80155de:	4b0d      	ldr	r3, [pc, #52]	@ (8015614 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80155e0:	6042      	str	r2, [r0, #4]
 80155e2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80155e6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80155e8:	4a0b      	ldr	r2, [pc, #44]	@ (8015618 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80155ea:	4604      	mov	r4, r0
 80155ec:	2101      	movs	r1, #1
 80155ee:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80155f2:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80155f6:	f9b2 1000 	ldrsh.w	r1, [r2]
 80155fa:	4628      	mov	r0, r5
 80155fc:	4798      	blx	r3
 80155fe:	6863      	ldr	r3, [r4, #4]
 8015600:	4628      	mov	r0, r5
 8015602:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015604:	4631      	mov	r1, r6
 8015606:	4798      	blx	r3
 8015608:	4620      	mov	r0, r4
 801560a:	bd70      	pop	{r4, r5, r6, pc}
 801560c:	0802953c 	.word	0x0802953c
 8015610:	08028ddc 	.word	0x08028ddc
 8015614:	20002f4a 	.word	0x20002f4a
 8015618:	20002f48 	.word	0x20002f48

0801561c <_ZN8touchgfx6Screen4drawEv>:
 801561c:	b507      	push	{r0, r1, r2, lr}
 801561e:	4b09      	ldr	r3, [pc, #36]	@ (8015644 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015620:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015624:	4b08      	ldr	r3, [pc, #32]	@ (8015648 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8015626:	f8ad 2004 	strh.w	r2, [sp, #4]
 801562a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801562e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015632:	6803      	ldr	r3, [r0, #0]
 8015634:	2100      	movs	r1, #0
 8015636:	9100      	str	r1, [sp, #0]
 8015638:	689b      	ldr	r3, [r3, #8]
 801563a:	4669      	mov	r1, sp
 801563c:	4798      	blx	r3
 801563e:	b003      	add	sp, #12
 8015640:	f85d fb04 	ldr.w	pc, [sp], #4
 8015644:	20002f48 	.word	0x20002f48
 8015648:	20002f4a 	.word	0x20002f4a

0801564c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801564c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015650:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015654:	2b00      	cmp	r3, #0
 8015656:	b089      	sub	sp, #36	@ 0x24
 8015658:	4680      	mov	r8, r0
 801565a:	460c      	mov	r4, r1
 801565c:	4615      	mov	r5, r2
 801565e:	dd0e      	ble.n	801567e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015660:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015664:	2b00      	cmp	r3, #0
 8015666:	dd0a      	ble.n	801567e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015668:	4628      	mov	r0, r5
 801566a:	f7ff ff5b 	bl	8015524 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801566e:	4621      	mov	r1, r4
 8015670:	f7fe fba8 	bl	8013dc4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015674:	69eb      	ldr	r3, [r5, #28]
 8015676:	b928      	cbnz	r0, 8015684 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8015678:	461d      	mov	r5, r3
 801567a:	2b00      	cmp	r3, #0
 801567c:	d1f4      	bne.n	8015668 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801567e:	b009      	add	sp, #36	@ 0x24
 8015680:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015684:	ae04      	add	r6, sp, #16
 8015686:	2b00      	cmp	r3, #0
 8015688:	f000 80b5 	beq.w	80157f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801568c:	682b      	ldr	r3, [r5, #0]
 801568e:	4629      	mov	r1, r5
 8015690:	68db      	ldr	r3, [r3, #12]
 8015692:	a802      	add	r0, sp, #8
 8015694:	4798      	blx	r3
 8015696:	4628      	mov	r0, r5
 8015698:	f7ff ff60 	bl	801555c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801569c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80156a0:	4407      	add	r7, r0
 80156a2:	4628      	mov	r0, r5
 80156a4:	f7ff ff6e 	bl	8015584 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80156a8:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80156ac:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80156b0:	f8ad 2014 	strh.w	r2, [sp, #20]
 80156b4:	4418      	add	r0, r3
 80156b6:	4621      	mov	r1, r4
 80156b8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80156bc:	f8ad 0012 	strh.w	r0, [sp, #18]
 80156c0:	b23f      	sxth	r7, r7
 80156c2:	4630      	mov	r0, r6
 80156c4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80156c8:	f8ad 7010 	strh.w	r7, [sp, #16]
 80156cc:	f7fb f906 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 80156d0:	4628      	mov	r0, r5
 80156d2:	f7ff ff27 	bl	8015524 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80156d6:	4602      	mov	r2, r0
 80156d8:	e896 0003 	ldmia.w	r6, {r0, r1}
 80156dc:	ab06      	add	r3, sp, #24
 80156de:	e883 0003 	stmia.w	r3, {r0, r1}
 80156e2:	4611      	mov	r1, r2
 80156e4:	4618      	mov	r0, r3
 80156e6:	f7fb f8f9 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 80156ea:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80156ee:	f9b4 1000 	ldrsh.w	r1, [r4]
 80156f2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80156f6:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80156fa:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80156fe:	4299      	cmp	r1, r3
 8015700:	d10b      	bne.n	801571a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015702:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8015706:	4552      	cmp	r2, sl
 8015708:	d107      	bne.n	801571a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801570a:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801570e:	455a      	cmp	r2, fp
 8015710:	d103      	bne.n	801571a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015712:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8015716:	454a      	cmp	r2, r9
 8015718:	d06d      	beq.n	80157f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801571a:	f1bb 0f00 	cmp.w	fp, #0
 801571e:	dd65      	ble.n	80157ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015720:	f1b9 0f00 	cmp.w	r9, #0
 8015724:	dd62      	ble.n	80157ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8015726:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801572a:	fa1f f08a 	uxth.w	r0, sl
 801572e:	4552      	cmp	r2, sl
 8015730:	9000      	str	r0, [sp, #0]
 8015732:	da12      	bge.n	801575a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8015734:	9301      	str	r3, [sp, #4]
 8015736:	9b00      	ldr	r3, [sp, #0]
 8015738:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801573c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015740:	1a9a      	subs	r2, r3, r2
 8015742:	f8ad 1010 	strh.w	r1, [sp, #16]
 8015746:	f8ad 0014 	strh.w	r0, [sp, #20]
 801574a:	f8ad 2016 	strh.w	r2, [sp, #22]
 801574e:	69ea      	ldr	r2, [r5, #28]
 8015750:	4631      	mov	r1, r6
 8015752:	4640      	mov	r0, r8
 8015754:	f7ff ff7a 	bl	801564c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015758:	9b01      	ldr	r3, [sp, #4]
 801575a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801575e:	429a      	cmp	r2, r3
 8015760:	b29f      	uxth	r7, r3
 8015762:	da0d      	bge.n	8015780 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8015764:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015768:	1aba      	subs	r2, r7, r2
 801576a:	f8ad a012 	strh.w	sl, [sp, #18]
 801576e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015772:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015776:	69ea      	ldr	r2, [r5, #28]
 8015778:	4631      	mov	r1, r6
 801577a:	4640      	mov	r0, r8
 801577c:	f7ff ff66 	bl	801564c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015780:	8822      	ldrh	r2, [r4, #0]
 8015782:	88a3      	ldrh	r3, [r4, #4]
 8015784:	445f      	add	r7, fp
 8015786:	4413      	add	r3, r2
 8015788:	b29b      	uxth	r3, r3
 801578a:	b2bf      	uxth	r7, r7
 801578c:	b23a      	sxth	r2, r7
 801578e:	b219      	sxth	r1, r3
 8015790:	4291      	cmp	r1, r2
 8015792:	dd0d      	ble.n	80157b0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8015794:	1bdb      	subs	r3, r3, r7
 8015796:	f8ad 2010 	strh.w	r2, [sp, #16]
 801579a:	f8ad a012 	strh.w	sl, [sp, #18]
 801579e:	f8ad 3014 	strh.w	r3, [sp, #20]
 80157a2:	f8ad 9016 	strh.w	r9, [sp, #22]
 80157a6:	69ea      	ldr	r2, [r5, #28]
 80157a8:	4631      	mov	r1, r6
 80157aa:	4640      	mov	r0, r8
 80157ac:	f7ff ff4e 	bl	801564c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80157b0:	88e2      	ldrh	r2, [r4, #6]
 80157b2:	8863      	ldrh	r3, [r4, #2]
 80157b4:	4413      	add	r3, r2
 80157b6:	9a00      	ldr	r2, [sp, #0]
 80157b8:	444a      	add	r2, r9
 80157ba:	b29b      	uxth	r3, r3
 80157bc:	fa1f f982 	uxth.w	r9, r2
 80157c0:	fa0f f289 	sxth.w	r2, r9
 80157c4:	b219      	sxth	r1, r3
 80157c6:	428a      	cmp	r2, r1
 80157c8:	da15      	bge.n	80157f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80157ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80157ce:	f9b4 0000 	ldrsh.w	r0, [r4]
 80157d2:	f8ad 1014 	strh.w	r1, [sp, #20]
 80157d6:	eba3 0309 	sub.w	r3, r3, r9
 80157da:	f8ad 0010 	strh.w	r0, [sp, #16]
 80157de:	f8ad 2012 	strh.w	r2, [sp, #18]
 80157e2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80157e6:	69ea      	ldr	r2, [r5, #28]
 80157e8:	4631      	mov	r1, r6
 80157ea:	e001      	b.n	80157f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80157ec:	69ea      	ldr	r2, [r5, #28]
 80157ee:	4621      	mov	r1, r4
 80157f0:	4640      	mov	r0, r8
 80157f2:	f7ff ff2b 	bl	801564c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80157f6:	4628      	mov	r0, r5
 80157f8:	f7ff fe94 	bl	8015524 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80157fc:	6861      	ldr	r1, [r4, #4]
 80157fe:	4602      	mov	r2, r0
 8015800:	6820      	ldr	r0, [r4, #0]
 8015802:	4633      	mov	r3, r6
 8015804:	c303      	stmia	r3!, {r0, r1}
 8015806:	4611      	mov	r1, r2
 8015808:	4630      	mov	r0, r6
 801580a:	f7fb f867 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 801580e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015812:	2b00      	cmp	r3, #0
 8015814:	f77f af33 	ble.w	801567e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015818:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801581c:	2b00      	cmp	r3, #0
 801581e:	f77f af2e 	ble.w	801567e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015822:	4628      	mov	r0, r5
 8015824:	f7ff fe9a 	bl	801555c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015828:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801582c:	1a18      	subs	r0, r3, r0
 801582e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015832:	4628      	mov	r0, r5
 8015834:	f7ff fea6 	bl	8015584 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015838:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801583c:	1a18      	subs	r0, r3, r0
 801583e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015842:	682b      	ldr	r3, [r5, #0]
 8015844:	4631      	mov	r1, r6
 8015846:	689b      	ldr	r3, [r3, #8]
 8015848:	4628      	mov	r0, r5
 801584a:	4798      	blx	r3
 801584c:	e717      	b.n	801567e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801584e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801584e:	b570      	push	{r4, r5, r6, lr}
 8015850:	460c      	mov	r4, r1
 8015852:	b086      	sub	sp, #24
 8015854:	1d06      	adds	r6, r0, #4
 8015856:	2300      	movs	r3, #0
 8015858:	4631      	mov	r1, r6
 801585a:	4605      	mov	r5, r0
 801585c:	a802      	add	r0, sp, #8
 801585e:	9301      	str	r3, [sp, #4]
 8015860:	f7ff fca0 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015864:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015868:	8822      	ldrh	r2, [r4, #0]
 801586a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801586e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015872:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015876:	1ad2      	subs	r2, r2, r3
 8015878:	8863      	ldrh	r3, [r4, #2]
 801587a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801587e:	1a5b      	subs	r3, r3, r1
 8015880:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8015884:	f8ad 1016 	strh.w	r1, [sp, #22]
 8015888:	aa01      	add	r2, sp, #4
 801588a:	a904      	add	r1, sp, #16
 801588c:	4630      	mov	r0, r6
 801588e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015892:	f7fb f8fb 	bl	8010a8c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8015896:	9a01      	ldr	r2, [sp, #4]
 8015898:	b11a      	cbz	r2, 80158a2 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801589a:	4621      	mov	r1, r4
 801589c:	4628      	mov	r0, r5
 801589e:	f7ff fed5 	bl	801564c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80158a2:	b006      	add	sp, #24
 80158a4:	bd70      	pop	{r4, r5, r6, pc}

080158a6 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80158a6:	b530      	push	{r4, r5, lr}
 80158a8:	4602      	mov	r2, r0
 80158aa:	4604      	mov	r4, r0
 80158ac:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80158b0:	b085      	sub	sp, #20
 80158b2:	460d      	mov	r5, r1
 80158b4:	6851      	ldr	r1, [r2, #4]
 80158b6:	466b      	mov	r3, sp
 80158b8:	c303      	stmia	r3!, {r0, r1}
 80158ba:	4629      	mov	r1, r5
 80158bc:	4668      	mov	r0, sp
 80158be:	f7fb f80d 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 80158c2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80158c6:	b12b      	cbz	r3, 80158d4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80158c8:	4669      	mov	r1, sp
 80158ca:	4620      	mov	r0, r4
 80158cc:	f7ff ffbf 	bl	801584e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80158d0:	b005      	add	sp, #20
 80158d2:	bd30      	pop	{r4, r5, pc}
 80158d4:	3404      	adds	r4, #4
 80158d6:	4621      	mov	r1, r4
 80158d8:	a802      	add	r0, sp, #8
 80158da:	f7ff fc63 	bl	80151a4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80158de:	f8bd 3000 	ldrh.w	r3, [sp]
 80158e2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80158e6:	1a9b      	subs	r3, r3, r2
 80158e8:	f8ad 3000 	strh.w	r3, [sp]
 80158ec:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80158f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80158f4:	4669      	mov	r1, sp
 80158f6:	1a9b      	subs	r3, r3, r2
 80158f8:	4620      	mov	r0, r4
 80158fa:	f8ad 3002 	strh.w	r3, [sp, #2]
 80158fe:	f7fb f88c 	bl	8010a1a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8015902:	e7e5      	b.n	80158d0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08015904 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8015904:	680a      	ldr	r2, [r1, #0]
 8015906:	460b      	mov	r3, r1
 8015908:	6992      	ldr	r2, [r2, #24]
 801590a:	1d01      	adds	r1, r0, #4
 801590c:	4618      	mov	r0, r3
 801590e:	4710      	bx	r2

08015910 <_ZN8touchgfx12TextProviderC1Ev>:
 8015910:	b538      	push	{r3, r4, r5, lr}
 8015912:	2500      	movs	r5, #0
 8015914:	2302      	movs	r3, #2
 8015916:	4604      	mov	r4, r0
 8015918:	e9c0 5500 	strd	r5, r5, [r0]
 801591c:	7403      	strb	r3, [r0, #16]
 801591e:	6145      	str	r5, [r0, #20]
 8015920:	7605      	strb	r5, [r0, #24]
 8015922:	83c5      	strh	r5, [r0, #30]
 8015924:	8405      	strh	r5, [r0, #32]
 8015926:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8015928:	8705      	strh	r5, [r0, #56]	@ 0x38
 801592a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 801592c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8015930:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8015934:	220e      	movs	r2, #14
 8015936:	4629      	mov	r1, r5
 8015938:	304c      	adds	r0, #76	@ 0x4c
 801593a:	f010 fb30 	bl	8025f9e <memset>
 801593e:	2301      	movs	r3, #1
 8015940:	4620      	mov	r0, r4
 8015942:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8015946:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801594a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801594e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8015952:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8015956:	f7f7 fedf 	bl	800d718 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 801595a:	4620      	mov	r0, r4
 801595c:	bd38      	pop	{r3, r4, r5, pc}

0801595e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801595e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8015960:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015964:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8015966:	fab0 f080 	clz	r0, r0
 801596a:	0940      	lsrs	r0, r0, #5
 801596c:	4770      	bx	lr

0801596e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801596e:	b530      	push	{r4, r5, lr}
 8015970:	2500      	movs	r5, #0
 8015972:	2401      	movs	r4, #1
 8015974:	6843      	ldr	r3, [r0, #4]
 8015976:	b913      	cbnz	r3, 801597e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8015978:	6803      	ldr	r3, [r0, #0]
 801597a:	b313      	cbz	r3, 80159c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801597c:	6043      	str	r3, [r0, #4]
 801597e:	7e03      	ldrb	r3, [r0, #24]
 8015980:	b143      	cbz	r3, 8015994 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8015982:	6943      	ldr	r3, [r0, #20]
 8015984:	b12b      	cbz	r3, 8015992 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015986:	881a      	ldrh	r2, [r3, #0]
 8015988:	b11a      	cbz	r2, 8015992 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801598a:	1c9a      	adds	r2, r3, #2
 801598c:	6142      	str	r2, [r0, #20]
 801598e:	8818      	ldrh	r0, [r3, #0]
 8015990:	bd30      	pop	{r4, r5, pc}
 8015992:	7605      	strb	r5, [r0, #24]
 8015994:	6843      	ldr	r3, [r0, #4]
 8015996:	8819      	ldrh	r1, [r3, #0]
 8015998:	b199      	cbz	r1, 80159c2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801599a:	1c9a      	adds	r2, r3, #2
 801599c:	2902      	cmp	r1, #2
 801599e:	6042      	str	r2, [r0, #4]
 80159a0:	d1f5      	bne.n	801598e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80159a2:	7c03      	ldrb	r3, [r0, #16]
 80159a4:	2b01      	cmp	r3, #1
 80159a6:	d8e5      	bhi.n	8015974 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80159a8:	1c5a      	adds	r2, r3, #1
 80159aa:	3302      	adds	r3, #2
 80159ac:	7402      	strb	r2, [r0, #16]
 80159ae:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80159b2:	6143      	str	r3, [r0, #20]
 80159b4:	2b00      	cmp	r3, #0
 80159b6:	d0dd      	beq.n	8015974 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80159b8:	881b      	ldrh	r3, [r3, #0]
 80159ba:	2b00      	cmp	r3, #0
 80159bc:	d0da      	beq.n	8015974 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80159be:	7604      	strb	r4, [r0, #24]
 80159c0:	e7d8      	b.n	8015974 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80159c2:	2000      	movs	r0, #0
 80159c4:	e7e4      	b.n	8015990 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80159c6:	b430      	push	{r4, r5}
 80159c8:	6001      	str	r1, [r0, #0]
 80159ca:	2100      	movs	r1, #0
 80159cc:	6041      	str	r1, [r0, #4]
 80159ce:	6815      	ldr	r5, [r2, #0]
 80159d0:	6085      	str	r5, [r0, #8]
 80159d2:	6852      	ldr	r2, [r2, #4]
 80159d4:	6443      	str	r3, [r0, #68]	@ 0x44
 80159d6:	9b02      	ldr	r3, [sp, #8]
 80159d8:	60c2      	str	r2, [r0, #12]
 80159da:	7401      	strb	r1, [r0, #16]
 80159dc:	6141      	str	r1, [r0, #20]
 80159de:	7601      	strb	r1, [r0, #24]
 80159e0:	8701      	strh	r1, [r0, #56]	@ 0x38
 80159e2:	8401      	strh	r1, [r0, #32]
 80159e4:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80159e8:	6483      	str	r3, [r0, #72]	@ 0x48
 80159ea:	bc30      	pop	{r4, r5}
 80159ec:	f7f7 be94 	b.w	800d718 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080159f0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80159f0:	b408      	push	{r3}
 80159f2:	b510      	push	{r4, lr}
 80159f4:	b085      	sub	sp, #20
 80159f6:	ac07      	add	r4, sp, #28
 80159f8:	f854 3b04 	ldr.w	r3, [r4], #4
 80159fc:	9300      	str	r3, [sp, #0]
 80159fe:	4613      	mov	r3, r2
 8015a00:	4622      	mov	r2, r4
 8015a02:	9403      	str	r4, [sp, #12]
 8015a04:	f7ff ffdf 	bl	80159c6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015a08:	b005      	add	sp, #20
 8015a0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015a0e:	b001      	add	sp, #4
 8015a10:	4770      	bx	lr

08015a12 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8015a12:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015a14:	4605      	mov	r5, r0
 8015a16:	4608      	mov	r0, r1
 8015a18:	b1e9      	cbz	r1, 8015a56 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8015a1a:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8015a1e:	460b      	mov	r3, r1
 8015a20:	f101 0708 	add.w	r7, r1, #8
 8015a24:	4622      	mov	r2, r4
 8015a26:	6818      	ldr	r0, [r3, #0]
 8015a28:	6859      	ldr	r1, [r3, #4]
 8015a2a:	4626      	mov	r6, r4
 8015a2c:	c603      	stmia	r6!, {r0, r1}
 8015a2e:	3308      	adds	r3, #8
 8015a30:	42bb      	cmp	r3, r7
 8015a32:	4634      	mov	r4, r6
 8015a34:	d1f7      	bne.n	8015a26 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8015a36:	6818      	ldr	r0, [r3, #0]
 8015a38:	6030      	str	r0, [r6, #0]
 8015a3a:	889b      	ldrh	r3, [r3, #4]
 8015a3c:	80b3      	strh	r3, [r6, #4]
 8015a3e:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8015a42:	015b      	lsls	r3, r3, #5
 8015a44:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8015a48:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8015a4c:	430b      	orrs	r3, r1
 8015a4e:	425b      	negs	r3, r3
 8015a50:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8015a54:	4610      	mov	r0, r2
 8015a56:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015a58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8015a58:	b538      	push	{r3, r4, r5, lr}
 8015a5a:	460c      	mov	r4, r1
 8015a5c:	6811      	ldr	r1, [r2, #0]
 8015a5e:	4610      	mov	r0, r2
 8015a60:	68cd      	ldr	r5, [r1, #12]
 8015a62:	4619      	mov	r1, r3
 8015a64:	47a8      	blx	r5
 8015a66:	2800      	cmp	r0, #0
 8015a68:	bf08      	it	eq
 8015a6a:	4620      	moveq	r0, r4
 8015a6c:	bd38      	pop	{r3, r4, r5, pc}
	...

08015a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015a70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015a74:	468c      	mov	ip, r1
 8015a76:	4605      	mov	r5, r0
 8015a78:	4614      	mov	r4, r2
 8015a7a:	b942      	cbnz	r2, 8015a8e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8015a7c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8015a80:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8015a84:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8015a88:	4620      	mov	r0, r4
 8015a8a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015a8e:	7b50      	ldrb	r0, [r2, #13]
 8015a90:	8893      	ldrh	r3, [r2, #4]
 8015a92:	0106      	lsls	r6, r0, #4
 8015a94:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8015a98:	79e6      	ldrb	r6, [r4, #7]
 8015a9a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8015a9e:	4316      	orrs	r6, r2
 8015aa0:	185a      	adds	r2, r3, r1
 8015aa2:	b291      	uxth	r1, r2
 8015aa4:	291d      	cmp	r1, #29
 8015aa6:	b2b7      	uxth	r7, r6
 8015aa8:	d87e      	bhi.n	8015ba8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8015aaa:	2201      	movs	r2, #1
 8015aac:	408a      	lsls	r2, r1
 8015aae:	498a      	ldr	r1, [pc, #552]	@ (8015cd8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8015ab0:	420a      	tst	r2, r1
 8015ab2:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8015ab6:	d12d      	bne.n	8015b14 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8015ab8:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8015abc:	d074      	beq.n	8015ba8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8015abe:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015ac2:	4623      	mov	r3, r4
 8015ac4:	f104 0e08 	add.w	lr, r4, #8
 8015ac8:	4614      	mov	r4, r2
 8015aca:	6818      	ldr	r0, [r3, #0]
 8015acc:	6859      	ldr	r1, [r3, #4]
 8015ace:	4694      	mov	ip, r2
 8015ad0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015ad4:	3308      	adds	r3, #8
 8015ad6:	4573      	cmp	r3, lr
 8015ad8:	4662      	mov	r2, ip
 8015ada:	d1f6      	bne.n	8015aca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8015adc:	6818      	ldr	r0, [r3, #0]
 8015ade:	f8cc 0000 	str.w	r0, [ip]
 8015ae2:	889b      	ldrh	r3, [r3, #4]
 8015ae4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8015ae8:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8015aec:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8015af0:	b2b3      	uxth	r3, r6
 8015af2:	1aca      	subs	r2, r1, r3
 8015af4:	b292      	uxth	r2, r2
 8015af6:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8015afa:	10d2      	asrs	r2, r2, #3
 8015afc:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8015b00:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8015b04:	4302      	orrs	r2, r0
 8015b06:	1bcf      	subs	r7, r1, r7
 8015b08:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8015b0c:	1afb      	subs	r3, r7, r3
 8015b0e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8015b12:	e7b9      	b.n	8015a88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8015b14:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015b18:	4623      	mov	r3, r4
 8015b1a:	f104 0808 	add.w	r8, r4, #8
 8015b1e:	4614      	mov	r4, r2
 8015b20:	6818      	ldr	r0, [r3, #0]
 8015b22:	6859      	ldr	r1, [r3, #4]
 8015b24:	4696      	mov	lr, r2
 8015b26:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015b2a:	3308      	adds	r3, #8
 8015b2c:	4543      	cmp	r3, r8
 8015b2e:	4672      	mov	r2, lr
 8015b30:	d1f6      	bne.n	8015b20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8015b32:	6818      	ldr	r0, [r3, #0]
 8015b34:	f8ce 0000 	str.w	r0, [lr]
 8015b38:	889b      	ldrh	r3, [r3, #4]
 8015b3a:	f8ae 3004 	strh.w	r3, [lr, #4]
 8015b3e:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8015b40:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8015b44:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8015b46:	f640 6333 	movw	r3, #3635	@ 0xe33
 8015b4a:	4299      	cmp	r1, r3
 8015b4c:	d111      	bne.n	8015b72 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8015b4e:	f8dc 3000 	ldr.w	r3, [ip]
 8015b52:	4660      	mov	r0, ip
 8015b54:	68db      	ldr	r3, [r3, #12]
 8015b56:	4798      	blx	r3
 8015b58:	7b41      	ldrb	r1, [r0, #13]
 8015b5a:	00cb      	lsls	r3, r1, #3
 8015b5c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015b60:	7a03      	ldrb	r3, [r0, #8]
 8015b62:	4313      	orrs	r3, r2
 8015b64:	064a      	lsls	r2, r1, #25
 8015b66:	bf44      	itt	mi
 8015b68:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015b6c:	b21b      	sxthmi	r3, r3
 8015b6e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015b72:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8015b76:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8015b7a:	443b      	add	r3, r7
 8015b7c:	4433      	add	r3, r6
 8015b7e:	b29b      	uxth	r3, r3
 8015b80:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015b84:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8015b88:	10db      	asrs	r3, r3, #3
 8015b8a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8015b8e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015b92:	4313      	orrs	r3, r2
 8015b94:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8015b98:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8015b9c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8015ba0:	1a9b      	subs	r3, r3, r2
 8015ba2:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8015ba6:	e76f      	b.n	8015a88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8015ba8:	f023 0204 	bic.w	r2, r3, #4
 8015bac:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8015bb0:	428a      	cmp	r2, r1
 8015bb2:	d003      	beq.n	8015bbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8015bb4:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8015bb8:	4293      	cmp	r3, r2
 8015bba:	d137      	bne.n	8015c2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8015bbc:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8015bc0:	4622      	mov	r2, r4
 8015bc2:	f104 0808 	add.w	r8, r4, #8
 8015bc6:	4634      	mov	r4, r6
 8015bc8:	6810      	ldr	r0, [r2, #0]
 8015bca:	6851      	ldr	r1, [r2, #4]
 8015bcc:	46b6      	mov	lr, r6
 8015bce:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015bd2:	3208      	adds	r2, #8
 8015bd4:	4542      	cmp	r2, r8
 8015bd6:	4676      	mov	r6, lr
 8015bd8:	d1f6      	bne.n	8015bc8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8015bda:	6810      	ldr	r0, [r2, #0]
 8015bdc:	f8ce 0000 	str.w	r0, [lr]
 8015be0:	8892      	ldrh	r2, [r2, #4]
 8015be2:	f8ae 2004 	strh.w	r2, [lr, #4]
 8015be6:	3b01      	subs	r3, #1
 8015be8:	b29b      	uxth	r3, r3
 8015bea:	4662      	mov	r2, ip
 8015bec:	4621      	mov	r1, r4
 8015bee:	4628      	mov	r0, r5
 8015bf0:	f7ff ff32 	bl	8015a58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015bf4:	7b41      	ldrb	r1, [r0, #13]
 8015bf6:	00cb      	lsls	r3, r1, #3
 8015bf8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015bfc:	7a03      	ldrb	r3, [r0, #8]
 8015bfe:	0648      	lsls	r0, r1, #25
 8015c00:	ea43 0302 	orr.w	r3, r3, r2
 8015c04:	bf44      	itt	mi
 8015c06:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015c0a:	b21b      	sxthmi	r3, r3
 8015c0c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015c10:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8015c14:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8015c18:	005b      	lsls	r3, r3, #1
 8015c1a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015c1e:	4313      	orrs	r3, r2
 8015c20:	115a      	asrs	r2, r3, #5
 8015c22:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8015c26:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8015c2a:	e046      	b.n	8015cba <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8015c2c:	00c2      	lsls	r2, r0, #3
 8015c2e:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8015c32:	7a22      	ldrb	r2, [r4, #8]
 8015c34:	430a      	orrs	r2, r1
 8015c36:	0641      	lsls	r1, r0, #25
 8015c38:	bf44      	itt	mi
 8015c3a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8015c3e:	b212      	sxthmi	r2, r2
 8015c40:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8015c44:	f640 6109 	movw	r1, #3593	@ 0xe09
 8015c48:	f023 0210 	bic.w	r2, r3, #16
 8015c4c:	428a      	cmp	r2, r1
 8015c4e:	d003      	beq.n	8015c58 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8015c50:	f640 6213 	movw	r2, #3603	@ 0xe13
 8015c54:	4293      	cmp	r3, r2
 8015c56:	d13d      	bne.n	8015cd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8015c58:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015c5c:	f104 0808 	add.w	r8, r4, #8
 8015c60:	4696      	mov	lr, r2
 8015c62:	6820      	ldr	r0, [r4, #0]
 8015c64:	6861      	ldr	r1, [r4, #4]
 8015c66:	4616      	mov	r6, r2
 8015c68:	c603      	stmia	r6!, {r0, r1}
 8015c6a:	3408      	adds	r4, #8
 8015c6c:	4544      	cmp	r4, r8
 8015c6e:	4632      	mov	r2, r6
 8015c70:	d1f7      	bne.n	8015c62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8015c72:	6820      	ldr	r0, [r4, #0]
 8015c74:	6030      	str	r0, [r6, #0]
 8015c76:	88a1      	ldrh	r1, [r4, #4]
 8015c78:	80b1      	strh	r1, [r6, #4]
 8015c7a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8015c7e:	0076      	lsls	r6, r6, #1
 8015c80:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8015c84:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8015c88:	4316      	orrs	r6, r2
 8015c8a:	f640 6213 	movw	r2, #3603	@ 0xe13
 8015c8e:	4293      	cmp	r3, r2
 8015c90:	bf1a      	itte	ne
 8015c92:	f103 33ff 	addne.w	r3, r3, #4294967295
 8015c96:	b29b      	uxthne	r3, r3
 8015c98:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8015c9c:	4662      	mov	r2, ip
 8015c9e:	4671      	mov	r1, lr
 8015ca0:	4628      	mov	r0, r5
 8015ca2:	4674      	mov	r4, lr
 8015ca4:	f7ff fed8 	bl	8015a58 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015ca8:	7b43      	ldrb	r3, [r0, #13]
 8015caa:	7a82      	ldrb	r2, [r0, #10]
 8015cac:	005b      	lsls	r3, r3, #1
 8015cae:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015cb2:	4313      	orrs	r3, r2
 8015cb4:	1af6      	subs	r6, r6, r3
 8015cb6:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8015cba:	7b61      	ldrb	r1, [r4, #13]
 8015cbc:	00cb      	lsls	r3, r1, #3
 8015cbe:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015cc2:	7a23      	ldrb	r3, [r4, #8]
 8015cc4:	4313      	orrs	r3, r2
 8015cc6:	064a      	lsls	r2, r1, #25
 8015cc8:	bf44      	itt	mi
 8015cca:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015cce:	b21b      	sxthmi	r3, r3
 8015cd0:	1bdb      	subs	r3, r3, r7
 8015cd2:	e71c      	b.n	8015b0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8015cd4:	2300      	movs	r3, #0
 8015cd6:	e7a6      	b.n	8015c26 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8015cd8:	3fc00079 	.word	0x3fc00079

08015cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015cdc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015ce0:	4604      	mov	r4, r0
 8015ce2:	b942      	cbnz	r2, 8015cf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015ce4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8015ce8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8015cec:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8015cf0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8015cf4:	e047      	b.n	8015d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015cf6:	7b51      	ldrb	r1, [r2, #13]
 8015cf8:	8893      	ldrh	r3, [r2, #4]
 8015cfa:	010d      	lsls	r5, r1, #4
 8015cfc:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8015d00:	79d5      	ldrb	r5, [r2, #7]
 8015d02:	4305      	orrs	r5, r0
 8015d04:	2d04      	cmp	r5, #4
 8015d06:	bfcc      	ite	gt
 8015d08:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8015d0c:	f04f 0e01 	movle.w	lr, #1
 8015d10:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8015d14:	f200 80ab 	bhi.w	8015e6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8015d18:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8015d1c:	4283      	cmp	r3, r0
 8015d1e:	d216      	bcs.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015d20:	f240 605b 	movw	r0, #1627	@ 0x65b
 8015d24:	4283      	cmp	r3, r0
 8015d26:	d859      	bhi.n	8015ddc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8015d28:	f240 6057 	movw	r0, #1623	@ 0x657
 8015d2c:	4283      	cmp	r3, r0
 8015d2e:	d20e      	bcs.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015d30:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8015d34:	d24a      	bcs.n	8015dcc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8015d36:	f240 604e 	movw	r0, #1614	@ 0x64e
 8015d3a:	4283      	cmp	r3, r0
 8015d3c:	d207      	bcs.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015d3e:	f240 601a 	movw	r0, #1562	@ 0x61a
 8015d42:	4283      	cmp	r3, r0
 8015d44:	d02a      	beq.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015d46:	d821      	bhi.n	8015d8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8015d48:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8015d4c:	d35b      	bcc.n	8015e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015d4e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8015d52:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8015d56:	f040 80d0 	bne.w	8015efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015d5a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8015d5e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015d62:	f040 80ca 	bne.w	8015efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8015d66:	00cb      	lsls	r3, r1, #3
 8015d68:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8015d6c:	7a13      	ldrb	r3, [r2, #8]
 8015d6e:	0649      	lsls	r1, r1, #25
 8015d70:	ea43 0300 	orr.w	r3, r3, r0
 8015d74:	bf44      	itt	mi
 8015d76:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015d7a:	b21b      	sxthmi	r3, r3
 8015d7c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8015d80:	1b5d      	subs	r5, r3, r5
 8015d82:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8015d86:	4610      	mov	r0, r2
 8015d88:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015d8c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8015d90:	4283      	cmp	r3, r0
 8015d92:	d338      	bcc.n	8015e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015d94:	f240 604c 	movw	r0, #1612	@ 0x64c
 8015d98:	4283      	cmp	r3, r0
 8015d9a:	d9d8      	bls.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015d9c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8015da0:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8015da4:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015da8:	f040 80f2 	bne.w	8015f90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015dac:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8015db0:	f040 80ee 	bne.w	8015f90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8015db4:	00cb      	lsls	r3, r1, #3
 8015db6:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8015dba:	7a13      	ldrb	r3, [r2, #8]
 8015dbc:	064e      	lsls	r6, r1, #25
 8015dbe:	ea43 0300 	orr.w	r3, r3, r0
 8015dc2:	bf44      	itt	mi
 8015dc4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015dc8:	b21b      	sxthmi	r3, r3
 8015dca:	e7d9      	b.n	8015d80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8015dcc:	f240 6054 	movw	r0, #1620	@ 0x654
 8015dd0:	4283      	cmp	r3, r0
 8015dd2:	d8e3      	bhi.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015dd4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8015dd8:	d9e0      	bls.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015dda:	e7b8      	b.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ddc:	f240 6074 	movw	r0, #1652	@ 0x674
 8015de0:	4283      	cmp	r3, r0
 8015de2:	d0b4      	beq.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015de4:	d82d      	bhi.n	8015e42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8015de6:	f240 605e 	movw	r0, #1630	@ 0x65e
 8015dea:	4283      	cmp	r3, r0
 8015dec:	d804      	bhi.n	8015df8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8015dee:	f240 605d 	movw	r0, #1629	@ 0x65d
 8015df2:	4283      	cmp	r3, r0
 8015df4:	d3d2      	bcc.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015df6:	e7aa      	b.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015df8:	f240 605f 	movw	r0, #1631	@ 0x65f
 8015dfc:	4283      	cmp	r3, r0
 8015dfe:	d0cd      	beq.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e00:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8015e04:	d0a3      	beq.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e06:	00cb      	lsls	r3, r1, #3
 8015e08:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8015e0c:	7a13      	ldrb	r3, [r2, #8]
 8015e0e:	0649      	lsls	r1, r1, #25
 8015e10:	ea43 0300 	orr.w	r3, r3, r0
 8015e14:	bf44      	itt	mi
 8015e16:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015e1a:	b21b      	sxthmi	r3, r3
 8015e1c:	1b5d      	subs	r5, r3, r5
 8015e1e:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8015e22:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8015e26:	7b53      	ldrb	r3, [r2, #13]
 8015e28:	015b      	lsls	r3, r3, #5
 8015e2a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8015e2e:	7993      	ldrb	r3, [r2, #6]
 8015e30:	430b      	orrs	r3, r1
 8015e32:	005b      	lsls	r3, r3, #1
 8015e34:	2105      	movs	r1, #5
 8015e36:	fb93 f3f1 	sdiv	r3, r3, r1
 8015e3a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8015e3e:	440b      	add	r3, r1
 8015e40:	e756      	b.n	8015cf0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8015e42:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8015e46:	4283      	cmp	r3, r0
 8015e48:	d809      	bhi.n	8015e5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8015e4a:	f240 60df 	movw	r0, #1759	@ 0x6df
 8015e4e:	4283      	cmp	r3, r0
 8015e50:	f4bf af7d 	bcs.w	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e54:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8015e58:	2b05      	cmp	r3, #5
 8015e5a:	d8d4      	bhi.n	8015e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015e5c:	e777      	b.n	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e5e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8015e62:	4283      	cmp	r3, r0
 8015e64:	d09a      	beq.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e66:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8015e6a:	4283      	cmp	r3, r0
 8015e6c:	e7ca      	b.n	8015e04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8015e6e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8015e72:	d22b      	bcs.n	8015ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8015e74:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8015e78:	4283      	cmp	r3, r0
 8015e7a:	d28f      	bcs.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015e7c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8015e80:	4283      	cmp	r3, r0
 8015e82:	d816      	bhi.n	8015eb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8015e84:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8015e88:	4283      	cmp	r3, r0
 8015e8a:	f4bf af60 	bcs.w	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015e8e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8015e92:	4283      	cmp	r3, r0
 8015e94:	d80a      	bhi.n	8015eac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8015e96:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8015e9a:	4283      	cmp	r3, r0
 8015e9c:	f4bf af57 	bcs.w	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ea0:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8015ea4:	4283      	cmp	r3, r0
 8015ea6:	f43f af79 	beq.w	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015eaa:	e7ac      	b.n	8015e06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8015eac:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8015eb0:	e7f8      	b.n	8015ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8015eb2:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8015eb6:	4283      	cmp	r3, r0
 8015eb8:	d802      	bhi.n	8015ec0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8015eba:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8015ebe:	e798      	b.n	8015df2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8015ec0:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8015ec4:	4283      	cmp	r3, r0
 8015ec6:	f47f af42 	bne.w	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015eca:	e767      	b.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015ecc:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8015ed0:	4283      	cmp	r3, r0
 8015ed2:	f43f af63 	beq.w	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015ed6:	d802      	bhi.n	8015ede <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8015ed8:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8015edc:	e7f2      	b.n	8015ec4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8015ede:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8015ee2:	4283      	cmp	r3, r0
 8015ee4:	d805      	bhi.n	8015ef2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8015ee6:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8015eea:	4283      	cmp	r3, r0
 8015eec:	f4ff af2f 	bcc.w	8015d4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ef0:	e754      	b.n	8015d9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8015ef2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8015ef6:	4283      	cmp	r3, r0
 8015ef8:	e7af      	b.n	8015e5a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8015efa:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8015efe:	4617      	mov	r7, r2
 8015f00:	f102 0808 	add.w	r8, r2, #8
 8015f04:	4666      	mov	r6, ip
 8015f06:	6838      	ldr	r0, [r7, #0]
 8015f08:	6879      	ldr	r1, [r7, #4]
 8015f0a:	46e6      	mov	lr, ip
 8015f0c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015f10:	3708      	adds	r7, #8
 8015f12:	4547      	cmp	r7, r8
 8015f14:	46f4      	mov	ip, lr
 8015f16:	d1f6      	bne.n	8015f06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8015f18:	6838      	ldr	r0, [r7, #0]
 8015f1a:	f8ce 0000 	str.w	r0, [lr]
 8015f1e:	88b9      	ldrh	r1, [r7, #4]
 8015f20:	f8ae 1004 	strh.w	r1, [lr, #4]
 8015f24:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8015f28:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015f2c:	d009      	beq.n	8015f42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8015f2e:	7b51      	ldrb	r1, [r2, #13]
 8015f30:	7992      	ldrb	r2, [r2, #6]
 8015f32:	0149      	lsls	r1, r1, #5
 8015f34:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8015f38:	4311      	orrs	r1, r2
 8015f3a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015f3e:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8015f42:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8015f46:	b2ad      	uxth	r5, r5
 8015f48:	d00d      	beq.n	8015f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8015f4a:	442b      	add	r3, r5
 8015f4c:	b29b      	uxth	r3, r3
 8015f4e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8015f52:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8015f56:	10db      	asrs	r3, r3, #3
 8015f58:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8015f5c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015f60:	4313      	orrs	r3, r2
 8015f62:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8015f66:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8015f6a:	00cb      	lsls	r3, r1, #3
 8015f6c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015f70:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8015f74:	064f      	lsls	r7, r1, #25
 8015f76:	ea43 0302 	orr.w	r3, r3, r2
 8015f7a:	bf44      	itt	mi
 8015f7c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015f80:	b21b      	sxthmi	r3, r3
 8015f82:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8015f86:	1b5b      	subs	r3, r3, r5
 8015f88:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8015f8c:	4632      	mov	r2, r6
 8015f8e:	e6fa      	b.n	8015d86 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015f90:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8015f94:	4617      	mov	r7, r2
 8015f96:	f102 0908 	add.w	r9, r2, #8
 8015f9a:	4666      	mov	r6, ip
 8015f9c:	6838      	ldr	r0, [r7, #0]
 8015f9e:	6879      	ldr	r1, [r7, #4]
 8015fa0:	46e0      	mov	r8, ip
 8015fa2:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8015fa6:	3708      	adds	r7, #8
 8015fa8:	454f      	cmp	r7, r9
 8015faa:	46c4      	mov	ip, r8
 8015fac:	d1f6      	bne.n	8015f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8015fae:	6838      	ldr	r0, [r7, #0]
 8015fb0:	f8c8 0000 	str.w	r0, [r8]
 8015fb4:	88b9      	ldrh	r1, [r7, #4]
 8015fb6:	f8a8 1004 	strh.w	r1, [r8, #4]
 8015fba:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8015fbe:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8015fc2:	d009      	beq.n	8015fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8015fc4:	7b51      	ldrb	r1, [r2, #13]
 8015fc6:	7992      	ldrb	r2, [r2, #6]
 8015fc8:	0149      	lsls	r1, r1, #5
 8015fca:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8015fce:	4311      	orrs	r1, r2
 8015fd0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8015fd4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8015fd8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8015fdc:	d00e      	beq.n	8015ffc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8015fde:	eba3 030e 	sub.w	r3, r3, lr
 8015fe2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8015fe6:	b29b      	uxth	r3, r3
 8015fe8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8015fec:	10db      	asrs	r3, r3, #3
 8015fee:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015ff2:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8015ff6:	4313      	orrs	r3, r2
 8015ff8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8015ffc:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8016000:	00cb      	lsls	r3, r1, #3
 8016002:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016006:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 801600a:	0648      	lsls	r0, r1, #25
 801600c:	ea43 0302 	orr.w	r3, r3, r2
 8016010:	bf44      	itt	mi
 8016012:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016016:	b21b      	sxthmi	r3, r3
 8016018:	1b5d      	subs	r5, r3, r5
 801601a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801601e:	e7b5      	b.n	8015f8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016020:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016024:	461e      	mov	r6, r3
 8016026:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016028:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801602c:	4604      	mov	r4, r0
 801602e:	4617      	mov	r7, r2
 8016030:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016034:	f7f7 faca 	bl	800d5cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016038:	4605      	mov	r5, r0
 801603a:	b918      	cbnz	r0, 8016044 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801603c:	6030      	str	r0, [r6, #0]
 801603e:	4628      	mov	r0, r5
 8016040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016044:	683b      	ldr	r3, [r7, #0]
 8016046:	4601      	mov	r1, r0
 8016048:	68db      	ldr	r3, [r3, #12]
 801604a:	4638      	mov	r0, r7
 801604c:	4798      	blx	r3
 801604e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8016052:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8016056:	4602      	mov	r2, r0
 8016058:	6030      	str	r0, [r6, #0]
 801605a:	d213      	bcs.n	8016084 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801605c:	4643      	mov	r3, r8
 801605e:	4639      	mov	r1, r7
 8016060:	4620      	mov	r0, r4
 8016062:	f7ff fe3b 	bl	8015cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016066:	6030      	str	r0, [r6, #0]
 8016068:	6833      	ldr	r3, [r6, #0]
 801606a:	b143      	cbz	r3, 801607e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801606c:	7b5a      	ldrb	r2, [r3, #13]
 801606e:	7a9b      	ldrb	r3, [r3, #10]
 8016070:	0052      	lsls	r2, r2, #1
 8016072:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8016076:	4313      	orrs	r3, r2
 8016078:	bf0c      	ite	eq
 801607a:	2301      	moveq	r3, #1
 801607c:	2300      	movne	r3, #0
 801607e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8016082:	e7dc      	b.n	801603e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016084:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016088:	b29b      	uxth	r3, r3
 801608a:	2b7f      	cmp	r3, #127	@ 0x7f
 801608c:	d804      	bhi.n	8016098 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801608e:	4639      	mov	r1, r7
 8016090:	4620      	mov	r0, r4
 8016092:	f7ff fced 	bl	8015a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016096:	e7e6      	b.n	8016066 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016098:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801609c:	2b00      	cmp	r3, #0
 801609e:	d0e3      	beq.n	8016068 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80160a0:	f640 1302 	movw	r3, #2306	@ 0x902
 80160a4:	429d      	cmp	r5, r3
 80160a6:	d1df      	bne.n	8016068 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80160a8:	4601      	mov	r1, r0
 80160aa:	4620      	mov	r0, r4
 80160ac:	f7ff fcb1 	bl	8015a12 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80160b0:	e7d9      	b.n	8016066 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080160b2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80160b2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80160b6:	461e      	mov	r6, r3
 80160b8:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80160ba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80160be:	4604      	mov	r4, r0
 80160c0:	4617      	mov	r7, r2
 80160c2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80160c6:	f7f7 fa81 	bl	800d5cc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80160ca:	4605      	mov	r5, r0
 80160cc:	b918      	cbnz	r0, 80160d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80160ce:	6030      	str	r0, [r6, #0]
 80160d0:	4628      	mov	r0, r5
 80160d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80160d6:	683b      	ldr	r3, [r7, #0]
 80160d8:	4601      	mov	r1, r0
 80160da:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80160de:	4638      	mov	r0, r7
 80160e0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80160e4:	47c8      	blx	r9
 80160e6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80160ea:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80160ee:	4602      	mov	r2, r0
 80160f0:	6030      	str	r0, [r6, #0]
 80160f2:	d213      	bcs.n	801611c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80160f4:	4643      	mov	r3, r8
 80160f6:	4639      	mov	r1, r7
 80160f8:	4620      	mov	r0, r4
 80160fa:	f7ff fdef 	bl	8015cdc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80160fe:	6030      	str	r0, [r6, #0]
 8016100:	6833      	ldr	r3, [r6, #0]
 8016102:	b143      	cbz	r3, 8016116 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016104:	7b5a      	ldrb	r2, [r3, #13]
 8016106:	7a9b      	ldrb	r3, [r3, #10]
 8016108:	0052      	lsls	r2, r2, #1
 801610a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801610e:	4313      	orrs	r3, r2
 8016110:	bf0c      	ite	eq
 8016112:	2301      	moveq	r3, #1
 8016114:	2300      	movne	r3, #0
 8016116:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 801611a:	e7d9      	b.n	80160d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 801611c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016120:	b29b      	uxth	r3, r3
 8016122:	2b7f      	cmp	r3, #127	@ 0x7f
 8016124:	d804      	bhi.n	8016130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8016126:	4639      	mov	r1, r7
 8016128:	4620      	mov	r0, r4
 801612a:	f7ff fca1 	bl	8015a70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801612e:	e7e6      	b.n	80160fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8016130:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016134:	2b00      	cmp	r3, #0
 8016136:	d0e3      	beq.n	8016100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016138:	f640 1302 	movw	r3, #2306	@ 0x902
 801613c:	429d      	cmp	r5, r3
 801613e:	d1df      	bne.n	8016100 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016140:	4601      	mov	r1, r0
 8016142:	4620      	mov	r0, r4
 8016144:	f7ff fc65 	bl	8015a12 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016148:	e7d9      	b.n	80160fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801614a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801614a:	b510      	push	{r4, lr}
 801614c:	4604      	mov	r4, r0
 801614e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8016152:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016154:	b1f1      	cbz	r1, 8016194 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016156:	2b0a      	cmp	r3, #10
 8016158:	d02f      	beq.n	80161ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801615a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801615c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016160:	3901      	subs	r1, #1
 8016162:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8016164:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8016168:	1c51      	adds	r1, r2, #1
 801616a:	b289      	uxth	r1, r1
 801616c:	2901      	cmp	r1, #1
 801616e:	bf84      	itt	hi
 8016170:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016174:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8016176:	f103 0201 	add.w	r2, r3, #1
 801617a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801617c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801617e:	bf98      	it	ls
 8016180:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8016182:	4413      	add	r3, r2
 8016184:	b29b      	uxth	r3, r3
 8016186:	2b09      	cmp	r3, #9
 8016188:	bf88      	it	hi
 801618a:	3b0a      	subhi	r3, #10
 801618c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016190:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016192:	e7dc      	b.n	801614e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8016194:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016196:	2b0a      	cmp	r3, #10
 8016198:	d00f      	beq.n	80161ba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801619a:	4620      	mov	r0, r4
 801619c:	f7ff fbe7 	bl	801596e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80161a0:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80161a2:	1c5a      	adds	r2, r3, #1
 80161a4:	8722      	strh	r2, [r4, #56]	@ 0x38
 80161a6:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80161a8:	4413      	add	r3, r2
 80161aa:	b29b      	uxth	r3, r3
 80161ac:	2b09      	cmp	r3, #9
 80161ae:	bf88      	it	hi
 80161b0:	3b0a      	subhi	r3, #10
 80161b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80161b6:	8458      	strh	r0, [r3, #34]	@ 0x22
 80161b8:	e7ec      	b.n	8016194 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80161ba:	bd10      	pop	{r4, pc}

080161bc <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80161bc:	b538      	push	{r3, r4, r5, lr}
 80161be:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80161c0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80161c4:	4604      	mov	r4, r0
 80161c6:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 80161c8:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 80161ca:	3a01      	subs	r2, #1
 80161cc:	8702      	strh	r2, [r0, #56]	@ 0x38
 80161ce:	1c5a      	adds	r2, r3, #1
 80161d0:	b292      	uxth	r2, r2
 80161d2:	2a09      	cmp	r2, #9
 80161d4:	bf86      	itte	hi
 80161d6:	3b09      	subhi	r3, #9
 80161d8:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80161da:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80161dc:	f7ff ffb5 	bl	801614a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80161e0:	8c23      	ldrh	r3, [r4, #32]
 80161e2:	2b01      	cmp	r3, #1
 80161e4:	bf9c      	itt	ls
 80161e6:	3301      	addls	r3, #1
 80161e8:	8423      	strhls	r3, [r4, #32]
 80161ea:	8be3      	ldrh	r3, [r4, #30]
 80161ec:	b90b      	cbnz	r3, 80161f2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80161ee:	2302      	movs	r3, #2
 80161f0:	83e3      	strh	r3, [r4, #30]
 80161f2:	8be3      	ldrh	r3, [r4, #30]
 80161f4:	3b01      	subs	r3, #1
 80161f6:	b29b      	uxth	r3, r3
 80161f8:	83e3      	strh	r3, [r4, #30]
 80161fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80161fe:	4628      	mov	r0, r5
 8016200:	8365      	strh	r5, [r4, #26]
 8016202:	bd38      	pop	{r3, r4, r5, pc}

08016204 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8016204:	428a      	cmp	r2, r1
 8016206:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801620a:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 801620c:	d931      	bls.n	8016272 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 801620e:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8016210:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8016214:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8016218:	19ee      	adds	r6, r5, r7
 801621a:	1a54      	subs	r4, r2, r1
 801621c:	3e01      	subs	r6, #1
 801621e:	fa1f fe84 	uxth.w	lr, r4
 8016222:	b2b4      	uxth	r4, r6
 8016224:	eba4 090e 	sub.w	r9, r4, lr
 8016228:	fa1f f989 	uxth.w	r9, r9
 801622c:	2c09      	cmp	r4, #9
 801622e:	4626      	mov	r6, r4
 8016230:	bf88      	it	hi
 8016232:	f1a4 060a 	subhi.w	r6, r4, #10
 8016236:	f1bc 0f00 	cmp.w	ip, #0
 801623a:	bf08      	it	eq
 801623c:	f04f 0c02 	moveq.w	ip, #2
 8016240:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016244:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016248:	fa1f fc8c 	uxth.w	ip, ip
 801624c:	3c01      	subs	r4, #1
 801624e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8016252:	b2a4      	uxth	r4, r4
 8016254:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016258:	454c      	cmp	r4, r9
 801625a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801625e:	d1e5      	bne.n	801622c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8016260:	eba5 050e 	sub.w	r5, r5, lr
 8016264:	eb0e 0408 	add.w	r4, lr, r8
 8016268:	8705      	strh	r5, [r0, #56]	@ 0x38
 801626a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801626e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8016272:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8016274:	1a64      	subs	r4, r4, r1
 8016276:	4439      	add	r1, r7
 8016278:	b289      	uxth	r1, r1
 801627a:	2909      	cmp	r1, #9
 801627c:	bf88      	it	hi
 801627e:	390a      	subhi	r1, #10
 8016280:	8704      	strh	r4, [r0, #56]	@ 0x38
 8016282:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016284:	250a      	movs	r5, #10
 8016286:	b18a      	cbz	r2, 80162ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8016288:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801628a:	3a01      	subs	r2, #1
 801628c:	b292      	uxth	r2, r2
 801628e:	3101      	adds	r1, #1
 8016290:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8016294:	8701      	strh	r1, [r0, #56]	@ 0x38
 8016296:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8016298:	b901      	cbnz	r1, 801629c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801629a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801629c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801629e:	3901      	subs	r1, #1
 80162a0:	b289      	uxth	r1, r1
 80162a2:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80162a4:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80162a8:	844c      	strh	r4, [r1, #34]	@ 0x22
 80162aa:	e7ec      	b.n	8016286 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80162ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80162b0:	f7ff bf4b 	b.w	801614a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080162b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80162b4:	b570      	push	{r4, r5, r6, lr}
 80162b6:	2500      	movs	r5, #0
 80162b8:	4295      	cmp	r5, r2
 80162ba:	d011      	beq.n	80162e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80162bc:	8bc4      	ldrh	r4, [r0, #30]
 80162be:	f831 6b02 	ldrh.w	r6, [r1], #2
 80162c2:	4414      	add	r4, r2
 80162c4:	3c01      	subs	r4, #1
 80162c6:	1b64      	subs	r4, r4, r5
 80162c8:	b2a4      	uxth	r4, r4
 80162ca:	2c01      	cmp	r4, #1
 80162cc:	bf88      	it	hi
 80162ce:	3c02      	subhi	r4, #2
 80162d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80162d4:	8b64      	ldrh	r4, [r4, #26]
 80162d6:	42b4      	cmp	r4, r6
 80162d8:	d117      	bne.n	801630a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80162da:	3501      	adds	r5, #1
 80162dc:	b2ad      	uxth	r5, r5
 80162de:	e7eb      	b.n	80162b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80162e0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80162e4:	2400      	movs	r4, #0
 80162e6:	4413      	add	r3, r2
 80162e8:	b2a2      	uxth	r2, r4
 80162ea:	429a      	cmp	r2, r3
 80162ec:	da0f      	bge.n	801630e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80162ee:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80162f0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80162f4:	4432      	add	r2, r6
 80162f6:	b292      	uxth	r2, r2
 80162f8:	2a09      	cmp	r2, #9
 80162fa:	bf88      	it	hi
 80162fc:	3a0a      	subhi	r2, #10
 80162fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016302:	3401      	adds	r4, #1
 8016304:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8016306:	42aa      	cmp	r2, r5
 8016308:	d0ee      	beq.n	80162e8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 801630a:	2000      	movs	r0, #0
 801630c:	bd70      	pop	{r4, r5, r6, pc}
 801630e:	2001      	movs	r0, #1
 8016310:	e7fc      	b.n	801630c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08016312 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8016312:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016316:	4605      	mov	r5, r0
 8016318:	4616      	mov	r6, r2
 801631a:	1c8c      	adds	r4, r1, #2
 801631c:	8809      	ldrh	r1, [r1, #0]
 801631e:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8016322:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8016326:	42b3      	cmp	r3, r6
 8016328:	d124      	bne.n	8016374 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801632a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801632e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8016332:	f001 070f 	and.w	r7, r1, #15
 8016336:	f8cd 8000 	str.w	r8, [sp]
 801633a:	464b      	mov	r3, r9
 801633c:	4652      	mov	r2, sl
 801633e:	4621      	mov	r1, r4
 8016340:	4628      	mov	r0, r5
 8016342:	f7ff ffb7 	bl	80162b4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016346:	4683      	mov	fp, r0
 8016348:	b168      	cbz	r0, 8016366 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801634a:	eb0a 0109 	add.w	r1, sl, r9
 801634e:	4441      	add	r1, r8
 8016350:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016354:	463a      	mov	r2, r7
 8016356:	4649      	mov	r1, r9
 8016358:	4628      	mov	r0, r5
 801635a:	f7ff ff53 	bl	8016204 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801635e:	4658      	mov	r0, fp
 8016360:	b003      	add	sp, #12
 8016362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016366:	eb07 010a 	add.w	r1, r7, sl
 801636a:	4449      	add	r1, r9
 801636c:	4441      	add	r1, r8
 801636e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016372:	e7d2      	b.n	801631a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016374:	f04f 0b00 	mov.w	fp, #0
 8016378:	e7f1      	b.n	801635e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801637a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801637a:	b570      	push	{r4, r5, r6, lr}
 801637c:	8810      	ldrh	r0, [r2, #0]
 801637e:	4298      	cmp	r0, r3
 8016380:	d817      	bhi.n	80163b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016382:	1e48      	subs	r0, r1, #1
 8016384:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8016388:	4298      	cmp	r0, r3
 801638a:	d312      	bcc.n	80163b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801638c:	2400      	movs	r4, #0
 801638e:	428c      	cmp	r4, r1
 8016390:	d20f      	bcs.n	80163b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016392:	1860      	adds	r0, r4, r1
 8016394:	1040      	asrs	r0, r0, #1
 8016396:	0085      	lsls	r5, r0, #2
 8016398:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801639c:	42b3      	cmp	r3, r6
 801639e:	d902      	bls.n	80163a6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80163a0:	3001      	adds	r0, #1
 80163a2:	b284      	uxth	r4, r0
 80163a4:	e7f3      	b.n	801638e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80163a6:	d201      	bcs.n	80163ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80163a8:	b281      	uxth	r1, r0
 80163aa:	e7f0      	b.n	801638e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80163ac:	442a      	add	r2, r5
 80163ae:	8850      	ldrh	r0, [r2, #2]
 80163b0:	bd70      	pop	{r4, r5, r6, pc}
 80163b2:	2000      	movs	r0, #0
 80163b4:	e7fc      	b.n	80163b0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080163b6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80163b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80163ba:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80163bc:	886f      	ldrh	r7, [r5, #2]
 80163be:	4604      	mov	r4, r0
 80163c0:	087f      	lsrs	r7, r7, #1
 80163c2:	260b      	movs	r6, #11
 80163c4:	3e01      	subs	r6, #1
 80163c6:	d013      	beq.n	80163f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80163c8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80163ca:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80163ce:	462a      	mov	r2, r5
 80163d0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80163d4:	4639      	mov	r1, r7
 80163d6:	4643      	mov	r3, r8
 80163d8:	4620      	mov	r0, r4
 80163da:	f7ff ffce 	bl	801637a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80163de:	b138      	cbz	r0, 80163f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80163e0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80163e4:	4642      	mov	r2, r8
 80163e6:	4620      	mov	r0, r4
 80163e8:	f7ff ff93 	bl	8016312 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80163ec:	2800      	cmp	r0, #0
 80163ee:	d1e9      	bne.n	80163c4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80163f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080163f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80163f4:	b570      	push	{r4, r5, r6, lr}
 80163f6:	694a      	ldr	r2, [r1, #20]
 80163f8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80163fa:	684b      	ldr	r3, [r1, #4]
 80163fc:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80163fe:	1b54      	subs	r4, r2, r5
 8016400:	f000 8106 	beq.w	8016610 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8016404:	1b9b      	subs	r3, r3, r6
 8016406:	d003      	beq.n	8016410 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016408:	4363      	muls	r3, r4
 801640a:	2210      	movs	r2, #16
 801640c:	fb93 f3f2 	sdiv	r3, r3, r2
 8016410:	680c      	ldr	r4, [r1, #0]
 8016412:	698a      	ldr	r2, [r1, #24]
 8016414:	1b65      	subs	r5, r4, r5
 8016416:	f000 80fd 	beq.w	8016614 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 801641a:	1b92      	subs	r2, r2, r6
 801641c:	d003      	beq.n	8016426 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801641e:	436a      	muls	r2, r5
 8016420:	2410      	movs	r4, #16
 8016422:	fb92 f2f4 	sdiv	r2, r2, r4
 8016426:	1a9b      	subs	r3, r3, r2
 8016428:	ee07 3a90 	vmov	s15, r3
 801642c:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8016650 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8016430:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016434:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016438:	ee67 7a84 	vmul.f32	s15, s15, s8
 801643c:	460a      	mov	r2, r1
 801643e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016442:	4603      	mov	r3, r0
 8016444:	f100 040c 	add.w	r4, r0, #12
 8016448:	eeb1 6a43 	vneg.f32	s12, s6
 801644c:	edd2 7a02 	vldr	s15, [r2, #8]
 8016450:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8016454:	3214      	adds	r2, #20
 8016456:	ece3 6a01 	vstmia	r3!, {s13}
 801645a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801645e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016462:	429c      	cmp	r4, r3
 8016464:	edc3 7a02 	vstr	s15, [r3, #8]
 8016468:	ed52 7a01 	vldr	s15, [r2, #-4]
 801646c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016470:	edc3 7a05 	vstr	s15, [r3, #20]
 8016474:	d1ea      	bne.n	801644c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8016476:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016478:	698b      	ldr	r3, [r1, #24]
 801647a:	edd0 4a02 	vldr	s9, [r0, #8]
 801647e:	edd0 3a00 	vldr	s7, [r0]
 8016482:	edd0 6a01 	vldr	s13, [r0, #4]
 8016486:	ed90 5a05 	vldr	s10, [r0, #20]
 801648a:	ed90 2a03 	vldr	s4, [r0, #12]
 801648e:	edd0 5a04 	vldr	s11, [r0, #16]
 8016492:	ed90 1a07 	vldr	s2, [r0, #28]
 8016496:	edd0 2a06 	vldr	s5, [r0, #24]
 801649a:	1a9b      	subs	r3, r3, r2
 801649c:	ee07 3a90 	vmov	s15, r3
 80164a0:	684b      	ldr	r3, [r1, #4]
 80164a2:	1a9b      	subs	r3, r3, r2
 80164a4:	ee07 3a10 	vmov	s14, r3
 80164a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80164ac:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80164b0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80164b4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80164b8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80164bc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80164c0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80164c4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80164c8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80164cc:	ee32 5a45 	vsub.f32	s10, s4, s10
 80164d0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80164d4:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80164d8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80164da:	694a      	ldr	r2, [r1, #20]
 80164dc:	1b13      	subs	r3, r2, r4
 80164de:	ee07 3a10 	vmov	s14, r3
 80164e2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80164e6:	680b      	ldr	r3, [r1, #0]
 80164e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80164ec:	1b1b      	subs	r3, r3, r4
 80164ee:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80164f2:	ee07 3a10 	vmov	s14, r3
 80164f6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80164fa:	ee27 7a04 	vmul.f32	s14, s14, s8
 80164fe:	eee6 4a87 	vfma.f32	s9, s13, s14
 8016502:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016506:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 801650a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801650c:	698b      	ldr	r3, [r1, #24]
 801650e:	1a9b      	subs	r3, r3, r2
 8016510:	ee06 3a90 	vmov	s13, r3
 8016514:	684b      	ldr	r3, [r1, #4]
 8016516:	1a9b      	subs	r3, r3, r2
 8016518:	ee07 3a10 	vmov	s14, r3
 801651c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016520:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016524:	ee66 6a84 	vmul.f32	s13, s13, s8
 8016528:	ee27 7a04 	vmul.f32	s14, s14, s8
 801652c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8016530:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016534:	ee66 6a83 	vmul.f32	s13, s13, s6
 8016538:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801653c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801653e:	694a      	ldr	r2, [r1, #20]
 8016540:	1b13      	subs	r3, r2, r4
 8016542:	ee07 3a10 	vmov	s14, r3
 8016546:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801654a:	680b      	ldr	r3, [r1, #0]
 801654c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016550:	1b1b      	subs	r3, r3, r4
 8016552:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8016556:	ee07 3a10 	vmov	s14, r3
 801655a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801655e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016562:	eea5 5a87 	vfma.f32	s10, s11, s14
 8016566:	edd0 5a08 	vldr	s11, [r0, #32]
 801656a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801656e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8016572:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8016576:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016578:	698b      	ldr	r3, [r1, #24]
 801657a:	1a9b      	subs	r3, r3, r2
 801657c:	ee07 3a10 	vmov	s14, r3
 8016580:	684b      	ldr	r3, [r1, #4]
 8016582:	1a9b      	subs	r3, r3, r2
 8016584:	ee01 3a90 	vmov	s3, r3
 8016588:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801658c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8016590:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016594:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8016598:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801659c:	ee61 1a84 	vmul.f32	s3, s3, s8
 80165a0:	eea1 7a21 	vfma.f32	s14, s2, s3
 80165a4:	ee27 7a03 	vmul.f32	s14, s14, s6
 80165a8:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 80165ac:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80165ae:	694a      	ldr	r2, [r1, #20]
 80165b0:	1b13      	subs	r3, r2, r4
 80165b2:	ee03 3a10 	vmov	s6, r3
 80165b6:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80165ba:	680b      	ldr	r3, [r1, #0]
 80165bc:	ee23 3a04 	vmul.f32	s6, s6, s8
 80165c0:	1b1b      	subs	r3, r3, r4
 80165c2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80165c6:	ee03 3a10 	vmov	s6, r3
 80165ca:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80165ce:	ee23 4a04 	vmul.f32	s8, s6, s8
 80165d2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80165d6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80165da:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80165de:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80165e2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80165e6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80165ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80165ee:	dd13      	ble.n	8016618 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80165f0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80165f4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80165f8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80165fa:	eee3 7a87 	vfma.f32	s15, s7, s14
 80165fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016606:	dd15      	ble.n	8016634 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8016608:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 801660c:	6403      	str	r3, [r0, #64]	@ 0x40
 801660e:	bd70      	pop	{r4, r5, r6, pc}
 8016610:	4623      	mov	r3, r4
 8016612:	e6fd      	b.n	8016410 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016614:	462a      	mov	r2, r5
 8016616:	e706      	b.n	8016426 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016618:	d502      	bpl.n	8016620 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 801661a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801661e:	e7e9      	b.n	80165f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8016620:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8016624:	eea3 2a85 	vfma.f32	s4, s7, s10
 8016628:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801662c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016630:	dade      	bge.n	80165f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8016632:	e7f2      	b.n	801661a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8016634:	d502      	bpl.n	801663c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8016636:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801663a:	e7e7      	b.n	801660c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801663c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016640:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016644:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801664c:	dadc      	bge.n	8016608 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801664e:	e7f2      	b.n	8016636 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8016650:	3d800000 	.word	0x3d800000

08016654 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8016654:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016658:	2714      	movs	r7, #20
 801665a:	435f      	muls	r7, r3
 801665c:	eb02 0c07 	add.w	ip, r2, r7
 8016660:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8016664:	f115 0e0f 	adds.w	lr, r5, #15
 8016668:	f100 80a2 	bmi.w	80167b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801666c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8016670:	9c08      	ldr	r4, [sp, #32]
 8016672:	f8c0 e014 	str.w	lr, [r0, #20]
 8016676:	2614      	movs	r6, #20
 8016678:	4366      	muls	r6, r4
 801667a:	eb02 0806 	add.w	r8, r2, r6
 801667e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8016682:	f115 040f 	adds.w	r4, r5, #15
 8016686:	f100 809f 	bmi.w	80167c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801668a:	1124      	asrs	r4, r4, #4
 801668c:	eba4 040e 	sub.w	r4, r4, lr
 8016690:	6184      	str	r4, [r0, #24]
 8016692:	2c00      	cmp	r4, #0
 8016694:	f000 808a 	beq.w	80167ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8016698:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801669c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80166a0:	5995      	ldr	r5, [r2, r6]
 80166a2:	eba4 0809 	sub.w	r8, r4, r9
 80166a6:	59d4      	ldr	r4, [r2, r7]
 80166a8:	eba5 0a04 	sub.w	sl, r5, r4
 80166ac:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80166b0:	fb0e fe05 	mul.w	lr, lr, r5
 80166b4:	fb0a ee19 	mls	lr, sl, r9, lr
 80166b8:	fb08 e404 	mla	r4, r8, r4, lr
 80166bc:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80166c0:	3c01      	subs	r4, #1
 80166c2:	19a4      	adds	r4, r4, r6
 80166c4:	f100 808c 	bmi.w	80167e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80166c8:	fb94 fef6 	sdiv	lr, r4, r6
 80166cc:	f8c0 e000 	str.w	lr, [r0]
 80166d0:	fb06 441e 	mls	r4, r6, lr, r4
 80166d4:	6104      	str	r4, [r0, #16]
 80166d6:	2d00      	cmp	r5, #0
 80166d8:	f2c0 8095 	blt.w	8016806 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80166dc:	fb95 f4f6 	sdiv	r4, r5, r6
 80166e0:	6044      	str	r4, [r0, #4]
 80166e2:	fb06 5514 	mls	r5, r6, r4, r5
 80166e6:	6085      	str	r5, [r0, #8]
 80166e8:	60c6      	str	r6, [r0, #12]
 80166ea:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80166ee:	6945      	ldr	r5, [r0, #20]
 80166f0:	59d2      	ldr	r2, [r2, r7]
 80166f2:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8016828 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80166f6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80166fa:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80166fe:	ee07 4a10 	vmov	s14, r4
 8016702:	6804      	ldr	r4, [r0, #0]
 8016704:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8016708:	ee07 2a90 	vmov	s15, r2
 801670c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016710:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016714:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016718:	ee27 7a26 	vmul.f32	s14, s14, s13
 801671c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016720:	edd3 6a00 	vldr	s13, [r3]
 8016724:	eee6 6a07 	vfma.f32	s13, s12, s14
 8016728:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801672c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8016730:	edc0 6a07 	vstr	s13, [r0, #28]
 8016734:	edd0 6a01 	vldr	s13, [r0, #4]
 8016738:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801673c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8016740:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016744:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016748:	ed80 6a08 	vstr	s12, [r0, #32]
 801674c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801674e:	6242      	str	r2, [r0, #36]	@ 0x24
 8016750:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8016754:	ed93 6a03 	vldr	s12, [r3, #12]
 8016758:	eea5 6a87 	vfma.f32	s12, s11, s14
 801675c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8016760:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8016764:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8016768:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801676c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8016770:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016774:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8016778:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801677a:	6302      	str	r2, [r0, #48]	@ 0x30
 801677c:	ed93 6a06 	vldr	s12, [r3, #24]
 8016780:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8016784:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016788:	eeb0 7a46 	vmov.f32	s14, s12
 801678c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8016790:	eea6 7a27 	vfma.f32	s14, s12, s15
 8016794:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8016798:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801679c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 80167a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80167a4:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 80167a8:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 80167aa:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80167ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80167b0:	f1c5 0501 	rsb	r5, r5, #1
 80167b4:	f015 050f 	ands.w	r5, r5, #15
 80167b8:	bf18      	it	ne
 80167ba:	2501      	movne	r5, #1
 80167bc:	2410      	movs	r4, #16
 80167be:	fb9e fef4 	sdiv	lr, lr, r4
 80167c2:	ebae 0e05 	sub.w	lr, lr, r5
 80167c6:	e753      	b.n	8016670 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80167c8:	f1c5 0501 	rsb	r5, r5, #1
 80167cc:	f015 050f 	ands.w	r5, r5, #15
 80167d0:	bf18      	it	ne
 80167d2:	2501      	movne	r5, #1
 80167d4:	f04f 0910 	mov.w	r9, #16
 80167d8:	fb94 f4f9 	sdiv	r4, r4, r9
 80167dc:	1b64      	subs	r4, r4, r5
 80167de:	e755      	b.n	801668c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80167e0:	4264      	negs	r4, r4
 80167e2:	fb94 fef6 	sdiv	lr, r4, r6
 80167e6:	f1ce 0800 	rsb	r8, lr, #0
 80167ea:	fb06 441e 	mls	r4, r6, lr, r4
 80167ee:	f8c0 8000 	str.w	r8, [r0]
 80167f2:	6104      	str	r4, [r0, #16]
 80167f4:	2c00      	cmp	r4, #0
 80167f6:	f43f af6e 	beq.w	80166d6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80167fa:	ea6f 0e0e 	mvn.w	lr, lr
 80167fe:	f8c0 e000 	str.w	lr, [r0]
 8016802:	1b34      	subs	r4, r6, r4
 8016804:	e766      	b.n	80166d4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8016806:	426d      	negs	r5, r5
 8016808:	fb95 f4f6 	sdiv	r4, r5, r6
 801680c:	f1c4 0e00 	rsb	lr, r4, #0
 8016810:	fb06 5514 	mls	r5, r6, r4, r5
 8016814:	f8c0 e004 	str.w	lr, [r0, #4]
 8016818:	6085      	str	r5, [r0, #8]
 801681a:	2d00      	cmp	r5, #0
 801681c:	f43f af64 	beq.w	80166e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8016820:	43e4      	mvns	r4, r4
 8016822:	6044      	str	r4, [r0, #4]
 8016824:	1b75      	subs	r5, r6, r5
 8016826:	e75e      	b.n	80166e6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8016828:	3d800000 	.word	0x3d800000

0801682c <_ZN8touchgfx7Unicode6strlenEPKt>:
 801682c:	4602      	mov	r2, r0
 801682e:	b148      	cbz	r0, 8016844 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8016830:	2300      	movs	r3, #0
 8016832:	b298      	uxth	r0, r3
 8016834:	3301      	adds	r3, #1
 8016836:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 801683a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 801683e:	2900      	cmp	r1, #0
 8016840:	d1f7      	bne.n	8016832 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8016842:	4770      	bx	lr
 8016844:	4770      	bx	lr

08016846 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8016846:	b530      	push	{r4, r5, lr}
 8016848:	4604      	mov	r4, r0
 801684a:	b159      	cbz	r1, 8016864 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 801684c:	b148      	cbz	r0, 8016862 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801684e:	2300      	movs	r3, #0
 8016850:	b298      	uxth	r0, r3
 8016852:	4282      	cmp	r2, r0
 8016854:	d905      	bls.n	8016862 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8016856:	5ccd      	ldrb	r5, [r1, r3]
 8016858:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 801685c:	3301      	adds	r3, #1
 801685e:	2d00      	cmp	r5, #0
 8016860:	d1f6      	bne.n	8016850 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8016862:	bd30      	pop	{r4, r5, pc}
 8016864:	4608      	mov	r0, r1
 8016866:	e7fc      	b.n	8016862 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08016868 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8016868:	b5f0      	push	{r4, r5, r6, r7, lr}
 801686a:	b08b      	sub	sp, #44	@ 0x2c
 801686c:	468c      	mov	ip, r1
 801686e:	2100      	movs	r1, #0
 8016870:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8016874:	4604      	mov	r4, r0
 8016876:	261f      	movs	r6, #31
 8016878:	af01      	add	r7, sp, #4
 801687a:	fb94 fef3 	sdiv	lr, r4, r3
 801687e:	fb03 441e 	mls	r4, r3, lr, r4
 8016882:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8016886:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801688a:	b2ec      	uxtb	r4, r5
 801688c:	2d09      	cmp	r5, #9
 801688e:	bfd4      	ite	le
 8016890:	3430      	addle	r4, #48	@ 0x30
 8016892:	3457      	addgt	r4, #87	@ 0x57
 8016894:	b2e4      	uxtb	r4, r4
 8016896:	55bc      	strb	r4, [r7, r6]
 8016898:	4674      	mov	r4, lr
 801689a:	1e71      	subs	r1, r6, #1
 801689c:	b974      	cbnz	r4, 80168bc <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 801689e:	2800      	cmp	r0, #0
 80168a0:	da05      	bge.n	80168ae <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 80168a2:	ab0a      	add	r3, sp, #40	@ 0x28
 80168a4:	4419      	add	r1, r3
 80168a6:	232d      	movs	r3, #45	@ 0x2d
 80168a8:	f801 3c24 	strb.w	r3, [r1, #-36]
 80168ac:	1eb1      	subs	r1, r6, #2
 80168ae:	3101      	adds	r1, #1
 80168b0:	4439      	add	r1, r7
 80168b2:	4660      	mov	r0, ip
 80168b4:	f7ff ffc7 	bl	8016846 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80168b8:	b00b      	add	sp, #44	@ 0x2c
 80168ba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80168bc:	460e      	mov	r6, r1
 80168be:	e7dc      	b.n	801687a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

080168c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 80168c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80168c2:	b08b      	sub	sp, #44	@ 0x2c
 80168c4:	468c      	mov	ip, r1
 80168c6:	2100      	movs	r1, #0
 80168c8:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 80168cc:	ae01      	add	r6, sp, #4
 80168ce:	211f      	movs	r1, #31
 80168d0:	fbb0 f7f3 	udiv	r7, r0, r3
 80168d4:	fb03 0517 	mls	r5, r3, r7, r0
 80168d8:	b2ec      	uxtb	r4, r5
 80168da:	2d09      	cmp	r5, #9
 80168dc:	bfd4      	ite	le
 80168de:	3430      	addle	r4, #48	@ 0x30
 80168e0:	3457      	addgt	r4, #87	@ 0x57
 80168e2:	b2e4      	uxtb	r4, r4
 80168e4:	558c      	strb	r4, [r1, r6]
 80168e6:	4638      	mov	r0, r7
 80168e8:	1e4c      	subs	r4, r1, #1
 80168ea:	b92f      	cbnz	r7, 80168f8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80168ec:	4431      	add	r1, r6
 80168ee:	4660      	mov	r0, ip
 80168f0:	f7ff ffa9 	bl	8016846 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80168f4:	b00b      	add	sp, #44	@ 0x2c
 80168f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80168f8:	4621      	mov	r1, r4
 80168fa:	e7e9      	b.n	80168d0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080168fc <_ZN8touchgfx7Unicode4itoaElPtti>:
 80168fc:	b410      	push	{r4}
 80168fe:	b131      	cbz	r1, 801690e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8016900:	1e9c      	subs	r4, r3, #2
 8016902:	2c22      	cmp	r4, #34	@ 0x22
 8016904:	d803      	bhi.n	801690e <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8016906:	f85d 4b04 	ldr.w	r4, [sp], #4
 801690a:	f7ff bfad 	b.w	8016868 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 801690e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016912:	4770      	bx	lr

08016914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8016914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016918:	4691      	mov	r9, r2
 801691a:	b085      	sub	sp, #20
 801691c:	6802      	ldr	r2, [r0, #0]
 801691e:	9201      	str	r2, [sp, #4]
 8016920:	4688      	mov	r8, r1
 8016922:	4683      	mov	fp, r0
 8016924:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8016928:	9103      	str	r1, [sp, #12]
 801692a:	4610      	mov	r0, r2
 801692c:	461c      	mov	r4, r3
 801692e:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8016932:	9302      	str	r3, [sp, #8]
 8016934:	f7ff ff7a 	bl	801682c <_ZN8touchgfx7Unicode6strlenEPKt>
 8016938:	f1b8 0f00 	cmp.w	r8, #0
 801693c:	bf0c      	ite	eq
 801693e:	4684      	moveq	ip, r0
 8016940:	f100 0c01 	addne.w	ip, r0, #1
 8016944:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8016948:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 801694c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801694e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016950:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8016954:	9903      	ldr	r1, [sp, #12]
 8016956:	fa1f fc8c 	uxth.w	ip, ip
 801695a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801695e:	d041      	beq.n	80169e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016960:	d834      	bhi.n	80169cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8016962:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8016966:	d059      	beq.n	8016a1c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8016968:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 801696c:	d03a      	beq.n	80169e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801696e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8016972:	d034      	beq.n	80169de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016974:	2400      	movs	r4, #0
 8016976:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801697a:	3a01      	subs	r2, #1
 801697c:	b169      	cbz	r1, 801699a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801697e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016980:	458c      	cmp	ip, r1
 8016982:	da09      	bge.n	8016998 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016984:	eba1 010c 	sub.w	r1, r1, ip
 8016988:	b289      	uxth	r1, r1
 801698a:	b933      	cbnz	r3, 801699a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801698c:	2e00      	cmp	r6, #0
 801698e:	d051      	beq.n	8016a34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016990:	2800      	cmp	r0, #0
 8016992:	d04f      	beq.n	8016a34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016994:	440c      	add	r4, r1
 8016996:	b2a4      	uxth	r4, r4
 8016998:	2100      	movs	r1, #0
 801699a:	682b      	ldr	r3, [r5, #0]
 801699c:	4293      	cmp	r3, r2
 801699e:	da07      	bge.n	80169b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80169a0:	f1b8 0f00 	cmp.w	r8, #0
 80169a4:	d004      	beq.n	80169b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80169a6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80169aa:	682b      	ldr	r3, [r5, #0]
 80169ac:	3301      	adds	r3, #1
 80169ae:	602b      	str	r3, [r5, #0]
 80169b0:	2730      	movs	r7, #48	@ 0x30
 80169b2:	2c00      	cmp	r4, #0
 80169b4:	d04e      	beq.n	8016a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80169b6:	682e      	ldr	r6, [r5, #0]
 80169b8:	3c01      	subs	r4, #1
 80169ba:	42b2      	cmp	r2, r6
 80169bc:	b2a4      	uxth	r4, r4
 80169be:	dd49      	ble.n	8016a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80169c0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80169c4:	682b      	ldr	r3, [r5, #0]
 80169c6:	3301      	adds	r3, #1
 80169c8:	602b      	str	r3, [r5, #0]
 80169ca:	e7f2      	b.n	80169b2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80169cc:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 80169d0:	d01d      	beq.n	8016a0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80169d2:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 80169d6:	d002      	beq.n	80169de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80169d8:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 80169dc:	e7c9      	b.n	8016972 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80169de:	4684      	mov	ip, r0
 80169e0:	f04f 0800 	mov.w	r8, #0
 80169e4:	2c00      	cmp	r4, #0
 80169e6:	d0c6      	beq.n	8016976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80169e8:	b947      	cbnz	r7, 80169fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80169ea:	2801      	cmp	r0, #1
 80169ec:	d106      	bne.n	80169fc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80169ee:	8814      	ldrh	r4, [r2, #0]
 80169f0:	2c30      	cmp	r4, #48	@ 0x30
 80169f2:	bf02      	ittt	eq
 80169f4:	3202      	addeq	r2, #2
 80169f6:	f8cb 2000 	streq.w	r2, [fp]
 80169fa:	4638      	moveq	r0, r7
 80169fc:	45bc      	cmp	ip, r7
 80169fe:	da14      	bge.n	8016a2a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8016a00:	b2bf      	uxth	r7, r7
 8016a02:	eba7 040c 	sub.w	r4, r7, ip
 8016a06:	b2a4      	uxth	r4, r4
 8016a08:	46bc      	mov	ip, r7
 8016a0a:	2600      	movs	r6, #0
 8016a0c:	e7b3      	b.n	8016976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016a0e:	4684      	mov	ip, r0
 8016a10:	b16c      	cbz	r4, 8016a2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8016a12:	42b8      	cmp	r0, r7
 8016a14:	dd00      	ble.n	8016a18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8016a16:	b2b8      	uxth	r0, r7
 8016a18:	2400      	movs	r4, #0
 8016a1a:	e003      	b.n	8016a24 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8016a1c:	f04f 0c01 	mov.w	ip, #1
 8016a20:	2400      	movs	r4, #0
 8016a22:	4660      	mov	r0, ip
 8016a24:	4626      	mov	r6, r4
 8016a26:	46a0      	mov	r8, r4
 8016a28:	e7a5      	b.n	8016976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016a2a:	2400      	movs	r4, #0
 8016a2c:	e7ed      	b.n	8016a0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8016a2e:	4626      	mov	r6, r4
 8016a30:	46a0      	mov	r8, r4
 8016a32:	e7a0      	b.n	8016976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016a34:	2900      	cmp	r1, #0
 8016a36:	d0b0      	beq.n	801699a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016a38:	2720      	movs	r7, #32
 8016a3a:	682e      	ldr	r6, [r5, #0]
 8016a3c:	2900      	cmp	r1, #0
 8016a3e:	d0ac      	beq.n	801699a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016a40:	3901      	subs	r1, #1
 8016a42:	4296      	cmp	r6, r2
 8016a44:	b289      	uxth	r1, r1
 8016a46:	daa7      	bge.n	8016998 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016a48:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016a4c:	682b      	ldr	r3, [r5, #0]
 8016a4e:	3301      	adds	r3, #1
 8016a50:	602b      	str	r3, [r5, #0]
 8016a52:	e7f2      	b.n	8016a3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8016a54:	b188      	cbz	r0, 8016a7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016a56:	682b      	ldr	r3, [r5, #0]
 8016a58:	3801      	subs	r0, #1
 8016a5a:	429a      	cmp	r2, r3
 8016a5c:	b280      	uxth	r0, r0
 8016a5e:	dd0c      	ble.n	8016a7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016a60:	f8db 3000 	ldr.w	r3, [fp]
 8016a64:	1c9c      	adds	r4, r3, #2
 8016a66:	f8cb 4000 	str.w	r4, [fp]
 8016a6a:	881c      	ldrh	r4, [r3, #0]
 8016a6c:	682b      	ldr	r3, [r5, #0]
 8016a6e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8016a72:	682b      	ldr	r3, [r5, #0]
 8016a74:	3301      	adds	r3, #1
 8016a76:	602b      	str	r3, [r5, #0]
 8016a78:	e7ec      	b.n	8016a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016a7a:	2620      	movs	r6, #32
 8016a7c:	b151      	cbz	r1, 8016a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016a7e:	6828      	ldr	r0, [r5, #0]
 8016a80:	3901      	subs	r1, #1
 8016a82:	4282      	cmp	r2, r0
 8016a84:	b289      	uxth	r1, r1
 8016a86:	dd05      	ble.n	8016a94 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016a88:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8016a8c:	682b      	ldr	r3, [r5, #0]
 8016a8e:	3301      	adds	r3, #1
 8016a90:	602b      	str	r3, [r5, #0]
 8016a92:	e7f3      	b.n	8016a7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8016a94:	b005      	add	sp, #20
 8016a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8016a9a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016a9e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8016aa2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8016aa6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8016aaa:	2400      	movs	r4, #0
 8016aac:	8014      	strh	r4, [r2, #0]
 8016aae:	701c      	strb	r4, [r3, #0]
 8016ab0:	f888 4000 	strb.w	r4, [r8]
 8016ab4:	f88c 4000 	strb.w	r4, [ip]
 8016ab8:	f88e 4000 	strb.w	r4, [lr]
 8016abc:	703c      	strb	r4, [r7, #0]
 8016abe:	6804      	ldr	r4, [r0, #0]
 8016ac0:	b1a4      	cbz	r4, 8016aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8016ac2:	8824      	ldrh	r4, [r4, #0]
 8016ac4:	f04f 0901 	mov.w	r9, #1
 8016ac8:	b314      	cbz	r4, 8016b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016aca:	2c2b      	cmp	r4, #43	@ 0x2b
 8016acc:	d001      	beq.n	8016ad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8016ace:	2c20      	cmp	r4, #32
 8016ad0:	d110      	bne.n	8016af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8016ad2:	8014      	strh	r4, [r2, #0]
 8016ad4:	6804      	ldr	r4, [r0, #0]
 8016ad6:	b10c      	cbz	r4, 8016adc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8016ad8:	3402      	adds	r4, #2
 8016ada:	6004      	str	r4, [r0, #0]
 8016adc:	680c      	ldr	r4, [r1, #0]
 8016ade:	b10c      	cbz	r4, 8016ae4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8016ae0:	3401      	adds	r4, #1
 8016ae2:	600c      	str	r4, [r1, #0]
 8016ae4:	6804      	ldr	r4, [r0, #0]
 8016ae6:	b17c      	cbz	r4, 8016b08 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8016ae8:	8824      	ldrh	r4, [r4, #0]
 8016aea:	e7ed      	b.n	8016ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016aec:	680c      	ldr	r4, [r1, #0]
 8016aee:	b17c      	cbz	r4, 8016b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016af0:	7824      	ldrb	r4, [r4, #0]
 8016af2:	e7e7      	b.n	8016ac4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8016af4:	2c2d      	cmp	r4, #45	@ 0x2d
 8016af6:	d102      	bne.n	8016afe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8016af8:	f883 9000 	strb.w	r9, [r3]
 8016afc:	e7ea      	b.n	8016ad4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016afe:	2c23      	cmp	r4, #35	@ 0x23
 8016b00:	d107      	bne.n	8016b12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8016b02:	f888 9000 	strb.w	r9, [r8]
 8016b06:	e7e5      	b.n	8016ad4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016b08:	680c      	ldr	r4, [r1, #0]
 8016b0a:	b10c      	cbz	r4, 8016b10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016b0c:	7824      	ldrb	r4, [r4, #0]
 8016b0e:	e7db      	b.n	8016ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016b10:	2400      	movs	r4, #0
 8016b12:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8016b16:	2b09      	cmp	r3, #9
 8016b18:	d901      	bls.n	8016b1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8016b1a:	2c2a      	cmp	r4, #42	@ 0x2a
 8016b1c:	d122      	bne.n	8016b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016b1e:	2301      	movs	r3, #1
 8016b20:	2c30      	cmp	r4, #48	@ 0x30
 8016b22:	f88e 3000 	strb.w	r3, [lr]
 8016b26:	d10d      	bne.n	8016b44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016b28:	f88c 3000 	strb.w	r3, [ip]
 8016b2c:	6803      	ldr	r3, [r0, #0]
 8016b2e:	b10b      	cbz	r3, 8016b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8016b30:	3302      	adds	r3, #2
 8016b32:	6003      	str	r3, [r0, #0]
 8016b34:	680b      	ldr	r3, [r1, #0]
 8016b36:	b10b      	cbz	r3, 8016b3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8016b38:	3301      	adds	r3, #1
 8016b3a:	600b      	str	r3, [r1, #0]
 8016b3c:	6803      	ldr	r3, [r0, #0]
 8016b3e:	2b00      	cmp	r3, #0
 8016b40:	d02f      	beq.n	8016ba2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8016b42:	881c      	ldrh	r4, [r3, #0]
 8016b44:	2c2a      	cmp	r4, #42	@ 0x2a
 8016b46:	d135      	bne.n	8016bb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016b48:	f04f 33ff 	mov.w	r3, #4294967295
 8016b4c:	6033      	str	r3, [r6, #0]
 8016b4e:	6803      	ldr	r3, [r0, #0]
 8016b50:	b10b      	cbz	r3, 8016b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8016b52:	3302      	adds	r3, #2
 8016b54:	6003      	str	r3, [r0, #0]
 8016b56:	680b      	ldr	r3, [r1, #0]
 8016b58:	b10b      	cbz	r3, 8016b5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8016b5a:	3301      	adds	r3, #1
 8016b5c:	600b      	str	r3, [r1, #0]
 8016b5e:	6803      	ldr	r3, [r0, #0]
 8016b60:	b31b      	cbz	r3, 8016baa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8016b62:	881c      	ldrh	r4, [r3, #0]
 8016b64:	2c2e      	cmp	r4, #46	@ 0x2e
 8016b66:	d11a      	bne.n	8016b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016b68:	2301      	movs	r3, #1
 8016b6a:	703b      	strb	r3, [r7, #0]
 8016b6c:	6803      	ldr	r3, [r0, #0]
 8016b6e:	b10b      	cbz	r3, 8016b74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8016b70:	3302      	adds	r3, #2
 8016b72:	6003      	str	r3, [r0, #0]
 8016b74:	680b      	ldr	r3, [r1, #0]
 8016b76:	b10b      	cbz	r3, 8016b7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8016b78:	3301      	adds	r3, #1
 8016b7a:	600b      	str	r3, [r1, #0]
 8016b7c:	6803      	ldr	r3, [r0, #0]
 8016b7e:	2b00      	cmp	r3, #0
 8016b80:	d036      	beq.n	8016bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8016b82:	881b      	ldrh	r3, [r3, #0]
 8016b84:	2b2a      	cmp	r3, #42	@ 0x2a
 8016b86:	d137      	bne.n	8016bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016b88:	f04f 33ff 	mov.w	r3, #4294967295
 8016b8c:	602b      	str	r3, [r5, #0]
 8016b8e:	6803      	ldr	r3, [r0, #0]
 8016b90:	b10b      	cbz	r3, 8016b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8016b92:	3302      	adds	r3, #2
 8016b94:	6003      	str	r3, [r0, #0]
 8016b96:	680b      	ldr	r3, [r1, #0]
 8016b98:	b10b      	cbz	r3, 8016b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016b9a:	3301      	adds	r3, #1
 8016b9c:	600b      	str	r3, [r1, #0]
 8016b9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016ba2:	680c      	ldr	r4, [r1, #0]
 8016ba4:	b134      	cbz	r4, 8016bb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016ba6:	7824      	ldrb	r4, [r4, #0]
 8016ba8:	e7cc      	b.n	8016b44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016baa:	680b      	ldr	r3, [r1, #0]
 8016bac:	2b00      	cmp	r3, #0
 8016bae:	d0f6      	beq.n	8016b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016bb0:	781c      	ldrb	r4, [r3, #0]
 8016bb2:	e7d7      	b.n	8016b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016bb4:	2300      	movs	r3, #0
 8016bb6:	6033      	str	r3, [r6, #0]
 8016bb8:	220a      	movs	r2, #10
 8016bba:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8016bbe:	fa1f f38c 	uxth.w	r3, ip
 8016bc2:	2b09      	cmp	r3, #9
 8016bc4:	d8ce      	bhi.n	8016b64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016bc6:	6833      	ldr	r3, [r6, #0]
 8016bc8:	fb02 c303 	mla	r3, r2, r3, ip
 8016bcc:	6033      	str	r3, [r6, #0]
 8016bce:	6803      	ldr	r3, [r0, #0]
 8016bd0:	b10b      	cbz	r3, 8016bd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8016bd2:	3302      	adds	r3, #2
 8016bd4:	6003      	str	r3, [r0, #0]
 8016bd6:	680b      	ldr	r3, [r1, #0]
 8016bd8:	b10b      	cbz	r3, 8016bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8016bda:	3301      	adds	r3, #1
 8016bdc:	600b      	str	r3, [r1, #0]
 8016bde:	6803      	ldr	r3, [r0, #0]
 8016be0:	b10b      	cbz	r3, 8016be6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8016be2:	881c      	ldrh	r4, [r3, #0]
 8016be4:	e7e9      	b.n	8016bba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016be6:	680c      	ldr	r4, [r1, #0]
 8016be8:	2c00      	cmp	r4, #0
 8016bea:	d0e6      	beq.n	8016bba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016bec:	7824      	ldrb	r4, [r4, #0]
 8016bee:	e7e4      	b.n	8016bba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016bf0:	680b      	ldr	r3, [r1, #0]
 8016bf2:	b10b      	cbz	r3, 8016bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016bf4:	781b      	ldrb	r3, [r3, #0]
 8016bf6:	e7c5      	b.n	8016b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8016bf8:	2200      	movs	r2, #0
 8016bfa:	602a      	str	r2, [r5, #0]
 8016bfc:	240a      	movs	r4, #10
 8016bfe:	3b30      	subs	r3, #48	@ 0x30
 8016c00:	b29e      	uxth	r6, r3
 8016c02:	2e09      	cmp	r6, #9
 8016c04:	682a      	ldr	r2, [r5, #0]
 8016c06:	d813      	bhi.n	8016c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8016c08:	fb04 3302 	mla	r3, r4, r2, r3
 8016c0c:	602b      	str	r3, [r5, #0]
 8016c0e:	6803      	ldr	r3, [r0, #0]
 8016c10:	b10b      	cbz	r3, 8016c16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8016c12:	3302      	adds	r3, #2
 8016c14:	6003      	str	r3, [r0, #0]
 8016c16:	680b      	ldr	r3, [r1, #0]
 8016c18:	b10b      	cbz	r3, 8016c1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8016c1a:	3301      	adds	r3, #1
 8016c1c:	600b      	str	r3, [r1, #0]
 8016c1e:	6803      	ldr	r3, [r0, #0]
 8016c20:	b10b      	cbz	r3, 8016c26 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8016c22:	881b      	ldrh	r3, [r3, #0]
 8016c24:	e7eb      	b.n	8016bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016c26:	680b      	ldr	r3, [r1, #0]
 8016c28:	2b00      	cmp	r3, #0
 8016c2a:	d0e8      	beq.n	8016bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016c2c:	781b      	ldrb	r3, [r3, #0]
 8016c2e:	e7e6      	b.n	8016bfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016c30:	2a06      	cmp	r2, #6
 8016c32:	bfa8      	it	ge
 8016c34:	2206      	movge	r2, #6
 8016c36:	602a      	str	r2, [r5, #0]
 8016c38:	e7b1      	b.n	8016b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08016c3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8016c3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c3e:	b0a3      	sub	sp, #140	@ 0x8c
 8016c40:	2600      	movs	r6, #0
 8016c42:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8016c46:	4607      	mov	r7, r0
 8016c48:	4688      	mov	r8, r1
 8016c4a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016c4e:	4631      	mov	r1, r6
 8016c50:	2242      	movs	r2, #66	@ 0x42
 8016c52:	4648      	mov	r0, r9
 8016c54:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8016c56:	960d      	str	r6, [sp, #52]	@ 0x34
 8016c58:	f00f f9a1 	bl	8025f9e <memset>
 8016c5c:	b15f      	cbz	r7, 8016c76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8016c5e:	f108 3aff 	add.w	sl, r8, #4294967295
 8016c62:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016c64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016c66:	b152      	cbz	r2, 8016c7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8016c68:	8812      	ldrh	r2, [r2, #0]
 8016c6a:	b10a      	cbz	r2, 8016c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016c6c:	459a      	cmp	sl, r3
 8016c6e:	dc2e      	bgt.n	8016cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8016c70:	2200      	movs	r2, #0
 8016c72:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016c76:	4638      	mov	r0, r7
 8016c78:	b023      	add	sp, #140	@ 0x8c
 8016c7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016c7e:	9a08      	ldr	r2, [sp, #32]
 8016c80:	2a00      	cmp	r2, #0
 8016c82:	d0f5      	beq.n	8016c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016c84:	7812      	ldrb	r2, [r2, #0]
 8016c86:	e7f0      	b.n	8016c6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8016c88:	2d00      	cmp	r5, #0
 8016c8a:	d0ea      	beq.n	8016c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016c8c:	782a      	ldrb	r2, [r5, #0]
 8016c8e:	b142      	cbz	r2, 8016ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8016c90:	2a25      	cmp	r2, #37	@ 0x25
 8016c92:	d001      	beq.n	8016c98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8016c94:	459a      	cmp	sl, r3
 8016c96:	dc08      	bgt.n	8016caa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8016c98:	f1bb 0f00 	cmp.w	fp, #0
 8016c9c:	d121      	bne.n	8016ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8016c9e:	2d00      	cmp	r5, #0
 8016ca0:	d0df      	beq.n	8016c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016ca2:	782a      	ldrb	r2, [r5, #0]
 8016ca4:	f04f 0b00 	mov.w	fp, #0
 8016ca8:	e01d      	b.n	8016ce6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8016caa:	f1bb 0f00 	cmp.w	fp, #0
 8016cae:	d078      	beq.n	8016da2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8016cb0:	f8bb 2000 	ldrh.w	r2, [fp]
 8016cb4:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016cb8:	f1bb 0f00 	cmp.w	fp, #0
 8016cbc:	d002      	beq.n	8016cc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8016cbe:	f10b 0202 	add.w	r2, fp, #2
 8016cc2:	9209      	str	r2, [sp, #36]	@ 0x24
 8016cc4:	b10d      	cbz	r5, 8016cca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8016cc6:	3501      	adds	r5, #1
 8016cc8:	9508      	str	r5, [sp, #32]
 8016cca:	3301      	adds	r3, #1
 8016ccc:	930d      	str	r3, [sp, #52]	@ 0x34
 8016cce:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8016cd2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016cd4:	f1bb 0f00 	cmp.w	fp, #0
 8016cd8:	d0d6      	beq.n	8016c88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8016cda:	f8bb 2000 	ldrh.w	r2, [fp]
 8016cde:	2a00      	cmp	r2, #0
 8016ce0:	d1d6      	bne.n	8016c90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8016ce2:	f8bb 2000 	ldrh.w	r2, [fp]
 8016ce6:	2a00      	cmp	r2, #0
 8016ce8:	d0bb      	beq.n	8016c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016cea:	459a      	cmp	sl, r3
 8016cec:	ddb9      	ble.n	8016c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016cee:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8016cf2:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8016cf6:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8016cfa:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8016cfe:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8016d02:	960e      	str	r6, [sp, #56]	@ 0x38
 8016d04:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8016d08:	960f      	str	r6, [sp, #60]	@ 0x3c
 8016d0a:	f1bb 0f00 	cmp.w	fp, #0
 8016d0e:	d002      	beq.n	8016d16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8016d10:	f10b 0302 	add.w	r3, fp, #2
 8016d14:	9309      	str	r3, [sp, #36]	@ 0x24
 8016d16:	b10d      	cbz	r5, 8016d1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8016d18:	1c6b      	adds	r3, r5, #1
 8016d1a:	9308      	str	r3, [sp, #32]
 8016d1c:	ab0f      	add	r3, sp, #60	@ 0x3c
 8016d1e:	9305      	str	r3, [sp, #20]
 8016d20:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8016d24:	9304      	str	r3, [sp, #16]
 8016d26:	ab0e      	add	r3, sp, #56	@ 0x38
 8016d28:	9303      	str	r3, [sp, #12]
 8016d2a:	ab0c      	add	r3, sp, #48	@ 0x30
 8016d2c:	9302      	str	r3, [sp, #8]
 8016d2e:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8016d32:	9301      	str	r3, [sp, #4]
 8016d34:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8016d38:	9300      	str	r3, [sp, #0]
 8016d3a:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8016d3e:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8016d42:	a908      	add	r1, sp, #32
 8016d44:	a809      	add	r0, sp, #36	@ 0x24
 8016d46:	f7ff fea8 	bl	8016a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8016d4a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016d4c:	2b00      	cmp	r3, #0
 8016d4e:	bfbe      	ittt	lt
 8016d50:	6823      	ldrlt	r3, [r4, #0]
 8016d52:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016d56:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8016d58:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8016d5a:	bfb8      	it	lt
 8016d5c:	3404      	addlt	r4, #4
 8016d5e:	2b00      	cmp	r3, #0
 8016d60:	bfb8      	it	lt
 8016d62:	6823      	ldrlt	r3, [r4, #0]
 8016d64:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8016d68:	bfbe      	ittt	lt
 8016d6a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8016d6e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8016d70:	3404      	addlt	r4, #4
 8016d72:	b1d9      	cbz	r1, 8016dac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8016d74:	880b      	ldrh	r3, [r1, #0]
 8016d76:	2b69      	cmp	r3, #105	@ 0x69
 8016d78:	d01f      	beq.n	8016dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016d7a:	d82f      	bhi.n	8016ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8016d7c:	2b58      	cmp	r3, #88	@ 0x58
 8016d7e:	d01c      	beq.n	8016dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016d80:	d818      	bhi.n	8016db4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8016d82:	2b25      	cmp	r3, #37	@ 0x25
 8016d84:	d034      	beq.n	8016df0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8016d86:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8016d8a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016d8c:	f1bb 0f00 	cmp.w	fp, #0
 8016d90:	f000 80b8 	beq.w	8016f04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8016d94:	f8bb 5000 	ldrh.w	r5, [fp]
 8016d98:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8016d9c:	3301      	adds	r3, #1
 8016d9e:	930d      	str	r3, [sp, #52]	@ 0x34
 8016da0:	e029      	b.n	8016df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016da2:	b10d      	cbz	r5, 8016da8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8016da4:	782a      	ldrb	r2, [r5, #0]
 8016da6:	e785      	b.n	8016cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016da8:	462a      	mov	r2, r5
 8016daa:	e783      	b.n	8016cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8016dac:	2a00      	cmp	r2, #0
 8016dae:	d0ea      	beq.n	8016d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016db0:	7813      	ldrb	r3, [r2, #0]
 8016db2:	e7e0      	b.n	8016d76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8016db4:	3b63      	subs	r3, #99	@ 0x63
 8016db6:	2b01      	cmp	r3, #1
 8016db8:	d8e5      	bhi.n	8016d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016dba:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8016dbe:	b329      	cbz	r1, 8016e0c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8016dc0:	880b      	ldrh	r3, [r1, #0]
 8016dc2:	2b69      	cmp	r3, #105	@ 0x69
 8016dc4:	d063      	beq.n	8016e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016dc6:	d825      	bhi.n	8016e14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8016dc8:	2b63      	cmp	r3, #99	@ 0x63
 8016dca:	d038      	beq.n	8016e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8016dcc:	2b64      	cmp	r3, #100	@ 0x64
 8016dce:	d05e      	beq.n	8016e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8016dd0:	2b58      	cmp	r3, #88	@ 0x58
 8016dd2:	d07b      	beq.n	8016ecc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8016dd4:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8016dd8:	4625      	mov	r5, r4
 8016dda:	e036      	b.n	8016e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016ddc:	2b73      	cmp	r3, #115	@ 0x73
 8016dde:	d0ec      	beq.n	8016dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016de0:	d802      	bhi.n	8016de8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8016de2:	2b6f      	cmp	r3, #111	@ 0x6f
 8016de4:	d1cf      	bne.n	8016d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8016de6:	e7e8      	b.n	8016dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016de8:	2b75      	cmp	r3, #117	@ 0x75
 8016dea:	d0e6      	beq.n	8016dba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8016dec:	2b78      	cmp	r3, #120	@ 0x78
 8016dee:	e7f9      	b.n	8016de4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8016df0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016df2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8016df6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016df8:	b10b      	cbz	r3, 8016dfe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8016dfa:	3302      	adds	r3, #2
 8016dfc:	9309      	str	r3, [sp, #36]	@ 0x24
 8016dfe:	9b08      	ldr	r3, [sp, #32]
 8016e00:	2b00      	cmp	r3, #0
 8016e02:	f43f af2e 	beq.w	8016c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e06:	3301      	adds	r3, #1
 8016e08:	9308      	str	r3, [sp, #32]
 8016e0a:	e72a      	b.n	8016c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016e0c:	2a00      	cmp	r2, #0
 8016e0e:	d0e1      	beq.n	8016dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016e10:	7813      	ldrb	r3, [r2, #0]
 8016e12:	e7d6      	b.n	8016dc2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8016e14:	2b73      	cmp	r3, #115	@ 0x73
 8016e16:	d036      	beq.n	8016e86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8016e18:	d807      	bhi.n	8016e2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8016e1a:	2b6f      	cmp	r3, #111	@ 0x6f
 8016e1c:	d1da      	bne.n	8016dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016e1e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016e20:	1d25      	adds	r5, r4, #4
 8016e22:	eba8 0202 	sub.w	r2, r8, r2
 8016e26:	2308      	movs	r3, #8
 8016e28:	e04a      	b.n	8016ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016e2a:	2b75      	cmp	r3, #117	@ 0x75
 8016e2c:	d043      	beq.n	8016eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8016e2e:	2b78      	cmp	r3, #120	@ 0x78
 8016e30:	d1d0      	bne.n	8016dd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8016e32:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016e34:	1d25      	adds	r5, r4, #4
 8016e36:	eba8 0202 	sub.w	r2, r8, r2
 8016e3a:	2310      	movs	r3, #16
 8016e3c:	e040      	b.n	8016ec0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8016e3e:	6823      	ldr	r3, [r4, #0]
 8016e40:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8016e44:	1d25      	adds	r5, r4, #4
 8016e46:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 8016e4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016e4c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8016e50:	2b00      	cmp	r3, #0
 8016e52:	d052      	beq.n	8016efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8016e54:	881a      	ldrh	r2, [r3, #0]
 8016e56:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8016e5a:	a80d      	add	r0, sp, #52	@ 0x34
 8016e5c:	9005      	str	r0, [sp, #20]
 8016e5e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8016e62:	9004      	str	r0, [sp, #16]
 8016e64:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8016e66:	9003      	str	r0, [sp, #12]
 8016e68:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8016e6c:	9002      	str	r0, [sp, #8]
 8016e6e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8016e70:	9001      	str	r0, [sp, #4]
 8016e72:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8016e76:	9000      	str	r0, [sp, #0]
 8016e78:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8016e7c:	a810      	add	r0, sp, #64	@ 0x40
 8016e7e:	f7ff fd49 	bl	8016914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8016e82:	462c      	mov	r4, r5
 8016e84:	e7b7      	b.n	8016df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8016e86:	6823      	ldr	r3, [r4, #0]
 8016e88:	1d25      	adds	r5, r4, #4
 8016e8a:	9310      	str	r3, [sp, #64]	@ 0x40
 8016e8c:	e7dd      	b.n	8016e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016e8e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016e90:	6820      	ldr	r0, [r4, #0]
 8016e92:	eba8 0202 	sub.w	r2, r8, r2
 8016e96:	230a      	movs	r3, #10
 8016e98:	b292      	uxth	r2, r2
 8016e9a:	4649      	mov	r1, r9
 8016e9c:	f7ff fce4 	bl	8016868 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8016ea0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8016ea4:	2b2d      	cmp	r3, #45	@ 0x2d
 8016ea6:	f104 0504 	add.w	r5, r4, #4
 8016eaa:	d1ce      	bne.n	8016e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016eac:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016eb0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016eb2:	3302      	adds	r3, #2
 8016eb4:	e7e9      	b.n	8016e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8016eb6:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016eb8:	1d25      	adds	r5, r4, #4
 8016eba:	eba8 0202 	sub.w	r2, r8, r2
 8016ebe:	230a      	movs	r3, #10
 8016ec0:	b292      	uxth	r2, r2
 8016ec2:	4649      	mov	r1, r9
 8016ec4:	6820      	ldr	r0, [r4, #0]
 8016ec6:	f7ff fcfb 	bl	80168c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8016eca:	e7be      	b.n	8016e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016ecc:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8016ece:	6820      	ldr	r0, [r4, #0]
 8016ed0:	eba8 0202 	sub.w	r2, r8, r2
 8016ed4:	b292      	uxth	r2, r2
 8016ed6:	2310      	movs	r3, #16
 8016ed8:	4649      	mov	r1, r9
 8016eda:	f7ff fcf1 	bl	80168c0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8016ede:	1d25      	adds	r5, r4, #4
 8016ee0:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 8016ee4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8016ee8:	2b00      	cmp	r3, #0
 8016eea:	d0ae      	beq.n	8016e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8016eec:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 8016ef0:	2919      	cmp	r1, #25
 8016ef2:	d8f7      	bhi.n	8016ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016ef4:	3b20      	subs	r3, #32
 8016ef6:	8013      	strh	r3, [r2, #0]
 8016ef8:	e7f4      	b.n	8016ee4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8016efa:	9a08      	ldr	r2, [sp, #32]
 8016efc:	2a00      	cmp	r2, #0
 8016efe:	d0aa      	beq.n	8016e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016f00:	7812      	ldrb	r2, [r2, #0]
 8016f02:	e7a8      	b.n	8016e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8016f04:	2d00      	cmp	r5, #0
 8016f06:	f43f af47 	beq.w	8016d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8016f0a:	782d      	ldrb	r5, [r5, #0]
 8016f0c:	e744      	b.n	8016d98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08016f0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8016f0e:	b507      	push	{r0, r1, r2, lr}
 8016f10:	9300      	str	r3, [sp, #0]
 8016f12:	4613      	mov	r3, r2
 8016f14:	2200      	movs	r2, #0
 8016f16:	f7ff fe90 	bl	8016c3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8016f1a:	b003      	add	sp, #12
 8016f1c:	f85d fb04 	ldr.w	pc, [sp], #4

08016f20 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8016f20:	b40c      	push	{r2, r3}
 8016f22:	b507      	push	{r0, r1, r2, lr}
 8016f24:	ab04      	add	r3, sp, #16
 8016f26:	f853 2b04 	ldr.w	r2, [r3], #4
 8016f2a:	9301      	str	r3, [sp, #4]
 8016f2c:	f7ff ffef 	bl	8016f0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8016f30:	b003      	add	sp, #12
 8016f32:	f85d eb04 	ldr.w	lr, [sp], #4
 8016f36:	b002      	add	sp, #8
 8016f38:	4770      	bx	lr
	...

08016f3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8016f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f40:	b0c5      	sub	sp, #276	@ 0x114
 8016f42:	2400      	movs	r4, #0
 8016f44:	af11      	add	r7, sp, #68	@ 0x44
 8016f46:	4606      	mov	r6, r0
 8016f48:	468a      	mov	sl, r1
 8016f4a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016f4e:	4621      	mov	r1, r4
 8016f50:	22c8      	movs	r2, #200	@ 0xc8
 8016f52:	4638      	mov	r0, r7
 8016f54:	f8dd b138 	ldr.w	fp, [sp, #312]	@ 0x138
 8016f58:	940d      	str	r4, [sp, #52]	@ 0x34
 8016f5a:	f00f f820 	bl	8025f9e <memset>
 8016f5e:	b16e      	cbz	r6, 8016f7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8016f60:	ed9f 5aa8 	vldr	s10, [pc, #672]	@ 8017204 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8016f64:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016f66:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016f68:	b162      	cbz	r2, 8016f84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8016f6a:	8812      	ldrh	r2, [r2, #0]
 8016f6c:	b11a      	cbz	r2, 8016f76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8016f6e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8016f72:	4299      	cmp	r1, r3
 8016f74:	dc2e      	bgt.n	8016fd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8016f76:	2200      	movs	r2, #0
 8016f78:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8016f7c:	4630      	mov	r0, r6
 8016f7e:	b045      	add	sp, #276	@ 0x114
 8016f80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f84:	9a08      	ldr	r2, [sp, #32]
 8016f86:	2a00      	cmp	r2, #0
 8016f88:	d0f5      	beq.n	8016f76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8016f8a:	7812      	ldrb	r2, [r2, #0]
 8016f8c:	e7ee      	b.n	8016f6c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8016f8e:	2d00      	cmp	r5, #0
 8016f90:	d0e8      	beq.n	8016f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8016f92:	782a      	ldrb	r2, [r5, #0]
 8016f94:	b142      	cbz	r2, 8016fa8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8016f96:	2a25      	cmp	r2, #37	@ 0x25
 8016f98:	d001      	beq.n	8016f9e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8016f9a:	4299      	cmp	r1, r3
 8016f9c:	dc08      	bgt.n	8016fb0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8016f9e:	f1b8 0f00 	cmp.w	r8, #0
 8016fa2:	d121      	bne.n	8016fe8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8016fa4:	2d00      	cmp	r5, #0
 8016fa6:	d0dd      	beq.n	8016f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8016fa8:	782a      	ldrb	r2, [r5, #0]
 8016faa:	f04f 0800 	mov.w	r8, #0
 8016fae:	e01d      	b.n	8016fec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8016fb0:	f1b8 0f00 	cmp.w	r8, #0
 8016fb4:	d07f      	beq.n	80170b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8016fb6:	f8b8 2000 	ldrh.w	r2, [r8]
 8016fba:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8016fbe:	f1b8 0f00 	cmp.w	r8, #0
 8016fc2:	d002      	beq.n	8016fca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8016fc4:	f108 0202 	add.w	r2, r8, #2
 8016fc8:	9209      	str	r2, [sp, #36]	@ 0x24
 8016fca:	b10d      	cbz	r5, 8016fd0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8016fcc:	3501      	adds	r5, #1
 8016fce:	9508      	str	r5, [sp, #32]
 8016fd0:	3301      	adds	r3, #1
 8016fd2:	930d      	str	r3, [sp, #52]	@ 0x34
 8016fd4:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8016fd8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016fda:	f1b8 0f00 	cmp.w	r8, #0
 8016fde:	d0d6      	beq.n	8016f8e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8016fe0:	f8b8 2000 	ldrh.w	r2, [r8]
 8016fe4:	2a00      	cmp	r2, #0
 8016fe6:	d1d6      	bne.n	8016f96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8016fe8:	f8b8 2000 	ldrh.w	r2, [r8]
 8016fec:	2a00      	cmp	r2, #0
 8016fee:	d0b9      	beq.n	8016f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8016ff0:	4299      	cmp	r1, r3
 8016ff2:	ddb7      	ble.n	8016f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8016ff4:	2300      	movs	r3, #0
 8016ff6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8016ffa:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
 8016ffe:	f88d 302e 	strb.w	r3, [sp, #46]	@ 0x2e
 8017002:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
 8017006:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
 801700a:	930e      	str	r3, [sp, #56]	@ 0x38
 801700c:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 8017010:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017012:	f1b8 0f00 	cmp.w	r8, #0
 8017016:	d002      	beq.n	801701e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8017018:	f108 0302 	add.w	r3, r8, #2
 801701c:	9309      	str	r3, [sp, #36]	@ 0x24
 801701e:	b10d      	cbz	r5, 8017024 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8017020:	1c6b      	adds	r3, r5, #1
 8017022:	9308      	str	r3, [sp, #32]
 8017024:	ab0f      	add	r3, sp, #60	@ 0x3c
 8017026:	9305      	str	r3, [sp, #20]
 8017028:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 801702c:	9304      	str	r3, [sp, #16]
 801702e:	ab0e      	add	r3, sp, #56	@ 0x38
 8017030:	9303      	str	r3, [sp, #12]
 8017032:	ab0c      	add	r3, sp, #48	@ 0x30
 8017034:	9302      	str	r3, [sp, #8]
 8017036:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801703a:	9301      	str	r3, [sp, #4]
 801703c:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8017040:	9300      	str	r3, [sp, #0]
 8017042:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8017046:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801704a:	a908      	add	r1, sp, #32
 801704c:	a809      	add	r0, sp, #36	@ 0x24
 801704e:	f7ff fd24 	bl	8016a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017052:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017054:	2b00      	cmp	r3, #0
 8017056:	da0b      	bge.n	8017070 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8017058:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801705c:	edd3 7a00 	vldr	s15, [r3]
 8017060:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017064:	3401      	adds	r4, #1
 8017066:	ee17 3a90 	vmov	r3, s15
 801706a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801706e:	930e      	str	r3, [sp, #56]	@ 0x38
 8017070:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017072:	2b00      	cmp	r3, #0
 8017074:	da0b      	bge.n	801708e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8017076:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801707a:	edd3 7a00 	vldr	s15, [r3]
 801707e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017082:	3401      	adds	r4, #1
 8017084:	ee17 3a90 	vmov	r3, s15
 8017088:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801708c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801708e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017090:	b1b3      	cbz	r3, 80170c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8017092:	881a      	ldrh	r2, [r3, #0]
 8017094:	2a25      	cmp	r2, #37	@ 0x25
 8017096:	d018      	beq.n	80170ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8017098:	2a66      	cmp	r2, #102	@ 0x66
 801709a:	d01c      	beq.n	80170d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801709c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 80170a0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80170a2:	f1b8 0f00 	cmp.w	r8, #0
 80170a6:	f000 8136 	beq.w	8017316 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3da>
 80170aa:	f8b8 5000 	ldrh.w	r5, [r8]
 80170ae:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 80170b2:	3301      	adds	r3, #1
 80170b4:	e00d      	b.n	80170d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 80170b6:	b10d      	cbz	r5, 80170bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80170b8:	782a      	ldrb	r2, [r5, #0]
 80170ba:	e77e      	b.n	8016fba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80170bc:	462a      	mov	r2, r5
 80170be:	e77c      	b.n	8016fba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80170c0:	9b08      	ldr	r3, [sp, #32]
 80170c2:	2b00      	cmp	r3, #0
 80170c4:	d0ea      	beq.n	801709c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80170c6:	781a      	ldrb	r2, [r3, #0]
 80170c8:	e7e4      	b.n	8017094 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80170ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80170cc:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80170d0:	3302      	adds	r3, #2
 80170d2:	930d      	str	r3, [sp, #52]	@ 0x34
 80170d4:	e041      	b.n	801715a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80170d6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80170da:	edd3 7a00 	vldr	s15, [r3]
 80170de:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80170e2:	9710      	str	r7, [sp, #64]	@ 0x40
 80170e4:	3401      	adds	r4, #1
 80170e6:	b923      	cbnz	r3, 80170f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80170e8:	2301      	movs	r3, #1
 80170ea:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80170ee:	2306      	movs	r3, #6
 80170f0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80170f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80170f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80170fa:	bf48      	it	mi
 80170fc:	eef1 7a67 	vnegmi.f32	s15, s15
 8017100:	eeb0 7ae7 	vabs.f32	s14, s15
 8017104:	bf48      	it	mi
 8017106:	232d      	movmi	r3, #45	@ 0x2d
 8017108:	eeb4 7a45 	vcmp.f32	s14, s10
 801710c:	bf48      	it	mi
 801710e:	f8ad 3032 	strhmi.w	r3, [sp, #50]	@ 0x32
 8017112:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017116:	dd2b      	ble.n	8017170 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8017118:	4b3b      	ldr	r3, [pc, #236]	@ (8017208 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 801711a:	9311      	str	r3, [sp, #68]	@ 0x44
 801711c:	2366      	movs	r3, #102	@ 0x66
 801711e:	9312      	str	r3, [sp, #72]	@ 0x48
 8017120:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017122:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8017126:	2b00      	cmp	r3, #0
 8017128:	f000 80ef 	beq.w	801730a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3ce>
 801712c:	881a      	ldrh	r2, [r3, #0]
 801712e:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8017132:	a80d      	add	r0, sp, #52	@ 0x34
 8017134:	9005      	str	r0, [sp, #20]
 8017136:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801713a:	9004      	str	r0, [sp, #16]
 801713c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801713e:	9003      	str	r0, [sp, #12]
 8017140:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8017144:	9002      	str	r0, [sp, #8]
 8017146:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8017148:	9001      	str	r0, [sp, #4]
 801714a:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801714e:	9000      	str	r0, [sp, #0]
 8017150:	e9cd a606 	strd	sl, r6, [sp, #24]
 8017154:	a810      	add	r0, sp, #64	@ 0x40
 8017156:	f7ff fbdd 	bl	8016914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801715a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801715c:	b10b      	cbz	r3, 8017162 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801715e:	3302      	adds	r3, #2
 8017160:	9309      	str	r3, [sp, #36]	@ 0x24
 8017162:	9b08      	ldr	r3, [sp, #32]
 8017164:	2b00      	cmp	r3, #0
 8017166:	f43f aefd 	beq.w	8016f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801716a:	3301      	adds	r3, #1
 801716c:	9308      	str	r3, [sp, #32]
 801716e:	e6f9      	b.n	8016f64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017170:	eef4 7a67 	vcmp.f32	s15, s15
 8017174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017178:	d63a      	bvs.n	80171f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801717a:	f10d 0846 	add.w	r8, sp, #70	@ 0x46
 801717e:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 8017182:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8017186:	eeb0 6a67 	vmov.f32	s12, s15
 801718a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801718e:	eef0 5a47 	vmov.f32	s11, s14
 8017192:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8017196:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801719a:	da2d      	bge.n	80171f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801719c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801719e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 80171a2:	2100      	movs	r1, #0
 80171a4:	eef0 4a46 	vmov.f32	s9, s12
 80171a8:	ebaa 0202 	sub.w	r2, sl, r2
 80171ac:	eef4 6ac6 	vcmpe.f32	s13, s12
 80171b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80171b4:	b28b      	uxth	r3, r1
 80171b6:	db2c      	blt.n	8017212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80171b8:	1a50      	subs	r0, r2, r1
 80171ba:	2800      	cmp	r0, #0
 80171bc:	dd29      	ble.n	8017212 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 80171be:	3101      	adds	r1, #1
 80171c0:	2964      	cmp	r1, #100	@ 0x64
 80171c2:	d025      	beq.n	8017210 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 80171c4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80171c8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80171cc:	ee17 3a10 	vmov	r3, s14
 80171d0:	2b09      	cmp	r3, #9
 80171d2:	bfa8      	it	ge
 80171d4:	2309      	movge	r3, #9
 80171d6:	ee07 3a10 	vmov	s14, r3
 80171da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80171de:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 80171e2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80171e6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80171ea:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80171ee:	e7dd      	b.n	80171ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80171f0:	4b06      	ldr	r3, [pc, #24]	@ (801720c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80171f2:	9311      	str	r3, [sp, #68]	@ 0x44
 80171f4:	236e      	movs	r3, #110	@ 0x6e
 80171f6:	e792      	b.n	801711e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80171f8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80171fc:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8017200:	e7c7      	b.n	8017192 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 8017202:	bf00      	nop
 8017204:	7f7fffff 	.word	0x7f7fffff
 8017208:	006e0069 	.word	0x006e0069
 801720c:	0061006e 	.word	0x0061006e
 8017210:	2363      	movs	r3, #99	@ 0x63
 8017212:	2a63      	cmp	r2, #99	@ 0x63
 8017214:	bfd4      	ite	le
 8017216:	ebc3 0202 	rsble	r2, r3, r2
 801721a:	f1c3 0263 	rsbgt	r2, r3, #99	@ 0x63
 801721e:	2a00      	cmp	r2, #0
 8017220:	f103 0501 	add.w	r5, r3, #1
 8017224:	dd57      	ble.n	80172d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8017226:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8017228:	2900      	cmp	r1, #0
 801722a:	dd2b      	ble.n	8017284 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x348>
 801722c:	f04f 0901 	mov.w	r9, #1
 8017230:	230a      	movs	r3, #10
 8017232:	f111 31ff 	adds.w	r1, r1, #4294967295
 8017236:	d30c      	bcc.n	8017252 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x316>
 8017238:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801723c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8017240:	ee17 0a10 	vmov	r0, s14
 8017244:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017248:	fb03 0909 	mla	r9, r3, r9, r0
 801724c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8017250:	e7ef      	b.n	8017232 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f6>
 8017252:	910f      	str	r1, [sp, #60]	@ 0x3c
 8017254:	230a      	movs	r3, #10
 8017256:	b292      	uxth	r2, r2
 8017258:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801725c:	4648      	mov	r0, r9
 801725e:	f7ff fb4d 	bl	80168fc <_ZN8touchgfx7Unicode4itoaElPtti>
 8017262:	f1b9 0f01 	cmp.w	r9, #1
 8017266:	dc0b      	bgt.n	8017280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
 8017268:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
 801726c:	2b00      	cmp	r3, #0
 801726e:	bf0c      	ite	eq
 8017270:	2300      	moveq	r3, #0
 8017272:	232e      	movne	r3, #46	@ 0x2e
 8017274:	aa44      	add	r2, sp, #272	@ 0x110
 8017276:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801727a:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801727e:	e015      	b.n	80172ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x370>
 8017280:	232e      	movs	r3, #46	@ 0x2e
 8017282:	e7f7      	b.n	8017274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8017284:	2a01      	cmp	r2, #1
 8017286:	d026      	beq.n	80172d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8017288:	2b63      	cmp	r3, #99	@ 0x63
 801728a:	d024      	beq.n	80172d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 801728c:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
 8017290:	b30a      	cbz	r2, 80172d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8017292:	aa44      	add	r2, sp, #272	@ 0x110
 8017294:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8017298:	222e      	movs	r2, #46	@ 0x2e
 801729a:	f825 2ccc 	strh.w	r2, [r5, #-204]
 801729e:	3302      	adds	r3, #2
 80172a0:	aa44      	add	r2, sp, #272	@ 0x110
 80172a2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80172a6:	2200      	movs	r2, #0
 80172a8:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80172ac:	eef4 7ae4 	vcmpe.f32	s15, s9
 80172b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80172b4:	f6ff af34 	blt.w	8017120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80172b8:	2300      	movs	r3, #0
 80172ba:	f838 2b02 	ldrh.w	r2, [r8], #2
 80172be:	1c59      	adds	r1, r3, #1
 80172c0:	b972      	cbnz	r2, 80172e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80172c2:	b29b      	uxth	r3, r3
 80172c4:	2130      	movs	r1, #48	@ 0x30
 80172c6:	b96b      	cbnz	r3, 80172e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a8>
 80172c8:	2331      	movs	r3, #49	@ 0x31
 80172ca:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80172ce:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80172d0:	3b02      	subs	r3, #2
 80172d2:	9310      	str	r3, [sp, #64]	@ 0x40
 80172d4:	e724      	b.n	8017120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80172d6:	ab44      	add	r3, sp, #272	@ 0x110
 80172d8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80172dc:	2300      	movs	r3, #0
 80172de:	e7cc      	b.n	801727a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33e>
 80172e0:	460b      	mov	r3, r1
 80172e2:	e7ea      	b.n	80172ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80172e4:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80172e8:	f1a2 0030 	sub.w	r0, r2, #48	@ 0x30
 80172ec:	2808      	cmp	r0, #8
 80172ee:	d806      	bhi.n	80172fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c2>
 80172f0:	a944      	add	r1, sp, #272	@ 0x110
 80172f2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80172f6:	3201      	adds	r2, #1
 80172f8:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80172fc:	e710      	b.n	8017120 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80172fe:	2a39      	cmp	r2, #57	@ 0x39
 8017300:	bf08      	it	eq
 8017302:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8017306:	3b01      	subs	r3, #1
 8017308:	e7dd      	b.n	80172c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x38a>
 801730a:	9a08      	ldr	r2, [sp, #32]
 801730c:	2a00      	cmp	r2, #0
 801730e:	f43f af0e 	beq.w	801712e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8017312:	7812      	ldrb	r2, [r2, #0]
 8017314:	e70b      	b.n	801712e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8017316:	2d00      	cmp	r5, #0
 8017318:	f43f aec9 	beq.w	80170ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801731c:	782d      	ldrb	r5, [r5, #0]
 801731e:	e6c6      	b.n	80170ae <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>

08017320 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8017320:	b507      	push	{r0, r1, r2, lr}
 8017322:	9300      	str	r3, [sp, #0]
 8017324:	4613      	mov	r3, r2
 8017326:	2200      	movs	r2, #0
 8017328:	f7ff fe08 	bl	8016f3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801732c:	b003      	add	sp, #12
 801732e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08017334 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8017334:	4b01      	ldr	r3, [pc, #4]	@ (801733c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8017336:	6018      	str	r0, [r3, #0]
 8017338:	4770      	bx	lr
 801733a:	bf00      	nop
 801733c:	20002fb4 	.word	0x20002fb4

08017340 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017340:	4b06      	ldr	r3, [pc, #24]	@ (801735c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017342:	881a      	ldrh	r2, [r3, #0]
 8017344:	4282      	cmp	r2, r0
 8017346:	d807      	bhi.n	8017358 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017348:	4b05      	ldr	r3, [pc, #20]	@ (8017360 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801734a:	881b      	ldrh	r3, [r3, #0]
 801734c:	4413      	add	r3, r2
 801734e:	4298      	cmp	r0, r3
 8017350:	bfac      	ite	ge
 8017352:	2000      	movge	r0, #0
 8017354:	2001      	movlt	r0, #1
 8017356:	4770      	bx	lr
 8017358:	2000      	movs	r0, #0
 801735a:	4770      	bx	lr
 801735c:	20002fd4 	.word	0x20002fd4
 8017360:	20002fd8 	.word	0x20002fd8

08017364 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017364:	b508      	push	{r3, lr}
 8017366:	4601      	mov	r1, r0
 8017368:	f7ff ffea 	bl	8017340 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801736c:	b118      	cbz	r0, 8017376 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801736e:	4b02      	ldr	r3, [pc, #8]	@ (8017378 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017370:	681b      	ldr	r3, [r3, #0]
 8017372:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017376:	bd08      	pop	{r3, pc}
 8017378:	20002fb8 	.word	0x20002fb8

0801737c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801737c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801737e:	4c24      	ldr	r4, [pc, #144]	@ (8017410 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017380:	6823      	ldr	r3, [r4, #0]
 8017382:	2b00      	cmp	r3, #0
 8017384:	d042      	beq.n	801740c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017386:	4a23      	ldr	r2, [pc, #140]	@ (8017414 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017388:	4d23      	ldr	r5, [pc, #140]	@ (8017418 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801738a:	8811      	ldrh	r1, [r2, #0]
 801738c:	f8b5 c000 	ldrh.w	ip, [r5]
 8017390:	4822      	ldr	r0, [pc, #136]	@ (801741c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017392:	4461      	add	r1, ip
 8017394:	1c4a      	adds	r2, r1, #1
 8017396:	f022 0201 	bic.w	r2, r2, #1
 801739a:	008f      	lsls	r7, r1, #2
 801739c:	0412      	lsls	r2, r2, #16
 801739e:	19de      	adds	r6, r3, r7
 80173a0:	0c12      	lsrs	r2, r2, #16
 80173a2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80173a6:	6006      	str	r6, [r0, #0]
 80173a8:	4e1d      	ldr	r6, [pc, #116]	@ (8017420 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80173aa:	19da      	adds	r2, r3, r7
 80173ac:	6032      	str	r2, [r6, #0]
 80173ae:	220e      	movs	r2, #14
 80173b0:	fb02 f20c 	mul.w	r2, r2, ip
 80173b4:	3203      	adds	r2, #3
 80173b6:	f022 0203 	bic.w	r2, r2, #3
 80173ba:	443a      	add	r2, r7
 80173bc:	4f19      	ldr	r7, [pc, #100]	@ (8017424 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80173be:	4413      	add	r3, r2
 80173c0:	603b      	str	r3, [r7, #0]
 80173c2:	4f19      	ldr	r7, [pc, #100]	@ (8017428 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80173c4:	2300      	movs	r3, #0
 80173c6:	803b      	strh	r3, [r7, #0]
 80173c8:	4f18      	ldr	r7, [pc, #96]	@ (801742c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80173ca:	683f      	ldr	r7, [r7, #0]
 80173cc:	1aba      	subs	r2, r7, r2
 80173ce:	4f18      	ldr	r7, [pc, #96]	@ (8017430 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80173d0:	603a      	str	r2, [r7, #0]
 80173d2:	4a18      	ldr	r2, [pc, #96]	@ (8017434 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80173d4:	469c      	mov	ip, r3
 80173d6:	8013      	strh	r3, [r2, #0]
 80173d8:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80173dc:	428b      	cmp	r3, r1
 80173de:	d10d      	bne.n	80173fc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80173e0:	882d      	ldrh	r5, [r5, #0]
 80173e2:	6830      	ldr	r0, [r6, #0]
 80173e4:	2300      	movs	r3, #0
 80173e6:	240e      	movs	r4, #14
 80173e8:	429d      	cmp	r5, r3
 80173ea:	d90f      	bls.n	801740c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80173ec:	fb04 0203 	mla	r2, r4, r3, r0
 80173f0:	3301      	adds	r3, #1
 80173f2:	7b11      	ldrb	r1, [r2, #12]
 80173f4:	f36f 1145 	bfc	r1, #5, #1
 80173f8:	7311      	strb	r1, [r2, #12]
 80173fa:	e7f5      	b.n	80173e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80173fc:	6822      	ldr	r2, [r4, #0]
 80173fe:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017402:	6802      	ldr	r2, [r0, #0]
 8017404:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8017408:	3301      	adds	r3, #1
 801740a:	e7e7      	b.n	80173dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801740c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801740e:	bf00      	nop
 8017410:	20002fb8 	.word	0x20002fb8
 8017414:	20002fd4 	.word	0x20002fd4
 8017418:	20002fd8 	.word	0x20002fd8
 801741c:	20002fcc 	.word	0x20002fcc
 8017420:	20002fbc 	.word	0x20002fbc
 8017424:	20002fc4 	.word	0x20002fc4
 8017428:	20002fd6 	.word	0x20002fd6
 801742c:	20002fc0 	.word	0x20002fc0
 8017430:	20002fd0 	.word	0x20002fd0
 8017434:	20002fc8 	.word	0x20002fc8

08017438 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8017438:	4b06      	ldr	r3, [pc, #24]	@ (8017454 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801743a:	681b      	ldr	r3, [r3, #0]
 801743c:	b943      	cbnz	r3, 8017450 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801743e:	b139      	cbz	r1, 8017450 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017440:	4b05      	ldr	r3, [pc, #20]	@ (8017458 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017442:	801a      	strh	r2, [r3, #0]
 8017444:	4b05      	ldr	r3, [pc, #20]	@ (801745c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017446:	6019      	str	r1, [r3, #0]
 8017448:	4b05      	ldr	r3, [pc, #20]	@ (8017460 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801744a:	6018      	str	r0, [r3, #0]
 801744c:	f7ff bf96 	b.w	801737c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017450:	4770      	bx	lr
 8017452:	bf00      	nop
 8017454:	20002fc4 	.word	0x20002fc4
 8017458:	20002fd8 	.word	0x20002fd8
 801745c:	20002fc0 	.word	0x20002fc0
 8017460:	20002fb8 	.word	0x20002fb8

08017464 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017464:	b470      	push	{r4, r5, r6}
 8017466:	4c07      	ldr	r4, [pc, #28]	@ (8017484 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017468:	6826      	ldr	r6, [r4, #0]
 801746a:	4605      	mov	r5, r0
 801746c:	4610      	mov	r0, r2
 801746e:	9a03      	ldr	r2, [sp, #12]
 8017470:	b936      	cbnz	r6, 8017480 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017472:	6025      	str	r5, [r4, #0]
 8017474:	4c04      	ldr	r4, [pc, #16]	@ (8017488 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017476:	8021      	strh	r1, [r4, #0]
 8017478:	bc70      	pop	{r4, r5, r6}
 801747a:	4619      	mov	r1, r3
 801747c:	f7ff bfdc 	b.w	8017438 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017480:	bc70      	pop	{r4, r5, r6}
 8017482:	4770      	bx	lr
 8017484:	20002fdc 	.word	0x20002fdc
 8017488:	20002fd4 	.word	0x20002fd4

0801748c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801748c:	4a12      	ldr	r2, [pc, #72]	@ (80174d8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801748e:	8803      	ldrh	r3, [r0, #0]
 8017490:	8812      	ldrh	r2, [r2, #0]
 8017492:	4293      	cmp	r3, r2
 8017494:	d207      	bcs.n	80174a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017496:	4a11      	ldr	r2, [pc, #68]	@ (80174dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017498:	6812      	ldr	r2, [r2, #0]
 801749a:	2114      	movs	r1, #20
 801749c:	fb01 2303 	mla	r3, r1, r3, r2
 80174a0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80174a4:	4770      	bx	lr
 80174a6:	490e      	ldr	r1, [pc, #56]	@ (80174e0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80174a8:	8809      	ldrh	r1, [r1, #0]
 80174aa:	4411      	add	r1, r2
 80174ac:	428b      	cmp	r3, r1
 80174ae:	da04      	bge.n	80174ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80174b0:	1a9b      	subs	r3, r3, r2
 80174b2:	4a0c      	ldr	r2, [pc, #48]	@ (80174e4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80174b4:	210e      	movs	r1, #14
 80174b6:	6812      	ldr	r2, [r2, #0]
 80174b8:	e7f0      	b.n	801749c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80174ba:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80174be:	4293      	cmp	r3, r2
 80174c0:	d108      	bne.n	80174d4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80174c2:	4b09      	ldr	r3, [pc, #36]	@ (80174e8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80174c4:	781b      	ldrb	r3, [r3, #0]
 80174c6:	b91b      	cbnz	r3, 80174d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80174c8:	4b08      	ldr	r3, [pc, #32]	@ (80174ec <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80174ca:	f9b3 0000 	ldrsh.w	r0, [r3]
 80174ce:	4770      	bx	lr
 80174d0:	4b07      	ldr	r3, [pc, #28]	@ (80174f0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80174d2:	e7fa      	b.n	80174ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80174d4:	2000      	movs	r0, #0
 80174d6:	4770      	bx	lr
 80174d8:	20002fd4 	.word	0x20002fd4
 80174dc:	20002fdc 	.word	0x20002fdc
 80174e0:	20002fd8 	.word	0x20002fd8
 80174e4:	20002fbc 	.word	0x20002fbc
 80174e8:	20002f4c 	.word	0x20002f4c
 80174ec:	20002f4e 	.word	0x20002f4e
 80174f0:	20002f50 	.word	0x20002f50

080174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80174f4:	4a12      	ldr	r2, [pc, #72]	@ (8017540 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80174f6:	8803      	ldrh	r3, [r0, #0]
 80174f8:	8812      	ldrh	r2, [r2, #0]
 80174fa:	4293      	cmp	r3, r2
 80174fc:	d207      	bcs.n	801750e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80174fe:	4a11      	ldr	r2, [pc, #68]	@ (8017544 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017500:	6812      	ldr	r2, [r2, #0]
 8017502:	2114      	movs	r1, #20
 8017504:	fb01 2303 	mla	r3, r1, r3, r2
 8017508:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801750c:	4770      	bx	lr
 801750e:	490e      	ldr	r1, [pc, #56]	@ (8017548 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017510:	8809      	ldrh	r1, [r1, #0]
 8017512:	4411      	add	r1, r2
 8017514:	428b      	cmp	r3, r1
 8017516:	da04      	bge.n	8017522 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8017518:	1a9b      	subs	r3, r3, r2
 801751a:	4a0c      	ldr	r2, [pc, #48]	@ (801754c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801751c:	210e      	movs	r1, #14
 801751e:	6812      	ldr	r2, [r2, #0]
 8017520:	e7f0      	b.n	8017504 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017522:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017526:	4293      	cmp	r3, r2
 8017528:	d108      	bne.n	801753c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801752a:	4b09      	ldr	r3, [pc, #36]	@ (8017550 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801752c:	781b      	ldrb	r3, [r3, #0]
 801752e:	b91b      	cbnz	r3, 8017538 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8017530:	4b08      	ldr	r3, [pc, #32]	@ (8017554 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8017532:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017536:	4770      	bx	lr
 8017538:	4b07      	ldr	r3, [pc, #28]	@ (8017558 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801753a:	e7fa      	b.n	8017532 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801753c:	2000      	movs	r0, #0
 801753e:	4770      	bx	lr
 8017540:	20002fd4 	.word	0x20002fd4
 8017544:	20002fdc 	.word	0x20002fdc
 8017548:	20002fd8 	.word	0x20002fd8
 801754c:	20002fbc 	.word	0x20002fbc
 8017550:	20002f4c 	.word	0x20002f4c
 8017554:	20002f50 	.word	0x20002f50
 8017558:	20002f4e 	.word	0x20002f4e

0801755c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801755c:	b530      	push	{r4, r5, lr}
 801755e:	4a22      	ldr	r2, [pc, #136]	@ (80175e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8017560:	880b      	ldrh	r3, [r1, #0]
 8017562:	8812      	ldrh	r2, [r2, #0]
 8017564:	4293      	cmp	r3, r2
 8017566:	d213      	bcs.n	8017590 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017568:	4a20      	ldr	r2, [pc, #128]	@ (80175ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801756a:	6812      	ldr	r2, [r2, #0]
 801756c:	2114      	movs	r1, #20
 801756e:	fb01 2303 	mla	r3, r1, r3, r2
 8017572:	8a1a      	ldrh	r2, [r3, #16]
 8017574:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8017578:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801757c:	8a5b      	ldrh	r3, [r3, #18]
 801757e:	8004      	strh	r4, [r0, #0]
 8017580:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017584:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8017588:	8041      	strh	r1, [r0, #2]
 801758a:	8082      	strh	r2, [r0, #4]
 801758c:	80c3      	strh	r3, [r0, #6]
 801758e:	e024      	b.n	80175da <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8017590:	4917      	ldr	r1, [pc, #92]	@ (80175f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8017592:	8809      	ldrh	r1, [r1, #0]
 8017594:	4411      	add	r1, r2
 8017596:	428b      	cmp	r3, r1
 8017598:	da10      	bge.n	80175bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801759a:	1a9b      	subs	r3, r3, r2
 801759c:	220e      	movs	r2, #14
 801759e:	4353      	muls	r3, r2
 80175a0:	4a14      	ldr	r2, [pc, #80]	@ (80175f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 80175a2:	6811      	ldr	r1, [r2, #0]
 80175a4:	18ca      	adds	r2, r1, r3
 80175a6:	5ecd      	ldrsh	r5, [r1, r3]
 80175a8:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 80175ac:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 80175b0:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 80175b4:	8005      	strh	r5, [r0, #0]
 80175b6:	8044      	strh	r4, [r0, #2]
 80175b8:	8081      	strh	r1, [r0, #4]
 80175ba:	e7e7      	b.n	801758c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80175bc:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80175c0:	4293      	cmp	r3, r2
 80175c2:	d10b      	bne.n	80175dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80175c4:	4b0c      	ldr	r3, [pc, #48]	@ (80175f8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80175c6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80175ca:	4b0c      	ldr	r3, [pc, #48]	@ (80175fc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80175cc:	8081      	strh	r1, [r0, #4]
 80175ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 80175d2:	80c2      	strh	r2, [r0, #6]
 80175d4:	2300      	movs	r3, #0
 80175d6:	8003      	strh	r3, [r0, #0]
 80175d8:	8043      	strh	r3, [r0, #2]
 80175da:	bd30      	pop	{r4, r5, pc}
 80175dc:	2300      	movs	r3, #0
 80175de:	8003      	strh	r3, [r0, #0]
 80175e0:	8043      	strh	r3, [r0, #2]
 80175e2:	8083      	strh	r3, [r0, #4]
 80175e4:	e7d2      	b.n	801758c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80175e6:	bf00      	nop
 80175e8:	20002fd4 	.word	0x20002fd4
 80175ec:	20002fdc 	.word	0x20002fdc
 80175f0:	20002fd8 	.word	0x20002fd8
 80175f4:	20002fbc 	.word	0x20002fbc
 80175f8:	20002f48 	.word	0x20002f48
 80175fc:	20002f4a 	.word	0x20002f4a

08017600 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8017600:	4a17      	ldr	r2, [pc, #92]	@ (8017660 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8017602:	8803      	ldrh	r3, [r0, #0]
 8017604:	8812      	ldrh	r2, [r2, #0]
 8017606:	4293      	cmp	r3, r2
 8017608:	d213      	bcs.n	8017632 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801760a:	4a16      	ldr	r2, [pc, #88]	@ (8017664 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 801760c:	6812      	ldr	r2, [r2, #0]
 801760e:	2114      	movs	r1, #20
 8017610:	fb01 2303 	mla	r3, r1, r3, r2
 8017614:	8a1a      	ldrh	r2, [r3, #16]
 8017616:	8919      	ldrh	r1, [r3, #8]
 8017618:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801761c:	428a      	cmp	r2, r1
 801761e:	db1d      	blt.n	801765c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017620:	8a58      	ldrh	r0, [r3, #18]
 8017622:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8017626:	895b      	ldrh	r3, [r3, #10]
 8017628:	4298      	cmp	r0, r3
 801762a:	bfac      	ite	ge
 801762c:	2000      	movge	r0, #0
 801762e:	2001      	movlt	r0, #1
 8017630:	4770      	bx	lr
 8017632:	490d      	ldr	r1, [pc, #52]	@ (8017668 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8017634:	8809      	ldrh	r1, [r1, #0]
 8017636:	4411      	add	r1, r2
 8017638:	428b      	cmp	r3, r1
 801763a:	da0d      	bge.n	8017658 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801763c:	1a9b      	subs	r3, r3, r2
 801763e:	4a0b      	ldr	r2, [pc, #44]	@ (801766c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8017640:	6812      	ldr	r2, [r2, #0]
 8017642:	210e      	movs	r1, #14
 8017644:	fb01 2303 	mla	r3, r1, r3, r2
 8017648:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801764c:	891a      	ldrh	r2, [r3, #8]
 801764e:	4291      	cmp	r1, r2
 8017650:	db04      	blt.n	801765c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017652:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8017656:	e7e6      	b.n	8017626 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8017658:	2000      	movs	r0, #0
 801765a:	4770      	bx	lr
 801765c:	2001      	movs	r0, #1
 801765e:	4770      	bx	lr
 8017660:	20002fd4 	.word	0x20002fd4
 8017664:	20002fdc 	.word	0x20002fdc
 8017668:	20002fd8 	.word	0x20002fd8
 801766c:	20002fbc 	.word	0x20002fbc

08017670 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8017670:	4a12      	ldr	r2, [pc, #72]	@ (80176bc <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8017672:	8803      	ldrh	r3, [r0, #0]
 8017674:	8811      	ldrh	r1, [r2, #0]
 8017676:	428b      	cmp	r3, r1
 8017678:	d20b      	bcs.n	8017692 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801767a:	4a11      	ldr	r2, [pc, #68]	@ (80176c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801767c:	6812      	ldr	r2, [r2, #0]
 801767e:	b112      	cbz	r2, 8017686 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8017680:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017684:	b9c0      	cbnz	r0, 80176b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8017686:	4a0f      	ldr	r2, [pc, #60]	@ (80176c4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8017688:	6811      	ldr	r1, [r2, #0]
 801768a:	2214      	movs	r2, #20
 801768c:	4353      	muls	r3, r2
 801768e:	58c8      	ldr	r0, [r1, r3]
 8017690:	4770      	bx	lr
 8017692:	4a0d      	ldr	r2, [pc, #52]	@ (80176c8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017694:	8812      	ldrh	r2, [r2, #0]
 8017696:	440a      	add	r2, r1
 8017698:	4293      	cmp	r3, r2
 801769a:	da04      	bge.n	80176a6 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801769c:	4a08      	ldr	r2, [pc, #32]	@ (80176c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801769e:	6812      	ldr	r2, [r2, #0]
 80176a0:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80176a4:	4770      	bx	lr
 80176a6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80176aa:	4293      	cmp	r3, r2
 80176ac:	d103      	bne.n	80176b6 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80176ae:	4b07      	ldr	r3, [pc, #28]	@ (80176cc <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80176b0:	681b      	ldr	r3, [r3, #0]
 80176b2:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80176b4:	4770      	bx	lr
 80176b6:	2000      	movs	r0, #0
 80176b8:	4770      	bx	lr
 80176ba:	bf00      	nop
 80176bc:	20002fd4 	.word	0x20002fd4
 80176c0:	20002fb8 	.word	0x20002fb8
 80176c4:	20002fdc 	.word	0x20002fdc
 80176c8:	20002fd8 	.word	0x20002fd8
 80176cc:	20002f54 	.word	0x20002f54

080176d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80176d0:	4b24      	ldr	r3, [pc, #144]	@ (8017764 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80176d2:	8802      	ldrh	r2, [r0, #0]
 80176d4:	8818      	ldrh	r0, [r3, #0]
 80176d6:	4282      	cmp	r2, r0
 80176d8:	d221      	bcs.n	801771e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80176da:	4b23      	ldr	r3, [pc, #140]	@ (8017768 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80176dc:	6819      	ldr	r1, [r3, #0]
 80176de:	2314      	movs	r3, #20
 80176e0:	fb03 1302 	mla	r3, r3, r2, r1
 80176e4:	6858      	ldr	r0, [r3, #4]
 80176e6:	2800      	cmp	r0, #0
 80176e8:	d03a      	beq.n	8017760 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80176ea:	4920      	ldr	r1, [pc, #128]	@ (801776c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80176ec:	6809      	ldr	r1, [r1, #0]
 80176ee:	2900      	cmp	r1, #0
 80176f0:	d036      	beq.n	8017760 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80176f2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80176f6:	2900      	cmp	r1, #0
 80176f8:	d032      	beq.n	8017760 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80176fa:	891a      	ldrh	r2, [r3, #8]
 80176fc:	8958      	ldrh	r0, [r3, #10]
 80176fe:	4350      	muls	r0, r2
 8017700:	7c5a      	ldrb	r2, [r3, #17]
 8017702:	7cdb      	ldrb	r3, [r3, #19]
 8017704:	0952      	lsrs	r2, r2, #5
 8017706:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801770a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 801770e:	2b0b      	cmp	r3, #11
 8017710:	bf18      	it	ne
 8017712:	0040      	lslne	r0, r0, #1
 8017714:	3003      	adds	r0, #3
 8017716:	f020 0003 	bic.w	r0, r0, #3
 801771a:	4408      	add	r0, r1
 801771c:	4770      	bx	lr
 801771e:	4b14      	ldr	r3, [pc, #80]	@ (8017770 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8017720:	881b      	ldrh	r3, [r3, #0]
 8017722:	4403      	add	r3, r0
 8017724:	429a      	cmp	r2, r3
 8017726:	da1a      	bge.n	801775e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8017728:	4b12      	ldr	r3, [pc, #72]	@ (8017774 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801772a:	681b      	ldr	r3, [r3, #0]
 801772c:	1a10      	subs	r0, r2, r0
 801772e:	210e      	movs	r1, #14
 8017730:	fb01 3000 	mla	r0, r1, r0, r3
 8017734:	7b03      	ldrb	r3, [r0, #12]
 8017736:	f003 031f 	and.w	r3, r3, #31
 801773a:	2b0b      	cmp	r3, #11
 801773c:	d10b      	bne.n	8017756 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801773e:	8903      	ldrh	r3, [r0, #8]
 8017740:	8940      	ldrh	r0, [r0, #10]
 8017742:	4358      	muls	r0, r3
 8017744:	4b09      	ldr	r3, [pc, #36]	@ (801776c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017746:	6819      	ldr	r1, [r3, #0]
 8017748:	3003      	adds	r0, #3
 801774a:	f020 0303 	bic.w	r3, r0, #3
 801774e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017752:	4418      	add	r0, r3
 8017754:	4770      	bx	lr
 8017756:	2b0d      	cmp	r3, #13
 8017758:	d101      	bne.n	801775e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801775a:	300d      	adds	r0, #13
 801775c:	4770      	bx	lr
 801775e:	2000      	movs	r0, #0
 8017760:	4770      	bx	lr
 8017762:	bf00      	nop
 8017764:	20002fd4 	.word	0x20002fd4
 8017768:	20002fdc 	.word	0x20002fdc
 801776c:	20002fb8 	.word	0x20002fb8
 8017770:	20002fd8 	.word	0x20002fd8
 8017774:	20002fbc 	.word	0x20002fbc

08017778 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8017778:	b510      	push	{r4, lr}
 801777a:	4b1f      	ldr	r3, [pc, #124]	@ (80177f8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801777c:	8802      	ldrh	r2, [r0, #0]
 801777e:	881b      	ldrh	r3, [r3, #0]
 8017780:	429a      	cmp	r2, r3
 8017782:	d21a      	bcs.n	80177ba <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8017784:	4b1d      	ldr	r3, [pc, #116]	@ (80177fc <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8017786:	681b      	ldr	r3, [r3, #0]
 8017788:	2114      	movs	r1, #20
 801778a:	fb01 3102 	mla	r1, r1, r2, r3
 801778e:	7c4b      	ldrb	r3, [r1, #17]
 8017790:	0958      	lsrs	r0, r3, #5
 8017792:	7ccb      	ldrb	r3, [r1, #19]
 8017794:	491a      	ldr	r1, [pc, #104]	@ (8017800 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8017796:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801779a:	6809      	ldr	r1, [r1, #0]
 801779c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 80177a0:	b2d8      	uxtb	r0, r3
 80177a2:	b149      	cbz	r1, 80177b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80177a4:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80177a8:	b132      	cbz	r2, 80177b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80177aa:	2b0e      	cmp	r3, #14
 80177ac:	d021      	beq.n	80177f2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80177ae:	280f      	cmp	r0, #15
 80177b0:	d01d      	beq.n	80177ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 80177b2:	2810      	cmp	r0, #16
 80177b4:	bf08      	it	eq
 80177b6:	2002      	moveq	r0, #2
 80177b8:	bd10      	pop	{r4, pc}
 80177ba:	4912      	ldr	r1, [pc, #72]	@ (8017804 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 80177bc:	8809      	ldrh	r1, [r1, #0]
 80177be:	4419      	add	r1, r3
 80177c0:	428a      	cmp	r2, r1
 80177c2:	da09      	bge.n	80177d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80177c4:	1ad3      	subs	r3, r2, r3
 80177c6:	4a10      	ldr	r2, [pc, #64]	@ (8017808 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80177c8:	6812      	ldr	r2, [r2, #0]
 80177ca:	210e      	movs	r1, #14
 80177cc:	fb01 2303 	mla	r3, r1, r3, r2
 80177d0:	7b18      	ldrb	r0, [r3, #12]
 80177d2:	f000 001f 	and.w	r0, r0, #31
 80177d6:	e7ef      	b.n	80177b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80177d8:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80177dc:	429a      	cmp	r2, r3
 80177de:	d108      	bne.n	80177f2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80177e0:	f7f0 fe80 	bl	80084e4 <_ZN8touchgfx3HAL3lcdEv>
 80177e4:	6803      	ldr	r3, [r0, #0]
 80177e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80177ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80177ec:	4718      	bx	r3
 80177ee:	2001      	movs	r0, #1
 80177f0:	e7e2      	b.n	80177b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80177f2:	2000      	movs	r0, #0
 80177f4:	e7e0      	b.n	80177b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80177f6:	bf00      	nop
 80177f8:	20002fd4 	.word	0x20002fd4
 80177fc:	20002fdc 	.word	0x20002fdc
 8017800:	20002fb8 	.word	0x20002fb8
 8017804:	20002fd8 	.word	0x20002fd8
 8017808:	20002fbc 	.word	0x20002fbc

0801780c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801780c:	2010      	movs	r0, #16
 801780e:	4770      	bx	lr

08017810 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017810:	2000      	movs	r0, #0
 8017812:	4770      	bx	lr

08017814 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017814:	4b02      	ldr	r3, [pc, #8]	@ (8017820 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8017816:	8818      	ldrh	r0, [r3, #0]
 8017818:	0040      	lsls	r0, r0, #1
 801781a:	b280      	uxth	r0, r0
 801781c:	4770      	bx	lr
 801781e:	bf00      	nop
 8017820:	20002f4e 	.word	0x20002f4e

08017824 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017824:	2bff      	cmp	r3, #255	@ 0xff
 8017826:	d05e      	beq.n	80178e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8017828:	2a0b      	cmp	r2, #11
 801782a:	d058      	beq.n	80178de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 801782c:	d80e      	bhi.n	801784c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801782e:	2a03      	cmp	r2, #3
 8017830:	d04d      	beq.n	80178ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8017832:	d804      	bhi.n	801783e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8017834:	2a01      	cmp	r2, #1
 8017836:	d04c      	beq.n	80178d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8017838:	d94d      	bls.n	80178d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801783a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 801783c:	e031      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801783e:	2a09      	cmp	r2, #9
 8017840:	d04d      	beq.n	80178de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8017842:	d84a      	bhi.n	80178da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8017844:	2a08      	cmp	r2, #8
 8017846:	d048      	beq.n	80178da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8017848:	2300      	movs	r3, #0
 801784a:	e02a      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801784c:	2a2f      	cmp	r2, #47	@ 0x2f
 801784e:	d02c      	beq.n	80178aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8017850:	d811      	bhi.n	8017876 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8017852:	2a2d      	cmp	r2, #45	@ 0x2d
 8017854:	d018      	beq.n	8017888 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8017856:	d831      	bhi.n	80178bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8017858:	2a2c      	cmp	r2, #44	@ 0x2c
 801785a:	d1f5      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801785c:	684a      	ldr	r2, [r1, #4]
 801785e:	7813      	ldrb	r3, [r2, #0]
 8017860:	7852      	ldrb	r2, [r2, #1]
 8017862:	2a00      	cmp	r2, #0
 8017864:	d1f0      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017866:	2b01      	cmp	r3, #1
 8017868:	d01d      	beq.n	80178a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801786a:	2b00      	cmp	r3, #0
 801786c:	d02d      	beq.n	80178ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801786e:	2b02      	cmp	r3, #2
 8017870:	d1ea      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017872:	68c3      	ldr	r3, [r0, #12]
 8017874:	e015      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017876:	2a31      	cmp	r2, #49	@ 0x31
 8017878:	d004      	beq.n	8017884 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 801787a:	d332      	bcc.n	80178e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 801787c:	2a32      	cmp	r2, #50	@ 0x32
 801787e:	d030      	beq.n	80178e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8017880:	2a33      	cmp	r2, #51	@ 0x33
 8017882:	d1e1      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017884:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8017886:	e00c      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017888:	684a      	ldr	r2, [r1, #4]
 801788a:	7813      	ldrb	r3, [r2, #0]
 801788c:	7852      	ldrb	r2, [r2, #1]
 801788e:	2a00      	cmp	r2, #0
 8017890:	d1da      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017892:	2b01      	cmp	r3, #1
 8017894:	d004      	beq.n	80178a0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8017896:	d30f      	bcc.n	80178b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8017898:	2b02      	cmp	r3, #2
 801789a:	d1d5      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801789c:	6943      	ldr	r3, [r0, #20]
 801789e:	e000      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178a0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80178a2:	4618      	mov	r0, r3
 80178a4:	4770      	bx	lr
 80178a6:	69c3      	ldr	r3, [r0, #28]
 80178a8:	e7fb      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178aa:	684b      	ldr	r3, [r1, #4]
 80178ac:	781a      	ldrb	r2, [r3, #0]
 80178ae:	785b      	ldrb	r3, [r3, #1]
 80178b0:	2b00      	cmp	r3, #0
 80178b2:	d1c9      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178b4:	2a00      	cmp	r2, #0
 80178b6:	d1f4      	bne.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178b8:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80178ba:	e7f2      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178bc:	684b      	ldr	r3, [r1, #4]
 80178be:	781a      	ldrb	r2, [r3, #0]
 80178c0:	785b      	ldrb	r3, [r3, #1]
 80178c2:	2b00      	cmp	r3, #0
 80178c4:	d1c0      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80178c6:	2a00      	cmp	r2, #0
 80178c8:	d1eb      	bne.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178ca:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80178cc:	e7e9      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178ce:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 80178d0:	e7e7      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178d2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 80178d4:	e7e5      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178d6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 80178d8:	e7e3      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178da:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 80178dc:	e7e1      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178de:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 80178e0:	e7df      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178e2:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 80178e4:	e7dd      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178e6:	2a0b      	cmp	r2, #11
 80178e8:	d059      	beq.n	801799e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 80178ea:	d80e      	bhi.n	801790a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 80178ec:	2a03      	cmp	r2, #3
 80178ee:	d050      	beq.n	8017992 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 80178f0:	d804      	bhi.n	80178fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 80178f2:	2a01      	cmp	r2, #1
 80178f4:	d04f      	beq.n	8017996 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 80178f6:	d950      	bls.n	801799a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 80178f8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 80178fa:	e7d2      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80178fc:	2a09      	cmp	r2, #9
 80178fe:	d04e      	beq.n	801799e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8017900:	d801      	bhi.n	8017906 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8017902:	2a08      	cmp	r2, #8
 8017904:	d1a0      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017906:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8017908:	e7cb      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801790a:	2a2f      	cmp	r2, #47	@ 0x2f
 801790c:	d02d      	beq.n	801796a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 801790e:	d811      	bhi.n	8017934 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8017910:	2a2d      	cmp	r2, #45	@ 0x2d
 8017912:	d018      	beq.n	8017946 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8017914:	d833      	bhi.n	801797e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8017916:	2a2c      	cmp	r2, #44	@ 0x2c
 8017918:	d196      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801791a:	684a      	ldr	r2, [r1, #4]
 801791c:	7813      	ldrb	r3, [r2, #0]
 801791e:	7852      	ldrb	r2, [r2, #1]
 8017920:	2a00      	cmp	r2, #0
 8017922:	d191      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017924:	2b01      	cmp	r3, #1
 8017926:	d01e      	beq.n	8017966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017928:	2b00      	cmp	r3, #0
 801792a:	d030      	beq.n	801798e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 801792c:	2b02      	cmp	r3, #2
 801792e:	d18b      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017930:	6903      	ldr	r3, [r0, #16]
 8017932:	e7b6      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017934:	2a31      	cmp	r2, #49	@ 0x31
 8017936:	d004      	beq.n	8017942 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8017938:	d333      	bcc.n	80179a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801793a:	2a32      	cmp	r2, #50	@ 0x32
 801793c:	d031      	beq.n	80179a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801793e:	2a33      	cmp	r2, #51	@ 0x33
 8017940:	d182      	bne.n	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017942:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8017944:	e7ad      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017946:	684a      	ldr	r2, [r1, #4]
 8017948:	7813      	ldrb	r3, [r2, #0]
 801794a:	7852      	ldrb	r2, [r2, #1]
 801794c:	2a00      	cmp	r2, #0
 801794e:	f47f af7b 	bne.w	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017952:	2b01      	cmp	r3, #1
 8017954:	d005      	beq.n	8017962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8017956:	d310      	bcc.n	801797a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8017958:	2b02      	cmp	r3, #2
 801795a:	f47f af75 	bne.w	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801795e:	6983      	ldr	r3, [r0, #24]
 8017960:	e79f      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017962:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8017964:	e79d      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017966:	6a03      	ldr	r3, [r0, #32]
 8017968:	e79b      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801796a:	684b      	ldr	r3, [r1, #4]
 801796c:	781a      	ldrb	r2, [r3, #0]
 801796e:	785b      	ldrb	r3, [r3, #1]
 8017970:	2b00      	cmp	r3, #0
 8017972:	f47f af69 	bne.w	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017976:	2a00      	cmp	r2, #0
 8017978:	d193      	bne.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801797a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 801797c:	e791      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801797e:	684b      	ldr	r3, [r1, #4]
 8017980:	781a      	ldrb	r2, [r3, #0]
 8017982:	785b      	ldrb	r3, [r3, #1]
 8017984:	2b00      	cmp	r3, #0
 8017986:	f47f af5f 	bne.w	8017848 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801798a:	2a00      	cmp	r2, #0
 801798c:	d189      	bne.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801798e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8017990:	e787      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017992:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8017994:	e785      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017996:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8017998:	e783      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801799a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 801799c:	e781      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801799e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 80179a0:	e77f      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80179a2:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 80179a4:	e77d      	b.n	80178a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

080179a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80179a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179aa:	b087      	sub	sp, #28
 80179ac:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80179ae:	9205      	str	r2, [sp, #20]
 80179b0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80179b4:	9202      	str	r2, [sp, #8]
 80179b6:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80179ba:	9101      	str	r1, [sp, #4]
 80179bc:	6841      	ldr	r1, [r0, #4]
 80179be:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80179c2:	fb01 2404 	mla	r4, r1, r4, r2
 80179c6:	6802      	ldr	r2, [r0, #0]
 80179c8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80179cc:	f8de 2000 	ldr.w	r2, [lr]
 80179d0:	9203      	str	r2, [sp, #12]
 80179d2:	f8de 2004 	ldr.w	r2, [lr, #4]
 80179d6:	3204      	adds	r2, #4
 80179d8:	9204      	str	r2, [sp, #16]
 80179da:	9a02      	ldr	r2, [sp, #8]
 80179dc:	43d6      	mvns	r6, r2
 80179de:	b2f6      	uxtb	r6, r6
 80179e0:	9a01      	ldr	r2, [sp, #4]
 80179e2:	2a00      	cmp	r2, #0
 80179e4:	dc03      	bgt.n	80179ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80179e6:	9a05      	ldr	r2, [sp, #20]
 80179e8:	2a00      	cmp	r2, #0
 80179ea:	f340 8129 	ble.w	8017c40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80179ee:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80179f0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80179f4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80179f8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80179fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80179fe:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017a02:	2b00      	cmp	r3, #0
 8017a04:	dd0e      	ble.n	8017a24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017a06:	1408      	asrs	r0, r1, #16
 8017a08:	d405      	bmi.n	8017a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a0a:	4560      	cmp	r0, ip
 8017a0c:	da03      	bge.n	8017a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a0e:	1410      	asrs	r0, r2, #16
 8017a10:	d401      	bmi.n	8017a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a12:	42b8      	cmp	r0, r7
 8017a14:	db07      	blt.n	8017a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017a16:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017a18:	4401      	add	r1, r0
 8017a1a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017a1c:	3b01      	subs	r3, #1
 8017a1e:	4402      	add	r2, r0
 8017a20:	3402      	adds	r4, #2
 8017a22:	e7ee      	b.n	8017a02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017a24:	d071      	beq.n	8017b0a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017a26:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017a28:	1e58      	subs	r0, r3, #1
 8017a2a:	fb05 1500 	mla	r5, r5, r0, r1
 8017a2e:	142d      	asrs	r5, r5, #16
 8017a30:	d45f      	bmi.n	8017af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017a32:	4565      	cmp	r5, ip
 8017a34:	da5d      	bge.n	8017af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017a36:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8017a38:	fb05 2000 	mla	r0, r5, r0, r2
 8017a3c:	1400      	asrs	r0, r0, #16
 8017a3e:	d458      	bmi.n	8017af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017a40:	42b8      	cmp	r0, r7
 8017a42:	da56      	bge.n	8017af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017a44:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8017a48:	4699      	mov	r9, r3
 8017a4a:	46a2      	mov	sl, r4
 8017a4c:	f1b9 0f00 	cmp.w	r9, #0
 8017a50:	dd57      	ble.n	8017b02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017a52:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017a56:	9803      	ldr	r0, [sp, #12]
 8017a58:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8017a5c:	140d      	asrs	r5, r1, #16
 8017a5e:	fb07 000c 	mla	r0, r7, ip, r0
 8017a62:	f109 39ff 	add.w	r9, r9, #4294967295
 8017a66:	5d40      	ldrb	r0, [r0, r5]
 8017a68:	9d04      	ldr	r5, [sp, #16]
 8017a6a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017a6e:	f8ba 5000 	ldrh.w	r5, [sl]
 8017a72:	122f      	asrs	r7, r5, #8
 8017a74:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017a78:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017a7c:	fb17 f706 	smulbb	r7, r7, r6
 8017a80:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017a84:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017a88:	00ed      	lsls	r5, r5, #3
 8017a8a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017a8e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8017a92:	10c7      	asrs	r7, r0, #3
 8017a94:	b2ed      	uxtb	r5, r5
 8017a96:	00c0      	lsls	r0, r0, #3
 8017a98:	fb18 f806 	smulbb	r8, r8, r6
 8017a9c:	fb15 f506 	smulbb	r5, r5, r6
 8017aa0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017aa4:	b2c0      	uxtb	r0, r0
 8017aa6:	fa1f fc8c 	uxth.w	ip, ip
 8017aaa:	fb07 870b 	mla	r7, r7, fp, r8
 8017aae:	fb00 500b 	mla	r0, r0, fp, r5
 8017ab2:	b280      	uxth	r0, r0
 8017ab4:	b2bf      	uxth	r7, r7
 8017ab6:	f10c 0501 	add.w	r5, ip, #1
 8017aba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017abe:	f107 0801 	add.w	r8, r7, #1
 8017ac2:	1c45      	adds	r5, r0, #1
 8017ac4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017ac8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017acc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017ace:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017ad2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017ad6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017ada:	ea45 0c0c 	orr.w	ip, r5, ip
 8017ade:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017ae2:	4401      	add	r1, r0
 8017ae4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017ae6:	ea4c 0c08 	orr.w	ip, ip, r8
 8017aea:	f82a cb02 	strh.w	ip, [sl], #2
 8017aee:	4402      	add	r2, r0
 8017af0:	e7ac      	b.n	8017a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017af2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8017af6:	f04f 0800 	mov.w	r8, #0
 8017afa:	eb03 0008 	add.w	r0, r3, r8
 8017afe:	2800      	cmp	r0, #0
 8017b00:	dc41      	bgt.n	8017b86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017b02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017b06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017b0a:	9b01      	ldr	r3, [sp, #4]
 8017b0c:	2b00      	cmp	r3, #0
 8017b0e:	f340 8097 	ble.w	8017c40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017b12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017b16:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017b1a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017b1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017b20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017b24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017b28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017b2c:	eef0 6a62 	vmov.f32	s13, s5
 8017b30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017b34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017b3c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8017b40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017b44:	eef0 6a43 	vmov.f32	s13, s6
 8017b48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017b4c:	ee12 2a90 	vmov	r2, s5
 8017b50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017b54:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b58:	ee13 2a10 	vmov	r2, s6
 8017b5c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017b5e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017b60:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b64:	9314      	str	r3, [sp, #80]	@ 0x50
 8017b66:	9b01      	ldr	r3, [sp, #4]
 8017b68:	9a05      	ldr	r2, [sp, #20]
 8017b6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b6e:	3b01      	subs	r3, #1
 8017b70:	9301      	str	r3, [sp, #4]
 8017b72:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8017b76:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017b78:	eeb0 3a67 	vmov.f32	s6, s15
 8017b7c:	bf08      	it	eq
 8017b7e:	4613      	moveq	r3, r2
 8017b80:	eef0 2a47 	vmov.f32	s5, s14
 8017b84:	e72c      	b.n	80179e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017b86:	140f      	asrs	r7, r1, #16
 8017b88:	d453      	bmi.n	8017c32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017b8a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017b8e:	42bd      	cmp	r5, r7
 8017b90:	dd4f      	ble.n	8017c32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017b92:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017b96:	d44c      	bmi.n	8017c32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017b98:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017b9c:	4560      	cmp	r0, ip
 8017b9e:	dd48      	ble.n	8017c32 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017ba0:	9803      	ldr	r0, [sp, #12]
 8017ba2:	b22d      	sxth	r5, r5
 8017ba4:	fb0c 0505 	mla	r5, ip, r5, r0
 8017ba8:	5de8      	ldrb	r0, [r5, r7]
 8017baa:	9d04      	ldr	r5, [sp, #16]
 8017bac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017bb0:	f06f 0501 	mvn.w	r5, #1
 8017bb4:	fb05 fb08 	mul.w	fp, r5, r8
 8017bb8:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017bbc:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017bc0:	122f      	asrs	r7, r5, #8
 8017bc2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017bc6:	fb17 f706 	smulbb	r7, r7, r6
 8017bca:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017bce:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017bd2:	00ed      	lsls	r5, r5, #3
 8017bd4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017bd8:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017bdc:	10c7      	asrs	r7, r0, #3
 8017bde:	b2ed      	uxtb	r5, r5
 8017be0:	00c0      	lsls	r0, r0, #3
 8017be2:	fb19 f906 	smulbb	r9, r9, r6
 8017be6:	fb15 f506 	smulbb	r5, r5, r6
 8017bea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017bee:	b2c0      	uxtb	r0, r0
 8017bf0:	fa1f fc8c 	uxth.w	ip, ip
 8017bf4:	fb07 970a 	mla	r7, r7, sl, r9
 8017bf8:	fb00 500a 	mla	r0, r0, sl, r5
 8017bfc:	b2bf      	uxth	r7, r7
 8017bfe:	b280      	uxth	r0, r0
 8017c00:	f10c 0501 	add.w	r5, ip, #1
 8017c04:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017c08:	f107 0901 	add.w	r9, r7, #1
 8017c0c:	1c45      	adds	r5, r0, #1
 8017c0e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017c12:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017c16:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017c1a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017c1e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017c22:	ea45 0c0c 	orr.w	ip, r5, ip
 8017c26:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017c2a:	ea4c 0c09 	orr.w	ip, ip, r9
 8017c2e:	f824 c00b 	strh.w	ip, [r4, fp]
 8017c32:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017c34:	4401      	add	r1, r0
 8017c36:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017c38:	f108 38ff 	add.w	r8, r8, #4294967295
 8017c3c:	4402      	add	r2, r0
 8017c3e:	e75c      	b.n	8017afa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8017c40:	b007      	add	sp, #28
 8017c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017c46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017c46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c4a:	b085      	sub	sp, #20
 8017c4c:	4693      	mov	fp, r2
 8017c4e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017c50:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8017c52:	6870      	ldr	r0, [r6, #4]
 8017c54:	9100      	str	r1, [sp, #0]
 8017c56:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017c5a:	fb00 2404 	mla	r4, r0, r4, r2
 8017c5e:	6832      	ldr	r2, [r6, #0]
 8017c60:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017c64:	682a      	ldr	r2, [r5, #0]
 8017c66:	9201      	str	r2, [sp, #4]
 8017c68:	686a      	ldr	r2, [r5, #4]
 8017c6a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8017c6e:	3204      	adds	r2, #4
 8017c70:	9202      	str	r2, [sp, #8]
 8017c72:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017c76:	9a00      	ldr	r2, [sp, #0]
 8017c78:	2a00      	cmp	r2, #0
 8017c7a:	dc03      	bgt.n	8017c84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017c7c:	f1bb 0f00 	cmp.w	fp, #0
 8017c80:	f340 80a0 	ble.w	8017dc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017c84:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017c86:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017c8a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017c8e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017c92:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017c94:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017c98:	2b00      	cmp	r3, #0
 8017c9a:	dd0c      	ble.n	8017cb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017c9c:	1406      	asrs	r6, r0, #16
 8017c9e:	d405      	bmi.n	8017cac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017ca0:	454e      	cmp	r6, r9
 8017ca2:	da03      	bge.n	8017cac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017ca4:	1416      	asrs	r6, r2, #16
 8017ca6:	d401      	bmi.n	8017cac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017ca8:	4546      	cmp	r6, r8
 8017caa:	db05      	blt.n	8017cb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017cac:	4470      	add	r0, lr
 8017cae:	4462      	add	r2, ip
 8017cb0:	3b01      	subs	r3, #1
 8017cb2:	3402      	adds	r4, #2
 8017cb4:	e7f0      	b.n	8017c98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017cb6:	d00f      	beq.n	8017cd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017cb8:	1e5e      	subs	r6, r3, #1
 8017cba:	fb0e 0706 	mla	r7, lr, r6, r0
 8017cbe:	143f      	asrs	r7, r7, #16
 8017cc0:	d541      	bpl.n	8017d46 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8017cc2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017cc6:	4698      	mov	r8, r3
 8017cc8:	9603      	str	r6, [sp, #12]
 8017cca:	f1b8 0f00 	cmp.w	r8, #0
 8017cce:	dc59      	bgt.n	8017d84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017cd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017cd4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017cd8:	9b00      	ldr	r3, [sp, #0]
 8017cda:	2b00      	cmp	r3, #0
 8017cdc:	dd72      	ble.n	8017dc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017cde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017ce2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017ce6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017cea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017cec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017cf0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017cf4:	eeb0 6a62 	vmov.f32	s12, s5
 8017cf8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017cfc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017d04:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8017d08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017d0c:	eeb0 6a43 	vmov.f32	s12, s6
 8017d10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017d14:	ee12 2a90 	vmov	r2, s5
 8017d18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017d1c:	fb92 fef3 	sdiv	lr, r2, r3
 8017d20:	ee13 2a10 	vmov	r2, s6
 8017d24:	fb92 fcf3 	sdiv	ip, r2, r3
 8017d28:	9b00      	ldr	r3, [sp, #0]
 8017d2a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d2e:	3b01      	subs	r3, #1
 8017d30:	9300      	str	r3, [sp, #0]
 8017d32:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8017d36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017d38:	eeb0 3a67 	vmov.f32	s6, s15
 8017d3c:	bf08      	it	eq
 8017d3e:	465b      	moveq	r3, fp
 8017d40:	eef0 2a47 	vmov.f32	s5, s14
 8017d44:	e797      	b.n	8017c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017d46:	454f      	cmp	r7, r9
 8017d48:	dabb      	bge.n	8017cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017d4a:	fb0c 2606 	mla	r6, ip, r6, r2
 8017d4e:	1436      	asrs	r6, r6, #16
 8017d50:	d4b7      	bmi.n	8017cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017d52:	4546      	cmp	r6, r8
 8017d54:	dab5      	bge.n	8017cc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017d56:	461e      	mov	r6, r3
 8017d58:	46a0      	mov	r8, r4
 8017d5a:	2e00      	cmp	r6, #0
 8017d5c:	ddb8      	ble.n	8017cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017d5e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017d62:	9901      	ldr	r1, [sp, #4]
 8017d64:	1417      	asrs	r7, r2, #16
 8017d66:	ea4f 4920 	mov.w	r9, r0, asr #16
 8017d6a:	fb0a 1707 	mla	r7, sl, r7, r1
 8017d6e:	9902      	ldr	r1, [sp, #8]
 8017d70:	f817 7009 	ldrb.w	r7, [r7, r9]
 8017d74:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017d78:	f828 7b02 	strh.w	r7, [r8], #2
 8017d7c:	4470      	add	r0, lr
 8017d7e:	4462      	add	r2, ip
 8017d80:	3e01      	subs	r6, #1
 8017d82:	e7ea      	b.n	8017d5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8017d84:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017d88:	d417      	bmi.n	8017dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017d8a:	68ae      	ldr	r6, [r5, #8]
 8017d8c:	454e      	cmp	r6, r9
 8017d8e:	dd14      	ble.n	8017dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017d90:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8017d94:	d411      	bmi.n	8017dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017d96:	68ef      	ldr	r7, [r5, #12]
 8017d98:	4557      	cmp	r7, sl
 8017d9a:	dd0e      	ble.n	8017dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017d9c:	9f01      	ldr	r7, [sp, #4]
 8017d9e:	b236      	sxth	r6, r6
 8017da0:	fb0a 7606 	mla	r6, sl, r6, r7
 8017da4:	9f02      	ldr	r7, [sp, #8]
 8017da6:	f816 6009 	ldrb.w	r6, [r6, r9]
 8017daa:	f06f 0101 	mvn.w	r1, #1
 8017dae:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017db2:	fb01 f608 	mul.w	r6, r1, r8
 8017db6:	9903      	ldr	r1, [sp, #12]
 8017db8:	538f      	strh	r7, [r1, r6]
 8017dba:	4470      	add	r0, lr
 8017dbc:	4462      	add	r2, ip
 8017dbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8017dc2:	e782      	b.n	8017cca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017dc4:	b005      	add	sp, #20
 8017dc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017dca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017dca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dce:	b087      	sub	sp, #28
 8017dd0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017dd2:	9205      	str	r2, [sp, #20]
 8017dd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017dd8:	9203      	str	r2, [sp, #12]
 8017dda:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8017dde:	9102      	str	r1, [sp, #8]
 8017de0:	6861      	ldr	r1, [r4, #4]
 8017de2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8017de6:	fb01 2000 	mla	r0, r1, r0, r2
 8017dea:	6822      	ldr	r2, [r4, #0]
 8017dec:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8017df0:	9200      	str	r2, [sp, #0]
 8017df2:	f8dc 2000 	ldr.w	r2, [ip]
 8017df6:	9204      	str	r2, [sp, #16]
 8017df8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017dfc:	3204      	adds	r2, #4
 8017dfe:	9201      	str	r2, [sp, #4]
 8017e00:	9a03      	ldr	r2, [sp, #12]
 8017e02:	43d5      	mvns	r5, r2
 8017e04:	b2ed      	uxtb	r5, r5
 8017e06:	9a02      	ldr	r2, [sp, #8]
 8017e08:	2a00      	cmp	r2, #0
 8017e0a:	dc03      	bgt.n	8017e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017e0c:	9a05      	ldr	r2, [sp, #20]
 8017e0e:	2a00      	cmp	r2, #0
 8017e10:	f340 812c 	ble.w	801806c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017e14:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017e16:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8017e1a:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8017e1e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017e22:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017e24:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017e28:	2b00      	cmp	r3, #0
 8017e2a:	dd10      	ble.n	8017e4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017e2c:	140c      	asrs	r4, r1, #16
 8017e2e:	d405      	bmi.n	8017e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e30:	4574      	cmp	r4, lr
 8017e32:	da03      	bge.n	8017e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e34:	1414      	asrs	r4, r2, #16
 8017e36:	d401      	bmi.n	8017e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e38:	42bc      	cmp	r4, r7
 8017e3a:	db09      	blt.n	8017e50 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017e3c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017e3e:	9800      	ldr	r0, [sp, #0]
 8017e40:	4421      	add	r1, r4
 8017e42:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017e44:	3002      	adds	r0, #2
 8017e46:	4422      	add	r2, r4
 8017e48:	3b01      	subs	r3, #1
 8017e4a:	9000      	str	r0, [sp, #0]
 8017e4c:	e7ec      	b.n	8017e28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017e4e:	d071      	beq.n	8017f34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8017e50:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017e52:	1e5c      	subs	r4, r3, #1
 8017e54:	fb06 1604 	mla	r6, r6, r4, r1
 8017e58:	1436      	asrs	r6, r6, #16
 8017e5a:	d45d      	bmi.n	8017f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017e5c:	4576      	cmp	r6, lr
 8017e5e:	da5b      	bge.n	8017f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017e60:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8017e62:	fb06 2404 	mla	r4, r6, r4, r2
 8017e66:	1424      	asrs	r4, r4, #16
 8017e68:	d456      	bmi.n	8017f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017e6a:	42bc      	cmp	r4, r7
 8017e6c:	da54      	bge.n	8017f18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017e6e:	f8dd 9000 	ldr.w	r9, [sp]
 8017e72:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8017e76:	4698      	mov	r8, r3
 8017e78:	f1b8 0f00 	cmp.w	r8, #0
 8017e7c:	dd54      	ble.n	8017f28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8017e7e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017e82:	9804      	ldr	r0, [sp, #16]
 8017e84:	1414      	asrs	r4, r2, #16
 8017e86:	fb07 0404 	mla	r4, r7, r4, r0
 8017e8a:	140e      	asrs	r6, r1, #16
 8017e8c:	9801      	ldr	r0, [sp, #4]
 8017e8e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8017e92:	f8b9 4000 	ldrh.w	r4, [r9]
 8017e96:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017e9a:	eb00 0b0e 	add.w	fp, r0, lr
 8017e9e:	1227      	asrs	r7, r4, #8
 8017ea0:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017ea4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017ea8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8017eac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017eae:	fb16 f60a 	smulbb	r6, r6, sl
 8017eb2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017eb6:	fb07 6705 	mla	r7, r7, r5, r6
 8017eba:	10e6      	asrs	r6, r4, #3
 8017ebc:	00e4      	lsls	r4, r4, #3
 8017ebe:	b2e4      	uxtb	r4, r4
 8017ec0:	fb1b fb0a 	smulbb	fp, fp, sl
 8017ec4:	fb14 f405 	smulbb	r4, r4, r5
 8017ec8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017ecc:	b2bf      	uxth	r7, r7
 8017ece:	fb06 b605 	mla	r6, r6, r5, fp
 8017ed2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8017ed6:	b2b6      	uxth	r6, r6
 8017ed8:	fa1f fe8e 	uxth.w	lr, lr
 8017edc:	1c7c      	adds	r4, r7, #1
 8017ede:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017ee2:	f106 0b01 	add.w	fp, r6, #1
 8017ee6:	f10e 0401 	add.w	r4, lr, #1
 8017eea:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8017eee:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017ef2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017ef6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017efa:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017efe:	4327      	orrs	r7, r4
 8017f00:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017f04:	4401      	add	r1, r0
 8017f06:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017f08:	ea47 070b 	orr.w	r7, r7, fp
 8017f0c:	f829 7b02 	strh.w	r7, [r9], #2
 8017f10:	4402      	add	r2, r0
 8017f12:	f108 38ff 	add.w	r8, r8, #4294967295
 8017f16:	e7af      	b.n	8017e78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8017f18:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8017f1c:	f04f 0e00 	mov.w	lr, #0
 8017f20:	eb03 040e 	add.w	r4, r3, lr
 8017f24:	2c00      	cmp	r4, #0
 8017f26:	dc43      	bgt.n	8017fb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017f28:	9a00      	ldr	r2, [sp, #0]
 8017f2a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017f2e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017f32:	9300      	str	r3, [sp, #0]
 8017f34:	9b02      	ldr	r3, [sp, #8]
 8017f36:	2b00      	cmp	r3, #0
 8017f38:	f340 8098 	ble.w	801806c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017f3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017f40:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017f44:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017f48:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017f4a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017f4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017f52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017f56:	eef0 6a62 	vmov.f32	s13, s5
 8017f5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017f5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017f62:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017f66:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8017f6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017f6e:	eef0 6a43 	vmov.f32	s13, s6
 8017f72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017f76:	ee12 2a90 	vmov	r2, s5
 8017f7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017f7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f82:	ee13 2a10 	vmov	r2, s6
 8017f86:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017f88:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017f8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8017f8e:	9314      	str	r3, [sp, #80]	@ 0x50
 8017f90:	9b02      	ldr	r3, [sp, #8]
 8017f92:	9a05      	ldr	r2, [sp, #20]
 8017f94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017f98:	3b01      	subs	r3, #1
 8017f9a:	9302      	str	r3, [sp, #8]
 8017f9c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8017fa0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017fa2:	eeb0 3a67 	vmov.f32	s6, s15
 8017fa6:	bf08      	it	eq
 8017fa8:	4613      	moveq	r3, r2
 8017faa:	eef0 2a47 	vmov.f32	s5, s14
 8017fae:	e72a      	b.n	8017e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017fb0:	140f      	asrs	r7, r1, #16
 8017fb2:	d454      	bmi.n	801805e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017fb4:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8017fb8:	42be      	cmp	r6, r7
 8017fba:	dd50      	ble.n	801805e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017fbc:	ea5f 4822 	movs.w	r8, r2, asr #16
 8017fc0:	d44d      	bmi.n	801805e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017fc2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8017fc6:	4544      	cmp	r4, r8
 8017fc8:	dd49      	ble.n	801805e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017fca:	9c04      	ldr	r4, [sp, #16]
 8017fcc:	b236      	sxth	r6, r6
 8017fce:	fb08 4606 	mla	r6, r8, r6, r4
 8017fd2:	f06f 0001 	mvn.w	r0, #1
 8017fd6:	f816 8007 	ldrb.w	r8, [r6, r7]
 8017fda:	9c01      	ldr	r4, [sp, #4]
 8017fdc:	fb00 fa0e 	mul.w	sl, r0, lr
 8017fe0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017fe4:	9800      	ldr	r0, [sp, #0]
 8017fe6:	eb04 0b08 	add.w	fp, r4, r8
 8017fea:	f830 400a 	ldrh.w	r4, [r0, sl]
 8017fee:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017ff2:	9801      	ldr	r0, [sp, #4]
 8017ff4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017ff8:	f810 8008 	ldrb.w	r8, [r0, r8]
 8017ffc:	9800      	ldr	r0, [sp, #0]
 8017ffe:	1227      	asrs	r7, r4, #8
 8018000:	fb16 f609 	smulbb	r6, r6, r9
 8018004:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018008:	fb07 6705 	mla	r7, r7, r5, r6
 801800c:	10e6      	asrs	r6, r4, #3
 801800e:	00e4      	lsls	r4, r4, #3
 8018010:	b2e4      	uxtb	r4, r4
 8018012:	fb1b fb09 	smulbb	fp, fp, r9
 8018016:	fb14 f405 	smulbb	r4, r4, r5
 801801a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801801e:	b2bf      	uxth	r7, r7
 8018020:	fb06 b605 	mla	r6, r6, r5, fp
 8018024:	fb08 4809 	mla	r8, r8, r9, r4
 8018028:	b2b6      	uxth	r6, r6
 801802a:	fa1f f888 	uxth.w	r8, r8
 801802e:	1c7c      	adds	r4, r7, #1
 8018030:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018034:	f106 0b01 	add.w	fp, r6, #1
 8018038:	f108 0401 	add.w	r4, r8, #1
 801803c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018040:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018044:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018048:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801804c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018050:	4327      	orrs	r7, r4
 8018052:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018056:	ea47 070b 	orr.w	r7, r7, fp
 801805a:	f820 700a 	strh.w	r7, [r0, sl]
 801805e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018060:	4401      	add	r1, r0
 8018062:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8018064:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018068:	4402      	add	r2, r0
 801806a:	e759      	b.n	8017f20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801806c:	b007      	add	sp, #28
 801806e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018074 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018078:	b085      	sub	sp, #20
 801807a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801807e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018080:	9203      	str	r2, [sp, #12]
 8018082:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018086:	6870      	ldr	r0, [r6, #4]
 8018088:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801808a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801808e:	686f      	ldr	r7, [r5, #4]
 8018090:	9101      	str	r1, [sp, #4]
 8018092:	fb00 2404 	mla	r4, r0, r4, r2
 8018096:	6832      	ldr	r2, [r6, #0]
 8018098:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801809c:	682a      	ldr	r2, [r5, #0]
 801809e:	9202      	str	r2, [sp, #8]
 80180a0:	3704      	adds	r7, #4
 80180a2:	9a01      	ldr	r2, [sp, #4]
 80180a4:	2a00      	cmp	r2, #0
 80180a6:	dc03      	bgt.n	80180b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80180a8:	9a03      	ldr	r2, [sp, #12]
 80180aa:	2a00      	cmp	r2, #0
 80180ac:	f340 80cc 	ble.w	8018248 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80180b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80180b2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80180b6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80180ba:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80180be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80180c0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80180c4:	2b00      	cmp	r3, #0
 80180c6:	dd0d      	ble.n	80180e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80180c8:	1406      	asrs	r6, r0, #16
 80180ca:	d405      	bmi.n	80180d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80180cc:	454e      	cmp	r6, r9
 80180ce:	da03      	bge.n	80180d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80180d0:	1416      	asrs	r6, r2, #16
 80180d2:	d401      	bmi.n	80180d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80180d4:	4546      	cmp	r6, r8
 80180d6:	db06      	blt.n	80180e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80180d8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80180da:	4460      	add	r0, ip
 80180dc:	4432      	add	r2, r6
 80180de:	3b01      	subs	r3, #1
 80180e0:	3402      	adds	r4, #2
 80180e2:	e7ef      	b.n	80180c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80180e4:	d00f      	beq.n	8018106 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80180e6:	1e5e      	subs	r6, r3, #1
 80180e8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80180ec:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80180f0:	d543      	bpl.n	801817a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80180f2:	4698      	mov	r8, r3
 80180f4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80180f8:	f1b8 0f00 	cmp.w	r8, #0
 80180fc:	dc71      	bgt.n	80181e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80180fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018102:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018106:	9b01      	ldr	r3, [sp, #4]
 8018108:	2b00      	cmp	r3, #0
 801810a:	f340 809d 	ble.w	8018248 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801810e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018112:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018116:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801811a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801811c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018120:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018124:	eeb0 6a62 	vmov.f32	s12, s5
 8018128:	ee61 7a27 	vmul.f32	s15, s2, s15
 801812c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018130:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018134:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018138:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801813c:	eeb0 6a43 	vmov.f32	s12, s6
 8018140:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018144:	ee12 2a90 	vmov	r2, s5
 8018148:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801814c:	fb92 fcf3 	sdiv	ip, r2, r3
 8018150:	ee13 2a10 	vmov	r2, s6
 8018154:	fb92 f3f3 	sdiv	r3, r2, r3
 8018158:	9312      	str	r3, [sp, #72]	@ 0x48
 801815a:	9b01      	ldr	r3, [sp, #4]
 801815c:	9a03      	ldr	r2, [sp, #12]
 801815e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018162:	3b01      	subs	r3, #1
 8018164:	9301      	str	r3, [sp, #4]
 8018166:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801816a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801816c:	eeb0 3a67 	vmov.f32	s6, s15
 8018170:	bf08      	it	eq
 8018172:	4613      	moveq	r3, r2
 8018174:	eef0 2a47 	vmov.f32	s5, s14
 8018178:	e793      	b.n	80180a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801817a:	45ce      	cmp	lr, r9
 801817c:	dab9      	bge.n	80180f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801817e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018180:	fb01 2606 	mla	r6, r1, r6, r2
 8018184:	1436      	asrs	r6, r6, #16
 8018186:	d4b4      	bmi.n	80180f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018188:	4546      	cmp	r6, r8
 801818a:	dab2      	bge.n	80180f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801818c:	4698      	mov	r8, r3
 801818e:	46a2      	mov	sl, r4
 8018190:	f1b8 0f00 	cmp.w	r8, #0
 8018194:	ddb3      	ble.n	80180fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018196:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801819a:	9902      	ldr	r1, [sp, #8]
 801819c:	1416      	asrs	r6, r2, #16
 801819e:	fb09 1606 	mla	r6, r9, r6, r1
 80181a2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80181a6:	492a      	ldr	r1, [pc, #168]	@ (8018250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80181a8:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80181ac:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80181b0:	eb07 0b0e 	add.w	fp, r7, lr
 80181b4:	4460      	add	r0, ip
 80181b6:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80181ba:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80181be:	00f6      	lsls	r6, r6, #3
 80181c0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80181c4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80181c8:	ea49 0606 	orr.w	r6, r9, r6
 80181cc:	f817 900e 	ldrb.w	r9, [r7, lr]
 80181d0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80181d2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80181d6:	f82a 6b02 	strh.w	r6, [sl], #2
 80181da:	440a      	add	r2, r1
 80181dc:	f108 38ff 	add.w	r8, r8, #4294967295
 80181e0:	e7d6      	b.n	8018190 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80181e2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80181e6:	d429      	bmi.n	801823c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80181e8:	68ae      	ldr	r6, [r5, #8]
 80181ea:	454e      	cmp	r6, r9
 80181ec:	dd26      	ble.n	801823c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80181ee:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80181f2:	d423      	bmi.n	801823c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80181f4:	68e9      	ldr	r1, [r5, #12]
 80181f6:	4559      	cmp	r1, fp
 80181f8:	dd20      	ble.n	801823c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80181fa:	9902      	ldr	r1, [sp, #8]
 80181fc:	fa0f fe86 	sxth.w	lr, r6
 8018200:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8018204:	f06f 0101 	mvn.w	r1, #1
 8018208:	f81e e009 	ldrb.w	lr, [lr, r9]
 801820c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018210:	eb07 060e 	add.w	r6, r7, lr
 8018214:	fb01 f908 	mul.w	r9, r1, r8
 8018218:	f896 b002 	ldrb.w	fp, [r6, #2]
 801821c:	7876      	ldrb	r6, [r6, #1]
 801821e:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8018222:	00f6      	lsls	r6, r6, #3
 8018224:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8018228:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801822c:	ea4b 0606 	orr.w	r6, fp, r6
 8018230:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8018234:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8018238:	f82a 6009 	strh.w	r6, [sl, r9]
 801823c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801823e:	4460      	add	r0, ip
 8018240:	440a      	add	r2, r1
 8018242:	f108 38ff 	add.w	r8, r8, #4294967295
 8018246:	e757      	b.n	80180f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018248:	b005      	add	sp, #20
 801824a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801824e:	bf00      	nop
 8018250:	fffff800 	.word	0xfffff800

08018254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018258:	b087      	sub	sp, #28
 801825a:	468b      	mov	fp, r1
 801825c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801825e:	9204      	str	r2, [sp, #16]
 8018260:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018264:	9205      	str	r2, [sp, #20]
 8018266:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801826a:	6841      	ldr	r1, [r0, #4]
 801826c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8018270:	fb01 2404 	mla	r4, r1, r4, r2
 8018274:	6802      	ldr	r2, [r0, #0]
 8018276:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801827a:	f8dc 2000 	ldr.w	r2, [ip]
 801827e:	9201      	str	r2, [sp, #4]
 8018280:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018284:	3204      	adds	r2, #4
 8018286:	9202      	str	r2, [sp, #8]
 8018288:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801828c:	f1bb 0f00 	cmp.w	fp, #0
 8018290:	dc03      	bgt.n	801829a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018292:	9a04      	ldr	r2, [sp, #16]
 8018294:	2a00      	cmp	r2, #0
 8018296:	f340 8138 	ble.w	801850a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801829a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801829c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80182a0:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80182a4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80182a8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80182aa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80182ae:	2b00      	cmp	r3, #0
 80182b0:	dd0e      	ble.n	80182d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80182b2:	1402      	asrs	r2, r0, #16
 80182b4:	d405      	bmi.n	80182c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80182b6:	42ba      	cmp	r2, r7
 80182b8:	da03      	bge.n	80182c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80182ba:	140a      	asrs	r2, r1, #16
 80182bc:	d401      	bmi.n	80182c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80182be:	42b2      	cmp	r2, r6
 80182c0:	db07      	blt.n	80182d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80182c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80182c4:	4410      	add	r0, r2
 80182c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80182c8:	3b01      	subs	r3, #1
 80182ca:	4411      	add	r1, r2
 80182cc:	3402      	adds	r4, #2
 80182ce:	e7ee      	b.n	80182ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80182d0:	d019      	beq.n	8018306 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80182d2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80182d4:	1e5a      	subs	r2, r3, #1
 80182d6:	fb05 0502 	mla	r5, r5, r2, r0
 80182da:	142d      	asrs	r5, r5, #16
 80182dc:	d409      	bmi.n	80182f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80182de:	42bd      	cmp	r5, r7
 80182e0:	da07      	bge.n	80182f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80182e2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80182e4:	fb05 1202 	mla	r2, r5, r2, r1
 80182e8:	1412      	asrs	r2, r2, #16
 80182ea:	d402      	bmi.n	80182f2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80182ec:	42b2      	cmp	r2, r6
 80182ee:	f2c0 80ac 	blt.w	801844a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80182f2:	f04f 0e00 	mov.w	lr, #0
 80182f6:	eb03 020e 	add.w	r2, r3, lr
 80182fa:	2a00      	cmp	r2, #0
 80182fc:	dc3e      	bgt.n	801837c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80182fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018302:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018306:	f1bb 0f00 	cmp.w	fp, #0
 801830a:	f340 80fe 	ble.w	801850a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801830e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018312:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018316:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801831a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801831c:	f1bb 0b01 	subs.w	fp, fp, #1
 8018320:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018324:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018328:	eeb0 6a62 	vmov.f32	s12, s5
 801832c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018330:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018334:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018338:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801833c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018340:	eeb0 6a43 	vmov.f32	s12, s6
 8018344:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018348:	ee12 2a90 	vmov	r2, s5
 801834c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018350:	fb92 f3f3 	sdiv	r3, r2, r3
 8018354:	ee13 2a10 	vmov	r2, s6
 8018358:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801835c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801835e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018360:	fb92 f3f3 	sdiv	r3, r2, r3
 8018364:	9a04      	ldr	r2, [sp, #16]
 8018366:	9314      	str	r3, [sp, #80]	@ 0x50
 8018368:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801836c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801836e:	eeb0 3a67 	vmov.f32	s6, s15
 8018372:	bf08      	it	eq
 8018374:	4613      	moveq	r3, r2
 8018376:	eef0 2a47 	vmov.f32	s5, s14
 801837a:	e787      	b.n	801828c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801837c:	1406      	asrs	r6, r0, #16
 801837e:	d45d      	bmi.n	801843c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018380:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018384:	42b5      	cmp	r5, r6
 8018386:	dd59      	ble.n	801843c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018388:	140f      	asrs	r7, r1, #16
 801838a:	d457      	bmi.n	801843c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801838c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018390:	42ba      	cmp	r2, r7
 8018392:	dd53      	ble.n	801843c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018394:	9a01      	ldr	r2, [sp, #4]
 8018396:	b22d      	sxth	r5, r5
 8018398:	fb07 2505 	mla	r5, r7, r5, r2
 801839c:	5daa      	ldrb	r2, [r5, r6]
 801839e:	9d02      	ldr	r5, [sp, #8]
 80183a0:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80183a4:	0e2e      	lsrs	r6, r5, #24
 80183a6:	d049      	beq.n	801843c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80183a8:	f06f 0201 	mvn.w	r2, #1
 80183ac:	fb02 f20e 	mul.w	r2, r2, lr
 80183b0:	9203      	str	r2, [sp, #12]
 80183b2:	f834 8002 	ldrh.w	r8, [r4, r2]
 80183b6:	9a05      	ldr	r2, [sp, #20]
 80183b8:	4356      	muls	r6, r2
 80183ba:	1c72      	adds	r2, r6, #1
 80183bc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80183c0:	1212      	asrs	r2, r2, #8
 80183c2:	fa1f f982 	uxth.w	r9, r2
 80183c6:	ea4f 2728 	mov.w	r7, r8, asr #8
 80183ca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80183ce:	43d2      	mvns	r2, r2
 80183d0:	b2d2      	uxtb	r2, r2
 80183d2:	fb16 f609 	smulbb	r6, r6, r9
 80183d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80183da:	fb07 6702 	mla	r7, r7, r2, r6
 80183de:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80183e2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80183e6:	b2ed      	uxtb	r5, r5
 80183e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80183ec:	fa5f f888 	uxtb.w	r8, r8
 80183f0:	fb15 f509 	smulbb	r5, r5, r9
 80183f4:	fb08 5502 	mla	r5, r8, r2, r5
 80183f8:	b2bf      	uxth	r7, r7
 80183fa:	fb1a fa09 	smulbb	sl, sl, r9
 80183fe:	b2ad      	uxth	r5, r5
 8018400:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018404:	fb06 a602 	mla	r6, r6, r2, sl
 8018408:	1c7a      	adds	r2, r7, #1
 801840a:	f105 0a01 	add.w	sl, r5, #1
 801840e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018412:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018416:	b2b6      	uxth	r6, r6
 8018418:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801841c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018420:	ea4a 0707 	orr.w	r7, sl, r7
 8018424:	f106 0a01 	add.w	sl, r6, #1
 8018428:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801842c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018430:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018434:	9a03      	ldr	r2, [sp, #12]
 8018436:	ea47 070a 	orr.w	r7, r7, sl
 801843a:	52a7      	strh	r7, [r4, r2]
 801843c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801843e:	4410      	add	r0, r2
 8018440:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018442:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018446:	4411      	add	r1, r2
 8018448:	e755      	b.n	80182f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801844a:	f04f 0800 	mov.w	r8, #0
 801844e:	eba3 0208 	sub.w	r2, r3, r8
 8018452:	2a00      	cmp	r2, #0
 8018454:	f77f af53 	ble.w	80182fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018458:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801845c:	9f01      	ldr	r7, [sp, #4]
 801845e:	140a      	asrs	r2, r1, #16
 8018460:	1405      	asrs	r5, r0, #16
 8018462:	fb06 7202 	mla	r2, r6, r2, r7
 8018466:	5d52      	ldrb	r2, [r2, r5]
 8018468:	9d02      	ldr	r5, [sp, #8]
 801846a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801846e:	0e2e      	lsrs	r6, r5, #24
 8018470:	d044      	beq.n	80184fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018472:	9a05      	ldr	r2, [sp, #20]
 8018474:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018478:	4356      	muls	r6, r2
 801847a:	1c72      	adds	r2, r6, #1
 801847c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018480:	1212      	asrs	r2, r2, #8
 8018482:	fa1f f982 	uxth.w	r9, r2
 8018486:	ea4f 272e 	mov.w	r7, lr, asr #8
 801848a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801848e:	43d2      	mvns	r2, r2
 8018490:	b2d2      	uxtb	r2, r2
 8018492:	fb16 f609 	smulbb	r6, r6, r9
 8018496:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801849a:	fb07 6702 	mla	r7, r7, r2, r6
 801849e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80184a2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80184a6:	b2ed      	uxtb	r5, r5
 80184a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80184ac:	fa5f fe8e 	uxtb.w	lr, lr
 80184b0:	fb15 f509 	smulbb	r5, r5, r9
 80184b4:	fb0e 5502 	mla	r5, lr, r2, r5
 80184b8:	b2bf      	uxth	r7, r7
 80184ba:	fb1a fa09 	smulbb	sl, sl, r9
 80184be:	b2ad      	uxth	r5, r5
 80184c0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80184c4:	fb06 a602 	mla	r6, r6, r2, sl
 80184c8:	1c7a      	adds	r2, r7, #1
 80184ca:	f105 0a01 	add.w	sl, r5, #1
 80184ce:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80184d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80184d6:	b2b6      	uxth	r6, r6
 80184d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80184dc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80184e0:	ea4a 0707 	orr.w	r7, sl, r7
 80184e4:	f106 0a01 	add.w	sl, r6, #1
 80184e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80184ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80184f0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80184f4:	ea47 070a 	orr.w	r7, r7, sl
 80184f8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80184fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80184fe:	4410      	add	r0, r2
 8018500:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018502:	f108 0801 	add.w	r8, r8, #1
 8018506:	4411      	add	r1, r2
 8018508:	e7a1      	b.n	801844e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801850a:	b007      	add	sp, #28
 801850c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018510 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018510:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018514:	b085      	sub	sp, #20
 8018516:	468b      	mov	fp, r1
 8018518:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801851a:	9203      	str	r2, [sp, #12]
 801851c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018520:	6841      	ldr	r1, [r0, #4]
 8018522:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8018526:	fb01 2404 	mla	r4, r1, r4, r2
 801852a:	6802      	ldr	r2, [r0, #0]
 801852c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018530:	f8de 2000 	ldr.w	r2, [lr]
 8018534:	9200      	str	r2, [sp, #0]
 8018536:	f8de 2004 	ldr.w	r2, [lr, #4]
 801853a:	3204      	adds	r2, #4
 801853c:	9201      	str	r2, [sp, #4]
 801853e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018542:	f1bb 0f00 	cmp.w	fp, #0
 8018546:	dc03      	bgt.n	8018550 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018548:	9a03      	ldr	r2, [sp, #12]
 801854a:	2a00      	cmp	r2, #0
 801854c:	f340 8153 	ble.w	80187f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018550:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018552:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018556:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801855a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801855e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018560:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018564:	2b00      	cmp	r3, #0
 8018566:	dd0e      	ble.n	8018586 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018568:	1408      	asrs	r0, r1, #16
 801856a:	d405      	bmi.n	8018578 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801856c:	42b8      	cmp	r0, r7
 801856e:	da03      	bge.n	8018578 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018570:	1410      	asrs	r0, r2, #16
 8018572:	d401      	bmi.n	8018578 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018574:	42b0      	cmp	r0, r6
 8018576:	db07      	blt.n	8018588 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018578:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801857a:	4401      	add	r1, r0
 801857c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801857e:	3b01      	subs	r3, #1
 8018580:	4402      	add	r2, r0
 8018582:	3402      	adds	r4, #2
 8018584:	e7ee      	b.n	8018564 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018586:	d017      	beq.n	80185b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018588:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801858a:	1e58      	subs	r0, r3, #1
 801858c:	fb05 1500 	mla	r5, r5, r0, r1
 8018590:	142d      	asrs	r5, r5, #16
 8018592:	d409      	bmi.n	80185a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018594:	42bd      	cmp	r5, r7
 8018596:	da07      	bge.n	80185a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018598:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801859a:	fb05 2000 	mla	r0, r5, r0, r2
 801859e:	1400      	asrs	r0, r0, #16
 80185a0:	d402      	bmi.n	80185a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80185a2:	42b0      	cmp	r0, r6
 80185a4:	f2c0 80bc 	blt.w	8018720 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80185a8:	2600      	movs	r6, #0
 80185aa:	1998      	adds	r0, r3, r6
 80185ac:	2800      	cmp	r0, #0
 80185ae:	dc3e      	bgt.n	801862e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80185b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80185b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80185b8:	f1bb 0f00 	cmp.w	fp, #0
 80185bc:	f340 811b 	ble.w	80187f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80185c0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80185c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80185c8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80185cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80185ce:	f1bb 0b01 	subs.w	fp, fp, #1
 80185d2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80185d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80185da:	eeb0 6a62 	vmov.f32	s12, s5
 80185de:	ee61 7a27 	vmul.f32	s15, s2, s15
 80185e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80185e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80185ea:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80185ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80185f2:	eeb0 6a43 	vmov.f32	s12, s6
 80185f6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80185fa:	ee12 2a90 	vmov	r2, s5
 80185fe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018602:	fb92 f3f3 	sdiv	r3, r2, r3
 8018606:	ee13 2a10 	vmov	r2, s6
 801860a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801860e:	9311      	str	r3, [sp, #68]	@ 0x44
 8018610:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018612:	fb92 f3f3 	sdiv	r3, r2, r3
 8018616:	9a03      	ldr	r2, [sp, #12]
 8018618:	9312      	str	r3, [sp, #72]	@ 0x48
 801861a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801861e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018620:	eeb0 3a67 	vmov.f32	s6, s15
 8018624:	bf08      	it	eq
 8018626:	4613      	moveq	r3, r2
 8018628:	eef0 2a47 	vmov.f32	s5, s14
 801862c:	e789      	b.n	8018542 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801862e:	140f      	asrs	r7, r1, #16
 8018630:	d426      	bmi.n	8018680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018632:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018636:	42bd      	cmp	r5, r7
 8018638:	dd22      	ble.n	8018680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801863a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801863e:	d41f      	bmi.n	8018680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018640:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018644:	4560      	cmp	r0, ip
 8018646:	dd1b      	ble.n	8018680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018648:	9800      	ldr	r0, [sp, #0]
 801864a:	b22d      	sxth	r5, r5
 801864c:	fb0c 0505 	mla	r5, ip, r5, r0
 8018650:	5de8      	ldrb	r0, [r5, r7]
 8018652:	9d01      	ldr	r5, [sp, #4]
 8018654:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8018658:	0e07      	lsrs	r7, r0, #24
 801865a:	2fff      	cmp	r7, #255	@ 0xff
 801865c:	d116      	bne.n	801868c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801865e:	f06f 0501 	mvn.w	r5, #1
 8018662:	fb05 f706 	mul.w	r7, r5, r6
 8018666:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801866a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801866e:	0945      	lsrs	r5, r0, #5
 8018670:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018674:	ea4c 0505 	orr.w	r5, ip, r5
 8018678:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801867c:	4305      	orrs	r5, r0
 801867e:	53e5      	strh	r5, [r4, r7]
 8018680:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018682:	4401      	add	r1, r0
 8018684:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018686:	3e01      	subs	r6, #1
 8018688:	4402      	add	r2, r0
 801868a:	e78e      	b.n	80185aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801868c:	b2fd      	uxtb	r5, r7
 801868e:	2f00      	cmp	r7, #0
 8018690:	d0f6      	beq.n	8018680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018692:	f06f 0701 	mvn.w	r7, #1
 8018696:	4377      	muls	r7, r6
 8018698:	fa1f f985 	uxth.w	r9, r5
 801869c:	f834 8007 	ldrh.w	r8, [r4, r7]
 80186a0:	9702      	str	r7, [sp, #8]
 80186a2:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80186a6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80186aa:	43ed      	mvns	r5, r5
 80186ac:	b2ed      	uxtb	r5, r5
 80186ae:	fb17 f709 	smulbb	r7, r7, r9
 80186b2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80186b6:	fb0c 7c05 	mla	ip, ip, r5, r7
 80186ba:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80186be:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80186c2:	b2c0      	uxtb	r0, r0
 80186c4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80186c8:	fa5f f888 	uxtb.w	r8, r8
 80186cc:	fb10 f009 	smulbb	r0, r0, r9
 80186d0:	fb08 0005 	mla	r0, r8, r5, r0
 80186d4:	b280      	uxth	r0, r0
 80186d6:	fa1f fc8c 	uxth.w	ip, ip
 80186da:	fb1a fa09 	smulbb	sl, sl, r9
 80186de:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80186e2:	fb07 a705 	mla	r7, r7, r5, sl
 80186e6:	f100 0a01 	add.w	sl, r0, #1
 80186ea:	f10c 0501 	add.w	r5, ip, #1
 80186ee:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80186f2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80186f6:	b2bf      	uxth	r7, r7
 80186f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80186fc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018700:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018704:	f107 0a01 	add.w	sl, r7, #1
 8018708:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801870c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018710:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018714:	9802      	ldr	r0, [sp, #8]
 8018716:	ea4c 0c0a 	orr.w	ip, ip, sl
 801871a:	f824 c000 	strh.w	ip, [r4, r0]
 801871e:	e7af      	b.n	8018680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018720:	f04f 0800 	mov.w	r8, #0
 8018724:	eba3 0008 	sub.w	r0, r3, r8
 8018728:	2800      	cmp	r0, #0
 801872a:	f77f af41 	ble.w	80185b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801872e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018732:	9f00      	ldr	r7, [sp, #0]
 8018734:	1410      	asrs	r0, r2, #16
 8018736:	140d      	asrs	r5, r1, #16
 8018738:	fb06 7000 	mla	r0, r6, r0, r7
 801873c:	5d40      	ldrb	r0, [r0, r5]
 801873e:	9d01      	ldr	r5, [sp, #4]
 8018740:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018744:	0e2e      	lsrs	r6, r5, #24
 8018746:	2eff      	cmp	r6, #255	@ 0xff
 8018748:	d112      	bne.n	8018770 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801874a:	482c      	ldr	r0, [pc, #176]	@ (80187fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801874c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018750:	0968      	lsrs	r0, r5, #5
 8018752:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018756:	4330      	orrs	r0, r6
 8018758:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801875c:	4328      	orrs	r0, r5
 801875e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8018762:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018764:	4401      	add	r1, r0
 8018766:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018768:	f108 0801 	add.w	r8, r8, #1
 801876c:	4402      	add	r2, r0
 801876e:	e7d9      	b.n	8018724 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018770:	b2f0      	uxtb	r0, r6
 8018772:	2e00      	cmp	r6, #0
 8018774:	d0f5      	beq.n	8018762 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018776:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801877a:	fa1f f980 	uxth.w	r9, r0
 801877e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018782:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018786:	43c0      	mvns	r0, r0
 8018788:	b2c0      	uxtb	r0, r0
 801878a:	fb16 f609 	smulbb	r6, r6, r9
 801878e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018792:	fb07 6700 	mla	r7, r7, r0, r6
 8018796:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801879a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801879e:	b2ed      	uxtb	r5, r5
 80187a0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80187a4:	fa5f fc8c 	uxtb.w	ip, ip
 80187a8:	fb15 f509 	smulbb	r5, r5, r9
 80187ac:	fb0c 5500 	mla	r5, ip, r0, r5
 80187b0:	b2bf      	uxth	r7, r7
 80187b2:	fb1a fa09 	smulbb	sl, sl, r9
 80187b6:	b2ad      	uxth	r5, r5
 80187b8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80187bc:	fb06 a600 	mla	r6, r6, r0, sl
 80187c0:	1c78      	adds	r0, r7, #1
 80187c2:	f105 0a01 	add.w	sl, r5, #1
 80187c6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80187ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80187ce:	b2b6      	uxth	r6, r6
 80187d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80187d4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80187d8:	ea4a 0707 	orr.w	r7, sl, r7
 80187dc:	f106 0a01 	add.w	sl, r6, #1
 80187e0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80187e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80187e8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80187ec:	ea47 070a 	orr.w	r7, r7, sl
 80187f0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80187f4:	e7b5      	b.n	8018762 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80187f6:	b005      	add	sp, #20
 80187f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80187fc:	fffff800 	.word	0xfffff800

08018800 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018800:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018804:	b087      	sub	sp, #28
 8018806:	468b      	mov	fp, r1
 8018808:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801880a:	9204      	str	r2, [sp, #16]
 801880c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018810:	9205      	str	r2, [sp, #20]
 8018812:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8018816:	6861      	ldr	r1, [r4, #4]
 8018818:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801881c:	fb01 2000 	mla	r0, r1, r0, r2
 8018820:	6822      	ldr	r2, [r4, #0]
 8018822:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018826:	f8de 2000 	ldr.w	r2, [lr]
 801882a:	9201      	str	r2, [sp, #4]
 801882c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018830:	9202      	str	r2, [sp, #8]
 8018832:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018836:	f1bb 0f00 	cmp.w	fp, #0
 801883a:	dc03      	bgt.n	8018844 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801883c:	9a04      	ldr	r2, [sp, #16]
 801883e:	2a00      	cmp	r2, #0
 8018840:	f340 8142 	ble.w	8018ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018844:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018846:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801884a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801884e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018852:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018854:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018858:	2b00      	cmp	r3, #0
 801885a:	dd0e      	ble.n	801887a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801885c:	140c      	asrs	r4, r1, #16
 801885e:	d405      	bmi.n	801886c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018860:	42bc      	cmp	r4, r7
 8018862:	da03      	bge.n	801886c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018864:	1414      	asrs	r4, r2, #16
 8018866:	d401      	bmi.n	801886c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018868:	42b4      	cmp	r4, r6
 801886a:	db07      	blt.n	801887c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801886c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801886e:	4421      	add	r1, r4
 8018870:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018872:	3b01      	subs	r3, #1
 8018874:	4422      	add	r2, r4
 8018876:	3002      	adds	r0, #2
 8018878:	e7ee      	b.n	8018858 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801887a:	d019      	beq.n	80188b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801887c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801887e:	1e5c      	subs	r4, r3, #1
 8018880:	fb05 1504 	mla	r5, r5, r4, r1
 8018884:	142d      	asrs	r5, r5, #16
 8018886:	d409      	bmi.n	801889c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018888:	42bd      	cmp	r5, r7
 801888a:	da07      	bge.n	801889c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801888c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801888e:	fb05 2404 	mla	r4, r5, r4, r2
 8018892:	1424      	asrs	r4, r4, #16
 8018894:	d402      	bmi.n	801889c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018896:	42b4      	cmp	r4, r6
 8018898:	f2c0 80b1 	blt.w	80189fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801889c:	f04f 0800 	mov.w	r8, #0
 80188a0:	eb03 0408 	add.w	r4, r3, r8
 80188a4:	2c00      	cmp	r4, #0
 80188a6:	dc3e      	bgt.n	8018926 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80188a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188b0:	f1bb 0f00 	cmp.w	fp, #0
 80188b4:	f340 8108 	ble.w	8018ac8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80188b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80188bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80188c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80188c4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80188c6:	f1bb 0b01 	subs.w	fp, fp, #1
 80188ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80188ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80188d2:	eeb0 6a62 	vmov.f32	s12, s5
 80188d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80188da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80188de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80188e2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80188e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80188ea:	eeb0 6a43 	vmov.f32	s12, s6
 80188ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80188f2:	ee12 2a90 	vmov	r2, s5
 80188f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80188fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80188fe:	ee13 2a10 	vmov	r2, s6
 8018902:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018906:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018908:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801890a:	fb92 f3f3 	sdiv	r3, r2, r3
 801890e:	9a04      	ldr	r2, [sp, #16]
 8018910:	9314      	str	r3, [sp, #80]	@ 0x50
 8018912:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018916:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018918:	eeb0 3a67 	vmov.f32	s6, s15
 801891c:	bf08      	it	eq
 801891e:	4613      	moveq	r3, r2
 8018920:	eef0 2a47 	vmov.f32	s5, s14
 8018924:	e787      	b.n	8018836 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8018926:	140e      	asrs	r6, r1, #16
 8018928:	d462      	bmi.n	80189f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801892a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801892e:	42b5      	cmp	r5, r6
 8018930:	dd5e      	ble.n	80189f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018932:	1417      	asrs	r7, r2, #16
 8018934:	d45c      	bmi.n	80189f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018936:	f8de 400c 	ldr.w	r4, [lr, #12]
 801893a:	42bc      	cmp	r4, r7
 801893c:	dd58      	ble.n	80189f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801893e:	b22d      	sxth	r5, r5
 8018940:	fb07 6505 	mla	r5, r7, r5, r6
 8018944:	9c02      	ldr	r4, [sp, #8]
 8018946:	5d66      	ldrb	r6, [r4, r5]
 8018948:	2e00      	cmp	r6, #0
 801894a:	d051      	beq.n	80189f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801894c:	9c01      	ldr	r4, [sp, #4]
 801894e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8018952:	f06f 0401 	mvn.w	r4, #1
 8018956:	fb04 f408 	mul.w	r4, r4, r8
 801895a:	9403      	str	r4, [sp, #12]
 801895c:	5b05      	ldrh	r5, [r0, r4]
 801895e:	9c05      	ldr	r4, [sp, #20]
 8018960:	4366      	muls	r6, r4
 8018962:	1c74      	adds	r4, r6, #1
 8018964:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018968:	1224      	asrs	r4, r4, #8
 801896a:	b2a7      	uxth	r7, r4
 801896c:	122e      	asrs	r6, r5, #8
 801896e:	43e4      	mvns	r4, r4
 8018970:	b2e4      	uxtb	r4, r4
 8018972:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8018976:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801897a:	fb16 f604 	smulbb	r6, r6, r4
 801897e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018982:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018986:	00ed      	lsls	r5, r5, #3
 8018988:	fb0c 6c07 	mla	ip, ip, r7, r6
 801898c:	b2ed      	uxtb	r5, r5
 801898e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8018992:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018996:	fb15 f504 	smulbb	r5, r5, r4
 801899a:	fa5f f989 	uxtb.w	r9, r9
 801899e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80189a2:	fb09 5507 	mla	r5, r9, r7, r5
 80189a6:	fb1a fa04 	smulbb	sl, sl, r4
 80189aa:	fa1f fc8c 	uxth.w	ip, ip
 80189ae:	b2ad      	uxth	r5, r5
 80189b0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80189b4:	fb06 a607 	mla	r6, r6, r7, sl
 80189b8:	f10c 0401 	add.w	r4, ip, #1
 80189bc:	f105 0a01 	add.w	sl, r5, #1
 80189c0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80189c4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80189c8:	b2b6      	uxth	r6, r6
 80189ca:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80189ce:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80189d2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80189d6:	f106 0a01 	add.w	sl, r6, #1
 80189da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80189de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80189e2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80189e6:	9c03      	ldr	r4, [sp, #12]
 80189e8:	ea4c 0c0a 	orr.w	ip, ip, sl
 80189ec:	f820 c004 	strh.w	ip, [r0, r4]
 80189f0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80189f2:	4421      	add	r1, r4
 80189f4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80189f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80189fa:	4422      	add	r2, r4
 80189fc:	e750      	b.n	80188a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80189fe:	f04f 0900 	mov.w	r9, #0
 8018a02:	eba3 0409 	sub.w	r4, r3, r9
 8018a06:	2c00      	cmp	r4, #0
 8018a08:	f77f af4e 	ble.w	80188a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018a0c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018a10:	140d      	asrs	r5, r1, #16
 8018a12:	1414      	asrs	r4, r2, #16
 8018a14:	fb06 5404 	mla	r4, r6, r4, r5
 8018a18:	9d02      	ldr	r5, [sp, #8]
 8018a1a:	5d2e      	ldrb	r6, [r5, r4]
 8018a1c:	2e00      	cmp	r6, #0
 8018a1e:	d04c      	beq.n	8018aba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018a20:	9d01      	ldr	r5, [sp, #4]
 8018a22:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8018a26:	9c05      	ldr	r4, [sp, #20]
 8018a28:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018a2c:	4366      	muls	r6, r4
 8018a2e:	1c74      	adds	r4, r6, #1
 8018a30:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018a34:	1224      	asrs	r4, r4, #8
 8018a36:	b2a7      	uxth	r7, r4
 8018a38:	122e      	asrs	r6, r5, #8
 8018a3a:	43e4      	mvns	r4, r4
 8018a3c:	b2e4      	uxtb	r4, r4
 8018a3e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018a42:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018a46:	fb16 f604 	smulbb	r6, r6, r4
 8018a4a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018a4e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018a52:	00ed      	lsls	r5, r5, #3
 8018a54:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018a58:	b2ed      	uxtb	r5, r5
 8018a5a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018a5e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018a62:	fb15 f504 	smulbb	r5, r5, r4
 8018a66:	fa5f f888 	uxtb.w	r8, r8
 8018a6a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018a6e:	fb08 5507 	mla	r5, r8, r7, r5
 8018a72:	fb1a fa04 	smulbb	sl, sl, r4
 8018a76:	fa1f fc8c 	uxth.w	ip, ip
 8018a7a:	b2ad      	uxth	r5, r5
 8018a7c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018a80:	fb06 a607 	mla	r6, r6, r7, sl
 8018a84:	f10c 0401 	add.w	r4, ip, #1
 8018a88:	f105 0a01 	add.w	sl, r5, #1
 8018a8c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018a90:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018a94:	b2b6      	uxth	r6, r6
 8018a96:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018a9a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018a9e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018aa2:	f106 0a01 	add.w	sl, r6, #1
 8018aa6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018aaa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018aae:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018ab2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018ab6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018aba:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018abc:	4421      	add	r1, r4
 8018abe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018ac0:	f109 0901 	add.w	r9, r9, #1
 8018ac4:	4422      	add	r2, r4
 8018ac6:	e79c      	b.n	8018a02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8018ac8:	b007      	add	sp, #28
 8018aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018ace <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ace:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ad2:	b085      	sub	sp, #20
 8018ad4:	468b      	mov	fp, r1
 8018ad6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018ad8:	9203      	str	r2, [sp, #12]
 8018ada:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8018ade:	6861      	ldr	r1, [r4, #4]
 8018ae0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8018ae4:	fb01 2000 	mla	r0, r1, r0, r2
 8018ae8:	6822      	ldr	r2, [r4, #0]
 8018aea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018aee:	f8d8 2000 	ldr.w	r2, [r8]
 8018af2:	9200      	str	r2, [sp, #0]
 8018af4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8018af8:	9201      	str	r2, [sp, #4]
 8018afa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018afe:	f1bb 0f00 	cmp.w	fp, #0
 8018b02:	dc03      	bgt.n	8018b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018b04:	9a03      	ldr	r2, [sp, #12]
 8018b06:	2a00      	cmp	r2, #0
 8018b08:	f340 8146 	ble.w	8018d98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018b0c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018b0e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018b12:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018b16:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018b1a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018b1c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018b20:	2b00      	cmp	r3, #0
 8018b22:	dd0e      	ble.n	8018b42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018b24:	140c      	asrs	r4, r1, #16
 8018b26:	d405      	bmi.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b28:	42bc      	cmp	r4, r7
 8018b2a:	da03      	bge.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b2c:	1414      	asrs	r4, r2, #16
 8018b2e:	d401      	bmi.n	8018b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018b30:	42b4      	cmp	r4, r6
 8018b32:	db07      	blt.n	8018b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018b34:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018b36:	4421      	add	r1, r4
 8018b38:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018b3a:	3b01      	subs	r3, #1
 8018b3c:	4422      	add	r2, r4
 8018b3e:	3002      	adds	r0, #2
 8018b40:	e7ee      	b.n	8018b20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018b42:	d017      	beq.n	8018b74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018b44:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018b46:	1e5c      	subs	r4, r3, #1
 8018b48:	fb05 1504 	mla	r5, r5, r4, r1
 8018b4c:	142d      	asrs	r5, r5, #16
 8018b4e:	d409      	bmi.n	8018b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b50:	42bd      	cmp	r5, r7
 8018b52:	da07      	bge.n	8018b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b54:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8018b56:	fb05 2404 	mla	r4, r5, r4, r2
 8018b5a:	1424      	asrs	r4, r4, #16
 8018b5c:	d402      	bmi.n	8018b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018b5e:	42b4      	cmp	r4, r6
 8018b60:	f2c0 80b3 	blt.w	8018cca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018b64:	2600      	movs	r6, #0
 8018b66:	199c      	adds	r4, r3, r6
 8018b68:	2c00      	cmp	r4, #0
 8018b6a:	dc3e      	bgt.n	8018bea <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018b6c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b70:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018b74:	f1bb 0f00 	cmp.w	fp, #0
 8018b78:	f340 810e 	ble.w	8018d98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018b7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b80:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b84:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018b88:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018b8a:	f1bb 0b01 	subs.w	fp, fp, #1
 8018b8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b96:	eeb0 6a62 	vmov.f32	s12, s5
 8018b9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b9e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ba2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ba6:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018baa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018bae:	eeb0 6a43 	vmov.f32	s12, s6
 8018bb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018bb6:	ee12 2a90 	vmov	r2, s5
 8018bba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018bbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bc2:	ee13 2a10 	vmov	r2, s6
 8018bc6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018bca:	9311      	str	r3, [sp, #68]	@ 0x44
 8018bcc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018bce:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bd2:	9a03      	ldr	r2, [sp, #12]
 8018bd4:	9312      	str	r3, [sp, #72]	@ 0x48
 8018bd6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018bda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018bdc:	eeb0 3a67 	vmov.f32	s6, s15
 8018be0:	bf08      	it	eq
 8018be2:	4613      	moveq	r3, r2
 8018be4:	eef0 2a47 	vmov.f32	s5, s14
 8018be8:	e789      	b.n	8018afe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018bea:	140f      	asrs	r7, r1, #16
 8018bec:	d418      	bmi.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018bee:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018bf2:	42bd      	cmp	r5, r7
 8018bf4:	dd14      	ble.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018bf6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018bfa:	d411      	bmi.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018bfc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8018c00:	4564      	cmp	r4, ip
 8018c02:	dd0d      	ble.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018c04:	b22d      	sxth	r5, r5
 8018c06:	fb0c 7505 	mla	r5, ip, r5, r7
 8018c0a:	9c01      	ldr	r4, [sp, #4]
 8018c0c:	5d64      	ldrb	r4, [r4, r5]
 8018c0e:	2cff      	cmp	r4, #255	@ 0xff
 8018c10:	d10c      	bne.n	8018c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018c12:	9c00      	ldr	r4, [sp, #0]
 8018c14:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8018c18:	f06f 0401 	mvn.w	r4, #1
 8018c1c:	4374      	muls	r4, r6
 8018c1e:	5305      	strh	r5, [r0, r4]
 8018c20:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018c22:	4421      	add	r1, r4
 8018c24:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018c26:	3e01      	subs	r6, #1
 8018c28:	4422      	add	r2, r4
 8018c2a:	e79c      	b.n	8018b66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018c2c:	2c00      	cmp	r4, #0
 8018c2e:	d0f7      	beq.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018c30:	9f00      	ldr	r7, [sp, #0]
 8018c32:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8018c36:	f06f 0501 	mvn.w	r5, #1
 8018c3a:	4375      	muls	r5, r6
 8018c3c:	9502      	str	r5, [sp, #8]
 8018c3e:	5b45      	ldrh	r5, [r0, r5]
 8018c40:	fa1f fc84 	uxth.w	ip, r4
 8018c44:	122f      	asrs	r7, r5, #8
 8018c46:	43e4      	mvns	r4, r4
 8018c48:	b2e4      	uxtb	r4, r4
 8018c4a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8018c4e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018c52:	fb17 f704 	smulbb	r7, r7, r4
 8018c56:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018c5a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8018c5e:	00ed      	lsls	r5, r5, #3
 8018c60:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8018c64:	b2ed      	uxtb	r5, r5
 8018c66:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8018c6a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018c6e:	fb15 f504 	smulbb	r5, r5, r4
 8018c72:	fa5f f989 	uxtb.w	r9, r9
 8018c76:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018c7a:	fb09 550c 	mla	r5, r9, ip, r5
 8018c7e:	fb1a fa04 	smulbb	sl, sl, r4
 8018c82:	fa1f fe8e 	uxth.w	lr, lr
 8018c86:	b2ad      	uxth	r5, r5
 8018c88:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018c8c:	fb07 a70c 	mla	r7, r7, ip, sl
 8018c90:	f10e 0401 	add.w	r4, lr, #1
 8018c94:	f105 0a01 	add.w	sl, r5, #1
 8018c98:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8018c9c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018ca0:	b2bf      	uxth	r7, r7
 8018ca2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018ca6:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8018caa:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018cae:	f107 0a01 	add.w	sl, r7, #1
 8018cb2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018cb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018cba:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018cbe:	9c02      	ldr	r4, [sp, #8]
 8018cc0:	ea4e 0e0a 	orr.w	lr, lr, sl
 8018cc4:	f820 e004 	strh.w	lr, [r0, r4]
 8018cc8:	e7aa      	b.n	8018c20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018cca:	f04f 0900 	mov.w	r9, #0
 8018cce:	eba3 0409 	sub.w	r4, r3, r9
 8018cd2:	2c00      	cmp	r4, #0
 8018cd4:	f77f af4a 	ble.w	8018b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018cd8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018cdc:	1414      	asrs	r4, r2, #16
 8018cde:	140d      	asrs	r5, r1, #16
 8018ce0:	fb06 5504 	mla	r5, r6, r4, r5
 8018ce4:	9c01      	ldr	r4, [sp, #4]
 8018ce6:	5d64      	ldrb	r4, [r4, r5]
 8018ce8:	2cff      	cmp	r4, #255	@ 0xff
 8018cea:	d10b      	bne.n	8018d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018cec:	9c00      	ldr	r4, [sp, #0]
 8018cee:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8018cf2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8018cf6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018cf8:	4421      	add	r1, r4
 8018cfa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018cfc:	f109 0901 	add.w	r9, r9, #1
 8018d00:	4422      	add	r2, r4
 8018d02:	e7e4      	b.n	8018cce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018d04:	2c00      	cmp	r4, #0
 8018d06:	d0f6      	beq.n	8018cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018d08:	9e00      	ldr	r6, [sp, #0]
 8018d0a:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8018d0e:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018d12:	b2a7      	uxth	r7, r4
 8018d14:	122e      	asrs	r6, r5, #8
 8018d16:	43e4      	mvns	r4, r4
 8018d18:	b2e4      	uxtb	r4, r4
 8018d1a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018d1e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018d22:	fb16 f604 	smulbb	r6, r6, r4
 8018d26:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018d2a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018d2e:	00ed      	lsls	r5, r5, #3
 8018d30:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018d34:	b2ed      	uxtb	r5, r5
 8018d36:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018d3a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018d3e:	fb15 f504 	smulbb	r5, r5, r4
 8018d42:	fa5f fe8e 	uxtb.w	lr, lr
 8018d46:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018d4a:	fb0e 5507 	mla	r5, lr, r7, r5
 8018d4e:	fb1a fa04 	smulbb	sl, sl, r4
 8018d52:	fa1f fc8c 	uxth.w	ip, ip
 8018d56:	b2ad      	uxth	r5, r5
 8018d58:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018d5c:	fb06 a607 	mla	r6, r6, r7, sl
 8018d60:	f10c 0401 	add.w	r4, ip, #1
 8018d64:	f105 0a01 	add.w	sl, r5, #1
 8018d68:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018d6c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018d70:	b2b6      	uxth	r6, r6
 8018d72:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018d76:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018d7a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018d7e:	f106 0a01 	add.w	sl, r6, #1
 8018d82:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018d86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018d8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018d8e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018d92:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018d96:	e7ae      	b.n	8018cf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018d98:	b005      	add	sp, #20
 8018d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d9e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018da2:	b085      	sub	sp, #20
 8018da4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018da6:	9203      	str	r2, [sp, #12]
 8018da8:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8018dac:	9201      	str	r2, [sp, #4]
 8018dae:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018db2:	9100      	str	r1, [sp, #0]
 8018db4:	6841      	ldr	r1, [r0, #4]
 8018db6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8018dba:	fb01 2404 	mla	r4, r1, r4, r2
 8018dbe:	6802      	ldr	r2, [r0, #0]
 8018dc0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018dc4:	f8de 2000 	ldr.w	r2, [lr]
 8018dc8:	9202      	str	r2, [sp, #8]
 8018dca:	9a01      	ldr	r2, [sp, #4]
 8018dcc:	43d6      	mvns	r6, r2
 8018dce:	b2f6      	uxtb	r6, r6
 8018dd0:	9a00      	ldr	r2, [sp, #0]
 8018dd2:	2a00      	cmp	r2, #0
 8018dd4:	dc03      	bgt.n	8018dde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018dd6:	9a03      	ldr	r2, [sp, #12]
 8018dd8:	2a00      	cmp	r2, #0
 8018dda:	f340 8124 	ble.w	8019026 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018dde:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018de0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018de4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018de8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018dec:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018dee:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018df2:	2b00      	cmp	r3, #0
 8018df4:	dd0e      	ble.n	8018e14 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018df6:	1408      	asrs	r0, r1, #16
 8018df8:	d405      	bmi.n	8018e06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018dfa:	4560      	cmp	r0, ip
 8018dfc:	da03      	bge.n	8018e06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018dfe:	1410      	asrs	r0, r2, #16
 8018e00:	d401      	bmi.n	8018e06 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018e02:	42b8      	cmp	r0, r7
 8018e04:	db07      	blt.n	8018e16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018e06:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018e08:	4401      	add	r1, r0
 8018e0a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018e0c:	3b01      	subs	r3, #1
 8018e0e:	4402      	add	r2, r0
 8018e10:	3402      	adds	r4, #2
 8018e12:	e7ee      	b.n	8018df2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018e14:	d06e      	beq.n	8018ef4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018e16:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018e18:	1e58      	subs	r0, r3, #1
 8018e1a:	fb05 1500 	mla	r5, r5, r0, r1
 8018e1e:	142d      	asrs	r5, r5, #16
 8018e20:	d45c      	bmi.n	8018edc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e22:	4565      	cmp	r5, ip
 8018e24:	da5a      	bge.n	8018edc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e26:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8018e28:	fb05 2000 	mla	r0, r5, r0, r2
 8018e2c:	1400      	asrs	r0, r0, #16
 8018e2e:	d455      	bmi.n	8018edc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e30:	42b8      	cmp	r0, r7
 8018e32:	da53      	bge.n	8018edc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018e34:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8018e38:	4699      	mov	r9, r3
 8018e3a:	46a2      	mov	sl, r4
 8018e3c:	f1b9 0f00 	cmp.w	r9, #0
 8018e40:	dd54      	ble.n	8018eec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018e42:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018e46:	140d      	asrs	r5, r1, #16
 8018e48:	1410      	asrs	r0, r2, #16
 8018e4a:	fb07 5000 	mla	r0, r7, r0, r5
 8018e4e:	9d02      	ldr	r5, [sp, #8]
 8018e50:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018e54:	f8ba 5000 	ldrh.w	r5, [sl]
 8018e58:	122f      	asrs	r7, r5, #8
 8018e5a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018e5e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018e62:	fb17 f706 	smulbb	r7, r7, r6
 8018e66:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018e6a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018e6e:	00ed      	lsls	r5, r5, #3
 8018e70:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018e74:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8018e78:	10c7      	asrs	r7, r0, #3
 8018e7a:	b2ed      	uxtb	r5, r5
 8018e7c:	00c0      	lsls	r0, r0, #3
 8018e7e:	fb18 f806 	smulbb	r8, r8, r6
 8018e82:	fb15 f506 	smulbb	r5, r5, r6
 8018e86:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018e8a:	b2c0      	uxtb	r0, r0
 8018e8c:	fa1f fc8c 	uxth.w	ip, ip
 8018e90:	fb07 870b 	mla	r7, r7, fp, r8
 8018e94:	fb00 500b 	mla	r0, r0, fp, r5
 8018e98:	b280      	uxth	r0, r0
 8018e9a:	b2bf      	uxth	r7, r7
 8018e9c:	f10c 0501 	add.w	r5, ip, #1
 8018ea0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018ea4:	f107 0801 	add.w	r8, r7, #1
 8018ea8:	1c45      	adds	r5, r0, #1
 8018eaa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018eae:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018eb2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018eb4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018eb8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018ebc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018ec0:	ea45 0c0c 	orr.w	ip, r5, ip
 8018ec4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018ec8:	4401      	add	r1, r0
 8018eca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018ecc:	ea4c 0c08 	orr.w	ip, ip, r8
 8018ed0:	f82a cb02 	strh.w	ip, [sl], #2
 8018ed4:	4402      	add	r2, r0
 8018ed6:	f109 39ff 	add.w	r9, r9, #4294967295
 8018eda:	e7af      	b.n	8018e3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018edc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8018ee0:	f04f 0800 	mov.w	r8, #0
 8018ee4:	eb03 0008 	add.w	r0, r3, r8
 8018ee8:	2800      	cmp	r0, #0
 8018eea:	dc41      	bgt.n	8018f70 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018eec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018ef0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018ef4:	9b00      	ldr	r3, [sp, #0]
 8018ef6:	2b00      	cmp	r3, #0
 8018ef8:	f340 8095 	ble.w	8019026 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018efc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f00:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018f04:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018f08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018f0a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018f12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018f16:	eef0 6a62 	vmov.f32	s13, s5
 8018f1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f1e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f22:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f26:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8018f2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018f2e:	eef0 6a43 	vmov.f32	s13, s6
 8018f32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018f36:	ee12 2a90 	vmov	r2, s5
 8018f3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018f3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f42:	ee13 2a10 	vmov	r2, s6
 8018f46:	9311      	str	r3, [sp, #68]	@ 0x44
 8018f48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018f4a:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f4e:	9312      	str	r3, [sp, #72]	@ 0x48
 8018f50:	9b00      	ldr	r3, [sp, #0]
 8018f52:	9a03      	ldr	r2, [sp, #12]
 8018f54:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f58:	3b01      	subs	r3, #1
 8018f5a:	9300      	str	r3, [sp, #0]
 8018f5c:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8018f60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018f62:	eeb0 3a67 	vmov.f32	s6, s15
 8018f66:	bf08      	it	eq
 8018f68:	4613      	moveq	r3, r2
 8018f6a:	eef0 2a47 	vmov.f32	s5, s14
 8018f6e:	e72f      	b.n	8018dd0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018f70:	140f      	asrs	r7, r1, #16
 8018f72:	d451      	bmi.n	8019018 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018f74:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018f78:	42bd      	cmp	r5, r7
 8018f7a:	dd4d      	ble.n	8019018 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018f7c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018f80:	d44a      	bmi.n	8019018 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018f82:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018f86:	4560      	cmp	r0, ip
 8018f88:	dd46      	ble.n	8019018 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018f8a:	b22d      	sxth	r5, r5
 8018f8c:	fb0c 7505 	mla	r5, ip, r5, r7
 8018f90:	9802      	ldr	r0, [sp, #8]
 8018f92:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8018f96:	f06f 0501 	mvn.w	r5, #1
 8018f9a:	fb05 fb08 	mul.w	fp, r5, r8
 8018f9e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018fa2:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018fa6:	122f      	asrs	r7, r5, #8
 8018fa8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018fac:	fb17 f706 	smulbb	r7, r7, r6
 8018fb0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018fb4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018fb8:	00ed      	lsls	r5, r5, #3
 8018fba:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018fbe:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018fc2:	10c7      	asrs	r7, r0, #3
 8018fc4:	b2ed      	uxtb	r5, r5
 8018fc6:	00c0      	lsls	r0, r0, #3
 8018fc8:	fb19 f906 	smulbb	r9, r9, r6
 8018fcc:	fb15 f506 	smulbb	r5, r5, r6
 8018fd0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018fd4:	b2c0      	uxtb	r0, r0
 8018fd6:	fa1f fc8c 	uxth.w	ip, ip
 8018fda:	fb07 970a 	mla	r7, r7, sl, r9
 8018fde:	fb00 500a 	mla	r0, r0, sl, r5
 8018fe2:	b2bf      	uxth	r7, r7
 8018fe4:	b280      	uxth	r0, r0
 8018fe6:	f10c 0501 	add.w	r5, ip, #1
 8018fea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018fee:	f107 0901 	add.w	r9, r7, #1
 8018ff2:	1c45      	adds	r5, r0, #1
 8018ff4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018ff8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018ffc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019000:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019004:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019008:	ea45 0c0c 	orr.w	ip, r5, ip
 801900c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019010:	ea4c 0c09 	orr.w	ip, ip, r9
 8019014:	f824 c00b 	strh.w	ip, [r4, fp]
 8019018:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801901a:	4401      	add	r1, r0
 801901c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801901e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019022:	4402      	add	r2, r0
 8019024:	e75e      	b.n	8018ee4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019026:	b005      	add	sp, #20
 8019028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801902c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801902c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019030:	b085      	sub	sp, #20
 8019032:	4693      	mov	fp, r2
 8019034:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8019036:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8019038:	6870      	ldr	r0, [r6, #4]
 801903a:	9101      	str	r1, [sp, #4]
 801903c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019040:	fb00 2404 	mla	r4, r0, r4, r2
 8019044:	6832      	ldr	r2, [r6, #0]
 8019046:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801904a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801904e:	682a      	ldr	r2, [r5, #0]
 8019050:	9202      	str	r2, [sp, #8]
 8019052:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019056:	9a01      	ldr	r2, [sp, #4]
 8019058:	2a00      	cmp	r2, #0
 801905a:	dc03      	bgt.n	8019064 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801905c:	f1bb 0f00 	cmp.w	fp, #0
 8019060:	f340 809a 	ble.w	8019198 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019064:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019066:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801906a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801906e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019072:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019074:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019078:	2b00      	cmp	r3, #0
 801907a:	dd0c      	ble.n	8019096 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801907c:	1406      	asrs	r6, r0, #16
 801907e:	d405      	bmi.n	801908c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019080:	454e      	cmp	r6, r9
 8019082:	da03      	bge.n	801908c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019084:	1416      	asrs	r6, r2, #16
 8019086:	d401      	bmi.n	801908c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019088:	4546      	cmp	r6, r8
 801908a:	db05      	blt.n	8019098 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801908c:	4470      	add	r0, lr
 801908e:	4462      	add	r2, ip
 8019090:	3b01      	subs	r3, #1
 8019092:	3402      	adds	r4, #2
 8019094:	e7f0      	b.n	8019078 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019096:	d00f      	beq.n	80190b8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019098:	1e5e      	subs	r6, r3, #1
 801909a:	fb0e 0706 	mla	r7, lr, r6, r0
 801909e:	143f      	asrs	r7, r7, #16
 80190a0:	d541      	bpl.n	8019126 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80190a2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80190a6:	4698      	mov	r8, r3
 80190a8:	9603      	str	r6, [sp, #12]
 80190aa:	f1b8 0f00 	cmp.w	r8, #0
 80190ae:	dc56      	bgt.n	801915e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80190b0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80190b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80190b8:	9b01      	ldr	r3, [sp, #4]
 80190ba:	2b00      	cmp	r3, #0
 80190bc:	dd6c      	ble.n	8019198 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80190be:	ee30 0a04 	vadd.f32	s0, s0, s8
 80190c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80190c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80190ca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80190cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80190d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80190d4:	eeb0 6a62 	vmov.f32	s12, s5
 80190d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80190dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80190e0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80190e4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80190e8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80190ec:	eeb0 6a43 	vmov.f32	s12, s6
 80190f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80190f4:	ee12 2a90 	vmov	r2, s5
 80190f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80190fc:	fb92 fef3 	sdiv	lr, r2, r3
 8019100:	ee13 2a10 	vmov	r2, s6
 8019104:	fb92 fcf3 	sdiv	ip, r2, r3
 8019108:	9b01      	ldr	r3, [sp, #4]
 801910a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801910e:	3b01      	subs	r3, #1
 8019110:	9301      	str	r3, [sp, #4]
 8019112:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8019116:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019118:	eeb0 3a67 	vmov.f32	s6, s15
 801911c:	bf08      	it	eq
 801911e:	465b      	moveq	r3, fp
 8019120:	eef0 2a47 	vmov.f32	s5, s14
 8019124:	e797      	b.n	8019056 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8019126:	454f      	cmp	r7, r9
 8019128:	dabb      	bge.n	80190a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801912a:	fb0c 2606 	mla	r6, ip, r6, r2
 801912e:	1436      	asrs	r6, r6, #16
 8019130:	d4b7      	bmi.n	80190a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019132:	4546      	cmp	r6, r8
 8019134:	dab5      	bge.n	80190a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019136:	461e      	mov	r6, r3
 8019138:	46a0      	mov	r8, r4
 801913a:	2e00      	cmp	r6, #0
 801913c:	ddb8      	ble.n	80190b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801913e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019142:	9902      	ldr	r1, [sp, #8]
 8019144:	1417      	asrs	r7, r2, #16
 8019146:	ea4f 4920 	mov.w	r9, r0, asr #16
 801914a:	fb0a 9707 	mla	r7, sl, r7, r9
 801914e:	4470      	add	r0, lr
 8019150:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019154:	f828 7b02 	strh.w	r7, [r8], #2
 8019158:	4462      	add	r2, ip
 801915a:	3e01      	subs	r6, #1
 801915c:	e7ed      	b.n	801913a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801915e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019162:	d414      	bmi.n	801918e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019164:	68ae      	ldr	r6, [r5, #8]
 8019166:	454e      	cmp	r6, r9
 8019168:	dd11      	ble.n	801918e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801916a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801916e:	d40e      	bmi.n	801918e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019170:	68ef      	ldr	r7, [r5, #12]
 8019172:	4557      	cmp	r7, sl
 8019174:	dd0b      	ble.n	801918e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019176:	b236      	sxth	r6, r6
 8019178:	fb0a 9606 	mla	r6, sl, r6, r9
 801917c:	9f02      	ldr	r7, [sp, #8]
 801917e:	f06f 0101 	mvn.w	r1, #1
 8019182:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019186:	fb01 f608 	mul.w	r6, r1, r8
 801918a:	9903      	ldr	r1, [sp, #12]
 801918c:	538f      	strh	r7, [r1, r6]
 801918e:	4470      	add	r0, lr
 8019190:	4462      	add	r2, ip
 8019192:	f108 38ff 	add.w	r8, r8, #4294967295
 8019196:	e788      	b.n	80190aa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019198:	b005      	add	sp, #20
 801919a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801919e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801919e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80191a2:	b087      	sub	sp, #28
 80191a4:	468b      	mov	fp, r1
 80191a6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80191a8:	9203      	str	r2, [sp, #12]
 80191aa:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80191ae:	9204      	str	r2, [sp, #16]
 80191b0:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 80191b4:	6841      	ldr	r1, [r0, #4]
 80191b6:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 80191ba:	fb01 2505 	mla	r5, r1, r5, r2
 80191be:	6802      	ldr	r2, [r0, #0]
 80191c0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80191c4:	f8d9 2000 	ldr.w	r2, [r9]
 80191c8:	9201      	str	r2, [sp, #4]
 80191ca:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80191ce:	f1bb 0f00 	cmp.w	fp, #0
 80191d2:	dc03      	bgt.n	80191dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80191d4:	9a03      	ldr	r2, [sp, #12]
 80191d6:	2a00      	cmp	r2, #0
 80191d8:	f340 8159 	ble.w	801948e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80191dc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80191de:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80191e2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80191e6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80191ea:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80191ec:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80191f0:	2b00      	cmp	r3, #0
 80191f2:	dd0e      	ble.n	8019212 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80191f4:	1402      	asrs	r2, r0, #16
 80191f6:	d405      	bmi.n	8019204 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80191f8:	42ba      	cmp	r2, r7
 80191fa:	da03      	bge.n	8019204 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80191fc:	140a      	asrs	r2, r1, #16
 80191fe:	d401      	bmi.n	8019204 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019200:	42b2      	cmp	r2, r6
 8019202:	db07      	blt.n	8019214 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019204:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019206:	4410      	add	r0, r2
 8019208:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801920a:	3b01      	subs	r3, #1
 801920c:	4411      	add	r1, r2
 801920e:	3502      	adds	r5, #2
 8019210:	e7ee      	b.n	80191f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019212:	d017      	beq.n	8019244 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019214:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019216:	1e5a      	subs	r2, r3, #1
 8019218:	fb04 0402 	mla	r4, r4, r2, r0
 801921c:	1424      	asrs	r4, r4, #16
 801921e:	d409      	bmi.n	8019234 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019220:	42bc      	cmp	r4, r7
 8019222:	da07      	bge.n	8019234 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019224:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019226:	fb04 1202 	mla	r2, r4, r2, r1
 801922a:	1412      	asrs	r2, r2, #16
 801922c:	d402      	bmi.n	8019234 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801922e:	42b2      	cmp	r2, r6
 8019230:	f2c0 80bf 	blt.w	80193b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019234:	2700      	movs	r7, #0
 8019236:	19da      	adds	r2, r3, r7
 8019238:	2a00      	cmp	r2, #0
 801923a:	dc3e      	bgt.n	80192ba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801923c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019240:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019244:	f1bb 0f00 	cmp.w	fp, #0
 8019248:	f340 8121 	ble.w	801948e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801924c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019250:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019254:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019258:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801925a:	f1bb 0b01 	subs.w	fp, fp, #1
 801925e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019262:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019266:	eeb0 6a62 	vmov.f32	s12, s5
 801926a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801926e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019272:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019276:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801927a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801927e:	eeb0 6a43 	vmov.f32	s12, s6
 8019282:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019286:	ee12 2a90 	vmov	r2, s5
 801928a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801928e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019292:	ee13 2a10 	vmov	r2, s6
 8019296:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801929a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801929c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801929e:	fb92 f3f3 	sdiv	r3, r2, r3
 80192a2:	9a03      	ldr	r2, [sp, #12]
 80192a4:	9314      	str	r3, [sp, #80]	@ 0x50
 80192a6:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80192aa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80192ac:	eeb0 3a67 	vmov.f32	s6, s15
 80192b0:	bf08      	it	eq
 80192b2:	4613      	moveq	r3, r2
 80192b4:	eef0 2a47 	vmov.f32	s5, s14
 80192b8:	e789      	b.n	80191ce <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80192ba:	1406      	asrs	r6, r0, #16
 80192bc:	d42d      	bmi.n	801931a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80192be:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80192c2:	42b4      	cmp	r4, r6
 80192c4:	dd29      	ble.n	801931a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80192c6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80192ca:	d426      	bmi.n	801931a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80192cc:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80192d0:	4562      	cmp	r2, ip
 80192d2:	dd22      	ble.n	801931a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80192d4:	b224      	sxth	r4, r4
 80192d6:	9a01      	ldr	r2, [sp, #4]
 80192d8:	fb0c 6404 	mla	r4, ip, r4, r6
 80192dc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80192e0:	0e22      	lsrs	r2, r4, #24
 80192e2:	d01a      	beq.n	801931a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80192e4:	9e04      	ldr	r6, [sp, #16]
 80192e6:	4372      	muls	r2, r6
 80192e8:	1c56      	adds	r6, r2, #1
 80192ea:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80192ee:	1212      	asrs	r2, r2, #8
 80192f0:	0a26      	lsrs	r6, r4, #8
 80192f2:	2aff      	cmp	r2, #255	@ 0xff
 80192f4:	9605      	str	r6, [sp, #20]
 80192f6:	d116      	bne.n	8019326 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80192f8:	f06f 0201 	mvn.w	r2, #1
 80192fc:	fb02 fc07 	mul.w	ip, r2, r7
 8019300:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019304:	0962      	lsrs	r2, r4, #5
 8019306:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801930a:	f026 0607 	bic.w	r6, r6, #7
 801930e:	4316      	orrs	r6, r2
 8019310:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019314:	4326      	orrs	r6, r4
 8019316:	f825 600c 	strh.w	r6, [r5, ip]
 801931a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801931c:	4410      	add	r0, r2
 801931e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019320:	3f01      	subs	r7, #1
 8019322:	4411      	add	r1, r2
 8019324:	e787      	b.n	8019236 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019326:	f06f 0601 	mvn.w	r6, #1
 801932a:	437e      	muls	r6, r7
 801932c:	fa1f fa82 	uxth.w	sl, r2
 8019330:	f835 8006 	ldrh.w	r8, [r5, r6]
 8019334:	9602      	str	r6, [sp, #8]
 8019336:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801933a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801933e:	43d2      	mvns	r2, r2
 8019340:	b2d2      	uxtb	r2, r2
 8019342:	fb1c fc0a 	smulbb	ip, ip, sl
 8019346:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801934a:	fb0e ce02 	mla	lr, lr, r2, ip
 801934e:	b2e4      	uxtb	r4, r4
 8019350:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019354:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019358:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801935c:	fa5f f888 	uxtb.w	r8, r8
 8019360:	fb14 f40a 	smulbb	r4, r4, sl
 8019364:	fb08 4402 	mla	r4, r8, r2, r4
 8019368:	fa1f fe8e 	uxth.w	lr, lr
 801936c:	fb16 f60a 	smulbb	r6, r6, sl
 8019370:	b2a4      	uxth	r4, r4
 8019372:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019376:	fb0c 6c02 	mla	ip, ip, r2, r6
 801937a:	f10e 0201 	add.w	r2, lr, #1
 801937e:	1c66      	adds	r6, r4, #1
 8019380:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019384:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019388:	fa1f fc8c 	uxth.w	ip, ip
 801938c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019390:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019394:	ea46 0e0e 	orr.w	lr, r6, lr
 8019398:	f10c 0601 	add.w	r6, ip, #1
 801939c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80193a0:	0976      	lsrs	r6, r6, #5
 80193a2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80193a6:	9a02      	ldr	r2, [sp, #8]
 80193a8:	ea4e 0e06 	orr.w	lr, lr, r6
 80193ac:	f825 e002 	strh.w	lr, [r5, r2]
 80193b0:	e7b3      	b.n	801931a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80193b2:	f04f 0800 	mov.w	r8, #0
 80193b6:	eba3 0208 	sub.w	r2, r3, r8
 80193ba:	2a00      	cmp	r2, #0
 80193bc:	f77f af3e 	ble.w	801923c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80193c0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80193c4:	1404      	asrs	r4, r0, #16
 80193c6:	140a      	asrs	r2, r1, #16
 80193c8:	fb06 4202 	mla	r2, r6, r2, r4
 80193cc:	9c01      	ldr	r4, [sp, #4]
 80193ce:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80193d2:	0e22      	lsrs	r2, r4, #24
 80193d4:	d016      	beq.n	8019404 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80193d6:	9e04      	ldr	r6, [sp, #16]
 80193d8:	4372      	muls	r2, r6
 80193da:	1c56      	adds	r6, r2, #1
 80193dc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80193e0:	1212      	asrs	r2, r2, #8
 80193e2:	2aff      	cmp	r2, #255	@ 0xff
 80193e4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80193e8:	d113      	bne.n	8019412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80193ea:	0962      	lsrs	r2, r4, #5
 80193ec:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80193f0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80193f4:	f026 0607 	bic.w	r6, r6, #7
 80193f8:	4316      	orrs	r6, r2
 80193fa:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80193fe:	4326      	orrs	r6, r4
 8019400:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019404:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019406:	4410      	add	r0, r2
 8019408:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801940a:	f108 0801 	add.w	r8, r8, #1
 801940e:	4411      	add	r1, r2
 8019410:	e7d1      	b.n	80193b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019412:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019416:	fa1f fa82 	uxth.w	sl, r2
 801941a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801941e:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019422:	43d2      	mvns	r2, r2
 8019424:	b2d2      	uxtb	r2, r2
 8019426:	fb17 f70a 	smulbb	r7, r7, sl
 801942a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801942e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019432:	b2e4      	uxtb	r4, r4
 8019434:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019438:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801943c:	fa5f fe8e 	uxtb.w	lr, lr
 8019440:	fb14 f40a 	smulbb	r4, r4, sl
 8019444:	fb0e 4402 	mla	r4, lr, r2, r4
 8019448:	b2f6      	uxtb	r6, r6
 801944a:	fa1f fc8c 	uxth.w	ip, ip
 801944e:	fb16 f60a 	smulbb	r6, r6, sl
 8019452:	b2a4      	uxth	r4, r4
 8019454:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019458:	fb07 6702 	mla	r7, r7, r2, r6
 801945c:	f10c 0201 	add.w	r2, ip, #1
 8019460:	1c66      	adds	r6, r4, #1
 8019462:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019466:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801946a:	b2bf      	uxth	r7, r7
 801946c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019470:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019474:	ea46 0c0c 	orr.w	ip, r6, ip
 8019478:	1c7e      	adds	r6, r7, #1
 801947a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801947e:	0976      	lsrs	r6, r6, #5
 8019480:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019484:	ea4c 0c06 	orr.w	ip, ip, r6
 8019488:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801948c:	e7ba      	b.n	8019404 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801948e:	b007      	add	sp, #28
 8019490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019498:	b085      	sub	sp, #20
 801949a:	468b      	mov	fp, r1
 801949c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801949e:	9203      	str	r2, [sp, #12]
 80194a0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80194a4:	6841      	ldr	r1, [r0, #4]
 80194a6:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80194aa:	fb01 2404 	mla	r4, r1, r4, r2
 80194ae:	6802      	ldr	r2, [r0, #0]
 80194b0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80194b4:	f8d8 2000 	ldr.w	r2, [r8]
 80194b8:	9201      	str	r2, [sp, #4]
 80194ba:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80194be:	f1bb 0f00 	cmp.w	fp, #0
 80194c2:	dc03      	bgt.n	80194cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80194c4:	9a03      	ldr	r2, [sp, #12]
 80194c6:	2a00      	cmp	r2, #0
 80194c8:	f340 814f 	ble.w	801976a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80194cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80194ce:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80194d2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80194d6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80194da:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80194dc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80194e0:	2b00      	cmp	r3, #0
 80194e2:	dd0e      	ble.n	8019502 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80194e4:	1408      	asrs	r0, r1, #16
 80194e6:	d405      	bmi.n	80194f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80194e8:	42b8      	cmp	r0, r7
 80194ea:	da03      	bge.n	80194f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80194ec:	1410      	asrs	r0, r2, #16
 80194ee:	d401      	bmi.n	80194f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80194f0:	42b0      	cmp	r0, r6
 80194f2:	db07      	blt.n	8019504 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80194f4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80194f6:	4401      	add	r1, r0
 80194f8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80194fa:	3b01      	subs	r3, #1
 80194fc:	4402      	add	r2, r0
 80194fe:	3402      	adds	r4, #2
 8019500:	e7ee      	b.n	80194e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019502:	d017      	beq.n	8019534 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019504:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019506:	1e58      	subs	r0, r3, #1
 8019508:	fb05 1500 	mla	r5, r5, r0, r1
 801950c:	142d      	asrs	r5, r5, #16
 801950e:	d409      	bmi.n	8019524 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019510:	42bd      	cmp	r5, r7
 8019512:	da07      	bge.n	8019524 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019514:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019516:	fb05 2000 	mla	r0, r5, r0, r2
 801951a:	1400      	asrs	r0, r0, #16
 801951c:	d402      	bmi.n	8019524 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801951e:	42b0      	cmp	r0, r6
 8019520:	f2c0 80ba 	blt.w	8019698 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019524:	2600      	movs	r6, #0
 8019526:	1998      	adds	r0, r3, r6
 8019528:	2800      	cmp	r0, #0
 801952a:	dc3e      	bgt.n	80195aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801952c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019530:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019534:	f1bb 0f00 	cmp.w	fp, #0
 8019538:	f340 8117 	ble.w	801976a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801953c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019540:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019544:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019548:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801954a:	f1bb 0b01 	subs.w	fp, fp, #1
 801954e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019552:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019556:	eeb0 6a62 	vmov.f32	s12, s5
 801955a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801955e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019562:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019566:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801956a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801956e:	eeb0 6a43 	vmov.f32	s12, s6
 8019572:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019576:	ee12 2a90 	vmov	r2, s5
 801957a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801957e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019582:	ee13 2a10 	vmov	r2, s6
 8019586:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801958a:	9311      	str	r3, [sp, #68]	@ 0x44
 801958c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801958e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019592:	9a03      	ldr	r2, [sp, #12]
 8019594:	9312      	str	r3, [sp, #72]	@ 0x48
 8019596:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801959a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801959c:	eeb0 3a67 	vmov.f32	s6, s15
 80195a0:	bf08      	it	eq
 80195a2:	4613      	moveq	r3, r2
 80195a4:	eef0 2a47 	vmov.f32	s5, s14
 80195a8:	e789      	b.n	80194be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80195aa:	140f      	asrs	r7, r1, #16
 80195ac:	d424      	bmi.n	80195f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195ae:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80195b2:	42bd      	cmp	r5, r7
 80195b4:	dd20      	ble.n	80195f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195b6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80195ba:	d41d      	bmi.n	80195f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195bc:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80195c0:	4560      	cmp	r0, ip
 80195c2:	dd19      	ble.n	80195f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80195c4:	b22d      	sxth	r5, r5
 80195c6:	fb0c 7505 	mla	r5, ip, r5, r7
 80195ca:	9801      	ldr	r0, [sp, #4]
 80195cc:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80195d0:	0e07      	lsrs	r7, r0, #24
 80195d2:	2fff      	cmp	r7, #255	@ 0xff
 80195d4:	d116      	bne.n	8019604 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195d6:	f06f 0501 	mvn.w	r5, #1
 80195da:	fb05 f706 	mul.w	r7, r5, r6
 80195de:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80195e2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80195e6:	0945      	lsrs	r5, r0, #5
 80195e8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80195ec:	ea4c 0505 	orr.w	r5, ip, r5
 80195f0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80195f4:	4305      	orrs	r5, r0
 80195f6:	53e5      	strh	r5, [r4, r7]
 80195f8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80195fa:	4401      	add	r1, r0
 80195fc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80195fe:	3e01      	subs	r6, #1
 8019600:	4402      	add	r2, r0
 8019602:	e790      	b.n	8019526 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019604:	b2fd      	uxtb	r5, r7
 8019606:	2f00      	cmp	r7, #0
 8019608:	d0f6      	beq.n	80195f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801960a:	f06f 0701 	mvn.w	r7, #1
 801960e:	4377      	muls	r7, r6
 8019610:	fa1f f985 	uxth.w	r9, r5
 8019614:	f834 e007 	ldrh.w	lr, [r4, r7]
 8019618:	9702      	str	r7, [sp, #8]
 801961a:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801961e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8019622:	43ed      	mvns	r5, r5
 8019624:	b2ed      	uxtb	r5, r5
 8019626:	fb17 f709 	smulbb	r7, r7, r9
 801962a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801962e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8019632:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019636:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801963a:	b2c0      	uxtb	r0, r0
 801963c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019640:	fa5f fe8e 	uxtb.w	lr, lr
 8019644:	fb10 f009 	smulbb	r0, r0, r9
 8019648:	fb0e 0005 	mla	r0, lr, r5, r0
 801964c:	b280      	uxth	r0, r0
 801964e:	fa1f fc8c 	uxth.w	ip, ip
 8019652:	fb1a fa09 	smulbb	sl, sl, r9
 8019656:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801965a:	fb07 a705 	mla	r7, r7, r5, sl
 801965e:	f100 0a01 	add.w	sl, r0, #1
 8019662:	f10c 0501 	add.w	r5, ip, #1
 8019666:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801966a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801966e:	b2bf      	uxth	r7, r7
 8019670:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019674:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019678:	ea4a 0c0c 	orr.w	ip, sl, ip
 801967c:	f107 0a01 	add.w	sl, r7, #1
 8019680:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019684:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019688:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801968c:	9802      	ldr	r0, [sp, #8]
 801968e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019692:	f824 c000 	strh.w	ip, [r4, r0]
 8019696:	e7af      	b.n	80195f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019698:	f04f 0e00 	mov.w	lr, #0
 801969c:	eba3 000e 	sub.w	r0, r3, lr
 80196a0:	2800      	cmp	r0, #0
 80196a2:	f77f af43 	ble.w	801952c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80196a6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80196aa:	140d      	asrs	r5, r1, #16
 80196ac:	1410      	asrs	r0, r2, #16
 80196ae:	fb06 5000 	mla	r0, r6, r0, r5
 80196b2:	9d01      	ldr	r5, [sp, #4]
 80196b4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80196b8:	0e2e      	lsrs	r6, r5, #24
 80196ba:	2eff      	cmp	r6, #255	@ 0xff
 80196bc:	d112      	bne.n	80196e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80196be:	482c      	ldr	r0, [pc, #176]	@ (8019770 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80196c0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80196c4:	0968      	lsrs	r0, r5, #5
 80196c6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80196ca:	4330      	orrs	r0, r6
 80196cc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80196d0:	4328      	orrs	r0, r5
 80196d2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80196d6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80196d8:	4401      	add	r1, r0
 80196da:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80196dc:	f10e 0e01 	add.w	lr, lr, #1
 80196e0:	4402      	add	r2, r0
 80196e2:	e7db      	b.n	801969c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80196e4:	b2f0      	uxtb	r0, r6
 80196e6:	2e00      	cmp	r6, #0
 80196e8:	d0f5      	beq.n	80196d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80196ea:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80196ee:	fa1f f980 	uxth.w	r9, r0
 80196f2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80196f6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80196fa:	43c0      	mvns	r0, r0
 80196fc:	b2c0      	uxtb	r0, r0
 80196fe:	fb16 f609 	smulbb	r6, r6, r9
 8019702:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019706:	fb07 6700 	mla	r7, r7, r0, r6
 801970a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801970e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019712:	b2ed      	uxtb	r5, r5
 8019714:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019718:	fa5f fc8c 	uxtb.w	ip, ip
 801971c:	fb15 f509 	smulbb	r5, r5, r9
 8019720:	fb0c 5500 	mla	r5, ip, r0, r5
 8019724:	b2bf      	uxth	r7, r7
 8019726:	fb1a fa09 	smulbb	sl, sl, r9
 801972a:	b2ad      	uxth	r5, r5
 801972c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019730:	fb06 a600 	mla	r6, r6, r0, sl
 8019734:	1c78      	adds	r0, r7, #1
 8019736:	f105 0a01 	add.w	sl, r5, #1
 801973a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801973e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019742:	b2b6      	uxth	r6, r6
 8019744:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019748:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801974c:	ea4a 0707 	orr.w	r7, sl, r7
 8019750:	f106 0a01 	add.w	sl, r6, #1
 8019754:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019758:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801975c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019760:	ea47 070a 	orr.w	r7, r7, sl
 8019764:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8019768:	e7b5      	b.n	80196d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801976a:	b005      	add	sp, #20
 801976c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019770:	fffff800 	.word	0xfffff800

08019774 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019778:	b087      	sub	sp, #28
 801977a:	468b      	mov	fp, r1
 801977c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801977e:	9203      	str	r2, [sp, #12]
 8019780:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8019784:	9204      	str	r2, [sp, #16]
 8019786:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801978a:	6841      	ldr	r1, [r0, #4]
 801978c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8019790:	fb01 2404 	mla	r4, r1, r4, r2
 8019794:	6802      	ldr	r2, [r0, #0]
 8019796:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801979a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801979e:	3201      	adds	r2, #1
 80197a0:	f022 0201 	bic.w	r2, r2, #1
 80197a4:	9200      	str	r2, [sp, #0]
 80197a6:	f8d9 2000 	ldr.w	r2, [r9]
 80197aa:	9201      	str	r2, [sp, #4]
 80197ac:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80197b0:	f1bb 0f00 	cmp.w	fp, #0
 80197b4:	dc03      	bgt.n	80197be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80197b6:	9a03      	ldr	r2, [sp, #12]
 80197b8:	2a00      	cmp	r2, #0
 80197ba:	f340 8169 	ble.w	8019a90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80197be:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80197c0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80197c4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80197c8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80197cc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80197ce:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80197d2:	2b00      	cmp	r3, #0
 80197d4:	dd0e      	ble.n	80197f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80197d6:	1402      	asrs	r2, r0, #16
 80197d8:	d405      	bmi.n	80197e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80197da:	42ba      	cmp	r2, r7
 80197dc:	da03      	bge.n	80197e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80197de:	140a      	asrs	r2, r1, #16
 80197e0:	d401      	bmi.n	80197e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80197e2:	42b2      	cmp	r2, r6
 80197e4:	db07      	blt.n	80197f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80197e6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80197e8:	4410      	add	r0, r2
 80197ea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80197ec:	3b01      	subs	r3, #1
 80197ee:	4411      	add	r1, r2
 80197f0:	3402      	adds	r4, #2
 80197f2:	e7ee      	b.n	80197d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80197f4:	d017      	beq.n	8019826 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80197f6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80197f8:	1e5a      	subs	r2, r3, #1
 80197fa:	fb05 0502 	mla	r5, r5, r2, r0
 80197fe:	142d      	asrs	r5, r5, #16
 8019800:	d409      	bmi.n	8019816 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019802:	42bd      	cmp	r5, r7
 8019804:	da07      	bge.n	8019816 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019806:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019808:	fb05 1202 	mla	r2, r5, r2, r1
 801980c:	1412      	asrs	r2, r2, #16
 801980e:	d402      	bmi.n	8019816 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019810:	42b2      	cmp	r2, r6
 8019812:	f2c0 80c7 	blt.w	80199a4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8019816:	2700      	movs	r7, #0
 8019818:	19da      	adds	r2, r3, r7
 801981a:	2a00      	cmp	r2, #0
 801981c:	dc3e      	bgt.n	801989c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801981e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019822:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019826:	f1bb 0f00 	cmp.w	fp, #0
 801982a:	f340 8131 	ble.w	8019a90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801982e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019832:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019836:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801983a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801983c:	f1bb 0b01 	subs.w	fp, fp, #1
 8019840:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019844:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019848:	eeb0 6a62 	vmov.f32	s12, s5
 801984c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019850:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019854:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019858:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801985c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019860:	eeb0 6a43 	vmov.f32	s12, s6
 8019864:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019868:	ee12 2a90 	vmov	r2, s5
 801986c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019870:	fb92 f3f3 	sdiv	r3, r2, r3
 8019874:	ee13 2a10 	vmov	r2, s6
 8019878:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801987c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801987e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019880:	fb92 f3f3 	sdiv	r3, r2, r3
 8019884:	9a03      	ldr	r2, [sp, #12]
 8019886:	9314      	str	r3, [sp, #80]	@ 0x50
 8019888:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801988c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801988e:	eeb0 3a67 	vmov.f32	s6, s15
 8019892:	bf08      	it	eq
 8019894:	4613      	moveq	r3, r2
 8019896:	eef0 2a47 	vmov.f32	s5, s14
 801989a:	e789      	b.n	80197b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801989c:	1405      	asrs	r5, r0, #16
 801989e:	d435      	bmi.n	801990c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80198a0:	f8d9 2008 	ldr.w	r2, [r9, #8]
 80198a4:	42aa      	cmp	r2, r5
 80198a6:	dd31      	ble.n	801990c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80198a8:	140e      	asrs	r6, r1, #16
 80198aa:	d42f      	bmi.n	801990c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80198ac:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80198b0:	42b2      	cmp	r2, r6
 80198b2:	dd2b      	ble.n	801990c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80198b4:	9a00      	ldr	r2, [sp, #0]
 80198b6:	fb06 5502 	mla	r5, r6, r2, r5
 80198ba:	086a      	lsrs	r2, r5, #1
 80198bc:	9e01      	ldr	r6, [sp, #4]
 80198be:	5cb2      	ldrb	r2, [r6, r2]
 80198c0:	07ee      	lsls	r6, r5, #31
 80198c2:	bf54      	ite	pl
 80198c4:	f002 020f 	andpl.w	r2, r2, #15
 80198c8:	1112      	asrmi	r2, r2, #4
 80198ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80198ce:	b2d2      	uxtb	r2, r2
 80198d0:	b1e2      	cbz	r2, 801990c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80198d2:	9d04      	ldr	r5, [sp, #16]
 80198d4:	436a      	muls	r2, r5
 80198d6:	1c55      	adds	r5, r2, #1
 80198d8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80198dc:	4d6e      	ldr	r5, [pc, #440]	@ (8019a98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80198de:	682d      	ldr	r5, [r5, #0]
 80198e0:	1212      	asrs	r2, r2, #8
 80198e2:	0a2e      	lsrs	r6, r5, #8
 80198e4:	2aff      	cmp	r2, #255	@ 0xff
 80198e6:	9605      	str	r6, [sp, #20]
 80198e8:	d116      	bne.n	8019918 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80198ea:	f06f 0201 	mvn.w	r2, #1
 80198ee:	fb02 fc07 	mul.w	ip, r2, r7
 80198f2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80198f6:	096a      	lsrs	r2, r5, #5
 80198f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80198fc:	f026 0607 	bic.w	r6, r6, #7
 8019900:	4316      	orrs	r6, r2
 8019902:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019906:	432e      	orrs	r6, r5
 8019908:	f824 600c 	strh.w	r6, [r4, ip]
 801990c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801990e:	4410      	add	r0, r2
 8019910:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019912:	3f01      	subs	r7, #1
 8019914:	4411      	add	r1, r2
 8019916:	e77f      	b.n	8019818 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8019918:	f06f 0601 	mvn.w	r6, #1
 801991c:	437e      	muls	r6, r7
 801991e:	fa1f fa82 	uxth.w	sl, r2
 8019922:	f834 8006 	ldrh.w	r8, [r4, r6]
 8019926:	9602      	str	r6, [sp, #8]
 8019928:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801992c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8019930:	43d2      	mvns	r2, r2
 8019932:	b2d2      	uxtb	r2, r2
 8019934:	fb1c fc0a 	smulbb	ip, ip, sl
 8019938:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801993c:	fb0e ce02 	mla	lr, lr, r2, ip
 8019940:	b2ed      	uxtb	r5, r5
 8019942:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019946:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801994a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801994e:	fa5f f888 	uxtb.w	r8, r8
 8019952:	fb15 f50a 	smulbb	r5, r5, sl
 8019956:	fb08 5502 	mla	r5, r8, r2, r5
 801995a:	fa1f fe8e 	uxth.w	lr, lr
 801995e:	fb16 f60a 	smulbb	r6, r6, sl
 8019962:	b2ad      	uxth	r5, r5
 8019964:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019968:	fb0c 6c02 	mla	ip, ip, r2, r6
 801996c:	f10e 0201 	add.w	r2, lr, #1
 8019970:	1c6e      	adds	r6, r5, #1
 8019972:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019976:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801997a:	fa1f fc8c 	uxth.w	ip, ip
 801997e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019982:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019986:	ea46 0e0e 	orr.w	lr, r6, lr
 801998a:	f10c 0601 	add.w	r6, ip, #1
 801998e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019992:	0976      	lsrs	r6, r6, #5
 8019994:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019998:	9a02      	ldr	r2, [sp, #8]
 801999a:	ea4e 0e06 	orr.w	lr, lr, r6
 801999e:	f824 e002 	strh.w	lr, [r4, r2]
 80199a2:	e7b3      	b.n	801990c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80199a4:	f04f 0800 	mov.w	r8, #0
 80199a8:	eba3 0208 	sub.w	r2, r3, r8
 80199ac:	2a00      	cmp	r2, #0
 80199ae:	f77f af36 	ble.w	801981e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80199b2:	9e00      	ldr	r6, [sp, #0]
 80199b4:	1402      	asrs	r2, r0, #16
 80199b6:	140d      	asrs	r5, r1, #16
 80199b8:	fb06 2505 	mla	r5, r6, r5, r2
 80199bc:	086a      	lsrs	r2, r5, #1
 80199be:	9e01      	ldr	r6, [sp, #4]
 80199c0:	5cb2      	ldrb	r2, [r6, r2]
 80199c2:	07ed      	lsls	r5, r5, #31
 80199c4:	bf54      	ite	pl
 80199c6:	f002 020f 	andpl.w	r2, r2, #15
 80199ca:	1112      	asrmi	r2, r2, #4
 80199cc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80199d0:	b2d2      	uxtb	r2, r2
 80199d2:	b1c2      	cbz	r2, 8019a06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80199d4:	9d04      	ldr	r5, [sp, #16]
 80199d6:	436a      	muls	r2, r5
 80199d8:	1c55      	adds	r5, r2, #1
 80199da:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80199de:	4d2e      	ldr	r5, [pc, #184]	@ (8019a98 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80199e0:	1212      	asrs	r2, r2, #8
 80199e2:	682e      	ldr	r6, [r5, #0]
 80199e4:	2aff      	cmp	r2, #255	@ 0xff
 80199e6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80199ea:	d113      	bne.n	8019a14 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80199ec:	0972      	lsrs	r2, r6, #5
 80199ee:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 80199f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80199f6:	f025 0507 	bic.w	r5, r5, #7
 80199fa:	4315      	orrs	r5, r2
 80199fc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019a00:	4335      	orrs	r5, r6
 8019a02:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8019a06:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019a08:	4410      	add	r0, r2
 8019a0a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019a0c:	f108 0801 	add.w	r8, r8, #1
 8019a10:	4411      	add	r1, r2
 8019a12:	e7c9      	b.n	80199a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019a14:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019a18:	fa1f fa82 	uxth.w	sl, r2
 8019a1c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019a20:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019a24:	43d2      	mvns	r2, r2
 8019a26:	b2d2      	uxtb	r2, r2
 8019a28:	fb17 f70a 	smulbb	r7, r7, sl
 8019a2c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019a30:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019a34:	b2f6      	uxtb	r6, r6
 8019a36:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019a3a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019a3e:	fa5f fe8e 	uxtb.w	lr, lr
 8019a42:	fb16 f60a 	smulbb	r6, r6, sl
 8019a46:	fb0e 6602 	mla	r6, lr, r2, r6
 8019a4a:	b2ed      	uxtb	r5, r5
 8019a4c:	fa1f fc8c 	uxth.w	ip, ip
 8019a50:	fb15 f50a 	smulbb	r5, r5, sl
 8019a54:	b2b6      	uxth	r6, r6
 8019a56:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019a5a:	fb07 5702 	mla	r7, r7, r2, r5
 8019a5e:	f10c 0201 	add.w	r2, ip, #1
 8019a62:	1c75      	adds	r5, r6, #1
 8019a64:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019a68:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019a6c:	b2bf      	uxth	r7, r7
 8019a6e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019a72:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019a76:	ea45 0c0c 	orr.w	ip, r5, ip
 8019a7a:	1c7d      	adds	r5, r7, #1
 8019a7c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8019a80:	096d      	lsrs	r5, r5, #5
 8019a82:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019a86:	ea4c 0c05 	orr.w	ip, ip, r5
 8019a8a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8019a8e:	e7ba      	b.n	8019a06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019a90:	b007      	add	sp, #28
 8019a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a96:	bf00      	nop
 8019a98:	20002f5c 	.word	0x20002f5c

08019a9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019aa0:	b087      	sub	sp, #28
 8019aa2:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8019db0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8019aa6:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019aa8:	9205      	str	r2, [sp, #20]
 8019aaa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8019aae:	9101      	str	r1, [sp, #4]
 8019ab0:	6841      	ldr	r1, [r0, #4]
 8019ab2:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8019ab6:	fb01 2404 	mla	r4, r1, r4, r2
 8019aba:	6802      	ldr	r2, [r0, #0]
 8019abc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019ac0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019ac4:	3201      	adds	r2, #1
 8019ac6:	f022 0201 	bic.w	r2, r2, #1
 8019aca:	9202      	str	r2, [sp, #8]
 8019acc:	f8db 2000 	ldr.w	r2, [fp]
 8019ad0:	9203      	str	r2, [sp, #12]
 8019ad2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019ad6:	9a01      	ldr	r2, [sp, #4]
 8019ad8:	2a00      	cmp	r2, #0
 8019ada:	dc03      	bgt.n	8019ae4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019adc:	9a05      	ldr	r2, [sp, #20]
 8019ade:	2a00      	cmp	r2, #0
 8019ae0:	f340 8162 	ble.w	8019da8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019ae4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019ae6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8019aea:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8019aee:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019af2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019af4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019af8:	2b00      	cmp	r3, #0
 8019afa:	dd0e      	ble.n	8019b1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019afc:	1402      	asrs	r2, r0, #16
 8019afe:	d405      	bmi.n	8019b0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019b00:	42ba      	cmp	r2, r7
 8019b02:	da03      	bge.n	8019b0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019b04:	140a      	asrs	r2, r1, #16
 8019b06:	d401      	bmi.n	8019b0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019b08:	42b2      	cmp	r2, r6
 8019b0a:	db07      	blt.n	8019b1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019b0c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019b0e:	4410      	add	r0, r2
 8019b10:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019b12:	3b01      	subs	r3, #1
 8019b14:	4411      	add	r1, r2
 8019b16:	3402      	adds	r4, #2
 8019b18:	e7ee      	b.n	8019af8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019b1a:	d017      	beq.n	8019b4c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019b1c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019b1e:	1e5a      	subs	r2, r3, #1
 8019b20:	fb05 0502 	mla	r5, r5, r2, r0
 8019b24:	142d      	asrs	r5, r5, #16
 8019b26:	d409      	bmi.n	8019b3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019b28:	42bd      	cmp	r5, r7
 8019b2a:	da07      	bge.n	8019b3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019b2c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019b2e:	fb05 1202 	mla	r2, r5, r2, r1
 8019b32:	1412      	asrs	r2, r2, #16
 8019b34:	d402      	bmi.n	8019b3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019b36:	42b2      	cmp	r2, r6
 8019b38:	f2c0 80c3 	blt.w	8019cc2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8019b3c:	2500      	movs	r5, #0
 8019b3e:	195a      	adds	r2, r3, r5
 8019b40:	2a00      	cmp	r2, #0
 8019b42:	dc3f      	bgt.n	8019bc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019b44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019b4c:	9b01      	ldr	r3, [sp, #4]
 8019b4e:	2b00      	cmp	r3, #0
 8019b50:	f340 812a 	ble.w	8019da8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019b54:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b5c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b60:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b6a:	eeb0 6a62 	vmov.f32	s12, s5
 8019b6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b7a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8019b7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b82:	eeb0 6a43 	vmov.f32	s12, s6
 8019b86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b8a:	ee12 2a90 	vmov	r2, s5
 8019b8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b92:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b96:	ee13 2a10 	vmov	r2, s6
 8019b9a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019b9c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ba2:	9314      	str	r3, [sp, #80]	@ 0x50
 8019ba4:	9b01      	ldr	r3, [sp, #4]
 8019ba6:	9a05      	ldr	r2, [sp, #20]
 8019ba8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019bac:	3b01      	subs	r3, #1
 8019bae:	9301      	str	r3, [sp, #4]
 8019bb0:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8019bb4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019bb6:	eeb0 3a67 	vmov.f32	s6, s15
 8019bba:	bf08      	it	eq
 8019bbc:	4613      	moveq	r3, r2
 8019bbe:	eef0 2a47 	vmov.f32	s5, s14
 8019bc2:	e788      	b.n	8019ad6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019bc4:	1406      	asrs	r6, r0, #16
 8019bc6:	d42c      	bmi.n	8019c22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bc8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019bcc:	42b2      	cmp	r2, r6
 8019bce:	dd28      	ble.n	8019c22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bd0:	140f      	asrs	r7, r1, #16
 8019bd2:	d426      	bmi.n	8019c22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bd4:	f8db 200c 	ldr.w	r2, [fp, #12]
 8019bd8:	42ba      	cmp	r2, r7
 8019bda:	dd22      	ble.n	8019c22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019bdc:	9a02      	ldr	r2, [sp, #8]
 8019bde:	fb07 6602 	mla	r6, r7, r2, r6
 8019be2:	0872      	lsrs	r2, r6, #1
 8019be4:	9f03      	ldr	r7, [sp, #12]
 8019be6:	5cba      	ldrb	r2, [r7, r2]
 8019be8:	07f6      	lsls	r6, r6, #31
 8019bea:	bf54      	ite	pl
 8019bec:	f002 020f 	andpl.w	r2, r2, #15
 8019bf0:	1112      	asrmi	r2, r2, #4
 8019bf2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019bf6:	b2d2      	uxtb	r2, r2
 8019bf8:	2aff      	cmp	r2, #255	@ 0xff
 8019bfa:	d118      	bne.n	8019c2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8019bfc:	f8d8 2000 	ldr.w	r2, [r8]
 8019c00:	f06f 0601 	mvn.w	r6, #1
 8019c04:	fb06 f705 	mul.w	r7, r6, r5
 8019c08:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8019c0c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8019c10:	0956      	lsrs	r6, r2, #5
 8019c12:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019c16:	ea4c 0606 	orr.w	r6, ip, r6
 8019c1a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019c1e:	4316      	orrs	r6, r2
 8019c20:	53e6      	strh	r6, [r4, r7]
 8019c22:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019c24:	4410      	add	r0, r2
 8019c26:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019c28:	3d01      	subs	r5, #1
 8019c2a:	4411      	add	r1, r2
 8019c2c:	e787      	b.n	8019b3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019c2e:	2a00      	cmp	r2, #0
 8019c30:	d0f7      	beq.n	8019c22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c32:	f06f 0601 	mvn.w	r6, #1
 8019c36:	436e      	muls	r6, r5
 8019c38:	f8d8 c000 	ldr.w	ip, [r8]
 8019c3c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8019c40:	9604      	str	r6, [sp, #16]
 8019c42:	fa1f f982 	uxth.w	r9, r2
 8019c46:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019c4a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8019c4e:	43d2      	mvns	r2, r2
 8019c50:	b2d2      	uxtb	r2, r2
 8019c52:	fb16 f609 	smulbb	r6, r6, r9
 8019c56:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019c5a:	fb07 6702 	mla	r7, r7, r2, r6
 8019c5e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8019c62:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019c66:	fa5f fc8c 	uxtb.w	ip, ip
 8019c6a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019c6e:	fa5f fe8e 	uxtb.w	lr, lr
 8019c72:	fb1c fc09 	smulbb	ip, ip, r9
 8019c76:	fb0e cc02 	mla	ip, lr, r2, ip
 8019c7a:	b2bf      	uxth	r7, r7
 8019c7c:	fb1a fa09 	smulbb	sl, sl, r9
 8019c80:	fa1f fc8c 	uxth.w	ip, ip
 8019c84:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019c88:	fb06 a602 	mla	r6, r6, r2, sl
 8019c8c:	1c7a      	adds	r2, r7, #1
 8019c8e:	f10c 0a01 	add.w	sl, ip, #1
 8019c92:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019c96:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8019c9a:	b2b6      	uxth	r6, r6
 8019c9c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019ca0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019ca4:	ea4a 0707 	orr.w	r7, sl, r7
 8019ca8:	f106 0a01 	add.w	sl, r6, #1
 8019cac:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019cb0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019cb4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019cb8:	9a04      	ldr	r2, [sp, #16]
 8019cba:	ea47 070a 	orr.w	r7, r7, sl
 8019cbe:	52a7      	strh	r7, [r4, r2]
 8019cc0:	e7af      	b.n	8019c22 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019cc2:	f04f 0e00 	mov.w	lr, #0
 8019cc6:	eba3 020e 	sub.w	r2, r3, lr
 8019cca:	2a00      	cmp	r2, #0
 8019ccc:	f77f af3a 	ble.w	8019b44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019cd0:	9e02      	ldr	r6, [sp, #8]
 8019cd2:	1402      	asrs	r2, r0, #16
 8019cd4:	140d      	asrs	r5, r1, #16
 8019cd6:	fb06 2505 	mla	r5, r6, r5, r2
 8019cda:	086a      	lsrs	r2, r5, #1
 8019cdc:	9e03      	ldr	r6, [sp, #12]
 8019cde:	5cb2      	ldrb	r2, [r6, r2]
 8019ce0:	07ed      	lsls	r5, r5, #31
 8019ce2:	bf54      	ite	pl
 8019ce4:	f002 020f 	andpl.w	r2, r2, #15
 8019ce8:	1112      	asrmi	r2, r2, #4
 8019cea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019cee:	b2d2      	uxtb	r2, r2
 8019cf0:	2aff      	cmp	r2, #255	@ 0xff
 8019cf2:	d115      	bne.n	8019d20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8019cf4:	f8d8 5000 	ldr.w	r5, [r8]
 8019cf8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8019cfc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8019d00:	096a      	lsrs	r2, r5, #5
 8019d02:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019d06:	4332      	orrs	r2, r6
 8019d08:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019d0c:	432a      	orrs	r2, r5
 8019d0e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8019d12:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019d14:	4410      	add	r0, r2
 8019d16:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019d18:	f10e 0e01 	add.w	lr, lr, #1
 8019d1c:	4411      	add	r1, r2
 8019d1e:	e7d2      	b.n	8019cc6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019d20:	2a00      	cmp	r2, #0
 8019d22:	d0f6      	beq.n	8019d12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019d24:	f8d8 7000 	ldr.w	r7, [r8]
 8019d28:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019d2c:	fa1f f982 	uxth.w	r9, r2
 8019d30:	ea4f 262c 	mov.w	r6, ip, asr #8
 8019d34:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8019d38:	43d2      	mvns	r2, r2
 8019d3a:	b2d2      	uxtb	r2, r2
 8019d3c:	fb15 f509 	smulbb	r5, r5, r9
 8019d40:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019d44:	fb06 5602 	mla	r6, r6, r2, r5
 8019d48:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8019d4c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019d50:	b2ff      	uxtb	r7, r7
 8019d52:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019d56:	fa5f fc8c 	uxtb.w	ip, ip
 8019d5a:	fb17 f709 	smulbb	r7, r7, r9
 8019d5e:	fb0c 7702 	mla	r7, ip, r2, r7
 8019d62:	b2b6      	uxth	r6, r6
 8019d64:	fb1a fa09 	smulbb	sl, sl, r9
 8019d68:	b2bf      	uxth	r7, r7
 8019d6a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019d6e:	fb05 a502 	mla	r5, r5, r2, sl
 8019d72:	1c72      	adds	r2, r6, #1
 8019d74:	f107 0a01 	add.w	sl, r7, #1
 8019d78:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8019d7c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019d80:	b2ad      	uxth	r5, r5
 8019d82:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019d86:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8019d8a:	ea4a 0606 	orr.w	r6, sl, r6
 8019d8e:	f105 0a01 	add.w	sl, r5, #1
 8019d92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019d96:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019d9a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019d9e:	ea46 060a 	orr.w	r6, r6, sl
 8019da2:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8019da6:	e7b4      	b.n	8019d12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019da8:	b007      	add	sp, #28
 8019daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019dae:	bf00      	nop
 8019db0:	20002f5c 	.word	0x20002f5c

08019db4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8019db4:	4770      	bx	lr

08019db6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8019db6:	4770      	bx	lr

08019db8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8019db8:	4770      	bx	lr

08019dba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8019dba:	4770      	bx	lr

08019dbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8019dbc:	4770      	bx	lr

08019dbe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8019dbe:	4770      	bx	lr

08019dc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8019dc0:	4770      	bx	lr

08019dc2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8019dc2:	4770      	bx	lr

08019dc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019dc4:	4770      	bx	lr

08019dc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019dc6:	4770      	bx	lr

08019dc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019dc8:	4770      	bx	lr

08019dca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019dca:	4770      	bx	lr

08019dcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019dcc:	4770      	bx	lr

08019dce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019dce:	4770      	bx	lr

08019dd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019dd0:	4770      	bx	lr

08019dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019dd2:	4770      	bx	lr

08019dd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019dd4:	4770      	bx	lr

08019dd6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019dd6:	4770      	bx	lr

08019dd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019dd8:	4770      	bx	lr

08019dda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019dda:	4770      	bx	lr

08019ddc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019ddc:	4770      	bx	lr

08019dde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019dde:	4770      	bx	lr

08019de0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019de0:	4770      	bx	lr

08019de2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019de2:	4770      	bx	lr

08019de4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019de4:	4770      	bx	lr

08019de6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8019de6:	4770      	bx	lr

08019de8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019de8:	4770      	bx	lr

08019dea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8019dea:	4770      	bx	lr

08019dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019dec:	4770      	bx	lr

08019dee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019dee:	4770      	bx	lr

08019df0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019df0:	4770      	bx	lr

08019df2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019df2:	4770      	bx	lr

08019df4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019df4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019df8:	b088      	sub	sp, #32
 8019dfa:	ac08      	add	r4, sp, #32
 8019dfc:	4606      	mov	r6, r0
 8019dfe:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8019e02:	4620      	mov	r0, r4
 8019e04:	4688      	mov	r8, r1
 8019e06:	4691      	mov	r9, r2
 8019e08:	f7fd fc32 	bl	8017670 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019e0c:	6833      	ldr	r3, [r6, #0]
 8019e0e:	4605      	mov	r5, r0
 8019e10:	4620      	mov	r0, r4
 8019e12:	699f      	ldr	r7, [r3, #24]
 8019e14:	f7fd fb3a 	bl	801748c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019e18:	4682      	mov	sl, r0
 8019e1a:	4620      	mov	r0, r4
 8019e1c:	f7fd fb6a 	bl	80174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019e20:	9500      	str	r5, [sp, #0]
 8019e22:	e9cd a001 	strd	sl, r0, [sp, #4]
 8019e26:	464b      	mov	r3, r9
 8019e28:	a806      	add	r0, sp, #24
 8019e2a:	4642      	mov	r2, r8
 8019e2c:	4631      	mov	r1, r6
 8019e2e:	47b8      	blx	r7
 8019e30:	4628      	mov	r0, r5
 8019e32:	b008      	add	sp, #32
 8019e34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019e38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8019e38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8019e3c:	2300      	movs	r3, #0
 8019e3e:	9300      	str	r3, [sp, #0]
 8019e40:	4b3d      	ldr	r3, [pc, #244]	@ (8019f38 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8019e42:	781b      	ldrb	r3, [r3, #0]
 8019e44:	2b00      	cmp	r3, #0
 8019e46:	d137      	bne.n	8019eb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8019e48:	4a3c      	ldr	r2, [pc, #240]	@ (8019f3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019e4a:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019e4e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019e52:	2b00      	cmp	r3, #0
 8019e54:	d132      	bne.n	8019ebc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8019e56:	4b3a      	ldr	r3, [pc, #232]	@ (8019f40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019e58:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019e5c:	6808      	ldr	r0, [r1, #0]
 8019e5e:	6849      	ldr	r1, [r1, #4]
 8019e60:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019e64:	ac02      	add	r4, sp, #8
 8019e66:	ab02      	add	r3, sp, #8
 8019e68:	c303      	stmia	r3!, {r0, r1}
 8019e6a:	4669      	mov	r1, sp
 8019e6c:	4620      	mov	r0, r4
 8019e6e:	f7f9 ff21 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019e72:	4668      	mov	r0, sp
 8019e74:	f7f9 fef6 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019e78:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019e7c:	f8bd 2000 	ldrh.w	r2, [sp]
 8019e80:	4d30      	ldr	r5, [pc, #192]	@ (8019f44 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8019e82:	4413      	add	r3, r2
 8019e84:	f8ad 3008 	strh.w	r3, [sp, #8]
 8019e88:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8019e8c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019e90:	6828      	ldr	r0, [r5, #0]
 8019e92:	4413      	add	r3, r2
 8019e94:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019e98:	6803      	ldr	r3, [r0, #0]
 8019e9a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019e9c:	4798      	blx	r3
 8019e9e:	f010 0f01 	tst.w	r0, #1
 8019ea2:	462f      	mov	r7, r5
 8019ea4:	d00c      	beq.n	8019ec0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8019ea6:	6828      	ldr	r0, [r5, #0]
 8019ea8:	6803      	ldr	r3, [r0, #0]
 8019eaa:	e894 0006 	ldmia.w	r4, {r1, r2}
 8019eae:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8019eb0:	4798      	blx	r3
 8019eb2:	b004      	add	sp, #16
 8019eb4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019eb8:	4a21      	ldr	r2, [pc, #132]	@ (8019f40 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019eba:	e7c6      	b.n	8019e4a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8019ebc:	4b1f      	ldr	r3, [pc, #124]	@ (8019f3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019ebe:	e7cb      	b.n	8019e58 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8019ec0:	6838      	ldr	r0, [r7, #0]
 8019ec2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019ec6:	6803      	ldr	r3, [r0, #0]
 8019ec8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8019ecc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019ece:	4798      	blx	r3
 8019ed0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8019ed4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019ed8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8019edc:	fb16 3602 	smlabb	r6, r6, r2, r3
 8019ee0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019ee4:	6838      	ldr	r0, [r7, #0]
 8019ee6:	6803      	ldr	r3, [r0, #0]
 8019ee8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019eea:	4798      	blx	r3
 8019eec:	4a13      	ldr	r2, [pc, #76]	@ (8019f3c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019eee:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8019ef2:	8813      	ldrh	r3, [r2, #0]
 8019ef4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019ef8:	fb03 1404 	mla	r4, r3, r4, r1
 8019efc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019f00:	435d      	muls	r5, r3
 8019f02:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019f06:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8019f0a:	4691      	mov	r9, r2
 8019f0c:	6838      	ldr	r0, [r7, #0]
 8019f0e:	42ac      	cmp	r4, r5
 8019f10:	6803      	ldr	r3, [r0, #0]
 8019f12:	d20e      	bcs.n	8019f32 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8019f14:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8019f18:	4632      	mov	r2, r6
 8019f1a:	4643      	mov	r3, r8
 8019f1c:	4621      	mov	r1, r4
 8019f1e:	47d0      	blx	sl
 8019f20:	f8b9 3000 	ldrh.w	r3, [r9]
 8019f24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019f28:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8019f2c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019f30:	e7ec      	b.n	8019f0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8019f32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019f34:	4798      	blx	r3
 8019f36:	e7bc      	b.n	8019eb2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8019f38:	20002f4c 	.word	0x20002f4c
 8019f3c:	20002f4e 	.word	0x20002f4e
 8019f40:	20002f50 	.word	0x20002f50
 8019f44:	20002f54 	.word	0x20002f54

08019f48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8019f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f4c:	b08b      	sub	sp, #44	@ 0x2c
 8019f4e:	460f      	mov	r7, r1
 8019f50:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8019f54:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8019f58:	4616      	mov	r6, r2
 8019f5a:	f1bb 0f00 	cmp.w	fp, #0
 8019f5e:	d04a      	beq.n	8019ff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019f60:	6810      	ldr	r0, [r2, #0]
 8019f62:	6851      	ldr	r1, [r2, #4]
 8019f64:	ad06      	add	r5, sp, #24
 8019f66:	c503      	stmia	r5!, {r0, r1}
 8019f68:	6818      	ldr	r0, [r3, #0]
 8019f6a:	6859      	ldr	r1, [r3, #4]
 8019f6c:	ad08      	add	r5, sp, #32
 8019f6e:	c503      	stmia	r5!, {r0, r1}
 8019f70:	a806      	add	r0, sp, #24
 8019f72:	f7f9 fe77 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019f76:	4631      	mov	r1, r6
 8019f78:	a808      	add	r0, sp, #32
 8019f7a:	f7f9 fe9b 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019f7e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019f82:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8019f86:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8019f8a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8019f8e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8019f92:	fb16 2103 	smlabb	r1, r6, r3, r2
 8019f96:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8019f9a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8019f9e:	4f5f      	ldr	r7, [pc, #380]	@ (801a11c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019fa0:	440a      	add	r2, r1
 8019fa2:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019fa6:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019faa:	6838      	ldr	r0, [r7, #0]
 8019fac:	4413      	add	r3, r2
 8019fae:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8019fb2:	6803      	ldr	r3, [r0, #0]
 8019fb4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019fb6:	4798      	blx	r3
 8019fb8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8019fbc:	46b9      	mov	r9, r7
 8019fbe:	d11d      	bne.n	8019ffc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8019fc0:	b9fc      	cbnz	r4, 801a002 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019fc2:	f010 0f01 	tst.w	r0, #1
 8019fc6:	d01c      	beq.n	801a002 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019fc8:	f8d9 0000 	ldr.w	r0, [r9]
 8019fcc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8019fd0:	6801      	ldr	r1, [r0, #0]
 8019fd2:	f8cd b00c 	str.w	fp, [sp, #12]
 8019fd6:	2700      	movs	r7, #0
 8019fd8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8019fdc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8019fe0:	9402      	str	r4, [sp, #8]
 8019fe2:	b2ad      	uxth	r5, r5
 8019fe4:	fa1f f488 	uxth.w	r4, r8
 8019fe8:	9501      	str	r5, [sp, #4]
 8019fea:	9400      	str	r4, [sp, #0]
 8019fec:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8019fee:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8019ff2:	4631      	mov	r1, r6
 8019ff4:	47a0      	blx	r4
 8019ff6:	b00b      	add	sp, #44	@ 0x2c
 8019ff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ffc:	f010 0f04 	tst.w	r0, #4
 801a000:	e7e1      	b.n	8019fc6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801a002:	f8d9 0000 	ldr.w	r0, [r9]
 801a006:	6803      	ldr	r3, [r0, #0]
 801a008:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a00a:	4798      	blx	r3
 801a00c:	4b44      	ldr	r3, [pc, #272]	@ (801a120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801a00e:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801a012:	881a      	ldrh	r2, [r3, #0]
 801a014:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801a018:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801a01c:	fb02 1404 	mla	r4, r2, r4, r1
 801a020:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a024:	469a      	mov	sl, r3
 801a026:	fb05 f502 	mul.w	r5, r5, r2
 801a02a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801a02e:	d059      	beq.n	801a0e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801a030:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801a034:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a038:	fa1f f28b 	uxth.w	r2, fp
 801a03c:	fa1f f989 	uxth.w	r9, r9
 801a040:	469e      	mov	lr, r3
 801a042:	42ac      	cmp	r4, r5
 801a044:	d264      	bcs.n	801a110 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a046:	eb04 0a07 	add.w	sl, r4, r7
 801a04a:	4554      	cmp	r4, sl
 801a04c:	d23d      	bcs.n	801a0ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801a04e:	8821      	ldrh	r1, [r4, #0]
 801a050:	f836 3b02 	ldrh.w	r3, [r6], #2
 801a054:	1208      	asrs	r0, r1, #8
 801a056:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a05a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a05e:	fb10 f009 	smulbb	r0, r0, r9
 801a062:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801a066:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a06a:	00c9      	lsls	r1, r1, #3
 801a06c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801a070:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a074:	10d8      	asrs	r0, r3, #3
 801a076:	b2c9      	uxtb	r1, r1
 801a078:	00db      	lsls	r3, r3, #3
 801a07a:	fa1f fc8c 	uxth.w	ip, ip
 801a07e:	fb1b fb09 	smulbb	fp, fp, r9
 801a082:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a086:	b2db      	uxtb	r3, r3
 801a088:	fb11 f109 	smulbb	r1, r1, r9
 801a08c:	fb00 b002 	mla	r0, r0, r2, fp
 801a090:	fb03 1302 	mla	r3, r3, r2, r1
 801a094:	f10c 0b01 	add.w	fp, ip, #1
 801a098:	b29b      	uxth	r3, r3
 801a09a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801a09e:	b280      	uxth	r0, r0
 801a0a0:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801a0a4:	f103 0c01 	add.w	ip, r3, #1
 801a0a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a0ac:	1c43      	adds	r3, r0, #1
 801a0ae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a0b2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a0b6:	0940      	lsrs	r0, r0, #5
 801a0b8:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a0bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a0c0:	ea4c 0c00 	orr.w	ip, ip, r0
 801a0c4:	f824 cb02 	strh.w	ip, [r4], #2
 801a0c8:	e7bf      	b.n	801a04a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801a0ca:	f8be 3000 	ldrh.w	r3, [lr]
 801a0ce:	eba3 0308 	sub.w	r3, r3, r8
 801a0d2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a0d6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a0da:	eba3 0308 	sub.w	r3, r3, r8
 801a0de:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a0e2:	e7ae      	b.n	801a042 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801a0e4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a0e8:	f8d9 0000 	ldr.w	r0, [r9]
 801a0ec:	42ac      	cmp	r4, r5
 801a0ee:	6803      	ldr	r3, [r0, #0]
 801a0f0:	d20e      	bcs.n	801a110 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a0f2:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801a0f6:	4632      	mov	r2, r6
 801a0f8:	463b      	mov	r3, r7
 801a0fa:	4621      	mov	r1, r4
 801a0fc:	47c0      	blx	r8
 801a0fe:	f8ba 3000 	ldrh.w	r3, [sl]
 801a102:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a106:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a10a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a10e:	e7eb      	b.n	801a0e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801a110:	4b02      	ldr	r3, [pc, #8]	@ (801a11c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a112:	6818      	ldr	r0, [r3, #0]
 801a114:	6803      	ldr	r3, [r0, #0]
 801a116:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a118:	4798      	blx	r3
 801a11a:	e76c      	b.n	8019ff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a11c:	20002f54 	.word	0x20002f54
 801a120:	20002f4e 	.word	0x20002f4e

0801a124 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801a124:	b510      	push	{r4, lr}
 801a126:	2104      	movs	r1, #4
 801a128:	4604      	mov	r4, r0
 801a12a:	f00b fc82 	bl	8025a32 <_ZdlPvj>
 801a12e:	4620      	mov	r0, r4
 801a130:	bd10      	pop	{r4, pc}

0801a132 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801a132:	b510      	push	{r4, lr}
 801a134:	2104      	movs	r1, #4
 801a136:	4604      	mov	r4, r0
 801a138:	f00b fc7b 	bl	8025a32 <_ZdlPvj>
 801a13c:	4620      	mov	r0, r4
 801a13e:	bd10      	pop	{r4, pc}

0801a140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801a140:	b510      	push	{r4, lr}
 801a142:	f640 0144 	movw	r1, #2116	@ 0x844
 801a146:	4604      	mov	r4, r0
 801a148:	f00b fc73 	bl	8025a32 <_ZdlPvj>
 801a14c:	4620      	mov	r0, r4
 801a14e:	bd10      	pop	{r4, pc}

0801a150 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801a150:	b510      	push	{r4, lr}
 801a152:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801a156:	4604      	mov	r4, r0
 801a158:	f00b fc6b 	bl	8025a32 <_ZdlPvj>
 801a15c:	4620      	mov	r0, r4
 801a15e:	bd10      	pop	{r4, pc}

0801a160 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a160:	b510      	push	{r4, lr}
 801a162:	2104      	movs	r1, #4
 801a164:	4604      	mov	r4, r0
 801a166:	f00b fc64 	bl	8025a32 <_ZdlPvj>
 801a16a:	4620      	mov	r0, r4
 801a16c:	bd10      	pop	{r4, pc}

0801a16e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a16e:	b510      	push	{r4, lr}
 801a170:	2104      	movs	r1, #4
 801a172:	4604      	mov	r4, r0
 801a174:	f00b fc5d 	bl	8025a32 <_ZdlPvj>
 801a178:	4620      	mov	r0, r4
 801a17a:	bd10      	pop	{r4, pc}

0801a17c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a17c:	b510      	push	{r4, lr}
 801a17e:	2104      	movs	r1, #4
 801a180:	4604      	mov	r4, r0
 801a182:	f00b fc56 	bl	8025a32 <_ZdlPvj>
 801a186:	4620      	mov	r0, r4
 801a188:	bd10      	pop	{r4, pc}

0801a18a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a18a:	b510      	push	{r4, lr}
 801a18c:	2104      	movs	r1, #4
 801a18e:	4604      	mov	r4, r0
 801a190:	f00b fc4f 	bl	8025a32 <_ZdlPvj>
 801a194:	4620      	mov	r0, r4
 801a196:	bd10      	pop	{r4, pc}

0801a198 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a198:	b510      	push	{r4, lr}
 801a19a:	2104      	movs	r1, #4
 801a19c:	4604      	mov	r4, r0
 801a19e:	f00b fc48 	bl	8025a32 <_ZdlPvj>
 801a1a2:	4620      	mov	r0, r4
 801a1a4:	bd10      	pop	{r4, pc}

0801a1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801a1a6:	b510      	push	{r4, lr}
 801a1a8:	2104      	movs	r1, #4
 801a1aa:	4604      	mov	r4, r0
 801a1ac:	f00b fc41 	bl	8025a32 <_ZdlPvj>
 801a1b0:	4620      	mov	r0, r4
 801a1b2:	bd10      	pop	{r4, pc}

0801a1b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a1b4:	b510      	push	{r4, lr}
 801a1b6:	2104      	movs	r1, #4
 801a1b8:	4604      	mov	r4, r0
 801a1ba:	f00b fc3a 	bl	8025a32 <_ZdlPvj>
 801a1be:	4620      	mov	r0, r4
 801a1c0:	bd10      	pop	{r4, pc}

0801a1c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801a1c2:	b510      	push	{r4, lr}
 801a1c4:	2104      	movs	r1, #4
 801a1c6:	4604      	mov	r4, r0
 801a1c8:	f00b fc33 	bl	8025a32 <_ZdlPvj>
 801a1cc:	4620      	mov	r0, r4
 801a1ce:	bd10      	pop	{r4, pc}

0801a1d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a1d0:	b510      	push	{r4, lr}
 801a1d2:	2104      	movs	r1, #4
 801a1d4:	4604      	mov	r4, r0
 801a1d6:	f00b fc2c 	bl	8025a32 <_ZdlPvj>
 801a1da:	4620      	mov	r0, r4
 801a1dc:	bd10      	pop	{r4, pc}

0801a1de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a1de:	b510      	push	{r4, lr}
 801a1e0:	2104      	movs	r1, #4
 801a1e2:	4604      	mov	r4, r0
 801a1e4:	f00b fc25 	bl	8025a32 <_ZdlPvj>
 801a1e8:	4620      	mov	r0, r4
 801a1ea:	bd10      	pop	{r4, pc}

0801a1ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a1ec:	b510      	push	{r4, lr}
 801a1ee:	2104      	movs	r1, #4
 801a1f0:	4604      	mov	r4, r0
 801a1f2:	f00b fc1e 	bl	8025a32 <_ZdlPvj>
 801a1f6:	4620      	mov	r0, r4
 801a1f8:	bd10      	pop	{r4, pc}

0801a1fa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a1fa:	b510      	push	{r4, lr}
 801a1fc:	2104      	movs	r1, #4
 801a1fe:	4604      	mov	r4, r0
 801a200:	f00b fc17 	bl	8025a32 <_ZdlPvj>
 801a204:	4620      	mov	r0, r4
 801a206:	bd10      	pop	{r4, pc}

0801a208 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a208:	b510      	push	{r4, lr}
 801a20a:	2104      	movs	r1, #4
 801a20c:	4604      	mov	r4, r0
 801a20e:	f00b fc10 	bl	8025a32 <_ZdlPvj>
 801a212:	4620      	mov	r0, r4
 801a214:	bd10      	pop	{r4, pc}

0801a216 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a216:	b510      	push	{r4, lr}
 801a218:	2104      	movs	r1, #4
 801a21a:	4604      	mov	r4, r0
 801a21c:	f00b fc09 	bl	8025a32 <_ZdlPvj>
 801a220:	4620      	mov	r0, r4
 801a222:	bd10      	pop	{r4, pc}

0801a224 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a224:	b510      	push	{r4, lr}
 801a226:	2104      	movs	r1, #4
 801a228:	4604      	mov	r4, r0
 801a22a:	f00b fc02 	bl	8025a32 <_ZdlPvj>
 801a22e:	4620      	mov	r0, r4
 801a230:	bd10      	pop	{r4, pc}

0801a232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a232:	b510      	push	{r4, lr}
 801a234:	2104      	movs	r1, #4
 801a236:	4604      	mov	r4, r0
 801a238:	f00b fbfb 	bl	8025a32 <_ZdlPvj>
 801a23c:	4620      	mov	r0, r4
 801a23e:	bd10      	pop	{r4, pc}

0801a240 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a240:	b510      	push	{r4, lr}
 801a242:	2104      	movs	r1, #4
 801a244:	4604      	mov	r4, r0
 801a246:	f00b fbf4 	bl	8025a32 <_ZdlPvj>
 801a24a:	4620      	mov	r0, r4
 801a24c:	bd10      	pop	{r4, pc}

0801a24e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a24e:	b510      	push	{r4, lr}
 801a250:	2104      	movs	r1, #4
 801a252:	4604      	mov	r4, r0
 801a254:	f00b fbed 	bl	8025a32 <_ZdlPvj>
 801a258:	4620      	mov	r0, r4
 801a25a:	bd10      	pop	{r4, pc}

0801a25c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a25c:	b510      	push	{r4, lr}
 801a25e:	2104      	movs	r1, #4
 801a260:	4604      	mov	r4, r0
 801a262:	f00b fbe6 	bl	8025a32 <_ZdlPvj>
 801a266:	4620      	mov	r0, r4
 801a268:	bd10      	pop	{r4, pc}

0801a26a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a26a:	b510      	push	{r4, lr}
 801a26c:	2104      	movs	r1, #4
 801a26e:	4604      	mov	r4, r0
 801a270:	f00b fbdf 	bl	8025a32 <_ZdlPvj>
 801a274:	4620      	mov	r0, r4
 801a276:	bd10      	pop	{r4, pc}

0801a278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a278:	b510      	push	{r4, lr}
 801a27a:	2104      	movs	r1, #4
 801a27c:	4604      	mov	r4, r0
 801a27e:	f00b fbd8 	bl	8025a32 <_ZdlPvj>
 801a282:	4620      	mov	r0, r4
 801a284:	bd10      	pop	{r4, pc}

0801a286 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a286:	b510      	push	{r4, lr}
 801a288:	2104      	movs	r1, #4
 801a28a:	4604      	mov	r4, r0
 801a28c:	f00b fbd1 	bl	8025a32 <_ZdlPvj>
 801a290:	4620      	mov	r0, r4
 801a292:	bd10      	pop	{r4, pc}

0801a294 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a294:	b510      	push	{r4, lr}
 801a296:	2104      	movs	r1, #4
 801a298:	4604      	mov	r4, r0
 801a29a:	f00b fbca 	bl	8025a32 <_ZdlPvj>
 801a29e:	4620      	mov	r0, r4
 801a2a0:	bd10      	pop	{r4, pc}

0801a2a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a2a2:	b510      	push	{r4, lr}
 801a2a4:	2104      	movs	r1, #4
 801a2a6:	4604      	mov	r4, r0
 801a2a8:	f00b fbc3 	bl	8025a32 <_ZdlPvj>
 801a2ac:	4620      	mov	r0, r4
 801a2ae:	bd10      	pop	{r4, pc}

0801a2b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801a2b0:	b510      	push	{r4, lr}
 801a2b2:	2104      	movs	r1, #4
 801a2b4:	4604      	mov	r4, r0
 801a2b6:	f00b fbbc 	bl	8025a32 <_ZdlPvj>
 801a2ba:	4620      	mov	r0, r4
 801a2bc:	bd10      	pop	{r4, pc}

0801a2be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801a2be:	b510      	push	{r4, lr}
 801a2c0:	2104      	movs	r1, #4
 801a2c2:	4604      	mov	r4, r0
 801a2c4:	f00b fbb5 	bl	8025a32 <_ZdlPvj>
 801a2c8:	4620      	mov	r0, r4
 801a2ca:	bd10      	pop	{r4, pc}

0801a2cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801a2cc:	b510      	push	{r4, lr}
 801a2ce:	2104      	movs	r1, #4
 801a2d0:	4604      	mov	r4, r0
 801a2d2:	f00b fbae 	bl	8025a32 <_ZdlPvj>
 801a2d6:	4620      	mov	r0, r4
 801a2d8:	bd10      	pop	{r4, pc}

0801a2da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801a2da:	b510      	push	{r4, lr}
 801a2dc:	2104      	movs	r1, #4
 801a2de:	4604      	mov	r4, r0
 801a2e0:	f00b fba7 	bl	8025a32 <_ZdlPvj>
 801a2e4:	4620      	mov	r0, r4
 801a2e6:	bd10      	pop	{r4, pc}

0801a2e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801a2e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a2ec:	b08f      	sub	sp, #60	@ 0x3c
 801a2ee:	4616      	mov	r6, r2
 801a2f0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801a2f4:	9205      	str	r2, [sp, #20]
 801a2f6:	4682      	mov	sl, r0
 801a2f8:	460d      	mov	r5, r1
 801a2fa:	2a00      	cmp	r2, #0
 801a2fc:	f000 82b7 	beq.w	801a86e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801a300:	6830      	ldr	r0, [r6, #0]
 801a302:	6871      	ldr	r1, [r6, #4]
 801a304:	ac0a      	add	r4, sp, #40	@ 0x28
 801a306:	c403      	stmia	r4!, {r0, r1}
 801a308:	6818      	ldr	r0, [r3, #0]
 801a30a:	6859      	ldr	r1, [r3, #4]
 801a30c:	ac0c      	add	r4, sp, #48	@ 0x30
 801a30e:	c403      	stmia	r4!, {r0, r1}
 801a310:	a80a      	add	r0, sp, #40	@ 0x28
 801a312:	f7f9 fca7 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a316:	4631      	mov	r1, r6
 801a318:	a80c      	add	r0, sp, #48	@ 0x30
 801a31a:	f7f9 fccb 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a31e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a322:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801a326:	bfd7      	itett	le
 801a328:	b293      	uxthle	r3, r2
 801a32a:	2301      	movgt	r3, #1
 801a32c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a330:	fb91 f3f3 	sdivle	r3, r1, r3
 801a334:	9300      	str	r3, [sp, #0]
 801a336:	f105 0308 	add.w	r3, r5, #8
 801a33a:	9900      	ldr	r1, [sp, #0]
 801a33c:	9306      	str	r3, [sp, #24]
 801a33e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801a342:	440b      	add	r3, r1
 801a344:	3b01      	subs	r3, #1
 801a346:	fb93 f3f1 	sdiv	r3, r3, r1
 801a34a:	9906      	ldr	r1, [sp, #24]
 801a34c:	3b01      	subs	r3, #1
 801a34e:	b29b      	uxth	r3, r3
 801a350:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a354:	9307      	str	r3, [sp, #28]
 801a356:	9900      	ldr	r1, [sp, #0]
 801a358:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a35c:	fb93 f0f1 	sdiv	r0, r3, r1
 801a360:	b284      	uxth	r4, r0
 801a362:	9402      	str	r4, [sp, #8]
 801a364:	9d02      	ldr	r5, [sp, #8]
 801a366:	9c00      	ldr	r4, [sp, #0]
 801a368:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801a36c:	fb05 3414 	mls	r4, r5, r4, r3
 801a370:	fb14 f402 	smulbb	r4, r4, r2
 801a374:	440c      	add	r4, r1
 801a376:	b2a4      	uxth	r4, r4
 801a378:	2d00      	cmp	r5, #0
 801a37a:	d06c      	beq.n	801a456 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801a37c:	1e6a      	subs	r2, r5, #1
 801a37e:	9806      	ldr	r0, [sp, #24]
 801a380:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801a384:	9a07      	ldr	r2, [sp, #28]
 801a386:	ba36      	rev	r6, r6
 801a388:	4416      	add	r6, r2
 801a38a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801a38e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801a392:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801a6c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801a396:	4411      	add	r1, r2
 801a398:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801a39c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801a3a0:	4413      	add	r3, r2
 801a3a2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a3a6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a3aa:	9301      	str	r3, [sp, #4]
 801a3ac:	4bc4      	ldr	r3, [pc, #784]	@ (801a6c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801a3ae:	6818      	ldr	r0, [r3, #0]
 801a3b0:	6803      	ldr	r3, [r0, #0]
 801a3b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a3b4:	4798      	blx	r3
 801a3b6:	4bc3      	ldr	r3, [pc, #780]	@ (801a6c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801a3b8:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801a3bc:	881b      	ldrh	r3, [r3, #0]
 801a3be:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801a3c2:	fb03 2808 	mla	r8, r3, r8, r2
 801a3c6:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801a3ca:	436b      	muls	r3, r5
 801a3cc:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801a3d0:	9309      	str	r3, [sp, #36]	@ 0x24
 801a3d2:	2500      	movs	r5, #0
 801a3d4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801a3d8:	fb94 f3f3 	sdiv	r3, r4, r3
 801a3dc:	9304      	str	r3, [sp, #16]
 801a3de:	f10a 0304 	add.w	r3, sl, #4
 801a3e2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801a3e6:	4629      	mov	r1, r5
 801a3e8:	4618      	mov	r0, r3
 801a3ea:	9308      	str	r3, [sp, #32]
 801a3ec:	f00b fdd7 	bl	8025f9e <memset>
 801a3f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a3f2:	4543      	cmp	r3, r8
 801a3f4:	f240 8236 	bls.w	801a864 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801a3f8:	2203      	movs	r2, #3
 801a3fa:	2107      	movs	r1, #7
 801a3fc:	200b      	movs	r0, #11
 801a3fe:	2c00      	cmp	r4, #0
 801a400:	f000 8131 	beq.w	801a666 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801a404:	7833      	ldrb	r3, [r6, #0]
 801a406:	b2db      	uxtb	r3, r3
 801a408:	2bfe      	cmp	r3, #254	@ 0xfe
 801a40a:	d126      	bne.n	801a45a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801a40c:	f896 e001 	ldrb.w	lr, [r6, #1]
 801a410:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a414:	f896 b003 	ldrb.w	fp, [r6, #3]
 801a418:	fa5f fe8e 	uxtb.w	lr, lr
 801a41c:	fa5f fc8c 	uxtb.w	ip, ip
 801a420:	f36e 0507 	bfi	r5, lr, #0, #8
 801a424:	f36c 250f 	bfi	r5, ip, #8, #8
 801a428:	fa5f fb8b 	uxtb.w	fp, fp
 801a42c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a430:	f36b 4517 	bfi	r5, fp, #16, #8
 801a434:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801a438:	0e2b      	lsrs	r3, r5, #24
 801a43a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a43e:	fb10 c303 	smlabb	r3, r0, r3, ip
 801a442:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a446:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a44a:	3c01      	subs	r4, #1
 801a44c:	1d37      	adds	r7, r6, #4
 801a44e:	b2a4      	uxth	r4, r4
 801a450:	605d      	str	r5, [r3, #4]
 801a452:	463e      	mov	r6, r7
 801a454:	e7d3      	b.n	801a3fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801a456:	9e07      	ldr	r6, [sp, #28]
 801a458:	e797      	b.n	801a38a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801a45a:	2bff      	cmp	r3, #255	@ 0xff
 801a45c:	d127      	bne.n	801a4ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801a45e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a462:	78b3      	ldrb	r3, [r6, #2]
 801a464:	f896 e003 	ldrb.w	lr, [r6, #3]
 801a468:	f896 b004 	ldrb.w	fp, [r6, #4]
 801a46c:	fa5f fc8c 	uxtb.w	ip, ip
 801a470:	b2db      	uxtb	r3, r3
 801a472:	f36c 0507 	bfi	r5, ip, #0, #8
 801a476:	f363 250f 	bfi	r5, r3, #8, #8
 801a47a:	fa5f fe8e 	uxtb.w	lr, lr
 801a47e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801a482:	fb12 330e 	smlabb	r3, r2, lr, r3
 801a486:	fa5f fb8b 	uxtb.w	fp, fp
 801a48a:	f36e 4517 	bfi	r5, lr, #16, #8
 801a48e:	fb11 330c 	smlabb	r3, r1, ip, r3
 801a492:	f36b 651f 	bfi	r5, fp, #24, #8
 801a496:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801a49a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801a49e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801a4a2:	3c01      	subs	r4, #1
 801a4a4:	1d77      	adds	r7, r6, #5
 801a4a6:	b2a4      	uxth	r4, r4
 801a4a8:	f8cb 5004 	str.w	r5, [fp, #4]
 801a4ac:	e7d1      	b.n	801a452 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a4ae:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801a4b2:	f106 0701 	add.w	r7, r6, #1
 801a4b6:	d107      	bne.n	801a4c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801a4b8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a4bc:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a4c0:	685d      	ldr	r5, [r3, #4]
 801a4c2:	3c01      	subs	r4, #1
 801a4c4:	b2a4      	uxth	r4, r4
 801a4c6:	e7c4      	b.n	801a452 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a4c8:	f1bc 0f01 	cmp.w	ip, #1
 801a4cc:	d12c      	bne.n	801a528 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801a4ce:	f003 0e03 	and.w	lr, r3, #3
 801a4d2:	f1ae 0e02 	sub.w	lr, lr, #2
 801a4d6:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801a4da:	fa5f fe8e 	uxtb.w	lr, lr
 801a4de:	f003 0c0c 	and.w	ip, r3, #12
 801a4e2:	f36e 0507 	bfi	r5, lr, #0, #8
 801a4e6:	f1ac 0c08 	sub.w	ip, ip, #8
 801a4ea:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801a4ee:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801a4f2:	f36c 250f 	bfi	r5, ip, #8, #8
 801a4f6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a4fa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a4fe:	3b02      	subs	r3, #2
 801a500:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a504:	b2db      	uxtb	r3, r3
 801a506:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a50a:	f363 4517 	bfi	r5, r3, #16, #8
 801a50e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801a512:	0e2e      	lsrs	r6, r5, #24
 801a514:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a518:	fb10 c606 	smlabb	r6, r0, r6, ip
 801a51c:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801a520:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801a524:	6075      	str	r5, [r6, #4]
 801a526:	e7cc      	b.n	801a4c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801a528:	f1bc 0f02 	cmp.w	ip, #2
 801a52c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a530:	d12a      	bne.n	801a588 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801a532:	1cb7      	adds	r7, r6, #2
 801a534:	7876      	ldrb	r6, [r6, #1]
 801a536:	b2f6      	uxtb	r6, r6
 801a538:	f006 0c0f 	and.w	ip, r6, #15
 801a53c:	3b20      	subs	r3, #32
 801a53e:	f1ac 0c08 	sub.w	ip, ip, #8
 801a542:	449c      	add	ip, r3
 801a544:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801a548:	fa5f fc8c 	uxtb.w	ip, ip
 801a54c:	f36c 0507 	bfi	r5, ip, #0, #8
 801a550:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801a554:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801a558:	fa5f fe8e 	uxtb.w	lr, lr
 801a55c:	1136      	asrs	r6, r6, #4
 801a55e:	f36e 250f 	bfi	r5, lr, #8, #8
 801a562:	3e08      	subs	r6, #8
 801a564:	4433      	add	r3, r6
 801a566:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a56a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a56e:	b2db      	uxtb	r3, r3
 801a570:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801a574:	f363 4517 	bfi	r5, r3, #16, #8
 801a578:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801a57c:	0e2e      	lsrs	r6, r5, #24
 801a57e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801a582:	fb10 e606 	smlabb	r6, r0, r6, lr
 801a586:	e7c9      	b.n	801a51c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801a588:	1c5e      	adds	r6, r3, #1
 801a58a:	42a6      	cmp	r6, r4
 801a58c:	dd4e      	ble.n	801a62c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801a58e:	1b36      	subs	r6, r6, r4
 801a590:	2e00      	cmp	r6, #0
 801a592:	dc4e      	bgt.n	801a632 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801a594:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a598:	2400      	movs	r4, #0
 801a59a:	f1bb 0f00 	cmp.w	fp, #0
 801a59e:	f340 8122 	ble.w	801a7e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801a5a2:	1c7b      	adds	r3, r7, #1
 801a5a4:	9303      	str	r3, [sp, #12]
 801a5a6:	783b      	ldrb	r3, [r7, #0]
 801a5a8:	b2db      	uxtb	r3, r3
 801a5aa:	2bfe      	cmp	r3, #254	@ 0xfe
 801a5ac:	d160      	bne.n	801a670 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801a5ae:	7879      	ldrb	r1, [r7, #1]
 801a5b0:	78ba      	ldrb	r2, [r7, #2]
 801a5b2:	78f8      	ldrb	r0, [r7, #3]
 801a5b4:	b2c9      	uxtb	r1, r1
 801a5b6:	f361 0507 	bfi	r5, r1, #0, #8
 801a5ba:	b2d2      	uxtb	r2, r2
 801a5bc:	1d3b      	adds	r3, r7, #4
 801a5be:	f362 250f 	bfi	r5, r2, #8, #8
 801a5c2:	b2c0      	uxtb	r0, r0
 801a5c4:	9303      	str	r3, [sp, #12]
 801a5c6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a5ca:	2303      	movs	r3, #3
 801a5cc:	fb13 2200 	smlabb	r2, r3, r0, r2
 801a5d0:	f360 4517 	bfi	r5, r0, #16, #8
 801a5d4:	2307      	movs	r3, #7
 801a5d6:	fb13 2101 	smlabb	r1, r3, r1, r2
 801a5da:	0e2e      	lsrs	r6, r5, #24
 801a5dc:	230b      	movs	r3, #11
 801a5de:	fb13 1306 	smlabb	r3, r3, r6, r1
 801a5e2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a5e6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a5ea:	605d      	str	r5, [r3, #4]
 801a5ec:	2601      	movs	r6, #1
 801a5ee:	4637      	mov	r7, r6
 801a5f0:	0e2b      	lsrs	r3, r5, #24
 801a5f2:	ebab 0b07 	sub.w	fp, fp, r7
 801a5f6:	eba6 0607 	sub.w	r6, r6, r7
 801a5fa:	f040 80d3 	bne.w	801a7a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801a5fe:	b18c      	cbz	r4, 801a624 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801a600:	4648      	mov	r0, r9
 801a602:	00a1      	lsls	r1, r4, #2
 801a604:	f7f5 fa19 	bl	800fa3a <_ZN8touchgfx5paint9flushLineEPmi>
 801a608:	9b05      	ldr	r3, [sp, #20]
 801a60a:	4622      	mov	r2, r4
 801a60c:	4649      	mov	r1, r9
 801a60e:	4640      	mov	r0, r8
 801a610:	f7f5 fac6 	bl	800fba0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a614:	4b2c      	ldr	r3, [pc, #176]	@ (801a6c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801a616:	4a2d      	ldr	r2, [pc, #180]	@ (801a6cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801a618:	4599      	cmp	r9, r3
 801a61a:	bf08      	it	eq
 801a61c:	4613      	moveq	r3, r2
 801a61e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a622:	4699      	mov	r9, r3
 801a624:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801a628:	2400      	movs	r4, #0
 801a62a:	e0da      	b.n	801a7e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801a62c:	1ba6      	subs	r6, r4, r6
 801a62e:	b2b4      	uxth	r4, r6
 801a630:	e70f      	b.n	801a452 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a632:	9b01      	ldr	r3, [sp, #4]
 801a634:	9a01      	ldr	r2, [sp, #4]
 801a636:	42b3      	cmp	r3, r6
 801a638:	bfa8      	it	ge
 801a63a:	4633      	movge	r3, r6
 801a63c:	0e2c      	lsrs	r4, r5, #24
 801a63e:	eba2 0b03 	sub.w	fp, r2, r3
 801a642:	eba6 0603 	sub.w	r6, r6, r3
 801a646:	d00b      	beq.n	801a660 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801a648:	f1a9 0104 	sub.w	r1, r9, #4
 801a64c:	461a      	mov	r2, r3
 801a64e:	2a00      	cmp	r2, #0
 801a650:	dc02      	bgt.n	801a658 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801a652:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a656:	e7a0      	b.n	801a59a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a658:	f841 5f04 	str.w	r5, [r1, #4]!
 801a65c:	3a01      	subs	r2, #1
 801a65e:	e7f6      	b.n	801a64e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801a660:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801a664:	e799      	b.n	801a59a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a666:	4637      	mov	r7, r6
 801a668:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a66c:	4626      	mov	r6, r4
 801a66e:	e794      	b.n	801a59a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a670:	2bff      	cmp	r3, #255	@ 0xff
 801a672:	d11d      	bne.n	801a6b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801a674:	7878      	ldrb	r0, [r7, #1]
 801a676:	78ba      	ldrb	r2, [r7, #2]
 801a678:	78fe      	ldrb	r6, [r7, #3]
 801a67a:	1d7b      	adds	r3, r7, #5
 801a67c:	b2c0      	uxtb	r0, r0
 801a67e:	9303      	str	r3, [sp, #12]
 801a680:	793b      	ldrb	r3, [r7, #4]
 801a682:	f360 0507 	bfi	r5, r0, #0, #8
 801a686:	b2d2      	uxtb	r2, r2
 801a688:	b2d9      	uxtb	r1, r3
 801a68a:	f362 250f 	bfi	r5, r2, #8, #8
 801a68e:	b2f6      	uxtb	r6, r6
 801a690:	2303      	movs	r3, #3
 801a692:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a696:	fb13 2206 	smlabb	r2, r3, r6, r2
 801a69a:	2307      	movs	r3, #7
 801a69c:	fb13 2000 	smlabb	r0, r3, r0, r2
 801a6a0:	f366 4517 	bfi	r5, r6, #16, #8
 801a6a4:	230b      	movs	r3, #11
 801a6a6:	f361 651f 	bfi	r5, r1, #24, #8
 801a6aa:	fb13 0301 	smlabb	r3, r3, r1, r0
 801a6ae:	e798      	b.n	801a5e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801a6b0:	119e      	asrs	r6, r3, #6
 801a6b2:	d10d      	bne.n	801a6d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801a6b4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a6b8:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a6bc:	685d      	ldr	r5, [r3, #4]
 801a6be:	e795      	b.n	801a5ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801a6c0:	20002f54 	.word	0x20002f54
 801a6c4:	20002f4e 	.word	0x20002f4e
 801a6c8:	20000120 	.word	0x20000120
 801a6cc:	20000220 	.word	0x20000220
 801a6d0:	2e01      	cmp	r6, #1
 801a6d2:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801a6d6:	d12b      	bne.n	801a730 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801a6d8:	f003 0003 	and.w	r0, r3, #3
 801a6dc:	3802      	subs	r0, #2
 801a6de:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801a6e2:	b2c0      	uxtb	r0, r0
 801a6e4:	f003 020c 	and.w	r2, r3, #12
 801a6e8:	f360 0507 	bfi	r5, r0, #0, #8
 801a6ec:	3a08      	subs	r2, #8
 801a6ee:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801a6f2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801a6f6:	f362 250f 	bfi	r5, r2, #8, #8
 801a6fa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a6fe:	1e9f      	subs	r7, r3, #2
 801a700:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801a704:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801a708:	b2db      	uxtb	r3, r3
 801a70a:	2703      	movs	r7, #3
 801a70c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a710:	fb17 2203 	smlabb	r2, r7, r3, r2
 801a714:	2707      	movs	r7, #7
 801a716:	f363 4517 	bfi	r5, r3, #16, #8
 801a71a:	fb17 2000 	smlabb	r0, r7, r0, r2
 801a71e:	230b      	movs	r3, #11
 801a720:	fb13 0101 	smlabb	r1, r3, r1, r0
 801a724:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801a728:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801a72c:	604d      	str	r5, [r1, #4]
 801a72e:	e75e      	b.n	801a5ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801a730:	2e02      	cmp	r6, #2
 801a732:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a736:	d12f      	bne.n	801a798 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801a738:	7878      	ldrb	r0, [r7, #1]
 801a73a:	1cba      	adds	r2, r7, #2
 801a73c:	b2c0      	uxtb	r0, r0
 801a73e:	9203      	str	r2, [sp, #12]
 801a740:	f000 020f 	and.w	r2, r0, #15
 801a744:	3b20      	subs	r3, #32
 801a746:	3a08      	subs	r2, #8
 801a748:	441a      	add	r2, r3
 801a74a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801a74e:	b2d2      	uxtb	r2, r2
 801a750:	f362 0507 	bfi	r5, r2, #0, #8
 801a754:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801a758:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801a75c:	b2f6      	uxtb	r6, r6
 801a75e:	1100      	asrs	r0, r0, #4
 801a760:	f366 250f 	bfi	r5, r6, #8, #8
 801a764:	3808      	subs	r0, #8
 801a766:	4403      	add	r3, r0
 801a768:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801a76c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801a770:	b2db      	uxtb	r3, r3
 801a772:	2003      	movs	r0, #3
 801a774:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801a778:	fb10 6603 	smlabb	r6, r0, r3, r6
 801a77c:	2007      	movs	r0, #7
 801a77e:	f363 4517 	bfi	r5, r3, #16, #8
 801a782:	fb10 6202 	smlabb	r2, r0, r2, r6
 801a786:	230b      	movs	r3, #11
 801a788:	fb13 2101 	smlabb	r1, r3, r1, r2
 801a78c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801a790:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801a794:	604d      	str	r5, [r1, #4]
 801a796:	e729      	b.n	801a5ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801a798:	1c5e      	adds	r6, r3, #1
 801a79a:	45b3      	cmp	fp, r6
 801a79c:	465f      	mov	r7, fp
 801a79e:	bfa8      	it	ge
 801a7a0:	4637      	movge	r7, r6
 801a7a2:	e725      	b.n	801a5f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801a7a4:	193b      	adds	r3, r7, r4
 801a7a6:	2b40      	cmp	r3, #64	@ 0x40
 801a7a8:	dd13      	ble.n	801a7d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801a7aa:	4648      	mov	r0, r9
 801a7ac:	00a1      	lsls	r1, r4, #2
 801a7ae:	f7f5 f944 	bl	800fa3a <_ZN8touchgfx5paint9flushLineEPmi>
 801a7b2:	4649      	mov	r1, r9
 801a7b4:	9b05      	ldr	r3, [sp, #20]
 801a7b6:	4622      	mov	r2, r4
 801a7b8:	4640      	mov	r0, r8
 801a7ba:	f7f5 f9f1 	bl	800fba0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a7be:	4b2d      	ldr	r3, [pc, #180]	@ (801a874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801a7c0:	4599      	cmp	r9, r3
 801a7c2:	bf0c      	ite	eq
 801a7c4:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801a880 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801a7c8:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801a874 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801a7cc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a7d0:	2400      	movs	r4, #0
 801a7d2:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801a7d6:	463b      	mov	r3, r7
 801a7d8:	3b01      	subs	r3, #1
 801a7da:	f842 5b04 	str.w	r5, [r2], #4
 801a7de:	d1fb      	bne.n	801a7d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801a7e0:	443c      	add	r4, r7
 801a7e2:	9f03      	ldr	r7, [sp, #12]
 801a7e4:	e6d9      	b.n	801a59a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a7e6:	b15c      	cbz	r4, 801a800 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801a7e8:	00a1      	lsls	r1, r4, #2
 801a7ea:	4648      	mov	r0, r9
 801a7ec:	f7f5 f925 	bl	800fa3a <_ZN8touchgfx5paint9flushLineEPmi>
 801a7f0:	4640      	mov	r0, r8
 801a7f2:	9b05      	ldr	r3, [sp, #20]
 801a7f4:	4622      	mov	r2, r4
 801a7f6:	4649      	mov	r1, r9
 801a7f8:	f7f5 f9d2 	bl	800fba0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a7fc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a800:	4b1d      	ldr	r3, [pc, #116]	@ (801a878 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801a802:	9a01      	ldr	r2, [sp, #4]
 801a804:	881b      	ldrh	r3, [r3, #0]
 801a806:	1a9b      	subs	r3, r3, r2
 801a808:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801a80c:	9b04      	ldr	r3, [sp, #16]
 801a80e:	3301      	adds	r3, #1
 801a810:	9304      	str	r3, [sp, #16]
 801a812:	9a04      	ldr	r2, [sp, #16]
 801a814:	9b00      	ldr	r3, [sp, #0]
 801a816:	4293      	cmp	r3, r2
 801a818:	d11d      	bne.n	801a856 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801a81a:	9b02      	ldr	r3, [sp, #8]
 801a81c:	9a02      	ldr	r2, [sp, #8]
 801a81e:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801a822:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801a826:	9808      	ldr	r0, [sp, #32]
 801a828:	f103 0b01 	add.w	fp, r3, #1
 801a82c:	9b06      	ldr	r3, [sp, #24]
 801a82e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801a832:	9b07      	ldr	r3, [sp, #28]
 801a834:	2500      	movs	r5, #0
 801a836:	ba3f      	rev	r7, r7
 801a838:	1ba4      	subs	r4, r4, r6
 801a83a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801a83e:	4629      	mov	r1, r5
 801a840:	441f      	add	r7, r3
 801a842:	b2a4      	uxth	r4, r4
 801a844:	f00b fbab 	bl	8025f9e <memset>
 801a848:	f8cd b008 	str.w	fp, [sp, #8]
 801a84c:	9504      	str	r5, [sp, #16]
 801a84e:	f7f5 f8ed 	bl	800fa2c <_ZN8touchgfx5paint8tearDownEv>
 801a852:	463e      	mov	r6, r7
 801a854:	e5cc      	b.n	801a3f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801a856:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801a85a:	9b01      	ldr	r3, [sp, #4]
 801a85c:	1ae4      	subs	r4, r4, r3
 801a85e:	1ba4      	subs	r4, r4, r6
 801a860:	b2a4      	uxth	r4, r4
 801a862:	e7f4      	b.n	801a84e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801a864:	4b05      	ldr	r3, [pc, #20]	@ (801a87c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801a866:	6818      	ldr	r0, [r3, #0]
 801a868:	6803      	ldr	r3, [r0, #0]
 801a86a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a86c:	4798      	blx	r3
 801a86e:	b00f      	add	sp, #60	@ 0x3c
 801a870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a874:	20000120 	.word	0x20000120
 801a878:	20002f4e 	.word	0x20002f4e
 801a87c:	20002f54 	.word	0x20002f54
 801a880:	20000220 	.word	0x20000220

0801a884 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a888:	b08f      	sub	sp, #60	@ 0x3c
 801a88a:	461c      	mov	r4, r3
 801a88c:	9205      	str	r2, [sp, #20]
 801a88e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a892:	9100      	str	r1, [sp, #0]
 801a894:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a896:	9201      	str	r2, [sp, #4]
 801a898:	2a00      	cmp	r2, #0
 801a89a:	f000 8115 	beq.w	801aac8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801a89e:	6820      	ldr	r0, [r4, #0]
 801a8a0:	6861      	ldr	r1, [r4, #4]
 801a8a2:	aa0a      	add	r2, sp, #40	@ 0x28
 801a8a4:	c203      	stmia	r2!, {r0, r1}
 801a8a6:	6818      	ldr	r0, [r3, #0]
 801a8a8:	6859      	ldr	r1, [r3, #4]
 801a8aa:	aa0c      	add	r2, sp, #48	@ 0x30
 801a8ac:	c203      	stmia	r2!, {r0, r1}
 801a8ae:	a80a      	add	r0, sp, #40	@ 0x28
 801a8b0:	f7f9 f9d8 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a8b4:	4621      	mov	r1, r4
 801a8b6:	a80c      	add	r0, sp, #48	@ 0x30
 801a8b8:	f7f9 f9fc 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a8bc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801a8c0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801a8c4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801a8c8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801a8cc:	bfde      	ittt	le
 801a8ce:	b2b3      	uxthle	r3, r6
 801a8d0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801a8d4:	fb92 f3f3 	sdivle	r3, r2, r3
 801a8d8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801a8dc:	bfc8      	it	gt
 801a8de:	2301      	movgt	r3, #1
 801a8e0:	fb92 f1f3 	sdiv	r1, r2, r3
 801a8e4:	fa1f fc81 	uxth.w	ip, r1
 801a8e8:	fb0c 2413 	mls	r4, ip, r3, r2
 801a8ec:	fb14 f406 	smulbb	r4, r4, r6
 801a8f0:	441d      	add	r5, r3
 801a8f2:	4404      	add	r4, r0
 801a8f4:	4661      	mov	r1, ip
 801a8f6:	3d01      	subs	r5, #1
 801a8f8:	b2a4      	uxth	r4, r4
 801a8fa:	fb95 f5f3 	sdiv	r5, r5, r3
 801a8fe:	b131      	cbz	r1, 801a90e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801a900:	9b05      	ldr	r3, [sp, #20]
 801a902:	9900      	ldr	r1, [sp, #0]
 801a904:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a908:	ba1b      	rev	r3, r3
 801a90a:	4419      	add	r1, r3
 801a90c:	9100      	str	r1, [sp, #0]
 801a90e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801a912:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801a916:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801a91a:	4418      	add	r0, r3
 801a91c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801a920:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801a924:	441a      	add	r2, r3
 801a926:	4b6a      	ldr	r3, [pc, #424]	@ (801aad0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a928:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801a92c:	6818      	ldr	r0, [r3, #0]
 801a92e:	6803      	ldr	r3, [r0, #0]
 801a930:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a932:	4798      	blx	r3
 801a934:	4967      	ldr	r1, [pc, #412]	@ (801aad4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801a936:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801a93a:	880b      	ldrh	r3, [r1, #0]
 801a93c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801a940:	9109      	str	r1, [sp, #36]	@ 0x24
 801a942:	fb03 c202 	mla	r2, r3, r2, ip
 801a946:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a94a:	4373      	muls	r3, r6
 801a94c:	b2ad      	uxth	r5, r5
 801a94e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a952:	00ad      	lsls	r5, r5, #2
 801a954:	9306      	str	r3, [sp, #24]
 801a956:	1d2b      	adds	r3, r5, #4
 801a958:	9307      	str	r3, [sp, #28]
 801a95a:	9b01      	ldr	r3, [sp, #4]
 801a95c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a960:	9103      	str	r1, [sp, #12]
 801a962:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801a966:	2c00      	cmp	r4, #0
 801a968:	bf0c      	ite	eq
 801a96a:	46c6      	moveq	lr, r8
 801a96c:	f04f 0e00 	movne.w	lr, #0
 801a970:	2300      	movs	r3, #0
 801a972:	b292      	uxth	r2, r2
 801a974:	fa1f fe8e 	uxth.w	lr, lr
 801a978:	9302      	str	r3, [sp, #8]
 801a97a:	9204      	str	r2, [sp, #16]
 801a97c:	9a06      	ldr	r2, [sp, #24]
 801a97e:	4282      	cmp	r2, r0
 801a980:	f240 809d 	bls.w	801aabe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801a984:	b963      	cbnz	r3, 801a9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a986:	9b00      	ldr	r3, [sp, #0]
 801a988:	781a      	ldrb	r2, [r3, #0]
 801a98a:	0993      	lsrs	r3, r2, #6
 801a98c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801a990:	9202      	str	r2, [sp, #8]
 801a992:	1e5a      	subs	r2, r3, #1
 801a994:	2a02      	cmp	r2, #2
 801a996:	d815      	bhi.n	801a9c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801a998:	9a00      	ldr	r2, [sp, #0]
 801a99a:	3201      	adds	r2, #1
 801a99c:	9200      	str	r2, [sp, #0]
 801a99e:	b29b      	uxth	r3, r3
 801a9a0:	b1b4      	cbz	r4, 801a9d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801a9a2:	429c      	cmp	r4, r3
 801a9a4:	bf95      	itete	ls
 801a9a6:	1b1c      	subls	r4, r3, r4
 801a9a8:	1ae4      	subhi	r4, r4, r3
 801a9aa:	fa1f fa84 	uxthls.w	sl, r4
 801a9ae:	b2a4      	uxthhi	r4, r4
 801a9b0:	bf87      	ittee	hi
 801a9b2:	4671      	movhi	r1, lr
 801a9b4:	f04f 0a00 	movhi.w	sl, #0
 801a9b8:	fa1f f188 	uxthls.w	r1, r8
 801a9bc:	2400      	movls	r4, #0
 801a9be:	4653      	mov	r3, sl
 801a9c0:	468e      	mov	lr, r1
 801a9c2:	e7db      	b.n	801a97c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801a9c4:	9a00      	ldr	r2, [sp, #0]
 801a9c6:	9b00      	ldr	r3, [sp, #0]
 801a9c8:	3202      	adds	r2, #2
 801a9ca:	785b      	ldrb	r3, [r3, #1]
 801a9cc:	9200      	str	r2, [sp, #0]
 801a9ce:	e7e7      	b.n	801a9a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801a9d0:	2202      	movs	r2, #2
 801a9d2:	4615      	mov	r5, r2
 801a9d4:	9907      	ldr	r1, [sp, #28]
 801a9d6:	9a02      	ldr	r2, [sp, #8]
 801a9d8:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a9dc:	9905      	ldr	r1, [sp, #20]
 801a9de:	4573      	cmp	r3, lr
 801a9e0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801a9e4:	9a01      	ldr	r2, [sp, #4]
 801a9e6:	bf2b      	itete	cs
 801a9e8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801a9ec:	ebae 0103 	subcc.w	r1, lr, r3
 801a9f0:	46f1      	movcs	r9, lr
 801a9f2:	4699      	movcc	r9, r3
 801a9f4:	bf27      	ittee	cs
 801a9f6:	fa1f fa8a 	uxthcs.w	sl, sl
 801a9fa:	4621      	movcs	r1, r4
 801a9fc:	b289      	uxthcc	r1, r1
 801a9fe:	46a2      	movcc	sl, r4
 801aa00:	2aff      	cmp	r2, #255	@ 0xff
 801aa02:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801aa06:	d105      	bne.n	801aa14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801aa08:	4481      	add	r9, r0
 801aa0a:	4581      	cmp	r9, r0
 801aa0c:	d045      	beq.n	801aa9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801aa0e:	f820 cb02 	strh.w	ip, [r0], #2
 801aa12:	e7fa      	b.n	801aa0a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801aa14:	9d03      	ldr	r5, [sp, #12]
 801aa16:	ea4f 222c 	mov.w	r2, ip, asr #8
 801aa1a:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801aa1e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801aa22:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aa26:	436a      	muls	r2, r5
 801aa28:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801aa2c:	fa5f fc8c 	uxtb.w	ip, ip
 801aa30:	9208      	str	r2, [sp, #32]
 801aa32:	fb0b fb05 	mul.w	fp, fp, r5
 801aa36:	fb0c fc05 	mul.w	ip, ip, r5
 801aa3a:	4481      	add	r9, r0
 801aa3c:	4581      	cmp	r9, r0
 801aa3e:	d02c      	beq.n	801aa9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801aa40:	8802      	ldrh	r2, [r0, #0]
 801aa42:	9d04      	ldr	r5, [sp, #16]
 801aa44:	9f04      	ldr	r7, [sp, #16]
 801aa46:	1216      	asrs	r6, r2, #8
 801aa48:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801aa4c:	fb16 f605 	smulbb	r6, r6, r5
 801aa50:	9d08      	ldr	r5, [sp, #32]
 801aa52:	442e      	add	r6, r5
 801aa54:	10d5      	asrs	r5, r2, #3
 801aa56:	00d2      	lsls	r2, r2, #3
 801aa58:	b2d2      	uxtb	r2, r2
 801aa5a:	fb12 f207 	smulbb	r2, r2, r7
 801aa5e:	b2b6      	uxth	r6, r6
 801aa60:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801aa64:	4462      	add	r2, ip
 801aa66:	fb15 f507 	smulbb	r5, r5, r7
 801aa6a:	b292      	uxth	r2, r2
 801aa6c:	1c77      	adds	r7, r6, #1
 801aa6e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801aa72:	1c57      	adds	r7, r2, #1
 801aa74:	445d      	add	r5, fp
 801aa76:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801aa7a:	b2ad      	uxth	r5, r5
 801aa7c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa80:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801aa84:	4316      	orrs	r6, r2
 801aa86:	1c6a      	adds	r2, r5, #1
 801aa88:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801aa8c:	096d      	lsrs	r5, r5, #5
 801aa8e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aa92:	432e      	orrs	r6, r5
 801aa94:	f820 6b02 	strh.w	r6, [r0], #2
 801aa98:	e7d0      	b.n	801aa3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801aa9a:	4573      	cmp	r3, lr
 801aa9c:	d38f      	bcc.n	801a9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801aa9e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801aaa2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aaa4:	fa1f f188 	uxth.w	r1, r8
 801aaa8:	1a64      	subs	r4, r4, r1
 801aaaa:	881b      	ldrh	r3, [r3, #0]
 801aaac:	b2a4      	uxth	r4, r4
 801aaae:	2c00      	cmp	r4, #0
 801aab0:	eba3 0308 	sub.w	r3, r3, r8
 801aab4:	bf18      	it	ne
 801aab6:	2100      	movne	r1, #0
 801aab8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aabc:	e77f      	b.n	801a9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801aabe:	4b04      	ldr	r3, [pc, #16]	@ (801aad0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801aac0:	6818      	ldr	r0, [r3, #0]
 801aac2:	6803      	ldr	r3, [r0, #0]
 801aac4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801aac6:	4798      	blx	r3
 801aac8:	b00f      	add	sp, #60	@ 0x3c
 801aaca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aace:	bf00      	nop
 801aad0:	20002f54 	.word	0x20002f54
 801aad4:	20002f4e 	.word	0x20002f4e

0801aad8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801aad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aadc:	b09f      	sub	sp, #124	@ 0x7c
 801aade:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801aae2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801aae6:	9209      	str	r2, [sp, #36]	@ 0x24
 801aae8:	461d      	mov	r5, r3
 801aaea:	4604      	mov	r4, r0
 801aaec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801aaee:	2a00      	cmp	r2, #0
 801aaf0:	f000 81eb 	beq.w	801aeca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801aaf4:	6828      	ldr	r0, [r5, #0]
 801aaf6:	6869      	ldr	r1, [r5, #4]
 801aaf8:	aa1a      	add	r2, sp, #104	@ 0x68
 801aafa:	c203      	stmia	r2!, {r0, r1}
 801aafc:	6818      	ldr	r0, [r3, #0]
 801aafe:	6859      	ldr	r1, [r3, #4]
 801ab00:	aa1c      	add	r2, sp, #112	@ 0x70
 801ab02:	c203      	stmia	r2!, {r0, r1}
 801ab04:	a81a      	add	r0, sp, #104	@ 0x68
 801ab06:	f7f9 f8ad 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab0a:	4629      	mov	r1, r5
 801ab0c:	a81c      	add	r0, sp, #112	@ 0x70
 801ab0e:	f7f9 f8d1 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab12:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801ab16:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801ab1a:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801ab1e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801ab22:	bfd7      	itett	le
 801ab24:	b29a      	uxthle	r2, r3
 801ab26:	2201      	movgt	r2, #1
 801ab28:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801ab2c:	fb91 f2f2 	sdivle	r2, r1, r2
 801ab30:	9202      	str	r2, [sp, #8]
 801ab32:	9802      	ldr	r0, [sp, #8]
 801ab34:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801ab38:	fb92 f0f0 	sdiv	r0, r2, r0
 801ab3c:	b280      	uxth	r0, r0
 801ab3e:	9010      	str	r0, [sp, #64]	@ 0x40
 801ab40:	9902      	ldr	r1, [sp, #8]
 801ab42:	9802      	ldr	r0, [sp, #8]
 801ab44:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ab46:	4488      	add	r8, r1
 801ab48:	fb05 2510 	mls	r5, r5, r0, r2
 801ab4c:	fb15 f503 	smulbb	r5, r5, r3
 801ab50:	f108 38ff 	add.w	r8, r8, #4294967295
 801ab54:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801ab58:	fb98 f8f1 	sdiv	r8, r8, r1
 801ab5c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801ab60:	440d      	add	r5, r1
 801ab62:	4419      	add	r1, r3
 801ab64:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801ab68:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801ab6c:	441a      	add	r2, r3
 801ab6e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801ab72:	9304      	str	r3, [sp, #16]
 801ab74:	4b95      	ldr	r3, [pc, #596]	@ (801adcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801ab76:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801ab7a:	6818      	ldr	r0, [r3, #0]
 801ab7c:	6803      	ldr	r3, [r0, #0]
 801ab7e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ab80:	4798      	blx	r3
 801ab82:	4b93      	ldr	r3, [pc, #588]	@ (801add0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801ab84:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801ab88:	881a      	ldrh	r2, [r3, #0]
 801ab8a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801ab8e:	9318      	str	r3, [sp, #96]	@ 0x60
 801ab90:	fb02 7101 	mla	r1, r2, r1, r7
 801ab94:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ab98:	4356      	muls	r6, r2
 801ab9a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801ab9e:	f108 0801 	add.w	r8, r8, #1
 801aba2:	920a      	str	r2, [sp, #40]	@ 0x28
 801aba4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801aba6:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801abaa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801abac:	fa1f f888 	uxth.w	r8, r8
 801abb0:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801abb4:	f108 0204 	add.w	r2, r8, #4
 801abb8:	9211      	str	r2, [sp, #68]	@ 0x44
 801abba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801abbc:	4b85      	ldr	r3, [pc, #532]	@ (801add4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801abbe:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801abc2:	b2ad      	uxth	r5, r5
 801abc4:	9215      	str	r2, [sp, #84]	@ 0x54
 801abc6:	2d00      	cmp	r5, #0
 801abc8:	9a04      	ldr	r2, [sp, #16]
 801abca:	f04f 0100 	mov.w	r1, #0
 801abce:	bf18      	it	ne
 801abd0:	2200      	movne	r2, #0
 801abd2:	1b1b      	subs	r3, r3, r4
 801abd4:	b292      	uxth	r2, r2
 801abd6:	910d      	str	r1, [sp, #52]	@ 0x34
 801abd8:	9319      	str	r3, [sp, #100]	@ 0x64
 801abda:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801abdc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801abde:	fa11 f383 	uxtah	r3, r1, r3
 801abe2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801abe4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801abe8:	3304      	adds	r3, #4
 801abea:	9306      	str	r3, [sp, #24]
 801abec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801abee:	4283      	cmp	r3, r0
 801abf0:	f240 8166 	bls.w	801aec0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801abf4:	9902      	ldr	r1, [sp, #8]
 801abf6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801abfa:	fbb5 f3f3 	udiv	r3, r5, r3
 801abfe:	1acb      	subs	r3, r1, r3
 801ac00:	b29b      	uxth	r3, r3
 801ac02:	9316      	str	r3, [sp, #88]	@ 0x58
 801ac04:	9b06      	ldr	r3, [sp, #24]
 801ac06:	9e06      	ldr	r6, [sp, #24]
 801ac08:	7859      	ldrb	r1, [r3, #1]
 801ac0a:	789b      	ldrb	r3, [r3, #2]
 801ac0c:	7836      	ldrb	r6, [r6, #0]
 801ac0e:	9612      	str	r6, [sp, #72]	@ 0x48
 801ac10:	021b      	lsls	r3, r3, #8
 801ac12:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801ac16:	9906      	ldr	r1, [sp, #24]
 801ac18:	78c9      	ldrb	r1, [r1, #3]
 801ac1a:	430b      	orrs	r3, r1
 801ac1c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801ac1e:	3601      	adds	r6, #1
 801ac20:	4419      	add	r1, r3
 801ac22:	9605      	str	r6, [sp, #20]
 801ac24:	1c4e      	adds	r6, r1, #1
 801ac26:	9603      	str	r6, [sp, #12]
 801ac28:	7849      	ldrb	r1, [r1, #1]
 801ac2a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801ac2c:	0209      	lsls	r1, r1, #8
 801ac2e:	5cf3      	ldrb	r3, [r6, r3]
 801ac30:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801ac34:	4319      	orrs	r1, r3
 801ac36:	b28b      	uxth	r3, r1
 801ac38:	930c      	str	r3, [sp, #48]	@ 0x30
 801ac3a:	2300      	movs	r3, #0
 801ac3c:	f04f 0a01 	mov.w	sl, #1
 801ac40:	9307      	str	r3, [sp, #28]
 801ac42:	469c      	mov	ip, r3
 801ac44:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801ac48:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801ac4c:	46d3      	mov	fp, sl
 801ac4e:	4657      	mov	r7, sl
 801ac50:	930e      	str	r3, [sp, #56]	@ 0x38
 801ac52:	2d00      	cmp	r5, #0
 801ac54:	d07e      	beq.n	801ad54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801ac56:	42af      	cmp	r7, r5
 801ac58:	d26e      	bcs.n	801ad38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801ac5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ac5c:	9201      	str	r2, [sp, #4]
 801ac5e:	1bed      	subs	r5, r5, r7
 801ac60:	4283      	cmp	r3, r0
 801ac62:	b2ad      	uxth	r5, r5
 801ac64:	d802      	bhi.n	801ac6c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801ac66:	e073      	b.n	801ad50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801ac68:	2b00      	cmp	r3, #0
 801ac6a:	d15f      	bne.n	801ad2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801ac6c:	9b03      	ldr	r3, [sp, #12]
 801ac6e:	785b      	ldrb	r3, [r3, #1]
 801ac70:	f1cb 0207 	rsb	r2, fp, #7
 801ac74:	4093      	lsls	r3, r2
 801ac76:	005b      	lsls	r3, r3, #1
 801ac78:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801ac7c:	9b03      	ldr	r3, [sp, #12]
 801ac7e:	781b      	ldrb	r3, [r3, #0]
 801ac80:	fa43 f30b 	asr.w	r3, r3, fp
 801ac84:	b2db      	uxtb	r3, r3
 801ac86:	4313      	orrs	r3, r2
 801ac88:	f10b 0201 	add.w	r2, fp, #1
 801ac8c:	fa5f fb82 	uxtb.w	fp, r2
 801ac90:	9a03      	ldr	r2, [sp, #12]
 801ac92:	f1bb 0f08 	cmp.w	fp, #8
 801ac96:	bf15      	itete	ne
 801ac98:	3201      	addne	r2, #1
 801ac9a:	3202      	addeq	r2, #2
 801ac9c:	9203      	strne	r2, [sp, #12]
 801ac9e:	9203      	streq	r2, [sp, #12]
 801aca0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801aca2:	b29f      	uxth	r7, r3
 801aca4:	bf08      	it	eq
 801aca6:	f04f 0b00 	moveq.w	fp, #0
 801acaa:	42ba      	cmp	r2, r7
 801acac:	d309      	bcc.n	801acc2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801acae:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801acb2:	2301      	movs	r3, #1
 801acb4:	9a05      	ldr	r2, [sp, #20]
 801acb6:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801acba:	d30e      	bcc.n	801acda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801acbc:	469a      	mov	sl, r3
 801acbe:	2600      	movs	r6, #0
 801acc0:	e035      	b.n	801ad2e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801acc2:	9b05      	ldr	r3, [sp, #20]
 801acc4:	429f      	cmp	r7, r3
 801acc6:	d318      	bcc.n	801acfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801acc8:	eb04 030a 	add.w	r3, r4, sl
 801accc:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801acd0:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801acd4:	f10a 0301 	add.w	r3, sl, #1
 801acd8:	b29b      	uxth	r3, r3
 801acda:	9a05      	ldr	r2, [sp, #20]
 801acdc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801ace0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ace2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ace6:	7116      	strb	r6, [r2, #4]
 801ace8:	f10a 0601 	add.w	r6, sl, #1
 801acec:	80d1      	strh	r1, [r2, #6]
 801acee:	7156      	strb	r6, [r2, #5]
 801acf0:	9a05      	ldr	r2, [sp, #20]
 801acf2:	3201      	adds	r2, #1
 801acf4:	b292      	uxth	r2, r2
 801acf6:	9205      	str	r2, [sp, #20]
 801acf8:	e7e0      	b.n	801acbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801acfa:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801acfe:	463a      	mov	r2, r7
 801ad00:	795b      	ldrb	r3, [r3, #5]
 801ad02:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801ad06:	4426      	add	r6, r4
 801ad08:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801ad0a:	eb01 0c06 	add.w	ip, r1, r6
 801ad0e:	f1bc 0f00 	cmp.w	ip, #0
 801ad12:	dd07      	ble.n	801ad24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801ad14:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801ad18:	f892 c004 	ldrb.w	ip, [r2, #4]
 801ad1c:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801ad20:	88d2      	ldrh	r2, [r2, #6]
 801ad22:	e7f1      	b.n	801ad08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801ad24:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801ad28:	b29b      	uxth	r3, r3
 801ad2a:	e7c3      	b.n	801acb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801ad2c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801ad2e:	970c      	str	r7, [sp, #48]	@ 0x30
 801ad30:	9a01      	ldr	r2, [sp, #4]
 801ad32:	46b4      	mov	ip, r6
 801ad34:	461f      	mov	r7, r3
 801ad36:	e78c      	b.n	801ac52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801ad38:	1b7b      	subs	r3, r7, r5
 801ad3a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ad3e:	9201      	str	r2, [sp, #4]
 801ad40:	eb0c 0605 	add.w	r6, ip, r5
 801ad44:	b29b      	uxth	r3, r3
 801ad46:	b2b6      	uxth	r6, r6
 801ad48:	2500      	movs	r5, #0
 801ad4a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801ad4c:	4282      	cmp	r2, r0
 801ad4e:	d88b      	bhi.n	801ac68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801ad50:	9a01      	ldr	r2, [sp, #4]
 801ad52:	e74b      	b.n	801abec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801ad54:	4297      	cmp	r7, r2
 801ad56:	d332      	bcc.n	801adbe <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801ad58:	1abb      	subs	r3, r7, r2
 801ad5a:	b29b      	uxth	r3, r3
 801ad5c:	9208      	str	r2, [sp, #32]
 801ad5e:	9501      	str	r5, [sp, #4]
 801ad60:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801ad62:	29ff      	cmp	r1, #255	@ 0xff
 801ad64:	9908      	ldr	r1, [sp, #32]
 801ad66:	eb0c 0601 	add.w	r6, ip, r1
 801ad6a:	d135      	bne.n	801add8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801ad6c:	f1a0 0e02 	sub.w	lr, r0, #2
 801ad70:	b2b6      	uxth	r6, r6
 801ad72:	45b4      	cmp	ip, r6
 801ad74:	f040 808c 	bne.w	801ae90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801ad78:	9908      	ldr	r1, [sp, #32]
 801ad7a:	4297      	cmp	r7, r2
 801ad7c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ad80:	d3e2      	bcc.n	801ad48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801ad82:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801ad84:	9904      	ldr	r1, [sp, #16]
 801ad86:	8812      	ldrh	r2, [r2, #0]
 801ad88:	1a52      	subs	r2, r2, r1
 801ad8a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ad8e:	9a07      	ldr	r2, [sp, #28]
 801ad90:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801ad92:	3201      	adds	r2, #1
 801ad94:	428a      	cmp	r2, r1
 801ad96:	9207      	str	r2, [sp, #28]
 801ad98:	f040 8087 	bne.w	801aeaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801ad9c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801ada0:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801ada4:	9b04      	ldr	r3, [sp, #16]
 801ada6:	1bed      	subs	r5, r5, r7
 801ada8:	b2ad      	uxth	r5, r5
 801adaa:	2d00      	cmp	r5, #0
 801adac:	bf08      	it	eq
 801adae:	461a      	moveq	r2, r3
 801adb0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801adb2:	bf18      	it	ne
 801adb4:	2200      	movne	r2, #0
 801adb6:	3301      	adds	r3, #1
 801adb8:	930d      	str	r3, [sp, #52]	@ 0x34
 801adba:	b292      	uxth	r2, r2
 801adbc:	e70d      	b.n	801abda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801adbe:	1bd1      	subs	r1, r2, r7
 801adc0:	b28b      	uxth	r3, r1
 801adc2:	9301      	str	r3, [sp, #4]
 801adc4:	9708      	str	r7, [sp, #32]
 801adc6:	462b      	mov	r3, r5
 801adc8:	e7ca      	b.n	801ad60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801adca:	bf00      	nop
 801adcc:	20002f54 	.word	0x20002f54
 801add0:	20002f4e 	.word	0x20002f4e
 801add4:	fffff7fb 	.word	0xfffff7fb
 801add8:	b2b6      	uxth	r6, r6
 801adda:	900b      	str	r0, [sp, #44]	@ 0x2c
 801addc:	45b4      	cmp	ip, r6
 801adde:	d0cb      	beq.n	801ad78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801ade0:	f10c 0101 	add.w	r1, ip, #1
 801ade4:	44a4      	add	ip, r4
 801ade6:	9117      	str	r1, [sp, #92]	@ 0x5c
 801ade8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801adec:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801adee:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801adf2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801adf4:	f8b1 c000 	ldrh.w	ip, [r1]
 801adf8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801adfa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801adfe:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ae02:	fb1e fe01 	smulbb	lr, lr, r1
 801ae06:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ae0a:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ae0c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801ae10:	fb08 e801 	mla	r8, r8, r1, lr
 801ae14:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ae18:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ae1a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ae1e:	fb19 f901 	smulbb	r9, r9, r1
 801ae22:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801ae26:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ae28:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ae2c:	fb0e 9e01 	mla	lr, lr, r1, r9
 801ae30:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ae34:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ae36:	fa5f fc8c 	uxtb.w	ip, ip
 801ae3a:	fb1c fc01 	smulbb	ip, ip, r1
 801ae3e:	00ed      	lsls	r5, r5, #3
 801ae40:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ae42:	b2ed      	uxtb	r5, r5
 801ae44:	fb05 c501 	mla	r5, r5, r1, ip
 801ae48:	fa1f f888 	uxth.w	r8, r8
 801ae4c:	fa1f fe8e 	uxth.w	lr, lr
 801ae50:	b2ad      	uxth	r5, r5
 801ae52:	f108 0c01 	add.w	ip, r8, #1
 801ae56:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801ae5a:	f10e 0901 	add.w	r9, lr, #1
 801ae5e:	f105 0c01 	add.w	ip, r5, #1
 801ae62:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801ae66:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801ae6a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ae6e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801ae72:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ae76:	ea4c 0808 	orr.w	r8, ip, r8
 801ae7a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801ae7c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801ae80:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801ae84:	ea48 0809 	orr.w	r8, r8, r9
 801ae88:	f821 8b02 	strh.w	r8, [r1], #2
 801ae8c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ae8e:	e7a5      	b.n	801addc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801ae90:	f10c 0801 	add.w	r8, ip, #1
 801ae94:	44a4      	add	ip, r4
 801ae96:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801ae98:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801ae9c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801aea0:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801aea4:	fa1f fc88 	uxth.w	ip, r8
 801aea8:	e763      	b.n	801ad72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801aeaa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801aeae:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801aeb2:	1aad      	subs	r5, r5, r2
 801aeb4:	b2ad      	uxth	r5, r5
 801aeb6:	2d00      	cmp	r5, #0
 801aeb8:	bf18      	it	ne
 801aeba:	2200      	movne	r2, #0
 801aebc:	9201      	str	r2, [sp, #4]
 801aebe:	e744      	b.n	801ad4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801aec0:	4b03      	ldr	r3, [pc, #12]	@ (801aed0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801aec2:	6818      	ldr	r0, [r3, #0]
 801aec4:	6803      	ldr	r3, [r0, #0]
 801aec6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801aec8:	4798      	blx	r3
 801aeca:	b01f      	add	sp, #124	@ 0x7c
 801aecc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aed0:	20002f54 	.word	0x20002f54

0801aed4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801aed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aed8:	b093      	sub	sp, #76	@ 0x4c
 801aeda:	4616      	mov	r6, r2
 801aedc:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801aee0:	9003      	str	r0, [sp, #12]
 801aee2:	460d      	mov	r5, r1
 801aee4:	9201      	str	r2, [sp, #4]
 801aee6:	2a00      	cmp	r2, #0
 801aee8:	f000 8304 	beq.w	801b4f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801aeec:	6830      	ldr	r0, [r6, #0]
 801aeee:	6871      	ldr	r1, [r6, #4]
 801aef0:	ac0e      	add	r4, sp, #56	@ 0x38
 801aef2:	c403      	stmia	r4!, {r0, r1}
 801aef4:	6818      	ldr	r0, [r3, #0]
 801aef6:	6859      	ldr	r1, [r3, #4]
 801aef8:	ac10      	add	r4, sp, #64	@ 0x40
 801aefa:	c403      	stmia	r4!, {r0, r1}
 801aefc:	a80e      	add	r0, sp, #56	@ 0x38
 801aefe:	f7f8 feb1 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af02:	4631      	mov	r1, r6
 801af04:	a810      	add	r0, sp, #64	@ 0x40
 801af06:	f7f8 fed5 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af0a:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801af0e:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801af12:	bfd7      	itett	le
 801af14:	b293      	uxthle	r3, r2
 801af16:	2301      	movgt	r3, #1
 801af18:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801af1c:	fb91 f3f3 	sdivle	r3, r1, r3
 801af20:	9304      	str	r3, [sp, #16]
 801af22:	f105 0308 	add.w	r3, r5, #8
 801af26:	9904      	ldr	r1, [sp, #16]
 801af28:	9308      	str	r3, [sp, #32]
 801af2a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801af2e:	440b      	add	r3, r1
 801af30:	3b01      	subs	r3, #1
 801af32:	fb93 f3f1 	sdiv	r3, r3, r1
 801af36:	9908      	ldr	r1, [sp, #32]
 801af38:	3b01      	subs	r3, #1
 801af3a:	b29b      	uxth	r3, r3
 801af3c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801af40:	9309      	str	r3, [sp, #36]	@ 0x24
 801af42:	9904      	ldr	r1, [sp, #16]
 801af44:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801af48:	fb93 f0f1 	sdiv	r0, r3, r1
 801af4c:	b284      	uxth	r4, r0
 801af4e:	9405      	str	r4, [sp, #20]
 801af50:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801af54:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801af58:	fb05 3914 	mls	r9, r5, r4, r3
 801af5c:	fb19 f902 	smulbb	r9, r9, r2
 801af60:	4489      	add	r9, r1
 801af62:	fa1f f989 	uxth.w	r9, r9
 801af66:	2d00      	cmp	r5, #0
 801af68:	d05d      	beq.n	801b026 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801af6a:	1e6a      	subs	r2, r5, #1
 801af6c:	9808      	ldr	r0, [sp, #32]
 801af6e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801af72:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801af74:	fa9a fa8a 	rev.w	sl, sl
 801af78:	4492      	add	sl, r2
 801af7a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801af7e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801af82:	4411      	add	r1, r2
 801af84:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801af88:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801af8c:	4413      	add	r3, r2
 801af8e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801af92:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801af96:	9302      	str	r3, [sp, #8]
 801af98:	4bcb      	ldr	r3, [pc, #812]	@ (801b2c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801af9a:	6818      	ldr	r0, [r3, #0]
 801af9c:	6803      	ldr	r3, [r0, #0]
 801af9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801afa0:	4798      	blx	r3
 801afa2:	4bca      	ldr	r3, [pc, #808]	@ (801b2cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801afa4:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801afa8:	881b      	ldrh	r3, [r3, #0]
 801afaa:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801afae:	fb03 2404 	mla	r4, r3, r4, r2
 801afb2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801afb6:	436b      	muls	r3, r5
 801afb8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801afbc:	930d      	str	r3, [sp, #52]	@ 0x34
 801afbe:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801afc2:	fb99 f3f3 	sdiv	r3, r9, r3
 801afc6:	9306      	str	r3, [sp, #24]
 801afc8:	9b01      	ldr	r3, [sp, #4]
 801afca:	43db      	mvns	r3, r3
 801afcc:	b2db      	uxtb	r3, r3
 801afce:	930a      	str	r3, [sp, #40]	@ 0x28
 801afd0:	9b03      	ldr	r3, [sp, #12]
 801afd2:	3304      	adds	r3, #4
 801afd4:	4618      	mov	r0, r3
 801afd6:	2280      	movs	r2, #128	@ 0x80
 801afd8:	2100      	movs	r1, #0
 801afda:	930b      	str	r3, [sp, #44]	@ 0x2c
 801afdc:	f00a ffdf 	bl	8025f9e <memset>
 801afe0:	4bbb      	ldr	r3, [pc, #748]	@ (801b2d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801afe2:	9300      	str	r3, [sp, #0]
 801afe4:	2300      	movs	r3, #0
 801afe6:	f04f 0600 	mov.w	r6, #0
 801afea:	9307      	str	r3, [sp, #28]
 801afec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801afee:	42a3      	cmp	r3, r4
 801aff0:	f240 827b 	bls.w	801b4ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801aff4:	f04f 0e07 	mov.w	lr, #7
 801aff8:	f1b9 0f00 	cmp.w	r9, #0
 801affc:	f000 8159 	beq.w	801b2b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801b000:	f89a 5000 	ldrb.w	r5, [sl]
 801b004:	b2ed      	uxtb	r5, r5
 801b006:	11aa      	asrs	r2, r5, #6
 801b008:	f10a 0701 	add.w	r7, sl, #1
 801b00c:	d10e      	bne.n	801b02c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801b00e:	9b03      	ldr	r3, [sp, #12]
 801b010:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b014:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801b018:	88ae      	ldrh	r6, [r5, #4]
 801b01a:	f109 39ff 	add.w	r9, r9, #4294967295
 801b01e:	fa1f f989 	uxth.w	r9, r9
 801b022:	46ba      	mov	sl, r7
 801b024:	e7e8      	b.n	801aff8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801b026:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801b02a:	e7a6      	b.n	801af7a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801b02c:	2a01      	cmp	r2, #1
 801b02e:	d129      	bne.n	801b084 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801b030:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801b034:	f005 0203 	and.w	r2, r5, #3
 801b038:	3b02      	subs	r3, #2
 801b03a:	4413      	add	r3, r2
 801b03c:	f003 031f 	and.w	r3, r3, #31
 801b040:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801b044:	f363 0604 	bfi	r6, r3, #0, #5
 801b048:	3a02      	subs	r2, #2
 801b04a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801b04e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b052:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801b056:	f362 164a 	bfi	r6, r2, #5, #6
 801b05a:	3d02      	subs	r5, #2
 801b05c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801b060:	f005 051f 	and.w	r5, r5, #31
 801b064:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b068:	2103      	movs	r1, #3
 801b06a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801b06e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801b072:	9a03      	ldr	r2, [sp, #12]
 801b074:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b078:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b07c:	f365 26cf 	bfi	r6, r5, #11, #5
 801b080:	809e      	strh	r6, [r3, #4]
 801b082:	e7ca      	b.n	801b01a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801b084:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b088:	2a02      	cmp	r2, #2
 801b08a:	b2ab      	uxth	r3, r5
 801b08c:	d136      	bne.n	801b0fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801b08e:	2101      	movs	r1, #1
 801b090:	fb12 1205 	smlabb	r2, r2, r5, r1
 801b094:	4492      	add	sl, r2
 801b096:	463a      	mov	r2, r7
 801b098:	4552      	cmp	r2, sl
 801b09a:	d01c      	beq.n	801b0d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801b09c:	4694      	mov	ip, r2
 801b09e:	f04f 0b03 	mov.w	fp, #3
 801b0a2:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801b0a6:	7852      	ldrb	r2, [r2, #1]
 801b0a8:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801b0ac:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801b0b0:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801b0b4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b0b8:	f001 021f 	and.w	r2, r1, #31
 801b0bc:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801b0c0:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b0c4:	9a03      	ldr	r2, [sp, #12]
 801b0c6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b0ca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b0ce:	460e      	mov	r6, r1
 801b0d0:	8081      	strh	r1, [r0, #4]
 801b0d2:	4662      	mov	r2, ip
 801b0d4:	e7e0      	b.n	801b098 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801b0d6:	4599      	cmp	r9, r3
 801b0d8:	d20b      	bcs.n	801b0f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801b0da:	eba5 0509 	sub.w	r5, r5, r9
 801b0de:	2d00      	cmp	r5, #0
 801b0e0:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801b0e4:	f300 8209 	bgt.w	801b4fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801b0e8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b0ec:	2301      	movs	r3, #1
 801b0ee:	9307      	str	r3, [sp, #28]
 801b0f0:	e00c      	b.n	801b10c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b0f2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801b0f6:	eba9 0903 	sub.w	r9, r9, r3
 801b0fa:	e790      	b.n	801b01e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801b0fc:	4599      	cmp	r9, r3
 801b0fe:	d2fa      	bcs.n	801b0f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801b100:	eba5 0509 	sub.w	r5, r5, r9
 801b104:	2d00      	cmp	r5, #0
 801b106:	dc1d      	bgt.n	801b144 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801b108:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b10c:	f04f 0b00 	mov.w	fp, #0
 801b110:	f1b8 0f00 	cmp.w	r8, #0
 801b114:	f340 81a1 	ble.w	801b45a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801b118:	783b      	ldrb	r3, [r7, #0]
 801b11a:	b2db      	uxtb	r3, r3
 801b11c:	119a      	asrs	r2, r3, #6
 801b11e:	f107 0a01 	add.w	sl, r7, #1
 801b122:	f040 80d7 	bne.w	801b2d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801b126:	9a03      	ldr	r2, [sp, #12]
 801b128:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b12c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b130:	889e      	ldrh	r6, [r3, #4]
 801b132:	9b01      	ldr	r3, [sp, #4]
 801b134:	2bff      	cmp	r3, #255	@ 0xff
 801b136:	f040 81e9 	bne.w	801b50c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801b13a:	8026      	strh	r6, [r4, #0]
 801b13c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b140:	3402      	adds	r4, #2
 801b142:	e0be      	b.n	801b2c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b144:	9b02      	ldr	r3, [sp, #8]
 801b146:	9a02      	ldr	r2, [sp, #8]
 801b148:	42ab      	cmp	r3, r5
 801b14a:	bfa8      	it	ge
 801b14c:	462b      	movge	r3, r5
 801b14e:	eba2 0803 	sub.w	r8, r2, r3
 801b152:	9a07      	ldr	r2, [sp, #28]
 801b154:	1aed      	subs	r5, r5, r3
 801b156:	2a00      	cmp	r2, #0
 801b158:	d05a      	beq.n	801b210 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801b15a:	9a01      	ldr	r2, [sp, #4]
 801b15c:	2aff      	cmp	r2, #255	@ 0xff
 801b15e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b162:	d049      	beq.n	801b1f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801b164:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801b168:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801b16c:	42a3      	cmp	r3, r4
 801b16e:	f240 80a5 	bls.w	801b2bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801b172:	46bc      	mov	ip, r7
 801b174:	8820      	ldrh	r0, [r4, #0]
 801b176:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801b17a:	7879      	ldrb	r1, [r7, #1]
 801b17c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801b180:	b212      	sxth	r2, r2
 801b182:	b291      	uxth	r1, r2
 801b184:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801b188:	120f      	asrs	r7, r1, #8
 801b18a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801b18e:	fb1a fa09 	smulbb	sl, sl, r9
 801b192:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b196:	fb07 a70e 	mla	r7, r7, lr, sl
 801b19a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801b19e:	00c0      	lsls	r0, r0, #3
 801b1a0:	10c9      	asrs	r1, r1, #3
 801b1a2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b1a6:	00d2      	lsls	r2, r2, #3
 801b1a8:	b2c0      	uxtb	r0, r0
 801b1aa:	fb1a fa09 	smulbb	sl, sl, r9
 801b1ae:	fb10 f009 	smulbb	r0, r0, r9
 801b1b2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b1b6:	b2d2      	uxtb	r2, r2
 801b1b8:	b2bf      	uxth	r7, r7
 801b1ba:	fb01 a10e 	mla	r1, r1, lr, sl
 801b1be:	fb02 020e 	mla	r2, r2, lr, r0
 801b1c2:	b289      	uxth	r1, r1
 801b1c4:	b292      	uxth	r2, r2
 801b1c6:	1c78      	adds	r0, r7, #1
 801b1c8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b1cc:	f101 0a01 	add.w	sl, r1, #1
 801b1d0:	1c50      	adds	r0, r2, #1
 801b1d2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b1d6:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801b1da:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b1de:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b1e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b1e6:	4307      	orrs	r7, r0
 801b1e8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b1ec:	ea47 070a 	orr.w	r7, r7, sl
 801b1f0:	f824 7b02 	strh.w	r7, [r4], #2
 801b1f4:	4667      	mov	r7, ip
 801b1f6:	e7b9      	b.n	801b16c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801b1f8:	42a3      	cmp	r3, r4
 801b1fa:	d95f      	bls.n	801b2bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801b1fc:	463a      	mov	r2, r7
 801b1fe:	f812 1b02 	ldrb.w	r1, [r2], #2
 801b202:	7878      	ldrb	r0, [r7, #1]
 801b204:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801b208:	f824 1b02 	strh.w	r1, [r4], #2
 801b20c:	4617      	mov	r7, r2
 801b20e:	e7f3      	b.n	801b1f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801b210:	9901      	ldr	r1, [sp, #4]
 801b212:	29ff      	cmp	r1, #255	@ 0xff
 801b214:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b218:	b2b2      	uxth	r2, r6
 801b21a:	d044      	beq.n	801b2a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801b21c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b220:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801b224:	ea4f 2922 	mov.w	r9, r2, asr #8
 801b228:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b22c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801b230:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b234:	4608      	mov	r0, r1
 801b236:	fb09 f901 	mul.w	r9, r9, r1
 801b23a:	fb0e fe01 	mul.w	lr, lr, r1
 801b23e:	00d1      	lsls	r1, r2, #3
 801b240:	b2c9      	uxtb	r1, r1
 801b242:	4341      	muls	r1, r0
 801b244:	429c      	cmp	r4, r3
 801b246:	f4bf af61 	bcs.w	801b10c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b24a:	8822      	ldrh	r2, [r4, #0]
 801b24c:	1210      	asrs	r0, r2, #8
 801b24e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b252:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b256:	00d2      	lsls	r2, r2, #3
 801b258:	fb00 900a 	mla	r0, r0, sl, r9
 801b25c:	b2d2      	uxtb	r2, r2
 801b25e:	b280      	uxth	r0, r0
 801b260:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b264:	fb02 120a 	mla	r2, r2, sl, r1
 801b268:	b292      	uxth	r2, r2
 801b26a:	f100 0b01 	add.w	fp, r0, #1
 801b26e:	fb0c ec0a 	mla	ip, ip, sl, lr
 801b272:	fa1f fc8c 	uxth.w	ip, ip
 801b276:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b27a:	1c50      	adds	r0, r2, #1
 801b27c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b280:	f10c 0201 	add.w	r2, ip, #1
 801b284:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b288:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801b28c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b290:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b294:	ea40 0b0b 	orr.w	fp, r0, fp
 801b298:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b29c:	ea4b 0b0c 	orr.w	fp, fp, ip
 801b2a0:	f824 bb02 	strh.w	fp, [r4], #2
 801b2a4:	e7ce      	b.n	801b244 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801b2a6:	429c      	cmp	r4, r3
 801b2a8:	f4bf af30 	bcs.w	801b10c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b2ac:	f824 2b02 	strh.w	r2, [r4], #2
 801b2b0:	e7f9      	b.n	801b2a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801b2b2:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b2b6:	4657      	mov	r7, sl
 801b2b8:	464d      	mov	r5, r9
 801b2ba:	e727      	b.n	801b10c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b2bc:	2300      	movs	r3, #0
 801b2be:	e716      	b.n	801b0ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801b2c0:	44bb      	add	fp, r7
 801b2c2:	4657      	mov	r7, sl
 801b2c4:	e724      	b.n	801b110 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801b2c6:	bf00      	nop
 801b2c8:	20002f54 	.word	0x20002f54
 801b2cc:	20002f4e 	.word	0x20002f4e
 801b2d0:	20000120 	.word	0x20000120
 801b2d4:	2a01      	cmp	r2, #1
 801b2d6:	d12a      	bne.n	801b32e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801b2d8:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801b2dc:	f003 0203 	and.w	r2, r3, #3
 801b2e0:	3902      	subs	r1, #2
 801b2e2:	4411      	add	r1, r2
 801b2e4:	f001 011f 	and.w	r1, r1, #31
 801b2e8:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801b2ec:	f361 0604 	bfi	r6, r1, #0, #5
 801b2f0:	3802      	subs	r0, #2
 801b2f2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801b2f6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b2fa:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801b2fe:	f360 164a 	bfi	r6, r0, #5, #6
 801b302:	3b02      	subs	r3, #2
 801b304:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801b308:	f002 031f 	and.w	r3, r2, #31
 801b30c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b310:	2203      	movs	r2, #3
 801b312:	f363 26cf 	bfi	r6, r3, #11, #5
 801b316:	fb12 0303 	smlabb	r3, r2, r3, r0
 801b31a:	2207      	movs	r2, #7
 801b31c:	fb12 3301 	smlabb	r3, r2, r1, r3
 801b320:	9a03      	ldr	r2, [sp, #12]
 801b322:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b326:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b32a:	809e      	strh	r6, [r3, #4]
 801b32c:	e701      	b.n	801b132 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801b32e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801b332:	45a8      	cmp	r8, r5
 801b334:	4647      	mov	r7, r8
 801b336:	bfa8      	it	ge
 801b338:	462f      	movge	r7, r5
 801b33a:	2a02      	cmp	r2, #2
 801b33c:	d154      	bne.n	801b3e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801b33e:	9b01      	ldr	r3, [sp, #4]
 801b340:	2bff      	cmp	r3, #255	@ 0xff
 801b342:	d01a      	beq.n	801b37a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b344:	eb0b 0307 	add.w	r3, fp, r7
 801b348:	2b40      	cmp	r3, #64	@ 0x40
 801b34a:	dd16      	ble.n	801b37a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b34c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801b350:	4649      	mov	r1, r9
 801b352:	9800      	ldr	r0, [sp, #0]
 801b354:	f7f4 fb71 	bl	800fa3a <_ZN8touchgfx5paint9flushLineEPmi>
 801b358:	465a      	mov	r2, fp
 801b35a:	9b01      	ldr	r3, [sp, #4]
 801b35c:	9900      	ldr	r1, [sp, #0]
 801b35e:	4620      	mov	r0, r4
 801b360:	f7f4 fb76 	bl	800fa50 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b364:	9b00      	ldr	r3, [sp, #0]
 801b366:	461a      	mov	r2, r3
 801b368:	4b6c      	ldr	r3, [pc, #432]	@ (801b51c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b36a:	429a      	cmp	r2, r3
 801b36c:	bf0c      	ite	eq
 801b36e:	4b6c      	ldreq	r3, [pc, #432]	@ (801b520 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801b370:	4b6a      	ldrne	r3, [pc, #424]	@ (801b51c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b372:	9300      	str	r3, [sp, #0]
 801b374:	444c      	add	r4, r9
 801b376:	f04f 0b00 	mov.w	fp, #0
 801b37a:	4652      	mov	r2, sl
 801b37c:	2100      	movs	r1, #0
 801b37e:	42a9      	cmp	r1, r5
 801b380:	da2c      	bge.n	801b3dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801b382:	4694      	mov	ip, r2
 801b384:	f04f 0903 	mov.w	r9, #3
 801b388:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801b38c:	7852      	ldrb	r2, [r2, #1]
 801b38e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801b392:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801b396:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801b39a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b39e:	f003 021f 	and.w	r2, r3, #31
 801b3a2:	fb19 000e 	smlabb	r0, r9, lr, r0
 801b3a6:	f04f 0e07 	mov.w	lr, #7
 801b3aa:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b3ae:	9a03      	ldr	r2, [sp, #12]
 801b3b0:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b3b4:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b3b8:	42b9      	cmp	r1, r7
 801b3ba:	461e      	mov	r6, r3
 801b3bc:	8083      	strh	r3, [r0, #4]
 801b3be:	da0a      	bge.n	801b3d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801b3c0:	9a01      	ldr	r2, [sp, #4]
 801b3c2:	2aff      	cmp	r2, #255	@ 0xff
 801b3c4:	bf15      	itete	ne
 801b3c6:	9a00      	ldrne	r2, [sp, #0]
 801b3c8:	8023      	strheq	r3, [r4, #0]
 801b3ca:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801b3ce:	3402      	addeq	r4, #2
 801b3d0:	bf18      	it	ne
 801b3d2:	f10b 0b01 	addne.w	fp, fp, #1
 801b3d6:	3101      	adds	r1, #1
 801b3d8:	4662      	mov	r2, ip
 801b3da:	e7d0      	b.n	801b37e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801b3dc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801b3e0:	eba8 0807 	sub.w	r8, r8, r7
 801b3e4:	1bed      	subs	r5, r5, r7
 801b3e6:	e76c      	b.n	801b2c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b3e8:	9b01      	ldr	r3, [sp, #4]
 801b3ea:	2bff      	cmp	r3, #255	@ 0xff
 801b3ec:	eba8 0807 	sub.w	r8, r8, r7
 801b3f0:	eba5 0507 	sub.w	r5, r5, r7
 801b3f4:	fa1f f986 	uxth.w	r9, r6
 801b3f8:	d027      	beq.n	801b44a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801b3fa:	eb0b 0307 	add.w	r3, fp, r7
 801b3fe:	2b40      	cmp	r3, #64	@ 0x40
 801b400:	dd18      	ble.n	801b434 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801b402:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801b406:	4619      	mov	r1, r3
 801b408:	9800      	ldr	r0, [sp, #0]
 801b40a:	930c      	str	r3, [sp, #48]	@ 0x30
 801b40c:	f7f4 fb15 	bl	800fa3a <_ZN8touchgfx5paint9flushLineEPmi>
 801b410:	465a      	mov	r2, fp
 801b412:	9b01      	ldr	r3, [sp, #4]
 801b414:	9900      	ldr	r1, [sp, #0]
 801b416:	4620      	mov	r0, r4
 801b418:	f7f4 fb1a 	bl	800fa50 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b41c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b41e:	441c      	add	r4, r3
 801b420:	9b00      	ldr	r3, [sp, #0]
 801b422:	461a      	mov	r2, r3
 801b424:	4b3d      	ldr	r3, [pc, #244]	@ (801b51c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b426:	429a      	cmp	r2, r3
 801b428:	bf0c      	ite	eq
 801b42a:	4b3d      	ldreq	r3, [pc, #244]	@ (801b520 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801b42c:	4b3b      	ldrne	r3, [pc, #236]	@ (801b51c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b42e:	9300      	str	r3, [sp, #0]
 801b430:	f04f 0b00 	mov.w	fp, #0
 801b434:	9b00      	ldr	r3, [sp, #0]
 801b436:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801b43a:	463b      	mov	r3, r7
 801b43c:	2b00      	cmp	r3, #0
 801b43e:	f43f af3f 	beq.w	801b2c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801b442:	f822 9b02 	strh.w	r9, [r2], #2
 801b446:	3b01      	subs	r3, #1
 801b448:	e7f8      	b.n	801b43c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801b44a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801b44e:	42a7      	cmp	r7, r4
 801b450:	f67f af37 	bls.w	801b2c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b454:	f824 9b02 	strh.w	r9, [r4], #2
 801b458:	e7f9      	b.n	801b44e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801b45a:	f1bb 0f00 	cmp.w	fp, #0
 801b45e:	d00c      	beq.n	801b47a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801b460:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801b464:	4641      	mov	r1, r8
 801b466:	9800      	ldr	r0, [sp, #0]
 801b468:	f7f4 fae7 	bl	800fa3a <_ZN8touchgfx5paint9flushLineEPmi>
 801b46c:	4620      	mov	r0, r4
 801b46e:	9b01      	ldr	r3, [sp, #4]
 801b470:	9900      	ldr	r1, [sp, #0]
 801b472:	465a      	mov	r2, fp
 801b474:	f7f4 faec 	bl	800fa50 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b478:	4444      	add	r4, r8
 801b47a:	4b2a      	ldr	r3, [pc, #168]	@ (801b524 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801b47c:	9a02      	ldr	r2, [sp, #8]
 801b47e:	881b      	ldrh	r3, [r3, #0]
 801b480:	1a9b      	subs	r3, r3, r2
 801b482:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b486:	9b06      	ldr	r3, [sp, #24]
 801b488:	3301      	adds	r3, #1
 801b48a:	9306      	str	r3, [sp, #24]
 801b48c:	9a06      	ldr	r2, [sp, #24]
 801b48e:	9b04      	ldr	r3, [sp, #16]
 801b490:	4293      	cmp	r3, r2
 801b492:	d120      	bne.n	801b4d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801b494:	9b05      	ldr	r3, [sp, #20]
 801b496:	9a05      	ldr	r2, [sp, #20]
 801b498:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801b49c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801b4a0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801b4a2:	f103 0801 	add.w	r8, r3, #1
 801b4a6:	9b08      	ldr	r3, [sp, #32]
 801b4a8:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801b4ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b4ae:	ba3f      	rev	r7, r7
 801b4b0:	2280      	movs	r2, #128	@ 0x80
 801b4b2:	2100      	movs	r1, #0
 801b4b4:	441f      	add	r7, r3
 801b4b6:	eba9 0905 	sub.w	r9, r9, r5
 801b4ba:	f00a fd70 	bl	8025f9e <memset>
 801b4be:	2300      	movs	r3, #0
 801b4c0:	fa1f f989 	uxth.w	r9, r9
 801b4c4:	f04f 0600 	mov.w	r6, #0
 801b4c8:	f8cd 8014 	str.w	r8, [sp, #20]
 801b4cc:	9306      	str	r3, [sp, #24]
 801b4ce:	f7f4 faad 	bl	800fa2c <_ZN8touchgfx5paint8tearDownEv>
 801b4d2:	46ba      	mov	sl, r7
 801b4d4:	e58a      	b.n	801afec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801b4d6:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801b4da:	9b02      	ldr	r3, [sp, #8]
 801b4dc:	eba9 0903 	sub.w	r9, r9, r3
 801b4e0:	eba9 0505 	sub.w	r5, r9, r5
 801b4e4:	fa1f f985 	uxth.w	r9, r5
 801b4e8:	e7f1      	b.n	801b4ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801b4ea:	4b0f      	ldr	r3, [pc, #60]	@ (801b528 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801b4ec:	6818      	ldr	r0, [r3, #0]
 801b4ee:	6803      	ldr	r3, [r0, #0]
 801b4f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b4f2:	4798      	blx	r3
 801b4f4:	b013      	add	sp, #76	@ 0x4c
 801b4f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4fa:	9b02      	ldr	r3, [sp, #8]
 801b4fc:	9a02      	ldr	r2, [sp, #8]
 801b4fe:	42ab      	cmp	r3, r5
 801b500:	bfa8      	it	ge
 801b502:	462b      	movge	r3, r5
 801b504:	eba2 0803 	sub.w	r8, r2, r3
 801b508:	1aed      	subs	r5, r5, r3
 801b50a:	e626      	b.n	801b15a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801b50c:	f108 38ff 	add.w	r8, r8, #4294967295
 801b510:	fa1f f986 	uxth.w	r9, r6
 801b514:	2500      	movs	r5, #0
 801b516:	2701      	movs	r7, #1
 801b518:	e76f      	b.n	801b3fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801b51a:	bf00      	nop
 801b51c:	20000120 	.word	0x20000120
 801b520:	20000220 	.word	0x20000220
 801b524:	20002f4e 	.word	0x20002f4e
 801b528:	20002f54 	.word	0x20002f54

0801b52c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b52c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b530:	b08f      	sub	sp, #60	@ 0x3c
 801b532:	461c      	mov	r4, r3
 801b534:	9203      	str	r2, [sp, #12]
 801b536:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b53a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b53c:	9202      	str	r2, [sp, #8]
 801b53e:	460f      	mov	r7, r1
 801b540:	2a00      	cmp	r2, #0
 801b542:	f000 8128 	beq.w	801b796 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b546:	6820      	ldr	r0, [r4, #0]
 801b548:	6861      	ldr	r1, [r4, #4]
 801b54a:	aa0a      	add	r2, sp, #40	@ 0x28
 801b54c:	c203      	stmia	r2!, {r0, r1}
 801b54e:	6818      	ldr	r0, [r3, #0]
 801b550:	6859      	ldr	r1, [r3, #4]
 801b552:	aa0c      	add	r2, sp, #48	@ 0x30
 801b554:	c203      	stmia	r2!, {r0, r1}
 801b556:	a80a      	add	r0, sp, #40	@ 0x28
 801b558:	f7f8 fb84 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b55c:	4621      	mov	r1, r4
 801b55e:	a80c      	add	r0, sp, #48	@ 0x30
 801b560:	f7f8 fba8 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b564:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801b568:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801b56c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801b570:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b574:	bfde      	ittt	le
 801b576:	b2b3      	uxthle	r3, r6
 801b578:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b57c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b580:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b584:	bfc8      	it	gt
 801b586:	2301      	movgt	r3, #1
 801b588:	fb92 f1f3 	sdiv	r1, r2, r3
 801b58c:	fa1f fc81 	uxth.w	ip, r1
 801b590:	fb0c 2413 	mls	r4, ip, r3, r2
 801b594:	fb14 f406 	smulbb	r4, r4, r6
 801b598:	441d      	add	r5, r3
 801b59a:	4404      	add	r4, r0
 801b59c:	4661      	mov	r1, ip
 801b59e:	3d01      	subs	r5, #1
 801b5a0:	b2a4      	uxth	r4, r4
 801b5a2:	fb95 f5f3 	sdiv	r5, r5, r3
 801b5a6:	b121      	cbz	r1, 801b5b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b5a8:	9b03      	ldr	r3, [sp, #12]
 801b5aa:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b5ae:	ba1b      	rev	r3, r3
 801b5b0:	441f      	add	r7, r3
 801b5b2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b5b6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801b5ba:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801b5be:	4418      	add	r0, r3
 801b5c0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801b5c4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b5c8:	441a      	add	r2, r3
 801b5ca:	4b74      	ldr	r3, [pc, #464]	@ (801b79c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b5cc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801b5d0:	6818      	ldr	r0, [r3, #0]
 801b5d2:	6803      	ldr	r3, [r0, #0]
 801b5d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b5d6:	4798      	blx	r3
 801b5d8:	4a71      	ldr	r2, [pc, #452]	@ (801b7a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b5da:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801b5de:	8813      	ldrh	r3, [r2, #0]
 801b5e0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801b5e4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b5e6:	fb03 c101 	mla	r1, r3, r1, ip
 801b5ea:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b5ee:	4373      	muls	r3, r6
 801b5f0:	b2ad      	uxth	r5, r5
 801b5f2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b5f6:	00ad      	lsls	r5, r5, #2
 801b5f8:	2c00      	cmp	r4, #0
 801b5fa:	9304      	str	r3, [sp, #16]
 801b5fc:	f105 0304 	add.w	r3, r5, #4
 801b600:	9305      	str	r3, [sp, #20]
 801b602:	bf0c      	ite	eq
 801b604:	46c8      	moveq	r8, r9
 801b606:	f04f 0800 	movne.w	r8, #0
 801b60a:	2300      	movs	r3, #0
 801b60c:	fa1f f888 	uxth.w	r8, r8
 801b610:	9301      	str	r3, [sp, #4]
 801b612:	9a04      	ldr	r2, [sp, #16]
 801b614:	4282      	cmp	r2, r0
 801b616:	f240 80b9 	bls.w	801b78c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b61a:	b95b      	cbnz	r3, 801b634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b61c:	783a      	ldrb	r2, [r7, #0]
 801b61e:	0993      	lsrs	r3, r2, #6
 801b620:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b624:	9201      	str	r2, [sp, #4]
 801b626:	1e5a      	subs	r2, r3, #1
 801b628:	2a02      	cmp	r2, #2
 801b62a:	bf8d      	iteet	hi
 801b62c:	787b      	ldrbhi	r3, [r7, #1]
 801b62e:	3701      	addls	r7, #1
 801b630:	b29b      	uxthls	r3, r3
 801b632:	3702      	addhi	r7, #2
 801b634:	b184      	cbz	r4, 801b658 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b636:	429c      	cmp	r4, r3
 801b638:	bf95      	itete	ls
 801b63a:	1b1c      	subls	r4, r3, r4
 801b63c:	1ae4      	subhi	r4, r4, r3
 801b63e:	fa1f fa84 	uxthls.w	sl, r4
 801b642:	b2a4      	uxthhi	r4, r4
 801b644:	bf87      	ittee	hi
 801b646:	46c4      	movhi	ip, r8
 801b648:	f04f 0a00 	movhi.w	sl, #0
 801b64c:	fa1f fc89 	uxthls.w	ip, r9
 801b650:	2400      	movls	r4, #0
 801b652:	4653      	mov	r3, sl
 801b654:	46e0      	mov	r8, ip
 801b656:	e7dc      	b.n	801b612 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b658:	2204      	movs	r2, #4
 801b65a:	4615      	mov	r5, r2
 801b65c:	9905      	ldr	r1, [sp, #20]
 801b65e:	9a01      	ldr	r2, [sp, #4]
 801b660:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b664:	9903      	ldr	r1, [sp, #12]
 801b666:	588a      	ldr	r2, [r1, r2]
 801b668:	4543      	cmp	r3, r8
 801b66a:	bf27      	ittee	cs
 801b66c:	eba3 0a08 	subcs.w	sl, r3, r8
 801b670:	46c6      	movcs	lr, r8
 801b672:	eba8 0c03 	subcc.w	ip, r8, r3
 801b676:	469e      	movcc	lr, r3
 801b678:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b67c:	bf27      	ittee	cs
 801b67e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b682:	46a4      	movcs	ip, r4
 801b684:	fa1f fc8c 	uxthcc.w	ip, ip
 801b688:	46a2      	movcc	sl, r4
 801b68a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b68e:	2900      	cmp	r1, #0
 801b690:	d066      	beq.n	801b760 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b692:	29ff      	cmp	r1, #255	@ 0xff
 801b694:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b698:	d114      	bne.n	801b6c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b69a:	9d02      	ldr	r5, [sp, #8]
 801b69c:	2dff      	cmp	r5, #255	@ 0xff
 801b69e:	d111      	bne.n	801b6c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b6a0:	0951      	lsrs	r1, r2, #5
 801b6a2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801b6a6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b6aa:	f026 0607 	bic.w	r6, r6, #7
 801b6ae:	430e      	orrs	r6, r1
 801b6b0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b6b4:	4316      	orrs	r6, r2
 801b6b6:	b2b6      	uxth	r6, r6
 801b6b8:	4486      	add	lr, r0
 801b6ba:	4586      	cmp	lr, r0
 801b6bc:	d051      	beq.n	801b762 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b6be:	f820 6b02 	strh.w	r6, [r0], #2
 801b6c2:	e7fa      	b.n	801b6ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b6c4:	9d02      	ldr	r5, [sp, #8]
 801b6c6:	4369      	muls	r1, r5
 801b6c8:	1c4d      	adds	r5, r1, #1
 801b6ca:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b6ce:	122d      	asrs	r5, r5, #8
 801b6d0:	ea6f 0b05 	mvn.w	fp, r5
 801b6d4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b6d8:	b2ad      	uxth	r5, r5
 801b6da:	b2f6      	uxtb	r6, r6
 801b6dc:	b2d2      	uxtb	r2, r2
 801b6de:	fb11 f105 	smulbb	r1, r1, r5
 801b6e2:	fb16 f605 	smulbb	r6, r6, r5
 801b6e6:	fb12 f205 	smulbb	r2, r2, r5
 801b6ea:	b289      	uxth	r1, r1
 801b6ec:	b2b6      	uxth	r6, r6
 801b6ee:	b292      	uxth	r2, r2
 801b6f0:	9106      	str	r1, [sp, #24]
 801b6f2:	9607      	str	r6, [sp, #28]
 801b6f4:	9208      	str	r2, [sp, #32]
 801b6f6:	4486      	add	lr, r0
 801b6f8:	fa5f fb8b 	uxtb.w	fp, fp
 801b6fc:	4586      	cmp	lr, r0
 801b6fe:	d030      	beq.n	801b762 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b700:	8802      	ldrh	r2, [r0, #0]
 801b702:	9906      	ldr	r1, [sp, #24]
 801b704:	1216      	asrs	r6, r2, #8
 801b706:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b70a:	10d5      	asrs	r5, r2, #3
 801b70c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b710:	fb06 160b 	mla	r6, r6, fp, r1
 801b714:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b718:	9907      	ldr	r1, [sp, #28]
 801b71a:	00d2      	lsls	r2, r2, #3
 801b71c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b720:	fb05 150b 	mla	r5, r5, fp, r1
 801b724:	b2d2      	uxtb	r2, r2
 801b726:	9908      	ldr	r1, [sp, #32]
 801b728:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b72c:	b2b6      	uxth	r6, r6
 801b72e:	fb02 120b 	mla	r2, r2, fp, r1
 801b732:	b292      	uxth	r2, r2
 801b734:	1c71      	adds	r1, r6, #1
 801b736:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b73a:	1c51      	adds	r1, r2, #1
 801b73c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b740:	b2ad      	uxth	r5, r5
 801b742:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b746:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b74a:	4316      	orrs	r6, r2
 801b74c:	1c6a      	adds	r2, r5, #1
 801b74e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b752:	096d      	lsrs	r5, r5, #5
 801b754:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b758:	432e      	orrs	r6, r5
 801b75a:	f820 6b02 	strh.w	r6, [r0], #2
 801b75e:	e7cd      	b.n	801b6fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b760:	4470      	add	r0, lr
 801b762:	4543      	cmp	r3, r8
 801b764:	f4ff af75 	bcc.w	801b652 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b768:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801b76c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b76e:	fa1f fc89 	uxth.w	ip, r9
 801b772:	eba4 040c 	sub.w	r4, r4, ip
 801b776:	881b      	ldrh	r3, [r3, #0]
 801b778:	b2a4      	uxth	r4, r4
 801b77a:	2c00      	cmp	r4, #0
 801b77c:	eba3 0309 	sub.w	r3, r3, r9
 801b780:	bf18      	it	ne
 801b782:	f04f 0c00 	movne.w	ip, #0
 801b786:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b78a:	e762      	b.n	801b652 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801b78c:	4b03      	ldr	r3, [pc, #12]	@ (801b79c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b78e:	6818      	ldr	r0, [r3, #0]
 801b790:	6803      	ldr	r3, [r0, #0]
 801b792:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b794:	4798      	blx	r3
 801b796:	b00f      	add	sp, #60	@ 0x3c
 801b798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b79c:	20002f54 	.word	0x20002f54
 801b7a0:	20002f4e 	.word	0x20002f4e

0801b7a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7a8:	b093      	sub	sp, #76	@ 0x4c
 801b7aa:	461c      	mov	r4, r3
 801b7ac:	9205      	str	r2, [sp, #20]
 801b7ae:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801b7b2:	9101      	str	r1, [sp, #4]
 801b7b4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b7b6:	9202      	str	r2, [sp, #8]
 801b7b8:	2a00      	cmp	r2, #0
 801b7ba:	f000 812c 	beq.w	801ba16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801b7be:	6820      	ldr	r0, [r4, #0]
 801b7c0:	6861      	ldr	r1, [r4, #4]
 801b7c2:	aa0e      	add	r2, sp, #56	@ 0x38
 801b7c4:	c203      	stmia	r2!, {r0, r1}
 801b7c6:	6818      	ldr	r0, [r3, #0]
 801b7c8:	6859      	ldr	r1, [r3, #4]
 801b7ca:	aa10      	add	r2, sp, #64	@ 0x40
 801b7cc:	c203      	stmia	r2!, {r0, r1}
 801b7ce:	a80e      	add	r0, sp, #56	@ 0x38
 801b7d0:	f7f8 fa48 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b7d4:	4621      	mov	r1, r4
 801b7d6:	a810      	add	r0, sp, #64	@ 0x40
 801b7d8:	f7f8 fa6c 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b7dc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801b7e0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801b7e4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801b7e8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b7ec:	bfde      	ittt	le
 801b7ee:	b2b3      	uxthle	r3, r6
 801b7f0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b7f4:	fb92 f3f3 	sdivle	r3, r2, r3
 801b7f8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801b7fc:	bfc8      	it	gt
 801b7fe:	2301      	movgt	r3, #1
 801b800:	fb92 f1f3 	sdiv	r1, r2, r3
 801b804:	fa1f fc81 	uxth.w	ip, r1
 801b808:	fb0c 2413 	mls	r4, ip, r3, r2
 801b80c:	fb14 f406 	smulbb	r4, r4, r6
 801b810:	441d      	add	r5, r3
 801b812:	4404      	add	r4, r0
 801b814:	4661      	mov	r1, ip
 801b816:	3d01      	subs	r5, #1
 801b818:	b2a4      	uxth	r4, r4
 801b81a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b81e:	b131      	cbz	r1, 801b82e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801b820:	9b05      	ldr	r3, [sp, #20]
 801b822:	9901      	ldr	r1, [sp, #4]
 801b824:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b828:	ba1b      	rev	r3, r3
 801b82a:	4419      	add	r1, r3
 801b82c:	9101      	str	r1, [sp, #4]
 801b82e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801b832:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801b836:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801b83a:	4418      	add	r0, r3
 801b83c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801b840:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801b844:	441a      	add	r2, r3
 801b846:	4b75      	ldr	r3, [pc, #468]	@ (801ba1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801b848:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801b84c:	6818      	ldr	r0, [r3, #0]
 801b84e:	6803      	ldr	r3, [r0, #0]
 801b850:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b852:	4798      	blx	r3
 801b854:	4972      	ldr	r1, [pc, #456]	@ (801ba20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b856:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801b85a:	880b      	ldrh	r3, [r1, #0]
 801b85c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801b860:	910d      	str	r1, [sp, #52]	@ 0x34
 801b862:	fb03 c202 	mla	r2, r3, r2, ip
 801b866:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b86a:	4373      	muls	r3, r6
 801b86c:	b2ad      	uxth	r5, r5
 801b86e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b872:	00ad      	lsls	r5, r5, #2
 801b874:	9308      	str	r3, [sp, #32]
 801b876:	1d2b      	adds	r3, r5, #4
 801b878:	9309      	str	r3, [sp, #36]	@ 0x24
 801b87a:	9b02      	ldr	r3, [sp, #8]
 801b87c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b880:	9106      	str	r1, [sp, #24]
 801b882:	43da      	mvns	r2, r3
 801b884:	2c00      	cmp	r4, #0
 801b886:	bf0c      	ite	eq
 801b888:	46dc      	moveq	ip, fp
 801b88a:	f04f 0c00 	movne.w	ip, #0
 801b88e:	2300      	movs	r3, #0
 801b890:	b2d2      	uxtb	r2, r2
 801b892:	fa1f fc8c 	uxth.w	ip, ip
 801b896:	9303      	str	r3, [sp, #12]
 801b898:	9207      	str	r2, [sp, #28]
 801b89a:	9a08      	ldr	r2, [sp, #32]
 801b89c:	4282      	cmp	r2, r0
 801b89e:	f240 80b5 	bls.w	801ba0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801b8a2:	b963      	cbnz	r3, 801b8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b8a4:	9b01      	ldr	r3, [sp, #4]
 801b8a6:	781a      	ldrb	r2, [r3, #0]
 801b8a8:	0993      	lsrs	r3, r2, #6
 801b8aa:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b8ae:	9203      	str	r2, [sp, #12]
 801b8b0:	1e5a      	subs	r2, r3, #1
 801b8b2:	2a02      	cmp	r2, #2
 801b8b4:	d815      	bhi.n	801b8e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801b8b6:	9a01      	ldr	r2, [sp, #4]
 801b8b8:	3201      	adds	r2, #1
 801b8ba:	9201      	str	r2, [sp, #4]
 801b8bc:	b29b      	uxth	r3, r3
 801b8be:	b1b4      	cbz	r4, 801b8ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801b8c0:	429c      	cmp	r4, r3
 801b8c2:	bf95      	itete	ls
 801b8c4:	1b1c      	subls	r4, r3, r4
 801b8c6:	1ae4      	subhi	r4, r4, r3
 801b8c8:	fa1f f884 	uxthls.w	r8, r4
 801b8cc:	b2a4      	uxthhi	r4, r4
 801b8ce:	bf87      	ittee	hi
 801b8d0:	4666      	movhi	r6, ip
 801b8d2:	f04f 0800 	movhi.w	r8, #0
 801b8d6:	fa1f f68b 	uxthls.w	r6, fp
 801b8da:	2400      	movls	r4, #0
 801b8dc:	4643      	mov	r3, r8
 801b8de:	46b4      	mov	ip, r6
 801b8e0:	e7db      	b.n	801b89a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801b8e2:	9a01      	ldr	r2, [sp, #4]
 801b8e4:	9b01      	ldr	r3, [sp, #4]
 801b8e6:	3202      	adds	r2, #2
 801b8e8:	785b      	ldrb	r3, [r3, #1]
 801b8ea:	9201      	str	r2, [sp, #4]
 801b8ec:	e7e7      	b.n	801b8be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801b8ee:	2203      	movs	r2, #3
 801b8f0:	4615      	mov	r5, r2
 801b8f2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b8f4:	9a03      	ldr	r2, [sp, #12]
 801b8f6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b8fa:	9905      	ldr	r1, [sp, #20]
 801b8fc:	4563      	cmp	r3, ip
 801b8fe:	eb01 0502 	add.w	r5, r1, r2
 801b902:	9902      	ldr	r1, [sp, #8]
 801b904:	bf29      	itett	cs
 801b906:	eba3 080c 	subcs.w	r8, r3, ip
 801b90a:	ebac 0603 	subcc.w	r6, ip, r3
 801b90e:	fa1f f888 	uxthcs.w	r8, r8
 801b912:	46e1      	movcs	r9, ip
 801b914:	bf2f      	iteee	cs
 801b916:	4626      	movcs	r6, r4
 801b918:	b2b6      	uxthcc	r6, r6
 801b91a:	4699      	movcc	r9, r3
 801b91c:	46a0      	movcc	r8, r4
 801b91e:	29ff      	cmp	r1, #255	@ 0xff
 801b920:	d04a      	beq.n	801b9b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801b922:	9f06      	ldr	r7, [sp, #24]
 801b924:	78a9      	ldrb	r1, [r5, #2]
 801b926:	9004      	str	r0, [sp, #16]
 801b928:	4379      	muls	r1, r7
 801b92a:	910a      	str	r1, [sp, #40]	@ 0x28
 801b92c:	7869      	ldrb	r1, [r5, #1]
 801b92e:	4379      	muls	r1, r7
 801b930:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b932:	9905      	ldr	r1, [sp, #20]
 801b934:	5c8a      	ldrb	r2, [r1, r2]
 801b936:	437a      	muls	r2, r7
 801b938:	920c      	str	r2, [sp, #48]	@ 0x30
 801b93a:	46ca      	mov	sl, r9
 801b93c:	f1ba 0f00 	cmp.w	sl, #0
 801b940:	d03d      	beq.n	801b9be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801b942:	9a04      	ldr	r2, [sp, #16]
 801b944:	9f07      	ldr	r7, [sp, #28]
 801b946:	8812      	ldrh	r2, [r2, #0]
 801b948:	1215      	asrs	r5, r2, #8
 801b94a:	46be      	mov	lr, r7
 801b94c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b950:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b952:	10d1      	asrs	r1, r2, #3
 801b954:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b958:	fb05 750e 	mla	r5, r5, lr, r7
 801b95c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b960:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801b962:	00d2      	lsls	r2, r2, #3
 801b964:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b968:	fb01 710e 	mla	r1, r1, lr, r7
 801b96c:	b2d2      	uxtb	r2, r2
 801b96e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b970:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b974:	b2ad      	uxth	r5, r5
 801b976:	fb02 720e 	mla	r2, r2, lr, r7
 801b97a:	b292      	uxth	r2, r2
 801b97c:	f105 0e01 	add.w	lr, r5, #1
 801b980:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b984:	f102 0e01 	add.w	lr, r2, #1
 801b988:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b98c:	b289      	uxth	r1, r1
 801b98e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b992:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b996:	4315      	orrs	r5, r2
 801b998:	1c4a      	adds	r2, r1, #1
 801b99a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b99e:	0949      	lsrs	r1, r1, #5
 801b9a0:	9a04      	ldr	r2, [sp, #16]
 801b9a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b9a6:	430d      	orrs	r5, r1
 801b9a8:	f822 5b02 	strh.w	r5, [r2], #2
 801b9ac:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b9b0:	9204      	str	r2, [sp, #16]
 801b9b2:	fa1f fa8a 	uxth.w	sl, sl
 801b9b6:	e7c1      	b.n	801b93c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801b9b8:	4649      	mov	r1, r9
 801b9ba:	4686      	mov	lr, r0
 801b9bc:	b999      	cbnz	r1, 801b9e6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801b9be:	4563      	cmp	r3, ip
 801b9c0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801b9c4:	d38a      	bcc.n	801b8dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b9c6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801b9ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b9cc:	fa1f f68b 	uxth.w	r6, fp
 801b9d0:	1ba4      	subs	r4, r4, r6
 801b9d2:	881b      	ldrh	r3, [r3, #0]
 801b9d4:	b2a4      	uxth	r4, r4
 801b9d6:	2c00      	cmp	r4, #0
 801b9d8:	eba3 030b 	sub.w	r3, r3, fp
 801b9dc:	bf18      	it	ne
 801b9de:	2600      	movne	r6, #0
 801b9e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b9e4:	e77a      	b.n	801b8dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801b9e6:	78aa      	ldrb	r2, [r5, #2]
 801b9e8:	4f0e      	ldr	r7, [pc, #56]	@ (801ba24 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801b9ea:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801b9ee:	786a      	ldrb	r2, [r5, #1]
 801b9f0:	00d2      	lsls	r2, r2, #3
 801b9f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b9f6:	ea4a 0202 	orr.w	r2, sl, r2
 801b9fa:	f895 a000 	ldrb.w	sl, [r5]
 801b9fe:	3901      	subs	r1, #1
 801ba00:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801ba04:	f82e 2b02 	strh.w	r2, [lr], #2
 801ba08:	b289      	uxth	r1, r1
 801ba0a:	e7d7      	b.n	801b9bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801ba0c:	4b03      	ldr	r3, [pc, #12]	@ (801ba1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801ba0e:	6818      	ldr	r0, [r3, #0]
 801ba10:	6803      	ldr	r3, [r0, #0]
 801ba12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ba14:	4798      	blx	r3
 801ba16:	b013      	add	sp, #76	@ 0x4c
 801ba18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba1c:	20002f54 	.word	0x20002f54
 801ba20:	20002f4e 	.word	0x20002f4e
 801ba24:	fffff800 	.word	0xfffff800

0801ba28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801ba28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba2c:	b09d      	sub	sp, #116	@ 0x74
 801ba2e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801ba32:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801ba36:	920e      	str	r2, [sp, #56]	@ 0x38
 801ba38:	461c      	mov	r4, r3
 801ba3a:	4683      	mov	fp, r0
 801ba3c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ba3e:	2a00      	cmp	r2, #0
 801ba40:	f000 81e0 	beq.w	801be04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801ba44:	6820      	ldr	r0, [r4, #0]
 801ba46:	6861      	ldr	r1, [r4, #4]
 801ba48:	aa18      	add	r2, sp, #96	@ 0x60
 801ba4a:	c203      	stmia	r2!, {r0, r1}
 801ba4c:	6818      	ldr	r0, [r3, #0]
 801ba4e:	6859      	ldr	r1, [r3, #4]
 801ba50:	aa1a      	add	r2, sp, #104	@ 0x68
 801ba52:	c203      	stmia	r2!, {r0, r1}
 801ba54:	a818      	add	r0, sp, #96	@ 0x60
 801ba56:	f7f8 f905 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba5a:	4621      	mov	r1, r4
 801ba5c:	a81a      	add	r0, sp, #104	@ 0x68
 801ba5e:	f7f8 f929 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba62:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801ba66:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801ba6a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801ba6e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801ba72:	bfd7      	itett	le
 801ba74:	b29a      	uxthle	r2, r3
 801ba76:	2201      	movgt	r2, #1
 801ba78:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801ba7c:	fb91 f2f2 	sdivle	r2, r1, r2
 801ba80:	9202      	str	r2, [sp, #8]
 801ba82:	9802      	ldr	r0, [sp, #8]
 801ba84:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801ba88:	fb92 f0f0 	sdiv	r0, r2, r0
 801ba8c:	b280      	uxth	r0, r0
 801ba8e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801ba90:	9902      	ldr	r1, [sp, #8]
 801ba92:	9802      	ldr	r0, [sp, #8]
 801ba94:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ba96:	440c      	add	r4, r1
 801ba98:	fb05 2510 	mls	r5, r5, r0, r2
 801ba9c:	fb15 f503 	smulbb	r5, r5, r3
 801baa0:	3c01      	subs	r4, #1
 801baa2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801baa6:	fb94 f4f1 	sdiv	r4, r4, r1
 801baaa:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801baae:	440d      	add	r5, r1
 801bab0:	4419      	add	r1, r3
 801bab2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801bab6:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801baba:	441a      	add	r2, r3
 801babc:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801bac0:	9306      	str	r3, [sp, #24]
 801bac2:	4bb3      	ldr	r3, [pc, #716]	@ (801bd90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801bac4:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801bac8:	6818      	ldr	r0, [r3, #0]
 801baca:	6803      	ldr	r3, [r0, #0]
 801bacc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bace:	4798      	blx	r3
 801bad0:	4bb0      	ldr	r3, [pc, #704]	@ (801bd94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801bad2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801bad6:	881a      	ldrh	r2, [r3, #0]
 801bad8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801badc:	9316      	str	r3, [sp, #88]	@ 0x58
 801bade:	fb02 7101 	mla	r1, r2, r1, r7
 801bae2:	3401      	adds	r4, #1
 801bae4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801bae8:	b2a4      	uxth	r4, r4
 801baea:	4356      	muls	r6, r2
 801baec:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801baf0:	00a4      	lsls	r4, r4, #2
 801baf2:	920a      	str	r2, [sp, #40]	@ 0x28
 801baf4:	1d22      	adds	r2, r4, #4
 801baf6:	b2ad      	uxth	r5, r5
 801baf8:	9213      	str	r2, [sp, #76]	@ 0x4c
 801bafa:	4ba7      	ldr	r3, [pc, #668]	@ (801bd98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801bafc:	9a06      	ldr	r2, [sp, #24]
 801bafe:	2d00      	cmp	r5, #0
 801bb00:	bf0c      	ite	eq
 801bb02:	4611      	moveq	r1, r2
 801bb04:	2100      	movne	r1, #0
 801bb06:	2200      	movs	r2, #0
 801bb08:	eba3 030b 	sub.w	r3, r3, fp
 801bb0c:	b289      	uxth	r1, r1
 801bb0e:	920d      	str	r2, [sp, #52]	@ 0x34
 801bb10:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bb12:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bb14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bb16:	fa12 f383 	uxtah	r3, r2, r3
 801bb1a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bb1c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bb20:	3304      	adds	r3, #4
 801bb22:	9308      	str	r3, [sp, #32]
 801bb24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb26:	4543      	cmp	r3, r8
 801bb28:	f240 8167 	bls.w	801bdfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bb2c:	9a02      	ldr	r2, [sp, #8]
 801bb2e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801bb32:	fbb5 f3f3 	udiv	r3, r5, r3
 801bb36:	1ad3      	subs	r3, r2, r3
 801bb38:	b29b      	uxth	r3, r3
 801bb3a:	9314      	str	r3, [sp, #80]	@ 0x50
 801bb3c:	9b08      	ldr	r3, [sp, #32]
 801bb3e:	9808      	ldr	r0, [sp, #32]
 801bb40:	785a      	ldrb	r2, [r3, #1]
 801bb42:	789b      	ldrb	r3, [r3, #2]
 801bb44:	7800      	ldrb	r0, [r0, #0]
 801bb46:	9010      	str	r0, [sp, #64]	@ 0x40
 801bb48:	021b      	lsls	r3, r3, #8
 801bb4a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bb4e:	9a08      	ldr	r2, [sp, #32]
 801bb50:	78d2      	ldrb	r2, [r2, #3]
 801bb52:	4313      	orrs	r3, r2
 801bb54:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801bb56:	3001      	adds	r0, #1
 801bb58:	441a      	add	r2, r3
 801bb5a:	9007      	str	r0, [sp, #28]
 801bb5c:	1c50      	adds	r0, r2, #1
 801bb5e:	9005      	str	r0, [sp, #20]
 801bb60:	7852      	ldrb	r2, [r2, #1]
 801bb62:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801bb64:	0212      	lsls	r2, r2, #8
 801bb66:	5cc3      	ldrb	r3, [r0, r3]
 801bb68:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801bb6c:	431a      	orrs	r2, r3
 801bb6e:	b293      	uxth	r3, r2
 801bb70:	930b      	str	r3, [sp, #44]	@ 0x2c
 801bb72:	2300      	movs	r3, #0
 801bb74:	9309      	str	r3, [sp, #36]	@ 0x24
 801bb76:	2301      	movs	r3, #1
 801bb78:	9301      	str	r3, [sp, #4]
 801bb7a:	9304      	str	r3, [sp, #16]
 801bb7c:	2300      	movs	r3, #0
 801bb7e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801bb82:	9303      	str	r3, [sp, #12]
 801bb84:	f04f 0e01 	mov.w	lr, #1
 801bb88:	2d00      	cmp	r5, #0
 801bb8a:	d07c      	beq.n	801bc86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801bb8c:	45ae      	cmp	lr, r5
 801bb8e:	d26b      	bcs.n	801bc68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801bb90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb92:	eba5 050e 	sub.w	r5, r5, lr
 801bb96:	4543      	cmp	r3, r8
 801bb98:	b2ad      	uxth	r5, r5
 801bb9a:	460c      	mov	r4, r1
 801bb9c:	d802      	bhi.n	801bba4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801bb9e:	e070      	b.n	801bc82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801bba0:	2b00      	cmp	r3, #0
 801bba2:	d15c      	bne.n	801bc5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bba4:	9b05      	ldr	r3, [sp, #20]
 801bba6:	9a04      	ldr	r2, [sp, #16]
 801bba8:	785b      	ldrb	r3, [r3, #1]
 801bbaa:	9904      	ldr	r1, [sp, #16]
 801bbac:	f1c2 0207 	rsb	r2, r2, #7
 801bbb0:	4093      	lsls	r3, r2
 801bbb2:	005b      	lsls	r3, r3, #1
 801bbb4:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801bbb8:	9b05      	ldr	r3, [sp, #20]
 801bbba:	781b      	ldrb	r3, [r3, #0]
 801bbbc:	410b      	asrs	r3, r1
 801bbbe:	3101      	adds	r1, #1
 801bbc0:	b2c9      	uxtb	r1, r1
 801bbc2:	2908      	cmp	r1, #8
 801bbc4:	9104      	str	r1, [sp, #16]
 801bbc6:	9905      	ldr	r1, [sp, #20]
 801bbc8:	bf0a      	itet	eq
 801bbca:	3102      	addeq	r1, #2
 801bbcc:	3101      	addne	r1, #1
 801bbce:	9105      	streq	r1, [sp, #20]
 801bbd0:	b2db      	uxtb	r3, r3
 801bbd2:	bf0a      	itet	eq
 801bbd4:	2100      	moveq	r1, #0
 801bbd6:	9105      	strne	r1, [sp, #20]
 801bbd8:	9104      	streq	r1, [sp, #16]
 801bbda:	4313      	orrs	r3, r2
 801bbdc:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801bbde:	b29a      	uxth	r2, r3
 801bbe0:	4291      	cmp	r1, r2
 801bbe2:	d30a      	bcc.n	801bbfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bbe4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801bbe8:	2301      	movs	r3, #1
 801bbea:	9907      	ldr	r1, [sp, #28]
 801bbec:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801bbf0:	d30f      	bcc.n	801bc12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bbf2:	2100      	movs	r1, #0
 801bbf4:	9301      	str	r3, [sp, #4]
 801bbf6:	9103      	str	r1, [sp, #12]
 801bbf8:	e032      	b.n	801bc60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801bbfa:	9b07      	ldr	r3, [sp, #28]
 801bbfc:	429a      	cmp	r2, r3
 801bbfe:	d318      	bcc.n	801bc32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bc00:	9b01      	ldr	r3, [sp, #4]
 801bc02:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801bc06:	445b      	add	r3, fp
 801bc08:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801bc0c:	9b01      	ldr	r3, [sp, #4]
 801bc0e:	3301      	adds	r3, #1
 801bc10:	b29b      	uxth	r3, r3
 801bc12:	9907      	ldr	r1, [sp, #28]
 801bc14:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801bc18:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bc1c:	7108      	strb	r0, [r1, #4]
 801bc1e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bc20:	80c8      	strh	r0, [r1, #6]
 801bc22:	9801      	ldr	r0, [sp, #4]
 801bc24:	3001      	adds	r0, #1
 801bc26:	7148      	strb	r0, [r1, #5]
 801bc28:	9907      	ldr	r1, [sp, #28]
 801bc2a:	3101      	adds	r1, #1
 801bc2c:	b289      	uxth	r1, r1
 801bc2e:	9107      	str	r1, [sp, #28]
 801bc30:	e7df      	b.n	801bbf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bc32:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bc36:	4611      	mov	r1, r2
 801bc38:	795b      	ldrb	r3, [r3, #5]
 801bc3a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801bc3e:	4458      	add	r0, fp
 801bc40:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801bc42:	4406      	add	r6, r0
 801bc44:	2e00      	cmp	r6, #0
 801bc46:	dd06      	ble.n	801bc56 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801bc48:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bc4c:	790e      	ldrb	r6, [r1, #4]
 801bc4e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bc52:	88c9      	ldrh	r1, [r1, #6]
 801bc54:	e7f4      	b.n	801bc40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801bc56:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801bc5a:	b29b      	uxth	r3, r3
 801bc5c:	e7c5      	b.n	801bbea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801bc5e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bc60:	920b      	str	r2, [sp, #44]	@ 0x2c
 801bc62:	4621      	mov	r1, r4
 801bc64:	469e      	mov	lr, r3
 801bc66:	e78f      	b.n	801bb88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801bc68:	9a03      	ldr	r2, [sp, #12]
 801bc6a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bc6e:	442a      	add	r2, r5
 801bc70:	ebae 0305 	sub.w	r3, lr, r5
 801bc74:	b292      	uxth	r2, r2
 801bc76:	b29b      	uxth	r3, r3
 801bc78:	9203      	str	r2, [sp, #12]
 801bc7a:	2500      	movs	r5, #0
 801bc7c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bc7e:	4542      	cmp	r2, r8
 801bc80:	d88e      	bhi.n	801bba0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801bc82:	4621      	mov	r1, r4
 801bc84:	e74e      	b.n	801bb24 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801bc86:	458e      	cmp	lr, r1
 801bc88:	bf29      	itett	cs
 801bc8a:	ebae 0301 	subcs.w	r3, lr, r1
 801bc8e:	eba1 040e 	subcc.w	r4, r1, lr
 801bc92:	b29b      	uxthcs	r3, r3
 801bc94:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801bc96:	bf2f      	iteee	cs
 801bc98:	462c      	movcs	r4, r5
 801bc9a:	b2a4      	uxthcc	r4, r4
 801bc9c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801bca0:	462b      	movcc	r3, r5
 801bca2:	f04f 0900 	mov.w	r9, #0
 801bca6:	9a03      	ldr	r2, [sp, #12]
 801bca8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801bcaa:	444a      	add	r2, r9
 801bcac:	4548      	cmp	r0, r9
 801bcae:	b292      	uxth	r2, r2
 801bcb0:	d074      	beq.n	801bd9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801bcb2:	445a      	add	r2, fp
 801bcb4:	2004      	movs	r0, #4
 801bcb6:	4605      	mov	r5, r0
 801bcb8:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801bcbc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bcbe:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bcc2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bcc4:	5880      	ldr	r0, [r0, r2]
 801bcc6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bcca:	d014      	beq.n	801bcf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bccc:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801bcd0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bcd4:	d112      	bne.n	801bcfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bcd6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bcd8:	2aff      	cmp	r2, #255	@ 0xff
 801bcda:	d10f      	bne.n	801bcfc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bcdc:	0942      	lsrs	r2, r0, #5
 801bcde:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801bce2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bce6:	f025 0507 	bic.w	r5, r5, #7
 801bcea:	4315      	orrs	r5, r2
 801bcec:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bcf0:	4305      	orrs	r5, r0
 801bcf2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bcf6:	f109 0901 	add.w	r9, r9, #1
 801bcfa:	e7d4      	b.n	801bca6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bcfc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bd00:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bd04:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801bd08:	9215      	str	r2, [sp, #84]	@ 0x54
 801bd0a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bd0c:	fb02 fa0a 	mul.w	sl, r2, sl
 801bd10:	f10a 0201 	add.w	r2, sl, #1
 801bd14:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bd18:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bd1c:	1212      	asrs	r2, r2, #8
 801bd1e:	fa1f fa82 	uxth.w	sl, r2
 801bd22:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bd26:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bd2a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bd2e:	43d2      	mvns	r2, r2
 801bd30:	b2d2      	uxtb	r2, r2
 801bd32:	fb16 f60a 	smulbb	r6, r6, sl
 801bd36:	fa5f fc8c 	uxtb.w	ip, ip
 801bd3a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bd3e:	b2c0      	uxtb	r0, r0
 801bd40:	fb07 6702 	mla	r7, r7, r2, r6
 801bd44:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bd48:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801bd4a:	fb10 f00a 	smulbb	r0, r0, sl
 801bd4e:	fb0c 0002 	mla	r0, ip, r2, r0
 801bd52:	b2ed      	uxtb	r5, r5
 801bd54:	b2bf      	uxth	r7, r7
 801bd56:	fb15 f50a 	smulbb	r5, r5, sl
 801bd5a:	b280      	uxth	r0, r0
 801bd5c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bd60:	fb06 5602 	mla	r6, r6, r2, r5
 801bd64:	1c7a      	adds	r2, r7, #1
 801bd66:	1c45      	adds	r5, r0, #1
 801bd68:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801bd6c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801bd70:	b2b6      	uxth	r6, r6
 801bd72:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bd76:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801bd7a:	432f      	orrs	r7, r5
 801bd7c:	1c75      	adds	r5, r6, #1
 801bd7e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bd82:	096d      	lsrs	r5, r5, #5
 801bd84:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bd88:	432f      	orrs	r7, r5
 801bd8a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bd8e:	e7b2      	b.n	801bcf6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bd90:	20002f54 	.word	0x20002f54
 801bd94:	20002f4e 	.word	0x20002f4e
 801bd98:	fffff7fb 	.word	0xfffff7fb
 801bd9c:	9203      	str	r2, [sp, #12]
 801bd9e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801bda0:	458e      	cmp	lr, r1
 801bda2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bda6:	f4ff af68 	bcc.w	801bc7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801bdaa:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801bdac:	9906      	ldr	r1, [sp, #24]
 801bdae:	8812      	ldrh	r2, [r2, #0]
 801bdb0:	1a52      	subs	r2, r2, r1
 801bdb2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bdb6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bdb8:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801bdba:	3201      	adds	r2, #1
 801bdbc:	428a      	cmp	r2, r1
 801bdbe:	9209      	str	r2, [sp, #36]	@ 0x24
 801bdc0:	d111      	bne.n	801bde6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801bdc2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801bdc6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801bdca:	9b06      	ldr	r3, [sp, #24]
 801bdcc:	eba5 0509 	sub.w	r5, r5, r9
 801bdd0:	b2ad      	uxth	r5, r5
 801bdd2:	2d00      	cmp	r5, #0
 801bdd4:	bf08      	it	eq
 801bdd6:	4619      	moveq	r1, r3
 801bdd8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bdda:	bf18      	it	ne
 801bddc:	2100      	movne	r1, #0
 801bdde:	3301      	adds	r3, #1
 801bde0:	930d      	str	r3, [sp, #52]	@ 0x34
 801bde2:	b289      	uxth	r1, r1
 801bde4:	e695      	b.n	801bb12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801bde6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bdea:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801bdee:	1b2d      	subs	r5, r5, r4
 801bdf0:	b2ad      	uxth	r5, r5
 801bdf2:	2d00      	cmp	r5, #0
 801bdf4:	bf18      	it	ne
 801bdf6:	2400      	movne	r4, #0
 801bdf8:	e740      	b.n	801bc7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801bdfa:	4b04      	ldr	r3, [pc, #16]	@ (801be0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801bdfc:	6818      	ldr	r0, [r3, #0]
 801bdfe:	6803      	ldr	r3, [r0, #0]
 801be00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801be02:	4798      	blx	r3
 801be04:	b01d      	add	sp, #116	@ 0x74
 801be06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be0a:	bf00      	nop
 801be0c:	20002f54 	.word	0x20002f54

0801be10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801be10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be14:	b09f      	sub	sp, #124	@ 0x7c
 801be16:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801be1a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801be1e:	920a      	str	r2, [sp, #40]	@ 0x28
 801be20:	461d      	mov	r5, r3
 801be22:	4604      	mov	r4, r0
 801be24:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801be26:	2a00      	cmp	r2, #0
 801be28:	f000 81fa 	beq.w	801c220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801be2c:	6828      	ldr	r0, [r5, #0]
 801be2e:	6869      	ldr	r1, [r5, #4]
 801be30:	aa1a      	add	r2, sp, #104	@ 0x68
 801be32:	c203      	stmia	r2!, {r0, r1}
 801be34:	6818      	ldr	r0, [r3, #0]
 801be36:	6859      	ldr	r1, [r3, #4]
 801be38:	aa1c      	add	r2, sp, #112	@ 0x70
 801be3a:	c203      	stmia	r2!, {r0, r1}
 801be3c:	a81a      	add	r0, sp, #104	@ 0x68
 801be3e:	f7f7 ff11 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801be42:	4629      	mov	r1, r5
 801be44:	a81c      	add	r0, sp, #112	@ 0x70
 801be46:	f7f7 ff35 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801be4a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801be4e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801be52:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801be56:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801be5a:	bfd7      	itett	le
 801be5c:	b29a      	uxthle	r2, r3
 801be5e:	2201      	movgt	r2, #1
 801be60:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801be64:	fb91 f2f2 	sdivle	r2, r1, r2
 801be68:	9201      	str	r2, [sp, #4]
 801be6a:	9801      	ldr	r0, [sp, #4]
 801be6c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801be70:	fb92 f0f0 	sdiv	r0, r2, r0
 801be74:	b280      	uxth	r0, r0
 801be76:	9010      	str	r0, [sp, #64]	@ 0x40
 801be78:	9901      	ldr	r1, [sp, #4]
 801be7a:	9801      	ldr	r0, [sp, #4]
 801be7c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801be7e:	440e      	add	r6, r1
 801be80:	fb05 2510 	mls	r5, r5, r0, r2
 801be84:	fb15 f503 	smulbb	r5, r5, r3
 801be88:	3e01      	subs	r6, #1
 801be8a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801be8e:	fb96 f6f1 	sdiv	r6, r6, r1
 801be92:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801be96:	440d      	add	r5, r1
 801be98:	4419      	add	r1, r3
 801be9a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801be9e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801bea2:	441a      	add	r2, r3
 801bea4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801bea8:	9304      	str	r3, [sp, #16]
 801beaa:	4b96      	ldr	r3, [pc, #600]	@ (801c104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801beac:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801beb0:	6818      	ldr	r0, [r3, #0]
 801beb2:	6803      	ldr	r3, [r0, #0]
 801beb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801beb6:	4798      	blx	r3
 801beb8:	4b93      	ldr	r3, [pc, #588]	@ (801c108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801beba:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801bebe:	881a      	ldrh	r2, [r3, #0]
 801bec0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801bec4:	9318      	str	r3, [sp, #96]	@ 0x60
 801bec6:	fb02 c101 	mla	r1, r2, r1, ip
 801beca:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801bece:	4357      	muls	r7, r2
 801bed0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801bed4:	3601      	adds	r6, #1
 801bed6:	920b      	str	r2, [sp, #44]	@ 0x2c
 801bed8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801beda:	4b8c      	ldr	r3, [pc, #560]	@ (801c10c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bedc:	b2b6      	uxth	r6, r6
 801bede:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801bee2:	1d32      	adds	r2, r6, #4
 801bee4:	9206      	str	r2, [sp, #24]
 801bee6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bee8:	43d2      	mvns	r2, r2
 801beea:	b2d2      	uxtb	r2, r2
 801beec:	b2ad      	uxth	r5, r5
 801beee:	9215      	str	r2, [sp, #84]	@ 0x54
 801bef0:	9a04      	ldr	r2, [sp, #16]
 801bef2:	2d00      	cmp	r5, #0
 801bef4:	bf0c      	ite	eq
 801bef6:	4611      	moveq	r1, r2
 801bef8:	2100      	movne	r1, #0
 801befa:	2200      	movs	r2, #0
 801befc:	1b1b      	subs	r3, r3, r4
 801befe:	b289      	uxth	r1, r1
 801bf00:	920d      	str	r2, [sp, #52]	@ 0x34
 801bf02:	9319      	str	r3, [sp, #100]	@ 0x64
 801bf04:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801bf06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bf08:	fa12 f383 	uxtah	r3, r2, r3
 801bf0c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bf0e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bf12:	3304      	adds	r3, #4
 801bf14:	9307      	str	r3, [sp, #28]
 801bf16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bf18:	455b      	cmp	r3, fp
 801bf1a:	f240 817c 	bls.w	801c216 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801bf1e:	9a01      	ldr	r2, [sp, #4]
 801bf20:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801bf24:	fbb5 f3f3 	udiv	r3, r5, r3
 801bf28:	1ad3      	subs	r3, r2, r3
 801bf2a:	b29b      	uxth	r3, r3
 801bf2c:	9316      	str	r3, [sp, #88]	@ 0x58
 801bf2e:	9b07      	ldr	r3, [sp, #28]
 801bf30:	9807      	ldr	r0, [sp, #28]
 801bf32:	785a      	ldrb	r2, [r3, #1]
 801bf34:	789b      	ldrb	r3, [r3, #2]
 801bf36:	7800      	ldrb	r0, [r0, #0]
 801bf38:	9011      	str	r0, [sp, #68]	@ 0x44
 801bf3a:	021b      	lsls	r3, r3, #8
 801bf3c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bf40:	9a07      	ldr	r2, [sp, #28]
 801bf42:	78d2      	ldrb	r2, [r2, #3]
 801bf44:	4313      	orrs	r3, r2
 801bf46:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bf48:	3001      	adds	r0, #1
 801bf4a:	441a      	add	r2, r3
 801bf4c:	9005      	str	r0, [sp, #20]
 801bf4e:	1c50      	adds	r0, r2, #1
 801bf50:	9003      	str	r0, [sp, #12]
 801bf52:	7852      	ldrb	r2, [r2, #1]
 801bf54:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bf56:	0212      	lsls	r2, r2, #8
 801bf58:	5cc3      	ldrb	r3, [r0, r3]
 801bf5a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801bf5e:	431a      	orrs	r2, r3
 801bf60:	b293      	uxth	r3, r2
 801bf62:	930c      	str	r3, [sp, #48]	@ 0x30
 801bf64:	2300      	movs	r3, #0
 801bf66:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801bf6a:	9308      	str	r3, [sp, #32]
 801bf6c:	461a      	mov	r2, r3
 801bf6e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801bf72:	930e      	str	r3, [sp, #56]	@ 0x38
 801bf74:	f04f 0801 	mov.w	r8, #1
 801bf78:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801bf7c:	f8cd 8008 	str.w	r8, [sp, #8]
 801bf80:	46c4      	mov	ip, r8
 801bf82:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bf84:	2d00      	cmp	r5, #0
 801bf86:	d07c      	beq.n	801c082 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bf88:	45ac      	cmp	ip, r5
 801bf8a:	d26c      	bcs.n	801c066 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801bf8c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bf8e:	eba5 050c 	sub.w	r5, r5, ip
 801bf92:	455b      	cmp	r3, fp
 801bf94:	b2ad      	uxth	r5, r5
 801bf96:	4608      	mov	r0, r1
 801bf98:	d802      	bhi.n	801bfa0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801bf9a:	e070      	b.n	801c07e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801bf9c:	2b00      	cmp	r3, #0
 801bf9e:	d15c      	bne.n	801c05a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801bfa0:	9b03      	ldr	r3, [sp, #12]
 801bfa2:	9a02      	ldr	r2, [sp, #8]
 801bfa4:	785b      	ldrb	r3, [r3, #1]
 801bfa6:	9902      	ldr	r1, [sp, #8]
 801bfa8:	f1c2 0207 	rsb	r2, r2, #7
 801bfac:	4093      	lsls	r3, r2
 801bfae:	005b      	lsls	r3, r3, #1
 801bfb0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801bfb4:	9b03      	ldr	r3, [sp, #12]
 801bfb6:	781b      	ldrb	r3, [r3, #0]
 801bfb8:	410b      	asrs	r3, r1
 801bfba:	3101      	adds	r1, #1
 801bfbc:	b2c9      	uxtb	r1, r1
 801bfbe:	2908      	cmp	r1, #8
 801bfc0:	9102      	str	r1, [sp, #8]
 801bfc2:	9903      	ldr	r1, [sp, #12]
 801bfc4:	bf0a      	itet	eq
 801bfc6:	3102      	addeq	r1, #2
 801bfc8:	3101      	addne	r1, #1
 801bfca:	9103      	streq	r1, [sp, #12]
 801bfcc:	b2db      	uxtb	r3, r3
 801bfce:	bf0a      	itet	eq
 801bfd0:	2100      	moveq	r1, #0
 801bfd2:	9103      	strne	r1, [sp, #12]
 801bfd4:	9102      	streq	r1, [sp, #8]
 801bfd6:	4313      	orrs	r3, r2
 801bfd8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801bfda:	b29a      	uxth	r2, r3
 801bfdc:	4291      	cmp	r1, r2
 801bfde:	d30a      	bcc.n	801bff6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801bfe0:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801bfe4:	2301      	movs	r3, #1
 801bfe6:	9905      	ldr	r1, [sp, #20]
 801bfe8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801bfec:	d30f      	bcc.n	801c00e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801bfee:	2100      	movs	r1, #0
 801bff0:	4698      	mov	r8, r3
 801bff2:	9100      	str	r1, [sp, #0]
 801bff4:	e032      	b.n	801c05c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801bff6:	9b05      	ldr	r3, [sp, #20]
 801bff8:	429a      	cmp	r2, r3
 801bffa:	d318      	bcc.n	801c02e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801bffc:	eb04 0308 	add.w	r3, r4, r8
 801c000:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801c004:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801c008:	f108 0301 	add.w	r3, r8, #1
 801c00c:	b29b      	uxth	r3, r3
 801c00e:	9905      	ldr	r1, [sp, #20]
 801c010:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801c014:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c018:	710e      	strb	r6, [r1, #4]
 801c01a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c01c:	80ce      	strh	r6, [r1, #6]
 801c01e:	f108 0601 	add.w	r6, r8, #1
 801c022:	714e      	strb	r6, [r1, #5]
 801c024:	9905      	ldr	r1, [sp, #20]
 801c026:	3101      	adds	r1, #1
 801c028:	b289      	uxth	r1, r1
 801c02a:	9105      	str	r1, [sp, #20]
 801c02c:	e7df      	b.n	801bfee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c02e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c032:	4611      	mov	r1, r2
 801c034:	795b      	ldrb	r3, [r3, #5]
 801c036:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801c03a:	4426      	add	r6, r4
 801c03c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801c03e:	4437      	add	r7, r6
 801c040:	2f00      	cmp	r7, #0
 801c042:	dd06      	ble.n	801c052 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c044:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c048:	790f      	ldrb	r7, [r1, #4]
 801c04a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c04e:	88c9      	ldrh	r1, [r1, #6]
 801c050:	e7f4      	b.n	801c03c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c052:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801c056:	b29b      	uxth	r3, r3
 801c058:	e7c5      	b.n	801bfe6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c05a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c05c:	920c      	str	r2, [sp, #48]	@ 0x30
 801c05e:	4601      	mov	r1, r0
 801c060:	9a00      	ldr	r2, [sp, #0]
 801c062:	469c      	mov	ip, r3
 801c064:	e78e      	b.n	801bf84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c066:	1957      	adds	r7, r2, r5
 801c068:	ebac 0305 	sub.w	r3, ip, r5
 801c06c:	b2ba      	uxth	r2, r7
 801c06e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c072:	9200      	str	r2, [sp, #0]
 801c074:	b29b      	uxth	r3, r3
 801c076:	2500      	movs	r5, #0
 801c078:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c07a:	455a      	cmp	r2, fp
 801c07c:	d88e      	bhi.n	801bf9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c07e:	4601      	mov	r1, r0
 801c080:	e749      	b.n	801bf16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c082:	458c      	cmp	ip, r1
 801c084:	bf2c      	ite	cs
 801c086:	4628      	movcs	r0, r5
 801c088:	462b      	movcc	r3, r5
 801c08a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c08c:	bf27      	ittee	cs
 801c08e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801c090:	ebac 0301 	subcs.w	r3, ip, r1
 801c094:	eba1 000c 	subcc.w	r0, r1, ip
 801c098:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801c09c:	bf2c      	ite	cs
 801c09e:	b29b      	uxthcs	r3, r3
 801c0a0:	b280      	uxthcc	r0, r0
 801c0a2:	2dff      	cmp	r5, #255	@ 0xff
 801c0a4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c0a6:	eb02 0705 	add.w	r7, r2, r5
 801c0aa:	b2bd      	uxth	r5, r7
 801c0ac:	9500      	str	r5, [sp, #0]
 801c0ae:	d12f      	bne.n	801c110 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c0b0:	465e      	mov	r6, fp
 801c0b2:	9d00      	ldr	r5, [sp, #0]
 801c0b4:	42aa      	cmp	r2, r5
 801c0b6:	f040 8084 	bne.w	801c1c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c0ba:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c0bc:	458c      	cmp	ip, r1
 801c0be:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c0c2:	d3d8      	bcc.n	801c076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c0c4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c0c6:	9904      	ldr	r1, [sp, #16]
 801c0c8:	8812      	ldrh	r2, [r2, #0]
 801c0ca:	1a52      	subs	r2, r2, r1
 801c0cc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c0d0:	9a08      	ldr	r2, [sp, #32]
 801c0d2:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801c0d4:	3201      	adds	r2, #1
 801c0d6:	428a      	cmp	r2, r1
 801c0d8:	9208      	str	r2, [sp, #32]
 801c0da:	f040 8092 	bne.w	801c202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c0de:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801c0e2:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801c0e6:	9b04      	ldr	r3, [sp, #16]
 801c0e8:	eba5 050c 	sub.w	r5, r5, ip
 801c0ec:	b2ad      	uxth	r5, r5
 801c0ee:	2d00      	cmp	r5, #0
 801c0f0:	bf08      	it	eq
 801c0f2:	4619      	moveq	r1, r3
 801c0f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c0f6:	bf18      	it	ne
 801c0f8:	2100      	movne	r1, #0
 801c0fa:	3301      	adds	r3, #1
 801c0fc:	930d      	str	r3, [sp, #52]	@ 0x34
 801c0fe:	b289      	uxth	r1, r1
 801c100:	e700      	b.n	801bf04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c102:	bf00      	nop
 801c104:	20002f54 	.word	0x20002f54
 801c108:	20002f4e 	.word	0x20002f4e
 801c10c:	fffff7fb 	.word	0xfffff7fb
 801c110:	46d9      	mov	r9, fp
 801c112:	9d00      	ldr	r5, [sp, #0]
 801c114:	42aa      	cmp	r2, r5
 801c116:	d0d0      	beq.n	801c0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c118:	1c55      	adds	r5, r2, #1
 801c11a:	4422      	add	r2, r4
 801c11c:	9517      	str	r5, [sp, #92]	@ 0x5c
 801c11e:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801c122:	9a06      	ldr	r2, [sp, #24]
 801c124:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c128:	4472      	add	r2, lr
 801c12a:	9212      	str	r2, [sp, #72]	@ 0x48
 801c12c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801c12e:	f8b9 2000 	ldrh.w	r2, [r9]
 801c132:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c136:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c138:	1216      	asrs	r6, r2, #8
 801c13a:	fb1a fa07 	smulbb	sl, sl, r7
 801c13e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c142:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c144:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c148:	fb06 a607 	mla	r6, r6, r7, sl
 801c14c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801c14e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c152:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c154:	10d5      	asrs	r5, r2, #3
 801c156:	fb1a fa07 	smulbb	sl, sl, r7
 801c15a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c15e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c160:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c164:	fb05 a507 	mla	r5, r5, r7, sl
 801c168:	9f06      	ldr	r7, [sp, #24]
 801c16a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c16e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c170:	00d2      	lsls	r2, r2, #3
 801c172:	fb1e fe07 	smulbb	lr, lr, r7
 801c176:	b2d2      	uxtb	r2, r2
 801c178:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c17a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c17e:	b2b6      	uxth	r6, r6
 801c180:	fb02 e207 	mla	r2, r2, r7, lr
 801c184:	b292      	uxth	r2, r2
 801c186:	b2ad      	uxth	r5, r5
 801c188:	f106 0a01 	add.w	sl, r6, #1
 801c18c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c190:	f102 0e01 	add.w	lr, r2, #1
 801c194:	f105 0a01 	add.w	sl, r5, #1
 801c198:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c19c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c1a0:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c1a4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c1a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c1ac:	ea4e 0606 	orr.w	r6, lr, r6
 801c1b0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c1b4:	ea46 060a 	orr.w	r6, r6, sl
 801c1b8:	f829 6b02 	strh.w	r6, [r9], #2
 801c1bc:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801c1c0:	e7a7      	b.n	801c112 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c1c2:	f102 0e01 	add.w	lr, r2, #1
 801c1c6:	4422      	add	r2, r4
 801c1c8:	9f06      	ldr	r7, [sp, #24]
 801c1ca:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801c1ce:	9a06      	ldr	r2, [sp, #24]
 801c1d0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c1d4:	eb02 0a05 	add.w	sl, r2, r5
 801c1d8:	4a13      	ldr	r2, [pc, #76]	@ (801c228 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c1da:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c1de:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c1e2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c1e6:	00d2      	lsls	r2, r2, #3
 801c1e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c1ec:	ea49 0202 	orr.w	r2, r9, r2
 801c1f0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c1f4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c1f8:	f826 2b02 	strh.w	r2, [r6], #2
 801c1fc:	fa1f f28e 	uxth.w	r2, lr
 801c200:	e757      	b.n	801c0b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c202:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c206:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801c20a:	1a2d      	subs	r5, r5, r0
 801c20c:	b2ad      	uxth	r5, r5
 801c20e:	2d00      	cmp	r5, #0
 801c210:	bf18      	it	ne
 801c212:	2000      	movne	r0, #0
 801c214:	e730      	b.n	801c078 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c216:	4b05      	ldr	r3, [pc, #20]	@ (801c22c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c218:	6818      	ldr	r0, [r3, #0]
 801c21a:	6803      	ldr	r3, [r0, #0]
 801c21c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c21e:	4798      	blx	r3
 801c220:	b01f      	add	sp, #124	@ 0x7c
 801c222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c226:	bf00      	nop
 801c228:	fffff800 	.word	0xfffff800
 801c22c:	20002f54 	.word	0x20002f54

0801c230 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c234:	b091      	sub	sp, #68	@ 0x44
 801c236:	469b      	mov	fp, r3
 801c238:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801c23c:	4616      	mov	r6, r2
 801c23e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801c242:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c246:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801c24a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c24e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c252:	4604      	mov	r4, r0
 801c254:	460d      	mov	r5, r1
 801c256:	4640      	mov	r0, r8
 801c258:	4659      	mov	r1, fp
 801c25a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c25e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801c262:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801c266:	f7f4 fb39 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 801c26a:	4631      	mov	r1, r6
 801c26c:	4640      	mov	r0, r8
 801c26e:	f7f4 fb35 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 801c272:	4b74      	ldr	r3, [pc, #464]	@ (801c444 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c274:	8818      	ldrh	r0, [r3, #0]
 801c276:	4b74      	ldr	r3, [pc, #464]	@ (801c448 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c278:	8819      	ldrh	r1, [r3, #0]
 801c27a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c27e:	2b00      	cmp	r3, #0
 801c280:	b202      	sxth	r2, r0
 801c282:	b20e      	sxth	r6, r1
 801c284:	da07      	bge.n	801c296 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c286:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801c28a:	4463      	add	r3, ip
 801c28c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801c290:	2300      	movs	r3, #0
 801c292:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801c296:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c29a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801c29e:	1ad2      	subs	r2, r2, r3
 801c2a0:	4594      	cmp	ip, r2
 801c2a2:	bfc4      	itt	gt
 801c2a4:	1ac2      	subgt	r2, r0, r3
 801c2a6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801c2aa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c2ae:	2a00      	cmp	r2, #0
 801c2b0:	da07      	bge.n	801c2c2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c2b2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801c2b6:	4462      	add	r2, ip
 801c2b8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801c2bc:	2200      	movs	r2, #0
 801c2be:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801c2c2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801c2c6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c2ca:	eba6 060a 	sub.w	r6, r6, sl
 801c2ce:	42b2      	cmp	r2, r6
 801c2d0:	bfc4      	itt	gt
 801c2d2:	eba1 020a 	subgt.w	r2, r1, sl
 801c2d6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801c2da:	4a5c      	ldr	r2, [pc, #368]	@ (801c44c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c2dc:	7812      	ldrb	r2, [r2, #0]
 801c2de:	b9a2      	cbnz	r2, 801c30a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c2e0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801c2e4:	4286      	cmp	r6, r0
 801c2e6:	4640      	mov	r0, r8
 801c2e8:	9303      	str	r3, [sp, #12]
 801c2ea:	bf14      	ite	ne
 801c2ec:	2600      	movne	r6, #0
 801c2ee:	2601      	moveq	r6, #1
 801c2f0:	f7f4 fb37 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c2f4:	9b03      	ldr	r3, [sp, #12]
 801c2f6:	b160      	cbz	r0, 801c312 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c2f8:	2300      	movs	r3, #0
 801c2fa:	8023      	strh	r3, [r4, #0]
 801c2fc:	8063      	strh	r3, [r4, #2]
 801c2fe:	80a3      	strh	r3, [r4, #4]
 801c300:	4620      	mov	r0, r4
 801c302:	80e3      	strh	r3, [r4, #6]
 801c304:	b011      	add	sp, #68	@ 0x44
 801c306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c30a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c30e:	428e      	cmp	r6, r1
 801c310:	e7e9      	b.n	801c2e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c312:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801c316:	9205      	str	r2, [sp, #20]
 801c318:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c31c:	9206      	str	r2, [sp, #24]
 801c31e:	f8bb 2000 	ldrh.w	r2, [fp]
 801c322:	900e      	str	r0, [sp, #56]	@ 0x38
 801c324:	1a9b      	subs	r3, r3, r2
 801c326:	b21b      	sxth	r3, r3
 801c328:	9303      	str	r3, [sp, #12]
 801c32a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c32e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801c332:	ebaa 0a03 	sub.w	sl, sl, r3
 801c336:	fa0f f38a 	sxth.w	r3, sl
 801c33a:	9304      	str	r3, [sp, #16]
 801c33c:	9b03      	ldr	r3, [sp, #12]
 801c33e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801c342:	9b04      	ldr	r3, [sp, #16]
 801c344:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c348:	9b05      	ldr	r3, [sp, #20]
 801c34a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801c34e:	a90e      	add	r1, sp, #56	@ 0x38
 801c350:	9b06      	ldr	r3, [sp, #24]
 801c352:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801c356:	a80c      	add	r0, sp, #48	@ 0x30
 801c358:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801c35c:	f7f7 fcaa 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c360:	4640      	mov	r0, r8
 801c362:	f7f7 fc7f 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c366:	a80e      	add	r0, sp, #56	@ 0x38
 801c368:	f7f7 fc7c 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c36c:	4b38      	ldr	r3, [pc, #224]	@ (801c450 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c36e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801c372:	881b      	ldrh	r3, [r3, #0]
 801c374:	9307      	str	r3, [sp, #28]
 801c376:	682b      	ldr	r3, [r5, #0]
 801c378:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801c454 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c37c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c37e:	4628      	mov	r0, r5
 801c380:	4798      	blx	r3
 801c382:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801c386:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801c38a:	4681      	mov	r9, r0
 801c38c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c390:	f8db 0000 	ldr.w	r0, [fp]
 801c394:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801c396:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c39a:	6803      	ldr	r3, [r0, #0]
 801c39c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c39e:	4798      	blx	r3
 801c3a0:	4607      	mov	r7, r0
 801c3a2:	f8db 0000 	ldr.w	r0, [fp]
 801c3a6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801c3aa:	6803      	ldr	r3, [r0, #0]
 801c3ac:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c3b0:	9109      	str	r1, [sp, #36]	@ 0x24
 801c3b2:	9208      	str	r2, [sp, #32]
 801c3b4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c3b6:	4798      	blx	r3
 801c3b8:	f010 0f01 	tst.w	r0, #1
 801c3bc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c3c0:	d012      	beq.n	801c3e8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c3c2:	f8db 0000 	ldr.w	r0, [fp]
 801c3c6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801c3ca:	6803      	ldr	r3, [r0, #0]
 801c3cc:	9200      	str	r2, [sp, #0]
 801c3ce:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801c3d0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c3d4:	462b      	mov	r3, r5
 801c3d6:	47b0      	blx	r6
 801c3d8:	9b03      	ldr	r3, [sp, #12]
 801c3da:	8023      	strh	r3, [r4, #0]
 801c3dc:	9b04      	ldr	r3, [sp, #16]
 801c3de:	8063      	strh	r3, [r4, #2]
 801c3e0:	9b05      	ldr	r3, [sp, #20]
 801c3e2:	80a3      	strh	r3, [r4, #4]
 801c3e4:	9b06      	ldr	r3, [sp, #24]
 801c3e6:	e78b      	b.n	801c300 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c3e8:	fb09 f202 	mul.w	r2, r9, r2
 801c3ec:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c3f0:	440f      	add	r7, r1
 801c3f2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801c3f6:	b166      	cbz	r6, 801c412 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c3f8:	9a07      	ldr	r2, [sp, #28]
 801c3fa:	4592      	cmp	sl, r2
 801c3fc:	d109      	bne.n	801c412 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c3fe:	f8db 0000 	ldr.w	r0, [fp]
 801c402:	6802      	ldr	r2, [r0, #0]
 801c404:	fb09 f303 	mul.w	r3, r9, r3
 801c408:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801c40a:	4629      	mov	r1, r5
 801c40c:	463a      	mov	r2, r7
 801c40e:	47b0      	blx	r6
 801c410:	e7e2      	b.n	801c3d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c412:	fb0a f303 	mul.w	r3, sl, r3
 801c416:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801c454 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c41a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c41e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c422:	4545      	cmp	r5, r8
 801c424:	d2d8      	bcs.n	801c3d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c426:	f8db 0000 	ldr.w	r0, [fp]
 801c42a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801c42e:	6802      	ldr	r2, [r0, #0]
 801c430:	4629      	mov	r1, r5
 801c432:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801c436:	005b      	lsls	r3, r3, #1
 801c438:	463a      	mov	r2, r7
 801c43a:	47d0      	blx	sl
 801c43c:	444f      	add	r7, r9
 801c43e:	4435      	add	r5, r6
 801c440:	e7ef      	b.n	801c422 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c442:	bf00      	nop
 801c444:	20002f48 	.word	0x20002f48
 801c448:	20002f4a 	.word	0x20002f4a
 801c44c:	20002f4c 	.word	0x20002f4c
 801c450:	20002f4e 	.word	0x20002f4e
 801c454:	20002f54 	.word	0x20002f54

0801c458 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c458:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c45a:	4606      	mov	r6, r0
 801c45c:	b087      	sub	sp, #28
 801c45e:	460c      	mov	r4, r1
 801c460:	4617      	mov	r7, r2
 801c462:	461d      	mov	r5, r3
 801c464:	b333      	cbz	r3, 801c4b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c466:	4608      	mov	r0, r1
 801c468:	f7f4 fa7b 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c46c:	bb10      	cbnz	r0, 801c4b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c46e:	6820      	ldr	r0, [r4, #0]
 801c470:	6861      	ldr	r1, [r4, #4]
 801c472:	4c1c      	ldr	r4, [pc, #112]	@ (801c4e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c474:	ab04      	add	r3, sp, #16
 801c476:	c303      	stmia	r3!, {r0, r1}
 801c478:	a804      	add	r0, sp, #16
 801c47a:	f7f7 fbf3 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c47e:	6820      	ldr	r0, [r4, #0]
 801c480:	6803      	ldr	r3, [r0, #0]
 801c482:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c484:	4798      	blx	r3
 801c486:	2dff      	cmp	r5, #255	@ 0xff
 801c488:	d016      	beq.n	801c4b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c48a:	f010 0f08 	tst.w	r0, #8
 801c48e:	6820      	ldr	r0, [r4, #0]
 801c490:	d015      	beq.n	801c4be <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c492:	2400      	movs	r4, #0
 801c494:	6801      	ldr	r1, [r0, #0]
 801c496:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c49a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c49e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c4a2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c4a6:	9401      	str	r4, [sp, #4]
 801c4a8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c4ac:	9400      	str	r4, [sp, #0]
 801c4ae:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801c4b0:	4639      	mov	r1, r7
 801c4b2:	47a0      	blx	r4
 801c4b4:	b007      	add	sp, #28
 801c4b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c4b8:	f010 0f02 	tst.w	r0, #2
 801c4bc:	e7e7      	b.n	801c48e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c4be:	6803      	ldr	r3, [r0, #0]
 801c4c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c4c2:	4798      	blx	r3
 801c4c4:	4b08      	ldr	r3, [pc, #32]	@ (801c4e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c4c6:	881a      	ldrh	r2, [r3, #0]
 801c4c8:	6833      	ldr	r3, [r6, #0]
 801c4ca:	e9cd 7500 	strd	r7, r5, [sp]
 801c4ce:	4601      	mov	r1, r0
 801c4d0:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801c4d2:	4630      	mov	r0, r6
 801c4d4:	ab04      	add	r3, sp, #16
 801c4d6:	47a8      	blx	r5
 801c4d8:	6820      	ldr	r0, [r4, #0]
 801c4da:	6803      	ldr	r3, [r0, #0]
 801c4dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c4de:	4798      	blx	r3
 801c4e0:	e7e8      	b.n	801c4b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c4e2:	bf00      	nop
 801c4e4:	20002f54 	.word	0x20002f54
 801c4e8:	20002f4e 	.word	0x20002f4e

0801c4ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c4ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c4f0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801c4f4:	9e08      	ldr	r6, [sp, #32]
 801c4f6:	4688      	mov	r8, r1
 801c4f8:	4614      	mov	r4, r2
 801c4fa:	461d      	mov	r5, r3
 801c4fc:	2f00      	cmp	r7, #0
 801c4fe:	f000 80a9 	beq.w	801c654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c502:	4618      	mov	r0, r3
 801c504:	f7f4 fa2d 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c508:	2800      	cmp	r0, #0
 801c50a:	f040 80a3 	bne.w	801c654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c50e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c512:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c516:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c51a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c51e:	fb04 1303 	mla	r3, r4, r3, r1
 801c522:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c526:	4365      	muls	r5, r4
 801c528:	2fff      	cmp	r7, #255	@ 0xff
 801c52a:	eba4 0200 	sub.w	r2, r4, r0
 801c52e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c532:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c536:	d04a      	beq.n	801c5ce <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c538:	b2bc      	uxth	r4, r7
 801c53a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801c53e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c542:	fa5f f788 	uxtb.w	r7, r8
 801c546:	b2f3      	uxtb	r3, r6
 801c548:	0040      	lsls	r0, r0, #1
 801c54a:	fb0e fe04 	mul.w	lr, lr, r4
 801c54e:	4367      	muls	r7, r4
 801c550:	4363      	muls	r3, r4
 801c552:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c556:	fa1f fc8c 	uxth.w	ip, ip
 801c55a:	42a9      	cmp	r1, r5
 801c55c:	d27a      	bcs.n	801c654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c55e:	eb01 0900 	add.w	r9, r1, r0
 801c562:	4549      	cmp	r1, r9
 801c564:	d231      	bcs.n	801c5ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c566:	880a      	ldrh	r2, [r1, #0]
 801c568:	1214      	asrs	r4, r2, #8
 801c56a:	10d6      	asrs	r6, r2, #3
 801c56c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c570:	00d2      	lsls	r2, r2, #3
 801c572:	b2d2      	uxtb	r2, r2
 801c574:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c578:	fb14 f40c 	smulbb	r4, r4, ip
 801c57c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c580:	4474      	add	r4, lr
 801c582:	fb12 f20c 	smulbb	r2, r2, ip
 801c586:	b2a4      	uxth	r4, r4
 801c588:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c58c:	441a      	add	r2, r3
 801c58e:	b292      	uxth	r2, r2
 801c590:	f104 0a01 	add.w	sl, r4, #1
 801c594:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c598:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c59c:	fb16 f60c 	smulbb	r6, r6, ip
 801c5a0:	f102 0a01 	add.w	sl, r2, #1
 801c5a4:	443e      	add	r6, r7
 801c5a6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c5aa:	b2b6      	uxth	r6, r6
 801c5ac:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c5b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c5b4:	4322      	orrs	r2, r4
 801c5b6:	1c74      	adds	r4, r6, #1
 801c5b8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c5bc:	0976      	lsrs	r6, r6, #5
 801c5be:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c5c2:	4332      	orrs	r2, r6
 801c5c4:	f821 2b02 	strh.w	r2, [r1], #2
 801c5c8:	e7cb      	b.n	801c562 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c5ca:	4441      	add	r1, r8
 801c5cc:	e7c5      	b.n	801c55a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c5ce:	4f22      	ldr	r7, [pc, #136]	@ (801c658 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c5d0:	0973      	lsrs	r3, r6, #5
 801c5d2:	ea08 0707 	and.w	r7, r8, r7
 801c5d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c5da:	433b      	orrs	r3, r7
 801c5dc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c5e0:	4333      	orrs	r3, r6
 801c5e2:	07e7      	lsls	r7, r4, #31
 801c5e4:	b29b      	uxth	r3, r3
 801c5e6:	d50b      	bpl.n	801c600 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c5e8:	0040      	lsls	r0, r0, #1
 801c5ea:	0052      	lsls	r2, r2, #1
 801c5ec:	42a9      	cmp	r1, r5
 801c5ee:	d231      	bcs.n	801c654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c5f0:	180c      	adds	r4, r1, r0
 801c5f2:	42a1      	cmp	r1, r4
 801c5f4:	d202      	bcs.n	801c5fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c5f6:	f821 3b02 	strh.w	r3, [r1], #2
 801c5fa:	e7fa      	b.n	801c5f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c5fc:	4411      	add	r1, r2
 801c5fe:	e7f5      	b.n	801c5ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c600:	078e      	lsls	r6, r1, #30
 801c602:	d008      	beq.n	801c616 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c604:	0066      	lsls	r6, r4, #1
 801c606:	460a      	mov	r2, r1
 801c608:	42aa      	cmp	r2, r5
 801c60a:	d202      	bcs.n	801c612 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c60c:	8013      	strh	r3, [r2, #0]
 801c60e:	4432      	add	r2, r6
 801c610:	e7fa      	b.n	801c608 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c612:	3102      	adds	r1, #2
 801c614:	3801      	subs	r0, #1
 801c616:	07c2      	lsls	r2, r0, #31
 801c618:	d50b      	bpl.n	801c632 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c61a:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801c61e:	3a01      	subs	r2, #1
 801c620:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c624:	0066      	lsls	r6, r4, #1
 801c626:	42aa      	cmp	r2, r5
 801c628:	d202      	bcs.n	801c630 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c62a:	8013      	strh	r3, [r2, #0]
 801c62c:	4432      	add	r2, r6
 801c62e:	e7fa      	b.n	801c626 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c630:	3801      	subs	r0, #1
 801c632:	b178      	cbz	r0, 801c654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c634:	1040      	asrs	r0, r0, #1
 801c636:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c63a:	0080      	lsls	r0, r0, #2
 801c63c:	0064      	lsls	r4, r4, #1
 801c63e:	42a9      	cmp	r1, r5
 801c640:	d208      	bcs.n	801c654 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c642:	180e      	adds	r6, r1, r0
 801c644:	460a      	mov	r2, r1
 801c646:	42b2      	cmp	r2, r6
 801c648:	d202      	bcs.n	801c650 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c64a:	f842 3b04 	str.w	r3, [r2], #4
 801c64e:	e7fa      	b.n	801c646 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c650:	4421      	add	r1, r4
 801c652:	e7f4      	b.n	801c63e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c658:	00fff800 	.word	0x00fff800

0801c65c <_ZN8touchgfx8LCD16bppC1Ev>:
 801c65c:	2200      	movs	r2, #0
 801c65e:	4912      	ldr	r1, [pc, #72]	@ (801c6a8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c660:	6001      	str	r1, [r0, #0]
 801c662:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801c666:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801c66a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801c66e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801c672:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801c676:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801c67a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801c67e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801c682:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801c686:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801c68a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801c68e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801c692:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801c696:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801c69a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801c69e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801c6a2:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801c6a6:	4770      	bx	lr
 801c6a8:	0802980c 	.word	0x0802980c

0801c6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c6ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c6b0:	460d      	mov	r5, r1
 801c6b2:	b08d      	sub	sp, #52	@ 0x34
 801c6b4:	4604      	mov	r4, r0
 801c6b6:	6808      	ldr	r0, [r1, #0]
 801c6b8:	6849      	ldr	r1, [r1, #4]
 801c6ba:	4699      	mov	r9, r3
 801c6bc:	ab08      	add	r3, sp, #32
 801c6be:	c303      	stmia	r3!, {r0, r1}
 801c6c0:	6810      	ldr	r0, [r2, #0]
 801c6c2:	6851      	ldr	r1, [r2, #4]
 801c6c4:	ab0a      	add	r3, sp, #40	@ 0x28
 801c6c6:	c303      	stmia	r3!, {r0, r1}
 801c6c8:	a808      	add	r0, sp, #32
 801c6ca:	f7f7 facb 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c6ce:	4629      	mov	r1, r5
 801c6d0:	a80a      	add	r0, sp, #40	@ 0x28
 801c6d2:	f7f7 faef 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c6d6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801c6da:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801c6de:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801c6e2:	4d63      	ldr	r5, [pc, #396]	@ (801c870 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c6e4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801c6e8:	6828      	ldr	r0, [r5, #0]
 801c6ea:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c6ee:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c6f2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c6f6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c6fa:	440a      	add	r2, r1
 801c6fc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c700:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801c704:	4413      	add	r3, r2
 801c706:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c70a:	6803      	ldr	r3, [r0, #0]
 801c70c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c70e:	4798      	blx	r3
 801c710:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c714:	d119      	bne.n	801c74a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c716:	f010 0f20 	tst.w	r0, #32
 801c71a:	6828      	ldr	r0, [r5, #0]
 801c71c:	d018      	beq.n	801c750 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c71e:	2500      	movs	r5, #0
 801c720:	6801      	ldr	r1, [r0, #0]
 801c722:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801c726:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801c72a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c72e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801c732:	9502      	str	r5, [sp, #8]
 801c734:	b2b6      	uxth	r6, r6
 801c736:	fa1f f588 	uxth.w	r5, r8
 801c73a:	9601      	str	r6, [sp, #4]
 801c73c:	9500      	str	r5, [sp, #0]
 801c73e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801c740:	4621      	mov	r1, r4
 801c742:	47a8      	blx	r5
 801c744:	b00d      	add	sp, #52	@ 0x34
 801c746:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c74a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801c74e:	e7e4      	b.n	801c71a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c750:	6803      	ldr	r3, [r0, #0]
 801c752:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c754:	4798      	blx	r3
 801c756:	4947      	ldr	r1, [pc, #284]	@ (801c874 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c758:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c75c:	880b      	ldrh	r3, [r1, #0]
 801c75e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801c762:	fb03 5202 	mla	r2, r3, r2, r5
 801c766:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c76a:	4373      	muls	r3, r6
 801c76c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c770:	9307      	str	r3, [sp, #28]
 801c772:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c776:	9306      	str	r3, [sp, #24]
 801c778:	468a      	mov	sl, r1
 801c77a:	9b07      	ldr	r3, [sp, #28]
 801c77c:	4298      	cmp	r0, r3
 801c77e:	d270      	bcs.n	801c862 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c780:	9b06      	ldr	r3, [sp, #24]
 801c782:	4621      	mov	r1, r4
 801c784:	eb00 0b03 	add.w	fp, r0, r3
 801c788:	4558      	cmp	r0, fp
 801c78a:	d25d      	bcs.n	801c848 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c78c:	f851 4b04 	ldr.w	r4, [r1], #4
 801c790:	0e23      	lsrs	r3, r4, #24
 801c792:	d014      	beq.n	801c7be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c794:	2bff      	cmp	r3, #255	@ 0xff
 801c796:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c79a:	d112      	bne.n	801c7c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c79c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c7a0:	d10f      	bne.n	801c7c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c7a2:	0963      	lsrs	r3, r4, #5
 801c7a4:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801c7a8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c7ac:	f02c 0c07 	bic.w	ip, ip, #7
 801c7b0:	ea43 0c0c 	orr.w	ip, r3, ip
 801c7b4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c7b8:	ea4c 0404 	orr.w	r4, ip, r4
 801c7bc:	8004      	strh	r4, [r0, #0]
 801c7be:	3002      	adds	r0, #2
 801c7c0:	e7e2      	b.n	801c788 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c7c2:	fb09 f303 	mul.w	r3, r9, r3
 801c7c6:	8807      	ldrh	r7, [r0, #0]
 801c7c8:	1c5a      	adds	r2, r3, #1
 801c7ca:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c7ce:	1212      	asrs	r2, r2, #8
 801c7d0:	123e      	asrs	r6, r7, #8
 801c7d2:	b293      	uxth	r3, r2
 801c7d4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c7d8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c7dc:	43d2      	mvns	r2, r2
 801c7de:	b2d2      	uxtb	r2, r2
 801c7e0:	10fd      	asrs	r5, r7, #3
 801c7e2:	fb1e fe03 	smulbb	lr, lr, r3
 801c7e6:	00ff      	lsls	r7, r7, #3
 801c7e8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c7ec:	fb06 e602 	mla	r6, r6, r2, lr
 801c7f0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c7f4:	b2ff      	uxtb	r7, r7
 801c7f6:	fa5f fc8c 	uxtb.w	ip, ip
 801c7fa:	b2e4      	uxtb	r4, r4
 801c7fc:	b2b6      	uxth	r6, r6
 801c7fe:	fb1c fc03 	smulbb	ip, ip, r3
 801c802:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c806:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c80a:	fb14 f403 	smulbb	r4, r4, r3
 801c80e:	fb05 c502 	mla	r5, r5, r2, ip
 801c812:	f106 0e01 	add.w	lr, r6, #1
 801c816:	fb07 4702 	mla	r7, r7, r2, r4
 801c81a:	b2ad      	uxth	r5, r5
 801c81c:	b2bf      	uxth	r7, r7
 801c81e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c822:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801c826:	f105 0c01 	add.w	ip, r5, #1
 801c82a:	1c7e      	adds	r6, r7, #1
 801c82c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c830:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c834:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c838:	096d      	lsrs	r5, r5, #5
 801c83a:	ea46 060e 	orr.w	r6, r6, lr
 801c83e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c842:	432e      	orrs	r6, r5
 801c844:	8006      	strh	r6, [r0, #0]
 801c846:	e7ba      	b.n	801c7be <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c848:	f8ba 3000 	ldrh.w	r3, [sl]
 801c84c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801c850:	eba3 0308 	sub.w	r3, r3, r8
 801c854:	eba4 0408 	sub.w	r4, r4, r8
 801c858:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c85c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801c860:	e78b      	b.n	801c77a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801c862:	4b03      	ldr	r3, [pc, #12]	@ (801c870 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c864:	6818      	ldr	r0, [r3, #0]
 801c866:	6803      	ldr	r3, [r0, #0]
 801c868:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c86a:	4798      	blx	r3
 801c86c:	e76a      	b.n	801c744 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801c86e:	bf00      	nop
 801c870:	20002f54 	.word	0x20002f54
 801c874:	20002f4e 	.word	0x20002f4e

0801c878 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801c878:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c87c:	460c      	mov	r4, r1
 801c87e:	b085      	sub	sp, #20
 801c880:	6810      	ldr	r0, [r2, #0]
 801c882:	6851      	ldr	r1, [r2, #4]
 801c884:	466d      	mov	r5, sp
 801c886:	c503      	stmia	r5!, {r0, r1}
 801c888:	6818      	ldr	r0, [r3, #0]
 801c88a:	6859      	ldr	r1, [r3, #4]
 801c88c:	4616      	mov	r6, r2
 801c88e:	c503      	stmia	r5!, {r0, r1}
 801c890:	4668      	mov	r0, sp
 801c892:	f7f7 f9e7 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c896:	4631      	mov	r1, r6
 801c898:	a802      	add	r0, sp, #8
 801c89a:	f7f7 fa0b 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c89e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c8a2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c8a6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c8aa:	4d28      	ldr	r5, [pc, #160]	@ (801c94c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801c8ac:	4e28      	ldr	r6, [pc, #160]	@ (801c950 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801c8ae:	6828      	ldr	r0, [r5, #0]
 801c8b0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801c8b4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c8b8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c8bc:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c8c0:	f8bd 1000 	ldrh.w	r1, [sp]
 801c8c4:	440a      	add	r2, r1
 801c8c6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c8ca:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c8ce:	4413      	add	r3, r2
 801c8d0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c8d4:	6803      	ldr	r3, [r0, #0]
 801c8d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c8d8:	4798      	blx	r3
 801c8da:	8833      	ldrh	r3, [r6, #0]
 801c8dc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801c8e0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c8e4:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801c954 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801c8e8:	fb03 1202 	mla	r2, r3, r2, r1
 801c8ec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c8f0:	fb08 f303 	mul.w	r3, r8, r3
 801c8f4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c8f8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801c8fc:	4298      	cmp	r0, r3
 801c8fe:	d21d      	bcs.n	801c93c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801c900:	eb00 080c 	add.w	r8, r0, ip
 801c904:	4540      	cmp	r0, r8
 801c906:	d20f      	bcs.n	801c928 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801c908:	f854 1b04 	ldr.w	r1, [r4], #4
 801c90c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801c910:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801c914:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c918:	ea42 0209 	orr.w	r2, r2, r9
 801c91c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c920:	430a      	orrs	r2, r1
 801c922:	f820 2b02 	strh.w	r2, [r0], #2
 801c926:	e7ed      	b.n	801c904 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801c928:	8832      	ldrh	r2, [r6, #0]
 801c92a:	1bd2      	subs	r2, r2, r7
 801c92c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c930:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801c934:	1bd2      	subs	r2, r2, r7
 801c936:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801c93a:	e7df      	b.n	801c8fc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801c93c:	6828      	ldr	r0, [r5, #0]
 801c93e:	6803      	ldr	r3, [r0, #0]
 801c940:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c942:	4798      	blx	r3
 801c944:	b005      	add	sp, #20
 801c946:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c94a:	bf00      	nop
 801c94c:	20002f54 	.word	0x20002f54
 801c950:	20002f4e 	.word	0x20002f4e
 801c954:	fffff800 	.word	0xfffff800

0801c958 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801c958:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c95c:	460e      	mov	r6, r1
 801c95e:	b08e      	sub	sp, #56	@ 0x38
 801c960:	4604      	mov	r4, r0
 801c962:	6808      	ldr	r0, [r1, #0]
 801c964:	6849      	ldr	r1, [r1, #4]
 801c966:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801cb40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801c96a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801cb44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801c96e:	461d      	mov	r5, r3
 801c970:	ab0a      	add	r3, sp, #40	@ 0x28
 801c972:	c303      	stmia	r3!, {r0, r1}
 801c974:	6810      	ldr	r0, [r2, #0]
 801c976:	6851      	ldr	r1, [r2, #4]
 801c978:	ab0c      	add	r3, sp, #48	@ 0x30
 801c97a:	c303      	stmia	r3!, {r0, r1}
 801c97c:	a80a      	add	r0, sp, #40	@ 0x28
 801c97e:	f7f7 f971 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c982:	4631      	mov	r1, r6
 801c984:	a80c      	add	r0, sp, #48	@ 0x30
 801c986:	f7f7 f995 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c98a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801c98e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801c992:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801c996:	f8d8 0000 	ldr.w	r0, [r8]
 801c99a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801c99e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801c9a2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c9a6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c9aa:	440c      	add	r4, r1
 801c9ac:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801c9b0:	440a      	add	r2, r1
 801c9b2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801c9b6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801c9ba:	4413      	add	r3, r2
 801c9bc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c9c0:	6803      	ldr	r3, [r0, #0]
 801c9c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c9c4:	4798      	blx	r3
 801c9c6:	2dff      	cmp	r5, #255	@ 0xff
 801c9c8:	d124      	bne.n	801ca14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801c9ca:	f010 0f01 	tst.w	r0, #1
 801c9ce:	f8d8 0000 	ldr.w	r0, [r8]
 801c9d2:	d022      	beq.n	801ca1a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801c9d4:	2100      	movs	r1, #0
 801c9d6:	f8d0 c000 	ldr.w	ip, [r0]
 801c9da:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801c9de:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801c9e2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801c9e6:	f04f 0e01 	mov.w	lr, #1
 801c9ea:	f8cd e018 	str.w	lr, [sp, #24]
 801c9ee:	f8b9 e000 	ldrh.w	lr, [r9]
 801c9f2:	9503      	str	r5, [sp, #12]
 801c9f4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801c9f8:	b2b6      	uxth	r6, r6
 801c9fa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801c9fe:	9102      	str	r1, [sp, #8]
 801ca00:	b2bf      	uxth	r7, r7
 801ca02:	9601      	str	r6, [sp, #4]
 801ca04:	9700      	str	r7, [sp, #0]
 801ca06:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801ca0a:	4621      	mov	r1, r4
 801ca0c:	47a8      	blx	r5
 801ca0e:	b00e      	add	sp, #56	@ 0x38
 801ca10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ca14:	f010 0f04 	tst.w	r0, #4
 801ca18:	e7d9      	b.n	801c9ce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ca1a:	6803      	ldr	r3, [r0, #0]
 801ca1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ca1e:	4798      	blx	r3
 801ca20:	f8b9 3000 	ldrh.w	r3, [r9]
 801ca24:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801ca28:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801ca2c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801ca30:	fb03 1202 	mla	r2, r3, r2, r1
 801ca34:	ebac 0c07 	sub.w	ip, ip, r7
 801ca38:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca3c:	435e      	muls	r6, r3
 801ca3e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801ca42:	2dff      	cmp	r5, #255	@ 0xff
 801ca44:	eba3 0707 	sub.w	r7, r3, r7
 801ca48:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ca4c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ca50:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801ca54:	d049      	beq.n	801caea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801ca56:	43eb      	mvns	r3, r5
 801ca58:	fa1f f985 	uxth.w	r9, r5
 801ca5c:	b2db      	uxtb	r3, r3
 801ca5e:	42b0      	cmp	r0, r6
 801ca60:	d266      	bcs.n	801cb30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ca62:	eb00 0a0e 	add.w	sl, r0, lr
 801ca66:	4550      	cmp	r0, sl
 801ca68:	4621      	mov	r1, r4
 801ca6a:	f104 0403 	add.w	r4, r4, #3
 801ca6e:	d25b      	bcs.n	801cb28 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801ca70:	8802      	ldrh	r2, [r0, #0]
 801ca72:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ca76:	ea4f 2822 	mov.w	r8, r2, asr #8
 801ca7a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801ca7e:	fb11 f109 	smulbb	r1, r1, r9
 801ca82:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ca86:	10d5      	asrs	r5, r2, #3
 801ca88:	fb08 1803 	mla	r8, r8, r3, r1
 801ca8c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ca90:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ca94:	fb11 f109 	smulbb	r1, r1, r9
 801ca98:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ca9c:	fb05 1503 	mla	r5, r5, r3, r1
 801caa0:	00d2      	lsls	r2, r2, #3
 801caa2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801caa6:	b2d2      	uxtb	r2, r2
 801caa8:	fb11 f109 	smulbb	r1, r1, r9
 801caac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cab0:	fa1f f888 	uxth.w	r8, r8
 801cab4:	fb02 1203 	mla	r2, r2, r3, r1
 801cab8:	b292      	uxth	r2, r2
 801caba:	f108 0101 	add.w	r1, r8, #1
 801cabe:	b2ad      	uxth	r5, r5
 801cac0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cac4:	1c51      	adds	r1, r2, #1
 801cac6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801caca:	1c69      	adds	r1, r5, #1
 801cacc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cad0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801cad4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cad8:	096d      	lsrs	r5, r5, #5
 801cada:	ea42 0208 	orr.w	r2, r2, r8
 801cade:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cae2:	432a      	orrs	r2, r5
 801cae4:	f820 2b02 	strh.w	r2, [r0], #2
 801cae8:	e7bd      	b.n	801ca66 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801caea:	4a14      	ldr	r2, [pc, #80]	@ (801cb3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801caec:	42b0      	cmp	r0, r6
 801caee:	d21f      	bcs.n	801cb30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801caf0:	eb00 050e 	add.w	r5, r0, lr
 801caf4:	42a8      	cmp	r0, r5
 801caf6:	4621      	mov	r1, r4
 801caf8:	f104 0403 	add.w	r4, r4, #3
 801cafc:	d210      	bcs.n	801cb20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801cafe:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cb02:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cb06:	00db      	lsls	r3, r3, #3
 801cb08:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cb0c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cb10:	430b      	orrs	r3, r1
 801cb12:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cb16:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801cb1a:	f820 3b02 	strh.w	r3, [r0], #2
 801cb1e:	e7e9      	b.n	801caf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cb20:	4438      	add	r0, r7
 801cb22:	eb01 040c 	add.w	r4, r1, ip
 801cb26:	e7e1      	b.n	801caec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cb28:	4438      	add	r0, r7
 801cb2a:	eb01 040c 	add.w	r4, r1, ip
 801cb2e:	e796      	b.n	801ca5e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cb30:	4b03      	ldr	r3, [pc, #12]	@ (801cb40 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801cb32:	6818      	ldr	r0, [r3, #0]
 801cb34:	6803      	ldr	r3, [r0, #0]
 801cb36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cb38:	4798      	blx	r3
 801cb3a:	e768      	b.n	801ca0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801cb3c:	fffff800 	.word	0xfffff800
 801cb40:	20002f54 	.word	0x20002f54
 801cb44:	20002f4e 	.word	0x20002f4e

0801cb48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801cb48:	b4f0      	push	{r4, r5, r6, r7}
 801cb4a:	4616      	mov	r6, r2
 801cb4c:	2e01      	cmp	r6, #1
 801cb4e:	461c      	mov	r4, r3
 801cb50:	460d      	mov	r5, r1
 801cb52:	9a04      	ldr	r2, [sp, #16]
 801cb54:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801cb58:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801cb5c:	d012      	beq.n	801cb84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801cb5e:	d303      	bcc.n	801cb68 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801cb60:	2e02      	cmp	r6, #2
 801cb62:	d00a      	beq.n	801cb7a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801cb64:	bcf0      	pop	{r4, r5, r6, r7}
 801cb66:	4770      	bx	lr
 801cb68:	6805      	ldr	r5, [r0, #0]
 801cb6a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801cb6e:	68ed      	ldr	r5, [r5, #12]
 801cb70:	4613      	mov	r3, r2
 801cb72:	46ac      	mov	ip, r5
 801cb74:	4622      	mov	r2, r4
 801cb76:	bcf0      	pop	{r4, r5, r6, r7}
 801cb78:	4760      	bx	ip
 801cb7a:	4621      	mov	r1, r4
 801cb7c:	4628      	mov	r0, r5
 801cb7e:	bcf0      	pop	{r4, r5, r6, r7}
 801cb80:	f7ff bd94 	b.w	801c6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801cb84:	4621      	mov	r1, r4
 801cb86:	4628      	mov	r0, r5
 801cb88:	bcf0      	pop	{r4, r5, r6, r7}
 801cb8a:	f7ff bee5 	b.w	801c958 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801cb90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801cb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb94:	4681      	mov	r9, r0
 801cb96:	b093      	sub	sp, #76	@ 0x4c
 801cb98:	6810      	ldr	r0, [r2, #0]
 801cb9a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801cb9e:	4f6d      	ldr	r7, [pc, #436]	@ (801cd54 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801cba0:	4688      	mov	r8, r1
 801cba2:	6851      	ldr	r1, [r2, #4]
 801cba4:	ac0e      	add	r4, sp, #56	@ 0x38
 801cba6:	c403      	stmia	r4!, {r0, r1}
 801cba8:	6818      	ldr	r0, [r3, #0]
 801cbaa:	6859      	ldr	r1, [r3, #4]
 801cbac:	ac10      	add	r4, sp, #64	@ 0x40
 801cbae:	4616      	mov	r6, r2
 801cbb0:	c403      	stmia	r4!, {r0, r1}
 801cbb2:	a80e      	add	r0, sp, #56	@ 0x38
 801cbb4:	f7f7 f856 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cbb8:	4631      	mov	r1, r6
 801cbba:	a810      	add	r0, sp, #64	@ 0x40
 801cbbc:	f7f7 f87a 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cbc0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801cbc4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801cbc8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801cbcc:	4e62      	ldr	r6, [pc, #392]	@ (801cd58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cbce:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801cbd2:	6830      	ldr	r0, [r6, #0]
 801cbd4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801cbd8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cbdc:	4489      	add	r9, r1
 801cbde:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801cbe2:	440a      	add	r2, r1
 801cbe4:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801cbe8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801cbec:	4413      	add	r3, r2
 801cbee:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801cbf2:	6803      	ldr	r3, [r0, #0]
 801cbf4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801cbf6:	4798      	blx	r3
 801cbf8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801cbfc:	6830      	ldr	r0, [r6, #0]
 801cbfe:	d01d      	beq.n	801cc3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801cc00:	2200      	movs	r2, #0
 801cc02:	6801      	ldr	r1, [r0, #0]
 801cc04:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801cc08:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cc0c:	220b      	movs	r2, #11
 801cc0e:	9207      	str	r2, [sp, #28]
 801cc10:	883a      	ldrh	r2, [r7, #0]
 801cc12:	9206      	str	r2, [sp, #24]
 801cc14:	2201      	movs	r2, #1
 801cc16:	e9cd a204 	strd	sl, r2, [sp, #16]
 801cc1a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801cc1e:	9203      	str	r2, [sp, #12]
 801cc20:	b2a4      	uxth	r4, r4
 801cc22:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801cc26:	9200      	str	r2, [sp, #0]
 801cc28:	b2ad      	uxth	r5, r5
 801cc2a:	9502      	str	r5, [sp, #8]
 801cc2c:	9401      	str	r4, [sp, #4]
 801cc2e:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801cc30:	4642      	mov	r2, r8
 801cc32:	4649      	mov	r1, r9
 801cc34:	47a0      	blx	r4
 801cc36:	b013      	add	sp, #76	@ 0x4c
 801cc38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc3c:	6803      	ldr	r3, [r0, #0]
 801cc3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cc40:	4798      	blx	r3
 801cc42:	883b      	ldrh	r3, [r7, #0]
 801cc44:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801cc48:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801cc4c:	fb03 1202 	mla	r2, r3, r2, r1
 801cc50:	435d      	muls	r5, r3
 801cc52:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc56:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801cc5a:	920c      	str	r2, [sp, #48]	@ 0x30
 801cc5c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801cc60:	1b12      	subs	r2, r2, r4
 801cc62:	920d      	str	r2, [sp, #52]	@ 0x34
 801cc64:	0062      	lsls	r2, r4, #1
 801cc66:	1b1c      	subs	r4, r3, r4
 801cc68:	0063      	lsls	r3, r4, #1
 801cc6a:	920a      	str	r2, [sp, #40]	@ 0x28
 801cc6c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cc6e:	f04f 0e04 	mov.w	lr, #4
 801cc72:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cc74:	4298      	cmp	r0, r3
 801cc76:	d266      	bcs.n	801cd46 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cc78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cc7a:	eb00 0b03 	add.w	fp, r0, r3
 801cc7e:	4558      	cmp	r0, fp
 801cc80:	d25c      	bcs.n	801cd3c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cc82:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cc86:	fb1e e303 	smlabb	r3, lr, r3, lr
 801cc8a:	f858 2003 	ldr.w	r2, [r8, r3]
 801cc8e:	0e11      	lsrs	r1, r2, #24
 801cc90:	d012      	beq.n	801ccb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cc92:	29ff      	cmp	r1, #255	@ 0xff
 801cc94:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801cc98:	d110      	bne.n	801ccbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cc9a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801cc9e:	d10d      	bne.n	801ccbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cca0:	0953      	lsrs	r3, r2, #5
 801cca2:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801cca6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ccaa:	f027 0707 	bic.w	r7, r7, #7
 801ccae:	431f      	orrs	r7, r3
 801ccb0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ccb4:	433a      	orrs	r2, r7
 801ccb6:	8002      	strh	r2, [r0, #0]
 801ccb8:	3002      	adds	r0, #2
 801ccba:	e7e0      	b.n	801cc7e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ccbc:	fb0a f101 	mul.w	r1, sl, r1
 801ccc0:	8806      	ldrh	r6, [r0, #0]
 801ccc2:	1c4b      	adds	r3, r1, #1
 801ccc4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801ccc8:	1235      	asrs	r5, r6, #8
 801ccca:	10f4      	asrs	r4, r6, #3
 801cccc:	121b      	asrs	r3, r3, #8
 801ccce:	00f6      	lsls	r6, r6, #3
 801ccd0:	b299      	uxth	r1, r3
 801ccd2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ccd6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ccda:	b2f6      	uxtb	r6, r6
 801ccdc:	43db      	mvns	r3, r3
 801ccde:	b2d2      	uxtb	r2, r2
 801cce0:	b2db      	uxtb	r3, r3
 801cce2:	fb1c fc01 	smulbb	ip, ip, r1
 801cce6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ccea:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ccee:	fb12 f201 	smulbb	r2, r2, r1
 801ccf2:	fb05 c503 	mla	r5, r5, r3, ip
 801ccf6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801ccfa:	b2ff      	uxtb	r7, r7
 801ccfc:	fb06 2203 	mla	r2, r6, r3, r2
 801cd00:	b2ad      	uxth	r5, r5
 801cd02:	fb17 f701 	smulbb	r7, r7, r1
 801cd06:	b292      	uxth	r2, r2
 801cd08:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cd0c:	fb04 7403 	mla	r4, r4, r3, r7
 801cd10:	f105 0c01 	add.w	ip, r5, #1
 801cd14:	1c57      	adds	r7, r2, #1
 801cd16:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cd1a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cd1e:	b2a4      	uxth	r4, r4
 801cd20:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cd24:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cd28:	433d      	orrs	r5, r7
 801cd2a:	1c67      	adds	r7, r4, #1
 801cd2c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cd30:	0964      	lsrs	r4, r4, #5
 801cd32:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801cd36:	4325      	orrs	r5, r4
 801cd38:	8005      	strh	r5, [r0, #0]
 801cd3a:	e7bd      	b.n	801ccb8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cd3c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801cd3e:	4418      	add	r0, r3
 801cd40:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cd42:	4499      	add	r9, r3
 801cd44:	e795      	b.n	801cc72 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cd46:	4b04      	ldr	r3, [pc, #16]	@ (801cd58 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cd48:	6818      	ldr	r0, [r3, #0]
 801cd4a:	6803      	ldr	r3, [r0, #0]
 801cd4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cd4e:	4798      	blx	r3
 801cd50:	e771      	b.n	801cc36 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801cd52:	bf00      	nop
 801cd54:	20002f4e 	.word	0x20002f4e
 801cd58:	20002f54 	.word	0x20002f54

0801cd5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cd5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd60:	b087      	sub	sp, #28
 801cd62:	4680      	mov	r8, r0
 801cd64:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801cd68:	460d      	mov	r5, r1
 801cd6a:	4614      	mov	r4, r2
 801cd6c:	2e00      	cmp	r6, #0
 801cd6e:	f000 80b9 	beq.w	801cee4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801cd72:	6810      	ldr	r0, [r2, #0]
 801cd74:	6851      	ldr	r1, [r2, #4]
 801cd76:	af02      	add	r7, sp, #8
 801cd78:	c703      	stmia	r7!, {r0, r1}
 801cd7a:	6818      	ldr	r0, [r3, #0]
 801cd7c:	6859      	ldr	r1, [r3, #4]
 801cd7e:	af04      	add	r7, sp, #16
 801cd80:	c703      	stmia	r7!, {r0, r1}
 801cd82:	a802      	add	r0, sp, #8
 801cd84:	f7f6 ff6e 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cd88:	4621      	mov	r1, r4
 801cd8a:	a804      	add	r0, sp, #16
 801cd8c:	f7f6 ff92 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cd90:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cd94:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cd98:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cd9c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801cda0:	fb14 2103 	smlabb	r1, r4, r3, r2
 801cda4:	eb08 0401 	add.w	r4, r8, r1
 801cda8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cdac:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cdb0:	440a      	add	r2, r1
 801cdb2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cdb6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cdba:	4413      	add	r3, r2
 801cdbc:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cdc0:	4b4a      	ldr	r3, [pc, #296]	@ (801ceec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cdc2:	6818      	ldr	r0, [r3, #0]
 801cdc4:	6803      	ldr	r3, [r0, #0]
 801cdc6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cdc8:	4798      	blx	r3
 801cdca:	4b49      	ldr	r3, [pc, #292]	@ (801cef0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801cdcc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801cdd0:	881a      	ldrh	r2, [r3, #0]
 801cdd2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801cdd6:	2eff      	cmp	r6, #255	@ 0xff
 801cdd8:	fb02 c101 	mla	r1, r2, r1, ip
 801cddc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cde0:	fb02 f207 	mul.w	r2, r2, r7
 801cde4:	f105 0104 	add.w	r1, r5, #4
 801cde8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801cdec:	461d      	mov	r5, r3
 801cdee:	d05a      	beq.n	801cea6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801cdf0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801cdf4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cdf8:	b2b6      	uxth	r6, r6
 801cdfa:	fa1f fe8e 	uxth.w	lr, lr
 801cdfe:	9301      	str	r3, [sp, #4]
 801ce00:	4282      	cmp	r2, r0
 801ce02:	d96a      	bls.n	801ceda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ce04:	eb00 0b0a 	add.w	fp, r0, sl
 801ce08:	4583      	cmp	fp, r0
 801ce0a:	d940      	bls.n	801ce8e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801ce0c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ce10:	8805      	ldrh	r5, [r0, #0]
 801ce12:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801ce16:	122f      	asrs	r7, r5, #8
 801ce18:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ce1c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ce20:	fb17 f70e 	smulbb	r7, r7, lr
 801ce24:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801ce28:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ce2c:	00ed      	lsls	r5, r5, #3
 801ce2e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801ce32:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ce36:	10df      	asrs	r7, r3, #3
 801ce38:	b2ed      	uxtb	r5, r5
 801ce3a:	00db      	lsls	r3, r3, #3
 801ce3c:	fa1f fc8c 	uxth.w	ip, ip
 801ce40:	fb19 f90e 	smulbb	r9, r9, lr
 801ce44:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ce48:	b2db      	uxtb	r3, r3
 801ce4a:	fb15 f50e 	smulbb	r5, r5, lr
 801ce4e:	fb07 9706 	mla	r7, r7, r6, r9
 801ce52:	fb03 5306 	mla	r3, r3, r6, r5
 801ce56:	f10c 0901 	add.w	r9, ip, #1
 801ce5a:	b29b      	uxth	r3, r3
 801ce5c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801ce60:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801ce64:	f103 0c01 	add.w	ip, r3, #1
 801ce68:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ce6c:	b2bf      	uxth	r7, r7
 801ce6e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ce72:	ea4c 0c09 	orr.w	ip, ip, r9
 801ce76:	f107 0901 	add.w	r9, r7, #1
 801ce7a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801ce7e:	097f      	lsrs	r7, r7, #5
 801ce80:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ce84:	ea4c 0c07 	orr.w	ip, ip, r7
 801ce88:	f820 cb02 	strh.w	ip, [r0], #2
 801ce8c:	e7bc      	b.n	801ce08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801ce8e:	9b01      	ldr	r3, [sp, #4]
 801ce90:	881b      	ldrh	r3, [r3, #0]
 801ce92:	eba3 0308 	sub.w	r3, r3, r8
 801ce96:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce9a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ce9e:	eba3 0308 	sub.w	r3, r3, r8
 801cea2:	441c      	add	r4, r3
 801cea4:	e7ac      	b.n	801ce00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801cea6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801ceaa:	4282      	cmp	r2, r0
 801ceac:	d915      	bls.n	801ceda <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801ceae:	eb00 060a 	add.w	r6, r0, sl
 801ceb2:	4286      	cmp	r6, r0
 801ceb4:	d906      	bls.n	801cec4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801ceb6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801ceba:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cebe:	f820 3b02 	strh.w	r3, [r0], #2
 801cec2:	e7f6      	b.n	801ceb2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801cec4:	882b      	ldrh	r3, [r5, #0]
 801cec6:	eba3 0308 	sub.w	r3, r3, r8
 801ceca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cece:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801ced2:	eba3 0308 	sub.w	r3, r3, r8
 801ced6:	441c      	add	r4, r3
 801ced8:	e7e7      	b.n	801ceaa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801ceda:	4b04      	ldr	r3, [pc, #16]	@ (801ceec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cedc:	6818      	ldr	r0, [r3, #0]
 801cede:	6803      	ldr	r3, [r0, #0]
 801cee0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cee2:	4798      	blx	r3
 801cee4:	b007      	add	sp, #28
 801cee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ceea:	bf00      	nop
 801ceec:	20002f54 	.word	0x20002f54
 801cef0:	20002f4e 	.word	0x20002f4e

0801cef4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801cef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cef8:	b091      	sub	sp, #68	@ 0x44
 801cefa:	4680      	mov	r8, r0
 801cefc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801cf00:	460f      	mov	r7, r1
 801cf02:	4614      	mov	r4, r2
 801cf04:	2d00      	cmp	r5, #0
 801cf06:	d051      	beq.n	801cfac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801cf08:	6810      	ldr	r0, [r2, #0]
 801cf0a:	6851      	ldr	r1, [r2, #4]
 801cf0c:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801d110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801cf10:	ae0c      	add	r6, sp, #48	@ 0x30
 801cf12:	c603      	stmia	r6!, {r0, r1}
 801cf14:	6818      	ldr	r0, [r3, #0]
 801cf16:	6859      	ldr	r1, [r3, #4]
 801cf18:	ae0e      	add	r6, sp, #56	@ 0x38
 801cf1a:	c603      	stmia	r6!, {r0, r1}
 801cf1c:	a80c      	add	r0, sp, #48	@ 0x30
 801cf1e:	f7f6 fea1 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf22:	4621      	mov	r1, r4
 801cf24:	a80e      	add	r0, sp, #56	@ 0x38
 801cf26:	f7f6 fec5 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf2a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801cf2e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801cf32:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801cf36:	f8d9 0000 	ldr.w	r0, [r9]
 801cf3a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801cf3e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801cf42:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf46:	eb08 0401 	add.w	r4, r8, r1
 801cf4a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801cf4e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801d114 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801cf52:	440a      	add	r2, r1
 801cf54:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801cf58:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801cf5c:	4413      	add	r3, r2
 801cf5e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801cf62:	6803      	ldr	r3, [r0, #0]
 801cf64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801cf66:	4798      	blx	r3
 801cf68:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801cf6c:	f8d9 0000 	ldr.w	r0, [r9]
 801cf70:	d01f      	beq.n	801cfb2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801cf72:	2200      	movs	r2, #0
 801cf74:	6801      	ldr	r1, [r0, #0]
 801cf76:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801cf7a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cf7e:	220b      	movs	r2, #11
 801cf80:	9207      	str	r2, [sp, #28]
 801cf82:	f8b8 2000 	ldrh.w	r2, [r8]
 801cf86:	9206      	str	r2, [sp, #24]
 801cf88:	2201      	movs	r2, #1
 801cf8a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801cf8e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801cf92:	9203      	str	r2, [sp, #12]
 801cf94:	fa1f f28a 	uxth.w	r2, sl
 801cf98:	9202      	str	r2, [sp, #8]
 801cf9a:	b2b6      	uxth	r6, r6
 801cf9c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801cfa0:	9200      	str	r2, [sp, #0]
 801cfa2:	9601      	str	r6, [sp, #4]
 801cfa4:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801cfa6:	463a      	mov	r2, r7
 801cfa8:	4621      	mov	r1, r4
 801cfaa:	47a8      	blx	r5
 801cfac:	b011      	add	sp, #68	@ 0x44
 801cfae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cfb2:	6803      	ldr	r3, [r0, #0]
 801cfb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cfb6:	4798      	blx	r3
 801cfb8:	f8b8 2000 	ldrh.w	r2, [r8]
 801cfbc:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801cfc0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801cfc4:	2dff      	cmp	r5, #255	@ 0xff
 801cfc6:	fb02 1303 	mla	r3, r2, r3, r1
 801cfca:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cfce:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801cfd2:	fb0a fa02 	mul.w	sl, sl, r2
 801cfd6:	d062      	beq.n	801d09e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801cfd8:	ea6f 0c05 	mvn.w	ip, r5
 801cfdc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801cfe0:	930a      	str	r3, [sp, #40]	@ 0x28
 801cfe2:	b2ad      	uxth	r5, r5
 801cfe4:	fa5f fc8c 	uxtb.w	ip, ip
 801cfe8:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801cfec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cfee:	4298      	cmp	r0, r3
 801cff0:	f080 8085 	bcs.w	801d0fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801cff4:	eb00 0b09 	add.w	fp, r0, r9
 801cff8:	4558      	cmp	r0, fp
 801cffa:	d246      	bcs.n	801d08a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801cffc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d000:	2303      	movs	r3, #3
 801d002:	2204      	movs	r2, #4
 801d004:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d008:	eb07 0a0e 	add.w	sl, r7, lr
 801d00c:	8803      	ldrh	r3, [r0, #0]
 801d00e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d012:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d016:	1219      	asrs	r1, r3, #8
 801d018:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d01c:	fb18 f805 	smulbb	r8, r8, r5
 801d020:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d024:	10da      	asrs	r2, r3, #3
 801d026:	fb01 810c 	mla	r1, r1, ip, r8
 801d02a:	00db      	lsls	r3, r3, #3
 801d02c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d030:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d034:	b2db      	uxtb	r3, r3
 801d036:	fb18 f805 	smulbb	r8, r8, r5
 801d03a:	fb1e fe05 	smulbb	lr, lr, r5
 801d03e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d042:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d046:	b289      	uxth	r1, r1
 801d048:	fb02 820c 	mla	r2, r2, ip, r8
 801d04c:	fb03 e30c 	mla	r3, r3, ip, lr
 801d050:	b292      	uxth	r2, r2
 801d052:	b29b      	uxth	r3, r3
 801d054:	f101 0801 	add.w	r8, r1, #1
 801d058:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d05c:	f103 0e01 	add.w	lr, r3, #1
 801d060:	f102 0801 	add.w	r8, r2, #1
 801d064:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d068:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d06c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d070:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d074:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d078:	ea4e 0101 	orr.w	r1, lr, r1
 801d07c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d080:	ea41 0108 	orr.w	r1, r1, r8
 801d084:	f820 1b02 	strh.w	r1, [r0], #2
 801d088:	e7b6      	b.n	801cff8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d08a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d08c:	881b      	ldrh	r3, [r3, #0]
 801d08e:	1b9b      	subs	r3, r3, r6
 801d090:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d094:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d098:	1b9b      	subs	r3, r3, r6
 801d09a:	441c      	add	r4, r3
 801d09c:	e7a6      	b.n	801cfec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d09e:	491b      	ldr	r1, [pc, #108]	@ (801d10c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d0a0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d0a4:	2203      	movs	r2, #3
 801d0a6:	2504      	movs	r5, #4
 801d0a8:	4550      	cmp	r0, sl
 801d0aa:	d228      	bcs.n	801d0fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d0ac:	eb00 0c09 	add.w	ip, r0, r9
 801d0b0:	4560      	cmp	r0, ip
 801d0b2:	4623      	mov	r3, r4
 801d0b4:	d219      	bcs.n	801d0ea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d0b6:	f893 e000 	ldrb.w	lr, [r3]
 801d0ba:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d0be:	eb07 0b0e 	add.w	fp, r7, lr
 801d0c2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d0c6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d0ca:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d0ce:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d0d2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d0d6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801d0da:	ea43 030b 	orr.w	r3, r3, fp
 801d0de:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d0e2:	3401      	adds	r4, #1
 801d0e4:	f820 3b02 	strh.w	r3, [r0], #2
 801d0e8:	e7e2      	b.n	801d0b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d0ea:	f8b8 3000 	ldrh.w	r3, [r8]
 801d0ee:	1b9b      	subs	r3, r3, r6
 801d0f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0f4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d0f8:	1b9b      	subs	r3, r3, r6
 801d0fa:	441c      	add	r4, r3
 801d0fc:	e7d4      	b.n	801d0a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d0fe:	4b04      	ldr	r3, [pc, #16]	@ (801d110 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d100:	6818      	ldr	r0, [r3, #0]
 801d102:	6803      	ldr	r3, [r0, #0]
 801d104:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d106:	4798      	blx	r3
 801d108:	e750      	b.n	801cfac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d10a:	bf00      	nop
 801d10c:	fffff800 	.word	0xfffff800
 801d110:	20002f54 	.word	0x20002f54
 801d114:	20002f4e 	.word	0x20002f4e

0801d118 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d118:	b4f0      	push	{r4, r5, r6, r7}
 801d11a:	460c      	mov	r4, r1
 801d11c:	4611      	mov	r1, r2
 801d11e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d122:	780f      	ldrb	r7, [r1, #0]
 801d124:	784e      	ldrb	r6, [r1, #1]
 801d126:	2f01      	cmp	r7, #1
 801d128:	461a      	mov	r2, r3
 801d12a:	9b04      	ldr	r3, [sp, #16]
 801d12c:	d038      	beq.n	801d1a0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801d12e:	d31f      	bcc.n	801d170 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801d130:	2f02      	cmp	r7, #2
 801d132:	d14d      	bne.n	801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d134:	2e03      	cmp	r6, #3
 801d136:	d84b      	bhi.n	801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d138:	e8df f006 	tbb	[pc, r6]
 801d13c:	17140702 	.word	0x17140702
 801d140:	9504      	str	r5, [sp, #16]
 801d142:	4620      	mov	r0, r4
 801d144:	bcf0      	pop	{r4, r5, r6, r7}
 801d146:	f7ff be09 	b.w	801cd5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d14a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d14c:	2800      	cmp	r0, #0
 801d14e:	d03f      	beq.n	801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d150:	6806      	ldr	r6, [r0, #0]
 801d152:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d156:	68b5      	ldr	r5, [r6, #8]
 801d158:	4613      	mov	r3, r2
 801d15a:	46ac      	mov	ip, r5
 801d15c:	460a      	mov	r2, r1
 801d15e:	4621      	mov	r1, r4
 801d160:	bcf0      	pop	{r4, r5, r6, r7}
 801d162:	4760      	bx	ip
 801d164:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d168:	e7f0      	b.n	801d14c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d16a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d16e:	e7ed      	b.n	801d14c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d170:	2e03      	cmp	r6, #3
 801d172:	d82d      	bhi.n	801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d174:	e8df f006 	tbb	[pc, r6]
 801d178:	110e0702 	.word	0x110e0702
 801d17c:	9504      	str	r5, [sp, #16]
 801d17e:	4620      	mov	r0, r4
 801d180:	bcf0      	pop	{r4, r5, r6, r7}
 801d182:	f7ff bd05 	b.w	801cb90 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d186:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d188:	b310      	cbz	r0, 801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d18a:	6806      	ldr	r6, [r0, #0]
 801d18c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d190:	68f5      	ldr	r5, [r6, #12]
 801d192:	e7e1      	b.n	801d158 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d194:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d198:	e7f6      	b.n	801d188 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801d19a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d19e:	e7f3      	b.n	801d188 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801d1a0:	2e03      	cmp	r6, #3
 801d1a2:	d815      	bhi.n	801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1a4:	e8df f006 	tbb	[pc, r6]
 801d1a8:	110e0702 	.word	0x110e0702
 801d1ac:	9504      	str	r5, [sp, #16]
 801d1ae:	4620      	mov	r0, r4
 801d1b0:	bcf0      	pop	{r4, r5, r6, r7}
 801d1b2:	f7ff be9f 	b.w	801cef4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d1b6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d1b8:	b150      	cbz	r0, 801d1d0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1ba:	6806      	ldr	r6, [r0, #0]
 801d1bc:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d1c0:	6935      	ldr	r5, [r6, #16]
 801d1c2:	e7c9      	b.n	801d158 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d1c4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d1c8:	e7f6      	b.n	801d1b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801d1ca:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d1ce:	e7f3      	b.n	801d1b8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801d1d0:	bcf0      	pop	{r4, r5, r6, r7}
 801d1d2:	4770      	bx	lr

0801d1d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d1d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1d8:	4604      	mov	r4, r0
 801d1da:	b087      	sub	sp, #28
 801d1dc:	6810      	ldr	r0, [r2, #0]
 801d1de:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801d1e2:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801d41c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d1e6:	460e      	mov	r6, r1
 801d1e8:	6851      	ldr	r1, [r2, #4]
 801d1ea:	ad02      	add	r5, sp, #8
 801d1ec:	c503      	stmia	r5!, {r0, r1}
 801d1ee:	6818      	ldr	r0, [r3, #0]
 801d1f0:	6859      	ldr	r1, [r3, #4]
 801d1f2:	ad04      	add	r5, sp, #16
 801d1f4:	4617      	mov	r7, r2
 801d1f6:	c503      	stmia	r5!, {r0, r1}
 801d1f8:	a802      	add	r0, sp, #8
 801d1fa:	f7f6 fd33 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1fe:	4639      	mov	r1, r7
 801d200:	a804      	add	r0, sp, #16
 801d202:	f7f6 fd57 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d206:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d20a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d20e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d212:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d216:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d21a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d21e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d222:	440e      	add	r6, r1
 801d224:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d228:	440a      	add	r2, r1
 801d22a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d22e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d232:	4413      	add	r3, r2
 801d234:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d238:	4b77      	ldr	r3, [pc, #476]	@ (801d418 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d23a:	6818      	ldr	r0, [r3, #0]
 801d23c:	6803      	ldr	r3, [r0, #0]
 801d23e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d240:	4798      	blx	r3
 801d242:	f8b9 b000 	ldrh.w	fp, [r9]
 801d246:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d24a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d24e:	fb0b 2303 	mla	r3, fp, r3, r2
 801d252:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d256:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d25a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d25e:	fb05 f50b 	mul.w	r5, r5, fp
 801d262:	9300      	str	r3, [sp, #0]
 801d264:	d069      	beq.n	801d33a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d266:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d26a:	4558      	cmp	r0, fp
 801d26c:	f080 80cc 	bcs.w	801d408 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d270:	9b00      	ldr	r3, [sp, #0]
 801d272:	18c3      	adds	r3, r0, r3
 801d274:	9301      	str	r3, [sp, #4]
 801d276:	4631      	mov	r1, r6
 801d278:	9b01      	ldr	r3, [sp, #4]
 801d27a:	4298      	cmp	r0, r3
 801d27c:	d24f      	bcs.n	801d31e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d27e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d282:	2a00      	cmp	r2, #0
 801d284:	d048      	beq.n	801d318 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d286:	fb0a f202 	mul.w	r2, sl, r2
 801d28a:	1c53      	adds	r3, r2, #1
 801d28c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d290:	121b      	asrs	r3, r3, #8
 801d292:	d041      	beq.n	801d318 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d294:	8802      	ldrh	r2, [r0, #0]
 801d296:	f8b4 c000 	ldrh.w	ip, [r4]
 801d29a:	b29e      	uxth	r6, r3
 801d29c:	1215      	asrs	r5, r2, #8
 801d29e:	43db      	mvns	r3, r3
 801d2a0:	b2db      	uxtb	r3, r3
 801d2a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d2a6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d2aa:	fb15 f503 	smulbb	r5, r5, r3
 801d2ae:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d2b2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d2b6:	00d2      	lsls	r2, r2, #3
 801d2b8:	fb07 5706 	mla	r7, r7, r6, r5
 801d2bc:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d2c0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d2c4:	b2d2      	uxtb	r2, r2
 801d2c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d2ca:	b2bf      	uxth	r7, r7
 801d2cc:	fb1e fe03 	smulbb	lr, lr, r3
 801d2d0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d2d4:	fa5f fc8c 	uxtb.w	ip, ip
 801d2d8:	fb12 f203 	smulbb	r2, r2, r3
 801d2dc:	fb05 e506 	mla	r5, r5, r6, lr
 801d2e0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d2e4:	f107 0e01 	add.w	lr, r7, #1
 801d2e8:	fa1f fc8c 	uxth.w	ip, ip
 801d2ec:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d2f0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801d2f4:	f10c 0701 	add.w	r7, ip, #1
 801d2f8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d2fc:	b2ad      	uxth	r5, r5
 801d2fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d302:	ea47 070e 	orr.w	r7, r7, lr
 801d306:	f105 0e01 	add.w	lr, r5, #1
 801d30a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d30e:	096d      	lsrs	r5, r5, #5
 801d310:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d314:	432f      	orrs	r7, r5
 801d316:	8007      	strh	r7, [r0, #0]
 801d318:	3002      	adds	r0, #2
 801d31a:	3402      	adds	r4, #2
 801d31c:	e7ac      	b.n	801d278 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d31e:	f8b9 3000 	ldrh.w	r3, [r9]
 801d322:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d326:	eba3 0308 	sub.w	r3, r3, r8
 801d32a:	eba6 0608 	sub.w	r6, r6, r8
 801d32e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d332:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d336:	440e      	add	r6, r1
 801d338:	e797      	b.n	801d26a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d33a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d33e:	42a8      	cmp	r0, r5
 801d340:	d262      	bcs.n	801d408 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d342:	9b00      	ldr	r3, [sp, #0]
 801d344:	4631      	mov	r1, r6
 801d346:	eb00 0b03 	add.w	fp, r0, r3
 801d34a:	4558      	cmp	r0, fp
 801d34c:	d24e      	bcs.n	801d3ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d34e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d352:	b12b      	cbz	r3, 801d360 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d354:	2bff      	cmp	r3, #255	@ 0xff
 801d356:	f8b4 e000 	ldrh.w	lr, [r4]
 801d35a:	d104      	bne.n	801d366 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d35c:	f8a0 e000 	strh.w	lr, [r0]
 801d360:	3002      	adds	r0, #2
 801d362:	3402      	adds	r4, #2
 801d364:	e7f1      	b.n	801d34a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d366:	8802      	ldrh	r2, [r0, #0]
 801d368:	b29f      	uxth	r7, r3
 801d36a:	1216      	asrs	r6, r2, #8
 801d36c:	43db      	mvns	r3, r3
 801d36e:	b2db      	uxtb	r3, r3
 801d370:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d374:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d378:	fb16 f603 	smulbb	r6, r6, r3
 801d37c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d380:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d384:	00d2      	lsls	r2, r2, #3
 801d386:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d38a:	b2d2      	uxtb	r2, r2
 801d38c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d390:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801d394:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d398:	fb1a fa03 	smulbb	sl, sl, r3
 801d39c:	fa1f fc8c 	uxth.w	ip, ip
 801d3a0:	fb12 f303 	smulbb	r3, r2, r3
 801d3a4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d3a8:	fa5f fe8e 	uxtb.w	lr, lr
 801d3ac:	fb06 a607 	mla	r6, r6, r7, sl
 801d3b0:	f10c 0201 	add.w	r2, ip, #1
 801d3b4:	fb0e 3307 	mla	r3, lr, r7, r3
 801d3b8:	b2b6      	uxth	r6, r6
 801d3ba:	b29b      	uxth	r3, r3
 801d3bc:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d3c0:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801d3c4:	f106 0a01 	add.w	sl, r6, #1
 801d3c8:	f103 0c01 	add.w	ip, r3, #1
 801d3cc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d3d0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d3d4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d3d8:	0976      	lsrs	r6, r6, #5
 801d3da:	ea4c 0c02 	orr.w	ip, ip, r2
 801d3de:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801d3e2:	ea4c 0c06 	orr.w	ip, ip, r6
 801d3e6:	f8a0 c000 	strh.w	ip, [r0]
 801d3ea:	e7b9      	b.n	801d360 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d3ec:	f8b9 3000 	ldrh.w	r3, [r9]
 801d3f0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d3f4:	eba3 0308 	sub.w	r3, r3, r8
 801d3f8:	eba6 0608 	sub.w	r6, r6, r8
 801d3fc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d400:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d404:	440e      	add	r6, r1
 801d406:	e79a      	b.n	801d33e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d408:	4b03      	ldr	r3, [pc, #12]	@ (801d418 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d40a:	6818      	ldr	r0, [r3, #0]
 801d40c:	6803      	ldr	r3, [r0, #0]
 801d40e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d410:	4798      	blx	r3
 801d412:	b007      	add	sp, #28
 801d414:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d418:	20002f54 	.word	0x20002f54
 801d41c:	20002f4e 	.word	0x20002f4e

0801d420 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d424:	b089      	sub	sp, #36	@ 0x24
 801d426:	4607      	mov	r7, r0
 801d428:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801d42c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d42e:	4688      	mov	r8, r1
 801d430:	4692      	mov	sl, r2
 801d432:	4699      	mov	r9, r3
 801d434:	2e00      	cmp	r6, #0
 801d436:	d048      	beq.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d438:	4608      	mov	r0, r1
 801d43a:	f7fa f827 	bl	801748c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d43e:	4605      	mov	r5, r0
 801d440:	4640      	mov	r0, r8
 801d442:	f7fa f857 	bl	80174f4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d446:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d44a:	4640      	mov	r0, r8
 801d44c:	f8ad a008 	strh.w	sl, [sp, #8]
 801d450:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d454:	f8ad 900a 	strh.w	r9, [sp, #10]
 801d458:	f7fa f90a 	bl	8017670 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d45c:	4605      	mov	r5, r0
 801d45e:	4640      	mov	r0, r8
 801d460:	f7fa f936 	bl	80176d0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d464:	4682      	mov	sl, r0
 801d466:	4640      	mov	r0, r8
 801d468:	f7fa f986 	bl	8017778 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d46c:	2810      	cmp	r0, #16
 801d46e:	d82c      	bhi.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d470:	e8df f010 	tbh	[pc, r0, lsl #1]
 801d474:	00ba00ca 	.word	0x00ba00ca
 801d478:	002b0011 	.word	0x002b0011
 801d47c:	002b002b 	.word	0x002b002b
 801d480:	002b002b 	.word	0x002b002b
 801d484:	002b002b 	.word	0x002b002b
 801d488:	00c1002b 	.word	0x00c1002b
 801d48c:	002b002b 	.word	0x002b002b
 801d490:	002b0180 	.word	0x002b0180
 801d494:	0173      	.short	0x0173
 801d496:	4bbc      	ldr	r3, [pc, #752]	@ (801d788 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801d498:	6818      	ldr	r0, [r3, #0]
 801d49a:	6803      	ldr	r3, [r0, #0]
 801d49c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d49e:	4798      	blx	r3
 801d4a0:	2eff      	cmp	r6, #255	@ 0xff
 801d4a2:	d101      	bne.n	801d4a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d4a4:	0683      	lsls	r3, r0, #26
 801d4a6:	d506      	bpl.n	801d4b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801d4a8:	4633      	mov	r3, r6
 801d4aa:	4622      	mov	r2, r4
 801d4ac:	a902      	add	r1, sp, #8
 801d4ae:	4628      	mov	r0, r5
 801d4b0:	f7ff f8fc 	bl	801c6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d4b4:	e009      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d4b6:	4640      	mov	r0, r8
 801d4b8:	f7fa f8a2 	bl	8017600 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d4bc:	b940      	cbnz	r0, 801d4d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801d4be:	4623      	mov	r3, r4
 801d4c0:	aa02      	add	r2, sp, #8
 801d4c2:	4629      	mov	r1, r5
 801d4c4:	4638      	mov	r0, r7
 801d4c6:	f7ff f9d7 	bl	801c878 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d4ca:	b009      	add	sp, #36	@ 0x24
 801d4cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4d0:	f10d 0918 	add.w	r9, sp, #24
 801d4d4:	4641      	mov	r1, r8
 801d4d6:	4648      	mov	r0, r9
 801d4d8:	f7fa f840 	bl	801755c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d4dc:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d4e0:	f10d 0810 	add.w	r8, sp, #16
 801d4e4:	e888 0003 	stmia.w	r8, {r0, r1}
 801d4e8:	4640      	mov	r0, r8
 801d4ea:	4621      	mov	r1, r4
 801d4ec:	f7f3 f9f6 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 801d4f0:	4640      	mov	r0, r8
 801d4f2:	f7f3 fa36 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d4f6:	2800      	cmp	r0, #0
 801d4f8:	d1d6      	bne.n	801d4a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d4fa:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4fe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d502:	4293      	cmp	r3, r2
 801d504:	dd12      	ble.n	801d52c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801d506:	1a9b      	subs	r3, r3, r2
 801d508:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d50c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d510:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d514:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d518:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d51c:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d520:	464a      	mov	r2, r9
 801d522:	4633      	mov	r3, r6
 801d524:	a902      	add	r1, sp, #8
 801d526:	4628      	mov	r0, r5
 801d528:	f7ff f8c0 	bl	801c6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d52c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d530:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d534:	4293      	cmp	r3, r2
 801d536:	dd12      	ble.n	801d55e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801d538:	1a9b      	subs	r3, r3, r2
 801d53a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d53e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d542:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d546:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d54a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d54e:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d552:	23ff      	movs	r3, #255	@ 0xff
 801d554:	464a      	mov	r2, r9
 801d556:	a902      	add	r1, sp, #8
 801d558:	4628      	mov	r0, r5
 801d55a:	f7ff f8a7 	bl	801c6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d55e:	4643      	mov	r3, r8
 801d560:	aa02      	add	r2, sp, #8
 801d562:	4629      	mov	r1, r5
 801d564:	4638      	mov	r0, r7
 801d566:	f7ff f987 	bl	801c878 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d56a:	88a2      	ldrh	r2, [r4, #4]
 801d56c:	8823      	ldrh	r3, [r4, #0]
 801d56e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d572:	4413      	add	r3, r2
 801d574:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d578:	440a      	add	r2, r1
 801d57a:	b29b      	uxth	r3, r3
 801d57c:	b292      	uxth	r2, r2
 801d57e:	b211      	sxth	r1, r2
 801d580:	b218      	sxth	r0, r3
 801d582:	4288      	cmp	r0, r1
 801d584:	dd12      	ble.n	801d5ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801d586:	1a9b      	subs	r3, r3, r2
 801d588:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d58c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d590:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d594:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d598:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d59c:	23ff      	movs	r3, #255	@ 0xff
 801d59e:	464a      	mov	r2, r9
 801d5a0:	a902      	add	r1, sp, #8
 801d5a2:	4628      	mov	r0, r5
 801d5a4:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d5a8:	f7ff f880 	bl	801c6ac <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d5ac:	88e2      	ldrh	r2, [r4, #6]
 801d5ae:	8863      	ldrh	r3, [r4, #2]
 801d5b0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d5b4:	4413      	add	r3, r2
 801d5b6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d5ba:	440a      	add	r2, r1
 801d5bc:	b29b      	uxth	r3, r3
 801d5be:	b292      	uxth	r2, r2
 801d5c0:	b211      	sxth	r1, r2
 801d5c2:	b218      	sxth	r0, r3
 801d5c4:	4288      	cmp	r0, r1
 801d5c6:	dd80      	ble.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d5c8:	1a9b      	subs	r3, r3, r2
 801d5ca:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d5ce:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d5d2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d5d6:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d5da:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d5de:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d5e2:	23ff      	movs	r3, #255	@ 0xff
 801d5e4:	464a      	mov	r2, r9
 801d5e6:	e761      	b.n	801d4ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801d5e8:	4633      	mov	r3, r6
 801d5ea:	4622      	mov	r2, r4
 801d5ec:	a902      	add	r1, sp, #8
 801d5ee:	4628      	mov	r0, r5
 801d5f0:	f7ff f9b2 	bl	801c958 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d5f4:	e769      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d5f6:	e9cd 4600 	strd	r4, r6, [sp]
 801d5fa:	ab02      	add	r3, sp, #8
 801d5fc:	4652      	mov	r2, sl
 801d5fe:	4629      	mov	r1, r5
 801d600:	4638      	mov	r0, r7
 801d602:	f7ff fd89 	bl	801d118 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d606:	e760      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d608:	4640      	mov	r0, r8
 801d60a:	f7f9 fff9 	bl	8017600 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d60e:	b948      	cbnz	r0, 801d624 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801d610:	683b      	ldr	r3, [r7, #0]
 801d612:	e9cd 6000 	strd	r6, r0, [sp]
 801d616:	aa02      	add	r2, sp, #8
 801d618:	68de      	ldr	r6, [r3, #12]
 801d61a:	4629      	mov	r1, r5
 801d61c:	4623      	mov	r3, r4
 801d61e:	4638      	mov	r0, r7
 801d620:	47b0      	blx	r6
 801d622:	e752      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d624:	f10d 0918 	add.w	r9, sp, #24
 801d628:	4641      	mov	r1, r8
 801d62a:	4648      	mov	r0, r9
 801d62c:	f7f9 ff96 	bl	801755c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d630:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d634:	f10d 0810 	add.w	r8, sp, #16
 801d638:	e888 0003 	stmia.w	r8, {r0, r1}
 801d63c:	4640      	mov	r0, r8
 801d63e:	4621      	mov	r1, r4
 801d640:	f7f3 f94c 	bl	80108dc <_ZN8touchgfx4RectaNERKS0_>
 801d644:	4640      	mov	r0, r8
 801d646:	f7f3 f98c 	bl	8010962 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d64a:	b138      	cbz	r0, 801d65c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801d64c:	9600      	str	r6, [sp, #0]
 801d64e:	4623      	mov	r3, r4
 801d650:	aa02      	add	r2, sp, #8
 801d652:	4651      	mov	r1, sl
 801d654:	4628      	mov	r0, r5
 801d656:	f7ff fdbd 	bl	801d1d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d65a:	e736      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d65c:	683b      	ldr	r3, [r7, #0]
 801d65e:	e9cd 6000 	strd	r6, r0, [sp]
 801d662:	aa02      	add	r2, sp, #8
 801d664:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d668:	4629      	mov	r1, r5
 801d66a:	4643      	mov	r3, r8
 801d66c:	4638      	mov	r0, r7
 801d66e:	47d8      	blx	fp
 801d670:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d674:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d678:	4293      	cmp	r3, r2
 801d67a:	dd13      	ble.n	801d6a4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801d67c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d680:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d684:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d688:	1a9b      	subs	r3, r3, r2
 801d68a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d68e:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d692:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d696:	9600      	str	r6, [sp, #0]
 801d698:	464b      	mov	r3, r9
 801d69a:	aa02      	add	r2, sp, #8
 801d69c:	4651      	mov	r1, sl
 801d69e:	4628      	mov	r0, r5
 801d6a0:	f7ff fd98 	bl	801d1d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d6a4:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d6a8:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d6ac:	4293      	cmp	r3, r2
 801d6ae:	dd13      	ble.n	801d6d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801d6b0:	1a9b      	subs	r3, r3, r2
 801d6b2:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d6b6:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d6ba:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d6be:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d6c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d6c6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d6ca:	9600      	str	r6, [sp, #0]
 801d6cc:	464b      	mov	r3, r9
 801d6ce:	aa02      	add	r2, sp, #8
 801d6d0:	4651      	mov	r1, sl
 801d6d2:	4628      	mov	r0, r5
 801d6d4:	f7ff fd7e 	bl	801d1d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d6d8:	88a2      	ldrh	r2, [r4, #4]
 801d6da:	8823      	ldrh	r3, [r4, #0]
 801d6dc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d6e0:	4413      	add	r3, r2
 801d6e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d6e6:	440a      	add	r2, r1
 801d6e8:	b29b      	uxth	r3, r3
 801d6ea:	b292      	uxth	r2, r2
 801d6ec:	b211      	sxth	r1, r2
 801d6ee:	b218      	sxth	r0, r3
 801d6f0:	4288      	cmp	r0, r1
 801d6f2:	dd13      	ble.n	801d71c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801d6f4:	1a9b      	subs	r3, r3, r2
 801d6f6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d6fa:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d6fe:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d702:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d706:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d70a:	9600      	str	r6, [sp, #0]
 801d70c:	464b      	mov	r3, r9
 801d70e:	aa02      	add	r2, sp, #8
 801d710:	4651      	mov	r1, sl
 801d712:	4628      	mov	r0, r5
 801d714:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d718:	f7ff fd5c 	bl	801d1d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d71c:	88e2      	ldrh	r2, [r4, #6]
 801d71e:	8863      	ldrh	r3, [r4, #2]
 801d720:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d724:	4413      	add	r3, r2
 801d726:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d72a:	440a      	add	r2, r1
 801d72c:	b29b      	uxth	r3, r3
 801d72e:	b292      	uxth	r2, r2
 801d730:	b211      	sxth	r1, r2
 801d732:	b218      	sxth	r0, r3
 801d734:	4288      	cmp	r0, r1
 801d736:	f77f aec8 	ble.w	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d73a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d73e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d742:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d746:	1a9b      	subs	r3, r3, r2
 801d748:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d74c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d750:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d754:	9600      	str	r6, [sp, #0]
 801d756:	464b      	mov	r3, r9
 801d758:	e77a      	b.n	801d650 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801d75a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801d75e:	2800      	cmp	r0, #0
 801d760:	f43f aeb3 	beq.w	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d764:	6803      	ldr	r3, [r0, #0]
 801d766:	9600      	str	r6, [sp, #0]
 801d768:	68de      	ldr	r6, [r3, #12]
 801d76a:	4623      	mov	r3, r4
 801d76c:	aa02      	add	r2, sp, #8
 801d76e:	4629      	mov	r1, r5
 801d770:	47b0      	blx	r6
 801d772:	e6aa      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d774:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801d778:	2800      	cmp	r0, #0
 801d77a:	f43f aea6 	beq.w	801d4ca <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d77e:	6803      	ldr	r3, [r0, #0]
 801d780:	9600      	str	r6, [sp, #0]
 801d782:	689e      	ldr	r6, [r3, #8]
 801d784:	e7f1      	b.n	801d76a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801d786:	bf00      	nop
 801d788:	20002f54 	.word	0x20002f54

0801d78c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d78c:	b180      	cbz	r0, 801d7b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d78e:	2903      	cmp	r1, #3
 801d790:	d81c      	bhi.n	801d7cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d792:	e8df f001 	tbb	[pc, r1]
 801d796:	1d02      	.short	0x1d02
 801d798:	1f08      	.short	0x1f08
 801d79a:	4b10      	ldr	r3, [pc, #64]	@ (801d7dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d79c:	8818      	ldrh	r0, [r3, #0]
 801d79e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d7a2:	4240      	negs	r0, r0
 801d7a4:	4770      	bx	lr
 801d7a6:	4b0d      	ldr	r3, [pc, #52]	@ (801d7dc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d7a8:	8818      	ldrh	r0, [r3, #0]
 801d7aa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d7ae:	4770      	bx	lr
 801d7b0:	2903      	cmp	r1, #3
 801d7b2:	d80b      	bhi.n	801d7cc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d7b4:	a301      	add	r3, pc, #4	@ (adr r3, 801d7bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d7b6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d7ba:	bf00      	nop
 801d7bc:	0801d7d1 	.word	0x0801d7d1
 801d7c0:	0801d7a7 	.word	0x0801d7a7
 801d7c4:	0801d7d5 	.word	0x0801d7d5
 801d7c8:	0801d79b 	.word	0x0801d79b
 801d7cc:	2000      	movs	r0, #0
 801d7ce:	4770      	bx	lr
 801d7d0:	2001      	movs	r0, #1
 801d7d2:	4770      	bx	lr
 801d7d4:	f04f 30ff 	mov.w	r0, #4294967295
 801d7d8:	4770      	bx	lr
 801d7da:	bf00      	nop
 801d7dc:	20002f4e 	.word	0x20002f4e

0801d7e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d7e0:	b180      	cbz	r0, 801d804 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d7e2:	2903      	cmp	r1, #3
 801d7e4:	d81c      	bhi.n	801d820 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d7e6:	e8df f001 	tbb	[pc, r1]
 801d7ea:	021d      	.short	0x021d
 801d7ec:	071f      	.short	0x071f
 801d7ee:	4b10      	ldr	r3, [pc, #64]	@ (801d830 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d7f0:	8818      	ldrh	r0, [r3, #0]
 801d7f2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d7f6:	4770      	bx	lr
 801d7f8:	4b0d      	ldr	r3, [pc, #52]	@ (801d830 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d7fa:	8818      	ldrh	r0, [r3, #0]
 801d7fc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d800:	4240      	negs	r0, r0
 801d802:	4770      	bx	lr
 801d804:	2903      	cmp	r1, #3
 801d806:	d80b      	bhi.n	801d820 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d808:	a301      	add	r3, pc, #4	@ (adr r3, 801d810 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d80a:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d80e:	bf00      	nop
 801d810:	0801d7ef 	.word	0x0801d7ef
 801d814:	0801d829 	.word	0x0801d829
 801d818:	0801d7f9 	.word	0x0801d7f9
 801d81c:	0801d825 	.word	0x0801d825
 801d820:	2000      	movs	r0, #0
 801d822:	4770      	bx	lr
 801d824:	2001      	movs	r0, #1
 801d826:	4770      	bx	lr
 801d828:	f04f 30ff 	mov.w	r0, #4294967295
 801d82c:	4770      	bx	lr
 801d82e:	bf00      	nop
 801d830:	20002f4e 	.word	0x20002f4e

0801d834 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d838:	b099      	sub	sp, #100	@ 0x64
 801d83a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d83c:	a914      	add	r1, sp, #80	@ 0x50
 801d83e:	e881 000c 	stmia.w	r1, {r2, r3}
 801d842:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801d846:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801d84a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d84e:	9309      	str	r3, [sp, #36]	@ 0x24
 801d850:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d854:	9310      	str	r3, [sp, #64]	@ 0x40
 801d856:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d85a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801d85e:	930c      	str	r3, [sp, #48]	@ 0x30
 801d860:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801d864:	798f      	ldrb	r7, [r1, #6]
 801d866:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801d86a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801d86e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801d872:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801d876:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801d87a:	431f      	orrs	r7, r3
 801d87c:	f000 8195 	beq.w	801dbaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d880:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801d884:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801d888:	f891 9007 	ldrb.w	r9, [r1, #7]
 801d88c:	ea59 0903 	orrs.w	r9, r9, r3
 801d890:	f000 818b 	beq.w	801dbaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d894:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801d898:	b29b      	uxth	r3, r3
 801d89a:	2d00      	cmp	r5, #0
 801d89c:	f000 812e 	beq.w	801dafc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801d8a0:	1aed      	subs	r5, r5, r3
 801d8a2:	b2ad      	uxth	r5, r5
 801d8a4:	042b      	lsls	r3, r5, #16
 801d8a6:	d502      	bpl.n	801d8ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d8a8:	1b64      	subs	r4, r4, r5
 801d8aa:	b224      	sxth	r4, r4
 801d8ac:	2500      	movs	r5, #0
 801d8ae:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d8b2:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801d8b6:	428c      	cmp	r4, r1
 801d8b8:	b28b      	uxth	r3, r1
 801d8ba:	bfbf      	itttt	lt
 801d8bc:	18ed      	addlt	r5, r5, r3
 801d8be:	1b2c      	sublt	r4, r5, r4
 801d8c0:	b2a5      	uxthlt	r5, r4
 801d8c2:	460c      	movlt	r4, r1
 801d8c4:	8891      	ldrh	r1, [r2, #4]
 801d8c6:	440b      	add	r3, r1
 801d8c8:	b21b      	sxth	r3, r3
 801d8ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d8cc:	88d3      	ldrh	r3, [r2, #6]
 801d8ce:	8852      	ldrh	r2, [r2, #2]
 801d8d0:	4413      	add	r3, r2
 801d8d2:	b21b      	sxth	r3, r3
 801d8d4:	930d      	str	r3, [sp, #52]	@ 0x34
 801d8d6:	4bbe      	ldr	r3, [pc, #760]	@ (801dbd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801d8d8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d8da:	f893 b000 	ldrb.w	fp, [r3]
 801d8de:	f10b 3cff 	add.w	ip, fp, #4294967295
 801d8e2:	f1dc 0300 	rsbs	r3, ip, #0
 801d8e6:	eb43 030c 	adc.w	r3, r3, ip
 801d8ea:	930e      	str	r3, [sp, #56]	@ 0x38
 801d8ec:	4621      	mov	r1, r4
 801d8ee:	4653      	mov	r3, sl
 801d8f0:	a814      	add	r0, sp, #80	@ 0x50
 801d8f2:	f7f6 f82c 	bl	801394e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801d8f6:	4621      	mov	r1, r4
 801d8f8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801d8fc:	4653      	mov	r3, sl
 801d8fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d900:	a814      	add	r0, sp, #80	@ 0x50
 801d902:	f7f6 f841 	bl	8013988 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801d906:	a918      	add	r1, sp, #96	@ 0x60
 801d908:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801d90c:	a817      	add	r0, sp, #92	@ 0x5c
 801d90e:	f7f6 f967 	bl	8013be0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801d912:	f1ba 0f00 	cmp.w	sl, #0
 801d916:	f040 80f4 	bne.w	801db02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801d91a:	f1bb 0f01 	cmp.w	fp, #1
 801d91e:	f040 80f8 	bne.w	801db12 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801d922:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d924:	2b00      	cmp	r3, #0
 801d926:	f040 8145 	bne.w	801dbb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801d92a:	b2ba      	uxth	r2, r7
 801d92c:	b905      	cbnz	r5, 801d930 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801d92e:	b16e      	cbz	r6, 801d94c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801d930:	fb06 5302 	mla	r3, r6, r2, r5
 801d934:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801d936:	fb08 f303 	mul.w	r3, r8, r3
 801d93a:	4631      	mov	r1, r6
 801d93c:	f003 0607 	and.w	r6, r3, #7
 801d940:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801d944:	9328      	str	r3, [sp, #160]	@ 0xa0
 801d946:	eba9 0301 	sub.w	r3, r9, r1
 801d94a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d94c:	4651      	mov	r1, sl
 801d94e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d950:	f7ff ff1c 	bl	801d78c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801d954:	4681      	mov	r9, r0
 801d956:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d958:	f7ff ff42 	bl	801d7e0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801d95c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d95e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d960:	eba3 0a01 	sub.w	sl, r3, r1
 801d964:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d966:	459a      	cmp	sl, r3
 801d968:	bfa8      	it	ge
 801d96a:	469a      	movge	sl, r3
 801d96c:	f1ba 0f00 	cmp.w	sl, #0
 801d970:	4683      	mov	fp, r0
 801d972:	f340 811a 	ble.w	801dbaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d976:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d978:	1b64      	subs	r4, r4, r5
 801d97a:	1b1c      	subs	r4, r3, r4
 801d97c:	42bc      	cmp	r4, r7
 801d97e:	bfd4      	ite	le
 801d980:	ebc5 0504 	rsble	r5, r5, r4
 801d984:	ebc5 0507 	rsbgt	r5, r5, r7
 801d988:	2d00      	cmp	r5, #0
 801d98a:	f340 810e 	ble.w	801dbaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d98e:	1b52      	subs	r2, r2, r5
 801d990:	fb08 f302 	mul.w	r3, r8, r2
 801d994:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d996:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d998:	2b00      	cmp	r3, #0
 801d99a:	f040 8116 	bne.w	801dbca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801d99e:	4b8d      	ldr	r3, [pc, #564]	@ (801dbd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801d9a0:	6818      	ldr	r0, [r3, #0]
 801d9a2:	6803      	ldr	r3, [r0, #0]
 801d9a4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d9a6:	4798      	blx	r3
 801d9a8:	2301      	movs	r3, #1
 801d9aa:	fa03 f308 	lsl.w	r3, r3, r8
 801d9ae:	4a8a      	ldr	r2, [pc, #552]	@ (801dbd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801d9b0:	3b01      	subs	r3, #1
 801d9b2:	b2db      	uxtb	r3, r3
 801d9b4:	8811      	ldrh	r1, [r2, #0]
 801d9b6:	930e      	str	r3, [sp, #56]	@ 0x38
 801d9b8:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801d9bc:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801d9c0:	fb01 2303 	mla	r3, r1, r3, r2
 801d9c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d9c8:	930a      	str	r3, [sp, #40]	@ 0x28
 801d9ca:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d9cc:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801d9d0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d9d2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d9d4:	0a19      	lsrs	r1, r3, #8
 801d9d6:	b2cb      	uxtb	r3, r1
 801d9d8:	9312      	str	r3, [sp, #72]	@ 0x48
 801d9da:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d9dc:	b2db      	uxtb	r3, r3
 801d9de:	9311      	str	r3, [sp, #68]	@ 0x44
 801d9e0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d9e2:	095a      	lsrs	r2, r3, #5
 801d9e4:	4b7d      	ldr	r3, [pc, #500]	@ (801dbdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801d9e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d9ea:	400b      	ands	r3, r1
 801d9ec:	4313      	orrs	r3, r2
 801d9ee:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801d9f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d9f4:	4313      	orrs	r3, r2
 801d9f6:	b29b      	uxth	r3, r3
 801d9f8:	9310      	str	r3, [sp, #64]	@ 0x40
 801d9fa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d9fc:	781a      	ldrb	r2, [r3, #0]
 801d9fe:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801da02:	4132      	asrs	r2, r6
 801da04:	fb05 b919 	mls	r9, r5, r9, fp
 801da08:	fb03 fb05 	mul.w	fp, r3, r5
 801da0c:	b2d2      	uxtb	r2, r2
 801da0e:	930d      	str	r3, [sp, #52]	@ 0x34
 801da10:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801da14:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801da18:	f0c0 80f5 	bcc.w	801dc06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801da1c:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801da20:	46ae      	mov	lr, r5
 801da22:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801da26:	f0c0 80dd 	bcc.w	801dbe4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801da2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801da2c:	4013      	ands	r3, r2
 801da2e:	d055      	beq.n	801dadc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801da30:	20ff      	movs	r0, #255	@ 0xff
 801da32:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801da34:	fb90 f1f1 	sdiv	r1, r0, r1
 801da38:	434b      	muls	r3, r1
 801da3a:	2bfe      	cmp	r3, #254	@ 0xfe
 801da3c:	dd03      	ble.n	801da46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801da3e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801da40:	4281      	cmp	r1, r0
 801da42:	f000 80cd 	beq.w	801dbe0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801da46:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801da48:	f8bc 4000 	ldrh.w	r4, [ip]
 801da4c:	fb11 f303 	smulbb	r3, r1, r3
 801da50:	b29b      	uxth	r3, r3
 801da52:	1c59      	adds	r1, r3, #1
 801da54:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801da58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801da5c:	b29f      	uxth	r7, r3
 801da5e:	43db      	mvns	r3, r3
 801da60:	b2db      	uxtb	r3, r3
 801da62:	9309      	str	r3, [sp, #36]	@ 0x24
 801da64:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801da66:	1220      	asrs	r0, r4, #8
 801da68:	fb13 f907 	smulbb	r9, r3, r7
 801da6c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801da70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801da72:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801da76:	fb00 9003 	mla	r0, r0, r3, r9
 801da7a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801da7c:	10e1      	asrs	r1, r4, #3
 801da7e:	fb13 f907 	smulbb	r9, r3, r7
 801da82:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801da86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801da88:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801da8c:	fb01 9103 	mla	r1, r1, r3, r9
 801da90:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801da92:	00e4      	lsls	r4, r4, #3
 801da94:	fb13 f707 	smulbb	r7, r3, r7
 801da98:	b2e4      	uxtb	r4, r4
 801da9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801da9c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801daa0:	fb04 7403 	mla	r4, r4, r3, r7
 801daa4:	b280      	uxth	r0, r0
 801daa6:	b2a4      	uxth	r4, r4
 801daa8:	1c43      	adds	r3, r0, #1
 801daaa:	f104 0901 	add.w	r9, r4, #1
 801daae:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dab2:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dab6:	b289      	uxth	r1, r1
 801dab8:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dabc:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801dac0:	ea49 0000 	orr.w	r0, r9, r0
 801dac4:	f101 0901 	add.w	r9, r1, #1
 801dac8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801dacc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dad0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801dad4:	ea40 0009 	orr.w	r0, r0, r9
 801dad8:	f8ac 0000 	strh.w	r0, [ip]
 801dadc:	4446      	add	r6, r8
 801dade:	b2b6      	uxth	r6, r6
 801dae0:	2e07      	cmp	r6, #7
 801dae2:	bf81      	itttt	hi
 801dae4:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801dae6:	785a      	ldrbhi	r2, [r3, #1]
 801dae8:	3301      	addhi	r3, #1
 801daea:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801daec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801daee:	bf9a      	itte	ls
 801daf0:	fa42 f208 	asrls.w	r2, r2, r8
 801daf4:	b2d2      	uxtbls	r2, r2
 801daf6:	2600      	movhi	r6, #0
 801daf8:	449c      	add	ip, r3
 801dafa:	e792      	b.n	801da22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801dafc:	441c      	add	r4, r3
 801dafe:	b224      	sxth	r4, r4
 801db00:	e6d5      	b.n	801d8ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801db02:	f1ba 0f01 	cmp.w	sl, #1
 801db06:	f47f af0c 	bne.w	801d922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db0a:	f1bb 0f01 	cmp.w	fp, #1
 801db0e:	f47f af08 	bne.w	801d922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db12:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801dbd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801db16:	f8db 0000 	ldr.w	r0, [fp]
 801db1a:	6803      	ldr	r3, [r0, #0]
 801db1c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801db1e:	4798      	blx	r3
 801db20:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801db24:	465a      	mov	r2, fp
 801db26:	d006      	beq.n	801db36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801db28:	f1b8 0f04 	cmp.w	r8, #4
 801db2c:	d140      	bne.n	801dbb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801db2e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801db30:	3300      	adds	r3, #0
 801db32:	bf18      	it	ne
 801db34:	2301      	movne	r3, #1
 801db36:	0580      	lsls	r0, r0, #22
 801db38:	d56e      	bpl.n	801dc18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801db3a:	f1b8 0f08 	cmp.w	r8, #8
 801db3e:	d16b      	bne.n	801dc18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801db40:	2b00      	cmp	r3, #0
 801db42:	bf0c      	ite	eq
 801db44:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801db48:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801db4c:	2d00      	cmp	r5, #0
 801db4e:	f47f aee8 	bne.w	801d922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db52:	2e00      	cmp	r6, #0
 801db54:	f47f aee5 	bne.w	801d922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db58:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801db5a:	19e3      	adds	r3, r4, r7
 801db5c:	4283      	cmp	r3, r0
 801db5e:	f73f aee0 	bgt.w	801d922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801db64:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801db66:	444b      	add	r3, r9
 801db68:	4283      	cmp	r3, r0
 801db6a:	f73f aeda 	bgt.w	801d922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801db6e:	6810      	ldr	r0, [r2, #0]
 801db70:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801db74:	6804      	ldr	r4, [r0, #0]
 801db76:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801db7a:	b2bf      	uxth	r7, r7
 801db7c:	f1b8 0f08 	cmp.w	r8, #8
 801db80:	f04f 0500 	mov.w	r5, #0
 801db84:	bf18      	it	ne
 801db86:	3701      	addne	r7, #1
 801db88:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801db8c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801db8e:	9104      	str	r1, [sp, #16]
 801db90:	bf18      	it	ne
 801db92:	f027 0701 	bicne.w	r7, r7, #1
 801db96:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801db98:	bf18      	it	ne
 801db9a:	b2bf      	uxthne	r7, r7
 801db9c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801dba0:	e9cd 7900 	strd	r7, r9, [sp]
 801dba4:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801dba6:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801dba8:	47a0      	blx	r4
 801dbaa:	b019      	add	sp, #100	@ 0x64
 801dbac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dbb0:	2300      	movs	r3, #0
 801dbb2:	e7c0      	b.n	801db36 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dbb4:	2208      	movs	r2, #8
 801dbb6:	fb92 f3f8 	sdiv	r3, r2, r8
 801dbba:	1e5a      	subs	r2, r3, #1
 801dbbc:	443a      	add	r2, r7
 801dbbe:	fb92 f2f3 	sdiv	r2, r2, r3
 801dbc2:	fb12 f203 	smulbb	r2, r2, r3
 801dbc6:	b292      	uxth	r2, r2
 801dbc8:	e6b0      	b.n	801d92c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801dbca:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801dbcc:	e6ec      	b.n	801d9a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801dbce:	bf00      	nop
 801dbd0:	20002f4c 	.word	0x20002f4c
 801dbd4:	20002f54 	.word	0x20002f54
 801dbd8:	20002f4e 	.word	0x20002f4e
 801dbdc:	00fff800 	.word	0x00fff800
 801dbe0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801dbe2:	e779      	b.n	801dad8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801dbe4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dbe6:	b153      	cbz	r3, 801dbfe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801dbe8:	441e      	add	r6, r3
 801dbea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dbec:	b2b6      	uxth	r6, r6
 801dbee:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801dbf2:	f006 0607 	and.w	r6, r6, #7
 801dbf6:	781a      	ldrb	r2, [r3, #0]
 801dbf8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801dbfa:	4132      	asrs	r2, r6
 801dbfc:	b2d2      	uxtb	r2, r2
 801dbfe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dc00:	445b      	add	r3, fp
 801dc02:	930a      	str	r3, [sp, #40]	@ 0x28
 801dc04:	e706      	b.n	801da14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801dc06:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dc08:	2b00      	cmp	r3, #0
 801dc0a:	d1ce      	bne.n	801dbaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc0c:	4b05      	ldr	r3, [pc, #20]	@ (801dc24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801dc0e:	6818      	ldr	r0, [r3, #0]
 801dc10:	6803      	ldr	r3, [r0, #0]
 801dc12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dc14:	4798      	blx	r3
 801dc16:	e7c8      	b.n	801dbaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc18:	2b00      	cmp	r3, #0
 801dc1a:	f43f ae82 	beq.w	801d922 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dc1e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801dc22:	e793      	b.n	801db4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801dc24:	20002f54 	.word	0x20002f54

0801dc28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801dc28:	b538      	push	{r3, r4, r5, lr}
 801dc2a:	4c15      	ldr	r4, [pc, #84]	@ (801dc80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801dc2c:	7823      	ldrb	r3, [r4, #0]
 801dc2e:	f3bf 8f5b 	dmb	ish
 801dc32:	07da      	lsls	r2, r3, #31
 801dc34:	4605      	mov	r5, r0
 801dc36:	d40b      	bmi.n	801dc50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801dc38:	4620      	mov	r0, r4
 801dc3a:	f007 fefc 	bl	8025a36 <__cxa_guard_acquire>
 801dc3e:	b138      	cbz	r0, 801dc50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801dc40:	4620      	mov	r0, r4
 801dc42:	f007 ff04 	bl	8025a4e <__cxa_guard_release>
 801dc46:	4a0f      	ldr	r2, [pc, #60]	@ (801dc84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801dc48:	490f      	ldr	r1, [pc, #60]	@ (801dc88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801dc4a:	4810      	ldr	r0, [pc, #64]	@ (801dc8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801dc4c:	f007 feec 	bl	8025a28 <__aeabi_atexit>
 801dc50:	4c0f      	ldr	r4, [pc, #60]	@ (801dc90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801dc52:	7823      	ldrb	r3, [r4, #0]
 801dc54:	f3bf 8f5b 	dmb	ish
 801dc58:	07db      	lsls	r3, r3, #31
 801dc5a:	d40b      	bmi.n	801dc74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801dc5c:	4620      	mov	r0, r4
 801dc5e:	f007 feea 	bl	8025a36 <__cxa_guard_acquire>
 801dc62:	b138      	cbz	r0, 801dc74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801dc64:	4620      	mov	r0, r4
 801dc66:	f007 fef2 	bl	8025a4e <__cxa_guard_release>
 801dc6a:	4a06      	ldr	r2, [pc, #24]	@ (801dc84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801dc6c:	4909      	ldr	r1, [pc, #36]	@ (801dc94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801dc6e:	480a      	ldr	r0, [pc, #40]	@ (801dc98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801dc70:	f007 feda 	bl	8025a28 <__aeabi_atexit>
 801dc74:	4b05      	ldr	r3, [pc, #20]	@ (801dc8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801dc76:	616b      	str	r3, [r5, #20]
 801dc78:	4b07      	ldr	r3, [pc, #28]	@ (801dc98 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801dc7a:	61ab      	str	r3, [r5, #24]
 801dc7c:	bd38      	pop	{r3, r4, r5, pc}
 801dc7e:	bf00      	nop
 801dc80:	20003030 	.word	0x20003030
 801dc84:	20000000 	.word	0x20000000
 801dc88:	08019def 	.word	0x08019def
 801dc8c:	20000078 	.word	0x20000078
 801dc90:	20003034 	.word	0x20003034
 801dc94:	08019ded 	.word	0x08019ded
 801dc98:	2000007c 	.word	0x2000007c

0801dc9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801dc9c:	b538      	push	{r3, r4, r5, lr}
 801dc9e:	4c15      	ldr	r4, [pc, #84]	@ (801dcf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801dca0:	7823      	ldrb	r3, [r4, #0]
 801dca2:	f3bf 8f5b 	dmb	ish
 801dca6:	07da      	lsls	r2, r3, #31
 801dca8:	4605      	mov	r5, r0
 801dcaa:	d40b      	bmi.n	801dcc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dcac:	4620      	mov	r0, r4
 801dcae:	f007 fec2 	bl	8025a36 <__cxa_guard_acquire>
 801dcb2:	b138      	cbz	r0, 801dcc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801dcb4:	4620      	mov	r0, r4
 801dcb6:	f007 feca 	bl	8025a4e <__cxa_guard_release>
 801dcba:	4a0f      	ldr	r2, [pc, #60]	@ (801dcf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dcbc:	490f      	ldr	r1, [pc, #60]	@ (801dcfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801dcbe:	4810      	ldr	r0, [pc, #64]	@ (801dd00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dcc0:	f007 feb2 	bl	8025a28 <__aeabi_atexit>
 801dcc4:	4c0f      	ldr	r4, [pc, #60]	@ (801dd04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801dcc6:	7823      	ldrb	r3, [r4, #0]
 801dcc8:	f3bf 8f5b 	dmb	ish
 801dccc:	07db      	lsls	r3, r3, #31
 801dcce:	d40b      	bmi.n	801dce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dcd0:	4620      	mov	r0, r4
 801dcd2:	f007 feb0 	bl	8025a36 <__cxa_guard_acquire>
 801dcd6:	b138      	cbz	r0, 801dce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dcd8:	4620      	mov	r0, r4
 801dcda:	f007 feb8 	bl	8025a4e <__cxa_guard_release>
 801dcde:	4a06      	ldr	r2, [pc, #24]	@ (801dcf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dce0:	4909      	ldr	r1, [pc, #36]	@ (801dd08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801dce2:	480a      	ldr	r0, [pc, #40]	@ (801dd0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dce4:	f007 fea0 	bl	8025a28 <__aeabi_atexit>
 801dce8:	4b05      	ldr	r3, [pc, #20]	@ (801dd00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dcea:	60eb      	str	r3, [r5, #12]
 801dcec:	4b07      	ldr	r3, [pc, #28]	@ (801dd0c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dcee:	612b      	str	r3, [r5, #16]
 801dcf0:	bd38      	pop	{r3, r4, r5, pc}
 801dcf2:	bf00      	nop
 801dcf4:	20003008 	.word	0x20003008
 801dcf8:	20000000 	.word	0x20000000
 801dcfc:	08019df3 	.word	0x08019df3
 801dd00:	20000050 	.word	0x20000050
 801dd04:	2000300c 	.word	0x2000300c
 801dd08:	08019df1 	.word	0x08019df1
 801dd0c:	20000054 	.word	0x20000054

0801dd10 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dd10:	b510      	push	{r4, lr}
 801dd12:	4604      	mov	r4, r0
 801dd14:	f7ff ff88 	bl	801dc28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801dd18:	4620      	mov	r0, r4
 801dd1a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dd1e:	f7ff bfbd 	b.w	801dc9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dd24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dd24:	b538      	push	{r3, r4, r5, lr}
 801dd26:	4c15      	ldr	r4, [pc, #84]	@ (801dd7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dd28:	7823      	ldrb	r3, [r4, #0]
 801dd2a:	f3bf 8f5b 	dmb	ish
 801dd2e:	07da      	lsls	r2, r3, #31
 801dd30:	4605      	mov	r5, r0
 801dd32:	d40b      	bmi.n	801dd4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dd34:	4620      	mov	r0, r4
 801dd36:	f007 fe7e 	bl	8025a36 <__cxa_guard_acquire>
 801dd3a:	b138      	cbz	r0, 801dd4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dd3c:	4620      	mov	r0, r4
 801dd3e:	f007 fe86 	bl	8025a4e <__cxa_guard_release>
 801dd42:	4a0f      	ldr	r2, [pc, #60]	@ (801dd80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dd44:	490f      	ldr	r1, [pc, #60]	@ (801dd84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801dd46:	4810      	ldr	r0, [pc, #64]	@ (801dd88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dd48:	f007 fe6e 	bl	8025a28 <__aeabi_atexit>
 801dd4c:	4c0f      	ldr	r4, [pc, #60]	@ (801dd8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801dd4e:	7823      	ldrb	r3, [r4, #0]
 801dd50:	f3bf 8f5b 	dmb	ish
 801dd54:	07db      	lsls	r3, r3, #31
 801dd56:	d40b      	bmi.n	801dd70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801dd58:	4620      	mov	r0, r4
 801dd5a:	f007 fe6c 	bl	8025a36 <__cxa_guard_acquire>
 801dd5e:	b138      	cbz	r0, 801dd70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801dd60:	4620      	mov	r0, r4
 801dd62:	f007 fe74 	bl	8025a4e <__cxa_guard_release>
 801dd66:	4a06      	ldr	r2, [pc, #24]	@ (801dd80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dd68:	4909      	ldr	r1, [pc, #36]	@ (801dd90 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801dd6a:	480a      	ldr	r0, [pc, #40]	@ (801dd94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801dd6c:	f007 fe5c 	bl	8025a28 <__aeabi_atexit>
 801dd70:	4b05      	ldr	r3, [pc, #20]	@ (801dd88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dd72:	626b      	str	r3, [r5, #36]	@ 0x24
 801dd74:	4b07      	ldr	r3, [pc, #28]	@ (801dd94 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801dd76:	62ab      	str	r3, [r5, #40]	@ 0x28
 801dd78:	bd38      	pop	{r3, r4, r5, pc}
 801dd7a:	bf00      	nop
 801dd7c:	20003038 	.word	0x20003038
 801dd80:	20000000 	.word	0x20000000
 801dd84:	08019de7 	.word	0x08019de7
 801dd88:	20000080 	.word	0x20000080
 801dd8c:	2000303c 	.word	0x2000303c
 801dd90:	08019de5 	.word	0x08019de5
 801dd94:	20000084 	.word	0x20000084

0801dd98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801dd98:	b538      	push	{r3, r4, r5, lr}
 801dd9a:	4c15      	ldr	r4, [pc, #84]	@ (801ddf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801dd9c:	7823      	ldrb	r3, [r4, #0]
 801dd9e:	f3bf 8f5b 	dmb	ish
 801dda2:	07da      	lsls	r2, r3, #31
 801dda4:	4605      	mov	r5, r0
 801dda6:	d40b      	bmi.n	801ddc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801dda8:	4620      	mov	r0, r4
 801ddaa:	f007 fe44 	bl	8025a36 <__cxa_guard_acquire>
 801ddae:	b138      	cbz	r0, 801ddc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801ddb0:	4620      	mov	r0, r4
 801ddb2:	f007 fe4c 	bl	8025a4e <__cxa_guard_release>
 801ddb6:	4a0f      	ldr	r2, [pc, #60]	@ (801ddf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801ddb8:	490f      	ldr	r1, [pc, #60]	@ (801ddf8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801ddba:	4810      	ldr	r0, [pc, #64]	@ (801ddfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801ddbc:	f007 fe34 	bl	8025a28 <__aeabi_atexit>
 801ddc0:	4c0f      	ldr	r4, [pc, #60]	@ (801de00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801ddc2:	7823      	ldrb	r3, [r4, #0]
 801ddc4:	f3bf 8f5b 	dmb	ish
 801ddc8:	07db      	lsls	r3, r3, #31
 801ddca:	d40b      	bmi.n	801dde4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ddcc:	4620      	mov	r0, r4
 801ddce:	f007 fe32 	bl	8025a36 <__cxa_guard_acquire>
 801ddd2:	b138      	cbz	r0, 801dde4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801ddd4:	4620      	mov	r0, r4
 801ddd6:	f007 fe3a 	bl	8025a4e <__cxa_guard_release>
 801ddda:	4a06      	ldr	r2, [pc, #24]	@ (801ddf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801dddc:	4909      	ldr	r1, [pc, #36]	@ (801de04 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801ddde:	480a      	ldr	r0, [pc, #40]	@ (801de08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801dde0:	f007 fe22 	bl	8025a28 <__aeabi_atexit>
 801dde4:	4b05      	ldr	r3, [pc, #20]	@ (801ddfc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801dde6:	61eb      	str	r3, [r5, #28]
 801dde8:	4b07      	ldr	r3, [pc, #28]	@ (801de08 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801ddea:	622b      	str	r3, [r5, #32]
 801ddec:	bd38      	pop	{r3, r4, r5, pc}
 801ddee:	bf00      	nop
 801ddf0:	20003010 	.word	0x20003010
 801ddf4:	20000000 	.word	0x20000000
 801ddf8:	08019deb 	.word	0x08019deb
 801ddfc:	20000058 	.word	0x20000058
 801de00:	20003014 	.word	0x20003014
 801de04:	08019de9 	.word	0x08019de9
 801de08:	2000005c 	.word	0x2000005c

0801de0c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801de0c:	b510      	push	{r4, lr}
 801de0e:	4604      	mov	r4, r0
 801de10:	f7ff ff88 	bl	801dd24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801de14:	4620      	mov	r0, r4
 801de16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801de1a:	f7ff bfbd 	b.w	801dd98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801de20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801de20:	b538      	push	{r3, r4, r5, lr}
 801de22:	4c15      	ldr	r4, [pc, #84]	@ (801de78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801de24:	7823      	ldrb	r3, [r4, #0]
 801de26:	f3bf 8f5b 	dmb	ish
 801de2a:	07da      	lsls	r2, r3, #31
 801de2c:	4605      	mov	r5, r0
 801de2e:	d40b      	bmi.n	801de48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801de30:	4620      	mov	r0, r4
 801de32:	f007 fe00 	bl	8025a36 <__cxa_guard_acquire>
 801de36:	b138      	cbz	r0, 801de48 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801de38:	4620      	mov	r0, r4
 801de3a:	f007 fe08 	bl	8025a4e <__cxa_guard_release>
 801de3e:	4a0f      	ldr	r2, [pc, #60]	@ (801de7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801de40:	490f      	ldr	r1, [pc, #60]	@ (801de80 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801de42:	4810      	ldr	r0, [pc, #64]	@ (801de84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801de44:	f007 fdf0 	bl	8025a28 <__aeabi_atexit>
 801de48:	4c0f      	ldr	r4, [pc, #60]	@ (801de88 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801de4a:	7823      	ldrb	r3, [r4, #0]
 801de4c:	f3bf 8f5b 	dmb	ish
 801de50:	07db      	lsls	r3, r3, #31
 801de52:	d40b      	bmi.n	801de6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801de54:	4620      	mov	r0, r4
 801de56:	f007 fdee 	bl	8025a36 <__cxa_guard_acquire>
 801de5a:	b138      	cbz	r0, 801de6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801de5c:	4620      	mov	r0, r4
 801de5e:	f007 fdf6 	bl	8025a4e <__cxa_guard_release>
 801de62:	4a06      	ldr	r2, [pc, #24]	@ (801de7c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801de64:	4909      	ldr	r1, [pc, #36]	@ (801de8c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801de66:	480a      	ldr	r0, [pc, #40]	@ (801de90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801de68:	f007 fdde 	bl	8025a28 <__aeabi_atexit>
 801de6c:	4b05      	ldr	r3, [pc, #20]	@ (801de84 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801de6e:	636b      	str	r3, [r5, #52]	@ 0x34
 801de70:	4b07      	ldr	r3, [pc, #28]	@ (801de90 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801de72:	63ab      	str	r3, [r5, #56]	@ 0x38
 801de74:	bd38      	pop	{r3, r4, r5, pc}
 801de76:	bf00      	nop
 801de78:	20003048 	.word	0x20003048
 801de7c:	20000000 	.word	0x20000000
 801de80:	08019ddf 	.word	0x08019ddf
 801de84:	20000090 	.word	0x20000090
 801de88:	2000304c 	.word	0x2000304c
 801de8c:	08019ddd 	.word	0x08019ddd
 801de90:	20000094 	.word	0x20000094

0801de94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801de94:	b538      	push	{r3, r4, r5, lr}
 801de96:	4c15      	ldr	r4, [pc, #84]	@ (801deec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801de98:	7823      	ldrb	r3, [r4, #0]
 801de9a:	f3bf 8f5b 	dmb	ish
 801de9e:	07da      	lsls	r2, r3, #31
 801dea0:	4605      	mov	r5, r0
 801dea2:	d40b      	bmi.n	801debc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801dea4:	4620      	mov	r0, r4
 801dea6:	f007 fdc6 	bl	8025a36 <__cxa_guard_acquire>
 801deaa:	b138      	cbz	r0, 801debc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801deac:	4620      	mov	r0, r4
 801deae:	f007 fdce 	bl	8025a4e <__cxa_guard_release>
 801deb2:	4a0f      	ldr	r2, [pc, #60]	@ (801def0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801deb4:	490f      	ldr	r1, [pc, #60]	@ (801def4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801deb6:	4810      	ldr	r0, [pc, #64]	@ (801def8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801deb8:	f007 fdb6 	bl	8025a28 <__aeabi_atexit>
 801debc:	4c0f      	ldr	r4, [pc, #60]	@ (801defc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801debe:	7823      	ldrb	r3, [r4, #0]
 801dec0:	f3bf 8f5b 	dmb	ish
 801dec4:	07db      	lsls	r3, r3, #31
 801dec6:	d40b      	bmi.n	801dee0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dec8:	4620      	mov	r0, r4
 801deca:	f007 fdb4 	bl	8025a36 <__cxa_guard_acquire>
 801dece:	b138      	cbz	r0, 801dee0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801ded0:	4620      	mov	r0, r4
 801ded2:	f007 fdbc 	bl	8025a4e <__cxa_guard_release>
 801ded6:	4a06      	ldr	r2, [pc, #24]	@ (801def0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801ded8:	4909      	ldr	r1, [pc, #36]	@ (801df00 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801deda:	480a      	ldr	r0, [pc, #40]	@ (801df04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dedc:	f007 fda4 	bl	8025a28 <__aeabi_atexit>
 801dee0:	4b05      	ldr	r3, [pc, #20]	@ (801def8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801dee2:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801dee4:	4b07      	ldr	r3, [pc, #28]	@ (801df04 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dee6:	632b      	str	r3, [r5, #48]	@ 0x30
 801dee8:	bd38      	pop	{r3, r4, r5, pc}
 801deea:	bf00      	nop
 801deec:	20003018 	.word	0x20003018
 801def0:	20000000 	.word	0x20000000
 801def4:	08019de3 	.word	0x08019de3
 801def8:	20000060 	.word	0x20000060
 801defc:	2000301c 	.word	0x2000301c
 801df00:	08019de1 	.word	0x08019de1
 801df04:	20000064 	.word	0x20000064

0801df08 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801df08:	b510      	push	{r4, lr}
 801df0a:	4604      	mov	r4, r0
 801df0c:	f7ff ff88 	bl	801de20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801df10:	4620      	mov	r0, r4
 801df12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801df16:	f7ff bfbd 	b.w	801de94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801df1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801df1c:	b538      	push	{r3, r4, r5, lr}
 801df1e:	4c15      	ldr	r4, [pc, #84]	@ (801df74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801df20:	7823      	ldrb	r3, [r4, #0]
 801df22:	f3bf 8f5b 	dmb	ish
 801df26:	07da      	lsls	r2, r3, #31
 801df28:	4605      	mov	r5, r0
 801df2a:	d40b      	bmi.n	801df44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801df2c:	4620      	mov	r0, r4
 801df2e:	f007 fd82 	bl	8025a36 <__cxa_guard_acquire>
 801df32:	b138      	cbz	r0, 801df44 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801df34:	4620      	mov	r0, r4
 801df36:	f007 fd8a 	bl	8025a4e <__cxa_guard_release>
 801df3a:	4a0f      	ldr	r2, [pc, #60]	@ (801df78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801df3c:	490f      	ldr	r1, [pc, #60]	@ (801df7c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801df3e:	4810      	ldr	r0, [pc, #64]	@ (801df80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801df40:	f007 fd72 	bl	8025a28 <__aeabi_atexit>
 801df44:	4c0f      	ldr	r4, [pc, #60]	@ (801df84 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801df46:	7823      	ldrb	r3, [r4, #0]
 801df48:	f3bf 8f5b 	dmb	ish
 801df4c:	07db      	lsls	r3, r3, #31
 801df4e:	d40b      	bmi.n	801df68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801df50:	4620      	mov	r0, r4
 801df52:	f007 fd70 	bl	8025a36 <__cxa_guard_acquire>
 801df56:	b138      	cbz	r0, 801df68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801df58:	4620      	mov	r0, r4
 801df5a:	f007 fd78 	bl	8025a4e <__cxa_guard_release>
 801df5e:	4a06      	ldr	r2, [pc, #24]	@ (801df78 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801df60:	4909      	ldr	r1, [pc, #36]	@ (801df88 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801df62:	480a      	ldr	r0, [pc, #40]	@ (801df8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801df64:	f007 fd60 	bl	8025a28 <__aeabi_atexit>
 801df68:	4b05      	ldr	r3, [pc, #20]	@ (801df80 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801df6a:	656b      	str	r3, [r5, #84]	@ 0x54
 801df6c:	4b07      	ldr	r3, [pc, #28]	@ (801df8c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801df6e:	65ab      	str	r3, [r5, #88]	@ 0x58
 801df70:	bd38      	pop	{r3, r4, r5, pc}
 801df72:	bf00      	nop
 801df74:	20003050 	.word	0x20003050
 801df78:	20000000 	.word	0x20000000
 801df7c:	08019dcf 	.word	0x08019dcf
 801df80:	20000098 	.word	0x20000098
 801df84:	20003054 	.word	0x20003054
 801df88:	08019dcd 	.word	0x08019dcd
 801df8c:	2000009c 	.word	0x2000009c

0801df90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801df90:	b538      	push	{r3, r4, r5, lr}
 801df92:	4c15      	ldr	r4, [pc, #84]	@ (801dfe8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801df94:	7823      	ldrb	r3, [r4, #0]
 801df96:	f3bf 8f5b 	dmb	ish
 801df9a:	07da      	lsls	r2, r3, #31
 801df9c:	4605      	mov	r5, r0
 801df9e:	d40b      	bmi.n	801dfb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dfa0:	4620      	mov	r0, r4
 801dfa2:	f007 fd48 	bl	8025a36 <__cxa_guard_acquire>
 801dfa6:	b138      	cbz	r0, 801dfb8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dfa8:	4620      	mov	r0, r4
 801dfaa:	f007 fd50 	bl	8025a4e <__cxa_guard_release>
 801dfae:	4a0f      	ldr	r2, [pc, #60]	@ (801dfec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dfb0:	490f      	ldr	r1, [pc, #60]	@ (801dff0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801dfb2:	4810      	ldr	r0, [pc, #64]	@ (801dff4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dfb4:	f007 fd38 	bl	8025a28 <__aeabi_atexit>
 801dfb8:	4c0f      	ldr	r4, [pc, #60]	@ (801dff8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801dfba:	7823      	ldrb	r3, [r4, #0]
 801dfbc:	f3bf 8f5b 	dmb	ish
 801dfc0:	07db      	lsls	r3, r3, #31
 801dfc2:	d40b      	bmi.n	801dfdc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dfc4:	4620      	mov	r0, r4
 801dfc6:	f007 fd36 	bl	8025a36 <__cxa_guard_acquire>
 801dfca:	b138      	cbz	r0, 801dfdc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dfcc:	4620      	mov	r0, r4
 801dfce:	f007 fd3e 	bl	8025a4e <__cxa_guard_release>
 801dfd2:	4a06      	ldr	r2, [pc, #24]	@ (801dfec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dfd4:	4909      	ldr	r1, [pc, #36]	@ (801dffc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801dfd6:	480a      	ldr	r0, [pc, #40]	@ (801e000 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801dfd8:	f007 fd26 	bl	8025a28 <__aeabi_atexit>
 801dfdc:	4b05      	ldr	r3, [pc, #20]	@ (801dff4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dfde:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801dfe0:	4b07      	ldr	r3, [pc, #28]	@ (801e000 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801dfe2:	652b      	str	r3, [r5, #80]	@ 0x50
 801dfe4:	bd38      	pop	{r3, r4, r5, pc}
 801dfe6:	bf00      	nop
 801dfe8:	20003058 	.word	0x20003058
 801dfec:	20000000 	.word	0x20000000
 801dff0:	08019dd3 	.word	0x08019dd3
 801dff4:	200000a0 	.word	0x200000a0
 801dff8:	2000305c 	.word	0x2000305c
 801dffc:	08019dd1 	.word	0x08019dd1
 801e000:	200000a4 	.word	0x200000a4

0801e004 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e004:	b538      	push	{r3, r4, r5, lr}
 801e006:	4c15      	ldr	r4, [pc, #84]	@ (801e05c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e008:	7823      	ldrb	r3, [r4, #0]
 801e00a:	f3bf 8f5b 	dmb	ish
 801e00e:	07da      	lsls	r2, r3, #31
 801e010:	4605      	mov	r5, r0
 801e012:	d40b      	bmi.n	801e02c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e014:	4620      	mov	r0, r4
 801e016:	f007 fd0e 	bl	8025a36 <__cxa_guard_acquire>
 801e01a:	b138      	cbz	r0, 801e02c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e01c:	4620      	mov	r0, r4
 801e01e:	f007 fd16 	bl	8025a4e <__cxa_guard_release>
 801e022:	4a0f      	ldr	r2, [pc, #60]	@ (801e060 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e024:	490f      	ldr	r1, [pc, #60]	@ (801e064 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e026:	4810      	ldr	r0, [pc, #64]	@ (801e068 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e028:	f007 fcfe 	bl	8025a28 <__aeabi_atexit>
 801e02c:	4c0f      	ldr	r4, [pc, #60]	@ (801e06c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e02e:	7823      	ldrb	r3, [r4, #0]
 801e030:	f3bf 8f5b 	dmb	ish
 801e034:	07db      	lsls	r3, r3, #31
 801e036:	d40b      	bmi.n	801e050 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e038:	4620      	mov	r0, r4
 801e03a:	f007 fcfc 	bl	8025a36 <__cxa_guard_acquire>
 801e03e:	b138      	cbz	r0, 801e050 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e040:	4620      	mov	r0, r4
 801e042:	f007 fd04 	bl	8025a4e <__cxa_guard_release>
 801e046:	4a06      	ldr	r2, [pc, #24]	@ (801e060 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e048:	4909      	ldr	r1, [pc, #36]	@ (801e070 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e04a:	480a      	ldr	r0, [pc, #40]	@ (801e074 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e04c:	f007 fcec 	bl	8025a28 <__aeabi_atexit>
 801e050:	4b05      	ldr	r3, [pc, #20]	@ (801e068 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e052:	646b      	str	r3, [r5, #68]	@ 0x44
 801e054:	4b07      	ldr	r3, [pc, #28]	@ (801e074 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e056:	64ab      	str	r3, [r5, #72]	@ 0x48
 801e058:	bd38      	pop	{r3, r4, r5, pc}
 801e05a:	bf00      	nop
 801e05c:	20003020 	.word	0x20003020
 801e060:	20000000 	.word	0x20000000
 801e064:	08019dd7 	.word	0x08019dd7
 801e068:	20000068 	.word	0x20000068
 801e06c:	20003024 	.word	0x20003024
 801e070:	08019dd5 	.word	0x08019dd5
 801e074:	2000006c 	.word	0x2000006c

0801e078 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e078:	b538      	push	{r3, r4, r5, lr}
 801e07a:	4c15      	ldr	r4, [pc, #84]	@ (801e0d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e07c:	7823      	ldrb	r3, [r4, #0]
 801e07e:	f3bf 8f5b 	dmb	ish
 801e082:	07da      	lsls	r2, r3, #31
 801e084:	4605      	mov	r5, r0
 801e086:	d40b      	bmi.n	801e0a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e088:	4620      	mov	r0, r4
 801e08a:	f007 fcd4 	bl	8025a36 <__cxa_guard_acquire>
 801e08e:	b138      	cbz	r0, 801e0a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e090:	4620      	mov	r0, r4
 801e092:	f007 fcdc 	bl	8025a4e <__cxa_guard_release>
 801e096:	4a0f      	ldr	r2, [pc, #60]	@ (801e0d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e098:	490f      	ldr	r1, [pc, #60]	@ (801e0d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e09a:	4810      	ldr	r0, [pc, #64]	@ (801e0dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e09c:	f007 fcc4 	bl	8025a28 <__aeabi_atexit>
 801e0a0:	4c0f      	ldr	r4, [pc, #60]	@ (801e0e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e0a2:	7823      	ldrb	r3, [r4, #0]
 801e0a4:	f3bf 8f5b 	dmb	ish
 801e0a8:	07db      	lsls	r3, r3, #31
 801e0aa:	d40b      	bmi.n	801e0c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e0ac:	4620      	mov	r0, r4
 801e0ae:	f007 fcc2 	bl	8025a36 <__cxa_guard_acquire>
 801e0b2:	b138      	cbz	r0, 801e0c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e0b4:	4620      	mov	r0, r4
 801e0b6:	f007 fcca 	bl	8025a4e <__cxa_guard_release>
 801e0ba:	4a06      	ldr	r2, [pc, #24]	@ (801e0d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e0bc:	4909      	ldr	r1, [pc, #36]	@ (801e0e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e0be:	480a      	ldr	r0, [pc, #40]	@ (801e0e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e0c0:	f007 fcb2 	bl	8025a28 <__aeabi_atexit>
 801e0c4:	4b05      	ldr	r3, [pc, #20]	@ (801e0dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e0c6:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801e0c8:	4b07      	ldr	r3, [pc, #28]	@ (801e0e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e0ca:	642b      	str	r3, [r5, #64]	@ 0x40
 801e0cc:	bd38      	pop	{r3, r4, r5, pc}
 801e0ce:	bf00      	nop
 801e0d0:	20003040 	.word	0x20003040
 801e0d4:	20000000 	.word	0x20000000
 801e0d8:	08019ddb 	.word	0x08019ddb
 801e0dc:	20000088 	.word	0x20000088
 801e0e0:	20003044 	.word	0x20003044
 801e0e4:	08019dd9 	.word	0x08019dd9
 801e0e8:	2000008c 	.word	0x2000008c

0801e0ec <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e0ec:	b510      	push	{r4, lr}
 801e0ee:	4604      	mov	r4, r0
 801e0f0:	f7ff ff14 	bl	801df1c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e0f4:	4620      	mov	r0, r4
 801e0f6:	f7ff ff85 	bl	801e004 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e0fa:	4620      	mov	r0, r4
 801e0fc:	f7ff ff48 	bl	801df90 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e100:	4620      	mov	r0, r4
 801e102:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e106:	f7ff bfb7 	b.w	801e078 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e10c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e10c:	b538      	push	{r3, r4, r5, lr}
 801e10e:	4c15      	ldr	r4, [pc, #84]	@ (801e164 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e110:	7823      	ldrb	r3, [r4, #0]
 801e112:	f3bf 8f5b 	dmb	ish
 801e116:	07da      	lsls	r2, r3, #31
 801e118:	4605      	mov	r5, r0
 801e11a:	d40b      	bmi.n	801e134 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e11c:	4620      	mov	r0, r4
 801e11e:	f007 fc8a 	bl	8025a36 <__cxa_guard_acquire>
 801e122:	b138      	cbz	r0, 801e134 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e124:	4620      	mov	r0, r4
 801e126:	f007 fc92 	bl	8025a4e <__cxa_guard_release>
 801e12a:	4a0f      	ldr	r2, [pc, #60]	@ (801e168 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e12c:	490f      	ldr	r1, [pc, #60]	@ (801e16c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e12e:	4810      	ldr	r0, [pc, #64]	@ (801e170 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e130:	f007 fc7a 	bl	8025a28 <__aeabi_atexit>
 801e134:	4c0f      	ldr	r4, [pc, #60]	@ (801e174 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e136:	7823      	ldrb	r3, [r4, #0]
 801e138:	f3bf 8f5b 	dmb	ish
 801e13c:	07db      	lsls	r3, r3, #31
 801e13e:	d40b      	bmi.n	801e158 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e140:	4620      	mov	r0, r4
 801e142:	f007 fc78 	bl	8025a36 <__cxa_guard_acquire>
 801e146:	b138      	cbz	r0, 801e158 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e148:	4620      	mov	r0, r4
 801e14a:	f007 fc80 	bl	8025a4e <__cxa_guard_release>
 801e14e:	4a06      	ldr	r2, [pc, #24]	@ (801e168 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e150:	4909      	ldr	r1, [pc, #36]	@ (801e178 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e152:	480a      	ldr	r0, [pc, #40]	@ (801e17c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e154:	f007 fc68 	bl	8025a28 <__aeabi_atexit>
 801e158:	4b05      	ldr	r3, [pc, #20]	@ (801e170 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e15a:	666b      	str	r3, [r5, #100]	@ 0x64
 801e15c:	4b07      	ldr	r3, [pc, #28]	@ (801e17c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e15e:	66ab      	str	r3, [r5, #104]	@ 0x68
 801e160:	bd38      	pop	{r3, r4, r5, pc}
 801e162:	bf00      	nop
 801e164:	20003028 	.word	0x20003028
 801e168:	20000000 	.word	0x20000000
 801e16c:	08019dc7 	.word	0x08019dc7
 801e170:	20000070 	.word	0x20000070
 801e174:	2000302c 	.word	0x2000302c
 801e178:	08019dc5 	.word	0x08019dc5
 801e17c:	20000074 	.word	0x20000074

0801e180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e180:	b538      	push	{r3, r4, r5, lr}
 801e182:	4c15      	ldr	r4, [pc, #84]	@ (801e1d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e184:	7823      	ldrb	r3, [r4, #0]
 801e186:	f3bf 8f5b 	dmb	ish
 801e18a:	07da      	lsls	r2, r3, #31
 801e18c:	4605      	mov	r5, r0
 801e18e:	d40b      	bmi.n	801e1a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e190:	4620      	mov	r0, r4
 801e192:	f007 fc50 	bl	8025a36 <__cxa_guard_acquire>
 801e196:	b138      	cbz	r0, 801e1a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e198:	4620      	mov	r0, r4
 801e19a:	f007 fc58 	bl	8025a4e <__cxa_guard_release>
 801e19e:	4a0f      	ldr	r2, [pc, #60]	@ (801e1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e1a0:	490f      	ldr	r1, [pc, #60]	@ (801e1e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e1a2:	4810      	ldr	r0, [pc, #64]	@ (801e1e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e1a4:	f007 fc40 	bl	8025a28 <__aeabi_atexit>
 801e1a8:	4c0f      	ldr	r4, [pc, #60]	@ (801e1e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e1aa:	7823      	ldrb	r3, [r4, #0]
 801e1ac:	f3bf 8f5b 	dmb	ish
 801e1b0:	07db      	lsls	r3, r3, #31
 801e1b2:	d40b      	bmi.n	801e1cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e1b4:	4620      	mov	r0, r4
 801e1b6:	f007 fc3e 	bl	8025a36 <__cxa_guard_acquire>
 801e1ba:	b138      	cbz	r0, 801e1cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e1bc:	4620      	mov	r0, r4
 801e1be:	f007 fc46 	bl	8025a4e <__cxa_guard_release>
 801e1c2:	4a06      	ldr	r2, [pc, #24]	@ (801e1dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e1c4:	4909      	ldr	r1, [pc, #36]	@ (801e1ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e1c6:	480a      	ldr	r0, [pc, #40]	@ (801e1f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e1c8:	f007 fc2e 	bl	8025a28 <__aeabi_atexit>
 801e1cc:	4b05      	ldr	r3, [pc, #20]	@ (801e1e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e1ce:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801e1d0:	4b07      	ldr	r3, [pc, #28]	@ (801e1f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e1d2:	662b      	str	r3, [r5, #96]	@ 0x60
 801e1d4:	bd38      	pop	{r3, r4, r5, pc}
 801e1d6:	bf00      	nop
 801e1d8:	20003000 	.word	0x20003000
 801e1dc:	20000000 	.word	0x20000000
 801e1e0:	08019dcb 	.word	0x08019dcb
 801e1e4:	20000048 	.word	0x20000048
 801e1e8:	20003004 	.word	0x20003004
 801e1ec:	08019dc9 	.word	0x08019dc9
 801e1f0:	2000004c 	.word	0x2000004c

0801e1f4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e1f4:	b510      	push	{r4, lr}
 801e1f6:	4604      	mov	r4, r0
 801e1f8:	f7ff ff88 	bl	801e10c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e1fc:	4620      	mov	r0, r4
 801e1fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e202:	f7ff bfbd 	b.w	801e180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e208:	b538      	push	{r3, r4, r5, lr}
 801e20a:	4c15      	ldr	r4, [pc, #84]	@ (801e260 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e20c:	7823      	ldrb	r3, [r4, #0]
 801e20e:	f3bf 8f5b 	dmb	ish
 801e212:	07da      	lsls	r2, r3, #31
 801e214:	4605      	mov	r5, r0
 801e216:	d40b      	bmi.n	801e230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e218:	4620      	mov	r0, r4
 801e21a:	f007 fc0c 	bl	8025a36 <__cxa_guard_acquire>
 801e21e:	b138      	cbz	r0, 801e230 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e220:	4620      	mov	r0, r4
 801e222:	f007 fc14 	bl	8025a4e <__cxa_guard_release>
 801e226:	4a0f      	ldr	r2, [pc, #60]	@ (801e264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e228:	490f      	ldr	r1, [pc, #60]	@ (801e268 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e22a:	4810      	ldr	r0, [pc, #64]	@ (801e26c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e22c:	f007 fbfc 	bl	8025a28 <__aeabi_atexit>
 801e230:	4c0f      	ldr	r4, [pc, #60]	@ (801e270 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e232:	7823      	ldrb	r3, [r4, #0]
 801e234:	f3bf 8f5b 	dmb	ish
 801e238:	07db      	lsls	r3, r3, #31
 801e23a:	d40b      	bmi.n	801e254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e23c:	4620      	mov	r0, r4
 801e23e:	f007 fbfa 	bl	8025a36 <__cxa_guard_acquire>
 801e242:	b138      	cbz	r0, 801e254 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e244:	4620      	mov	r0, r4
 801e246:	f007 fc02 	bl	8025a4e <__cxa_guard_release>
 801e24a:	4a06      	ldr	r2, [pc, #24]	@ (801e264 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e24c:	4909      	ldr	r1, [pc, #36]	@ (801e274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e24e:	480a      	ldr	r0, [pc, #40]	@ (801e278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e250:	f007 fbea 	bl	8025a28 <__aeabi_atexit>
 801e254:	4b05      	ldr	r3, [pc, #20]	@ (801e26c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e256:	676b      	str	r3, [r5, #116]	@ 0x74
 801e258:	4b07      	ldr	r3, [pc, #28]	@ (801e278 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e25a:	67ab      	str	r3, [r5, #120]	@ 0x78
 801e25c:	bd38      	pop	{r3, r4, r5, pc}
 801e25e:	bf00      	nop
 801e260:	20002ff8 	.word	0x20002ff8
 801e264:	20000000 	.word	0x20000000
 801e268:	08019dbf 	.word	0x08019dbf
 801e26c:	20000040 	.word	0x20000040
 801e270:	20002ffc 	.word	0x20002ffc
 801e274:	08019dbd 	.word	0x08019dbd
 801e278:	20000044 	.word	0x20000044

0801e27c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e27c:	b538      	push	{r3, r4, r5, lr}
 801e27e:	4c15      	ldr	r4, [pc, #84]	@ (801e2d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e280:	7823      	ldrb	r3, [r4, #0]
 801e282:	f3bf 8f5b 	dmb	ish
 801e286:	07da      	lsls	r2, r3, #31
 801e288:	4605      	mov	r5, r0
 801e28a:	d40b      	bmi.n	801e2a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e28c:	4620      	mov	r0, r4
 801e28e:	f007 fbd2 	bl	8025a36 <__cxa_guard_acquire>
 801e292:	b138      	cbz	r0, 801e2a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e294:	4620      	mov	r0, r4
 801e296:	f007 fbda 	bl	8025a4e <__cxa_guard_release>
 801e29a:	4a0f      	ldr	r2, [pc, #60]	@ (801e2d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e29c:	490f      	ldr	r1, [pc, #60]	@ (801e2dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e29e:	4810      	ldr	r0, [pc, #64]	@ (801e2e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e2a0:	f007 fbc2 	bl	8025a28 <__aeabi_atexit>
 801e2a4:	4c0f      	ldr	r4, [pc, #60]	@ (801e2e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e2a6:	7823      	ldrb	r3, [r4, #0]
 801e2a8:	f3bf 8f5b 	dmb	ish
 801e2ac:	07db      	lsls	r3, r3, #31
 801e2ae:	d40b      	bmi.n	801e2c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e2b0:	4620      	mov	r0, r4
 801e2b2:	f007 fbc0 	bl	8025a36 <__cxa_guard_acquire>
 801e2b6:	b138      	cbz	r0, 801e2c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e2b8:	4620      	mov	r0, r4
 801e2ba:	f007 fbc8 	bl	8025a4e <__cxa_guard_release>
 801e2be:	4a06      	ldr	r2, [pc, #24]	@ (801e2d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e2c0:	4909      	ldr	r1, [pc, #36]	@ (801e2e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e2c2:	480a      	ldr	r0, [pc, #40]	@ (801e2ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e2c4:	f007 fbb0 	bl	8025a28 <__aeabi_atexit>
 801e2c8:	4b05      	ldr	r3, [pc, #20]	@ (801e2e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e2ca:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801e2cc:	4b07      	ldr	r3, [pc, #28]	@ (801e2ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e2ce:	672b      	str	r3, [r5, #112]	@ 0x70
 801e2d0:	bd38      	pop	{r3, r4, r5, pc}
 801e2d2:	bf00      	nop
 801e2d4:	20002ff0 	.word	0x20002ff0
 801e2d8:	20000000 	.word	0x20000000
 801e2dc:	08019dc3 	.word	0x08019dc3
 801e2e0:	20000038 	.word	0x20000038
 801e2e4:	20002ff4 	.word	0x20002ff4
 801e2e8:	08019dc1 	.word	0x08019dc1
 801e2ec:	2000003c 	.word	0x2000003c

0801e2f0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e2f0:	b510      	push	{r4, lr}
 801e2f2:	4604      	mov	r4, r0
 801e2f4:	f7ff ff88 	bl	801e208 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e2f8:	4620      	mov	r0, r4
 801e2fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e2fe:	f7ff bfbd 	b.w	801e27c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e302 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e302:	b510      	push	{r4, lr}
 801e304:	4604      	mov	r4, r0
 801e306:	f7ff fff3 	bl	801e2f0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e30a:	4620      	mov	r0, r4
 801e30c:	f7ff ff72 	bl	801e1f4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e310:	4620      	mov	r0, r4
 801e312:	f7ff fdf9 	bl	801df08 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e316:	4620      	mov	r0, r4
 801e318:	f7ff fcfa 	bl	801dd10 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e31c:	4620      	mov	r0, r4
 801e31e:	f7ff fd75 	bl	801de0c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e322:	4620      	mov	r0, r4
 801e324:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e328:	f7ff bee0 	b.w	801e0ec <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e32c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e32c:	b538      	push	{r3, r4, r5, lr}
 801e32e:	4c0b      	ldr	r4, [pc, #44]	@ (801e35c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e330:	7823      	ldrb	r3, [r4, #0]
 801e332:	f3bf 8f5b 	dmb	ish
 801e336:	07db      	lsls	r3, r3, #31
 801e338:	4605      	mov	r5, r0
 801e33a:	d40b      	bmi.n	801e354 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e33c:	4620      	mov	r0, r4
 801e33e:	f007 fb7a 	bl	8025a36 <__cxa_guard_acquire>
 801e342:	b138      	cbz	r0, 801e354 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e344:	4620      	mov	r0, r4
 801e346:	f007 fb82 	bl	8025a4e <__cxa_guard_release>
 801e34a:	4a05      	ldr	r2, [pc, #20]	@ (801e360 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e34c:	4905      	ldr	r1, [pc, #20]	@ (801e364 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e34e:	4806      	ldr	r0, [pc, #24]	@ (801e368 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e350:	f007 fb6a 	bl	8025a28 <__aeabi_atexit>
 801e354:	4b04      	ldr	r3, [pc, #16]	@ (801e368 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e356:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801e358:	bd38      	pop	{r3, r4, r5, pc}
 801e35a:	bf00      	nop
 801e35c:	20002fe4 	.word	0x20002fe4
 801e360:	20000000 	.word	0x20000000
 801e364:	08019dbb 	.word	0x08019dbb
 801e368:	20000030 	.word	0x20000030

0801e36c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e36c:	b538      	push	{r3, r4, r5, lr}
 801e36e:	4c0b      	ldr	r4, [pc, #44]	@ (801e39c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e370:	7823      	ldrb	r3, [r4, #0]
 801e372:	f3bf 8f5b 	dmb	ish
 801e376:	07db      	lsls	r3, r3, #31
 801e378:	4605      	mov	r5, r0
 801e37a:	d40b      	bmi.n	801e394 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e37c:	4620      	mov	r0, r4
 801e37e:	f007 fb5a 	bl	8025a36 <__cxa_guard_acquire>
 801e382:	b138      	cbz	r0, 801e394 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e384:	4620      	mov	r0, r4
 801e386:	f007 fb62 	bl	8025a4e <__cxa_guard_release>
 801e38a:	4a05      	ldr	r2, [pc, #20]	@ (801e3a0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e38c:	4905      	ldr	r1, [pc, #20]	@ (801e3a4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e38e:	4806      	ldr	r0, [pc, #24]	@ (801e3a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e390:	f007 fb4a 	bl	8025a28 <__aeabi_atexit>
 801e394:	4b04      	ldr	r3, [pc, #16]	@ (801e3a8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e396:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801e39a:	bd38      	pop	{r3, r4, r5, pc}
 801e39c:	20002fe8 	.word	0x20002fe8
 801e3a0:	20000000 	.word	0x20000000
 801e3a4:	08019db9 	.word	0x08019db9
 801e3a8:	20000034 	.word	0x20000034

0801e3ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e3ac:	b570      	push	{r4, r5, r6, lr}
 801e3ae:	4d0d      	ldr	r5, [pc, #52]	@ (801e3e4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e3b0:	4c0d      	ldr	r4, [pc, #52]	@ (801e3e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e3b2:	782b      	ldrb	r3, [r5, #0]
 801e3b4:	f3bf 8f5b 	dmb	ish
 801e3b8:	f013 0f01 	tst.w	r3, #1
 801e3bc:	4606      	mov	r6, r0
 801e3be:	d10d      	bne.n	801e3dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e3c0:	4628      	mov	r0, r5
 801e3c2:	f007 fb38 	bl	8025a36 <__cxa_guard_acquire>
 801e3c6:	b148      	cbz	r0, 801e3dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e3c8:	4b08      	ldr	r3, [pc, #32]	@ (801e3ec <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e3ca:	6023      	str	r3, [r4, #0]
 801e3cc:	4628      	mov	r0, r5
 801e3ce:	f007 fb3e 	bl	8025a4e <__cxa_guard_release>
 801e3d2:	4a07      	ldr	r2, [pc, #28]	@ (801e3f0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e3d4:	4907      	ldr	r1, [pc, #28]	@ (801e3f4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e3d6:	4620      	mov	r0, r4
 801e3d8:	f007 fb26 	bl	8025a28 <__aeabi_atexit>
 801e3dc:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801e3e0:	bd70      	pop	{r4, r5, r6, pc}
 801e3e2:	bf00      	nop
 801e3e4:	20002fec 	.word	0x20002fec
 801e3e8:	20003164 	.word	0x20003164
 801e3ec:	080295a8 	.word	0x080295a8
 801e3f0:	20000000 	.word	0x20000000
 801e3f4:	08019db7 	.word	0x08019db7

0801e3f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e3f8:	b510      	push	{r4, lr}
 801e3fa:	4604      	mov	r4, r0
 801e3fc:	f7ff ff96 	bl	801e32c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e400:	4620      	mov	r0, r4
 801e402:	f7ff ffb3 	bl	801e36c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e406:	4620      	mov	r0, r4
 801e408:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e40c:	f7ff bfce 	b.w	801e3ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e410 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801e410:	b570      	push	{r4, r5, r6, lr}
 801e412:	4d0d      	ldr	r5, [pc, #52]	@ (801e448 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801e414:	4c0d      	ldr	r4, [pc, #52]	@ (801e44c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801e416:	782b      	ldrb	r3, [r5, #0]
 801e418:	f3bf 8f5b 	dmb	ish
 801e41c:	f013 0f01 	tst.w	r3, #1
 801e420:	4606      	mov	r6, r0
 801e422:	d10d      	bne.n	801e440 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e424:	4628      	mov	r0, r5
 801e426:	f007 fb06 	bl	8025a36 <__cxa_guard_acquire>
 801e42a:	b148      	cbz	r0, 801e440 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e42c:	4b08      	ldr	r3, [pc, #32]	@ (801e450 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801e42e:	6023      	str	r3, [r4, #0]
 801e430:	4628      	mov	r0, r5
 801e432:	f007 fb0c 	bl	8025a4e <__cxa_guard_release>
 801e436:	4a07      	ldr	r2, [pc, #28]	@ (801e454 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801e438:	4907      	ldr	r1, [pc, #28]	@ (801e458 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801e43a:	4620      	mov	r0, r4
 801e43c:	f007 faf4 	bl	8025a28 <__aeabi_atexit>
 801e440:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801e444:	bd70      	pop	{r4, r5, r6, pc}
 801e446:	bf00      	nop
 801e448:	20002fe0 	.word	0x20002fe0
 801e44c:	20003060 	.word	0x20003060
 801e450:	080295c4 	.word	0x080295c4
 801e454:	20000000 	.word	0x20000000
 801e458:	08019db5 	.word	0x08019db5

0801e45c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e45c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e460:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801e464:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801e468:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801e46c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801e470:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801e474:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801e478:	8808      	ldrh	r0, [r1, #0]
 801e47a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e47e:	2d00      	cmp	r5, #0
 801e480:	eb02 0a0c 	add.w	sl, r2, ip
 801e484:	f2c0 80b0 	blt.w	801e5e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e488:	45ab      	cmp	fp, r5
 801e48a:	f340 80ad 	ble.w	801e5e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e48e:	2c00      	cmp	r4, #0
 801e490:	f2c0 80a8 	blt.w	801e5e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e494:	45a6      	cmp	lr, r4
 801e496:	f340 80a5 	ble.w	801e5e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e49a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e49e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e4a2:	1c62      	adds	r2, r4, #1
 801e4a4:	f100 80a3 	bmi.w	801e5ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e4a8:	4596      	cmp	lr, r2
 801e4aa:	f340 80a0 	ble.w	801e5ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e4ae:	f1b9 0f00 	cmp.w	r9, #0
 801e4b2:	f000 809c 	beq.w	801e5ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e4b6:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e4ba:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e4be:	3501      	adds	r5, #1
 801e4c0:	f100 8099 	bmi.w	801e5f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e4c4:	45ab      	cmp	fp, r5
 801e4c6:	f340 8096 	ble.w	801e5f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e4ca:	2f00      	cmp	r7, #0
 801e4cc:	f000 8093 	beq.w	801e5f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e4d0:	2c00      	cmp	r4, #0
 801e4d2:	f2c0 808e 	blt.w	801e5f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e4d6:	45a6      	cmp	lr, r4
 801e4d8:	f340 808b 	ble.w	801e5f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e4dc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e4e0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e4e4:	3401      	adds	r4, #1
 801e4e6:	f100 8089 	bmi.w	801e5fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e4ea:	45a6      	cmp	lr, r4
 801e4ec:	f340 8086 	ble.w	801e5fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e4f0:	f1b9 0f00 	cmp.w	r9, #0
 801e4f4:	f000 8082 	beq.w	801e5fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e4f8:	44d6      	add	lr, sl
 801e4fa:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e4fe:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e502:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e506:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e50a:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801e50e:	fb19 fe07 	smulbb	lr, r9, r7
 801e512:	ea44 0808 	orr.w	r8, r4, r8
 801e516:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e51a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e51e:	f1c7 0210 	rsb	r2, r7, #16
 801e522:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e526:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e52a:	ea44 0c0c 	orr.w	ip, r4, ip
 801e52e:	eba2 0209 	sub.w	r2, r2, r9
 801e532:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e536:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e53a:	fb04 f40c 	mul.w	r4, r4, ip
 801e53e:	fb02 4808 	mla	r8, r2, r8, r4
 801e542:	041a      	lsls	r2, r3, #16
 801e544:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e548:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e54c:	4313      	orrs	r3, r2
 801e54e:	042a      	lsls	r2, r5, #16
 801e550:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e554:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e558:	fb0e 8303 	mla	r3, lr, r3, r8
 801e55c:	432a      	orrs	r2, r5
 801e55e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e562:	fb07 3202 	mla	r2, r7, r2, r3
 801e566:	0d53      	lsrs	r3, r2, #21
 801e568:	0952      	lsrs	r2, r2, #5
 801e56a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e56e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e572:	431a      	orrs	r2, r3
 801e574:	b293      	uxth	r3, r2
 801e576:	b2b4      	uxth	r4, r6
 801e578:	1202      	asrs	r2, r0, #8
 801e57a:	43f6      	mvns	r6, r6
 801e57c:	b2f6      	uxtb	r6, r6
 801e57e:	121d      	asrs	r5, r3, #8
 801e580:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e584:	fb12 f206 	smulbb	r2, r2, r6
 801e588:	10c7      	asrs	r7, r0, #3
 801e58a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e58e:	00c0      	lsls	r0, r0, #3
 801e590:	fb05 2504 	mla	r5, r5, r4, r2
 801e594:	b2c0      	uxtb	r0, r0
 801e596:	10da      	asrs	r2, r3, #3
 801e598:	00db      	lsls	r3, r3, #3
 801e59a:	b2db      	uxtb	r3, r3
 801e59c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e5a0:	fb10 f006 	smulbb	r0, r0, r6
 801e5a4:	b2ad      	uxth	r5, r5
 801e5a6:	fb03 0004 	mla	r0, r3, r4, r0
 801e5aa:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e5ae:	fb17 f706 	smulbb	r7, r7, r6
 801e5b2:	b280      	uxth	r0, r0
 801e5b4:	1c6b      	adds	r3, r5, #1
 801e5b6:	fb02 7204 	mla	r2, r2, r4, r7
 801e5ba:	b292      	uxth	r2, r2
 801e5bc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e5c0:	1c43      	adds	r3, r0, #1
 801e5c2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e5c6:	1c50      	adds	r0, r2, #1
 801e5c8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e5cc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e5d0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e5d4:	0952      	lsrs	r2, r2, #5
 801e5d6:	432b      	orrs	r3, r5
 801e5d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e5dc:	4313      	orrs	r3, r2
 801e5de:	800b      	strh	r3, [r1, #0]
 801e5e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e5e4:	4680      	mov	r8, r0
 801e5e6:	e75c      	b.n	801e4a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e5e8:	4684      	mov	ip, r0
 801e5ea:	4680      	mov	r8, r0
 801e5ec:	e767      	b.n	801e4be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e5ee:	4684      	mov	ip, r0
 801e5f0:	e765      	b.n	801e4be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e5f2:	4605      	mov	r5, r0
 801e5f4:	e776      	b.n	801e4e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e5f6:	4603      	mov	r3, r0
 801e5f8:	4605      	mov	r5, r0
 801e5fa:	e782      	b.n	801e502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e5fc:	4603      	mov	r3, r0
 801e5fe:	e780      	b.n	801e502 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e604:	b099      	sub	sp, #100	@ 0x64
 801e606:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801e60a:	9215      	str	r2, [sp, #84]	@ 0x54
 801e60c:	9309      	str	r3, [sp, #36]	@ 0x24
 801e60e:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801e610:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801e614:	930d      	str	r3, [sp, #52]	@ 0x34
 801e616:	910c      	str	r1, [sp, #48]	@ 0x30
 801e618:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801e61c:	9016      	str	r0, [sp, #88]	@ 0x58
 801e61e:	6850      	ldr	r0, [r2, #4]
 801e620:	6812      	ldr	r2, [r2, #0]
 801e622:	fb00 1303 	mla	r3, r0, r3, r1
 801e626:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e62a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e62c:	681b      	ldr	r3, [r3, #0]
 801e62e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e630:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e632:	685e      	ldr	r6, [r3, #4]
 801e634:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e636:	43db      	mvns	r3, r3
 801e638:	b2db      	uxtb	r3, r3
 801e63a:	3604      	adds	r6, #4
 801e63c:	930a      	str	r3, [sp, #40]	@ 0x28
 801e63e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e640:	2b00      	cmp	r3, #0
 801e642:	dc03      	bgt.n	801e64c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e644:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e646:	2b00      	cmp	r3, #0
 801e648:	f340 8225 	ble.w	801ea96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e64c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e64e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e652:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e656:	1e48      	subs	r0, r1, #1
 801e658:	1e57      	subs	r7, r2, #1
 801e65a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e65c:	2b00      	cmp	r3, #0
 801e65e:	f340 80e3 	ble.w	801e828 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e662:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e666:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e66a:	d406      	bmi.n	801e67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e66c:	4584      	cmp	ip, r0
 801e66e:	da04      	bge.n	801e67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e670:	2b00      	cmp	r3, #0
 801e672:	db02      	blt.n	801e67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e674:	42bb      	cmp	r3, r7
 801e676:	f2c0 80d8 	blt.w	801e82a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e67a:	f11c 0c01 	adds.w	ip, ip, #1
 801e67e:	f100 80c9 	bmi.w	801e814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e682:	4561      	cmp	r1, ip
 801e684:	f2c0 80c6 	blt.w	801e814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e688:	3301      	adds	r3, #1
 801e68a:	f100 80c3 	bmi.w	801e814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e68e:	429a      	cmp	r2, r3
 801e690:	f2c0 80c0 	blt.w	801e814 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e694:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e698:	4647      	mov	r7, r8
 801e69a:	f1bb 0f00 	cmp.w	fp, #0
 801e69e:	f340 80e3 	ble.w	801e868 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e6a2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801e6a4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e6a6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e6aa:	689b      	ldr	r3, [r3, #8]
 801e6ac:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e6b0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e6b4:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e6b8:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e6bc:	f100 8121 	bmi.w	801e902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e6c0:	f103 39ff 	add.w	r9, r3, #4294967295
 801e6c4:	454a      	cmp	r2, r9
 801e6c6:	f280 811c 	bge.w	801e902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e6ca:	f1bc 0f00 	cmp.w	ip, #0
 801e6ce:	f2c0 8118 	blt.w	801e902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e6d2:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e6d6:	45cc      	cmp	ip, r9
 801e6d8:	f280 8113 	bge.w	801e902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e6dc:	b21b      	sxth	r3, r3
 801e6de:	fb0c 2203 	mla	r2, ip, r3, r2
 801e6e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e6e4:	eb04 0902 	add.w	r9, r4, r2
 801e6e8:	5ca2      	ldrb	r2, [r4, r2]
 801e6ea:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e6ee:	2800      	cmp	r0, #0
 801e6f0:	f000 80fe 	beq.w	801e8f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e6f4:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e6f8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e6fc:	9211      	str	r2, [sp, #68]	@ 0x44
 801e6fe:	b151      	cbz	r1, 801e716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e700:	eb09 0203 	add.w	r2, r9, r3
 801e704:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e708:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e70c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e70e:	7853      	ldrb	r3, [r2, #1]
 801e710:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e714:	9312      	str	r3, [sp, #72]	@ 0x48
 801e716:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e718:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e71a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e71e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e722:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e726:	ea4c 0c03 	orr.w	ip, ip, r3
 801e72a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e72c:	041b      	lsls	r3, r3, #16
 801e72e:	fb10 f201 	smulbb	r2, r0, r1
 801e732:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e736:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e73a:	10d2      	asrs	r2, r2, #3
 801e73c:	4323      	orrs	r3, r4
 801e73e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e742:	4353      	muls	r3, r2
 801e744:	fb09 330c 	mla	r3, r9, ip, r3
 801e748:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e74c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e750:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e754:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e758:	f1c1 0c10 	rsb	ip, r1, #16
 801e75c:	ebac 0c00 	sub.w	ip, ip, r0
 801e760:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e764:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e768:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e76a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e76c:	0418      	lsls	r0, r3, #16
 801e76e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e772:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e776:	4318      	orrs	r0, r3
 801e778:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e77c:	fb02 c200 	mla	r2, r2, r0, ip
 801e780:	0d53      	lsrs	r3, r2, #21
 801e782:	0952      	lsrs	r2, r2, #5
 801e784:	8838      	ldrh	r0, [r7, #0]
 801e786:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e78a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e78e:	431a      	orrs	r2, r3
 801e790:	b292      	uxth	r2, r2
 801e792:	1201      	asrs	r1, r0, #8
 801e794:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801e798:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e79c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e7a0:	fb11 f104 	smulbb	r1, r1, r4
 801e7a4:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e7a8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e7ac:	00c0      	lsls	r0, r0, #3
 801e7ae:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e7b2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e7b6:	10d1      	asrs	r1, r2, #3
 801e7b8:	b2c0      	uxtb	r0, r0
 801e7ba:	00d2      	lsls	r2, r2, #3
 801e7bc:	b2d2      	uxtb	r2, r2
 801e7be:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e7c2:	fb1e fe04 	smulbb	lr, lr, r4
 801e7c6:	fb10 f004 	smulbb	r0, r0, r4
 801e7ca:	fa1f fc8c 	uxth.w	ip, ip
 801e7ce:	fb01 e103 	mla	r1, r1, r3, lr
 801e7d2:	fb02 0303 	mla	r3, r2, r3, r0
 801e7d6:	b29a      	uxth	r2, r3
 801e7d8:	f10c 0301 	add.w	r3, ip, #1
 801e7dc:	b289      	uxth	r1, r1
 801e7de:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e7e2:	1c53      	adds	r3, r2, #1
 801e7e4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e7e8:	1c4a      	adds	r2, r1, #1
 801e7ea:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e7ee:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e7f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e7f6:	0949      	lsrs	r1, r1, #5
 801e7f8:	ea43 030c 	orr.w	r3, r3, ip
 801e7fc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e800:	430b      	orrs	r3, r1
 801e802:	803b      	strh	r3, [r7, #0]
 801e804:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e806:	449a      	add	sl, r3
 801e808:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e80a:	3702      	adds	r7, #2
 801e80c:	441d      	add	r5, r3
 801e80e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e812:	e742      	b.n	801e69a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e814:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e816:	449a      	add	sl, r3
 801e818:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e81a:	441d      	add	r5, r3
 801e81c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e81e:	3b01      	subs	r3, #1
 801e820:	9309      	str	r3, [sp, #36]	@ 0x24
 801e822:	f108 0802 	add.w	r8, r8, #2
 801e826:	e718      	b.n	801e65a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e828:	d023      	beq.n	801e872 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e82a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e82c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801e82e:	3b01      	subs	r3, #1
 801e830:	fb00 a003 	mla	r0, r0, r3, sl
 801e834:	1400      	asrs	r0, r0, #16
 801e836:	f53f af2d 	bmi.w	801e694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e83a:	3901      	subs	r1, #1
 801e83c:	4288      	cmp	r0, r1
 801e83e:	f6bf af29 	bge.w	801e694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e842:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801e844:	fb01 5303 	mla	r3, r1, r3, r5
 801e848:	141b      	asrs	r3, r3, #16
 801e84a:	f53f af23 	bmi.w	801e694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e84e:	3a01      	subs	r2, #1
 801e850:	4293      	cmp	r3, r2
 801e852:	f6bf af1f 	bge.w	801e694 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e856:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801e85a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801e85e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e862:	f1be 0f00 	cmp.w	lr, #0
 801e866:	dc6c      	bgt.n	801e942 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e868:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e86a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e86e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e872:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e874:	2b00      	cmp	r3, #0
 801e876:	f340 810e 	ble.w	801ea96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e87a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e87e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e882:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e886:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e888:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e88c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e890:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e894:	eef0 6a62 	vmov.f32	s13, s5
 801e898:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e89c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e8a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e8a4:	ee16 aa90 	vmov	sl, s13
 801e8a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e8ac:	eef0 6a43 	vmov.f32	s13, s6
 801e8b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e8b4:	ee12 2a90 	vmov	r2, s5
 801e8b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e8bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8c0:	ee13 2a10 	vmov	r2, s6
 801e8c4:	9325      	str	r3, [sp, #148]	@ 0x94
 801e8c6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e8c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e8cc:	9326      	str	r3, [sp, #152]	@ 0x98
 801e8ce:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e8d0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801e8d2:	3b01      	subs	r3, #1
 801e8d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e8d8:	930c      	str	r3, [sp, #48]	@ 0x30
 801e8da:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e8dc:	bf08      	it	eq
 801e8de:	4613      	moveq	r3, r2
 801e8e0:	ee16 5a90 	vmov	r5, s13
 801e8e4:	9309      	str	r3, [sp, #36]	@ 0x24
 801e8e6:	eeb0 3a67 	vmov.f32	s6, s15
 801e8ea:	eef0 2a47 	vmov.f32	s5, s14
 801e8ee:	e6a6      	b.n	801e63e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e8f0:	2900      	cmp	r1, #0
 801e8f2:	f43f af10 	beq.w	801e716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e8f6:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e8fa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e8fe:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e900:	e709      	b.n	801e716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e902:	f112 0901 	adds.w	r9, r2, #1
 801e906:	f53f af7d 	bmi.w	801e804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e90a:	454b      	cmp	r3, r9
 801e90c:	f6ff af7a 	blt.w	801e804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e910:	f11c 0901 	adds.w	r9, ip, #1
 801e914:	f53f af76 	bmi.w	801e804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e918:	45ce      	cmp	lr, r9
 801e91a:	f6ff af73 	blt.w	801e804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e91e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e920:	9202      	str	r2, [sp, #8]
 801e922:	b21b      	sxth	r3, r3
 801e924:	fa0f f28e 	sxth.w	r2, lr
 801e928:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e92c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e930:	9201      	str	r2, [sp, #4]
 801e932:	9300      	str	r3, [sp, #0]
 801e934:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e936:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801e938:	4633      	mov	r3, r6
 801e93a:	4639      	mov	r1, r7
 801e93c:	f7ff fd8e 	bl	801e45c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e940:	e760      	b.n	801e804 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e942:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e944:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e946:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e94a:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e94e:	1429      	asrs	r1, r5, #16
 801e950:	fb03 2101 	mla	r1, r3, r1, r2
 801e954:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e956:	440a      	add	r2, r1
 801e958:	5c61      	ldrb	r1, [r4, r1]
 801e95a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801e95e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e962:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801e966:	f1bc 0f00 	cmp.w	ip, #0
 801e96a:	f000 808c 	beq.w	801ea86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801e96e:	7857      	ldrb	r7, [r2, #1]
 801e970:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801e974:	9413      	str	r4, [sp, #76]	@ 0x4c
 801e976:	b140      	cbz	r0, 801e98a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e978:	18d7      	adds	r7, r2, r3
 801e97a:	5cd3      	ldrb	r3, [r2, r3]
 801e97c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e980:	9310      	str	r3, [sp, #64]	@ 0x40
 801e982:	787b      	ldrb	r3, [r7, #1]
 801e984:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e988:	9314      	str	r3, [sp, #80]	@ 0x50
 801e98a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e98c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e98e:	fb1c f200 	smulbb	r2, ip, r0
 801e992:	041f      	lsls	r7, r3, #16
 801e994:	10d2      	asrs	r2, r2, #3
 801e996:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e99a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801e99e:	431f      	orrs	r7, r3
 801e9a0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801e9a4:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e9a6:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801e9a8:	041b      	lsls	r3, r3, #16
 801e9aa:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801e9ae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e9b2:	ea43 030b 	orr.w	r3, r3, fp
 801e9b6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e9b8:	4353      	muls	r3, r2
 801e9ba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e9be:	fb04 3707 	mla	r7, r4, r7, r3
 801e9c2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e9c6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801e9ca:	ea43 0b01 	orr.w	fp, r3, r1
 801e9ce:	f1c0 0110 	rsb	r1, r0, #16
 801e9d2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e9d4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e9d6:	eba1 0c0c 	sub.w	ip, r1, ip
 801e9da:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e9de:	fb0c 770b 	mla	r7, ip, fp, r7
 801e9e2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e9e6:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801e9ea:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e9ee:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801e9f2:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e9f6:	fb02 770c 	mla	r7, r2, ip, r7
 801e9fa:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e9fc:	0d79      	lsrs	r1, r7, #21
 801e9fe:	097f      	lsrs	r7, r7, #5
 801ea00:	8812      	ldrh	r2, [r2, #0]
 801ea02:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ea06:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ea0a:	430f      	orrs	r7, r1
 801ea0c:	b2bb      	uxth	r3, r7
 801ea0e:	1211      	asrs	r1, r2, #8
 801ea10:	1218      	asrs	r0, r3, #8
 801ea12:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ea16:	fb11 f104 	smulbb	r1, r1, r4
 801ea1a:	10d7      	asrs	r7, r2, #3
 801ea1c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ea20:	00d2      	lsls	r2, r2, #3
 801ea22:	fb00 1009 	mla	r0, r0, r9, r1
 801ea26:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ea2a:	10d9      	asrs	r1, r3, #3
 801ea2c:	b2d2      	uxtb	r2, r2
 801ea2e:	00db      	lsls	r3, r3, #3
 801ea30:	fb17 f704 	smulbb	r7, r7, r4
 801ea34:	fb12 f204 	smulbb	r2, r2, r4
 801ea38:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ea3c:	b2db      	uxtb	r3, r3
 801ea3e:	b280      	uxth	r0, r0
 801ea40:	fb01 7109 	mla	r1, r1, r9, r7
 801ea44:	fb03 2309 	mla	r3, r3, r9, r2
 801ea48:	b29b      	uxth	r3, r3
 801ea4a:	b289      	uxth	r1, r1
 801ea4c:	1c42      	adds	r2, r0, #1
 801ea4e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ea52:	1c4f      	adds	r7, r1, #1
 801ea54:	1c5a      	adds	r2, r3, #1
 801ea56:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ea5a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ea5e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ea62:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ea66:	0949      	lsrs	r1, r1, #5
 801ea68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ea6a:	4310      	orrs	r0, r2
 801ea6c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ea70:	4308      	orrs	r0, r1
 801ea72:	f823 0b02 	strh.w	r0, [r3], #2
 801ea76:	930e      	str	r3, [sp, #56]	@ 0x38
 801ea78:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ea7a:	449a      	add	sl, r3
 801ea7c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ea7e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ea82:	441d      	add	r5, r3
 801ea84:	e6ed      	b.n	801e862 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ea86:	2800      	cmp	r0, #0
 801ea88:	f43f af7f 	beq.w	801e98a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ea8c:	5cd3      	ldrb	r3, [r2, r3]
 801ea8e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ea92:	9310      	str	r3, [sp, #64]	@ 0x40
 801ea94:	e779      	b.n	801e98a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ea96:	b019      	add	sp, #100	@ 0x64
 801ea98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ea9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ea9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801eaa0:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801eaa4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801eaa8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801eaac:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801eab0:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801eab4:	8808      	ldrh	r0, [r1, #0]
 801eab6:	fb08 470e 	mla	r7, r8, lr, r4
 801eaba:	f1b8 0f00 	cmp.w	r8, #0
 801eabe:	eb02 0907 	add.w	r9, r2, r7
 801eac2:	db67      	blt.n	801eb94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eac4:	45c2      	cmp	sl, r8
 801eac6:	dd65      	ble.n	801eb94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801eac8:	2c00      	cmp	r4, #0
 801eaca:	db61      	blt.n	801eb90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801eacc:	45a6      	cmp	lr, r4
 801eace:	dd5f      	ble.n	801eb90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ead0:	5dd2      	ldrb	r2, [r2, r7]
 801ead2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ead6:	1c62      	adds	r2, r4, #1
 801ead8:	d45f      	bmi.n	801eb9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eada:	4596      	cmp	lr, r2
 801eadc:	dd5d      	ble.n	801eb9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eade:	2d00      	cmp	r5, #0
 801eae0:	d05b      	beq.n	801eb9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eae2:	f899 2001 	ldrb.w	r2, [r9, #1]
 801eae6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801eaea:	f118 0801 	adds.w	r8, r8, #1
 801eaee:	d458      	bmi.n	801eba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eaf0:	45c2      	cmp	sl, r8
 801eaf2:	dd56      	ble.n	801eba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eaf4:	2e00      	cmp	r6, #0
 801eaf6:	d054      	beq.n	801eba2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801eaf8:	2c00      	cmp	r4, #0
 801eafa:	db50      	blt.n	801eb9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801eafc:	45a6      	cmp	lr, r4
 801eafe:	dd4e      	ble.n	801eb9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801eb00:	f819 200e 	ldrb.w	r2, [r9, lr]
 801eb04:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801eb08:	3401      	adds	r4, #1
 801eb0a:	d407      	bmi.n	801eb1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801eb0c:	45a6      	cmp	lr, r4
 801eb0e:	dd05      	ble.n	801eb1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801eb10:	b125      	cbz	r5, 801eb1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801eb12:	44ce      	add	lr, r9
 801eb14:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801eb18:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801eb1c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801eb20:	fb15 f406 	smulbb	r4, r5, r6
 801eb24:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eb28:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801eb2c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801eb30:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801eb34:	ea43 0c0c 	orr.w	ip, r3, ip
 801eb38:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801eb3c:	f1c6 0310 	rsb	r3, r6, #16
 801eb40:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801eb44:	1b5b      	subs	r3, r3, r5
 801eb46:	ea4e 0707 	orr.w	r7, lr, r7
 801eb4a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801eb4e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801eb52:	437d      	muls	r5, r7
 801eb54:	fb03 5c0c 	mla	ip, r3, ip, r5
 801eb58:	0403      	lsls	r3, r0, #16
 801eb5a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eb5e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eb62:	4318      	orrs	r0, r3
 801eb64:	0413      	lsls	r3, r2, #16
 801eb66:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eb6a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eb6e:	4313      	orrs	r3, r2
 801eb70:	fb04 c000 	mla	r0, r4, r0, ip
 801eb74:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801eb78:	fb06 0003 	mla	r0, r6, r3, r0
 801eb7c:	0d43      	lsrs	r3, r0, #21
 801eb7e:	0940      	lsrs	r0, r0, #5
 801eb80:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eb84:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801eb88:	4318      	orrs	r0, r3
 801eb8a:	8008      	strh	r0, [r1, #0]
 801eb8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801eb90:	4684      	mov	ip, r0
 801eb92:	e7a0      	b.n	801ead6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801eb94:	4607      	mov	r7, r0
 801eb96:	4684      	mov	ip, r0
 801eb98:	e7a7      	b.n	801eaea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801eb9a:	4607      	mov	r7, r0
 801eb9c:	e7a5      	b.n	801eaea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801eb9e:	4602      	mov	r2, r0
 801eba0:	e7b2      	b.n	801eb08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801eba2:	4602      	mov	r2, r0
 801eba4:	e7ba      	b.n	801eb1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801eba6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eba6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ebaa:	b093      	sub	sp, #76	@ 0x4c
 801ebac:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ebb0:	920f      	str	r2, [sp, #60]	@ 0x3c
 801ebb2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ebb4:	9108      	str	r1, [sp, #32]
 801ebb6:	9306      	str	r3, [sp, #24]
 801ebb8:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ebbc:	9010      	str	r0, [sp, #64]	@ 0x40
 801ebbe:	6850      	ldr	r0, [r2, #4]
 801ebc0:	6812      	ldr	r2, [r2, #0]
 801ebc2:	fb00 1303 	mla	r3, r0, r3, r1
 801ebc6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ebca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ebcc:	681b      	ldr	r3, [r3, #0]
 801ebce:	9307      	str	r3, [sp, #28]
 801ebd0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ebd2:	685f      	ldr	r7, [r3, #4]
 801ebd4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ebd8:	3704      	adds	r7, #4
 801ebda:	9b08      	ldr	r3, [sp, #32]
 801ebdc:	2b00      	cmp	r3, #0
 801ebde:	dc03      	bgt.n	801ebe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ebe0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ebe2:	2b00      	cmp	r3, #0
 801ebe4:	f340 81b2 	ble.w	801ef4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ebe8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ebea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ebee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ebf2:	1e48      	subs	r0, r1, #1
 801ebf4:	f102 3cff 	add.w	ip, r2, #4294967295
 801ebf8:	9b06      	ldr	r3, [sp, #24]
 801ebfa:	2b00      	cmp	r3, #0
 801ebfc:	f340 80a9 	ble.w	801ed52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ec00:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ec04:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ec08:	d406      	bmi.n	801ec18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec0a:	4586      	cmp	lr, r0
 801ec0c:	da04      	bge.n	801ec18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec0e:	2b00      	cmp	r3, #0
 801ec10:	db02      	blt.n	801ec18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801ec12:	4563      	cmp	r3, ip
 801ec14:	f2c0 809e 	blt.w	801ed54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ec18:	f11e 0e01 	adds.w	lr, lr, #1
 801ec1c:	f100 808f 	bmi.w	801ed3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec20:	4571      	cmp	r1, lr
 801ec22:	f2c0 808c 	blt.w	801ed3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec26:	3301      	adds	r3, #1
 801ec28:	f100 8089 	bmi.w	801ed3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec2c:	429a      	cmp	r2, r3
 801ec2e:	f2c0 8086 	blt.w	801ed3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ec32:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ec36:	46c8      	mov	r8, r9
 801ec38:	f1bb 0f00 	cmp.w	fp, #0
 801ec3c:	f340 80a6 	ble.w	801ed8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ec40:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801ec42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ec44:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ec48:	689b      	ldr	r3, [r3, #8]
 801ec4a:	1422      	asrs	r2, r4, #16
 801ec4c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ec50:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ec54:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ec58:	f100 80e3 	bmi.w	801ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ec5c:	f103 3aff 	add.w	sl, r3, #4294967295
 801ec60:	4552      	cmp	r2, sl
 801ec62:	f280 80de 	bge.w	801ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ec66:	f1bc 0f00 	cmp.w	ip, #0
 801ec6a:	f2c0 80da 	blt.w	801ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ec6e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ec72:	45d4      	cmp	ip, sl
 801ec74:	f280 80d5 	bge.w	801ee22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ec78:	b21b      	sxth	r3, r3
 801ec7a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ec7e:	9d07      	ldr	r5, [sp, #28]
 801ec80:	eb05 0a02 	add.w	sl, r5, r2
 801ec84:	5caa      	ldrb	r2, [r5, r2]
 801ec86:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ec8a:	2800      	cmp	r0, #0
 801ec8c:	f000 80c0 	beq.w	801ee10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ec90:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ec94:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ec98:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ec9a:	b151      	cbz	r1, 801ecb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ec9c:	eb0a 0203 	add.w	r2, sl, r3
 801eca0:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eca4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eca8:	9309      	str	r3, [sp, #36]	@ 0x24
 801ecaa:	7853      	ldrb	r3, [r2, #1]
 801ecac:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ecb0:	930c      	str	r3, [sp, #48]	@ 0x30
 801ecb2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ecb4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ecb6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ecba:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ecbe:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ecc2:	ea4c 0c03 	orr.w	ip, ip, r3
 801ecc6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ecc8:	041b      	lsls	r3, r3, #16
 801ecca:	fb10 f201 	smulbb	r2, r0, r1
 801ecce:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ecd2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ecd6:	10d2      	asrs	r2, r2, #3
 801ecd8:	432b      	orrs	r3, r5
 801ecda:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ecde:	4353      	muls	r3, r2
 801ece0:	fb0a 330c 	mla	r3, sl, ip, r3
 801ece4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ece8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ecec:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ecf0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ecf4:	f1c1 0c10 	rsb	ip, r1, #16
 801ecf8:	ebac 0c00 	sub.w	ip, ip, r0
 801ecfc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ed00:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ed04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ed06:	0418      	lsls	r0, r3, #16
 801ed08:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ed0c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ed10:	4318      	orrs	r0, r3
 801ed12:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ed16:	fb02 c200 	mla	r2, r2, r0, ip
 801ed1a:	0d53      	lsrs	r3, r2, #21
 801ed1c:	0952      	lsrs	r2, r2, #5
 801ed1e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ed22:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ed26:	431a      	orrs	r2, r3
 801ed28:	f8a8 2000 	strh.w	r2, [r8]
 801ed2c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ed2e:	441c      	add	r4, r3
 801ed30:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ed32:	f108 0802 	add.w	r8, r8, #2
 801ed36:	441e      	add	r6, r3
 801ed38:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ed3c:	e77c      	b.n	801ec38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ed3e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ed40:	441c      	add	r4, r3
 801ed42:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ed44:	441e      	add	r6, r3
 801ed46:	9b06      	ldr	r3, [sp, #24]
 801ed48:	3b01      	subs	r3, #1
 801ed4a:	9306      	str	r3, [sp, #24]
 801ed4c:	f109 0902 	add.w	r9, r9, #2
 801ed50:	e752      	b.n	801ebf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ed52:	d020      	beq.n	801ed96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801ed54:	9b06      	ldr	r3, [sp, #24]
 801ed56:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ed58:	3b01      	subs	r3, #1
 801ed5a:	fb00 4003 	mla	r0, r0, r3, r4
 801ed5e:	1400      	asrs	r0, r0, #16
 801ed60:	f53f af67 	bmi.w	801ec32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ed64:	3901      	subs	r1, #1
 801ed66:	4288      	cmp	r0, r1
 801ed68:	f6bf af63 	bge.w	801ec32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ed6c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801ed6e:	fb01 6303 	mla	r3, r1, r3, r6
 801ed72:	141b      	asrs	r3, r3, #16
 801ed74:	f53f af5d 	bmi.w	801ec32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ed78:	3a01      	subs	r2, #1
 801ed7a:	4293      	cmp	r3, r2
 801ed7c:	f6bf af59 	bge.w	801ec32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801ed80:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801ed84:	46ca      	mov	sl, r9
 801ed86:	f1b8 0f00 	cmp.w	r8, #0
 801ed8a:	dc67      	bgt.n	801ee5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801ed8c:	9b06      	ldr	r3, [sp, #24]
 801ed8e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ed92:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ed96:	9b08      	ldr	r3, [sp, #32]
 801ed98:	2b00      	cmp	r3, #0
 801ed9a:	f340 80d7 	ble.w	801ef4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ed9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eda2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eda6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801edaa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801edac:	ee31 1a05 	vadd.f32	s2, s2, s10
 801edb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801edb4:	eeb0 6a62 	vmov.f32	s12, s5
 801edb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801edbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801edc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801edc4:	ee16 4a10 	vmov	r4, s12
 801edc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801edcc:	eeb0 6a43 	vmov.f32	s12, s6
 801edd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edd4:	ee12 2a90 	vmov	r2, s5
 801edd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eddc:	fb92 f3f3 	sdiv	r3, r2, r3
 801ede0:	ee13 2a10 	vmov	r2, s6
 801ede4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ede6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ede8:	fb92 f3f3 	sdiv	r3, r2, r3
 801edec:	9320      	str	r3, [sp, #128]	@ 0x80
 801edee:	9b08      	ldr	r3, [sp, #32]
 801edf0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801edf2:	3b01      	subs	r3, #1
 801edf4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801edf8:	9308      	str	r3, [sp, #32]
 801edfa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801edfc:	bf08      	it	eq
 801edfe:	4613      	moveq	r3, r2
 801ee00:	ee16 6a10 	vmov	r6, s12
 801ee04:	9306      	str	r3, [sp, #24]
 801ee06:	eeb0 3a67 	vmov.f32	s6, s15
 801ee0a:	eef0 2a47 	vmov.f32	s5, s14
 801ee0e:	e6e4      	b.n	801ebda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ee10:	2900      	cmp	r1, #0
 801ee12:	f43f af4e 	beq.w	801ecb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ee16:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ee1a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ee1e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ee20:	e747      	b.n	801ecb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ee22:	f112 0a01 	adds.w	sl, r2, #1
 801ee26:	d481      	bmi.n	801ed2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee28:	4553      	cmp	r3, sl
 801ee2a:	f6ff af7f 	blt.w	801ed2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee2e:	f11c 0a01 	adds.w	sl, ip, #1
 801ee32:	f53f af7b 	bmi.w	801ed2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee36:	45d6      	cmp	lr, sl
 801ee38:	f6ff af78 	blt.w	801ed2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee3c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ee40:	b21b      	sxth	r3, r3
 801ee42:	fa0f f28e 	sxth.w	r2, lr
 801ee46:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ee4a:	9201      	str	r2, [sp, #4]
 801ee4c:	9300      	str	r3, [sp, #0]
 801ee4e:	9a07      	ldr	r2, [sp, #28]
 801ee50:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801ee52:	463b      	mov	r3, r7
 801ee54:	4641      	mov	r1, r8
 801ee56:	f7ff fe21 	bl	801ea9c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ee5a:	e767      	b.n	801ed2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ee5c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ee5e:	9d07      	ldr	r5, [sp, #28]
 801ee60:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ee64:	1422      	asrs	r2, r4, #16
 801ee66:	1431      	asrs	r1, r6, #16
 801ee68:	fb03 2101 	mla	r1, r3, r1, r2
 801ee6c:	9a07      	ldr	r2, [sp, #28]
 801ee6e:	440a      	add	r2, r1
 801ee70:	5c69      	ldrb	r1, [r5, r1]
 801ee72:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ee76:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ee7a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ee7e:	f1be 0f00 	cmp.w	lr, #0
 801ee82:	d05c      	beq.n	801ef3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ee84:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ee88:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ee8c:	950d      	str	r5, [sp, #52]	@ 0x34
 801ee8e:	b150      	cbz	r0, 801eea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ee90:	eb02 0c03 	add.w	ip, r2, r3
 801ee94:	5cd3      	ldrb	r3, [r2, r3]
 801ee96:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ee9a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ee9c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801eea0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801eea4:	930e      	str	r3, [sp, #56]	@ 0x38
 801eea6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801eea8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801eeaa:	fb1e f200 	smulbb	r2, lr, r0
 801eeae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801eeb2:	10d2      	asrs	r2, r2, #3
 801eeb4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801eeb8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801eebc:	ea4c 0c03 	orr.w	ip, ip, r3
 801eec0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801eec4:	9311      	str	r3, [sp, #68]	@ 0x44
 801eec6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801eec8:	041b      	lsls	r3, r3, #16
 801eeca:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801eece:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801eed2:	ea43 030b 	orr.w	r3, r3, fp
 801eed6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801eed8:	4353      	muls	r3, r2
 801eeda:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801eede:	fb05 3c0c 	mla	ip, r5, ip, r3
 801eee2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801eee6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801eeea:	ea43 0b01 	orr.w	fp, r3, r1
 801eeee:	f1c0 0110 	rsb	r1, r0, #16
 801eef2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801eef4:	eba1 0e0e 	sub.w	lr, r1, lr
 801eef8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801eefc:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ef00:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ef04:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801ef08:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801ef0c:	ea4b 0e0e 	orr.w	lr, fp, lr
 801ef10:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ef14:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ef18:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ef1c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ef20:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ef24:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ef28:	ea43 0c0c 	orr.w	ip, r3, ip
 801ef2c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ef2e:	f82a cb02 	strh.w	ip, [sl], #2
 801ef32:	441c      	add	r4, r3
 801ef34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ef36:	f108 38ff 	add.w	r8, r8, #4294967295
 801ef3a:	441e      	add	r6, r3
 801ef3c:	e723      	b.n	801ed86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ef3e:	2800      	cmp	r0, #0
 801ef40:	d0b1      	beq.n	801eea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ef42:	5cd3      	ldrb	r3, [r2, r3]
 801ef44:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef48:	930a      	str	r3, [sp, #40]	@ 0x28
 801ef4a:	e7ac      	b.n	801eea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ef4c:	b013      	add	sp, #76	@ 0x4c
 801ef4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ef52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801ef52:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef56:	880d      	ldrh	r5, [r1, #0]
 801ef58:	b087      	sub	sp, #28
 801ef5a:	10ef      	asrs	r7, r5, #3
 801ef5c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ef60:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ef64:	00ed      	lsls	r5, r5, #3
 801ef66:	9701      	str	r7, [sp, #4]
 801ef68:	b2ed      	uxtb	r5, r5
 801ef6a:	9502      	str	r5, [sp, #8]
 801ef6c:	9d01      	ldr	r5, [sp, #4]
 801ef6e:	9103      	str	r1, [sp, #12]
 801ef70:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801ef74:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801ef78:	9902      	ldr	r1, [sp, #8]
 801ef7a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801ef7e:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801ef82:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801ef86:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801ef8a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801ef8e:	022d      	lsls	r5, r5, #8
 801ef90:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801ef94:	fb06 0709 	mla	r7, r6, r9, r0
 801ef98:	430d      	orrs	r5, r1
 801ef9a:	2e00      	cmp	r6, #0
 801ef9c:	eb02 0c07 	add.w	ip, r2, r7
 801efa0:	9505      	str	r5, [sp, #20]
 801efa2:	f2c0 80b6 	blt.w	801f112 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801efa6:	45b3      	cmp	fp, r6
 801efa8:	f340 80b3 	ble.w	801f112 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801efac:	2800      	cmp	r0, #0
 801efae:	f2c0 80ae 	blt.w	801f10e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801efb2:	4581      	cmp	r9, r0
 801efb4:	f340 80ab 	ble.w	801f10e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801efb8:	5dd7      	ldrb	r7, [r2, r7]
 801efba:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801efbe:	441f      	add	r7, r3
 801efc0:	1c42      	adds	r2, r0, #1
 801efc2:	f100 80a9 	bmi.w	801f118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801efc6:	4591      	cmp	r9, r2
 801efc8:	f340 80a6 	ble.w	801f118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801efcc:	2c00      	cmp	r4, #0
 801efce:	f000 80a3 	beq.w	801f118 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801efd2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801efd6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801efda:	441d      	add	r5, r3
 801efdc:	3601      	adds	r6, #1
 801efde:	f100 809f 	bmi.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801efe2:	45b3      	cmp	fp, r6
 801efe4:	f340 809c 	ble.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801efe8:	f1be 0f00 	cmp.w	lr, #0
 801efec:	f000 8098 	beq.w	801f120 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801eff0:	2800      	cmp	r0, #0
 801eff2:	f2c0 8093 	blt.w	801f11c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801eff6:	4581      	cmp	r9, r0
 801eff8:	f340 8090 	ble.w	801f11c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801effc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f000:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f004:	441e      	add	r6, r3
 801f006:	3001      	adds	r0, #1
 801f008:	f100 808d 	bmi.w	801f126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f00c:	4581      	cmp	r9, r0
 801f00e:	f340 808a 	ble.w	801f126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f012:	2c00      	cmp	r4, #0
 801f014:	f000 8087 	beq.w	801f126 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f018:	44e1      	add	r9, ip
 801f01a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f01e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f022:	4413      	add	r3, r2
 801f024:	b2a4      	uxth	r4, r4
 801f026:	fa1f fe8e 	uxth.w	lr, lr
 801f02a:	fb04 fb0e 	mul.w	fp, r4, lr
 801f02e:	0124      	lsls	r4, r4, #4
 801f030:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f034:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801f038:	eba4 040b 	sub.w	r4, r4, fp
 801f03c:	fa1f f08e 	uxth.w	r0, lr
 801f040:	b2a2      	uxth	r2, r4
 801f042:	78ac      	ldrb	r4, [r5, #2]
 801f044:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f048:	9901      	ldr	r1, [sp, #4]
 801f04a:	eba9 0900 	sub.w	r9, r9, r0
 801f04e:	fa1f f989 	uxth.w	r9, r9
 801f052:	4354      	muls	r4, r2
 801f054:	fb09 440c 	mla	r4, r9, ip, r4
 801f058:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f05c:	fb00 440c 	mla	r4, r0, ip, r4
 801f060:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f064:	fa1f fe88 	uxth.w	lr, r8
 801f068:	ea6f 0808 	mvn.w	r8, r8
 801f06c:	fa5f f888 	uxtb.w	r8, r8
 801f070:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f074:	fb1a fa08 	smulbb	sl, sl, r8
 801f078:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f07c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f080:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f084:	787c      	ldrb	r4, [r7, #1]
 801f086:	782d      	ldrb	r5, [r5, #0]
 801f088:	783f      	ldrb	r7, [r7, #0]
 801f08a:	fb02 fa0a 	mul.w	sl, r2, sl
 801f08e:	fb09 aa04 	mla	sl, r9, r4, sl
 801f092:	7874      	ldrb	r4, [r6, #1]
 801f094:	436a      	muls	r2, r5
 801f096:	7835      	ldrb	r5, [r6, #0]
 801f098:	fb00 aa04 	mla	sl, r0, r4, sl
 801f09c:	fb09 2207 	mla	r2, r9, r7, r2
 801f0a0:	785c      	ldrb	r4, [r3, #1]
 801f0a2:	781b      	ldrb	r3, [r3, #0]
 801f0a4:	fb00 2005 	mla	r0, r0, r5, r2
 801f0a8:	fb0b a404 	mla	r4, fp, r4, sl
 801f0ac:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f0b0:	9b02      	ldr	r3, [sp, #8]
 801f0b2:	fb11 fa08 	smulbb	sl, r1, r8
 801f0b6:	fa1f fc8c 	uxth.w	ip, ip
 801f0ba:	fb13 f808 	smulbb	r8, r3, r8
 801f0be:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f0c2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f0c6:	fb04 a40e 	mla	r4, r4, lr, sl
 801f0ca:	f10c 0301 	add.w	r3, ip, #1
 801f0ce:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f0d2:	fa1f fe8e 	uxth.w	lr, lr
 801f0d6:	b2a4      	uxth	r4, r4
 801f0d8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f0dc:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801f0e0:	f104 0a01 	add.w	sl, r4, #1
 801f0e4:	f10e 0c01 	add.w	ip, lr, #1
 801f0e8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f0ec:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f0f0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f0f4:	0964      	lsrs	r4, r4, #5
 801f0f6:	ea4c 0c03 	orr.w	ip, ip, r3
 801f0fa:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f0fe:	9b03      	ldr	r3, [sp, #12]
 801f100:	ea4c 0c04 	orr.w	ip, ip, r4
 801f104:	f8a3 c000 	strh.w	ip, [r3]
 801f108:	b007      	add	sp, #28
 801f10a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f10e:	af05      	add	r7, sp, #20
 801f110:	e756      	b.n	801efc0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f112:	ad05      	add	r5, sp, #20
 801f114:	462f      	mov	r7, r5
 801f116:	e761      	b.n	801efdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f118:	ad05      	add	r5, sp, #20
 801f11a:	e75f      	b.n	801efdc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f11c:	ae05      	add	r6, sp, #20
 801f11e:	e772      	b.n	801f006 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f120:	ab05      	add	r3, sp, #20
 801f122:	461e      	mov	r6, r3
 801f124:	e77e      	b.n	801f024 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f126:	ab05      	add	r3, sp, #20
 801f128:	e77c      	b.n	801f024 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f12a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f12a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f12e:	b095      	sub	sp, #84	@ 0x54
 801f130:	9212      	str	r2, [sp, #72]	@ 0x48
 801f132:	9309      	str	r3, [sp, #36]	@ 0x24
 801f134:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f136:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801f13a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f13c:	910e      	str	r1, [sp, #56]	@ 0x38
 801f13e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801f142:	9013      	str	r0, [sp, #76]	@ 0x4c
 801f144:	6850      	ldr	r0, [r2, #4]
 801f146:	6812      	ldr	r2, [r2, #0]
 801f148:	fb00 1303 	mla	r3, r0, r3, r1
 801f14c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f150:	930a      	str	r3, [sp, #40]	@ 0x28
 801f152:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f154:	681b      	ldr	r3, [r3, #0]
 801f156:	930d      	str	r3, [sp, #52]	@ 0x34
 801f158:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f15a:	685c      	ldr	r4, [r3, #4]
 801f15c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f15e:	43db      	mvns	r3, r3
 801f160:	b2db      	uxtb	r3, r3
 801f162:	3404      	adds	r4, #4
 801f164:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f166:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f168:	2b00      	cmp	r3, #0
 801f16a:	dc03      	bgt.n	801f174 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f16c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f16e:	2b00      	cmp	r3, #0
 801f170:	f340 8255 	ble.w	801f61e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f174:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f176:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f17a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f17e:	1e48      	subs	r0, r1, #1
 801f180:	1e55      	subs	r5, r2, #1
 801f182:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f184:	2b00      	cmp	r3, #0
 801f186:	f340 80f9 	ble.w	801f37c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f18a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801f18c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f18e:	1436      	asrs	r6, r6, #16
 801f190:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f194:	d406      	bmi.n	801f1a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f196:	4286      	cmp	r6, r0
 801f198:	da04      	bge.n	801f1a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f19a:	2b00      	cmp	r3, #0
 801f19c:	db02      	blt.n	801f1a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f19e:	42ab      	cmp	r3, r5
 801f1a0:	f2c0 80ed 	blt.w	801f37e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f1a4:	3601      	adds	r6, #1
 801f1a6:	f100 80da 	bmi.w	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f1aa:	42b1      	cmp	r1, r6
 801f1ac:	f2c0 80d7 	blt.w	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f1b0:	3301      	adds	r3, #1
 801f1b2:	f100 80d4 	bmi.w	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f1b6:	429a      	cmp	r2, r3
 801f1b8:	f2c0 80d1 	blt.w	801f35e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f1bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f1be:	9311      	str	r3, [sp, #68]	@ 0x44
 801f1c0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f1c2:	930c      	str	r3, [sp, #48]	@ 0x30
 801f1c4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f1c6:	2b00      	cmp	r3, #0
 801f1c8:	f340 80fa 	ble.w	801f3c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f1cc:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801f1ce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f1d0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f1d2:	68c6      	ldr	r6, [r0, #12]
 801f1d4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f1d6:	141d      	asrs	r5, r3, #16
 801f1d8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f1dc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f1de:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801f1e0:	1400      	asrs	r0, r0, #16
 801f1e2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f1e6:	6892      	ldr	r2, [r2, #8]
 801f1e8:	f100 813e 	bmi.w	801f468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f1ec:	1e57      	subs	r7, r2, #1
 801f1ee:	42b8      	cmp	r0, r7
 801f1f0:	f280 813a 	bge.w	801f468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f1f4:	2d00      	cmp	r5, #0
 801f1f6:	f2c0 8137 	blt.w	801f468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f1fa:	1e77      	subs	r7, r6, #1
 801f1fc:	42bd      	cmp	r5, r7
 801f1fe:	f280 8133 	bge.w	801f468 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f202:	b212      	sxth	r2, r2
 801f204:	fb05 0002 	mla	r0, r5, r2, r0
 801f208:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f20a:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f20e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f212:	182e      	adds	r6, r5, r0
 801f214:	eb04 050a 	add.w	r5, r4, sl
 801f218:	2b00      	cmp	r3, #0
 801f21a:	f000 8117 	beq.w	801f44c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f21e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f222:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f226:	44a4      	add	ip, r4
 801f228:	2900      	cmp	r1, #0
 801f22a:	f000 8117 	beq.w	801f45c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f22e:	18b0      	adds	r0, r6, r2
 801f230:	5cb2      	ldrb	r2, [r6, r2]
 801f232:	7840      	ldrb	r0, [r0, #1]
 801f234:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f238:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f23c:	4422      	add	r2, r4
 801f23e:	4420      	add	r0, r4
 801f240:	b29b      	uxth	r3, r3
 801f242:	b289      	uxth	r1, r1
 801f244:	fb03 f901 	mul.w	r9, r3, r1
 801f248:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f24c:	011b      	lsls	r3, r3, #4
 801f24e:	b289      	uxth	r1, r1
 801f250:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f254:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f258:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f25a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f25e:	f8b6 e000 	ldrh.w	lr, [r6]
 801f262:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801f266:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801f26a:	eba3 0309 	sub.w	r3, r3, r9
 801f26e:	b29b      	uxth	r3, r3
 801f270:	eba8 0801 	sub.w	r8, r8, r1
 801f274:	fa1f f888 	uxth.w	r8, r8
 801f278:	435f      	muls	r7, r3
 801f27a:	fb08 770b 	mla	r7, r8, fp, r7
 801f27e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f282:	9310      	str	r3, [sp, #64]	@ 0x40
 801f284:	fb01 770b 	mla	r7, r1, fp, r7
 801f288:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f28c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f28e:	fb09 770b 	mla	r7, r9, fp, r7
 801f292:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f296:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f29a:	fb1b fb03 	smulbb	fp, fp, r3
 801f29e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f2a2:	fb07 b706 	mla	r7, r7, r6, fp
 801f2a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f2a8:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f2ac:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f2b0:	f89c c000 	ldrb.w	ip, [ip]
 801f2b4:	435d      	muls	r5, r3
 801f2b6:	fb08 550b 	mla	r5, r8, fp, r5
 801f2ba:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f2be:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f2c0:	fb01 550b 	mla	r5, r1, fp, r5
 801f2c4:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f2c8:	fb09 550b 	mla	r5, r9, fp, r5
 801f2cc:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f2d0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f2d4:	fb1b fb03 	smulbb	fp, fp, r3
 801f2d8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f2da:	fb03 f30c 	mul.w	r3, r3, ip
 801f2de:	f892 c000 	ldrb.w	ip, [r2]
 801f2e2:	fb08 330a 	mla	r3, r8, sl, r3
 801f2e6:	fb01 330c 	mla	r3, r1, ip, r3
 801f2ea:	f890 c000 	ldrb.w	ip, [r0]
 801f2ee:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f2f2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f2f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f2f8:	fa5f fe8e 	uxtb.w	lr, lr
 801f2fc:	b2bf      	uxth	r7, r7
 801f2fe:	fb1e fe03 	smulbb	lr, lr, r3
 801f302:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f306:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f30a:	fb05 b506 	mla	r5, r5, r6, fp
 801f30e:	1c7b      	adds	r3, r7, #1
 801f310:	fb0c e606 	mla	r6, ip, r6, lr
 801f314:	b2ad      	uxth	r5, r5
 801f316:	b2b6      	uxth	r6, r6
 801f318:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f31c:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801f320:	f105 0b01 	add.w	fp, r5, #1
 801f324:	1c77      	adds	r7, r6, #1
 801f326:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f32a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f32e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f332:	096d      	lsrs	r5, r5, #5
 801f334:	431f      	orrs	r7, r3
 801f336:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f33a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f33c:	433d      	orrs	r5, r7
 801f33e:	801d      	strh	r5, [r3, #0]
 801f340:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f342:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f344:	3302      	adds	r3, #2
 801f346:	930c      	str	r3, [sp, #48]	@ 0x30
 801f348:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f34a:	4413      	add	r3, r2
 801f34c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f34e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f350:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f352:	4413      	add	r3, r2
 801f354:	9320      	str	r3, [sp, #128]	@ 0x80
 801f356:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f358:	3b01      	subs	r3, #1
 801f35a:	9311      	str	r3, [sp, #68]	@ 0x44
 801f35c:	e732      	b.n	801f1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f35e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f360:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f362:	4433      	add	r3, r6
 801f364:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f366:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801f368:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f36a:	4433      	add	r3, r6
 801f36c:	9320      	str	r3, [sp, #128]	@ 0x80
 801f36e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f370:	3b01      	subs	r3, #1
 801f372:	9309      	str	r3, [sp, #36]	@ 0x24
 801f374:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f376:	3302      	adds	r3, #2
 801f378:	930a      	str	r3, [sp, #40]	@ 0x28
 801f37a:	e702      	b.n	801f182 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f37c:	d027      	beq.n	801f3ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f37e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f380:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801f382:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f384:	3b01      	subs	r3, #1
 801f386:	fb00 5003 	mla	r0, r0, r3, r5
 801f38a:	1400      	asrs	r0, r0, #16
 801f38c:	f53f af16 	bmi.w	801f1bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f390:	3901      	subs	r1, #1
 801f392:	4288      	cmp	r0, r1
 801f394:	f6bf af12 	bge.w	801f1bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f398:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801f39a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f39c:	fb01 0303 	mla	r3, r1, r3, r0
 801f3a0:	141b      	asrs	r3, r3, #16
 801f3a2:	f53f af0b 	bmi.w	801f1bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3a6:	3a01      	subs	r2, #1
 801f3a8:	4293      	cmp	r3, r2
 801f3aa:	f6bf af07 	bge.w	801f1bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f3ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f3b0:	9311      	str	r3, [sp, #68]	@ 0x44
 801f3b2:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801f3b6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3b8:	930c      	str	r3, [sp, #48]	@ 0x30
 801f3ba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f3bc:	2b00      	cmp	r3, #0
 801f3be:	dc70      	bgt.n	801f4a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f3c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f3c2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f3c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f3c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f3cc:	930a      	str	r3, [sp, #40]	@ 0x28
 801f3ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f3d0:	2b00      	cmp	r3, #0
 801f3d2:	f340 8124 	ble.w	801f61e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f3d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f3da:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f3de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f3e2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f3e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f3e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f3ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f3f0:	eef0 6a62 	vmov.f32	s13, s5
 801f3f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f3f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f3fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f400:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801f404:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f408:	eef0 6a43 	vmov.f32	s13, s6
 801f40c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f410:	ee12 2a90 	vmov	r2, s5
 801f414:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f418:	fb92 f3f3 	sdiv	r3, r2, r3
 801f41c:	ee13 2a10 	vmov	r2, s6
 801f420:	9321      	str	r3, [sp, #132]	@ 0x84
 801f422:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f424:	fb92 f3f3 	sdiv	r3, r2, r3
 801f428:	9322      	str	r3, [sp, #136]	@ 0x88
 801f42a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f42c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f42e:	3b01      	subs	r3, #1
 801f430:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f434:	930e      	str	r3, [sp, #56]	@ 0x38
 801f436:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f438:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801f43c:	bf08      	it	eq
 801f43e:	4613      	moveq	r3, r2
 801f440:	9309      	str	r3, [sp, #36]	@ 0x24
 801f442:	eeb0 3a67 	vmov.f32	s6, s15
 801f446:	eef0 2a47 	vmov.f32	s5, s14
 801f44a:	e68c      	b.n	801f166 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f44c:	b149      	cbz	r1, 801f462 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f44e:	5cb2      	ldrb	r2, [r6, r2]
 801f450:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f454:	4422      	add	r2, r4
 801f456:	4628      	mov	r0, r5
 801f458:	46ac      	mov	ip, r5
 801f45a:	e6f1      	b.n	801f240 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f45c:	4628      	mov	r0, r5
 801f45e:	462a      	mov	r2, r5
 801f460:	e6ee      	b.n	801f240 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f462:	4628      	mov	r0, r5
 801f464:	462a      	mov	r2, r5
 801f466:	e7f7      	b.n	801f458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f468:	1c47      	adds	r7, r0, #1
 801f46a:	f53f af69 	bmi.w	801f340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f46e:	42ba      	cmp	r2, r7
 801f470:	f6ff af66 	blt.w	801f340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f474:	1c6f      	adds	r7, r5, #1
 801f476:	f53f af63 	bmi.w	801f340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f47a:	42be      	cmp	r6, r7
 801f47c:	f6ff af60 	blt.w	801f340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f480:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f482:	9002      	str	r0, [sp, #8]
 801f484:	b236      	sxth	r6, r6
 801f486:	b212      	sxth	r2, r2
 801f488:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f48c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f490:	9200      	str	r2, [sp, #0]
 801f492:	9601      	str	r6, [sp, #4]
 801f494:	4623      	mov	r3, r4
 801f496:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801f49a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f49c:	f7ff fd59 	bl	801ef52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f4a0:	e74e      	b.n	801f340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f4a2:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f4a4:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f4a6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f4a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f4aa:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f4ae:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801f4b0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f4b4:	142d      	asrs	r5, r5, #16
 801f4b6:	1400      	asrs	r0, r0, #16
 801f4b8:	fb02 5000 	mla	r0, r2, r0, r5
 801f4bc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f4be:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f4c2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f4c6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f4ca:	182e      	adds	r6, r5, r0
 801f4cc:	eb04 0509 	add.w	r5, r4, r9
 801f4d0:	2b00      	cmp	r3, #0
 801f4d2:	f000 8096 	beq.w	801f602 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f4d6:	7877      	ldrb	r7, [r6, #1]
 801f4d8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f4dc:	4427      	add	r7, r4
 801f4de:	2900      	cmp	r1, #0
 801f4e0:	f000 8097 	beq.w	801f612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f4e4:	18b0      	adds	r0, r6, r2
 801f4e6:	5cb2      	ldrb	r2, [r6, r2]
 801f4e8:	7840      	ldrb	r0, [r0, #1]
 801f4ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f4ee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f4f2:	4422      	add	r2, r4
 801f4f4:	4420      	add	r0, r4
 801f4f6:	b29b      	uxth	r3, r3
 801f4f8:	b289      	uxth	r1, r1
 801f4fa:	fb03 f801 	mul.w	r8, r3, r1
 801f4fe:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f500:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f504:	f8b6 c000 	ldrh.w	ip, [r6]
 801f508:	78be      	ldrb	r6, [r7, #2]
 801f50a:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f50e:	011b      	lsls	r3, r3, #4
 801f510:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f514:	b289      	uxth	r1, r1
 801f516:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f51a:	eba3 0308 	sub.w	r3, r3, r8
 801f51e:	b29b      	uxth	r3, r3
 801f520:	ebae 0e01 	sub.w	lr, lr, r1
 801f524:	fa1f fe8e 	uxth.w	lr, lr
 801f528:	435e      	muls	r6, r3
 801f52a:	fb0e 660b 	mla	r6, lr, fp, r6
 801f52e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f532:	9310      	str	r3, [sp, #64]	@ 0x40
 801f534:	fb01 660b 	mla	r6, r1, fp, r6
 801f538:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f53c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f53e:	fb08 660b 	mla	r6, r8, fp, r6
 801f542:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f546:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f54a:	fb1b fb03 	smulbb	fp, fp, r3
 801f54e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f552:	fb06 b60a 	mla	r6, r6, sl, fp
 801f556:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f558:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f55c:	787d      	ldrb	r5, [r7, #1]
 801f55e:	783f      	ldrb	r7, [r7, #0]
 801f560:	435d      	muls	r5, r3
 801f562:	fb0e 550b 	mla	r5, lr, fp, r5
 801f566:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f56a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f56c:	fb01 550b 	mla	r5, r1, fp, r5
 801f570:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f574:	fb08 550b 	mla	r5, r8, fp, r5
 801f578:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f57c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f580:	fb1b fb03 	smulbb	fp, fp, r3
 801f584:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f586:	437b      	muls	r3, r7
 801f588:	7817      	ldrb	r7, [r2, #0]
 801f58a:	fb0e 3309 	mla	r3, lr, r9, r3
 801f58e:	fb01 3307 	mla	r3, r1, r7, r3
 801f592:	7807      	ldrb	r7, [r0, #0]
 801f594:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f598:	fb08 3707 	mla	r7, r8, r7, r3
 801f59c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f59e:	fa5f fc8c 	uxtb.w	ip, ip
 801f5a2:	fb1c fc03 	smulbb	ip, ip, r3
 801f5a6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f5aa:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f5ae:	fb05 b50a 	mla	r5, r5, sl, fp
 801f5b2:	fb07 c70a 	mla	r7, r7, sl, ip
 801f5b6:	b2b6      	uxth	r6, r6
 801f5b8:	b2ad      	uxth	r5, r5
 801f5ba:	b2bf      	uxth	r7, r7
 801f5bc:	1c73      	adds	r3, r6, #1
 801f5be:	1c7a      	adds	r2, r7, #1
 801f5c0:	f105 0b01 	add.w	fp, r5, #1
 801f5c4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f5c8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f5cc:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f5d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f5d4:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801f5d8:	096d      	lsrs	r5, r5, #5
 801f5da:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f5dc:	4316      	orrs	r6, r2
 801f5de:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f5e2:	432e      	orrs	r6, r5
 801f5e4:	f823 6b02 	strh.w	r6, [r3], #2
 801f5e8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f5ea:	930c      	str	r3, [sp, #48]	@ 0x30
 801f5ec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f5ee:	4413      	add	r3, r2
 801f5f0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f5f2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f5f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f5f6:	4413      	add	r3, r2
 801f5f8:	9320      	str	r3, [sp, #128]	@ 0x80
 801f5fa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f5fc:	3b01      	subs	r3, #1
 801f5fe:	9311      	str	r3, [sp, #68]	@ 0x44
 801f600:	e6db      	b.n	801f3ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f602:	b149      	cbz	r1, 801f618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f604:	5cb2      	ldrb	r2, [r6, r2]
 801f606:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f60a:	4422      	add	r2, r4
 801f60c:	4628      	mov	r0, r5
 801f60e:	462f      	mov	r7, r5
 801f610:	e771      	b.n	801f4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f612:	4628      	mov	r0, r5
 801f614:	462a      	mov	r2, r5
 801f616:	e76e      	b.n	801f4f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f618:	4628      	mov	r0, r5
 801f61a:	462a      	mov	r2, r5
 801f61c:	e7f7      	b.n	801f60e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f61e:	b015      	add	sp, #84	@ 0x54
 801f620:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f624:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f628:	880f      	ldrh	r7, [r1, #0]
 801f62a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801f62e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801f632:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801f636:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f63a:	023c      	lsls	r4, r7, #8
 801f63c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801f640:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801f644:	017c      	lsls	r4, r7, #5
 801f646:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801f64a:	00ff      	lsls	r7, r7, #3
 801f64c:	ea4b 0404 	orr.w	r4, fp, r4
 801f650:	b2ff      	uxtb	r7, r7
 801f652:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f656:	4327      	orrs	r7, r4
 801f658:	2d00      	cmp	r5, #0
 801f65a:	eb02 080a 	add.w	r8, r2, sl
 801f65e:	9701      	str	r7, [sp, #4]
 801f660:	db7e      	blt.n	801f760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f662:	45a9      	cmp	r9, r5
 801f664:	dd7c      	ble.n	801f760 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f666:	f1bc 0f00 	cmp.w	ip, #0
 801f66a:	db77      	blt.n	801f75c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f66c:	45e6      	cmp	lr, ip
 801f66e:	dd75      	ble.n	801f75c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f670:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f674:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f678:	441f      	add	r7, r3
 801f67a:	f11c 0201 	adds.w	r2, ip, #1
 801f67e:	d472      	bmi.n	801f766 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f680:	4596      	cmp	lr, r2
 801f682:	dd70      	ble.n	801f766 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f684:	2800      	cmp	r0, #0
 801f686:	d06e      	beq.n	801f766 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f688:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f68c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f690:	441c      	add	r4, r3
 801f692:	3501      	adds	r5, #1
 801f694:	d46b      	bmi.n	801f76e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f696:	45a9      	cmp	r9, r5
 801f698:	dd69      	ble.n	801f76e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f69a:	2e00      	cmp	r6, #0
 801f69c:	d067      	beq.n	801f76e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f69e:	f1bc 0f00 	cmp.w	ip, #0
 801f6a2:	db62      	blt.n	801f76a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f6a4:	45e6      	cmp	lr, ip
 801f6a6:	dd60      	ble.n	801f76a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f6a8:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f6ac:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f6b0:	441d      	add	r5, r3
 801f6b2:	f11c 0201 	adds.w	r2, ip, #1
 801f6b6:	d45d      	bmi.n	801f774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f6b8:	4596      	cmp	lr, r2
 801f6ba:	dd5b      	ble.n	801f774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f6bc:	2800      	cmp	r0, #0
 801f6be:	d059      	beq.n	801f774 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f6c0:	44c6      	add	lr, r8
 801f6c2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f6c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f6ca:	4413      	add	r3, r2
 801f6cc:	b280      	uxth	r0, r0
 801f6ce:	b2b2      	uxth	r2, r6
 801f6d0:	fb00 f602 	mul.w	r6, r0, r2
 801f6d4:	0100      	lsls	r0, r0, #4
 801f6d6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f6da:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801f6de:	1b80      	subs	r0, r0, r6
 801f6e0:	fa1f fc82 	uxth.w	ip, r2
 801f6e4:	b282      	uxth	r2, r0
 801f6e6:	78a0      	ldrb	r0, [r4, #2]
 801f6e8:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f6ec:	f897 9000 	ldrb.w	r9, [r7]
 801f6f0:	787f      	ldrb	r7, [r7, #1]
 801f6f2:	eba8 080c 	sub.w	r8, r8, ip
 801f6f6:	fa1f f888 	uxth.w	r8, r8
 801f6fa:	4350      	muls	r0, r2
 801f6fc:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f700:	78a8      	ldrb	r0, [r5, #2]
 801f702:	fb0c e000 	mla	r0, ip, r0, lr
 801f706:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f70a:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f70e:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801f712:	f894 e000 	ldrb.w	lr, [r4]
 801f716:	fb02 fe0e 	mul.w	lr, r2, lr
 801f71a:	fb08 e909 	mla	r9, r8, r9, lr
 801f71e:	f895 e000 	ldrb.w	lr, [r5]
 801f722:	fb0c 990e 	mla	r9, ip, lr, r9
 801f726:	f893 e000 	ldrb.w	lr, [r3]
 801f72a:	785b      	ldrb	r3, [r3, #1]
 801f72c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f730:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f734:	ea4e 0e00 	orr.w	lr, lr, r0
 801f738:	7860      	ldrb	r0, [r4, #1]
 801f73a:	4350      	muls	r0, r2
 801f73c:	786a      	ldrb	r2, [r5, #1]
 801f73e:	fb08 0007 	mla	r0, r8, r7, r0
 801f742:	fb0c 0202 	mla	r2, ip, r2, r0
 801f746:	fb06 2303 	mla	r3, r6, r3, r2
 801f74a:	095b      	lsrs	r3, r3, #5
 801f74c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f750:	ea4e 0303 	orr.w	r3, lr, r3
 801f754:	800b      	strh	r3, [r1, #0]
 801f756:	b003      	add	sp, #12
 801f758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f75c:	af01      	add	r7, sp, #4
 801f75e:	e78c      	b.n	801f67a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f760:	ac01      	add	r4, sp, #4
 801f762:	4627      	mov	r7, r4
 801f764:	e795      	b.n	801f692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f766:	ac01      	add	r4, sp, #4
 801f768:	e793      	b.n	801f692 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f76a:	ad01      	add	r5, sp, #4
 801f76c:	e7a1      	b.n	801f6b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f76e:	ab01      	add	r3, sp, #4
 801f770:	461d      	mov	r5, r3
 801f772:	e7ab      	b.n	801f6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f774:	ab01      	add	r3, sp, #4
 801f776:	e7a9      	b.n	801f6cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f77c:	b08f      	sub	sp, #60	@ 0x3c
 801f77e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801f782:	920c      	str	r2, [sp, #48]	@ 0x30
 801f784:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801f786:	910a      	str	r1, [sp, #40]	@ 0x28
 801f788:	9306      	str	r3, [sp, #24]
 801f78a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801f78e:	900d      	str	r0, [sp, #52]	@ 0x34
 801f790:	6850      	ldr	r0, [r2, #4]
 801f792:	6812      	ldr	r2, [r2, #0]
 801f794:	fb00 1303 	mla	r3, r0, r3, r1
 801f798:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f79c:	9307      	str	r3, [sp, #28]
 801f79e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f7a0:	681b      	ldr	r3, [r3, #0]
 801f7a2:	9308      	str	r3, [sp, #32]
 801f7a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f7a6:	685c      	ldr	r4, [r3, #4]
 801f7a8:	3404      	adds	r4, #4
 801f7aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f7ac:	2b00      	cmp	r3, #0
 801f7ae:	dc03      	bgt.n	801f7b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f7b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f7b2:	2b00      	cmp	r3, #0
 801f7b4:	f340 81d6 	ble.w	801fb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f7b8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f7ba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f7be:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f7c2:	1e48      	subs	r0, r1, #1
 801f7c4:	1e56      	subs	r6, r2, #1
 801f7c6:	9b06      	ldr	r3, [sp, #24]
 801f7c8:	2b00      	cmp	r3, #0
 801f7ca:	f340 80b7 	ble.w	801f93c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f7ce:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f7d2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f7d6:	d406      	bmi.n	801f7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f7d8:	4287      	cmp	r7, r0
 801f7da:	da04      	bge.n	801f7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f7dc:	2b00      	cmp	r3, #0
 801f7de:	db02      	blt.n	801f7e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f7e0:	42b3      	cmp	r3, r6
 801f7e2:	f2c0 80ac 	blt.w	801f93e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801f7e6:	3701      	adds	r7, #1
 801f7e8:	f100 809d 	bmi.w	801f926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f7ec:	42b9      	cmp	r1, r7
 801f7ee:	f2c0 809a 	blt.w	801f926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f7f2:	3301      	adds	r3, #1
 801f7f4:	f100 8097 	bmi.w	801f926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f7f8:	429a      	cmp	r2, r3
 801f7fa:	f2c0 8094 	blt.w	801f926 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f7fe:	9b06      	ldr	r3, [sp, #24]
 801f800:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f802:	9b07      	ldr	r3, [sp, #28]
 801f804:	9309      	str	r3, [sp, #36]	@ 0x24
 801f806:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f808:	2b00      	cmp	r3, #0
 801f80a:	f340 80b5 	ble.w	801f978 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801f80e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f810:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f812:	68c7      	ldr	r7, [r0, #12]
 801f814:	6892      	ldr	r2, [r2, #8]
 801f816:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f81a:	ea4f 4625 	mov.w	r6, r5, asr #16
 801f81e:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f822:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f826:	f100 80fb 	bmi.w	801fa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f82a:	f102 3cff 	add.w	ip, r2, #4294967295
 801f82e:	4560      	cmp	r0, ip
 801f830:	f280 80f6 	bge.w	801fa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f834:	2e00      	cmp	r6, #0
 801f836:	f2c0 80f3 	blt.w	801fa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f83a:	f107 3cff 	add.w	ip, r7, #4294967295
 801f83e:	4566      	cmp	r6, ip
 801f840:	f280 80ee 	bge.w	801fa20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801f844:	b212      	sxth	r2, r2
 801f846:	fb06 0002 	mla	r0, r6, r2, r0
 801f84a:	9e08      	ldr	r6, [sp, #32]
 801f84c:	1837      	adds	r7, r6, r0
 801f84e:	5c30      	ldrb	r0, [r6, r0]
 801f850:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f854:	eb04 0c08 	add.w	ip, r4, r8
 801f858:	2b00      	cmp	r3, #0
 801f85a:	f000 80d3 	beq.w	801fa04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801f85e:	787e      	ldrb	r6, [r7, #1]
 801f860:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f864:	4426      	add	r6, r4
 801f866:	2900      	cmp	r1, #0
 801f868:	f000 80d4 	beq.w	801fa14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801f86c:	18b8      	adds	r0, r7, r2
 801f86e:	5cba      	ldrb	r2, [r7, r2]
 801f870:	7840      	ldrb	r0, [r0, #1]
 801f872:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f876:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f87a:	4422      	add	r2, r4
 801f87c:	4420      	add	r0, r4
 801f87e:	b29b      	uxth	r3, r3
 801f880:	b289      	uxth	r1, r1
 801f882:	fb03 f901 	mul.w	r9, r3, r1
 801f886:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f88a:	011b      	lsls	r3, r3, #4
 801f88c:	b289      	uxth	r1, r1
 801f88e:	78b7      	ldrb	r7, [r6, #2]
 801f890:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f894:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f898:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f89c:	eba3 0309 	sub.w	r3, r3, r9
 801f8a0:	b29b      	uxth	r3, r3
 801f8a2:	ebae 0e01 	sub.w	lr, lr, r1
 801f8a6:	fa1f fe8e 	uxth.w	lr, lr
 801f8aa:	435f      	muls	r7, r3
 801f8ac:	fb0e 770a 	mla	r7, lr, sl, r7
 801f8b0:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f8b4:	fb01 770a 	mla	r7, r1, sl, r7
 801f8b8:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f8bc:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f8c0:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f8c4:	f896 8000 	ldrb.w	r8, [r6]
 801f8c8:	7876      	ldrb	r6, [r6, #1]
 801f8ca:	fb03 f808 	mul.w	r8, r3, r8
 801f8ce:	fb0e 8807 	mla	r8, lr, r7, r8
 801f8d2:	7817      	ldrb	r7, [r2, #0]
 801f8d4:	fb01 8807 	mla	r8, r1, r7, r8
 801f8d8:	7807      	ldrb	r7, [r0, #0]
 801f8da:	fb09 8707 	mla	r7, r9, r7, r8
 801f8de:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801f8e2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f8e6:	ea47 070a 	orr.w	r7, r7, sl
 801f8ea:	4373      	muls	r3, r6
 801f8ec:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f8f0:	fb0e 330c 	mla	r3, lr, ip, r3
 801f8f4:	fb01 310a 	mla	r1, r1, sl, r3
 801f8f8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f8fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f8fe:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f902:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f906:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f90a:	ea47 070a 	orr.w	r7, r7, sl
 801f90e:	801f      	strh	r7, [r3, #0]
 801f910:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f912:	3302      	adds	r3, #2
 801f914:	9309      	str	r3, [sp, #36]	@ 0x24
 801f916:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f918:	449b      	add	fp, r3
 801f91a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f91c:	441d      	add	r5, r3
 801f91e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f920:	3b01      	subs	r3, #1
 801f922:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f924:	e76f      	b.n	801f806 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f926:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f928:	449b      	add	fp, r3
 801f92a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f92c:	441d      	add	r5, r3
 801f92e:	9b06      	ldr	r3, [sp, #24]
 801f930:	3b01      	subs	r3, #1
 801f932:	9306      	str	r3, [sp, #24]
 801f934:	9b07      	ldr	r3, [sp, #28]
 801f936:	3302      	adds	r3, #2
 801f938:	9307      	str	r3, [sp, #28]
 801f93a:	e744      	b.n	801f7c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f93c:	d023      	beq.n	801f986 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801f93e:	9b06      	ldr	r3, [sp, #24]
 801f940:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f942:	3b01      	subs	r3, #1
 801f944:	fb00 b003 	mla	r0, r0, r3, fp
 801f948:	1400      	asrs	r0, r0, #16
 801f94a:	f53f af58 	bmi.w	801f7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f94e:	3901      	subs	r1, #1
 801f950:	4288      	cmp	r0, r1
 801f952:	f6bf af54 	bge.w	801f7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f956:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801f958:	fb01 5303 	mla	r3, r1, r3, r5
 801f95c:	141b      	asrs	r3, r3, #16
 801f95e:	f53f af4e 	bmi.w	801f7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f962:	3a01      	subs	r2, #1
 801f964:	4293      	cmp	r3, r2
 801f966:	f6bf af4a 	bge.w	801f7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f96a:	9b06      	ldr	r3, [sp, #24]
 801f96c:	9309      	str	r3, [sp, #36]	@ 0x24
 801f96e:	9b07      	ldr	r3, [sp, #28]
 801f970:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f972:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f974:	2b00      	cmp	r3, #0
 801f976:	dc70      	bgt.n	801fa5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801f978:	9b06      	ldr	r3, [sp, #24]
 801f97a:	9a07      	ldr	r2, [sp, #28]
 801f97c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f980:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f984:	9307      	str	r3, [sp, #28]
 801f986:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f988:	2b00      	cmp	r3, #0
 801f98a:	f340 80eb 	ble.w	801fb64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801f98e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f992:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f996:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f99a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f99c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f9a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f9a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f9a8:	eef0 6a62 	vmov.f32	s13, s5
 801f9ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f9b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f9b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f9b8:	ee16 ba90 	vmov	fp, s13
 801f9bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f9c0:	eef0 6a43 	vmov.f32	s13, s6
 801f9c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f9c8:	ee12 2a90 	vmov	r2, s5
 801f9cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f9d0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9d4:	ee13 2a10 	vmov	r2, s6
 801f9d8:	931b      	str	r3, [sp, #108]	@ 0x6c
 801f9da:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f9dc:	fb92 f3f3 	sdiv	r3, r2, r3
 801f9e0:	931c      	str	r3, [sp, #112]	@ 0x70
 801f9e2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f9e4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f9e6:	3b01      	subs	r3, #1
 801f9e8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f9ec:	930a      	str	r3, [sp, #40]	@ 0x28
 801f9ee:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f9f0:	bf08      	it	eq
 801f9f2:	4613      	moveq	r3, r2
 801f9f4:	ee16 5a90 	vmov	r5, s13
 801f9f8:	9306      	str	r3, [sp, #24]
 801f9fa:	eeb0 3a67 	vmov.f32	s6, s15
 801f9fe:	eef0 2a47 	vmov.f32	s5, s14
 801fa02:	e6d2      	b.n	801f7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fa04:	b149      	cbz	r1, 801fa1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fa06:	5cba      	ldrb	r2, [r7, r2]
 801fa08:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa0c:	4422      	add	r2, r4
 801fa0e:	4660      	mov	r0, ip
 801fa10:	4666      	mov	r6, ip
 801fa12:	e734      	b.n	801f87e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fa14:	4660      	mov	r0, ip
 801fa16:	4662      	mov	r2, ip
 801fa18:	e731      	b.n	801f87e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fa1a:	4660      	mov	r0, ip
 801fa1c:	4662      	mov	r2, ip
 801fa1e:	e7f7      	b.n	801fa10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fa20:	f110 0c01 	adds.w	ip, r0, #1
 801fa24:	f53f af74 	bmi.w	801f910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa28:	4562      	cmp	r2, ip
 801fa2a:	f6ff af71 	blt.w	801f910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa2e:	f116 0c01 	adds.w	ip, r6, #1
 801fa32:	f53f af6d 	bmi.w	801f910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa36:	4567      	cmp	r7, ip
 801fa38:	f6ff af6a 	blt.w	801f910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa3c:	b23f      	sxth	r7, r7
 801fa3e:	b212      	sxth	r2, r2
 801fa40:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fa44:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fa48:	9200      	str	r2, [sp, #0]
 801fa4a:	9701      	str	r7, [sp, #4]
 801fa4c:	4623      	mov	r3, r4
 801fa4e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fa52:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801fa54:	f7ff fde6 	bl	801f624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fa58:	e75a      	b.n	801f910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fa5a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801fa5c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fa60:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fa64:	1428      	asrs	r0, r5, #16
 801fa66:	fb02 6000 	mla	r0, r2, r0, r6
 801fa6a:	9e08      	ldr	r6, [sp, #32]
 801fa6c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fa70:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fa74:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fa78:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fa7c:	1837      	adds	r7, r6, r0
 801fa7e:	eb04 0c08 	add.w	ip, r4, r8
 801fa82:	2b00      	cmp	r3, #0
 801fa84:	d060      	beq.n	801fb48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fa86:	787e      	ldrb	r6, [r7, #1]
 801fa88:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fa8c:	4426      	add	r6, r4
 801fa8e:	2900      	cmp	r1, #0
 801fa90:	d062      	beq.n	801fb58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fa92:	18b8      	adds	r0, r7, r2
 801fa94:	5cba      	ldrb	r2, [r7, r2]
 801fa96:	7840      	ldrb	r0, [r0, #1]
 801fa98:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa9c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801faa0:	4422      	add	r2, r4
 801faa2:	4420      	add	r0, r4
 801faa4:	b29b      	uxth	r3, r3
 801faa6:	b289      	uxth	r1, r1
 801faa8:	fb03 f901 	mul.w	r9, r3, r1
 801faac:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fab0:	011b      	lsls	r3, r3, #4
 801fab2:	b289      	uxth	r1, r1
 801fab4:	78b7      	ldrb	r7, [r6, #2]
 801fab6:	f89c a002 	ldrb.w	sl, [ip, #2]
 801faba:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fabe:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801fac2:	eba3 0309 	sub.w	r3, r3, r9
 801fac6:	b29b      	uxth	r3, r3
 801fac8:	ebae 0e01 	sub.w	lr, lr, r1
 801facc:	fa1f fe8e 	uxth.w	lr, lr
 801fad0:	435f      	muls	r7, r3
 801fad2:	fb0e 770a 	mla	r7, lr, sl, r7
 801fad6:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fada:	fb01 770a 	mla	r7, r1, sl, r7
 801fade:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fae2:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fae6:	f814 7008 	ldrb.w	r7, [r4, r8]
 801faea:	f896 8000 	ldrb.w	r8, [r6]
 801faee:	7876      	ldrb	r6, [r6, #1]
 801faf0:	fb03 f808 	mul.w	r8, r3, r8
 801faf4:	fb0e 8807 	mla	r8, lr, r7, r8
 801faf8:	7817      	ldrb	r7, [r2, #0]
 801fafa:	fb01 8807 	mla	r8, r1, r7, r8
 801fafe:	7807      	ldrb	r7, [r0, #0]
 801fb00:	fb09 8707 	mla	r7, r9, r7, r8
 801fb04:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801fb08:	4373      	muls	r3, r6
 801fb0a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fb0e:	7856      	ldrb	r6, [r2, #1]
 801fb10:	ea47 070a 	orr.w	r7, r7, sl
 801fb14:	fb0e 330c 	mla	r3, lr, ip, r3
 801fb18:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fb1c:	fb01 3306 	mla	r3, r1, r6, r3
 801fb20:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fb24:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fb28:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fb2a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fb2e:	ea47 070a 	orr.w	r7, r7, sl
 801fb32:	f823 7b02 	strh.w	r7, [r3], #2
 801fb36:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fb38:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fb3a:	449b      	add	fp, r3
 801fb3c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fb3e:	441d      	add	r5, r3
 801fb40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fb42:	3b01      	subs	r3, #1
 801fb44:	9309      	str	r3, [sp, #36]	@ 0x24
 801fb46:	e714      	b.n	801f972 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fb48:	b149      	cbz	r1, 801fb5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fb4a:	5cba      	ldrb	r2, [r7, r2]
 801fb4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb50:	4422      	add	r2, r4
 801fb52:	4660      	mov	r0, ip
 801fb54:	4666      	mov	r6, ip
 801fb56:	e7a5      	b.n	801faa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fb58:	4660      	mov	r0, ip
 801fb5a:	4662      	mov	r2, ip
 801fb5c:	e7a2      	b.n	801faa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fb5e:	4660      	mov	r0, ip
 801fb60:	4662      	mov	r2, ip
 801fb62:	e7f7      	b.n	801fb54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fb64:	b00f      	add	sp, #60	@ 0x3c
 801fb66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fb6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fb6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb6e:	b085      	sub	sp, #20
 801fb70:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801fb74:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801fb78:	9102      	str	r1, [sp, #8]
 801fb7a:	2c00      	cmp	r4, #0
 801fb7c:	fb04 710c 	mla	r1, r4, ip, r7
 801fb80:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801fb84:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801fb88:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801fb8c:	eb02 0e01 	add.w	lr, r2, r1
 801fb90:	f2c0 8122 	blt.w	801fdd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fb94:	45a0      	cmp	r8, r4
 801fb96:	f340 811f 	ble.w	801fdd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fb9a:	2f00      	cmp	r7, #0
 801fb9c:	f2c0 811a 	blt.w	801fdd4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fba0:	45bc      	cmp	ip, r7
 801fba2:	f340 8117 	ble.w	801fdd4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fba6:	5c52      	ldrb	r2, [r2, r1]
 801fba8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fbac:	1c7a      	adds	r2, r7, #1
 801fbae:	f100 8116 	bmi.w	801fdde <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fbb2:	4594      	cmp	ip, r2
 801fbb4:	f340 8113 	ble.w	801fdde <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fbb8:	2e00      	cmp	r6, #0
 801fbba:	f000 8112 	beq.w	801fde2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fbbe:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fbc2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fbc6:	3401      	adds	r4, #1
 801fbc8:	f100 810f 	bmi.w	801fdea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fbcc:	45a0      	cmp	r8, r4
 801fbce:	f340 810c 	ble.w	801fdea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fbd2:	2800      	cmp	r0, #0
 801fbd4:	f000 810c 	beq.w	801fdf0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fbd8:	2f00      	cmp	r7, #0
 801fbda:	f2c0 8104 	blt.w	801fde6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fbde:	45bc      	cmp	ip, r7
 801fbe0:	f340 8101 	ble.w	801fde6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fbe4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fbe8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fbec:	3701      	adds	r7, #1
 801fbee:	f100 8102 	bmi.w	801fdf6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fbf2:	45bc      	cmp	ip, r7
 801fbf4:	f340 80ff 	ble.w	801fdf6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fbf8:	2e00      	cmp	r6, #0
 801fbfa:	f000 80fe 	beq.w	801fdfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fbfe:	44f4      	add	ip, lr
 801fc00:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fc04:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fc08:	b2b6      	uxth	r6, r6
 801fc0a:	b280      	uxth	r0, r0
 801fc0c:	fb00 fe06 	mul.w	lr, r0, r6
 801fc10:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fc14:	0136      	lsls	r6, r6, #4
 801fc16:	eba6 070e 	sub.w	r7, r6, lr
 801fc1a:	b280      	uxth	r0, r0
 801fc1c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801fc20:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fc24:	b2bf      	uxth	r7, r7
 801fc26:	1a1b      	subs	r3, r3, r0
 801fc28:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fc2c:	b29b      	uxth	r3, r3
 801fc2e:	fb0a f607 	mul.w	r6, sl, r7
 801fc32:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fc36:	fb0b 6603 	mla	r6, fp, r3, r6
 801fc3a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fc3e:	fb00 6609 	mla	r6, r0, r9, r6
 801fc42:	fb0e 6608 	mla	r6, lr, r8, r6
 801fc46:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fc4a:	9600      	str	r6, [sp, #0]
 801fc4c:	2e00      	cmp	r6, #0
 801fc4e:	f000 80be 	beq.w	801fdce <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801fc52:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801fc56:	fb0b fc0c 	mul.w	ip, fp, ip
 801fc5a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801fc5e:	fb0b f505 	mul.w	r5, fp, r5
 801fc62:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801fc66:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801fc6a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fc6e:	44dc      	add	ip, fp
 801fc70:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fc74:	9501      	str	r5, [sp, #4]
 801fc76:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801fc7a:	9503      	str	r5, [sp, #12]
 801fc7c:	9d01      	ldr	r5, [sp, #4]
 801fc7e:	9e02      	ldr	r6, [sp, #8]
 801fc80:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801fc84:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fc88:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801fc8c:	fb0a fc0c 	mul.w	ip, sl, ip
 801fc90:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fc94:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fc98:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fc9c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fca0:	4465      	add	r5, ip
 801fca2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801fca6:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801fcaa:	fb09 fc0c 	mul.w	ip, r9, ip
 801fcae:	fb09 f904 	mul.w	r9, r9, r4
 801fcb2:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801fcb6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fcba:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801fcbe:	fb08 f404 	mul.w	r4, r8, r4
 801fcc2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fcc6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fcca:	fb08 f802 	mul.w	r8, r8, r2
 801fcce:	fb0a fa01 	mul.w	sl, sl, r1
 801fcd2:	0a22      	lsrs	r2, r4, #8
 801fcd4:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801fcd8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fcdc:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801fce0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fce4:	4414      	add	r4, r2
 801fce6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fcea:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801fcee:	0a2d      	lsrs	r5, r5, #8
 801fcf0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801fcf4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fcf8:	9a03      	ldr	r2, [sp, #12]
 801fcfa:	8836      	ldrh	r6, [r6, #0]
 801fcfc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fd00:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fd04:	437d      	muls	r5, r7
 801fd06:	4461      	add	r1, ip
 801fd08:	0a24      	lsrs	r4, r4, #8
 801fd0a:	fb02 5503 	mla	r5, r2, r3, r5
 801fd0e:	0a09      	lsrs	r1, r1, #8
 801fd10:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801fd14:	fb04 540e 	mla	r4, r4, lr, r5
 801fd18:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fd1c:	fb01 4100 	mla	r1, r1, r0, r4
 801fd20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd24:	0a09      	lsrs	r1, r1, #8
 801fd26:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fd2a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801fd2e:	fb07 f70a 	mul.w	r7, r7, sl
 801fd32:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fd36:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801fd3a:	fb03 7101 	mla	r1, r3, r1, r7
 801fd3e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fd42:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801fd46:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fd4a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801fd4e:	fb00 e101 	mla	r1, r0, r1, lr
 801fd52:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801fd56:	9a00      	ldr	r2, [sp, #0]
 801fd58:	b287      	uxth	r7, r0
 801fd5a:	437a      	muls	r2, r7
 801fd5c:	0a09      	lsrs	r1, r1, #8
 801fd5e:	1c53      	adds	r3, r2, #1
 801fd60:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fd64:	4321      	orrs	r1, r4
 801fd66:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fd6a:	1235      	asrs	r5, r6, #8
 801fd6c:	0c0a      	lsrs	r2, r1, #16
 801fd6e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801fd72:	b2db      	uxtb	r3, r3
 801fd74:	fb12 f207 	smulbb	r2, r2, r7
 801fd78:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801fd7c:	fb05 2503 	mla	r5, r5, r3, r2
 801fd80:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fd84:	10f2      	asrs	r2, r6, #3
 801fd86:	b2c8      	uxtb	r0, r1
 801fd88:	00f6      	lsls	r6, r6, #3
 801fd8a:	fb14 f407 	smulbb	r4, r4, r7
 801fd8e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fd92:	b2f6      	uxtb	r6, r6
 801fd94:	fb10 f007 	smulbb	r0, r0, r7
 801fd98:	fb02 4203 	mla	r2, r2, r3, r4
 801fd9c:	b2ad      	uxth	r5, r5
 801fd9e:	fb06 0303 	mla	r3, r6, r3, r0
 801fda2:	b299      	uxth	r1, r3
 801fda4:	b294      	uxth	r4, r2
 801fda6:	1c6b      	adds	r3, r5, #1
 801fda8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fdac:	1c62      	adds	r2, r4, #1
 801fdae:	1c4b      	adds	r3, r1, #1
 801fdb0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fdb4:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fdb8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801fdbc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fdc0:	0952      	lsrs	r2, r2, #5
 801fdc2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fdc6:	432b      	orrs	r3, r5
 801fdc8:	4313      	orrs	r3, r2
 801fdca:	9a02      	ldr	r2, [sp, #8]
 801fdcc:	8013      	strh	r3, [r2, #0]
 801fdce:	b005      	add	sp, #20
 801fdd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fdd4:	2500      	movs	r5, #0
 801fdd6:	e6e9      	b.n	801fbac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801fdd8:	2100      	movs	r1, #0
 801fdda:	460d      	mov	r5, r1
 801fddc:	e6f3      	b.n	801fbc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fdde:	2100      	movs	r1, #0
 801fde0:	e6f1      	b.n	801fbc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fde2:	4631      	mov	r1, r6
 801fde4:	e6ef      	b.n	801fbc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fde6:	2400      	movs	r4, #0
 801fde8:	e700      	b.n	801fbec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801fdea:	2200      	movs	r2, #0
 801fdec:	4614      	mov	r4, r2
 801fdee:	e70b      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fdf0:	4602      	mov	r2, r0
 801fdf2:	4604      	mov	r4, r0
 801fdf4:	e708      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fdf6:	2200      	movs	r2, #0
 801fdf8:	e706      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fdfa:	4632      	mov	r2, r6
 801fdfc:	e704      	b.n	801fc08 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801fdfe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fdfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe02:	b09f      	sub	sp, #124	@ 0x7c
 801fe04:	921b      	str	r2, [sp, #108]	@ 0x6c
 801fe06:	9309      	str	r3, [sp, #36]	@ 0x24
 801fe08:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801fe0a:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801fe0e:	931c      	str	r3, [sp, #112]	@ 0x70
 801fe10:	9119      	str	r1, [sp, #100]	@ 0x64
 801fe12:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801fe16:	901d      	str	r0, [sp, #116]	@ 0x74
 801fe18:	6850      	ldr	r0, [r2, #4]
 801fe1a:	6812      	ldr	r2, [r2, #0]
 801fe1c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801fe1e:	fb00 1303 	mla	r3, r0, r3, r1
 801fe22:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fe26:	930c      	str	r3, [sp, #48]	@ 0x30
 801fe28:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fe2a:	681b      	ldr	r3, [r3, #0]
 801fe2c:	9312      	str	r3, [sp, #72]	@ 0x48
 801fe2e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fe30:	685e      	ldr	r6, [r3, #4]
 801fe32:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801fe36:	930d      	str	r3, [sp, #52]	@ 0x34
 801fe38:	3604      	adds	r6, #4
 801fe3a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801fe3c:	2b00      	cmp	r3, #0
 801fe3e:	dc03      	bgt.n	801fe48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fe40:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fe42:	2b00      	cmp	r3, #0
 801fe44:	f340 8388 	ble.w	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801fe48:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fe4a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fe4e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fe52:	1e48      	subs	r0, r1, #1
 801fe54:	1e57      	subs	r7, r2, #1
 801fe56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe58:	2b00      	cmp	r3, #0
 801fe5a:	f340 8195 	ble.w	8020188 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fe5e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801fe60:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fe64:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fe68:	d406      	bmi.n	801fe78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fe6a:	4584      	cmp	ip, r0
 801fe6c:	da04      	bge.n	801fe78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fe6e:	2b00      	cmp	r3, #0
 801fe70:	db02      	blt.n	801fe78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801fe72:	42bb      	cmp	r3, r7
 801fe74:	f2c0 8189 	blt.w	802018a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801fe78:	f11c 0c01 	adds.w	ip, ip, #1
 801fe7c:	f100 8177 	bmi.w	802016e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fe80:	4561      	cmp	r1, ip
 801fe82:	f2c0 8174 	blt.w	802016e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fe86:	3301      	adds	r3, #1
 801fe88:	f100 8171 	bmi.w	802016e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fe8c:	429a      	cmp	r2, r3
 801fe8e:	f2c0 816e 	blt.w	802016e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fe92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe94:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801fe96:	931a      	str	r3, [sp, #104]	@ 0x68
 801fe98:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801fe9a:	2b00      	cmp	r3, #0
 801fe9c:	f340 8193 	ble.w	80201c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801fea0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801fea2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fea6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fea8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801feac:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801feae:	141b      	asrs	r3, r3, #16
 801feb0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801feb4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801feb8:	f100 81d6 	bmi.w	8020268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801febc:	f100 38ff 	add.w	r8, r0, #4294967295
 801fec0:	4543      	cmp	r3, r8
 801fec2:	f280 81d1 	bge.w	8020268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fec6:	f1bc 0f00 	cmp.w	ip, #0
 801feca:	f2c0 81cd 	blt.w	8020268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fece:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fed2:	45c4      	cmp	ip, r8
 801fed4:	f280 81c8 	bge.w	8020268 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801fed8:	b200      	sxth	r0, r0
 801feda:	fb0c 3300 	mla	r3, ip, r0, r3
 801fede:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801fee0:	eb04 0803 	add.w	r8, r4, r3
 801fee4:	5ce3      	ldrb	r3, [r4, r3]
 801fee6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801feea:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801feee:	2a00      	cmp	r2, #0
 801fef0:	f000 81af 	beq.w	8020252 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801fef4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801fef8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801fefc:	940e      	str	r4, [sp, #56]	@ 0x38
 801fefe:	0e24      	lsrs	r4, r4, #24
 801ff00:	9415      	str	r4, [sp, #84]	@ 0x54
 801ff02:	b179      	cbz	r1, 801ff24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ff04:	eb08 0c00 	add.w	ip, r8, r0
 801ff08:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ff0c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ff10:	900a      	str	r0, [sp, #40]	@ 0x28
 801ff12:	0e00      	lsrs	r0, r0, #24
 801ff14:	9013      	str	r0, [sp, #76]	@ 0x4c
 801ff16:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ff1a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ff1e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801ff20:	0e00      	lsrs	r0, r0, #24
 801ff22:	9016      	str	r0, [sp, #88]	@ 0x58
 801ff24:	b292      	uxth	r2, r2
 801ff26:	b289      	uxth	r1, r1
 801ff28:	fb02 f901 	mul.w	r9, r2, r1
 801ff2c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ff30:	0112      	lsls	r2, r2, #4
 801ff32:	eba2 0809 	sub.w	r8, r2, r9
 801ff36:	b289      	uxth	r1, r1
 801ff38:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801ff3c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801ff3e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ff40:	fa1f f888 	uxth.w	r8, r8
 801ff44:	1a52      	subs	r2, r2, r1
 801ff46:	b292      	uxth	r2, r2
 801ff48:	fb08 f000 	mul.w	r0, r8, r0
 801ff4c:	fb02 000e 	mla	r0, r2, lr, r0
 801ff50:	fb01 0004 	mla	r0, r1, r4, r0
 801ff54:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801ff56:	fb09 0004 	mla	r0, r9, r4, r0
 801ff5a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ff5e:	2800      	cmp	r0, #0
 801ff60:	f000 80fa 	beq.w	8020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ff64:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ff68:	d01b      	beq.n	801ffa2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801ff6a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801ff6e:	fb0e fa0a 	mul.w	sl, lr, sl
 801ff72:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ff76:	fb0e fe03 	mul.w	lr, lr, r3
 801ff7a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ff7e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ff82:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ff86:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ff8a:	4453      	add	r3, sl
 801ff8c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ff90:	0a1b      	lsrs	r3, r3, #8
 801ff92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ff96:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ff9a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ff9e:	ea43 030c 	orr.w	r3, r3, ip
 801ffa2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ffa4:	2cff      	cmp	r4, #255	@ 0xff
 801ffa6:	d021      	beq.n	801ffec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801ffa8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ffaa:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ffae:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ffb0:	fb04 fb0b 	mul.w	fp, r4, fp
 801ffb4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801ffb6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ffba:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801ffbc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ffc0:	fb04 fa0a 	mul.w	sl, r4, sl
 801ffc4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ffc8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ffcc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ffd0:	44de      	add	lr, fp
 801ffd2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ffd6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ffda:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ffde:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ffe2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ffe6:	ea4e 040a 	orr.w	r4, lr, sl
 801ffea:	940e      	str	r4, [sp, #56]	@ 0x38
 801ffec:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ffee:	2cff      	cmp	r4, #255	@ 0xff
 801fff0:	d021      	beq.n	8020036 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801fff2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fff4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801fff8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fffa:	fb04 fb0b 	mul.w	fp, r4, fp
 801fffe:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020000:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020004:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020006:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802000a:	fb04 fa0a 	mul.w	sl, r4, sl
 802000e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020012:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020016:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802001a:	44de      	add	lr, fp
 802001c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020020:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020024:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020028:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802002c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020030:	ea4e 040a 	orr.w	r4, lr, sl
 8020034:	940a      	str	r4, [sp, #40]	@ 0x28
 8020036:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020038:	2cff      	cmp	r4, #255	@ 0xff
 802003a:	d021      	beq.n	8020080 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 802003c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802003e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020042:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020044:	fb04 fb0b 	mul.w	fp, r4, fp
 8020048:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802004a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802004e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020050:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020054:	fb04 fa0a 	mul.w	sl, r4, sl
 8020058:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802005c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020060:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020064:	44de      	add	lr, fp
 8020066:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802006a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802006e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020072:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020076:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802007a:	ea4e 040a 	orr.w	r4, lr, sl
 802007e:	940f      	str	r4, [sp, #60]	@ 0x3c
 8020080:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020082:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020086:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020088:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802008c:	fb08 fc0c 	mul.w	ip, r8, ip
 8020090:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020094:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020098:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802009a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802009e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80200a2:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80200a4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80200a8:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80200ac:	fb08 f80e 	mul.w	r8, r8, lr
 80200b0:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80200b4:	fb02 8303 	mla	r3, r2, r3, r8
 80200b8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80200ba:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80200bc:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80200c0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80200c2:	fb01 330a 	mla	r3, r1, sl, r3
 80200c6:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 80200ca:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80200cc:	fb09 3901 	mla	r9, r9, r1, r3
 80200d0:	4342      	muls	r2, r0
 80200d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80200d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80200da:	883b      	ldrh	r3, [r7, #0]
 80200dc:	1c50      	adds	r0, r2, #1
 80200de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80200e2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80200e6:	ea4c 0c09 	orr.w	ip, ip, r9
 80200ea:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80200ee:	1219      	asrs	r1, r3, #8
 80200f0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80200f4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80200f8:	b2c0      	uxtb	r0, r0
 80200fa:	fb12 f204 	smulbb	r2, r2, r4
 80200fe:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020102:	fb01 2100 	mla	r1, r1, r0, r2
 8020106:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802010a:	10da      	asrs	r2, r3, #3
 802010c:	fa5f fc8c 	uxtb.w	ip, ip
 8020110:	00db      	lsls	r3, r3, #3
 8020112:	fb1c fc04 	smulbb	ip, ip, r4
 8020116:	b2db      	uxtb	r3, r3
 8020118:	b289      	uxth	r1, r1
 802011a:	fb03 c300 	mla	r3, r3, r0, ip
 802011e:	fa1f fc83 	uxth.w	ip, r3
 8020122:	1c4b      	adds	r3, r1, #1
 8020124:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020128:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802012c:	fb1e fe04 	smulbb	lr, lr, r4
 8020130:	f10c 0301 	add.w	r3, ip, #1
 8020134:	fb02 e200 	mla	r2, r2, r0, lr
 8020138:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802013c:	b292      	uxth	r2, r2
 802013e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020142:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020146:	430b      	orrs	r3, r1
 8020148:	1c51      	adds	r1, r2, #1
 802014a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802014e:	0952      	lsrs	r2, r2, #5
 8020150:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020154:	4313      	orrs	r3, r2
 8020156:	803b      	strh	r3, [r7, #0]
 8020158:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802015a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802015c:	441a      	add	r2, r3
 802015e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020160:	9229      	str	r2, [sp, #164]	@ 0xa4
 8020162:	441d      	add	r5, r3
 8020164:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8020166:	3b01      	subs	r3, #1
 8020168:	3702      	adds	r7, #2
 802016a:	931a      	str	r3, [sp, #104]	@ 0x68
 802016c:	e694      	b.n	801fe98 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802016e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020170:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020172:	441c      	add	r4, r3
 8020174:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020176:	9429      	str	r4, [sp, #164]	@ 0xa4
 8020178:	441d      	add	r5, r3
 802017a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802017c:	3b01      	subs	r3, #1
 802017e:	9309      	str	r3, [sp, #36]	@ 0x24
 8020180:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020182:	3302      	adds	r3, #2
 8020184:	930c      	str	r3, [sp, #48]	@ 0x30
 8020186:	e666      	b.n	801fe56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020188:	d024      	beq.n	80201d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802018a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802018c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 802018e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020190:	3b01      	subs	r3, #1
 8020192:	fb00 4003 	mla	r0, r0, r3, r4
 8020196:	1400      	asrs	r0, r0, #16
 8020198:	f53f ae7b 	bmi.w	801fe92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802019c:	3901      	subs	r1, #1
 802019e:	4288      	cmp	r0, r1
 80201a0:	f6bf ae77 	bge.w	801fe92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80201a4:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 80201a6:	fb01 5303 	mla	r3, r1, r3, r5
 80201aa:	141b      	asrs	r3, r3, #16
 80201ac:	f53f ae71 	bmi.w	801fe92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80201b0:	3a01      	subs	r2, #1
 80201b2:	4293      	cmp	r3, r2
 80201b4:	f6bf ae6d 	bge.w	801fe92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80201b8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80201bc:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 80201c0:	f1bb 0f00 	cmp.w	fp, #0
 80201c4:	dc70      	bgt.n	80202a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80201c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80201c8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80201cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80201ce:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80201d2:	930c      	str	r3, [sp, #48]	@ 0x30
 80201d4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80201d6:	2b00      	cmp	r3, #0
 80201d8:	f340 81be 	ble.w	8020558 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80201dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80201e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80201e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80201e8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80201ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80201ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80201f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80201f6:	eef0 6a62 	vmov.f32	s13, s5
 80201fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80201fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020202:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020206:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 802020a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802020e:	eef0 6a43 	vmov.f32	s13, s6
 8020212:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020216:	ee12 2a90 	vmov	r2, s5
 802021a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802021e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020222:	ee13 2a10 	vmov	r2, s6
 8020226:	932b      	str	r3, [sp, #172]	@ 0xac
 8020228:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802022a:	fb92 f3f3 	sdiv	r3, r2, r3
 802022e:	932c      	str	r3, [sp, #176]	@ 0xb0
 8020230:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020232:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8020234:	3b01      	subs	r3, #1
 8020236:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802023a:	9319      	str	r3, [sp, #100]	@ 0x64
 802023c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802023e:	bf08      	it	eq
 8020240:	4613      	moveq	r3, r2
 8020242:	ee16 5a90 	vmov	r5, s13
 8020246:	9309      	str	r3, [sp, #36]	@ 0x24
 8020248:	eeb0 3a67 	vmov.f32	s6, s15
 802024c:	eef0 2a47 	vmov.f32	s5, s14
 8020250:	e5f3      	b.n	801fe3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020252:	2900      	cmp	r1, #0
 8020254:	f43f ae66 	beq.w	801ff24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020258:	f818 0000 	ldrb.w	r0, [r8, r0]
 802025c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020260:	900a      	str	r0, [sp, #40]	@ 0x28
 8020262:	0e00      	lsrs	r0, r0, #24
 8020264:	9013      	str	r0, [sp, #76]	@ 0x4c
 8020266:	e65d      	b.n	801ff24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020268:	f113 0801 	adds.w	r8, r3, #1
 802026c:	f53f af74 	bmi.w	8020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020270:	4540      	cmp	r0, r8
 8020272:	f6ff af71 	blt.w	8020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020276:	f11c 0801 	adds.w	r8, ip, #1
 802027a:	f53f af6d 	bmi.w	8020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802027e:	45c6      	cmp	lr, r8
 8020280:	f6ff af6a 	blt.w	8020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020284:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8020286:	9302      	str	r3, [sp, #8]
 8020288:	b200      	sxth	r0, r0
 802028a:	fa0f f38e 	sxth.w	r3, lr
 802028e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020292:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020296:	9301      	str	r3, [sp, #4]
 8020298:	9000      	str	r0, [sp, #0]
 802029a:	4633      	mov	r3, r6
 802029c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802029e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 80202a0:	4639      	mov	r1, r7
 80202a2:	f7ff fc62 	bl	801fb6a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80202a6:	e757      	b.n	8020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80202a8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80202aa:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80202ac:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80202b0:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80202b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80202b6:	1427      	asrs	r7, r4, #16
 80202b8:	142b      	asrs	r3, r5, #16
 80202ba:	fb01 7303 	mla	r3, r1, r3, r7
 80202be:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80202c0:	18e7      	adds	r7, r4, r3
 80202c2:	5ce3      	ldrb	r3, [r4, r3]
 80202c4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80202c8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80202cc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80202d0:	2a00      	cmp	r2, #0
 80202d2:	f000 8137 	beq.w	8020544 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80202d6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80202da:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80202de:	9410      	str	r4, [sp, #64]	@ 0x40
 80202e0:	0e24      	lsrs	r4, r4, #24
 80202e2:	9417      	str	r4, [sp, #92]	@ 0x5c
 80202e4:	b170      	cbz	r0, 8020304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80202e6:	eb07 0e01 	add.w	lr, r7, r1
 80202ea:	5c79      	ldrb	r1, [r7, r1]
 80202ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80202f0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80202f2:	0e09      	lsrs	r1, r1, #24
 80202f4:	9114      	str	r1, [sp, #80]	@ 0x50
 80202f6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80202fa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80202fe:	9111      	str	r1, [sp, #68]	@ 0x44
 8020300:	0e09      	lsrs	r1, r1, #24
 8020302:	9118      	str	r1, [sp, #96]	@ 0x60
 8020304:	b292      	uxth	r2, r2
 8020306:	b280      	uxth	r0, r0
 8020308:	fb02 f800 	mul.w	r8, r2, r0
 802030c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020310:	0112      	lsls	r2, r2, #4
 8020312:	eba2 0e08 	sub.w	lr, r2, r8
 8020316:	b280      	uxth	r0, r0
 8020318:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802031c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 802031e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020320:	fa1f fe8e 	uxth.w	lr, lr
 8020324:	1a12      	subs	r2, r2, r0
 8020326:	b292      	uxth	r2, r2
 8020328:	fb0e f101 	mul.w	r1, lr, r1
 802032c:	fb02 110c 	mla	r1, r2, ip, r1
 8020330:	fb00 1104 	mla	r1, r0, r4, r1
 8020334:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020336:	fb08 1104 	mla	r1, r8, r4, r1
 802033a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802033e:	2900      	cmp	r1, #0
 8020340:	f000 80f5 	beq.w	802052e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020344:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020348:	d019      	beq.n	802037e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802034a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802034e:	fb0c fa0a 	mul.w	sl, ip, sl
 8020352:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020356:	fb0c fc03 	mul.w	ip, ip, r3
 802035a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802035e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020362:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020366:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802036a:	4453      	add	r3, sl
 802036c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020370:	0a1b      	lsrs	r3, r3, #8
 8020372:	0a3f      	lsrs	r7, r7, #8
 8020374:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020378:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802037c:	433b      	orrs	r3, r7
 802037e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020380:	2cff      	cmp	r4, #255	@ 0xff
 8020382:	d020      	beq.n	80203c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020384:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020386:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802038a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802038c:	4367      	muls	r7, r4
 802038e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020390:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020394:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020396:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802039a:	fb04 fa0a 	mul.w	sl, r4, sl
 802039e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80203a2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80203a6:	44bc      	add	ip, r7
 80203a8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80203ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80203b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80203b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80203b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80203bc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80203c0:	ea4c 040a 	orr.w	r4, ip, sl
 80203c4:	9410      	str	r4, [sp, #64]	@ 0x40
 80203c6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80203c8:	2cff      	cmp	r4, #255	@ 0xff
 80203ca:	d020      	beq.n	802040e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80203cc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80203ce:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80203d2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80203d4:	4367      	muls	r7, r4
 80203d6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80203d8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80203dc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80203de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80203e2:	fb04 fa0a 	mul.w	sl, r4, sl
 80203e6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80203ea:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80203ee:	44bc      	add	ip, r7
 80203f0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80203f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80203f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80203fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020400:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020404:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020408:	ea4c 040a 	orr.w	r4, ip, sl
 802040c:	940b      	str	r4, [sp, #44]	@ 0x2c
 802040e:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020410:	2cff      	cmp	r4, #255	@ 0xff
 8020412:	d020      	beq.n	8020456 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020414:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020416:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802041a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 802041c:	4367      	muls	r7, r4
 802041e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020420:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020424:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020426:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802042a:	fb04 fa0a 	mul.w	sl, r4, sl
 802042e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020432:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020436:	44bc      	add	ip, r7
 8020438:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802043c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020440:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020444:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020448:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802044c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020450:	ea4c 040a 	orr.w	r4, ip, sl
 8020454:	9411      	str	r4, [sp, #68]	@ 0x44
 8020456:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020458:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802045c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802045e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020462:	fb0e f707 	mul.w	r7, lr, r7
 8020466:	fb02 770c 	mla	r7, r2, ip, r7
 802046a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802046e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020470:	fb00 770c 	mla	r7, r0, ip, r7
 8020474:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020478:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802047a:	fb08 770c 	mla	r7, r8, ip, r7
 802047e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8020482:	fb0e fe0c 	mul.w	lr, lr, ip
 8020486:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802048a:	fb02 e303 	mla	r3, r2, r3, lr
 802048e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020490:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020492:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020496:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020498:	fb00 330a 	mla	r3, r0, sl, r3
 802049c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80204a0:	fb08 3c0c 	mla	ip, r8, ip, r3
 80204a4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80204a6:	f8b9 0000 	ldrh.w	r0, [r9]
 80204aa:	434b      	muls	r3, r1
 80204ac:	0a3f      	lsrs	r7, r7, #8
 80204ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204b2:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80204b6:	1c59      	adds	r1, r3, #1
 80204b8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80204bc:	ea47 070c 	orr.w	r7, r7, ip
 80204c0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80204c4:	1202      	asrs	r2, r0, #8
 80204c6:	0c3b      	lsrs	r3, r7, #16
 80204c8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80204cc:	b2c9      	uxtb	r1, r1
 80204ce:	fb13 f304 	smulbb	r3, r3, r4
 80204d2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80204d6:	fb02 3201 	mla	r2, r2, r1, r3
 80204da:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80204de:	10c3      	asrs	r3, r0, #3
 80204e0:	b2ff      	uxtb	r7, r7
 80204e2:	00c0      	lsls	r0, r0, #3
 80204e4:	b292      	uxth	r2, r2
 80204e6:	fb1c fc04 	smulbb	ip, ip, r4
 80204ea:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80204ee:	b2c0      	uxtb	r0, r0
 80204f0:	fb17 f704 	smulbb	r7, r7, r4
 80204f4:	fb03 c301 	mla	r3, r3, r1, ip
 80204f8:	fb00 7001 	mla	r0, r0, r1, r7
 80204fc:	f102 0c01 	add.w	ip, r2, #1
 8020500:	b280      	uxth	r0, r0
 8020502:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020506:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 802050a:	1c42      	adds	r2, r0, #1
 802050c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020510:	b29b      	uxth	r3, r3
 8020512:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020516:	ea42 020c 	orr.w	r2, r2, ip
 802051a:	f103 0c01 	add.w	ip, r3, #1
 802051e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020522:	095b      	lsrs	r3, r3, #5
 8020524:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020528:	431a      	orrs	r2, r3
 802052a:	f8a9 2000 	strh.w	r2, [r9]
 802052e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020530:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020532:	441a      	add	r2, r3
 8020534:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020536:	9229      	str	r2, [sp, #164]	@ 0xa4
 8020538:	f109 0902 	add.w	r9, r9, #2
 802053c:	441d      	add	r5, r3
 802053e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020542:	e63d      	b.n	80201c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020544:	2800      	cmp	r0, #0
 8020546:	f43f aedd 	beq.w	8020304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802054a:	5c79      	ldrb	r1, [r7, r1]
 802054c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020550:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020552:	0e09      	lsrs	r1, r1, #24
 8020554:	9114      	str	r1, [sp, #80]	@ 0x50
 8020556:	e6d5      	b.n	8020304 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020558:	b01f      	add	sp, #124	@ 0x7c
 802055a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802055e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802055e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020562:	b089      	sub	sp, #36	@ 0x24
 8020564:	9101      	str	r1, [sp, #4]
 8020566:	9801      	ldr	r0, [sp, #4]
 8020568:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 802056c:	8800      	ldrh	r0, [r0, #0]
 802056e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8020572:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8020576:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 802057a:	1206      	asrs	r6, r0, #8
 802057c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8020580:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8020584:	9602      	str	r6, [sp, #8]
 8020586:	10c6      	asrs	r6, r0, #3
 8020588:	00c0      	lsls	r0, r0, #3
 802058a:	b2c0      	uxtb	r0, r0
 802058c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020590:	9004      	str	r0, [sp, #16]
 8020592:	2f00      	cmp	r7, #0
 8020594:	fb07 100c 	mla	r0, r7, ip, r1
 8020598:	9603      	str	r6, [sp, #12]
 802059a:	eb02 0e00 	add.w	lr, r2, r0
 802059e:	f2c0 810a 	blt.w	80207b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80205a2:	45b8      	cmp	r8, r7
 80205a4:	f340 8107 	ble.w	80207b6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 80205a8:	2900      	cmp	r1, #0
 80205aa:	f2c0 8102 	blt.w	80207b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80205ae:	458c      	cmp	ip, r1
 80205b0:	f340 80ff 	ble.w	80207b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 80205b4:	5c12      	ldrb	r2, [r2, r0]
 80205b6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80205ba:	1c4a      	adds	r2, r1, #1
 80205bc:	f100 80fe 	bmi.w	80207bc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80205c0:	4594      	cmp	ip, r2
 80205c2:	f340 80fb 	ble.w	80207bc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 80205c6:	2d00      	cmp	r5, #0
 80205c8:	f000 80fa 	beq.w	80207c0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 80205cc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80205d0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80205d4:	3701      	adds	r7, #1
 80205d6:	f100 80f7 	bmi.w	80207c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80205da:	45b8      	cmp	r8, r7
 80205dc:	f340 80f4 	ble.w	80207c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80205e0:	2c00      	cmp	r4, #0
 80205e2:	f000 80f4 	beq.w	80207ce <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80205e6:	2900      	cmp	r1, #0
 80205e8:	eb0e 020c 	add.w	r2, lr, ip
 80205ec:	f2c0 80ea 	blt.w	80207c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80205f0:	458c      	cmp	ip, r1
 80205f2:	f340 80e7 	ble.w	80207c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80205f6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80205fa:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80205fe:	3101      	adds	r1, #1
 8020600:	f100 80e8 	bmi.w	80207d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020604:	458c      	cmp	ip, r1
 8020606:	f340 80e5 	ble.w	80207d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802060a:	2d00      	cmp	r5, #0
 802060c:	f000 80e4 	beq.w	80207d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020610:	7852      	ldrb	r2, [r2, #1]
 8020612:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020616:	0e0b      	lsrs	r3, r1, #24
 8020618:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 802061c:	9300      	str	r3, [sp, #0]
 802061e:	b2a4      	uxth	r4, r4
 8020620:	b2ab      	uxth	r3, r5
 8020622:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8020626:	fb03 f904 	mul.w	r9, r3, r4
 802062a:	fb0a f505 	mul.w	r5, sl, r5
 802062e:	011b      	lsls	r3, r3, #4
 8020630:	eba3 0e09 	sub.w	lr, r3, r9
 8020634:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 8020638:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 802063c:	0a28      	lsrs	r0, r5, #8
 802063e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020642:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8020646:	4405      	add	r5, r0
 8020648:	0a2d      	lsrs	r5, r5, #8
 802064a:	fb0a f303 	mul.w	r3, sl, r3
 802064e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8020652:	9005      	str	r0, [sp, #20]
 8020654:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8020658:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802065c:	0a1b      	lsrs	r3, r3, #8
 802065e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020662:	9306      	str	r3, [sp, #24]
 8020664:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8020668:	fb0b f303 	mul.w	r3, fp, r3
 802066c:	0a1d      	lsrs	r5, r3, #8
 802066e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020672:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020676:	fb0b f606 	mul.w	r6, fp, r6
 802067a:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802067e:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8020682:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020686:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802068a:	fb08 f707 	mul.w	r7, r8, r7
 802068e:	441d      	add	r5, r3
 8020690:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8020694:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020698:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 802069c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 80206a0:	fb08 fc0c 	mul.w	ip, r8, ip
 80206a4:	0a1b      	lsrs	r3, r3, #8
 80206a6:	9307      	str	r3, [sp, #28]
 80206a8:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80206ac:	0e0b      	lsrs	r3, r1, #24
 80206ae:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 80206b2:	435f      	muls	r7, r3
 80206b4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80206b8:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80206bc:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80206c0:	4460      	add	r0, ip
 80206c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80206c6:	b2a4      	uxth	r4, r4
 80206c8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80206cc:	0a2d      	lsrs	r5, r5, #8
 80206ce:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80206d2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80206d6:	fa1f fe8e 	uxth.w	lr, lr
 80206da:	4359      	muls	r1, r3
 80206dc:	1b12      	subs	r2, r2, r4
 80206de:	9b05      	ldr	r3, [sp, #20]
 80206e0:	44bc      	add	ip, r7
 80206e2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80206e6:	b292      	uxth	r2, r2
 80206e8:	fb05 f50e 	mul.w	r5, r5, lr
 80206ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206f0:	fb03 5502 	mla	r5, r3, r2, r5
 80206f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80206f8:	9b06      	ldr	r3, [sp, #24]
 80206fa:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 80206fe:	0a36      	lsrs	r6, r6, #8
 8020700:	0a00      	lsrs	r0, r0, #8
 8020702:	fb0c 5509 	mla	r5, ip, r9, r5
 8020706:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802070a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802070e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020712:	fb00 5504 	mla	r5, r0, r4, r5
 8020716:	fb0e f606 	mul.w	r6, lr, r6
 802071a:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 802071e:	0a09      	lsrs	r1, r1, #8
 8020720:	9b07      	ldr	r3, [sp, #28]
 8020722:	fb02 6000 	mla	r0, r2, r0, r6
 8020726:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802072a:	fb09 0001 	mla	r0, r9, r1, r0
 802072e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020732:	fb0e fe0b 	mul.w	lr, lr, fp
 8020736:	fb04 0003 	mla	r0, r4, r3, r0
 802073a:	fb02 e20a 	mla	r2, r2, sl, lr
 802073e:	9b00      	ldr	r3, [sp, #0]
 8020740:	fb04 2408 	mla	r4, r4, r8, r2
 8020744:	fb09 4903 	mla	r9, r9, r3, r4
 8020748:	ea6f 2929 	mvn.w	r9, r9, asr #8
 802074c:	9b02      	ldr	r3, [sp, #8]
 802074e:	9a04      	ldr	r2, [sp, #16]
 8020750:	fa5f f989 	uxtb.w	r9, r9
 8020754:	fb03 f109 	mul.w	r1, r3, r9
 8020758:	9b03      	ldr	r3, [sp, #12]
 802075a:	0a2d      	lsrs	r5, r5, #8
 802075c:	0a00      	lsrs	r0, r0, #8
 802075e:	fb03 f309 	mul.w	r3, r3, r9
 8020762:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8020766:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802076a:	4305      	orrs	r5, r0
 802076c:	fb02 f909 	mul.w	r9, r2, r9
 8020770:	1c58      	adds	r0, r3, #1
 8020772:	1c4a      	adds	r2, r1, #1
 8020774:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020778:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802077c:	0a2b      	lsrs	r3, r5, #8
 802077e:	0c2a      	lsrs	r2, r5, #16
 8020780:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020784:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020788:	00db      	lsls	r3, r3, #3
 802078a:	0212      	lsls	r2, r2, #8
 802078c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8020790:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020794:	4313      	orrs	r3, r2
 8020796:	f109 0201 	add.w	r2, r9, #1
 802079a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 802079e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80207a2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80207a6:	431d      	orrs	r5, r3
 80207a8:	9b01      	ldr	r3, [sp, #4]
 80207aa:	801d      	strh	r5, [r3, #0]
 80207ac:	b009      	add	sp, #36	@ 0x24
 80207ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80207b2:	2000      	movs	r0, #0
 80207b4:	e701      	b.n	80205ba <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80207b6:	2600      	movs	r6, #0
 80207b8:	4630      	mov	r0, r6
 80207ba:	e70b      	b.n	80205d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80207bc:	2600      	movs	r6, #0
 80207be:	e709      	b.n	80205d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80207c0:	462e      	mov	r6, r5
 80207c2:	e707      	b.n	80205d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80207c4:	2700      	movs	r7, #0
 80207c6:	e71a      	b.n	80205fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80207c8:	2100      	movs	r1, #0
 80207ca:	460f      	mov	r7, r1
 80207cc:	e723      	b.n	8020616 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80207ce:	4621      	mov	r1, r4
 80207d0:	4627      	mov	r7, r4
 80207d2:	e720      	b.n	8020616 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80207d4:	2100      	movs	r1, #0
 80207d6:	e71e      	b.n	8020616 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80207d8:	4629      	mov	r1, r5
 80207da:	e71c      	b.n	8020616 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080207dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80207dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207e0:	b09b      	sub	sp, #108	@ 0x6c
 80207e2:	9218      	str	r2, [sp, #96]	@ 0x60
 80207e4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80207e6:	9116      	str	r1, [sp, #88]	@ 0x58
 80207e8:	9307      	str	r3, [sp, #28]
 80207ea:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 80207ee:	9019      	str	r0, [sp, #100]	@ 0x64
 80207f0:	6850      	ldr	r0, [r2, #4]
 80207f2:	6812      	ldr	r2, [r2, #0]
 80207f4:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 80207f6:	fb00 1303 	mla	r3, r0, r3, r1
 80207fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80207fe:	930a      	str	r3, [sp, #40]	@ 0x28
 8020800:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020802:	681b      	ldr	r3, [r3, #0]
 8020804:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020806:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020808:	685e      	ldr	r6, [r3, #4]
 802080a:	3604      	adds	r6, #4
 802080c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802080e:	2b00      	cmp	r3, #0
 8020810:	dc03      	bgt.n	802081a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020812:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020814:	2b00      	cmp	r3, #0
 8020816:	f340 8373 	ble.w	8020f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802081a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802081c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020820:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020824:	1e48      	subs	r0, r1, #1
 8020826:	1e57      	subs	r7, r2, #1
 8020828:	9b07      	ldr	r3, [sp, #28]
 802082a:	2b00      	cmp	r3, #0
 802082c:	f340 8190 	ble.w	8020b50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020830:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020832:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020836:	ea4f 4325 	mov.w	r3, r5, asr #16
 802083a:	d406      	bmi.n	802084a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802083c:	4584      	cmp	ip, r0
 802083e:	da04      	bge.n	802084a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020840:	2b00      	cmp	r3, #0
 8020842:	db02      	blt.n	802084a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020844:	42bb      	cmp	r3, r7
 8020846:	f2c0 8184 	blt.w	8020b52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 802084a:	f11c 0c01 	adds.w	ip, ip, #1
 802084e:	f100 8172 	bmi.w	8020b36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020852:	4561      	cmp	r1, ip
 8020854:	f2c0 816f 	blt.w	8020b36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020858:	3301      	adds	r3, #1
 802085a:	f100 816c 	bmi.w	8020b36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802085e:	429a      	cmp	r2, r3
 8020860:	f2c0 8169 	blt.w	8020b36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020864:	9b07      	ldr	r3, [sp, #28]
 8020866:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8020868:	9317      	str	r3, [sp, #92]	@ 0x5c
 802086a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 802086c:	2b00      	cmp	r3, #0
 802086e:	f340 818e 	ble.w	8020b8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020872:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020874:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020878:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802087a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802087e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020880:	141b      	asrs	r3, r3, #16
 8020882:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020886:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802088a:	f100 81d1 	bmi.w	8020c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 802088e:	f101 38ff 	add.w	r8, r1, #4294967295
 8020892:	4543      	cmp	r3, r8
 8020894:	f280 81cc 	bge.w	8020c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020898:	f1bc 0f00 	cmp.w	ip, #0
 802089c:	f2c0 81c8 	blt.w	8020c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80208a0:	f10e 38ff 	add.w	r8, lr, #4294967295
 80208a4:	45c4      	cmp	ip, r8
 80208a6:	f280 81c3 	bge.w	8020c30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80208aa:	b209      	sxth	r1, r1
 80208ac:	fb0c 3301 	mla	r3, ip, r1, r3
 80208b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80208b2:	eb04 0803 	add.w	r8, r4, r3
 80208b6:	5ce3      	ldrb	r3, [r4, r3]
 80208b8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80208bc:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80208c0:	2a00      	cmp	r2, #0
 80208c2:	f000 81aa 	beq.w	8020c1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 80208c6:	f898 c001 	ldrb.w	ip, [r8, #1]
 80208ca:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80208ce:	940b      	str	r4, [sp, #44]	@ 0x2c
 80208d0:	0e24      	lsrs	r4, r4, #24
 80208d2:	9412      	str	r4, [sp, #72]	@ 0x48
 80208d4:	b178      	cbz	r0, 80208f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80208d6:	eb08 0c01 	add.w	ip, r8, r1
 80208da:	f818 1001 	ldrb.w	r1, [r8, r1]
 80208de:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80208e2:	9108      	str	r1, [sp, #32]
 80208e4:	0e09      	lsrs	r1, r1, #24
 80208e6:	9110      	str	r1, [sp, #64]	@ 0x40
 80208e8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80208ec:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80208f0:	910c      	str	r1, [sp, #48]	@ 0x30
 80208f2:	0e09      	lsrs	r1, r1, #24
 80208f4:	9113      	str	r1, [sp, #76]	@ 0x4c
 80208f6:	b292      	uxth	r2, r2
 80208f8:	b280      	uxth	r0, r0
 80208fa:	fb02 f900 	mul.w	r9, r2, r0
 80208fe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020902:	0112      	lsls	r2, r2, #4
 8020904:	eba2 0809 	sub.w	r8, r2, r9
 8020908:	b280      	uxth	r0, r0
 802090a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802090e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8020910:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020912:	fa1f f888 	uxth.w	r8, r8
 8020916:	1a12      	subs	r2, r2, r0
 8020918:	b292      	uxth	r2, r2
 802091a:	fb08 f101 	mul.w	r1, r8, r1
 802091e:	fb02 110e 	mla	r1, r2, lr, r1
 8020922:	fb00 1104 	mla	r1, r0, r4, r1
 8020926:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020928:	fb09 1104 	mla	r1, r9, r4, r1
 802092c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020930:	2900      	cmp	r1, #0
 8020932:	f000 80f5 	beq.w	8020b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020936:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802093a:	d01b      	beq.n	8020974 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802093c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020940:	fb0e fa0a 	mul.w	sl, lr, sl
 8020944:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020948:	fb0e fe03 	mul.w	lr, lr, r3
 802094c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020950:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020954:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020958:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802095c:	4453      	add	r3, sl
 802095e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020962:	0a1b      	lsrs	r3, r3, #8
 8020964:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020968:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802096c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020970:	ea43 030c 	orr.w	r3, r3, ip
 8020974:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020976:	2cff      	cmp	r4, #255	@ 0xff
 8020978:	d021      	beq.n	80209be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 802097a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802097c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020980:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020982:	fb04 fb0b 	mul.w	fp, r4, fp
 8020986:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020988:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802098c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802098e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020992:	fb04 fa0a 	mul.w	sl, r4, sl
 8020996:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802099a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802099e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80209a2:	44de      	add	lr, fp
 80209a4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80209a8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80209ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209b0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80209b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80209b8:	ea4e 040a 	orr.w	r4, lr, sl
 80209bc:	940b      	str	r4, [sp, #44]	@ 0x2c
 80209be:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80209c0:	2cff      	cmp	r4, #255	@ 0xff
 80209c2:	d021      	beq.n	8020a08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 80209c4:	9c08      	ldr	r4, [sp, #32]
 80209c6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80209ca:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80209cc:	fb04 fb0b 	mul.w	fp, r4, fp
 80209d0:	9c08      	ldr	r4, [sp, #32]
 80209d2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80209d6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80209d8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80209dc:	fb04 fa0a 	mul.w	sl, r4, sl
 80209e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80209e4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80209e8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80209ec:	44de      	add	lr, fp
 80209ee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80209f2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80209f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80209fa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80209fe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020a02:	ea4e 040a 	orr.w	r4, lr, sl
 8020a06:	9408      	str	r4, [sp, #32]
 8020a08:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020a0a:	2cff      	cmp	r4, #255	@ 0xff
 8020a0c:	d021      	beq.n	8020a52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020a0e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020a10:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020a14:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020a16:	fb04 fb0b 	mul.w	fp, r4, fp
 8020a1a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020a1c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020a20:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020a22:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020a26:	fb04 fa0a 	mul.w	sl, r4, sl
 8020a2a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020a2e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020a32:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020a36:	44de      	add	lr, fp
 8020a38:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020a3c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020a40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020a44:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020a48:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020a4c:	ea4e 040a 	orr.w	r4, lr, sl
 8020a50:	940c      	str	r4, [sp, #48]	@ 0x30
 8020a52:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020a54:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020a58:	9c08      	ldr	r4, [sp, #32]
 8020a5a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8020a5e:	fb08 fc0c 	mul.w	ip, r8, ip
 8020a62:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020a66:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020a6a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020a6c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020a70:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020a74:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020a76:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020a7a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8020a7e:	fb08 f80e 	mul.w	r8, r8, lr
 8020a82:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020a86:	fb02 8303 	mla	r3, r2, r3, r8
 8020a8a:	9a08      	ldr	r2, [sp, #32]
 8020a8c:	f8b7 8000 	ldrh.w	r8, [r7]
 8020a90:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020a94:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020a96:	fb00 330a 	mla	r3, r0, sl, r3
 8020a9a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8020a9e:	fb09 3900 	mla	r9, r9, r0, r3
 8020aa2:	43c9      	mvns	r1, r1
 8020aa4:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020aa8:	fa5f fe81 	uxtb.w	lr, r1
 8020aac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ab0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020ab4:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020ab8:	fb02 f20e 	mul.w	r2, r2, lr
 8020abc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020ac0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020ac4:	ea4c 0c09 	orr.w	ip, ip, r9
 8020ac8:	1c53      	adds	r3, r2, #1
 8020aca:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020ace:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020ad2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020ad6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020ada:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020ade:	4a63      	ldr	r2, [pc, #396]	@ (8020c6c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020ae0:	fb00 f00e 	mul.w	r0, r0, lr
 8020ae4:	b2db      	uxtb	r3, r3
 8020ae6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020aea:	1c43      	adds	r3, r0, #1
 8020aec:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020af0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020af4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020af8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020afc:	b2c9      	uxtb	r1, r1
 8020afe:	00db      	lsls	r3, r3, #3
 8020b00:	fb01 f10e 	mul.w	r1, r1, lr
 8020b04:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020b08:	4313      	orrs	r3, r2
 8020b0a:	1c4a      	adds	r2, r1, #1
 8020b0c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020b10:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020b14:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020b18:	ea4c 0c03 	orr.w	ip, ip, r3
 8020b1c:	f8a7 c000 	strh.w	ip, [r7]
 8020b20:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020b22:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020b24:	441a      	add	r2, r3
 8020b26:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020b28:	9225      	str	r2, [sp, #148]	@ 0x94
 8020b2a:	441d      	add	r5, r3
 8020b2c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020b2e:	3b01      	subs	r3, #1
 8020b30:	3702      	adds	r7, #2
 8020b32:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020b34:	e699      	b.n	802086a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020b36:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020b38:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020b3a:	441c      	add	r4, r3
 8020b3c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020b3e:	9425      	str	r4, [sp, #148]	@ 0x94
 8020b40:	441d      	add	r5, r3
 8020b42:	9b07      	ldr	r3, [sp, #28]
 8020b44:	3b01      	subs	r3, #1
 8020b46:	9307      	str	r3, [sp, #28]
 8020b48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020b4a:	3302      	adds	r3, #2
 8020b4c:	930a      	str	r3, [sp, #40]	@ 0x28
 8020b4e:	e66b      	b.n	8020828 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020b50:	d024      	beq.n	8020b9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020b52:	9b07      	ldr	r3, [sp, #28]
 8020b54:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8020b56:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020b58:	3b01      	subs	r3, #1
 8020b5a:	fb00 4003 	mla	r0, r0, r3, r4
 8020b5e:	1400      	asrs	r0, r0, #16
 8020b60:	f53f ae80 	bmi.w	8020864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020b64:	3901      	subs	r1, #1
 8020b66:	4288      	cmp	r0, r1
 8020b68:	f6bf ae7c 	bge.w	8020864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020b6c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8020b6e:	fb01 5303 	mla	r3, r1, r3, r5
 8020b72:	141b      	asrs	r3, r3, #16
 8020b74:	f53f ae76 	bmi.w	8020864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020b78:	3a01      	subs	r2, #1
 8020b7a:	4293      	cmp	r3, r2
 8020b7c:	f6bf ae72 	bge.w	8020864 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020b80:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020b84:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8020b88:	f1bb 0f00 	cmp.w	fp, #0
 8020b8c:	dc70      	bgt.n	8020c70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020b8e:	9b07      	ldr	r3, [sp, #28]
 8020b90:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020b94:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020b96:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020b9a:	930a      	str	r3, [sp, #40]	@ 0x28
 8020b9c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020b9e:	2b00      	cmp	r3, #0
 8020ba0:	f340 81ae 	ble.w	8020f00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020ba4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020ba8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020bac:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020bb0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020bb2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020bb6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020bba:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020bbe:	eef0 6a62 	vmov.f32	s13, s5
 8020bc2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020bc6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020bca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020bce:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8020bd2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020bd6:	eef0 6a43 	vmov.f32	s13, s6
 8020bda:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020bde:	ee12 2a90 	vmov	r2, s5
 8020be2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020be6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020bea:	ee13 2a10 	vmov	r2, s6
 8020bee:	9327      	str	r3, [sp, #156]	@ 0x9c
 8020bf0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020bf2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020bf6:	9328      	str	r3, [sp, #160]	@ 0xa0
 8020bf8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020bfa:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020bfc:	3b01      	subs	r3, #1
 8020bfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020c02:	9316      	str	r3, [sp, #88]	@ 0x58
 8020c04:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020c06:	bf08      	it	eq
 8020c08:	4613      	moveq	r3, r2
 8020c0a:	ee16 5a90 	vmov	r5, s13
 8020c0e:	9307      	str	r3, [sp, #28]
 8020c10:	eeb0 3a67 	vmov.f32	s6, s15
 8020c14:	eef0 2a47 	vmov.f32	s5, s14
 8020c18:	e5f8      	b.n	802080c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020c1a:	2800      	cmp	r0, #0
 8020c1c:	f43f ae6b 	beq.w	80208f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020c20:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020c24:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c28:	9108      	str	r1, [sp, #32]
 8020c2a:	0e09      	lsrs	r1, r1, #24
 8020c2c:	9110      	str	r1, [sp, #64]	@ 0x40
 8020c2e:	e662      	b.n	80208f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020c30:	f113 0801 	adds.w	r8, r3, #1
 8020c34:	f53f af74 	bmi.w	8020b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c38:	4541      	cmp	r1, r8
 8020c3a:	f6ff af71 	blt.w	8020b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c3e:	f11c 0801 	adds.w	r8, ip, #1
 8020c42:	f53f af6d 	bmi.w	8020b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c46:	45c6      	cmp	lr, r8
 8020c48:	f6ff af6a 	blt.w	8020b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c4c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020c50:	b209      	sxth	r1, r1
 8020c52:	fa0f f38e 	sxth.w	r3, lr
 8020c56:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020c5a:	9301      	str	r3, [sp, #4]
 8020c5c:	9100      	str	r1, [sp, #0]
 8020c5e:	4633      	mov	r3, r6
 8020c60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020c62:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8020c64:	4639      	mov	r1, r7
 8020c66:	f7ff fc7a 	bl	802055e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020c6a:	e759      	b.n	8020b20 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020c6c:	fffff800 	.word	0xfffff800
 8020c70:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020c72:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020c74:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020c78:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020c7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020c7e:	1427      	asrs	r7, r4, #16
 8020c80:	142b      	asrs	r3, r5, #16
 8020c82:	fb01 7303 	mla	r3, r1, r3, r7
 8020c86:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020c88:	18e7      	adds	r7, r4, r3
 8020c8a:	5ce3      	ldrb	r3, [r4, r3]
 8020c8c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020c90:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020c94:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020c98:	2a00      	cmp	r2, #0
 8020c9a:	f000 8127 	beq.w	8020eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020c9e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020ca2:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020ca6:	940d      	str	r4, [sp, #52]	@ 0x34
 8020ca8:	0e24      	lsrs	r4, r4, #24
 8020caa:	9414      	str	r4, [sp, #80]	@ 0x50
 8020cac:	b170      	cbz	r0, 8020ccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020cae:	eb07 0e01 	add.w	lr, r7, r1
 8020cb2:	5c79      	ldrb	r1, [r7, r1]
 8020cb4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020cb8:	9109      	str	r1, [sp, #36]	@ 0x24
 8020cba:	0e09      	lsrs	r1, r1, #24
 8020cbc:	9111      	str	r1, [sp, #68]	@ 0x44
 8020cbe:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020cc2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020cc6:	910e      	str	r1, [sp, #56]	@ 0x38
 8020cc8:	0e09      	lsrs	r1, r1, #24
 8020cca:	9115      	str	r1, [sp, #84]	@ 0x54
 8020ccc:	b292      	uxth	r2, r2
 8020cce:	b280      	uxth	r0, r0
 8020cd0:	fb02 f800 	mul.w	r8, r2, r0
 8020cd4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020cd8:	0112      	lsls	r2, r2, #4
 8020cda:	eba2 0e08 	sub.w	lr, r2, r8
 8020cde:	b280      	uxth	r0, r0
 8020ce0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8020ce4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020ce6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020ce8:	fa1f fe8e 	uxth.w	lr, lr
 8020cec:	1a09      	subs	r1, r1, r0
 8020cee:	b289      	uxth	r1, r1
 8020cf0:	fb0e f202 	mul.w	r2, lr, r2
 8020cf4:	fb01 220c 	mla	r2, r1, ip, r2
 8020cf8:	fb00 2204 	mla	r2, r0, r4, r2
 8020cfc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020cfe:	fb08 2204 	mla	r2, r8, r4, r2
 8020d02:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020d06:	2a00      	cmp	r2, #0
 8020d08:	f000 80e5 	beq.w	8020ed6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020d0c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020d10:	d019      	beq.n	8020d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020d12:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020d16:	fb0c fa0a 	mul.w	sl, ip, sl
 8020d1a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020d1e:	fb0c fc03 	mul.w	ip, ip, r3
 8020d22:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020d26:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020d2a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020d2e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8020d32:	4453      	add	r3, sl
 8020d34:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020d38:	0a1b      	lsrs	r3, r3, #8
 8020d3a:	0a3f      	lsrs	r7, r7, #8
 8020d3c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020d40:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020d44:	433b      	orrs	r3, r7
 8020d46:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020d48:	2cff      	cmp	r4, #255	@ 0xff
 8020d4a:	d020      	beq.n	8020d8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020d4c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020d4e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020d52:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020d54:	4367      	muls	r7, r4
 8020d56:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020d58:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020d5c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020d5e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020d62:	fb04 fa0a 	mul.w	sl, r4, sl
 8020d66:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020d6a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020d6e:	44bc      	add	ip, r7
 8020d70:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020d74:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020d78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d7c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d80:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020d84:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020d88:	ea4c 040a 	orr.w	r4, ip, sl
 8020d8c:	940d      	str	r4, [sp, #52]	@ 0x34
 8020d8e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020d90:	2cff      	cmp	r4, #255	@ 0xff
 8020d92:	d020      	beq.n	8020dd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020d94:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020d96:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020d9a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020d9c:	4367      	muls	r7, r4
 8020d9e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020da0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020da4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020da6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020daa:	fb04 fa0a 	mul.w	sl, r4, sl
 8020dae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020db2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020db6:	44bc      	add	ip, r7
 8020db8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020dbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020dc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020dc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020dc8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020dcc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020dd0:	ea4c 040a 	orr.w	r4, ip, sl
 8020dd4:	9409      	str	r4, [sp, #36]	@ 0x24
 8020dd6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020dd8:	2cff      	cmp	r4, #255	@ 0xff
 8020dda:	d020      	beq.n	8020e1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020ddc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020dde:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020de2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020de4:	4367      	muls	r7, r4
 8020de6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020de8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020dec:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020dee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020df2:	fb04 fa0a 	mul.w	sl, r4, sl
 8020df6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020dfa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020dfe:	44bc      	add	ip, r7
 8020e00:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020e04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020e08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020e10:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020e14:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020e18:	ea4c 040a 	orr.w	r4, ip, sl
 8020e1c:	940e      	str	r4, [sp, #56]	@ 0x38
 8020e1e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020e20:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020e24:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020e26:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020e2a:	fb0e f707 	mul.w	r7, lr, r7
 8020e2e:	fb01 770c 	mla	r7, r1, ip, r7
 8020e32:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020e36:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020e38:	fb00 770c 	mla	r7, r0, ip, r7
 8020e3c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020e40:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020e42:	fb08 770c 	mla	r7, r8, ip, r7
 8020e46:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8020e4a:	fb0e fe0c 	mul.w	lr, lr, ip
 8020e4e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020e52:	fb01 e303 	mla	r3, r1, r3, lr
 8020e56:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020e58:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8020e5c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8020e5e:	fb00 330a 	mla	r3, r0, sl, r3
 8020e62:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8020e66:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020e6a:	f8b9 3000 	ldrh.w	r3, [r9]
 8020e6e:	43d2      	mvns	r2, r2
 8020e70:	1218      	asrs	r0, r3, #8
 8020e72:	b2d2      	uxtb	r2, r2
 8020e74:	10d9      	asrs	r1, r3, #3
 8020e76:	0a3f      	lsrs	r7, r7, #8
 8020e78:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020e7c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020e80:	00db      	lsls	r3, r3, #3
 8020e82:	4350      	muls	r0, r2
 8020e84:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020e88:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020e8c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020e90:	b2db      	uxtb	r3, r3
 8020e92:	ea47 070c 	orr.w	r7, r7, ip
 8020e96:	4351      	muls	r1, r2
 8020e98:	4353      	muls	r3, r2
 8020e9a:	1c42      	adds	r2, r0, #1
 8020e9c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020ea0:	0c3a      	lsrs	r2, r7, #16
 8020ea2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020ea6:	4a18      	ldr	r2, [pc, #96]	@ (8020f08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020ea8:	b2c0      	uxtb	r0, r0
 8020eaa:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020eae:	1c4a      	adds	r2, r1, #1
 8020eb0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020eb4:	0a3a      	lsrs	r2, r7, #8
 8020eb6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020eba:	00c9      	lsls	r1, r1, #3
 8020ebc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020ec0:	4301      	orrs	r1, r0
 8020ec2:	1c58      	adds	r0, r3, #1
 8020ec4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020ec8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020ecc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8020ed0:	4308      	orrs	r0, r1
 8020ed2:	f8a9 0000 	strh.w	r0, [r9]
 8020ed6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020ed8:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020eda:	441a      	add	r2, r3
 8020edc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020ede:	9225      	str	r2, [sp, #148]	@ 0x94
 8020ee0:	f109 0902 	add.w	r9, r9, #2
 8020ee4:	441d      	add	r5, r3
 8020ee6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020eea:	e64d      	b.n	8020b88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8020eec:	2800      	cmp	r0, #0
 8020eee:	f43f aeed 	beq.w	8020ccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020ef2:	5c79      	ldrb	r1, [r7, r1]
 8020ef4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ef8:	9109      	str	r1, [sp, #36]	@ 0x24
 8020efa:	0e09      	lsrs	r1, r1, #24
 8020efc:	9111      	str	r1, [sp, #68]	@ 0x44
 8020efe:	e6e5      	b.n	8020ccc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020f00:	b01b      	add	sp, #108	@ 0x6c
 8020f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f06:	bf00      	nop
 8020f08:	fffff800 	.word	0xfffff800

08020f0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020f10:	b085      	sub	sp, #20
 8020f12:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8020f16:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8020f1a:	9103      	str	r1, [sp, #12]
 8020f1c:	fb00 7406 	mla	r4, r0, r6, r7
 8020f20:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020f24:	2800      	cmp	r0, #0
 8020f26:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8020f2a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8020f2e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8020f32:	9501      	str	r5, [sp, #4]
 8020f34:	eb03 0904 	add.w	r9, r3, r4
 8020f38:	f2c0 8150 	blt.w	80211dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020f3c:	4583      	cmp	fp, r0
 8020f3e:	f340 814d 	ble.w	80211dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020f42:	2f00      	cmp	r7, #0
 8020f44:	f2c0 8146 	blt.w	80211d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020f48:	42be      	cmp	r6, r7
 8020f4a:	f340 8143 	ble.w	80211d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020f4e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8020f52:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020f56:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020f5a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8020f5e:	4355      	muls	r5, r2
 8020f60:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020f64:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8020f68:	fb0c f203 	mul.w	r2, ip, r3
 8020f6c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020f70:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8020f74:	441d      	add	r5, r3
 8020f76:	f102 0320 	add.w	r3, r2, #32
 8020f7a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020f7e:	0a1b      	lsrs	r3, r3, #8
 8020f80:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020f84:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020f88:	431c      	orrs	r4, r3
 8020f8a:	1c7b      	adds	r3, r7, #1
 8020f8c:	f100 812b 	bmi.w	80211e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020f90:	429e      	cmp	r6, r3
 8020f92:	f340 8128 	ble.w	80211e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020f96:	2900      	cmp	r1, #0
 8020f98:	f000 8128 	beq.w	80211ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8020f9c:	9a01      	ldr	r2, [sp, #4]
 8020f9e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020fa2:	8855      	ldrh	r5, [r2, #2]
 8020fa4:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020fa8:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8020fac:	fb08 f802 	mul.w	r8, r8, r2
 8020fb0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020fb4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8020fb8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020fbc:	435d      	muls	r5, r3
 8020fbe:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020fc2:	44d0      	add	r8, sl
 8020fc4:	f105 0a20 	add.w	sl, r5, #32
 8020fc8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020fcc:	0a2d      	lsrs	r5, r5, #8
 8020fce:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020fd2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020fd6:	432a      	orrs	r2, r5
 8020fd8:	3001      	adds	r0, #1
 8020fda:	f100 810d 	bmi.w	80211f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020fde:	4583      	cmp	fp, r0
 8020fe0:	f340 810a 	ble.w	80211f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020fe4:	f1be 0f00 	cmp.w	lr, #0
 8020fe8:	f000 810b 	beq.w	8021202 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8020fec:	2f00      	cmp	r7, #0
 8020fee:	f2c0 8100 	blt.w	80211f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020ff2:	42be      	cmp	r6, r7
 8020ff4:	f340 80fd 	ble.w	80211f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020ff8:	9801      	ldr	r0, [sp, #4]
 8020ffa:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020ffe:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021002:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021006:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 802100a:	fb0a fa00 	mul.w	sl, sl, r0
 802100e:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8021012:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021016:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802101a:	fb05 f808 	mul.w	r8, r5, r8
 802101e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8021022:	4482      	add	sl, r0
 8021024:	f108 0020 	add.w	r0, r8, #32
 8021028:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802102c:	0a00      	lsrs	r0, r0, #8
 802102e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021032:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021036:	ea4b 0b00 	orr.w	fp, fp, r0
 802103a:	3701      	adds	r7, #1
 802103c:	f100 80e6 	bmi.w	802120c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021040:	42be      	cmp	r6, r7
 8021042:	f340 80e3 	ble.w	802120c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021046:	2900      	cmp	r1, #0
 8021048:	f000 80e3 	beq.w	8021212 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802104c:	3601      	adds	r6, #1
 802104e:	9801      	ldr	r0, [sp, #4]
 8021050:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021054:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021058:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802105c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8021060:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021064:	fb09 f906 	mul.w	r9, r9, r6
 8021068:	fb07 f800 	mul.w	r8, r7, r0
 802106c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8021070:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021074:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8021078:	44d1      	add	r9, sl
 802107a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802107e:	f108 0020 	add.w	r0, r8, #32
 8021082:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021086:	0a00      	lsrs	r0, r0, #8
 8021088:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802108c:	4330      	orrs	r0, r6
 802108e:	b28e      	uxth	r6, r1
 8021090:	fa1f f98e 	uxth.w	r9, lr
 8021094:	fb06 f809 	mul.w	r8, r6, r9
 8021098:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802109c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80210a0:	0136      	lsls	r6, r6, #4
 80210a2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80210a6:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80210aa:	9601      	str	r6, [sp, #4]
 80210ac:	ea4a 0404 	orr.w	r4, sl, r4
 80210b0:	fa1f f689 	uxth.w	r6, r9
 80210b4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80210b8:	fb11 f90e 	smulbb	r9, r1, lr
 80210bc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80210c0:	9602      	str	r6, [sp, #8]
 80210c2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80210c6:	4626      	mov	r6, r4
 80210c8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80210cc:	f1ce 0410 	rsb	r4, lr, #16
 80210d0:	1a64      	subs	r4, r4, r1
 80210d2:	ea4a 0202 	orr.w	r2, sl, r2
 80210d6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80210da:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80210de:	434a      	muls	r2, r1
 80210e0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80210e4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80210e8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80210ec:	fb04 2406 	mla	r4, r4, r6, r2
 80210f0:	ea4a 0000 	orr.w	r0, sl, r0
 80210f4:	fb09 4200 	mla	r2, r9, r0, r4
 80210f8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80210fc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021100:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021104:	ea44 0b0b 	orr.w	fp, r4, fp
 8021108:	9c01      	ldr	r4, [sp, #4]
 802110a:	9e02      	ldr	r6, [sp, #8]
 802110c:	9903      	ldr	r1, [sp, #12]
 802110e:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8021112:	1ba4      	subs	r4, r4, r6
 8021114:	9e01      	ldr	r6, [sp, #4]
 8021116:	8808      	ldrh	r0, [r1, #0]
 8021118:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 802111c:	eba6 0608 	sub.w	r6, r6, r8
 8021120:	b2b6      	uxth	r6, r6
 8021122:	b2a4      	uxth	r4, r4
 8021124:	4373      	muls	r3, r6
 8021126:	fb0c 3304 	mla	r3, ip, r4, r3
 802112a:	9c02      	ldr	r4, [sp, #8]
 802112c:	fb04 3505 	mla	r5, r4, r5, r3
 8021130:	fb08 5707 	mla	r7, r8, r7, r5
 8021134:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021138:	b289      	uxth	r1, r1
 802113a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802113e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021142:	434f      	muls	r7, r1
 8021144:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021148:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802114c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021150:	1c7b      	adds	r3, r7, #1
 8021152:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021156:	ea42 0e0e 	orr.w	lr, r2, lr
 802115a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802115e:	fa1f f28e 	uxth.w	r2, lr
 8021162:	1203      	asrs	r3, r0, #8
 8021164:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021168:	b2ff      	uxtb	r7, r7
 802116a:	1215      	asrs	r5, r2, #8
 802116c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021170:	fb13 f307 	smulbb	r3, r3, r7
 8021174:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021178:	fb05 3501 	mla	r5, r5, r1, r3
 802117c:	10c3      	asrs	r3, r0, #3
 802117e:	10d4      	asrs	r4, r2, #3
 8021180:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021184:	fb13 f307 	smulbb	r3, r3, r7
 8021188:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802118c:	fb04 3401 	mla	r4, r4, r1, r3
 8021190:	00c3      	lsls	r3, r0, #3
 8021192:	00d2      	lsls	r2, r2, #3
 8021194:	b2db      	uxtb	r3, r3
 8021196:	fb13 f307 	smulbb	r3, r3, r7
 802119a:	b2d2      	uxtb	r2, r2
 802119c:	fb02 3101 	mla	r1, r2, r1, r3
 80211a0:	b2ad      	uxth	r5, r5
 80211a2:	b289      	uxth	r1, r1
 80211a4:	b2a4      	uxth	r4, r4
 80211a6:	1c6b      	adds	r3, r5, #1
 80211a8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80211ac:	1c62      	adds	r2, r4, #1
 80211ae:	1c4b      	adds	r3, r1, #1
 80211b0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80211b4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80211b8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80211bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80211c0:	0964      	lsrs	r4, r4, #5
 80211c2:	432b      	orrs	r3, r5
 80211c4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80211c8:	9a03      	ldr	r2, [sp, #12]
 80211ca:	4323      	orrs	r3, r4
 80211cc:	8013      	strh	r3, [r2, #0]
 80211ce:	b005      	add	sp, #20
 80211d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211d4:	f04f 0c00 	mov.w	ip, #0
 80211d8:	4664      	mov	r4, ip
 80211da:	e6d6      	b.n	8020f8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80211dc:	2300      	movs	r3, #0
 80211de:	469c      	mov	ip, r3
 80211e0:	461a      	mov	r2, r3
 80211e2:	461c      	mov	r4, r3
 80211e4:	e6f8      	b.n	8020fd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80211e6:	2300      	movs	r3, #0
 80211e8:	461a      	mov	r2, r3
 80211ea:	e6f5      	b.n	8020fd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80211ec:	460b      	mov	r3, r1
 80211ee:	460a      	mov	r2, r1
 80211f0:	e6f2      	b.n	8020fd8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80211f2:	2500      	movs	r5, #0
 80211f4:	46ab      	mov	fp, r5
 80211f6:	e720      	b.n	802103a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80211f8:	2700      	movs	r7, #0
 80211fa:	463d      	mov	r5, r7
 80211fc:	4638      	mov	r0, r7
 80211fe:	46bb      	mov	fp, r7
 8021200:	e745      	b.n	802108e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021202:	4677      	mov	r7, lr
 8021204:	4675      	mov	r5, lr
 8021206:	4670      	mov	r0, lr
 8021208:	46f3      	mov	fp, lr
 802120a:	e740      	b.n	802108e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802120c:	2700      	movs	r7, #0
 802120e:	4638      	mov	r0, r7
 8021210:	e73d      	b.n	802108e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021212:	460f      	mov	r7, r1
 8021214:	4608      	mov	r0, r1
 8021216:	e73a      	b.n	802108e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021218 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802121c:	b097      	sub	sp, #92	@ 0x5c
 802121e:	9214      	str	r2, [sp, #80]	@ 0x50
 8021220:	9308      	str	r3, [sp, #32]
 8021222:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8021224:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8021228:	9312      	str	r3, [sp, #72]	@ 0x48
 802122a:	9111      	str	r1, [sp, #68]	@ 0x44
 802122c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8021230:	9015      	str	r0, [sp, #84]	@ 0x54
 8021232:	6850      	ldr	r0, [r2, #4]
 8021234:	6812      	ldr	r2, [r2, #0]
 8021236:	fb00 1303 	mla	r3, r0, r3, r1
 802123a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802123e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021240:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021242:	681b      	ldr	r3, [r3, #0]
 8021244:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021246:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021248:	685b      	ldr	r3, [r3, #4]
 802124a:	930c      	str	r3, [sp, #48]	@ 0x30
 802124c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8021250:	930a      	str	r3, [sp, #40]	@ 0x28
 8021252:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021254:	2b00      	cmp	r3, #0
 8021256:	dc03      	bgt.n	8021260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021258:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802125a:	2b00      	cmp	r3, #0
 802125c:	f340 83cb 	ble.w	80219f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021260:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021262:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021266:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802126a:	1e48      	subs	r0, r1, #1
 802126c:	1e55      	subs	r5, r2, #1
 802126e:	9b08      	ldr	r3, [sp, #32]
 8021270:	2b00      	cmp	r3, #0
 8021272:	f340 81a3 	ble.w	80215bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021276:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8021278:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802127a:	1436      	asrs	r6, r6, #16
 802127c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021280:	d406      	bmi.n	8021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021282:	4286      	cmp	r6, r0
 8021284:	da04      	bge.n	8021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021286:	2b00      	cmp	r3, #0
 8021288:	db02      	blt.n	8021290 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802128a:	42ab      	cmp	r3, r5
 802128c:	f2c0 8197 	blt.w	80215be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021290:	3601      	adds	r6, #1
 8021292:	f100 8184 	bmi.w	802159e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021296:	42b1      	cmp	r1, r6
 8021298:	f2c0 8181 	blt.w	802159e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802129c:	3301      	adds	r3, #1
 802129e:	f100 817e 	bmi.w	802159e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80212a2:	429a      	cmp	r2, r3
 80212a4:	f2c0 817b 	blt.w	802159e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80212a8:	9b08      	ldr	r3, [sp, #32]
 80212aa:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80212ac:	9313      	str	r3, [sp, #76]	@ 0x4c
 80212ae:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80212b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80212b4:	2b00      	cmp	r3, #0
 80212b6:	f340 81a4 	ble.w	8021602 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80212ba:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80212bc:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80212be:	1418      	asrs	r0, r3, #16
 80212c0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80212c2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80212c6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80212c8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80212cc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80212ce:	142d      	asrs	r5, r5, #16
 80212d0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80212d4:	f100 81f8 	bmi.w	80216c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80212d8:	f102 3eff 	add.w	lr, r2, #4294967295
 80212dc:	4575      	cmp	r5, lr
 80212de:	f280 81f3 	bge.w	80216c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80212e2:	2800      	cmp	r0, #0
 80212e4:	f2c0 81f0 	blt.w	80216c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80212e8:	f103 3eff 	add.w	lr, r3, #4294967295
 80212ec:	4570      	cmp	r0, lr
 80212ee:	f280 81eb 	bge.w	80216c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80212f2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80212f4:	b212      	sxth	r2, r2
 80212f6:	fb00 5002 	mla	r0, r0, r2, r5
 80212fa:	fa1f fe81 	uxth.w	lr, r1
 80212fe:	eb03 0a00 	add.w	sl, r3, r0
 8021302:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021306:	f813 9000 	ldrb.w	r9, [r3, r0]
 802130a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802130e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021312:	b29b      	uxth	r3, r3
 8021314:	f1bc 0f00 	cmp.w	ip, #0
 8021318:	f000 81b9 	beq.w	802168e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 802131c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021320:	940d      	str	r4, [sp, #52]	@ 0x34
 8021322:	eb0a 0b02 	add.w	fp, sl, r2
 8021326:	fa1f fa8c 	uxth.w	sl, ip
 802132a:	fb0a fe0e 	mul.w	lr, sl, lr
 802132e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021332:	fa1f fa8a 	uxth.w	sl, sl
 8021336:	eba5 050e 	sub.w	r5, r5, lr
 802133a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802133e:	940e      	str	r4, [sp, #56]	@ 0x38
 8021340:	eba3 030a 	sub.w	r3, r3, sl
 8021344:	b2ad      	uxth	r5, r5
 8021346:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021348:	b29b      	uxth	r3, r3
 802134a:	fb08 f505 	mul.w	r5, r8, r5
 802134e:	fb09 5303 	mla	r3, r9, r3, r5
 8021352:	fb0a 3304 	mla	r3, sl, r4, r3
 8021356:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021358:	fb0e 3304 	mla	r3, lr, r4, r3
 802135c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021360:	2b00      	cmp	r3, #0
 8021362:	f000 810f 	beq.w	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021366:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021368:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802136c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021370:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021374:	f000 8190 	beq.w	8021698 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021378:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802137c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021380:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021384:	fb09 f000 	mul.w	r0, r9, r0
 8021388:	fb0a fe0e 	mul.w	lr, sl, lr
 802138c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021390:	f100 0b20 	add.w	fp, r0, #32
 8021394:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021398:	44ce      	add	lr, r9
 802139a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802139e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80213a2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80213a6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80213aa:	ea4e 0909 	orr.w	r9, lr, r9
 80213ae:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80213b2:	8868      	ldrh	r0, [r5, #2]
 80213b4:	d019      	beq.n	80213ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80213b6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80213ba:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80213be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80213c2:	fb08 f800 	mul.w	r8, r8, r0
 80213c6:	fb0a fe0e 	mul.w	lr, sl, lr
 80213ca:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80213ce:	f108 0b20 	add.w	fp, r8, #32
 80213d2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80213d6:	4486      	add	lr, r0
 80213d8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80213dc:	0a00      	lsrs	r0, r0, #8
 80213de:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80213e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80213e6:	ea4e 0000 	orr.w	r0, lr, r0
 80213ea:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80213ee:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80213f2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80213f6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80213fa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80213fe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021402:	ea4e 0909 	orr.w	r9, lr, r9
 8021406:	ea4a 0000 	orr.w	r0, sl, r0
 802140a:	f1bc 0f00 	cmp.w	ip, #0
 802140e:	f000 8145 	beq.w	802169c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021412:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8021416:	3a01      	subs	r2, #1
 8021418:	0052      	lsls	r2, r2, #1
 802141a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802141c:	3202      	adds	r2, #2
 802141e:	2cff      	cmp	r4, #255	@ 0xff
 8021420:	eb05 0e02 	add.w	lr, r5, r2
 8021424:	5aaa      	ldrh	r2, [r5, r2]
 8021426:	d018      	beq.n	802145a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021428:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 802142c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021430:	fb04 fa02 	mul.w	sl, r4, r2
 8021434:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021438:	fb08 f805 	mul.w	r8, r8, r5
 802143c:	f10a 0520 	add.w	r5, sl, #32
 8021440:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021444:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021448:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802144c:	4442      	add	r2, r8
 802144e:	0a2d      	lsrs	r5, r5, #8
 8021450:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021454:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021458:	432a      	orrs	r2, r5
 802145a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802145c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021460:	2cff      	cmp	r4, #255	@ 0xff
 8021462:	d01a      	beq.n	802149a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021464:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8021468:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802146c:	fb04 fa05 	mul.w	sl, r4, r5
 8021470:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021474:	fb08 f80e 	mul.w	r8, r8, lr
 8021478:	f10a 0e20 	add.w	lr, sl, #32
 802147c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021480:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021484:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021488:	4445      	add	r5, r8
 802148a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802148e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021492:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021496:	ea45 050e 	orr.w	r5, r5, lr
 802149a:	fb1c fe01 	smulbb	lr, ip, r1
 802149e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80214a2:	f1cc 0810 	rsb	r8, ip, #16
 80214a6:	eba8 0801 	sub.w	r8, r8, r1
 80214aa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80214ae:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80214b2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80214b6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80214ba:	4341      	muls	r1, r0
 80214bc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80214c0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80214c4:	ea4a 0202 	orr.w	r2, sl, r2
 80214c8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80214cc:	fb09 1108 	mla	r1, r9, r8, r1
 80214d0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80214d4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80214d8:	fb0c 1102 	mla	r1, ip, r2, r1
 80214dc:	ea4b 0505 	orr.w	r5, fp, r5
 80214e0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80214e4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80214e8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80214ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80214f0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80214f4:	ea42 0e0e 	orr.w	lr, r2, lr
 80214f8:	fa1f f28e 	uxth.w	r2, lr
 80214fc:	2bff      	cmp	r3, #255	@ 0xff
 80214fe:	d103      	bne.n	8021508 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021500:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8021502:	29ff      	cmp	r1, #255	@ 0xff
 8021504:	f000 80de 	beq.w	80216c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021508:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802150a:	8838      	ldrh	r0, [r7, #0]
 802150c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802150e:	434b      	muls	r3, r1
 8021510:	f103 0c01 	add.w	ip, r3, #1
 8021514:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021518:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802151c:	fa5f fc83 	uxtb.w	ip, r3
 8021520:	1203      	asrs	r3, r0, #8
 8021522:	1215      	asrs	r5, r2, #8
 8021524:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021528:	fb13 f30c 	smulbb	r3, r3, ip
 802152c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021530:	fb05 3501 	mla	r5, r5, r1, r3
 8021534:	10c3      	asrs	r3, r0, #3
 8021536:	10d1      	asrs	r1, r2, #3
 8021538:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802153c:	fb13 f30c 	smulbb	r3, r3, ip
 8021540:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021544:	fb01 3104 	mla	r1, r1, r4, r3
 8021548:	00c3      	lsls	r3, r0, #3
 802154a:	00d2      	lsls	r2, r2, #3
 802154c:	b2db      	uxtb	r3, r3
 802154e:	b2d2      	uxtb	r2, r2
 8021550:	fb13 f30c 	smulbb	r3, r3, ip
 8021554:	b2ad      	uxth	r5, r5
 8021556:	fb02 3304 	mla	r3, r2, r4, r3
 802155a:	b29a      	uxth	r2, r3
 802155c:	1c6b      	adds	r3, r5, #1
 802155e:	b289      	uxth	r1, r1
 8021560:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021564:	1c53      	adds	r3, r2, #1
 8021566:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802156a:	1c4a      	adds	r2, r1, #1
 802156c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021570:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021574:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021578:	0949      	lsrs	r1, r1, #5
 802157a:	432b      	orrs	r3, r5
 802157c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021580:	430b      	orrs	r3, r1
 8021582:	803b      	strh	r3, [r7, #0]
 8021584:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021586:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021588:	4413      	add	r3, r2
 802158a:	9321      	str	r3, [sp, #132]	@ 0x84
 802158c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802158e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021590:	441a      	add	r2, r3
 8021592:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021594:	9222      	str	r2, [sp, #136]	@ 0x88
 8021596:	3b01      	subs	r3, #1
 8021598:	3702      	adds	r7, #2
 802159a:	9313      	str	r3, [sp, #76]	@ 0x4c
 802159c:	e689      	b.n	80212b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802159e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80215a0:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 80215a2:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 80215a4:	4433      	add	r3, r6
 80215a6:	9321      	str	r3, [sp, #132]	@ 0x84
 80215a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80215aa:	441c      	add	r4, r3
 80215ac:	9b08      	ldr	r3, [sp, #32]
 80215ae:	9422      	str	r4, [sp, #136]	@ 0x88
 80215b0:	3b01      	subs	r3, #1
 80215b2:	9308      	str	r3, [sp, #32]
 80215b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80215b6:	3302      	adds	r3, #2
 80215b8:	9309      	str	r3, [sp, #36]	@ 0x24
 80215ba:	e658      	b.n	802126e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80215bc:	d028      	beq.n	8021610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80215be:	9b08      	ldr	r3, [sp, #32]
 80215c0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80215c2:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 80215c4:	3b01      	subs	r3, #1
 80215c6:	fb00 5003 	mla	r0, r0, r3, r5
 80215ca:	1400      	asrs	r0, r0, #16
 80215cc:	f53f ae6c 	bmi.w	80212a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80215d0:	3901      	subs	r1, #1
 80215d2:	4288      	cmp	r0, r1
 80215d4:	f6bf ae68 	bge.w	80212a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80215d8:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80215da:	9822      	ldr	r0, [sp, #136]	@ 0x88
 80215dc:	fb01 0303 	mla	r3, r1, r3, r0
 80215e0:	141b      	asrs	r3, r3, #16
 80215e2:	f53f ae61 	bmi.w	80212a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80215e6:	3a01      	subs	r2, #1
 80215e8:	4293      	cmp	r3, r2
 80215ea:	f6bf ae5d 	bge.w	80212a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80215ee:	9b08      	ldr	r3, [sp, #32]
 80215f0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80215f4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80215f6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80215fa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80215fc:	2b00      	cmp	r3, #0
 80215fe:	f300 8082 	bgt.w	8021706 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021602:	9b08      	ldr	r3, [sp, #32]
 8021604:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021608:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802160a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802160e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021610:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021612:	2b00      	cmp	r3, #0
 8021614:	f340 81ef 	ble.w	80219f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021618:	ee30 0a04 	vadd.f32	s0, s0, s8
 802161c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021620:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021624:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021626:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802162a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802162e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021632:	eef0 6a62 	vmov.f32	s13, s5
 8021636:	ee61 7a27 	vmul.f32	s15, s2, s15
 802163a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802163e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021642:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8021646:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802164a:	eef0 6a43 	vmov.f32	s13, s6
 802164e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021652:	ee12 2a90 	vmov	r2, s5
 8021656:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802165a:	fb92 f3f3 	sdiv	r3, r2, r3
 802165e:	ee13 2a10 	vmov	r2, s6
 8021662:	9323      	str	r3, [sp, #140]	@ 0x8c
 8021664:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021666:	fb92 f3f3 	sdiv	r3, r2, r3
 802166a:	9324      	str	r3, [sp, #144]	@ 0x90
 802166c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802166e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021670:	3b01      	subs	r3, #1
 8021672:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021676:	9311      	str	r3, [sp, #68]	@ 0x44
 8021678:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802167a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 802167e:	bf08      	it	eq
 8021680:	4613      	moveq	r3, r2
 8021682:	9308      	str	r3, [sp, #32]
 8021684:	eeb0 3a67 	vmov.f32	s6, s15
 8021688:	eef0 2a47 	vmov.f32	s5, s14
 802168c:	e5e1      	b.n	8021252 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802168e:	fb08 f505 	mul.w	r5, r8, r5
 8021692:	fb09 5303 	mla	r3, r9, r3, r5
 8021696:	e661      	b.n	802135c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021698:	4681      	mov	r9, r0
 802169a:	e688      	b.n	80213ae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802169c:	f1c1 0210 	rsb	r2, r1, #16
 80216a0:	4341      	muls	r1, r0
 80216a2:	fb09 1902 	mla	r9, r9, r2, r1
 80216a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80216aa:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80216ae:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80216b2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80216b6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80216ba:	ea42 0909 	orr.w	r9, r2, r9
 80216be:	fa1f f289 	uxth.w	r2, r9
 80216c2:	e71b      	b.n	80214fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 80216c4:	803a      	strh	r2, [r7, #0]
 80216c6:	e75d      	b.n	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80216c8:	f115 0e01 	adds.w	lr, r5, #1
 80216cc:	f53f af5a 	bmi.w	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80216d0:	4572      	cmp	r2, lr
 80216d2:	f6ff af57 	blt.w	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80216d6:	f110 0e01 	adds.w	lr, r0, #1
 80216da:	f53f af53 	bmi.w	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80216de:	4573      	cmp	r3, lr
 80216e0:	f6ff af50 	blt.w	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80216e4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80216e6:	9502      	str	r5, [sp, #8]
 80216e8:	b21b      	sxth	r3, r3
 80216ea:	b212      	sxth	r2, r2
 80216ec:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80216f0:	9301      	str	r3, [sp, #4]
 80216f2:	9200      	str	r2, [sp, #0]
 80216f4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80216f8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80216fc:	4639      	mov	r1, r7
 80216fe:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8021700:	f7ff fc04 	bl	8020f0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021704:	e73e      	b.n	8021584 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021706:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021708:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802170c:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802170e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021712:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021714:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021718:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802171a:	141f      	asrs	r7, r3, #16
 802171c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802171e:	141b      	asrs	r3, r3, #16
 8021720:	fb01 3707 	mla	r7, r1, r7, r3
 8021724:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021726:	fa1f fc82 	uxth.w	ip, r2
 802172a:	eb03 0a07 	add.w	sl, r3, r7
 802172e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021732:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021736:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802173a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802173e:	b29b      	uxth	r3, r3
 8021740:	2d00      	cmp	r5, #0
 8021742:	f000 813d 	beq.w	80219c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021746:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802174a:	940f      	str	r4, [sp, #60]	@ 0x3c
 802174c:	eb0a 0b01 	add.w	fp, sl, r1
 8021750:	fa1f fa85 	uxth.w	sl, r5
 8021754:	fb0a fc0c 	mul.w	ip, sl, ip
 8021758:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802175c:	fa1f fa8a 	uxth.w	sl, sl
 8021760:	eba0 000c 	sub.w	r0, r0, ip
 8021764:	eba3 030a 	sub.w	r3, r3, sl
 8021768:	b280      	uxth	r0, r0
 802176a:	fb08 f000 	mul.w	r0, r8, r0
 802176e:	b29b      	uxth	r3, r3
 8021770:	fb09 0303 	mla	r3, r9, r3, r0
 8021774:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8021776:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802177a:	9410      	str	r4, [sp, #64]	@ 0x40
 802177c:	fb0a 3300 	mla	r3, sl, r0, r3
 8021780:	fb0c 3304 	mla	r3, ip, r4, r3
 8021784:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021788:	2b00      	cmp	r3, #0
 802178a:	f000 810b 	beq.w	80219a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 802178e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8021790:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021792:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021796:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802179a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802179e:	f000 8114 	beq.w	80219ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 80217a2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80217a6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80217aa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80217ae:	fb09 f707 	mul.w	r7, r9, r7
 80217b2:	fb0a fc0c 	mul.w	ip, sl, ip
 80217b6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80217ba:	f107 0b20 	add.w	fp, r7, #32
 80217be:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80217c2:	44cc      	add	ip, r9
 80217c4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80217c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80217cc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80217d0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80217d4:	ea4c 0909 	orr.w	r9, ip, r9
 80217d8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80217dc:	8847      	ldrh	r7, [r0, #2]
 80217de:	d019      	beq.n	8021814 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 80217e0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80217e4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80217e8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80217ec:	fb08 f807 	mul.w	r8, r8, r7
 80217f0:	fb0a fc0c 	mul.w	ip, sl, ip
 80217f4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80217f8:	f108 0b20 	add.w	fp, r8, #32
 80217fc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8021800:	44bc      	add	ip, r7
 8021802:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021806:	0a3f      	lsrs	r7, r7, #8
 8021808:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802180c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021810:	ea4c 0707 	orr.w	r7, ip, r7
 8021814:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021818:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802181c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021820:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021824:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021828:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802182c:	ea4c 0909 	orr.w	r9, ip, r9
 8021830:	ea4a 0707 	orr.w	r7, sl, r7
 8021834:	2d00      	cmp	r5, #0
 8021836:	f000 80ca 	beq.w	80219ce <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802183a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802183e:	3901      	subs	r1, #1
 8021840:	0049      	lsls	r1, r1, #1
 8021842:	3102      	adds	r1, #2
 8021844:	eb00 0c01 	add.w	ip, r0, r1
 8021848:	5a41      	ldrh	r1, [r0, r1]
 802184a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 802184c:	28ff      	cmp	r0, #255	@ 0xff
 802184e:	d019      	beq.n	8021884 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021850:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8021852:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8021856:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802185a:	fb04 fa01 	mul.w	sl, r4, r1
 802185e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021862:	fb08 f800 	mul.w	r8, r8, r0
 8021866:	f10a 0020 	add.w	r0, sl, #32
 802186a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802186e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021872:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021876:	4441      	add	r1, r8
 8021878:	0a00      	lsrs	r0, r0, #8
 802187a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802187e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021882:	4301      	orrs	r1, r0
 8021884:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021886:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802188a:	2cff      	cmp	r4, #255	@ 0xff
 802188c:	d01a      	beq.n	80218c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 802188e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8021892:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021896:	fb04 fa00 	mul.w	sl, r4, r0
 802189a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802189e:	fb08 f80c 	mul.w	r8, r8, ip
 80218a2:	f10a 0c20 	add.w	ip, sl, #32
 80218a6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80218aa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80218ae:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80218b2:	4440      	add	r0, r8
 80218b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218b8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80218bc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80218c0:	ea40 000c 	orr.w	r0, r0, ip
 80218c4:	fb15 fc02 	smulbb	ip, r5, r2
 80218c8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80218cc:	f1c5 0810 	rsb	r8, r5, #16
 80218d0:	eba8 0802 	sub.w	r8, r8, r2
 80218d4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80218d8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80218dc:	437a      	muls	r2, r7
 80218de:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80218e2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80218e6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80218ea:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80218ee:	fb09 2208 	mla	r2, r9, r8, r2
 80218f2:	ea4a 0101 	orr.w	r1, sl, r1
 80218f6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80218fa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80218fe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021902:	fb05 2201 	mla	r2, r5, r1, r2
 8021906:	ea4b 0000 	orr.w	r0, fp, r0
 802190a:	fb0c 2200 	mla	r2, ip, r0, r2
 802190e:	0d57      	lsrs	r7, r2, #21
 8021910:	0952      	lsrs	r2, r2, #5
 8021912:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021916:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802191a:	433a      	orrs	r2, r7
 802191c:	2bff      	cmp	r3, #255	@ 0xff
 802191e:	b292      	uxth	r2, r2
 8021920:	d102      	bne.n	8021928 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021922:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8021924:	29ff      	cmp	r1, #255	@ 0xff
 8021926:	d063      	beq.n	80219f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021928:	980a      	ldr	r0, [sp, #40]	@ 0x28
 802192a:	f8be 1000 	ldrh.w	r1, [lr]
 802192e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021930:	4343      	muls	r3, r0
 8021932:	1c58      	adds	r0, r3, #1
 8021934:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021938:	ea6f 2323 	mvn.w	r3, r3, asr #8
 802193c:	1208      	asrs	r0, r1, #8
 802193e:	b2db      	uxtb	r3, r3
 8021940:	1215      	asrs	r5, r2, #8
 8021942:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021946:	fb10 f003 	smulbb	r0, r0, r3
 802194a:	10cf      	asrs	r7, r1, #3
 802194c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021950:	00c9      	lsls	r1, r1, #3
 8021952:	fb05 0504 	mla	r5, r5, r4, r0
 8021956:	b2c9      	uxtb	r1, r1
 8021958:	10d0      	asrs	r0, r2, #3
 802195a:	00d2      	lsls	r2, r2, #3
 802195c:	fb11 f103 	smulbb	r1, r1, r3
 8021960:	b2d2      	uxtb	r2, r2
 8021962:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8021966:	fb02 1204 	mla	r2, r2, r4, r1
 802196a:	fb17 f703 	smulbb	r7, r7, r3
 802196e:	b2ad      	uxth	r5, r5
 8021970:	b292      	uxth	r2, r2
 8021972:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021976:	fb00 7004 	mla	r0, r0, r4, r7
 802197a:	1c6b      	adds	r3, r5, #1
 802197c:	1c57      	adds	r7, r2, #1
 802197e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021982:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021986:	b280      	uxth	r0, r0
 8021988:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802198c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021990:	433d      	orrs	r5, r7
 8021992:	1c47      	adds	r7, r0, #1
 8021994:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021998:	097f      	lsrs	r7, r7, #5
 802199a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802199e:	433d      	orrs	r5, r7
 80219a0:	f8ae 5000 	strh.w	r5, [lr]
 80219a4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80219a6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80219a8:	4413      	add	r3, r2
 80219aa:	9321      	str	r3, [sp, #132]	@ 0x84
 80219ac:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80219ae:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80219b0:	441a      	add	r2, r3
 80219b2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80219b4:	9222      	str	r2, [sp, #136]	@ 0x88
 80219b6:	3b01      	subs	r3, #1
 80219b8:	f10e 0e02 	add.w	lr, lr, #2
 80219bc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80219be:	e61c      	b.n	80215fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 80219c0:	fb08 f000 	mul.w	r0, r8, r0
 80219c4:	fb09 0303 	mla	r3, r9, r3, r0
 80219c8:	e6dc      	b.n	8021784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 80219ca:	46b9      	mov	r9, r7
 80219cc:	e704      	b.n	80217d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 80219ce:	f1c2 0110 	rsb	r1, r2, #16
 80219d2:	437a      	muls	r2, r7
 80219d4:	fb09 2901 	mla	r9, r9, r1, r2
 80219d8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80219dc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80219e0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80219e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80219e8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80219ec:	4302      	orrs	r2, r0
 80219ee:	e795      	b.n	802191c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 80219f0:	f8ae 2000 	strh.w	r2, [lr]
 80219f4:	e7d6      	b.n	80219a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 80219f6:	b017      	add	sp, #92	@ 0x5c
 80219f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080219fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80219fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a00:	b085      	sub	sp, #20
 8021a02:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8021a06:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8021a0a:	9103      	str	r1, [sp, #12]
 8021a0c:	fb00 7406 	mla	r4, r0, r6, r7
 8021a10:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021a14:	2800      	cmp	r0, #0
 8021a16:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8021a1a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8021a1e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8021a22:	9501      	str	r5, [sp, #4]
 8021a24:	eb02 0904 	add.w	r9, r2, r4
 8021a28:	f2c0 8141 	blt.w	8021cae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021a2c:	4583      	cmp	fp, r0
 8021a2e:	f340 813e 	ble.w	8021cae <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021a32:	2f00      	cmp	r7, #0
 8021a34:	f2c0 8137 	blt.w	8021ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021a38:	42be      	cmp	r6, r7
 8021a3a:	f340 8134 	ble.w	8021ca6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021a3e:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021a42:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021a46:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021a4a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8021a4e:	4355      	muls	r5, r2
 8021a50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021a54:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8021a58:	fb0c f203 	mul.w	r2, ip, r3
 8021a5c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021a60:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8021a64:	441d      	add	r5, r3
 8021a66:	f102 0320 	add.w	r3, r2, #32
 8021a6a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021a6e:	0a1b      	lsrs	r3, r3, #8
 8021a70:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021a74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021a78:	431c      	orrs	r4, r3
 8021a7a:	1c7b      	adds	r3, r7, #1
 8021a7c:	f100 811c 	bmi.w	8021cb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021a80:	429e      	cmp	r6, r3
 8021a82:	f340 8119 	ble.w	8021cb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021a86:	2900      	cmp	r1, #0
 8021a88:	f000 8119 	beq.w	8021cbe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021a8c:	9a01      	ldr	r2, [sp, #4]
 8021a8e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021a92:	8855      	ldrh	r5, [r2, #2]
 8021a94:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021a98:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8021a9c:	fb08 f802 	mul.w	r8, r8, r2
 8021aa0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021aa4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8021aa8:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021aac:	435d      	muls	r5, r3
 8021aae:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021ab2:	44d0      	add	r8, sl
 8021ab4:	f105 0a20 	add.w	sl, r5, #32
 8021ab8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021abc:	0a2d      	lsrs	r5, r5, #8
 8021abe:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021ac2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021ac6:	432a      	orrs	r2, r5
 8021ac8:	3001      	adds	r0, #1
 8021aca:	f100 80fe 	bmi.w	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021ace:	4583      	cmp	fp, r0
 8021ad0:	f340 80fb 	ble.w	8021cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021ad4:	f1be 0f00 	cmp.w	lr, #0
 8021ad8:	f000 80fc 	beq.w	8021cd4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021adc:	2f00      	cmp	r7, #0
 8021ade:	f2c0 80f1 	blt.w	8021cc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021ae2:	42be      	cmp	r6, r7
 8021ae4:	f340 80ee 	ble.w	8021cc4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021ae8:	9801      	ldr	r0, [sp, #4]
 8021aea:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021aee:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021af2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021af6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8021afa:	fb0a fa00 	mul.w	sl, sl, r0
 8021afe:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8021b02:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021b06:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021b0a:	fb05 f808 	mul.w	r8, r5, r8
 8021b0e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8021b12:	4482      	add	sl, r0
 8021b14:	f108 0020 	add.w	r0, r8, #32
 8021b18:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021b1c:	0a00      	lsrs	r0, r0, #8
 8021b1e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021b22:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b26:	ea4b 0b00 	orr.w	fp, fp, r0
 8021b2a:	3701      	adds	r7, #1
 8021b2c:	f100 80d7 	bmi.w	8021cde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021b30:	42be      	cmp	r6, r7
 8021b32:	f340 80d4 	ble.w	8021cde <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021b36:	2900      	cmp	r1, #0
 8021b38:	f000 80d4 	beq.w	8021ce4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021b3c:	3601      	adds	r6, #1
 8021b3e:	9801      	ldr	r0, [sp, #4]
 8021b40:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021b44:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021b48:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021b4c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8021b50:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b54:	fb09 f906 	mul.w	r9, r9, r6
 8021b58:	fb07 f800 	mul.w	r8, r7, r0
 8021b5c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8021b60:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021b64:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8021b68:	44d1      	add	r9, sl
 8021b6a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021b6e:	f108 0020 	add.w	r0, r8, #32
 8021b72:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021b76:	0a00      	lsrs	r0, r0, #8
 8021b78:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b7c:	4330      	orrs	r0, r6
 8021b7e:	b28e      	uxth	r6, r1
 8021b80:	fa1f f98e 	uxth.w	r9, lr
 8021b84:	fb06 f809 	mul.w	r8, r6, r9
 8021b88:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021b8c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021b90:	0136      	lsls	r6, r6, #4
 8021b92:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021b96:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8021b9a:	9601      	str	r6, [sp, #4]
 8021b9c:	ea4a 0404 	orr.w	r4, sl, r4
 8021ba0:	fa1f f689 	uxth.w	r6, r9
 8021ba4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021ba8:	fb11 f90e 	smulbb	r9, r1, lr
 8021bac:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021bb0:	9602      	str	r6, [sp, #8]
 8021bb2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021bb6:	4626      	mov	r6, r4
 8021bb8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021bbc:	f1ce 0410 	rsb	r4, lr, #16
 8021bc0:	1a64      	subs	r4, r4, r1
 8021bc2:	ea4a 0202 	orr.w	r2, sl, r2
 8021bc6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021bca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021bce:	434a      	muls	r2, r1
 8021bd0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021bd4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021bd8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021bdc:	fb04 2406 	mla	r4, r4, r6, r2
 8021be0:	ea4a 0000 	orr.w	r0, sl, r0
 8021be4:	fb09 4200 	mla	r2, r9, r0, r4
 8021be8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021bec:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021bf0:	9801      	ldr	r0, [sp, #4]
 8021bf2:	9903      	ldr	r1, [sp, #12]
 8021bf4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021bf8:	ea44 0b0b 	orr.w	fp, r4, fp
 8021bfc:	9c02      	ldr	r4, [sp, #8]
 8021bfe:	8809      	ldrh	r1, [r1, #0]
 8021c00:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8021c04:	1b00      	subs	r0, r0, r4
 8021c06:	9c01      	ldr	r4, [sp, #4]
 8021c08:	eba4 0608 	sub.w	r6, r4, r8
 8021c0c:	b2b6      	uxth	r6, r6
 8021c0e:	b280      	uxth	r0, r0
 8021c10:	4373      	muls	r3, r6
 8021c12:	fb0c 3300 	mla	r3, ip, r0, r3
 8021c16:	9802      	ldr	r0, [sp, #8]
 8021c18:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021c1c:	fb00 3505 	mla	r5, r0, r5, r3
 8021c20:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021c24:	fb08 5707 	mla	r7, r8, r7, r5
 8021c28:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021c2c:	120b      	asrs	r3, r1, #8
 8021c2e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021c32:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021c36:	b2ff      	uxtb	r7, r7
 8021c38:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021c3c:	10c8      	asrs	r0, r1, #3
 8021c3e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021c42:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021c46:	00c9      	lsls	r1, r1, #3
 8021c48:	437b      	muls	r3, r7
 8021c4a:	ea42 0e0e 	orr.w	lr, r2, lr
 8021c4e:	b2c9      	uxtb	r1, r1
 8021c50:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021c54:	fa1f f28e 	uxth.w	r2, lr
 8021c58:	4378      	muls	r0, r7
 8021c5a:	434f      	muls	r7, r1
 8021c5c:	1c59      	adds	r1, r3, #1
 8021c5e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021c62:	1213      	asrs	r3, r2, #8
 8021c64:	f023 0307 	bic.w	r3, r3, #7
 8021c68:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021c6c:	1c41      	adds	r1, r0, #1
 8021c6e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021c72:	10d1      	asrs	r1, r2, #3
 8021c74:	f021 0103 	bic.w	r1, r1, #3
 8021c78:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021c7c:	021b      	lsls	r3, r3, #8
 8021c7e:	00c9      	lsls	r1, r1, #3
 8021c80:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021c84:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021c88:	430b      	orrs	r3, r1
 8021c8a:	1c79      	adds	r1, r7, #1
 8021c8c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021c90:	00d2      	lsls	r2, r2, #3
 8021c92:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021c96:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021c9a:	431a      	orrs	r2, r3
 8021c9c:	9b03      	ldr	r3, [sp, #12]
 8021c9e:	801a      	strh	r2, [r3, #0]
 8021ca0:	b005      	add	sp, #20
 8021ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021ca6:	f04f 0c00 	mov.w	ip, #0
 8021caa:	4664      	mov	r4, ip
 8021cac:	e6e5      	b.n	8021a7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021cae:	2300      	movs	r3, #0
 8021cb0:	469c      	mov	ip, r3
 8021cb2:	461a      	mov	r2, r3
 8021cb4:	461c      	mov	r4, r3
 8021cb6:	e707      	b.n	8021ac8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021cb8:	2300      	movs	r3, #0
 8021cba:	461a      	mov	r2, r3
 8021cbc:	e704      	b.n	8021ac8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021cbe:	460b      	mov	r3, r1
 8021cc0:	460a      	mov	r2, r1
 8021cc2:	e701      	b.n	8021ac8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021cc4:	2500      	movs	r5, #0
 8021cc6:	46ab      	mov	fp, r5
 8021cc8:	e72f      	b.n	8021b2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021cca:	2700      	movs	r7, #0
 8021ccc:	463d      	mov	r5, r7
 8021cce:	4638      	mov	r0, r7
 8021cd0:	46bb      	mov	fp, r7
 8021cd2:	e754      	b.n	8021b7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021cd4:	4677      	mov	r7, lr
 8021cd6:	4675      	mov	r5, lr
 8021cd8:	4670      	mov	r0, lr
 8021cda:	46f3      	mov	fp, lr
 8021cdc:	e74f      	b.n	8021b7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021cde:	2700      	movs	r7, #0
 8021ce0:	4638      	mov	r0, r7
 8021ce2:	e74c      	b.n	8021b7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021ce4:	460f      	mov	r7, r1
 8021ce6:	4608      	mov	r0, r1
 8021ce8:	e749      	b.n	8021b7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021cec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cf0:	b093      	sub	sp, #76	@ 0x4c
 8021cf2:	9210      	str	r2, [sp, #64]	@ 0x40
 8021cf4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021cf6:	910e      	str	r1, [sp, #56]	@ 0x38
 8021cf8:	9306      	str	r3, [sp, #24]
 8021cfa:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021cfe:	9011      	str	r0, [sp, #68]	@ 0x44
 8021d00:	6850      	ldr	r0, [r2, #4]
 8021d02:	6812      	ldr	r2, [r2, #0]
 8021d04:	fb00 1303 	mla	r3, r0, r3, r1
 8021d08:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021d0c:	9307      	str	r3, [sp, #28]
 8021d0e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d10:	681b      	ldr	r3, [r3, #0]
 8021d12:	9308      	str	r3, [sp, #32]
 8021d14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d16:	685b      	ldr	r3, [r3, #4]
 8021d18:	9309      	str	r3, [sp, #36]	@ 0x24
 8021d1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021d1c:	2b00      	cmp	r3, #0
 8021d1e:	dc03      	bgt.n	8021d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021d20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021d22:	2b00      	cmp	r3, #0
 8021d24:	f340 83b4 	ble.w	8022490 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021d28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021d32:	1e48      	subs	r0, r1, #1
 8021d34:	1e55      	subs	r5, r2, #1
 8021d36:	9b06      	ldr	r3, [sp, #24]
 8021d38:	2b00      	cmp	r3, #0
 8021d3a:	f340 8163 	ble.w	8022004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021d3e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8021d40:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021d42:	1436      	asrs	r6, r6, #16
 8021d44:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021d48:	d406      	bmi.n	8021d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021d4a:	4286      	cmp	r6, r0
 8021d4c:	da04      	bge.n	8021d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021d4e:	2b00      	cmp	r3, #0
 8021d50:	db02      	blt.n	8021d58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021d52:	42ab      	cmp	r3, r5
 8021d54:	f2c0 8157 	blt.w	8022006 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021d58:	3601      	adds	r6, #1
 8021d5a:	f100 8144 	bmi.w	8021fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021d5e:	42b1      	cmp	r1, r6
 8021d60:	f2c0 8141 	blt.w	8021fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021d64:	3301      	adds	r3, #1
 8021d66:	f100 813e 	bmi.w	8021fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021d6a:	429a      	cmp	r2, r3
 8021d6c:	f2c0 813b 	blt.w	8021fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021d70:	9b06      	ldr	r3, [sp, #24]
 8021d72:	9f07      	ldr	r7, [sp, #28]
 8021d74:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021d76:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021d7a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021d7c:	2b00      	cmp	r3, #0
 8021d7e:	f340 8164 	ble.w	802204a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8021d82:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021d84:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8021d86:	1418      	asrs	r0, r3, #16
 8021d88:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021d8a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021d8e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021d90:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021d94:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021d96:	142d      	asrs	r5, r5, #16
 8021d98:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021d9c:	f100 81ee 	bmi.w	802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021da0:	f102 3eff 	add.w	lr, r2, #4294967295
 8021da4:	4575      	cmp	r5, lr
 8021da6:	f280 81e9 	bge.w	802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021daa:	2800      	cmp	r0, #0
 8021dac:	f2c0 81e6 	blt.w	802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021db0:	f103 3eff 	add.w	lr, r3, #4294967295
 8021db4:	4570      	cmp	r0, lr
 8021db6:	f280 81e1 	bge.w	802217c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8021dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021dbc:	b212      	sxth	r2, r2
 8021dbe:	fb00 5002 	mla	r0, r0, r2, r5
 8021dc2:	fa1f fe81 	uxth.w	lr, r1
 8021dc6:	eb03 0a00 	add.w	sl, r3, r0
 8021dca:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021dce:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021dd2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021dd6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021dda:	b29b      	uxth	r3, r3
 8021ddc:	f1bc 0f00 	cmp.w	ip, #0
 8021de0:	f000 8179 	beq.w	80220d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021de4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021de8:	940a      	str	r4, [sp, #40]	@ 0x28
 8021dea:	eb0a 0b02 	add.w	fp, sl, r2
 8021dee:	fa1f fa8c 	uxth.w	sl, ip
 8021df2:	fb0a fe0e 	mul.w	lr, sl, lr
 8021df6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021dfa:	fa1f fa8a 	uxth.w	sl, sl
 8021dfe:	eba5 050e 	sub.w	r5, r5, lr
 8021e02:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021e06:	940b      	str	r4, [sp, #44]	@ 0x2c
 8021e08:	eba3 030a 	sub.w	r3, r3, sl
 8021e0c:	b2ad      	uxth	r5, r5
 8021e0e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021e10:	b29b      	uxth	r3, r3
 8021e12:	fb08 f505 	mul.w	r5, r8, r5
 8021e16:	fb09 5303 	mla	r3, r9, r3, r5
 8021e1a:	fb0a 3304 	mla	r3, sl, r4, r3
 8021e1e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021e20:	fb0e 3304 	mla	r3, lr, r4, r3
 8021e24:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021e28:	2b00      	cmp	r3, #0
 8021e2a:	f000 80cf 	beq.w	8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8021e2e:	9c08      	ldr	r4, [sp, #32]
 8021e30:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021e34:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021e38:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021e3c:	f000 8150 	beq.w	80220e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8021e40:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021e44:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021e48:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021e4c:	fb09 f000 	mul.w	r0, r9, r0
 8021e50:	fb0a fe0e 	mul.w	lr, sl, lr
 8021e54:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021e58:	f100 0b20 	add.w	fp, r0, #32
 8021e5c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021e60:	44ce      	add	lr, r9
 8021e62:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021e66:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021e6a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021e6e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021e72:	ea4e 0909 	orr.w	r9, lr, r9
 8021e76:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021e7a:	8868      	ldrh	r0, [r5, #2]
 8021e7c:	d019      	beq.n	8021eb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021e7e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021e82:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021e86:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021e8a:	fb08 f800 	mul.w	r8, r8, r0
 8021e8e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021e92:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021e96:	f108 0b20 	add.w	fp, r8, #32
 8021e9a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021e9e:	4486      	add	lr, r0
 8021ea0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021ea4:	0a00      	lsrs	r0, r0, #8
 8021ea6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021eaa:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021eae:	ea4e 0000 	orr.w	r0, lr, r0
 8021eb2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021eb6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021eba:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021ebe:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021ec2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021ec6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021eca:	ea4e 0909 	orr.w	r9, lr, r9
 8021ece:	ea4a 0000 	orr.w	r0, sl, r0
 8021ed2:	f1bc 0f00 	cmp.w	ip, #0
 8021ed6:	f000 8105 	beq.w	80220e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021eda:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8021ede:	3a01      	subs	r2, #1
 8021ee0:	0052      	lsls	r2, r2, #1
 8021ee2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021ee4:	3202      	adds	r2, #2
 8021ee6:	2cff      	cmp	r4, #255	@ 0xff
 8021ee8:	eb05 0e02 	add.w	lr, r5, r2
 8021eec:	5aaa      	ldrh	r2, [r5, r2]
 8021eee:	d018      	beq.n	8021f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021ef0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8021ef4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021ef8:	fb04 fa02 	mul.w	sl, r4, r2
 8021efc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f00:	fb08 f805 	mul.w	r8, r8, r5
 8021f04:	f10a 0520 	add.w	r5, sl, #32
 8021f08:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021f0c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021f10:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021f14:	4442      	add	r2, r8
 8021f16:	0a2d      	lsrs	r5, r5, #8
 8021f18:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021f1c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021f20:	432a      	orrs	r2, r5
 8021f22:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021f24:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021f28:	2cff      	cmp	r4, #255	@ 0xff
 8021f2a:	d01a      	beq.n	8021f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8021f2c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8021f30:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021f34:	fb04 fa05 	mul.w	sl, r4, r5
 8021f38:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021f3c:	fb08 f80e 	mul.w	r8, r8, lr
 8021f40:	f10a 0e20 	add.w	lr, sl, #32
 8021f44:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021f48:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021f4c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021f50:	4445      	add	r5, r8
 8021f52:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f56:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021f5a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021f5e:	ea45 050e 	orr.w	r5, r5, lr
 8021f62:	fb1c fe01 	smulbb	lr, ip, r1
 8021f66:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021f6a:	f1cc 0810 	rsb	r8, ip, #16
 8021f6e:	eba8 0801 	sub.w	r8, r8, r1
 8021f72:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021f76:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021f7a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021f7e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021f82:	4341      	muls	r1, r0
 8021f84:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021f88:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021f8c:	ea4a 0202 	orr.w	r2, sl, r2
 8021f90:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021f94:	fb09 1108 	mla	r1, r9, r8, r1
 8021f98:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021f9c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021fa0:	fb0c 1102 	mla	r1, ip, r2, r1
 8021fa4:	ea4b 0505 	orr.w	r5, fp, r5
 8021fa8:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021fac:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021fb0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021fb4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021fb8:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021fbc:	ea42 0e0e 	orr.w	lr, r2, lr
 8021fc0:	fa1f f28e 	uxth.w	r2, lr
 8021fc4:	2bff      	cmp	r3, #255	@ 0xff
 8021fc6:	f040 80a1 	bne.w	802210c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8021fca:	803a      	strh	r2, [r7, #0]
 8021fcc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021fce:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8021fd0:	4413      	add	r3, r2
 8021fd2:	931d      	str	r3, [sp, #116]	@ 0x74
 8021fd4:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8021fd6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021fd8:	441a      	add	r2, r3
 8021fda:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021fdc:	921e      	str	r2, [sp, #120]	@ 0x78
 8021fde:	3b01      	subs	r3, #1
 8021fe0:	3702      	adds	r7, #2
 8021fe2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021fe4:	e6c9      	b.n	8021d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021fe6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021fe8:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8021fea:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8021fec:	4433      	add	r3, r6
 8021fee:	931d      	str	r3, [sp, #116]	@ 0x74
 8021ff0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021ff2:	441c      	add	r4, r3
 8021ff4:	9b06      	ldr	r3, [sp, #24]
 8021ff6:	941e      	str	r4, [sp, #120]	@ 0x78
 8021ff8:	3b01      	subs	r3, #1
 8021ffa:	9306      	str	r3, [sp, #24]
 8021ffc:	9b07      	ldr	r3, [sp, #28]
 8021ffe:	3302      	adds	r3, #2
 8022000:	9307      	str	r3, [sp, #28]
 8022002:	e698      	b.n	8021d36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022004:	d028      	beq.n	8022058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022006:	9b06      	ldr	r3, [sp, #24]
 8022008:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 802200a:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 802200c:	3b01      	subs	r3, #1
 802200e:	fb00 5003 	mla	r0, r0, r3, r5
 8022012:	1400      	asrs	r0, r0, #16
 8022014:	f53f aeac 	bmi.w	8021d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022018:	3901      	subs	r1, #1
 802201a:	4288      	cmp	r0, r1
 802201c:	f6bf aea8 	bge.w	8021d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022020:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8022022:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8022024:	fb01 0303 	mla	r3, r1, r3, r0
 8022028:	141b      	asrs	r3, r3, #16
 802202a:	f53f aea1 	bmi.w	8021d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802202e:	3a01      	subs	r2, #1
 8022030:	4293      	cmp	r3, r2
 8022032:	f6bf ae9d 	bge.w	8021d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022036:	9b06      	ldr	r3, [sp, #24]
 8022038:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802203c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802203e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8022042:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022044:	2b00      	cmp	r3, #0
 8022046:	f300 80b6 	bgt.w	80221b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802204a:	9b06      	ldr	r3, [sp, #24]
 802204c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022050:	9b07      	ldr	r3, [sp, #28]
 8022052:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022056:	9307      	str	r3, [sp, #28]
 8022058:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802205a:	2b00      	cmp	r3, #0
 802205c:	f340 8218 	ble.w	8022490 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022060:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022064:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022068:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802206c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802206e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022072:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022076:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802207a:	eef0 6a62 	vmov.f32	s13, s5
 802207e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022082:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022086:	ee77 2a62 	vsub.f32	s5, s14, s5
 802208a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 802208e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022092:	eef0 6a43 	vmov.f32	s13, s6
 8022096:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802209a:	ee12 2a90 	vmov	r2, s5
 802209e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80220a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80220a6:	ee13 2a10 	vmov	r2, s6
 80220aa:	931f      	str	r3, [sp, #124]	@ 0x7c
 80220ac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80220ae:	fb92 f3f3 	sdiv	r3, r2, r3
 80220b2:	9320      	str	r3, [sp, #128]	@ 0x80
 80220b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80220b6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80220b8:	3b01      	subs	r3, #1
 80220ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80220be:	930e      	str	r3, [sp, #56]	@ 0x38
 80220c0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80220c2:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80220c6:	bf08      	it	eq
 80220c8:	4613      	moveq	r3, r2
 80220ca:	9306      	str	r3, [sp, #24]
 80220cc:	eeb0 3a67 	vmov.f32	s6, s15
 80220d0:	eef0 2a47 	vmov.f32	s5, s14
 80220d4:	e621      	b.n	8021d1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80220d6:	fb08 f505 	mul.w	r5, r8, r5
 80220da:	fb09 5303 	mla	r3, r9, r3, r5
 80220de:	e6a1      	b.n	8021e24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80220e0:	4681      	mov	r9, r0
 80220e2:	e6c8      	b.n	8021e76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80220e4:	f1c1 0210 	rsb	r2, r1, #16
 80220e8:	4341      	muls	r1, r0
 80220ea:	fb09 1902 	mla	r9, r9, r2, r1
 80220ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80220f2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80220f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80220fa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80220fe:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022102:	ea42 0909 	orr.w	r9, r2, r9
 8022106:	fa1f f289 	uxth.w	r2, r9
 802210a:	e75b      	b.n	8021fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802210c:	f8b7 c000 	ldrh.w	ip, [r7]
 8022110:	43db      	mvns	r3, r3
 8022112:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022116:	fa5f fe83 	uxtb.w	lr, r3
 802211a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802211e:	fb00 f00e 	mul.w	r0, r0, lr
 8022122:	1c41      	adds	r1, r0, #1
 8022124:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022128:	1211      	asrs	r1, r2, #8
 802212a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802212e:	f021 0107 	bic.w	r1, r1, #7
 8022132:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022136:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802213a:	48d7      	ldr	r0, [pc, #860]	@ (8022498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802213c:	fb05 f50e 	mul.w	r5, r5, lr
 8022140:	b2c9      	uxtb	r1, r1
 8022142:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022146:	1c69      	adds	r1, r5, #1
 8022148:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802214c:	10d1      	asrs	r1, r2, #3
 802214e:	f021 0103 	bic.w	r1, r1, #3
 8022152:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022156:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802215a:	b2db      	uxtb	r3, r3
 802215c:	00c9      	lsls	r1, r1, #3
 802215e:	fb03 f30e 	mul.w	r3, r3, lr
 8022162:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022166:	4301      	orrs	r1, r0
 8022168:	1c58      	adds	r0, r3, #1
 802216a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802216e:	00d2      	lsls	r2, r2, #3
 8022170:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022174:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022178:	430a      	orrs	r2, r1
 802217a:	e726      	b.n	8021fca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802217c:	f115 0e01 	adds.w	lr, r5, #1
 8022180:	f53f af24 	bmi.w	8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022184:	4572      	cmp	r2, lr
 8022186:	f6ff af21 	blt.w	8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802218a:	f110 0e01 	adds.w	lr, r0, #1
 802218e:	f53f af1d 	bmi.w	8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022192:	4573      	cmp	r3, lr
 8022194:	f6ff af1a 	blt.w	8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022198:	b21b      	sxth	r3, r3
 802219a:	b212      	sxth	r2, r2
 802219c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80221a0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80221a4:	9301      	str	r3, [sp, #4]
 80221a6:	9200      	str	r2, [sp, #0]
 80221a8:	4639      	mov	r1, r7
 80221aa:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80221ae:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80221b0:	f7ff fc24 	bl	80219fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80221b4:	e70a      	b.n	8021fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80221b6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80221b8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80221bc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80221be:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80221c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80221c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80221c8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80221ca:	141f      	asrs	r7, r3, #16
 80221cc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80221ce:	141b      	asrs	r3, r3, #16
 80221d0:	fb01 3707 	mla	r7, r1, r7, r3
 80221d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80221d6:	fa1f fc82 	uxth.w	ip, r2
 80221da:	eb03 0a07 	add.w	sl, r3, r7
 80221de:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80221e2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80221e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80221ea:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80221ee:	b29b      	uxth	r3, r3
 80221f0:	2d00      	cmp	r5, #0
 80221f2:	f000 80fe 	beq.w	80223f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80221f6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80221fa:	940c      	str	r4, [sp, #48]	@ 0x30
 80221fc:	eb0a 0b01 	add.w	fp, sl, r1
 8022200:	fa1f fa85 	uxth.w	sl, r5
 8022204:	fb0a fc0c 	mul.w	ip, sl, ip
 8022208:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802220c:	fa1f fa8a 	uxth.w	sl, sl
 8022210:	eba0 000c 	sub.w	r0, r0, ip
 8022214:	eba3 030a 	sub.w	r3, r3, sl
 8022218:	b280      	uxth	r0, r0
 802221a:	fb08 f000 	mul.w	r0, r8, r0
 802221e:	b29b      	uxth	r3, r3
 8022220:	fb09 0303 	mla	r3, r9, r3, r0
 8022224:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8022226:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802222a:	940d      	str	r4, [sp, #52]	@ 0x34
 802222c:	fb0a 3300 	mla	r3, sl, r0, r3
 8022230:	fb0c 3304 	mla	r3, ip, r4, r3
 8022234:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022238:	2b00      	cmp	r3, #0
 802223a:	f000 80cc 	beq.w	80223d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802223e:	9808      	ldr	r0, [sp, #32]
 8022240:	9c08      	ldr	r4, [sp, #32]
 8022242:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022246:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802224a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802224e:	f000 80d5 	beq.w	80223fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022252:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022256:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802225a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802225e:	fb09 f707 	mul.w	r7, r9, r7
 8022262:	fb0a fc0c 	mul.w	ip, sl, ip
 8022266:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802226a:	f107 0b20 	add.w	fp, r7, #32
 802226e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022272:	44cc      	add	ip, r9
 8022274:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022278:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802227c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022280:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022284:	ea4c 0909 	orr.w	r9, ip, r9
 8022288:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802228c:	8847      	ldrh	r7, [r0, #2]
 802228e:	d019      	beq.n	80222c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022290:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022294:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022298:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802229c:	fb08 f807 	mul.w	r8, r8, r7
 80222a0:	fb0a fc0c 	mul.w	ip, sl, ip
 80222a4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80222a8:	f108 0b20 	add.w	fp, r8, #32
 80222ac:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 80222b0:	44bc      	add	ip, r7
 80222b2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80222b6:	0a3f      	lsrs	r7, r7, #8
 80222b8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80222bc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80222c0:	ea4c 0707 	orr.w	r7, ip, r7
 80222c4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80222c8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80222cc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80222d0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80222d4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80222d8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80222dc:	ea4c 0909 	orr.w	r9, ip, r9
 80222e0:	ea4a 0707 	orr.w	r7, sl, r7
 80222e4:	2d00      	cmp	r5, #0
 80222e6:	f000 808b 	beq.w	8022400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80222ea:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80222ee:	3901      	subs	r1, #1
 80222f0:	0049      	lsls	r1, r1, #1
 80222f2:	3102      	adds	r1, #2
 80222f4:	eb00 0c01 	add.w	ip, r0, r1
 80222f8:	5a41      	ldrh	r1, [r0, r1]
 80222fa:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80222fc:	28ff      	cmp	r0, #255	@ 0xff
 80222fe:	d019      	beq.n	8022334 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 8022300:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022302:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8022306:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802230a:	fb04 fa01 	mul.w	sl, r4, r1
 802230e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022312:	fb08 f800 	mul.w	r8, r8, r0
 8022316:	f10a 0020 	add.w	r0, sl, #32
 802231a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802231e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8022322:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022326:	4441      	add	r1, r8
 8022328:	0a00      	lsrs	r0, r0, #8
 802232a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802232e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022332:	4301      	orrs	r1, r0
 8022334:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022336:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802233a:	2cff      	cmp	r4, #255	@ 0xff
 802233c:	d01a      	beq.n	8022374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802233e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8022342:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022346:	fb04 fa00 	mul.w	sl, r4, r0
 802234a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802234e:	fb08 f80c 	mul.w	r8, r8, ip
 8022352:	f10a 0c20 	add.w	ip, sl, #32
 8022356:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802235a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802235e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022362:	4440      	add	r0, r8
 8022364:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022368:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802236c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022370:	ea40 000c 	orr.w	r0, r0, ip
 8022374:	fb15 fc02 	smulbb	ip, r5, r2
 8022378:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802237c:	f1c5 0810 	rsb	r8, r5, #16
 8022380:	eba8 0802 	sub.w	r8, r8, r2
 8022384:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022388:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802238c:	437a      	muls	r2, r7
 802238e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022392:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022396:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802239a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802239e:	fb09 2208 	mla	r2, r9, r8, r2
 80223a2:	ea4a 0101 	orr.w	r1, sl, r1
 80223a6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80223aa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80223ae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80223b2:	fb05 2201 	mla	r2, r5, r1, r2
 80223b6:	ea4b 0000 	orr.w	r0, fp, r0
 80223ba:	fb0c 2200 	mla	r2, ip, r0, r2
 80223be:	0d57      	lsrs	r7, r2, #21
 80223c0:	0952      	lsrs	r2, r2, #5
 80223c2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80223c6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80223ca:	433a      	orrs	r2, r7
 80223cc:	2bff      	cmp	r3, #255	@ 0xff
 80223ce:	b292      	uxth	r2, r2
 80223d0:	d127      	bne.n	8022422 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80223d2:	f8ae 2000 	strh.w	r2, [lr]
 80223d6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80223d8:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80223da:	4413      	add	r3, r2
 80223dc:	931d      	str	r3, [sp, #116]	@ 0x74
 80223de:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80223e0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80223e2:	441a      	add	r2, r3
 80223e4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80223e6:	921e      	str	r2, [sp, #120]	@ 0x78
 80223e8:	3b01      	subs	r3, #1
 80223ea:	f10e 0e02 	add.w	lr, lr, #2
 80223ee:	930f      	str	r3, [sp, #60]	@ 0x3c
 80223f0:	e627      	b.n	8022042 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80223f2:	fb08 f000 	mul.w	r0, r8, r0
 80223f6:	fb09 0303 	mla	r3, r9, r3, r0
 80223fa:	e71b      	b.n	8022234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80223fc:	46b9      	mov	r9, r7
 80223fe:	e743      	b.n	8022288 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 8022400:	f1c2 0110 	rsb	r1, r2, #16
 8022404:	437a      	muls	r2, r7
 8022406:	fb09 2901 	mla	r9, r9, r1, r2
 802240a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802240e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8022412:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022416:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802241a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802241e:	4302      	orrs	r2, r0
 8022420:	e7d4      	b.n	80223cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8022422:	f8be 7000 	ldrh.w	r7, [lr]
 8022426:	4c1c      	ldr	r4, [pc, #112]	@ (8022498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022428:	43db      	mvns	r3, r3
 802242a:	1238      	asrs	r0, r7, #8
 802242c:	fa5f fc83 	uxtb.w	ip, r3
 8022430:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022434:	10fd      	asrs	r5, r7, #3
 8022436:	fb00 f00c 	mul.w	r0, r0, ip
 802243a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802243e:	fb05 f10c 	mul.w	r1, r5, ip
 8022442:	1c45      	adds	r5, r0, #1
 8022444:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022448:	1215      	asrs	r5, r2, #8
 802244a:	f025 0507 	bic.w	r5, r5, #7
 802244e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022452:	1c4d      	adds	r5, r1, #1
 8022454:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022458:	10d1      	asrs	r1, r2, #3
 802245a:	f021 0103 	bic.w	r1, r1, #3
 802245e:	00fb      	lsls	r3, r7, #3
 8022460:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022464:	b2db      	uxtb	r3, r3
 8022466:	b2c0      	uxtb	r0, r0
 8022468:	00c9      	lsls	r1, r1, #3
 802246a:	fb03 f30c 	mul.w	r3, r3, ip
 802246e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022472:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022476:	4308      	orrs	r0, r1
 8022478:	1c59      	adds	r1, r3, #1
 802247a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802247e:	00d2      	lsls	r2, r2, #3
 8022480:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022484:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022488:	4318      	orrs	r0, r3
 802248a:	f8ae 0000 	strh.w	r0, [lr]
 802248e:	e7a2      	b.n	80223d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022490:	b013      	add	sp, #76	@ 0x4c
 8022492:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022496:	bf00      	nop
 8022498:	fffff800 	.word	0xfffff800

0802249c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802249c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80224a0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 80224a4:	fb05 4c03 	mla	ip, r5, r3, r4
 80224a8:	2d00      	cmp	r5, #0
 80224aa:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80224ae:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 80224b2:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80224b6:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 80224ba:	8808      	ldrh	r0, [r1, #0]
 80224bc:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80224c0:	f2c0 80a7 	blt.w	8022612 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80224c4:	45aa      	cmp	sl, r5
 80224c6:	f340 80a4 	ble.w	8022612 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80224ca:	2c00      	cmp	r4, #0
 80224cc:	f2c0 809f 	blt.w	802260e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80224d0:	42a3      	cmp	r3, r4
 80224d2:	f340 809c 	ble.w	802260e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80224d6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80224da:	1c62      	adds	r2, r4, #1
 80224dc:	f100 809c 	bmi.w	8022618 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80224e0:	4293      	cmp	r3, r2
 80224e2:	f340 8099 	ble.w	8022618 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80224e6:	f1b9 0f00 	cmp.w	r9, #0
 80224ea:	f000 8095 	beq.w	8022618 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80224ee:	f8be c002 	ldrh.w	ip, [lr, #2]
 80224f2:	3501      	adds	r5, #1
 80224f4:	f100 8094 	bmi.w	8022620 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80224f8:	45aa      	cmp	sl, r5
 80224fa:	f340 8091 	ble.w	8022620 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80224fe:	2f00      	cmp	r7, #0
 8022500:	f000 808e 	beq.w	8022620 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022504:	2c00      	cmp	r4, #0
 8022506:	f2c0 8089 	blt.w	802261c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802250a:	42a3      	cmp	r3, r4
 802250c:	f340 8086 	ble.w	802261c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022510:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022514:	3401      	adds	r4, #1
 8022516:	f100 8086 	bmi.w	8022626 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802251a:	42a3      	cmp	r3, r4
 802251c:	f340 8083 	ble.w	8022626 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022520:	f1b9 0f00 	cmp.w	r9, #0
 8022524:	d07f      	beq.n	8022626 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022526:	3301      	adds	r3, #1
 8022528:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802252c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022530:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8022534:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8022538:	fb19 fe07 	smulbb	lr, r9, r7
 802253c:	ea44 0808 	orr.w	r8, r4, r8
 8022540:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022544:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022548:	f1c7 0210 	rsb	r2, r7, #16
 802254c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8022550:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022554:	ea44 0c0c 	orr.w	ip, r4, ip
 8022558:	eba2 0209 	sub.w	r2, r2, r9
 802255c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022560:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022564:	fb04 f40c 	mul.w	r4, r4, ip
 8022568:	fb02 4808 	mla	r8, r2, r8, r4
 802256c:	041a      	lsls	r2, r3, #16
 802256e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022572:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022576:	4313      	orrs	r3, r2
 8022578:	042a      	lsls	r2, r5, #16
 802257a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802257e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022582:	fb0e 8303 	mla	r3, lr, r3, r8
 8022586:	432a      	orrs	r2, r5
 8022588:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802258c:	fb07 3202 	mla	r2, r7, r2, r3
 8022590:	0d53      	lsrs	r3, r2, #21
 8022592:	0952      	lsrs	r2, r2, #5
 8022594:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022598:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802259c:	431a      	orrs	r2, r3
 802259e:	b293      	uxth	r3, r2
 80225a0:	b2b4      	uxth	r4, r6
 80225a2:	1202      	asrs	r2, r0, #8
 80225a4:	43f6      	mvns	r6, r6
 80225a6:	b2f6      	uxtb	r6, r6
 80225a8:	121d      	asrs	r5, r3, #8
 80225aa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80225ae:	fb12 f206 	smulbb	r2, r2, r6
 80225b2:	10c7      	asrs	r7, r0, #3
 80225b4:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80225b8:	00c0      	lsls	r0, r0, #3
 80225ba:	fb05 2504 	mla	r5, r5, r4, r2
 80225be:	b2c0      	uxtb	r0, r0
 80225c0:	10da      	asrs	r2, r3, #3
 80225c2:	00db      	lsls	r3, r3, #3
 80225c4:	b2db      	uxtb	r3, r3
 80225c6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80225ca:	fb10 f006 	smulbb	r0, r0, r6
 80225ce:	b2ad      	uxth	r5, r5
 80225d0:	fb03 0004 	mla	r0, r3, r4, r0
 80225d4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80225d8:	fb17 f706 	smulbb	r7, r7, r6
 80225dc:	b280      	uxth	r0, r0
 80225de:	1c6b      	adds	r3, r5, #1
 80225e0:	fb02 7204 	mla	r2, r2, r4, r7
 80225e4:	b292      	uxth	r2, r2
 80225e6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80225ea:	1c43      	adds	r3, r0, #1
 80225ec:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80225f0:	1c50      	adds	r0, r2, #1
 80225f2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80225f6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80225fa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80225fe:	0952      	lsrs	r2, r2, #5
 8022600:	432b      	orrs	r3, r5
 8022602:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022606:	4313      	orrs	r3, r2
 8022608:	800b      	strh	r3, [r1, #0]
 802260a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802260e:	4680      	mov	r8, r0
 8022610:	e763      	b.n	80224da <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022612:	4684      	mov	ip, r0
 8022614:	4680      	mov	r8, r0
 8022616:	e76c      	b.n	80224f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022618:	4684      	mov	ip, r0
 802261a:	e76a      	b.n	80224f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802261c:	4605      	mov	r5, r0
 802261e:	e779      	b.n	8022514 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022620:	4603      	mov	r3, r0
 8022622:	4605      	mov	r5, r0
 8022624:	e782      	b.n	802252c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022626:	4603      	mov	r3, r0
 8022628:	e780      	b.n	802252c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802262a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802262a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802262e:	b093      	sub	sp, #76	@ 0x4c
 8022630:	461d      	mov	r5, r3
 8022632:	9210      	str	r2, [sp, #64]	@ 0x40
 8022634:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022636:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 802263a:	920b      	str	r2, [sp, #44]	@ 0x2c
 802263c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8022640:	910a      	str	r1, [sp, #40]	@ 0x28
 8022642:	6859      	ldr	r1, [r3, #4]
 8022644:	681b      	ldr	r3, [r3, #0]
 8022646:	9011      	str	r0, [sp, #68]	@ 0x44
 8022648:	fb01 2707 	mla	r7, r1, r7, r2
 802264c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022650:	9307      	str	r3, [sp, #28]
 8022652:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022654:	681b      	ldr	r3, [r3, #0]
 8022656:	9309      	str	r3, [sp, #36]	@ 0x24
 8022658:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802265a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802265e:	43db      	mvns	r3, r3
 8022660:	b2db      	uxtb	r3, r3
 8022662:	9308      	str	r3, [sp, #32]
 8022664:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022666:	2b00      	cmp	r3, #0
 8022668:	dc03      	bgt.n	8022672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802266a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802266c:	2b00      	cmp	r3, #0
 802266e:	f340 8203 	ble.w	8022a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022672:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022674:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022678:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802267c:	1e48      	subs	r0, r1, #1
 802267e:	f102 3cff 	add.w	ip, r2, #4294967295
 8022682:	2d00      	cmp	r5, #0
 8022684:	f340 80da 	ble.w	802283c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022688:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802268c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022690:	d406      	bmi.n	80226a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022692:	4586      	cmp	lr, r0
 8022694:	da04      	bge.n	80226a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022696:	2b00      	cmp	r3, #0
 8022698:	db02      	blt.n	80226a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802269a:	4563      	cmp	r3, ip
 802269c:	f2c0 80cf 	blt.w	802283e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80226a0:	f11e 0e01 	adds.w	lr, lr, #1
 80226a4:	f100 80c1 	bmi.w	802282a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80226a8:	4571      	cmp	r1, lr
 80226aa:	f2c0 80be 	blt.w	802282a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80226ae:	3301      	adds	r3, #1
 80226b0:	f100 80bb 	bmi.w	802282a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80226b4:	429a      	cmp	r2, r3
 80226b6:	f2c0 80b8 	blt.w	802282a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80226ba:	f8dd 801c 	ldr.w	r8, [sp, #28]
 80226be:	46a9      	mov	r9, r5
 80226c0:	f1b9 0f00 	cmp.w	r9, #0
 80226c4:	f340 80d8 	ble.w	8022878 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80226c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80226ca:	1421      	asrs	r1, r4, #16
 80226cc:	ea4f 4026 	mov.w	r0, r6, asr #16
 80226d0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80226d4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80226d8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80226dc:	f100 8111 	bmi.w	8022902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80226e0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80226e4:	4551      	cmp	r1, sl
 80226e6:	f280 810c 	bge.w	8022902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80226ea:	2800      	cmp	r0, #0
 80226ec:	f2c0 8109 	blt.w	8022902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80226f0:	f103 3aff 	add.w	sl, r3, #4294967295
 80226f4:	4550      	cmp	r0, sl
 80226f6:	f280 8104 	bge.w	8022902 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80226fa:	fa0f f38e 	sxth.w	r3, lr
 80226fe:	fb00 1103 	mla	r1, r0, r3, r1
 8022702:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022704:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022708:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802270c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022710:	f1bc 0f00 	cmp.w	ip, #0
 8022714:	d007      	beq.n	8022726 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022716:	005b      	lsls	r3, r3, #1
 8022718:	eb0a 0003 	add.w	r0, sl, r3
 802271c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022720:	930c      	str	r3, [sp, #48]	@ 0x30
 8022722:	8843      	ldrh	r3, [r0, #2]
 8022724:	930d      	str	r3, [sp, #52]	@ 0x34
 8022726:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802272a:	fb12 f30c 	smulbb	r3, r2, ip
 802272e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8022732:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022736:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802273a:	10db      	asrs	r3, r3, #3
 802273c:	ea40 000e 	orr.w	r0, r0, lr
 8022740:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022744:	f1cc 0e10 	rsb	lr, ip, #16
 8022748:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802274c:	ebae 0e02 	sub.w	lr, lr, r2
 8022750:	ea4a 0101 	orr.w	r1, sl, r1
 8022754:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022758:	4351      	muls	r1, r2
 802275a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802275c:	9f08      	ldr	r7, [sp, #32]
 802275e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022762:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022766:	0410      	lsls	r0, r2, #16
 8022768:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802276c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022770:	4310      	orrs	r0, r2
 8022772:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022774:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8022776:	0412      	lsls	r2, r2, #16
 8022778:	fb03 e000 	mla	r0, r3, r0, lr
 802277c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022780:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8022784:	ea42 020e 	orr.w	r2, r2, lr
 8022788:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802278c:	fb03 0302 	mla	r3, r3, r2, r0
 8022790:	0d5a      	lsrs	r2, r3, #21
 8022792:	095b      	lsrs	r3, r3, #5
 8022794:	f8b8 0000 	ldrh.w	r0, [r8]
 8022798:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802279c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80227a0:	4313      	orrs	r3, r2
 80227a2:	b29b      	uxth	r3, r3
 80227a4:	1201      	asrs	r1, r0, #8
 80227a6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80227aa:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80227ae:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80227b2:	fb11 f107 	smulbb	r1, r1, r7
 80227b6:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80227ba:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80227be:	00c0      	lsls	r0, r0, #3
 80227c0:	fb0c 1c02 	mla	ip, ip, r2, r1
 80227c4:	b2c0      	uxtb	r0, r0
 80227c6:	10d9      	asrs	r1, r3, #3
 80227c8:	00db      	lsls	r3, r3, #3
 80227ca:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80227ce:	b2db      	uxtb	r3, r3
 80227d0:	fb10 f007 	smulbb	r0, r0, r7
 80227d4:	fa1f fc8c 	uxth.w	ip, ip
 80227d8:	fb03 0302 	mla	r3, r3, r2, r0
 80227dc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80227e0:	fb1e fe07 	smulbb	lr, lr, r7
 80227e4:	fb01 e102 	mla	r1, r1, r2, lr
 80227e8:	b29a      	uxth	r2, r3
 80227ea:	f10c 0301 	add.w	r3, ip, #1
 80227ee:	b289      	uxth	r1, r1
 80227f0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80227f4:	1c53      	adds	r3, r2, #1
 80227f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80227fa:	1c4a      	adds	r2, r1, #1
 80227fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022800:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8022804:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022808:	0949      	lsrs	r1, r1, #5
 802280a:	ea43 030c 	orr.w	r3, r3, ip
 802280e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022812:	430b      	orrs	r3, r1
 8022814:	f8a8 3000 	strh.w	r3, [r8]
 8022818:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802281a:	441c      	add	r4, r3
 802281c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802281e:	f108 0802 	add.w	r8, r8, #2
 8022822:	441e      	add	r6, r3
 8022824:	f109 39ff 	add.w	r9, r9, #4294967295
 8022828:	e74a      	b.n	80226c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802282a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802282c:	441c      	add	r4, r3
 802282e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022830:	441e      	add	r6, r3
 8022832:	9b07      	ldr	r3, [sp, #28]
 8022834:	3302      	adds	r3, #2
 8022836:	3d01      	subs	r5, #1
 8022838:	9307      	str	r3, [sp, #28]
 802283a:	e722      	b.n	8022682 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802283c:	d022      	beq.n	8022884 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802283e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8022840:	1e6b      	subs	r3, r5, #1
 8022842:	fb00 4003 	mla	r0, r0, r3, r4
 8022846:	1400      	asrs	r0, r0, #16
 8022848:	f53f af37 	bmi.w	80226ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802284c:	3901      	subs	r1, #1
 802284e:	4288      	cmp	r0, r1
 8022850:	f6bf af33 	bge.w	80226ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022854:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8022856:	fb01 6303 	mla	r3, r1, r3, r6
 802285a:	141b      	asrs	r3, r3, #16
 802285c:	f53f af2d 	bmi.w	80226ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022860:	3a01      	subs	r2, #1
 8022862:	4293      	cmp	r3, r2
 8022864:	f6bf af29 	bge.w	80226ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022868:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802286c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8022870:	46a8      	mov	r8, r5
 8022872:	f1b8 0f00 	cmp.w	r8, #0
 8022876:	dc5e      	bgt.n	8022936 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022878:	9b07      	ldr	r3, [sp, #28]
 802287a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802287e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022882:	9307      	str	r3, [sp, #28]
 8022884:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022886:	2b00      	cmp	r3, #0
 8022888:	f340 80f6 	ble.w	8022a78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802288c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022890:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022894:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022898:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802289a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802289e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80228a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80228a6:	eef0 6a62 	vmov.f32	s13, s5
 80228aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80228ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80228b6:	ee16 4a90 	vmov	r4, s13
 80228ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80228be:	eef0 6a43 	vmov.f32	s13, s6
 80228c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80228c6:	ee12 2a90 	vmov	r2, s5
 80228ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80228ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80228d2:	ee13 2a10 	vmov	r2, s6
 80228d6:	931f      	str	r3, [sp, #124]	@ 0x7c
 80228d8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80228da:	fb92 f3f3 	sdiv	r3, r2, r3
 80228de:	9320      	str	r3, [sp, #128]	@ 0x80
 80228e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80228e2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80228e4:	3b01      	subs	r3, #1
 80228e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80228ea:	930a      	str	r3, [sp, #40]	@ 0x28
 80228ec:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80228ee:	ee16 6a90 	vmov	r6, s13
 80228f2:	bf14      	ite	ne
 80228f4:	461d      	movne	r5, r3
 80228f6:	4615      	moveq	r5, r2
 80228f8:	eeb0 3a67 	vmov.f32	s6, s15
 80228fc:	eef0 2a47 	vmov.f32	s5, s14
 8022900:	e6b0      	b.n	8022664 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022902:	f111 0a01 	adds.w	sl, r1, #1
 8022906:	d487      	bmi.n	8022818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022908:	45d6      	cmp	lr, sl
 802290a:	db85      	blt.n	8022818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802290c:	f110 0a01 	adds.w	sl, r0, #1
 8022910:	d482      	bmi.n	8022818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022912:	4553      	cmp	r3, sl
 8022914:	db80      	blt.n	8022818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022916:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8022918:	9101      	str	r1, [sp, #4]
 802291a:	b21b      	sxth	r3, r3
 802291c:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022920:	9300      	str	r3, [sp, #0]
 8022922:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022926:	fa0f f38e 	sxth.w	r3, lr
 802292a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802292c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802292e:	4641      	mov	r1, r8
 8022930:	f7ff fdb4 	bl	802249c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022934:	e770      	b.n	8022818 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022936:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022938:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802293a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802293e:	1430      	asrs	r0, r6, #16
 8022940:	1423      	asrs	r3, r4, #16
 8022942:	fb01 3000 	mla	r0, r1, r0, r3
 8022946:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022948:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802294c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022950:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022954:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022958:	8858      	ldrh	r0, [r3, #2]
 802295a:	f1be 0f00 	cmp.w	lr, #0
 802295e:	d00b      	beq.n	8022978 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022960:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8022964:	3901      	subs	r1, #1
 8022966:	0049      	lsls	r1, r1, #1
 8022968:	3102      	adds	r1, #2
 802296a:	eb03 0b01 	add.w	fp, r3, r1
 802296e:	5a5b      	ldrh	r3, [r3, r1]
 8022970:	930e      	str	r3, [sp, #56]	@ 0x38
 8022972:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022976:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022978:	ea4f 410c 	mov.w	r1, ip, lsl #16
 802297c:	fb12 f30e 	smulbb	r3, r2, lr
 8022980:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022984:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022988:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 802298c:	10db      	asrs	r3, r3, #3
 802298e:	ea41 010c 	orr.w	r1, r1, ip
 8022992:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022996:	f1ce 0c10 	rsb	ip, lr, #16
 802299a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802299e:	ebac 0c02 	sub.w	ip, ip, r2
 80229a2:	ea4b 0000 	orr.w	r0, fp, r0
 80229a6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80229aa:	4350      	muls	r0, r2
 80229ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80229ae:	9f08      	ldr	r7, [sp, #32]
 80229b0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80229b4:	fb0c 0c01 	mla	ip, ip, r1, r0
 80229b8:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80229bc:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 80229c0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80229c2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80229c4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80229c8:	0412      	lsls	r2, r2, #16
 80229ca:	ea4b 0101 	orr.w	r1, fp, r1
 80229ce:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80229d2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80229d6:	fb03 c101 	mla	r1, r3, r1, ip
 80229da:	4302      	orrs	r2, r0
 80229dc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80229e0:	fb03 1202 	mla	r2, r3, r2, r1
 80229e4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 80229e8:	0952      	lsrs	r2, r2, #5
 80229ea:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 80229ee:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80229f2:	f8b9 2000 	ldrh.w	r2, [r9]
 80229f6:	ea4b 0303 	orr.w	r3, fp, r3
 80229fa:	b29b      	uxth	r3, r3
 80229fc:	1211      	asrs	r1, r2, #8
 80229fe:	1218      	asrs	r0, r3, #8
 8022a00:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022a04:	fb11 f107 	smulbb	r1, r1, r7
 8022a08:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022a0c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022a10:	00d2      	lsls	r2, r2, #3
 8022a12:	fb00 100a 	mla	r0, r0, sl, r1
 8022a16:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8022a1a:	10d9      	asrs	r1, r3, #3
 8022a1c:	b2d2      	uxtb	r2, r2
 8022a1e:	00db      	lsls	r3, r3, #3
 8022a20:	fb1c fc07 	smulbb	ip, ip, r7
 8022a24:	fb12 f207 	smulbb	r2, r2, r7
 8022a28:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022a2c:	b2db      	uxtb	r3, r3
 8022a2e:	b280      	uxth	r0, r0
 8022a30:	fb01 c10a 	mla	r1, r1, sl, ip
 8022a34:	fb03 230a 	mla	r3, r3, sl, r2
 8022a38:	b29b      	uxth	r3, r3
 8022a3a:	b289      	uxth	r1, r1
 8022a3c:	1c42      	adds	r2, r0, #1
 8022a3e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022a42:	f101 0c01 	add.w	ip, r1, #1
 8022a46:	1c5a      	adds	r2, r3, #1
 8022a48:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022a4c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022a50:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022a52:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8022a56:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022a5a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022a5e:	4310      	orrs	r0, r2
 8022a60:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022a64:	441c      	add	r4, r3
 8022a66:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022a68:	ea40 000c 	orr.w	r0, r0, ip
 8022a6c:	f829 0b02 	strh.w	r0, [r9], #2
 8022a70:	441e      	add	r6, r3
 8022a72:	f108 38ff 	add.w	r8, r8, #4294967295
 8022a76:	e6fc      	b.n	8022872 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022a78:	b013      	add	sp, #76	@ 0x4c
 8022a7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022a7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022a7e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022a82:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022a86:	fb0e 4703 	mla	r7, lr, r3, r4
 8022a8a:	f1be 0f00 	cmp.w	lr, #0
 8022a8e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022a92:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8022a96:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8022a9a:	8808      	ldrh	r0, [r1, #0]
 8022a9c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022aa0:	db60      	blt.n	8022b64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022aa2:	45f1      	cmp	r9, lr
 8022aa4:	dd5e      	ble.n	8022b64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022aa6:	2c00      	cmp	r4, #0
 8022aa8:	db5a      	blt.n	8022b60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022aaa:	42a3      	cmp	r3, r4
 8022aac:	dd58      	ble.n	8022b60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022aae:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022ab2:	1c62      	adds	r2, r4, #1
 8022ab4:	d459      	bmi.n	8022b6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022ab6:	4293      	cmp	r3, r2
 8022ab8:	dd57      	ble.n	8022b6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022aba:	2d00      	cmp	r5, #0
 8022abc:	d055      	beq.n	8022b6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022abe:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022ac2:	f11e 0e01 	adds.w	lr, lr, #1
 8022ac6:	d454      	bmi.n	8022b72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022ac8:	45f1      	cmp	r9, lr
 8022aca:	dd52      	ble.n	8022b72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022acc:	2e00      	cmp	r6, #0
 8022ace:	d050      	beq.n	8022b72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022ad0:	2c00      	cmp	r4, #0
 8022ad2:	db4c      	blt.n	8022b6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022ad4:	42a3      	cmp	r3, r4
 8022ad6:	dd4a      	ble.n	8022b6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022ad8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022adc:	3401      	adds	r4, #1
 8022ade:	d405      	bmi.n	8022aec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022ae0:	42a3      	cmp	r3, r4
 8022ae2:	dd03      	ble.n	8022aec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022ae4:	b115      	cbz	r5, 8022aec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022ae6:	3301      	adds	r3, #1
 8022ae8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022aec:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022af0:	fb15 f406 	smulbb	r4, r5, r6
 8022af4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022af8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022afc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022b00:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022b04:	ea43 0c0c 	orr.w	ip, r3, ip
 8022b08:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8022b0c:	f1c6 0310 	rsb	r3, r6, #16
 8022b10:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022b14:	1b5b      	subs	r3, r3, r5
 8022b16:	ea4e 0707 	orr.w	r7, lr, r7
 8022b1a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022b1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022b22:	437d      	muls	r5, r7
 8022b24:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022b28:	0403      	lsls	r3, r0, #16
 8022b2a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022b2e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022b32:	4318      	orrs	r0, r3
 8022b34:	0413      	lsls	r3, r2, #16
 8022b36:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022b3a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022b3e:	4313      	orrs	r3, r2
 8022b40:	fb04 c000 	mla	r0, r4, r0, ip
 8022b44:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022b48:	fb06 0003 	mla	r0, r6, r3, r0
 8022b4c:	0d43      	lsrs	r3, r0, #21
 8022b4e:	0940      	lsrs	r0, r0, #5
 8022b50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022b54:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022b58:	4318      	orrs	r0, r3
 8022b5a:	8008      	strh	r0, [r1, #0]
 8022b5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022b60:	4684      	mov	ip, r0
 8022b62:	e7a6      	b.n	8022ab2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022b64:	4607      	mov	r7, r0
 8022b66:	4684      	mov	ip, r0
 8022b68:	e7ab      	b.n	8022ac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022b6a:	4607      	mov	r7, r0
 8022b6c:	e7a9      	b.n	8022ac2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022b6e:	4602      	mov	r2, r0
 8022b70:	e7b4      	b.n	8022adc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022b72:	4602      	mov	r2, r0
 8022b74:	e7ba      	b.n	8022aec <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022b76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b7a:	b08f      	sub	sp, #60	@ 0x3c
 8022b7c:	461d      	mov	r5, r3
 8022b7e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022b80:	920c      	str	r2, [sp, #48]	@ 0x30
 8022b82:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8022b86:	9107      	str	r1, [sp, #28]
 8022b88:	6859      	ldr	r1, [r3, #4]
 8022b8a:	681b      	ldr	r3, [r3, #0]
 8022b8c:	900d      	str	r0, [sp, #52]	@ 0x34
 8022b8e:	fb01 2707 	mla	r7, r1, r7, r2
 8022b92:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022b96:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022b98:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8022b9c:	f8d3 8000 	ldr.w	r8, [r3]
 8022ba0:	9b07      	ldr	r3, [sp, #28]
 8022ba2:	2b00      	cmp	r3, #0
 8022ba4:	dc03      	bgt.n	8022bae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022ba6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022ba8:	2b00      	cmp	r3, #0
 8022baa:	f340 8181 	ble.w	8022eb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022bae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022bb0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022bb4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022bb8:	1e48      	subs	r0, r1, #1
 8022bba:	f102 3cff 	add.w	ip, r2, #4294967295
 8022bbe:	2d00      	cmp	r5, #0
 8022bc0:	f340 809b 	ble.w	8022cfa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022bc4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022bc8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022bcc:	d406      	bmi.n	8022bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022bce:	4586      	cmp	lr, r0
 8022bd0:	da04      	bge.n	8022bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022bd2:	2b00      	cmp	r3, #0
 8022bd4:	db02      	blt.n	8022bdc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022bd6:	4563      	cmp	r3, ip
 8022bd8:	f2c0 8090 	blt.w	8022cfc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022bdc:	f11e 0e01 	adds.w	lr, lr, #1
 8022be0:	f100 8084 	bmi.w	8022cec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022be4:	4571      	cmp	r1, lr
 8022be6:	f2c0 8081 	blt.w	8022cec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022bea:	3301      	adds	r3, #1
 8022bec:	d47e      	bmi.n	8022cec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022bee:	429a      	cmp	r2, r3
 8022bf0:	db7c      	blt.n	8022cec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022bf2:	46aa      	mov	sl, r5
 8022bf4:	46b9      	mov	r9, r7
 8022bf6:	f1ba 0f00 	cmp.w	sl, #0
 8022bfa:	f340 8099 	ble.w	8022d30 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022bfe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022c00:	1421      	asrs	r1, r4, #16
 8022c02:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022c06:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c0a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022c0e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022c12:	f100 80d0 	bmi.w	8022db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c16:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022c1a:	4559      	cmp	r1, fp
 8022c1c:	f280 80cb 	bge.w	8022db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c20:	2800      	cmp	r0, #0
 8022c22:	f2c0 80c8 	blt.w	8022db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c26:	f103 3bff 	add.w	fp, r3, #4294967295
 8022c2a:	4558      	cmp	r0, fp
 8022c2c:	f280 80c3 	bge.w	8022db6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022c30:	fa0f fe8e 	sxth.w	lr, lr
 8022c34:	fb00 110e 	mla	r1, r0, lr, r1
 8022c38:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022c3c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022c40:	8841      	ldrh	r1, [r0, #2]
 8022c42:	f1bc 0f00 	cmp.w	ip, #0
 8022c46:	d00b      	beq.n	8022c60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022c48:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8022c4c:	3b01      	subs	r3, #1
 8022c4e:	005b      	lsls	r3, r3, #1
 8022c50:	3302      	adds	r3, #2
 8022c52:	eb00 0e03 	add.w	lr, r0, r3
 8022c56:	5ac3      	ldrh	r3, [r0, r3]
 8022c58:	9308      	str	r3, [sp, #32]
 8022c5a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022c5e:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c60:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022c64:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022c68:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8022c6c:	ea40 000b 	orr.w	r0, r0, fp
 8022c70:	fb12 f30c 	smulbb	r3, r2, ip
 8022c74:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022c78:	10db      	asrs	r3, r3, #3
 8022c7a:	f1cc 0e10 	rsb	lr, ip, #16
 8022c7e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022c82:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022c86:	ebae 0e02 	sub.w	lr, lr, r2
 8022c8a:	ea4b 0101 	orr.w	r1, fp, r1
 8022c8e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022c92:	4351      	muls	r1, r2
 8022c94:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022c96:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022c9a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022c9e:	0410      	lsls	r0, r2, #16
 8022ca0:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022ca4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022ca8:	4310      	orrs	r0, r2
 8022caa:	9a08      	ldr	r2, [sp, #32]
 8022cac:	9908      	ldr	r1, [sp, #32]
 8022cae:	0412      	lsls	r2, r2, #16
 8022cb0:	fb03 e000 	mla	r0, r3, r0, lr
 8022cb4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022cb8:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8022cbc:	ea42 020e 	orr.w	r2, r2, lr
 8022cc0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022cc4:	fb03 0302 	mla	r3, r3, r2, r0
 8022cc8:	0d5a      	lsrs	r2, r3, #21
 8022cca:	095b      	lsrs	r3, r3, #5
 8022ccc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022cd0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022cd4:	4313      	orrs	r3, r2
 8022cd6:	f8a9 3000 	strh.w	r3, [r9]
 8022cda:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022cdc:	441c      	add	r4, r3
 8022cde:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022ce0:	f109 0902 	add.w	r9, r9, #2
 8022ce4:	441e      	add	r6, r3
 8022ce6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022cea:	e784      	b.n	8022bf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022cec:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022cee:	441c      	add	r4, r3
 8022cf0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022cf2:	3d01      	subs	r5, #1
 8022cf4:	441e      	add	r6, r3
 8022cf6:	3702      	adds	r7, #2
 8022cf8:	e761      	b.n	8022bbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022cfa:	d01d      	beq.n	8022d38 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022cfc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8022cfe:	1e6b      	subs	r3, r5, #1
 8022d00:	fb00 4003 	mla	r0, r0, r3, r4
 8022d04:	1400      	asrs	r0, r0, #16
 8022d06:	f53f af74 	bmi.w	8022bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d0a:	3901      	subs	r1, #1
 8022d0c:	4288      	cmp	r0, r1
 8022d0e:	f6bf af70 	bge.w	8022bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d12:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8022d14:	fb01 6303 	mla	r3, r1, r3, r6
 8022d18:	141b      	asrs	r3, r3, #16
 8022d1a:	f53f af6a 	bmi.w	8022bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d1e:	3a01      	subs	r2, #1
 8022d20:	4293      	cmp	r3, r2
 8022d22:	f6bf af66 	bge.w	8022bf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022d26:	46a9      	mov	r9, r5
 8022d28:	46ba      	mov	sl, r7
 8022d2a:	f1b9 0f00 	cmp.w	r9, #0
 8022d2e:	dc5a      	bgt.n	8022de6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022d30:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022d34:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022d38:	9b07      	ldr	r3, [sp, #28]
 8022d3a:	2b00      	cmp	r3, #0
 8022d3c:	f340 80b8 	ble.w	8022eb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022d40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022d44:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022d48:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022d4c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022d4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022d52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022d56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022d5a:	eef0 6a62 	vmov.f32	s13, s5
 8022d5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022d62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022d6a:	ee16 4a90 	vmov	r4, s13
 8022d6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022d72:	eef0 6a43 	vmov.f32	s13, s6
 8022d76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022d7a:	ee12 2a90 	vmov	r2, s5
 8022d7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022d82:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d86:	ee13 2a10 	vmov	r2, s6
 8022d8a:	931b      	str	r3, [sp, #108]	@ 0x6c
 8022d8c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022d8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022d92:	931c      	str	r3, [sp, #112]	@ 0x70
 8022d94:	9b07      	ldr	r3, [sp, #28]
 8022d96:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022d98:	3b01      	subs	r3, #1
 8022d9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022d9e:	9307      	str	r3, [sp, #28]
 8022da0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022da2:	ee16 6a90 	vmov	r6, s13
 8022da6:	bf14      	ite	ne
 8022da8:	461d      	movne	r5, r3
 8022daa:	4615      	moveq	r5, r2
 8022dac:	eeb0 3a67 	vmov.f32	s6, s15
 8022db0:	eef0 2a47 	vmov.f32	s5, s14
 8022db4:	e6f4      	b.n	8022ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022db6:	f111 0b01 	adds.w	fp, r1, #1
 8022dba:	d48e      	bmi.n	8022cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022dbc:	45de      	cmp	lr, fp
 8022dbe:	db8c      	blt.n	8022cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022dc0:	f110 0b01 	adds.w	fp, r0, #1
 8022dc4:	d489      	bmi.n	8022cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022dc6:	455b      	cmp	r3, fp
 8022dc8:	db87      	blt.n	8022cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022dca:	b21b      	sxth	r3, r3
 8022dcc:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022dd0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022dd4:	9300      	str	r3, [sp, #0]
 8022dd6:	4642      	mov	r2, r8
 8022dd8:	fa0f f38e 	sxth.w	r3, lr
 8022ddc:	4649      	mov	r1, r9
 8022dde:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8022de0:	f7ff fe4d 	bl	8022a7e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022de4:	e779      	b.n	8022cda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022de6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022de8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022dec:	1420      	asrs	r0, r4, #16
 8022dee:	1431      	asrs	r1, r6, #16
 8022df0:	fb03 0101 	mla	r1, r3, r1, r0
 8022df4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022df8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022dfc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022e00:	8841      	ldrh	r1, [r0, #2]
 8022e02:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022e06:	f1be 0f00 	cmp.w	lr, #0
 8022e0a:	d00b      	beq.n	8022e24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022e0c:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8022e10:	3b01      	subs	r3, #1
 8022e12:	005b      	lsls	r3, r3, #1
 8022e14:	3302      	adds	r3, #2
 8022e16:	eb00 0b03 	add.w	fp, r0, r3
 8022e1a:	5ac3      	ldrh	r3, [r0, r3]
 8022e1c:	930a      	str	r3, [sp, #40]	@ 0x28
 8022e1e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022e22:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022e24:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022e28:	fb12 f30e 	smulbb	r3, r2, lr
 8022e2c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022e30:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022e34:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022e38:	10db      	asrs	r3, r3, #3
 8022e3a:	ea40 000c 	orr.w	r0, r0, ip
 8022e3e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022e42:	f1ce 0c10 	rsb	ip, lr, #16
 8022e46:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022e4a:	ebac 0c02 	sub.w	ip, ip, r2
 8022e4e:	ea4b 0101 	orr.w	r1, fp, r1
 8022e52:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022e56:	4351      	muls	r1, r2
 8022e58:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022e5a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022e5e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022e62:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022e66:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8022e6a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022e6c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8022e6e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022e72:	0412      	lsls	r2, r2, #16
 8022e74:	ea4b 0000 	orr.w	r0, fp, r0
 8022e78:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022e7c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8022e80:	fb03 c000 	mla	r0, r3, r0, ip
 8022e84:	ea42 0b0b 	orr.w	fp, r2, fp
 8022e88:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022e8c:	fb03 000b 	mla	r0, r3, fp, r0
 8022e90:	0d43      	lsrs	r3, r0, #21
 8022e92:	0940      	lsrs	r0, r0, #5
 8022e94:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022e98:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022e9c:	4318      	orrs	r0, r3
 8022e9e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022ea0:	f82a 0b02 	strh.w	r0, [sl], #2
 8022ea4:	441c      	add	r4, r3
 8022ea6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022ea8:	f109 39ff 	add.w	r9, r9, #4294967295
 8022eac:	441e      	add	r6, r3
 8022eae:	e73c      	b.n	8022d2a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022eb0:	b00f      	add	sp, #60	@ 0x3c
 8022eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8022eb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022eba:	b085      	sub	sp, #20
 8022ebc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8022ec0:	9102      	str	r1, [sp, #8]
 8022ec2:	2c00      	cmp	r4, #0
 8022ec4:	fb04 7103 	mla	r1, r4, r3, r7
 8022ec8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8022ecc:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8022ed0:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8022ed4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022ed8:	f2c0 811b 	blt.w	8023112 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022edc:	45a6      	cmp	lr, r4
 8022ede:	f340 8118 	ble.w	8023112 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022ee2:	2f00      	cmp	r7, #0
 8022ee4:	f2c0 8113 	blt.w	802310e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022ee8:	42bb      	cmp	r3, r7
 8022eea:	f340 8110 	ble.w	802310e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022eee:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022ef2:	1c7a      	adds	r2, r7, #1
 8022ef4:	f100 8110 	bmi.w	8023118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022ef8:	4293      	cmp	r3, r2
 8022efa:	f340 810d 	ble.w	8023118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022efe:	2e00      	cmp	r6, #0
 8022f00:	f000 810c 	beq.w	802311c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022f04:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022f08:	3401      	adds	r4, #1
 8022f0a:	f100 810b 	bmi.w	8023124 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022f0e:	45a6      	cmp	lr, r4
 8022f10:	f340 8108 	ble.w	8023124 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022f14:	2800      	cmp	r0, #0
 8022f16:	f000 8108 	beq.w	802312a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022f1a:	2f00      	cmp	r7, #0
 8022f1c:	f2c0 8100 	blt.w	8023120 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022f20:	42bb      	cmp	r3, r7
 8022f22:	f340 80fd 	ble.w	8023120 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022f26:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022f2a:	3701      	adds	r7, #1
 8022f2c:	f100 8100 	bmi.w	8023130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022f30:	42bb      	cmp	r3, r7
 8022f32:	f340 80fd 	ble.w	8023130 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022f36:	2e00      	cmp	r6, #0
 8022f38:	f000 80fc 	beq.w	8023134 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022f3c:	3301      	adds	r3, #1
 8022f3e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8022f42:	b2b6      	uxth	r6, r6
 8022f44:	b280      	uxth	r0, r0
 8022f46:	fb00 fe06 	mul.w	lr, r0, r6
 8022f4a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022f4e:	0136      	lsls	r6, r6, #4
 8022f50:	eba6 070e 	sub.w	r7, r6, lr
 8022f54:	b280      	uxth	r0, r0
 8022f56:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8022f5a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022f5e:	b2bf      	uxth	r7, r7
 8022f60:	1a1b      	subs	r3, r3, r0
 8022f62:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022f66:	b29b      	uxth	r3, r3
 8022f68:	fb0a f607 	mul.w	r6, sl, r7
 8022f6c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022f70:	fb0b 6603 	mla	r6, fp, r3, r6
 8022f74:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022f78:	fb00 6609 	mla	r6, r0, r9, r6
 8022f7c:	fb0e 6608 	mla	r6, lr, r8, r6
 8022f80:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022f84:	9600      	str	r6, [sp, #0]
 8022f86:	2e00      	cmp	r6, #0
 8022f88:	f000 80be 	beq.w	8023108 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022f8c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022f90:	fb0b fc0c 	mul.w	ip, fp, ip
 8022f94:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8022f98:	fb0b f505 	mul.w	r5, fp, r5
 8022f9c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022fa0:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8022fa4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022fa8:	44dc      	add	ip, fp
 8022faa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022fae:	9501      	str	r5, [sp, #4]
 8022fb0:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8022fb4:	9503      	str	r5, [sp, #12]
 8022fb6:	9d01      	ldr	r5, [sp, #4]
 8022fb8:	9e02      	ldr	r6, [sp, #8]
 8022fba:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8022fbe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022fc2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8022fc6:	fb0a fc0c 	mul.w	ip, sl, ip
 8022fca:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022fce:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022fd2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022fd6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022fda:	4465      	add	r5, ip
 8022fdc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8022fe0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8022fe4:	fb09 fc0c 	mul.w	ip, r9, ip
 8022fe8:	fb09 f904 	mul.w	r9, r9, r4
 8022fec:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8022ff0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022ff4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8022ff8:	fb08 f404 	mul.w	r4, r8, r4
 8022ffc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023000:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023004:	fb08 f802 	mul.w	r8, r8, r2
 8023008:	fb0a fa01 	mul.w	sl, sl, r1
 802300c:	0a22      	lsrs	r2, r4, #8
 802300e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8023012:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023016:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802301a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802301e:	4414      	add	r4, r2
 8023020:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023024:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8023028:	0a2d      	lsrs	r5, r5, #8
 802302a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802302e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023032:	9a03      	ldr	r2, [sp, #12]
 8023034:	8836      	ldrh	r6, [r6, #0]
 8023036:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802303a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802303e:	437d      	muls	r5, r7
 8023040:	4461      	add	r1, ip
 8023042:	0a24      	lsrs	r4, r4, #8
 8023044:	fb02 5503 	mla	r5, r2, r3, r5
 8023048:	0a09      	lsrs	r1, r1, #8
 802304a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802304e:	fb04 540e 	mla	r4, r4, lr, r5
 8023052:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023056:	fb01 4100 	mla	r1, r1, r0, r4
 802305a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802305e:	0a09      	lsrs	r1, r1, #8
 8023060:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023064:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8023068:	fb07 f70a 	mul.w	r7, r7, sl
 802306c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023070:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8023074:	fb03 7101 	mla	r1, r3, r1, r7
 8023078:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802307c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8023080:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023084:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8023088:	fb00 e101 	mla	r1, r0, r1, lr
 802308c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8023090:	9a00      	ldr	r2, [sp, #0]
 8023092:	b287      	uxth	r7, r0
 8023094:	437a      	muls	r2, r7
 8023096:	0a09      	lsrs	r1, r1, #8
 8023098:	1c53      	adds	r3, r2, #1
 802309a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802309e:	4321      	orrs	r1, r4
 80230a0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80230a4:	1235      	asrs	r5, r6, #8
 80230a6:	0c0a      	lsrs	r2, r1, #16
 80230a8:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80230ac:	b2db      	uxtb	r3, r3
 80230ae:	fb12 f207 	smulbb	r2, r2, r7
 80230b2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80230b6:	fb05 2503 	mla	r5, r5, r3, r2
 80230ba:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80230be:	10f2      	asrs	r2, r6, #3
 80230c0:	b2c8      	uxtb	r0, r1
 80230c2:	00f6      	lsls	r6, r6, #3
 80230c4:	fb14 f407 	smulbb	r4, r4, r7
 80230c8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80230cc:	b2f6      	uxtb	r6, r6
 80230ce:	fb10 f007 	smulbb	r0, r0, r7
 80230d2:	fb02 4203 	mla	r2, r2, r3, r4
 80230d6:	b2ad      	uxth	r5, r5
 80230d8:	fb06 0303 	mla	r3, r6, r3, r0
 80230dc:	b299      	uxth	r1, r3
 80230de:	b294      	uxth	r4, r2
 80230e0:	1c6b      	adds	r3, r5, #1
 80230e2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80230e6:	1c62      	adds	r2, r4, #1
 80230e8:	1c4b      	adds	r3, r1, #1
 80230ea:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80230ee:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80230f2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80230f6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80230fa:	0952      	lsrs	r2, r2, #5
 80230fc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023100:	432b      	orrs	r3, r5
 8023102:	4313      	orrs	r3, r2
 8023104:	9a02      	ldr	r2, [sp, #8]
 8023106:	8013      	strh	r3, [r2, #0]
 8023108:	b005      	add	sp, #20
 802310a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802310e:	2500      	movs	r5, #0
 8023110:	e6ef      	b.n	8022ef2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8023112:	2100      	movs	r1, #0
 8023114:	460d      	mov	r5, r1
 8023116:	e6f7      	b.n	8022f08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023118:	2100      	movs	r1, #0
 802311a:	e6f5      	b.n	8022f08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802311c:	4631      	mov	r1, r6
 802311e:	e6f3      	b.n	8022f08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023120:	2400      	movs	r4, #0
 8023122:	e702      	b.n	8022f2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023124:	2200      	movs	r2, #0
 8023126:	4614      	mov	r4, r2
 8023128:	e70b      	b.n	8022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802312a:	4602      	mov	r2, r0
 802312c:	4604      	mov	r4, r0
 802312e:	e708      	b.n	8022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023130:	2200      	movs	r2, #0
 8023132:	e706      	b.n	8022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023134:	4632      	mov	r2, r6
 8023136:	e704      	b.n	8022f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023138 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023138:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802313c:	b09d      	sub	sp, #116	@ 0x74
 802313e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8023142:	9219      	str	r2, [sp, #100]	@ 0x64
 8023144:	9307      	str	r3, [sp, #28]
 8023146:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8023148:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 802314c:	931a      	str	r3, [sp, #104]	@ 0x68
 802314e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8023150:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8023154:	901b      	str	r0, [sp, #108]	@ 0x6c
 8023156:	6850      	ldr	r0, [r2, #4]
 8023158:	6812      	ldr	r2, [r2, #0]
 802315a:	fb00 1303 	mla	r3, r0, r3, r1
 802315e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023162:	930a      	str	r3, [sp, #40]	@ 0x28
 8023164:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023166:	681b      	ldr	r3, [r3, #0]
 8023168:	9310      	str	r3, [sp, #64]	@ 0x40
 802316a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802316e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023170:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023172:	2b00      	cmp	r3, #0
 8023174:	dc03      	bgt.n	802317e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023176:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8023178:	2b00      	cmp	r3, #0
 802317a:	f340 8375 	ble.w	8023868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802317e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023180:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023184:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023188:	1e48      	subs	r0, r1, #1
 802318a:	1e57      	subs	r7, r2, #1
 802318c:	9b07      	ldr	r3, [sp, #28]
 802318e:	2b00      	cmp	r3, #0
 8023190:	f340 818e 	ble.w	80234b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023194:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023198:	ea4f 4326 	mov.w	r3, r6, asr #16
 802319c:	d406      	bmi.n	80231ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802319e:	4584      	cmp	ip, r0
 80231a0:	da04      	bge.n	80231ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80231a2:	2b00      	cmp	r3, #0
 80231a4:	db02      	blt.n	80231ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80231a6:	42bb      	cmp	r3, r7
 80231a8:	f2c0 8183 	blt.w	80234b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80231ac:	f11c 0c01 	adds.w	ip, ip, #1
 80231b0:	f100 8173 	bmi.w	802349a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80231b4:	4561      	cmp	r1, ip
 80231b6:	f2c0 8170 	blt.w	802349a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80231ba:	3301      	adds	r3, #1
 80231bc:	f100 816d 	bmi.w	802349a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80231c0:	429a      	cmp	r2, r3
 80231c2:	f2c0 816a 	blt.w	802349a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80231c6:	9b07      	ldr	r3, [sp, #28]
 80231c8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80231ca:	9318      	str	r3, [sp, #96]	@ 0x60
 80231cc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80231ce:	2b00      	cmp	r3, #0
 80231d0:	f340 818c 	ble.w	80234ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80231d4:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 80231d6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80231d8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80231dc:	689b      	ldr	r3, [r3, #8]
 80231de:	1422      	asrs	r2, r4, #16
 80231e0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80231e4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80231e8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80231ec:	f100 81cd 	bmi.w	802358a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80231f0:	f103 38ff 	add.w	r8, r3, #4294967295
 80231f4:	4542      	cmp	r2, r8
 80231f6:	f280 81c8 	bge.w	802358a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80231fa:	f1bc 0f00 	cmp.w	ip, #0
 80231fe:	f2c0 81c4 	blt.w	802358a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023202:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023206:	45c4      	cmp	ip, r8
 8023208:	f280 81bf 	bge.w	802358a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802320c:	b21b      	sxth	r3, r3
 802320e:	fb0c 2203 	mla	r2, ip, r3, r2
 8023212:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023214:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023218:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802321c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023220:	2800      	cmp	r0, #0
 8023222:	f000 81a9 	beq.w	8023578 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023226:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802322a:	950c      	str	r5, [sp, #48]	@ 0x30
 802322c:	0e2d      	lsrs	r5, r5, #24
 802322e:	9513      	str	r5, [sp, #76]	@ 0x4c
 8023230:	b181      	cbz	r1, 8023254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023232:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8023236:	3b01      	subs	r3, #1
 8023238:	009b      	lsls	r3, r3, #2
 802323a:	3304      	adds	r3, #4
 802323c:	eb08 0c03 	add.w	ip, r8, r3
 8023240:	f858 3003 	ldr.w	r3, [r8, r3]
 8023244:	9308      	str	r3, [sp, #32]
 8023246:	0e1b      	lsrs	r3, r3, #24
 8023248:	9311      	str	r3, [sp, #68]	@ 0x44
 802324a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802324e:	930d      	str	r3, [sp, #52]	@ 0x34
 8023250:	0e1b      	lsrs	r3, r3, #24
 8023252:	9314      	str	r3, [sp, #80]	@ 0x50
 8023254:	b280      	uxth	r0, r0
 8023256:	b289      	uxth	r1, r1
 8023258:	fb00 f901 	mul.w	r9, r0, r1
 802325c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023260:	0100      	lsls	r0, r0, #4
 8023262:	eba0 0809 	sub.w	r8, r0, r9
 8023266:	b289      	uxth	r1, r1
 8023268:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802326c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802326e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023270:	fa1f f888 	uxth.w	r8, r8
 8023274:	1a5b      	subs	r3, r3, r1
 8023276:	b29b      	uxth	r3, r3
 8023278:	fb08 f000 	mul.w	r0, r8, r0
 802327c:	fb03 000e 	mla	r0, r3, lr, r0
 8023280:	fb01 0005 	mla	r0, r1, r5, r0
 8023284:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023286:	fb09 0005 	mla	r0, r9, r5, r0
 802328a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802328e:	2800      	cmp	r0, #0
 8023290:	f000 80fa 	beq.w	8023488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023294:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023298:	d01b      	beq.n	80232d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802329a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802329e:	fb0e fa0a 	mul.w	sl, lr, sl
 80232a2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80232a6:	fb0e fe02 	mul.w	lr, lr, r2
 80232aa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80232ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80232b2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80232b6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80232ba:	4452      	add	r2, sl
 80232bc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80232c0:	0a12      	lsrs	r2, r2, #8
 80232c2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80232c6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80232ca:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80232ce:	ea42 020c 	orr.w	r2, r2, ip
 80232d2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80232d4:	2dff      	cmp	r5, #255	@ 0xff
 80232d6:	d021      	beq.n	802331c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80232d8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80232da:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80232de:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80232e0:	fb05 fb0b 	mul.w	fp, r5, fp
 80232e4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80232e6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80232ea:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80232ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80232f0:	fb05 fa0a 	mul.w	sl, r5, sl
 80232f4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80232f8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80232fc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023300:	44de      	add	lr, fp
 8023302:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023306:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802330a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802330e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023312:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023316:	ea4e 050a 	orr.w	r5, lr, sl
 802331a:	950c      	str	r5, [sp, #48]	@ 0x30
 802331c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802331e:	2dff      	cmp	r5, #255	@ 0xff
 8023320:	d021      	beq.n	8023366 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8023322:	9d08      	ldr	r5, [sp, #32]
 8023324:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023328:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802332a:	fb05 fb0b 	mul.w	fp, r5, fp
 802332e:	9d08      	ldr	r5, [sp, #32]
 8023330:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023334:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023336:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802333a:	fb05 fa0a 	mul.w	sl, r5, sl
 802333e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023342:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023346:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802334a:	44de      	add	lr, fp
 802334c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023350:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023354:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023358:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802335c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023360:	ea4e 050a 	orr.w	r5, lr, sl
 8023364:	9508      	str	r5, [sp, #32]
 8023366:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023368:	2dff      	cmp	r5, #255	@ 0xff
 802336a:	d021      	beq.n	80233b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802336c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802336e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023372:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023374:	fb05 fb0b 	mul.w	fp, r5, fp
 8023378:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802337a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802337e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023380:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023384:	fb05 fa0a 	mul.w	sl, r5, sl
 8023388:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802338c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023390:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023394:	44de      	add	lr, fp
 8023396:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802339a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802339e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80233a2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80233a6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80233aa:	ea4e 050a 	orr.w	r5, lr, sl
 80233ae:	950d      	str	r5, [sp, #52]	@ 0x34
 80233b0:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80233b2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80233b6:	9d08      	ldr	r5, [sp, #32]
 80233b8:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 80233bc:	fb08 fc0c 	mul.w	ip, r8, ip
 80233c0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80233c4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80233c8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80233ca:	fb01 cc0e 	mla	ip, r1, lr, ip
 80233ce:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80233d2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80233d4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80233d8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80233dc:	fb08 f80e 	mul.w	r8, r8, lr
 80233e0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80233e4:	fb03 8202 	mla	r2, r3, r2, r8
 80233e8:	9b08      	ldr	r3, [sp, #32]
 80233ea:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80233ec:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 80233f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80233f2:	fb01 220a 	mla	r2, r1, sl, r2
 80233f6:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 80233fa:	fb09 2901 	mla	r9, r9, r1, r2
 80233fe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8023400:	883b      	ldrh	r3, [r7, #0]
 8023402:	4342      	muls	r2, r0
 8023404:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023408:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802340c:	1c50      	adds	r0, r2, #1
 802340e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023412:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023416:	ea4c 0c09 	orr.w	ip, ip, r9
 802341a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802341e:	1219      	asrs	r1, r3, #8
 8023420:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023424:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023428:	b2c0      	uxtb	r0, r0
 802342a:	fb12 f205 	smulbb	r2, r2, r5
 802342e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8023432:	fb01 2100 	mla	r1, r1, r0, r2
 8023436:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802343a:	10da      	asrs	r2, r3, #3
 802343c:	fa5f fc8c 	uxtb.w	ip, ip
 8023440:	00db      	lsls	r3, r3, #3
 8023442:	fb1c fc05 	smulbb	ip, ip, r5
 8023446:	b2db      	uxtb	r3, r3
 8023448:	b289      	uxth	r1, r1
 802344a:	fb03 c300 	mla	r3, r3, r0, ip
 802344e:	fa1f fc83 	uxth.w	ip, r3
 8023452:	1c4b      	adds	r3, r1, #1
 8023454:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023458:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802345c:	fb1e fe05 	smulbb	lr, lr, r5
 8023460:	f10c 0301 	add.w	r3, ip, #1
 8023464:	fb02 e200 	mla	r2, r2, r0, lr
 8023468:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802346c:	b292      	uxth	r2, r2
 802346e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023472:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023476:	430b      	orrs	r3, r1
 8023478:	1c51      	adds	r1, r2, #1
 802347a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802347e:	0952      	lsrs	r2, r2, #5
 8023480:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023484:	4313      	orrs	r3, r2
 8023486:	803b      	strh	r3, [r7, #0]
 8023488:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802348a:	441c      	add	r4, r3
 802348c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802348e:	441e      	add	r6, r3
 8023490:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023492:	3b01      	subs	r3, #1
 8023494:	3702      	adds	r7, #2
 8023496:	9318      	str	r3, [sp, #96]	@ 0x60
 8023498:	e698      	b.n	80231cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802349a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802349c:	441c      	add	r4, r3
 802349e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80234a0:	441e      	add	r6, r3
 80234a2:	9b07      	ldr	r3, [sp, #28]
 80234a4:	3b01      	subs	r3, #1
 80234a6:	9307      	str	r3, [sp, #28]
 80234a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80234aa:	3302      	adds	r3, #2
 80234ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80234ae:	e66d      	b.n	802318c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80234b0:	d023      	beq.n	80234fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80234b2:	9b07      	ldr	r3, [sp, #28]
 80234b4:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 80234b6:	3b01      	subs	r3, #1
 80234b8:	fb00 4003 	mla	r0, r0, r3, r4
 80234bc:	1400      	asrs	r0, r0, #16
 80234be:	f53f ae82 	bmi.w	80231c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80234c2:	3901      	subs	r1, #1
 80234c4:	4288      	cmp	r0, r1
 80234c6:	f6bf ae7e 	bge.w	80231c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80234ca:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80234cc:	fb01 6303 	mla	r3, r1, r3, r6
 80234d0:	141b      	asrs	r3, r3, #16
 80234d2:	f53f ae78 	bmi.w	80231c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80234d6:	3a01      	subs	r2, #1
 80234d8:	4293      	cmp	r3, r2
 80234da:	f6bf ae74 	bge.w	80231c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80234de:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80234e2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80234e6:	f1bb 0f00 	cmp.w	fp, #0
 80234ea:	dc6c      	bgt.n	80235c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80234ec:	9b07      	ldr	r3, [sp, #28]
 80234ee:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80234f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80234f4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80234f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80234fa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80234fc:	2b00      	cmp	r3, #0
 80234fe:	f340 81b3 	ble.w	8023868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023502:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023506:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802350a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802350e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023510:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023514:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023518:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802351c:	eef0 6a62 	vmov.f32	s13, s5
 8023520:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023524:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023528:	ee77 2a62 	vsub.f32	s5, s14, s5
 802352c:	ee16 4a90 	vmov	r4, s13
 8023530:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023534:	eef0 6a43 	vmov.f32	s13, s6
 8023538:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802353c:	ee12 2a90 	vmov	r2, s5
 8023540:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023544:	fb92 f3f3 	sdiv	r3, r2, r3
 8023548:	ee13 2a10 	vmov	r2, s6
 802354c:	9329      	str	r3, [sp, #164]	@ 0xa4
 802354e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023550:	fb92 f3f3 	sdiv	r3, r2, r3
 8023554:	932a      	str	r3, [sp, #168]	@ 0xa8
 8023556:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023558:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802355a:	3b01      	subs	r3, #1
 802355c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023560:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023562:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023564:	bf08      	it	eq
 8023566:	4613      	moveq	r3, r2
 8023568:	ee16 6a90 	vmov	r6, s13
 802356c:	9307      	str	r3, [sp, #28]
 802356e:	eeb0 3a67 	vmov.f32	s6, s15
 8023572:	eef0 2a47 	vmov.f32	s5, s14
 8023576:	e5fb      	b.n	8023170 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023578:	2900      	cmp	r1, #0
 802357a:	f43f ae6b 	beq.w	8023254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802357e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023582:	9308      	str	r3, [sp, #32]
 8023584:	0e1b      	lsrs	r3, r3, #24
 8023586:	9311      	str	r3, [sp, #68]	@ 0x44
 8023588:	e664      	b.n	8023254 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802358a:	f112 0801 	adds.w	r8, r2, #1
 802358e:	f53f af7b 	bmi.w	8023488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023592:	4543      	cmp	r3, r8
 8023594:	f6ff af78 	blt.w	8023488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023598:	f11c 0801 	adds.w	r8, ip, #1
 802359c:	f53f af74 	bmi.w	8023488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80235a0:	45c6      	cmp	lr, r8
 80235a2:	f6ff af71 	blt.w	8023488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80235a6:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 80235a8:	9201      	str	r2, [sp, #4]
 80235aa:	fa0f f28e 	sxth.w	r2, lr
 80235ae:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80235b2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80235b6:	9200      	str	r2, [sp, #0]
 80235b8:	b21b      	sxth	r3, r3
 80235ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80235bc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 80235be:	4639      	mov	r1, r7
 80235c0:	f7ff fc79 	bl	8022eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80235c4:	e760      	b.n	8023488 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80235c6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80235c8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80235ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80235ce:	1427      	asrs	r7, r4, #16
 80235d0:	1433      	asrs	r3, r6, #16
 80235d2:	fb01 7303 	mla	r3, r1, r3, r7
 80235d6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80235da:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80235de:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80235e2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80235e6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80235ea:	2a00      	cmp	r2, #0
 80235ec:	f000 8133 	beq.w	8023856 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80235f0:	687d      	ldr	r5, [r7, #4]
 80235f2:	950e      	str	r5, [sp, #56]	@ 0x38
 80235f4:	0e2d      	lsrs	r5, r5, #24
 80235f6:	9515      	str	r5, [sp, #84]	@ 0x54
 80235f8:	b178      	cbz	r0, 802361a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80235fa:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 80235fe:	3901      	subs	r1, #1
 8023600:	0089      	lsls	r1, r1, #2
 8023602:	3104      	adds	r1, #4
 8023604:	eb07 0e01 	add.w	lr, r7, r1
 8023608:	5879      	ldr	r1, [r7, r1]
 802360a:	9109      	str	r1, [sp, #36]	@ 0x24
 802360c:	0e09      	lsrs	r1, r1, #24
 802360e:	9112      	str	r1, [sp, #72]	@ 0x48
 8023610:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023614:	910f      	str	r1, [sp, #60]	@ 0x3c
 8023616:	0e09      	lsrs	r1, r1, #24
 8023618:	9116      	str	r1, [sp, #88]	@ 0x58
 802361a:	b292      	uxth	r2, r2
 802361c:	b280      	uxth	r0, r0
 802361e:	fb02 f800 	mul.w	r8, r2, r0
 8023622:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023626:	0112      	lsls	r2, r2, #4
 8023628:	eba2 0e08 	sub.w	lr, r2, r8
 802362c:	b280      	uxth	r0, r0
 802362e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8023632:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8023634:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023636:	fa1f fe8e 	uxth.w	lr, lr
 802363a:	1a12      	subs	r2, r2, r0
 802363c:	b292      	uxth	r2, r2
 802363e:	fb0e f101 	mul.w	r1, lr, r1
 8023642:	fb02 110c 	mla	r1, r2, ip, r1
 8023646:	fb00 1105 	mla	r1, r0, r5, r1
 802364a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802364c:	fb08 1105 	mla	r1, r8, r5, r1
 8023650:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023654:	2900      	cmp	r1, #0
 8023656:	f000 80f5 	beq.w	8023844 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802365a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802365e:	d019      	beq.n	8023694 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023660:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023664:	fb0c fa0a 	mul.w	sl, ip, sl
 8023668:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802366c:	fb0c fc03 	mul.w	ip, ip, r3
 8023670:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023674:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023678:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802367c:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023680:	4453      	add	r3, sl
 8023682:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023686:	0a1b      	lsrs	r3, r3, #8
 8023688:	0a3f      	lsrs	r7, r7, #8
 802368a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802368e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023692:	433b      	orrs	r3, r7
 8023694:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023696:	2dff      	cmp	r5, #255	@ 0xff
 8023698:	d020      	beq.n	80236dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802369a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802369c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80236a0:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80236a2:	436f      	muls	r7, r5
 80236a4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80236a6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80236aa:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80236ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80236b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80236b4:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80236b8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80236bc:	44bc      	add	ip, r7
 80236be:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80236c2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80236c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80236ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80236d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80236d6:	ea4c 050a 	orr.w	r5, ip, sl
 80236da:	950e      	str	r5, [sp, #56]	@ 0x38
 80236dc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80236de:	2dff      	cmp	r5, #255	@ 0xff
 80236e0:	d020      	beq.n	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80236e2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80236e4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80236e8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80236ea:	436f      	muls	r7, r5
 80236ec:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80236ee:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80236f2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80236f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80236f8:	fb05 fa0a 	mul.w	sl, r5, sl
 80236fc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023700:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023704:	44bc      	add	ip, r7
 8023706:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802370a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802370e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023712:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023716:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802371a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802371e:	ea4c 050a 	orr.w	r5, ip, sl
 8023722:	9509      	str	r5, [sp, #36]	@ 0x24
 8023724:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8023726:	2dff      	cmp	r5, #255	@ 0xff
 8023728:	d020      	beq.n	802376c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802372a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802372c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023730:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8023732:	436f      	muls	r7, r5
 8023734:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023736:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802373a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802373c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023740:	fb05 fa0a 	mul.w	sl, r5, sl
 8023744:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023748:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802374c:	44bc      	add	ip, r7
 802374e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023752:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023756:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802375a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802375e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023762:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023766:	ea4c 050a 	orr.w	r5, ip, sl
 802376a:	950f      	str	r5, [sp, #60]	@ 0x3c
 802376c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802376e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023772:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023774:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8023778:	fb0e f707 	mul.w	r7, lr, r7
 802377c:	fb02 770c 	mla	r7, r2, ip, r7
 8023780:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023784:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023786:	fb00 770c 	mla	r7, r0, ip, r7
 802378a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802378e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023790:	fb08 770c 	mla	r7, r8, ip, r7
 8023794:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8023798:	fb0e fe0c 	mul.w	lr, lr, ip
 802379c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80237a0:	fb02 e303 	mla	r3, r2, r3, lr
 80237a4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80237a6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80237a8:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80237ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80237ae:	fb00 330a 	mla	r3, r0, sl, r3
 80237b2:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 80237b6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80237ba:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80237bc:	f8b9 0000 	ldrh.w	r0, [r9]
 80237c0:	4359      	muls	r1, r3
 80237c2:	0a3f      	lsrs	r7, r7, #8
 80237c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80237c8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80237cc:	1c4b      	adds	r3, r1, #1
 80237ce:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80237d2:	ea47 070c 	orr.w	r7, r7, ip
 80237d6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80237da:	1202      	asrs	r2, r0, #8
 80237dc:	0c3b      	lsrs	r3, r7, #16
 80237de:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80237e2:	b2c9      	uxtb	r1, r1
 80237e4:	fb13 f305 	smulbb	r3, r3, r5
 80237e8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80237ec:	fb02 3201 	mla	r2, r2, r1, r3
 80237f0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80237f4:	10c3      	asrs	r3, r0, #3
 80237f6:	b2ff      	uxtb	r7, r7
 80237f8:	00c0      	lsls	r0, r0, #3
 80237fa:	b2c0      	uxtb	r0, r0
 80237fc:	fb17 f705 	smulbb	r7, r7, r5
 8023800:	fb00 7001 	mla	r0, r0, r1, r7
 8023804:	b292      	uxth	r2, r2
 8023806:	fb1c fc05 	smulbb	ip, ip, r5
 802380a:	b280      	uxth	r0, r0
 802380c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023810:	fb03 c301 	mla	r3, r3, r1, ip
 8023814:	1c51      	adds	r1, r2, #1
 8023816:	f100 0c01 	add.w	ip, r0, #1
 802381a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802381e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023822:	b29b      	uxth	r3, r3
 8023824:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023828:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802382c:	ea4c 0202 	orr.w	r2, ip, r2
 8023830:	f103 0c01 	add.w	ip, r3, #1
 8023834:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023838:	095b      	lsrs	r3, r3, #5
 802383a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802383e:	431a      	orrs	r2, r3
 8023840:	f8a9 2000 	strh.w	r2, [r9]
 8023844:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023846:	441c      	add	r4, r3
 8023848:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802384a:	f109 0902 	add.w	r9, r9, #2
 802384e:	441e      	add	r6, r3
 8023850:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023854:	e647      	b.n	80234e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023856:	2800      	cmp	r0, #0
 8023858:	f43f aedf 	beq.w	802361a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802385c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023860:	9109      	str	r1, [sp, #36]	@ 0x24
 8023862:	0e09      	lsrs	r1, r1, #24
 8023864:	9112      	str	r1, [sp, #72]	@ 0x48
 8023866:	e6d8      	b.n	802361a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023868:	b01d      	add	sp, #116	@ 0x74
 802386a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802386e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802386e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023872:	b085      	sub	sp, #20
 8023874:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8023878:	9102      	str	r1, [sp, #8]
 802387a:	2c00      	cmp	r4, #0
 802387c:	fb04 7103 	mla	r1, r4, r3, r7
 8023880:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8023884:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8023888:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802388c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023890:	f2c0 810c 	blt.w	8023aac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023894:	45a6      	cmp	lr, r4
 8023896:	f340 8109 	ble.w	8023aac <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802389a:	2f00      	cmp	r7, #0
 802389c:	f2c0 8104 	blt.w	8023aa8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80238a0:	42bb      	cmp	r3, r7
 80238a2:	f340 8101 	ble.w	8023aa8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80238a6:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80238aa:	1c7a      	adds	r2, r7, #1
 80238ac:	f100 8101 	bmi.w	8023ab2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80238b0:	4293      	cmp	r3, r2
 80238b2:	f340 80fe 	ble.w	8023ab2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 80238b6:	2e00      	cmp	r6, #0
 80238b8:	f000 80fd 	beq.w	8023ab6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 80238bc:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80238c0:	3401      	adds	r4, #1
 80238c2:	f100 80fc 	bmi.w	8023abe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80238c6:	45a6      	cmp	lr, r4
 80238c8:	f340 80f9 	ble.w	8023abe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 80238cc:	2800      	cmp	r0, #0
 80238ce:	f000 80f9 	beq.w	8023ac4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 80238d2:	2f00      	cmp	r7, #0
 80238d4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 80238d8:	f2c0 80ef 	blt.w	8023aba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80238dc:	42bb      	cmp	r3, r7
 80238de:	f340 80ec 	ble.w	8023aba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 80238e2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80238e6:	3701      	adds	r7, #1
 80238e8:	f100 80ef 	bmi.w	8023aca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80238ec:	42bb      	cmp	r3, r7
 80238ee:	f340 80ec 	ble.w	8023aca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 80238f2:	2e00      	cmp	r6, #0
 80238f4:	f000 80eb 	beq.w	8023ace <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 80238f8:	6852      	ldr	r2, [r2, #4]
 80238fa:	b2b6      	uxth	r6, r6
 80238fc:	b280      	uxth	r0, r0
 80238fe:	fb00 fe06 	mul.w	lr, r0, r6
 8023902:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023906:	0136      	lsls	r6, r6, #4
 8023908:	eba6 070e 	sub.w	r7, r6, lr
 802390c:	b280      	uxth	r0, r0
 802390e:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8023912:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023916:	b2bf      	uxth	r7, r7
 8023918:	1a1b      	subs	r3, r3, r0
 802391a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802391e:	b29b      	uxth	r3, r3
 8023920:	fb07 f60a 	mul.w	r6, r7, sl
 8023924:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023928:	fb0b 6603 	mla	r6, fp, r3, r6
 802392c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023930:	fb00 6609 	mla	r6, r0, r9, r6
 8023934:	fb0e 6608 	mla	r6, lr, r8, r6
 8023938:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802393c:	9600      	str	r6, [sp, #0]
 802393e:	2e00      	cmp	r6, #0
 8023940:	f000 80af 	beq.w	8023aa2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023944:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023948:	fb0b fc0c 	mul.w	ip, fp, ip
 802394c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8023950:	fb0b f505 	mul.w	r5, fp, r5
 8023954:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023958:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 802395c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023960:	44dc      	add	ip, fp
 8023962:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023966:	9501      	str	r5, [sp, #4]
 8023968:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 802396c:	9503      	str	r5, [sp, #12]
 802396e:	9d01      	ldr	r5, [sp, #4]
 8023970:	9e02      	ldr	r6, [sp, #8]
 8023972:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8023976:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802397a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 802397e:	fb0a fc0c 	mul.w	ip, sl, ip
 8023982:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023986:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802398a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802398e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023992:	4465      	add	r5, ip
 8023994:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023998:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 802399c:	fb09 fc0c 	mul.w	ip, r9, ip
 80239a0:	fb09 f904 	mul.w	r9, r9, r4
 80239a4:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80239a8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80239ac:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80239b0:	fb08 f404 	mul.w	r4, r8, r4
 80239b4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80239b8:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80239bc:	fb08 f802 	mul.w	r8, r8, r2
 80239c0:	fb0a fa01 	mul.w	sl, sl, r1
 80239c4:	0a22      	lsrs	r2, r4, #8
 80239c6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80239ca:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80239ce:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80239d2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80239d6:	4414      	add	r4, r2
 80239d8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80239dc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80239e0:	0a2d      	lsrs	r5, r5, #8
 80239e2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80239e6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80239ea:	9a03      	ldr	r2, [sp, #12]
 80239ec:	8836      	ldrh	r6, [r6, #0]
 80239ee:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80239f2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80239f6:	437d      	muls	r5, r7
 80239f8:	4461      	add	r1, ip
 80239fa:	0a24      	lsrs	r4, r4, #8
 80239fc:	fb02 5503 	mla	r5, r2, r3, r5
 8023a00:	0a09      	lsrs	r1, r1, #8
 8023a02:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8023a06:	fb04 540e 	mla	r4, r4, lr, r5
 8023a0a:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023a0e:	fb01 4100 	mla	r1, r1, r0, r4
 8023a12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a16:	0a09      	lsrs	r1, r1, #8
 8023a18:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023a1c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8023a20:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023a24:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8023a28:	fb07 f70a 	mul.w	r7, r7, sl
 8023a2c:	fb03 7101 	mla	r1, r3, r1, r7
 8023a30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023a34:	9b00      	ldr	r3, [sp, #0]
 8023a36:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8023a3a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023a3e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8023a42:	fb00 e101 	mla	r1, r0, r1, lr
 8023a46:	43da      	mvns	r2, r3
 8023a48:	1233      	asrs	r3, r6, #8
 8023a4a:	b2d2      	uxtb	r2, r2
 8023a4c:	10f0      	asrs	r0, r6, #3
 8023a4e:	0a09      	lsrs	r1, r1, #8
 8023a50:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8023a54:	00f6      	lsls	r6, r6, #3
 8023a56:	4353      	muls	r3, r2
 8023a58:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023a5c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023a60:	b2f6      	uxtb	r6, r6
 8023a62:	4321      	orrs	r1, r4
 8023a64:	4350      	muls	r0, r2
 8023a66:	4356      	muls	r6, r2
 8023a68:	1c5a      	adds	r2, r3, #1
 8023a6a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023a6e:	0c0b      	lsrs	r3, r1, #16
 8023a70:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023a74:	1c42      	adds	r2, r0, #1
 8023a76:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023a7a:	0a0a      	lsrs	r2, r1, #8
 8023a7c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023a80:	021b      	lsls	r3, r3, #8
 8023a82:	00d2      	lsls	r2, r2, #3
 8023a84:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023a88:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8023a8c:	4313      	orrs	r3, r2
 8023a8e:	1c72      	adds	r2, r6, #1
 8023a90:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023a94:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023a98:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023a9c:	4319      	orrs	r1, r3
 8023a9e:	9b02      	ldr	r3, [sp, #8]
 8023aa0:	8019      	strh	r1, [r3, #0]
 8023aa2:	b005      	add	sp, #20
 8023aa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023aa8:	2500      	movs	r5, #0
 8023aaa:	e6fe      	b.n	80238aa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023aac:	2100      	movs	r1, #0
 8023aae:	460d      	mov	r5, r1
 8023ab0:	e706      	b.n	80238c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ab2:	2100      	movs	r1, #0
 8023ab4:	e704      	b.n	80238c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ab6:	4631      	mov	r1, r6
 8023ab8:	e702      	b.n	80238c0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023aba:	2400      	movs	r4, #0
 8023abc:	e713      	b.n	80238e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023abe:	2200      	movs	r2, #0
 8023ac0:	4614      	mov	r4, r2
 8023ac2:	e71a      	b.n	80238fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023ac4:	4602      	mov	r2, r0
 8023ac6:	4604      	mov	r4, r0
 8023ac8:	e717      	b.n	80238fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023aca:	2200      	movs	r2, #0
 8023acc:	e715      	b.n	80238fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023ace:	4632      	mov	r2, r6
 8023ad0:	e713      	b.n	80238fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023ad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023ad8:	b09b      	sub	sp, #108	@ 0x6c
 8023ada:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8023ade:	9218      	str	r2, [sp, #96]	@ 0x60
 8023ae0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8023ae2:	9116      	str	r1, [sp, #88]	@ 0x58
 8023ae4:	9307      	str	r3, [sp, #28]
 8023ae6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8023aea:	9019      	str	r0, [sp, #100]	@ 0x64
 8023aec:	6850      	ldr	r0, [r2, #4]
 8023aee:	6812      	ldr	r2, [r2, #0]
 8023af0:	fb00 1303 	mla	r3, r0, r3, r1
 8023af4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023af8:	930a      	str	r3, [sp, #40]	@ 0x28
 8023afa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023afc:	681b      	ldr	r3, [r3, #0]
 8023afe:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023b00:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023b02:	2b00      	cmp	r3, #0
 8023b04:	dc03      	bgt.n	8023b0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023b06:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023b08:	2b00      	cmp	r3, #0
 8023b0a:	f340 8386 	ble.w	802421a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023b0e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023b10:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b14:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023b18:	1e48      	subs	r0, r1, #1
 8023b1a:	1e57      	subs	r7, r2, #1
 8023b1c:	9b07      	ldr	r3, [sp, #28]
 8023b1e:	2b00      	cmp	r3, #0
 8023b20:	f340 8166 	ble.w	8023df0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023b24:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023b28:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023b2c:	d406      	bmi.n	8023b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023b2e:	4584      	cmp	ip, r0
 8023b30:	da04      	bge.n	8023b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023b32:	2b00      	cmp	r3, #0
 8023b34:	db02      	blt.n	8023b3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023b36:	42bb      	cmp	r3, r7
 8023b38:	f2c0 815b 	blt.w	8023df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023b3c:	f11c 0c01 	adds.w	ip, ip, #1
 8023b40:	f100 814b 	bmi.w	8023dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023b44:	4561      	cmp	r1, ip
 8023b46:	f2c0 8148 	blt.w	8023dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023b4a:	3301      	adds	r3, #1
 8023b4c:	f100 8145 	bmi.w	8023dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023b50:	429a      	cmp	r2, r3
 8023b52:	f2c0 8142 	blt.w	8023dda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023b56:	9b07      	ldr	r3, [sp, #28]
 8023b58:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8023b5a:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023b5c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023b5e:	2b00      	cmp	r3, #0
 8023b60:	f340 8165 	ble.w	8023e2e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023b64:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8023b66:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023b68:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023b6c:	689b      	ldr	r3, [r3, #8]
 8023b6e:	1422      	asrs	r2, r4, #16
 8023b70:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023b74:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023b78:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023b7c:	f100 81d5 	bmi.w	8023f2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023b80:	f103 38ff 	add.w	r8, r3, #4294967295
 8023b84:	4542      	cmp	r2, r8
 8023b86:	f280 81d0 	bge.w	8023f2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023b8a:	f1bc 0f00 	cmp.w	ip, #0
 8023b8e:	f2c0 81cc 	blt.w	8023f2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023b92:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023b96:	45c4      	cmp	ip, r8
 8023b98:	f280 81c7 	bge.w	8023f2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023b9c:	b21b      	sxth	r3, r3
 8023b9e:	fb0c 2203 	mla	r2, ip, r3, r2
 8023ba2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023ba4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023ba8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023bac:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023bb0:	2900      	cmp	r1, #0
 8023bb2:	f000 8182 	beq.w	8023eba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023bb6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023bba:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023bbc:	0e2d      	lsrs	r5, r5, #24
 8023bbe:	9512      	str	r5, [sp, #72]	@ 0x48
 8023bc0:	b180      	cbz	r0, 8023be4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023bc2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8023bc6:	3b01      	subs	r3, #1
 8023bc8:	009b      	lsls	r3, r3, #2
 8023bca:	3304      	adds	r3, #4
 8023bcc:	eb08 0c03 	add.w	ip, r8, r3
 8023bd0:	f858 3003 	ldr.w	r3, [r8, r3]
 8023bd4:	9308      	str	r3, [sp, #32]
 8023bd6:	0e1b      	lsrs	r3, r3, #24
 8023bd8:	9310      	str	r3, [sp, #64]	@ 0x40
 8023bda:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023bde:	930c      	str	r3, [sp, #48]	@ 0x30
 8023be0:	0e1b      	lsrs	r3, r3, #24
 8023be2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8023be4:	b289      	uxth	r1, r1
 8023be6:	b280      	uxth	r0, r0
 8023be8:	fb01 f900 	mul.w	r9, r1, r0
 8023bec:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023bf0:	0109      	lsls	r1, r1, #4
 8023bf2:	eba1 0809 	sub.w	r8, r1, r9
 8023bf6:	b280      	uxth	r0, r0
 8023bf8:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8023bfc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8023bfe:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023c00:	fa1f f888 	uxth.w	r8, r8
 8023c04:	1a09      	subs	r1, r1, r0
 8023c06:	b289      	uxth	r1, r1
 8023c08:	fb08 f303 	mul.w	r3, r8, r3
 8023c0c:	fb01 330e 	mla	r3, r1, lr, r3
 8023c10:	fb00 3305 	mla	r3, r0, r5, r3
 8023c14:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023c16:	fb09 3305 	mla	r3, r9, r5, r3
 8023c1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023c1e:	2b00      	cmp	r3, #0
 8023c20:	f000 80d2 	beq.w	8023dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023c24:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023c28:	d01b      	beq.n	8023c62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023c2a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8023c2e:	fb0e fa0a 	mul.w	sl, lr, sl
 8023c32:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023c36:	fb0e fe02 	mul.w	lr, lr, r2
 8023c3a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023c3e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023c42:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023c46:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8023c4a:	4452      	add	r2, sl
 8023c4c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023c50:	0a12      	lsrs	r2, r2, #8
 8023c52:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c56:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023c5a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023c5e:	ea42 020c 	orr.w	r2, r2, ip
 8023c62:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023c64:	2dff      	cmp	r5, #255	@ 0xff
 8023c66:	d021      	beq.n	8023cac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023c68:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023c6a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023c6e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023c70:	fb05 fb0b 	mul.w	fp, r5, fp
 8023c74:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023c76:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023c7a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023c7c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023c80:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023c88:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023c8c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023c90:	44de      	add	lr, fp
 8023c92:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023c96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023c9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c9e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023ca2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023ca6:	ea4e 050a 	orr.w	r5, lr, sl
 8023caa:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023cac:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023cae:	2dff      	cmp	r5, #255	@ 0xff
 8023cb0:	d021      	beq.n	8023cf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023cb2:	9d08      	ldr	r5, [sp, #32]
 8023cb4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023cb8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023cba:	fb05 fb0b 	mul.w	fp, r5, fp
 8023cbe:	9d08      	ldr	r5, [sp, #32]
 8023cc0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023cc4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023cc6:	fb05 fa0e 	mul.w	sl, r5, lr
 8023cca:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023cce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023cd2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023cd6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023cda:	44de      	add	lr, fp
 8023cdc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023ce0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023ce4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ce8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023cec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023cf0:	ea4e 050a 	orr.w	r5, lr, sl
 8023cf4:	9508      	str	r5, [sp, #32]
 8023cf6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023cf8:	2dff      	cmp	r5, #255	@ 0xff
 8023cfa:	d021      	beq.n	8023d40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023cfc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023cfe:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023d02:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023d04:	fb05 fb0b 	mul.w	fp, r5, fp
 8023d08:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023d0a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023d0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023d10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023d14:	fb05 fa0a 	mul.w	sl, r5, sl
 8023d18:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023d1c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023d20:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023d24:	44de      	add	lr, fp
 8023d26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023d2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023d2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023d32:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023d36:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023d3a:	ea4e 050a 	orr.w	r5, lr, sl
 8023d3e:	950c      	str	r5, [sp, #48]	@ 0x30
 8023d40:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023d42:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023d46:	9d08      	ldr	r5, [sp, #32]
 8023d48:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8023d4c:	fb08 fc0c 	mul.w	ip, r8, ip
 8023d50:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023d54:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023d58:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023d5a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023d5e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023d62:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023d64:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023d68:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023d6c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023d70:	fb08 f80e 	mul.w	r8, r8, lr
 8023d74:	fb01 8202 	mla	r2, r1, r2, r8
 8023d78:	9908      	ldr	r1, [sp, #32]
 8023d7a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8023d7e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023d80:	fb00 220a 	mla	r2, r0, sl, r2
 8023d84:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8023d88:	fb09 2900 	mla	r9, r9, r0, r2
 8023d8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023d94:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023d98:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023d9c:	ea4c 0c09 	orr.w	ip, ip, r9
 8023da0:	2bff      	cmp	r3, #255	@ 0xff
 8023da2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023da6:	f040 8091 	bne.w	8023ecc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023daa:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023dae:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8023db2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023db6:	f022 0207 	bic.w	r2, r2, #7
 8023dba:	431a      	orrs	r2, r3
 8023dbc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023dc0:	ea4c 0c02 	orr.w	ip, ip, r2
 8023dc4:	f8a7 c000 	strh.w	ip, [r7]
 8023dc8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023dca:	441c      	add	r4, r3
 8023dcc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023dce:	441e      	add	r6, r3
 8023dd0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023dd2:	3b01      	subs	r3, #1
 8023dd4:	3702      	adds	r7, #2
 8023dd6:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023dd8:	e6c0      	b.n	8023b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023dda:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023ddc:	441c      	add	r4, r3
 8023dde:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023de0:	441e      	add	r6, r3
 8023de2:	9b07      	ldr	r3, [sp, #28]
 8023de4:	3b01      	subs	r3, #1
 8023de6:	9307      	str	r3, [sp, #28]
 8023de8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023dea:	3302      	adds	r3, #2
 8023dec:	930a      	str	r3, [sp, #40]	@ 0x28
 8023dee:	e695      	b.n	8023b1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023df0:	d024      	beq.n	8023e3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023df2:	9b07      	ldr	r3, [sp, #28]
 8023df4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8023df6:	3b01      	subs	r3, #1
 8023df8:	fb00 4003 	mla	r0, r0, r3, r4
 8023dfc:	1400      	asrs	r0, r0, #16
 8023dfe:	f53f aeaa 	bmi.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e02:	3901      	subs	r1, #1
 8023e04:	4288      	cmp	r0, r1
 8023e06:	f6bf aea6 	bge.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e0a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8023e0c:	fb01 6303 	mla	r3, r1, r3, r6
 8023e10:	141b      	asrs	r3, r3, #16
 8023e12:	f53f aea0 	bmi.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e16:	3a01      	subs	r2, #1
 8023e18:	4293      	cmp	r3, r2
 8023e1a:	f6bf ae9c 	bge.w	8023b56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e1e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023e22:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8023e26:	f1bb 0f00 	cmp.w	fp, #0
 8023e2a:	f300 809a 	bgt.w	8023f62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023e2e:	9b07      	ldr	r3, [sp, #28]
 8023e30:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023e34:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023e36:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023e3a:	930a      	str	r3, [sp, #40]	@ 0x28
 8023e3c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023e3e:	2b00      	cmp	r3, #0
 8023e40:	f340 81eb 	ble.w	802421a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023e44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023e48:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023e4c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023e50:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023e52:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023e56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023e5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023e5e:	eef0 6a62 	vmov.f32	s13, s5
 8023e62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023e66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023e6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023e6e:	ee16 4a90 	vmov	r4, s13
 8023e72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023e76:	eef0 6a43 	vmov.f32	s13, s6
 8023e7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023e7e:	ee12 2a90 	vmov	r2, s5
 8023e82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023e86:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e8a:	ee13 2a10 	vmov	r2, s6
 8023e8e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8023e90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023e92:	fb92 f3f3 	sdiv	r3, r2, r3
 8023e96:	9328      	str	r3, [sp, #160]	@ 0xa0
 8023e98:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023e9a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8023e9c:	3b01      	subs	r3, #1
 8023e9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ea2:	9316      	str	r3, [sp, #88]	@ 0x58
 8023ea4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023ea6:	bf08      	it	eq
 8023ea8:	4613      	moveq	r3, r2
 8023eaa:	ee16 6a90 	vmov	r6, s13
 8023eae:	9307      	str	r3, [sp, #28]
 8023eb0:	eeb0 3a67 	vmov.f32	s6, s15
 8023eb4:	eef0 2a47 	vmov.f32	s5, s14
 8023eb8:	e622      	b.n	8023b00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8023eba:	2800      	cmp	r0, #0
 8023ebc:	f43f ae92 	beq.w	8023be4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023ec0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023ec4:	9308      	str	r3, [sp, #32]
 8023ec6:	0e1b      	lsrs	r3, r3, #24
 8023ec8:	9310      	str	r3, [sp, #64]	@ 0x40
 8023eca:	e68b      	b.n	8023be4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023ecc:	8839      	ldrh	r1, [r7, #0]
 8023ece:	4dd4      	ldr	r5, [pc, #848]	@ (8024220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8023ed0:	43db      	mvns	r3, r3
 8023ed2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8023ed6:	fa5f f883 	uxtb.w	r8, r3
 8023eda:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8023ede:	fb0e fe08 	mul.w	lr, lr, r8
 8023ee2:	10c8      	asrs	r0, r1, #3
 8023ee4:	00cb      	lsls	r3, r1, #3
 8023ee6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023eea:	f10e 0101 	add.w	r1, lr, #1
 8023eee:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023ef2:	fb00 f008 	mul.w	r0, r0, r8
 8023ef6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023efa:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8023efe:	f100 0e01 	add.w	lr, r0, #1
 8023f02:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023f06:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023f0a:	b2db      	uxtb	r3, r3
 8023f0c:	b2c9      	uxtb	r1, r1
 8023f0e:	00d2      	lsls	r2, r2, #3
 8023f10:	fb03 f308 	mul.w	r3, r3, r8
 8023f14:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023f18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023f1c:	430a      	orrs	r2, r1
 8023f1e:	1c59      	adds	r1, r3, #1
 8023f20:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023f24:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023f28:	e748      	b.n	8023dbc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023f2a:	f112 0801 	adds.w	r8, r2, #1
 8023f2e:	f53f af4b 	bmi.w	8023dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f32:	4543      	cmp	r3, r8
 8023f34:	f6ff af48 	blt.w	8023dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f38:	f11c 0801 	adds.w	r8, ip, #1
 8023f3c:	f53f af44 	bmi.w	8023dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f40:	45c6      	cmp	lr, r8
 8023f42:	f6ff af41 	blt.w	8023dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f46:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023f4a:	fa0f f28e 	sxth.w	r2, lr
 8023f4e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023f52:	9200      	str	r2, [sp, #0]
 8023f54:	b21b      	sxth	r3, r3
 8023f56:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8023f58:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8023f5a:	4639      	mov	r1, r7
 8023f5c:	f7ff fc87 	bl	802386e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8023f60:	e732      	b.n	8023dc8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023f62:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023f64:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023f66:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023f6a:	1421      	asrs	r1, r4, #16
 8023f6c:	1433      	asrs	r3, r6, #16
 8023f6e:	fb07 1303 	mla	r3, r7, r3, r1
 8023f72:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8023f74:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023f78:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023f7c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023f80:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023f84:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023f88:	2a00      	cmp	r2, #0
 8023f8a:	f000 8107 	beq.w	802419c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 8023f8e:	684d      	ldr	r5, [r1, #4]
 8023f90:	950d      	str	r5, [sp, #52]	@ 0x34
 8023f92:	0e2d      	lsrs	r5, r5, #24
 8023f94:	9514      	str	r5, [sp, #80]	@ 0x50
 8023f96:	b178      	cbz	r0, 8023fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023f98:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8023f9c:	3f01      	subs	r7, #1
 8023f9e:	00bf      	lsls	r7, r7, #2
 8023fa0:	3704      	adds	r7, #4
 8023fa2:	eb01 0e07 	add.w	lr, r1, r7
 8023fa6:	59c9      	ldr	r1, [r1, r7]
 8023fa8:	9109      	str	r1, [sp, #36]	@ 0x24
 8023faa:	0e09      	lsrs	r1, r1, #24
 8023fac:	9111      	str	r1, [sp, #68]	@ 0x44
 8023fae:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023fb2:	910e      	str	r1, [sp, #56]	@ 0x38
 8023fb4:	0e09      	lsrs	r1, r1, #24
 8023fb6:	9115      	str	r1, [sp, #84]	@ 0x54
 8023fb8:	b292      	uxth	r2, r2
 8023fba:	b280      	uxth	r0, r0
 8023fbc:	fb02 f900 	mul.w	r9, r2, r0
 8023fc0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023fc4:	0112      	lsls	r2, r2, #4
 8023fc6:	eba2 0e09 	sub.w	lr, r2, r9
 8023fca:	b280      	uxth	r0, r0
 8023fcc:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8023fd0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8023fd2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023fd4:	fa1f fe8e 	uxth.w	lr, lr
 8023fd8:	1a09      	subs	r1, r1, r0
 8023fda:	b289      	uxth	r1, r1
 8023fdc:	fb0e f202 	mul.w	r2, lr, r2
 8023fe0:	fb01 220c 	mla	r2, r1, ip, r2
 8023fe4:	fb00 2205 	mla	r2, r0, r5, r2
 8023fe8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023fea:	fb09 2205 	mla	r2, r9, r5, r2
 8023fee:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023ff2:	2a00      	cmp	r2, #0
 8023ff4:	f000 80c9 	beq.w	802418a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8023ff8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8023ffc:	d019      	beq.n	8024032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8023ffe:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8024002:	fb0c fa0a 	mul.w	sl, ip, sl
 8024006:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802400a:	fb0c fc03 	mul.w	ip, ip, r3
 802400e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8024012:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8024016:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802401a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802401e:	4453      	add	r3, sl
 8024020:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024024:	0a1b      	lsrs	r3, r3, #8
 8024026:	0a3f      	lsrs	r7, r7, #8
 8024028:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802402c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8024030:	433b      	orrs	r3, r7
 8024032:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024034:	2dff      	cmp	r5, #255	@ 0xff
 8024036:	d020      	beq.n	802407a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024038:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802403a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802403e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024040:	436f      	muls	r7, r5
 8024042:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024044:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024048:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802404a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802404e:	fb05 fa0a 	mul.w	sl, r5, sl
 8024052:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024056:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802405a:	44bc      	add	ip, r7
 802405c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024060:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024064:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024068:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802406c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024070:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024074:	ea4c 050a 	orr.w	r5, ip, sl
 8024078:	950d      	str	r5, [sp, #52]	@ 0x34
 802407a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802407c:	2dff      	cmp	r5, #255	@ 0xff
 802407e:	d020      	beq.n	80240c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024080:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024082:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024086:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024088:	436f      	muls	r7, r5
 802408a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802408c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024090:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024092:	fb05 fa0c 	mul.w	sl, r5, ip
 8024096:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802409a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802409e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80240a2:	44bc      	add	ip, r7
 80240a4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80240a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80240ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80240b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80240b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80240bc:	ea4c 050a 	orr.w	r5, ip, sl
 80240c0:	9509      	str	r5, [sp, #36]	@ 0x24
 80240c2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80240c4:	2dff      	cmp	r5, #255	@ 0xff
 80240c6:	d020      	beq.n	802410a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80240c8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80240ca:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80240ce:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80240d0:	436f      	muls	r7, r5
 80240d2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80240d4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80240d8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80240da:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80240de:	fb05 fa0a 	mul.w	sl, r5, sl
 80240e2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80240e6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80240ea:	44bc      	add	ip, r7
 80240ec:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80240f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80240f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80240f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80240fc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024100:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024104:	ea4c 050a 	orr.w	r5, ip, sl
 8024108:	950e      	str	r5, [sp, #56]	@ 0x38
 802410a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802410c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024110:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024112:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8024116:	fb0e f707 	mul.w	r7, lr, r7
 802411a:	fb01 770c 	mla	r7, r1, ip, r7
 802411e:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024122:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024124:	fb00 770c 	mla	r7, r0, ip, r7
 8024128:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802412c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802412e:	fb09 770c 	mla	r7, r9, ip, r7
 8024132:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024136:	fb0e fe0c 	mul.w	lr, lr, ip
 802413a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802413e:	fb01 e303 	mla	r3, r1, r3, lr
 8024142:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024144:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8024148:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802414a:	fb00 330a 	mla	r3, r0, sl, r3
 802414e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8024152:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024156:	0a3f      	lsrs	r7, r7, #8
 8024158:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802415c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8024160:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024164:	ea47 070c 	orr.w	r7, r7, ip
 8024168:	2aff      	cmp	r2, #255	@ 0xff
 802416a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802416e:	d11e      	bne.n	80241ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024170:	097a      	lsrs	r2, r7, #5
 8024172:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8024176:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802417a:	f023 0307 	bic.w	r3, r3, #7
 802417e:	4313      	orrs	r3, r2
 8024180:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024184:	431f      	orrs	r7, r3
 8024186:	f8a8 7000 	strh.w	r7, [r8]
 802418a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802418c:	441c      	add	r4, r3
 802418e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024190:	f108 0802 	add.w	r8, r8, #2
 8024194:	441e      	add	r6, r3
 8024196:	f10b 3bff 	add.w	fp, fp, #4294967295
 802419a:	e644      	b.n	8023e26 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802419c:	2800      	cmp	r0, #0
 802419e:	f43f af0b 	beq.w	8023fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80241a2:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80241a6:	9109      	str	r1, [sp, #36]	@ 0x24
 80241a8:	0e09      	lsrs	r1, r1, #24
 80241aa:	9111      	str	r1, [sp, #68]	@ 0x44
 80241ac:	e704      	b.n	8023fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80241ae:	f8b8 1000 	ldrh.w	r1, [r8]
 80241b2:	43d2      	mvns	r2, r2
 80241b4:	ea4f 2c21 	mov.w	ip, r1, asr #8
 80241b8:	fa5f fe82 	uxtb.w	lr, r2
 80241bc:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80241c0:	fb0c fc0e 	mul.w	ip, ip, lr
 80241c4:	10c8      	asrs	r0, r1, #3
 80241c6:	00ca      	lsls	r2, r1, #3
 80241c8:	f10c 0101 	add.w	r1, ip, #1
 80241cc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80241d0:	0c39      	lsrs	r1, r7, #16
 80241d2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80241d6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80241da:	4911      	ldr	r1, [pc, #68]	@ (8024220 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80241dc:	fb00 f00e 	mul.w	r0, r0, lr
 80241e0:	fa5f fc8c 	uxtb.w	ip, ip
 80241e4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80241e8:	b2d2      	uxtb	r2, r2
 80241ea:	1c41      	adds	r1, r0, #1
 80241ec:	fb02 f20e 	mul.w	r2, r2, lr
 80241f0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80241f4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80241f8:	1c51      	adds	r1, r2, #1
 80241fa:	00c0      	lsls	r0, r0, #3
 80241fc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024200:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024204:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024208:	ea4c 0c00 	orr.w	ip, ip, r0
 802420c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024210:	ea47 0c0c 	orr.w	ip, r7, ip
 8024214:	f8a8 c000 	strh.w	ip, [r8]
 8024218:	e7b7      	b.n	802418a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802421a:	b01b      	add	sp, #108	@ 0x6c
 802421c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024220:	fffff800 	.word	0xfffff800

08024224 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024224:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024228:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802422c:	2d00      	cmp	r5, #0
 802422e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024232:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8024236:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802423a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802423e:	fb05 0e03 	mla	lr, r5, r3, r0
 8024242:	f2c0 808c 	blt.w	802435e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024246:	45a9      	cmp	r9, r5
 8024248:	f340 8089 	ble.w	802435e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802424c:	2800      	cmp	r0, #0
 802424e:	f2c0 8084 	blt.w	802435a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024252:	4580      	cmp	r8, r0
 8024254:	f340 8081 	ble.w	802435a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024258:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802425c:	f01e 0f01 	tst.w	lr, #1
 8024260:	5d16      	ldrb	r6, [r2, r4]
 8024262:	bf0c      	ite	eq
 8024264:	f006 060f 	andeq.w	r6, r6, #15
 8024268:	1136      	asrne	r6, r6, #4
 802426a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802426e:	b2f6      	uxtb	r6, r6
 8024270:	1c44      	adds	r4, r0, #1
 8024272:	d477      	bmi.n	8024364 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024274:	45a0      	cmp	r8, r4
 8024276:	dd75      	ble.n	8024364 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024278:	2f00      	cmp	r7, #0
 802427a:	d075      	beq.n	8024368 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802427c:	f10e 0a01 	add.w	sl, lr, #1
 8024280:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024284:	f01a 0f01 	tst.w	sl, #1
 8024288:	5d14      	ldrb	r4, [r2, r4]
 802428a:	bf0c      	ite	eq
 802428c:	f004 040f 	andeq.w	r4, r4, #15
 8024290:	1124      	asrne	r4, r4, #4
 8024292:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024296:	b2e4      	uxtb	r4, r4
 8024298:	3501      	adds	r5, #1
 802429a:	d469      	bmi.n	8024370 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802429c:	45a9      	cmp	r9, r5
 802429e:	dd67      	ble.n	8024370 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80242a0:	f1bc 0f00 	cmp.w	ip, #0
 80242a4:	d067      	beq.n	8024376 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80242a6:	2800      	cmp	r0, #0
 80242a8:	db60      	blt.n	802436c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80242aa:	4580      	cmp	r8, r0
 80242ac:	dd5e      	ble.n	802436c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80242ae:	eb03 090e 	add.w	r9, r3, lr
 80242b2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80242b6:	f019 0f01 	tst.w	r9, #1
 80242ba:	5d55      	ldrb	r5, [r2, r5]
 80242bc:	bf0c      	ite	eq
 80242be:	f005 050f 	andeq.w	r5, r5, #15
 80242c2:	112d      	asrne	r5, r5, #4
 80242c4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80242c8:	b2ed      	uxtb	r5, r5
 80242ca:	3001      	adds	r0, #1
 80242cc:	d456      	bmi.n	802437c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80242ce:	4580      	cmp	r8, r0
 80242d0:	dd54      	ble.n	802437c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80242d2:	2f00      	cmp	r7, #0
 80242d4:	d054      	beq.n	8024380 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80242d6:	3301      	adds	r3, #1
 80242d8:	449e      	add	lr, r3
 80242da:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80242de:	f01e 0f01 	tst.w	lr, #1
 80242e2:	5cd0      	ldrb	r0, [r2, r3]
 80242e4:	bf0c      	ite	eq
 80242e6:	f000 000f 	andeq.w	r0, r0, #15
 80242ea:	1100      	asrne	r0, r0, #4
 80242ec:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80242f0:	b2c3      	uxtb	r3, r0
 80242f2:	b2ba      	uxth	r2, r7
 80242f4:	fa1f fc8c 	uxth.w	ip, ip
 80242f8:	fb02 f00c 	mul.w	r0, r2, ip
 80242fc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024300:	0112      	lsls	r2, r2, #4
 8024302:	fa1f fc8c 	uxth.w	ip, ip
 8024306:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802430a:	1a12      	subs	r2, r2, r0
 802430c:	eba7 070c 	sub.w	r7, r7, ip
 8024310:	b292      	uxth	r2, r2
 8024312:	b2bf      	uxth	r7, r7
 8024314:	4362      	muls	r2, r4
 8024316:	fb06 2207 	mla	r2, r6, r7, r2
 802431a:	fb0c 2505 	mla	r5, ip, r5, r2
 802431e:	fb00 5303 	mla	r3, r0, r3, r5
 8024322:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024326:	b1b3      	cbz	r3, 8024356 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024328:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802432c:	435a      	muls	r2, r3
 802432e:	1c53      	adds	r3, r2, #1
 8024330:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024334:	4a2d      	ldr	r2, [pc, #180]	@ (80243ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024336:	121b      	asrs	r3, r3, #8
 8024338:	6812      	ldr	r2, [r2, #0]
 802433a:	2bff      	cmp	r3, #255	@ 0xff
 802433c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024340:	d120      	bne.n	8024384 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024342:	4b2b      	ldr	r3, [pc, #172]	@ (80243f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024344:	0950      	lsrs	r0, r2, #5
 8024346:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802434a:	4033      	ands	r3, r6
 802434c:	4318      	orrs	r0, r3
 802434e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024352:	4302      	orrs	r2, r0
 8024354:	800a      	strh	r2, [r1, #0]
 8024356:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802435a:	2600      	movs	r6, #0
 802435c:	e788      	b.n	8024270 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802435e:	2400      	movs	r4, #0
 8024360:	4626      	mov	r6, r4
 8024362:	e799      	b.n	8024298 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024364:	2400      	movs	r4, #0
 8024366:	e797      	b.n	8024298 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024368:	463c      	mov	r4, r7
 802436a:	e795      	b.n	8024298 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802436c:	2500      	movs	r5, #0
 802436e:	e7ac      	b.n	80242ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024370:	2300      	movs	r3, #0
 8024372:	461d      	mov	r5, r3
 8024374:	e7bd      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024376:	4663      	mov	r3, ip
 8024378:	4665      	mov	r5, ip
 802437a:	e7ba      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802437c:	2300      	movs	r3, #0
 802437e:	e7b8      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024380:	463b      	mov	r3, r7
 8024382:	e7b6      	b.n	80242f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024384:	880d      	ldrh	r5, [r1, #0]
 8024386:	b29f      	uxth	r7, r3
 8024388:	122c      	asrs	r4, r5, #8
 802438a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802438e:	43db      	mvns	r3, r3
 8024390:	b2db      	uxtb	r3, r3
 8024392:	fb10 f007 	smulbb	r0, r0, r7
 8024396:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802439a:	fb04 0403 	mla	r4, r4, r3, r0
 802439e:	b2f6      	uxtb	r6, r6
 80243a0:	10e8      	asrs	r0, r5, #3
 80243a2:	b2d2      	uxtb	r2, r2
 80243a4:	00ed      	lsls	r5, r5, #3
 80243a6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80243aa:	fb12 f207 	smulbb	r2, r2, r7
 80243ae:	fb16 f607 	smulbb	r6, r6, r7
 80243b2:	b2ed      	uxtb	r5, r5
 80243b4:	b2a4      	uxth	r4, r4
 80243b6:	fb00 6603 	mla	r6, r0, r3, r6
 80243ba:	fb05 2303 	mla	r3, r5, r3, r2
 80243be:	b29a      	uxth	r2, r3
 80243c0:	1c63      	adds	r3, r4, #1
 80243c2:	b2b0      	uxth	r0, r6
 80243c4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80243c8:	1c53      	adds	r3, r2, #1
 80243ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80243ce:	1c42      	adds	r2, r0, #1
 80243d0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80243d4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80243d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80243dc:	0940      	lsrs	r0, r0, #5
 80243de:	4323      	orrs	r3, r4
 80243e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80243e4:	4303      	orrs	r3, r0
 80243e6:	800b      	strh	r3, [r1, #0]
 80243e8:	e7b5      	b.n	8024356 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80243ea:	bf00      	nop
 80243ec:	20002f5c 	.word	0x20002f5c
 80243f0:	00fff800 	.word	0x00fff800

080243f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80243f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80243f8:	b097      	sub	sp, #92	@ 0x5c
 80243fa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 80243fe:	9214      	str	r2, [sp, #80]	@ 0x50
 8024400:	9309      	str	r3, [sp, #36]	@ 0x24
 8024402:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024404:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8024408:	910d      	str	r1, [sp, #52]	@ 0x34
 802440a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802440c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8024410:	9015      	str	r0, [sp, #84]	@ 0x54
 8024412:	6850      	ldr	r0, [r2, #4]
 8024414:	6812      	ldr	r2, [r2, #0]
 8024416:	fb00 1303 	mla	r3, r0, r3, r1
 802441a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802441e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024420:	689b      	ldr	r3, [r3, #8]
 8024422:	3301      	adds	r3, #1
 8024424:	f023 0301 	bic.w	r3, r3, #1
 8024428:	930a      	str	r3, [sp, #40]	@ 0x28
 802442a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802442c:	681f      	ldr	r7, [r3, #0]
 802442e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024430:	2b00      	cmp	r3, #0
 8024432:	dc03      	bgt.n	802443c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024434:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8024436:	2b00      	cmp	r3, #0
 8024438:	f340 8287 	ble.w	802494a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802443c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802443e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024442:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024446:	1e48      	subs	r0, r1, #1
 8024448:	f102 3cff 	add.w	ip, r2, #4294967295
 802444c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802444e:	2b00      	cmp	r3, #0
 8024450:	f340 80c4 	ble.w	80245dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024454:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024458:	ea4f 4326 	mov.w	r3, r6, asr #16
 802445c:	d406      	bmi.n	802446c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802445e:	4586      	cmp	lr, r0
 8024460:	da04      	bge.n	802446c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024462:	2b00      	cmp	r3, #0
 8024464:	db02      	blt.n	802446c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024466:	4563      	cmp	r3, ip
 8024468:	f2c0 80b9 	blt.w	80245de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802446c:	f11e 0e01 	adds.w	lr, lr, #1
 8024470:	f100 80aa 	bmi.w	80245c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024474:	4571      	cmp	r1, lr
 8024476:	f2c0 80a7 	blt.w	80245c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802447a:	3301      	adds	r3, #1
 802447c:	f100 80a4 	bmi.w	80245c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024480:	429a      	cmp	r2, r3
 8024482:	f2c0 80a1 	blt.w	80245c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024486:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024488:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802448c:	930e      	str	r3, [sp, #56]	@ 0x38
 802448e:	46c8      	mov	r8, r9
 8024490:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024492:	2b00      	cmp	r3, #0
 8024494:	f340 80c3 	ble.w	802461e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024498:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802449a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802449e:	1423      	asrs	r3, r4, #16
 80244a0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80244a4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80244a8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80244ac:	f100 814d 	bmi.w	802474a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80244b0:	f10c 3bff 	add.w	fp, ip, #4294967295
 80244b4:	455b      	cmp	r3, fp
 80244b6:	f280 8148 	bge.w	802474a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80244ba:	2800      	cmp	r0, #0
 80244bc:	f2c0 8145 	blt.w	802474a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80244c0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80244c4:	4558      	cmp	r0, fp
 80244c6:	f280 8140 	bge.w	802474a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80244ca:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80244cc:	fb00 3305 	mla	r3, r0, r5, r3
 80244d0:	0858      	lsrs	r0, r3, #1
 80244d2:	07dd      	lsls	r5, r3, #31
 80244d4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80244d8:	bf54      	ite	pl
 80244da:	f00c 0c0f 	andpl.w	ip, ip, #15
 80244de:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80244e2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80244e6:	fa5f fc8c 	uxtb.w	ip, ip
 80244ea:	2a00      	cmp	r2, #0
 80244ec:	f000 80db 	beq.w	80246a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80244f0:	1c58      	adds	r0, r3, #1
 80244f2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80244f6:	07c0      	lsls	r0, r0, #31
 80244f8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80244fc:	bf54      	ite	pl
 80244fe:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024502:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024506:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802450a:	fa5f f08e 	uxtb.w	r0, lr
 802450e:	9010      	str	r0, [sp, #64]	@ 0x40
 8024510:	b1c9      	cbz	r1, 8024546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024512:	4453      	add	r3, sl
 8024514:	0858      	lsrs	r0, r3, #1
 8024516:	07dd      	lsls	r5, r3, #31
 8024518:	5c38      	ldrb	r0, [r7, r0]
 802451a:	bf54      	ite	pl
 802451c:	f000 000f 	andpl.w	r0, r0, #15
 8024520:	1100      	asrmi	r0, r0, #4
 8024522:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024526:	3301      	adds	r3, #1
 8024528:	b2c0      	uxtb	r0, r0
 802452a:	900b      	str	r0, [sp, #44]	@ 0x2c
 802452c:	0858      	lsrs	r0, r3, #1
 802452e:	07dd      	lsls	r5, r3, #31
 8024530:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024534:	bf54      	ite	pl
 8024536:	f00e 030f 	andpl.w	r3, lr, #15
 802453a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802453e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024542:	b2db      	uxtb	r3, r3
 8024544:	9311      	str	r3, [sp, #68]	@ 0x44
 8024546:	b292      	uxth	r2, r2
 8024548:	b289      	uxth	r1, r1
 802454a:	fb02 f301 	mul.w	r3, r2, r1
 802454e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024552:	0112      	lsls	r2, r2, #4
 8024554:	b289      	uxth	r1, r1
 8024556:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802455a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802455c:	1ad2      	subs	r2, r2, r3
 802455e:	1a40      	subs	r0, r0, r1
 8024560:	b292      	uxth	r2, r2
 8024562:	436a      	muls	r2, r5
 8024564:	b280      	uxth	r0, r0
 8024566:	fb0c 2c00 	mla	ip, ip, r0, r2
 802456a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802456c:	fb01 c102 	mla	r1, r1, r2, ip
 8024570:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024572:	fb03 1302 	mla	r3, r3, r2, r1
 8024576:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802457a:	b1db      	cbz	r3, 80245b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802457c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802457e:	4353      	muls	r3, r2
 8024580:	1c5a      	adds	r2, r3, #1
 8024582:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024586:	4ac6      	ldr	r2, [pc, #792]	@ (80248a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024588:	121b      	asrs	r3, r3, #8
 802458a:	6812      	ldr	r2, [r2, #0]
 802458c:	2bff      	cmp	r3, #255	@ 0xff
 802458e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024592:	f040 8099 	bne.w	80246c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024596:	0953      	lsrs	r3, r2, #5
 8024598:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802459c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80245a0:	f02c 0c07 	bic.w	ip, ip, #7
 80245a4:	ea43 0c0c 	orr.w	ip, r3, ip
 80245a8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80245ac:	ea4c 0202 	orr.w	r2, ip, r2
 80245b0:	f8a8 2000 	strh.w	r2, [r8]
 80245b4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80245b6:	441c      	add	r4, r3
 80245b8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80245ba:	441e      	add	r6, r3
 80245bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80245be:	3b01      	subs	r3, #1
 80245c0:	f108 0802 	add.w	r8, r8, #2
 80245c4:	930e      	str	r3, [sp, #56]	@ 0x38
 80245c6:	e763      	b.n	8024490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80245c8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80245ca:	441c      	add	r4, r3
 80245cc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80245ce:	441e      	add	r6, r3
 80245d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80245d2:	3b01      	subs	r3, #1
 80245d4:	9309      	str	r3, [sp, #36]	@ 0x24
 80245d6:	f109 0902 	add.w	r9, r9, #2
 80245da:	e737      	b.n	802444c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80245dc:	d024      	beq.n	8024628 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80245de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80245e0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80245e2:	3b01      	subs	r3, #1
 80245e4:	fb00 4003 	mla	r0, r0, r3, r4
 80245e8:	1400      	asrs	r0, r0, #16
 80245ea:	f53f af4c 	bmi.w	8024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80245ee:	3901      	subs	r1, #1
 80245f0:	4288      	cmp	r0, r1
 80245f2:	f6bf af48 	bge.w	8024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80245f6:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80245f8:	fb01 6303 	mla	r3, r1, r3, r6
 80245fc:	141b      	asrs	r3, r3, #16
 80245fe:	f53f af42 	bmi.w	8024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024602:	3a01      	subs	r2, #1
 8024604:	4293      	cmp	r3, r2
 8024606:	f6bf af3e 	bge.w	8024486 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802460a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 802460e:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8024612:	930e      	str	r3, [sp, #56]	@ 0x38
 8024614:	46c8      	mov	r8, r9
 8024616:	f1bb 0f00 	cmp.w	fp, #0
 802461a:	f300 80b7 	bgt.w	802478c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802461e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024620:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024624:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024628:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802462a:	2b00      	cmp	r3, #0
 802462c:	f340 818d 	ble.w	802494a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024630:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024634:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024638:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802463c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802463e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024642:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024646:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802464a:	eef0 6a62 	vmov.f32	s13, s5
 802464e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024652:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024656:	ee77 2a62 	vsub.f32	s5, s14, s5
 802465a:	ee16 4a90 	vmov	r4, s13
 802465e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024662:	eef0 6a43 	vmov.f32	s13, s6
 8024666:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802466a:	ee12 2a90 	vmov	r2, s5
 802466e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024672:	fb92 f3f3 	sdiv	r3, r2, r3
 8024676:	ee13 2a10 	vmov	r2, s6
 802467a:	9323      	str	r3, [sp, #140]	@ 0x8c
 802467c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802467e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024682:	9324      	str	r3, [sp, #144]	@ 0x90
 8024684:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024686:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024688:	3b01      	subs	r3, #1
 802468a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802468e:	930d      	str	r3, [sp, #52]	@ 0x34
 8024690:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024692:	bf08      	it	eq
 8024694:	4613      	moveq	r3, r2
 8024696:	ee16 6a90 	vmov	r6, s13
 802469a:	9309      	str	r3, [sp, #36]	@ 0x24
 802469c:	eeb0 3a67 	vmov.f32	s6, s15
 80246a0:	eef0 2a47 	vmov.f32	s5, s14
 80246a4:	e6c3      	b.n	802442e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80246a6:	2900      	cmp	r1, #0
 80246a8:	f43f af4d 	beq.w	8024546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80246ac:	eb0a 0003 	add.w	r0, sl, r3
 80246b0:	0843      	lsrs	r3, r0, #1
 80246b2:	07c0      	lsls	r0, r0, #31
 80246b4:	5cfb      	ldrb	r3, [r7, r3]
 80246b6:	bf54      	ite	pl
 80246b8:	f003 030f 	andpl.w	r3, r3, #15
 80246bc:	111b      	asrmi	r3, r3, #4
 80246be:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80246c2:	b2db      	uxtb	r3, r3
 80246c4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80246c6:	e73e      	b.n	8024546 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80246c8:	f8b8 e000 	ldrh.w	lr, [r8]
 80246cc:	fa1f fb83 	uxth.w	fp, r3
 80246d0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80246d4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80246d8:	43db      	mvns	r3, r3
 80246da:	b2db      	uxtb	r3, r3
 80246dc:	fb11 f10b 	smulbb	r1, r1, fp
 80246e0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80246e4:	fb00 1003 	mla	r0, r0, r3, r1
 80246e8:	fa5f fc8c 	uxtb.w	ip, ip
 80246ec:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80246f0:	b2d2      	uxtb	r2, r2
 80246f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80246f6:	b280      	uxth	r0, r0
 80246f8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80246fc:	fb1c fc0b 	smulbb	ip, ip, fp
 8024700:	fa5f fe8e 	uxtb.w	lr, lr
 8024704:	fb12 fb0b 	smulbb	fp, r2, fp
 8024708:	fb01 cc03 	mla	ip, r1, r3, ip
 802470c:	fb0e bb03 	mla	fp, lr, r3, fp
 8024710:	1c43      	adds	r3, r0, #1
 8024712:	fa1f fc8c 	uxth.w	ip, ip
 8024716:	fa1f fb8b 	uxth.w	fp, fp
 802471a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802471e:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8024722:	f10c 0101 	add.w	r1, ip, #1
 8024726:	f10b 0001 	add.w	r0, fp, #1
 802472a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802472e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024732:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024736:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802473a:	4318      	orrs	r0, r3
 802473c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8024740:	ea40 000c 	orr.w	r0, r0, ip
 8024744:	f8a8 0000 	strh.w	r0, [r8]
 8024748:	e734      	b.n	80245b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802474a:	f113 0b01 	adds.w	fp, r3, #1
 802474e:	f53f af31 	bmi.w	80245b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024752:	45dc      	cmp	ip, fp
 8024754:	f6ff af2e 	blt.w	80245b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024758:	f110 0b01 	adds.w	fp, r0, #1
 802475c:	f53f af2a 	bmi.w	80245b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024760:	45de      	cmp	lr, fp
 8024762:	f6ff af27 	blt.w	80245b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024766:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024768:	9302      	str	r3, [sp, #8]
 802476a:	fa0f f38e 	sxth.w	r3, lr
 802476e:	9301      	str	r3, [sp, #4]
 8024770:	fa0f f38c 	sxth.w	r3, ip
 8024774:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024778:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802477c:	9300      	str	r3, [sp, #0]
 802477e:	463a      	mov	r2, r7
 8024780:	4653      	mov	r3, sl
 8024782:	4641      	mov	r1, r8
 8024784:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8024786:	f7ff fd4d 	bl	8024224 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802478a:	e713      	b.n	80245b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802478c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802478e:	1422      	asrs	r2, r4, #16
 8024790:	1433      	asrs	r3, r6, #16
 8024792:	fb05 2303 	mla	r3, r5, r3, r2
 8024796:	085a      	lsrs	r2, r3, #1
 8024798:	07dd      	lsls	r5, r3, #31
 802479a:	5cba      	ldrb	r2, [r7, r2]
 802479c:	bf54      	ite	pl
 802479e:	f002 020f 	andpl.w	r2, r2, #15
 80247a2:	1112      	asrmi	r2, r2, #4
 80247a4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80247a8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80247ac:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80247b0:	b2d2      	uxtb	r2, r2
 80247b2:	2900      	cmp	r1, #0
 80247b4:	d076      	beq.n	80248a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80247b6:	f103 0e01 	add.w	lr, r3, #1
 80247ba:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 80247be:	f01e 0f01 	tst.w	lr, #1
 80247c2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80247c6:	bf0c      	ite	eq
 80247c8:	f00c 0c0f 	andeq.w	ip, ip, #15
 80247cc:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80247d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80247d4:	fa5f f58c 	uxtb.w	r5, ip
 80247d8:	9512      	str	r5, [sp, #72]	@ 0x48
 80247da:	b300      	cbz	r0, 802481e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80247dc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80247de:	442b      	add	r3, r5
 80247e0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80247e4:	07dd      	lsls	r5, r3, #31
 80247e6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80247ea:	bf54      	ite	pl
 80247ec:	f00c 0c0f 	andpl.w	ip, ip, #15
 80247f0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80247f4:	3301      	adds	r3, #1
 80247f6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80247fa:	fa5f f58c 	uxtb.w	r5, ip
 80247fe:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024802:	950c      	str	r5, [sp, #48]	@ 0x30
 8024804:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024808:	07dd      	lsls	r5, r3, #31
 802480a:	bf54      	ite	pl
 802480c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024810:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024814:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024818:	fa5f f38c 	uxtb.w	r3, ip
 802481c:	9313      	str	r3, [sp, #76]	@ 0x4c
 802481e:	b289      	uxth	r1, r1
 8024820:	b280      	uxth	r0, r0
 8024822:	fb01 f300 	mul.w	r3, r1, r0
 8024826:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802482a:	0109      	lsls	r1, r1, #4
 802482c:	b280      	uxth	r0, r0
 802482e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8024832:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024834:	1ac9      	subs	r1, r1, r3
 8024836:	ebac 0c00 	sub.w	ip, ip, r0
 802483a:	b289      	uxth	r1, r1
 802483c:	4369      	muls	r1, r5
 802483e:	fa1f fc8c 	uxth.w	ip, ip
 8024842:	fb02 120c 	mla	r2, r2, ip, r1
 8024846:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8024848:	fb00 2001 	mla	r0, r0, r1, r2
 802484c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 802484e:	fb03 0302 	mla	r3, r3, r2, r0
 8024852:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024856:	b1d3      	cbz	r3, 802488e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024858:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802485a:	4353      	muls	r3, r2
 802485c:	1c5a      	adds	r2, r3, #1
 802485e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024862:	4a0f      	ldr	r2, [pc, #60]	@ (80248a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024864:	121b      	asrs	r3, r3, #8
 8024866:	6812      	ldr	r2, [r2, #0]
 8024868:	2bff      	cmp	r3, #255	@ 0xff
 802486a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802486e:	d12d      	bne.n	80248cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024870:	0953      	lsrs	r3, r2, #5
 8024872:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8024876:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802487a:	f02c 0c07 	bic.w	ip, ip, #7
 802487e:	ea43 0c0c 	orr.w	ip, r3, ip
 8024882:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024886:	ea4c 0202 	orr.w	r2, ip, r2
 802488a:	f8a8 2000 	strh.w	r2, [r8]
 802488e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024890:	441c      	add	r4, r3
 8024892:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024894:	f108 0802 	add.w	r8, r8, #2
 8024898:	441e      	add	r6, r3
 802489a:	f10b 3bff 	add.w	fp, fp, #4294967295
 802489e:	e6ba      	b.n	8024616 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80248a0:	20002f5c 	.word	0x20002f5c
 80248a4:	2800      	cmp	r0, #0
 80248a6:	d0ba      	beq.n	802481e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80248a8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80248aa:	442b      	add	r3, r5
 80248ac:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80248b0:	07db      	lsls	r3, r3, #31
 80248b2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80248b6:	bf54      	ite	pl
 80248b8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80248bc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80248c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80248c4:	fa5f f38c 	uxtb.w	r3, ip
 80248c8:	930c      	str	r3, [sp, #48]	@ 0x30
 80248ca:	e7a8      	b.n	802481e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80248cc:	f8b8 e000 	ldrh.w	lr, [r8]
 80248d0:	fa1f fa83 	uxth.w	sl, r3
 80248d4:	ea4f 202e 	mov.w	r0, lr, asr #8
 80248d8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80248dc:	43db      	mvns	r3, r3
 80248de:	b2db      	uxtb	r3, r3
 80248e0:	fb11 f10a 	smulbb	r1, r1, sl
 80248e4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80248e8:	fb00 1003 	mla	r0, r0, r3, r1
 80248ec:	b2d2      	uxtb	r2, r2
 80248ee:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80248f2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80248f6:	fa5f fe8e 	uxtb.w	lr, lr
 80248fa:	fb12 f20a 	smulbb	r2, r2, sl
 80248fe:	fb0e 2203 	mla	r2, lr, r3, r2
 8024902:	fa5f fc8c 	uxtb.w	ip, ip
 8024906:	b280      	uxth	r0, r0
 8024908:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802490c:	b292      	uxth	r2, r2
 802490e:	fb1c fc0a 	smulbb	ip, ip, sl
 8024912:	fb01 cc03 	mla	ip, r1, r3, ip
 8024916:	1c43      	adds	r3, r0, #1
 8024918:	1c51      	adds	r1, r2, #1
 802491a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802491e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024922:	fa1f fc8c 	uxth.w	ip, ip
 8024926:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802492a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 802492e:	4308      	orrs	r0, r1
 8024930:	f10c 0101 	add.w	r1, ip, #1
 8024934:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024938:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802493c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8024940:	ea40 000c 	orr.w	r0, r0, ip
 8024944:	f8a8 0000 	strh.w	r0, [r8]
 8024948:	e7a1      	b.n	802488e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802494a:	b017      	add	sp, #92	@ 0x5c
 802494c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024950 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024950:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024954:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8024958:	2d00      	cmp	r5, #0
 802495a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802495e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8024962:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8024966:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802496a:	fb05 0e03 	mla	lr, r5, r3, r0
 802496e:	f2c0 80b0 	blt.w	8024ad2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024972:	45a9      	cmp	r9, r5
 8024974:	f340 80ad 	ble.w	8024ad2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024978:	2800      	cmp	r0, #0
 802497a:	f2c0 80a8 	blt.w	8024ace <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802497e:	4580      	cmp	r8, r0
 8024980:	f340 80a5 	ble.w	8024ace <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024984:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024988:	f01e 0f01 	tst.w	lr, #1
 802498c:	5d16      	ldrb	r6, [r2, r4]
 802498e:	bf0c      	ite	eq
 8024990:	f006 060f 	andeq.w	r6, r6, #15
 8024994:	1136      	asrne	r6, r6, #4
 8024996:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802499a:	b2f6      	uxtb	r6, r6
 802499c:	1c44      	adds	r4, r0, #1
 802499e:	f100 809b 	bmi.w	8024ad8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80249a2:	45a0      	cmp	r8, r4
 80249a4:	f340 8098 	ble.w	8024ad8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80249a8:	2f00      	cmp	r7, #0
 80249aa:	f000 8097 	beq.w	8024adc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 80249ae:	f10e 0a01 	add.w	sl, lr, #1
 80249b2:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80249b6:	f01a 0f01 	tst.w	sl, #1
 80249ba:	5d14      	ldrb	r4, [r2, r4]
 80249bc:	bf0c      	ite	eq
 80249be:	f004 040f 	andeq.w	r4, r4, #15
 80249c2:	1124      	asrne	r4, r4, #4
 80249c4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80249c8:	b2e4      	uxtb	r4, r4
 80249ca:	3501      	adds	r5, #1
 80249cc:	f100 808a 	bmi.w	8024ae4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80249d0:	45a9      	cmp	r9, r5
 80249d2:	f340 8087 	ble.w	8024ae4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 80249d6:	f1bc 0f00 	cmp.w	ip, #0
 80249da:	f000 8086 	beq.w	8024aea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 80249de:	2800      	cmp	r0, #0
 80249e0:	db7e      	blt.n	8024ae0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80249e2:	4580      	cmp	r8, r0
 80249e4:	dd7c      	ble.n	8024ae0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 80249e6:	eb03 090e 	add.w	r9, r3, lr
 80249ea:	ea4f 0559 	mov.w	r5, r9, lsr #1
 80249ee:	f019 0f01 	tst.w	r9, #1
 80249f2:	5d55      	ldrb	r5, [r2, r5]
 80249f4:	bf0c      	ite	eq
 80249f6:	f005 050f 	andeq.w	r5, r5, #15
 80249fa:	112d      	asrne	r5, r5, #4
 80249fc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024a00:	b2ed      	uxtb	r5, r5
 8024a02:	3001      	adds	r0, #1
 8024a04:	d474      	bmi.n	8024af0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024a06:	4580      	cmp	r8, r0
 8024a08:	dd72      	ble.n	8024af0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024a0a:	2f00      	cmp	r7, #0
 8024a0c:	d072      	beq.n	8024af4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024a0e:	3301      	adds	r3, #1
 8024a10:	449e      	add	lr, r3
 8024a12:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024a16:	f01e 0f01 	tst.w	lr, #1
 8024a1a:	5cd0      	ldrb	r0, [r2, r3]
 8024a1c:	bf0c      	ite	eq
 8024a1e:	f000 000f 	andeq.w	r0, r0, #15
 8024a22:	1100      	asrne	r0, r0, #4
 8024a24:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024a28:	b2c3      	uxtb	r3, r0
 8024a2a:	b2ba      	uxth	r2, r7
 8024a2c:	fa1f fc8c 	uxth.w	ip, ip
 8024a30:	fb02 f00c 	mul.w	r0, r2, ip
 8024a34:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024a38:	0112      	lsls	r2, r2, #4
 8024a3a:	fa1f fc8c 	uxth.w	ip, ip
 8024a3e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8024a42:	1a12      	subs	r2, r2, r0
 8024a44:	eba7 070c 	sub.w	r7, r7, ip
 8024a48:	b292      	uxth	r2, r2
 8024a4a:	b2bf      	uxth	r7, r7
 8024a4c:	4362      	muls	r2, r4
 8024a4e:	fb06 2207 	mla	r2, r6, r7, r2
 8024a52:	fb0c 2505 	mla	r5, ip, r5, r2
 8024a56:	fb00 5303 	mla	r3, r0, r3, r5
 8024a5a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024a5e:	b3a3      	cbz	r3, 8024aca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024a60:	4a25      	ldr	r2, [pc, #148]	@ (8024af8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024a62:	880e      	ldrh	r6, [r1, #0]
 8024a64:	6815      	ldr	r5, [r2, #0]
 8024a66:	1234      	asrs	r4, r6, #8
 8024a68:	b29a      	uxth	r2, r3
 8024a6a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024a6e:	43db      	mvns	r3, r3
 8024a70:	b2db      	uxtb	r3, r3
 8024a72:	fb10 f002 	smulbb	r0, r0, r2
 8024a76:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024a7a:	fb04 0403 	mla	r4, r4, r3, r0
 8024a7e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024a82:	10f0      	asrs	r0, r6, #3
 8024a84:	b2ed      	uxtb	r5, r5
 8024a86:	00f6      	lsls	r6, r6, #3
 8024a88:	fb17 f702 	smulbb	r7, r7, r2
 8024a8c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024a90:	fb15 f202 	smulbb	r2, r5, r2
 8024a94:	b2f6      	uxtb	r6, r6
 8024a96:	b2a4      	uxth	r4, r4
 8024a98:	fb00 7003 	mla	r0, r0, r3, r7
 8024a9c:	fb06 2303 	mla	r3, r6, r3, r2
 8024aa0:	b29a      	uxth	r2, r3
 8024aa2:	1c63      	adds	r3, r4, #1
 8024aa4:	b280      	uxth	r0, r0
 8024aa6:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024aaa:	1c53      	adds	r3, r2, #1
 8024aac:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ab0:	1c42      	adds	r2, r0, #1
 8024ab2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024ab6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024aba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024abe:	0940      	lsrs	r0, r0, #5
 8024ac0:	4323      	orrs	r3, r4
 8024ac2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024ac6:	4303      	orrs	r3, r0
 8024ac8:	800b      	strh	r3, [r1, #0]
 8024aca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024ace:	2600      	movs	r6, #0
 8024ad0:	e764      	b.n	802499c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024ad2:	2400      	movs	r4, #0
 8024ad4:	4626      	mov	r6, r4
 8024ad6:	e778      	b.n	80249ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024ad8:	2400      	movs	r4, #0
 8024ada:	e776      	b.n	80249ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024adc:	463c      	mov	r4, r7
 8024ade:	e774      	b.n	80249ca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024ae0:	2500      	movs	r5, #0
 8024ae2:	e78e      	b.n	8024a02 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024ae4:	2300      	movs	r3, #0
 8024ae6:	461d      	mov	r5, r3
 8024ae8:	e79f      	b.n	8024a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024aea:	4663      	mov	r3, ip
 8024aec:	4665      	mov	r5, ip
 8024aee:	e79c      	b.n	8024a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024af0:	2300      	movs	r3, #0
 8024af2:	e79a      	b.n	8024a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024af4:	463b      	mov	r3, r7
 8024af6:	e798      	b.n	8024a2a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024af8:	20002f5c 	.word	0x20002f5c

08024afc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b00:	b093      	sub	sp, #76	@ 0x4c
 8024b02:	461d      	mov	r5, r3
 8024b04:	920c      	str	r2, [sp, #48]	@ 0x30
 8024b06:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8024b08:	9107      	str	r1, [sp, #28]
 8024b0a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8024b0e:	9011      	str	r0, [sp, #68]	@ 0x44
 8024b10:	6850      	ldr	r0, [r2, #4]
 8024b12:	6812      	ldr	r2, [r2, #0]
 8024b14:	fb00 1303 	mla	r3, r0, r3, r1
 8024b18:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024b1c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024b1e:	689b      	ldr	r3, [r3, #8]
 8024b20:	3301      	adds	r3, #1
 8024b22:	f023 0301 	bic.w	r3, r3, #1
 8024b26:	9306      	str	r3, [sp, #24]
 8024b28:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024b2a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8024b2e:	681f      	ldr	r7, [r3, #0]
 8024b30:	9b07      	ldr	r3, [sp, #28]
 8024b32:	2b00      	cmp	r3, #0
 8024b34:	dc03      	bgt.n	8024b3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024b36:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024b38:	2b00      	cmp	r3, #0
 8024b3a:	f340 8267 	ble.w	802500c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024b3e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024b40:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024b44:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024b48:	1e48      	subs	r0, r1, #1
 8024b4a:	f102 3cff 	add.w	ip, r2, #4294967295
 8024b4e:	2d00      	cmp	r5, #0
 8024b50:	f340 80b8 	ble.w	8024cc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024b54:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024b58:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024b5c:	d406      	bmi.n	8024b6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024b5e:	4586      	cmp	lr, r0
 8024b60:	da04      	bge.n	8024b6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024b62:	2b00      	cmp	r3, #0
 8024b64:	db02      	blt.n	8024b6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024b66:	4563      	cmp	r3, ip
 8024b68:	f2c0 80ad 	blt.w	8024cc6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024b6c:	f11e 0e01 	adds.w	lr, lr, #1
 8024b70:	f100 80a0 	bmi.w	8024cb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024b74:	4571      	cmp	r1, lr
 8024b76:	f2c0 809d 	blt.w	8024cb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024b7a:	3301      	adds	r3, #1
 8024b7c:	f100 809a 	bmi.w	8024cb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024b80:	429a      	cmp	r2, r3
 8024b82:	f2c0 8097 	blt.w	8024cb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024b86:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024b8a:	9509      	str	r5, [sp, #36]	@ 0x24
 8024b8c:	46c8      	mov	r8, r9
 8024b8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024b90:	2b00      	cmp	r3, #0
 8024b92:	f340 80b6 	ble.w	8024d02 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024b96:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024b9a:	9308      	str	r3, [sp, #32]
 8024b9c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024b9e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024ba2:	1423      	asrs	r3, r4, #16
 8024ba4:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024ba8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024bac:	f100 813e 	bmi.w	8024e2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024bb0:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024bb4:	455b      	cmp	r3, fp
 8024bb6:	f280 8139 	bge.w	8024e2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024bba:	2800      	cmp	r0, #0
 8024bbc:	f2c0 8136 	blt.w	8024e2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024bc0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024bc4:	4558      	cmp	r0, fp
 8024bc6:	f280 8131 	bge.w	8024e2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024bca:	9a06      	ldr	r2, [sp, #24]
 8024bcc:	fb00 3302 	mla	r3, r0, r2, r3
 8024bd0:	0858      	lsrs	r0, r3, #1
 8024bd2:	07da      	lsls	r2, r3, #31
 8024bd4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024bd8:	9a08      	ldr	r2, [sp, #32]
 8024bda:	bf54      	ite	pl
 8024bdc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024be0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024be4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024be8:	fa5f fc8c 	uxtb.w	ip, ip
 8024bec:	2a00      	cmp	r2, #0
 8024bee:	f000 80cb 	beq.w	8024d88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024bf2:	1c58      	adds	r0, r3, #1
 8024bf4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024bf8:	07c0      	lsls	r0, r0, #31
 8024bfa:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024bfe:	bf54      	ite	pl
 8024c00:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024c04:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024c08:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024c0c:	fa5f fe8e 	uxtb.w	lr, lr
 8024c10:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8024c14:	b1b9      	cbz	r1, 8024c46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024c16:	4453      	add	r3, sl
 8024c18:	0858      	lsrs	r0, r3, #1
 8024c1a:	07da      	lsls	r2, r3, #31
 8024c1c:	5c38      	ldrb	r0, [r7, r0]
 8024c1e:	bf54      	ite	pl
 8024c20:	f000 000f 	andpl.w	r0, r0, #15
 8024c24:	1100      	asrmi	r0, r0, #4
 8024c26:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024c2a:	b2c0      	uxtb	r0, r0
 8024c2c:	900a      	str	r0, [sp, #40]	@ 0x28
 8024c2e:	1c58      	adds	r0, r3, #1
 8024c30:	0843      	lsrs	r3, r0, #1
 8024c32:	07c2      	lsls	r2, r0, #31
 8024c34:	5cfb      	ldrb	r3, [r7, r3]
 8024c36:	bf54      	ite	pl
 8024c38:	f003 030f 	andpl.w	r3, r3, #15
 8024c3c:	111b      	asrmi	r3, r3, #4
 8024c3e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024c42:	b2db      	uxtb	r3, r3
 8024c44:	930e      	str	r3, [sp, #56]	@ 0x38
 8024c46:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024c4a:	b289      	uxth	r1, r1
 8024c4c:	fb02 f301 	mul.w	r3, r2, r1
 8024c50:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024c54:	0112      	lsls	r2, r2, #4
 8024c56:	b289      	uxth	r1, r1
 8024c58:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8024c5c:	1a40      	subs	r0, r0, r1
 8024c5e:	fa1f fe80 	uxth.w	lr, r0
 8024c62:	1ad2      	subs	r2, r2, r3
 8024c64:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024c66:	b292      	uxth	r2, r2
 8024c68:	4342      	muls	r2, r0
 8024c6a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024c6e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024c70:	fb01 c102 	mla	r1, r1, r2, ip
 8024c74:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8024c76:	fb03 1302 	mla	r3, r3, r2, r1
 8024c7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024c7e:	2bff      	cmp	r3, #255	@ 0xff
 8024c80:	f040 8093 	bne.w	8024daa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024c84:	4bbe      	ldr	r3, [pc, #760]	@ (8024f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024c86:	681a      	ldr	r2, [r3, #0]
 8024c88:	4bbe      	ldr	r3, [pc, #760]	@ (8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024c8a:	0951      	lsrs	r1, r2, #5
 8024c8c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024c90:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024c94:	430b      	orrs	r3, r1
 8024c96:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024c9a:	4313      	orrs	r3, r2
 8024c9c:	f8a8 3000 	strh.w	r3, [r8]
 8024ca0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024ca2:	441c      	add	r4, r3
 8024ca4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024ca6:	441e      	add	r6, r3
 8024ca8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024caa:	3b01      	subs	r3, #1
 8024cac:	f108 0802 	add.w	r8, r8, #2
 8024cb0:	9309      	str	r3, [sp, #36]	@ 0x24
 8024cb2:	e76c      	b.n	8024b8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024cb4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024cb6:	441c      	add	r4, r3
 8024cb8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024cba:	3d01      	subs	r5, #1
 8024cbc:	441e      	add	r6, r3
 8024cbe:	f109 0902 	add.w	r9, r9, #2
 8024cc2:	e744      	b.n	8024b4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024cc4:	d021      	beq.n	8024d0a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024cc6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8024cc8:	1e6b      	subs	r3, r5, #1
 8024cca:	fb00 4003 	mla	r0, r0, r3, r4
 8024cce:	1400      	asrs	r0, r0, #16
 8024cd0:	f53f af59 	bmi.w	8024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024cd4:	3901      	subs	r1, #1
 8024cd6:	4288      	cmp	r0, r1
 8024cd8:	f6bf af55 	bge.w	8024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024cdc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8024cde:	fb01 6303 	mla	r3, r1, r3, r6
 8024ce2:	141b      	asrs	r3, r3, #16
 8024ce4:	f53f af4f 	bmi.w	8024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024ce8:	3a01      	subs	r2, #1
 8024cea:	4293      	cmp	r3, r2
 8024cec:	f6bf af4b 	bge.w	8024b86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024cf0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024cf4:	9308      	str	r3, [sp, #32]
 8024cf6:	46a8      	mov	r8, r5
 8024cf8:	46ce      	mov	lr, r9
 8024cfa:	f1b8 0f00 	cmp.w	r8, #0
 8024cfe:	f300 80b5 	bgt.w	8024e6c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024d02:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024d06:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024d0a:	9b07      	ldr	r3, [sp, #28]
 8024d0c:	2b00      	cmp	r3, #0
 8024d0e:	f340 817d 	ble.w	802500c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024d12:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024d16:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024d1a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024d1e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024d20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024d24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024d28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024d2c:	eef0 6a62 	vmov.f32	s13, s5
 8024d30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024d34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024d3c:	ee16 4a90 	vmov	r4, s13
 8024d40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024d44:	eef0 6a43 	vmov.f32	s13, s6
 8024d48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024d4c:	ee12 2a90 	vmov	r2, s5
 8024d50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024d54:	fb92 f3f3 	sdiv	r3, r2, r3
 8024d58:	ee13 2a10 	vmov	r2, s6
 8024d5c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8024d5e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024d60:	fb92 f3f3 	sdiv	r3, r2, r3
 8024d64:	9320      	str	r3, [sp, #128]	@ 0x80
 8024d66:	9b07      	ldr	r3, [sp, #28]
 8024d68:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8024d6a:	3b01      	subs	r3, #1
 8024d6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024d70:	9307      	str	r3, [sp, #28]
 8024d72:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024d74:	ee16 6a90 	vmov	r6, s13
 8024d78:	bf14      	ite	ne
 8024d7a:	461d      	movne	r5, r3
 8024d7c:	4615      	moveq	r5, r2
 8024d7e:	eeb0 3a67 	vmov.f32	s6, s15
 8024d82:	eef0 2a47 	vmov.f32	s5, s14
 8024d86:	e6d3      	b.n	8024b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024d88:	2900      	cmp	r1, #0
 8024d8a:	f43f af5c 	beq.w	8024c46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024d8e:	eb0a 0003 	add.w	r0, sl, r3
 8024d92:	0843      	lsrs	r3, r0, #1
 8024d94:	07c0      	lsls	r0, r0, #31
 8024d96:	5cfb      	ldrb	r3, [r7, r3]
 8024d98:	bf54      	ite	pl
 8024d9a:	f003 030f 	andpl.w	r3, r3, #15
 8024d9e:	111b      	asrmi	r3, r3, #4
 8024da0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024da4:	b2db      	uxtb	r3, r3
 8024da6:	930a      	str	r3, [sp, #40]	@ 0x28
 8024da8:	e74d      	b.n	8024c46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024daa:	2b00      	cmp	r3, #0
 8024dac:	f43f af78 	beq.w	8024ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024db0:	4a73      	ldr	r2, [pc, #460]	@ (8024f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024db2:	f8b8 c000 	ldrh.w	ip, [r8]
 8024db6:	6810      	ldr	r0, [r2, #0]
 8024db8:	fa1f fe83 	uxth.w	lr, r3
 8024dbc:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024dc0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024dc4:	43db      	mvns	r3, r3
 8024dc6:	b2db      	uxtb	r3, r3
 8024dc8:	fb12 f20e 	smulbb	r2, r2, lr
 8024dcc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024dd0:	fb01 2103 	mla	r1, r1, r3, r2
 8024dd4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024dd8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024ddc:	b2c0      	uxtb	r0, r0
 8024dde:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024de2:	fb1b fb0e 	smulbb	fp, fp, lr
 8024de6:	b289      	uxth	r1, r1
 8024de8:	fb10 fe0e 	smulbb	lr, r0, lr
 8024dec:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024df0:	fa5f fc8c 	uxtb.w	ip, ip
 8024df4:	fb02 b203 	mla	r2, r2, r3, fp
 8024df8:	1c48      	adds	r0, r1, #1
 8024dfa:	fb0c e303 	mla	r3, ip, r3, lr
 8024dfe:	b292      	uxth	r2, r2
 8024e00:	b29b      	uxth	r3, r3
 8024e02:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024e06:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8024e0a:	f102 0b01 	add.w	fp, r2, #1
 8024e0e:	1c59      	adds	r1, r3, #1
 8024e10:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024e14:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024e18:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024e1c:	0952      	lsrs	r2, r2, #5
 8024e1e:	4301      	orrs	r1, r0
 8024e20:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024e24:	4311      	orrs	r1, r2
 8024e26:	f8a8 1000 	strh.w	r1, [r8]
 8024e2a:	e739      	b.n	8024ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e2c:	f113 0b01 	adds.w	fp, r3, #1
 8024e30:	f53f af36 	bmi.w	8024ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e34:	45dc      	cmp	ip, fp
 8024e36:	f6ff af33 	blt.w	8024ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e3a:	f110 0b01 	adds.w	fp, r0, #1
 8024e3e:	f53f af2f 	bmi.w	8024ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e42:	45de      	cmp	lr, fp
 8024e44:	f6ff af2c 	blt.w	8024ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e48:	9a08      	ldr	r2, [sp, #32]
 8024e4a:	9302      	str	r3, [sp, #8]
 8024e4c:	fa0f f38e 	sxth.w	r3, lr
 8024e50:	9301      	str	r3, [sp, #4]
 8024e52:	fa0f f38c 	sxth.w	r3, ip
 8024e56:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024e5a:	9105      	str	r1, [sp, #20]
 8024e5c:	9300      	str	r3, [sp, #0]
 8024e5e:	463a      	mov	r2, r7
 8024e60:	4653      	mov	r3, sl
 8024e62:	4641      	mov	r1, r8
 8024e64:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8024e66:	f7ff fd73 	bl	8024950 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024e6a:	e719      	b.n	8024ca0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8024e6c:	9906      	ldr	r1, [sp, #24]
 8024e6e:	1422      	asrs	r2, r4, #16
 8024e70:	1433      	asrs	r3, r6, #16
 8024e72:	fb01 2303 	mla	r3, r1, r3, r2
 8024e76:	085a      	lsrs	r2, r3, #1
 8024e78:	07d9      	lsls	r1, r3, #31
 8024e7a:	5cba      	ldrb	r2, [r7, r2]
 8024e7c:	bf54      	ite	pl
 8024e7e:	f002 020f 	andpl.w	r2, r2, #15
 8024e82:	1112      	asrmi	r2, r2, #4
 8024e84:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024e88:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024e8c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024e90:	b2d2      	uxtb	r2, r2
 8024e92:	2800      	cmp	r0, #0
 8024e94:	d062      	beq.n	8024f5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8024e96:	f103 0a01 	add.w	sl, r3, #1
 8024e9a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024e9e:	f01a 0f01 	tst.w	sl, #1
 8024ea2:	5c79      	ldrb	r1, [r7, r1]
 8024ea4:	bf0c      	ite	eq
 8024ea6:	f001 010f 	andeq.w	r1, r1, #15
 8024eaa:	1109      	asrne	r1, r1, #4
 8024eac:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024eb0:	b2c9      	uxtb	r1, r1
 8024eb2:	910f      	str	r1, [sp, #60]	@ 0x3c
 8024eb4:	f1bc 0f00 	cmp.w	ip, #0
 8024eb8:	d019      	beq.n	8024eee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024eba:	9908      	ldr	r1, [sp, #32]
 8024ebc:	440b      	add	r3, r1
 8024ebe:	0859      	lsrs	r1, r3, #1
 8024ec0:	f013 0f01 	tst.w	r3, #1
 8024ec4:	5c79      	ldrb	r1, [r7, r1]
 8024ec6:	bf0c      	ite	eq
 8024ec8:	f001 010f 	andeq.w	r1, r1, #15
 8024ecc:	1109      	asrne	r1, r1, #4
 8024ece:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024ed2:	b2c9      	uxtb	r1, r1
 8024ed4:	3301      	adds	r3, #1
 8024ed6:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024ed8:	0859      	lsrs	r1, r3, #1
 8024eda:	07db      	lsls	r3, r3, #31
 8024edc:	5c79      	ldrb	r1, [r7, r1]
 8024ede:	bf54      	ite	pl
 8024ee0:	f001 010f 	andpl.w	r1, r1, #15
 8024ee4:	1109      	asrmi	r1, r1, #4
 8024ee6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024eea:	b2c9      	uxtb	r1, r1
 8024eec:	9110      	str	r1, [sp, #64]	@ 0x40
 8024eee:	b280      	uxth	r0, r0
 8024ef0:	fa1f fc8c 	uxth.w	ip, ip
 8024ef4:	fb00 f30c 	mul.w	r3, r0, ip
 8024ef8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024efc:	0100      	lsls	r0, r0, #4
 8024efe:	fa1f fc8c 	uxth.w	ip, ip
 8024f02:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8024f06:	eba1 010c 	sub.w	r1, r1, ip
 8024f0a:	fa1f fa81 	uxth.w	sl, r1
 8024f0e:	1ac0      	subs	r0, r0, r3
 8024f10:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024f12:	b280      	uxth	r0, r0
 8024f14:	4348      	muls	r0, r1
 8024f16:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8024f18:	fb02 020a 	mla	r2, r2, sl, r0
 8024f1c:	fb0c 2c01 	mla	ip, ip, r1, r2
 8024f20:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8024f22:	fb03 c302 	mla	r3, r3, r2, ip
 8024f26:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f2a:	2bff      	cmp	r3, #255	@ 0xff
 8024f2c:	d12c      	bne.n	8024f88 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8024f2e:	4b14      	ldr	r3, [pc, #80]	@ (8024f80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024f30:	681a      	ldr	r2, [r3, #0]
 8024f32:	4b14      	ldr	r3, [pc, #80]	@ (8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024f34:	0951      	lsrs	r1, r2, #5
 8024f36:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024f3a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024f3e:	430b      	orrs	r3, r1
 8024f40:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024f44:	4313      	orrs	r3, r2
 8024f46:	f8ae 3000 	strh.w	r3, [lr]
 8024f4a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024f4c:	441c      	add	r4, r3
 8024f4e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f50:	f10e 0e02 	add.w	lr, lr, #2
 8024f54:	441e      	add	r6, r3
 8024f56:	f108 38ff 	add.w	r8, r8, #4294967295
 8024f5a:	e6ce      	b.n	8024cfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8024f5c:	f1bc 0f00 	cmp.w	ip, #0
 8024f60:	d0c5      	beq.n	8024eee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024f62:	9908      	ldr	r1, [sp, #32]
 8024f64:	440b      	add	r3, r1
 8024f66:	0859      	lsrs	r1, r3, #1
 8024f68:	07db      	lsls	r3, r3, #31
 8024f6a:	5c79      	ldrb	r1, [r7, r1]
 8024f6c:	bf54      	ite	pl
 8024f6e:	f001 010f 	andpl.w	r1, r1, #15
 8024f72:	1109      	asrmi	r1, r1, #4
 8024f74:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024f78:	b2c9      	uxtb	r1, r1
 8024f7a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024f7c:	e7b7      	b.n	8024eee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8024f7e:	bf00      	nop
 8024f80:	20002f5c 	.word	0x20002f5c
 8024f84:	fffff800 	.word	0xfffff800
 8024f88:	2b00      	cmp	r3, #0
 8024f8a:	d0de      	beq.n	8024f4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8024f8c:	4a21      	ldr	r2, [pc, #132]	@ (8025014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8024f8e:	f8be c000 	ldrh.w	ip, [lr]
 8024f92:	6810      	ldr	r0, [r2, #0]
 8024f94:	fa1f fa83 	uxth.w	sl, r3
 8024f98:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024f9c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024fa0:	43db      	mvns	r3, r3
 8024fa2:	b2db      	uxtb	r3, r3
 8024fa4:	fb12 f20a 	smulbb	r2, r2, sl
 8024fa8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024fac:	fb01 2103 	mla	r1, r1, r3, r2
 8024fb0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024fb4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024fb8:	b2c0      	uxtb	r0, r0
 8024fba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024fbe:	fa5f fc8c 	uxtb.w	ip, ip
 8024fc2:	fb10 f00a 	smulbb	r0, r0, sl
 8024fc6:	fb0c 0003 	mla	r0, ip, r3, r0
 8024fca:	b289      	uxth	r1, r1
 8024fcc:	fb1b fb0a 	smulbb	fp, fp, sl
 8024fd0:	b280      	uxth	r0, r0
 8024fd2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024fd6:	fb02 b203 	mla	r2, r2, r3, fp
 8024fda:	1c4b      	adds	r3, r1, #1
 8024fdc:	f100 0b01 	add.w	fp, r0, #1
 8024fe0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024fe4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8024fe8:	b292      	uxth	r2, r2
 8024fea:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024fee:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8024ff2:	ea4b 0101 	orr.w	r1, fp, r1
 8024ff6:	f102 0b01 	add.w	fp, r2, #1
 8024ffa:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024ffe:	0952      	lsrs	r2, r2, #5
 8025000:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025004:	4311      	orrs	r1, r2
 8025006:	f8ae 1000 	strh.w	r1, [lr]
 802500a:	e79e      	b.n	8024f4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802500c:	b013      	add	sp, #76	@ 0x4c
 802500e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025012:	bf00      	nop
 8025014:	20002f5c 	.word	0x20002f5c

08025018 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025018:	b570      	push	{r4, r5, r6, lr}
 802501a:	1208      	asrs	r0, r1, #8
 802501c:	b29e      	uxth	r6, r3
 802501e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8025022:	1213      	asrs	r3, r2, #8
 8025024:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8025028:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802502c:	fb13 f305 	smulbb	r3, r3, r5
 8025030:	fb10 f006 	smulbb	r0, r0, r6
 8025034:	4418      	add	r0, r3
 8025036:	10cc      	asrs	r4, r1, #3
 8025038:	10d3      	asrs	r3, r2, #3
 802503a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802503e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025042:	fb13 f305 	smulbb	r3, r3, r5
 8025046:	fb14 f406 	smulbb	r4, r4, r6
 802504a:	00c9      	lsls	r1, r1, #3
 802504c:	00d2      	lsls	r2, r2, #3
 802504e:	441c      	add	r4, r3
 8025050:	b2d2      	uxtb	r2, r2
 8025052:	b2cb      	uxtb	r3, r1
 8025054:	fb12 f205 	smulbb	r2, r2, r5
 8025058:	b280      	uxth	r0, r0
 802505a:	fb13 f306 	smulbb	r3, r3, r6
 802505e:	4413      	add	r3, r2
 8025060:	1c42      	adds	r2, r0, #1
 8025062:	b29b      	uxth	r3, r3
 8025064:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025068:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802506c:	1c58      	adds	r0, r3, #1
 802506e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025072:	b2a4      	uxth	r4, r4
 8025074:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025078:	4310      	orrs	r0, r2
 802507a:	1c62      	adds	r2, r4, #1
 802507c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025080:	0964      	lsrs	r4, r4, #5
 8025082:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025086:	4320      	orrs	r0, r4
 8025088:	bd70      	pop	{r4, r5, r6, pc}
	...

0802508c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802508c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025090:	b08f      	sub	sp, #60	@ 0x3c
 8025092:	461c      	mov	r4, r3
 8025094:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8025098:	9004      	str	r0, [sp, #16]
 802509a:	460d      	mov	r5, r1
 802509c:	4616      	mov	r6, r2
 802509e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80250a0:	2f00      	cmp	r7, #0
 80250a2:	f000 80f6 	beq.w	8025292 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80250a6:	6820      	ldr	r0, [r4, #0]
 80250a8:	6861      	ldr	r1, [r4, #4]
 80250aa:	aa0a      	add	r2, sp, #40	@ 0x28
 80250ac:	c203      	stmia	r2!, {r0, r1}
 80250ae:	6818      	ldr	r0, [r3, #0]
 80250b0:	6859      	ldr	r1, [r3, #4]
 80250b2:	aa0c      	add	r2, sp, #48	@ 0x30
 80250b4:	c203      	stmia	r2!, {r0, r1}
 80250b6:	a80a      	add	r0, sp, #40	@ 0x28
 80250b8:	f7ee fdd4 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80250bc:	4621      	mov	r1, r4
 80250be:	a80c      	add	r0, sp, #48	@ 0x30
 80250c0:	f7ee fdf8 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80250c4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80250c8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80250cc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80250d0:	f002 0301 	and.w	r3, r2, #1
 80250d4:	9306      	str	r3, [sp, #24]
 80250d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80250da:	f003 0101 	and.w	r1, r3, #1
 80250de:	9105      	str	r1, [sp, #20]
 80250e0:	9805      	ldr	r0, [sp, #20]
 80250e2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80250e6:	4403      	add	r3, r0
 80250e8:	fb01 2303 	mla	r3, r1, r3, r2
 80250ec:	f04f 0802 	mov.w	r8, #2
 80250f0:	fb93 f3f8 	sdiv	r3, r3, r8
 80250f4:	441d      	add	r5, r3
 80250f6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80250fa:	441a      	add	r2, r3
 80250fc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8025100:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025104:	4419      	add	r1, r3
 8025106:	4b64      	ldr	r3, [pc, #400]	@ (8025298 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025108:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 802510c:	6818      	ldr	r0, [r3, #0]
 802510e:	6803      	ldr	r3, [r0, #0]
 8025110:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025112:	4798      	blx	r3
 8025114:	4a61      	ldr	r2, [pc, #388]	@ (802529c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025116:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802511a:	8813      	ldrh	r3, [r2, #0]
 802511c:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8025120:	2fff      	cmp	r7, #255	@ 0xff
 8025122:	fb03 a404 	mla	r4, r3, r4, sl
 8025126:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802512a:	f106 0604 	add.w	r6, r6, #4
 802512e:	4611      	mov	r1, r2
 8025130:	fb03 fb0b 	mul.w	fp, r3, fp
 8025134:	d06b      	beq.n	802520e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025136:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802513a:	9303      	str	r3, [sp, #12]
 802513c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025140:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025144:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8025148:	9b07      	ldr	r3, [sp, #28]
 802514a:	42a3      	cmp	r3, r4
 802514c:	f240 809c 	bls.w	8025288 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025150:	9b06      	ldr	r3, [sp, #24]
 8025152:	2b00      	cmp	r3, #0
 8025154:	d039      	beq.n	80251ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025156:	782b      	ldrb	r3, [r5, #0]
 8025158:	8822      	ldrh	r2, [r4, #0]
 802515a:	9804      	ldr	r0, [sp, #16]
 802515c:	f003 030f 	and.w	r3, r3, #15
 8025160:	f105 0801 	add.w	r8, r5, #1
 8025164:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025168:	9b03      	ldr	r3, [sp, #12]
 802516a:	9300      	str	r3, [sp, #0]
 802516c:	463b      	mov	r3, r7
 802516e:	f7ff ff53 	bl	8025018 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025172:	f824 0b02 	strh.w	r0, [r4], #2
 8025176:	f109 3bff 	add.w	fp, r9, #4294967295
 802517a:	f1bb 0f01 	cmp.w	fp, #1
 802517e:	46a2      	mov	sl, r4
 8025180:	f104 0404 	add.w	r4, r4, #4
 8025184:	dd24      	ble.n	80251d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025186:	f898 3000 	ldrb.w	r3, [r8]
 802518a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802518e:	9804      	ldr	r0, [sp, #16]
 8025190:	091b      	lsrs	r3, r3, #4
 8025192:	f1ab 0b02 	sub.w	fp, fp, #2
 8025196:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802519a:	9b03      	ldr	r3, [sp, #12]
 802519c:	9300      	str	r3, [sp, #0]
 802519e:	463b      	mov	r3, r7
 80251a0:	f7ff ff3a 	bl	8025018 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80251a4:	f824 0c04 	strh.w	r0, [r4, #-4]
 80251a8:	f818 3b01 	ldrb.w	r3, [r8], #1
 80251ac:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80251b0:	9804      	ldr	r0, [sp, #16]
 80251b2:	f003 030f 	and.w	r3, r3, #15
 80251b6:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80251ba:	9b03      	ldr	r3, [sp, #12]
 80251bc:	9300      	str	r3, [sp, #0]
 80251be:	463b      	mov	r3, r7
 80251c0:	f7ff ff2a 	bl	8025018 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80251c4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80251c8:	e7d7      	b.n	802517a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80251ca:	46a8      	mov	r8, r5
 80251cc:	46cb      	mov	fp, r9
 80251ce:	e7d4      	b.n	802517a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80251d0:	d10e      	bne.n	80251f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80251d2:	f898 3000 	ldrb.w	r3, [r8]
 80251d6:	f8ba 2000 	ldrh.w	r2, [sl]
 80251da:	9804      	ldr	r0, [sp, #16]
 80251dc:	091b      	lsrs	r3, r3, #4
 80251de:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80251e2:	9b03      	ldr	r3, [sp, #12]
 80251e4:	9300      	str	r3, [sp, #0]
 80251e6:	463b      	mov	r3, r7
 80251e8:	f7ff ff16 	bl	8025018 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80251ec:	f82a 0b02 	strh.w	r0, [sl], #2
 80251f0:	9b08      	ldr	r3, [sp, #32]
 80251f2:	9a05      	ldr	r2, [sp, #20]
 80251f4:	881c      	ldrh	r4, [r3, #0]
 80251f6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80251fa:	eba4 0409 	sub.w	r4, r4, r9
 80251fe:	4413      	add	r3, r2
 8025200:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025204:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025206:	fb93 f3f2 	sdiv	r3, r3, r2
 802520a:	441d      	add	r5, r3
 802520c:	e79c      	b.n	8025148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802520e:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8025212:	45a3      	cmp	fp, r4
 8025214:	d938      	bls.n	8025288 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025216:	9b06      	ldr	r3, [sp, #24]
 8025218:	b1f3      	cbz	r3, 8025258 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802521a:	782b      	ldrb	r3, [r5, #0]
 802521c:	f003 030f 	and.w	r3, r3, #15
 8025220:	1c6a      	adds	r2, r5, #1
 8025222:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025226:	8023      	strh	r3, [r4, #0]
 8025228:	f109 30ff 	add.w	r0, r9, #4294967295
 802522c:	3402      	adds	r4, #2
 802522e:	2801      	cmp	r0, #1
 8025230:	4623      	mov	r3, r4
 8025232:	f104 0404 	add.w	r4, r4, #4
 8025236:	dd12      	ble.n	802525e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025238:	7813      	ldrb	r3, [r2, #0]
 802523a:	091b      	lsrs	r3, r3, #4
 802523c:	3802      	subs	r0, #2
 802523e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025242:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025246:	f812 3b01 	ldrb.w	r3, [r2], #1
 802524a:	f003 030f 	and.w	r3, r3, #15
 802524e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025252:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025256:	e7ea      	b.n	802522e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025258:	462a      	mov	r2, r5
 802525a:	4648      	mov	r0, r9
 802525c:	e7e7      	b.n	802522e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802525e:	d106      	bne.n	802526e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025260:	7812      	ldrb	r2, [r2, #0]
 8025262:	0912      	lsrs	r2, r2, #4
 8025264:	3302      	adds	r3, #2
 8025266:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802526a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802526e:	880c      	ldrh	r4, [r1, #0]
 8025270:	9a05      	ldr	r2, [sp, #20]
 8025272:	eba4 0409 	sub.w	r4, r4, r9
 8025276:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802527a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802527e:	4413      	add	r3, r2
 8025280:	fb93 f3f8 	sdiv	r3, r3, r8
 8025284:	441d      	add	r5, r3
 8025286:	e7c4      	b.n	8025212 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025288:	4b03      	ldr	r3, [pc, #12]	@ (8025298 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802528a:	6818      	ldr	r0, [r3, #0]
 802528c:	6803      	ldr	r3, [r0, #0]
 802528e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025290:	4798      	blx	r3
 8025292:	b00f      	add	sp, #60	@ 0x3c
 8025294:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025298:	20002f54 	.word	0x20002f54
 802529c:	20002f4e 	.word	0x20002f4e

080252a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80252a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80252a2:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80252a6:	2dff      	cmp	r5, #255	@ 0xff
 80252a8:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80252ac:	d10c      	bne.n	80252c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80252ae:	2bff      	cmp	r3, #255	@ 0xff
 80252b0:	d10a      	bne.n	80252c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80252b2:	4b25      	ldr	r3, [pc, #148]	@ (8025348 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80252b4:	0948      	lsrs	r0, r1, #5
 80252b6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80252ba:	403b      	ands	r3, r7
 80252bc:	4318      	orrs	r0, r3
 80252be:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80252c2:	4308      	orrs	r0, r1
 80252c4:	b280      	uxth	r0, r0
 80252c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80252c8:	fb15 f503 	smulbb	r5, r5, r3
 80252cc:	b2ab      	uxth	r3, r5
 80252ce:	1c5d      	adds	r5, r3, #1
 80252d0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80252d4:	1214      	asrs	r4, r2, #8
 80252d6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80252da:	fa1f fc85 	uxth.w	ip, r5
 80252de:	10d6      	asrs	r6, r2, #3
 80252e0:	00d0      	lsls	r0, r2, #3
 80252e2:	43ed      	mvns	r5, r5
 80252e4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80252e8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80252ec:	b2eb      	uxtb	r3, r5
 80252ee:	b2c0      	uxtb	r0, r0
 80252f0:	fb12 f20c 	smulbb	r2, r2, ip
 80252f4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80252f8:	fb04 2403 	mla	r4, r4, r3, r2
 80252fc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8025300:	b2c8      	uxtb	r0, r1
 8025302:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8025306:	b2fd      	uxtb	r5, r7
 8025308:	fb10 f00c 	smulbb	r0, r0, ip
 802530c:	b2a4      	uxth	r4, r4
 802530e:	fb02 0003 	mla	r0, r2, r3, r0
 8025312:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025316:	fb15 f50c 	smulbb	r5, r5, ip
 802531a:	fb06 5503 	mla	r5, r6, r3, r5
 802531e:	b283      	uxth	r3, r0
 8025320:	1c60      	adds	r0, r4, #1
 8025322:	b2ad      	uxth	r5, r5
 8025324:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025328:	1c58      	adds	r0, r3, #1
 802532a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802532e:	1c6b      	adds	r3, r5, #1
 8025330:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025334:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8025338:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802533c:	096d      	lsrs	r5, r5, #5
 802533e:	4320      	orrs	r0, r4
 8025340:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025344:	4328      	orrs	r0, r5
 8025346:	e7be      	b.n	80252c6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025348:	00fff800 	.word	0x00fff800

0802534c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802534c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025350:	461c      	mov	r4, r3
 8025352:	b08d      	sub	sp, #52	@ 0x34
 8025354:	460d      	mov	r5, r1
 8025356:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025358:	6861      	ldr	r1, [r4, #4]
 802535a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802535e:	4680      	mov	r8, r0
 8025360:	6820      	ldr	r0, [r4, #0]
 8025362:	4616      	mov	r6, r2
 8025364:	aa08      	add	r2, sp, #32
 8025366:	c203      	stmia	r2!, {r0, r1}
 8025368:	6818      	ldr	r0, [r3, #0]
 802536a:	6859      	ldr	r1, [r3, #4]
 802536c:	aa0a      	add	r2, sp, #40	@ 0x28
 802536e:	c203      	stmia	r2!, {r0, r1}
 8025370:	a808      	add	r0, sp, #32
 8025372:	f7ee fc77 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025376:	4621      	mov	r1, r4
 8025378:	a80a      	add	r0, sp, #40	@ 0x28
 802537a:	f7ee fc9b 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802537e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8025382:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8025386:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802538a:	f002 0301 	and.w	r3, r2, #1
 802538e:	9303      	str	r3, [sp, #12]
 8025390:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8025394:	f003 0101 	and.w	r1, r3, #1
 8025398:	9102      	str	r1, [sp, #8]
 802539a:	9802      	ldr	r0, [sp, #8]
 802539c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80253a0:	4403      	add	r3, r0
 80253a2:	fb01 2303 	mla	r3, r1, r3, r2
 80253a6:	f04f 0a02 	mov.w	sl, #2
 80253aa:	fb93 f3fa 	sdiv	r3, r3, sl
 80253ae:	441d      	add	r5, r3
 80253b0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80253b4:	441a      	add	r2, r3
 80253b6:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80253ba:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80253be:	4a3f      	ldr	r2, [pc, #252]	@ (80254bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80253c0:	9205      	str	r2, [sp, #20]
 80253c2:	4419      	add	r1, r3
 80253c4:	6810      	ldr	r0, [r2, #0]
 80253c6:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80253ca:	6803      	ldr	r3, [r0, #0]
 80253cc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80253ce:	4798      	blx	r3
 80253d0:	4b3b      	ldr	r3, [pc, #236]	@ (80254c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80253d2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80253d6:	8819      	ldrh	r1, [r3, #0]
 80253d8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 80253dc:	fb01 c404 	mla	r4, r1, r4, ip
 80253e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80253e4:	434f      	muls	r7, r1
 80253e6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80253ea:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80253ee:	3604      	adds	r6, #4
 80253f0:	9204      	str	r2, [sp, #16]
 80253f2:	9b04      	ldr	r3, [sp, #16]
 80253f4:	429c      	cmp	r4, r3
 80253f6:	d258      	bcs.n	80254aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80253f8:	9b03      	ldr	r3, [sp, #12]
 80253fa:	2b00      	cmp	r3, #0
 80253fc:	d034      	beq.n	8025468 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80253fe:	782b      	ldrb	r3, [r5, #0]
 8025400:	f003 030f 	and.w	r3, r3, #15
 8025404:	1c6f      	adds	r7, r5, #1
 8025406:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802540a:	0e0b      	lsrs	r3, r1, #24
 802540c:	d006      	beq.n	802541c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802540e:	8822      	ldrh	r2, [r4, #0]
 8025410:	9300      	str	r3, [sp, #0]
 8025412:	4640      	mov	r0, r8
 8025414:	464b      	mov	r3, r9
 8025416:	f7ff ff43 	bl	80252a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802541a:	8020      	strh	r0, [r4, #0]
 802541c:	3402      	adds	r4, #2
 802541e:	f10b 3aff 	add.w	sl, fp, #4294967295
 8025422:	f1ba 0f01 	cmp.w	sl, #1
 8025426:	dd22      	ble.n	802546e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025428:	783b      	ldrb	r3, [r7, #0]
 802542a:	091b      	lsrs	r3, r3, #4
 802542c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025430:	0e0b      	lsrs	r3, r1, #24
 8025432:	d006      	beq.n	8025442 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025434:	8822      	ldrh	r2, [r4, #0]
 8025436:	9300      	str	r3, [sp, #0]
 8025438:	4640      	mov	r0, r8
 802543a:	464b      	mov	r3, r9
 802543c:	f7ff ff30 	bl	80252a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025440:	8020      	strh	r0, [r4, #0]
 8025442:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025446:	f003 030f 	and.w	r3, r3, #15
 802544a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802544e:	0e0b      	lsrs	r3, r1, #24
 8025450:	d006      	beq.n	8025460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025452:	8862      	ldrh	r2, [r4, #2]
 8025454:	9300      	str	r3, [sp, #0]
 8025456:	4640      	mov	r0, r8
 8025458:	464b      	mov	r3, r9
 802545a:	f7ff ff21 	bl	80252a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802545e:	8060      	strh	r0, [r4, #2]
 8025460:	3404      	adds	r4, #4
 8025462:	f1aa 0a02 	sub.w	sl, sl, #2
 8025466:	e7dc      	b.n	8025422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025468:	462f      	mov	r7, r5
 802546a:	46da      	mov	sl, fp
 802546c:	e7d9      	b.n	8025422 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802546e:	d10d      	bne.n	802548c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025470:	783b      	ldrb	r3, [r7, #0]
 8025472:	091b      	lsrs	r3, r3, #4
 8025474:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025478:	0e0b      	lsrs	r3, r1, #24
 802547a:	d006      	beq.n	802548a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802547c:	8822      	ldrh	r2, [r4, #0]
 802547e:	9300      	str	r3, [sp, #0]
 8025480:	4640      	mov	r0, r8
 8025482:	464b      	mov	r3, r9
 8025484:	f7ff ff0c 	bl	80252a0 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025488:	8020      	strh	r0, [r4, #0]
 802548a:	3402      	adds	r4, #2
 802548c:	9b06      	ldr	r3, [sp, #24]
 802548e:	9a02      	ldr	r2, [sp, #8]
 8025490:	881b      	ldrh	r3, [r3, #0]
 8025492:	eba3 030b 	sub.w	r3, r3, fp
 8025496:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802549a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802549e:	4413      	add	r3, r2
 80254a0:	9a07      	ldr	r2, [sp, #28]
 80254a2:	fb93 f3f2 	sdiv	r3, r3, r2
 80254a6:	441d      	add	r5, r3
 80254a8:	e7a3      	b.n	80253f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80254aa:	9b05      	ldr	r3, [sp, #20]
 80254ac:	6818      	ldr	r0, [r3, #0]
 80254ae:	6803      	ldr	r3, [r0, #0]
 80254b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80254b2:	4798      	blx	r3
 80254b4:	b00d      	add	sp, #52	@ 0x34
 80254b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254ba:	bf00      	nop
 80254bc:	20002f54 	.word	0x20002f54
 80254c0:	20002f4e 	.word	0x20002f4e

080254c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80254c4:	b570      	push	{r4, r5, r6, lr}
 80254c6:	1214      	asrs	r4, r2, #8
 80254c8:	788d      	ldrb	r5, [r1, #2]
 80254ca:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80254ce:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80254d2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80254d6:	fb15 f503 	smulbb	r5, r5, r3
 80254da:	fb04 5506 	mla	r5, r4, r6, r5
 80254de:	10d0      	asrs	r0, r2, #3
 80254e0:	784c      	ldrb	r4, [r1, #1]
 80254e2:	7809      	ldrb	r1, [r1, #0]
 80254e4:	00d2      	lsls	r2, r2, #3
 80254e6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80254ea:	b2d2      	uxtb	r2, r2
 80254ec:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80254f0:	fb14 f403 	smulbb	r4, r4, r3
 80254f4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80254f8:	fb11 f303 	smulbb	r3, r1, r3
 80254fc:	fb00 4406 	mla	r4, r0, r6, r4
 8025500:	fb02 3306 	mla	r3, r2, r6, r3
 8025504:	b2ad      	uxth	r5, r5
 8025506:	b29b      	uxth	r3, r3
 8025508:	b2a4      	uxth	r4, r4
 802550a:	1c68      	adds	r0, r5, #1
 802550c:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025510:	1c62      	adds	r2, r4, #1
 8025512:	1c58      	adds	r0, r3, #1
 8025514:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025518:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802551c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8025520:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025524:	0964      	lsrs	r4, r4, #5
 8025526:	4328      	orrs	r0, r5
 8025528:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802552c:	4320      	orrs	r0, r4
 802552e:	bd70      	pop	{r4, r5, r6, pc}

08025530 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025534:	b08f      	sub	sp, #60	@ 0x3c
 8025536:	461c      	mov	r4, r3
 8025538:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802553c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802553e:	4682      	mov	sl, r0
 8025540:	460e      	mov	r6, r1
 8025542:	4615      	mov	r5, r2
 8025544:	2f00      	cmp	r7, #0
 8025546:	f000 8142 	beq.w	80257ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802554a:	6820      	ldr	r0, [r4, #0]
 802554c:	6861      	ldr	r1, [r4, #4]
 802554e:	aa0a      	add	r2, sp, #40	@ 0x28
 8025550:	c203      	stmia	r2!, {r0, r1}
 8025552:	6818      	ldr	r0, [r3, #0]
 8025554:	6859      	ldr	r1, [r3, #4]
 8025556:	aa0c      	add	r2, sp, #48	@ 0x30
 8025558:	c203      	stmia	r2!, {r0, r1}
 802555a:	a80a      	add	r0, sp, #40	@ 0x28
 802555c:	f7ee fb82 	bl	8013c64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025560:	4621      	mov	r1, r4
 8025562:	a80c      	add	r0, sp, #48	@ 0x30
 8025564:	f7ee fba6 	bl	8013cb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025568:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802556c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8025570:	f002 0301 	and.w	r3, r2, #1
 8025574:	9306      	str	r3, [sp, #24]
 8025576:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802557a:	f003 0101 	and.w	r1, r3, #1
 802557e:	9105      	str	r1, [sp, #20]
 8025580:	9805      	ldr	r0, [sp, #20]
 8025582:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8025586:	4403      	add	r3, r0
 8025588:	fb01 2303 	mla	r3, r1, r3, r2
 802558c:	f04f 0802 	mov.w	r8, #2
 8025590:	fb93 f3f8 	sdiv	r3, r3, r8
 8025594:	441e      	add	r6, r3
 8025596:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802559a:	441a      	add	r2, r3
 802559c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80255a0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80255a4:	4419      	add	r1, r3
 80255a6:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80255aa:	9303      	str	r3, [sp, #12]
 80255ac:	4b89      	ldr	r3, [pc, #548]	@ (80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80255ae:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80255b2:	6818      	ldr	r0, [r3, #0]
 80255b4:	6803      	ldr	r3, [r0, #0]
 80255b6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80255b8:	4798      	blx	r3
 80255ba:	4a87      	ldr	r2, [pc, #540]	@ (80257d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80255bc:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80255c0:	8813      	ldrh	r3, [r2, #0]
 80255c2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 80255c6:	2fff      	cmp	r7, #255	@ 0xff
 80255c8:	fb03 9404 	mla	r4, r3, r4, r9
 80255cc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80255d0:	f105 0504 	add.w	r5, r5, #4
 80255d4:	4694      	mov	ip, r2
 80255d6:	fb03 f30b 	mul.w	r3, r3, fp
 80255da:	d071      	beq.n	80256c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80255dc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80255e0:	43f9      	mvns	r1, r7
 80255e2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80255e6:	b2c9      	uxtb	r1, r1
 80255e8:	9104      	str	r1, [sp, #16]
 80255ea:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80255ee:	9b07      	ldr	r3, [sp, #28]
 80255f0:	42a3      	cmp	r3, r4
 80255f2:	f240 80e7 	bls.w	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80255f6:	9b06      	ldr	r3, [sp, #24]
 80255f8:	2b00      	cmp	r3, #0
 80255fa:	d03d      	beq.n	8025678 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80255fc:	7831      	ldrb	r1, [r6, #0]
 80255fe:	9b04      	ldr	r3, [sp, #16]
 8025600:	8822      	ldrh	r2, [r4, #0]
 8025602:	9300      	str	r3, [sp, #0]
 8025604:	f001 010f 	and.w	r1, r1, #15
 8025608:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802560c:	463b      	mov	r3, r7
 802560e:	4429      	add	r1, r5
 8025610:	4650      	mov	r0, sl
 8025612:	f7ff ff57 	bl	80254c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025616:	9b03      	ldr	r3, [sp, #12]
 8025618:	f824 0b02 	strh.w	r0, [r4], #2
 802561c:	f106 0801 	add.w	r8, r6, #1
 8025620:	f103 3bff 	add.w	fp, r3, #4294967295
 8025624:	f1bb 0f01 	cmp.w	fp, #1
 8025628:	46a1      	mov	r9, r4
 802562a:	f104 0404 	add.w	r4, r4, #4
 802562e:	dd27      	ble.n	8025680 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025630:	f898 1000 	ldrb.w	r1, [r8]
 8025634:	9b04      	ldr	r3, [sp, #16]
 8025636:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802563a:	9300      	str	r3, [sp, #0]
 802563c:	0909      	lsrs	r1, r1, #4
 802563e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025642:	463b      	mov	r3, r7
 8025644:	4429      	add	r1, r5
 8025646:	4650      	mov	r0, sl
 8025648:	f7ff ff3c 	bl	80254c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802564c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025650:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025654:	9b04      	ldr	r3, [sp, #16]
 8025656:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802565a:	9300      	str	r3, [sp, #0]
 802565c:	f001 010f 	and.w	r1, r1, #15
 8025660:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025664:	463b      	mov	r3, r7
 8025666:	4429      	add	r1, r5
 8025668:	4650      	mov	r0, sl
 802566a:	f7ff ff2b 	bl	80254c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802566e:	f1ab 0b02 	sub.w	fp, fp, #2
 8025672:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025676:	e7d5      	b.n	8025624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025678:	46b0      	mov	r8, r6
 802567a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802567e:	e7d1      	b.n	8025624 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025680:	d10f      	bne.n	80256a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025682:	f898 1000 	ldrb.w	r1, [r8]
 8025686:	9b04      	ldr	r3, [sp, #16]
 8025688:	f8b9 2000 	ldrh.w	r2, [r9]
 802568c:	9300      	str	r3, [sp, #0]
 802568e:	0909      	lsrs	r1, r1, #4
 8025690:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025694:	463b      	mov	r3, r7
 8025696:	4429      	add	r1, r5
 8025698:	4650      	mov	r0, sl
 802569a:	f7ff ff13 	bl	80254c4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802569e:	f829 0b02 	strh.w	r0, [r9], #2
 80256a2:	9b08      	ldr	r3, [sp, #32]
 80256a4:	9a05      	ldr	r2, [sp, #20]
 80256a6:	881c      	ldrh	r4, [r3, #0]
 80256a8:	9b03      	ldr	r3, [sp, #12]
 80256aa:	1ae4      	subs	r4, r4, r3
 80256ac:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80256b0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80256b4:	4413      	add	r3, r2
 80256b6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80256b8:	fb93 f3f2 	sdiv	r3, r3, r2
 80256bc:	441e      	add	r6, r3
 80256be:	e796      	b.n	80255ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80256c0:	4f46      	ldr	r7, [pc, #280]	@ (80257dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80256c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80256c6:	42a3      	cmp	r3, r4
 80256c8:	d97c      	bls.n	80257c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80256ca:	9a06      	ldr	r2, [sp, #24]
 80256cc:	2a00      	cmp	r2, #0
 80256ce:	d054      	beq.n	802577a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80256d0:	7830      	ldrb	r0, [r6, #0]
 80256d2:	f000 000f 	and.w	r0, r0, #15
 80256d6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80256da:	eb05 0e00 	add.w	lr, r5, r0
 80256de:	5c28      	ldrb	r0, [r5, r0]
 80256e0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80256e4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80256e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80256ec:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80256f0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80256f4:	ea42 020e 	orr.w	r2, r2, lr
 80256f8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80256fc:	f824 2b02 	strh.w	r2, [r4], #2
 8025700:	9a03      	ldr	r2, [sp, #12]
 8025702:	1c71      	adds	r1, r6, #1
 8025704:	f102 3eff 	add.w	lr, r2, #4294967295
 8025708:	f1be 0f01 	cmp.w	lr, #1
 802570c:	4620      	mov	r0, r4
 802570e:	f104 0404 	add.w	r4, r4, #4
 8025712:	dd36      	ble.n	8025782 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025714:	7808      	ldrb	r0, [r1, #0]
 8025716:	0900      	lsrs	r0, r0, #4
 8025718:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802571c:	eb05 0a00 	add.w	sl, r5, r0
 8025720:	f1ae 0e02 	sub.w	lr, lr, #2
 8025724:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025728:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802572c:	00d2      	lsls	r2, r2, #3
 802572e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025732:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025736:	ea49 0202 	orr.w	r2, r9, r2
 802573a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802573e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025742:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025746:	f811 0b01 	ldrb.w	r0, [r1], #1
 802574a:	f000 000f 	and.w	r0, r0, #15
 802574e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025752:	eb05 0a00 	add.w	sl, r5, r0
 8025756:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802575a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802575e:	00d2      	lsls	r2, r2, #3
 8025760:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025764:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025768:	ea49 0202 	orr.w	r2, r9, r2
 802576c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025770:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025774:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025778:	e7c6      	b.n	8025708 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802577a:	4631      	mov	r1, r6
 802577c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025780:	e7c2      	b.n	8025708 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025782:	d111      	bne.n	80257a8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025784:	7809      	ldrb	r1, [r1, #0]
 8025786:	0909      	lsrs	r1, r1, #4
 8025788:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802578c:	186c      	adds	r4, r5, r1
 802578e:	5c69      	ldrb	r1, [r5, r1]
 8025790:	78a2      	ldrb	r2, [r4, #2]
 8025792:	7864      	ldrb	r4, [r4, #1]
 8025794:	00e4      	lsls	r4, r4, #3
 8025796:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802579a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802579e:	4322      	orrs	r2, r4
 80257a0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80257a4:	f820 2b02 	strh.w	r2, [r0], #2
 80257a8:	9a03      	ldr	r2, [sp, #12]
 80257aa:	f8bc 4000 	ldrh.w	r4, [ip]
 80257ae:	9905      	ldr	r1, [sp, #20]
 80257b0:	1aa4      	subs	r4, r4, r2
 80257b2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80257b6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80257ba:	440a      	add	r2, r1
 80257bc:	fb92 f2f8 	sdiv	r2, r2, r8
 80257c0:	4416      	add	r6, r2
 80257c2:	e780      	b.n	80256c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80257c4:	4b03      	ldr	r3, [pc, #12]	@ (80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80257c6:	6818      	ldr	r0, [r3, #0]
 80257c8:	6803      	ldr	r3, [r0, #0]
 80257ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80257cc:	4798      	blx	r3
 80257ce:	b00f      	add	sp, #60	@ 0x3c
 80257d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80257d4:	20002f54 	.word	0x20002f54
 80257d8:	20002f4e 	.word	0x20002f4e
 80257dc:	fffff800 	.word	0xfffff800

080257e0 <CRC_Lock>:
 80257e0:	b530      	push	{r4, r5, lr}
 80257e2:	4a2d      	ldr	r2, [pc, #180]	@ (8025898 <CRC_Lock+0xb8>)
 80257e4:	6813      	ldr	r3, [r2, #0]
 80257e6:	f023 0301 	bic.w	r3, r3, #1
 80257ea:	6013      	str	r3, [r2, #0]
 80257ec:	4b2b      	ldr	r3, [pc, #172]	@ (802589c <CRC_Lock+0xbc>)
 80257ee:	681c      	ldr	r4, [r3, #0]
 80257f0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80257f4:	4014      	ands	r4, r2
 80257f6:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80257fa:	42ac      	cmp	r4, r5
 80257fc:	d005      	beq.n	802580a <CRC_Lock+0x2a>
 80257fe:	681c      	ldr	r4, [r3, #0]
 8025800:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8025804:	4014      	ands	r4, r2
 8025806:	42ac      	cmp	r4, r5
 8025808:	d125      	bne.n	8025856 <CRC_Lock+0x76>
 802580a:	4b25      	ldr	r3, [pc, #148]	@ (80258a0 <CRC_Lock+0xc0>)
 802580c:	681b      	ldr	r3, [r3, #0]
 802580e:	2b00      	cmp	r3, #0
 8025810:	d139      	bne.n	8025886 <CRC_Lock+0xa6>
 8025812:	4b24      	ldr	r3, [pc, #144]	@ (80258a4 <CRC_Lock+0xc4>)
 8025814:	681a      	ldr	r2, [r3, #0]
 8025816:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802581a:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802581e:	d00d      	beq.n	802583c <CRC_Lock+0x5c>
 8025820:	681a      	ldr	r2, [r3, #0]
 8025822:	f240 4483 	movw	r4, #1155	@ 0x483
 8025826:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802582a:	42a2      	cmp	r2, r4
 802582c:	d006      	beq.n	802583c <CRC_Lock+0x5c>
 802582e:	681b      	ldr	r3, [r3, #0]
 8025830:	f240 4285 	movw	r2, #1157	@ 0x485
 8025834:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025838:	4293      	cmp	r3, r2
 802583a:	d124      	bne.n	8025886 <CRC_Lock+0xa6>
 802583c:	4b1a      	ldr	r3, [pc, #104]	@ (80258a8 <CRC_Lock+0xc8>)
 802583e:	2201      	movs	r2, #1
 8025840:	601a      	str	r2, [r3, #0]
 8025842:	681a      	ldr	r2, [r3, #0]
 8025844:	2a00      	cmp	r2, #0
 8025846:	d1fc      	bne.n	8025842 <CRC_Lock+0x62>
 8025848:	4b18      	ldr	r3, [pc, #96]	@ (80258ac <CRC_Lock+0xcc>)
 802584a:	6018      	str	r0, [r3, #0]
 802584c:	6818      	ldr	r0, [r3, #0]
 802584e:	1a43      	subs	r3, r0, r1
 8025850:	4258      	negs	r0, r3
 8025852:	4158      	adcs	r0, r3
 8025854:	e00e      	b.n	8025874 <CRC_Lock+0x94>
 8025856:	681b      	ldr	r3, [r3, #0]
 8025858:	4013      	ands	r3, r2
 802585a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 802585e:	4293      	cmp	r3, r2
 8025860:	d111      	bne.n	8025886 <CRC_Lock+0xa6>
 8025862:	4b13      	ldr	r3, [pc, #76]	@ (80258b0 <CRC_Lock+0xd0>)
 8025864:	681b      	ldr	r3, [r3, #0]
 8025866:	f240 4286 	movw	r2, #1158	@ 0x486
 802586a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802586e:	4293      	cmp	r3, r2
 8025870:	d001      	beq.n	8025876 <CRC_Lock+0x96>
 8025872:	2000      	movs	r0, #0
 8025874:	bd30      	pop	{r4, r5, pc}
 8025876:	4b0f      	ldr	r3, [pc, #60]	@ (80258b4 <CRC_Lock+0xd4>)
 8025878:	2201      	movs	r2, #1
 802587a:	601a      	str	r2, [r3, #0]
 802587c:	681a      	ldr	r2, [r3, #0]
 802587e:	2a00      	cmp	r2, #0
 8025880:	d1fc      	bne.n	802587c <CRC_Lock+0x9c>
 8025882:	4b0d      	ldr	r3, [pc, #52]	@ (80258b8 <CRC_Lock+0xd8>)
 8025884:	e7e1      	b.n	802584a <CRC_Lock+0x6a>
 8025886:	4b0d      	ldr	r3, [pc, #52]	@ (80258bc <CRC_Lock+0xdc>)
 8025888:	2201      	movs	r2, #1
 802588a:	601a      	str	r2, [r3, #0]
 802588c:	681a      	ldr	r2, [r3, #0]
 802588e:	2a00      	cmp	r2, #0
 8025890:	d1fc      	bne.n	802588c <CRC_Lock+0xac>
 8025892:	4b0b      	ldr	r3, [pc, #44]	@ (80258c0 <CRC_Lock+0xe0>)
 8025894:	e7d9      	b.n	802584a <CRC_Lock+0x6a>
 8025896:	bf00      	nop
 8025898:	e0002000 	.word	0xe0002000
 802589c:	e000ed00 	.word	0xe000ed00
 80258a0:	e0042000 	.word	0xe0042000
 80258a4:	5c001000 	.word	0x5c001000
 80258a8:	58024c08 	.word	0x58024c08
 80258ac:	58024c00 	.word	0x58024c00
 80258b0:	46008ff0 	.word	0x46008ff0
 80258b4:	46024c08 	.word	0x46024c08
 80258b8:	46024c00 	.word	0x46024c00
 80258bc:	40023008 	.word	0x40023008
 80258c0:	40023000 	.word	0x40023000

080258c4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 80258c4:	6101      	str	r1, [r0, #16]
 80258c6:	4770      	bx	lr

080258c8 <_ZN8touchgfx8Gestures4tickEv>:
 80258c8:	7b83      	ldrb	r3, [r0, #14]
 80258ca:	b14b      	cbz	r3, 80258e0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 80258cc:	8903      	ldrh	r3, [r0, #8]
 80258ce:	3301      	adds	r3, #1
 80258d0:	b29b      	uxth	r3, r3
 80258d2:	2b07      	cmp	r3, #7
 80258d4:	8103      	strh	r3, [r0, #8]
 80258d6:	bf81      	itttt	hi
 80258d8:	2300      	movhi	r3, #0
 80258da:	8143      	strhhi	r3, [r0, #10]
 80258dc:	8183      	strhhi	r3, [r0, #12]
 80258de:	7383      	strbhi	r3, [r0, #14]
 80258e0:	4770      	bx	lr
	...

080258e4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 80258e4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80258e8:	4698      	mov	r8, r3
 80258ea:	8883      	ldrh	r3, [r0, #4]
 80258ec:	f8ad 3006 	strh.w	r3, [sp, #6]
 80258f0:	eba8 0303 	sub.w	r3, r8, r3
 80258f4:	b21b      	sxth	r3, r3
 80258f6:	4604      	mov	r4, r0
 80258f8:	2b00      	cmp	r3, #0
 80258fa:	4617      	mov	r7, r2
 80258fc:	4a18      	ldr	r2, [pc, #96]	@ (8025960 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 80258fe:	9200      	str	r2, [sp, #0]
 8025900:	bfb8      	it	lt
 8025902:	425b      	neglt	r3, r3
 8025904:	8aa2      	ldrh	r2, [r4, #20]
 8025906:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 802590a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802590e:	b21b      	sxth	r3, r3
 8025910:	460e      	mov	r6, r1
 8025912:	4293      	cmp	r3, r2
 8025914:	88c1      	ldrh	r1, [r0, #6]
 8025916:	f8ad 1008 	strh.w	r1, [sp, #8]
 802591a:	f04f 0000 	mov.w	r0, #0
 802591e:	f88d 0004 	strb.w	r0, [sp, #4]
 8025922:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025926:	dc07      	bgt.n	8025938 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025928:	1a69      	subs	r1, r5, r1
 802592a:	b209      	sxth	r1, r1
 802592c:	2900      	cmp	r1, #0
 802592e:	bfb8      	it	lt
 8025930:	4249      	neglt	r1, r1
 8025932:	b209      	sxth	r1, r1
 8025934:	428a      	cmp	r2, r1
 8025936:	da10      	bge.n	802595a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025938:	6920      	ldr	r0, [r4, #16]
 802593a:	6803      	ldr	r3, [r0, #0]
 802593c:	4669      	mov	r1, sp
 802593e:	685b      	ldr	r3, [r3, #4]
 8025940:	4798      	blx	r3
 8025942:	eba8 0606 	sub.w	r6, r8, r6
 8025946:	2300      	movs	r3, #0
 8025948:	1bef      	subs	r7, r5, r7
 802594a:	2001      	movs	r0, #1
 802594c:	8123      	strh	r3, [r4, #8]
 802594e:	8166      	strh	r6, [r4, #10]
 8025950:	81a7      	strh	r7, [r4, #12]
 8025952:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025956:	80e5      	strh	r5, [r4, #6]
 8025958:	73a0      	strb	r0, [r4, #14]
 802595a:	b004      	add	sp, #16
 802595c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025960:	08029514 	.word	0x08029514

08025964 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025964:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025966:	461e      	mov	r6, r3
 8025968:	1e4b      	subs	r3, r1, #1
 802596a:	2b01      	cmp	r3, #1
 802596c:	b085      	sub	sp, #20
 802596e:	4604      	mov	r4, r0
 8025970:	460d      	mov	r5, r1
 8025972:	4617      	mov	r7, r2
 8025974:	d84b      	bhi.n	8025a0e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025976:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802597a:	1cd3      	adds	r3, r2, #3
 802597c:	b29b      	uxth	r3, r3
 802597e:	2b06      	cmp	r3, #6
 8025980:	d916      	bls.n	80259b0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025982:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8025a24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025986:	f8cd c004 	str.w	ip, [sp, #4]
 802598a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802598e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025992:	6900      	ldr	r0, [r0, #16]
 8025994:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025998:	f04f 0c00 	mov.w	ip, #0
 802599c:	f88d c008 	strb.w	ip, [sp, #8]
 80259a0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80259a4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80259a8:	6803      	ldr	r3, [r0, #0]
 80259aa:	a901      	add	r1, sp, #4
 80259ac:	689b      	ldr	r3, [r3, #8]
 80259ae:	4798      	blx	r3
 80259b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80259b4:	1cd3      	adds	r3, r2, #3
 80259b6:	b29b      	uxth	r3, r3
 80259b8:	2b06      	cmp	r3, #6
 80259ba:	d916      	bls.n	80259ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80259bc:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8025a24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80259c0:	f8cd c004 	str.w	ip, [sp, #4]
 80259c4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80259c8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80259cc:	6920      	ldr	r0, [r4, #16]
 80259ce:	f8ad 100c 	strh.w	r1, [sp, #12]
 80259d2:	f04f 0c01 	mov.w	ip, #1
 80259d6:	f88d c008 	strb.w	ip, [sp, #8]
 80259da:	f8ad 200a 	strh.w	r2, [sp, #10]
 80259de:	f8ad 300e 	strh.w	r3, [sp, #14]
 80259e2:	6803      	ldr	r3, [r0, #0]
 80259e4:	a901      	add	r1, sp, #4
 80259e6:	689b      	ldr	r3, [r3, #8]
 80259e8:	4798      	blx	r3
 80259ea:	4b0d      	ldr	r3, [pc, #52]	@ (8025a20 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 80259ec:	9301      	str	r3, [sp, #4]
 80259ee:	6920      	ldr	r0, [r4, #16]
 80259f0:	f88d 5008 	strb.w	r5, [sp, #8]
 80259f4:	2300      	movs	r3, #0
 80259f6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80259fa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80259fe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025a02:	6803      	ldr	r3, [r0, #0]
 8025a04:	a901      	add	r1, sp, #4
 8025a06:	681b      	ldr	r3, [r3, #0]
 8025a08:	4798      	blx	r3
 8025a0a:	b005      	add	sp, #20
 8025a0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025a0e:	2900      	cmp	r1, #0
 8025a10:	d1eb      	bne.n	80259ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025a12:	80a2      	strh	r2, [r4, #4]
 8025a14:	80c6      	strh	r6, [r0, #6]
 8025a16:	60a1      	str	r1, [r4, #8]
 8025a18:	81a1      	strh	r1, [r4, #12]
 8025a1a:	73a1      	strb	r1, [r4, #14]
 8025a1c:	e7e5      	b.n	80259ea <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025a1e:	bf00      	nop
 8025a20:	08029500 	.word	0x08029500
 8025a24:	08029528 	.word	0x08029528

08025a28 <__aeabi_atexit>:
 8025a28:	460b      	mov	r3, r1
 8025a2a:	4601      	mov	r1, r0
 8025a2c:	4618      	mov	r0, r3
 8025a2e:	f000 b991 	b.w	8025d54 <__cxa_atexit>

08025a32 <_ZdlPvj>:
 8025a32:	f000 b812 	b.w	8025a5a <_ZdlPv>

08025a36 <__cxa_guard_acquire>:
 8025a36:	6802      	ldr	r2, [r0, #0]
 8025a38:	07d2      	lsls	r2, r2, #31
 8025a3a:	4603      	mov	r3, r0
 8025a3c:	d405      	bmi.n	8025a4a <__cxa_guard_acquire+0x14>
 8025a3e:	7842      	ldrb	r2, [r0, #1]
 8025a40:	b102      	cbz	r2, 8025a44 <__cxa_guard_acquire+0xe>
 8025a42:	deff      	udf	#255	@ 0xff
 8025a44:	2001      	movs	r0, #1
 8025a46:	7058      	strb	r0, [r3, #1]
 8025a48:	4770      	bx	lr
 8025a4a:	2000      	movs	r0, #0
 8025a4c:	4770      	bx	lr

08025a4e <__cxa_guard_release>:
 8025a4e:	2301      	movs	r3, #1
 8025a50:	6003      	str	r3, [r0, #0]
 8025a52:	4770      	bx	lr

08025a54 <__cxa_pure_virtual>:
 8025a54:	b508      	push	{r3, lr}
 8025a56:	f000 f80f 	bl	8025a78 <_ZSt9terminatev>

08025a5a <_ZdlPv>:
 8025a5a:	f000 b8c5 	b.w	8025be8 <free>

08025a5e <_ZN10__cxxabiv111__terminateEPFvvE>:
 8025a5e:	b508      	push	{r3, lr}
 8025a60:	4780      	blx	r0
 8025a62:	f000 f88d 	bl	8025b80 <abort>
	...

08025a68 <_ZSt13get_terminatev>:
 8025a68:	4b02      	ldr	r3, [pc, #8]	@ (8025a74 <_ZSt13get_terminatev+0xc>)
 8025a6a:	6818      	ldr	r0, [r3, #0]
 8025a6c:	f3bf 8f5b 	dmb	ish
 8025a70:	4770      	bx	lr
 8025a72:	bf00      	nop
 8025a74:	200000a8 	.word	0x200000a8

08025a78 <_ZSt9terminatev>:
 8025a78:	b508      	push	{r3, lr}
 8025a7a:	f7ff fff5 	bl	8025a68 <_ZSt13get_terminatev>
 8025a7e:	f7ff ffee 	bl	8025a5e <_ZN10__cxxabiv111__terminateEPFvvE>
 8025a82:	0000      	movs	r0, r0
 8025a84:	0000      	movs	r0, r0
	...

08025a88 <floor>:
 8025a88:	ec51 0b10 	vmov	r0, r1, d0
 8025a8c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8025a90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025a94:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8025a98:	2e13      	cmp	r6, #19
 8025a9a:	460c      	mov	r4, r1
 8025a9c:	4605      	mov	r5, r0
 8025a9e:	4680      	mov	r8, r0
 8025aa0:	dc34      	bgt.n	8025b0c <floor+0x84>
 8025aa2:	2e00      	cmp	r6, #0
 8025aa4:	da17      	bge.n	8025ad6 <floor+0x4e>
 8025aa6:	a332      	add	r3, pc, #200	@ (adr r3, 8025b70 <floor+0xe8>)
 8025aa8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025aac:	f7da fc06 	bl	80002bc <__adddf3>
 8025ab0:	2200      	movs	r2, #0
 8025ab2:	2300      	movs	r3, #0
 8025ab4:	f7db f848 	bl	8000b48 <__aeabi_dcmpgt>
 8025ab8:	b150      	cbz	r0, 8025ad0 <floor+0x48>
 8025aba:	2c00      	cmp	r4, #0
 8025abc:	da55      	bge.n	8025b6a <floor+0xe2>
 8025abe:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8025ac2:	432c      	orrs	r4, r5
 8025ac4:	2500      	movs	r5, #0
 8025ac6:	42ac      	cmp	r4, r5
 8025ac8:	4c2b      	ldr	r4, [pc, #172]	@ (8025b78 <floor+0xf0>)
 8025aca:	bf08      	it	eq
 8025acc:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8025ad0:	4621      	mov	r1, r4
 8025ad2:	4628      	mov	r0, r5
 8025ad4:	e023      	b.n	8025b1e <floor+0x96>
 8025ad6:	4f29      	ldr	r7, [pc, #164]	@ (8025b7c <floor+0xf4>)
 8025ad8:	4137      	asrs	r7, r6
 8025ada:	ea01 0307 	and.w	r3, r1, r7
 8025ade:	4303      	orrs	r3, r0
 8025ae0:	d01d      	beq.n	8025b1e <floor+0x96>
 8025ae2:	a323      	add	r3, pc, #140	@ (adr r3, 8025b70 <floor+0xe8>)
 8025ae4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025ae8:	f7da fbe8 	bl	80002bc <__adddf3>
 8025aec:	2200      	movs	r2, #0
 8025aee:	2300      	movs	r3, #0
 8025af0:	f7db f82a 	bl	8000b48 <__aeabi_dcmpgt>
 8025af4:	2800      	cmp	r0, #0
 8025af6:	d0eb      	beq.n	8025ad0 <floor+0x48>
 8025af8:	2c00      	cmp	r4, #0
 8025afa:	bfbe      	ittt	lt
 8025afc:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8025b00:	4133      	asrlt	r3, r6
 8025b02:	18e4      	addlt	r4, r4, r3
 8025b04:	ea24 0407 	bic.w	r4, r4, r7
 8025b08:	2500      	movs	r5, #0
 8025b0a:	e7e1      	b.n	8025ad0 <floor+0x48>
 8025b0c:	2e33      	cmp	r6, #51	@ 0x33
 8025b0e:	dd0a      	ble.n	8025b26 <floor+0x9e>
 8025b10:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8025b14:	d103      	bne.n	8025b1e <floor+0x96>
 8025b16:	4602      	mov	r2, r0
 8025b18:	460b      	mov	r3, r1
 8025b1a:	f7da fbcf 	bl	80002bc <__adddf3>
 8025b1e:	ec41 0b10 	vmov	d0, r0, r1
 8025b22:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025b26:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8025b2a:	f04f 37ff 	mov.w	r7, #4294967295
 8025b2e:	40df      	lsrs	r7, r3
 8025b30:	4207      	tst	r7, r0
 8025b32:	d0f4      	beq.n	8025b1e <floor+0x96>
 8025b34:	a30e      	add	r3, pc, #56	@ (adr r3, 8025b70 <floor+0xe8>)
 8025b36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025b3a:	f7da fbbf 	bl	80002bc <__adddf3>
 8025b3e:	2200      	movs	r2, #0
 8025b40:	2300      	movs	r3, #0
 8025b42:	f7db f801 	bl	8000b48 <__aeabi_dcmpgt>
 8025b46:	2800      	cmp	r0, #0
 8025b48:	d0c2      	beq.n	8025ad0 <floor+0x48>
 8025b4a:	2c00      	cmp	r4, #0
 8025b4c:	da0a      	bge.n	8025b64 <floor+0xdc>
 8025b4e:	2e14      	cmp	r6, #20
 8025b50:	d101      	bne.n	8025b56 <floor+0xce>
 8025b52:	3401      	adds	r4, #1
 8025b54:	e006      	b.n	8025b64 <floor+0xdc>
 8025b56:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8025b5a:	2301      	movs	r3, #1
 8025b5c:	40b3      	lsls	r3, r6
 8025b5e:	441d      	add	r5, r3
 8025b60:	4545      	cmp	r5, r8
 8025b62:	d3f6      	bcc.n	8025b52 <floor+0xca>
 8025b64:	ea25 0507 	bic.w	r5, r5, r7
 8025b68:	e7b2      	b.n	8025ad0 <floor+0x48>
 8025b6a:	2500      	movs	r5, #0
 8025b6c:	462c      	mov	r4, r5
 8025b6e:	e7af      	b.n	8025ad0 <floor+0x48>
 8025b70:	8800759c 	.word	0x8800759c
 8025b74:	7e37e43c 	.word	0x7e37e43c
 8025b78:	bff00000 	.word	0xbff00000
 8025b7c:	000fffff 	.word	0x000fffff

08025b80 <abort>:
 8025b80:	b508      	push	{r3, lr}
 8025b82:	2006      	movs	r0, #6
 8025b84:	f000 fa3c 	bl	8026000 <raise>
 8025b88:	2001      	movs	r0, #1
 8025b8a:	f7dc f94f 	bl	8001e2c <_exit>
	...

08025b90 <__assert_func>:
 8025b90:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8025b92:	4614      	mov	r4, r2
 8025b94:	461a      	mov	r2, r3
 8025b96:	4b09      	ldr	r3, [pc, #36]	@ (8025bbc <__assert_func+0x2c>)
 8025b98:	681b      	ldr	r3, [r3, #0]
 8025b9a:	4605      	mov	r5, r0
 8025b9c:	68d8      	ldr	r0, [r3, #12]
 8025b9e:	b954      	cbnz	r4, 8025bb6 <__assert_func+0x26>
 8025ba0:	4b07      	ldr	r3, [pc, #28]	@ (8025bc0 <__assert_func+0x30>)
 8025ba2:	461c      	mov	r4, r3
 8025ba4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8025ba8:	9100      	str	r1, [sp, #0]
 8025baa:	462b      	mov	r3, r5
 8025bac:	4905      	ldr	r1, [pc, #20]	@ (8025bc4 <__assert_func+0x34>)
 8025bae:	f000 f983 	bl	8025eb8 <fiprintf>
 8025bb2:	f7ff ffe5 	bl	8025b80 <abort>
 8025bb6:	4b04      	ldr	r3, [pc, #16]	@ (8025bc8 <__assert_func+0x38>)
 8025bb8:	e7f4      	b.n	8025ba4 <__assert_func+0x14>
 8025bba:	bf00      	nop
 8025bbc:	200000b8 	.word	0x200000b8
 8025bc0:	08029897 	.word	0x08029897
 8025bc4:	08029869 	.word	0x08029869
 8025bc8:	0802985c 	.word	0x0802985c

08025bcc <atexit>:
 8025bcc:	2300      	movs	r3, #0
 8025bce:	4601      	mov	r1, r0
 8025bd0:	461a      	mov	r2, r3
 8025bd2:	4618      	mov	r0, r3
 8025bd4:	f000 bac2 	b.w	802615c <__register_exitproc>

08025bd8 <malloc>:
 8025bd8:	4b02      	ldr	r3, [pc, #8]	@ (8025be4 <malloc+0xc>)
 8025bda:	4601      	mov	r1, r0
 8025bdc:	6818      	ldr	r0, [r3, #0]
 8025bde:	f000 b82d 	b.w	8025c3c <_malloc_r>
 8025be2:	bf00      	nop
 8025be4:	200000b8 	.word	0x200000b8

08025be8 <free>:
 8025be8:	4b02      	ldr	r3, [pc, #8]	@ (8025bf4 <free+0xc>)
 8025bea:	4601      	mov	r1, r0
 8025bec:	6818      	ldr	r0, [r3, #0]
 8025bee:	f000 bb11 	b.w	8026214 <_free_r>
 8025bf2:	bf00      	nop
 8025bf4:	200000b8 	.word	0x200000b8

08025bf8 <sbrk_aligned>:
 8025bf8:	b570      	push	{r4, r5, r6, lr}
 8025bfa:	4e0f      	ldr	r6, [pc, #60]	@ (8025c38 <sbrk_aligned+0x40>)
 8025bfc:	460c      	mov	r4, r1
 8025bfe:	6831      	ldr	r1, [r6, #0]
 8025c00:	4605      	mov	r5, r0
 8025c02:	b911      	cbnz	r1, 8025c0a <sbrk_aligned+0x12>
 8025c04:	f000 fa4c 	bl	80260a0 <_sbrk_r>
 8025c08:	6030      	str	r0, [r6, #0]
 8025c0a:	4621      	mov	r1, r4
 8025c0c:	4628      	mov	r0, r5
 8025c0e:	f000 fa47 	bl	80260a0 <_sbrk_r>
 8025c12:	1c43      	adds	r3, r0, #1
 8025c14:	d103      	bne.n	8025c1e <sbrk_aligned+0x26>
 8025c16:	f04f 34ff 	mov.w	r4, #4294967295
 8025c1a:	4620      	mov	r0, r4
 8025c1c:	bd70      	pop	{r4, r5, r6, pc}
 8025c1e:	1cc4      	adds	r4, r0, #3
 8025c20:	f024 0403 	bic.w	r4, r4, #3
 8025c24:	42a0      	cmp	r0, r4
 8025c26:	d0f8      	beq.n	8025c1a <sbrk_aligned+0x22>
 8025c28:	1a21      	subs	r1, r4, r0
 8025c2a:	4628      	mov	r0, r5
 8025c2c:	f000 fa38 	bl	80260a0 <_sbrk_r>
 8025c30:	3001      	adds	r0, #1
 8025c32:	d1f2      	bne.n	8025c1a <sbrk_aligned+0x22>
 8025c34:	e7ef      	b.n	8025c16 <sbrk_aligned+0x1e>
 8025c36:	bf00      	nop
 8025c38:	200039a8 	.word	0x200039a8

08025c3c <_malloc_r>:
 8025c3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025c40:	1ccd      	adds	r5, r1, #3
 8025c42:	f025 0503 	bic.w	r5, r5, #3
 8025c46:	3508      	adds	r5, #8
 8025c48:	2d0c      	cmp	r5, #12
 8025c4a:	bf38      	it	cc
 8025c4c:	250c      	movcc	r5, #12
 8025c4e:	2d00      	cmp	r5, #0
 8025c50:	4606      	mov	r6, r0
 8025c52:	db01      	blt.n	8025c58 <_malloc_r+0x1c>
 8025c54:	42a9      	cmp	r1, r5
 8025c56:	d904      	bls.n	8025c62 <_malloc_r+0x26>
 8025c58:	230c      	movs	r3, #12
 8025c5a:	6033      	str	r3, [r6, #0]
 8025c5c:	2000      	movs	r0, #0
 8025c5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025c62:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8025d38 <_malloc_r+0xfc>
 8025c66:	f000 f869 	bl	8025d3c <__malloc_lock>
 8025c6a:	f8d8 3000 	ldr.w	r3, [r8]
 8025c6e:	461c      	mov	r4, r3
 8025c70:	bb44      	cbnz	r4, 8025cc4 <_malloc_r+0x88>
 8025c72:	4629      	mov	r1, r5
 8025c74:	4630      	mov	r0, r6
 8025c76:	f7ff ffbf 	bl	8025bf8 <sbrk_aligned>
 8025c7a:	1c43      	adds	r3, r0, #1
 8025c7c:	4604      	mov	r4, r0
 8025c7e:	d158      	bne.n	8025d32 <_malloc_r+0xf6>
 8025c80:	f8d8 4000 	ldr.w	r4, [r8]
 8025c84:	4627      	mov	r7, r4
 8025c86:	2f00      	cmp	r7, #0
 8025c88:	d143      	bne.n	8025d12 <_malloc_r+0xd6>
 8025c8a:	2c00      	cmp	r4, #0
 8025c8c:	d04b      	beq.n	8025d26 <_malloc_r+0xea>
 8025c8e:	6823      	ldr	r3, [r4, #0]
 8025c90:	4639      	mov	r1, r7
 8025c92:	4630      	mov	r0, r6
 8025c94:	eb04 0903 	add.w	r9, r4, r3
 8025c98:	f000 fa02 	bl	80260a0 <_sbrk_r>
 8025c9c:	4581      	cmp	r9, r0
 8025c9e:	d142      	bne.n	8025d26 <_malloc_r+0xea>
 8025ca0:	6821      	ldr	r1, [r4, #0]
 8025ca2:	1a6d      	subs	r5, r5, r1
 8025ca4:	4629      	mov	r1, r5
 8025ca6:	4630      	mov	r0, r6
 8025ca8:	f7ff ffa6 	bl	8025bf8 <sbrk_aligned>
 8025cac:	3001      	adds	r0, #1
 8025cae:	d03a      	beq.n	8025d26 <_malloc_r+0xea>
 8025cb0:	6823      	ldr	r3, [r4, #0]
 8025cb2:	442b      	add	r3, r5
 8025cb4:	6023      	str	r3, [r4, #0]
 8025cb6:	f8d8 3000 	ldr.w	r3, [r8]
 8025cba:	685a      	ldr	r2, [r3, #4]
 8025cbc:	bb62      	cbnz	r2, 8025d18 <_malloc_r+0xdc>
 8025cbe:	f8c8 7000 	str.w	r7, [r8]
 8025cc2:	e00f      	b.n	8025ce4 <_malloc_r+0xa8>
 8025cc4:	6822      	ldr	r2, [r4, #0]
 8025cc6:	1b52      	subs	r2, r2, r5
 8025cc8:	d420      	bmi.n	8025d0c <_malloc_r+0xd0>
 8025cca:	2a0b      	cmp	r2, #11
 8025ccc:	d917      	bls.n	8025cfe <_malloc_r+0xc2>
 8025cce:	1961      	adds	r1, r4, r5
 8025cd0:	42a3      	cmp	r3, r4
 8025cd2:	6025      	str	r5, [r4, #0]
 8025cd4:	bf18      	it	ne
 8025cd6:	6059      	strne	r1, [r3, #4]
 8025cd8:	6863      	ldr	r3, [r4, #4]
 8025cda:	bf08      	it	eq
 8025cdc:	f8c8 1000 	streq.w	r1, [r8]
 8025ce0:	5162      	str	r2, [r4, r5]
 8025ce2:	604b      	str	r3, [r1, #4]
 8025ce4:	4630      	mov	r0, r6
 8025ce6:	f000 f82f 	bl	8025d48 <__malloc_unlock>
 8025cea:	f104 000b 	add.w	r0, r4, #11
 8025cee:	1d23      	adds	r3, r4, #4
 8025cf0:	f020 0007 	bic.w	r0, r0, #7
 8025cf4:	1ac2      	subs	r2, r0, r3
 8025cf6:	bf1c      	itt	ne
 8025cf8:	1a1b      	subne	r3, r3, r0
 8025cfa:	50a3      	strne	r3, [r4, r2]
 8025cfc:	e7af      	b.n	8025c5e <_malloc_r+0x22>
 8025cfe:	6862      	ldr	r2, [r4, #4]
 8025d00:	42a3      	cmp	r3, r4
 8025d02:	bf0c      	ite	eq
 8025d04:	f8c8 2000 	streq.w	r2, [r8]
 8025d08:	605a      	strne	r2, [r3, #4]
 8025d0a:	e7eb      	b.n	8025ce4 <_malloc_r+0xa8>
 8025d0c:	4623      	mov	r3, r4
 8025d0e:	6864      	ldr	r4, [r4, #4]
 8025d10:	e7ae      	b.n	8025c70 <_malloc_r+0x34>
 8025d12:	463c      	mov	r4, r7
 8025d14:	687f      	ldr	r7, [r7, #4]
 8025d16:	e7b6      	b.n	8025c86 <_malloc_r+0x4a>
 8025d18:	461a      	mov	r2, r3
 8025d1a:	685b      	ldr	r3, [r3, #4]
 8025d1c:	42a3      	cmp	r3, r4
 8025d1e:	d1fb      	bne.n	8025d18 <_malloc_r+0xdc>
 8025d20:	2300      	movs	r3, #0
 8025d22:	6053      	str	r3, [r2, #4]
 8025d24:	e7de      	b.n	8025ce4 <_malloc_r+0xa8>
 8025d26:	230c      	movs	r3, #12
 8025d28:	6033      	str	r3, [r6, #0]
 8025d2a:	4630      	mov	r0, r6
 8025d2c:	f000 f80c 	bl	8025d48 <__malloc_unlock>
 8025d30:	e794      	b.n	8025c5c <_malloc_r+0x20>
 8025d32:	6005      	str	r5, [r0, #0]
 8025d34:	e7d6      	b.n	8025ce4 <_malloc_r+0xa8>
 8025d36:	bf00      	nop
 8025d38:	200039ac 	.word	0x200039ac

08025d3c <__malloc_lock>:
 8025d3c:	4801      	ldr	r0, [pc, #4]	@ (8025d44 <__malloc_lock+0x8>)
 8025d3e:	f000 b9fc 	b.w	802613a <__retarget_lock_acquire_recursive>
 8025d42:	bf00      	nop
 8025d44:	20003af0 	.word	0x20003af0

08025d48 <__malloc_unlock>:
 8025d48:	4801      	ldr	r0, [pc, #4]	@ (8025d50 <__malloc_unlock+0x8>)
 8025d4a:	f000 b9f7 	b.w	802613c <__retarget_lock_release_recursive>
 8025d4e:	bf00      	nop
 8025d50:	20003af0 	.word	0x20003af0

08025d54 <__cxa_atexit>:
 8025d54:	b510      	push	{r4, lr}
 8025d56:	4604      	mov	r4, r0
 8025d58:	4804      	ldr	r0, [pc, #16]	@ (8025d6c <__cxa_atexit+0x18>)
 8025d5a:	4613      	mov	r3, r2
 8025d5c:	b120      	cbz	r0, 8025d68 <__cxa_atexit+0x14>
 8025d5e:	460a      	mov	r2, r1
 8025d60:	2002      	movs	r0, #2
 8025d62:	4621      	mov	r1, r4
 8025d64:	f000 f9fa 	bl	802615c <__register_exitproc>
 8025d68:	bd10      	pop	{r4, pc}
 8025d6a:	bf00      	nop
 8025d6c:	0802615d 	.word	0x0802615d

08025d70 <std>:
 8025d70:	2300      	movs	r3, #0
 8025d72:	b510      	push	{r4, lr}
 8025d74:	4604      	mov	r4, r0
 8025d76:	e9c0 3300 	strd	r3, r3, [r0]
 8025d7a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025d7e:	6083      	str	r3, [r0, #8]
 8025d80:	8181      	strh	r1, [r0, #12]
 8025d82:	6643      	str	r3, [r0, #100]	@ 0x64
 8025d84:	81c2      	strh	r2, [r0, #14]
 8025d86:	6183      	str	r3, [r0, #24]
 8025d88:	4619      	mov	r1, r3
 8025d8a:	2208      	movs	r2, #8
 8025d8c:	305c      	adds	r0, #92	@ 0x5c
 8025d8e:	f000 f906 	bl	8025f9e <memset>
 8025d92:	4b0d      	ldr	r3, [pc, #52]	@ (8025dc8 <std+0x58>)
 8025d94:	6263      	str	r3, [r4, #36]	@ 0x24
 8025d96:	4b0d      	ldr	r3, [pc, #52]	@ (8025dcc <std+0x5c>)
 8025d98:	62a3      	str	r3, [r4, #40]	@ 0x28
 8025d9a:	4b0d      	ldr	r3, [pc, #52]	@ (8025dd0 <std+0x60>)
 8025d9c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8025d9e:	4b0d      	ldr	r3, [pc, #52]	@ (8025dd4 <std+0x64>)
 8025da0:	6323      	str	r3, [r4, #48]	@ 0x30
 8025da2:	4b0d      	ldr	r3, [pc, #52]	@ (8025dd8 <std+0x68>)
 8025da4:	6224      	str	r4, [r4, #32]
 8025da6:	429c      	cmp	r4, r3
 8025da8:	d006      	beq.n	8025db8 <std+0x48>
 8025daa:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8025dae:	4294      	cmp	r4, r2
 8025db0:	d002      	beq.n	8025db8 <std+0x48>
 8025db2:	33d0      	adds	r3, #208	@ 0xd0
 8025db4:	429c      	cmp	r4, r3
 8025db6:	d105      	bne.n	8025dc4 <std+0x54>
 8025db8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8025dbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025dc0:	f000 b9ba 	b.w	8026138 <__retarget_lock_init_recursive>
 8025dc4:	bd10      	pop	{r4, pc}
 8025dc6:	bf00      	nop
 8025dc8:	08025f19 	.word	0x08025f19
 8025dcc:	08025f3b 	.word	0x08025f3b
 8025dd0:	08025f73 	.word	0x08025f73
 8025dd4:	08025f97 	.word	0x08025f97
 8025dd8:	200039b0 	.word	0x200039b0

08025ddc <stdio_exit_handler>:
 8025ddc:	4a02      	ldr	r2, [pc, #8]	@ (8025de8 <stdio_exit_handler+0xc>)
 8025dde:	4903      	ldr	r1, [pc, #12]	@ (8025dec <stdio_exit_handler+0x10>)
 8025de0:	4803      	ldr	r0, [pc, #12]	@ (8025df0 <stdio_exit_handler+0x14>)
 8025de2:	f000 b87b 	b.w	8025edc <_fwalk_sglue>
 8025de6:	bf00      	nop
 8025de8:	200000ac 	.word	0x200000ac
 8025dec:	08026951 	.word	0x08026951
 8025df0:	200000bc 	.word	0x200000bc

08025df4 <cleanup_stdio>:
 8025df4:	6841      	ldr	r1, [r0, #4]
 8025df6:	4b0c      	ldr	r3, [pc, #48]	@ (8025e28 <cleanup_stdio+0x34>)
 8025df8:	4299      	cmp	r1, r3
 8025dfa:	b510      	push	{r4, lr}
 8025dfc:	4604      	mov	r4, r0
 8025dfe:	d001      	beq.n	8025e04 <cleanup_stdio+0x10>
 8025e00:	f000 fda6 	bl	8026950 <_fflush_r>
 8025e04:	68a1      	ldr	r1, [r4, #8]
 8025e06:	4b09      	ldr	r3, [pc, #36]	@ (8025e2c <cleanup_stdio+0x38>)
 8025e08:	4299      	cmp	r1, r3
 8025e0a:	d002      	beq.n	8025e12 <cleanup_stdio+0x1e>
 8025e0c:	4620      	mov	r0, r4
 8025e0e:	f000 fd9f 	bl	8026950 <_fflush_r>
 8025e12:	68e1      	ldr	r1, [r4, #12]
 8025e14:	4b06      	ldr	r3, [pc, #24]	@ (8025e30 <cleanup_stdio+0x3c>)
 8025e16:	4299      	cmp	r1, r3
 8025e18:	d004      	beq.n	8025e24 <cleanup_stdio+0x30>
 8025e1a:	4620      	mov	r0, r4
 8025e1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025e20:	f000 bd96 	b.w	8026950 <_fflush_r>
 8025e24:	bd10      	pop	{r4, pc}
 8025e26:	bf00      	nop
 8025e28:	200039b0 	.word	0x200039b0
 8025e2c:	20003a18 	.word	0x20003a18
 8025e30:	20003a80 	.word	0x20003a80

08025e34 <global_stdio_init.part.0>:
 8025e34:	b510      	push	{r4, lr}
 8025e36:	4b0b      	ldr	r3, [pc, #44]	@ (8025e64 <global_stdio_init.part.0+0x30>)
 8025e38:	4c0b      	ldr	r4, [pc, #44]	@ (8025e68 <global_stdio_init.part.0+0x34>)
 8025e3a:	4a0c      	ldr	r2, [pc, #48]	@ (8025e6c <global_stdio_init.part.0+0x38>)
 8025e3c:	601a      	str	r2, [r3, #0]
 8025e3e:	4620      	mov	r0, r4
 8025e40:	2200      	movs	r2, #0
 8025e42:	2104      	movs	r1, #4
 8025e44:	f7ff ff94 	bl	8025d70 <std>
 8025e48:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8025e4c:	2201      	movs	r2, #1
 8025e4e:	2109      	movs	r1, #9
 8025e50:	f7ff ff8e 	bl	8025d70 <std>
 8025e54:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8025e58:	2202      	movs	r2, #2
 8025e5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025e5e:	2112      	movs	r1, #18
 8025e60:	f7ff bf86 	b.w	8025d70 <std>
 8025e64:	20003ae8 	.word	0x20003ae8
 8025e68:	200039b0 	.word	0x200039b0
 8025e6c:	08025ddd 	.word	0x08025ddd

08025e70 <__sfp_lock_acquire>:
 8025e70:	4801      	ldr	r0, [pc, #4]	@ (8025e78 <__sfp_lock_acquire+0x8>)
 8025e72:	f000 b962 	b.w	802613a <__retarget_lock_acquire_recursive>
 8025e76:	bf00      	nop
 8025e78:	20003af2 	.word	0x20003af2

08025e7c <__sfp_lock_release>:
 8025e7c:	4801      	ldr	r0, [pc, #4]	@ (8025e84 <__sfp_lock_release+0x8>)
 8025e7e:	f000 b95d 	b.w	802613c <__retarget_lock_release_recursive>
 8025e82:	bf00      	nop
 8025e84:	20003af2 	.word	0x20003af2

08025e88 <__sinit>:
 8025e88:	b510      	push	{r4, lr}
 8025e8a:	4604      	mov	r4, r0
 8025e8c:	f7ff fff0 	bl	8025e70 <__sfp_lock_acquire>
 8025e90:	6a23      	ldr	r3, [r4, #32]
 8025e92:	b11b      	cbz	r3, 8025e9c <__sinit+0x14>
 8025e94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025e98:	f7ff bff0 	b.w	8025e7c <__sfp_lock_release>
 8025e9c:	4b04      	ldr	r3, [pc, #16]	@ (8025eb0 <__sinit+0x28>)
 8025e9e:	6223      	str	r3, [r4, #32]
 8025ea0:	4b04      	ldr	r3, [pc, #16]	@ (8025eb4 <__sinit+0x2c>)
 8025ea2:	681b      	ldr	r3, [r3, #0]
 8025ea4:	2b00      	cmp	r3, #0
 8025ea6:	d1f5      	bne.n	8025e94 <__sinit+0xc>
 8025ea8:	f7ff ffc4 	bl	8025e34 <global_stdio_init.part.0>
 8025eac:	e7f2      	b.n	8025e94 <__sinit+0xc>
 8025eae:	bf00      	nop
 8025eb0:	08025df5 	.word	0x08025df5
 8025eb4:	20003ae8 	.word	0x20003ae8

08025eb8 <fiprintf>:
 8025eb8:	b40e      	push	{r1, r2, r3}
 8025eba:	b503      	push	{r0, r1, lr}
 8025ebc:	4601      	mov	r1, r0
 8025ebe:	ab03      	add	r3, sp, #12
 8025ec0:	4805      	ldr	r0, [pc, #20]	@ (8025ed8 <fiprintf+0x20>)
 8025ec2:	f853 2b04 	ldr.w	r2, [r3], #4
 8025ec6:	6800      	ldr	r0, [r0, #0]
 8025ec8:	9301      	str	r3, [sp, #4]
 8025eca:	f000 fa17 	bl	80262fc <_vfiprintf_r>
 8025ece:	b002      	add	sp, #8
 8025ed0:	f85d eb04 	ldr.w	lr, [sp], #4
 8025ed4:	b003      	add	sp, #12
 8025ed6:	4770      	bx	lr
 8025ed8:	200000b8 	.word	0x200000b8

08025edc <_fwalk_sglue>:
 8025edc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025ee0:	4607      	mov	r7, r0
 8025ee2:	4688      	mov	r8, r1
 8025ee4:	4614      	mov	r4, r2
 8025ee6:	2600      	movs	r6, #0
 8025ee8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025eec:	f1b9 0901 	subs.w	r9, r9, #1
 8025ef0:	d505      	bpl.n	8025efe <_fwalk_sglue+0x22>
 8025ef2:	6824      	ldr	r4, [r4, #0]
 8025ef4:	2c00      	cmp	r4, #0
 8025ef6:	d1f7      	bne.n	8025ee8 <_fwalk_sglue+0xc>
 8025ef8:	4630      	mov	r0, r6
 8025efa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025efe:	89ab      	ldrh	r3, [r5, #12]
 8025f00:	2b01      	cmp	r3, #1
 8025f02:	d907      	bls.n	8025f14 <_fwalk_sglue+0x38>
 8025f04:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025f08:	3301      	adds	r3, #1
 8025f0a:	d003      	beq.n	8025f14 <_fwalk_sglue+0x38>
 8025f0c:	4629      	mov	r1, r5
 8025f0e:	4638      	mov	r0, r7
 8025f10:	47c0      	blx	r8
 8025f12:	4306      	orrs	r6, r0
 8025f14:	3568      	adds	r5, #104	@ 0x68
 8025f16:	e7e9      	b.n	8025eec <_fwalk_sglue+0x10>

08025f18 <__sread>:
 8025f18:	b510      	push	{r4, lr}
 8025f1a:	460c      	mov	r4, r1
 8025f1c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025f20:	f000 f898 	bl	8026054 <_read_r>
 8025f24:	2800      	cmp	r0, #0
 8025f26:	bfab      	itete	ge
 8025f28:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8025f2a:	89a3      	ldrhlt	r3, [r4, #12]
 8025f2c:	181b      	addge	r3, r3, r0
 8025f2e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8025f32:	bfac      	ite	ge
 8025f34:	6563      	strge	r3, [r4, #84]	@ 0x54
 8025f36:	81a3      	strhlt	r3, [r4, #12]
 8025f38:	bd10      	pop	{r4, pc}

08025f3a <__swrite>:
 8025f3a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025f3e:	461f      	mov	r7, r3
 8025f40:	898b      	ldrh	r3, [r1, #12]
 8025f42:	05db      	lsls	r3, r3, #23
 8025f44:	4605      	mov	r5, r0
 8025f46:	460c      	mov	r4, r1
 8025f48:	4616      	mov	r6, r2
 8025f4a:	d505      	bpl.n	8025f58 <__swrite+0x1e>
 8025f4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025f50:	2302      	movs	r3, #2
 8025f52:	2200      	movs	r2, #0
 8025f54:	f000 f86c 	bl	8026030 <_lseek_r>
 8025f58:	89a3      	ldrh	r3, [r4, #12]
 8025f5a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025f5e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8025f62:	81a3      	strh	r3, [r4, #12]
 8025f64:	4632      	mov	r2, r6
 8025f66:	463b      	mov	r3, r7
 8025f68:	4628      	mov	r0, r5
 8025f6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025f6e:	f000 b8a7 	b.w	80260c0 <_write_r>

08025f72 <__sseek>:
 8025f72:	b510      	push	{r4, lr}
 8025f74:	460c      	mov	r4, r1
 8025f76:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025f7a:	f000 f859 	bl	8026030 <_lseek_r>
 8025f7e:	1c43      	adds	r3, r0, #1
 8025f80:	89a3      	ldrh	r3, [r4, #12]
 8025f82:	bf15      	itete	ne
 8025f84:	6560      	strne	r0, [r4, #84]	@ 0x54
 8025f86:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8025f8a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8025f8e:	81a3      	strheq	r3, [r4, #12]
 8025f90:	bf18      	it	ne
 8025f92:	81a3      	strhne	r3, [r4, #12]
 8025f94:	bd10      	pop	{r4, pc}

08025f96 <__sclose>:
 8025f96:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025f9a:	f000 b839 	b.w	8026010 <_close_r>

08025f9e <memset>:
 8025f9e:	4402      	add	r2, r0
 8025fa0:	4603      	mov	r3, r0
 8025fa2:	4293      	cmp	r3, r2
 8025fa4:	d100      	bne.n	8025fa8 <memset+0xa>
 8025fa6:	4770      	bx	lr
 8025fa8:	f803 1b01 	strb.w	r1, [r3], #1
 8025fac:	e7f9      	b.n	8025fa2 <memset+0x4>

08025fae <_raise_r>:
 8025fae:	291f      	cmp	r1, #31
 8025fb0:	b538      	push	{r3, r4, r5, lr}
 8025fb2:	4605      	mov	r5, r0
 8025fb4:	460c      	mov	r4, r1
 8025fb6:	d904      	bls.n	8025fc2 <_raise_r+0x14>
 8025fb8:	2316      	movs	r3, #22
 8025fba:	6003      	str	r3, [r0, #0]
 8025fbc:	f04f 30ff 	mov.w	r0, #4294967295
 8025fc0:	bd38      	pop	{r3, r4, r5, pc}
 8025fc2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8025fc4:	b112      	cbz	r2, 8025fcc <_raise_r+0x1e>
 8025fc6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8025fca:	b94b      	cbnz	r3, 8025fe0 <_raise_r+0x32>
 8025fcc:	4628      	mov	r0, r5
 8025fce:	f000 f865 	bl	802609c <_getpid_r>
 8025fd2:	4622      	mov	r2, r4
 8025fd4:	4601      	mov	r1, r0
 8025fd6:	4628      	mov	r0, r5
 8025fd8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025fdc:	f000 b84c 	b.w	8026078 <_kill_r>
 8025fe0:	2b01      	cmp	r3, #1
 8025fe2:	d00a      	beq.n	8025ffa <_raise_r+0x4c>
 8025fe4:	1c59      	adds	r1, r3, #1
 8025fe6:	d103      	bne.n	8025ff0 <_raise_r+0x42>
 8025fe8:	2316      	movs	r3, #22
 8025fea:	6003      	str	r3, [r0, #0]
 8025fec:	2001      	movs	r0, #1
 8025fee:	e7e7      	b.n	8025fc0 <_raise_r+0x12>
 8025ff0:	2100      	movs	r1, #0
 8025ff2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8025ff6:	4620      	mov	r0, r4
 8025ff8:	4798      	blx	r3
 8025ffa:	2000      	movs	r0, #0
 8025ffc:	e7e0      	b.n	8025fc0 <_raise_r+0x12>
	...

08026000 <raise>:
 8026000:	4b02      	ldr	r3, [pc, #8]	@ (802600c <raise+0xc>)
 8026002:	4601      	mov	r1, r0
 8026004:	6818      	ldr	r0, [r3, #0]
 8026006:	f7ff bfd2 	b.w	8025fae <_raise_r>
 802600a:	bf00      	nop
 802600c:	200000b8 	.word	0x200000b8

08026010 <_close_r>:
 8026010:	b538      	push	{r3, r4, r5, lr}
 8026012:	4d06      	ldr	r5, [pc, #24]	@ (802602c <_close_r+0x1c>)
 8026014:	2300      	movs	r3, #0
 8026016:	4604      	mov	r4, r0
 8026018:	4608      	mov	r0, r1
 802601a:	602b      	str	r3, [r5, #0]
 802601c:	f7db ff4a 	bl	8001eb4 <_close>
 8026020:	1c43      	adds	r3, r0, #1
 8026022:	d102      	bne.n	802602a <_close_r+0x1a>
 8026024:	682b      	ldr	r3, [r5, #0]
 8026026:	b103      	cbz	r3, 802602a <_close_r+0x1a>
 8026028:	6023      	str	r3, [r4, #0]
 802602a:	bd38      	pop	{r3, r4, r5, pc}
 802602c:	20003aec 	.word	0x20003aec

08026030 <_lseek_r>:
 8026030:	b538      	push	{r3, r4, r5, lr}
 8026032:	4d07      	ldr	r5, [pc, #28]	@ (8026050 <_lseek_r+0x20>)
 8026034:	4604      	mov	r4, r0
 8026036:	4608      	mov	r0, r1
 8026038:	4611      	mov	r1, r2
 802603a:	2200      	movs	r2, #0
 802603c:	602a      	str	r2, [r5, #0]
 802603e:	461a      	mov	r2, r3
 8026040:	f7db ff5f 	bl	8001f02 <_lseek>
 8026044:	1c43      	adds	r3, r0, #1
 8026046:	d102      	bne.n	802604e <_lseek_r+0x1e>
 8026048:	682b      	ldr	r3, [r5, #0]
 802604a:	b103      	cbz	r3, 802604e <_lseek_r+0x1e>
 802604c:	6023      	str	r3, [r4, #0]
 802604e:	bd38      	pop	{r3, r4, r5, pc}
 8026050:	20003aec 	.word	0x20003aec

08026054 <_read_r>:
 8026054:	b538      	push	{r3, r4, r5, lr}
 8026056:	4d07      	ldr	r5, [pc, #28]	@ (8026074 <_read_r+0x20>)
 8026058:	4604      	mov	r4, r0
 802605a:	4608      	mov	r0, r1
 802605c:	4611      	mov	r1, r2
 802605e:	2200      	movs	r2, #0
 8026060:	602a      	str	r2, [r5, #0]
 8026062:	461a      	mov	r2, r3
 8026064:	f7db feed 	bl	8001e42 <_read>
 8026068:	1c43      	adds	r3, r0, #1
 802606a:	d102      	bne.n	8026072 <_read_r+0x1e>
 802606c:	682b      	ldr	r3, [r5, #0]
 802606e:	b103      	cbz	r3, 8026072 <_read_r+0x1e>
 8026070:	6023      	str	r3, [r4, #0]
 8026072:	bd38      	pop	{r3, r4, r5, pc}
 8026074:	20003aec 	.word	0x20003aec

08026078 <_kill_r>:
 8026078:	b538      	push	{r3, r4, r5, lr}
 802607a:	4d07      	ldr	r5, [pc, #28]	@ (8026098 <_kill_r+0x20>)
 802607c:	2300      	movs	r3, #0
 802607e:	4604      	mov	r4, r0
 8026080:	4608      	mov	r0, r1
 8026082:	4611      	mov	r1, r2
 8026084:	602b      	str	r3, [r5, #0]
 8026086:	f7db fec1 	bl	8001e0c <_kill>
 802608a:	1c43      	adds	r3, r0, #1
 802608c:	d102      	bne.n	8026094 <_kill_r+0x1c>
 802608e:	682b      	ldr	r3, [r5, #0]
 8026090:	b103      	cbz	r3, 8026094 <_kill_r+0x1c>
 8026092:	6023      	str	r3, [r4, #0]
 8026094:	bd38      	pop	{r3, r4, r5, pc}
 8026096:	bf00      	nop
 8026098:	20003aec 	.word	0x20003aec

0802609c <_getpid_r>:
 802609c:	f7db beae 	b.w	8001dfc <_getpid>

080260a0 <_sbrk_r>:
 80260a0:	b538      	push	{r3, r4, r5, lr}
 80260a2:	4d06      	ldr	r5, [pc, #24]	@ (80260bc <_sbrk_r+0x1c>)
 80260a4:	2300      	movs	r3, #0
 80260a6:	4604      	mov	r4, r0
 80260a8:	4608      	mov	r0, r1
 80260aa:	602b      	str	r3, [r5, #0]
 80260ac:	f7db ff36 	bl	8001f1c <_sbrk>
 80260b0:	1c43      	adds	r3, r0, #1
 80260b2:	d102      	bne.n	80260ba <_sbrk_r+0x1a>
 80260b4:	682b      	ldr	r3, [r5, #0]
 80260b6:	b103      	cbz	r3, 80260ba <_sbrk_r+0x1a>
 80260b8:	6023      	str	r3, [r4, #0]
 80260ba:	bd38      	pop	{r3, r4, r5, pc}
 80260bc:	20003aec 	.word	0x20003aec

080260c0 <_write_r>:
 80260c0:	b538      	push	{r3, r4, r5, lr}
 80260c2:	4d07      	ldr	r5, [pc, #28]	@ (80260e0 <_write_r+0x20>)
 80260c4:	4604      	mov	r4, r0
 80260c6:	4608      	mov	r0, r1
 80260c8:	4611      	mov	r1, r2
 80260ca:	2200      	movs	r2, #0
 80260cc:	602a      	str	r2, [r5, #0]
 80260ce:	461a      	mov	r2, r3
 80260d0:	f7db fed4 	bl	8001e7c <_write>
 80260d4:	1c43      	adds	r3, r0, #1
 80260d6:	d102      	bne.n	80260de <_write_r+0x1e>
 80260d8:	682b      	ldr	r3, [r5, #0]
 80260da:	b103      	cbz	r3, 80260de <_write_r+0x1e>
 80260dc:	6023      	str	r3, [r4, #0]
 80260de:	bd38      	pop	{r3, r4, r5, pc}
 80260e0:	20003aec 	.word	0x20003aec

080260e4 <__errno>:
 80260e4:	4b01      	ldr	r3, [pc, #4]	@ (80260ec <__errno+0x8>)
 80260e6:	6818      	ldr	r0, [r3, #0]
 80260e8:	4770      	bx	lr
 80260ea:	bf00      	nop
 80260ec:	200000b8 	.word	0x200000b8

080260f0 <__libc_init_array>:
 80260f0:	b570      	push	{r4, r5, r6, lr}
 80260f2:	4d0d      	ldr	r5, [pc, #52]	@ (8026128 <__libc_init_array+0x38>)
 80260f4:	4c0d      	ldr	r4, [pc, #52]	@ (802612c <__libc_init_array+0x3c>)
 80260f6:	1b64      	subs	r4, r4, r5
 80260f8:	10a4      	asrs	r4, r4, #2
 80260fa:	2600      	movs	r6, #0
 80260fc:	42a6      	cmp	r6, r4
 80260fe:	d109      	bne.n	8026114 <__libc_init_array+0x24>
 8026100:	4d0b      	ldr	r5, [pc, #44]	@ (8026130 <__libc_init_array+0x40>)
 8026102:	4c0c      	ldr	r4, [pc, #48]	@ (8026134 <__libc_init_array+0x44>)
 8026104:	f000 fd64 	bl	8026bd0 <_init>
 8026108:	1b64      	subs	r4, r4, r5
 802610a:	10a4      	asrs	r4, r4, #2
 802610c:	2600      	movs	r6, #0
 802610e:	42a6      	cmp	r6, r4
 8026110:	d105      	bne.n	802611e <__libc_init_array+0x2e>
 8026112:	bd70      	pop	{r4, r5, r6, pc}
 8026114:	f855 3b04 	ldr.w	r3, [r5], #4
 8026118:	4798      	blx	r3
 802611a:	3601      	adds	r6, #1
 802611c:	e7ee      	b.n	80260fc <__libc_init_array+0xc>
 802611e:	f855 3b04 	ldr.w	r3, [r5], #4
 8026122:	4798      	blx	r3
 8026124:	3601      	adds	r6, #1
 8026126:	e7f2      	b.n	802610e <__libc_init_array+0x1e>
 8026128:	08060074 	.word	0x08060074
 802612c:	08060074 	.word	0x08060074
 8026130:	08060074 	.word	0x08060074
 8026134:	0806008c 	.word	0x0806008c

08026138 <__retarget_lock_init_recursive>:
 8026138:	4770      	bx	lr

0802613a <__retarget_lock_acquire_recursive>:
 802613a:	4770      	bx	lr

0802613c <__retarget_lock_release_recursive>:
 802613c:	4770      	bx	lr

0802613e <memcpy>:
 802613e:	440a      	add	r2, r1
 8026140:	4291      	cmp	r1, r2
 8026142:	f100 33ff 	add.w	r3, r0, #4294967295
 8026146:	d100      	bne.n	802614a <memcpy+0xc>
 8026148:	4770      	bx	lr
 802614a:	b510      	push	{r4, lr}
 802614c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8026150:	f803 4f01 	strb.w	r4, [r3, #1]!
 8026154:	4291      	cmp	r1, r2
 8026156:	d1f9      	bne.n	802614c <memcpy+0xe>
 8026158:	bd10      	pop	{r4, pc}
	...

0802615c <__register_exitproc>:
 802615c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026160:	4d27      	ldr	r5, [pc, #156]	@ (8026200 <__register_exitproc+0xa4>)
 8026162:	4607      	mov	r7, r0
 8026164:	6828      	ldr	r0, [r5, #0]
 8026166:	4691      	mov	r9, r2
 8026168:	460e      	mov	r6, r1
 802616a:	4698      	mov	r8, r3
 802616c:	f7ff ffe5 	bl	802613a <__retarget_lock_acquire_recursive>
 8026170:	4a24      	ldr	r2, [pc, #144]	@ (8026204 <__register_exitproc+0xa8>)
 8026172:	6814      	ldr	r4, [r2, #0]
 8026174:	b93c      	cbnz	r4, 8026186 <__register_exitproc+0x2a>
 8026176:	4b24      	ldr	r3, [pc, #144]	@ (8026208 <__register_exitproc+0xac>)
 8026178:	6013      	str	r3, [r2, #0]
 802617a:	4a24      	ldr	r2, [pc, #144]	@ (802620c <__register_exitproc+0xb0>)
 802617c:	b112      	cbz	r2, 8026184 <__register_exitproc+0x28>
 802617e:	6812      	ldr	r2, [r2, #0]
 8026180:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8026184:	4c20      	ldr	r4, [pc, #128]	@ (8026208 <__register_exitproc+0xac>)
 8026186:	6863      	ldr	r3, [r4, #4]
 8026188:	2b1f      	cmp	r3, #31
 802618a:	dd06      	ble.n	802619a <__register_exitproc+0x3e>
 802618c:	6828      	ldr	r0, [r5, #0]
 802618e:	f7ff ffd5 	bl	802613c <__retarget_lock_release_recursive>
 8026192:	f04f 30ff 	mov.w	r0, #4294967295
 8026196:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802619a:	b32f      	cbz	r7, 80261e8 <__register_exitproc+0x8c>
 802619c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80261a0:	b968      	cbnz	r0, 80261be <__register_exitproc+0x62>
 80261a2:	4b1b      	ldr	r3, [pc, #108]	@ (8026210 <__register_exitproc+0xb4>)
 80261a4:	2b00      	cmp	r3, #0
 80261a6:	d0f1      	beq.n	802618c <__register_exitproc+0x30>
 80261a8:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80261ac:	f7ff fd14 	bl	8025bd8 <malloc>
 80261b0:	2800      	cmp	r0, #0
 80261b2:	d0eb      	beq.n	802618c <__register_exitproc+0x30>
 80261b4:	2300      	movs	r3, #0
 80261b6:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80261ba:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 80261be:	6863      	ldr	r3, [r4, #4]
 80261c0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80261c4:	2201      	movs	r2, #1
 80261c6:	409a      	lsls	r2, r3
 80261c8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80261cc:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80261d0:	4313      	orrs	r3, r2
 80261d2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80261d6:	2f02      	cmp	r7, #2
 80261d8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80261dc:	bf02      	ittt	eq
 80261de:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80261e2:	4313      	orreq	r3, r2
 80261e4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80261e8:	6863      	ldr	r3, [r4, #4]
 80261ea:	6828      	ldr	r0, [r5, #0]
 80261ec:	1c5a      	adds	r2, r3, #1
 80261ee:	3302      	adds	r3, #2
 80261f0:	6062      	str	r2, [r4, #4]
 80261f2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80261f6:	f7ff ffa1 	bl	802613c <__retarget_lock_release_recursive>
 80261fa:	2000      	movs	r0, #0
 80261fc:	e7cb      	b.n	8026196 <__register_exitproc+0x3a>
 80261fe:	bf00      	nop
 8026200:	20000108 	.word	0x20000108
 8026204:	20003b80 	.word	0x20003b80
 8026208:	20003af4 	.word	0x20003af4
 802620c:	08029898 	.word	0x08029898
 8026210:	08025bd9 	.word	0x08025bd9

08026214 <_free_r>:
 8026214:	b538      	push	{r3, r4, r5, lr}
 8026216:	4605      	mov	r5, r0
 8026218:	2900      	cmp	r1, #0
 802621a:	d041      	beq.n	80262a0 <_free_r+0x8c>
 802621c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8026220:	1f0c      	subs	r4, r1, #4
 8026222:	2b00      	cmp	r3, #0
 8026224:	bfb8      	it	lt
 8026226:	18e4      	addlt	r4, r4, r3
 8026228:	f7ff fd88 	bl	8025d3c <__malloc_lock>
 802622c:	4a1d      	ldr	r2, [pc, #116]	@ (80262a4 <_free_r+0x90>)
 802622e:	6813      	ldr	r3, [r2, #0]
 8026230:	b933      	cbnz	r3, 8026240 <_free_r+0x2c>
 8026232:	6063      	str	r3, [r4, #4]
 8026234:	6014      	str	r4, [r2, #0]
 8026236:	4628      	mov	r0, r5
 8026238:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802623c:	f7ff bd84 	b.w	8025d48 <__malloc_unlock>
 8026240:	42a3      	cmp	r3, r4
 8026242:	d908      	bls.n	8026256 <_free_r+0x42>
 8026244:	6820      	ldr	r0, [r4, #0]
 8026246:	1821      	adds	r1, r4, r0
 8026248:	428b      	cmp	r3, r1
 802624a:	bf01      	itttt	eq
 802624c:	6819      	ldreq	r1, [r3, #0]
 802624e:	685b      	ldreq	r3, [r3, #4]
 8026250:	1809      	addeq	r1, r1, r0
 8026252:	6021      	streq	r1, [r4, #0]
 8026254:	e7ed      	b.n	8026232 <_free_r+0x1e>
 8026256:	461a      	mov	r2, r3
 8026258:	685b      	ldr	r3, [r3, #4]
 802625a:	b10b      	cbz	r3, 8026260 <_free_r+0x4c>
 802625c:	42a3      	cmp	r3, r4
 802625e:	d9fa      	bls.n	8026256 <_free_r+0x42>
 8026260:	6811      	ldr	r1, [r2, #0]
 8026262:	1850      	adds	r0, r2, r1
 8026264:	42a0      	cmp	r0, r4
 8026266:	d10b      	bne.n	8026280 <_free_r+0x6c>
 8026268:	6820      	ldr	r0, [r4, #0]
 802626a:	4401      	add	r1, r0
 802626c:	1850      	adds	r0, r2, r1
 802626e:	4283      	cmp	r3, r0
 8026270:	6011      	str	r1, [r2, #0]
 8026272:	d1e0      	bne.n	8026236 <_free_r+0x22>
 8026274:	6818      	ldr	r0, [r3, #0]
 8026276:	685b      	ldr	r3, [r3, #4]
 8026278:	6053      	str	r3, [r2, #4]
 802627a:	4408      	add	r0, r1
 802627c:	6010      	str	r0, [r2, #0]
 802627e:	e7da      	b.n	8026236 <_free_r+0x22>
 8026280:	d902      	bls.n	8026288 <_free_r+0x74>
 8026282:	230c      	movs	r3, #12
 8026284:	602b      	str	r3, [r5, #0]
 8026286:	e7d6      	b.n	8026236 <_free_r+0x22>
 8026288:	6820      	ldr	r0, [r4, #0]
 802628a:	1821      	adds	r1, r4, r0
 802628c:	428b      	cmp	r3, r1
 802628e:	bf04      	itt	eq
 8026290:	6819      	ldreq	r1, [r3, #0]
 8026292:	685b      	ldreq	r3, [r3, #4]
 8026294:	6063      	str	r3, [r4, #4]
 8026296:	bf04      	itt	eq
 8026298:	1809      	addeq	r1, r1, r0
 802629a:	6021      	streq	r1, [r4, #0]
 802629c:	6054      	str	r4, [r2, #4]
 802629e:	e7ca      	b.n	8026236 <_free_r+0x22>
 80262a0:	bd38      	pop	{r3, r4, r5, pc}
 80262a2:	bf00      	nop
 80262a4:	200039ac 	.word	0x200039ac

080262a8 <__sfputc_r>:
 80262a8:	6893      	ldr	r3, [r2, #8]
 80262aa:	3b01      	subs	r3, #1
 80262ac:	2b00      	cmp	r3, #0
 80262ae:	b410      	push	{r4}
 80262b0:	6093      	str	r3, [r2, #8]
 80262b2:	da08      	bge.n	80262c6 <__sfputc_r+0x1e>
 80262b4:	6994      	ldr	r4, [r2, #24]
 80262b6:	42a3      	cmp	r3, r4
 80262b8:	db01      	blt.n	80262be <__sfputc_r+0x16>
 80262ba:	290a      	cmp	r1, #10
 80262bc:	d103      	bne.n	80262c6 <__sfputc_r+0x1e>
 80262be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80262c2:	f000 bb6d 	b.w	80269a0 <__swbuf_r>
 80262c6:	6813      	ldr	r3, [r2, #0]
 80262c8:	1c58      	adds	r0, r3, #1
 80262ca:	6010      	str	r0, [r2, #0]
 80262cc:	7019      	strb	r1, [r3, #0]
 80262ce:	4608      	mov	r0, r1
 80262d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80262d4:	4770      	bx	lr

080262d6 <__sfputs_r>:
 80262d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80262d8:	4606      	mov	r6, r0
 80262da:	460f      	mov	r7, r1
 80262dc:	4614      	mov	r4, r2
 80262de:	18d5      	adds	r5, r2, r3
 80262e0:	42ac      	cmp	r4, r5
 80262e2:	d101      	bne.n	80262e8 <__sfputs_r+0x12>
 80262e4:	2000      	movs	r0, #0
 80262e6:	e007      	b.n	80262f8 <__sfputs_r+0x22>
 80262e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80262ec:	463a      	mov	r2, r7
 80262ee:	4630      	mov	r0, r6
 80262f0:	f7ff ffda 	bl	80262a8 <__sfputc_r>
 80262f4:	1c43      	adds	r3, r0, #1
 80262f6:	d1f3      	bne.n	80262e0 <__sfputs_r+0xa>
 80262f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080262fc <_vfiprintf_r>:
 80262fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026300:	460d      	mov	r5, r1
 8026302:	b09d      	sub	sp, #116	@ 0x74
 8026304:	4614      	mov	r4, r2
 8026306:	4698      	mov	r8, r3
 8026308:	4606      	mov	r6, r0
 802630a:	b118      	cbz	r0, 8026314 <_vfiprintf_r+0x18>
 802630c:	6a03      	ldr	r3, [r0, #32]
 802630e:	b90b      	cbnz	r3, 8026314 <_vfiprintf_r+0x18>
 8026310:	f7ff fdba 	bl	8025e88 <__sinit>
 8026314:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8026316:	07d9      	lsls	r1, r3, #31
 8026318:	d405      	bmi.n	8026326 <_vfiprintf_r+0x2a>
 802631a:	89ab      	ldrh	r3, [r5, #12]
 802631c:	059a      	lsls	r2, r3, #22
 802631e:	d402      	bmi.n	8026326 <_vfiprintf_r+0x2a>
 8026320:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026322:	f7ff ff0a 	bl	802613a <__retarget_lock_acquire_recursive>
 8026326:	89ab      	ldrh	r3, [r5, #12]
 8026328:	071b      	lsls	r3, r3, #28
 802632a:	d501      	bpl.n	8026330 <_vfiprintf_r+0x34>
 802632c:	692b      	ldr	r3, [r5, #16]
 802632e:	b99b      	cbnz	r3, 8026358 <_vfiprintf_r+0x5c>
 8026330:	4629      	mov	r1, r5
 8026332:	4630      	mov	r0, r6
 8026334:	f000 fb72 	bl	8026a1c <__swsetup_r>
 8026338:	b170      	cbz	r0, 8026358 <_vfiprintf_r+0x5c>
 802633a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802633c:	07dc      	lsls	r4, r3, #31
 802633e:	d504      	bpl.n	802634a <_vfiprintf_r+0x4e>
 8026340:	f04f 30ff 	mov.w	r0, #4294967295
 8026344:	b01d      	add	sp, #116	@ 0x74
 8026346:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802634a:	89ab      	ldrh	r3, [r5, #12]
 802634c:	0598      	lsls	r0, r3, #22
 802634e:	d4f7      	bmi.n	8026340 <_vfiprintf_r+0x44>
 8026350:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026352:	f7ff fef3 	bl	802613c <__retarget_lock_release_recursive>
 8026356:	e7f3      	b.n	8026340 <_vfiprintf_r+0x44>
 8026358:	2300      	movs	r3, #0
 802635a:	9309      	str	r3, [sp, #36]	@ 0x24
 802635c:	2320      	movs	r3, #32
 802635e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8026362:	f8cd 800c 	str.w	r8, [sp, #12]
 8026366:	2330      	movs	r3, #48	@ 0x30
 8026368:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8026518 <_vfiprintf_r+0x21c>
 802636c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8026370:	f04f 0901 	mov.w	r9, #1
 8026374:	4623      	mov	r3, r4
 8026376:	469a      	mov	sl, r3
 8026378:	f813 2b01 	ldrb.w	r2, [r3], #1
 802637c:	b10a      	cbz	r2, 8026382 <_vfiprintf_r+0x86>
 802637e:	2a25      	cmp	r2, #37	@ 0x25
 8026380:	d1f9      	bne.n	8026376 <_vfiprintf_r+0x7a>
 8026382:	ebba 0b04 	subs.w	fp, sl, r4
 8026386:	d00b      	beq.n	80263a0 <_vfiprintf_r+0xa4>
 8026388:	465b      	mov	r3, fp
 802638a:	4622      	mov	r2, r4
 802638c:	4629      	mov	r1, r5
 802638e:	4630      	mov	r0, r6
 8026390:	f7ff ffa1 	bl	80262d6 <__sfputs_r>
 8026394:	3001      	adds	r0, #1
 8026396:	f000 80a7 	beq.w	80264e8 <_vfiprintf_r+0x1ec>
 802639a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802639c:	445a      	add	r2, fp
 802639e:	9209      	str	r2, [sp, #36]	@ 0x24
 80263a0:	f89a 3000 	ldrb.w	r3, [sl]
 80263a4:	2b00      	cmp	r3, #0
 80263a6:	f000 809f 	beq.w	80264e8 <_vfiprintf_r+0x1ec>
 80263aa:	2300      	movs	r3, #0
 80263ac:	f04f 32ff 	mov.w	r2, #4294967295
 80263b0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80263b4:	f10a 0a01 	add.w	sl, sl, #1
 80263b8:	9304      	str	r3, [sp, #16]
 80263ba:	9307      	str	r3, [sp, #28]
 80263bc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80263c0:	931a      	str	r3, [sp, #104]	@ 0x68
 80263c2:	4654      	mov	r4, sl
 80263c4:	2205      	movs	r2, #5
 80263c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80263ca:	4853      	ldr	r0, [pc, #332]	@ (8026518 <_vfiprintf_r+0x21c>)
 80263cc:	f7d9 ff20 	bl	8000210 <memchr>
 80263d0:	9a04      	ldr	r2, [sp, #16]
 80263d2:	b9d8      	cbnz	r0, 802640c <_vfiprintf_r+0x110>
 80263d4:	06d1      	lsls	r1, r2, #27
 80263d6:	bf44      	itt	mi
 80263d8:	2320      	movmi	r3, #32
 80263da:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80263de:	0713      	lsls	r3, r2, #28
 80263e0:	bf44      	itt	mi
 80263e2:	232b      	movmi	r3, #43	@ 0x2b
 80263e4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80263e8:	f89a 3000 	ldrb.w	r3, [sl]
 80263ec:	2b2a      	cmp	r3, #42	@ 0x2a
 80263ee:	d015      	beq.n	802641c <_vfiprintf_r+0x120>
 80263f0:	9a07      	ldr	r2, [sp, #28]
 80263f2:	4654      	mov	r4, sl
 80263f4:	2000      	movs	r0, #0
 80263f6:	f04f 0c0a 	mov.w	ip, #10
 80263fa:	4621      	mov	r1, r4
 80263fc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026400:	3b30      	subs	r3, #48	@ 0x30
 8026402:	2b09      	cmp	r3, #9
 8026404:	d94b      	bls.n	802649e <_vfiprintf_r+0x1a2>
 8026406:	b1b0      	cbz	r0, 8026436 <_vfiprintf_r+0x13a>
 8026408:	9207      	str	r2, [sp, #28]
 802640a:	e014      	b.n	8026436 <_vfiprintf_r+0x13a>
 802640c:	eba0 0308 	sub.w	r3, r0, r8
 8026410:	fa09 f303 	lsl.w	r3, r9, r3
 8026414:	4313      	orrs	r3, r2
 8026416:	9304      	str	r3, [sp, #16]
 8026418:	46a2      	mov	sl, r4
 802641a:	e7d2      	b.n	80263c2 <_vfiprintf_r+0xc6>
 802641c:	9b03      	ldr	r3, [sp, #12]
 802641e:	1d19      	adds	r1, r3, #4
 8026420:	681b      	ldr	r3, [r3, #0]
 8026422:	9103      	str	r1, [sp, #12]
 8026424:	2b00      	cmp	r3, #0
 8026426:	bfbb      	ittet	lt
 8026428:	425b      	neglt	r3, r3
 802642a:	f042 0202 	orrlt.w	r2, r2, #2
 802642e:	9307      	strge	r3, [sp, #28]
 8026430:	9307      	strlt	r3, [sp, #28]
 8026432:	bfb8      	it	lt
 8026434:	9204      	strlt	r2, [sp, #16]
 8026436:	7823      	ldrb	r3, [r4, #0]
 8026438:	2b2e      	cmp	r3, #46	@ 0x2e
 802643a:	d10a      	bne.n	8026452 <_vfiprintf_r+0x156>
 802643c:	7863      	ldrb	r3, [r4, #1]
 802643e:	2b2a      	cmp	r3, #42	@ 0x2a
 8026440:	d132      	bne.n	80264a8 <_vfiprintf_r+0x1ac>
 8026442:	9b03      	ldr	r3, [sp, #12]
 8026444:	1d1a      	adds	r2, r3, #4
 8026446:	681b      	ldr	r3, [r3, #0]
 8026448:	9203      	str	r2, [sp, #12]
 802644a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802644e:	3402      	adds	r4, #2
 8026450:	9305      	str	r3, [sp, #20]
 8026452:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8026528 <_vfiprintf_r+0x22c>
 8026456:	7821      	ldrb	r1, [r4, #0]
 8026458:	2203      	movs	r2, #3
 802645a:	4650      	mov	r0, sl
 802645c:	f7d9 fed8 	bl	8000210 <memchr>
 8026460:	b138      	cbz	r0, 8026472 <_vfiprintf_r+0x176>
 8026462:	9b04      	ldr	r3, [sp, #16]
 8026464:	eba0 000a 	sub.w	r0, r0, sl
 8026468:	2240      	movs	r2, #64	@ 0x40
 802646a:	4082      	lsls	r2, r0
 802646c:	4313      	orrs	r3, r2
 802646e:	3401      	adds	r4, #1
 8026470:	9304      	str	r3, [sp, #16]
 8026472:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026476:	4829      	ldr	r0, [pc, #164]	@ (802651c <_vfiprintf_r+0x220>)
 8026478:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802647c:	2206      	movs	r2, #6
 802647e:	f7d9 fec7 	bl	8000210 <memchr>
 8026482:	2800      	cmp	r0, #0
 8026484:	d03f      	beq.n	8026506 <_vfiprintf_r+0x20a>
 8026486:	4b26      	ldr	r3, [pc, #152]	@ (8026520 <_vfiprintf_r+0x224>)
 8026488:	bb1b      	cbnz	r3, 80264d2 <_vfiprintf_r+0x1d6>
 802648a:	9b03      	ldr	r3, [sp, #12]
 802648c:	3307      	adds	r3, #7
 802648e:	f023 0307 	bic.w	r3, r3, #7
 8026492:	3308      	adds	r3, #8
 8026494:	9303      	str	r3, [sp, #12]
 8026496:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026498:	443b      	add	r3, r7
 802649a:	9309      	str	r3, [sp, #36]	@ 0x24
 802649c:	e76a      	b.n	8026374 <_vfiprintf_r+0x78>
 802649e:	fb0c 3202 	mla	r2, ip, r2, r3
 80264a2:	460c      	mov	r4, r1
 80264a4:	2001      	movs	r0, #1
 80264a6:	e7a8      	b.n	80263fa <_vfiprintf_r+0xfe>
 80264a8:	2300      	movs	r3, #0
 80264aa:	3401      	adds	r4, #1
 80264ac:	9305      	str	r3, [sp, #20]
 80264ae:	4619      	mov	r1, r3
 80264b0:	f04f 0c0a 	mov.w	ip, #10
 80264b4:	4620      	mov	r0, r4
 80264b6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80264ba:	3a30      	subs	r2, #48	@ 0x30
 80264bc:	2a09      	cmp	r2, #9
 80264be:	d903      	bls.n	80264c8 <_vfiprintf_r+0x1cc>
 80264c0:	2b00      	cmp	r3, #0
 80264c2:	d0c6      	beq.n	8026452 <_vfiprintf_r+0x156>
 80264c4:	9105      	str	r1, [sp, #20]
 80264c6:	e7c4      	b.n	8026452 <_vfiprintf_r+0x156>
 80264c8:	fb0c 2101 	mla	r1, ip, r1, r2
 80264cc:	4604      	mov	r4, r0
 80264ce:	2301      	movs	r3, #1
 80264d0:	e7f0      	b.n	80264b4 <_vfiprintf_r+0x1b8>
 80264d2:	ab03      	add	r3, sp, #12
 80264d4:	9300      	str	r3, [sp, #0]
 80264d6:	462a      	mov	r2, r5
 80264d8:	4b12      	ldr	r3, [pc, #72]	@ (8026524 <_vfiprintf_r+0x228>)
 80264da:	a904      	add	r1, sp, #16
 80264dc:	4630      	mov	r0, r6
 80264de:	f3af 8000 	nop.w
 80264e2:	4607      	mov	r7, r0
 80264e4:	1c78      	adds	r0, r7, #1
 80264e6:	d1d6      	bne.n	8026496 <_vfiprintf_r+0x19a>
 80264e8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80264ea:	07d9      	lsls	r1, r3, #31
 80264ec:	d405      	bmi.n	80264fa <_vfiprintf_r+0x1fe>
 80264ee:	89ab      	ldrh	r3, [r5, #12]
 80264f0:	059a      	lsls	r2, r3, #22
 80264f2:	d402      	bmi.n	80264fa <_vfiprintf_r+0x1fe>
 80264f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80264f6:	f7ff fe21 	bl	802613c <__retarget_lock_release_recursive>
 80264fa:	89ab      	ldrh	r3, [r5, #12]
 80264fc:	065b      	lsls	r3, r3, #25
 80264fe:	f53f af1f 	bmi.w	8026340 <_vfiprintf_r+0x44>
 8026502:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8026504:	e71e      	b.n	8026344 <_vfiprintf_r+0x48>
 8026506:	ab03      	add	r3, sp, #12
 8026508:	9300      	str	r3, [sp, #0]
 802650a:	462a      	mov	r2, r5
 802650c:	4b05      	ldr	r3, [pc, #20]	@ (8026524 <_vfiprintf_r+0x228>)
 802650e:	a904      	add	r1, sp, #16
 8026510:	4630      	mov	r0, r6
 8026512:	f000 f879 	bl	8026608 <_printf_i>
 8026516:	e7e4      	b.n	80264e2 <_vfiprintf_r+0x1e6>
 8026518:	0802989c 	.word	0x0802989c
 802651c:	080298a6 	.word	0x080298a6
 8026520:	00000000 	.word	0x00000000
 8026524:	080262d7 	.word	0x080262d7
 8026528:	080298a2 	.word	0x080298a2

0802652c <_printf_common>:
 802652c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026530:	4616      	mov	r6, r2
 8026532:	4698      	mov	r8, r3
 8026534:	688a      	ldr	r2, [r1, #8]
 8026536:	690b      	ldr	r3, [r1, #16]
 8026538:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802653c:	4293      	cmp	r3, r2
 802653e:	bfb8      	it	lt
 8026540:	4613      	movlt	r3, r2
 8026542:	6033      	str	r3, [r6, #0]
 8026544:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8026548:	4607      	mov	r7, r0
 802654a:	460c      	mov	r4, r1
 802654c:	b10a      	cbz	r2, 8026552 <_printf_common+0x26>
 802654e:	3301      	adds	r3, #1
 8026550:	6033      	str	r3, [r6, #0]
 8026552:	6823      	ldr	r3, [r4, #0]
 8026554:	0699      	lsls	r1, r3, #26
 8026556:	bf42      	ittt	mi
 8026558:	6833      	ldrmi	r3, [r6, #0]
 802655a:	3302      	addmi	r3, #2
 802655c:	6033      	strmi	r3, [r6, #0]
 802655e:	6825      	ldr	r5, [r4, #0]
 8026560:	f015 0506 	ands.w	r5, r5, #6
 8026564:	d106      	bne.n	8026574 <_printf_common+0x48>
 8026566:	f104 0a19 	add.w	sl, r4, #25
 802656a:	68e3      	ldr	r3, [r4, #12]
 802656c:	6832      	ldr	r2, [r6, #0]
 802656e:	1a9b      	subs	r3, r3, r2
 8026570:	42ab      	cmp	r3, r5
 8026572:	dc26      	bgt.n	80265c2 <_printf_common+0x96>
 8026574:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8026578:	6822      	ldr	r2, [r4, #0]
 802657a:	3b00      	subs	r3, #0
 802657c:	bf18      	it	ne
 802657e:	2301      	movne	r3, #1
 8026580:	0692      	lsls	r2, r2, #26
 8026582:	d42b      	bmi.n	80265dc <_printf_common+0xb0>
 8026584:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8026588:	4641      	mov	r1, r8
 802658a:	4638      	mov	r0, r7
 802658c:	47c8      	blx	r9
 802658e:	3001      	adds	r0, #1
 8026590:	d01e      	beq.n	80265d0 <_printf_common+0xa4>
 8026592:	6823      	ldr	r3, [r4, #0]
 8026594:	6922      	ldr	r2, [r4, #16]
 8026596:	f003 0306 	and.w	r3, r3, #6
 802659a:	2b04      	cmp	r3, #4
 802659c:	bf02      	ittt	eq
 802659e:	68e5      	ldreq	r5, [r4, #12]
 80265a0:	6833      	ldreq	r3, [r6, #0]
 80265a2:	1aed      	subeq	r5, r5, r3
 80265a4:	68a3      	ldr	r3, [r4, #8]
 80265a6:	bf0c      	ite	eq
 80265a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80265ac:	2500      	movne	r5, #0
 80265ae:	4293      	cmp	r3, r2
 80265b0:	bfc4      	itt	gt
 80265b2:	1a9b      	subgt	r3, r3, r2
 80265b4:	18ed      	addgt	r5, r5, r3
 80265b6:	2600      	movs	r6, #0
 80265b8:	341a      	adds	r4, #26
 80265ba:	42b5      	cmp	r5, r6
 80265bc:	d11a      	bne.n	80265f4 <_printf_common+0xc8>
 80265be:	2000      	movs	r0, #0
 80265c0:	e008      	b.n	80265d4 <_printf_common+0xa8>
 80265c2:	2301      	movs	r3, #1
 80265c4:	4652      	mov	r2, sl
 80265c6:	4641      	mov	r1, r8
 80265c8:	4638      	mov	r0, r7
 80265ca:	47c8      	blx	r9
 80265cc:	3001      	adds	r0, #1
 80265ce:	d103      	bne.n	80265d8 <_printf_common+0xac>
 80265d0:	f04f 30ff 	mov.w	r0, #4294967295
 80265d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80265d8:	3501      	adds	r5, #1
 80265da:	e7c6      	b.n	802656a <_printf_common+0x3e>
 80265dc:	18e1      	adds	r1, r4, r3
 80265de:	1c5a      	adds	r2, r3, #1
 80265e0:	2030      	movs	r0, #48	@ 0x30
 80265e2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80265e6:	4422      	add	r2, r4
 80265e8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80265ec:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80265f0:	3302      	adds	r3, #2
 80265f2:	e7c7      	b.n	8026584 <_printf_common+0x58>
 80265f4:	2301      	movs	r3, #1
 80265f6:	4622      	mov	r2, r4
 80265f8:	4641      	mov	r1, r8
 80265fa:	4638      	mov	r0, r7
 80265fc:	47c8      	blx	r9
 80265fe:	3001      	adds	r0, #1
 8026600:	d0e6      	beq.n	80265d0 <_printf_common+0xa4>
 8026602:	3601      	adds	r6, #1
 8026604:	e7d9      	b.n	80265ba <_printf_common+0x8e>
	...

08026608 <_printf_i>:
 8026608:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802660c:	7e0f      	ldrb	r7, [r1, #24]
 802660e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8026610:	2f78      	cmp	r7, #120	@ 0x78
 8026612:	4691      	mov	r9, r2
 8026614:	4680      	mov	r8, r0
 8026616:	460c      	mov	r4, r1
 8026618:	469a      	mov	sl, r3
 802661a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 802661e:	d807      	bhi.n	8026630 <_printf_i+0x28>
 8026620:	2f62      	cmp	r7, #98	@ 0x62
 8026622:	d80a      	bhi.n	802663a <_printf_i+0x32>
 8026624:	2f00      	cmp	r7, #0
 8026626:	f000 80d2 	beq.w	80267ce <_printf_i+0x1c6>
 802662a:	2f58      	cmp	r7, #88	@ 0x58
 802662c:	f000 80b9 	beq.w	80267a2 <_printf_i+0x19a>
 8026630:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8026634:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8026638:	e03a      	b.n	80266b0 <_printf_i+0xa8>
 802663a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802663e:	2b15      	cmp	r3, #21
 8026640:	d8f6      	bhi.n	8026630 <_printf_i+0x28>
 8026642:	a101      	add	r1, pc, #4	@ (adr r1, 8026648 <_printf_i+0x40>)
 8026644:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8026648:	080266a1 	.word	0x080266a1
 802664c:	080266b5 	.word	0x080266b5
 8026650:	08026631 	.word	0x08026631
 8026654:	08026631 	.word	0x08026631
 8026658:	08026631 	.word	0x08026631
 802665c:	08026631 	.word	0x08026631
 8026660:	080266b5 	.word	0x080266b5
 8026664:	08026631 	.word	0x08026631
 8026668:	08026631 	.word	0x08026631
 802666c:	08026631 	.word	0x08026631
 8026670:	08026631 	.word	0x08026631
 8026674:	080267b5 	.word	0x080267b5
 8026678:	080266df 	.word	0x080266df
 802667c:	0802676f 	.word	0x0802676f
 8026680:	08026631 	.word	0x08026631
 8026684:	08026631 	.word	0x08026631
 8026688:	080267d7 	.word	0x080267d7
 802668c:	08026631 	.word	0x08026631
 8026690:	080266df 	.word	0x080266df
 8026694:	08026631 	.word	0x08026631
 8026698:	08026631 	.word	0x08026631
 802669c:	08026777 	.word	0x08026777
 80266a0:	6833      	ldr	r3, [r6, #0]
 80266a2:	1d1a      	adds	r2, r3, #4
 80266a4:	681b      	ldr	r3, [r3, #0]
 80266a6:	6032      	str	r2, [r6, #0]
 80266a8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80266ac:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80266b0:	2301      	movs	r3, #1
 80266b2:	e09d      	b.n	80267f0 <_printf_i+0x1e8>
 80266b4:	6833      	ldr	r3, [r6, #0]
 80266b6:	6820      	ldr	r0, [r4, #0]
 80266b8:	1d19      	adds	r1, r3, #4
 80266ba:	6031      	str	r1, [r6, #0]
 80266bc:	0606      	lsls	r6, r0, #24
 80266be:	d501      	bpl.n	80266c4 <_printf_i+0xbc>
 80266c0:	681d      	ldr	r5, [r3, #0]
 80266c2:	e003      	b.n	80266cc <_printf_i+0xc4>
 80266c4:	0645      	lsls	r5, r0, #25
 80266c6:	d5fb      	bpl.n	80266c0 <_printf_i+0xb8>
 80266c8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80266cc:	2d00      	cmp	r5, #0
 80266ce:	da03      	bge.n	80266d8 <_printf_i+0xd0>
 80266d0:	232d      	movs	r3, #45	@ 0x2d
 80266d2:	426d      	negs	r5, r5
 80266d4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80266d8:	4859      	ldr	r0, [pc, #356]	@ (8026840 <_printf_i+0x238>)
 80266da:	230a      	movs	r3, #10
 80266dc:	e011      	b.n	8026702 <_printf_i+0xfa>
 80266de:	6821      	ldr	r1, [r4, #0]
 80266e0:	6833      	ldr	r3, [r6, #0]
 80266e2:	0608      	lsls	r0, r1, #24
 80266e4:	f853 5b04 	ldr.w	r5, [r3], #4
 80266e8:	d402      	bmi.n	80266f0 <_printf_i+0xe8>
 80266ea:	0649      	lsls	r1, r1, #25
 80266ec:	bf48      	it	mi
 80266ee:	b2ad      	uxthmi	r5, r5
 80266f0:	2f6f      	cmp	r7, #111	@ 0x6f
 80266f2:	4853      	ldr	r0, [pc, #332]	@ (8026840 <_printf_i+0x238>)
 80266f4:	6033      	str	r3, [r6, #0]
 80266f6:	bf14      	ite	ne
 80266f8:	230a      	movne	r3, #10
 80266fa:	2308      	moveq	r3, #8
 80266fc:	2100      	movs	r1, #0
 80266fe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8026702:	6866      	ldr	r6, [r4, #4]
 8026704:	60a6      	str	r6, [r4, #8]
 8026706:	2e00      	cmp	r6, #0
 8026708:	bfa2      	ittt	ge
 802670a:	6821      	ldrge	r1, [r4, #0]
 802670c:	f021 0104 	bicge.w	r1, r1, #4
 8026710:	6021      	strge	r1, [r4, #0]
 8026712:	b90d      	cbnz	r5, 8026718 <_printf_i+0x110>
 8026714:	2e00      	cmp	r6, #0
 8026716:	d04b      	beq.n	80267b0 <_printf_i+0x1a8>
 8026718:	4616      	mov	r6, r2
 802671a:	fbb5 f1f3 	udiv	r1, r5, r3
 802671e:	fb03 5711 	mls	r7, r3, r1, r5
 8026722:	5dc7      	ldrb	r7, [r0, r7]
 8026724:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8026728:	462f      	mov	r7, r5
 802672a:	42bb      	cmp	r3, r7
 802672c:	460d      	mov	r5, r1
 802672e:	d9f4      	bls.n	802671a <_printf_i+0x112>
 8026730:	2b08      	cmp	r3, #8
 8026732:	d10b      	bne.n	802674c <_printf_i+0x144>
 8026734:	6823      	ldr	r3, [r4, #0]
 8026736:	07df      	lsls	r7, r3, #31
 8026738:	d508      	bpl.n	802674c <_printf_i+0x144>
 802673a:	6923      	ldr	r3, [r4, #16]
 802673c:	6861      	ldr	r1, [r4, #4]
 802673e:	4299      	cmp	r1, r3
 8026740:	bfde      	ittt	le
 8026742:	2330      	movle	r3, #48	@ 0x30
 8026744:	f806 3c01 	strble.w	r3, [r6, #-1]
 8026748:	f106 36ff 	addle.w	r6, r6, #4294967295
 802674c:	1b92      	subs	r2, r2, r6
 802674e:	6122      	str	r2, [r4, #16]
 8026750:	f8cd a000 	str.w	sl, [sp]
 8026754:	464b      	mov	r3, r9
 8026756:	aa03      	add	r2, sp, #12
 8026758:	4621      	mov	r1, r4
 802675a:	4640      	mov	r0, r8
 802675c:	f7ff fee6 	bl	802652c <_printf_common>
 8026760:	3001      	adds	r0, #1
 8026762:	d14a      	bne.n	80267fa <_printf_i+0x1f2>
 8026764:	f04f 30ff 	mov.w	r0, #4294967295
 8026768:	b004      	add	sp, #16
 802676a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802676e:	6823      	ldr	r3, [r4, #0]
 8026770:	f043 0320 	orr.w	r3, r3, #32
 8026774:	6023      	str	r3, [r4, #0]
 8026776:	4833      	ldr	r0, [pc, #204]	@ (8026844 <_printf_i+0x23c>)
 8026778:	2778      	movs	r7, #120	@ 0x78
 802677a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802677e:	6823      	ldr	r3, [r4, #0]
 8026780:	6831      	ldr	r1, [r6, #0]
 8026782:	061f      	lsls	r7, r3, #24
 8026784:	f851 5b04 	ldr.w	r5, [r1], #4
 8026788:	d402      	bmi.n	8026790 <_printf_i+0x188>
 802678a:	065f      	lsls	r7, r3, #25
 802678c:	bf48      	it	mi
 802678e:	b2ad      	uxthmi	r5, r5
 8026790:	6031      	str	r1, [r6, #0]
 8026792:	07d9      	lsls	r1, r3, #31
 8026794:	bf44      	itt	mi
 8026796:	f043 0320 	orrmi.w	r3, r3, #32
 802679a:	6023      	strmi	r3, [r4, #0]
 802679c:	b11d      	cbz	r5, 80267a6 <_printf_i+0x19e>
 802679e:	2310      	movs	r3, #16
 80267a0:	e7ac      	b.n	80266fc <_printf_i+0xf4>
 80267a2:	4827      	ldr	r0, [pc, #156]	@ (8026840 <_printf_i+0x238>)
 80267a4:	e7e9      	b.n	802677a <_printf_i+0x172>
 80267a6:	6823      	ldr	r3, [r4, #0]
 80267a8:	f023 0320 	bic.w	r3, r3, #32
 80267ac:	6023      	str	r3, [r4, #0]
 80267ae:	e7f6      	b.n	802679e <_printf_i+0x196>
 80267b0:	4616      	mov	r6, r2
 80267b2:	e7bd      	b.n	8026730 <_printf_i+0x128>
 80267b4:	6833      	ldr	r3, [r6, #0]
 80267b6:	6825      	ldr	r5, [r4, #0]
 80267b8:	6961      	ldr	r1, [r4, #20]
 80267ba:	1d18      	adds	r0, r3, #4
 80267bc:	6030      	str	r0, [r6, #0]
 80267be:	062e      	lsls	r6, r5, #24
 80267c0:	681b      	ldr	r3, [r3, #0]
 80267c2:	d501      	bpl.n	80267c8 <_printf_i+0x1c0>
 80267c4:	6019      	str	r1, [r3, #0]
 80267c6:	e002      	b.n	80267ce <_printf_i+0x1c6>
 80267c8:	0668      	lsls	r0, r5, #25
 80267ca:	d5fb      	bpl.n	80267c4 <_printf_i+0x1bc>
 80267cc:	8019      	strh	r1, [r3, #0]
 80267ce:	2300      	movs	r3, #0
 80267d0:	6123      	str	r3, [r4, #16]
 80267d2:	4616      	mov	r6, r2
 80267d4:	e7bc      	b.n	8026750 <_printf_i+0x148>
 80267d6:	6833      	ldr	r3, [r6, #0]
 80267d8:	1d1a      	adds	r2, r3, #4
 80267da:	6032      	str	r2, [r6, #0]
 80267dc:	681e      	ldr	r6, [r3, #0]
 80267de:	6862      	ldr	r2, [r4, #4]
 80267e0:	2100      	movs	r1, #0
 80267e2:	4630      	mov	r0, r6
 80267e4:	f7d9 fd14 	bl	8000210 <memchr>
 80267e8:	b108      	cbz	r0, 80267ee <_printf_i+0x1e6>
 80267ea:	1b80      	subs	r0, r0, r6
 80267ec:	6060      	str	r0, [r4, #4]
 80267ee:	6863      	ldr	r3, [r4, #4]
 80267f0:	6123      	str	r3, [r4, #16]
 80267f2:	2300      	movs	r3, #0
 80267f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80267f8:	e7aa      	b.n	8026750 <_printf_i+0x148>
 80267fa:	6923      	ldr	r3, [r4, #16]
 80267fc:	4632      	mov	r2, r6
 80267fe:	4649      	mov	r1, r9
 8026800:	4640      	mov	r0, r8
 8026802:	47d0      	blx	sl
 8026804:	3001      	adds	r0, #1
 8026806:	d0ad      	beq.n	8026764 <_printf_i+0x15c>
 8026808:	6823      	ldr	r3, [r4, #0]
 802680a:	079b      	lsls	r3, r3, #30
 802680c:	d413      	bmi.n	8026836 <_printf_i+0x22e>
 802680e:	68e0      	ldr	r0, [r4, #12]
 8026810:	9b03      	ldr	r3, [sp, #12]
 8026812:	4298      	cmp	r0, r3
 8026814:	bfb8      	it	lt
 8026816:	4618      	movlt	r0, r3
 8026818:	e7a6      	b.n	8026768 <_printf_i+0x160>
 802681a:	2301      	movs	r3, #1
 802681c:	4632      	mov	r2, r6
 802681e:	4649      	mov	r1, r9
 8026820:	4640      	mov	r0, r8
 8026822:	47d0      	blx	sl
 8026824:	3001      	adds	r0, #1
 8026826:	d09d      	beq.n	8026764 <_printf_i+0x15c>
 8026828:	3501      	adds	r5, #1
 802682a:	68e3      	ldr	r3, [r4, #12]
 802682c:	9903      	ldr	r1, [sp, #12]
 802682e:	1a5b      	subs	r3, r3, r1
 8026830:	42ab      	cmp	r3, r5
 8026832:	dcf2      	bgt.n	802681a <_printf_i+0x212>
 8026834:	e7eb      	b.n	802680e <_printf_i+0x206>
 8026836:	2500      	movs	r5, #0
 8026838:	f104 0619 	add.w	r6, r4, #25
 802683c:	e7f5      	b.n	802682a <_printf_i+0x222>
 802683e:	bf00      	nop
 8026840:	080298ad 	.word	0x080298ad
 8026844:	080298be 	.word	0x080298be

08026848 <__sflush_r>:
 8026848:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 802684c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026850:	0716      	lsls	r6, r2, #28
 8026852:	4605      	mov	r5, r0
 8026854:	460c      	mov	r4, r1
 8026856:	d454      	bmi.n	8026902 <__sflush_r+0xba>
 8026858:	684b      	ldr	r3, [r1, #4]
 802685a:	2b00      	cmp	r3, #0
 802685c:	dc02      	bgt.n	8026864 <__sflush_r+0x1c>
 802685e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8026860:	2b00      	cmp	r3, #0
 8026862:	dd48      	ble.n	80268f6 <__sflush_r+0xae>
 8026864:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026866:	2e00      	cmp	r6, #0
 8026868:	d045      	beq.n	80268f6 <__sflush_r+0xae>
 802686a:	2300      	movs	r3, #0
 802686c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8026870:	682f      	ldr	r7, [r5, #0]
 8026872:	6a21      	ldr	r1, [r4, #32]
 8026874:	602b      	str	r3, [r5, #0]
 8026876:	d030      	beq.n	80268da <__sflush_r+0x92>
 8026878:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802687a:	89a3      	ldrh	r3, [r4, #12]
 802687c:	0759      	lsls	r1, r3, #29
 802687e:	d505      	bpl.n	802688c <__sflush_r+0x44>
 8026880:	6863      	ldr	r3, [r4, #4]
 8026882:	1ad2      	subs	r2, r2, r3
 8026884:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8026886:	b10b      	cbz	r3, 802688c <__sflush_r+0x44>
 8026888:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802688a:	1ad2      	subs	r2, r2, r3
 802688c:	2300      	movs	r3, #0
 802688e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026890:	6a21      	ldr	r1, [r4, #32]
 8026892:	4628      	mov	r0, r5
 8026894:	47b0      	blx	r6
 8026896:	1c43      	adds	r3, r0, #1
 8026898:	89a3      	ldrh	r3, [r4, #12]
 802689a:	d106      	bne.n	80268aa <__sflush_r+0x62>
 802689c:	6829      	ldr	r1, [r5, #0]
 802689e:	291d      	cmp	r1, #29
 80268a0:	d82b      	bhi.n	80268fa <__sflush_r+0xb2>
 80268a2:	4a2a      	ldr	r2, [pc, #168]	@ (802694c <__sflush_r+0x104>)
 80268a4:	410a      	asrs	r2, r1
 80268a6:	07d6      	lsls	r6, r2, #31
 80268a8:	d427      	bmi.n	80268fa <__sflush_r+0xb2>
 80268aa:	2200      	movs	r2, #0
 80268ac:	6062      	str	r2, [r4, #4]
 80268ae:	04d9      	lsls	r1, r3, #19
 80268b0:	6922      	ldr	r2, [r4, #16]
 80268b2:	6022      	str	r2, [r4, #0]
 80268b4:	d504      	bpl.n	80268c0 <__sflush_r+0x78>
 80268b6:	1c42      	adds	r2, r0, #1
 80268b8:	d101      	bne.n	80268be <__sflush_r+0x76>
 80268ba:	682b      	ldr	r3, [r5, #0]
 80268bc:	b903      	cbnz	r3, 80268c0 <__sflush_r+0x78>
 80268be:	6560      	str	r0, [r4, #84]	@ 0x54
 80268c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80268c2:	602f      	str	r7, [r5, #0]
 80268c4:	b1b9      	cbz	r1, 80268f6 <__sflush_r+0xae>
 80268c6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80268ca:	4299      	cmp	r1, r3
 80268cc:	d002      	beq.n	80268d4 <__sflush_r+0x8c>
 80268ce:	4628      	mov	r0, r5
 80268d0:	f7ff fca0 	bl	8026214 <_free_r>
 80268d4:	2300      	movs	r3, #0
 80268d6:	6363      	str	r3, [r4, #52]	@ 0x34
 80268d8:	e00d      	b.n	80268f6 <__sflush_r+0xae>
 80268da:	2301      	movs	r3, #1
 80268dc:	4628      	mov	r0, r5
 80268de:	47b0      	blx	r6
 80268e0:	4602      	mov	r2, r0
 80268e2:	1c50      	adds	r0, r2, #1
 80268e4:	d1c9      	bne.n	802687a <__sflush_r+0x32>
 80268e6:	682b      	ldr	r3, [r5, #0]
 80268e8:	2b00      	cmp	r3, #0
 80268ea:	d0c6      	beq.n	802687a <__sflush_r+0x32>
 80268ec:	2b1d      	cmp	r3, #29
 80268ee:	d001      	beq.n	80268f4 <__sflush_r+0xac>
 80268f0:	2b16      	cmp	r3, #22
 80268f2:	d11e      	bne.n	8026932 <__sflush_r+0xea>
 80268f4:	602f      	str	r7, [r5, #0]
 80268f6:	2000      	movs	r0, #0
 80268f8:	e022      	b.n	8026940 <__sflush_r+0xf8>
 80268fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80268fe:	b21b      	sxth	r3, r3
 8026900:	e01b      	b.n	802693a <__sflush_r+0xf2>
 8026902:	690f      	ldr	r7, [r1, #16]
 8026904:	2f00      	cmp	r7, #0
 8026906:	d0f6      	beq.n	80268f6 <__sflush_r+0xae>
 8026908:	0793      	lsls	r3, r2, #30
 802690a:	680e      	ldr	r6, [r1, #0]
 802690c:	bf08      	it	eq
 802690e:	694b      	ldreq	r3, [r1, #20]
 8026910:	600f      	str	r7, [r1, #0]
 8026912:	bf18      	it	ne
 8026914:	2300      	movne	r3, #0
 8026916:	eba6 0807 	sub.w	r8, r6, r7
 802691a:	608b      	str	r3, [r1, #8]
 802691c:	f1b8 0f00 	cmp.w	r8, #0
 8026920:	dde9      	ble.n	80268f6 <__sflush_r+0xae>
 8026922:	6a21      	ldr	r1, [r4, #32]
 8026924:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8026926:	4643      	mov	r3, r8
 8026928:	463a      	mov	r2, r7
 802692a:	4628      	mov	r0, r5
 802692c:	47b0      	blx	r6
 802692e:	2800      	cmp	r0, #0
 8026930:	dc08      	bgt.n	8026944 <__sflush_r+0xfc>
 8026932:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026936:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802693a:	81a3      	strh	r3, [r4, #12]
 802693c:	f04f 30ff 	mov.w	r0, #4294967295
 8026940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026944:	4407      	add	r7, r0
 8026946:	eba8 0800 	sub.w	r8, r8, r0
 802694a:	e7e7      	b.n	802691c <__sflush_r+0xd4>
 802694c:	dfbffffe 	.word	0xdfbffffe

08026950 <_fflush_r>:
 8026950:	b538      	push	{r3, r4, r5, lr}
 8026952:	690b      	ldr	r3, [r1, #16]
 8026954:	4605      	mov	r5, r0
 8026956:	460c      	mov	r4, r1
 8026958:	b913      	cbnz	r3, 8026960 <_fflush_r+0x10>
 802695a:	2500      	movs	r5, #0
 802695c:	4628      	mov	r0, r5
 802695e:	bd38      	pop	{r3, r4, r5, pc}
 8026960:	b118      	cbz	r0, 802696a <_fflush_r+0x1a>
 8026962:	6a03      	ldr	r3, [r0, #32]
 8026964:	b90b      	cbnz	r3, 802696a <_fflush_r+0x1a>
 8026966:	f7ff fa8f 	bl	8025e88 <__sinit>
 802696a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802696e:	2b00      	cmp	r3, #0
 8026970:	d0f3      	beq.n	802695a <_fflush_r+0xa>
 8026972:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8026974:	07d0      	lsls	r0, r2, #31
 8026976:	d404      	bmi.n	8026982 <_fflush_r+0x32>
 8026978:	0599      	lsls	r1, r3, #22
 802697a:	d402      	bmi.n	8026982 <_fflush_r+0x32>
 802697c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802697e:	f7ff fbdc 	bl	802613a <__retarget_lock_acquire_recursive>
 8026982:	4628      	mov	r0, r5
 8026984:	4621      	mov	r1, r4
 8026986:	f7ff ff5f 	bl	8026848 <__sflush_r>
 802698a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 802698c:	07da      	lsls	r2, r3, #31
 802698e:	4605      	mov	r5, r0
 8026990:	d4e4      	bmi.n	802695c <_fflush_r+0xc>
 8026992:	89a3      	ldrh	r3, [r4, #12]
 8026994:	059b      	lsls	r3, r3, #22
 8026996:	d4e1      	bmi.n	802695c <_fflush_r+0xc>
 8026998:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802699a:	f7ff fbcf 	bl	802613c <__retarget_lock_release_recursive>
 802699e:	e7dd      	b.n	802695c <_fflush_r+0xc>

080269a0 <__swbuf_r>:
 80269a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80269a2:	460e      	mov	r6, r1
 80269a4:	4614      	mov	r4, r2
 80269a6:	4605      	mov	r5, r0
 80269a8:	b118      	cbz	r0, 80269b2 <__swbuf_r+0x12>
 80269aa:	6a03      	ldr	r3, [r0, #32]
 80269ac:	b90b      	cbnz	r3, 80269b2 <__swbuf_r+0x12>
 80269ae:	f7ff fa6b 	bl	8025e88 <__sinit>
 80269b2:	69a3      	ldr	r3, [r4, #24]
 80269b4:	60a3      	str	r3, [r4, #8]
 80269b6:	89a3      	ldrh	r3, [r4, #12]
 80269b8:	071a      	lsls	r2, r3, #28
 80269ba:	d501      	bpl.n	80269c0 <__swbuf_r+0x20>
 80269bc:	6923      	ldr	r3, [r4, #16]
 80269be:	b943      	cbnz	r3, 80269d2 <__swbuf_r+0x32>
 80269c0:	4621      	mov	r1, r4
 80269c2:	4628      	mov	r0, r5
 80269c4:	f000 f82a 	bl	8026a1c <__swsetup_r>
 80269c8:	b118      	cbz	r0, 80269d2 <__swbuf_r+0x32>
 80269ca:	f04f 37ff 	mov.w	r7, #4294967295
 80269ce:	4638      	mov	r0, r7
 80269d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80269d2:	6823      	ldr	r3, [r4, #0]
 80269d4:	6922      	ldr	r2, [r4, #16]
 80269d6:	1a98      	subs	r0, r3, r2
 80269d8:	6963      	ldr	r3, [r4, #20]
 80269da:	b2f6      	uxtb	r6, r6
 80269dc:	4283      	cmp	r3, r0
 80269de:	4637      	mov	r7, r6
 80269e0:	dc05      	bgt.n	80269ee <__swbuf_r+0x4e>
 80269e2:	4621      	mov	r1, r4
 80269e4:	4628      	mov	r0, r5
 80269e6:	f7ff ffb3 	bl	8026950 <_fflush_r>
 80269ea:	2800      	cmp	r0, #0
 80269ec:	d1ed      	bne.n	80269ca <__swbuf_r+0x2a>
 80269ee:	68a3      	ldr	r3, [r4, #8]
 80269f0:	3b01      	subs	r3, #1
 80269f2:	60a3      	str	r3, [r4, #8]
 80269f4:	6823      	ldr	r3, [r4, #0]
 80269f6:	1c5a      	adds	r2, r3, #1
 80269f8:	6022      	str	r2, [r4, #0]
 80269fa:	701e      	strb	r6, [r3, #0]
 80269fc:	6962      	ldr	r2, [r4, #20]
 80269fe:	1c43      	adds	r3, r0, #1
 8026a00:	429a      	cmp	r2, r3
 8026a02:	d004      	beq.n	8026a0e <__swbuf_r+0x6e>
 8026a04:	89a3      	ldrh	r3, [r4, #12]
 8026a06:	07db      	lsls	r3, r3, #31
 8026a08:	d5e1      	bpl.n	80269ce <__swbuf_r+0x2e>
 8026a0a:	2e0a      	cmp	r6, #10
 8026a0c:	d1df      	bne.n	80269ce <__swbuf_r+0x2e>
 8026a0e:	4621      	mov	r1, r4
 8026a10:	4628      	mov	r0, r5
 8026a12:	f7ff ff9d 	bl	8026950 <_fflush_r>
 8026a16:	2800      	cmp	r0, #0
 8026a18:	d0d9      	beq.n	80269ce <__swbuf_r+0x2e>
 8026a1a:	e7d6      	b.n	80269ca <__swbuf_r+0x2a>

08026a1c <__swsetup_r>:
 8026a1c:	b538      	push	{r3, r4, r5, lr}
 8026a1e:	4b29      	ldr	r3, [pc, #164]	@ (8026ac4 <__swsetup_r+0xa8>)
 8026a20:	4605      	mov	r5, r0
 8026a22:	6818      	ldr	r0, [r3, #0]
 8026a24:	460c      	mov	r4, r1
 8026a26:	b118      	cbz	r0, 8026a30 <__swsetup_r+0x14>
 8026a28:	6a03      	ldr	r3, [r0, #32]
 8026a2a:	b90b      	cbnz	r3, 8026a30 <__swsetup_r+0x14>
 8026a2c:	f7ff fa2c 	bl	8025e88 <__sinit>
 8026a30:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026a34:	0719      	lsls	r1, r3, #28
 8026a36:	d422      	bmi.n	8026a7e <__swsetup_r+0x62>
 8026a38:	06da      	lsls	r2, r3, #27
 8026a3a:	d407      	bmi.n	8026a4c <__swsetup_r+0x30>
 8026a3c:	2209      	movs	r2, #9
 8026a3e:	602a      	str	r2, [r5, #0]
 8026a40:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026a44:	81a3      	strh	r3, [r4, #12]
 8026a46:	f04f 30ff 	mov.w	r0, #4294967295
 8026a4a:	e033      	b.n	8026ab4 <__swsetup_r+0x98>
 8026a4c:	0758      	lsls	r0, r3, #29
 8026a4e:	d512      	bpl.n	8026a76 <__swsetup_r+0x5a>
 8026a50:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026a52:	b141      	cbz	r1, 8026a66 <__swsetup_r+0x4a>
 8026a54:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026a58:	4299      	cmp	r1, r3
 8026a5a:	d002      	beq.n	8026a62 <__swsetup_r+0x46>
 8026a5c:	4628      	mov	r0, r5
 8026a5e:	f7ff fbd9 	bl	8026214 <_free_r>
 8026a62:	2300      	movs	r3, #0
 8026a64:	6363      	str	r3, [r4, #52]	@ 0x34
 8026a66:	89a3      	ldrh	r3, [r4, #12]
 8026a68:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8026a6c:	81a3      	strh	r3, [r4, #12]
 8026a6e:	2300      	movs	r3, #0
 8026a70:	6063      	str	r3, [r4, #4]
 8026a72:	6923      	ldr	r3, [r4, #16]
 8026a74:	6023      	str	r3, [r4, #0]
 8026a76:	89a3      	ldrh	r3, [r4, #12]
 8026a78:	f043 0308 	orr.w	r3, r3, #8
 8026a7c:	81a3      	strh	r3, [r4, #12]
 8026a7e:	6923      	ldr	r3, [r4, #16]
 8026a80:	b94b      	cbnz	r3, 8026a96 <__swsetup_r+0x7a>
 8026a82:	89a3      	ldrh	r3, [r4, #12]
 8026a84:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8026a88:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8026a8c:	d003      	beq.n	8026a96 <__swsetup_r+0x7a>
 8026a8e:	4621      	mov	r1, r4
 8026a90:	4628      	mov	r0, r5
 8026a92:	f000 f83f 	bl	8026b14 <__smakebuf_r>
 8026a96:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026a9a:	f013 0201 	ands.w	r2, r3, #1
 8026a9e:	d00a      	beq.n	8026ab6 <__swsetup_r+0x9a>
 8026aa0:	2200      	movs	r2, #0
 8026aa2:	60a2      	str	r2, [r4, #8]
 8026aa4:	6962      	ldr	r2, [r4, #20]
 8026aa6:	4252      	negs	r2, r2
 8026aa8:	61a2      	str	r2, [r4, #24]
 8026aaa:	6922      	ldr	r2, [r4, #16]
 8026aac:	b942      	cbnz	r2, 8026ac0 <__swsetup_r+0xa4>
 8026aae:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8026ab2:	d1c5      	bne.n	8026a40 <__swsetup_r+0x24>
 8026ab4:	bd38      	pop	{r3, r4, r5, pc}
 8026ab6:	0799      	lsls	r1, r3, #30
 8026ab8:	bf58      	it	pl
 8026aba:	6962      	ldrpl	r2, [r4, #20]
 8026abc:	60a2      	str	r2, [r4, #8]
 8026abe:	e7f4      	b.n	8026aaa <__swsetup_r+0x8e>
 8026ac0:	2000      	movs	r0, #0
 8026ac2:	e7f7      	b.n	8026ab4 <__swsetup_r+0x98>
 8026ac4:	200000b8 	.word	0x200000b8

08026ac8 <__swhatbuf_r>:
 8026ac8:	b570      	push	{r4, r5, r6, lr}
 8026aca:	460c      	mov	r4, r1
 8026acc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026ad0:	2900      	cmp	r1, #0
 8026ad2:	b096      	sub	sp, #88	@ 0x58
 8026ad4:	4615      	mov	r5, r2
 8026ad6:	461e      	mov	r6, r3
 8026ad8:	da0d      	bge.n	8026af6 <__swhatbuf_r+0x2e>
 8026ada:	89a3      	ldrh	r3, [r4, #12]
 8026adc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8026ae0:	f04f 0100 	mov.w	r1, #0
 8026ae4:	bf14      	ite	ne
 8026ae6:	2340      	movne	r3, #64	@ 0x40
 8026ae8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8026aec:	2000      	movs	r0, #0
 8026aee:	6031      	str	r1, [r6, #0]
 8026af0:	602b      	str	r3, [r5, #0]
 8026af2:	b016      	add	sp, #88	@ 0x58
 8026af4:	bd70      	pop	{r4, r5, r6, pc}
 8026af6:	466a      	mov	r2, sp
 8026af8:	f000 f848 	bl	8026b8c <_fstat_r>
 8026afc:	2800      	cmp	r0, #0
 8026afe:	dbec      	blt.n	8026ada <__swhatbuf_r+0x12>
 8026b00:	9901      	ldr	r1, [sp, #4]
 8026b02:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8026b06:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8026b0a:	4259      	negs	r1, r3
 8026b0c:	4159      	adcs	r1, r3
 8026b0e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8026b12:	e7eb      	b.n	8026aec <__swhatbuf_r+0x24>

08026b14 <__smakebuf_r>:
 8026b14:	898b      	ldrh	r3, [r1, #12]
 8026b16:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8026b18:	079d      	lsls	r5, r3, #30
 8026b1a:	4606      	mov	r6, r0
 8026b1c:	460c      	mov	r4, r1
 8026b1e:	d507      	bpl.n	8026b30 <__smakebuf_r+0x1c>
 8026b20:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8026b24:	6023      	str	r3, [r4, #0]
 8026b26:	6123      	str	r3, [r4, #16]
 8026b28:	2301      	movs	r3, #1
 8026b2a:	6163      	str	r3, [r4, #20]
 8026b2c:	b003      	add	sp, #12
 8026b2e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026b30:	ab01      	add	r3, sp, #4
 8026b32:	466a      	mov	r2, sp
 8026b34:	f7ff ffc8 	bl	8026ac8 <__swhatbuf_r>
 8026b38:	9f00      	ldr	r7, [sp, #0]
 8026b3a:	4605      	mov	r5, r0
 8026b3c:	4639      	mov	r1, r7
 8026b3e:	4630      	mov	r0, r6
 8026b40:	f7ff f87c 	bl	8025c3c <_malloc_r>
 8026b44:	b948      	cbnz	r0, 8026b5a <__smakebuf_r+0x46>
 8026b46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026b4a:	059a      	lsls	r2, r3, #22
 8026b4c:	d4ee      	bmi.n	8026b2c <__smakebuf_r+0x18>
 8026b4e:	f023 0303 	bic.w	r3, r3, #3
 8026b52:	f043 0302 	orr.w	r3, r3, #2
 8026b56:	81a3      	strh	r3, [r4, #12]
 8026b58:	e7e2      	b.n	8026b20 <__smakebuf_r+0xc>
 8026b5a:	89a3      	ldrh	r3, [r4, #12]
 8026b5c:	6020      	str	r0, [r4, #0]
 8026b5e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8026b62:	81a3      	strh	r3, [r4, #12]
 8026b64:	9b01      	ldr	r3, [sp, #4]
 8026b66:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8026b6a:	b15b      	cbz	r3, 8026b84 <__smakebuf_r+0x70>
 8026b6c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026b70:	4630      	mov	r0, r6
 8026b72:	f000 f81d 	bl	8026bb0 <_isatty_r>
 8026b76:	b128      	cbz	r0, 8026b84 <__smakebuf_r+0x70>
 8026b78:	89a3      	ldrh	r3, [r4, #12]
 8026b7a:	f023 0303 	bic.w	r3, r3, #3
 8026b7e:	f043 0301 	orr.w	r3, r3, #1
 8026b82:	81a3      	strh	r3, [r4, #12]
 8026b84:	89a3      	ldrh	r3, [r4, #12]
 8026b86:	431d      	orrs	r5, r3
 8026b88:	81a5      	strh	r5, [r4, #12]
 8026b8a:	e7cf      	b.n	8026b2c <__smakebuf_r+0x18>

08026b8c <_fstat_r>:
 8026b8c:	b538      	push	{r3, r4, r5, lr}
 8026b8e:	4d07      	ldr	r5, [pc, #28]	@ (8026bac <_fstat_r+0x20>)
 8026b90:	2300      	movs	r3, #0
 8026b92:	4604      	mov	r4, r0
 8026b94:	4608      	mov	r0, r1
 8026b96:	4611      	mov	r1, r2
 8026b98:	602b      	str	r3, [r5, #0]
 8026b9a:	f7db f997 	bl	8001ecc <_fstat>
 8026b9e:	1c43      	adds	r3, r0, #1
 8026ba0:	d102      	bne.n	8026ba8 <_fstat_r+0x1c>
 8026ba2:	682b      	ldr	r3, [r5, #0]
 8026ba4:	b103      	cbz	r3, 8026ba8 <_fstat_r+0x1c>
 8026ba6:	6023      	str	r3, [r4, #0]
 8026ba8:	bd38      	pop	{r3, r4, r5, pc}
 8026baa:	bf00      	nop
 8026bac:	20003aec 	.word	0x20003aec

08026bb0 <_isatty_r>:
 8026bb0:	b538      	push	{r3, r4, r5, lr}
 8026bb2:	4d06      	ldr	r5, [pc, #24]	@ (8026bcc <_isatty_r+0x1c>)
 8026bb4:	2300      	movs	r3, #0
 8026bb6:	4604      	mov	r4, r0
 8026bb8:	4608      	mov	r0, r1
 8026bba:	602b      	str	r3, [r5, #0]
 8026bbc:	f7db f996 	bl	8001eec <_isatty>
 8026bc0:	1c43      	adds	r3, r0, #1
 8026bc2:	d102      	bne.n	8026bca <_isatty_r+0x1a>
 8026bc4:	682b      	ldr	r3, [r5, #0]
 8026bc6:	b103      	cbz	r3, 8026bca <_isatty_r+0x1a>
 8026bc8:	6023      	str	r3, [r4, #0]
 8026bca:	bd38      	pop	{r3, r4, r5, pc}
 8026bcc:	20003aec 	.word	0x20003aec

08026bd0 <_init>:
 8026bd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026bd2:	bf00      	nop
 8026bd4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026bd6:	bc08      	pop	{r3}
 8026bd8:	469e      	mov	lr, r3
 8026bda:	4770      	bx	lr

08026bdc <_fini>:
 8026bdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026bde:	bf00      	nop
 8026be0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026be2:	bc08      	pop	{r3}
 8026be4:	469e      	mov	lr, r3
 8026be6:	4770      	bx	lr
