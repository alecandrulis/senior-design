
f4_senior_design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00024bf8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002878  08024dc8  08024dc8  00025dc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00006996  08027640  08027640  00028640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002b4  0802dfd8  0802dfd8  0002efd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0002fa30  0802e28c  0802e28c  0002f28c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 000000f0  0805dcbc  0805dcbc  0005ecbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0805ddac  0805ddac  0005f300  2**0
                  CONTENTS
  8 .ARM          00000008  0805ddac  0805ddac  0005edac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  0805ddb4  0805ddb4  0005f300  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  0805ddb4  0805ddb4  0005edb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   0000000c  0805ddcc  0805ddcc  0005edcc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         00000100  20000000  0805ddd8  0005f000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000100  0805ded8  0005f100  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000200  0805dfd8  0005f200  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0000396c  20000300  0805e0d8  0005f300  2**2
                  ALLOC
 16 ._user_heap_stack 00000604  20003c6c  0805e0d8  0005fc6c  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  0005f300  2**0
                  CONTENTS, READONLY
 18 .debug_info   00097917  00000000  00000000  0005f330  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0000ff80  00000000  00000000  000f6c47  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003098  00000000  00000000  00106bc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 000023fe  00000000  00000000  00109c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  0002efcf  00000000  00000000  0010c05e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   0003bcd2  00000000  00000000  0013b02d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    000fe620  00000000  00000000  00176cff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  0027531f  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000d8c0  00000000  00000000  002753e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  00282ca4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000300 	.word	0x20000300
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08024db0 	.word	0x08024db0

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000304 	.word	0x20000304
 800020c:	08024db0 	.word	0x08024db0

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_d2f>:
 8000b5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b60:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b64:	bf24      	itt	cs
 8000b66:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b6a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b6e:	d90d      	bls.n	8000b8c <__aeabi_d2f+0x30>
 8000b70:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b74:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b78:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b7c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b80:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b84:	bf08      	it	eq
 8000b86:	f020 0001 	biceq.w	r0, r0, #1
 8000b8a:	4770      	bx	lr
 8000b8c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b90:	d121      	bne.n	8000bd6 <__aeabi_d2f+0x7a>
 8000b92:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b96:	bfbc      	itt	lt
 8000b98:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b9c:	4770      	bxlt	lr
 8000b9e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ba2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba6:	f1c2 0218 	rsb	r2, r2, #24
 8000baa:	f1c2 0c20 	rsb	ip, r2, #32
 8000bae:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bb2:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb6:	bf18      	it	ne
 8000bb8:	f040 0001 	orrne.w	r0, r0, #1
 8000bbc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc8:	ea40 000c 	orr.w	r0, r0, ip
 8000bcc:	fa23 f302 	lsr.w	r3, r3, r2
 8000bd0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd4:	e7cc      	b.n	8000b70 <__aeabi_d2f+0x14>
 8000bd6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bda:	d107      	bne.n	8000bec <__aeabi_d2f+0x90>
 8000bdc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000be0:	bf1e      	ittt	ne
 8000be2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000be6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bea:	4770      	bxne	lr
 8000bec:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000bf0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000bf4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b96a 	b.w	8000ee8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9d08      	ldr	r5, [sp, #32]
 8000c32:	460c      	mov	r4, r1
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d14e      	bne.n	8000cd6 <__udivmoddi4+0xaa>
 8000c38:	4694      	mov	ip, r2
 8000c3a:	458c      	cmp	ip, r1
 8000c3c:	4686      	mov	lr, r0
 8000c3e:	fab2 f282 	clz	r2, r2
 8000c42:	d962      	bls.n	8000d0a <__udivmoddi4+0xde>
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0320 	rsb	r3, r2, #32
 8000c4a:	4091      	lsls	r1, r2
 8000c4c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c50:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c54:	4319      	orrs	r1, r3
 8000c56:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c5a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c5e:	fa1f f68c 	uxth.w	r6, ip
 8000c62:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c6a:	fb07 1114 	mls	r1, r7, r4, r1
 8000c6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c72:	fb04 f106 	mul.w	r1, r4, r6
 8000c76:	4299      	cmp	r1, r3
 8000c78:	d90a      	bls.n	8000c90 <__udivmoddi4+0x64>
 8000c7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7e:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c82:	f080 8112 	bcs.w	8000eaa <__udivmoddi4+0x27e>
 8000c86:	4299      	cmp	r1, r3
 8000c88:	f240 810f 	bls.w	8000eaa <__udivmoddi4+0x27e>
 8000c8c:	3c02      	subs	r4, #2
 8000c8e:	4463      	add	r3, ip
 8000c90:	1a59      	subs	r1, r3, r1
 8000c92:	fa1f f38e 	uxth.w	r3, lr
 8000c96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c9a:	fb07 1110 	mls	r1, r7, r0, r1
 8000c9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ca2:	fb00 f606 	mul.w	r6, r0, r6
 8000ca6:	429e      	cmp	r6, r3
 8000ca8:	d90a      	bls.n	8000cc0 <__udivmoddi4+0x94>
 8000caa:	eb1c 0303 	adds.w	r3, ip, r3
 8000cae:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cb2:	f080 80fc 	bcs.w	8000eae <__udivmoddi4+0x282>
 8000cb6:	429e      	cmp	r6, r3
 8000cb8:	f240 80f9 	bls.w	8000eae <__udivmoddi4+0x282>
 8000cbc:	4463      	add	r3, ip
 8000cbe:	3802      	subs	r0, #2
 8000cc0:	1b9b      	subs	r3, r3, r6
 8000cc2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	b11d      	cbz	r5, 8000cd2 <__udivmoddi4+0xa6>
 8000cca:	40d3      	lsrs	r3, r2
 8000ccc:	2200      	movs	r2, #0
 8000cce:	e9c5 3200 	strd	r3, r2, [r5]
 8000cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd6:	428b      	cmp	r3, r1
 8000cd8:	d905      	bls.n	8000ce6 <__udivmoddi4+0xba>
 8000cda:	b10d      	cbz	r5, 8000ce0 <__udivmoddi4+0xb4>
 8000cdc:	e9c5 0100 	strd	r0, r1, [r5]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	4608      	mov	r0, r1
 8000ce4:	e7f5      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000ce6:	fab3 f183 	clz	r1, r3
 8000cea:	2900      	cmp	r1, #0
 8000cec:	d146      	bne.n	8000d7c <__udivmoddi4+0x150>
 8000cee:	42a3      	cmp	r3, r4
 8000cf0:	d302      	bcc.n	8000cf8 <__udivmoddi4+0xcc>
 8000cf2:	4290      	cmp	r0, r2
 8000cf4:	f0c0 80f0 	bcc.w	8000ed8 <__udivmoddi4+0x2ac>
 8000cf8:	1a86      	subs	r6, r0, r2
 8000cfa:	eb64 0303 	sbc.w	r3, r4, r3
 8000cfe:	2001      	movs	r0, #1
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	d0e6      	beq.n	8000cd2 <__udivmoddi4+0xa6>
 8000d04:	e9c5 6300 	strd	r6, r3, [r5]
 8000d08:	e7e3      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000d0a:	2a00      	cmp	r2, #0
 8000d0c:	f040 8090 	bne.w	8000e30 <__udivmoddi4+0x204>
 8000d10:	eba1 040c 	sub.w	r4, r1, ip
 8000d14:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d18:	fa1f f78c 	uxth.w	r7, ip
 8000d1c:	2101      	movs	r1, #1
 8000d1e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d26:	fb08 4416 	mls	r4, r8, r6, r4
 8000d2a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d2e:	fb07 f006 	mul.w	r0, r7, r6
 8000d32:	4298      	cmp	r0, r3
 8000d34:	d908      	bls.n	8000d48 <__udivmoddi4+0x11c>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d3e:	d202      	bcs.n	8000d46 <__udivmoddi4+0x11a>
 8000d40:	4298      	cmp	r0, r3
 8000d42:	f200 80cd 	bhi.w	8000ee0 <__udivmoddi4+0x2b4>
 8000d46:	4626      	mov	r6, r4
 8000d48:	1a1c      	subs	r4, r3, r0
 8000d4a:	fa1f f38e 	uxth.w	r3, lr
 8000d4e:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d52:	fb08 4410 	mls	r4, r8, r0, r4
 8000d56:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d5a:	fb00 f707 	mul.w	r7, r0, r7
 8000d5e:	429f      	cmp	r7, r3
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0x148>
 8000d62:	eb1c 0303 	adds.w	r3, ip, r3
 8000d66:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d6a:	d202      	bcs.n	8000d72 <__udivmoddi4+0x146>
 8000d6c:	429f      	cmp	r7, r3
 8000d6e:	f200 80b0 	bhi.w	8000ed2 <__udivmoddi4+0x2a6>
 8000d72:	4620      	mov	r0, r4
 8000d74:	1bdb      	subs	r3, r3, r7
 8000d76:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d7a:	e7a5      	b.n	8000cc8 <__udivmoddi4+0x9c>
 8000d7c:	f1c1 0620 	rsb	r6, r1, #32
 8000d80:	408b      	lsls	r3, r1
 8000d82:	fa22 f706 	lsr.w	r7, r2, r6
 8000d86:	431f      	orrs	r7, r3
 8000d88:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d8c:	fa04 f301 	lsl.w	r3, r4, r1
 8000d90:	ea43 030c 	orr.w	r3, r3, ip
 8000d94:	40f4      	lsrs	r4, r6
 8000d96:	fa00 f801 	lsl.w	r8, r0, r1
 8000d9a:	0c38      	lsrs	r0, r7, #16
 8000d9c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000da0:	fbb4 fef0 	udiv	lr, r4, r0
 8000da4:	fa1f fc87 	uxth.w	ip, r7
 8000da8:	fb00 441e 	mls	r4, r0, lr, r4
 8000dac:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000db0:	fb0e f90c 	mul.w	r9, lr, ip
 8000db4:	45a1      	cmp	r9, r4
 8000db6:	fa02 f201 	lsl.w	r2, r2, r1
 8000dba:	d90a      	bls.n	8000dd2 <__udivmoddi4+0x1a6>
 8000dbc:	193c      	adds	r4, r7, r4
 8000dbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dc2:	f080 8084 	bcs.w	8000ece <__udivmoddi4+0x2a2>
 8000dc6:	45a1      	cmp	r9, r4
 8000dc8:	f240 8081 	bls.w	8000ece <__udivmoddi4+0x2a2>
 8000dcc:	f1ae 0e02 	sub.w	lr, lr, #2
 8000dd0:	443c      	add	r4, r7
 8000dd2:	eba4 0409 	sub.w	r4, r4, r9
 8000dd6:	fa1f f983 	uxth.w	r9, r3
 8000dda:	fbb4 f3f0 	udiv	r3, r4, r0
 8000dde:	fb00 4413 	mls	r4, r0, r3, r4
 8000de2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000de6:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dea:	45a4      	cmp	ip, r4
 8000dec:	d907      	bls.n	8000dfe <__udivmoddi4+0x1d2>
 8000dee:	193c      	adds	r4, r7, r4
 8000df0:	f103 30ff 	add.w	r0, r3, #4294967295
 8000df4:	d267      	bcs.n	8000ec6 <__udivmoddi4+0x29a>
 8000df6:	45a4      	cmp	ip, r4
 8000df8:	d965      	bls.n	8000ec6 <__udivmoddi4+0x29a>
 8000dfa:	3b02      	subs	r3, #2
 8000dfc:	443c      	add	r4, r7
 8000dfe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e02:	fba0 9302 	umull	r9, r3, r0, r2
 8000e06:	eba4 040c 	sub.w	r4, r4, ip
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	46ce      	mov	lr, r9
 8000e0e:	469c      	mov	ip, r3
 8000e10:	d351      	bcc.n	8000eb6 <__udivmoddi4+0x28a>
 8000e12:	d04e      	beq.n	8000eb2 <__udivmoddi4+0x286>
 8000e14:	b155      	cbz	r5, 8000e2c <__udivmoddi4+0x200>
 8000e16:	ebb8 030e 	subs.w	r3, r8, lr
 8000e1a:	eb64 040c 	sbc.w	r4, r4, ip
 8000e1e:	fa04 f606 	lsl.w	r6, r4, r6
 8000e22:	40cb      	lsrs	r3, r1
 8000e24:	431e      	orrs	r6, r3
 8000e26:	40cc      	lsrs	r4, r1
 8000e28:	e9c5 6400 	strd	r6, r4, [r5]
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	e750      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000e30:	f1c2 0320 	rsb	r3, r2, #32
 8000e34:	fa20 f103 	lsr.w	r1, r0, r3
 8000e38:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e3c:	fa24 f303 	lsr.w	r3, r4, r3
 8000e40:	4094      	lsls	r4, r2
 8000e42:	430c      	orrs	r4, r1
 8000e44:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e48:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e4c:	fa1f f78c 	uxth.w	r7, ip
 8000e50:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e54:	fb08 3110 	mls	r1, r8, r0, r3
 8000e58:	0c23      	lsrs	r3, r4, #16
 8000e5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5e:	fb00 f107 	mul.w	r1, r0, r7
 8000e62:	4299      	cmp	r1, r3
 8000e64:	d908      	bls.n	8000e78 <__udivmoddi4+0x24c>
 8000e66:	eb1c 0303 	adds.w	r3, ip, r3
 8000e6a:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e6e:	d22c      	bcs.n	8000eca <__udivmoddi4+0x29e>
 8000e70:	4299      	cmp	r1, r3
 8000e72:	d92a      	bls.n	8000eca <__udivmoddi4+0x29e>
 8000e74:	3802      	subs	r0, #2
 8000e76:	4463      	add	r3, ip
 8000e78:	1a5b      	subs	r3, r3, r1
 8000e7a:	b2a4      	uxth	r4, r4
 8000e7c:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e80:	fb08 3311 	mls	r3, r8, r1, r3
 8000e84:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e88:	fb01 f307 	mul.w	r3, r1, r7
 8000e8c:	42a3      	cmp	r3, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x276>
 8000e90:	eb1c 0404 	adds.w	r4, ip, r4
 8000e94:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e98:	d213      	bcs.n	8000ec2 <__udivmoddi4+0x296>
 8000e9a:	42a3      	cmp	r3, r4
 8000e9c:	d911      	bls.n	8000ec2 <__udivmoddi4+0x296>
 8000e9e:	3902      	subs	r1, #2
 8000ea0:	4464      	add	r4, ip
 8000ea2:	1ae4      	subs	r4, r4, r3
 8000ea4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ea8:	e739      	b.n	8000d1e <__udivmoddi4+0xf2>
 8000eaa:	4604      	mov	r4, r0
 8000eac:	e6f0      	b.n	8000c90 <__udivmoddi4+0x64>
 8000eae:	4608      	mov	r0, r1
 8000eb0:	e706      	b.n	8000cc0 <__udivmoddi4+0x94>
 8000eb2:	45c8      	cmp	r8, r9
 8000eb4:	d2ae      	bcs.n	8000e14 <__udivmoddi4+0x1e8>
 8000eb6:	ebb9 0e02 	subs.w	lr, r9, r2
 8000eba:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ebe:	3801      	subs	r0, #1
 8000ec0:	e7a8      	b.n	8000e14 <__udivmoddi4+0x1e8>
 8000ec2:	4631      	mov	r1, r6
 8000ec4:	e7ed      	b.n	8000ea2 <__udivmoddi4+0x276>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	e799      	b.n	8000dfe <__udivmoddi4+0x1d2>
 8000eca:	4630      	mov	r0, r6
 8000ecc:	e7d4      	b.n	8000e78 <__udivmoddi4+0x24c>
 8000ece:	46d6      	mov	lr, sl
 8000ed0:	e77f      	b.n	8000dd2 <__udivmoddi4+0x1a6>
 8000ed2:	4463      	add	r3, ip
 8000ed4:	3802      	subs	r0, #2
 8000ed6:	e74d      	b.n	8000d74 <__udivmoddi4+0x148>
 8000ed8:	4606      	mov	r6, r0
 8000eda:	4623      	mov	r3, r4
 8000edc:	4608      	mov	r0, r1
 8000ede:	e70f      	b.n	8000d00 <__udivmoddi4+0xd4>
 8000ee0:	3e02      	subs	r6, #2
 8000ee2:	4463      	add	r3, ip
 8000ee4:	e730      	b.n	8000d48 <__udivmoddi4+0x11c>
 8000ee6:	bf00      	nop

08000ee8 <__aeabi_idiv0>:
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop

08000eec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b082      	sub	sp, #8
 8000ef0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ef2:	f001 fd43 	bl	800297c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ef6:	f000 f8fd 	bl	80010f4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000efa:	f000 fba7 	bl	800164c <MX_GPIO_Init>
  MX_DMA_Init();
 8000efe:	f000 fb6f 	bl	80015e0 <MX_DMA_Init>
  MX_SPI2_Init();
 8000f02:	f000 f9fd 	bl	8001300 <MX_SPI2_Init>
  MX_CRC_Init();
 8000f06:	f000 f9b9 	bl	800127c <MX_CRC_Init>
  MX_TIM3_Init();
 8000f0a:	f000 faa5 	bl	8001458 <MX_TIM3_Init>
  MX_ADC1_Init();
 8000f0e:	f000 f963 	bl	80011d8 <MX_ADC1_Init>
  MX_TIM2_Init();
 8000f12:	f000 fa2b 	bl	800136c <MX_TIM2_Init>
  MX_I2C2_Init();
 8000f16:	f000 f9c5 	bl	80012a4 <MX_I2C2_Init>
  MX_TIM4_Init();
 8000f1a:	f000 faeb 	bl	80014f4 <MX_TIM4_Init>
  MX_TouchGFX_Init();
 8000f1e:	f007 f885 	bl	800802c <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */

	  HAL_TIM_PWM_Init(&htim2);
 8000f22:	4866      	ldr	r0, [pc, #408]	@ (80010bc <main+0x1d0>)
 8000f24:	f006 f912 	bl	800714c <HAL_TIM_PWM_Init>



	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f28:	2000      	movs	r0, #0
 8000f2a:	f001 f9ad 	bl	8002288 <Displ_Init>
	  touchgfxSignalVSync();
 8000f2e:	f00d f981 	bl	800e234 <touchgfxSignalVSync>
	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f32:	2000      	movs	r0, #0
 8000f34:	f001 f9a8 	bl	8002288 <Displ_Init>
	  touchgfxSignalVSync();
 8000f38:	f00d f97c 	bl	800e234 <touchgfxSignalVSync>


	  Displ_BackLight('I');  					// initialize backlight
 8000f3c:	2049      	movs	r0, #73	@ 0x49
 8000f3e:	f001 fa49 	bl	80023d4 <Displ_BackLight>
	  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 8000f42:	485f      	ldr	r0, [pc, #380]	@ (80010c0 <main+0x1d4>)
 8000f44:	f006 f892 	bl	800706c <HAL_TIM_Base_Start_IT>
	  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f48:	2201      	movs	r2, #1
 8000f4a:	495e      	ldr	r1, [pc, #376]	@ (80010c4 <main+0x1d8>)
 8000f4c:	485e      	ldr	r0, [pc, #376]	@ (80010c8 <main+0x1dc>)
 8000f4e:	f001 feff 	bl	8002d50 <HAL_ADC_Start_DMA>
	  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000f52:	2100      	movs	r1, #0
 8000f54:	4859      	ldr	r0, [pc, #356]	@ (80010bc <main+0x1d0>)
 8000f56:	f006 f953 	bl	8007200 <HAL_TIM_PWM_Start>

	  HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 8000f5a:	2104      	movs	r1, #4
 8000f5c:	485b      	ldr	r0, [pc, #364]	@ (80010cc <main+0x1e0>)
 8000f5e:	f006 f94f 	bl	8007200 <HAL_TIM_PWM_Start>
	  htim4.Instance->CCR2 = 10;
 8000f62:	4b5a      	ldr	r3, [pc, #360]	@ (80010cc <main+0x1e0>)
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	220a      	movs	r2, #10
 8000f68:	639a      	str	r2, [r3, #56]	@ 0x38
	  htim2.Instance->CCR1 = 15000;
 8000f6a:	4b54      	ldr	r3, [pc, #336]	@ (80010bc <main+0x1d0>)
 8000f6c:	681b      	ldr	r3, [r3, #0]
 8000f6e:	f643 2298 	movw	r2, #15000	@ 0x3a98
 8000f72:	635a      	str	r2, [r3, #52]	@ 0x34
//	  }

	  while (1)
	  {

		  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f74:	2201      	movs	r2, #1
 8000f76:	4953      	ldr	r1, [pc, #332]	@ (80010c4 <main+0x1d8>)
 8000f78:	4853      	ldr	r0, [pc, #332]	@ (80010c8 <main+0x1dc>)
 8000f7a:	f001 fee9 	bl	8002d50 <HAL_ADC_Start_DMA>
		  HAL_I2C_Master_Transmit (&hi2c2, 0xB8, i2c_buffer, 3, 100);
 8000f7e:	2364      	movs	r3, #100	@ 0x64
 8000f80:	9300      	str	r3, [sp, #0]
 8000f82:	2303      	movs	r3, #3
 8000f84:	4a52      	ldr	r2, [pc, #328]	@ (80010d0 <main+0x1e4>)
 8000f86:	21b8      	movs	r1, #184	@ 0xb8
 8000f88:	4852      	ldr	r0, [pc, #328]	@ (80010d4 <main+0x1e8>)
 8000f8a:	f003 fb2d 	bl	80045e8 <HAL_I2C_Master_Transmit>
		  HAL_I2C_Master_Receive (&hi2c2, 0xB9, i2c_return, 8, 100);
 8000f8e:	2364      	movs	r3, #100	@ 0x64
 8000f90:	9300      	str	r3, [sp, #0]
 8000f92:	2308      	movs	r3, #8
 8000f94:	4a50      	ldr	r2, [pc, #320]	@ (80010d8 <main+0x1ec>)
 8000f96:	21b9      	movs	r1, #185	@ 0xb9
 8000f98:	484e      	ldr	r0, [pc, #312]	@ (80010d4 <main+0x1e8>)
 8000f9a:	f003 fc23 	bl	80047e4 <HAL_I2C_Master_Receive>
		  temp = ((i2c_return[4] << 8) + i2c_return[5]);
 8000f9e:	4b4e      	ldr	r3, [pc, #312]	@ (80010d8 <main+0x1ec>)
 8000fa0:	791b      	ldrb	r3, [r3, #4]
 8000fa2:	021b      	lsls	r3, r3, #8
 8000fa4:	4a4c      	ldr	r2, [pc, #304]	@ (80010d8 <main+0x1ec>)
 8000fa6:	7952      	ldrb	r2, [r2, #5]
 8000fa8:	4413      	add	r3, r2
 8000faa:	ee07 3a90 	vmov	s15, r3
 8000fae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fb2:	4b4a      	ldr	r3, [pc, #296]	@ (80010dc <main+0x1f0>)
 8000fb4:	edc3 7a00 	vstr	s15, [r3]
		  hum = ((i2c_return[2] << 8) + i2c_return[3]);
 8000fb8:	4b47      	ldr	r3, [pc, #284]	@ (80010d8 <main+0x1ec>)
 8000fba:	789b      	ldrb	r3, [r3, #2]
 8000fbc:	021b      	lsls	r3, r3, #8
 8000fbe:	4a46      	ldr	r2, [pc, #280]	@ (80010d8 <main+0x1ec>)
 8000fc0:	78d2      	ldrb	r2, [r2, #3]
 8000fc2:	4413      	add	r3, r2
 8000fc4:	ee07 3a90 	vmov	s15, r3
 8000fc8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fcc:	4b44      	ldr	r3, [pc, #272]	@ (80010e0 <main+0x1f4>)
 8000fce:	edc3 7a00 	vstr	s15, [r3]
		  temp = floor(temp)/10.0;
 8000fd2:	4b42      	ldr	r3, [pc, #264]	@ (80010dc <main+0x1f0>)
 8000fd4:	681b      	ldr	r3, [r3, #0]
 8000fd6:	4618      	mov	r0, r3
 8000fd8:	f7ff face 	bl	8000578 <__aeabi_f2d>
 8000fdc:	4602      	mov	r2, r0
 8000fde:	460b      	mov	r3, r1
 8000fe0:	ec43 2b10 	vmov	d0, r2, r3
 8000fe4:	f022 fe40 	bl	8023c68 <floor>
 8000fe8:	ec51 0b10 	vmov	r0, r1, d0
 8000fec:	f04f 0200 	mov.w	r2, #0
 8000ff0:	4b3c      	ldr	r3, [pc, #240]	@ (80010e4 <main+0x1f8>)
 8000ff2:	f7ff fc43 	bl	800087c <__aeabi_ddiv>
 8000ff6:	4602      	mov	r2, r0
 8000ff8:	460b      	mov	r3, r1
 8000ffa:	4610      	mov	r0, r2
 8000ffc:	4619      	mov	r1, r3
 8000ffe:	f7ff fdad 	bl	8000b5c <__aeabi_d2f>
 8001002:	4603      	mov	r3, r0
 8001004:	4a35      	ldr	r2, [pc, #212]	@ (80010dc <main+0x1f0>)
 8001006:	6013      	str	r3, [r2, #0]
		  hum = floor(hum)/10.0;
 8001008:	4b35      	ldr	r3, [pc, #212]	@ (80010e0 <main+0x1f4>)
 800100a:	681b      	ldr	r3, [r3, #0]
 800100c:	4618      	mov	r0, r3
 800100e:	f7ff fab3 	bl	8000578 <__aeabi_f2d>
 8001012:	4602      	mov	r2, r0
 8001014:	460b      	mov	r3, r1
 8001016:	ec43 2b10 	vmov	d0, r2, r3
 800101a:	f022 fe25 	bl	8023c68 <floor>
 800101e:	ec51 0b10 	vmov	r0, r1, d0
 8001022:	f04f 0200 	mov.w	r2, #0
 8001026:	4b2f      	ldr	r3, [pc, #188]	@ (80010e4 <main+0x1f8>)
 8001028:	f7ff fc28 	bl	800087c <__aeabi_ddiv>
 800102c:	4602      	mov	r2, r0
 800102e:	460b      	mov	r3, r1
 8001030:	4610      	mov	r0, r2
 8001032:	4619      	mov	r1, r3
 8001034:	f7ff fd92 	bl	8000b5c <__aeabi_d2f>
 8001038:	4603      	mov	r3, r0
 800103a:	4a29      	ldr	r2, [pc, #164]	@ (80010e0 <main+0x1f4>)
 800103c:	6013      	str	r3, [r2, #0]

		  //htim4.Instance->CCR2 = (value_adc/4096.0) * 100;
		  if (temp < 23){
 800103e:	4b27      	ldr	r3, [pc, #156]	@ (80010dc <main+0x1f0>)
 8001040:	edd3 7a00 	vldr	s15, [r3]
 8001044:	eeb3 7a07 	vmov.f32	s14, #55	@ 0x41b80000  23.0
 8001048:	eef4 7ac7 	vcmpe.f32	s15, s14
 800104c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001050:	d503      	bpl.n	800105a <main+0x16e>
			  htim4.Instance->CCR2 = 10;
 8001052:	4b1e      	ldr	r3, [pc, #120]	@ (80010cc <main+0x1e0>)
 8001054:	681b      	ldr	r3, [r3, #0]
 8001056:	220a      	movs	r2, #10
 8001058:	639a      	str	r2, [r3, #56]	@ 0x38
		  }
		  if (temp > 24){
 800105a:	4b20      	ldr	r3, [pc, #128]	@ (80010dc <main+0x1f0>)
 800105c:	edd3 7a00 	vldr	s15, [r3]
 8001060:	eeb3 7a08 	vmov.f32	s14, #56	@ 0x41c00000  24.0
 8001064:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800106c:	dd03      	ble.n	8001076 <main+0x18a>
			  htim4.Instance->CCR2 = 0;
 800106e:	4b17      	ldr	r3, [pc, #92]	@ (80010cc <main+0x1e0>)
 8001070:	681b      	ldr	r3, [r3, #0]
 8001072:	2200      	movs	r2, #0
 8001074:	639a      	str	r2, [r3, #56]	@ 0x38
//			  htim2.Instance->CCR1 = 0;
//
//		  }
		  //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,1);

		  if (hum <=50){
 8001076:	4b1a      	ldr	r3, [pc, #104]	@ (80010e0 <main+0x1f4>)
 8001078:	edd3 7a00 	vldr	s15, [r3]
 800107c:	ed9f 7a1a 	vldr	s14, [pc, #104]	@ 80010e8 <main+0x1fc>
 8001080:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001084:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001088:	d805      	bhi.n	8001096 <main+0x1aa>
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,1);
 800108a:	2201      	movs	r2, #1
 800108c:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8001090:	4816      	ldr	r0, [pc, #88]	@ (80010ec <main+0x200>)
 8001092:	f003 f919 	bl	80042c8 <HAL_GPIO_WritePin>
		  }
		  if (hum >=80){
 8001096:	4b12      	ldr	r3, [pc, #72]	@ (80010e0 <main+0x1f4>)
 8001098:	edd3 7a00 	vldr	s15, [r3]
 800109c:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 80010f0 <main+0x204>
 80010a0:	eef4 7ac7 	vcmpe.f32	s15, s14
 80010a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80010a8:	db05      	blt.n	80010b6 <main+0x1ca>
				  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,0);
 80010aa:	2200      	movs	r2, #0
 80010ac:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80010b0:	480e      	ldr	r0, [pc, #56]	@ (80010ec <main+0x200>)
 80010b2:	f003 f909 	bl	80042c8 <HAL_GPIO_WritePin>



    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80010b6:	f006 ffc1 	bl	800803c <MX_TouchGFX_Process>
		  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 80010ba:	e75b      	b.n	8000f74 <main+0x88>
 80010bc:	200004d8 	.word	0x200004d8
 80010c0:	20000520 	.word	0x20000520
 80010c4:	200005b0 	.word	0x200005b0
 80010c8:	2000031c 	.word	0x2000031c
 80010cc:	20000568 	.word	0x20000568
 80010d0:	20000004 	.word	0x20000004
 80010d4:	200003cc 	.word	0x200003cc
 80010d8:	200005bc 	.word	0x200005bc
 80010dc:	200005b4 	.word	0x200005b4
 80010e0:	200005b8 	.word	0x200005b8
 80010e4:	40240000 	.word	0x40240000
 80010e8:	42480000 	.word	0x42480000
 80010ec:	40020000 	.word	0x40020000
 80010f0:	42a00000 	.word	0x42a00000

080010f4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80010f4:	b580      	push	{r7, lr}
 80010f6:	b094      	sub	sp, #80	@ 0x50
 80010f8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80010fa:	f107 031c 	add.w	r3, r7, #28
 80010fe:	2234      	movs	r2, #52	@ 0x34
 8001100:	2100      	movs	r1, #0
 8001102:	4618      	mov	r0, r3
 8001104:	f023 f83b 	bl	802417e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001108:	f107 0308 	add.w	r3, r7, #8
 800110c:	2200      	movs	r2, #0
 800110e:	601a      	str	r2, [r3, #0]
 8001110:	605a      	str	r2, [r3, #4]
 8001112:	609a      	str	r2, [r3, #8]
 8001114:	60da      	str	r2, [r3, #12]
 8001116:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001118:	2300      	movs	r3, #0
 800111a:	607b      	str	r3, [r7, #4]
 800111c:	4b2c      	ldr	r3, [pc, #176]	@ (80011d0 <SystemClock_Config+0xdc>)
 800111e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001120:	4a2b      	ldr	r2, [pc, #172]	@ (80011d0 <SystemClock_Config+0xdc>)
 8001122:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001126:	6413      	str	r3, [r2, #64]	@ 0x40
 8001128:	4b29      	ldr	r3, [pc, #164]	@ (80011d0 <SystemClock_Config+0xdc>)
 800112a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800112c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001130:	607b      	str	r3, [r7, #4]
 8001132:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001134:	2300      	movs	r3, #0
 8001136:	603b      	str	r3, [r7, #0]
 8001138:	4b26      	ldr	r3, [pc, #152]	@ (80011d4 <SystemClock_Config+0xe0>)
 800113a:	681b      	ldr	r3, [r3, #0]
 800113c:	4a25      	ldr	r2, [pc, #148]	@ (80011d4 <SystemClock_Config+0xe0>)
 800113e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001142:	6013      	str	r3, [r2, #0]
 8001144:	4b23      	ldr	r3, [pc, #140]	@ (80011d4 <SystemClock_Config+0xe0>)
 8001146:	681b      	ldr	r3, [r3, #0]
 8001148:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800114c:	603b      	str	r3, [r7, #0]
 800114e:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001150:	2302      	movs	r3, #2
 8001152:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001154:	2301      	movs	r3, #1
 8001156:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001158:	2310      	movs	r3, #16
 800115a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800115c:	2302      	movs	r3, #2
 800115e:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001160:	2300      	movs	r3, #0
 8001162:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001164:	2308      	movs	r3, #8
 8001166:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001168:	23b4      	movs	r3, #180	@ 0xb4
 800116a:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800116c:	2302      	movs	r3, #2
 800116e:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001170:	2302      	movs	r3, #2
 8001172:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001174:	2302      	movs	r3, #2
 8001176:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001178:	f107 031c 	add.w	r3, r7, #28
 800117c:	4618      	mov	r0, r3
 800117e:	f004 fc6f 	bl	8005a60 <HAL_RCC_OscConfig>
 8001182:	4603      	mov	r3, r0
 8001184:	2b00      	cmp	r3, #0
 8001186:	d001      	beq.n	800118c <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001188:	f000 fb54 	bl	8001834 <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800118c:	f004 f8e2 	bl	8005354 <HAL_PWREx_EnableOverDrive>
 8001190:	4603      	mov	r3, r0
 8001192:	2b00      	cmp	r3, #0
 8001194:	d001      	beq.n	800119a <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8001196:	f000 fb4d 	bl	8001834 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800119a:	230f      	movs	r3, #15
 800119c:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800119e:	2302      	movs	r3, #2
 80011a0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011a2:	2300      	movs	r3, #0
 80011a4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80011a6:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80011aa:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011ac:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011b0:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011b2:	f107 0308 	add.w	r3, r7, #8
 80011b6:	2105      	movs	r1, #5
 80011b8:	4618      	mov	r0, r3
 80011ba:	f004 f91b 	bl	80053f4 <HAL_RCC_ClockConfig>
 80011be:	4603      	mov	r3, r0
 80011c0:	2b00      	cmp	r3, #0
 80011c2:	d001      	beq.n	80011c8 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 80011c4:	f000 fb36 	bl	8001834 <Error_Handler>
  }
}
 80011c8:	bf00      	nop
 80011ca:	3750      	adds	r7, #80	@ 0x50
 80011cc:	46bd      	mov	sp, r7
 80011ce:	bd80      	pop	{r7, pc}
 80011d0:	40023800 	.word	0x40023800
 80011d4:	40007000 	.word	0x40007000

080011d8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	b084      	sub	sp, #16
 80011dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80011de:	463b      	mov	r3, r7
 80011e0:	2200      	movs	r2, #0
 80011e2:	601a      	str	r2, [r3, #0]
 80011e4:	605a      	str	r2, [r3, #4]
 80011e6:	609a      	str	r2, [r3, #8]
 80011e8:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80011ea:	4b21      	ldr	r3, [pc, #132]	@ (8001270 <MX_ADC1_Init+0x98>)
 80011ec:	4a21      	ldr	r2, [pc, #132]	@ (8001274 <MX_ADC1_Init+0x9c>)
 80011ee:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80011f0:	4b1f      	ldr	r3, [pc, #124]	@ (8001270 <MX_ADC1_Init+0x98>)
 80011f2:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80011f6:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80011f8:	4b1d      	ldr	r3, [pc, #116]	@ (8001270 <MX_ADC1_Init+0x98>)
 80011fa:	2200      	movs	r2, #0
 80011fc:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80011fe:	4b1c      	ldr	r3, [pc, #112]	@ (8001270 <MX_ADC1_Init+0x98>)
 8001200:	2200      	movs	r2, #0
 8001202:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001204:	4b1a      	ldr	r3, [pc, #104]	@ (8001270 <MX_ADC1_Init+0x98>)
 8001206:	2201      	movs	r2, #1
 8001208:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800120a:	4b19      	ldr	r3, [pc, #100]	@ (8001270 <MX_ADC1_Init+0x98>)
 800120c:	2200      	movs	r2, #0
 800120e:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001212:	4b17      	ldr	r3, [pc, #92]	@ (8001270 <MX_ADC1_Init+0x98>)
 8001214:	2200      	movs	r2, #0
 8001216:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001218:	4b15      	ldr	r3, [pc, #84]	@ (8001270 <MX_ADC1_Init+0x98>)
 800121a:	4a17      	ldr	r2, [pc, #92]	@ (8001278 <MX_ADC1_Init+0xa0>)
 800121c:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800121e:	4b14      	ldr	r3, [pc, #80]	@ (8001270 <MX_ADC1_Init+0x98>)
 8001220:	2200      	movs	r2, #0
 8001222:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001224:	4b12      	ldr	r3, [pc, #72]	@ (8001270 <MX_ADC1_Init+0x98>)
 8001226:	2201      	movs	r2, #1
 8001228:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800122a:	4b11      	ldr	r3, [pc, #68]	@ (8001270 <MX_ADC1_Init+0x98>)
 800122c:	2200      	movs	r2, #0
 800122e:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001232:	4b0f      	ldr	r3, [pc, #60]	@ (8001270 <MX_ADC1_Init+0x98>)
 8001234:	2201      	movs	r2, #1
 8001236:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001238:	480d      	ldr	r0, [pc, #52]	@ (8001270 <MX_ADC1_Init+0x98>)
 800123a:	f001 fc35 	bl	8002aa8 <HAL_ADC_Init>
 800123e:	4603      	mov	r3, r0
 8001240:	2b00      	cmp	r3, #0
 8001242:	d001      	beq.n	8001248 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001244:	f000 faf6 	bl	8001834 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 8001248:	230a      	movs	r3, #10
 800124a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800124c:	2301      	movs	r3, #1
 800124e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001250:	2300      	movs	r3, #0
 8001252:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001254:	463b      	mov	r3, r7
 8001256:	4619      	mov	r1, r3
 8001258:	4805      	ldr	r0, [pc, #20]	@ (8001270 <MX_ADC1_Init+0x98>)
 800125a:	f001 feb1 	bl	8002fc0 <HAL_ADC_ConfigChannel>
 800125e:	4603      	mov	r3, r0
 8001260:	2b00      	cmp	r3, #0
 8001262:	d001      	beq.n	8001268 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001264:	f000 fae6 	bl	8001834 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001268:	bf00      	nop
 800126a:	3710      	adds	r7, #16
 800126c:	46bd      	mov	sp, r7
 800126e:	bd80      	pop	{r7, pc}
 8001270:	2000031c 	.word	0x2000031c
 8001274:	40012000 	.word	0x40012000
 8001278:	0f000001 	.word	0x0f000001

0800127c <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 800127c:	b580      	push	{r7, lr}
 800127e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001280:	4b06      	ldr	r3, [pc, #24]	@ (800129c <MX_CRC_Init+0x20>)
 8001282:	4a07      	ldr	r2, [pc, #28]	@ (80012a0 <MX_CRC_Init+0x24>)
 8001284:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001286:	4805      	ldr	r0, [pc, #20]	@ (800129c <MX_CRC_Init+0x20>)
 8001288:	f002 fac3 	bl	8003812 <HAL_CRC_Init>
 800128c:	4603      	mov	r3, r0
 800128e:	2b00      	cmp	r3, #0
 8001290:	d001      	beq.n	8001296 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 8001292:	f000 facf 	bl	8001834 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 8001296:	bf00      	nop
 8001298:	bd80      	pop	{r7, pc}
 800129a:	bf00      	nop
 800129c:	200003c4 	.word	0x200003c4
 80012a0:	40023000 	.word	0x40023000

080012a4 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80012a4:	b580      	push	{r7, lr}
 80012a6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80012a8:	4b12      	ldr	r3, [pc, #72]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012aa:	4a13      	ldr	r2, [pc, #76]	@ (80012f8 <MX_I2C2_Init+0x54>)
 80012ac:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 80012ae:	4b11      	ldr	r3, [pc, #68]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012b0:	4a12      	ldr	r2, [pc, #72]	@ (80012fc <MX_I2C2_Init+0x58>)
 80012b2:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012b4:	4b0f      	ldr	r3, [pc, #60]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012b6:	2200      	movs	r2, #0
 80012b8:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 80012ba:	4b0e      	ldr	r3, [pc, #56]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012bc:	2200      	movs	r2, #0
 80012be:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012c0:	4b0c      	ldr	r3, [pc, #48]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012c2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80012c6:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012c8:	4b0a      	ldr	r3, [pc, #40]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012ca:	2200      	movs	r2, #0
 80012cc:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 80012ce:	4b09      	ldr	r3, [pc, #36]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012d0:	2200      	movs	r2, #0
 80012d2:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012d4:	4b07      	ldr	r3, [pc, #28]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012d6:	2200      	movs	r2, #0
 80012d8:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012da:	4b06      	ldr	r3, [pc, #24]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012dc:	2200      	movs	r2, #0
 80012de:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80012e0:	4804      	ldr	r0, [pc, #16]	@ (80012f4 <MX_I2C2_Init+0x50>)
 80012e2:	f003 f83d 	bl	8004360 <HAL_I2C_Init>
 80012e6:	4603      	mov	r3, r0
 80012e8:	2b00      	cmp	r3, #0
 80012ea:	d001      	beq.n	80012f0 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 80012ec:	f000 faa2 	bl	8001834 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 80012f0:	bf00      	nop
 80012f2:	bd80      	pop	{r7, pc}
 80012f4:	200003cc 	.word	0x200003cc
 80012f8:	40005800 	.word	0x40005800
 80012fc:	000186a0 	.word	0x000186a0

08001300 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001304:	4b17      	ldr	r3, [pc, #92]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001306:	4a18      	ldr	r2, [pc, #96]	@ (8001368 <MX_SPI2_Init+0x68>)
 8001308:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800130a:	4b16      	ldr	r3, [pc, #88]	@ (8001364 <MX_SPI2_Init+0x64>)
 800130c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001310:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001312:	4b14      	ldr	r3, [pc, #80]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001314:	2200      	movs	r2, #0
 8001316:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001318:	4b12      	ldr	r3, [pc, #72]	@ (8001364 <MX_SPI2_Init+0x64>)
 800131a:	2200      	movs	r2, #0
 800131c:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800131e:	4b11      	ldr	r3, [pc, #68]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001320:	2200      	movs	r2, #0
 8001322:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001324:	4b0f      	ldr	r3, [pc, #60]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001326:	2200      	movs	r2, #0
 8001328:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800132a:	4b0e      	ldr	r3, [pc, #56]	@ (8001364 <MX_SPI2_Init+0x64>)
 800132c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001330:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001332:	4b0c      	ldr	r3, [pc, #48]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001334:	2200      	movs	r2, #0
 8001336:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001338:	4b0a      	ldr	r3, [pc, #40]	@ (8001364 <MX_SPI2_Init+0x64>)
 800133a:	2200      	movs	r2, #0
 800133c:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800133e:	4b09      	ldr	r3, [pc, #36]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001340:	2200      	movs	r2, #0
 8001342:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001344:	4b07      	ldr	r3, [pc, #28]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001346:	2200      	movs	r2, #0
 8001348:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 800134a:	4b06      	ldr	r3, [pc, #24]	@ (8001364 <MX_SPI2_Init+0x64>)
 800134c:	220a      	movs	r2, #10
 800134e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001350:	4804      	ldr	r0, [pc, #16]	@ (8001364 <MX_SPI2_Init+0x64>)
 8001352:	f004 fe23 	bl	8005f9c <HAL_SPI_Init>
 8001356:	4603      	mov	r3, r0
 8001358:	2b00      	cmp	r3, #0
 800135a:	d001      	beq.n	8001360 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 800135c:	f000 fa6a 	bl	8001834 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001360:	bf00      	nop
 8001362:	bd80      	pop	{r7, pc}
 8001364:	20000420 	.word	0x20000420
 8001368:	40003800 	.word	0x40003800

0800136c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800136c:	b580      	push	{r7, lr}
 800136e:	b08e      	sub	sp, #56	@ 0x38
 8001370:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001372:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001376:	2200      	movs	r2, #0
 8001378:	601a      	str	r2, [r3, #0]
 800137a:	605a      	str	r2, [r3, #4]
 800137c:	609a      	str	r2, [r3, #8]
 800137e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001380:	f107 0320 	add.w	r3, r7, #32
 8001384:	2200      	movs	r2, #0
 8001386:	601a      	str	r2, [r3, #0]
 8001388:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800138a:	1d3b      	adds	r3, r7, #4
 800138c:	2200      	movs	r2, #0
 800138e:	601a      	str	r2, [r3, #0]
 8001390:	605a      	str	r2, [r3, #4]
 8001392:	609a      	str	r2, [r3, #8]
 8001394:	60da      	str	r2, [r3, #12]
 8001396:	611a      	str	r2, [r3, #16]
 8001398:	615a      	str	r2, [r3, #20]
 800139a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800139c:	4b2d      	ldr	r3, [pc, #180]	@ (8001454 <MX_TIM2_Init+0xe8>)
 800139e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80013a2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 59999;
 80013a4:	4b2b      	ldr	r3, [pc, #172]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013a6:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80013aa:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013ac:	4b29      	ldr	r3, [pc, #164]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013ae:	2200      	movs	r2, #0
 80013b0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 29999;
 80013b2:	4b28      	ldr	r3, [pc, #160]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013b4:	f247 522f 	movw	r2, #29999	@ 0x752f
 80013b8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013ba:	4b26      	ldr	r3, [pc, #152]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013bc:	2200      	movs	r2, #0
 80013be:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80013c0:	4b24      	ldr	r3, [pc, #144]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013c2:	2200      	movs	r2, #0
 80013c4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80013c6:	4823      	ldr	r0, [pc, #140]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013c8:	f005 fe00 	bl	8006fcc <HAL_TIM_Base_Init>
 80013cc:	4603      	mov	r3, r0
 80013ce:	2b00      	cmp	r3, #0
 80013d0:	d001      	beq.n	80013d6 <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 80013d2:	f000 fa2f 	bl	8001834 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80013d6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80013da:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80013dc:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80013e0:	4619      	mov	r1, r3
 80013e2:	481c      	ldr	r0, [pc, #112]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013e4:	f006 f986 	bl	80076f4 <HAL_TIM_ConfigClockSource>
 80013e8:	4603      	mov	r3, r0
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d001      	beq.n	80013f2 <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 80013ee:	f000 fa21 	bl	8001834 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80013f2:	4818      	ldr	r0, [pc, #96]	@ (8001454 <MX_TIM2_Init+0xe8>)
 80013f4:	f005 feaa 	bl	800714c <HAL_TIM_PWM_Init>
 80013f8:	4603      	mov	r3, r0
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d001      	beq.n	8001402 <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 80013fe:	f000 fa19 	bl	8001834 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001402:	2300      	movs	r3, #0
 8001404:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001406:	2300      	movs	r3, #0
 8001408:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800140a:	f107 0320 	add.w	r3, r7, #32
 800140e:	4619      	mov	r1, r3
 8001410:	4810      	ldr	r0, [pc, #64]	@ (8001454 <MX_TIM2_Init+0xe8>)
 8001412:	f006 fd7b 	bl	8007f0c <HAL_TIMEx_MasterConfigSynchronization>
 8001416:	4603      	mov	r3, r0
 8001418:	2b00      	cmp	r3, #0
 800141a:	d001      	beq.n	8001420 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 800141c:	f000 fa0a 	bl	8001834 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001420:	2360      	movs	r3, #96	@ 0x60
 8001422:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001424:	2300      	movs	r3, #0
 8001426:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001428:	2300      	movs	r3, #0
 800142a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800142c:	2300      	movs	r3, #0
 800142e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001430:	1d3b      	adds	r3, r7, #4
 8001432:	2200      	movs	r2, #0
 8001434:	4619      	mov	r1, r3
 8001436:	4807      	ldr	r0, [pc, #28]	@ (8001454 <MX_TIM2_Init+0xe8>)
 8001438:	f006 f89a 	bl	8007570 <HAL_TIM_PWM_ConfigChannel>
 800143c:	4603      	mov	r3, r0
 800143e:	2b00      	cmp	r3, #0
 8001440:	d001      	beq.n	8001446 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8001442:	f000 f9f7 	bl	8001834 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001446:	4803      	ldr	r0, [pc, #12]	@ (8001454 <MX_TIM2_Init+0xe8>)
 8001448:	f000 fc3a 	bl	8001cc0 <HAL_TIM_MspPostInit>

}
 800144c:	bf00      	nop
 800144e:	3738      	adds	r7, #56	@ 0x38
 8001450:	46bd      	mov	sp, r7
 8001452:	bd80      	pop	{r7, pc}
 8001454:	200004d8 	.word	0x200004d8

08001458 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001458:	b580      	push	{r7, lr}
 800145a:	b086      	sub	sp, #24
 800145c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800145e:	f107 0308 	add.w	r3, r7, #8
 8001462:	2200      	movs	r2, #0
 8001464:	601a      	str	r2, [r3, #0]
 8001466:	605a      	str	r2, [r3, #4]
 8001468:	609a      	str	r2, [r3, #8]
 800146a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800146c:	463b      	mov	r3, r7
 800146e:	2200      	movs	r2, #0
 8001470:	601a      	str	r2, [r3, #0]
 8001472:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001474:	4b1d      	ldr	r3, [pc, #116]	@ (80014ec <MX_TIM3_Init+0x94>)
 8001476:	4a1e      	ldr	r2, [pc, #120]	@ (80014f0 <MX_TIM3_Init+0x98>)
 8001478:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9999;
 800147a:	4b1c      	ldr	r3, [pc, #112]	@ (80014ec <MX_TIM3_Init+0x94>)
 800147c:	f242 720f 	movw	r2, #9999	@ 0x270f
 8001480:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001482:	4b1a      	ldr	r3, [pc, #104]	@ (80014ec <MX_TIM3_Init+0x94>)
 8001484:	2200      	movs	r2, #0
 8001486:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 299;
 8001488:	4b18      	ldr	r3, [pc, #96]	@ (80014ec <MX_TIM3_Init+0x94>)
 800148a:	f240 122b 	movw	r2, #299	@ 0x12b
 800148e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001490:	4b16      	ldr	r3, [pc, #88]	@ (80014ec <MX_TIM3_Init+0x94>)
 8001492:	2200      	movs	r2, #0
 8001494:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001496:	4b15      	ldr	r3, [pc, #84]	@ (80014ec <MX_TIM3_Init+0x94>)
 8001498:	2200      	movs	r2, #0
 800149a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 800149c:	4813      	ldr	r0, [pc, #76]	@ (80014ec <MX_TIM3_Init+0x94>)
 800149e:	f005 fd95 	bl	8006fcc <HAL_TIM_Base_Init>
 80014a2:	4603      	mov	r3, r0
 80014a4:	2b00      	cmp	r3, #0
 80014a6:	d001      	beq.n	80014ac <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80014a8:	f000 f9c4 	bl	8001834 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014ac:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014b0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80014b2:	f107 0308 	add.w	r3, r7, #8
 80014b6:	4619      	mov	r1, r3
 80014b8:	480c      	ldr	r0, [pc, #48]	@ (80014ec <MX_TIM3_Init+0x94>)
 80014ba:	f006 f91b 	bl	80076f4 <HAL_TIM_ConfigClockSource>
 80014be:	4603      	mov	r3, r0
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	d001      	beq.n	80014c8 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80014c4:	f000 f9b6 	bl	8001834 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014c8:	2300      	movs	r3, #0
 80014ca:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014cc:	2300      	movs	r3, #0
 80014ce:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80014d0:	463b      	mov	r3, r7
 80014d2:	4619      	mov	r1, r3
 80014d4:	4805      	ldr	r0, [pc, #20]	@ (80014ec <MX_TIM3_Init+0x94>)
 80014d6:	f006 fd19 	bl	8007f0c <HAL_TIMEx_MasterConfigSynchronization>
 80014da:	4603      	mov	r3, r0
 80014dc:	2b00      	cmp	r3, #0
 80014de:	d001      	beq.n	80014e4 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80014e0:	f000 f9a8 	bl	8001834 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80014e4:	bf00      	nop
 80014e6:	3718      	adds	r7, #24
 80014e8:	46bd      	mov	sp, r7
 80014ea:	bd80      	pop	{r7, pc}
 80014ec:	20000520 	.word	0x20000520
 80014f0:	40000400 	.word	0x40000400

080014f4 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 80014f4:	b580      	push	{r7, lr}
 80014f6:	b08e      	sub	sp, #56	@ 0x38
 80014f8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80014fa:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80014fe:	2200      	movs	r2, #0
 8001500:	601a      	str	r2, [r3, #0]
 8001502:	605a      	str	r2, [r3, #4]
 8001504:	609a      	str	r2, [r3, #8]
 8001506:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001508:	f107 0320 	add.w	r3, r7, #32
 800150c:	2200      	movs	r2, #0
 800150e:	601a      	str	r2, [r3, #0]
 8001510:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001512:	1d3b      	adds	r3, r7, #4
 8001514:	2200      	movs	r2, #0
 8001516:	601a      	str	r2, [r3, #0]
 8001518:	605a      	str	r2, [r3, #4]
 800151a:	609a      	str	r2, [r3, #8]
 800151c:	60da      	str	r2, [r3, #12]
 800151e:	611a      	str	r2, [r3, #16]
 8001520:	615a      	str	r2, [r3, #20]
 8001522:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001524:	4b2c      	ldr	r3, [pc, #176]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 8001526:	4a2d      	ldr	r2, [pc, #180]	@ (80015dc <MX_TIM4_Init+0xe8>)
 8001528:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 44999;
 800152a:	4b2b      	ldr	r3, [pc, #172]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 800152c:	f64a 72c7 	movw	r2, #44999	@ 0xafc7
 8001530:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001532:	4b29      	ldr	r3, [pc, #164]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 8001534:	2200      	movs	r2, #0
 8001536:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 19;
 8001538:	4b27      	ldr	r3, [pc, #156]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 800153a:	2213      	movs	r2, #19
 800153c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800153e:	4b26      	ldr	r3, [pc, #152]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 8001540:	2200      	movs	r2, #0
 8001542:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001544:	4b24      	ldr	r3, [pc, #144]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 8001546:	2200      	movs	r2, #0
 8001548:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800154a:	4823      	ldr	r0, [pc, #140]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 800154c:	f005 fd3e 	bl	8006fcc <HAL_TIM_Base_Init>
 8001550:	4603      	mov	r3, r0
 8001552:	2b00      	cmp	r3, #0
 8001554:	d001      	beq.n	800155a <MX_TIM4_Init+0x66>
  {
    Error_Handler();
 8001556:	f000 f96d 	bl	8001834 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800155a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800155e:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001560:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001564:	4619      	mov	r1, r3
 8001566:	481c      	ldr	r0, [pc, #112]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 8001568:	f006 f8c4 	bl	80076f4 <HAL_TIM_ConfigClockSource>
 800156c:	4603      	mov	r3, r0
 800156e:	2b00      	cmp	r3, #0
 8001570:	d001      	beq.n	8001576 <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 8001572:	f000 f95f 	bl	8001834 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001576:	4818      	ldr	r0, [pc, #96]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 8001578:	f005 fde8 	bl	800714c <HAL_TIM_PWM_Init>
 800157c:	4603      	mov	r3, r0
 800157e:	2b00      	cmp	r3, #0
 8001580:	d001      	beq.n	8001586 <MX_TIM4_Init+0x92>
  {
    Error_Handler();
 8001582:	f000 f957 	bl	8001834 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001586:	2300      	movs	r3, #0
 8001588:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800158a:	2300      	movs	r3, #0
 800158c:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800158e:	f107 0320 	add.w	r3, r7, #32
 8001592:	4619      	mov	r1, r3
 8001594:	4810      	ldr	r0, [pc, #64]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 8001596:	f006 fcb9 	bl	8007f0c <HAL_TIMEx_MasterConfigSynchronization>
 800159a:	4603      	mov	r3, r0
 800159c:	2b00      	cmp	r3, #0
 800159e:	d001      	beq.n	80015a4 <MX_TIM4_Init+0xb0>
  {
    Error_Handler();
 80015a0:	f000 f948 	bl	8001834 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80015a4:	2360      	movs	r3, #96	@ 0x60
 80015a6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80015a8:	2300      	movs	r3, #0
 80015aa:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80015ac:	2300      	movs	r3, #0
 80015ae:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80015b0:	2300      	movs	r3, #0
 80015b2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80015b4:	1d3b      	adds	r3, r7, #4
 80015b6:	2204      	movs	r2, #4
 80015b8:	4619      	mov	r1, r3
 80015ba:	4807      	ldr	r0, [pc, #28]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 80015bc:	f005 ffd8 	bl	8007570 <HAL_TIM_PWM_ConfigChannel>
 80015c0:	4603      	mov	r3, r0
 80015c2:	2b00      	cmp	r3, #0
 80015c4:	d001      	beq.n	80015ca <MX_TIM4_Init+0xd6>
  {
    Error_Handler();
 80015c6:	f000 f935 	bl	8001834 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80015ca:	4803      	ldr	r0, [pc, #12]	@ (80015d8 <MX_TIM4_Init+0xe4>)
 80015cc:	f000 fb78 	bl	8001cc0 <HAL_TIM_MspPostInit>

}
 80015d0:	bf00      	nop
 80015d2:	3738      	adds	r7, #56	@ 0x38
 80015d4:	46bd      	mov	sp, r7
 80015d6:	bd80      	pop	{r7, pc}
 80015d8:	20000568 	.word	0x20000568
 80015dc:	40000800 	.word	0x40000800

080015e0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80015e0:	b580      	push	{r7, lr}
 80015e2:	b082      	sub	sp, #8
 80015e4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015e6:	2300      	movs	r3, #0
 80015e8:	607b      	str	r3, [r7, #4]
 80015ea:	4b17      	ldr	r3, [pc, #92]	@ (8001648 <MX_DMA_Init+0x68>)
 80015ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015ee:	4a16      	ldr	r2, [pc, #88]	@ (8001648 <MX_DMA_Init+0x68>)
 80015f0:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80015f4:	6313      	str	r3, [r2, #48]	@ 0x30
 80015f6:	4b14      	ldr	r3, [pc, #80]	@ (8001648 <MX_DMA_Init+0x68>)
 80015f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015fa:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80015fe:	607b      	str	r3, [r7, #4]
 8001600:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001602:	2300      	movs	r3, #0
 8001604:	603b      	str	r3, [r7, #0]
 8001606:	4b10      	ldr	r3, [pc, #64]	@ (8001648 <MX_DMA_Init+0x68>)
 8001608:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800160a:	4a0f      	ldr	r2, [pc, #60]	@ (8001648 <MX_DMA_Init+0x68>)
 800160c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001610:	6313      	str	r3, [r2, #48]	@ 0x30
 8001612:	4b0d      	ldr	r3, [pc, #52]	@ (8001648 <MX_DMA_Init+0x68>)
 8001614:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001616:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800161a:	603b      	str	r3, [r7, #0]
 800161c:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 800161e:	2200      	movs	r2, #0
 8001620:	2100      	movs	r1, #0
 8001622:	200f      	movs	r0, #15
 8001624:	f002 f8a3 	bl	800376e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8001628:	200f      	movs	r0, #15
 800162a:	f002 f8bc 	bl	80037a6 <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800162e:	2200      	movs	r2, #0
 8001630:	2100      	movs	r1, #0
 8001632:	2038      	movs	r0, #56	@ 0x38
 8001634:	f002 f89b 	bl	800376e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8001638:	2038      	movs	r0, #56	@ 0x38
 800163a:	f002 f8b4 	bl	80037a6 <HAL_NVIC_EnableIRQ>

}
 800163e:	bf00      	nop
 8001640:	3708      	adds	r7, #8
 8001642:	46bd      	mov	sp, r7
 8001644:	bd80      	pop	{r7, pc}
 8001646:	bf00      	nop
 8001648:	40023800 	.word	0x40023800

0800164c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800164c:	b580      	push	{r7, lr}
 800164e:	b08a      	sub	sp, #40	@ 0x28
 8001650:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001652:	f107 0314 	add.w	r3, r7, #20
 8001656:	2200      	movs	r2, #0
 8001658:	601a      	str	r2, [r3, #0]
 800165a:	605a      	str	r2, [r3, #4]
 800165c:	609a      	str	r2, [r3, #8]
 800165e:	60da      	str	r2, [r3, #12]
 8001660:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001662:	2300      	movs	r3, #0
 8001664:	613b      	str	r3, [r7, #16]
 8001666:	4b67      	ldr	r3, [pc, #412]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 8001668:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800166a:	4a66      	ldr	r2, [pc, #408]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 800166c:	f043 0304 	orr.w	r3, r3, #4
 8001670:	6313      	str	r3, [r2, #48]	@ 0x30
 8001672:	4b64      	ldr	r3, [pc, #400]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 8001674:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001676:	f003 0304 	and.w	r3, r3, #4
 800167a:	613b      	str	r3, [r7, #16]
 800167c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800167e:	2300      	movs	r3, #0
 8001680:	60fb      	str	r3, [r7, #12]
 8001682:	4b60      	ldr	r3, [pc, #384]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 8001684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001686:	4a5f      	ldr	r2, [pc, #380]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 8001688:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800168c:	6313      	str	r3, [r2, #48]	@ 0x30
 800168e:	4b5d      	ldr	r3, [pc, #372]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 8001690:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001692:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001696:	60fb      	str	r3, [r7, #12]
 8001698:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800169a:	2300      	movs	r3, #0
 800169c:	60bb      	str	r3, [r7, #8]
 800169e:	4b59      	ldr	r3, [pc, #356]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 80016a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016a2:	4a58      	ldr	r2, [pc, #352]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 80016a4:	f043 0301 	orr.w	r3, r3, #1
 80016a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80016aa:	4b56      	ldr	r3, [pc, #344]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 80016ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ae:	f003 0301 	and.w	r3, r3, #1
 80016b2:	60bb      	str	r3, [r7, #8]
 80016b4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016b6:	2300      	movs	r3, #0
 80016b8:	607b      	str	r3, [r7, #4]
 80016ba:	4b52      	ldr	r3, [pc, #328]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 80016bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016be:	4a51      	ldr	r2, [pc, #324]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 80016c0:	f043 0302 	orr.w	r3, r3, #2
 80016c4:	6313      	str	r3, [r2, #48]	@ 0x30
 80016c6:	4b4f      	ldr	r3, [pc, #316]	@ (8001804 <MX_GPIO_Init+0x1b8>)
 80016c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ca:	f003 0302 	and.w	r3, r3, #2
 80016ce:	607b      	str	r3, [r7, #4]
 80016d0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|GPIO_PIN_10, GPIO_PIN_RESET);
 80016d2:	2200      	movs	r2, #0
 80016d4:	f44f 619c 	mov.w	r1, #1248	@ 0x4e0
 80016d8:	484b      	ldr	r0, [pc, #300]	@ (8001808 <MX_GPIO_Init+0x1bc>)
 80016da:	f002 fdf5 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 80016de:	2201      	movs	r2, #1
 80016e0:	2180      	movs	r1, #128	@ 0x80
 80016e2:	484a      	ldr	r0, [pc, #296]	@ (800180c <MX_GPIO_Init+0x1c0>)
 80016e4:	f002 fdf0 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 80016e8:	2201      	movs	r2, #1
 80016ea:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80016ee:	4846      	ldr	r0, [pc, #280]	@ (8001808 <MX_GPIO_Init+0x1bc>)
 80016f0:	f002 fdea 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DISPL_RST_Pin|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 80016f4:	2200      	movs	r2, #0
 80016f6:	f44f 7150 	mov.w	r1, #832	@ 0x340
 80016fa:	4845      	ldr	r0, [pc, #276]	@ (8001810 <MX_GPIO_Init+0x1c4>)
 80016fc:	f002 fde4 	bl	80042c8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001700:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001704:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001706:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 800170a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800170c:	2300      	movs	r3, #0
 800170e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001710:	f107 0314 	add.w	r3, r7, #20
 8001714:	4619      	mov	r1, r3
 8001716:	483d      	ldr	r0, [pc, #244]	@ (800180c <MX_GPIO_Init+0x1c0>)
 8001718:	f002 fc2a 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
  GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 800171c:	230c      	movs	r3, #12
 800171e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001720:	2302      	movs	r3, #2
 8001722:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001724:	2300      	movs	r3, #0
 8001726:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001728:	2303      	movs	r3, #3
 800172a:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 800172c:	2307      	movs	r3, #7
 800172e:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001730:	f107 0314 	add.w	r3, r7, #20
 8001734:	4619      	mov	r1, r3
 8001736:	4834      	ldr	r0, [pc, #208]	@ (8001808 <MX_GPIO_Init+0x1bc>)
 8001738:	f002 fc1a 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin DISPL_LED_Pin DISPL_DC_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|TOUCH_CS_Pin;
 800173c:	f44f 7338 	mov.w	r3, #736	@ 0x2e0
 8001740:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001742:	2301      	movs	r3, #1
 8001744:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001746:	2300      	movs	r3, #0
 8001748:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800174a:	2300      	movs	r3, #0
 800174c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800174e:	f107 0314 	add.w	r3, r7, #20
 8001752:	4619      	mov	r1, r3
 8001754:	482c      	ldr	r0, [pc, #176]	@ (8001808 <MX_GPIO_Init+0x1bc>)
 8001756:	f002 fc0b 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_CS_Pin */
  GPIO_InitStruct.Pin = DISPL_CS_Pin;
 800175a:	2380      	movs	r3, #128	@ 0x80
 800175c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800175e:	2301      	movs	r3, #1
 8001760:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001762:	2300      	movs	r3, #0
 8001764:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001766:	2300      	movs	r3, #0
 8001768:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_CS_GPIO_Port, &GPIO_InitStruct);
 800176a:	f107 0314 	add.w	r3, r7, #20
 800176e:	4619      	mov	r1, r3
 8001770:	4826      	ldr	r0, [pc, #152]	@ (800180c <MX_GPIO_Init+0x1c0>)
 8001772:	f002 fbfd 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8001776:	f44f 7380 	mov.w	r3, #256	@ 0x100
 800177a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800177c:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001780:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001782:	2301      	movs	r3, #1
 8001784:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 8001786:	f107 0314 	add.w	r3, r7, #20
 800178a:	4619      	mov	r1, r3
 800178c:	481e      	ldr	r0, [pc, #120]	@ (8001808 <MX_GPIO_Init+0x1bc>)
 800178e:	f002 fbef 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001792:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001796:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001798:	2301      	movs	r3, #1
 800179a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800179c:	2300      	movs	r3, #0
 800179e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017a0:	2302      	movs	r3, #2
 80017a2:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017a4:	f107 0314 	add.w	r3, r7, #20
 80017a8:	4619      	mov	r1, r3
 80017aa:	4817      	ldr	r0, [pc, #92]	@ (8001808 <MX_GPIO_Init+0x1bc>)
 80017ac:	f002 fbe0 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 80017b0:	2340      	movs	r3, #64	@ 0x40
 80017b2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017b4:	2301      	movs	r3, #1
 80017b6:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017b8:	2300      	movs	r3, #0
 80017ba:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017bc:	2300      	movs	r3, #0
 80017be:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 80017c0:	f107 0314 	add.w	r3, r7, #20
 80017c4:	4619      	mov	r1, r3
 80017c6:	4812      	ldr	r0, [pc, #72]	@ (8001810 <MX_GPIO_Init+0x1c4>)
 80017c8:	f002 fbd2 	bl	8003f70 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80017cc:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80017d0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017d2:	2301      	movs	r3, #1
 80017d4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017d6:	2300      	movs	r3, #0
 80017d8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80017da:	2303      	movs	r3, #3
 80017dc:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017de:	f107 0314 	add.w	r3, r7, #20
 80017e2:	4619      	mov	r1, r3
 80017e4:	480a      	ldr	r0, [pc, #40]	@ (8001810 <MX_GPIO_Init+0x1c4>)
 80017e6:	f002 fbc3 	bl	8003f70 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 80017ea:	2200      	movs	r2, #0
 80017ec:	2100      	movs	r1, #0
 80017ee:	2017      	movs	r0, #23
 80017f0:	f001 ffbd 	bl	800376e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80017f4:	2017      	movs	r0, #23
 80017f6:	f001 ffd6 	bl	80037a6 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80017fa:	bf00      	nop
 80017fc:	3728      	adds	r7, #40	@ 0x28
 80017fe:	46bd      	mov	sp, r7
 8001800:	bd80      	pop	{r7, pc}
 8001802:	bf00      	nop
 8001804:	40023800 	.word	0x40023800
 8001808:	40020000 	.word	0x40020000
 800180c:	40020800 	.word	0x40020800
 8001810:	40020400 	.word	0x40020400

08001814 <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
	void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
	{
 8001814:	b580      	push	{r7, lr}
 8001816:	b082      	sub	sp, #8
 8001818:	af00      	add	r7, sp, #0
 800181a:	6078      	str	r0, [r7, #4]
	  // Check which version of the timer triggered this callback and toggle LED
		if (htim==&TGFX_T){
 800181c:	687b      	ldr	r3, [r7, #4]
 800181e:	4a04      	ldr	r2, [pc, #16]	@ (8001830 <HAL_TIM_PeriodElapsedCallback+0x1c>)
 8001820:	4293      	cmp	r3, r2
 8001822:	d101      	bne.n	8001828 <HAL_TIM_PeriodElapsedCallback+0x14>
			  //Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
			  touchgfxSignalVSync();
 8001824:	f00c fd06 	bl	800e234 <touchgfxSignalVSync>
		}
	}
 8001828:	bf00      	nop
 800182a:	3708      	adds	r7, #8
 800182c:	46bd      	mov	sp, r7
 800182e:	bd80      	pop	{r7, pc}
 8001830:	20000520 	.word	0x20000520

08001834 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001834:	b480      	push	{r7}
 8001836:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001838:	b672      	cpsid	i
}
 800183a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	  /* User can add his own implementation to report the HAL error return state */
	  __disable_irq();
	  while (1)
 800183c:	bf00      	nop
 800183e:	e7fd      	b.n	800183c <Error_Handler+0x8>

08001840 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001840:	b480      	push	{r7}
 8001842:	b083      	sub	sp, #12
 8001844:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001846:	2300      	movs	r3, #0
 8001848:	607b      	str	r3, [r7, #4]
 800184a:	4b10      	ldr	r3, [pc, #64]	@ (800188c <HAL_MspInit+0x4c>)
 800184c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800184e:	4a0f      	ldr	r2, [pc, #60]	@ (800188c <HAL_MspInit+0x4c>)
 8001850:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001854:	6453      	str	r3, [r2, #68]	@ 0x44
 8001856:	4b0d      	ldr	r3, [pc, #52]	@ (800188c <HAL_MspInit+0x4c>)
 8001858:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800185a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800185e:	607b      	str	r3, [r7, #4]
 8001860:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001862:	2300      	movs	r3, #0
 8001864:	603b      	str	r3, [r7, #0]
 8001866:	4b09      	ldr	r3, [pc, #36]	@ (800188c <HAL_MspInit+0x4c>)
 8001868:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800186a:	4a08      	ldr	r2, [pc, #32]	@ (800188c <HAL_MspInit+0x4c>)
 800186c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001870:	6413      	str	r3, [r2, #64]	@ 0x40
 8001872:	4b06      	ldr	r3, [pc, #24]	@ (800188c <HAL_MspInit+0x4c>)
 8001874:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001876:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800187a:	603b      	str	r3, [r7, #0]
 800187c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800187e:	bf00      	nop
 8001880:	370c      	adds	r7, #12
 8001882:	46bd      	mov	sp, r7
 8001884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001888:	4770      	bx	lr
 800188a:	bf00      	nop
 800188c:	40023800 	.word	0x40023800

08001890 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001890:	b580      	push	{r7, lr}
 8001892:	b08a      	sub	sp, #40	@ 0x28
 8001894:	af00      	add	r7, sp, #0
 8001896:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001898:	f107 0314 	add.w	r3, r7, #20
 800189c:	2200      	movs	r2, #0
 800189e:	601a      	str	r2, [r3, #0]
 80018a0:	605a      	str	r2, [r3, #4]
 80018a2:	609a      	str	r2, [r3, #8]
 80018a4:	60da      	str	r2, [r3, #12]
 80018a6:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80018a8:	687b      	ldr	r3, [r7, #4]
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	4a33      	ldr	r2, [pc, #204]	@ (800197c <HAL_ADC_MspInit+0xec>)
 80018ae:	4293      	cmp	r3, r2
 80018b0:	d15f      	bne.n	8001972 <HAL_ADC_MspInit+0xe2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80018b2:	2300      	movs	r3, #0
 80018b4:	613b      	str	r3, [r7, #16]
 80018b6:	4b32      	ldr	r3, [pc, #200]	@ (8001980 <HAL_ADC_MspInit+0xf0>)
 80018b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018ba:	4a31      	ldr	r2, [pc, #196]	@ (8001980 <HAL_ADC_MspInit+0xf0>)
 80018bc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80018c0:	6453      	str	r3, [r2, #68]	@ 0x44
 80018c2:	4b2f      	ldr	r3, [pc, #188]	@ (8001980 <HAL_ADC_MspInit+0xf0>)
 80018c4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018c6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80018ca:	613b      	str	r3, [r7, #16]
 80018cc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018ce:	2300      	movs	r3, #0
 80018d0:	60fb      	str	r3, [r7, #12]
 80018d2:	4b2b      	ldr	r3, [pc, #172]	@ (8001980 <HAL_ADC_MspInit+0xf0>)
 80018d4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018d6:	4a2a      	ldr	r2, [pc, #168]	@ (8001980 <HAL_ADC_MspInit+0xf0>)
 80018d8:	f043 0304 	orr.w	r3, r3, #4
 80018dc:	6313      	str	r3, [r2, #48]	@ 0x30
 80018de:	4b28      	ldr	r3, [pc, #160]	@ (8001980 <HAL_ADC_MspInit+0xf0>)
 80018e0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018e2:	f003 0304 	and.w	r3, r3, #4
 80018e6:	60fb      	str	r3, [r7, #12]
 80018e8:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC0     ------> ADC1_IN10
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 80018ea:	2301      	movs	r3, #1
 80018ec:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80018ee:	2303      	movs	r3, #3
 80018f0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018f2:	2300      	movs	r3, #0
 80018f4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018f6:	f107 0314 	add.w	r3, r7, #20
 80018fa:	4619      	mov	r1, r3
 80018fc:	4821      	ldr	r0, [pc, #132]	@ (8001984 <HAL_ADC_MspInit+0xf4>)
 80018fe:	f002 fb37 	bl	8003f70 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 8001902:	4b21      	ldr	r3, [pc, #132]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 8001904:	4a21      	ldr	r2, [pc, #132]	@ (800198c <HAL_ADC_MspInit+0xfc>)
 8001906:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8001908:	4b1f      	ldr	r3, [pc, #124]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 800190a:	2200      	movs	r2, #0
 800190c:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 800190e:	4b1e      	ldr	r3, [pc, #120]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 8001910:	2200      	movs	r2, #0
 8001912:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 8001914:	4b1c      	ldr	r3, [pc, #112]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 8001916:	2200      	movs	r2, #0
 8001918:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 800191a:	4b1b      	ldr	r3, [pc, #108]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 800191c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001920:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 8001922:	4b19      	ldr	r3, [pc, #100]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 8001924:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001928:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 800192a:	4b17      	ldr	r3, [pc, #92]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 800192c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001930:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 8001932:	4b15      	ldr	r3, [pc, #84]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 8001934:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001938:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 800193a:	4b13      	ldr	r3, [pc, #76]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 800193c:	2200      	movs	r2, #0
 800193e:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001940:	4b11      	ldr	r3, [pc, #68]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 8001942:	2200      	movs	r2, #0
 8001944:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 8001946:	4810      	ldr	r0, [pc, #64]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 8001948:	f001 ff80 	bl	800384c <HAL_DMA_Init>
 800194c:	4603      	mov	r3, r0
 800194e:	2b00      	cmp	r3, #0
 8001950:	d001      	beq.n	8001956 <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 8001952:	f7ff ff6f 	bl	8001834 <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 8001956:	687b      	ldr	r3, [r7, #4]
 8001958:	4a0b      	ldr	r2, [pc, #44]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 800195a:	639a      	str	r2, [r3, #56]	@ 0x38
 800195c:	4a0a      	ldr	r2, [pc, #40]	@ (8001988 <HAL_ADC_MspInit+0xf8>)
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	6393      	str	r3, [r2, #56]	@ 0x38

    /* ADC1 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 8001962:	2200      	movs	r2, #0
 8001964:	2100      	movs	r1, #0
 8001966:	2012      	movs	r0, #18
 8001968:	f001 ff01 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 800196c:	2012      	movs	r0, #18
 800196e:	f001 ff1a 	bl	80037a6 <HAL_NVIC_EnableIRQ>

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 8001972:	bf00      	nop
 8001974:	3728      	adds	r7, #40	@ 0x28
 8001976:	46bd      	mov	sp, r7
 8001978:	bd80      	pop	{r7, pc}
 800197a:	bf00      	nop
 800197c:	40012000 	.word	0x40012000
 8001980:	40023800 	.word	0x40023800
 8001984:	40020800 	.word	0x40020800
 8001988:	20000364 	.word	0x20000364
 800198c:	40026410 	.word	0x40026410

08001990 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 8001990:	b480      	push	{r7}
 8001992:	b085      	sub	sp, #20
 8001994:	af00      	add	r7, sp, #0
 8001996:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	681b      	ldr	r3, [r3, #0]
 800199c:	4a0b      	ldr	r2, [pc, #44]	@ (80019cc <HAL_CRC_MspInit+0x3c>)
 800199e:	4293      	cmp	r3, r2
 80019a0:	d10d      	bne.n	80019be <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019a2:	2300      	movs	r3, #0
 80019a4:	60fb      	str	r3, [r7, #12]
 80019a6:	4b0a      	ldr	r3, [pc, #40]	@ (80019d0 <HAL_CRC_MspInit+0x40>)
 80019a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019aa:	4a09      	ldr	r2, [pc, #36]	@ (80019d0 <HAL_CRC_MspInit+0x40>)
 80019ac:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80019b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80019b2:	4b07      	ldr	r3, [pc, #28]	@ (80019d0 <HAL_CRC_MspInit+0x40>)
 80019b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019b6:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80019ba:	60fb      	str	r3, [r7, #12]
 80019bc:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 80019be:	bf00      	nop
 80019c0:	3714      	adds	r7, #20
 80019c2:	46bd      	mov	sp, r7
 80019c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019c8:	4770      	bx	lr
 80019ca:	bf00      	nop
 80019cc:	40023000 	.word	0x40023000
 80019d0:	40023800 	.word	0x40023800

080019d4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80019d4:	b580      	push	{r7, lr}
 80019d6:	b08a      	sub	sp, #40	@ 0x28
 80019d8:	af00      	add	r7, sp, #0
 80019da:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019dc:	f107 0314 	add.w	r3, r7, #20
 80019e0:	2200      	movs	r2, #0
 80019e2:	601a      	str	r2, [r3, #0]
 80019e4:	605a      	str	r2, [r3, #4]
 80019e6:	609a      	str	r2, [r3, #8]
 80019e8:	60da      	str	r2, [r3, #12]
 80019ea:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C2)
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	4a29      	ldr	r2, [pc, #164]	@ (8001a98 <HAL_I2C_MspInit+0xc4>)
 80019f2:	4293      	cmp	r3, r2
 80019f4:	d14b      	bne.n	8001a8e <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80019f6:	2300      	movs	r3, #0
 80019f8:	613b      	str	r3, [r7, #16]
 80019fa:	4b28      	ldr	r3, [pc, #160]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 80019fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019fe:	4a27      	ldr	r2, [pc, #156]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a00:	f043 0302 	orr.w	r3, r3, #2
 8001a04:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a06:	4b25      	ldr	r3, [pc, #148]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a0a:	f003 0302 	and.w	r3, r3, #2
 8001a0e:	613b      	str	r3, [r7, #16]
 8001a10:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a12:	2300      	movs	r3, #0
 8001a14:	60fb      	str	r3, [r7, #12]
 8001a16:	4b21      	ldr	r3, [pc, #132]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a18:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a1a:	4a20      	ldr	r2, [pc, #128]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a1c:	f043 0304 	orr.w	r3, r3, #4
 8001a20:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a22:	4b1e      	ldr	r3, [pc, #120]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a24:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a26:	f003 0304 	and.w	r3, r3, #4
 8001a2a:	60fb      	str	r3, [r7, #12]
 8001a2c:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PC12     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001a2e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001a32:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a34:	2312      	movs	r3, #18
 8001a36:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a38:	2301      	movs	r3, #1
 8001a3a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a3c:	2303      	movs	r3, #3
 8001a3e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a40:	2304      	movs	r3, #4
 8001a42:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a44:	f107 0314 	add.w	r3, r7, #20
 8001a48:	4619      	mov	r1, r3
 8001a4a:	4815      	ldr	r0, [pc, #84]	@ (8001aa0 <HAL_I2C_MspInit+0xcc>)
 8001a4c:	f002 fa90 	bl	8003f70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001a50:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001a54:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a56:	2312      	movs	r3, #18
 8001a58:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a5a:	2301      	movs	r3, #1
 8001a5c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a5e:	2303      	movs	r3, #3
 8001a60:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a62:	2304      	movs	r3, #4
 8001a64:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a66:	f107 0314 	add.w	r3, r7, #20
 8001a6a:	4619      	mov	r1, r3
 8001a6c:	480d      	ldr	r0, [pc, #52]	@ (8001aa4 <HAL_I2C_MspInit+0xd0>)
 8001a6e:	f002 fa7f 	bl	8003f70 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001a72:	2300      	movs	r3, #0
 8001a74:	60bb      	str	r3, [r7, #8]
 8001a76:	4b09      	ldr	r3, [pc, #36]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a7a:	4a08      	ldr	r2, [pc, #32]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a7c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001a80:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a82:	4b06      	ldr	r3, [pc, #24]	@ (8001a9c <HAL_I2C_MspInit+0xc8>)
 8001a84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a86:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001a8a:	60bb      	str	r3, [r7, #8]
 8001a8c:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8001a8e:	bf00      	nop
 8001a90:	3728      	adds	r7, #40	@ 0x28
 8001a92:	46bd      	mov	sp, r7
 8001a94:	bd80      	pop	{r7, pc}
 8001a96:	bf00      	nop
 8001a98:	40005800 	.word	0x40005800
 8001a9c:	40023800 	.word	0x40023800
 8001aa0:	40020400 	.word	0x40020400
 8001aa4:	40020800 	.word	0x40020800

08001aa8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001aa8:	b580      	push	{r7, lr}
 8001aaa:	b08a      	sub	sp, #40	@ 0x28
 8001aac:	af00      	add	r7, sp, #0
 8001aae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ab0:	f107 0314 	add.w	r3, r7, #20
 8001ab4:	2200      	movs	r2, #0
 8001ab6:	601a      	str	r2, [r3, #0]
 8001ab8:	605a      	str	r2, [r3, #4]
 8001aba:	609a      	str	r2, [r3, #8]
 8001abc:	60da      	str	r2, [r3, #12]
 8001abe:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	4a4b      	ldr	r2, [pc, #300]	@ (8001bf4 <HAL_SPI_MspInit+0x14c>)
 8001ac6:	4293      	cmp	r3, r2
 8001ac8:	f040 8090 	bne.w	8001bec <HAL_SPI_MspInit+0x144>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001acc:	2300      	movs	r3, #0
 8001ace:	613b      	str	r3, [r7, #16]
 8001ad0:	4b49      	ldr	r3, [pc, #292]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001ad2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ad4:	4a48      	ldr	r2, [pc, #288]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001ad6:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001ada:	6413      	str	r3, [r2, #64]	@ 0x40
 8001adc:	4b46      	ldr	r3, [pc, #280]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001ade:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ae0:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001ae4:	613b      	str	r3, [r7, #16]
 8001ae6:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001ae8:	2300      	movs	r3, #0
 8001aea:	60fb      	str	r3, [r7, #12]
 8001aec:	4b42      	ldr	r3, [pc, #264]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001aee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001af0:	4a41      	ldr	r2, [pc, #260]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001af2:	f043 0304 	orr.w	r3, r3, #4
 8001af6:	6313      	str	r3, [r2, #48]	@ 0x30
 8001af8:	4b3f      	ldr	r3, [pc, #252]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001afa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001afc:	f003 0304 	and.w	r3, r3, #4
 8001b00:	60fb      	str	r3, [r7, #12]
 8001b02:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b04:	2300      	movs	r3, #0
 8001b06:	60bb      	str	r3, [r7, #8]
 8001b08:	4b3b      	ldr	r3, [pc, #236]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001b0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b0c:	4a3a      	ldr	r2, [pc, #232]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001b0e:	f043 0302 	orr.w	r3, r3, #2
 8001b12:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b14:	4b38      	ldr	r3, [pc, #224]	@ (8001bf8 <HAL_SPI_MspInit+0x150>)
 8001b16:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b18:	f003 0302 	and.w	r3, r3, #2
 8001b1c:	60bb      	str	r3, [r7, #8]
 8001b1e:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = DISPL_MOSI_Pin;
 8001b20:	2302      	movs	r3, #2
 8001b22:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b24:	2302      	movs	r3, #2
 8001b26:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b28:	2300      	movs	r3, #0
 8001b2a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b2c:	2303      	movs	r3, #3
 8001b2e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 8001b30:	2307      	movs	r3, #7
 8001b32:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_MOSI_GPIO_Port, &GPIO_InitStruct);
 8001b34:	f107 0314 	add.w	r3, r7, #20
 8001b38:	4619      	mov	r1, r3
 8001b3a:	4830      	ldr	r0, [pc, #192]	@ (8001bfc <HAL_SPI_MspInit+0x154>)
 8001b3c:	f002 fa18 	bl	8003f70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = TOUCH_MISO_Pin;
 8001b40:	2304      	movs	r3, #4
 8001b42:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b44:	2302      	movs	r3, #2
 8001b46:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b48:	2300      	movs	r3, #0
 8001b4a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b4c:	2303      	movs	r3, #3
 8001b4e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b50:	2305      	movs	r3, #5
 8001b52:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(TOUCH_MISO_GPIO_Port, &GPIO_InitStruct);
 8001b54:	f107 0314 	add.w	r3, r7, #20
 8001b58:	4619      	mov	r1, r3
 8001b5a:	4828      	ldr	r0, [pc, #160]	@ (8001bfc <HAL_SPI_MspInit+0x154>)
 8001b5c:	f002 fa08 	bl	8003f70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DISPL_SCK_Pin;
 8001b60:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001b64:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b66:	2302      	movs	r3, #2
 8001b68:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b6a:	2300      	movs	r3, #0
 8001b6c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b6e:	2303      	movs	r3, #3
 8001b70:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b72:	2305      	movs	r3, #5
 8001b74:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_SCK_GPIO_Port, &GPIO_InitStruct);
 8001b76:	f107 0314 	add.w	r3, r7, #20
 8001b7a:	4619      	mov	r1, r3
 8001b7c:	4820      	ldr	r0, [pc, #128]	@ (8001c00 <HAL_SPI_MspInit+0x158>)
 8001b7e:	f002 f9f7 	bl	8003f70 <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8001b82:	4b20      	ldr	r3, [pc, #128]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001b84:	4a20      	ldr	r2, [pc, #128]	@ (8001c08 <HAL_SPI_MspInit+0x160>)
 8001b86:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8001b88:	4b1e      	ldr	r3, [pc, #120]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001b8a:	2200      	movs	r2, #0
 8001b8c:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001b8e:	4b1d      	ldr	r3, [pc, #116]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001b90:	2240      	movs	r2, #64	@ 0x40
 8001b92:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001b94:	4b1b      	ldr	r3, [pc, #108]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001b96:	2200      	movs	r2, #0
 8001b98:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001b9a:	4b1a      	ldr	r3, [pc, #104]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001b9c:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001ba0:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001ba2:	4b18      	ldr	r3, [pc, #96]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001ba4:	2200      	movs	r2, #0
 8001ba6:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001ba8:	4b16      	ldr	r3, [pc, #88]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001baa:	2200      	movs	r2, #0
 8001bac:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8001bae:	4b15      	ldr	r3, [pc, #84]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001bb0:	2200      	movs	r2, #0
 8001bb2:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001bb4:	4b13      	ldr	r3, [pc, #76]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001bb6:	2200      	movs	r2, #0
 8001bb8:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001bba:	4b12      	ldr	r3, [pc, #72]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8001bc0:	4810      	ldr	r0, [pc, #64]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001bc2:	f001 fe43 	bl	800384c <HAL_DMA_Init>
 8001bc6:	4603      	mov	r3, r0
 8001bc8:	2b00      	cmp	r3, #0
 8001bca:	d001      	beq.n	8001bd0 <HAL_SPI_MspInit+0x128>
    {
      Error_Handler();
 8001bcc:	f7ff fe32 	bl	8001834 <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8001bd0:	687b      	ldr	r3, [r7, #4]
 8001bd2:	4a0c      	ldr	r2, [pc, #48]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001bd4:	649a      	str	r2, [r3, #72]	@ 0x48
 8001bd6:	4a0b      	ldr	r2, [pc, #44]	@ (8001c04 <HAL_SPI_MspInit+0x15c>)
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8001bdc:	2200      	movs	r2, #0
 8001bde:	2100      	movs	r1, #0
 8001be0:	2024      	movs	r0, #36	@ 0x24
 8001be2:	f001 fdc4 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8001be6:	2024      	movs	r0, #36	@ 0x24
 8001be8:	f001 fddd 	bl	80037a6 <HAL_NVIC_EnableIRQ>

  /* USER CODE END SPI2_MspInit 1 */

  }

}
 8001bec:	bf00      	nop
 8001bee:	3728      	adds	r7, #40	@ 0x28
 8001bf0:	46bd      	mov	sp, r7
 8001bf2:	bd80      	pop	{r7, pc}
 8001bf4:	40003800 	.word	0x40003800
 8001bf8:	40023800 	.word	0x40023800
 8001bfc:	40020800 	.word	0x40020800
 8001c00:	40020400 	.word	0x40020400
 8001c04:	20000478 	.word	0x20000478
 8001c08:	40026070 	.word	0x40026070

08001c0c <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001c0c:	b580      	push	{r7, lr}
 8001c0e:	b086      	sub	sp, #24
 8001c10:	af00      	add	r7, sp, #0
 8001c12:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001c14:	687b      	ldr	r3, [r7, #4]
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c1c:	d10e      	bne.n	8001c3c <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001c1e:	2300      	movs	r3, #0
 8001c20:	617b      	str	r3, [r7, #20]
 8001c22:	4b24      	ldr	r3, [pc, #144]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c26:	4a23      	ldr	r2, [pc, #140]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c28:	f043 0301 	orr.w	r3, r3, #1
 8001c2c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c2e:	4b21      	ldr	r3, [pc, #132]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c32:	f003 0301 	and.w	r3, r3, #1
 8001c36:	617b      	str	r3, [r7, #20]
 8001c38:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001c3a:	e036      	b.n	8001caa <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM3)
 8001c3c:	687b      	ldr	r3, [r7, #4]
 8001c3e:	681b      	ldr	r3, [r3, #0]
 8001c40:	4a1d      	ldr	r2, [pc, #116]	@ (8001cb8 <HAL_TIM_Base_MspInit+0xac>)
 8001c42:	4293      	cmp	r3, r2
 8001c44:	d116      	bne.n	8001c74 <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c46:	2300      	movs	r3, #0
 8001c48:	613b      	str	r3, [r7, #16]
 8001c4a:	4b1a      	ldr	r3, [pc, #104]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c4e:	4a19      	ldr	r2, [pc, #100]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c50:	f043 0302 	orr.w	r3, r3, #2
 8001c54:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c56:	4b17      	ldr	r3, [pc, #92]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c5a:	f003 0302 	and.w	r3, r3, #2
 8001c5e:	613b      	str	r3, [r7, #16]
 8001c60:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001c62:	2200      	movs	r2, #0
 8001c64:	2100      	movs	r1, #0
 8001c66:	201d      	movs	r0, #29
 8001c68:	f001 fd81 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001c6c:	201d      	movs	r0, #29
 8001c6e:	f001 fd9a 	bl	80037a6 <HAL_NVIC_EnableIRQ>
}
 8001c72:	e01a      	b.n	8001caa <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM4)
 8001c74:	687b      	ldr	r3, [r7, #4]
 8001c76:	681b      	ldr	r3, [r3, #0]
 8001c78:	4a10      	ldr	r2, [pc, #64]	@ (8001cbc <HAL_TIM_Base_MspInit+0xb0>)
 8001c7a:	4293      	cmp	r3, r2
 8001c7c:	d115      	bne.n	8001caa <HAL_TIM_Base_MspInit+0x9e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001c7e:	2300      	movs	r3, #0
 8001c80:	60fb      	str	r3, [r7, #12]
 8001c82:	4b0c      	ldr	r3, [pc, #48]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c86:	4a0b      	ldr	r2, [pc, #44]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c88:	f043 0304 	orr.w	r3, r3, #4
 8001c8c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c8e:	4b09      	ldr	r3, [pc, #36]	@ (8001cb4 <HAL_TIM_Base_MspInit+0xa8>)
 8001c90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c92:	f003 0304 	and.w	r3, r3, #4
 8001c96:	60fb      	str	r3, [r7, #12]
 8001c98:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001c9a:	2200      	movs	r2, #0
 8001c9c:	2100      	movs	r1, #0
 8001c9e:	201e      	movs	r0, #30
 8001ca0:	f001 fd65 	bl	800376e <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001ca4:	201e      	movs	r0, #30
 8001ca6:	f001 fd7e 	bl	80037a6 <HAL_NVIC_EnableIRQ>
}
 8001caa:	bf00      	nop
 8001cac:	3718      	adds	r7, #24
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	bd80      	pop	{r7, pc}
 8001cb2:	bf00      	nop
 8001cb4:	40023800 	.word	0x40023800
 8001cb8:	40000400 	.word	0x40000400
 8001cbc:	40000800 	.word	0x40000800

08001cc0 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001cc0:	b580      	push	{r7, lr}
 8001cc2:	b08a      	sub	sp, #40	@ 0x28
 8001cc4:	af00      	add	r7, sp, #0
 8001cc6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cc8:	f107 0314 	add.w	r3, r7, #20
 8001ccc:	2200      	movs	r2, #0
 8001cce:	601a      	str	r2, [r3, #0]
 8001cd0:	605a      	str	r2, [r3, #4]
 8001cd2:	609a      	str	r2, [r3, #8]
 8001cd4:	60da      	str	r2, [r3, #12]
 8001cd6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	681b      	ldr	r3, [r3, #0]
 8001cdc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001ce0:	d11e      	bne.n	8001d20 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	613b      	str	r3, [r7, #16]
 8001ce6:	4b22      	ldr	r3, [pc, #136]	@ (8001d70 <HAL_TIM_MspPostInit+0xb0>)
 8001ce8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cea:	4a21      	ldr	r2, [pc, #132]	@ (8001d70 <HAL_TIM_MspPostInit+0xb0>)
 8001cec:	f043 0301 	orr.w	r3, r3, #1
 8001cf0:	6313      	str	r3, [r2, #48]	@ 0x30
 8001cf2:	4b1f      	ldr	r3, [pc, #124]	@ (8001d70 <HAL_TIM_MspPostInit+0xb0>)
 8001cf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001cf6:	f003 0301 	and.w	r3, r3, #1
 8001cfa:	613b      	str	r3, [r7, #16]
 8001cfc:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001cfe:	2301      	movs	r3, #1
 8001d00:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d02:	2302      	movs	r3, #2
 8001d04:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d06:	2300      	movs	r3, #0
 8001d08:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d0a:	2300      	movs	r3, #0
 8001d0c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001d0e:	2301      	movs	r3, #1
 8001d10:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d12:	f107 0314 	add.w	r3, r7, #20
 8001d16:	4619      	mov	r1, r3
 8001d18:	4816      	ldr	r0, [pc, #88]	@ (8001d74 <HAL_TIM_MspPostInit+0xb4>)
 8001d1a:	f002 f929 	bl	8003f70 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8001d1e:	e022      	b.n	8001d66 <HAL_TIM_MspPostInit+0xa6>
  else if(htim->Instance==TIM4)
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	681b      	ldr	r3, [r3, #0]
 8001d24:	4a14      	ldr	r2, [pc, #80]	@ (8001d78 <HAL_TIM_MspPostInit+0xb8>)
 8001d26:	4293      	cmp	r3, r2
 8001d28:	d11d      	bne.n	8001d66 <HAL_TIM_MspPostInit+0xa6>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d2a:	2300      	movs	r3, #0
 8001d2c:	60fb      	str	r3, [r7, #12]
 8001d2e:	4b10      	ldr	r3, [pc, #64]	@ (8001d70 <HAL_TIM_MspPostInit+0xb0>)
 8001d30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d32:	4a0f      	ldr	r2, [pc, #60]	@ (8001d70 <HAL_TIM_MspPostInit+0xb0>)
 8001d34:	f043 0302 	orr.w	r3, r3, #2
 8001d38:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d3a:	4b0d      	ldr	r3, [pc, #52]	@ (8001d70 <HAL_TIM_MspPostInit+0xb0>)
 8001d3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d3e:	f003 0302 	and.w	r3, r3, #2
 8001d42:	60fb      	str	r3, [r7, #12]
 8001d44:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001d46:	2380      	movs	r3, #128	@ 0x80
 8001d48:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4a:	2302      	movs	r3, #2
 8001d4c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d4e:	2300      	movs	r3, #0
 8001d50:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d52:	2300      	movs	r3, #0
 8001d54:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8001d56:	2302      	movs	r3, #2
 8001d58:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d5a:	f107 0314 	add.w	r3, r7, #20
 8001d5e:	4619      	mov	r1, r3
 8001d60:	4806      	ldr	r0, [pc, #24]	@ (8001d7c <HAL_TIM_MspPostInit+0xbc>)
 8001d62:	f002 f905 	bl	8003f70 <HAL_GPIO_Init>
}
 8001d66:	bf00      	nop
 8001d68:	3728      	adds	r7, #40	@ 0x28
 8001d6a:	46bd      	mov	sp, r7
 8001d6c:	bd80      	pop	{r7, pc}
 8001d6e:	bf00      	nop
 8001d70:	40023800 	.word	0x40023800
 8001d74:	40020000 	.word	0x40020000
 8001d78:	40000800 	.word	0x40000800
 8001d7c:	40020400 	.word	0x40020400

08001d80 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001d80:	b480      	push	{r7}
 8001d82:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001d84:	bf00      	nop
 8001d86:	e7fd      	b.n	8001d84 <NMI_Handler+0x4>

08001d88 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001d88:	b480      	push	{r7}
 8001d8a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001d8c:	bf00      	nop
 8001d8e:	e7fd      	b.n	8001d8c <HardFault_Handler+0x4>

08001d90 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001d90:	b480      	push	{r7}
 8001d92:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001d94:	bf00      	nop
 8001d96:	e7fd      	b.n	8001d94 <MemManage_Handler+0x4>

08001d98 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001d98:	b480      	push	{r7}
 8001d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001d9c:	bf00      	nop
 8001d9e:	e7fd      	b.n	8001d9c <BusFault_Handler+0x4>

08001da0 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001da0:	b480      	push	{r7}
 8001da2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001da4:	bf00      	nop
 8001da6:	e7fd      	b.n	8001da4 <UsageFault_Handler+0x4>

08001da8 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001da8:	b480      	push	{r7}
 8001daa:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001dac:	bf00      	nop
 8001dae:	46bd      	mov	sp, r7
 8001db0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001db4:	4770      	bx	lr

08001db6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001db6:	b480      	push	{r7}
 8001db8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001dba:	bf00      	nop
 8001dbc:	46bd      	mov	sp, r7
 8001dbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dc2:	4770      	bx	lr

08001dc4 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001dc4:	b480      	push	{r7}
 8001dc6:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001dc8:	bf00      	nop
 8001dca:	46bd      	mov	sp, r7
 8001dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd0:	4770      	bx	lr

08001dd2 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001dd2:	b580      	push	{r7, lr}
 8001dd4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001dd6:	f000 fe23 	bl	8002a20 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001dda:	bf00      	nop
 8001ddc:	bd80      	pop	{r7, pc}
	...

08001de0 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8001de0:	b580      	push	{r7, lr}
 8001de2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8001de4:	4802      	ldr	r0, [pc, #8]	@ (8001df0 <DMA1_Stream4_IRQHandler+0x10>)
 8001de6:	f001 fe59 	bl	8003a9c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8001dea:	bf00      	nop
 8001dec:	bd80      	pop	{r7, pc}
 8001dee:	bf00      	nop
 8001df0:	20000478 	.word	0x20000478

08001df4 <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1, ADC2 and ADC3 interrupts.
  */
void ADC_IRQHandler(void)
{
 8001df4:	b580      	push	{r7, lr}
 8001df6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN ADC_IRQn 0 */

  /* USER CODE END ADC_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc1);
 8001df8:	4802      	ldr	r0, [pc, #8]	@ (8001e04 <ADC_IRQHandler+0x10>)
 8001dfa:	f000 fe98 	bl	8002b2e <HAL_ADC_IRQHandler>
  /* USER CODE BEGIN ADC_IRQn 1 */

  /* USER CODE END ADC_IRQn 1 */
}
 8001dfe:	bf00      	nop
 8001e00:	bd80      	pop	{r7, pc}
 8001e02:	bf00      	nop
 8001e04:	2000031c 	.word	0x2000031c

08001e08 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001e08:	b580      	push	{r7, lr}
 8001e0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001e0c:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001e10:	f002 fa8e 	bl	8004330 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001e14:	bf00      	nop
 8001e16:	bd80      	pop	{r7, pc}

08001e18 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001e18:	b580      	push	{r7, lr}
 8001e1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001e1c:	4802      	ldr	r0, [pc, #8]	@ (8001e28 <TIM3_IRQHandler+0x10>)
 8001e1e:	f005 fab7 	bl	8007390 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001e22:	bf00      	nop
 8001e24:	bd80      	pop	{r7, pc}
 8001e26:	bf00      	nop
 8001e28:	20000520 	.word	0x20000520

08001e2c <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001e2c:	b580      	push	{r7, lr}
 8001e2e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001e30:	4802      	ldr	r0, [pc, #8]	@ (8001e3c <TIM4_IRQHandler+0x10>)
 8001e32:	f005 faad 	bl	8007390 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001e36:	bf00      	nop
 8001e38:	bd80      	pop	{r7, pc}
 8001e3a:	bf00      	nop
 8001e3c:	20000568 	.word	0x20000568

08001e40 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8001e40:	b580      	push	{r7, lr}
 8001e42:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8001e44:	4802      	ldr	r0, [pc, #8]	@ (8001e50 <SPI2_IRQHandler+0x10>)
 8001e46:	f004 fdeb 	bl	8006a20 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8001e4a:	bf00      	nop
 8001e4c:	bd80      	pop	{r7, pc}
 8001e4e:	bf00      	nop
 8001e50:	20000420 	.word	0x20000420

08001e54 <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8001e54:	b580      	push	{r7, lr}
 8001e56:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001e58:	4802      	ldr	r0, [pc, #8]	@ (8001e64 <DMA2_Stream0_IRQHandler+0x10>)
 8001e5a:	f001 fe1f 	bl	8003a9c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8001e5e:	bf00      	nop
 8001e60:	bd80      	pop	{r7, pc}
 8001e62:	bf00      	nop
 8001e64:	20000364 	.word	0x20000364

08001e68 <_getpid>:
 8001e68:	b480      	push	{r7}
 8001e6a:	af00      	add	r7, sp, #0
 8001e6c:	2301      	movs	r3, #1
 8001e6e:	4618      	mov	r0, r3
 8001e70:	46bd      	mov	sp, r7
 8001e72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e76:	4770      	bx	lr

08001e78 <_kill>:
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	b082      	sub	sp, #8
 8001e7c:	af00      	add	r7, sp, #0
 8001e7e:	6078      	str	r0, [r7, #4]
 8001e80:	6039      	str	r1, [r7, #0]
 8001e82:	f022 fa1f 	bl	80242c4 <__errno>
 8001e86:	4603      	mov	r3, r0
 8001e88:	2216      	movs	r2, #22
 8001e8a:	601a      	str	r2, [r3, #0]
 8001e8c:	f04f 33ff 	mov.w	r3, #4294967295
 8001e90:	4618      	mov	r0, r3
 8001e92:	3708      	adds	r7, #8
 8001e94:	46bd      	mov	sp, r7
 8001e96:	bd80      	pop	{r7, pc}

08001e98 <_exit>:
 8001e98:	b580      	push	{r7, lr}
 8001e9a:	b082      	sub	sp, #8
 8001e9c:	af00      	add	r7, sp, #0
 8001e9e:	6078      	str	r0, [r7, #4]
 8001ea0:	f04f 31ff 	mov.w	r1, #4294967295
 8001ea4:	6878      	ldr	r0, [r7, #4]
 8001ea6:	f7ff ffe7 	bl	8001e78 <_kill>
 8001eaa:	bf00      	nop
 8001eac:	e7fd      	b.n	8001eaa <_exit+0x12>

08001eae <_read>:
 8001eae:	b580      	push	{r7, lr}
 8001eb0:	b086      	sub	sp, #24
 8001eb2:	af00      	add	r7, sp, #0
 8001eb4:	60f8      	str	r0, [r7, #12]
 8001eb6:	60b9      	str	r1, [r7, #8]
 8001eb8:	607a      	str	r2, [r7, #4]
 8001eba:	2300      	movs	r3, #0
 8001ebc:	617b      	str	r3, [r7, #20]
 8001ebe:	e00a      	b.n	8001ed6 <_read+0x28>
 8001ec0:	f3af 8000 	nop.w
 8001ec4:	4601      	mov	r1, r0
 8001ec6:	68bb      	ldr	r3, [r7, #8]
 8001ec8:	1c5a      	adds	r2, r3, #1
 8001eca:	60ba      	str	r2, [r7, #8]
 8001ecc:	b2ca      	uxtb	r2, r1
 8001ece:	701a      	strb	r2, [r3, #0]
 8001ed0:	697b      	ldr	r3, [r7, #20]
 8001ed2:	3301      	adds	r3, #1
 8001ed4:	617b      	str	r3, [r7, #20]
 8001ed6:	697a      	ldr	r2, [r7, #20]
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	429a      	cmp	r2, r3
 8001edc:	dbf0      	blt.n	8001ec0 <_read+0x12>
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	4618      	mov	r0, r3
 8001ee2:	3718      	adds	r7, #24
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	bd80      	pop	{r7, pc}

08001ee8 <_write>:
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b086      	sub	sp, #24
 8001eec:	af00      	add	r7, sp, #0
 8001eee:	60f8      	str	r0, [r7, #12]
 8001ef0:	60b9      	str	r1, [r7, #8]
 8001ef2:	607a      	str	r2, [r7, #4]
 8001ef4:	2300      	movs	r3, #0
 8001ef6:	617b      	str	r3, [r7, #20]
 8001ef8:	e009      	b.n	8001f0e <_write+0x26>
 8001efa:	68bb      	ldr	r3, [r7, #8]
 8001efc:	1c5a      	adds	r2, r3, #1
 8001efe:	60ba      	str	r2, [r7, #8]
 8001f00:	781b      	ldrb	r3, [r3, #0]
 8001f02:	4618      	mov	r0, r3
 8001f04:	f3af 8000 	nop.w
 8001f08:	697b      	ldr	r3, [r7, #20]
 8001f0a:	3301      	adds	r3, #1
 8001f0c:	617b      	str	r3, [r7, #20]
 8001f0e:	697a      	ldr	r2, [r7, #20]
 8001f10:	687b      	ldr	r3, [r7, #4]
 8001f12:	429a      	cmp	r2, r3
 8001f14:	dbf1      	blt.n	8001efa <_write+0x12>
 8001f16:	687b      	ldr	r3, [r7, #4]
 8001f18:	4618      	mov	r0, r3
 8001f1a:	3718      	adds	r7, #24
 8001f1c:	46bd      	mov	sp, r7
 8001f1e:	bd80      	pop	{r7, pc}

08001f20 <_close>:
 8001f20:	b480      	push	{r7}
 8001f22:	b083      	sub	sp, #12
 8001f24:	af00      	add	r7, sp, #0
 8001f26:	6078      	str	r0, [r7, #4]
 8001f28:	f04f 33ff 	mov.w	r3, #4294967295
 8001f2c:	4618      	mov	r0, r3
 8001f2e:	370c      	adds	r7, #12
 8001f30:	46bd      	mov	sp, r7
 8001f32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f36:	4770      	bx	lr

08001f38 <_fstat>:
 8001f38:	b480      	push	{r7}
 8001f3a:	b083      	sub	sp, #12
 8001f3c:	af00      	add	r7, sp, #0
 8001f3e:	6078      	str	r0, [r7, #4]
 8001f40:	6039      	str	r1, [r7, #0]
 8001f42:	683b      	ldr	r3, [r7, #0]
 8001f44:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f48:	605a      	str	r2, [r3, #4]
 8001f4a:	2300      	movs	r3, #0
 8001f4c:	4618      	mov	r0, r3
 8001f4e:	370c      	adds	r7, #12
 8001f50:	46bd      	mov	sp, r7
 8001f52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f56:	4770      	bx	lr

08001f58 <_isatty>:
 8001f58:	b480      	push	{r7}
 8001f5a:	b083      	sub	sp, #12
 8001f5c:	af00      	add	r7, sp, #0
 8001f5e:	6078      	str	r0, [r7, #4]
 8001f60:	2301      	movs	r3, #1
 8001f62:	4618      	mov	r0, r3
 8001f64:	370c      	adds	r7, #12
 8001f66:	46bd      	mov	sp, r7
 8001f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f6c:	4770      	bx	lr

08001f6e <_lseek>:
 8001f6e:	b480      	push	{r7}
 8001f70:	b085      	sub	sp, #20
 8001f72:	af00      	add	r7, sp, #0
 8001f74:	60f8      	str	r0, [r7, #12]
 8001f76:	60b9      	str	r1, [r7, #8]
 8001f78:	607a      	str	r2, [r7, #4]
 8001f7a:	2300      	movs	r3, #0
 8001f7c:	4618      	mov	r0, r3
 8001f7e:	3714      	adds	r7, #20
 8001f80:	46bd      	mov	sp, r7
 8001f82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f86:	4770      	bx	lr

08001f88 <_sbrk>:
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b086      	sub	sp, #24
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
 8001f90:	4a14      	ldr	r2, [pc, #80]	@ (8001fe4 <_sbrk+0x5c>)
 8001f92:	4b15      	ldr	r3, [pc, #84]	@ (8001fe8 <_sbrk+0x60>)
 8001f94:	1ad3      	subs	r3, r2, r3
 8001f96:	617b      	str	r3, [r7, #20]
 8001f98:	697b      	ldr	r3, [r7, #20]
 8001f9a:	613b      	str	r3, [r7, #16]
 8001f9c:	4b13      	ldr	r3, [pc, #76]	@ (8001fec <_sbrk+0x64>)
 8001f9e:	681b      	ldr	r3, [r3, #0]
 8001fa0:	2b00      	cmp	r3, #0
 8001fa2:	d102      	bne.n	8001faa <_sbrk+0x22>
 8001fa4:	4b11      	ldr	r3, [pc, #68]	@ (8001fec <_sbrk+0x64>)
 8001fa6:	4a12      	ldr	r2, [pc, #72]	@ (8001ff0 <_sbrk+0x68>)
 8001fa8:	601a      	str	r2, [r3, #0]
 8001faa:	4b10      	ldr	r3, [pc, #64]	@ (8001fec <_sbrk+0x64>)
 8001fac:	681a      	ldr	r2, [r3, #0]
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	4413      	add	r3, r2
 8001fb2:	693a      	ldr	r2, [r7, #16]
 8001fb4:	429a      	cmp	r2, r3
 8001fb6:	d207      	bcs.n	8001fc8 <_sbrk+0x40>
 8001fb8:	f022 f984 	bl	80242c4 <__errno>
 8001fbc:	4603      	mov	r3, r0
 8001fbe:	220c      	movs	r2, #12
 8001fc0:	601a      	str	r2, [r3, #0]
 8001fc2:	f04f 33ff 	mov.w	r3, #4294967295
 8001fc6:	e009      	b.n	8001fdc <_sbrk+0x54>
 8001fc8:	4b08      	ldr	r3, [pc, #32]	@ (8001fec <_sbrk+0x64>)
 8001fca:	681b      	ldr	r3, [r3, #0]
 8001fcc:	60fb      	str	r3, [r7, #12]
 8001fce:	4b07      	ldr	r3, [pc, #28]	@ (8001fec <_sbrk+0x64>)
 8001fd0:	681a      	ldr	r2, [r3, #0]
 8001fd2:	687b      	ldr	r3, [r7, #4]
 8001fd4:	4413      	add	r3, r2
 8001fd6:	4a05      	ldr	r2, [pc, #20]	@ (8001fec <_sbrk+0x64>)
 8001fd8:	6013      	str	r3, [r2, #0]
 8001fda:	68fb      	ldr	r3, [r7, #12]
 8001fdc:	4618      	mov	r0, r3
 8001fde:	3718      	adds	r7, #24
 8001fe0:	46bd      	mov	sp, r7
 8001fe2:	bd80      	pop	{r7, pc}
 8001fe4:	20020000 	.word	0x20020000
 8001fe8:	00000400 	.word	0x00000400
 8001fec:	200005c4 	.word	0x200005c4
 8001ff0:	20003c70 	.word	0x20003c70

08001ff4 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001ff4:	b480      	push	{r7}
 8001ff6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001ff8:	4b06      	ldr	r3, [pc, #24]	@ (8002014 <SystemInit+0x20>)
 8001ffa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001ffe:	4a05      	ldr	r2, [pc, #20]	@ (8002014 <SystemInit+0x20>)
 8002000:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002004:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002008:	bf00      	nop
 800200a:	46bd      	mov	sp, r7
 800200c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002010:	4770      	bx	lr
 8002012:	bf00      	nop
 8002014:	e000ed00 	.word	0xe000ed00

08002018 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8002018:	b580      	push	{r7, lr}
 800201a:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 800201c:	2180      	movs	r1, #128	@ 0x80
 800201e:	4810      	ldr	r0, [pc, #64]	@ (8002060 <Displ_Select+0x48>)
 8002020:	f002 f93a 	bl	8004298 <HAL_GPIO_ReadPin>
 8002024:	4603      	mov	r3, r0
 8002026:	2b00      	cmp	r3, #0
 8002028:	d017      	beq.n	800205a <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 800202a:	2201      	movs	r2, #1
 800202c:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002030:	480c      	ldr	r0, [pc, #48]	@ (8002064 <Displ_Select+0x4c>)
 8002032:	f002 f949 	bl	80042c8 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 8002036:	4b0c      	ldr	r3, [pc, #48]	@ (8002068 <Displ_Select+0x50>)
 8002038:	681a      	ldr	r2, [r3, #0]
 800203a:	490b      	ldr	r1, [pc, #44]	@ (8002068 <Displ_Select+0x50>)
 800203c:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 8002040:	4013      	ands	r3, r2
 8002042:	600b      	str	r3, [r1, #0]
 8002044:	4b08      	ldr	r3, [pc, #32]	@ (8002068 <Displ_Select+0x50>)
 8002046:	681b      	ldr	r3, [r3, #0]
 8002048:	4a07      	ldr	r2, [pc, #28]	@ (8002068 <Displ_Select+0x50>)
 800204a:	f043 0308 	orr.w	r3, r3, #8
 800204e:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 8002050:	2200      	movs	r2, #0
 8002052:	2180      	movs	r1, #128	@ 0x80
 8002054:	4802      	ldr	r0, [pc, #8]	@ (8002060 <Displ_Select+0x48>)
 8002056:	f002 f937 	bl	80042c8 <HAL_GPIO_WritePin>
		}
	}
}
 800205a:	bf00      	nop
 800205c:	bd80      	pop	{r7, pc}
 800205e:	bf00      	nop
 8002060:	40020800 	.word	0x40020800
 8002064:	40020000 	.word	0x40020000
 8002068:	40003800 	.word	0x40003800

0800206c <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 800206c:	b580      	push	{r7, lr}
 800206e:	b086      	sub	sp, #24
 8002070:	af00      	add	r7, sp, #0
 8002072:	6039      	str	r1, [r7, #0]
 8002074:	4611      	mov	r1, r2
 8002076:	461a      	mov	r2, r3
 8002078:	4603      	mov	r3, r0
 800207a:	71fb      	strb	r3, [r7, #7]
 800207c:	460b      	mov	r3, r1
 800207e:	80bb      	strh	r3, [r7, #4]
 8002080:	4613      	mov	r3, r2
 8002082:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 8002084:	bf00      	nop
 8002086:	4b25      	ldr	r3, [pc, #148]	@ (800211c <Displ_Transmit+0xb0>)
 8002088:	781b      	ldrb	r3, [r3, #0]
 800208a:	b2db      	uxtb	r3, r3
 800208c:	2b00      	cmp	r3, #0
 800208e:	d0fa      	beq.n	8002086 <Displ_Transmit+0x1a>

	Displ_Select();
 8002090:	f7ff ffc2 	bl	8002018 <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 8002094:	79fb      	ldrb	r3, [r7, #7]
 8002096:	461a      	mov	r2, r3
 8002098:	2180      	movs	r1, #128	@ 0x80
 800209a:	4821      	ldr	r0, [pc, #132]	@ (8002120 <Displ_Transmit+0xb4>)
 800209c:	f002 f914 	bl	80042c8 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 80020a0:	79bb      	ldrb	r3, [r7, #6]
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d016      	beq.n	80020d4 <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 80020a6:	88bb      	ldrh	r3, [r7, #4]
 80020a8:	683a      	ldr	r2, [r7, #0]
 80020aa:	4413      	add	r3, r2
 80020ac:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020ae:	683b      	ldr	r3, [r7, #0]
 80020b0:	617b      	str	r3, [r7, #20]
 80020b2:	e00b      	b.n	80020cc <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 80020b4:	697b      	ldr	r3, [r7, #20]
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 80020ba:	68fb      	ldr	r3, [r7, #12]
 80020bc:	ba5b      	rev16	r3, r3
 80020be:	60bb      	str	r3, [r7, #8]
  return result;
 80020c0:	68ba      	ldr	r2, [r7, #8]
 80020c2:	697b      	ldr	r3, [r7, #20]
 80020c4:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020c6:	697b      	ldr	r3, [r7, #20]
 80020c8:	3304      	adds	r3, #4
 80020ca:	617b      	str	r3, [r7, #20]
 80020cc:	697a      	ldr	r2, [r7, #20]
 80020ce:	693b      	ldr	r3, [r7, #16]
 80020d0:	429a      	cmp	r2, r3
 80020d2:	d3ef      	bcc.n	80020b4 <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 80020d4:	88bb      	ldrh	r3, [r7, #4]
 80020d6:	2b13      	cmp	r3, #19
 80020d8:	d812      	bhi.n	8002100 <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 80020da:	4b10      	ldr	r3, [pc, #64]	@ (800211c <Displ_Transmit+0xb0>)
 80020dc:	2200      	movs	r2, #0
 80020de:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 80020e0:	88ba      	ldrh	r2, [r7, #4]
 80020e2:	f04f 33ff 	mov.w	r3, #4294967295
 80020e6:	6839      	ldr	r1, [r7, #0]
 80020e8:	480e      	ldr	r0, [pc, #56]	@ (8002124 <Displ_Transmit+0xb8>)
 80020ea:	f003 ffe0 	bl	80060ae <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 80020ee:	4b0b      	ldr	r3, [pc, #44]	@ (800211c <Displ_Transmit+0xb0>)
 80020f0:	2201      	movs	r2, #1
 80020f2:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 80020f4:	79bb      	ldrb	r3, [r7, #6]
 80020f6:	2b00      	cmp	r3, #0
 80020f8:	d00b      	beq.n	8002112 <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 80020fa:	f00c f895 	bl	800e228 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 80020fe:	e008      	b.n	8002112 <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 8002100:	4b06      	ldr	r3, [pc, #24]	@ (800211c <Displ_Transmit+0xb0>)
 8002102:	2200      	movs	r2, #0
 8002104:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 8002106:	88bb      	ldrh	r3, [r7, #4]
 8002108:	461a      	mov	r2, r3
 800210a:	6839      	ldr	r1, [r7, #0]
 800210c:	4805      	ldr	r0, [pc, #20]	@ (8002124 <Displ_Transmit+0xb8>)
 800210e:	f004 fbd5 	bl	80068bc <HAL_SPI_Transmit_DMA>
	}
 8002112:	bf00      	nop
 8002114:	3718      	adds	r7, #24
 8002116:	46bd      	mov	sp, r7
 8002118:	bd80      	pop	{r7, pc}
 800211a:	bf00      	nop
 800211c:	2000000c 	.word	0x2000000c
 8002120:	40020000 	.word	0x40020000
 8002124:	20000420 	.word	0x20000420

08002128 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 8002128:	b580      	push	{r7, lr}
 800212a:	b082      	sub	sp, #8
 800212c:	af00      	add	r7, sp, #0
 800212e:	4603      	mov	r3, r0
 8002130:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 8002132:	1df9      	adds	r1, r7, #7
 8002134:	2300      	movs	r3, #0
 8002136:	2201      	movs	r2, #1
 8002138:	2000      	movs	r0, #0
 800213a:	f7ff ff97 	bl	800206c <Displ_Transmit>
}
 800213e:	bf00      	nop
 8002140:	3708      	adds	r7, #8
 8002142:	46bd      	mov	sp, r7
 8002144:	bd80      	pop	{r7, pc}

08002146 <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 8002146:	b580      	push	{r7, lr}
 8002148:	b084      	sub	sp, #16
 800214a:	af00      	add	r7, sp, #0
 800214c:	60f8      	str	r0, [r7, #12]
 800214e:	60b9      	str	r1, [r7, #8]
 8002150:	4613      	mov	r3, r2
 8002152:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 8002154:	68bb      	ldr	r3, [r7, #8]
 8002156:	2b00      	cmp	r3, #0
 8002158:	d007      	beq.n	800216a <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 800215a:	68bb      	ldr	r3, [r7, #8]
 800215c:	b29a      	uxth	r2, r3
 800215e:	79fb      	ldrb	r3, [r7, #7]
 8002160:	68f9      	ldr	r1, [r7, #12]
 8002162:	2001      	movs	r0, #1
 8002164:	f7ff ff82 	bl	800206c <Displ_Transmit>
 8002168:	e000      	b.n	800216c <Displ_WriteData+0x26>
	if (buff_size==0) return;
 800216a:	bf00      	nop
}
 800216c:	3710      	adds	r7, #16
 800216e:	46bd      	mov	sp, r7
 8002170:	bd80      	pop	{r7, pc}
	...

08002174 <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 8002174:	b580      	push	{r7, lr}
 8002176:	af00      	add	r7, sp, #0
	Displ_Select();
 8002178:	f7ff ff4e 	bl	8002018 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 800217c:	2200      	movs	r2, #0
 800217e:	2140      	movs	r1, #64	@ 0x40
 8002180:	4819      	ldr	r0, [pc, #100]	@ (80021e8 <ILI9XXX_Init+0x74>)
 8002182:	f002 f8a1 	bl	80042c8 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 8002186:	2001      	movs	r0, #1
 8002188:	f000 fc6a 	bl	8002a60 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 800218c:	2201      	movs	r2, #1
 800218e:	2140      	movs	r1, #64	@ 0x40
 8002190:	4815      	ldr	r0, [pc, #84]	@ (80021e8 <ILI9XXX_Init+0x74>)
 8002192:	f002 f899 	bl	80042c8 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 8002196:	2096      	movs	r0, #150	@ 0x96
 8002198:	f000 fc62 	bl	8002a60 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 800219c:	203a      	movs	r0, #58	@ 0x3a
 800219e:	f7ff ffc3 	bl	8002128 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 80021a2:	2200      	movs	r2, #0
 80021a4:	2101      	movs	r1, #1
 80021a6:	4811      	ldr	r0, [pc, #68]	@ (80021ec <ILI9XXX_Init+0x78>)
 80021a8:	f7ff ffcd 	bl	8002146 <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021ac:	20b0      	movs	r0, #176	@ 0xb0
 80021ae:	f7ff ffbb 	bl	8002128 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021b2:	2200      	movs	r2, #0
 80021b4:	2101      	movs	r1, #1
 80021b6:	480e      	ldr	r0, [pc, #56]	@ (80021f0 <ILI9XXX_Init+0x7c>)
 80021b8:	f7ff ffc5 	bl	8002146 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021bc:	20b0      	movs	r0, #176	@ 0xb0
 80021be:	f7ff ffb3 	bl	8002128 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021c2:	2200      	movs	r2, #0
 80021c4:	2101      	movs	r1, #1
 80021c6:	480a      	ldr	r0, [pc, #40]	@ (80021f0 <ILI9XXX_Init+0x7c>)
 80021c8:	f7ff ffbd 	bl	8002146 <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 80021cc:	2011      	movs	r0, #17
 80021ce:	f7ff ffab 	bl	8002128 <Displ_WriteCommand>
	HAL_Delay(120);
 80021d2:	2078      	movs	r0, #120	@ 0x78
 80021d4:	f000 fc44 	bl	8002a60 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 80021d8:	2029      	movs	r0, #41	@ 0x29
 80021da:	f7ff ffa5 	bl	8002128 <Displ_WriteCommand>
	HAL_Delay(5);
 80021de:	2005      	movs	r0, #5
 80021e0:	f000 fc3e 	bl	8002a60 <HAL_Delay>

}
 80021e4:	bf00      	nop
 80021e6:	bd80      	pop	{r7, pc}
 80021e8:	40020400 	.word	0x40020400
 80021ec:	08024dc8 	.word	0x08024dc8
 80021f0:	08024dcc 	.word	0x08024dcc

080021f4 <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 80021f4:	b590      	push	{r4, r7, lr}
 80021f6:	b083      	sub	sp, #12
 80021f8:	af00      	add	r7, sp, #0
 80021fa:	4604      	mov	r4, r0
 80021fc:	4608      	mov	r0, r1
 80021fe:	4611      	mov	r1, r2
 8002200:	461a      	mov	r2, r3
 8002202:	4623      	mov	r3, r4
 8002204:	80fb      	strh	r3, [r7, #6]
 8002206:	4603      	mov	r3, r0
 8002208:	80bb      	strh	r3, [r7, #4]
 800220a:	460b      	mov	r3, r1
 800220c:	807b      	strh	r3, [r7, #2]
 800220e:	4613      	mov	r3, r2
 8002210:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 8002212:	887b      	ldrh	r3, [r7, #2]
 8002214:	061a      	lsls	r2, r3, #24
 8002216:	887b      	ldrh	r3, [r7, #2]
 8002218:	021b      	lsls	r3, r3, #8
 800221a:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 800221e:	431a      	orrs	r2, r3
 8002220:	88fb      	ldrh	r3, [r7, #6]
 8002222:	021b      	lsls	r3, r3, #8
 8002224:	b29b      	uxth	r3, r3
 8002226:	4313      	orrs	r3, r2
 8002228:	88fa      	ldrh	r2, [r7, #6]
 800222a:	0a12      	lsrs	r2, r2, #8
 800222c:	b292      	uxth	r2, r2
 800222e:	431a      	orrs	r2, r3
 8002230:	4b14      	ldr	r3, [pc, #80]	@ (8002284 <Displ_SetAddressWindow+0x90>)
 8002232:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 8002234:	202a      	movs	r0, #42	@ 0x2a
 8002236:	f7ff ff77 	bl	8002128 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 800223a:	2200      	movs	r2, #0
 800223c:	2104      	movs	r1, #4
 800223e:	4811      	ldr	r0, [pc, #68]	@ (8002284 <Displ_SetAddressWindow+0x90>)
 8002240:	f7ff ff81 	bl	8002146 <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 8002244:	883b      	ldrh	r3, [r7, #0]
 8002246:	061a      	lsls	r2, r3, #24
 8002248:	883b      	ldrh	r3, [r7, #0]
 800224a:	021b      	lsls	r3, r3, #8
 800224c:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8002250:	431a      	orrs	r2, r3
 8002252:	88bb      	ldrh	r3, [r7, #4]
 8002254:	021b      	lsls	r3, r3, #8
 8002256:	b29b      	uxth	r3, r3
 8002258:	4313      	orrs	r3, r2
 800225a:	88ba      	ldrh	r2, [r7, #4]
 800225c:	0a12      	lsrs	r2, r2, #8
 800225e:	b292      	uxth	r2, r2
 8002260:	431a      	orrs	r2, r3
 8002262:	4b08      	ldr	r3, [pc, #32]	@ (8002284 <Displ_SetAddressWindow+0x90>)
 8002264:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 8002266:	202b      	movs	r0, #43	@ 0x2b
 8002268:	f7ff ff5e 	bl	8002128 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 800226c:	2200      	movs	r2, #0
 800226e:	2104      	movs	r1, #4
 8002270:	4804      	ldr	r0, [pc, #16]	@ (8002284 <Displ_SetAddressWindow+0x90>)
 8002272:	f7ff ff68 	bl	8002146 <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 8002276:	202c      	movs	r0, #44	@ 0x2c
 8002278:	f7ff ff56 	bl	8002128 <Displ_WriteCommand>
}
 800227c:	bf00      	nop
 800227e:	370c      	adds	r7, #12
 8002280:	46bd      	mov	sp, r7
 8002282:	bd90      	pop	{r4, r7, pc}
 8002284:	200005d0 	.word	0x200005d0

08002288 <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 8002288:	b580      	push	{r7, lr}
 800228a:	b082      	sub	sp, #8
 800228c:	af00      	add	r7, sp, #0
 800228e:	4603      	mov	r3, r0
 8002290:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 8002292:	2201      	movs	r2, #1
 8002294:	2180      	movs	r1, #128	@ 0x80
 8002296:	4809      	ldr	r0, [pc, #36]	@ (80022bc <Displ_Init+0x34>)
 8002298:	f002 f816 	bl	80042c8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 800229c:	2201      	movs	r2, #1
 800229e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80022a2:	4807      	ldr	r0, [pc, #28]	@ (80022c0 <Displ_Init+0x38>)
 80022a4:	f002 f810 	bl	80042c8 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 80022a8:	f7ff ff64 	bl	8002174 <ILI9XXX_Init>
	Displ_Orientation(orientation);
 80022ac:	79fb      	ldrb	r3, [r7, #7]
 80022ae:	4618      	mov	r0, r3
 80022b0:	f000 f808 	bl	80022c4 <Displ_Orientation>
}
 80022b4:	bf00      	nop
 80022b6:	3708      	adds	r7, #8
 80022b8:	46bd      	mov	sp, r7
 80022ba:	bd80      	pop	{r7, pc}
 80022bc:	40020800 	.word	0x40020800
 80022c0:	40020000 	.word	0x40020000

080022c4 <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 80022c4:	b580      	push	{r7, lr}
 80022c6:	b082      	sub	sp, #8
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	4603      	mov	r3, r0
 80022cc:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 80022ce:	79fb      	ldrb	r3, [r7, #7]
 80022d0:	2b03      	cmp	r3, #3
 80022d2:	d83b      	bhi.n	800234c <Displ_Orientation+0x88>
 80022d4:	a201      	add	r2, pc, #4	@ (adr r2, 80022dc <Displ_Orientation+0x18>)
 80022d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80022da:	bf00      	nop
 80022dc:	080022ed 	.word	0x080022ed
 80022e0:	08002305 	.word	0x08002305
 80022e4:	0800231d 	.word	0x0800231d
 80022e8:	08002335 	.word	0x08002335
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 80022ec:	4b1f      	ldr	r3, [pc, #124]	@ (800236c <Displ_Orientation+0xa8>)
 80022ee:	2288      	movs	r2, #136	@ 0x88
 80022f0:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 80022f2:	4b1f      	ldr	r3, [pc, #124]	@ (8002370 <Displ_Orientation+0xac>)
 80022f4:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 80022f8:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 80022fa:	4b1e      	ldr	r3, [pc, #120]	@ (8002374 <Displ_Orientation+0xb0>)
 80022fc:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002300:	801a      	strh	r2, [r3, #0]
			break;
 8002302:	e023      	b.n	800234c <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 8002304:	4b19      	ldr	r3, [pc, #100]	@ (800236c <Displ_Orientation+0xa8>)
 8002306:	22e8      	movs	r2, #232	@ 0xe8
 8002308:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 800230a:	4b19      	ldr	r3, [pc, #100]	@ (8002370 <Displ_Orientation+0xac>)
 800230c:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002310:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8002312:	4b18      	ldr	r3, [pc, #96]	@ (8002374 <Displ_Orientation+0xb0>)
 8002314:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002318:	801a      	strh	r2, [r3, #0]
			break;
 800231a:	e017      	b.n	800234c <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 800231c:	4b13      	ldr	r3, [pc, #76]	@ (800236c <Displ_Orientation+0xa8>)
 800231e:	2248      	movs	r2, #72	@ 0x48
 8002320:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 8002322:	4b13      	ldr	r3, [pc, #76]	@ (8002370 <Displ_Orientation+0xac>)
 8002324:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002328:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 800232a:	4b12      	ldr	r3, [pc, #72]	@ (8002374 <Displ_Orientation+0xb0>)
 800232c:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002330:	801a      	strh	r2, [r3, #0]
			break;
 8002332:	e00b      	b.n	800234c <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 8002334:	4b0d      	ldr	r3, [pc, #52]	@ (800236c <Displ_Orientation+0xa8>)
 8002336:	2228      	movs	r2, #40	@ 0x28
 8002338:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 800233a:	4b0d      	ldr	r3, [pc, #52]	@ (8002370 <Displ_Orientation+0xac>)
 800233c:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002340:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 8002342:	4b0c      	ldr	r3, [pc, #48]	@ (8002374 <Displ_Orientation+0xb0>)
 8002344:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002348:	801a      	strh	r2, [r3, #0]
			break;
 800234a:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 800234c:	2036      	movs	r0, #54	@ 0x36
 800234e:	f7ff feeb 	bl	8002128 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 8002352:	2200      	movs	r2, #0
 8002354:	2101      	movs	r1, #1
 8002356:	4805      	ldr	r0, [pc, #20]	@ (800236c <Displ_Orientation+0xa8>)
 8002358:	f7ff fef5 	bl	8002146 <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 800235c:	4a06      	ldr	r2, [pc, #24]	@ (8002378 <Displ_Orientation+0xb4>)
 800235e:	79fb      	ldrb	r3, [r7, #7]
 8002360:	7013      	strb	r3, [r2, #0]
}
 8002362:	bf00      	nop
 8002364:	3708      	adds	r7, #8
 8002366:	46bd      	mov	sp, r7
 8002368:	bd80      	pop	{r7, pc}
 800236a:	bf00      	nop
 800236c:	200005d4 	.word	0x200005d4
 8002370:	200005cc 	.word	0x200005cc
 8002374:	200005ca 	.word	0x200005ca
 8002378:	200005c8 	.word	0x200005c8

0800237c <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 800237c:	b480      	push	{r7}
 800237e:	b083      	sub	sp, #12
 8002380:	af00      	add	r7, sp, #0
 8002382:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 8002384:	687b      	ldr	r3, [r7, #4]
 8002386:	681b      	ldr	r3, [r3, #0]
 8002388:	4a05      	ldr	r2, [pc, #20]	@ (80023a0 <HAL_SPI_ErrorCallback+0x24>)
 800238a:	4293      	cmp	r3, r2
 800238c:	d102      	bne.n	8002394 <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 800238e:	4b05      	ldr	r3, [pc, #20]	@ (80023a4 <HAL_SPI_ErrorCallback+0x28>)
 8002390:	2201      	movs	r2, #1
 8002392:	701a      	strb	r2, [r3, #0]
	}
}
 8002394:	bf00      	nop
 8002396:	370c      	adds	r7, #12
 8002398:	46bd      	mov	sp, r7
 800239a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239e:	4770      	bx	lr
 80023a0:	40003800 	.word	0x40003800
 80023a4:	2000000c 	.word	0x2000000c

080023a8 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 80023a8:	b580      	push	{r7, lr}
 80023aa:	b082      	sub	sp, #8
 80023ac:	af00      	add	r7, sp, #0
 80023ae:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 80023b0:	687b      	ldr	r3, [r7, #4]
 80023b2:	681b      	ldr	r3, [r3, #0]
 80023b4:	4a05      	ldr	r2, [pc, #20]	@ (80023cc <HAL_SPI_TxCpltCallback+0x24>)
 80023b6:	4293      	cmp	r3, r2
 80023b8:	d104      	bne.n	80023c4 <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 80023ba:	4b05      	ldr	r3, [pc, #20]	@ (80023d0 <HAL_SPI_TxCpltCallback+0x28>)
 80023bc:	2201      	movs	r2, #1
 80023be:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 80023c0:	f00b ff32 	bl	800e228 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 80023c4:	bf00      	nop
 80023c6:	3708      	adds	r7, #8
 80023c8:	46bd      	mov	sp, r7
 80023ca:	bd80      	pop	{r7, pc}
 80023cc:	40003800 	.word	0x40003800
 80023d0:	2000000c 	.word	0x2000000c

080023d4 <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 80023d4:	b580      	push	{r7, lr}
 80023d6:	b082      	sub	sp, #8
 80023d8:	af00      	add	r7, sp, #0
 80023da:	4603      	mov	r3, r0
 80023dc:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 80023de:	79fb      	ldrb	r3, [r7, #7]
 80023e0:	2b51      	cmp	r3, #81	@ 0x51
 80023e2:	d00a      	beq.n	80023fa <Displ_BackLight+0x26>
 80023e4:	2b51      	cmp	r3, #81	@ 0x51
 80023e6:	dc16      	bgt.n	8002416 <Displ_BackLight+0x42>
 80023e8:	2b46      	cmp	r3, #70	@ 0x46
 80023ea:	d008      	beq.n	80023fe <Displ_BackLight+0x2a>
 80023ec:	2b46      	cmp	r3, #70	@ 0x46
 80023ee:	dc12      	bgt.n	8002416 <Displ_BackLight+0x42>
 80023f0:	2b30      	cmp	r3, #48	@ 0x30
 80023f2:	d00a      	beq.n	800240a <Displ_BackLight+0x36>
 80023f4:	2b31      	cmp	r3, #49	@ 0x31
 80023f6:	d002      	beq.n	80023fe <Displ_BackLight+0x2a>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	default:
		break;
 80023f8:	e00d      	b.n	8002416 <Displ_BackLight+0x42>
		__NOP();
 80023fa:	bf00      	nop
		break;
 80023fc:	e00c      	b.n	8002418 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 80023fe:	2201      	movs	r2, #1
 8002400:	2140      	movs	r1, #64	@ 0x40
 8002402:	480a      	ldr	r0, [pc, #40]	@ (800242c <Displ_BackLight+0x58>)
 8002404:	f001 ff60 	bl	80042c8 <HAL_GPIO_WritePin>
		break;
 8002408:	e006      	b.n	8002418 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 800240a:	2200      	movs	r2, #0
 800240c:	2140      	movs	r1, #64	@ 0x40
 800240e:	4807      	ldr	r0, [pc, #28]	@ (800242c <Displ_BackLight+0x58>)
 8002410:	f001 ff5a 	bl	80042c8 <HAL_GPIO_WritePin>
		break;
 8002414:	e000      	b.n	8002418 <Displ_BackLight+0x44>
		break;
 8002416:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 8002418:	2140      	movs	r1, #64	@ 0x40
 800241a:	4804      	ldr	r0, [pc, #16]	@ (800242c <Displ_BackLight+0x58>)
 800241c:	f001 ff3c 	bl	8004298 <HAL_GPIO_ReadPin>
 8002420:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 8002422:	4618      	mov	r0, r3
 8002424:	3708      	adds	r7, #8
 8002426:	46bd      	mov	sp, r7
 8002428:	bd80      	pop	{r7, pc}
 800242a:	bf00      	nop
 800242c:	40020000 	.word	0x40020000

08002430 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8002430:	b480      	push	{r7}
 8002432:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 8002434:	4b06      	ldr	r3, [pc, #24]	@ (8002450 <touchgfxDisplayDriverTransmitActive+0x20>)
 8002436:	781b      	ldrb	r3, [r3, #0]
 8002438:	b2db      	uxtb	r3, r3
 800243a:	2b00      	cmp	r3, #0
 800243c:	bf0c      	ite	eq
 800243e:	2301      	moveq	r3, #1
 8002440:	2300      	movne	r3, #0
 8002442:	b2db      	uxtb	r3, r3
}
 8002444:	4618      	mov	r0, r3
 8002446:	46bd      	mov	sp, r7
 8002448:	f85d 7b04 	ldr.w	r7, [sp], #4
 800244c:	4770      	bx	lr
 800244e:	bf00      	nop
 8002450:	2000000c 	.word	0x2000000c

08002454 <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 8002454:	b590      	push	{r4, r7, lr}
 8002456:	b085      	sub	sp, #20
 8002458:	af00      	add	r7, sp, #0
 800245a:	60f8      	str	r0, [r7, #12]
 800245c:	4608      	mov	r0, r1
 800245e:	4611      	mov	r1, r2
 8002460:	461a      	mov	r2, r3
 8002462:	4603      	mov	r3, r0
 8002464:	817b      	strh	r3, [r7, #10]
 8002466:	460b      	mov	r3, r1
 8002468:	813b      	strh	r3, [r7, #8]
 800246a:	4613      	mov	r3, r2
 800246c:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 800246e:	897a      	ldrh	r2, [r7, #10]
 8002470:	88fb      	ldrh	r3, [r7, #6]
 8002472:	4413      	add	r3, r2
 8002474:	b29b      	uxth	r3, r3
 8002476:	3b01      	subs	r3, #1
 8002478:	b29c      	uxth	r4, r3
 800247a:	893a      	ldrh	r2, [r7, #8]
 800247c:	8c3b      	ldrh	r3, [r7, #32]
 800247e:	4413      	add	r3, r2
 8002480:	b29b      	uxth	r3, r3
 8002482:	3b01      	subs	r3, #1
 8002484:	b29b      	uxth	r3, r3
 8002486:	8939      	ldrh	r1, [r7, #8]
 8002488:	8978      	ldrh	r0, [r7, #10]
 800248a:	4622      	mov	r2, r4
 800248c:	f7ff feb2 	bl	80021f4 <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 8002490:	88fb      	ldrh	r3, [r7, #6]
 8002492:	8c3a      	ldrh	r2, [r7, #32]
 8002494:	fb02 f303 	mul.w	r3, r2, r3
 8002498:	005b      	lsls	r3, r3, #1
 800249a:	2201      	movs	r2, #1
 800249c:	4619      	mov	r1, r3
 800249e:	68f8      	ldr	r0, [r7, #12]
 80024a0:	f7ff fe51 	bl	8002146 <Displ_WriteData>
}
 80024a4:	bf00      	nop
 80024a6:	3714      	adds	r7, #20
 80024a8:	46bd      	mov	sp, r7
 80024aa:	bd90      	pop	{r4, r7, pc}

080024ac <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 80024ac:	b480      	push	{r7}
 80024ae:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 80024b0:	4b06      	ldr	r3, [pc, #24]	@ (80024cc <Touch_HandlePenDownInterrupt+0x20>)
 80024b2:	781b      	ldrb	r3, [r3, #0]
 80024b4:	b2db      	uxtb	r3, r3
 80024b6:	2b00      	cmp	r3, #0
 80024b8:	d002      	beq.n	80024c0 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 80024ba:	4b05      	ldr	r3, [pc, #20]	@ (80024d0 <Touch_HandlePenDownInterrupt+0x24>)
 80024bc:	2201      	movs	r2, #1
 80024be:	701a      	strb	r2, [r3, #0]
	}
}
 80024c0:	bf00      	nop
 80024c2:	46bd      	mov	sp, r7
 80024c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024c8:	4770      	bx	lr
 80024ca:	bf00      	nop
 80024cc:	2000000d 	.word	0x2000000d
 80024d0:	200005d5 	.word	0x200005d5

080024d4 <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80024d4:	b580      	push	{r7, lr}
 80024d6:	b082      	sub	sp, #8
 80024d8:	af00      	add	r7, sp, #0
 80024da:	4603      	mov	r3, r0
 80024dc:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 80024de:	88fb      	ldrh	r3, [r7, #6]
 80024e0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80024e4:	d101      	bne.n	80024ea <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 80024e6:	f7ff ffe1 	bl	80024ac <Touch_HandlePenDownInterrupt>
	}
}
 80024ea:	bf00      	nop
 80024ec:	3708      	adds	r7, #8
 80024ee:	46bd      	mov	sp, r7
 80024f0:	bd80      	pop	{r7, pc}
	...

080024f4 <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 80024f4:	b580      	push	{r7, lr}
 80024f6:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 80024f8:	2180      	movs	r1, #128	@ 0x80
 80024fa:	4813      	ldr	r0, [pc, #76]	@ (8002548 <Touch_Select+0x54>)
 80024fc:	f001 fecc 	bl	8004298 <HAL_GPIO_ReadPin>
 8002500:	4603      	mov	r3, r0
 8002502:	2b00      	cmp	r3, #0
 8002504:	d10a      	bne.n	800251c <Touch_Select+0x28>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 8002506:	bf00      	nop
 8002508:	4b10      	ldr	r3, [pc, #64]	@ (800254c <Touch_Select+0x58>)
 800250a:	781b      	ldrb	r3, [r3, #0]
 800250c:	b2db      	uxtb	r3, r3
 800250e:	2b00      	cmp	r3, #0
 8002510:	d0fa      	beq.n	8002508 <Touch_Select+0x14>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 8002512:	2201      	movs	r2, #1
 8002514:	2180      	movs	r1, #128	@ 0x80
 8002516:	480c      	ldr	r0, [pc, #48]	@ (8002548 <Touch_Select+0x54>)
 8002518:	f001 fed6 	bl	80042c8 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 800251c:	4b0c      	ldr	r3, [pc, #48]	@ (8002550 <Touch_Select+0x5c>)
 800251e:	681a      	ldr	r2, [r3, #0]
 8002520:	490b      	ldr	r1, [pc, #44]	@ (8002550 <Touch_Select+0x5c>)
 8002522:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 8002526:	4013      	ands	r3, r2
 8002528:	600b      	str	r3, [r1, #0]
 800252a:	4b09      	ldr	r3, [pc, #36]	@ (8002550 <Touch_Select+0x5c>)
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	4a08      	ldr	r2, [pc, #32]	@ (8002550 <Touch_Select+0x5c>)
 8002530:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 8002534:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 8002536:	2200      	movs	r2, #0
 8002538:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800253c:	4805      	ldr	r0, [pc, #20]	@ (8002554 <Touch_Select+0x60>)
 800253e:	f001 fec3 	bl	80042c8 <HAL_GPIO_WritePin>
	}
}
 8002542:	bf00      	nop
 8002544:	bd80      	pop	{r7, pc}
 8002546:	bf00      	nop
 8002548:	40020800 	.word	0x40020800
 800254c:	2000000c 	.word	0x2000000c
 8002550:	40003800 	.word	0x40003800
 8002554:	40020000 	.word	0x40020000

08002558 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 8002558:	b580      	push	{r7, lr}
 800255a:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 800255c:	2201      	movs	r2, #1
 800255e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002562:	4802      	ldr	r0, [pc, #8]	@ (800256c <Touch_UnSelect+0x14>)
 8002564:	f001 feb0 	bl	80042c8 <HAL_GPIO_WritePin>
	}
}
 8002568:	bf00      	nop
 800256a:	bd80      	pop	{r7, pc}
 800256c:	40020000 	.word	0x40020000

08002570 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 8002570:	b580      	push	{r7, lr}
 8002572:	b084      	sub	sp, #16
 8002574:	af00      	add	r7, sp, #0
 8002576:	4603      	mov	r3, r0
 8002578:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 800257a:	2300      	movs	r3, #0
 800257c:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 800257e:	f7ff ffb9 	bl	80024f4 <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 8002582:	4b17      	ldr	r3, [pc, #92]	@ (80025e0 <Touch_PollAxis+0x70>)
 8002584:	2200      	movs	r2, #0
 8002586:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 8002588:	2017      	movs	r0, #23
 800258a:	f001 f91a 	bl	80037c2 <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 800258e:	1df9      	adds	r1, r7, #7
 8002590:	230a      	movs	r3, #10
 8002592:	2201      	movs	r2, #1
 8002594:	4813      	ldr	r0, [pc, #76]	@ (80025e4 <Touch_PollAxis+0x74>)
 8002596:	f003 fd8a 	bl	80060ae <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 800259a:	f107 0108 	add.w	r1, r7, #8
 800259e:	230a      	movs	r3, #10
 80025a0:	2202      	movs	r2, #2
 80025a2:	4810      	ldr	r0, [pc, #64]	@ (80025e4 <Touch_PollAxis+0x74>)
 80025a4:	f003 fec7 	bl	8006336 <HAL_SPI_Receive>
 80025a8:	4603      	mov	r3, r0
 80025aa:	2b00      	cmp	r3, #0
 80025ac:	d105      	bne.n	80025ba <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 80025ae:	7a3b      	ldrb	r3, [r7, #8]
 80025b0:	021b      	lsls	r3, r3, #8
 80025b2:	7a7a      	ldrb	r2, [r7, #9]
 80025b4:	4413      	add	r3, r2
 80025b6:	60fb      	str	r3, [r7, #12]
 80025b8:	e001      	b.n	80025be <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 80025ba:	2300      	movs	r3, #0
 80025bc:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80025be:	2017      	movs	r0, #23
 80025c0:	f001 f919 	bl	80037f6 <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 80025c4:	2017      	movs	r0, #23
 80025c6:	f001 f8ee 	bl	80037a6 <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 80025ca:	4b05      	ldr	r3, [pc, #20]	@ (80025e0 <Touch_PollAxis+0x70>)
 80025cc:	2201      	movs	r2, #1
 80025ce:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 80025d0:	f7ff ffc2 	bl	8002558 <Touch_UnSelect>
	}

	return poll16;
 80025d4:	68fb      	ldr	r3, [r7, #12]
 80025d6:	b29b      	uxth	r3, r3
}
 80025d8:	4618      	mov	r0, r3
 80025da:	3710      	adds	r7, #16
 80025dc:	46bd      	mov	sp, r7
 80025de:	bd80      	pop	{r7, pc}
 80025e0:	2000000d 	.word	0x2000000d
 80025e4:	20000420 	.word	0x20000420

080025e8 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 80025e8:	b580      	push	{r7, lr}
 80025ea:	b08a      	sub	sp, #40	@ 0x28
 80025ec:	af00      	add	r7, sp, #0
 80025ee:	60f8      	str	r0, [r7, #12]
 80025f0:	60b9      	str	r1, [r7, #8]
 80025f2:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 80025f4:	2304      	movs	r3, #4
 80025f6:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 80025f8:	2300      	movs	r3, #0
 80025fa:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80025fc:	2300      	movs	r3, #0
 80025fe:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002602:	e00c      	b.n	800261e <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 8002604:	20b0      	movs	r0, #176	@ 0xb0
 8002606:	f7ff ffb3 	bl	8002570 <Touch_PollAxis>
 800260a:	4603      	mov	r3, r0
 800260c:	461a      	mov	r2, r3
 800260e:	6a3b      	ldr	r3, [r7, #32]
 8002610:	4413      	add	r3, r2
 8002612:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002614:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002618:	3301      	adds	r3, #1
 800261a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800261e:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002622:	7ffb      	ldrb	r3, [r7, #31]
 8002624:	2101      	movs	r1, #1
 8002626:	fa01 f303 	lsl.w	r3, r1, r3
 800262a:	429a      	cmp	r2, r3
 800262c:	dbea      	blt.n	8002604 <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 800262e:	7ffb      	ldrb	r3, [r7, #31]
 8002630:	6a3a      	ldr	r2, [r7, #32]
 8002632:	fa22 f303 	lsr.w	r3, r2, r3
 8002636:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8002638:	6a3b      	ldr	r3, [r7, #32]
 800263a:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 800263e:	d806      	bhi.n	800264e <Touch_GetXYtouch+0x66>
		*isTouch=0;
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	2200      	movs	r2, #0
 8002644:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 8002646:	2017      	movs	r0, #23
 8002648:	f001 f8d5 	bl	80037f6 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 800264c:	e0b2      	b.n	80027b4 <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 800264e:	2300      	movs	r3, #0
 8002650:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002652:	2300      	movs	r3, #0
 8002654:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002658:	e00c      	b.n	8002674 <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 800265a:	20d0      	movs	r0, #208	@ 0xd0
 800265c:	f7ff ff88 	bl	8002570 <Touch_PollAxis>
 8002660:	4603      	mov	r3, r0
 8002662:	461a      	mov	r2, r3
 8002664:	6a3b      	ldr	r3, [r7, #32]
 8002666:	4413      	add	r3, r2
 8002668:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800266a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800266e:	3301      	adds	r3, #1
 8002670:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002674:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002678:	7ffb      	ldrb	r3, [r7, #31]
 800267a:	2101      	movs	r1, #1
 800267c:	fa01 f303 	lsl.w	r3, r1, r3
 8002680:	429a      	cmp	r2, r3
 8002682:	dbea      	blt.n	800265a <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 8002684:	7ffb      	ldrb	r3, [r7, #31]
 8002686:	6a3a      	ldr	r2, [r7, #32]
 8002688:	fa22 f303 	lsr.w	r3, r2, r3
 800268c:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 800268e:	6a3b      	ldr	r3, [r7, #32]
 8002690:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8002694:	d806      	bhi.n	80026a4 <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	2200      	movs	r2, #0
 800269a:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 800269c:	2017      	movs	r0, #23
 800269e:	f001 f8aa 	bl	80037f6 <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 80026a2:	e087      	b.n	80027b4 <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 80026a4:	6a3b      	ldr	r3, [r7, #32]
 80026a6:	ee07 3a90 	vmov	s15, r3
 80026aa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026ae:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 80027bc <Touch_GetXYtouch+0x1d4>
 80026b2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80026b6:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 80027c0 <Touch_GetXYtouch+0x1d8>
 80026ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80026be:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80026c2:	ee17 3a90 	vmov	r3, s15
 80026c6:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 80026c8:	2300      	movs	r3, #0
 80026ca:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026cc:	2300      	movs	r3, #0
 80026ce:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80026d2:	e00c      	b.n	80026ee <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 80026d4:	2090      	movs	r0, #144	@ 0x90
 80026d6:	f7ff ff4b 	bl	8002570 <Touch_PollAxis>
 80026da:	4603      	mov	r3, r0
 80026dc:	461a      	mov	r2, r3
 80026de:	6a3b      	ldr	r3, [r7, #32]
 80026e0:	4413      	add	r3, r2
 80026e2:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026e4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80026e8:	3301      	adds	r3, #1
 80026ea:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80026ee:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 80026f2:	7ffb      	ldrb	r3, [r7, #31]
 80026f4:	2101      	movs	r1, #1
 80026f6:	fa01 f303 	lsl.w	r3, r1, r3
 80026fa:	429a      	cmp	r2, r3
 80026fc:	dbea      	blt.n	80026d4 <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 80026fe:	7ffb      	ldrb	r3, [r7, #31]
 8002700:	6a3a      	ldr	r2, [r7, #32]
 8002702:	fa22 f303 	lsr.w	r3, r2, r3
 8002706:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8002708:	6a3b      	ldr	r3, [r7, #32]
 800270a:	ee07 3a90 	vmov	s15, r3
 800270e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002712:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80027c4 <Touch_GetXYtouch+0x1dc>
 8002716:	ee67 7a87 	vmul.f32	s15, s15, s14
 800271a:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 80027c8 <Touch_GetXYtouch+0x1e0>
 800271e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8002722:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002726:	ee17 3a90 	vmov	r3, s15
 800272a:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 800272c:	4b27      	ldr	r3, [pc, #156]	@ (80027cc <Touch_GetXYtouch+0x1e4>)
 800272e:	781b      	ldrb	r3, [r3, #0]
 8002730:	2b03      	cmp	r3, #3
 8002732:	d83b      	bhi.n	80027ac <Touch_GetXYtouch+0x1c4>
 8002734:	a201      	add	r2, pc, #4	@ (adr r2, 800273c <Touch_GetXYtouch+0x154>)
 8002736:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800273a:	bf00      	nop
 800273c:	0800274d 	.word	0x0800274d
 8002740:	0800275f 	.word	0x0800275f
 8002744:	08002777 	.word	0x08002777
 8002748:	08002795 	.word	0x08002795
	{
	case TOUCH0:
		*x=touchx;
 800274c:	69bb      	ldr	r3, [r7, #24]
 800274e:	b29a      	uxth	r2, r3
 8002750:	68fb      	ldr	r3, [r7, #12]
 8002752:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 8002754:	697b      	ldr	r3, [r7, #20]
 8002756:	b29a      	uxth	r2, r3
 8002758:	68bb      	ldr	r3, [r7, #8]
 800275a:	801a      	strh	r2, [r3, #0]
		break;
 800275c:	e026      	b.n	80027ac <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 800275e:	697b      	ldr	r3, [r7, #20]
 8002760:	b29a      	uxth	r2, r3
 8002762:	68fb      	ldr	r3, [r7, #12]
 8002764:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 8002766:	69bb      	ldr	r3, [r7, #24]
 8002768:	b29b      	uxth	r3, r3
 800276a:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 800276e:	b29a      	uxth	r2, r3
 8002770:	68bb      	ldr	r3, [r7, #8]
 8002772:	801a      	strh	r2, [r3, #0]
		break;
 8002774:	e01a      	b.n	80027ac <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 8002776:	69bb      	ldr	r3, [r7, #24]
 8002778:	b29b      	uxth	r3, r3
 800277a:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 800277e:	b29a      	uxth	r2, r3
 8002780:	68fb      	ldr	r3, [r7, #12]
 8002782:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 8002784:	697b      	ldr	r3, [r7, #20]
 8002786:	b29b      	uxth	r3, r3
 8002788:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 800278c:	b29a      	uxth	r2, r3
 800278e:	68bb      	ldr	r3, [r7, #8]
 8002790:	801a      	strh	r2, [r3, #0]
		break;
 8002792:	e00b      	b.n	80027ac <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 8002794:	697b      	ldr	r3, [r7, #20]
 8002796:	b29b      	uxth	r3, r3
 8002798:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 800279c:	b29a      	uxth	r2, r3
 800279e:	68fb      	ldr	r3, [r7, #12]
 80027a0:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 80027a2:	69bb      	ldr	r3, [r7, #24]
 80027a4:	b29a      	uxth	r2, r3
 80027a6:	68bb      	ldr	r3, [r7, #8]
 80027a8:	801a      	strh	r2, [r3, #0]
		break;
 80027aa:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	2201      	movs	r2, #1
 80027b0:	701a      	strb	r2, [r3, #0]
	return;
 80027b2:	bf00      	nop
}
 80027b4:	3728      	adds	r7, #40	@ 0x28
 80027b6:	46bd      	mov	sp, r7
 80027b8:	bd80      	pop	{r7, pc}
 80027ba:	bf00      	nop
 80027bc:	bc378034 	.word	0xbc378034
 80027c0:	43a80000 	.word	0x43a80000
 80027c4:	3c87fcb9 	.word	0x3c87fcb9
 80027c8:	4225851f 	.word	0x4225851f
 80027cc:	200005c8 	.word	0x200005c8

080027d0 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 80027d0:	b580      	push	{r7, lr}
 80027d2:	b084      	sub	sp, #16
 80027d4:	af00      	add	r7, sp, #0
 80027d6:	4603      	mov	r3, r0
 80027d8:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 80027da:	4b10      	ldr	r3, [pc, #64]	@ (800281c <Touch_GotATouch+0x4c>)
 80027dc:	781b      	ldrb	r3, [r3, #0]
 80027de:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 80027e0:	79fb      	ldrb	r3, [r7, #7]
 80027e2:	2b02      	cmp	r3, #2
 80027e4:	d10f      	bne.n	8002806 <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 80027e6:	f000 f92f 	bl	8002a48 <HAL_GetTick>
 80027ea:	4602      	mov	r2, r0
 80027ec:	4b0c      	ldr	r3, [pc, #48]	@ (8002820 <Touch_GotATouch+0x50>)
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	1ad3      	subs	r3, r2, r3
 80027f2:	2b3b      	cmp	r3, #59	@ 0x3b
 80027f4:	d905      	bls.n	8002802 <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 80027f6:	f000 f927 	bl	8002a48 <HAL_GetTick>
 80027fa:	4603      	mov	r3, r0
 80027fc:	4a08      	ldr	r2, [pc, #32]	@ (8002820 <Touch_GotATouch+0x50>)
 80027fe:	6013      	str	r3, [r2, #0]
 8002800:	e001      	b.n	8002806 <Touch_GotATouch+0x36>
		else
			result=0;
 8002802:	2300      	movs	r3, #0
 8002804:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 8002806:	79fb      	ldrb	r3, [r7, #7]
 8002808:	2b01      	cmp	r3, #1
 800280a:	d102      	bne.n	8002812 <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 800280c:	4b03      	ldr	r3, [pc, #12]	@ (800281c <Touch_GotATouch+0x4c>)
 800280e:	2200      	movs	r2, #0
 8002810:	701a      	strb	r2, [r3, #0]
	return result;
 8002812:	7bfb      	ldrb	r3, [r7, #15]
}
 8002814:	4618      	mov	r0, r3
 8002816:	3710      	adds	r7, #16
 8002818:	46bd      	mov	sp, r7
 800281a:	bd80      	pop	{r7, pc}
 800281c:	200005d5 	.word	0x200005d5
 8002820:	200005d8 	.word	0x200005d8

08002824 <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 8002824:	b580      	push	{r7, lr}
 8002826:	b084      	sub	sp, #16
 8002828:	af00      	add	r7, sp, #0
 800282a:	6078      	str	r0, [r7, #4]
 800282c:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 800282e:	2300      	movs	r3, #0
 8002830:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 8002832:	2300      	movs	r3, #0
 8002834:	81bb      	strh	r3, [r7, #12]
 8002836:	2300      	movs	r3, #0
 8002838:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 800283a:	2000      	movs	r0, #0
 800283c:	f7ff ffc8 	bl	80027d0 <Touch_GotATouch>
 8002840:	4603      	mov	r3, r0
 8002842:	2b00      	cmp	r3, #0
 8002844:	d060      	beq.n	8002908 <Touch_TouchGFXSampleTouch+0xe4>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 8002846:	f107 020f 	add.w	r2, r7, #15
 800284a:	f107 010a 	add.w	r1, r7, #10
 800284e:	f107 030c 	add.w	r3, r7, #12
 8002852:	4618      	mov	r0, r3
 8002854:	f7ff fec8 	bl	80025e8 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8002858:	7bfb      	ldrb	r3, [r7, #15]
 800285a:	2b00      	cmp	r3, #0
 800285c:	d126      	bne.n	80028ac <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 800285e:	4b2d      	ldr	r3, [pc, #180]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf0>)
 8002860:	681b      	ldr	r3, [r3, #0]
 8002862:	2b00      	cmp	r3, #0
 8002864:	d050      	beq.n	8002908 <Touch_TouchGFXSampleTouch+0xe4>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 8002866:	4b2c      	ldr	r3, [pc, #176]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf4>)
 8002868:	781b      	ldrb	r3, [r3, #0]
 800286a:	1e5a      	subs	r2, r3, #1
 800286c:	b2d1      	uxtb	r1, r2
 800286e:	4a2a      	ldr	r2, [pc, #168]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf4>)
 8002870:	7011      	strb	r1, [r2, #0]
 8002872:	2b01      	cmp	r3, #1
 8002874:	d90c      	bls.n	8002890 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 8002876:	4b29      	ldr	r3, [pc, #164]	@ (800291c <Touch_TouchGFXSampleTouch+0xf8>)
 8002878:	881b      	ldrh	r3, [r3, #0]
 800287a:	461a      	mov	r2, r3
 800287c:	687b      	ldr	r3, [r7, #4]
 800287e:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8002880:	4b27      	ldr	r3, [pc, #156]	@ (8002920 <Touch_TouchGFXSampleTouch+0xfc>)
 8002882:	881b      	ldrh	r3, [r3, #0]
 8002884:	461a      	mov	r2, r3
 8002886:	683b      	ldr	r3, [r7, #0]
 8002888:	601a      	str	r2, [r3, #0]
					isTouch=1;
 800288a:	2301      	movs	r3, #1
 800288c:	73fb      	strb	r3, [r7, #15]
 800288e:	e03b      	b.n	8002908 <Touch_TouchGFXSampleTouch+0xe4>
				} else if ((repetition==255)) {  // that's -1
 8002890:	4b21      	ldr	r3, [pc, #132]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf4>)
 8002892:	781b      	ldrb	r3, [r3, #0]
 8002894:	2bff      	cmp	r3, #255	@ 0xff
 8002896:	d137      	bne.n	8002908 <Touch_TouchGFXSampleTouch+0xe4>
					touchTime=0;					// set display as untouched
 8002898:	4b1e      	ldr	r3, [pc, #120]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf0>)
 800289a:	2200      	movs	r2, #0
 800289c:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 800289e:	2001      	movs	r0, #1
 80028a0:	f7ff ff96 	bl	80027d0 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 80028a4:	4b1c      	ldr	r3, [pc, #112]	@ (8002918 <Touch_TouchGFXSampleTouch+0xf4>)
 80028a6:	2200      	movs	r2, #0
 80028a8:	701a      	strb	r2, [r3, #0]
 80028aa:	e02d      	b.n	8002908 <Touch_TouchGFXSampleTouch+0xe4>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 80028ac:	4b19      	ldr	r3, [pc, #100]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf0>)
 80028ae:	681b      	ldr	r3, [r3, #0]
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	d10e      	bne.n	80028d2 <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028b4:	89ba      	ldrh	r2, [r7, #12]
 80028b6:	4b19      	ldr	r3, [pc, #100]	@ (800291c <Touch_TouchGFXSampleTouch+0xf8>)
 80028b8:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028ba:	897a      	ldrh	r2, [r7, #10]
 80028bc:	4b18      	ldr	r3, [pc, #96]	@ (8002920 <Touch_TouchGFXSampleTouch+0xfc>)
 80028be:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 80028c0:	f000 f8c2 	bl	8002a48 <HAL_GetTick>
 80028c4:	4603      	mov	r3, r0
 80028c6:	4a13      	ldr	r2, [pc, #76]	@ (8002914 <Touch_TouchGFXSampleTouch+0xf0>)
 80028c8:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 80028ca:	4b16      	ldr	r3, [pc, #88]	@ (8002924 <Touch_TouchGFXSampleTouch+0x100>)
 80028cc:	2201      	movs	r2, #1
 80028ce:	701a      	strb	r2, [r3, #0]
 80028d0:	e001      	b.n	80028d6 <Touch_TouchGFXSampleTouch+0xb2>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 80028d2:	f000 f8b9 	bl	8002a48 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 80028d6:	4b13      	ldr	r3, [pc, #76]	@ (8002924 <Touch_TouchGFXSampleTouch+0x100>)
 80028d8:	781b      	ldrb	r3, [r3, #0]
 80028da:	2b00      	cmp	r3, #0
 80028dc:	d012      	beq.n	8002904 <Touch_TouchGFXSampleTouch+0xe0>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028de:	89bb      	ldrh	r3, [r7, #12]
 80028e0:	461a      	mov	r2, r3
 80028e2:	687b      	ldr	r3, [r7, #4]
 80028e4:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028e6:	897b      	ldrh	r3, [r7, #10]
 80028e8:	461a      	mov	r2, r3
 80028ea:	683b      	ldr	r3, [r7, #0]
 80028ec:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	b29a      	uxth	r2, r3
 80028f4:	4b09      	ldr	r3, [pc, #36]	@ (800291c <Touch_TouchGFXSampleTouch+0xf8>)
 80028f6:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 80028f8:	683b      	ldr	r3, [r7, #0]
 80028fa:	681b      	ldr	r3, [r3, #0]
 80028fc:	b29a      	uxth	r2, r3
 80028fe:	4b08      	ldr	r3, [pc, #32]	@ (8002920 <Touch_TouchGFXSampleTouch+0xfc>)
 8002900:	801a      	strh	r2, [r3, #0]
 8002902:	e001      	b.n	8002908 <Touch_TouchGFXSampleTouch+0xe4>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 8002904:	2300      	movs	r3, #0
 8002906:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8002908:	7bfb      	ldrb	r3, [r7, #15]
}
 800290a:	4618      	mov	r0, r3
 800290c:	3710      	adds	r7, #16
 800290e:	46bd      	mov	sp, r7
 8002910:	bd80      	pop	{r7, pc}
 8002912:	bf00      	nop
 8002914:	20000010 	.word	0x20000010
 8002918:	200005dc 	.word	0x200005dc
 800291c:	200005de 	.word	0x200005de
 8002920:	200005e0 	.word	0x200005e0
 8002924:	200005e2 	.word	0x200005e2

08002928 <Reset_Handler>:
 8002928:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002960 <LoopFillZerobss+0xe>
 800292c:	f7ff fb62 	bl	8001ff4 <SystemInit>
 8002930:	480c      	ldr	r0, [pc, #48]	@ (8002964 <LoopFillZerobss+0x12>)
 8002932:	490d      	ldr	r1, [pc, #52]	@ (8002968 <LoopFillZerobss+0x16>)
 8002934:	4a0d      	ldr	r2, [pc, #52]	@ (800296c <LoopFillZerobss+0x1a>)
 8002936:	2300      	movs	r3, #0
 8002938:	e002      	b.n	8002940 <LoopCopyDataInit>

0800293a <CopyDataInit>:
 800293a:	58d4      	ldr	r4, [r2, r3]
 800293c:	50c4      	str	r4, [r0, r3]
 800293e:	3304      	adds	r3, #4

08002940 <LoopCopyDataInit>:
 8002940:	18c4      	adds	r4, r0, r3
 8002942:	428c      	cmp	r4, r1
 8002944:	d3f9      	bcc.n	800293a <CopyDataInit>
 8002946:	4a0a      	ldr	r2, [pc, #40]	@ (8002970 <LoopFillZerobss+0x1e>)
 8002948:	4c0a      	ldr	r4, [pc, #40]	@ (8002974 <LoopFillZerobss+0x22>)
 800294a:	2300      	movs	r3, #0
 800294c:	e001      	b.n	8002952 <LoopFillZerobss>

0800294e <FillZerobss>:
 800294e:	6013      	str	r3, [r2, #0]
 8002950:	3204      	adds	r2, #4

08002952 <LoopFillZerobss>:
 8002952:	42a2      	cmp	r2, r4
 8002954:	d3fb      	bcc.n	800294e <FillZerobss>
 8002956:	f021 fcbb 	bl	80242d0 <__libc_init_array>
 800295a:	f7fe fac7 	bl	8000eec <main>
 800295e:	4770      	bx	lr
 8002960:	20020000 	.word	0x20020000
 8002964:	20000000 	.word	0x20000000
 8002968:	20000100 	.word	0x20000100
 800296c:	0805ddd8 	.word	0x0805ddd8
 8002970:	20000300 	.word	0x20000300
 8002974:	20003c6c 	.word	0x20003c6c

08002978 <CAN1_RX0_IRQHandler>:
 8002978:	e7fe      	b.n	8002978 <CAN1_RX0_IRQHandler>
	...

0800297c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800297c:	b580      	push	{r7, lr}
 800297e:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002980:	4b0e      	ldr	r3, [pc, #56]	@ (80029bc <HAL_Init+0x40>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a0d      	ldr	r2, [pc, #52]	@ (80029bc <HAL_Init+0x40>)
 8002986:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 800298a:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800298c:	4b0b      	ldr	r3, [pc, #44]	@ (80029bc <HAL_Init+0x40>)
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	4a0a      	ldr	r2, [pc, #40]	@ (80029bc <HAL_Init+0x40>)
 8002992:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002996:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002998:	4b08      	ldr	r3, [pc, #32]	@ (80029bc <HAL_Init+0x40>)
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	4a07      	ldr	r2, [pc, #28]	@ (80029bc <HAL_Init+0x40>)
 800299e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80029a2:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80029a4:	2003      	movs	r0, #3
 80029a6:	f000 fed7 	bl	8003758 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80029aa:	2000      	movs	r0, #0
 80029ac:	f000 f808 	bl	80029c0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80029b0:	f7fe ff46 	bl	8001840 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80029b4:	2300      	movs	r3, #0
}
 80029b6:	4618      	mov	r0, r3
 80029b8:	bd80      	pop	{r7, pc}
 80029ba:	bf00      	nop
 80029bc:	40023c00 	.word	0x40023c00

080029c0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80029c0:	b580      	push	{r7, lr}
 80029c2:	b082      	sub	sp, #8
 80029c4:	af00      	add	r7, sp, #0
 80029c6:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80029c8:	4b12      	ldr	r3, [pc, #72]	@ (8002a14 <HAL_InitTick+0x54>)
 80029ca:	681a      	ldr	r2, [r3, #0]
 80029cc:	4b12      	ldr	r3, [pc, #72]	@ (8002a18 <HAL_InitTick+0x58>)
 80029ce:	781b      	ldrb	r3, [r3, #0]
 80029d0:	4619      	mov	r1, r3
 80029d2:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80029d6:	fbb3 f3f1 	udiv	r3, r3, r1
 80029da:	fbb2 f3f3 	udiv	r3, r2, r3
 80029de:	4618      	mov	r0, r3
 80029e0:	f000 fefd 	bl	80037de <HAL_SYSTICK_Config>
 80029e4:	4603      	mov	r3, r0
 80029e6:	2b00      	cmp	r3, #0
 80029e8:	d001      	beq.n	80029ee <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80029ea:	2301      	movs	r3, #1
 80029ec:	e00e      	b.n	8002a0c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80029ee:	687b      	ldr	r3, [r7, #4]
 80029f0:	2b0f      	cmp	r3, #15
 80029f2:	d80a      	bhi.n	8002a0a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80029f4:	2200      	movs	r2, #0
 80029f6:	6879      	ldr	r1, [r7, #4]
 80029f8:	f04f 30ff 	mov.w	r0, #4294967295
 80029fc:	f000 feb7 	bl	800376e <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002a00:	4a06      	ldr	r2, [pc, #24]	@ (8002a1c <HAL_InitTick+0x5c>)
 8002a02:	687b      	ldr	r3, [r7, #4]
 8002a04:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002a06:	2300      	movs	r3, #0
 8002a08:	e000      	b.n	8002a0c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002a0a:	2301      	movs	r3, #1
}
 8002a0c:	4618      	mov	r0, r3
 8002a0e:	3708      	adds	r7, #8
 8002a10:	46bd      	mov	sp, r7
 8002a12:	bd80      	pop	{r7, pc}
 8002a14:	20000008 	.word	0x20000008
 8002a18:	20000018 	.word	0x20000018
 8002a1c:	20000014 	.word	0x20000014

08002a20 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002a20:	b480      	push	{r7}
 8002a22:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002a24:	4b06      	ldr	r3, [pc, #24]	@ (8002a40 <HAL_IncTick+0x20>)
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	461a      	mov	r2, r3
 8002a2a:	4b06      	ldr	r3, [pc, #24]	@ (8002a44 <HAL_IncTick+0x24>)
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	4413      	add	r3, r2
 8002a30:	4a04      	ldr	r2, [pc, #16]	@ (8002a44 <HAL_IncTick+0x24>)
 8002a32:	6013      	str	r3, [r2, #0]
}
 8002a34:	bf00      	nop
 8002a36:	46bd      	mov	sp, r7
 8002a38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a3c:	4770      	bx	lr
 8002a3e:	bf00      	nop
 8002a40:	20000018 	.word	0x20000018
 8002a44:	200005e4 	.word	0x200005e4

08002a48 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002a48:	b480      	push	{r7}
 8002a4a:	af00      	add	r7, sp, #0
  return uwTick;
 8002a4c:	4b03      	ldr	r3, [pc, #12]	@ (8002a5c <HAL_GetTick+0x14>)
 8002a4e:	681b      	ldr	r3, [r3, #0]
}
 8002a50:	4618      	mov	r0, r3
 8002a52:	46bd      	mov	sp, r7
 8002a54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a58:	4770      	bx	lr
 8002a5a:	bf00      	nop
 8002a5c:	200005e4 	.word	0x200005e4

08002a60 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002a60:	b580      	push	{r7, lr}
 8002a62:	b084      	sub	sp, #16
 8002a64:	af00      	add	r7, sp, #0
 8002a66:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002a68:	f7ff ffee 	bl	8002a48 <HAL_GetTick>
 8002a6c:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002a72:	68fb      	ldr	r3, [r7, #12]
 8002a74:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a78:	d005      	beq.n	8002a86 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002a7a:	4b0a      	ldr	r3, [pc, #40]	@ (8002aa4 <HAL_Delay+0x44>)
 8002a7c:	781b      	ldrb	r3, [r3, #0]
 8002a7e:	461a      	mov	r2, r3
 8002a80:	68fb      	ldr	r3, [r7, #12]
 8002a82:	4413      	add	r3, r2
 8002a84:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002a86:	bf00      	nop
 8002a88:	f7ff ffde 	bl	8002a48 <HAL_GetTick>
 8002a8c:	4602      	mov	r2, r0
 8002a8e:	68bb      	ldr	r3, [r7, #8]
 8002a90:	1ad3      	subs	r3, r2, r3
 8002a92:	68fa      	ldr	r2, [r7, #12]
 8002a94:	429a      	cmp	r2, r3
 8002a96:	d8f7      	bhi.n	8002a88 <HAL_Delay+0x28>
  {
  }
}
 8002a98:	bf00      	nop
 8002a9a:	bf00      	nop
 8002a9c:	3710      	adds	r7, #16
 8002a9e:	46bd      	mov	sp, r7
 8002aa0:	bd80      	pop	{r7, pc}
 8002aa2:	bf00      	nop
 8002aa4:	20000018 	.word	0x20000018

08002aa8 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002aa8:	b580      	push	{r7, lr}
 8002aaa:	b084      	sub	sp, #16
 8002aac:	af00      	add	r7, sp, #0
 8002aae:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002ab0:	2300      	movs	r3, #0
 8002ab2:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8002ab4:	687b      	ldr	r3, [r7, #4]
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d101      	bne.n	8002abe <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002aba:	2301      	movs	r3, #1
 8002abc:	e033      	b.n	8002b26 <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8002abe:	687b      	ldr	r3, [r7, #4]
 8002ac0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d109      	bne.n	8002ada <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002ac6:	6878      	ldr	r0, [r7, #4]
 8002ac8:	f7fe fee2 	bl	8001890 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	2200      	movs	r2, #0
 8002ad0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	2200      	movs	r2, #0
 8002ad6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ade:	f003 0310 	and.w	r3, r3, #16
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	d118      	bne.n	8002b18 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002ae6:	687b      	ldr	r3, [r7, #4]
 8002ae8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002aea:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002aee:	f023 0302 	bic.w	r3, r3, #2
 8002af2:	f043 0202 	orr.w	r2, r3, #2
 8002af6:	687b      	ldr	r3, [r7, #4]
 8002af8:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002afa:	6878      	ldr	r0, [r7, #4]
 8002afc:	f000 fb92 	bl	8003224 <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002b00:	687b      	ldr	r3, [r7, #4]
 8002b02:	2200      	movs	r2, #0
 8002b04:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002b06:	687b      	ldr	r3, [r7, #4]
 8002b08:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b0a:	f023 0303 	bic.w	r3, r3, #3
 8002b0e:	f043 0201 	orr.w	r2, r3, #1
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b16:	e001      	b.n	8002b1c <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002b18:	2301      	movs	r3, #1
 8002b1a:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002b1c:	687b      	ldr	r3, [r7, #4]
 8002b1e:	2200      	movs	r2, #0
 8002b20:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002b24:	7bfb      	ldrb	r3, [r7, #15]
}
 8002b26:	4618      	mov	r0, r3
 8002b28:	3710      	adds	r7, #16
 8002b2a:	46bd      	mov	sp, r7
 8002b2c:	bd80      	pop	{r7, pc}

08002b2e <HAL_ADC_IRQHandler>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
{
 8002b2e:	b580      	push	{r7, lr}
 8002b30:	b086      	sub	sp, #24
 8002b32:	af00      	add	r7, sp, #0
 8002b34:	6078      	str	r0, [r7, #4]
  uint32_t tmp1 = 0U, tmp2 = 0U;
 8002b36:	2300      	movs	r3, #0
 8002b38:	617b      	str	r3, [r7, #20]
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	613b      	str	r3, [r7, #16]

  uint32_t tmp_sr = hadc->Instance->SR;
 8002b3e:	687b      	ldr	r3, [r7, #4]
 8002b40:	681b      	ldr	r3, [r3, #0]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	60fb      	str	r3, [r7, #12]
  uint32_t tmp_cr1 = hadc->Instance->CR1;
 8002b46:	687b      	ldr	r3, [r7, #4]
 8002b48:	681b      	ldr	r3, [r3, #0]
 8002b4a:	685b      	ldr	r3, [r3, #4]
 8002b4c:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
  assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));

  tmp1 = tmp_sr & ADC_FLAG_EOC;
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	f003 0302 	and.w	r3, r3, #2
 8002b54:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_EOC;
 8002b56:	68bb      	ldr	r3, [r7, #8]
 8002b58:	f003 0320 	and.w	r3, r3, #32
 8002b5c:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for regular channels */
  if (tmp1 && tmp2)
 8002b5e:	697b      	ldr	r3, [r7, #20]
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	d049      	beq.n	8002bf8 <HAL_ADC_IRQHandler+0xca>
 8002b64:	693b      	ldr	r3, [r7, #16]
 8002b66:	2b00      	cmp	r3, #0
 8002b68:	d046      	beq.n	8002bf8 <HAL_ADC_IRQHandler+0xca>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b6e:	f003 0310 	and.w	r3, r3, #16
 8002b72:	2b00      	cmp	r3, #0
 8002b74:	d105      	bne.n	8002b82 <HAL_ADC_IRQHandler+0x54>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002b76:	687b      	ldr	r3, [r7, #4]
 8002b78:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b7a:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	689b      	ldr	r3, [r3, #8]
 8002b88:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	d12b      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002b90:	687b      	ldr	r3, [r7, #4]
 8002b92:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002b94:	2b00      	cmp	r3, #0
 8002b96:	d127      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002b98:	687b      	ldr	r3, [r7, #4]
 8002b9a:	681b      	ldr	r3, [r3, #0]
 8002b9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002b9e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002ba2:	2b00      	cmp	r3, #0
 8002ba4:	d006      	beq.n	8002bb4 <HAL_ADC_IRQHandler+0x86>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8002ba6:	687b      	ldr	r3, [r7, #4]
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	689b      	ldr	r3, [r3, #8]
 8002bac:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002bb0:	2b00      	cmp	r3, #0
 8002bb2:	d119      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8002bb4:	687b      	ldr	r3, [r7, #4]
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	685a      	ldr	r2, [r3, #4]
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	f022 0220 	bic.w	r2, r2, #32
 8002bc2:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8002bc4:	687b      	ldr	r3, [r7, #4]
 8002bc6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bc8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bd4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002bd8:	2b00      	cmp	r3, #0
 8002bda:	d105      	bne.n	8002be8 <HAL_ADC_IRQHandler+0xba>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002be0:	f043 0201 	orr.w	r2, r3, #1
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8002be8:	6878      	ldr	r0, [r7, #4]
 8002bea:	f000 f9c1 	bl	8002f70 <HAL_ADC_ConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002bee:	687b      	ldr	r3, [r7, #4]
 8002bf0:	681b      	ldr	r3, [r3, #0]
 8002bf2:	f06f 0212 	mvn.w	r2, #18
 8002bf6:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_JEOC;
 8002bf8:	68fb      	ldr	r3, [r7, #12]
 8002bfa:	f003 0304 	and.w	r3, r3, #4
 8002bfe:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_JEOC;
 8002c00:	68bb      	ldr	r3, [r7, #8]
 8002c02:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002c06:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for injected channels */
  if (tmp1 && tmp2)
 8002c08:	697b      	ldr	r3, [r7, #20]
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d057      	beq.n	8002cbe <HAL_ADC_IRQHandler+0x190>
 8002c0e:	693b      	ldr	r3, [r7, #16]
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d054      	beq.n	8002cbe <HAL_ADC_IRQHandler+0x190>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c18:	f003 0310 	and.w	r3, r3, #16
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	d105      	bne.n	8002c2c <HAL_ADC_IRQHandler+0xfe>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 8002c20:	687b      	ldr	r3, [r7, #4]
 8002c22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c24:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Determine whether any further conversion upcoming on group injected  */
    /* by external trigger, scan sequence on going or by automatic injected */
    /* conversion from group regular (same conditions as group regular      */
    /* interruption disabling above).                                       */
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	681b      	ldr	r3, [r3, #0]
 8002c30:	689b      	ldr	r3, [r3, #8]
 8002c32:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d139      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002c3a:	687b      	ldr	r3, [r7, #4]
 8002c3c:	681b      	ldr	r3, [r3, #0]
 8002c3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c40:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d006      	beq.n	8002c56 <HAL_ADC_IRQHandler+0x128>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002c48:	687b      	ldr	r3, [r7, #4]
 8002c4a:	681b      	ldr	r3, [r3, #0]
 8002c4c:	689b      	ldr	r3, [r3, #8]
 8002c4e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002c52:	2b00      	cmp	r3, #0
 8002c54:	d12b      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002c56:	687b      	ldr	r3, [r7, #4]
 8002c58:	681b      	ldr	r3, [r3, #0]
 8002c5a:	685b      	ldr	r3, [r3, #4]
 8002c5c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002c60:	2b00      	cmp	r3, #0
 8002c62:	d124      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	689b      	ldr	r3, [r3, #8]
 8002c6a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002c6e:	2b00      	cmp	r3, #0
 8002c70:	d11d      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
          (hadc->Init.ContinuousConvMode == DISABLE))))
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	7e1b      	ldrb	r3, [r3, #24]
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002c76:	2b00      	cmp	r3, #0
 8002c78:	d119      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
    {
      /* Disable ADC end of single conversion interrupt on group injected */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 8002c7a:	687b      	ldr	r3, [r7, #4]
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	685a      	ldr	r2, [r3, #4]
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002c88:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c8e:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c9a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002c9e:	2b00      	cmp	r3, #0
 8002ca0:	d105      	bne.n	8002cae <HAL_ADC_IRQHandler+0x180>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ca6:	f043 0201 	orr.w	r2, r3, #1
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Conversion complete callback */
    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->InjectedConvCpltCallback(hadc);
#else
    HAL_ADCEx_InjectedConvCpltCallback(hadc);
 8002cae:	6878      	ldr	r0, [r7, #4]
 8002cb0:	f000 fc36 	bl	8003520 <HAL_ADCEx_InjectedConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear injected group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 8002cb4:	687b      	ldr	r3, [r7, #4]
 8002cb6:	681b      	ldr	r3, [r3, #0]
 8002cb8:	f06f 020c 	mvn.w	r2, #12
 8002cbc:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_AWD;
 8002cbe:	68fb      	ldr	r3, [r7, #12]
 8002cc0:	f003 0301 	and.w	r3, r3, #1
 8002cc4:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_AWD;
 8002cc6:	68bb      	ldr	r3, [r7, #8]
 8002cc8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002ccc:	613b      	str	r3, [r7, #16]
  /* Check Analog watchdog flag */
  if (tmp1 && tmp2)
 8002cce:	697b      	ldr	r3, [r7, #20]
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d017      	beq.n	8002d04 <HAL_ADC_IRQHandler+0x1d6>
 8002cd4:	693b      	ldr	r3, [r7, #16]
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d014      	beq.n	8002d04 <HAL_ADC_IRQHandler+0x1d6>
  {
    if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 8002cda:	687b      	ldr	r3, [r7, #4]
 8002cdc:	681b      	ldr	r3, [r3, #0]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	f003 0301 	and.w	r3, r3, #1
 8002ce4:	2b01      	cmp	r3, #1
 8002ce6:	d10d      	bne.n	8002d04 <HAL_ADC_IRQHandler+0x1d6>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cec:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8002cf0:	687b      	ldr	r3, [r7, #4]
 8002cf2:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Level out of window callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
      hadc->LevelOutOfWindowCallback(hadc);
#else
      HAL_ADC_LevelOutOfWindowCallback(hadc);
 8002cf4:	6878      	ldr	r0, [r7, #4]
 8002cf6:	f000 f94f 	bl	8002f98 <HAL_ADC_LevelOutOfWindowCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

      /* Clear the ADC analog watchdog flag */
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	f06f 0201 	mvn.w	r2, #1
 8002d02:	601a      	str	r2, [r3, #0]
    }
  }

  tmp1 = tmp_sr & ADC_FLAG_OVR;
 8002d04:	68fb      	ldr	r3, [r7, #12]
 8002d06:	f003 0320 	and.w	r3, r3, #32
 8002d0a:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_OVR;
 8002d0c:	68bb      	ldr	r3, [r7, #8]
 8002d0e:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002d12:	613b      	str	r3, [r7, #16]
  /* Check Overrun flag */
  if (tmp1 && tmp2)
 8002d14:	697b      	ldr	r3, [r7, #20]
 8002d16:	2b00      	cmp	r3, #0
 8002d18:	d015      	beq.n	8002d46 <HAL_ADC_IRQHandler+0x218>
 8002d1a:	693b      	ldr	r3, [r7, #16]
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	d012      	beq.n	8002d46 <HAL_ADC_IRQHandler+0x218>
    /* Note: On STM32F4, ADC overrun can be set through other parameters    */
    /*       refer to description of parameter "EOCSelection" for more      */
    /*       details.                                                       */

    /* Set ADC error code to overrun */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 8002d20:	687b      	ldr	r3, [r7, #4]
 8002d22:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d24:	f043 0202 	orr.w	r2, r3, #2
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Clear ADC overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002d2c:	687b      	ldr	r3, [r7, #4]
 8002d2e:	681b      	ldr	r3, [r3, #0]
 8002d30:	f06f 0220 	mvn.w	r2, #32
 8002d34:	601a      	str	r2, [r3, #0]

    /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ErrorCallback(hadc);
#else
    HAL_ADC_ErrorCallback(hadc);
 8002d36:	6878      	ldr	r0, [r7, #4]
 8002d38:	f000 f938 	bl	8002fac <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear the Overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002d3c:	687b      	ldr	r3, [r7, #4]
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	f06f 0220 	mvn.w	r2, #32
 8002d44:	601a      	str	r2, [r3, #0]
  }
}
 8002d46:	bf00      	nop
 8002d48:	3718      	adds	r7, #24
 8002d4a:	46bd      	mov	sp, r7
 8002d4c:	bd80      	pop	{r7, pc}
	...

08002d50 <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8002d50:	b580      	push	{r7, lr}
 8002d52:	b086      	sub	sp, #24
 8002d54:	af00      	add	r7, sp, #0
 8002d56:	60f8      	str	r0, [r7, #12]
 8002d58:	60b9      	str	r1, [r7, #8]
 8002d5a:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002d60:	68fb      	ldr	r3, [r7, #12]
 8002d62:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002d66:	2b01      	cmp	r3, #1
 8002d68:	d101      	bne.n	8002d6e <HAL_ADC_Start_DMA+0x1e>
 8002d6a:	2302      	movs	r3, #2
 8002d6c:	e0e9      	b.n	8002f42 <HAL_ADC_Start_DMA+0x1f2>
 8002d6e:	68fb      	ldr	r3, [r7, #12]
 8002d70:	2201      	movs	r2, #1
 8002d72:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002d76:	68fb      	ldr	r3, [r7, #12]
 8002d78:	681b      	ldr	r3, [r3, #0]
 8002d7a:	689b      	ldr	r3, [r3, #8]
 8002d7c:	f003 0301 	and.w	r3, r3, #1
 8002d80:	2b01      	cmp	r3, #1
 8002d82:	d018      	beq.n	8002db6 <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002d84:	68fb      	ldr	r3, [r7, #12]
 8002d86:	681b      	ldr	r3, [r3, #0]
 8002d88:	689a      	ldr	r2, [r3, #8]
 8002d8a:	68fb      	ldr	r3, [r7, #12]
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	f042 0201 	orr.w	r2, r2, #1
 8002d92:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002d94:	4b6d      	ldr	r3, [pc, #436]	@ (8002f4c <HAL_ADC_Start_DMA+0x1fc>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	4a6d      	ldr	r2, [pc, #436]	@ (8002f50 <HAL_ADC_Start_DMA+0x200>)
 8002d9a:	fba2 2303 	umull	r2, r3, r2, r3
 8002d9e:	0c9a      	lsrs	r2, r3, #18
 8002da0:	4613      	mov	r3, r2
 8002da2:	005b      	lsls	r3, r3, #1
 8002da4:	4413      	add	r3, r2
 8002da6:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002da8:	e002      	b.n	8002db0 <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8002daa:	693b      	ldr	r3, [r7, #16]
 8002dac:	3b01      	subs	r3, #1
 8002dae:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002db0:	693b      	ldr	r3, [r7, #16]
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d1f9      	bne.n	8002daa <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8002db6:	68fb      	ldr	r3, [r7, #12]
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	689b      	ldr	r3, [r3, #8]
 8002dbc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002dc0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002dc4:	d107      	bne.n	8002dd6 <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8002dc6:	68fb      	ldr	r3, [r7, #12]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	689a      	ldr	r2, [r3, #8]
 8002dcc:	68fb      	ldr	r3, [r7, #12]
 8002dce:	681b      	ldr	r3, [r3, #0]
 8002dd0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002dd4:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002dd6:	68fb      	ldr	r3, [r7, #12]
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	689b      	ldr	r3, [r3, #8]
 8002ddc:	f003 0301 	and.w	r3, r3, #1
 8002de0:	2b01      	cmp	r3, #1
 8002de2:	f040 80a1 	bne.w	8002f28 <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002de6:	68fb      	ldr	r3, [r7, #12]
 8002de8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002dea:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002dee:	f023 0301 	bic.w	r3, r3, #1
 8002df2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002df6:	68fb      	ldr	r3, [r7, #12]
 8002df8:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002dfa:	68fb      	ldr	r3, [r7, #12]
 8002dfc:	681b      	ldr	r3, [r3, #0]
 8002dfe:	685b      	ldr	r3, [r3, #4]
 8002e00:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d007      	beq.n	8002e18 <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002e08:	68fb      	ldr	r3, [r7, #12]
 8002e0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e0c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002e10:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002e14:	68fb      	ldr	r3, [r7, #12]
 8002e16:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002e18:	68fb      	ldr	r3, [r7, #12]
 8002e1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e1c:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002e20:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002e24:	d106      	bne.n	8002e34 <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002e26:	68fb      	ldr	r3, [r7, #12]
 8002e28:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e2a:	f023 0206 	bic.w	r2, r3, #6
 8002e2e:	68fb      	ldr	r3, [r7, #12]
 8002e30:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e32:	e002      	b.n	8002e3a <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002e34:	68fb      	ldr	r3, [r7, #12]
 8002e36:	2200      	movs	r2, #0
 8002e38:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002e3a:	68fb      	ldr	r3, [r7, #12]
 8002e3c:	2200      	movs	r2, #0
 8002e3e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002e42:	4b44      	ldr	r3, [pc, #272]	@ (8002f54 <HAL_ADC_Start_DMA+0x204>)
 8002e44:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002e46:	68fb      	ldr	r3, [r7, #12]
 8002e48:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e4a:	4a43      	ldr	r2, [pc, #268]	@ (8002f58 <HAL_ADC_Start_DMA+0x208>)
 8002e4c:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002e4e:	68fb      	ldr	r3, [r7, #12]
 8002e50:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e52:	4a42      	ldr	r2, [pc, #264]	@ (8002f5c <HAL_ADC_Start_DMA+0x20c>)
 8002e54:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002e56:	68fb      	ldr	r3, [r7, #12]
 8002e58:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e5a:	4a41      	ldr	r2, [pc, #260]	@ (8002f60 <HAL_ADC_Start_DMA+0x210>)
 8002e5c:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002e66:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002e68:	68fb      	ldr	r3, [r7, #12]
 8002e6a:	681b      	ldr	r3, [r3, #0]
 8002e6c:	685a      	ldr	r2, [r3, #4]
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	681b      	ldr	r3, [r3, #0]
 8002e72:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002e76:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8002e78:	68fb      	ldr	r3, [r7, #12]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	689a      	ldr	r2, [r3, #8]
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	681b      	ldr	r3, [r3, #0]
 8002e82:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002e86:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002e88:	68fb      	ldr	r3, [r7, #12]
 8002e8a:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	681b      	ldr	r3, [r3, #0]
 8002e90:	334c      	adds	r3, #76	@ 0x4c
 8002e92:	4619      	mov	r1, r3
 8002e94:	68ba      	ldr	r2, [r7, #8]
 8002e96:	687b      	ldr	r3, [r7, #4]
 8002e98:	f000 fd86 	bl	80039a8 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002e9c:	697b      	ldr	r3, [r7, #20]
 8002e9e:	685b      	ldr	r3, [r3, #4]
 8002ea0:	f003 031f 	and.w	r3, r3, #31
 8002ea4:	2b00      	cmp	r3, #0
 8002ea6:	d12a      	bne.n	8002efe <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002ea8:	68fb      	ldr	r3, [r7, #12]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	4a2d      	ldr	r2, [pc, #180]	@ (8002f64 <HAL_ADC_Start_DMA+0x214>)
 8002eae:	4293      	cmp	r3, r2
 8002eb0:	d015      	beq.n	8002ede <HAL_ADC_Start_DMA+0x18e>
 8002eb2:	68fb      	ldr	r3, [r7, #12]
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	4a2c      	ldr	r2, [pc, #176]	@ (8002f68 <HAL_ADC_Start_DMA+0x218>)
 8002eb8:	4293      	cmp	r3, r2
 8002eba:	d105      	bne.n	8002ec8 <HAL_ADC_Start_DMA+0x178>
 8002ebc:	4b25      	ldr	r3, [pc, #148]	@ (8002f54 <HAL_ADC_Start_DMA+0x204>)
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	f003 031f 	and.w	r3, r3, #31
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	d00a      	beq.n	8002ede <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002ec8:	68fb      	ldr	r3, [r7, #12]
 8002eca:	681b      	ldr	r3, [r3, #0]
 8002ecc:	4a27      	ldr	r2, [pc, #156]	@ (8002f6c <HAL_ADC_Start_DMA+0x21c>)
 8002ece:	4293      	cmp	r3, r2
 8002ed0:	d136      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
 8002ed2:	4b20      	ldr	r3, [pc, #128]	@ (8002f54 <HAL_ADC_Start_DMA+0x204>)
 8002ed4:	685b      	ldr	r3, [r3, #4]
 8002ed6:	f003 0310 	and.w	r3, r3, #16
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d130      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002ede:	68fb      	ldr	r3, [r7, #12]
 8002ee0:	681b      	ldr	r3, [r3, #0]
 8002ee2:	689b      	ldr	r3, [r3, #8]
 8002ee4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002ee8:	2b00      	cmp	r3, #0
 8002eea:	d129      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002eec:	68fb      	ldr	r3, [r7, #12]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	689a      	ldr	r2, [r3, #8]
 8002ef2:	68fb      	ldr	r3, [r7, #12]
 8002ef4:	681b      	ldr	r3, [r3, #0]
 8002ef6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002efa:	609a      	str	r2, [r3, #8]
 8002efc:	e020      	b.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002efe:	68fb      	ldr	r3, [r7, #12]
 8002f00:	681b      	ldr	r3, [r3, #0]
 8002f02:	4a18      	ldr	r2, [pc, #96]	@ (8002f64 <HAL_ADC_Start_DMA+0x214>)
 8002f04:	4293      	cmp	r3, r2
 8002f06:	d11b      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
 8002f08:	68fb      	ldr	r3, [r7, #12]
 8002f0a:	681b      	ldr	r3, [r3, #0]
 8002f0c:	689b      	ldr	r3, [r3, #8]
 8002f0e:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002f12:	2b00      	cmp	r3, #0
 8002f14:	d114      	bne.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	689a      	ldr	r2, [r3, #8]
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	681b      	ldr	r3, [r3, #0]
 8002f20:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002f24:	609a      	str	r2, [r3, #8]
 8002f26:	e00b      	b.n	8002f40 <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002f28:	68fb      	ldr	r3, [r7, #12]
 8002f2a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f2c:	f043 0210 	orr.w	r2, r3, #16
 8002f30:	68fb      	ldr	r3, [r7, #12]
 8002f32:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f38:	f043 0201 	orr.w	r2, r3, #1
 8002f3c:	68fb      	ldr	r3, [r7, #12]
 8002f3e:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002f40:	2300      	movs	r3, #0
}
 8002f42:	4618      	mov	r0, r3
 8002f44:	3718      	adds	r7, #24
 8002f46:	46bd      	mov	sp, r7
 8002f48:	bd80      	pop	{r7, pc}
 8002f4a:	bf00      	nop
 8002f4c:	20000008 	.word	0x20000008
 8002f50:	431bde83 	.word	0x431bde83
 8002f54:	40012300 	.word	0x40012300
 8002f58:	0800341d 	.word	0x0800341d
 8002f5c:	080034d7 	.word	0x080034d7
 8002f60:	080034f3 	.word	0x080034f3
 8002f64:	40012000 	.word	0x40012000
 8002f68:	40012100 	.word	0x40012100
 8002f6c:	40012200 	.word	0x40012200

08002f70 <HAL_ADC_ConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002f70:	b480      	push	{r7}
 8002f72:	b083      	sub	sp, #12
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvCpltCallback could be implemented in the user file
   */
}
 8002f78:	bf00      	nop
 8002f7a:	370c      	adds	r7, #12
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f82:	4770      	bx	lr

08002f84 <HAL_ADC_ConvHalfCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002f84:	b480      	push	{r7}
 8002f86:	b083      	sub	sp, #12
 8002f88:	af00      	add	r7, sp, #0
 8002f8a:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
   */
}
 8002f8c:	bf00      	nop
 8002f8e:	370c      	adds	r7, #12
 8002f90:	46bd      	mov	sp, r7
 8002f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f96:	4770      	bx	lr

08002f98 <HAL_ADC_LevelOutOfWindowCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
{
 8002f98:	b480      	push	{r7}
 8002f9a:	b083      	sub	sp, #12
 8002f9c:	af00      	add	r7, sp, #0
 8002f9e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
   */
}
 8002fa0:	bf00      	nop
 8002fa2:	370c      	adds	r7, #12
 8002fa4:	46bd      	mov	sp, r7
 8002fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002faa:	4770      	bx	lr

08002fac <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002fac:	b480      	push	{r7}
 8002fae:	b083      	sub	sp, #12
 8002fb0:	af00      	add	r7, sp, #0
 8002fb2:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8002fb4:	bf00      	nop
 8002fb6:	370c      	adds	r7, #12
 8002fb8:	46bd      	mov	sp, r7
 8002fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fbe:	4770      	bx	lr

08002fc0 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002fc0:	b480      	push	{r7}
 8002fc2:	b085      	sub	sp, #20
 8002fc4:	af00      	add	r7, sp, #0
 8002fc6:	6078      	str	r0, [r7, #4]
 8002fc8:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002fca:	2300      	movs	r3, #0
 8002fcc:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002fd4:	2b01      	cmp	r3, #1
 8002fd6:	d101      	bne.n	8002fdc <HAL_ADC_ConfigChannel+0x1c>
 8002fd8:	2302      	movs	r3, #2
 8002fda:	e113      	b.n	8003204 <HAL_ADC_ConfigChannel+0x244>
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	2201      	movs	r2, #1
 8002fe0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002fe4:	683b      	ldr	r3, [r7, #0]
 8002fe6:	681b      	ldr	r3, [r3, #0]
 8002fe8:	2b09      	cmp	r3, #9
 8002fea:	d925      	bls.n	8003038 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	68d9      	ldr	r1, [r3, #12]
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	b29b      	uxth	r3, r3
 8002ff8:	461a      	mov	r2, r3
 8002ffa:	4613      	mov	r3, r2
 8002ffc:	005b      	lsls	r3, r3, #1
 8002ffe:	4413      	add	r3, r2
 8003000:	3b1e      	subs	r3, #30
 8003002:	2207      	movs	r2, #7
 8003004:	fa02 f303 	lsl.w	r3, r2, r3
 8003008:	43da      	mvns	r2, r3
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	400a      	ands	r2, r1
 8003010:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8003012:	687b      	ldr	r3, [r7, #4]
 8003014:	681b      	ldr	r3, [r3, #0]
 8003016:	68d9      	ldr	r1, [r3, #12]
 8003018:	683b      	ldr	r3, [r7, #0]
 800301a:	689a      	ldr	r2, [r3, #8]
 800301c:	683b      	ldr	r3, [r7, #0]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	b29b      	uxth	r3, r3
 8003022:	4618      	mov	r0, r3
 8003024:	4603      	mov	r3, r0
 8003026:	005b      	lsls	r3, r3, #1
 8003028:	4403      	add	r3, r0
 800302a:	3b1e      	subs	r3, #30
 800302c:	409a      	lsls	r2, r3
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	430a      	orrs	r2, r1
 8003034:	60da      	str	r2, [r3, #12]
 8003036:	e022      	b.n	800307e <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	6919      	ldr	r1, [r3, #16]
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	b29b      	uxth	r3, r3
 8003044:	461a      	mov	r2, r3
 8003046:	4613      	mov	r3, r2
 8003048:	005b      	lsls	r3, r3, #1
 800304a:	4413      	add	r3, r2
 800304c:	2207      	movs	r2, #7
 800304e:	fa02 f303 	lsl.w	r3, r2, r3
 8003052:	43da      	mvns	r2, r3
 8003054:	687b      	ldr	r3, [r7, #4]
 8003056:	681b      	ldr	r3, [r3, #0]
 8003058:	400a      	ands	r2, r1
 800305a:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800305c:	687b      	ldr	r3, [r7, #4]
 800305e:	681b      	ldr	r3, [r3, #0]
 8003060:	6919      	ldr	r1, [r3, #16]
 8003062:	683b      	ldr	r3, [r7, #0]
 8003064:	689a      	ldr	r2, [r3, #8]
 8003066:	683b      	ldr	r3, [r7, #0]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	b29b      	uxth	r3, r3
 800306c:	4618      	mov	r0, r3
 800306e:	4603      	mov	r3, r0
 8003070:	005b      	lsls	r3, r3, #1
 8003072:	4403      	add	r3, r0
 8003074:	409a      	lsls	r2, r3
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	430a      	orrs	r2, r1
 800307c:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 800307e:	683b      	ldr	r3, [r7, #0]
 8003080:	685b      	ldr	r3, [r3, #4]
 8003082:	2b06      	cmp	r3, #6
 8003084:	d824      	bhi.n	80030d0 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 800308c:	683b      	ldr	r3, [r7, #0]
 800308e:	685a      	ldr	r2, [r3, #4]
 8003090:	4613      	mov	r3, r2
 8003092:	009b      	lsls	r3, r3, #2
 8003094:	4413      	add	r3, r2
 8003096:	3b05      	subs	r3, #5
 8003098:	221f      	movs	r2, #31
 800309a:	fa02 f303 	lsl.w	r3, r2, r3
 800309e:	43da      	mvns	r2, r3
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	400a      	ands	r2, r1
 80030a6:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80030ae:	683b      	ldr	r3, [r7, #0]
 80030b0:	681b      	ldr	r3, [r3, #0]
 80030b2:	b29b      	uxth	r3, r3
 80030b4:	4618      	mov	r0, r3
 80030b6:	683b      	ldr	r3, [r7, #0]
 80030b8:	685a      	ldr	r2, [r3, #4]
 80030ba:	4613      	mov	r3, r2
 80030bc:	009b      	lsls	r3, r3, #2
 80030be:	4413      	add	r3, r2
 80030c0:	3b05      	subs	r3, #5
 80030c2:	fa00 f203 	lsl.w	r2, r0, r3
 80030c6:	687b      	ldr	r3, [r7, #4]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	430a      	orrs	r2, r1
 80030cc:	635a      	str	r2, [r3, #52]	@ 0x34
 80030ce:	e04c      	b.n	800316a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 80030d0:	683b      	ldr	r3, [r7, #0]
 80030d2:	685b      	ldr	r3, [r3, #4]
 80030d4:	2b0c      	cmp	r3, #12
 80030d6:	d824      	bhi.n	8003122 <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	681b      	ldr	r3, [r3, #0]
 80030dc:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80030de:	683b      	ldr	r3, [r7, #0]
 80030e0:	685a      	ldr	r2, [r3, #4]
 80030e2:	4613      	mov	r3, r2
 80030e4:	009b      	lsls	r3, r3, #2
 80030e6:	4413      	add	r3, r2
 80030e8:	3b23      	subs	r3, #35	@ 0x23
 80030ea:	221f      	movs	r2, #31
 80030ec:	fa02 f303 	lsl.w	r3, r2, r3
 80030f0:	43da      	mvns	r2, r3
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	400a      	ands	r2, r1
 80030f8:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	681b      	ldr	r3, [r3, #0]
 80030fe:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003100:	683b      	ldr	r3, [r7, #0]
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	b29b      	uxth	r3, r3
 8003106:	4618      	mov	r0, r3
 8003108:	683b      	ldr	r3, [r7, #0]
 800310a:	685a      	ldr	r2, [r3, #4]
 800310c:	4613      	mov	r3, r2
 800310e:	009b      	lsls	r3, r3, #2
 8003110:	4413      	add	r3, r2
 8003112:	3b23      	subs	r3, #35	@ 0x23
 8003114:	fa00 f203 	lsl.w	r2, r0, r3
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	430a      	orrs	r2, r1
 800311e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003120:	e023      	b.n	800316a <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	681b      	ldr	r3, [r3, #0]
 8003126:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003128:	683b      	ldr	r3, [r7, #0]
 800312a:	685a      	ldr	r2, [r3, #4]
 800312c:	4613      	mov	r3, r2
 800312e:	009b      	lsls	r3, r3, #2
 8003130:	4413      	add	r3, r2
 8003132:	3b41      	subs	r3, #65	@ 0x41
 8003134:	221f      	movs	r2, #31
 8003136:	fa02 f303 	lsl.w	r3, r2, r3
 800313a:	43da      	mvns	r2, r3
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	681b      	ldr	r3, [r3, #0]
 8003140:	400a      	ands	r2, r1
 8003142:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800314a:	683b      	ldr	r3, [r7, #0]
 800314c:	681b      	ldr	r3, [r3, #0]
 800314e:	b29b      	uxth	r3, r3
 8003150:	4618      	mov	r0, r3
 8003152:	683b      	ldr	r3, [r7, #0]
 8003154:	685a      	ldr	r2, [r3, #4]
 8003156:	4613      	mov	r3, r2
 8003158:	009b      	lsls	r3, r3, #2
 800315a:	4413      	add	r3, r2
 800315c:	3b41      	subs	r3, #65	@ 0x41
 800315e:	fa00 f203 	lsl.w	r2, r0, r3
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	430a      	orrs	r2, r1
 8003168:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800316a:	4b29      	ldr	r3, [pc, #164]	@ (8003210 <HAL_ADC_ConfigChannel+0x250>)
 800316c:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	681b      	ldr	r3, [r3, #0]
 8003172:	4a28      	ldr	r2, [pc, #160]	@ (8003214 <HAL_ADC_ConfigChannel+0x254>)
 8003174:	4293      	cmp	r3, r2
 8003176:	d10f      	bne.n	8003198 <HAL_ADC_ConfigChannel+0x1d8>
 8003178:	683b      	ldr	r3, [r7, #0]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	2b12      	cmp	r3, #18
 800317e:	d10b      	bne.n	8003198 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8003180:	68fb      	ldr	r3, [r7, #12]
 8003182:	685b      	ldr	r3, [r3, #4]
 8003184:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 800318c:	68fb      	ldr	r3, [r7, #12]
 800318e:	685b      	ldr	r3, [r3, #4]
 8003190:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8003194:	68fb      	ldr	r3, [r7, #12]
 8003196:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	681b      	ldr	r3, [r3, #0]
 800319c:	4a1d      	ldr	r2, [pc, #116]	@ (8003214 <HAL_ADC_ConfigChannel+0x254>)
 800319e:	4293      	cmp	r3, r2
 80031a0:	d12b      	bne.n	80031fa <HAL_ADC_ConfigChannel+0x23a>
 80031a2:	683b      	ldr	r3, [r7, #0]
 80031a4:	681b      	ldr	r3, [r3, #0]
 80031a6:	4a1c      	ldr	r2, [pc, #112]	@ (8003218 <HAL_ADC_ConfigChannel+0x258>)
 80031a8:	4293      	cmp	r3, r2
 80031aa:	d003      	beq.n	80031b4 <HAL_ADC_ConfigChannel+0x1f4>
 80031ac:	683b      	ldr	r3, [r7, #0]
 80031ae:	681b      	ldr	r3, [r3, #0]
 80031b0:	2b11      	cmp	r3, #17
 80031b2:	d122      	bne.n	80031fa <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 80031b4:	68fb      	ldr	r3, [r7, #12]
 80031b6:	685b      	ldr	r3, [r3, #4]
 80031b8:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80031c0:	68fb      	ldr	r3, [r7, #12]
 80031c2:	685b      	ldr	r3, [r3, #4]
 80031c4:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 80031cc:	683b      	ldr	r3, [r7, #0]
 80031ce:	681b      	ldr	r3, [r3, #0]
 80031d0:	4a11      	ldr	r2, [pc, #68]	@ (8003218 <HAL_ADC_ConfigChannel+0x258>)
 80031d2:	4293      	cmp	r3, r2
 80031d4:	d111      	bne.n	80031fa <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80031d6:	4b11      	ldr	r3, [pc, #68]	@ (800321c <HAL_ADC_ConfigChannel+0x25c>)
 80031d8:	681b      	ldr	r3, [r3, #0]
 80031da:	4a11      	ldr	r2, [pc, #68]	@ (8003220 <HAL_ADC_ConfigChannel+0x260>)
 80031dc:	fba2 2303 	umull	r2, r3, r2, r3
 80031e0:	0c9a      	lsrs	r2, r3, #18
 80031e2:	4613      	mov	r3, r2
 80031e4:	009b      	lsls	r3, r3, #2
 80031e6:	4413      	add	r3, r2
 80031e8:	005b      	lsls	r3, r3, #1
 80031ea:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 80031ec:	e002      	b.n	80031f4 <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 80031ee:	68bb      	ldr	r3, [r7, #8]
 80031f0:	3b01      	subs	r3, #1
 80031f2:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 80031f4:	68bb      	ldr	r3, [r7, #8]
 80031f6:	2b00      	cmp	r3, #0
 80031f8:	d1f9      	bne.n	80031ee <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	2200      	movs	r2, #0
 80031fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 8003202:	2300      	movs	r3, #0
}
 8003204:	4618      	mov	r0, r3
 8003206:	3714      	adds	r7, #20
 8003208:	46bd      	mov	sp, r7
 800320a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800320e:	4770      	bx	lr
 8003210:	40012300 	.word	0x40012300
 8003214:	40012000 	.word	0x40012000
 8003218:	10000012 	.word	0x10000012
 800321c:	20000008 	.word	0x20000008
 8003220:	431bde83 	.word	0x431bde83

08003224 <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 8003224:	b480      	push	{r7}
 8003226:	b085      	sub	sp, #20
 8003228:	af00      	add	r7, sp, #0
 800322a:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 800322c:	4b79      	ldr	r3, [pc, #484]	@ (8003414 <ADC_Init+0x1f0>)
 800322e:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8003230:	68fb      	ldr	r3, [r7, #12]
 8003232:	685b      	ldr	r3, [r3, #4]
 8003234:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 800323c:	68fb      	ldr	r3, [r7, #12]
 800323e:	685a      	ldr	r2, [r3, #4]
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	685b      	ldr	r3, [r3, #4]
 8003244:	431a      	orrs	r2, r3
 8003246:	68fb      	ldr	r3, [r7, #12]
 8003248:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	685a      	ldr	r2, [r3, #4]
 8003250:	687b      	ldr	r3, [r7, #4]
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003258:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	6859      	ldr	r1, [r3, #4]
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	691b      	ldr	r3, [r3, #16]
 8003264:	021a      	lsls	r2, r3, #8
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	430a      	orrs	r2, r1
 800326c:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	685a      	ldr	r2, [r3, #4]
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 800327c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	6859      	ldr	r1, [r3, #4]
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	689a      	ldr	r2, [r3, #8]
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	430a      	orrs	r2, r1
 800328e:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	681b      	ldr	r3, [r3, #0]
 8003294:	689a      	ldr	r2, [r3, #8]
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800329e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	6899      	ldr	r1, [r3, #8]
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	68da      	ldr	r2, [r3, #12]
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	430a      	orrs	r2, r1
 80032b0:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80032b6:	4a58      	ldr	r2, [pc, #352]	@ (8003418 <ADC_Init+0x1f4>)
 80032b8:	4293      	cmp	r3, r2
 80032ba:	d022      	beq.n	8003302 <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	689a      	ldr	r2, [r3, #8]
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80032ca:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80032cc:	687b      	ldr	r3, [r7, #4]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	6899      	ldr	r1, [r3, #8]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	430a      	orrs	r2, r1
 80032dc:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	689a      	ldr	r2, [r3, #8]
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80032ec:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	6899      	ldr	r1, [r3, #8]
 80032f4:	687b      	ldr	r3, [r7, #4]
 80032f6:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80032f8:	687b      	ldr	r3, [r7, #4]
 80032fa:	681b      	ldr	r3, [r3, #0]
 80032fc:	430a      	orrs	r2, r1
 80032fe:	609a      	str	r2, [r3, #8]
 8003300:	e00f      	b.n	8003322 <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	689a      	ldr	r2, [r3, #8]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	681b      	ldr	r3, [r3, #0]
 800330c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003310:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	681b      	ldr	r3, [r3, #0]
 8003316:	689a      	ldr	r2, [r3, #8]
 8003318:	687b      	ldr	r3, [r7, #4]
 800331a:	681b      	ldr	r3, [r3, #0]
 800331c:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003320:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	681b      	ldr	r3, [r3, #0]
 8003326:	689a      	ldr	r2, [r3, #8]
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	681b      	ldr	r3, [r3, #0]
 800332c:	f022 0202 	bic.w	r2, r2, #2
 8003330:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	681b      	ldr	r3, [r3, #0]
 8003336:	6899      	ldr	r1, [r3, #8]
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	7e1b      	ldrb	r3, [r3, #24]
 800333c:	005a      	lsls	r2, r3, #1
 800333e:	687b      	ldr	r3, [r7, #4]
 8003340:	681b      	ldr	r3, [r3, #0]
 8003342:	430a      	orrs	r2, r1
 8003344:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	f893 3020 	ldrb.w	r3, [r3, #32]
 800334c:	2b00      	cmp	r3, #0
 800334e:	d01b      	beq.n	8003388 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	681b      	ldr	r3, [r3, #0]
 8003354:	685a      	ldr	r2, [r3, #4]
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800335e:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	685a      	ldr	r2, [r3, #4]
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	681b      	ldr	r3, [r3, #0]
 800336a:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 800336e:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8003370:	687b      	ldr	r3, [r7, #4]
 8003372:	681b      	ldr	r3, [r3, #0]
 8003374:	6859      	ldr	r1, [r3, #4]
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800337a:	3b01      	subs	r3, #1
 800337c:	035a      	lsls	r2, r3, #13
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	430a      	orrs	r2, r1
 8003384:	605a      	str	r2, [r3, #4]
 8003386:	e007      	b.n	8003398 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	685a      	ldr	r2, [r3, #4]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	681b      	ldr	r3, [r3, #0]
 8003392:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003396:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80033a6:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80033a8:	687b      	ldr	r3, [r7, #4]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	69db      	ldr	r3, [r3, #28]
 80033b2:	3b01      	subs	r3, #1
 80033b4:	051a      	lsls	r2, r3, #20
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	430a      	orrs	r2, r1
 80033bc:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	689a      	ldr	r2, [r3, #8]
 80033c4:	687b      	ldr	r3, [r7, #4]
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80033cc:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	6899      	ldr	r1, [r3, #8]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80033da:	025a      	lsls	r2, r3, #9
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	430a      	orrs	r2, r1
 80033e2:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	681b      	ldr	r3, [r3, #0]
 80033e8:	689a      	ldr	r2, [r3, #8]
 80033ea:	687b      	ldr	r3, [r7, #4]
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80033f2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	6899      	ldr	r1, [r3, #8]
 80033fa:	687b      	ldr	r3, [r7, #4]
 80033fc:	695b      	ldr	r3, [r3, #20]
 80033fe:	029a      	lsls	r2, r3, #10
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	430a      	orrs	r2, r1
 8003406:	609a      	str	r2, [r3, #8]
}
 8003408:	bf00      	nop
 800340a:	3714      	adds	r7, #20
 800340c:	46bd      	mov	sp, r7
 800340e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003412:	4770      	bx	lr
 8003414:	40012300 	.word	0x40012300
 8003418:	0f000001 	.word	0x0f000001

0800341c <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 800341c:	b580      	push	{r7, lr}
 800341e:	b084      	sub	sp, #16
 8003420:	af00      	add	r7, sp, #0
 8003422:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003428:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800342e:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 8003432:	2b00      	cmp	r3, #0
 8003434:	d13c      	bne.n	80034b0 <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8003436:	68fb      	ldr	r3, [r7, #12]
 8003438:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800343a:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 800343e:	68fb      	ldr	r3, [r7, #12]
 8003440:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	689b      	ldr	r3, [r3, #8]
 8003448:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800344c:	2b00      	cmp	r3, #0
 800344e:	d12b      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003450:	68fb      	ldr	r3, [r7, #12]
 8003452:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8003454:	2b00      	cmp	r3, #0
 8003456:	d127      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003458:	68fb      	ldr	r3, [r7, #12]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800345e:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003462:	2b00      	cmp	r3, #0
 8003464:	d006      	beq.n	8003474 <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8003466:	68fb      	ldr	r3, [r7, #12]
 8003468:	681b      	ldr	r3, [r3, #0]
 800346a:	689b      	ldr	r3, [r3, #8]
 800346c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003470:	2b00      	cmp	r3, #0
 8003472:	d119      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8003474:	68fb      	ldr	r3, [r7, #12]
 8003476:	681b      	ldr	r3, [r3, #0]
 8003478:	685a      	ldr	r2, [r3, #4]
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	f022 0220 	bic.w	r2, r2, #32
 8003482:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8003484:	68fb      	ldr	r3, [r7, #12]
 8003486:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003488:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8003490:	68fb      	ldr	r3, [r7, #12]
 8003492:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003494:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8003498:	2b00      	cmp	r3, #0
 800349a:	d105      	bne.n	80034a8 <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034a0:	f043 0201 	orr.w	r2, r3, #1
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 80034a8:	68f8      	ldr	r0, [r7, #12]
 80034aa:	f7ff fd61 	bl	8002f70 <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 80034ae:	e00e      	b.n	80034ce <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 80034b0:	68fb      	ldr	r3, [r7, #12]
 80034b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034b4:	f003 0310 	and.w	r3, r3, #16
 80034b8:	2b00      	cmp	r3, #0
 80034ba:	d003      	beq.n	80034c4 <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 80034bc:	68f8      	ldr	r0, [r7, #12]
 80034be:	f7ff fd75 	bl	8002fac <HAL_ADC_ErrorCallback>
}
 80034c2:	e004      	b.n	80034ce <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 80034c4:	68fb      	ldr	r3, [r7, #12]
 80034c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034c8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80034ca:	6878      	ldr	r0, [r7, #4]
 80034cc:	4798      	blx	r3
}
 80034ce:	bf00      	nop
 80034d0:	3710      	adds	r7, #16
 80034d2:	46bd      	mov	sp, r7
 80034d4:	bd80      	pop	{r7, pc}

080034d6 <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 80034d6:	b580      	push	{r7, lr}
 80034d8:	b084      	sub	sp, #16
 80034da:	af00      	add	r7, sp, #0
 80034dc:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80034de:	687b      	ldr	r3, [r7, #4]
 80034e0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034e2:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80034e4:	68f8      	ldr	r0, [r7, #12]
 80034e6:	f7ff fd4d 	bl	8002f84 <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 80034ea:	bf00      	nop
 80034ec:	3710      	adds	r7, #16
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}

080034f2 <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 80034f2:	b580      	push	{r7, lr}
 80034f4:	b084      	sub	sp, #16
 80034f6:	af00      	add	r7, sp, #0
 80034f8:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034fe:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 8003500:	68fb      	ldr	r3, [r7, #12]
 8003502:	2240      	movs	r2, #64	@ 0x40
 8003504:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 8003506:	68fb      	ldr	r3, [r7, #12]
 8003508:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800350a:	f043 0204 	orr.w	r2, r3, #4
 800350e:	68fb      	ldr	r3, [r7, #12]
 8003510:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 8003512:	68f8      	ldr	r0, [r7, #12]
 8003514:	f7ff fd4a 	bl	8002fac <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8003518:	bf00      	nop
 800351a:	3710      	adds	r7, #16
 800351c:	46bd      	mov	sp, r7
 800351e:	bd80      	pop	{r7, pc}

08003520 <HAL_ADCEx_InjectedConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8003520:	b480      	push	{r7}
 8003522:	b083      	sub	sp, #12
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_InjectedConvCpltCallback could be implemented in the user file
   */
}
 8003528:	bf00      	nop
 800352a:	370c      	adds	r7, #12
 800352c:	46bd      	mov	sp, r7
 800352e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003532:	4770      	bx	lr

08003534 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003534:	b480      	push	{r7}
 8003536:	b085      	sub	sp, #20
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	f003 0307 	and.w	r3, r3, #7
 8003542:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8003544:	4b0c      	ldr	r3, [pc, #48]	@ (8003578 <__NVIC_SetPriorityGrouping+0x44>)
 8003546:	68db      	ldr	r3, [r3, #12]
 8003548:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800354a:	68ba      	ldr	r2, [r7, #8]
 800354c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003550:	4013      	ands	r3, r2
 8003552:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003558:	68bb      	ldr	r3, [r7, #8]
 800355a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 800355c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003560:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003564:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8003566:	4a04      	ldr	r2, [pc, #16]	@ (8003578 <__NVIC_SetPriorityGrouping+0x44>)
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	60d3      	str	r3, [r2, #12]
}
 800356c:	bf00      	nop
 800356e:	3714      	adds	r7, #20
 8003570:	46bd      	mov	sp, r7
 8003572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003576:	4770      	bx	lr
 8003578:	e000ed00 	.word	0xe000ed00

0800357c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 800357c:	b480      	push	{r7}
 800357e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003580:	4b04      	ldr	r3, [pc, #16]	@ (8003594 <__NVIC_GetPriorityGrouping+0x18>)
 8003582:	68db      	ldr	r3, [r3, #12]
 8003584:	0a1b      	lsrs	r3, r3, #8
 8003586:	f003 0307 	and.w	r3, r3, #7
}
 800358a:	4618      	mov	r0, r3
 800358c:	46bd      	mov	sp, r7
 800358e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003592:	4770      	bx	lr
 8003594:	e000ed00 	.word	0xe000ed00

08003598 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003598:	b480      	push	{r7}
 800359a:	b083      	sub	sp, #12
 800359c:	af00      	add	r7, sp, #0
 800359e:	4603      	mov	r3, r0
 80035a0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80035a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	db0b      	blt.n	80035c2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035aa:	79fb      	ldrb	r3, [r7, #7]
 80035ac:	f003 021f 	and.w	r2, r3, #31
 80035b0:	4907      	ldr	r1, [pc, #28]	@ (80035d0 <__NVIC_EnableIRQ+0x38>)
 80035b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035b6:	095b      	lsrs	r3, r3, #5
 80035b8:	2001      	movs	r0, #1
 80035ba:	fa00 f202 	lsl.w	r2, r0, r2
 80035be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80035c2:	bf00      	nop
 80035c4:	370c      	adds	r7, #12
 80035c6:	46bd      	mov	sp, r7
 80035c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035cc:	4770      	bx	lr
 80035ce:	bf00      	nop
 80035d0:	e000e100 	.word	0xe000e100

080035d4 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80035d4:	b480      	push	{r7}
 80035d6:	b083      	sub	sp, #12
 80035d8:	af00      	add	r7, sp, #0
 80035da:	4603      	mov	r3, r0
 80035dc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80035de:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035e2:	2b00      	cmp	r3, #0
 80035e4:	db12      	blt.n	800360c <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035e6:	79fb      	ldrb	r3, [r7, #7]
 80035e8:	f003 021f 	and.w	r2, r3, #31
 80035ec:	490a      	ldr	r1, [pc, #40]	@ (8003618 <__NVIC_DisableIRQ+0x44>)
 80035ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035f2:	095b      	lsrs	r3, r3, #5
 80035f4:	2001      	movs	r0, #1
 80035f6:	fa00 f202 	lsl.w	r2, r0, r2
 80035fa:	3320      	adds	r3, #32
 80035fc:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003600:	f3bf 8f4f 	dsb	sy
}
 8003604:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8003606:	f3bf 8f6f 	isb	sy
}
 800360a:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 800360c:	bf00      	nop
 800360e:	370c      	adds	r7, #12
 8003610:	46bd      	mov	sp, r7
 8003612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003616:	4770      	bx	lr
 8003618:	e000e100 	.word	0xe000e100

0800361c <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 800361c:	b480      	push	{r7}
 800361e:	b083      	sub	sp, #12
 8003620:	af00      	add	r7, sp, #0
 8003622:	4603      	mov	r3, r0
 8003624:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003626:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800362a:	2b00      	cmp	r3, #0
 800362c:	db0c      	blt.n	8003648 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800362e:	79fb      	ldrb	r3, [r7, #7]
 8003630:	f003 021f 	and.w	r2, r3, #31
 8003634:	4907      	ldr	r1, [pc, #28]	@ (8003654 <__NVIC_ClearPendingIRQ+0x38>)
 8003636:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800363a:	095b      	lsrs	r3, r3, #5
 800363c:	2001      	movs	r0, #1
 800363e:	fa00 f202 	lsl.w	r2, r0, r2
 8003642:	3360      	adds	r3, #96	@ 0x60
 8003644:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8003648:	bf00      	nop
 800364a:	370c      	adds	r7, #12
 800364c:	46bd      	mov	sp, r7
 800364e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003652:	4770      	bx	lr
 8003654:	e000e100 	.word	0xe000e100

08003658 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003658:	b480      	push	{r7}
 800365a:	b083      	sub	sp, #12
 800365c:	af00      	add	r7, sp, #0
 800365e:	4603      	mov	r3, r0
 8003660:	6039      	str	r1, [r7, #0]
 8003662:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8003664:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003668:	2b00      	cmp	r3, #0
 800366a:	db0a      	blt.n	8003682 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800366c:	683b      	ldr	r3, [r7, #0]
 800366e:	b2da      	uxtb	r2, r3
 8003670:	490c      	ldr	r1, [pc, #48]	@ (80036a4 <__NVIC_SetPriority+0x4c>)
 8003672:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003676:	0112      	lsls	r2, r2, #4
 8003678:	b2d2      	uxtb	r2, r2
 800367a:	440b      	add	r3, r1
 800367c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8003680:	e00a      	b.n	8003698 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003682:	683b      	ldr	r3, [r7, #0]
 8003684:	b2da      	uxtb	r2, r3
 8003686:	4908      	ldr	r1, [pc, #32]	@ (80036a8 <__NVIC_SetPriority+0x50>)
 8003688:	79fb      	ldrb	r3, [r7, #7]
 800368a:	f003 030f 	and.w	r3, r3, #15
 800368e:	3b04      	subs	r3, #4
 8003690:	0112      	lsls	r2, r2, #4
 8003692:	b2d2      	uxtb	r2, r2
 8003694:	440b      	add	r3, r1
 8003696:	761a      	strb	r2, [r3, #24]
}
 8003698:	bf00      	nop
 800369a:	370c      	adds	r7, #12
 800369c:	46bd      	mov	sp, r7
 800369e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036a2:	4770      	bx	lr
 80036a4:	e000e100 	.word	0xe000e100
 80036a8:	e000ed00 	.word	0xe000ed00

080036ac <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80036ac:	b480      	push	{r7}
 80036ae:	b089      	sub	sp, #36	@ 0x24
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	60f8      	str	r0, [r7, #12]
 80036b4:	60b9      	str	r1, [r7, #8]
 80036b6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80036b8:	68fb      	ldr	r3, [r7, #12]
 80036ba:	f003 0307 	and.w	r3, r3, #7
 80036be:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80036c0:	69fb      	ldr	r3, [r7, #28]
 80036c2:	f1c3 0307 	rsb	r3, r3, #7
 80036c6:	2b04      	cmp	r3, #4
 80036c8:	bf28      	it	cs
 80036ca:	2304      	movcs	r3, #4
 80036cc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80036ce:	69fb      	ldr	r3, [r7, #28]
 80036d0:	3304      	adds	r3, #4
 80036d2:	2b06      	cmp	r3, #6
 80036d4:	d902      	bls.n	80036dc <NVIC_EncodePriority+0x30>
 80036d6:	69fb      	ldr	r3, [r7, #28]
 80036d8:	3b03      	subs	r3, #3
 80036da:	e000      	b.n	80036de <NVIC_EncodePriority+0x32>
 80036dc:	2300      	movs	r3, #0
 80036de:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80036e0:	f04f 32ff 	mov.w	r2, #4294967295
 80036e4:	69bb      	ldr	r3, [r7, #24]
 80036e6:	fa02 f303 	lsl.w	r3, r2, r3
 80036ea:	43da      	mvns	r2, r3
 80036ec:	68bb      	ldr	r3, [r7, #8]
 80036ee:	401a      	ands	r2, r3
 80036f0:	697b      	ldr	r3, [r7, #20]
 80036f2:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80036f4:	f04f 31ff 	mov.w	r1, #4294967295
 80036f8:	697b      	ldr	r3, [r7, #20]
 80036fa:	fa01 f303 	lsl.w	r3, r1, r3
 80036fe:	43d9      	mvns	r1, r3
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003704:	4313      	orrs	r3, r2
         );
}
 8003706:	4618      	mov	r0, r3
 8003708:	3724      	adds	r7, #36	@ 0x24
 800370a:	46bd      	mov	sp, r7
 800370c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003710:	4770      	bx	lr
	...

08003714 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003714:	b580      	push	{r7, lr}
 8003716:	b082      	sub	sp, #8
 8003718:	af00      	add	r7, sp, #0
 800371a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	3b01      	subs	r3, #1
 8003720:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003724:	d301      	bcc.n	800372a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003726:	2301      	movs	r3, #1
 8003728:	e00f      	b.n	800374a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800372a:	4a0a      	ldr	r2, [pc, #40]	@ (8003754 <SysTick_Config+0x40>)
 800372c:	687b      	ldr	r3, [r7, #4]
 800372e:	3b01      	subs	r3, #1
 8003730:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003732:	210f      	movs	r1, #15
 8003734:	f04f 30ff 	mov.w	r0, #4294967295
 8003738:	f7ff ff8e 	bl	8003658 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 800373c:	4b05      	ldr	r3, [pc, #20]	@ (8003754 <SysTick_Config+0x40>)
 800373e:	2200      	movs	r2, #0
 8003740:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003742:	4b04      	ldr	r3, [pc, #16]	@ (8003754 <SysTick_Config+0x40>)
 8003744:	2207      	movs	r2, #7
 8003746:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003748:	2300      	movs	r3, #0
}
 800374a:	4618      	mov	r0, r3
 800374c:	3708      	adds	r7, #8
 800374e:	46bd      	mov	sp, r7
 8003750:	bd80      	pop	{r7, pc}
 8003752:	bf00      	nop
 8003754:	e000e010 	.word	0xe000e010

08003758 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003758:	b580      	push	{r7, lr}
 800375a:	b082      	sub	sp, #8
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003760:	6878      	ldr	r0, [r7, #4]
 8003762:	f7ff fee7 	bl	8003534 <__NVIC_SetPriorityGrouping>
}
 8003766:	bf00      	nop
 8003768:	3708      	adds	r7, #8
 800376a:	46bd      	mov	sp, r7
 800376c:	bd80      	pop	{r7, pc}

0800376e <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 800376e:	b580      	push	{r7, lr}
 8003770:	b086      	sub	sp, #24
 8003772:	af00      	add	r7, sp, #0
 8003774:	4603      	mov	r3, r0
 8003776:	60b9      	str	r1, [r7, #8]
 8003778:	607a      	str	r2, [r7, #4]
 800377a:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 800377c:	2300      	movs	r3, #0
 800377e:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8003780:	f7ff fefc 	bl	800357c <__NVIC_GetPriorityGrouping>
 8003784:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8003786:	687a      	ldr	r2, [r7, #4]
 8003788:	68b9      	ldr	r1, [r7, #8]
 800378a:	6978      	ldr	r0, [r7, #20]
 800378c:	f7ff ff8e 	bl	80036ac <NVIC_EncodePriority>
 8003790:	4602      	mov	r2, r0
 8003792:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003796:	4611      	mov	r1, r2
 8003798:	4618      	mov	r0, r3
 800379a:	f7ff ff5d 	bl	8003658 <__NVIC_SetPriority>
}
 800379e:	bf00      	nop
 80037a0:	3718      	adds	r7, #24
 80037a2:	46bd      	mov	sp, r7
 80037a4:	bd80      	pop	{r7, pc}

080037a6 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80037a6:	b580      	push	{r7, lr}
 80037a8:	b082      	sub	sp, #8
 80037aa:	af00      	add	r7, sp, #0
 80037ac:	4603      	mov	r3, r0
 80037ae:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80037b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037b4:	4618      	mov	r0, r3
 80037b6:	f7ff feef 	bl	8003598 <__NVIC_EnableIRQ>
}
 80037ba:	bf00      	nop
 80037bc:	3708      	adds	r7, #8
 80037be:	46bd      	mov	sp, r7
 80037c0:	bd80      	pop	{r7, pc}

080037c2 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80037c2:	b580      	push	{r7, lr}
 80037c4:	b082      	sub	sp, #8
 80037c6:	af00      	add	r7, sp, #0
 80037c8:	4603      	mov	r3, r0
 80037ca:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80037cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037d0:	4618      	mov	r0, r3
 80037d2:	f7ff feff 	bl	80035d4 <__NVIC_DisableIRQ>
}
 80037d6:	bf00      	nop
 80037d8:	3708      	adds	r7, #8
 80037da:	46bd      	mov	sp, r7
 80037dc:	bd80      	pop	{r7, pc}

080037de <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80037de:	b580      	push	{r7, lr}
 80037e0:	b082      	sub	sp, #8
 80037e2:	af00      	add	r7, sp, #0
 80037e4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80037e6:	6878      	ldr	r0, [r7, #4]
 80037e8:	f7ff ff94 	bl	8003714 <SysTick_Config>
 80037ec:	4603      	mov	r3, r0
}
 80037ee:	4618      	mov	r0, r3
 80037f0:	3708      	adds	r7, #8
 80037f2:	46bd      	mov	sp, r7
 80037f4:	bd80      	pop	{r7, pc}

080037f6 <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 80037f6:	b580      	push	{r7, lr}
 80037f8:	b082      	sub	sp, #8
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	4603      	mov	r3, r0
 80037fe:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8003800:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003804:	4618      	mov	r0, r3
 8003806:	f7ff ff09 	bl	800361c <__NVIC_ClearPendingIRQ>
}
 800380a:	bf00      	nop
 800380c:	3708      	adds	r7, #8
 800380e:	46bd      	mov	sp, r7
 8003810:	bd80      	pop	{r7, pc}

08003812 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003812:	b580      	push	{r7, lr}
 8003814:	b082      	sub	sp, #8
 8003816:	af00      	add	r7, sp, #0
 8003818:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	2b00      	cmp	r3, #0
 800381e:	d101      	bne.n	8003824 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003820:	2301      	movs	r3, #1
 8003822:	e00e      	b.n	8003842 <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	795b      	ldrb	r3, [r3, #5]
 8003828:	b2db      	uxtb	r3, r3
 800382a:	2b00      	cmp	r3, #0
 800382c:	d105      	bne.n	800383a <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	2200      	movs	r2, #0
 8003832:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003834:	6878      	ldr	r0, [r7, #4]
 8003836:	f7fe f8ab 	bl	8001990 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800383a:	687b      	ldr	r3, [r7, #4]
 800383c:	2201      	movs	r2, #1
 800383e:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8003840:	2300      	movs	r3, #0
}
 8003842:	4618      	mov	r0, r3
 8003844:	3708      	adds	r7, #8
 8003846:	46bd      	mov	sp, r7
 8003848:	bd80      	pop	{r7, pc}
	...

0800384c <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 800384c:	b580      	push	{r7, lr}
 800384e:	b086      	sub	sp, #24
 8003850:	af00      	add	r7, sp, #0
 8003852:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 8003854:	2300      	movs	r3, #0
 8003856:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8003858:	f7ff f8f6 	bl	8002a48 <HAL_GetTick>
 800385c:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	2b00      	cmp	r3, #0
 8003862:	d101      	bne.n	8003868 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 8003864:	2301      	movs	r3, #1
 8003866:	e099      	b.n	800399c <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	2202      	movs	r2, #2
 800386c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	2200      	movs	r2, #0
 8003874:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	681b      	ldr	r3, [r3, #0]
 800387c:	681a      	ldr	r2, [r3, #0]
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	681b      	ldr	r3, [r3, #0]
 8003882:	f022 0201 	bic.w	r2, r2, #1
 8003886:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003888:	e00f      	b.n	80038aa <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800388a:	f7ff f8dd 	bl	8002a48 <HAL_GetTick>
 800388e:	4602      	mov	r2, r0
 8003890:	693b      	ldr	r3, [r7, #16]
 8003892:	1ad3      	subs	r3, r2, r3
 8003894:	2b05      	cmp	r3, #5
 8003896:	d908      	bls.n	80038aa <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	2220      	movs	r2, #32
 800389c:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	2203      	movs	r2, #3
 80038a2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 80038a6:	2303      	movs	r3, #3
 80038a8:	e078      	b.n	800399c <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	681b      	ldr	r3, [r3, #0]
 80038ae:	681b      	ldr	r3, [r3, #0]
 80038b0:	f003 0301 	and.w	r3, r3, #1
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	d1e8      	bne.n	800388a <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	681b      	ldr	r3, [r3, #0]
 80038be:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80038c0:	697a      	ldr	r2, [r7, #20]
 80038c2:	4b38      	ldr	r3, [pc, #224]	@ (80039a4 <HAL_DMA_Init+0x158>)
 80038c4:	4013      	ands	r3, r2
 80038c6:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	685a      	ldr	r2, [r3, #4]
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	689b      	ldr	r3, [r3, #8]
 80038d0:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038d2:	687b      	ldr	r3, [r7, #4]
 80038d4:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038d6:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	691b      	ldr	r3, [r3, #16]
 80038dc:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038e2:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	699b      	ldr	r3, [r3, #24]
 80038e8:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038ee:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	6a1b      	ldr	r3, [r3, #32]
 80038f4:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038f6:	697a      	ldr	r2, [r7, #20]
 80038f8:	4313      	orrs	r3, r2
 80038fa:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003900:	2b04      	cmp	r3, #4
 8003902:	d107      	bne.n	8003914 <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800390c:	4313      	orrs	r3, r2
 800390e:	697a      	ldr	r2, [r7, #20]
 8003910:	4313      	orrs	r3, r2
 8003912:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	681b      	ldr	r3, [r3, #0]
 8003918:	697a      	ldr	r2, [r7, #20]
 800391a:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	695b      	ldr	r3, [r3, #20]
 8003922:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8003924:	697b      	ldr	r3, [r7, #20]
 8003926:	f023 0307 	bic.w	r3, r3, #7
 800392a:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003930:	697a      	ldr	r2, [r7, #20]
 8003932:	4313      	orrs	r3, r2
 8003934:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800393a:	2b04      	cmp	r3, #4
 800393c:	d117      	bne.n	800396e <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003942:	697a      	ldr	r2, [r7, #20]
 8003944:	4313      	orrs	r3, r2
 8003946:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800394c:	2b00      	cmp	r3, #0
 800394e:	d00e      	beq.n	800396e <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8003950:	6878      	ldr	r0, [r7, #4]
 8003952:	f000 fa91 	bl	8003e78 <DMA_CheckFifoParam>
 8003956:	4603      	mov	r3, r0
 8003958:	2b00      	cmp	r3, #0
 800395a:	d008      	beq.n	800396e <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	2240      	movs	r2, #64	@ 0x40
 8003960:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003962:	687b      	ldr	r3, [r7, #4]
 8003964:	2201      	movs	r2, #1
 8003966:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 800396a:	2301      	movs	r3, #1
 800396c:	e016      	b.n	800399c <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	697a      	ldr	r2, [r7, #20]
 8003974:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003976:	6878      	ldr	r0, [r7, #4]
 8003978:	f000 fa48 	bl	8003e0c <DMA_CalcBaseAndBitshift>
 800397c:	4603      	mov	r3, r0
 800397e:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003980:	687b      	ldr	r3, [r7, #4]
 8003982:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003984:	223f      	movs	r2, #63	@ 0x3f
 8003986:	409a      	lsls	r2, r3
 8003988:	68fb      	ldr	r3, [r7, #12]
 800398a:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800398c:	687b      	ldr	r3, [r7, #4]
 800398e:	2200      	movs	r2, #0
 8003990:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	2201      	movs	r2, #1
 8003996:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 800399a:	2300      	movs	r3, #0
}
 800399c:	4618      	mov	r0, r3
 800399e:	3718      	adds	r7, #24
 80039a0:	46bd      	mov	sp, r7
 80039a2:	bd80      	pop	{r7, pc}
 80039a4:	f010803f 	.word	0xf010803f

080039a8 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80039a8:	b580      	push	{r7, lr}
 80039aa:	b086      	sub	sp, #24
 80039ac:	af00      	add	r7, sp, #0
 80039ae:	60f8      	str	r0, [r7, #12]
 80039b0:	60b9      	str	r1, [r7, #8]
 80039b2:	607a      	str	r2, [r7, #4]
 80039b4:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80039b6:	2300      	movs	r3, #0
 80039b8:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039be:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80039c6:	2b01      	cmp	r3, #1
 80039c8:	d101      	bne.n	80039ce <HAL_DMA_Start_IT+0x26>
 80039ca:	2302      	movs	r3, #2
 80039cc:	e040      	b.n	8003a50 <HAL_DMA_Start_IT+0xa8>
 80039ce:	68fb      	ldr	r3, [r7, #12]
 80039d0:	2201      	movs	r2, #1
 80039d2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 80039d6:	68fb      	ldr	r3, [r7, #12]
 80039d8:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80039dc:	b2db      	uxtb	r3, r3
 80039de:	2b01      	cmp	r3, #1
 80039e0:	d12f      	bne.n	8003a42 <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	2202      	movs	r2, #2
 80039e6:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	2200      	movs	r2, #0
 80039ee:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 80039f0:	683b      	ldr	r3, [r7, #0]
 80039f2:	687a      	ldr	r2, [r7, #4]
 80039f4:	68b9      	ldr	r1, [r7, #8]
 80039f6:	68f8      	ldr	r0, [r7, #12]
 80039f8:	f000 f9da 	bl	8003db0 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 80039fc:	68fb      	ldr	r3, [r7, #12]
 80039fe:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a00:	223f      	movs	r2, #63	@ 0x3f
 8003a02:	409a      	lsls	r2, r3
 8003a04:	693b      	ldr	r3, [r7, #16]
 8003a06:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003a08:	68fb      	ldr	r3, [r7, #12]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	681a      	ldr	r2, [r3, #0]
 8003a0e:	68fb      	ldr	r3, [r7, #12]
 8003a10:	681b      	ldr	r3, [r3, #0]
 8003a12:	f042 0216 	orr.w	r2, r2, #22
 8003a16:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8003a18:	68fb      	ldr	r3, [r7, #12]
 8003a1a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a1c:	2b00      	cmp	r3, #0
 8003a1e:	d007      	beq.n	8003a30 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8003a20:	68fb      	ldr	r3, [r7, #12]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	681a      	ldr	r2, [r3, #0]
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	f042 0208 	orr.w	r2, r2, #8
 8003a2e:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	681b      	ldr	r3, [r3, #0]
 8003a34:	681a      	ldr	r2, [r3, #0]
 8003a36:	68fb      	ldr	r3, [r7, #12]
 8003a38:	681b      	ldr	r3, [r3, #0]
 8003a3a:	f042 0201 	orr.w	r2, r2, #1
 8003a3e:	601a      	str	r2, [r3, #0]
 8003a40:	e005      	b.n	8003a4e <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8003a42:	68fb      	ldr	r3, [r7, #12]
 8003a44:	2200      	movs	r2, #0
 8003a46:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8003a4a:	2302      	movs	r3, #2
 8003a4c:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8003a4e:	7dfb      	ldrb	r3, [r7, #23]
}
 8003a50:	4618      	mov	r0, r3
 8003a52:	3718      	adds	r7, #24
 8003a54:	46bd      	mov	sp, r7
 8003a56:	bd80      	pop	{r7, pc}

08003a58 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8003a58:	b480      	push	{r7}
 8003a5a:	b083      	sub	sp, #12
 8003a5c:	af00      	add	r7, sp, #0
 8003a5e:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003a60:	687b      	ldr	r3, [r7, #4]
 8003a62:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003a66:	b2db      	uxtb	r3, r3
 8003a68:	2b02      	cmp	r3, #2
 8003a6a:	d004      	beq.n	8003a76 <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003a6c:	687b      	ldr	r3, [r7, #4]
 8003a6e:	2280      	movs	r2, #128	@ 0x80
 8003a70:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 8003a72:	2301      	movs	r3, #1
 8003a74:	e00c      	b.n	8003a90 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	2205      	movs	r2, #5
 8003a7a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	681b      	ldr	r3, [r3, #0]
 8003a82:	681a      	ldr	r2, [r3, #0]
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	f022 0201 	bic.w	r2, r2, #1
 8003a8c:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8003a8e:	2300      	movs	r3, #0
}
 8003a90:	4618      	mov	r0, r3
 8003a92:	370c      	adds	r7, #12
 8003a94:	46bd      	mov	sp, r7
 8003a96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a9a:	4770      	bx	lr

08003a9c <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003a9c:	b580      	push	{r7, lr}
 8003a9e:	b086      	sub	sp, #24
 8003aa0:	af00      	add	r7, sp, #0
 8003aa2:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8003aa4:	2300      	movs	r3, #0
 8003aa6:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003aa8:	4b8e      	ldr	r3, [pc, #568]	@ (8003ce4 <HAL_DMA_IRQHandler+0x248>)
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	4a8e      	ldr	r2, [pc, #568]	@ (8003ce8 <HAL_DMA_IRQHandler+0x24c>)
 8003aae:	fba2 2303 	umull	r2, r3, r2, r3
 8003ab2:	0a9b      	lsrs	r3, r3, #10
 8003ab4:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003ab6:	687b      	ldr	r3, [r7, #4]
 8003ab8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003aba:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003abc:	693b      	ldr	r3, [r7, #16]
 8003abe:	681b      	ldr	r3, [r3, #0]
 8003ac0:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ac6:	2208      	movs	r2, #8
 8003ac8:	409a      	lsls	r2, r3
 8003aca:	68fb      	ldr	r3, [r7, #12]
 8003acc:	4013      	ands	r3, r2
 8003ace:	2b00      	cmp	r3, #0
 8003ad0:	d01a      	beq.n	8003b08 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8003ad2:	687b      	ldr	r3, [r7, #4]
 8003ad4:	681b      	ldr	r3, [r3, #0]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	f003 0304 	and.w	r3, r3, #4
 8003adc:	2b00      	cmp	r3, #0
 8003ade:	d013      	beq.n	8003b08 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	681b      	ldr	r3, [r3, #0]
 8003ae4:	681a      	ldr	r2, [r3, #0]
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	681b      	ldr	r3, [r3, #0]
 8003aea:	f022 0204 	bic.w	r2, r2, #4
 8003aee:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003af4:	2208      	movs	r2, #8
 8003af6:	409a      	lsls	r2, r3
 8003af8:	693b      	ldr	r3, [r7, #16]
 8003afa:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003afc:	687b      	ldr	r3, [r7, #4]
 8003afe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b00:	f043 0201 	orr.w	r2, r3, #1
 8003b04:	687b      	ldr	r3, [r7, #4]
 8003b06:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b0c:	2201      	movs	r2, #1
 8003b0e:	409a      	lsls	r2, r3
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	4013      	ands	r3, r2
 8003b14:	2b00      	cmp	r3, #0
 8003b16:	d012      	beq.n	8003b3e <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	681b      	ldr	r3, [r3, #0]
 8003b1c:	695b      	ldr	r3, [r3, #20]
 8003b1e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b22:	2b00      	cmp	r3, #0
 8003b24:	d00b      	beq.n	8003b3e <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003b26:	687b      	ldr	r3, [r7, #4]
 8003b28:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b2a:	2201      	movs	r2, #1
 8003b2c:	409a      	lsls	r2, r3
 8003b2e:	693b      	ldr	r3, [r7, #16]
 8003b30:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b36:	f043 0202 	orr.w	r2, r3, #2
 8003b3a:	687b      	ldr	r3, [r7, #4]
 8003b3c:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b42:	2204      	movs	r2, #4
 8003b44:	409a      	lsls	r2, r3
 8003b46:	68fb      	ldr	r3, [r7, #12]
 8003b48:	4013      	ands	r3, r2
 8003b4a:	2b00      	cmp	r3, #0
 8003b4c:	d012      	beq.n	8003b74 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	681b      	ldr	r3, [r3, #0]
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	f003 0302 	and.w	r3, r3, #2
 8003b58:	2b00      	cmp	r3, #0
 8003b5a:	d00b      	beq.n	8003b74 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b60:	2204      	movs	r2, #4
 8003b62:	409a      	lsls	r2, r3
 8003b64:	693b      	ldr	r3, [r7, #16]
 8003b66:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b6c:	f043 0204 	orr.w	r2, r3, #4
 8003b70:	687b      	ldr	r3, [r7, #4]
 8003b72:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b78:	2210      	movs	r2, #16
 8003b7a:	409a      	lsls	r2, r3
 8003b7c:	68fb      	ldr	r3, [r7, #12]
 8003b7e:	4013      	ands	r3, r2
 8003b80:	2b00      	cmp	r3, #0
 8003b82:	d043      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	681b      	ldr	r3, [r3, #0]
 8003b8a:	f003 0308 	and.w	r3, r3, #8
 8003b8e:	2b00      	cmp	r3, #0
 8003b90:	d03c      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b96:	2210      	movs	r2, #16
 8003b98:	409a      	lsls	r2, r3
 8003b9a:	693b      	ldr	r3, [r7, #16]
 8003b9c:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003b9e:	687b      	ldr	r3, [r7, #4]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	681b      	ldr	r3, [r3, #0]
 8003ba4:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003ba8:	2b00      	cmp	r3, #0
 8003baa:	d018      	beq.n	8003bde <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	681b      	ldr	r3, [r3, #0]
 8003bb0:	681b      	ldr	r3, [r3, #0]
 8003bb2:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003bb6:	2b00      	cmp	r3, #0
 8003bb8:	d108      	bne.n	8003bcc <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003bba:	687b      	ldr	r3, [r7, #4]
 8003bbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bbe:	2b00      	cmp	r3, #0
 8003bc0:	d024      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bc6:	6878      	ldr	r0, [r7, #4]
 8003bc8:	4798      	blx	r3
 8003bca:	e01f      	b.n	8003c0c <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bd0:	2b00      	cmp	r3, #0
 8003bd2:	d01b      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bd8:	6878      	ldr	r0, [r7, #4]
 8003bda:	4798      	blx	r3
 8003bdc:	e016      	b.n	8003c0c <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003bde:	687b      	ldr	r3, [r7, #4]
 8003be0:	681b      	ldr	r3, [r3, #0]
 8003be2:	681b      	ldr	r3, [r3, #0]
 8003be4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d107      	bne.n	8003bfc <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	681b      	ldr	r3, [r3, #0]
 8003bf0:	681a      	ldr	r2, [r3, #0]
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	681b      	ldr	r3, [r3, #0]
 8003bf6:	f022 0208 	bic.w	r2, r2, #8
 8003bfa:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d003      	beq.n	8003c0c <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c08:	6878      	ldr	r0, [r7, #4]
 8003c0a:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003c0c:	687b      	ldr	r3, [r7, #4]
 8003c0e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c10:	2220      	movs	r2, #32
 8003c12:	409a      	lsls	r2, r3
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	4013      	ands	r3, r2
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	f000 808f 	beq.w	8003d3c <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003c1e:	687b      	ldr	r3, [r7, #4]
 8003c20:	681b      	ldr	r3, [r3, #0]
 8003c22:	681b      	ldr	r3, [r3, #0]
 8003c24:	f003 0310 	and.w	r3, r3, #16
 8003c28:	2b00      	cmp	r3, #0
 8003c2a:	f000 8087 	beq.w	8003d3c <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003c2e:	687b      	ldr	r3, [r7, #4]
 8003c30:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c32:	2220      	movs	r2, #32
 8003c34:	409a      	lsls	r2, r3
 8003c36:	693b      	ldr	r3, [r7, #16]
 8003c38:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003c40:	b2db      	uxtb	r3, r3
 8003c42:	2b05      	cmp	r3, #5
 8003c44:	d136      	bne.n	8003cb4 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	681a      	ldr	r2, [r3, #0]
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	f022 0216 	bic.w	r2, r2, #22
 8003c54:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	695a      	ldr	r2, [r3, #20]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003c64:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c6a:	2b00      	cmp	r3, #0
 8003c6c:	d103      	bne.n	8003c76 <HAL_DMA_IRQHandler+0x1da>
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	d007      	beq.n	8003c86 <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	681a      	ldr	r2, [r3, #0]
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	f022 0208 	bic.w	r2, r2, #8
 8003c84:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c8a:	223f      	movs	r2, #63	@ 0x3f
 8003c8c:	409a      	lsls	r2, r3
 8003c8e:	693b      	ldr	r3, [r7, #16]
 8003c90:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	2201      	movs	r2, #1
 8003c96:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003c9a:	687b      	ldr	r3, [r7, #4]
 8003c9c:	2200      	movs	r2, #0
 8003c9e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003ca6:	2b00      	cmp	r3, #0
 8003ca8:	d07e      	beq.n	8003da8 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003cae:	6878      	ldr	r0, [r7, #4]
 8003cb0:	4798      	blx	r3
        }
        return;
 8003cb2:	e079      	b.n	8003da8 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	681b      	ldr	r3, [r3, #0]
 8003cba:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003cbe:	2b00      	cmp	r3, #0
 8003cc0:	d01d      	beq.n	8003cfe <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	681b      	ldr	r3, [r3, #0]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003ccc:	2b00      	cmp	r3, #0
 8003cce:	d10d      	bne.n	8003cec <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cd4:	2b00      	cmp	r3, #0
 8003cd6:	d031      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003cd8:	687b      	ldr	r3, [r7, #4]
 8003cda:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cdc:	6878      	ldr	r0, [r7, #4]
 8003cde:	4798      	blx	r3
 8003ce0:	e02c      	b.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
 8003ce2:	bf00      	nop
 8003ce4:	20000008 	.word	0x20000008
 8003ce8:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003cf0:	2b00      	cmp	r3, #0
 8003cf2:	d023      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003cf8:	6878      	ldr	r0, [r7, #4]
 8003cfa:	4798      	blx	r3
 8003cfc:	e01e      	b.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003cfe:	687b      	ldr	r3, [r7, #4]
 8003d00:	681b      	ldr	r3, [r3, #0]
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	d10f      	bne.n	8003d2c <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	681b      	ldr	r3, [r3, #0]
 8003d10:	681a      	ldr	r2, [r3, #0]
 8003d12:	687b      	ldr	r3, [r7, #4]
 8003d14:	681b      	ldr	r3, [r3, #0]
 8003d16:	f022 0210 	bic.w	r2, r2, #16
 8003d1a:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003d1c:	687b      	ldr	r3, [r7, #4]
 8003d1e:	2201      	movs	r2, #1
 8003d20:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	2200      	movs	r2, #0
 8003d28:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003d2c:	687b      	ldr	r3, [r7, #4]
 8003d2e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d003      	beq.n	8003d3c <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d38:	6878      	ldr	r0, [r7, #4]
 8003d3a:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d40:	2b00      	cmp	r3, #0
 8003d42:	d032      	beq.n	8003daa <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d48:	f003 0301 	and.w	r3, r3, #1
 8003d4c:	2b00      	cmp	r3, #0
 8003d4e:	d022      	beq.n	8003d96 <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	2205      	movs	r2, #5
 8003d54:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003d58:	687b      	ldr	r3, [r7, #4]
 8003d5a:	681b      	ldr	r3, [r3, #0]
 8003d5c:	681a      	ldr	r2, [r3, #0]
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	681b      	ldr	r3, [r3, #0]
 8003d62:	f022 0201 	bic.w	r2, r2, #1
 8003d66:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003d68:	68bb      	ldr	r3, [r7, #8]
 8003d6a:	3301      	adds	r3, #1
 8003d6c:	60bb      	str	r3, [r7, #8]
 8003d6e:	697a      	ldr	r2, [r7, #20]
 8003d70:	429a      	cmp	r2, r3
 8003d72:	d307      	bcc.n	8003d84 <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003d74:	687b      	ldr	r3, [r7, #4]
 8003d76:	681b      	ldr	r3, [r3, #0]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	f003 0301 	and.w	r3, r3, #1
 8003d7e:	2b00      	cmp	r3, #0
 8003d80:	d1f2      	bne.n	8003d68 <HAL_DMA_IRQHandler+0x2cc>
 8003d82:	e000      	b.n	8003d86 <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003d84:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	2201      	movs	r2, #1
 8003d8a:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	2200      	movs	r2, #0
 8003d92:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003d96:	687b      	ldr	r3, [r7, #4]
 8003d98:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003d9a:	2b00      	cmp	r3, #0
 8003d9c:	d005      	beq.n	8003daa <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003da2:	6878      	ldr	r0, [r7, #4]
 8003da4:	4798      	blx	r3
 8003da6:	e000      	b.n	8003daa <HAL_DMA_IRQHandler+0x30e>
        return;
 8003da8:	bf00      	nop
    }
  }
}
 8003daa:	3718      	adds	r7, #24
 8003dac:	46bd      	mov	sp, r7
 8003dae:	bd80      	pop	{r7, pc}

08003db0 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003db0:	b480      	push	{r7}
 8003db2:	b085      	sub	sp, #20
 8003db4:	af00      	add	r7, sp, #0
 8003db6:	60f8      	str	r0, [r7, #12]
 8003db8:	60b9      	str	r1, [r7, #8]
 8003dba:	607a      	str	r2, [r7, #4]
 8003dbc:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	681b      	ldr	r3, [r3, #0]
 8003dc2:	681a      	ldr	r2, [r3, #0]
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003dcc:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003dce:	68fb      	ldr	r3, [r7, #12]
 8003dd0:	681b      	ldr	r3, [r3, #0]
 8003dd2:	683a      	ldr	r2, [r7, #0]
 8003dd4:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	689b      	ldr	r3, [r3, #8]
 8003dda:	2b40      	cmp	r3, #64	@ 0x40
 8003ddc:	d108      	bne.n	8003df0 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003dde:	68fb      	ldr	r3, [r7, #12]
 8003de0:	681b      	ldr	r3, [r3, #0]
 8003de2:	687a      	ldr	r2, [r7, #4]
 8003de4:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	68ba      	ldr	r2, [r7, #8]
 8003dec:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003dee:	e007      	b.n	8003e00 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003df0:	68fb      	ldr	r3, [r7, #12]
 8003df2:	681b      	ldr	r3, [r3, #0]
 8003df4:	68ba      	ldr	r2, [r7, #8]
 8003df6:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003df8:	68fb      	ldr	r3, [r7, #12]
 8003dfa:	681b      	ldr	r3, [r3, #0]
 8003dfc:	687a      	ldr	r2, [r7, #4]
 8003dfe:	60da      	str	r2, [r3, #12]
}
 8003e00:	bf00      	nop
 8003e02:	3714      	adds	r7, #20
 8003e04:	46bd      	mov	sp, r7
 8003e06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e0a:	4770      	bx	lr

08003e0c <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003e0c:	b480      	push	{r7}
 8003e0e:	b085      	sub	sp, #20
 8003e10:	af00      	add	r7, sp, #0
 8003e12:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003e14:	687b      	ldr	r3, [r7, #4]
 8003e16:	681b      	ldr	r3, [r3, #0]
 8003e18:	b2db      	uxtb	r3, r3
 8003e1a:	3b10      	subs	r3, #16
 8003e1c:	4a14      	ldr	r2, [pc, #80]	@ (8003e70 <DMA_CalcBaseAndBitshift+0x64>)
 8003e1e:	fba2 2303 	umull	r2, r3, r2, r3
 8003e22:	091b      	lsrs	r3, r3, #4
 8003e24:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003e26:	4a13      	ldr	r2, [pc, #76]	@ (8003e74 <DMA_CalcBaseAndBitshift+0x68>)
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	4413      	add	r3, r2
 8003e2c:	781b      	ldrb	r3, [r3, #0]
 8003e2e:	461a      	mov	r2, r3
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	2b03      	cmp	r3, #3
 8003e38:	d909      	bls.n	8003e4e <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	681b      	ldr	r3, [r3, #0]
 8003e3e:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e42:	f023 0303 	bic.w	r3, r3, #3
 8003e46:	1d1a      	adds	r2, r3, #4
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	659a      	str	r2, [r3, #88]	@ 0x58
 8003e4c:	e007      	b.n	8003e5e <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003e4e:	687b      	ldr	r3, [r7, #4]
 8003e50:	681b      	ldr	r3, [r3, #0]
 8003e52:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e56:	f023 0303 	bic.w	r3, r3, #3
 8003e5a:	687a      	ldr	r2, [r7, #4]
 8003e5c:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003e62:	4618      	mov	r0, r3
 8003e64:	3714      	adds	r7, #20
 8003e66:	46bd      	mov	sp, r7
 8003e68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e6c:	4770      	bx	lr
 8003e6e:	bf00      	nop
 8003e70:	aaaaaaab 	.word	0xaaaaaaab
 8003e74:	08025f14 	.word	0x08025f14

08003e78 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003e78:	b480      	push	{r7}
 8003e7a:	b085      	sub	sp, #20
 8003e7c:	af00      	add	r7, sp, #0
 8003e7e:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003e80:	2300      	movs	r3, #0
 8003e82:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003e88:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003e8a:	687b      	ldr	r3, [r7, #4]
 8003e8c:	699b      	ldr	r3, [r3, #24]
 8003e8e:	2b00      	cmp	r3, #0
 8003e90:	d11f      	bne.n	8003ed2 <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003e92:	68bb      	ldr	r3, [r7, #8]
 8003e94:	2b03      	cmp	r3, #3
 8003e96:	d856      	bhi.n	8003f46 <DMA_CheckFifoParam+0xce>
 8003e98:	a201      	add	r2, pc, #4	@ (adr r2, 8003ea0 <DMA_CheckFifoParam+0x28>)
 8003e9a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003e9e:	bf00      	nop
 8003ea0:	08003eb1 	.word	0x08003eb1
 8003ea4:	08003ec3 	.word	0x08003ec3
 8003ea8:	08003eb1 	.word	0x08003eb1
 8003eac:	08003f47 	.word	0x08003f47
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003eb4:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003eb8:	2b00      	cmp	r3, #0
 8003eba:	d046      	beq.n	8003f4a <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003ebc:	2301      	movs	r3, #1
 8003ebe:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003ec0:	e043      	b.n	8003f4a <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ec6:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003eca:	d140      	bne.n	8003f4e <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003ecc:	2301      	movs	r3, #1
 8003ece:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003ed0:	e03d      	b.n	8003f4e <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	699b      	ldr	r3, [r3, #24]
 8003ed6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003eda:	d121      	bne.n	8003f20 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003edc:	68bb      	ldr	r3, [r7, #8]
 8003ede:	2b03      	cmp	r3, #3
 8003ee0:	d837      	bhi.n	8003f52 <DMA_CheckFifoParam+0xda>
 8003ee2:	a201      	add	r2, pc, #4	@ (adr r2, 8003ee8 <DMA_CheckFifoParam+0x70>)
 8003ee4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ee8:	08003ef9 	.word	0x08003ef9
 8003eec:	08003eff 	.word	0x08003eff
 8003ef0:	08003ef9 	.word	0x08003ef9
 8003ef4:	08003f11 	.word	0x08003f11
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003ef8:	2301      	movs	r3, #1
 8003efa:	73fb      	strb	r3, [r7, #15]
      break;
 8003efc:	e030      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003efe:	687b      	ldr	r3, [r7, #4]
 8003f00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f02:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d025      	beq.n	8003f56 <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003f0a:	2301      	movs	r3, #1
 8003f0c:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003f0e:	e022      	b.n	8003f56 <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f14:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003f18:	d11f      	bne.n	8003f5a <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003f1a:	2301      	movs	r3, #1
 8003f1c:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003f1e:	e01c      	b.n	8003f5a <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003f20:	68bb      	ldr	r3, [r7, #8]
 8003f22:	2b02      	cmp	r3, #2
 8003f24:	d903      	bls.n	8003f2e <DMA_CheckFifoParam+0xb6>
 8003f26:	68bb      	ldr	r3, [r7, #8]
 8003f28:	2b03      	cmp	r3, #3
 8003f2a:	d003      	beq.n	8003f34 <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003f2c:	e018      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003f2e:	2301      	movs	r3, #1
 8003f30:	73fb      	strb	r3, [r7, #15]
      break;
 8003f32:	e015      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003f34:	687b      	ldr	r3, [r7, #4]
 8003f36:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f38:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d00e      	beq.n	8003f5e <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003f40:	2301      	movs	r3, #1
 8003f42:	73fb      	strb	r3, [r7, #15]
      break;
 8003f44:	e00b      	b.n	8003f5e <DMA_CheckFifoParam+0xe6>
      break;
 8003f46:	bf00      	nop
 8003f48:	e00a      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f4a:	bf00      	nop
 8003f4c:	e008      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f4e:	bf00      	nop
 8003f50:	e006      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f52:	bf00      	nop
 8003f54:	e004      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f56:	bf00      	nop
 8003f58:	e002      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;   
 8003f5a:	bf00      	nop
 8003f5c:	e000      	b.n	8003f60 <DMA_CheckFifoParam+0xe8>
      break;
 8003f5e:	bf00      	nop
    }
  } 
  
  return status; 
 8003f60:	7bfb      	ldrb	r3, [r7, #15]
}
 8003f62:	4618      	mov	r0, r3
 8003f64:	3714      	adds	r7, #20
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr
 8003f6e:	bf00      	nop

08003f70 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003f70:	b480      	push	{r7}
 8003f72:	b089      	sub	sp, #36	@ 0x24
 8003f74:	af00      	add	r7, sp, #0
 8003f76:	6078      	str	r0, [r7, #4]
 8003f78:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003f7a:	2300      	movs	r3, #0
 8003f7c:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003f7e:	2300      	movs	r3, #0
 8003f80:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003f82:	2300      	movs	r3, #0
 8003f84:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003f86:	2300      	movs	r3, #0
 8003f88:	61fb      	str	r3, [r7, #28]
 8003f8a:	e165      	b.n	8004258 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003f8c:	2201      	movs	r2, #1
 8003f8e:	69fb      	ldr	r3, [r7, #28]
 8003f90:	fa02 f303 	lsl.w	r3, r2, r3
 8003f94:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003f96:	683b      	ldr	r3, [r7, #0]
 8003f98:	681b      	ldr	r3, [r3, #0]
 8003f9a:	697a      	ldr	r2, [r7, #20]
 8003f9c:	4013      	ands	r3, r2
 8003f9e:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003fa0:	693a      	ldr	r2, [r7, #16]
 8003fa2:	697b      	ldr	r3, [r7, #20]
 8003fa4:	429a      	cmp	r2, r3
 8003fa6:	f040 8154 	bne.w	8004252 <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003faa:	683b      	ldr	r3, [r7, #0]
 8003fac:	685b      	ldr	r3, [r3, #4]
 8003fae:	f003 0303 	and.w	r3, r3, #3
 8003fb2:	2b01      	cmp	r3, #1
 8003fb4:	d005      	beq.n	8003fc2 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003fb6:	683b      	ldr	r3, [r7, #0]
 8003fb8:	685b      	ldr	r3, [r3, #4]
 8003fba:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003fbe:	2b02      	cmp	r3, #2
 8003fc0:	d130      	bne.n	8004024 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003fc2:	687b      	ldr	r3, [r7, #4]
 8003fc4:	689b      	ldr	r3, [r3, #8]
 8003fc6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003fc8:	69fb      	ldr	r3, [r7, #28]
 8003fca:	005b      	lsls	r3, r3, #1
 8003fcc:	2203      	movs	r2, #3
 8003fce:	fa02 f303 	lsl.w	r3, r2, r3
 8003fd2:	43db      	mvns	r3, r3
 8003fd4:	69ba      	ldr	r2, [r7, #24]
 8003fd6:	4013      	ands	r3, r2
 8003fd8:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003fda:	683b      	ldr	r3, [r7, #0]
 8003fdc:	68da      	ldr	r2, [r3, #12]
 8003fde:	69fb      	ldr	r3, [r7, #28]
 8003fe0:	005b      	lsls	r3, r3, #1
 8003fe2:	fa02 f303 	lsl.w	r3, r2, r3
 8003fe6:	69ba      	ldr	r2, [r7, #24]
 8003fe8:	4313      	orrs	r3, r2
 8003fea:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003fec:	687b      	ldr	r3, [r7, #4]
 8003fee:	69ba      	ldr	r2, [r7, #24]
 8003ff0:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003ff2:	687b      	ldr	r3, [r7, #4]
 8003ff4:	685b      	ldr	r3, [r3, #4]
 8003ff6:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003ff8:	2201      	movs	r2, #1
 8003ffa:	69fb      	ldr	r3, [r7, #28]
 8003ffc:	fa02 f303 	lsl.w	r3, r2, r3
 8004000:	43db      	mvns	r3, r3
 8004002:	69ba      	ldr	r2, [r7, #24]
 8004004:	4013      	ands	r3, r2
 8004006:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004008:	683b      	ldr	r3, [r7, #0]
 800400a:	685b      	ldr	r3, [r3, #4]
 800400c:	091b      	lsrs	r3, r3, #4
 800400e:	f003 0201 	and.w	r2, r3, #1
 8004012:	69fb      	ldr	r3, [r7, #28]
 8004014:	fa02 f303 	lsl.w	r3, r2, r3
 8004018:	69ba      	ldr	r2, [r7, #24]
 800401a:	4313      	orrs	r3, r2
 800401c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	69ba      	ldr	r2, [r7, #24]
 8004022:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004024:	683b      	ldr	r3, [r7, #0]
 8004026:	685b      	ldr	r3, [r3, #4]
 8004028:	f003 0303 	and.w	r3, r3, #3
 800402c:	2b03      	cmp	r3, #3
 800402e:	d017      	beq.n	8004060 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	68db      	ldr	r3, [r3, #12]
 8004034:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8004036:	69fb      	ldr	r3, [r7, #28]
 8004038:	005b      	lsls	r3, r3, #1
 800403a:	2203      	movs	r2, #3
 800403c:	fa02 f303 	lsl.w	r3, r2, r3
 8004040:	43db      	mvns	r3, r3
 8004042:	69ba      	ldr	r2, [r7, #24]
 8004044:	4013      	ands	r3, r2
 8004046:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004048:	683b      	ldr	r3, [r7, #0]
 800404a:	689a      	ldr	r2, [r3, #8]
 800404c:	69fb      	ldr	r3, [r7, #28]
 800404e:	005b      	lsls	r3, r3, #1
 8004050:	fa02 f303 	lsl.w	r3, r2, r3
 8004054:	69ba      	ldr	r2, [r7, #24]
 8004056:	4313      	orrs	r3, r2
 8004058:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 800405a:	687b      	ldr	r3, [r7, #4]
 800405c:	69ba      	ldr	r2, [r7, #24]
 800405e:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004060:	683b      	ldr	r3, [r7, #0]
 8004062:	685b      	ldr	r3, [r3, #4]
 8004064:	f003 0303 	and.w	r3, r3, #3
 8004068:	2b02      	cmp	r3, #2
 800406a:	d123      	bne.n	80040b4 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800406c:	69fb      	ldr	r3, [r7, #28]
 800406e:	08da      	lsrs	r2, r3, #3
 8004070:	687b      	ldr	r3, [r7, #4]
 8004072:	3208      	adds	r2, #8
 8004074:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004078:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800407a:	69fb      	ldr	r3, [r7, #28]
 800407c:	f003 0307 	and.w	r3, r3, #7
 8004080:	009b      	lsls	r3, r3, #2
 8004082:	220f      	movs	r2, #15
 8004084:	fa02 f303 	lsl.w	r3, r2, r3
 8004088:	43db      	mvns	r3, r3
 800408a:	69ba      	ldr	r2, [r7, #24]
 800408c:	4013      	ands	r3, r2
 800408e:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8004090:	683b      	ldr	r3, [r7, #0]
 8004092:	691a      	ldr	r2, [r3, #16]
 8004094:	69fb      	ldr	r3, [r7, #28]
 8004096:	f003 0307 	and.w	r3, r3, #7
 800409a:	009b      	lsls	r3, r3, #2
 800409c:	fa02 f303 	lsl.w	r3, r2, r3
 80040a0:	69ba      	ldr	r2, [r7, #24]
 80040a2:	4313      	orrs	r3, r2
 80040a4:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80040a6:	69fb      	ldr	r3, [r7, #28]
 80040a8:	08da      	lsrs	r2, r3, #3
 80040aa:	687b      	ldr	r3, [r7, #4]
 80040ac:	3208      	adds	r2, #8
 80040ae:	69b9      	ldr	r1, [r7, #24]
 80040b0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	681b      	ldr	r3, [r3, #0]
 80040b8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80040ba:	69fb      	ldr	r3, [r7, #28]
 80040bc:	005b      	lsls	r3, r3, #1
 80040be:	2203      	movs	r2, #3
 80040c0:	fa02 f303 	lsl.w	r3, r2, r3
 80040c4:	43db      	mvns	r3, r3
 80040c6:	69ba      	ldr	r2, [r7, #24]
 80040c8:	4013      	ands	r3, r2
 80040ca:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80040cc:	683b      	ldr	r3, [r7, #0]
 80040ce:	685b      	ldr	r3, [r3, #4]
 80040d0:	f003 0203 	and.w	r2, r3, #3
 80040d4:	69fb      	ldr	r3, [r7, #28]
 80040d6:	005b      	lsls	r3, r3, #1
 80040d8:	fa02 f303 	lsl.w	r3, r2, r3
 80040dc:	69ba      	ldr	r2, [r7, #24]
 80040de:	4313      	orrs	r3, r2
 80040e0:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	69ba      	ldr	r2, [r7, #24]
 80040e6:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80040e8:	683b      	ldr	r3, [r7, #0]
 80040ea:	685b      	ldr	r3, [r3, #4]
 80040ec:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	f000 80ae 	beq.w	8004252 <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80040f6:	2300      	movs	r3, #0
 80040f8:	60fb      	str	r3, [r7, #12]
 80040fa:	4b5d      	ldr	r3, [pc, #372]	@ (8004270 <HAL_GPIO_Init+0x300>)
 80040fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80040fe:	4a5c      	ldr	r2, [pc, #368]	@ (8004270 <HAL_GPIO_Init+0x300>)
 8004100:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004104:	6453      	str	r3, [r2, #68]	@ 0x44
 8004106:	4b5a      	ldr	r3, [pc, #360]	@ (8004270 <HAL_GPIO_Init+0x300>)
 8004108:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800410a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800410e:	60fb      	str	r3, [r7, #12]
 8004110:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8004112:	4a58      	ldr	r2, [pc, #352]	@ (8004274 <HAL_GPIO_Init+0x304>)
 8004114:	69fb      	ldr	r3, [r7, #28]
 8004116:	089b      	lsrs	r3, r3, #2
 8004118:	3302      	adds	r3, #2
 800411a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800411e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004120:	69fb      	ldr	r3, [r7, #28]
 8004122:	f003 0303 	and.w	r3, r3, #3
 8004126:	009b      	lsls	r3, r3, #2
 8004128:	220f      	movs	r2, #15
 800412a:	fa02 f303 	lsl.w	r3, r2, r3
 800412e:	43db      	mvns	r3, r3
 8004130:	69ba      	ldr	r2, [r7, #24]
 8004132:	4013      	ands	r3, r2
 8004134:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	4a4f      	ldr	r2, [pc, #316]	@ (8004278 <HAL_GPIO_Init+0x308>)
 800413a:	4293      	cmp	r3, r2
 800413c:	d025      	beq.n	800418a <HAL_GPIO_Init+0x21a>
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	4a4e      	ldr	r2, [pc, #312]	@ (800427c <HAL_GPIO_Init+0x30c>)
 8004142:	4293      	cmp	r3, r2
 8004144:	d01f      	beq.n	8004186 <HAL_GPIO_Init+0x216>
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	4a4d      	ldr	r2, [pc, #308]	@ (8004280 <HAL_GPIO_Init+0x310>)
 800414a:	4293      	cmp	r3, r2
 800414c:	d019      	beq.n	8004182 <HAL_GPIO_Init+0x212>
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	4a4c      	ldr	r2, [pc, #304]	@ (8004284 <HAL_GPIO_Init+0x314>)
 8004152:	4293      	cmp	r3, r2
 8004154:	d013      	beq.n	800417e <HAL_GPIO_Init+0x20e>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	4a4b      	ldr	r2, [pc, #300]	@ (8004288 <HAL_GPIO_Init+0x318>)
 800415a:	4293      	cmp	r3, r2
 800415c:	d00d      	beq.n	800417a <HAL_GPIO_Init+0x20a>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	4a4a      	ldr	r2, [pc, #296]	@ (800428c <HAL_GPIO_Init+0x31c>)
 8004162:	4293      	cmp	r3, r2
 8004164:	d007      	beq.n	8004176 <HAL_GPIO_Init+0x206>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	4a49      	ldr	r2, [pc, #292]	@ (8004290 <HAL_GPIO_Init+0x320>)
 800416a:	4293      	cmp	r3, r2
 800416c:	d101      	bne.n	8004172 <HAL_GPIO_Init+0x202>
 800416e:	2306      	movs	r3, #6
 8004170:	e00c      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004172:	2307      	movs	r3, #7
 8004174:	e00a      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004176:	2305      	movs	r3, #5
 8004178:	e008      	b.n	800418c <HAL_GPIO_Init+0x21c>
 800417a:	2304      	movs	r3, #4
 800417c:	e006      	b.n	800418c <HAL_GPIO_Init+0x21c>
 800417e:	2303      	movs	r3, #3
 8004180:	e004      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004182:	2302      	movs	r3, #2
 8004184:	e002      	b.n	800418c <HAL_GPIO_Init+0x21c>
 8004186:	2301      	movs	r3, #1
 8004188:	e000      	b.n	800418c <HAL_GPIO_Init+0x21c>
 800418a:	2300      	movs	r3, #0
 800418c:	69fa      	ldr	r2, [r7, #28]
 800418e:	f002 0203 	and.w	r2, r2, #3
 8004192:	0092      	lsls	r2, r2, #2
 8004194:	4093      	lsls	r3, r2
 8004196:	69ba      	ldr	r2, [r7, #24]
 8004198:	4313      	orrs	r3, r2
 800419a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 800419c:	4935      	ldr	r1, [pc, #212]	@ (8004274 <HAL_GPIO_Init+0x304>)
 800419e:	69fb      	ldr	r3, [r7, #28]
 80041a0:	089b      	lsrs	r3, r3, #2
 80041a2:	3302      	adds	r3, #2
 80041a4:	69ba      	ldr	r2, [r7, #24]
 80041a6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80041aa:	4b3a      	ldr	r3, [pc, #232]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041ac:	689b      	ldr	r3, [r3, #8]
 80041ae:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80041b0:	693b      	ldr	r3, [r7, #16]
 80041b2:	43db      	mvns	r3, r3
 80041b4:	69ba      	ldr	r2, [r7, #24]
 80041b6:	4013      	ands	r3, r2
 80041b8:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80041ba:	683b      	ldr	r3, [r7, #0]
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d003      	beq.n	80041ce <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 80041c6:	69ba      	ldr	r2, [r7, #24]
 80041c8:	693b      	ldr	r3, [r7, #16]
 80041ca:	4313      	orrs	r3, r2
 80041cc:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80041ce:	4a31      	ldr	r2, [pc, #196]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041d0:	69bb      	ldr	r3, [r7, #24]
 80041d2:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80041d4:	4b2f      	ldr	r3, [pc, #188]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041d6:	68db      	ldr	r3, [r3, #12]
 80041d8:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80041da:	693b      	ldr	r3, [r7, #16]
 80041dc:	43db      	mvns	r3, r3
 80041de:	69ba      	ldr	r2, [r7, #24]
 80041e0:	4013      	ands	r3, r2
 80041e2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80041e4:	683b      	ldr	r3, [r7, #0]
 80041e6:	685b      	ldr	r3, [r3, #4]
 80041e8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80041ec:	2b00      	cmp	r3, #0
 80041ee:	d003      	beq.n	80041f8 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 80041f0:	69ba      	ldr	r2, [r7, #24]
 80041f2:	693b      	ldr	r3, [r7, #16]
 80041f4:	4313      	orrs	r3, r2
 80041f6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 80041f8:	4a26      	ldr	r2, [pc, #152]	@ (8004294 <HAL_GPIO_Init+0x324>)
 80041fa:	69bb      	ldr	r3, [r7, #24]
 80041fc:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 80041fe:	4b25      	ldr	r3, [pc, #148]	@ (8004294 <HAL_GPIO_Init+0x324>)
 8004200:	685b      	ldr	r3, [r3, #4]
 8004202:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004204:	693b      	ldr	r3, [r7, #16]
 8004206:	43db      	mvns	r3, r3
 8004208:	69ba      	ldr	r2, [r7, #24]
 800420a:	4013      	ands	r3, r2
 800420c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800420e:	683b      	ldr	r3, [r7, #0]
 8004210:	685b      	ldr	r3, [r3, #4]
 8004212:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004216:	2b00      	cmp	r3, #0
 8004218:	d003      	beq.n	8004222 <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 800421a:	69ba      	ldr	r2, [r7, #24]
 800421c:	693b      	ldr	r3, [r7, #16]
 800421e:	4313      	orrs	r3, r2
 8004220:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004222:	4a1c      	ldr	r2, [pc, #112]	@ (8004294 <HAL_GPIO_Init+0x324>)
 8004224:	69bb      	ldr	r3, [r7, #24]
 8004226:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004228:	4b1a      	ldr	r3, [pc, #104]	@ (8004294 <HAL_GPIO_Init+0x324>)
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800422e:	693b      	ldr	r3, [r7, #16]
 8004230:	43db      	mvns	r3, r3
 8004232:	69ba      	ldr	r2, [r7, #24]
 8004234:	4013      	ands	r3, r2
 8004236:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004238:	683b      	ldr	r3, [r7, #0]
 800423a:	685b      	ldr	r3, [r3, #4]
 800423c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004240:	2b00      	cmp	r3, #0
 8004242:	d003      	beq.n	800424c <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8004244:	69ba      	ldr	r2, [r7, #24]
 8004246:	693b      	ldr	r3, [r7, #16]
 8004248:	4313      	orrs	r3, r2
 800424a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 800424c:	4a11      	ldr	r2, [pc, #68]	@ (8004294 <HAL_GPIO_Init+0x324>)
 800424e:	69bb      	ldr	r3, [r7, #24]
 8004250:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004252:	69fb      	ldr	r3, [r7, #28]
 8004254:	3301      	adds	r3, #1
 8004256:	61fb      	str	r3, [r7, #28]
 8004258:	69fb      	ldr	r3, [r7, #28]
 800425a:	2b0f      	cmp	r3, #15
 800425c:	f67f ae96 	bls.w	8003f8c <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004260:	bf00      	nop
 8004262:	bf00      	nop
 8004264:	3724      	adds	r7, #36	@ 0x24
 8004266:	46bd      	mov	sp, r7
 8004268:	f85d 7b04 	ldr.w	r7, [sp], #4
 800426c:	4770      	bx	lr
 800426e:	bf00      	nop
 8004270:	40023800 	.word	0x40023800
 8004274:	40013800 	.word	0x40013800
 8004278:	40020000 	.word	0x40020000
 800427c:	40020400 	.word	0x40020400
 8004280:	40020800 	.word	0x40020800
 8004284:	40020c00 	.word	0x40020c00
 8004288:	40021000 	.word	0x40021000
 800428c:	40021400 	.word	0x40021400
 8004290:	40021800 	.word	0x40021800
 8004294:	40013c00 	.word	0x40013c00

08004298 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004298:	b480      	push	{r7}
 800429a:	b085      	sub	sp, #20
 800429c:	af00      	add	r7, sp, #0
 800429e:	6078      	str	r0, [r7, #4]
 80042a0:	460b      	mov	r3, r1
 80042a2:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80042a4:	687b      	ldr	r3, [r7, #4]
 80042a6:	691a      	ldr	r2, [r3, #16]
 80042a8:	887b      	ldrh	r3, [r7, #2]
 80042aa:	4013      	ands	r3, r2
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d002      	beq.n	80042b6 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80042b0:	2301      	movs	r3, #1
 80042b2:	73fb      	strb	r3, [r7, #15]
 80042b4:	e001      	b.n	80042ba <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80042b6:	2300      	movs	r3, #0
 80042b8:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80042ba:	7bfb      	ldrb	r3, [r7, #15]
}
 80042bc:	4618      	mov	r0, r3
 80042be:	3714      	adds	r7, #20
 80042c0:	46bd      	mov	sp, r7
 80042c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042c6:	4770      	bx	lr

080042c8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80042c8:	b480      	push	{r7}
 80042ca:	b083      	sub	sp, #12
 80042cc:	af00      	add	r7, sp, #0
 80042ce:	6078      	str	r0, [r7, #4]
 80042d0:	460b      	mov	r3, r1
 80042d2:	807b      	strh	r3, [r7, #2]
 80042d4:	4613      	mov	r3, r2
 80042d6:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80042d8:	787b      	ldrb	r3, [r7, #1]
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d003      	beq.n	80042e6 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80042de:	887a      	ldrh	r2, [r7, #2]
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80042e4:	e003      	b.n	80042ee <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80042e6:	887b      	ldrh	r3, [r7, #2]
 80042e8:	041a      	lsls	r2, r3, #16
 80042ea:	687b      	ldr	r3, [r7, #4]
 80042ec:	619a      	str	r2, [r3, #24]
}
 80042ee:	bf00      	nop
 80042f0:	370c      	adds	r7, #12
 80042f2:	46bd      	mov	sp, r7
 80042f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f8:	4770      	bx	lr

080042fa <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80042fa:	b480      	push	{r7}
 80042fc:	b085      	sub	sp, #20
 80042fe:	af00      	add	r7, sp, #0
 8004300:	6078      	str	r0, [r7, #4]
 8004302:	460b      	mov	r3, r1
 8004304:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	695b      	ldr	r3, [r3, #20]
 800430a:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800430c:	887a      	ldrh	r2, [r7, #2]
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	4013      	ands	r3, r2
 8004312:	041a      	lsls	r2, r3, #16
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	43d9      	mvns	r1, r3
 8004318:	887b      	ldrh	r3, [r7, #2]
 800431a:	400b      	ands	r3, r1
 800431c:	431a      	orrs	r2, r3
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	619a      	str	r2, [r3, #24]
}
 8004322:	bf00      	nop
 8004324:	3714      	adds	r7, #20
 8004326:	46bd      	mov	sp, r7
 8004328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800432c:	4770      	bx	lr
	...

08004330 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004330:	b580      	push	{r7, lr}
 8004332:	b082      	sub	sp, #8
 8004334:	af00      	add	r7, sp, #0
 8004336:	4603      	mov	r3, r0
 8004338:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 800433a:	4b08      	ldr	r3, [pc, #32]	@ (800435c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800433c:	695a      	ldr	r2, [r3, #20]
 800433e:	88fb      	ldrh	r3, [r7, #6]
 8004340:	4013      	ands	r3, r2
 8004342:	2b00      	cmp	r3, #0
 8004344:	d006      	beq.n	8004354 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8004346:	4a05      	ldr	r2, [pc, #20]	@ (800435c <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004348:	88fb      	ldrh	r3, [r7, #6]
 800434a:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800434c:	88fb      	ldrh	r3, [r7, #6]
 800434e:	4618      	mov	r0, r3
 8004350:	f7fe f8c0 	bl	80024d4 <HAL_GPIO_EXTI_Callback>
  }
}
 8004354:	bf00      	nop
 8004356:	3708      	adds	r7, #8
 8004358:	46bd      	mov	sp, r7
 800435a:	bd80      	pop	{r7, pc}
 800435c:	40013c00 	.word	0x40013c00

08004360 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004360:	b580      	push	{r7, lr}
 8004362:	b084      	sub	sp, #16
 8004364:	af00      	add	r7, sp, #0
 8004366:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004368:	687b      	ldr	r3, [r7, #4]
 800436a:	2b00      	cmp	r3, #0
 800436c:	d101      	bne.n	8004372 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 800436e:	2301      	movs	r3, #1
 8004370:	e12b      	b.n	80045ca <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004372:	687b      	ldr	r3, [r7, #4]
 8004374:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004378:	b2db      	uxtb	r3, r3
 800437a:	2b00      	cmp	r3, #0
 800437c:	d106      	bne.n	800438c <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 800437e:	687b      	ldr	r3, [r7, #4]
 8004380:	2200      	movs	r2, #0
 8004382:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 8004386:	6878      	ldr	r0, [r7, #4]
 8004388:	f7fd fb24 	bl	80019d4 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 800438c:	687b      	ldr	r3, [r7, #4]
 800438e:	2224      	movs	r2, #36	@ 0x24
 8004390:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	681b      	ldr	r3, [r3, #0]
 8004398:	681a      	ldr	r2, [r3, #0]
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	681b      	ldr	r3, [r3, #0]
 800439e:	f022 0201 	bic.w	r2, r2, #1
 80043a2:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	681b      	ldr	r3, [r3, #0]
 80043a8:	681a      	ldr	r2, [r3, #0]
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80043b2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80043b4:	687b      	ldr	r3, [r7, #4]
 80043b6:	681b      	ldr	r3, [r3, #0]
 80043b8:	681a      	ldr	r2, [r3, #0]
 80043ba:	687b      	ldr	r3, [r7, #4]
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80043c2:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80043c4:	f001 f908 	bl	80055d8 <HAL_RCC_GetPCLK1Freq>
 80043c8:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80043ca:	687b      	ldr	r3, [r7, #4]
 80043cc:	685b      	ldr	r3, [r3, #4]
 80043ce:	4a81      	ldr	r2, [pc, #516]	@ (80045d4 <HAL_I2C_Init+0x274>)
 80043d0:	4293      	cmp	r3, r2
 80043d2:	d807      	bhi.n	80043e4 <HAL_I2C_Init+0x84>
 80043d4:	68fb      	ldr	r3, [r7, #12]
 80043d6:	4a80      	ldr	r2, [pc, #512]	@ (80045d8 <HAL_I2C_Init+0x278>)
 80043d8:	4293      	cmp	r3, r2
 80043da:	bf94      	ite	ls
 80043dc:	2301      	movls	r3, #1
 80043de:	2300      	movhi	r3, #0
 80043e0:	b2db      	uxtb	r3, r3
 80043e2:	e006      	b.n	80043f2 <HAL_I2C_Init+0x92>
 80043e4:	68fb      	ldr	r3, [r7, #12]
 80043e6:	4a7d      	ldr	r2, [pc, #500]	@ (80045dc <HAL_I2C_Init+0x27c>)
 80043e8:	4293      	cmp	r3, r2
 80043ea:	bf94      	ite	ls
 80043ec:	2301      	movls	r3, #1
 80043ee:	2300      	movhi	r3, #0
 80043f0:	b2db      	uxtb	r3, r3
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d001      	beq.n	80043fa <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 80043f6:	2301      	movs	r3, #1
 80043f8:	e0e7      	b.n	80045ca <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	4a78      	ldr	r2, [pc, #480]	@ (80045e0 <HAL_I2C_Init+0x280>)
 80043fe:	fba2 2303 	umull	r2, r3, r2, r3
 8004402:	0c9b      	lsrs	r3, r3, #18
 8004404:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004406:	687b      	ldr	r3, [r7, #4]
 8004408:	681b      	ldr	r3, [r3, #0]
 800440a:	685b      	ldr	r3, [r3, #4]
 800440c:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	68ba      	ldr	r2, [r7, #8]
 8004416:	430a      	orrs	r2, r1
 8004418:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	6a1b      	ldr	r3, [r3, #32]
 8004420:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	685b      	ldr	r3, [r3, #4]
 8004428:	4a6a      	ldr	r2, [pc, #424]	@ (80045d4 <HAL_I2C_Init+0x274>)
 800442a:	4293      	cmp	r3, r2
 800442c:	d802      	bhi.n	8004434 <HAL_I2C_Init+0xd4>
 800442e:	68bb      	ldr	r3, [r7, #8]
 8004430:	3301      	adds	r3, #1
 8004432:	e009      	b.n	8004448 <HAL_I2C_Init+0xe8>
 8004434:	68bb      	ldr	r3, [r7, #8]
 8004436:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 800443a:	fb02 f303 	mul.w	r3, r2, r3
 800443e:	4a69      	ldr	r2, [pc, #420]	@ (80045e4 <HAL_I2C_Init+0x284>)
 8004440:	fba2 2303 	umull	r2, r3, r2, r3
 8004444:	099b      	lsrs	r3, r3, #6
 8004446:	3301      	adds	r3, #1
 8004448:	687a      	ldr	r2, [r7, #4]
 800444a:	6812      	ldr	r2, [r2, #0]
 800444c:	430b      	orrs	r3, r1
 800444e:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004450:	687b      	ldr	r3, [r7, #4]
 8004452:	681b      	ldr	r3, [r3, #0]
 8004454:	69db      	ldr	r3, [r3, #28]
 8004456:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 800445a:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 800445e:	687b      	ldr	r3, [r7, #4]
 8004460:	685b      	ldr	r3, [r3, #4]
 8004462:	495c      	ldr	r1, [pc, #368]	@ (80045d4 <HAL_I2C_Init+0x274>)
 8004464:	428b      	cmp	r3, r1
 8004466:	d819      	bhi.n	800449c <HAL_I2C_Init+0x13c>
 8004468:	68fb      	ldr	r3, [r7, #12]
 800446a:	1e59      	subs	r1, r3, #1
 800446c:	687b      	ldr	r3, [r7, #4]
 800446e:	685b      	ldr	r3, [r3, #4]
 8004470:	005b      	lsls	r3, r3, #1
 8004472:	fbb1 f3f3 	udiv	r3, r1, r3
 8004476:	1c59      	adds	r1, r3, #1
 8004478:	f640 73fc 	movw	r3, #4092	@ 0xffc
 800447c:	400b      	ands	r3, r1
 800447e:	2b00      	cmp	r3, #0
 8004480:	d00a      	beq.n	8004498 <HAL_I2C_Init+0x138>
 8004482:	68fb      	ldr	r3, [r7, #12]
 8004484:	1e59      	subs	r1, r3, #1
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	685b      	ldr	r3, [r3, #4]
 800448a:	005b      	lsls	r3, r3, #1
 800448c:	fbb1 f3f3 	udiv	r3, r1, r3
 8004490:	3301      	adds	r3, #1
 8004492:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004496:	e051      	b.n	800453c <HAL_I2C_Init+0x1dc>
 8004498:	2304      	movs	r3, #4
 800449a:	e04f      	b.n	800453c <HAL_I2C_Init+0x1dc>
 800449c:	687b      	ldr	r3, [r7, #4]
 800449e:	689b      	ldr	r3, [r3, #8]
 80044a0:	2b00      	cmp	r3, #0
 80044a2:	d111      	bne.n	80044c8 <HAL_I2C_Init+0x168>
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	1e58      	subs	r0, r3, #1
 80044a8:	687b      	ldr	r3, [r7, #4]
 80044aa:	6859      	ldr	r1, [r3, #4]
 80044ac:	460b      	mov	r3, r1
 80044ae:	005b      	lsls	r3, r3, #1
 80044b0:	440b      	add	r3, r1
 80044b2:	fbb0 f3f3 	udiv	r3, r0, r3
 80044b6:	3301      	adds	r3, #1
 80044b8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044bc:	2b00      	cmp	r3, #0
 80044be:	bf0c      	ite	eq
 80044c0:	2301      	moveq	r3, #1
 80044c2:	2300      	movne	r3, #0
 80044c4:	b2db      	uxtb	r3, r3
 80044c6:	e012      	b.n	80044ee <HAL_I2C_Init+0x18e>
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	1e58      	subs	r0, r3, #1
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	6859      	ldr	r1, [r3, #4]
 80044d0:	460b      	mov	r3, r1
 80044d2:	009b      	lsls	r3, r3, #2
 80044d4:	440b      	add	r3, r1
 80044d6:	0099      	lsls	r1, r3, #2
 80044d8:	440b      	add	r3, r1
 80044da:	fbb0 f3f3 	udiv	r3, r0, r3
 80044de:	3301      	adds	r3, #1
 80044e0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	bf0c      	ite	eq
 80044e8:	2301      	moveq	r3, #1
 80044ea:	2300      	movne	r3, #0
 80044ec:	b2db      	uxtb	r3, r3
 80044ee:	2b00      	cmp	r3, #0
 80044f0:	d001      	beq.n	80044f6 <HAL_I2C_Init+0x196>
 80044f2:	2301      	movs	r3, #1
 80044f4:	e022      	b.n	800453c <HAL_I2C_Init+0x1dc>
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	689b      	ldr	r3, [r3, #8]
 80044fa:	2b00      	cmp	r3, #0
 80044fc:	d10e      	bne.n	800451c <HAL_I2C_Init+0x1bc>
 80044fe:	68fb      	ldr	r3, [r7, #12]
 8004500:	1e58      	subs	r0, r3, #1
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	6859      	ldr	r1, [r3, #4]
 8004506:	460b      	mov	r3, r1
 8004508:	005b      	lsls	r3, r3, #1
 800450a:	440b      	add	r3, r1
 800450c:	fbb0 f3f3 	udiv	r3, r0, r3
 8004510:	3301      	adds	r3, #1
 8004512:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004516:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800451a:	e00f      	b.n	800453c <HAL_I2C_Init+0x1dc>
 800451c:	68fb      	ldr	r3, [r7, #12]
 800451e:	1e58      	subs	r0, r3, #1
 8004520:	687b      	ldr	r3, [r7, #4]
 8004522:	6859      	ldr	r1, [r3, #4]
 8004524:	460b      	mov	r3, r1
 8004526:	009b      	lsls	r3, r3, #2
 8004528:	440b      	add	r3, r1
 800452a:	0099      	lsls	r1, r3, #2
 800452c:	440b      	add	r3, r1
 800452e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004532:	3301      	adds	r3, #1
 8004534:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004538:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 800453c:	6879      	ldr	r1, [r7, #4]
 800453e:	6809      	ldr	r1, [r1, #0]
 8004540:	4313      	orrs	r3, r2
 8004542:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	681b      	ldr	r3, [r3, #0]
 800454a:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	69da      	ldr	r2, [r3, #28]
 8004552:	687b      	ldr	r3, [r7, #4]
 8004554:	6a1b      	ldr	r3, [r3, #32]
 8004556:	431a      	orrs	r2, r3
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	430a      	orrs	r2, r1
 800455e:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004560:	687b      	ldr	r3, [r7, #4]
 8004562:	681b      	ldr	r3, [r3, #0]
 8004564:	689b      	ldr	r3, [r3, #8]
 8004566:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800456a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800456e:	687a      	ldr	r2, [r7, #4]
 8004570:	6911      	ldr	r1, [r2, #16]
 8004572:	687a      	ldr	r2, [r7, #4]
 8004574:	68d2      	ldr	r2, [r2, #12]
 8004576:	4311      	orrs	r1, r2
 8004578:	687a      	ldr	r2, [r7, #4]
 800457a:	6812      	ldr	r2, [r2, #0]
 800457c:	430b      	orrs	r3, r1
 800457e:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004580:	687b      	ldr	r3, [r7, #4]
 8004582:	681b      	ldr	r3, [r3, #0]
 8004584:	68db      	ldr	r3, [r3, #12]
 8004586:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	695a      	ldr	r2, [r3, #20]
 800458e:	687b      	ldr	r3, [r7, #4]
 8004590:	699b      	ldr	r3, [r3, #24]
 8004592:	431a      	orrs	r2, r3
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	681b      	ldr	r3, [r3, #0]
 8004598:	430a      	orrs	r2, r1
 800459a:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	681a      	ldr	r2, [r3, #0]
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	681b      	ldr	r3, [r3, #0]
 80045a6:	f042 0201 	orr.w	r2, r2, #1
 80045aa:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	2200      	movs	r2, #0
 80045b0:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	2220      	movs	r2, #32
 80045b6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	2200      	movs	r2, #0
 80045be:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	2200      	movs	r2, #0
 80045c4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 80045c8:	2300      	movs	r3, #0
}
 80045ca:	4618      	mov	r0, r3
 80045cc:	3710      	adds	r7, #16
 80045ce:	46bd      	mov	sp, r7
 80045d0:	bd80      	pop	{r7, pc}
 80045d2:	bf00      	nop
 80045d4:	000186a0 	.word	0x000186a0
 80045d8:	001e847f 	.word	0x001e847f
 80045dc:	003d08ff 	.word	0x003d08ff
 80045e0:	431bde83 	.word	0x431bde83
 80045e4:	10624dd3 	.word	0x10624dd3

080045e8 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80045e8:	b580      	push	{r7, lr}
 80045ea:	b088      	sub	sp, #32
 80045ec:	af02      	add	r7, sp, #8
 80045ee:	60f8      	str	r0, [r7, #12]
 80045f0:	607a      	str	r2, [r7, #4]
 80045f2:	461a      	mov	r2, r3
 80045f4:	460b      	mov	r3, r1
 80045f6:	817b      	strh	r3, [r7, #10]
 80045f8:	4613      	mov	r3, r2
 80045fa:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80045fc:	f7fe fa24 	bl	8002a48 <HAL_GetTick>
 8004600:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004602:	68fb      	ldr	r3, [r7, #12]
 8004604:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004608:	b2db      	uxtb	r3, r3
 800460a:	2b20      	cmp	r3, #32
 800460c:	f040 80e0 	bne.w	80047d0 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004610:	697b      	ldr	r3, [r7, #20]
 8004612:	9300      	str	r3, [sp, #0]
 8004614:	2319      	movs	r3, #25
 8004616:	2201      	movs	r2, #1
 8004618:	4970      	ldr	r1, [pc, #448]	@ (80047dc <HAL_I2C_Master_Transmit+0x1f4>)
 800461a:	68f8      	ldr	r0, [r7, #12]
 800461c:	f000 fc64 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004620:	4603      	mov	r3, r0
 8004622:	2b00      	cmp	r3, #0
 8004624:	d001      	beq.n	800462a <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 8004626:	2302      	movs	r3, #2
 8004628:	e0d3      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800462a:	68fb      	ldr	r3, [r7, #12]
 800462c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004630:	2b01      	cmp	r3, #1
 8004632:	d101      	bne.n	8004638 <HAL_I2C_Master_Transmit+0x50>
 8004634:	2302      	movs	r3, #2
 8004636:	e0cc      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	2201      	movs	r2, #1
 800463c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004640:	68fb      	ldr	r3, [r7, #12]
 8004642:	681b      	ldr	r3, [r3, #0]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	f003 0301 	and.w	r3, r3, #1
 800464a:	2b01      	cmp	r3, #1
 800464c:	d007      	beq.n	800465e <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	681a      	ldr	r2, [r3, #0]
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	f042 0201 	orr.w	r2, r2, #1
 800465c:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800465e:	68fb      	ldr	r3, [r7, #12]
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	681a      	ldr	r2, [r3, #0]
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	681b      	ldr	r3, [r3, #0]
 8004668:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800466c:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	2221      	movs	r2, #33	@ 0x21
 8004672:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	2210      	movs	r2, #16
 800467a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800467e:	68fb      	ldr	r3, [r7, #12]
 8004680:	2200      	movs	r2, #0
 8004682:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004684:	68fb      	ldr	r3, [r7, #12]
 8004686:	687a      	ldr	r2, [r7, #4]
 8004688:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800468a:	68fb      	ldr	r3, [r7, #12]
 800468c:	893a      	ldrh	r2, [r7, #8]
 800468e:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004690:	68fb      	ldr	r3, [r7, #12]
 8004692:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004694:	b29a      	uxth	r2, r3
 8004696:	68fb      	ldr	r3, [r7, #12]
 8004698:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	4a50      	ldr	r2, [pc, #320]	@ (80047e0 <HAL_I2C_Master_Transmit+0x1f8>)
 800469e:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80046a0:	8979      	ldrh	r1, [r7, #10]
 80046a2:	697b      	ldr	r3, [r7, #20]
 80046a4:	6a3a      	ldr	r2, [r7, #32]
 80046a6:	68f8      	ldr	r0, [r7, #12]
 80046a8:	f000 face 	bl	8004c48 <I2C_MasterRequestWrite>
 80046ac:	4603      	mov	r3, r0
 80046ae:	2b00      	cmp	r3, #0
 80046b0:	d001      	beq.n	80046b6 <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80046b2:	2301      	movs	r3, #1
 80046b4:	e08d      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046b6:	2300      	movs	r3, #0
 80046b8:	613b      	str	r3, [r7, #16]
 80046ba:	68fb      	ldr	r3, [r7, #12]
 80046bc:	681b      	ldr	r3, [r3, #0]
 80046be:	695b      	ldr	r3, [r3, #20]
 80046c0:	613b      	str	r3, [r7, #16]
 80046c2:	68fb      	ldr	r3, [r7, #12]
 80046c4:	681b      	ldr	r3, [r3, #0]
 80046c6:	699b      	ldr	r3, [r3, #24]
 80046c8:	613b      	str	r3, [r7, #16]
 80046ca:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 80046cc:	e066      	b.n	800479c <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80046ce:	697a      	ldr	r2, [r7, #20]
 80046d0:	6a39      	ldr	r1, [r7, #32]
 80046d2:	68f8      	ldr	r0, [r7, #12]
 80046d4:	f000 fd22 	bl	800511c <I2C_WaitOnTXEFlagUntilTimeout>
 80046d8:	4603      	mov	r3, r0
 80046da:	2b00      	cmp	r3, #0
 80046dc:	d00d      	beq.n	80046fa <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80046de:	68fb      	ldr	r3, [r7, #12]
 80046e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80046e2:	2b04      	cmp	r3, #4
 80046e4:	d107      	bne.n	80046f6 <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80046e6:	68fb      	ldr	r3, [r7, #12]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	681a      	ldr	r2, [r3, #0]
 80046ec:	68fb      	ldr	r3, [r7, #12]
 80046ee:	681b      	ldr	r3, [r3, #0]
 80046f0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80046f4:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80046f6:	2301      	movs	r3, #1
 80046f8:	e06b      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80046fa:	68fb      	ldr	r3, [r7, #12]
 80046fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80046fe:	781a      	ldrb	r2, [r3, #0]
 8004700:	68fb      	ldr	r3, [r7, #12]
 8004702:	681b      	ldr	r3, [r3, #0]
 8004704:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004706:	68fb      	ldr	r3, [r7, #12]
 8004708:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800470a:	1c5a      	adds	r2, r3, #1
 800470c:	68fb      	ldr	r3, [r7, #12]
 800470e:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 8004710:	68fb      	ldr	r3, [r7, #12]
 8004712:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004714:	b29b      	uxth	r3, r3
 8004716:	3b01      	subs	r3, #1
 8004718:	b29a      	uxth	r2, r3
 800471a:	68fb      	ldr	r3, [r7, #12]
 800471c:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004722:	3b01      	subs	r3, #1
 8004724:	b29a      	uxth	r2, r3
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800472a:	68fb      	ldr	r3, [r7, #12]
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	695b      	ldr	r3, [r3, #20]
 8004730:	f003 0304 	and.w	r3, r3, #4
 8004734:	2b04      	cmp	r3, #4
 8004736:	d11b      	bne.n	8004770 <HAL_I2C_Master_Transmit+0x188>
 8004738:	68fb      	ldr	r3, [r7, #12]
 800473a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800473c:	2b00      	cmp	r3, #0
 800473e:	d017      	beq.n	8004770 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004740:	68fb      	ldr	r3, [r7, #12]
 8004742:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004744:	781a      	ldrb	r2, [r3, #0]
 8004746:	68fb      	ldr	r3, [r7, #12]
 8004748:	681b      	ldr	r3, [r3, #0]
 800474a:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004750:	1c5a      	adds	r2, r3, #1
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 8004756:	68fb      	ldr	r3, [r7, #12]
 8004758:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800475a:	b29b      	uxth	r3, r3
 800475c:	3b01      	subs	r3, #1
 800475e:	b29a      	uxth	r2, r3
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004768:	3b01      	subs	r3, #1
 800476a:	b29a      	uxth	r2, r3
 800476c:	68fb      	ldr	r3, [r7, #12]
 800476e:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004770:	697a      	ldr	r2, [r7, #20]
 8004772:	6a39      	ldr	r1, [r7, #32]
 8004774:	68f8      	ldr	r0, [r7, #12]
 8004776:	f000 fd19 	bl	80051ac <I2C_WaitOnBTFFlagUntilTimeout>
 800477a:	4603      	mov	r3, r0
 800477c:	2b00      	cmp	r3, #0
 800477e:	d00d      	beq.n	800479c <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004780:	68fb      	ldr	r3, [r7, #12]
 8004782:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004784:	2b04      	cmp	r3, #4
 8004786:	d107      	bne.n	8004798 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004788:	68fb      	ldr	r3, [r7, #12]
 800478a:	681b      	ldr	r3, [r3, #0]
 800478c:	681a      	ldr	r2, [r3, #0]
 800478e:	68fb      	ldr	r3, [r7, #12]
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004796:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 8004798:	2301      	movs	r3, #1
 800479a:	e01a      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 800479c:	68fb      	ldr	r3, [r7, #12]
 800479e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	d194      	bne.n	80046ce <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	681a      	ldr	r2, [r3, #0]
 80047aa:	68fb      	ldr	r3, [r7, #12]
 80047ac:	681b      	ldr	r3, [r3, #0]
 80047ae:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047b2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80047b4:	68fb      	ldr	r3, [r7, #12]
 80047b6:	2220      	movs	r2, #32
 80047b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	2200      	movs	r2, #0
 80047c0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	2200      	movs	r2, #0
 80047c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 80047cc:	2300      	movs	r3, #0
 80047ce:	e000      	b.n	80047d2 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 80047d0:	2302      	movs	r3, #2
  }
}
 80047d2:	4618      	mov	r0, r3
 80047d4:	3718      	adds	r7, #24
 80047d6:	46bd      	mov	sp, r7
 80047d8:	bd80      	pop	{r7, pc}
 80047da:	bf00      	nop
 80047dc:	00100002 	.word	0x00100002
 80047e0:	ffff0000 	.word	0xffff0000

080047e4 <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80047e4:	b580      	push	{r7, lr}
 80047e6:	b08c      	sub	sp, #48	@ 0x30
 80047e8:	af02      	add	r7, sp, #8
 80047ea:	60f8      	str	r0, [r7, #12]
 80047ec:	607a      	str	r2, [r7, #4]
 80047ee:	461a      	mov	r2, r3
 80047f0:	460b      	mov	r3, r1
 80047f2:	817b      	strh	r3, [r7, #10]
 80047f4:	4613      	mov	r3, r2
 80047f6:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 80047f8:	f7fe f926 	bl	8002a48 <HAL_GetTick>
 80047fc:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004804:	b2db      	uxtb	r3, r3
 8004806:	2b20      	cmp	r3, #32
 8004808:	f040 8217 	bne.w	8004c3a <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800480c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800480e:	9300      	str	r3, [sp, #0]
 8004810:	2319      	movs	r3, #25
 8004812:	2201      	movs	r2, #1
 8004814:	497c      	ldr	r1, [pc, #496]	@ (8004a08 <HAL_I2C_Master_Receive+0x224>)
 8004816:	68f8      	ldr	r0, [r7, #12]
 8004818:	f000 fb66 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 800481c:	4603      	mov	r3, r0
 800481e:	2b00      	cmp	r3, #0
 8004820:	d001      	beq.n	8004826 <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 8004822:	2302      	movs	r3, #2
 8004824:	e20a      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004826:	68fb      	ldr	r3, [r7, #12]
 8004828:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800482c:	2b01      	cmp	r3, #1
 800482e:	d101      	bne.n	8004834 <HAL_I2C_Master_Receive+0x50>
 8004830:	2302      	movs	r3, #2
 8004832:	e203      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
 8004834:	68fb      	ldr	r3, [r7, #12]
 8004836:	2201      	movs	r2, #1
 8004838:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800483c:	68fb      	ldr	r3, [r7, #12]
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	f003 0301 	and.w	r3, r3, #1
 8004846:	2b01      	cmp	r3, #1
 8004848:	d007      	beq.n	800485a <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	681b      	ldr	r3, [r3, #0]
 800484e:	681a      	ldr	r2, [r3, #0]
 8004850:	68fb      	ldr	r3, [r7, #12]
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	f042 0201 	orr.w	r2, r2, #1
 8004858:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800485a:	68fb      	ldr	r3, [r7, #12]
 800485c:	681b      	ldr	r3, [r3, #0]
 800485e:	681a      	ldr	r2, [r3, #0]
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	681b      	ldr	r3, [r3, #0]
 8004864:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004868:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 800486a:	68fb      	ldr	r3, [r7, #12]
 800486c:	2222      	movs	r2, #34	@ 0x22
 800486e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	2210      	movs	r2, #16
 8004876:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 800487a:	68fb      	ldr	r3, [r7, #12]
 800487c:	2200      	movs	r2, #0
 800487e:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	687a      	ldr	r2, [r7, #4]
 8004884:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	893a      	ldrh	r2, [r7, #8]
 800488a:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800488c:	68fb      	ldr	r3, [r7, #12]
 800488e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004890:	b29a      	uxth	r2, r3
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004896:	68fb      	ldr	r3, [r7, #12]
 8004898:	4a5c      	ldr	r2, [pc, #368]	@ (8004a0c <HAL_I2C_Master_Receive+0x228>)
 800489a:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 800489c:	8979      	ldrh	r1, [r7, #10]
 800489e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048a0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80048a2:	68f8      	ldr	r0, [r7, #12]
 80048a4:	f000 fa52 	bl	8004d4c <I2C_MasterRequestRead>
 80048a8:	4603      	mov	r3, r0
 80048aa:	2b00      	cmp	r3, #0
 80048ac:	d001      	beq.n	80048b2 <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80048ae:	2301      	movs	r3, #1
 80048b0:	e1c4      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048b6:	2b00      	cmp	r3, #0
 80048b8:	d113      	bne.n	80048e2 <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80048ba:	2300      	movs	r3, #0
 80048bc:	623b      	str	r3, [r7, #32]
 80048be:	68fb      	ldr	r3, [r7, #12]
 80048c0:	681b      	ldr	r3, [r3, #0]
 80048c2:	695b      	ldr	r3, [r3, #20]
 80048c4:	623b      	str	r3, [r7, #32]
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	681b      	ldr	r3, [r3, #0]
 80048ca:	699b      	ldr	r3, [r3, #24]
 80048cc:	623b      	str	r3, [r7, #32]
 80048ce:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048d0:	68fb      	ldr	r3, [r7, #12]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	681a      	ldr	r2, [r3, #0]
 80048d6:	68fb      	ldr	r3, [r7, #12]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80048de:	601a      	str	r2, [r3, #0]
 80048e0:	e198      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 80048e2:	68fb      	ldr	r3, [r7, #12]
 80048e4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048e6:	2b01      	cmp	r3, #1
 80048e8:	d11b      	bne.n	8004922 <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80048ea:	68fb      	ldr	r3, [r7, #12]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	681a      	ldr	r2, [r3, #0]
 80048f0:	68fb      	ldr	r3, [r7, #12]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80048f8:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80048fa:	2300      	movs	r3, #0
 80048fc:	61fb      	str	r3, [r7, #28]
 80048fe:	68fb      	ldr	r3, [r7, #12]
 8004900:	681b      	ldr	r3, [r3, #0]
 8004902:	695b      	ldr	r3, [r3, #20]
 8004904:	61fb      	str	r3, [r7, #28]
 8004906:	68fb      	ldr	r3, [r7, #12]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	699b      	ldr	r3, [r3, #24]
 800490c:	61fb      	str	r3, [r7, #28]
 800490e:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004910:	68fb      	ldr	r3, [r7, #12]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	681a      	ldr	r2, [r3, #0]
 8004916:	68fb      	ldr	r3, [r7, #12]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800491e:	601a      	str	r2, [r3, #0]
 8004920:	e178      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 8004922:	68fb      	ldr	r3, [r7, #12]
 8004924:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004926:	2b02      	cmp	r3, #2
 8004928:	d11b      	bne.n	8004962 <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800492a:	68fb      	ldr	r3, [r7, #12]
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	681a      	ldr	r2, [r3, #0]
 8004930:	68fb      	ldr	r3, [r7, #12]
 8004932:	681b      	ldr	r3, [r3, #0]
 8004934:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004938:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800493a:	68fb      	ldr	r3, [r7, #12]
 800493c:	681b      	ldr	r3, [r3, #0]
 800493e:	681a      	ldr	r2, [r3, #0]
 8004940:	68fb      	ldr	r3, [r7, #12]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004948:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800494a:	2300      	movs	r3, #0
 800494c:	61bb      	str	r3, [r7, #24]
 800494e:	68fb      	ldr	r3, [r7, #12]
 8004950:	681b      	ldr	r3, [r3, #0]
 8004952:	695b      	ldr	r3, [r3, #20]
 8004954:	61bb      	str	r3, [r7, #24]
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	699b      	ldr	r3, [r3, #24]
 800495c:	61bb      	str	r3, [r7, #24]
 800495e:	69bb      	ldr	r3, [r7, #24]
 8004960:	e158      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	681a      	ldr	r2, [r3, #0]
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	681b      	ldr	r3, [r3, #0]
 800496c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004970:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004972:	2300      	movs	r3, #0
 8004974:	617b      	str	r3, [r7, #20]
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	695b      	ldr	r3, [r3, #20]
 800497c:	617b      	str	r3, [r7, #20]
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	681b      	ldr	r3, [r3, #0]
 8004982:	699b      	ldr	r3, [r3, #24]
 8004984:	617b      	str	r3, [r7, #20]
 8004986:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 8004988:	e144      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 800498a:	68fb      	ldr	r3, [r7, #12]
 800498c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800498e:	2b03      	cmp	r3, #3
 8004990:	f200 80f1 	bhi.w	8004b76 <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 8004994:	68fb      	ldr	r3, [r7, #12]
 8004996:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004998:	2b01      	cmp	r3, #1
 800499a:	d123      	bne.n	80049e4 <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800499c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800499e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80049a0:	68f8      	ldr	r0, [r7, #12]
 80049a2:	f000 fc4b 	bl	800523c <I2C_WaitOnRXNEFlagUntilTimeout>
 80049a6:	4603      	mov	r3, r0
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d001      	beq.n	80049b0 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 80049ac:	2301      	movs	r3, #1
 80049ae:	e145      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80049b0:	68fb      	ldr	r3, [r7, #12]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	691a      	ldr	r2, [r3, #16]
 80049b6:	68fb      	ldr	r3, [r7, #12]
 80049b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049ba:	b2d2      	uxtb	r2, r2
 80049bc:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80049be:	68fb      	ldr	r3, [r7, #12]
 80049c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049c2:	1c5a      	adds	r2, r3, #1
 80049c4:	68fb      	ldr	r3, [r7, #12]
 80049c6:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049cc:	3b01      	subs	r3, #1
 80049ce:	b29a      	uxth	r2, r3
 80049d0:	68fb      	ldr	r3, [r7, #12]
 80049d2:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80049d4:	68fb      	ldr	r3, [r7, #12]
 80049d6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80049d8:	b29b      	uxth	r3, r3
 80049da:	3b01      	subs	r3, #1
 80049dc:	b29a      	uxth	r2, r3
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80049e2:	e117      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049e8:	2b02      	cmp	r3, #2
 80049ea:	d14e      	bne.n	8004a8a <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80049ec:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80049ee:	9300      	str	r3, [sp, #0]
 80049f0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80049f2:	2200      	movs	r2, #0
 80049f4:	4906      	ldr	r1, [pc, #24]	@ (8004a10 <HAL_I2C_Master_Receive+0x22c>)
 80049f6:	68f8      	ldr	r0, [r7, #12]
 80049f8:	f000 fa76 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 80049fc:	4603      	mov	r3, r0
 80049fe:	2b00      	cmp	r3, #0
 8004a00:	d008      	beq.n	8004a14 <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8004a02:	2301      	movs	r3, #1
 8004a04:	e11a      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
 8004a06:	bf00      	nop
 8004a08:	00100002 	.word	0x00100002
 8004a0c:	ffff0000 	.word	0xffff0000
 8004a10:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	681b      	ldr	r3, [r3, #0]
 8004a18:	681a      	ldr	r2, [r3, #0]
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	681b      	ldr	r3, [r3, #0]
 8004a1e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a22:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	681b      	ldr	r3, [r3, #0]
 8004a28:	691a      	ldr	r2, [r3, #16]
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a2e:	b2d2      	uxtb	r2, r2
 8004a30:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a36:	1c5a      	adds	r2, r3, #1
 8004a38:	68fb      	ldr	r3, [r7, #12]
 8004a3a:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a40:	3b01      	subs	r3, #1
 8004a42:	b29a      	uxth	r2, r3
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a48:	68fb      	ldr	r3, [r7, #12]
 8004a4a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a4c:	b29b      	uxth	r3, r3
 8004a4e:	3b01      	subs	r3, #1
 8004a50:	b29a      	uxth	r2, r3
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a56:	68fb      	ldr	r3, [r7, #12]
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	691a      	ldr	r2, [r3, #16]
 8004a5c:	68fb      	ldr	r3, [r7, #12]
 8004a5e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a60:	b2d2      	uxtb	r2, r2
 8004a62:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a64:	68fb      	ldr	r3, [r7, #12]
 8004a66:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a68:	1c5a      	adds	r2, r3, #1
 8004a6a:	68fb      	ldr	r3, [r7, #12]
 8004a6c:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a72:	3b01      	subs	r3, #1
 8004a74:	b29a      	uxth	r2, r3
 8004a76:	68fb      	ldr	r3, [r7, #12]
 8004a78:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a7a:	68fb      	ldr	r3, [r7, #12]
 8004a7c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a7e:	b29b      	uxth	r3, r3
 8004a80:	3b01      	subs	r3, #1
 8004a82:	b29a      	uxth	r2, r3
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004a88:	e0c4      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004a8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004a8c:	9300      	str	r3, [sp, #0]
 8004a8e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004a90:	2200      	movs	r2, #0
 8004a92:	496c      	ldr	r1, [pc, #432]	@ (8004c44 <HAL_I2C_Master_Receive+0x460>)
 8004a94:	68f8      	ldr	r0, [r7, #12]
 8004a96:	f000 fa27 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004a9a:	4603      	mov	r3, r0
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	d001      	beq.n	8004aa4 <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 8004aa0:	2301      	movs	r3, #1
 8004aa2:	e0cb      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	681b      	ldr	r3, [r3, #0]
 8004aa8:	681a      	ldr	r2, [r3, #0]
 8004aaa:	68fb      	ldr	r3, [r7, #12]
 8004aac:	681b      	ldr	r3, [r3, #0]
 8004aae:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004ab2:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ab4:	68fb      	ldr	r3, [r7, #12]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	691a      	ldr	r2, [r3, #16]
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004abe:	b2d2      	uxtb	r2, r2
 8004ac0:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ac6:	1c5a      	adds	r2, r3, #1
 8004ac8:	68fb      	ldr	r3, [r7, #12]
 8004aca:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004acc:	68fb      	ldr	r3, [r7, #12]
 8004ace:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ad0:	3b01      	subs	r3, #1
 8004ad2:	b29a      	uxth	r2, r3
 8004ad4:	68fb      	ldr	r3, [r7, #12]
 8004ad6:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004ad8:	68fb      	ldr	r3, [r7, #12]
 8004ada:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004adc:	b29b      	uxth	r3, r3
 8004ade:	3b01      	subs	r3, #1
 8004ae0:	b29a      	uxth	r2, r3
 8004ae2:	68fb      	ldr	r3, [r7, #12]
 8004ae4:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ae6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ae8:	9300      	str	r3, [sp, #0]
 8004aea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004aec:	2200      	movs	r2, #0
 8004aee:	4955      	ldr	r1, [pc, #340]	@ (8004c44 <HAL_I2C_Master_Receive+0x460>)
 8004af0:	68f8      	ldr	r0, [r7, #12]
 8004af2:	f000 f9f9 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004af6:	4603      	mov	r3, r0
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	d001      	beq.n	8004b00 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8004afc:	2301      	movs	r3, #1
 8004afe:	e09d      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	681b      	ldr	r3, [r3, #0]
 8004b04:	681a      	ldr	r2, [r3, #0]
 8004b06:	68fb      	ldr	r3, [r7, #12]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004b0e:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b10:	68fb      	ldr	r3, [r7, #12]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	691a      	ldr	r2, [r3, #16]
 8004b16:	68fb      	ldr	r3, [r7, #12]
 8004b18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b1a:	b2d2      	uxtb	r2, r2
 8004b1c:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004b1e:	68fb      	ldr	r3, [r7, #12]
 8004b20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b22:	1c5a      	adds	r2, r3, #1
 8004b24:	68fb      	ldr	r3, [r7, #12]
 8004b26:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b2c:	3b01      	subs	r3, #1
 8004b2e:	b29a      	uxth	r2, r3
 8004b30:	68fb      	ldr	r3, [r7, #12]
 8004b32:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004b34:	68fb      	ldr	r3, [r7, #12]
 8004b36:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b38:	b29b      	uxth	r3, r3
 8004b3a:	3b01      	subs	r3, #1
 8004b3c:	b29a      	uxth	r2, r3
 8004b3e:	68fb      	ldr	r3, [r7, #12]
 8004b40:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b42:	68fb      	ldr	r3, [r7, #12]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	691a      	ldr	r2, [r3, #16]
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b4c:	b2d2      	uxtb	r2, r2
 8004b4e:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004b50:	68fb      	ldr	r3, [r7, #12]
 8004b52:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b54:	1c5a      	adds	r2, r3, #1
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004b5a:	68fb      	ldr	r3, [r7, #12]
 8004b5c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b5e:	3b01      	subs	r3, #1
 8004b60:	b29a      	uxth	r2, r3
 8004b62:	68fb      	ldr	r3, [r7, #12]
 8004b64:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004b66:	68fb      	ldr	r3, [r7, #12]
 8004b68:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b6a:	b29b      	uxth	r3, r3
 8004b6c:	3b01      	subs	r3, #1
 8004b6e:	b29a      	uxth	r2, r3
 8004b70:	68fb      	ldr	r3, [r7, #12]
 8004b72:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004b74:	e04e      	b.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b76:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004b78:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004b7a:	68f8      	ldr	r0, [r7, #12]
 8004b7c:	f000 fb5e 	bl	800523c <I2C_WaitOnRXNEFlagUntilTimeout>
 8004b80:	4603      	mov	r3, r0
 8004b82:	2b00      	cmp	r3, #0
 8004b84:	d001      	beq.n	8004b8a <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8004b86:	2301      	movs	r3, #1
 8004b88:	e058      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	691a      	ldr	r2, [r3, #16]
 8004b90:	68fb      	ldr	r3, [r7, #12]
 8004b92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b94:	b2d2      	uxtb	r2, r2
 8004b96:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004b98:	68fb      	ldr	r3, [r7, #12]
 8004b9a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b9c:	1c5a      	adds	r2, r3, #1
 8004b9e:	68fb      	ldr	r3, [r7, #12]
 8004ba0:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ba6:	3b01      	subs	r3, #1
 8004ba8:	b29a      	uxth	r2, r3
 8004baa:	68fb      	ldr	r3, [r7, #12]
 8004bac:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 8004bae:	68fb      	ldr	r3, [r7, #12]
 8004bb0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004bb2:	b29b      	uxth	r3, r3
 8004bb4:	3b01      	subs	r3, #1
 8004bb6:	b29a      	uxth	r2, r3
 8004bb8:	68fb      	ldr	r3, [r7, #12]
 8004bba:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004bbc:	68fb      	ldr	r3, [r7, #12]
 8004bbe:	681b      	ldr	r3, [r3, #0]
 8004bc0:	695b      	ldr	r3, [r3, #20]
 8004bc2:	f003 0304 	and.w	r3, r3, #4
 8004bc6:	2b04      	cmp	r3, #4
 8004bc8:	d124      	bne.n	8004c14 <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8004bca:	68fb      	ldr	r3, [r7, #12]
 8004bcc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004bce:	2b03      	cmp	r3, #3
 8004bd0:	d107      	bne.n	8004be2 <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004bd2:	68fb      	ldr	r3, [r7, #12]
 8004bd4:	681b      	ldr	r3, [r3, #0]
 8004bd6:	681a      	ldr	r2, [r3, #0]
 8004bd8:	68fb      	ldr	r3, [r7, #12]
 8004bda:	681b      	ldr	r3, [r3, #0]
 8004bdc:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004be0:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	681b      	ldr	r3, [r3, #0]
 8004be6:	691a      	ldr	r2, [r3, #16]
 8004be8:	68fb      	ldr	r3, [r7, #12]
 8004bea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bec:	b2d2      	uxtb	r2, r2
 8004bee:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bf4:	1c5a      	adds	r2, r3, #1
 8004bf6:	68fb      	ldr	r3, [r7, #12]
 8004bf8:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004bfe:	3b01      	subs	r3, #1
 8004c00:	b29a      	uxth	r2, r3
 8004c02:	68fb      	ldr	r3, [r7, #12]
 8004c04:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004c06:	68fb      	ldr	r3, [r7, #12]
 8004c08:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004c0a:	b29b      	uxth	r3, r3
 8004c0c:	3b01      	subs	r3, #1
 8004c0e:	b29a      	uxth	r2, r3
 8004c10:	68fb      	ldr	r3, [r7, #12]
 8004c12:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004c18:	2b00      	cmp	r3, #0
 8004c1a:	f47f aeb6 	bne.w	800498a <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	2220      	movs	r2, #32
 8004c22:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c26:	68fb      	ldr	r3, [r7, #12]
 8004c28:	2200      	movs	r2, #0
 8004c2a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c2e:	68fb      	ldr	r3, [r7, #12]
 8004c30:	2200      	movs	r2, #0
 8004c32:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004c36:	2300      	movs	r3, #0
 8004c38:	e000      	b.n	8004c3c <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 8004c3a:	2302      	movs	r3, #2
  }
}
 8004c3c:	4618      	mov	r0, r3
 8004c3e:	3728      	adds	r7, #40	@ 0x28
 8004c40:	46bd      	mov	sp, r7
 8004c42:	bd80      	pop	{r7, pc}
 8004c44:	00010004 	.word	0x00010004

08004c48 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004c48:	b580      	push	{r7, lr}
 8004c4a:	b088      	sub	sp, #32
 8004c4c:	af02      	add	r7, sp, #8
 8004c4e:	60f8      	str	r0, [r7, #12]
 8004c50:	607a      	str	r2, [r7, #4]
 8004c52:	603b      	str	r3, [r7, #0]
 8004c54:	460b      	mov	r3, r1
 8004c56:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004c58:	68fb      	ldr	r3, [r7, #12]
 8004c5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004c5c:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004c5e:	697b      	ldr	r3, [r7, #20]
 8004c60:	2b08      	cmp	r3, #8
 8004c62:	d006      	beq.n	8004c72 <I2C_MasterRequestWrite+0x2a>
 8004c64:	697b      	ldr	r3, [r7, #20]
 8004c66:	2b01      	cmp	r3, #1
 8004c68:	d003      	beq.n	8004c72 <I2C_MasterRequestWrite+0x2a>
 8004c6a:	697b      	ldr	r3, [r7, #20]
 8004c6c:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004c70:	d108      	bne.n	8004c84 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c72:	68fb      	ldr	r3, [r7, #12]
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	681a      	ldr	r2, [r3, #0]
 8004c78:	68fb      	ldr	r3, [r7, #12]
 8004c7a:	681b      	ldr	r3, [r3, #0]
 8004c7c:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004c80:	601a      	str	r2, [r3, #0]
 8004c82:	e00b      	b.n	8004c9c <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8004c84:	68fb      	ldr	r3, [r7, #12]
 8004c86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004c88:	2b12      	cmp	r3, #18
 8004c8a:	d107      	bne.n	8004c9c <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c8c:	68fb      	ldr	r3, [r7, #12]
 8004c8e:	681b      	ldr	r3, [r3, #0]
 8004c90:	681a      	ldr	r2, [r3, #0]
 8004c92:	68fb      	ldr	r3, [r7, #12]
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004c9a:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004c9c:	683b      	ldr	r3, [r7, #0]
 8004c9e:	9300      	str	r3, [sp, #0]
 8004ca0:	687b      	ldr	r3, [r7, #4]
 8004ca2:	2200      	movs	r2, #0
 8004ca4:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004ca8:	68f8      	ldr	r0, [r7, #12]
 8004caa:	f000 f91d 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004cae:	4603      	mov	r3, r0
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d00d      	beq.n	8004cd0 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004cb4:	68fb      	ldr	r3, [r7, #12]
 8004cb6:	681b      	ldr	r3, [r3, #0]
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004cbe:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004cc2:	d103      	bne.n	8004ccc <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004cc4:	68fb      	ldr	r3, [r7, #12]
 8004cc6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004cca:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004ccc:	2303      	movs	r3, #3
 8004cce:	e035      	b.n	8004d3c <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004cd0:	68fb      	ldr	r3, [r7, #12]
 8004cd2:	691b      	ldr	r3, [r3, #16]
 8004cd4:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004cd8:	d108      	bne.n	8004cec <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004cda:	897b      	ldrh	r3, [r7, #10]
 8004cdc:	b2db      	uxtb	r3, r3
 8004cde:	461a      	mov	r2, r3
 8004ce0:	68fb      	ldr	r3, [r7, #12]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004ce8:	611a      	str	r2, [r3, #16]
 8004cea:	e01b      	b.n	8004d24 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004cec:	897b      	ldrh	r3, [r7, #10]
 8004cee:	11db      	asrs	r3, r3, #7
 8004cf0:	b2db      	uxtb	r3, r3
 8004cf2:	f003 0306 	and.w	r3, r3, #6
 8004cf6:	b2db      	uxtb	r3, r3
 8004cf8:	f063 030f 	orn	r3, r3, #15
 8004cfc:	b2da      	uxtb	r2, r3
 8004cfe:	68fb      	ldr	r3, [r7, #12]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004d04:	683b      	ldr	r3, [r7, #0]
 8004d06:	687a      	ldr	r2, [r7, #4]
 8004d08:	490e      	ldr	r1, [pc, #56]	@ (8004d44 <I2C_MasterRequestWrite+0xfc>)
 8004d0a:	68f8      	ldr	r0, [r7, #12]
 8004d0c:	f000 f966 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d10:	4603      	mov	r3, r0
 8004d12:	2b00      	cmp	r3, #0
 8004d14:	d001      	beq.n	8004d1a <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8004d16:	2301      	movs	r3, #1
 8004d18:	e010      	b.n	8004d3c <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004d1a:	897b      	ldrh	r3, [r7, #10]
 8004d1c:	b2da      	uxtb	r2, r3
 8004d1e:	68fb      	ldr	r3, [r7, #12]
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004d24:	683b      	ldr	r3, [r7, #0]
 8004d26:	687a      	ldr	r2, [r7, #4]
 8004d28:	4907      	ldr	r1, [pc, #28]	@ (8004d48 <I2C_MasterRequestWrite+0x100>)
 8004d2a:	68f8      	ldr	r0, [r7, #12]
 8004d2c:	f000 f956 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d30:	4603      	mov	r3, r0
 8004d32:	2b00      	cmp	r3, #0
 8004d34:	d001      	beq.n	8004d3a <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8004d36:	2301      	movs	r3, #1
 8004d38:	e000      	b.n	8004d3c <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8004d3a:	2300      	movs	r3, #0
}
 8004d3c:	4618      	mov	r0, r3
 8004d3e:	3718      	adds	r7, #24
 8004d40:	46bd      	mov	sp, r7
 8004d42:	bd80      	pop	{r7, pc}
 8004d44:	00010008 	.word	0x00010008
 8004d48:	00010002 	.word	0x00010002

08004d4c <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004d4c:	b580      	push	{r7, lr}
 8004d4e:	b088      	sub	sp, #32
 8004d50:	af02      	add	r7, sp, #8
 8004d52:	60f8      	str	r0, [r7, #12]
 8004d54:	607a      	str	r2, [r7, #4]
 8004d56:	603b      	str	r3, [r7, #0]
 8004d58:	460b      	mov	r3, r1
 8004d5a:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004d5c:	68fb      	ldr	r3, [r7, #12]
 8004d5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004d60:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004d62:	68fb      	ldr	r3, [r7, #12]
 8004d64:	681b      	ldr	r3, [r3, #0]
 8004d66:	681a      	ldr	r2, [r3, #0]
 8004d68:	68fb      	ldr	r3, [r7, #12]
 8004d6a:	681b      	ldr	r3, [r3, #0]
 8004d6c:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004d70:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004d72:	697b      	ldr	r3, [r7, #20]
 8004d74:	2b08      	cmp	r3, #8
 8004d76:	d006      	beq.n	8004d86 <I2C_MasterRequestRead+0x3a>
 8004d78:	697b      	ldr	r3, [r7, #20]
 8004d7a:	2b01      	cmp	r3, #1
 8004d7c:	d003      	beq.n	8004d86 <I2C_MasterRequestRead+0x3a>
 8004d7e:	697b      	ldr	r3, [r7, #20]
 8004d80:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004d84:	d108      	bne.n	8004d98 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004d86:	68fb      	ldr	r3, [r7, #12]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	681a      	ldr	r2, [r3, #0]
 8004d8c:	68fb      	ldr	r3, [r7, #12]
 8004d8e:	681b      	ldr	r3, [r3, #0]
 8004d90:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004d94:	601a      	str	r2, [r3, #0]
 8004d96:	e00b      	b.n	8004db0 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8004d98:	68fb      	ldr	r3, [r7, #12]
 8004d9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d9c:	2b11      	cmp	r3, #17
 8004d9e:	d107      	bne.n	8004db0 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004da0:	68fb      	ldr	r3, [r7, #12]
 8004da2:	681b      	ldr	r3, [r3, #0]
 8004da4:	681a      	ldr	r2, [r3, #0]
 8004da6:	68fb      	ldr	r3, [r7, #12]
 8004da8:	681b      	ldr	r3, [r3, #0]
 8004daa:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004dae:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004db0:	683b      	ldr	r3, [r7, #0]
 8004db2:	9300      	str	r3, [sp, #0]
 8004db4:	687b      	ldr	r3, [r7, #4]
 8004db6:	2200      	movs	r2, #0
 8004db8:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004dbc:	68f8      	ldr	r0, [r7, #12]
 8004dbe:	f000 f893 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004dc2:	4603      	mov	r3, r0
 8004dc4:	2b00      	cmp	r3, #0
 8004dc6:	d00d      	beq.n	8004de4 <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004dc8:	68fb      	ldr	r3, [r7, #12]
 8004dca:	681b      	ldr	r3, [r3, #0]
 8004dcc:	681b      	ldr	r3, [r3, #0]
 8004dce:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004dd2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004dd6:	d103      	bne.n	8004de0 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004dd8:	68fb      	ldr	r3, [r7, #12]
 8004dda:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004dde:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004de0:	2303      	movs	r3, #3
 8004de2:	e079      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004de4:	68fb      	ldr	r3, [r7, #12]
 8004de6:	691b      	ldr	r3, [r3, #16]
 8004de8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004dec:	d108      	bne.n	8004e00 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004dee:	897b      	ldrh	r3, [r7, #10]
 8004df0:	b2db      	uxtb	r3, r3
 8004df2:	f043 0301 	orr.w	r3, r3, #1
 8004df6:	b2da      	uxtb	r2, r3
 8004df8:	68fb      	ldr	r3, [r7, #12]
 8004dfa:	681b      	ldr	r3, [r3, #0]
 8004dfc:	611a      	str	r2, [r3, #16]
 8004dfe:	e05f      	b.n	8004ec0 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004e00:	897b      	ldrh	r3, [r7, #10]
 8004e02:	11db      	asrs	r3, r3, #7
 8004e04:	b2db      	uxtb	r3, r3
 8004e06:	f003 0306 	and.w	r3, r3, #6
 8004e0a:	b2db      	uxtb	r3, r3
 8004e0c:	f063 030f 	orn	r3, r3, #15
 8004e10:	b2da      	uxtb	r2, r3
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004e18:	683b      	ldr	r3, [r7, #0]
 8004e1a:	687a      	ldr	r2, [r7, #4]
 8004e1c:	4930      	ldr	r1, [pc, #192]	@ (8004ee0 <I2C_MasterRequestRead+0x194>)
 8004e1e:	68f8      	ldr	r0, [r7, #12]
 8004e20:	f000 f8dc 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e24:	4603      	mov	r3, r0
 8004e26:	2b00      	cmp	r3, #0
 8004e28:	d001      	beq.n	8004e2e <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8004e2a:	2301      	movs	r3, #1
 8004e2c:	e054      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004e2e:	897b      	ldrh	r3, [r7, #10]
 8004e30:	b2da      	uxtb	r2, r3
 8004e32:	68fb      	ldr	r3, [r7, #12]
 8004e34:	681b      	ldr	r3, [r3, #0]
 8004e36:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004e38:	683b      	ldr	r3, [r7, #0]
 8004e3a:	687a      	ldr	r2, [r7, #4]
 8004e3c:	4929      	ldr	r1, [pc, #164]	@ (8004ee4 <I2C_MasterRequestRead+0x198>)
 8004e3e:	68f8      	ldr	r0, [r7, #12]
 8004e40:	f000 f8cc 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e44:	4603      	mov	r3, r0
 8004e46:	2b00      	cmp	r3, #0
 8004e48:	d001      	beq.n	8004e4e <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8004e4a:	2301      	movs	r3, #1
 8004e4c:	e044      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e4e:	2300      	movs	r3, #0
 8004e50:	613b      	str	r3, [r7, #16]
 8004e52:	68fb      	ldr	r3, [r7, #12]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	695b      	ldr	r3, [r3, #20]
 8004e58:	613b      	str	r3, [r7, #16]
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	699b      	ldr	r3, [r3, #24]
 8004e60:	613b      	str	r3, [r7, #16]
 8004e62:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004e64:	68fb      	ldr	r3, [r7, #12]
 8004e66:	681b      	ldr	r3, [r3, #0]
 8004e68:	681a      	ldr	r2, [r3, #0]
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004e72:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e74:	683b      	ldr	r3, [r7, #0]
 8004e76:	9300      	str	r3, [sp, #0]
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	2200      	movs	r2, #0
 8004e7c:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004e80:	68f8      	ldr	r0, [r7, #12]
 8004e82:	f000 f831 	bl	8004ee8 <I2C_WaitOnFlagUntilTimeout>
 8004e86:	4603      	mov	r3, r0
 8004e88:	2b00      	cmp	r3, #0
 8004e8a:	d00d      	beq.n	8004ea8 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004e8c:	68fb      	ldr	r3, [r7, #12]
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	681b      	ldr	r3, [r3, #0]
 8004e92:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e96:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004e9a:	d103      	bne.n	8004ea4 <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004e9c:	68fb      	ldr	r3, [r7, #12]
 8004e9e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004ea2:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 8004ea4:	2303      	movs	r3, #3
 8004ea6:	e017      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8004ea8:	897b      	ldrh	r3, [r7, #10]
 8004eaa:	11db      	asrs	r3, r3, #7
 8004eac:	b2db      	uxtb	r3, r3
 8004eae:	f003 0306 	and.w	r3, r3, #6
 8004eb2:	b2db      	uxtb	r3, r3
 8004eb4:	f063 030e 	orn	r3, r3, #14
 8004eb8:	b2da      	uxtb	r2, r3
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	681b      	ldr	r3, [r3, #0]
 8004ebe:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ec0:	683b      	ldr	r3, [r7, #0]
 8004ec2:	687a      	ldr	r2, [r7, #4]
 8004ec4:	4907      	ldr	r1, [pc, #28]	@ (8004ee4 <I2C_MasterRequestRead+0x198>)
 8004ec6:	68f8      	ldr	r0, [r7, #12]
 8004ec8:	f000 f888 	bl	8004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004ecc:	4603      	mov	r3, r0
 8004ece:	2b00      	cmp	r3, #0
 8004ed0:	d001      	beq.n	8004ed6 <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8004ed2:	2301      	movs	r3, #1
 8004ed4:	e000      	b.n	8004ed8 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8004ed6:	2300      	movs	r3, #0
}
 8004ed8:	4618      	mov	r0, r3
 8004eda:	3718      	adds	r7, #24
 8004edc:	46bd      	mov	sp, r7
 8004ede:	bd80      	pop	{r7, pc}
 8004ee0:	00010008 	.word	0x00010008
 8004ee4:	00010002 	.word	0x00010002

08004ee8 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004ee8:	b580      	push	{r7, lr}
 8004eea:	b084      	sub	sp, #16
 8004eec:	af00      	add	r7, sp, #0
 8004eee:	60f8      	str	r0, [r7, #12]
 8004ef0:	60b9      	str	r1, [r7, #8]
 8004ef2:	603b      	str	r3, [r7, #0]
 8004ef4:	4613      	mov	r3, r2
 8004ef6:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004ef8:	e048      	b.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004efa:	683b      	ldr	r3, [r7, #0]
 8004efc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f00:	d044      	beq.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f02:	f7fd fda1 	bl	8002a48 <HAL_GetTick>
 8004f06:	4602      	mov	r2, r0
 8004f08:	69bb      	ldr	r3, [r7, #24]
 8004f0a:	1ad3      	subs	r3, r2, r3
 8004f0c:	683a      	ldr	r2, [r7, #0]
 8004f0e:	429a      	cmp	r2, r3
 8004f10:	d302      	bcc.n	8004f18 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004f12:	683b      	ldr	r3, [r7, #0]
 8004f14:	2b00      	cmp	r3, #0
 8004f16:	d139      	bne.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004f18:	68bb      	ldr	r3, [r7, #8]
 8004f1a:	0c1b      	lsrs	r3, r3, #16
 8004f1c:	b2db      	uxtb	r3, r3
 8004f1e:	2b01      	cmp	r3, #1
 8004f20:	d10d      	bne.n	8004f3e <I2C_WaitOnFlagUntilTimeout+0x56>
 8004f22:	68fb      	ldr	r3, [r7, #12]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	695b      	ldr	r3, [r3, #20]
 8004f28:	43da      	mvns	r2, r3
 8004f2a:	68bb      	ldr	r3, [r7, #8]
 8004f2c:	4013      	ands	r3, r2
 8004f2e:	b29b      	uxth	r3, r3
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	bf0c      	ite	eq
 8004f34:	2301      	moveq	r3, #1
 8004f36:	2300      	movne	r3, #0
 8004f38:	b2db      	uxtb	r3, r3
 8004f3a:	461a      	mov	r2, r3
 8004f3c:	e00c      	b.n	8004f58 <I2C_WaitOnFlagUntilTimeout+0x70>
 8004f3e:	68fb      	ldr	r3, [r7, #12]
 8004f40:	681b      	ldr	r3, [r3, #0]
 8004f42:	699b      	ldr	r3, [r3, #24]
 8004f44:	43da      	mvns	r2, r3
 8004f46:	68bb      	ldr	r3, [r7, #8]
 8004f48:	4013      	ands	r3, r2
 8004f4a:	b29b      	uxth	r3, r3
 8004f4c:	2b00      	cmp	r3, #0
 8004f4e:	bf0c      	ite	eq
 8004f50:	2301      	moveq	r3, #1
 8004f52:	2300      	movne	r3, #0
 8004f54:	b2db      	uxtb	r3, r3
 8004f56:	461a      	mov	r2, r3
 8004f58:	79fb      	ldrb	r3, [r7, #7]
 8004f5a:	429a      	cmp	r2, r3
 8004f5c:	d116      	bne.n	8004f8c <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	2200      	movs	r2, #0
 8004f62:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8004f64:	68fb      	ldr	r3, [r7, #12]
 8004f66:	2220      	movs	r2, #32
 8004f68:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	2200      	movs	r2, #0
 8004f70:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f74:	68fb      	ldr	r3, [r7, #12]
 8004f76:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f78:	f043 0220 	orr.w	r2, r3, #32
 8004f7c:	68fb      	ldr	r3, [r7, #12]
 8004f7e:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004f80:	68fb      	ldr	r3, [r7, #12]
 8004f82:	2200      	movs	r2, #0
 8004f84:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004f88:	2301      	movs	r3, #1
 8004f8a:	e023      	b.n	8004fd4 <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004f8c:	68bb      	ldr	r3, [r7, #8]
 8004f8e:	0c1b      	lsrs	r3, r3, #16
 8004f90:	b2db      	uxtb	r3, r3
 8004f92:	2b01      	cmp	r3, #1
 8004f94:	d10d      	bne.n	8004fb2 <I2C_WaitOnFlagUntilTimeout+0xca>
 8004f96:	68fb      	ldr	r3, [r7, #12]
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	695b      	ldr	r3, [r3, #20]
 8004f9c:	43da      	mvns	r2, r3
 8004f9e:	68bb      	ldr	r3, [r7, #8]
 8004fa0:	4013      	ands	r3, r2
 8004fa2:	b29b      	uxth	r3, r3
 8004fa4:	2b00      	cmp	r3, #0
 8004fa6:	bf0c      	ite	eq
 8004fa8:	2301      	moveq	r3, #1
 8004faa:	2300      	movne	r3, #0
 8004fac:	b2db      	uxtb	r3, r3
 8004fae:	461a      	mov	r2, r3
 8004fb0:	e00c      	b.n	8004fcc <I2C_WaitOnFlagUntilTimeout+0xe4>
 8004fb2:	68fb      	ldr	r3, [r7, #12]
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	699b      	ldr	r3, [r3, #24]
 8004fb8:	43da      	mvns	r2, r3
 8004fba:	68bb      	ldr	r3, [r7, #8]
 8004fbc:	4013      	ands	r3, r2
 8004fbe:	b29b      	uxth	r3, r3
 8004fc0:	2b00      	cmp	r3, #0
 8004fc2:	bf0c      	ite	eq
 8004fc4:	2301      	moveq	r3, #1
 8004fc6:	2300      	movne	r3, #0
 8004fc8:	b2db      	uxtb	r3, r3
 8004fca:	461a      	mov	r2, r3
 8004fcc:	79fb      	ldrb	r3, [r7, #7]
 8004fce:	429a      	cmp	r2, r3
 8004fd0:	d093      	beq.n	8004efa <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004fd2:	2300      	movs	r3, #0
}
 8004fd4:	4618      	mov	r0, r3
 8004fd6:	3710      	adds	r7, #16
 8004fd8:	46bd      	mov	sp, r7
 8004fda:	bd80      	pop	{r7, pc}

08004fdc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004fdc:	b580      	push	{r7, lr}
 8004fde:	b084      	sub	sp, #16
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	60f8      	str	r0, [r7, #12]
 8004fe4:	60b9      	str	r1, [r7, #8]
 8004fe6:	607a      	str	r2, [r7, #4]
 8004fe8:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8004fea:	e071      	b.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	695b      	ldr	r3, [r3, #20]
 8004ff2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004ff6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004ffa:	d123      	bne.n	8005044 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ffc:	68fb      	ldr	r3, [r7, #12]
 8004ffe:	681b      	ldr	r3, [r3, #0]
 8005000:	681a      	ldr	r2, [r3, #0]
 8005002:	68fb      	ldr	r3, [r7, #12]
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800500a:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800500c:	68fb      	ldr	r3, [r7, #12]
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005014:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8005016:	68fb      	ldr	r3, [r7, #12]
 8005018:	2200      	movs	r2, #0
 800501a:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800501c:	68fb      	ldr	r3, [r7, #12]
 800501e:	2220      	movs	r2, #32
 8005020:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	2200      	movs	r2, #0
 8005028:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800502c:	68fb      	ldr	r3, [r7, #12]
 800502e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005030:	f043 0204 	orr.w	r2, r3, #4
 8005034:	68fb      	ldr	r3, [r7, #12]
 8005036:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005038:	68fb      	ldr	r3, [r7, #12]
 800503a:	2200      	movs	r2, #0
 800503c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8005040:	2301      	movs	r3, #1
 8005042:	e067      	b.n	8005114 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	f1b3 3fff 	cmp.w	r3, #4294967295
 800504a:	d041      	beq.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800504c:	f7fd fcfc 	bl	8002a48 <HAL_GetTick>
 8005050:	4602      	mov	r2, r0
 8005052:	683b      	ldr	r3, [r7, #0]
 8005054:	1ad3      	subs	r3, r2, r3
 8005056:	687a      	ldr	r2, [r7, #4]
 8005058:	429a      	cmp	r2, r3
 800505a:	d302      	bcc.n	8005062 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	2b00      	cmp	r3, #0
 8005060:	d136      	bne.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 8005062:	68bb      	ldr	r3, [r7, #8]
 8005064:	0c1b      	lsrs	r3, r3, #16
 8005066:	b2db      	uxtb	r3, r3
 8005068:	2b01      	cmp	r3, #1
 800506a:	d10c      	bne.n	8005086 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 800506c:	68fb      	ldr	r3, [r7, #12]
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	695b      	ldr	r3, [r3, #20]
 8005072:	43da      	mvns	r2, r3
 8005074:	68bb      	ldr	r3, [r7, #8]
 8005076:	4013      	ands	r3, r2
 8005078:	b29b      	uxth	r3, r3
 800507a:	2b00      	cmp	r3, #0
 800507c:	bf14      	ite	ne
 800507e:	2301      	movne	r3, #1
 8005080:	2300      	moveq	r3, #0
 8005082:	b2db      	uxtb	r3, r3
 8005084:	e00b      	b.n	800509e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8005086:	68fb      	ldr	r3, [r7, #12]
 8005088:	681b      	ldr	r3, [r3, #0]
 800508a:	699b      	ldr	r3, [r3, #24]
 800508c:	43da      	mvns	r2, r3
 800508e:	68bb      	ldr	r3, [r7, #8]
 8005090:	4013      	ands	r3, r2
 8005092:	b29b      	uxth	r3, r3
 8005094:	2b00      	cmp	r3, #0
 8005096:	bf14      	ite	ne
 8005098:	2301      	movne	r3, #1
 800509a:	2300      	moveq	r3, #0
 800509c:	b2db      	uxtb	r3, r3
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d016      	beq.n	80050d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80050a2:	68fb      	ldr	r3, [r7, #12]
 80050a4:	2200      	movs	r2, #0
 80050a6:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80050a8:	68fb      	ldr	r3, [r7, #12]
 80050aa:	2220      	movs	r2, #32
 80050ac:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80050b0:	68fb      	ldr	r3, [r7, #12]
 80050b2:	2200      	movs	r2, #0
 80050b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80050b8:	68fb      	ldr	r3, [r7, #12]
 80050ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050bc:	f043 0220 	orr.w	r2, r3, #32
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	2200      	movs	r2, #0
 80050c8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80050cc:	2301      	movs	r3, #1
 80050ce:	e021      	b.n	8005114 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80050d0:	68bb      	ldr	r3, [r7, #8]
 80050d2:	0c1b      	lsrs	r3, r3, #16
 80050d4:	b2db      	uxtb	r3, r3
 80050d6:	2b01      	cmp	r3, #1
 80050d8:	d10c      	bne.n	80050f4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80050da:	68fb      	ldr	r3, [r7, #12]
 80050dc:	681b      	ldr	r3, [r3, #0]
 80050de:	695b      	ldr	r3, [r3, #20]
 80050e0:	43da      	mvns	r2, r3
 80050e2:	68bb      	ldr	r3, [r7, #8]
 80050e4:	4013      	ands	r3, r2
 80050e6:	b29b      	uxth	r3, r3
 80050e8:	2b00      	cmp	r3, #0
 80050ea:	bf14      	ite	ne
 80050ec:	2301      	movne	r3, #1
 80050ee:	2300      	moveq	r3, #0
 80050f0:	b2db      	uxtb	r3, r3
 80050f2:	e00b      	b.n	800510c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80050f4:	68fb      	ldr	r3, [r7, #12]
 80050f6:	681b      	ldr	r3, [r3, #0]
 80050f8:	699b      	ldr	r3, [r3, #24]
 80050fa:	43da      	mvns	r2, r3
 80050fc:	68bb      	ldr	r3, [r7, #8]
 80050fe:	4013      	ands	r3, r2
 8005100:	b29b      	uxth	r3, r3
 8005102:	2b00      	cmp	r3, #0
 8005104:	bf14      	ite	ne
 8005106:	2301      	movne	r3, #1
 8005108:	2300      	moveq	r3, #0
 800510a:	b2db      	uxtb	r3, r3
 800510c:	2b00      	cmp	r3, #0
 800510e:	f47f af6d 	bne.w	8004fec <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 8005112:	2300      	movs	r3, #0
}
 8005114:	4618      	mov	r0, r3
 8005116:	3710      	adds	r7, #16
 8005118:	46bd      	mov	sp, r7
 800511a:	bd80      	pop	{r7, pc}

0800511c <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800511c:	b580      	push	{r7, lr}
 800511e:	b084      	sub	sp, #16
 8005120:	af00      	add	r7, sp, #0
 8005122:	60f8      	str	r0, [r7, #12]
 8005124:	60b9      	str	r1, [r7, #8]
 8005126:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005128:	e034      	b.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800512a:	68f8      	ldr	r0, [r7, #12]
 800512c:	f000 f8e3 	bl	80052f6 <I2C_IsAcknowledgeFailed>
 8005130:	4603      	mov	r3, r0
 8005132:	2b00      	cmp	r3, #0
 8005134:	d001      	beq.n	800513a <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 8005136:	2301      	movs	r3, #1
 8005138:	e034      	b.n	80051a4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800513a:	68bb      	ldr	r3, [r7, #8]
 800513c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005140:	d028      	beq.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005142:	f7fd fc81 	bl	8002a48 <HAL_GetTick>
 8005146:	4602      	mov	r2, r0
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	1ad3      	subs	r3, r2, r3
 800514c:	68ba      	ldr	r2, [r7, #8]
 800514e:	429a      	cmp	r2, r3
 8005150:	d302      	bcc.n	8005158 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8005152:	68bb      	ldr	r3, [r7, #8]
 8005154:	2b00      	cmp	r3, #0
 8005156:	d11d      	bne.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8005158:	68fb      	ldr	r3, [r7, #12]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	695b      	ldr	r3, [r3, #20]
 800515e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005162:	2b80      	cmp	r3, #128	@ 0x80
 8005164:	d016      	beq.n	8005194 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 8005166:	68fb      	ldr	r3, [r7, #12]
 8005168:	2200      	movs	r2, #0
 800516a:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 800516c:	68fb      	ldr	r3, [r7, #12]
 800516e:	2220      	movs	r2, #32
 8005170:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005174:	68fb      	ldr	r3, [r7, #12]
 8005176:	2200      	movs	r2, #0
 8005178:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800517c:	68fb      	ldr	r3, [r7, #12]
 800517e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005180:	f043 0220 	orr.w	r2, r3, #32
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8005188:	68fb      	ldr	r3, [r7, #12]
 800518a:	2200      	movs	r2, #0
 800518c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005190:	2301      	movs	r3, #1
 8005192:	e007      	b.n	80051a4 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	681b      	ldr	r3, [r3, #0]
 8005198:	695b      	ldr	r3, [r3, #20]
 800519a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800519e:	2b80      	cmp	r3, #128	@ 0x80
 80051a0:	d1c3      	bne.n	800512a <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80051a2:	2300      	movs	r3, #0
}
 80051a4:	4618      	mov	r0, r3
 80051a6:	3710      	adds	r7, #16
 80051a8:	46bd      	mov	sp, r7
 80051aa:	bd80      	pop	{r7, pc}

080051ac <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80051ac:	b580      	push	{r7, lr}
 80051ae:	b084      	sub	sp, #16
 80051b0:	af00      	add	r7, sp, #0
 80051b2:	60f8      	str	r0, [r7, #12]
 80051b4:	60b9      	str	r1, [r7, #8]
 80051b6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80051b8:	e034      	b.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80051ba:	68f8      	ldr	r0, [r7, #12]
 80051bc:	f000 f89b 	bl	80052f6 <I2C_IsAcknowledgeFailed>
 80051c0:	4603      	mov	r3, r0
 80051c2:	2b00      	cmp	r3, #0
 80051c4:	d001      	beq.n	80051ca <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80051c6:	2301      	movs	r3, #1
 80051c8:	e034      	b.n	8005234 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80051ca:	68bb      	ldr	r3, [r7, #8]
 80051cc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051d0:	d028      	beq.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051d2:	f7fd fc39 	bl	8002a48 <HAL_GetTick>
 80051d6:	4602      	mov	r2, r0
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	1ad3      	subs	r3, r2, r3
 80051dc:	68ba      	ldr	r2, [r7, #8]
 80051de:	429a      	cmp	r2, r3
 80051e0:	d302      	bcc.n	80051e8 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80051e2:	68bb      	ldr	r3, [r7, #8]
 80051e4:	2b00      	cmp	r3, #0
 80051e6:	d11d      	bne.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 80051e8:	68fb      	ldr	r3, [r7, #12]
 80051ea:	681b      	ldr	r3, [r3, #0]
 80051ec:	695b      	ldr	r3, [r3, #20]
 80051ee:	f003 0304 	and.w	r3, r3, #4
 80051f2:	2b04      	cmp	r3, #4
 80051f4:	d016      	beq.n	8005224 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80051f6:	68fb      	ldr	r3, [r7, #12]
 80051f8:	2200      	movs	r2, #0
 80051fa:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80051fc:	68fb      	ldr	r3, [r7, #12]
 80051fe:	2220      	movs	r2, #32
 8005200:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005204:	68fb      	ldr	r3, [r7, #12]
 8005206:	2200      	movs	r2, #0
 8005208:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800520c:	68fb      	ldr	r3, [r7, #12]
 800520e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005210:	f043 0220 	orr.w	r2, r3, #32
 8005214:	68fb      	ldr	r3, [r7, #12]
 8005216:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8005218:	68fb      	ldr	r3, [r7, #12]
 800521a:	2200      	movs	r2, #0
 800521c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005220:	2301      	movs	r3, #1
 8005222:	e007      	b.n	8005234 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8005224:	68fb      	ldr	r3, [r7, #12]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	695b      	ldr	r3, [r3, #20]
 800522a:	f003 0304 	and.w	r3, r3, #4
 800522e:	2b04      	cmp	r3, #4
 8005230:	d1c3      	bne.n	80051ba <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 8005232:	2300      	movs	r3, #0
}
 8005234:	4618      	mov	r0, r3
 8005236:	3710      	adds	r7, #16
 8005238:	46bd      	mov	sp, r7
 800523a:	bd80      	pop	{r7, pc}

0800523c <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800523c:	b580      	push	{r7, lr}
 800523e:	b084      	sub	sp, #16
 8005240:	af00      	add	r7, sp, #0
 8005242:	60f8      	str	r0, [r7, #12]
 8005244:	60b9      	str	r1, [r7, #8]
 8005246:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005248:	e049      	b.n	80052de <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800524a:	68fb      	ldr	r3, [r7, #12]
 800524c:	681b      	ldr	r3, [r3, #0]
 800524e:	695b      	ldr	r3, [r3, #20]
 8005250:	f003 0310 	and.w	r3, r3, #16
 8005254:	2b10      	cmp	r3, #16
 8005256:	d119      	bne.n	800528c <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005258:	68fb      	ldr	r3, [r7, #12]
 800525a:	681b      	ldr	r3, [r3, #0]
 800525c:	f06f 0210 	mvn.w	r2, #16
 8005260:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	2200      	movs	r2, #0
 8005266:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005268:	68fb      	ldr	r3, [r7, #12]
 800526a:	2220      	movs	r2, #32
 800526c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	2200      	movs	r2, #0
 8005274:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005278:	68fb      	ldr	r3, [r7, #12]
 800527a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005280:	68fb      	ldr	r3, [r7, #12]
 8005282:	2200      	movs	r2, #0
 8005284:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8005288:	2301      	movs	r3, #1
 800528a:	e030      	b.n	80052ee <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800528c:	f7fd fbdc 	bl	8002a48 <HAL_GetTick>
 8005290:	4602      	mov	r2, r0
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	1ad3      	subs	r3, r2, r3
 8005296:	68ba      	ldr	r2, [r7, #8]
 8005298:	429a      	cmp	r2, r3
 800529a:	d302      	bcc.n	80052a2 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 800529c:	68bb      	ldr	r3, [r7, #8]
 800529e:	2b00      	cmp	r3, #0
 80052a0:	d11d      	bne.n	80052de <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80052a2:	68fb      	ldr	r3, [r7, #12]
 80052a4:	681b      	ldr	r3, [r3, #0]
 80052a6:	695b      	ldr	r3, [r3, #20]
 80052a8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052ac:	2b40      	cmp	r3, #64	@ 0x40
 80052ae:	d016      	beq.n	80052de <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80052b0:	68fb      	ldr	r3, [r7, #12]
 80052b2:	2200      	movs	r2, #0
 80052b4:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80052b6:	68fb      	ldr	r3, [r7, #12]
 80052b8:	2220      	movs	r2, #32
 80052ba:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80052be:	68fb      	ldr	r3, [r7, #12]
 80052c0:	2200      	movs	r2, #0
 80052c2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80052c6:	68fb      	ldr	r3, [r7, #12]
 80052c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80052ca:	f043 0220 	orr.w	r2, r3, #32
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	2200      	movs	r2, #0
 80052d6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 80052da:	2301      	movs	r3, #1
 80052dc:	e007      	b.n	80052ee <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80052de:	68fb      	ldr	r3, [r7, #12]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	695b      	ldr	r3, [r3, #20]
 80052e4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052e8:	2b40      	cmp	r3, #64	@ 0x40
 80052ea:	d1ae      	bne.n	800524a <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80052ec:	2300      	movs	r3, #0
}
 80052ee:	4618      	mov	r0, r3
 80052f0:	3710      	adds	r7, #16
 80052f2:	46bd      	mov	sp, r7
 80052f4:	bd80      	pop	{r7, pc}

080052f6 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 80052f6:	b480      	push	{r7}
 80052f8:	b083      	sub	sp, #12
 80052fa:	af00      	add	r7, sp, #0
 80052fc:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	681b      	ldr	r3, [r3, #0]
 8005302:	695b      	ldr	r3, [r3, #20]
 8005304:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005308:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800530c:	d11b      	bne.n	8005346 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8005316:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8005318:	687b      	ldr	r3, [r7, #4]
 800531a:	2200      	movs	r2, #0
 800531c:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	2220      	movs	r2, #32
 8005322:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	2200      	movs	r2, #0
 800532a:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005332:	f043 0204 	orr.w	r2, r3, #4
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	2200      	movs	r2, #0
 800533e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 8005342:	2301      	movs	r3, #1
 8005344:	e000      	b.n	8005348 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 8005346:	2300      	movs	r3, #0
}
 8005348:	4618      	mov	r0, r3
 800534a:	370c      	adds	r7, #12
 800534c:	46bd      	mov	sp, r7
 800534e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005352:	4770      	bx	lr

08005354 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005354:	b580      	push	{r7, lr}
 8005356:	b082      	sub	sp, #8
 8005358:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 800535a:	2300      	movs	r3, #0
 800535c:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 800535e:	2300      	movs	r3, #0
 8005360:	603b      	str	r3, [r7, #0]
 8005362:	4b20      	ldr	r3, [pc, #128]	@ (80053e4 <HAL_PWREx_EnableOverDrive+0x90>)
 8005364:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005366:	4a1f      	ldr	r2, [pc, #124]	@ (80053e4 <HAL_PWREx_EnableOverDrive+0x90>)
 8005368:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800536c:	6413      	str	r3, [r2, #64]	@ 0x40
 800536e:	4b1d      	ldr	r3, [pc, #116]	@ (80053e4 <HAL_PWREx_EnableOverDrive+0x90>)
 8005370:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005372:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005376:	603b      	str	r3, [r7, #0]
 8005378:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 800537a:	4b1b      	ldr	r3, [pc, #108]	@ (80053e8 <HAL_PWREx_EnableOverDrive+0x94>)
 800537c:	2201      	movs	r2, #1
 800537e:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005380:	f7fd fb62 	bl	8002a48 <HAL_GetTick>
 8005384:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005386:	e009      	b.n	800539c <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005388:	f7fd fb5e 	bl	8002a48 <HAL_GetTick>
 800538c:	4602      	mov	r2, r0
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	1ad3      	subs	r3, r2, r3
 8005392:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005396:	d901      	bls.n	800539c <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8005398:	2303      	movs	r3, #3
 800539a:	e01f      	b.n	80053dc <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800539c:	4b13      	ldr	r3, [pc, #76]	@ (80053ec <HAL_PWREx_EnableOverDrive+0x98>)
 800539e:	685b      	ldr	r3, [r3, #4]
 80053a0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80053a4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80053a8:	d1ee      	bne.n	8005388 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80053aa:	4b11      	ldr	r3, [pc, #68]	@ (80053f0 <HAL_PWREx_EnableOverDrive+0x9c>)
 80053ac:	2201      	movs	r2, #1
 80053ae:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80053b0:	f7fd fb4a 	bl	8002a48 <HAL_GetTick>
 80053b4:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053b6:	e009      	b.n	80053cc <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80053b8:	f7fd fb46 	bl	8002a48 <HAL_GetTick>
 80053bc:	4602      	mov	r2, r0
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	1ad3      	subs	r3, r2, r3
 80053c2:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80053c6:	d901      	bls.n	80053cc <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 80053c8:	2303      	movs	r3, #3
 80053ca:	e007      	b.n	80053dc <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053cc:	4b07      	ldr	r3, [pc, #28]	@ (80053ec <HAL_PWREx_EnableOverDrive+0x98>)
 80053ce:	685b      	ldr	r3, [r3, #4]
 80053d0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80053d4:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80053d8:	d1ee      	bne.n	80053b8 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 80053da:	2300      	movs	r3, #0
}
 80053dc:	4618      	mov	r0, r3
 80053de:	3708      	adds	r7, #8
 80053e0:	46bd      	mov	sp, r7
 80053e2:	bd80      	pop	{r7, pc}
 80053e4:	40023800 	.word	0x40023800
 80053e8:	420e0040 	.word	0x420e0040
 80053ec:	40007000 	.word	0x40007000
 80053f0:	420e0044 	.word	0x420e0044

080053f4 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80053f4:	b580      	push	{r7, lr}
 80053f6:	b084      	sub	sp, #16
 80053f8:	af00      	add	r7, sp, #0
 80053fa:	6078      	str	r0, [r7, #4]
 80053fc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	2b00      	cmp	r3, #0
 8005402:	d101      	bne.n	8005408 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8005404:	2301      	movs	r3, #1
 8005406:	e0cc      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005408:	4b68      	ldr	r3, [pc, #416]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	f003 030f 	and.w	r3, r3, #15
 8005410:	683a      	ldr	r2, [r7, #0]
 8005412:	429a      	cmp	r2, r3
 8005414:	d90c      	bls.n	8005430 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005416:	4b65      	ldr	r3, [pc, #404]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005418:	683a      	ldr	r2, [r7, #0]
 800541a:	b2d2      	uxtb	r2, r2
 800541c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800541e:	4b63      	ldr	r3, [pc, #396]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	f003 030f 	and.w	r3, r3, #15
 8005426:	683a      	ldr	r2, [r7, #0]
 8005428:	429a      	cmp	r2, r3
 800542a:	d001      	beq.n	8005430 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 800542c:	2301      	movs	r3, #1
 800542e:	e0b8      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	f003 0302 	and.w	r3, r3, #2
 8005438:	2b00      	cmp	r3, #0
 800543a:	d020      	beq.n	800547e <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	f003 0304 	and.w	r3, r3, #4
 8005444:	2b00      	cmp	r3, #0
 8005446:	d005      	beq.n	8005454 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005448:	4b59      	ldr	r3, [pc, #356]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800544a:	689b      	ldr	r3, [r3, #8]
 800544c:	4a58      	ldr	r2, [pc, #352]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800544e:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8005452:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	f003 0308 	and.w	r3, r3, #8
 800545c:	2b00      	cmp	r3, #0
 800545e:	d005      	beq.n	800546c <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005460:	4b53      	ldr	r3, [pc, #332]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005462:	689b      	ldr	r3, [r3, #8]
 8005464:	4a52      	ldr	r2, [pc, #328]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005466:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800546a:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800546c:	4b50      	ldr	r3, [pc, #320]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800546e:	689b      	ldr	r3, [r3, #8]
 8005470:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	689b      	ldr	r3, [r3, #8]
 8005478:	494d      	ldr	r1, [pc, #308]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800547a:	4313      	orrs	r3, r2
 800547c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800547e:	687b      	ldr	r3, [r7, #4]
 8005480:	681b      	ldr	r3, [r3, #0]
 8005482:	f003 0301 	and.w	r3, r3, #1
 8005486:	2b00      	cmp	r3, #0
 8005488:	d044      	beq.n	8005514 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	685b      	ldr	r3, [r3, #4]
 800548e:	2b01      	cmp	r3, #1
 8005490:	d107      	bne.n	80054a2 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005492:	4b47      	ldr	r3, [pc, #284]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005494:	681b      	ldr	r3, [r3, #0]
 8005496:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800549a:	2b00      	cmp	r3, #0
 800549c:	d119      	bne.n	80054d2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800549e:	2301      	movs	r3, #1
 80054a0:	e07f      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	685b      	ldr	r3, [r3, #4]
 80054a6:	2b02      	cmp	r3, #2
 80054a8:	d003      	beq.n	80054b2 <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80054ae:	2b03      	cmp	r3, #3
 80054b0:	d107      	bne.n	80054c2 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80054b2:	4b3f      	ldr	r3, [pc, #252]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054b4:	681b      	ldr	r3, [r3, #0]
 80054b6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80054ba:	2b00      	cmp	r3, #0
 80054bc:	d109      	bne.n	80054d2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80054be:	2301      	movs	r3, #1
 80054c0:	e06f      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80054c2:	4b3b      	ldr	r3, [pc, #236]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054c4:	681b      	ldr	r3, [r3, #0]
 80054c6:	f003 0302 	and.w	r3, r3, #2
 80054ca:	2b00      	cmp	r3, #0
 80054cc:	d101      	bne.n	80054d2 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80054ce:	2301      	movs	r3, #1
 80054d0:	e067      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80054d2:	4b37      	ldr	r3, [pc, #220]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054d4:	689b      	ldr	r3, [r3, #8]
 80054d6:	f023 0203 	bic.w	r2, r3, #3
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	685b      	ldr	r3, [r3, #4]
 80054de:	4934      	ldr	r1, [pc, #208]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 80054e0:	4313      	orrs	r3, r2
 80054e2:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80054e4:	f7fd fab0 	bl	8002a48 <HAL_GetTick>
 80054e8:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80054ea:	e00a      	b.n	8005502 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80054ec:	f7fd faac 	bl	8002a48 <HAL_GetTick>
 80054f0:	4602      	mov	r2, r0
 80054f2:	68fb      	ldr	r3, [r7, #12]
 80054f4:	1ad3      	subs	r3, r2, r3
 80054f6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80054fa:	4293      	cmp	r3, r2
 80054fc:	d901      	bls.n	8005502 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 80054fe:	2303      	movs	r3, #3
 8005500:	e04f      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005502:	4b2b      	ldr	r3, [pc, #172]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005504:	689b      	ldr	r3, [r3, #8]
 8005506:	f003 020c 	and.w	r2, r3, #12
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	685b      	ldr	r3, [r3, #4]
 800550e:	009b      	lsls	r3, r3, #2
 8005510:	429a      	cmp	r2, r3
 8005512:	d1eb      	bne.n	80054ec <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8005514:	4b25      	ldr	r3, [pc, #148]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	f003 030f 	and.w	r3, r3, #15
 800551c:	683a      	ldr	r2, [r7, #0]
 800551e:	429a      	cmp	r2, r3
 8005520:	d20c      	bcs.n	800553c <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005522:	4b22      	ldr	r3, [pc, #136]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 8005524:	683a      	ldr	r2, [r7, #0]
 8005526:	b2d2      	uxtb	r2, r2
 8005528:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800552a:	4b20      	ldr	r3, [pc, #128]	@ (80055ac <HAL_RCC_ClockConfig+0x1b8>)
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	f003 030f 	and.w	r3, r3, #15
 8005532:	683a      	ldr	r2, [r7, #0]
 8005534:	429a      	cmp	r2, r3
 8005536:	d001      	beq.n	800553c <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8005538:	2301      	movs	r3, #1
 800553a:	e032      	b.n	80055a2 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	681b      	ldr	r3, [r3, #0]
 8005540:	f003 0304 	and.w	r3, r3, #4
 8005544:	2b00      	cmp	r3, #0
 8005546:	d008      	beq.n	800555a <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005548:	4b19      	ldr	r3, [pc, #100]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 800554a:	689b      	ldr	r3, [r3, #8]
 800554c:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	68db      	ldr	r3, [r3, #12]
 8005554:	4916      	ldr	r1, [pc, #88]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005556:	4313      	orrs	r3, r2
 8005558:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	f003 0308 	and.w	r3, r3, #8
 8005562:	2b00      	cmp	r3, #0
 8005564:	d009      	beq.n	800557a <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005566:	4b12      	ldr	r3, [pc, #72]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005568:	689b      	ldr	r3, [r3, #8]
 800556a:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	691b      	ldr	r3, [r3, #16]
 8005572:	00db      	lsls	r3, r3, #3
 8005574:	490e      	ldr	r1, [pc, #56]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005576:	4313      	orrs	r3, r2
 8005578:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800557a:	f000 f841 	bl	8005600 <HAL_RCC_GetSysClockFreq>
 800557e:	4602      	mov	r2, r0
 8005580:	4b0b      	ldr	r3, [pc, #44]	@ (80055b0 <HAL_RCC_ClockConfig+0x1bc>)
 8005582:	689b      	ldr	r3, [r3, #8]
 8005584:	091b      	lsrs	r3, r3, #4
 8005586:	f003 030f 	and.w	r3, r3, #15
 800558a:	490a      	ldr	r1, [pc, #40]	@ (80055b4 <HAL_RCC_ClockConfig+0x1c0>)
 800558c:	5ccb      	ldrb	r3, [r1, r3]
 800558e:	fa22 f303 	lsr.w	r3, r2, r3
 8005592:	4a09      	ldr	r2, [pc, #36]	@ (80055b8 <HAL_RCC_ClockConfig+0x1c4>)
 8005594:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 8005596:	4b09      	ldr	r3, [pc, #36]	@ (80055bc <HAL_RCC_ClockConfig+0x1c8>)
 8005598:	681b      	ldr	r3, [r3, #0]
 800559a:	4618      	mov	r0, r3
 800559c:	f7fd fa10 	bl	80029c0 <HAL_InitTick>

  return HAL_OK;
 80055a0:	2300      	movs	r3, #0
}
 80055a2:	4618      	mov	r0, r3
 80055a4:	3710      	adds	r7, #16
 80055a6:	46bd      	mov	sp, r7
 80055a8:	bd80      	pop	{r7, pc}
 80055aa:	bf00      	nop
 80055ac:	40023c00 	.word	0x40023c00
 80055b0:	40023800 	.word	0x40023800
 80055b4:	08025efc 	.word	0x08025efc
 80055b8:	20000008 	.word	0x20000008
 80055bc:	20000014 	.word	0x20000014

080055c0 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80055c0:	b480      	push	{r7}
 80055c2:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80055c4:	4b03      	ldr	r3, [pc, #12]	@ (80055d4 <HAL_RCC_GetHCLKFreq+0x14>)
 80055c6:	681b      	ldr	r3, [r3, #0]
}
 80055c8:	4618      	mov	r0, r3
 80055ca:	46bd      	mov	sp, r7
 80055cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055d0:	4770      	bx	lr
 80055d2:	bf00      	nop
 80055d4:	20000008 	.word	0x20000008

080055d8 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80055d8:	b580      	push	{r7, lr}
 80055da:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80055dc:	f7ff fff0 	bl	80055c0 <HAL_RCC_GetHCLKFreq>
 80055e0:	4602      	mov	r2, r0
 80055e2:	4b05      	ldr	r3, [pc, #20]	@ (80055f8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80055e4:	689b      	ldr	r3, [r3, #8]
 80055e6:	0a9b      	lsrs	r3, r3, #10
 80055e8:	f003 0307 	and.w	r3, r3, #7
 80055ec:	4903      	ldr	r1, [pc, #12]	@ (80055fc <HAL_RCC_GetPCLK1Freq+0x24>)
 80055ee:	5ccb      	ldrb	r3, [r1, r3]
 80055f0:	fa22 f303 	lsr.w	r3, r2, r3
}
 80055f4:	4618      	mov	r0, r3
 80055f6:	bd80      	pop	{r7, pc}
 80055f8:	40023800 	.word	0x40023800
 80055fc:	08025f0c 	.word	0x08025f0c

08005600 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005600:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005604:	b0ae      	sub	sp, #184	@ 0xb8
 8005606:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8005608:	2300      	movs	r3, #0
 800560a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 800560e:	2300      	movs	r3, #0
 8005610:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 8005614:	2300      	movs	r3, #0
 8005616:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 800561a:	2300      	movs	r3, #0
 800561c:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 8005620:	2300      	movs	r3, #0
 8005622:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005626:	4bcb      	ldr	r3, [pc, #812]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 8005628:	689b      	ldr	r3, [r3, #8]
 800562a:	f003 030c 	and.w	r3, r3, #12
 800562e:	2b0c      	cmp	r3, #12
 8005630:	f200 8206 	bhi.w	8005a40 <HAL_RCC_GetSysClockFreq+0x440>
 8005634:	a201      	add	r2, pc, #4	@ (adr r2, 800563c <HAL_RCC_GetSysClockFreq+0x3c>)
 8005636:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800563a:	bf00      	nop
 800563c:	08005671 	.word	0x08005671
 8005640:	08005a41 	.word	0x08005a41
 8005644:	08005a41 	.word	0x08005a41
 8005648:	08005a41 	.word	0x08005a41
 800564c:	08005679 	.word	0x08005679
 8005650:	08005a41 	.word	0x08005a41
 8005654:	08005a41 	.word	0x08005a41
 8005658:	08005a41 	.word	0x08005a41
 800565c:	08005681 	.word	0x08005681
 8005660:	08005a41 	.word	0x08005a41
 8005664:	08005a41 	.word	0x08005a41
 8005668:	08005a41 	.word	0x08005a41
 800566c:	08005871 	.word	0x08005871
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8005670:	4bb9      	ldr	r3, [pc, #740]	@ (8005958 <HAL_RCC_GetSysClockFreq+0x358>)
 8005672:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005676:	e1e7      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8005678:	4bb8      	ldr	r3, [pc, #736]	@ (800595c <HAL_RCC_GetSysClockFreq+0x35c>)
 800567a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800567e:	e1e3      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005680:	4bb4      	ldr	r3, [pc, #720]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 8005682:	685b      	ldr	r3, [r3, #4]
 8005684:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005688:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800568c:	4bb1      	ldr	r3, [pc, #708]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800568e:	685b      	ldr	r3, [r3, #4]
 8005690:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005694:	2b00      	cmp	r3, #0
 8005696:	d071      	beq.n	800577c <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005698:	4bae      	ldr	r3, [pc, #696]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800569a:	685b      	ldr	r3, [r3, #4]
 800569c:	099b      	lsrs	r3, r3, #6
 800569e:	2200      	movs	r2, #0
 80056a0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80056a4:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80056a8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80056ac:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80056b0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80056b4:	2300      	movs	r3, #0
 80056b6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80056ba:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80056be:	4622      	mov	r2, r4
 80056c0:	462b      	mov	r3, r5
 80056c2:	f04f 0000 	mov.w	r0, #0
 80056c6:	f04f 0100 	mov.w	r1, #0
 80056ca:	0159      	lsls	r1, r3, #5
 80056cc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80056d0:	0150      	lsls	r0, r2, #5
 80056d2:	4602      	mov	r2, r0
 80056d4:	460b      	mov	r3, r1
 80056d6:	4621      	mov	r1, r4
 80056d8:	1a51      	subs	r1, r2, r1
 80056da:	6439      	str	r1, [r7, #64]	@ 0x40
 80056dc:	4629      	mov	r1, r5
 80056de:	eb63 0301 	sbc.w	r3, r3, r1
 80056e2:	647b      	str	r3, [r7, #68]	@ 0x44
 80056e4:	f04f 0200 	mov.w	r2, #0
 80056e8:	f04f 0300 	mov.w	r3, #0
 80056ec:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 80056f0:	4649      	mov	r1, r9
 80056f2:	018b      	lsls	r3, r1, #6
 80056f4:	4641      	mov	r1, r8
 80056f6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80056fa:	4641      	mov	r1, r8
 80056fc:	018a      	lsls	r2, r1, #6
 80056fe:	4641      	mov	r1, r8
 8005700:	1a51      	subs	r1, r2, r1
 8005702:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005704:	4649      	mov	r1, r9
 8005706:	eb63 0301 	sbc.w	r3, r3, r1
 800570a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800570c:	f04f 0200 	mov.w	r2, #0
 8005710:	f04f 0300 	mov.w	r3, #0
 8005714:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8005718:	4649      	mov	r1, r9
 800571a:	00cb      	lsls	r3, r1, #3
 800571c:	4641      	mov	r1, r8
 800571e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8005722:	4641      	mov	r1, r8
 8005724:	00ca      	lsls	r2, r1, #3
 8005726:	4610      	mov	r0, r2
 8005728:	4619      	mov	r1, r3
 800572a:	4603      	mov	r3, r0
 800572c:	4622      	mov	r2, r4
 800572e:	189b      	adds	r3, r3, r2
 8005730:	633b      	str	r3, [r7, #48]	@ 0x30
 8005732:	462b      	mov	r3, r5
 8005734:	460a      	mov	r2, r1
 8005736:	eb42 0303 	adc.w	r3, r2, r3
 800573a:	637b      	str	r3, [r7, #52]	@ 0x34
 800573c:	f04f 0200 	mov.w	r2, #0
 8005740:	f04f 0300 	mov.w	r3, #0
 8005744:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8005748:	4629      	mov	r1, r5
 800574a:	024b      	lsls	r3, r1, #9
 800574c:	4621      	mov	r1, r4
 800574e:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005752:	4621      	mov	r1, r4
 8005754:	024a      	lsls	r2, r1, #9
 8005756:	4610      	mov	r0, r2
 8005758:	4619      	mov	r1, r3
 800575a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800575e:	2200      	movs	r2, #0
 8005760:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005764:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005768:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800576c:	f7fb fa46 	bl	8000bfc <__aeabi_uldivmod>
 8005770:	4602      	mov	r2, r0
 8005772:	460b      	mov	r3, r1
 8005774:	4613      	mov	r3, r2
 8005776:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800577a:	e067      	b.n	800584c <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800577c:	4b75      	ldr	r3, [pc, #468]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800577e:	685b      	ldr	r3, [r3, #4]
 8005780:	099b      	lsrs	r3, r3, #6
 8005782:	2200      	movs	r2, #0
 8005784:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8005788:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 800578c:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8005790:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005794:	67bb      	str	r3, [r7, #120]	@ 0x78
 8005796:	2300      	movs	r3, #0
 8005798:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800579a:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 800579e:	4622      	mov	r2, r4
 80057a0:	462b      	mov	r3, r5
 80057a2:	f04f 0000 	mov.w	r0, #0
 80057a6:	f04f 0100 	mov.w	r1, #0
 80057aa:	0159      	lsls	r1, r3, #5
 80057ac:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80057b0:	0150      	lsls	r0, r2, #5
 80057b2:	4602      	mov	r2, r0
 80057b4:	460b      	mov	r3, r1
 80057b6:	4621      	mov	r1, r4
 80057b8:	1a51      	subs	r1, r2, r1
 80057ba:	62b9      	str	r1, [r7, #40]	@ 0x28
 80057bc:	4629      	mov	r1, r5
 80057be:	eb63 0301 	sbc.w	r3, r3, r1
 80057c2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80057c4:	f04f 0200 	mov.w	r2, #0
 80057c8:	f04f 0300 	mov.w	r3, #0
 80057cc:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 80057d0:	4649      	mov	r1, r9
 80057d2:	018b      	lsls	r3, r1, #6
 80057d4:	4641      	mov	r1, r8
 80057d6:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80057da:	4641      	mov	r1, r8
 80057dc:	018a      	lsls	r2, r1, #6
 80057de:	4641      	mov	r1, r8
 80057e0:	ebb2 0a01 	subs.w	sl, r2, r1
 80057e4:	4649      	mov	r1, r9
 80057e6:	eb63 0b01 	sbc.w	fp, r3, r1
 80057ea:	f04f 0200 	mov.w	r2, #0
 80057ee:	f04f 0300 	mov.w	r3, #0
 80057f2:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80057f6:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80057fa:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80057fe:	4692      	mov	sl, r2
 8005800:	469b      	mov	fp, r3
 8005802:	4623      	mov	r3, r4
 8005804:	eb1a 0303 	adds.w	r3, sl, r3
 8005808:	623b      	str	r3, [r7, #32]
 800580a:	462b      	mov	r3, r5
 800580c:	eb4b 0303 	adc.w	r3, fp, r3
 8005810:	627b      	str	r3, [r7, #36]	@ 0x24
 8005812:	f04f 0200 	mov.w	r2, #0
 8005816:	f04f 0300 	mov.w	r3, #0
 800581a:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 800581e:	4629      	mov	r1, r5
 8005820:	028b      	lsls	r3, r1, #10
 8005822:	4621      	mov	r1, r4
 8005824:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005828:	4621      	mov	r1, r4
 800582a:	028a      	lsls	r2, r1, #10
 800582c:	4610      	mov	r0, r2
 800582e:	4619      	mov	r1, r3
 8005830:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005834:	2200      	movs	r2, #0
 8005836:	673b      	str	r3, [r7, #112]	@ 0x70
 8005838:	677a      	str	r2, [r7, #116]	@ 0x74
 800583a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800583e:	f7fb f9dd 	bl	8000bfc <__aeabi_uldivmod>
 8005842:	4602      	mov	r2, r0
 8005844:	460b      	mov	r3, r1
 8005846:	4613      	mov	r3, r2
 8005848:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 800584c:	4b41      	ldr	r3, [pc, #260]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800584e:	685b      	ldr	r3, [r3, #4]
 8005850:	0c1b      	lsrs	r3, r3, #16
 8005852:	f003 0303 	and.w	r3, r3, #3
 8005856:	3301      	adds	r3, #1
 8005858:	005b      	lsls	r3, r3, #1
 800585a:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 800585e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005862:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8005866:	fbb2 f3f3 	udiv	r3, r2, r3
 800586a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800586e:	e0eb      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005870:	4b38      	ldr	r3, [pc, #224]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 8005872:	685b      	ldr	r3, [r3, #4]
 8005874:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005878:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800587c:	4b35      	ldr	r3, [pc, #212]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800587e:	685b      	ldr	r3, [r3, #4]
 8005880:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005884:	2b00      	cmp	r3, #0
 8005886:	d06b      	beq.n	8005960 <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005888:	4b32      	ldr	r3, [pc, #200]	@ (8005954 <HAL_RCC_GetSysClockFreq+0x354>)
 800588a:	685b      	ldr	r3, [r3, #4]
 800588c:	099b      	lsrs	r3, r3, #6
 800588e:	2200      	movs	r2, #0
 8005890:	66bb      	str	r3, [r7, #104]	@ 0x68
 8005892:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8005894:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8005896:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800589a:	663b      	str	r3, [r7, #96]	@ 0x60
 800589c:	2300      	movs	r3, #0
 800589e:	667b      	str	r3, [r7, #100]	@ 0x64
 80058a0:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80058a4:	4622      	mov	r2, r4
 80058a6:	462b      	mov	r3, r5
 80058a8:	f04f 0000 	mov.w	r0, #0
 80058ac:	f04f 0100 	mov.w	r1, #0
 80058b0:	0159      	lsls	r1, r3, #5
 80058b2:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80058b6:	0150      	lsls	r0, r2, #5
 80058b8:	4602      	mov	r2, r0
 80058ba:	460b      	mov	r3, r1
 80058bc:	4621      	mov	r1, r4
 80058be:	1a51      	subs	r1, r2, r1
 80058c0:	61b9      	str	r1, [r7, #24]
 80058c2:	4629      	mov	r1, r5
 80058c4:	eb63 0301 	sbc.w	r3, r3, r1
 80058c8:	61fb      	str	r3, [r7, #28]
 80058ca:	f04f 0200 	mov.w	r2, #0
 80058ce:	f04f 0300 	mov.w	r3, #0
 80058d2:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 80058d6:	4659      	mov	r1, fp
 80058d8:	018b      	lsls	r3, r1, #6
 80058da:	4651      	mov	r1, sl
 80058dc:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80058e0:	4651      	mov	r1, sl
 80058e2:	018a      	lsls	r2, r1, #6
 80058e4:	4651      	mov	r1, sl
 80058e6:	ebb2 0801 	subs.w	r8, r2, r1
 80058ea:	4659      	mov	r1, fp
 80058ec:	eb63 0901 	sbc.w	r9, r3, r1
 80058f0:	f04f 0200 	mov.w	r2, #0
 80058f4:	f04f 0300 	mov.w	r3, #0
 80058f8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80058fc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005900:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8005904:	4690      	mov	r8, r2
 8005906:	4699      	mov	r9, r3
 8005908:	4623      	mov	r3, r4
 800590a:	eb18 0303 	adds.w	r3, r8, r3
 800590e:	613b      	str	r3, [r7, #16]
 8005910:	462b      	mov	r3, r5
 8005912:	eb49 0303 	adc.w	r3, r9, r3
 8005916:	617b      	str	r3, [r7, #20]
 8005918:	f04f 0200 	mov.w	r2, #0
 800591c:	f04f 0300 	mov.w	r3, #0
 8005920:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8005924:	4629      	mov	r1, r5
 8005926:	024b      	lsls	r3, r1, #9
 8005928:	4621      	mov	r1, r4
 800592a:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800592e:	4621      	mov	r1, r4
 8005930:	024a      	lsls	r2, r1, #9
 8005932:	4610      	mov	r0, r2
 8005934:	4619      	mov	r1, r3
 8005936:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800593a:	2200      	movs	r2, #0
 800593c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800593e:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005940:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8005944:	f7fb f95a 	bl	8000bfc <__aeabi_uldivmod>
 8005948:	4602      	mov	r2, r0
 800594a:	460b      	mov	r3, r1
 800594c:	4613      	mov	r3, r2
 800594e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005952:	e065      	b.n	8005a20 <HAL_RCC_GetSysClockFreq+0x420>
 8005954:	40023800 	.word	0x40023800
 8005958:	00f42400 	.word	0x00f42400
 800595c:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005960:	4b3d      	ldr	r3, [pc, #244]	@ (8005a58 <HAL_RCC_GetSysClockFreq+0x458>)
 8005962:	685b      	ldr	r3, [r3, #4]
 8005964:	099b      	lsrs	r3, r3, #6
 8005966:	2200      	movs	r2, #0
 8005968:	4618      	mov	r0, r3
 800596a:	4611      	mov	r1, r2
 800596c:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005970:	653b      	str	r3, [r7, #80]	@ 0x50
 8005972:	2300      	movs	r3, #0
 8005974:	657b      	str	r3, [r7, #84]	@ 0x54
 8005976:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 800597a:	4642      	mov	r2, r8
 800597c:	464b      	mov	r3, r9
 800597e:	f04f 0000 	mov.w	r0, #0
 8005982:	f04f 0100 	mov.w	r1, #0
 8005986:	0159      	lsls	r1, r3, #5
 8005988:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800598c:	0150      	lsls	r0, r2, #5
 800598e:	4602      	mov	r2, r0
 8005990:	460b      	mov	r3, r1
 8005992:	4641      	mov	r1, r8
 8005994:	1a51      	subs	r1, r2, r1
 8005996:	60b9      	str	r1, [r7, #8]
 8005998:	4649      	mov	r1, r9
 800599a:	eb63 0301 	sbc.w	r3, r3, r1
 800599e:	60fb      	str	r3, [r7, #12]
 80059a0:	f04f 0200 	mov.w	r2, #0
 80059a4:	f04f 0300 	mov.w	r3, #0
 80059a8:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 80059ac:	4659      	mov	r1, fp
 80059ae:	018b      	lsls	r3, r1, #6
 80059b0:	4651      	mov	r1, sl
 80059b2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80059b6:	4651      	mov	r1, sl
 80059b8:	018a      	lsls	r2, r1, #6
 80059ba:	4651      	mov	r1, sl
 80059bc:	1a54      	subs	r4, r2, r1
 80059be:	4659      	mov	r1, fp
 80059c0:	eb63 0501 	sbc.w	r5, r3, r1
 80059c4:	f04f 0200 	mov.w	r2, #0
 80059c8:	f04f 0300 	mov.w	r3, #0
 80059cc:	00eb      	lsls	r3, r5, #3
 80059ce:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80059d2:	00e2      	lsls	r2, r4, #3
 80059d4:	4614      	mov	r4, r2
 80059d6:	461d      	mov	r5, r3
 80059d8:	4643      	mov	r3, r8
 80059da:	18e3      	adds	r3, r4, r3
 80059dc:	603b      	str	r3, [r7, #0]
 80059de:	464b      	mov	r3, r9
 80059e0:	eb45 0303 	adc.w	r3, r5, r3
 80059e4:	607b      	str	r3, [r7, #4]
 80059e6:	f04f 0200 	mov.w	r2, #0
 80059ea:	f04f 0300 	mov.w	r3, #0
 80059ee:	e9d7 4500 	ldrd	r4, r5, [r7]
 80059f2:	4629      	mov	r1, r5
 80059f4:	028b      	lsls	r3, r1, #10
 80059f6:	4621      	mov	r1, r4
 80059f8:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80059fc:	4621      	mov	r1, r4
 80059fe:	028a      	lsls	r2, r1, #10
 8005a00:	4610      	mov	r0, r2
 8005a02:	4619      	mov	r1, r3
 8005a04:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005a08:	2200      	movs	r2, #0
 8005a0a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005a0c:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005a0e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005a12:	f7fb f8f3 	bl	8000bfc <__aeabi_uldivmod>
 8005a16:	4602      	mov	r2, r0
 8005a18:	460b      	mov	r3, r1
 8005a1a:	4613      	mov	r3, r2
 8005a1c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 8005a20:	4b0d      	ldr	r3, [pc, #52]	@ (8005a58 <HAL_RCC_GetSysClockFreq+0x458>)
 8005a22:	685b      	ldr	r3, [r3, #4]
 8005a24:	0f1b      	lsrs	r3, r3, #28
 8005a26:	f003 0307 	and.w	r3, r3, #7
 8005a2a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 8005a2e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005a32:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005a36:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a3a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005a3e:	e003      	b.n	8005a48 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005a40:	4b06      	ldr	r3, [pc, #24]	@ (8005a5c <HAL_RCC_GetSysClockFreq+0x45c>)
 8005a42:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005a46:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005a48:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 8005a4c:	4618      	mov	r0, r3
 8005a4e:	37b8      	adds	r7, #184	@ 0xb8
 8005a50:	46bd      	mov	sp, r7
 8005a52:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005a56:	bf00      	nop
 8005a58:	40023800 	.word	0x40023800
 8005a5c:	00f42400 	.word	0x00f42400

08005a60 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005a60:	b580      	push	{r7, lr}
 8005a62:	b086      	sub	sp, #24
 8005a64:	af00      	add	r7, sp, #0
 8005a66:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005a68:	687b      	ldr	r3, [r7, #4]
 8005a6a:	2b00      	cmp	r3, #0
 8005a6c:	d101      	bne.n	8005a72 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005a6e:	2301      	movs	r3, #1
 8005a70:	e28d      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005a72:	687b      	ldr	r3, [r7, #4]
 8005a74:	681b      	ldr	r3, [r3, #0]
 8005a76:	f003 0301 	and.w	r3, r3, #1
 8005a7a:	2b00      	cmp	r3, #0
 8005a7c:	f000 8083 	beq.w	8005b86 <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 8005a80:	4b94      	ldr	r3, [pc, #592]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005a82:	689b      	ldr	r3, [r3, #8]
 8005a84:	f003 030c 	and.w	r3, r3, #12
 8005a88:	2b04      	cmp	r3, #4
 8005a8a:	d019      	beq.n	8005ac0 <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005a8c:	4b91      	ldr	r3, [pc, #580]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005a8e:	689b      	ldr	r3, [r3, #8]
 8005a90:	f003 030c 	and.w	r3, r3, #12
        || \
 8005a94:	2b08      	cmp	r3, #8
 8005a96:	d106      	bne.n	8005aa6 <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005a98:	4b8e      	ldr	r3, [pc, #568]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005a9a:	685b      	ldr	r3, [r3, #4]
 8005a9c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005aa0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005aa4:	d00c      	beq.n	8005ac0 <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005aa6:	4b8b      	ldr	r3, [pc, #556]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005aa8:	689b      	ldr	r3, [r3, #8]
 8005aaa:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005aae:	2b0c      	cmp	r3, #12
 8005ab0:	d112      	bne.n	8005ad8 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005ab2:	4b88      	ldr	r3, [pc, #544]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ab4:	685b      	ldr	r3, [r3, #4]
 8005ab6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005aba:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005abe:	d10b      	bne.n	8005ad8 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005ac0:	4b84      	ldr	r3, [pc, #528]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005ac8:	2b00      	cmp	r3, #0
 8005aca:	d05b      	beq.n	8005b84 <HAL_RCC_OscConfig+0x124>
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	685b      	ldr	r3, [r3, #4]
 8005ad0:	2b00      	cmp	r3, #0
 8005ad2:	d157      	bne.n	8005b84 <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8005ad4:	2301      	movs	r3, #1
 8005ad6:	e25a      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	685b      	ldr	r3, [r3, #4]
 8005adc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005ae0:	d106      	bne.n	8005af0 <HAL_RCC_OscConfig+0x90>
 8005ae2:	4b7c      	ldr	r3, [pc, #496]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	4a7b      	ldr	r2, [pc, #492]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ae8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005aec:	6013      	str	r3, [r2, #0]
 8005aee:	e01d      	b.n	8005b2c <HAL_RCC_OscConfig+0xcc>
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	685b      	ldr	r3, [r3, #4]
 8005af4:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005af8:	d10c      	bne.n	8005b14 <HAL_RCC_OscConfig+0xb4>
 8005afa:	4b76      	ldr	r3, [pc, #472]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	4a75      	ldr	r2, [pc, #468]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b00:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005b04:	6013      	str	r3, [r2, #0]
 8005b06:	4b73      	ldr	r3, [pc, #460]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b08:	681b      	ldr	r3, [r3, #0]
 8005b0a:	4a72      	ldr	r2, [pc, #456]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b0c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005b10:	6013      	str	r3, [r2, #0]
 8005b12:	e00b      	b.n	8005b2c <HAL_RCC_OscConfig+0xcc>
 8005b14:	4b6f      	ldr	r3, [pc, #444]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b16:	681b      	ldr	r3, [r3, #0]
 8005b18:	4a6e      	ldr	r2, [pc, #440]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b1a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005b1e:	6013      	str	r3, [r2, #0]
 8005b20:	4b6c      	ldr	r3, [pc, #432]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	4a6b      	ldr	r2, [pc, #428]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b26:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005b2a:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	685b      	ldr	r3, [r3, #4]
 8005b30:	2b00      	cmp	r3, #0
 8005b32:	d013      	beq.n	8005b5c <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b34:	f7fc ff88 	bl	8002a48 <HAL_GetTick>
 8005b38:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b3a:	e008      	b.n	8005b4e <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005b3c:	f7fc ff84 	bl	8002a48 <HAL_GetTick>
 8005b40:	4602      	mov	r2, r0
 8005b42:	693b      	ldr	r3, [r7, #16]
 8005b44:	1ad3      	subs	r3, r2, r3
 8005b46:	2b64      	cmp	r3, #100	@ 0x64
 8005b48:	d901      	bls.n	8005b4e <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 8005b4a:	2303      	movs	r3, #3
 8005b4c:	e21f      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b4e:	4b61      	ldr	r3, [pc, #388]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b50:	681b      	ldr	r3, [r3, #0]
 8005b52:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005b56:	2b00      	cmp	r3, #0
 8005b58:	d0f0      	beq.n	8005b3c <HAL_RCC_OscConfig+0xdc>
 8005b5a:	e014      	b.n	8005b86 <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b5c:	f7fc ff74 	bl	8002a48 <HAL_GetTick>
 8005b60:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b62:	e008      	b.n	8005b76 <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005b64:	f7fc ff70 	bl	8002a48 <HAL_GetTick>
 8005b68:	4602      	mov	r2, r0
 8005b6a:	693b      	ldr	r3, [r7, #16]
 8005b6c:	1ad3      	subs	r3, r2, r3
 8005b6e:	2b64      	cmp	r3, #100	@ 0x64
 8005b70:	d901      	bls.n	8005b76 <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 8005b72:	2303      	movs	r3, #3
 8005b74:	e20b      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b76:	4b57      	ldr	r3, [pc, #348]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d1f0      	bne.n	8005b64 <HAL_RCC_OscConfig+0x104>
 8005b82:	e000      	b.n	8005b86 <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005b84:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	f003 0302 	and.w	r3, r3, #2
 8005b8e:	2b00      	cmp	r3, #0
 8005b90:	d06f      	beq.n	8005c72 <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 8005b92:	4b50      	ldr	r3, [pc, #320]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005b94:	689b      	ldr	r3, [r3, #8]
 8005b96:	f003 030c 	and.w	r3, r3, #12
 8005b9a:	2b00      	cmp	r3, #0
 8005b9c:	d017      	beq.n	8005bce <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005b9e:	4b4d      	ldr	r3, [pc, #308]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ba0:	689b      	ldr	r3, [r3, #8]
 8005ba2:	f003 030c 	and.w	r3, r3, #12
        || \
 8005ba6:	2b08      	cmp	r3, #8
 8005ba8:	d105      	bne.n	8005bb6 <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005baa:	4b4a      	ldr	r3, [pc, #296]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bac:	685b      	ldr	r3, [r3, #4]
 8005bae:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d00b      	beq.n	8005bce <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bb6:	4b47      	ldr	r3, [pc, #284]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bb8:	689b      	ldr	r3, [r3, #8]
 8005bba:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005bbe:	2b0c      	cmp	r3, #12
 8005bc0:	d11c      	bne.n	8005bfc <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bc2:	4b44      	ldr	r3, [pc, #272]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bc4:	685b      	ldr	r3, [r3, #4]
 8005bc6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005bca:	2b00      	cmp	r3, #0
 8005bcc:	d116      	bne.n	8005bfc <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005bce:	4b41      	ldr	r3, [pc, #260]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	f003 0302 	and.w	r3, r3, #2
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	d005      	beq.n	8005be6 <HAL_RCC_OscConfig+0x186>
 8005bda:	687b      	ldr	r3, [r7, #4]
 8005bdc:	68db      	ldr	r3, [r3, #12]
 8005bde:	2b01      	cmp	r3, #1
 8005be0:	d001      	beq.n	8005be6 <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 8005be2:	2301      	movs	r3, #1
 8005be4:	e1d3      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005be6:	4b3b      	ldr	r3, [pc, #236]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005bee:	687b      	ldr	r3, [r7, #4]
 8005bf0:	691b      	ldr	r3, [r3, #16]
 8005bf2:	00db      	lsls	r3, r3, #3
 8005bf4:	4937      	ldr	r1, [pc, #220]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005bf6:	4313      	orrs	r3, r2
 8005bf8:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005bfa:	e03a      	b.n	8005c72 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	68db      	ldr	r3, [r3, #12]
 8005c00:	2b00      	cmp	r3, #0
 8005c02:	d020      	beq.n	8005c46 <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005c04:	4b34      	ldr	r3, [pc, #208]	@ (8005cd8 <HAL_RCC_OscConfig+0x278>)
 8005c06:	2201      	movs	r2, #1
 8005c08:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c0a:	f7fc ff1d 	bl	8002a48 <HAL_GetTick>
 8005c0e:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c10:	e008      	b.n	8005c24 <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005c12:	f7fc ff19 	bl	8002a48 <HAL_GetTick>
 8005c16:	4602      	mov	r2, r0
 8005c18:	693b      	ldr	r3, [r7, #16]
 8005c1a:	1ad3      	subs	r3, r2, r3
 8005c1c:	2b02      	cmp	r3, #2
 8005c1e:	d901      	bls.n	8005c24 <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 8005c20:	2303      	movs	r3, #3
 8005c22:	e1b4      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c24:	4b2b      	ldr	r3, [pc, #172]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c26:	681b      	ldr	r3, [r3, #0]
 8005c28:	f003 0302 	and.w	r3, r3, #2
 8005c2c:	2b00      	cmp	r3, #0
 8005c2e:	d0f0      	beq.n	8005c12 <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005c30:	4b28      	ldr	r3, [pc, #160]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c32:	681b      	ldr	r3, [r3, #0]
 8005c34:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	691b      	ldr	r3, [r3, #16]
 8005c3c:	00db      	lsls	r3, r3, #3
 8005c3e:	4925      	ldr	r1, [pc, #148]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c40:	4313      	orrs	r3, r2
 8005c42:	600b      	str	r3, [r1, #0]
 8005c44:	e015      	b.n	8005c72 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005c46:	4b24      	ldr	r3, [pc, #144]	@ (8005cd8 <HAL_RCC_OscConfig+0x278>)
 8005c48:	2200      	movs	r2, #0
 8005c4a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c4c:	f7fc fefc 	bl	8002a48 <HAL_GetTick>
 8005c50:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c52:	e008      	b.n	8005c66 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005c54:	f7fc fef8 	bl	8002a48 <HAL_GetTick>
 8005c58:	4602      	mov	r2, r0
 8005c5a:	693b      	ldr	r3, [r7, #16]
 8005c5c:	1ad3      	subs	r3, r2, r3
 8005c5e:	2b02      	cmp	r3, #2
 8005c60:	d901      	bls.n	8005c66 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8005c62:	2303      	movs	r3, #3
 8005c64:	e193      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c66:	4b1b      	ldr	r3, [pc, #108]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005c68:	681b      	ldr	r3, [r3, #0]
 8005c6a:	f003 0302 	and.w	r3, r3, #2
 8005c6e:	2b00      	cmp	r3, #0
 8005c70:	d1f0      	bne.n	8005c54 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	681b      	ldr	r3, [r3, #0]
 8005c76:	f003 0308 	and.w	r3, r3, #8
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	d036      	beq.n	8005cec <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	695b      	ldr	r3, [r3, #20]
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d016      	beq.n	8005cb4 <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005c86:	4b15      	ldr	r3, [pc, #84]	@ (8005cdc <HAL_RCC_OscConfig+0x27c>)
 8005c88:	2201      	movs	r2, #1
 8005c8a:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005c8c:	f7fc fedc 	bl	8002a48 <HAL_GetTick>
 8005c90:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005c92:	e008      	b.n	8005ca6 <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005c94:	f7fc fed8 	bl	8002a48 <HAL_GetTick>
 8005c98:	4602      	mov	r2, r0
 8005c9a:	693b      	ldr	r3, [r7, #16]
 8005c9c:	1ad3      	subs	r3, r2, r3
 8005c9e:	2b02      	cmp	r3, #2
 8005ca0:	d901      	bls.n	8005ca6 <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 8005ca2:	2303      	movs	r3, #3
 8005ca4:	e173      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005ca6:	4b0b      	ldr	r3, [pc, #44]	@ (8005cd4 <HAL_RCC_OscConfig+0x274>)
 8005ca8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005caa:	f003 0302 	and.w	r3, r3, #2
 8005cae:	2b00      	cmp	r3, #0
 8005cb0:	d0f0      	beq.n	8005c94 <HAL_RCC_OscConfig+0x234>
 8005cb2:	e01b      	b.n	8005cec <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005cb4:	4b09      	ldr	r3, [pc, #36]	@ (8005cdc <HAL_RCC_OscConfig+0x27c>)
 8005cb6:	2200      	movs	r2, #0
 8005cb8:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005cba:	f7fc fec5 	bl	8002a48 <HAL_GetTick>
 8005cbe:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005cc0:	e00e      	b.n	8005ce0 <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005cc2:	f7fc fec1 	bl	8002a48 <HAL_GetTick>
 8005cc6:	4602      	mov	r2, r0
 8005cc8:	693b      	ldr	r3, [r7, #16]
 8005cca:	1ad3      	subs	r3, r2, r3
 8005ccc:	2b02      	cmp	r3, #2
 8005cce:	d907      	bls.n	8005ce0 <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8005cd0:	2303      	movs	r3, #3
 8005cd2:	e15c      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
 8005cd4:	40023800 	.word	0x40023800
 8005cd8:	42470000 	.word	0x42470000
 8005cdc:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005ce0:	4b8a      	ldr	r3, [pc, #552]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ce2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005ce4:	f003 0302 	and.w	r3, r3, #2
 8005ce8:	2b00      	cmp	r3, #0
 8005cea:	d1ea      	bne.n	8005cc2 <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	f003 0304 	and.w	r3, r3, #4
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	f000 8097 	beq.w	8005e28 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005cfa:	2300      	movs	r3, #0
 8005cfc:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005cfe:	4b83      	ldr	r3, [pc, #524]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d02:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d10f      	bne.n	8005d2a <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005d0a:	2300      	movs	r3, #0
 8005d0c:	60bb      	str	r3, [r7, #8]
 8005d0e:	4b7f      	ldr	r3, [pc, #508]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d10:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d12:	4a7e      	ldr	r2, [pc, #504]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d14:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005d18:	6413      	str	r3, [r2, #64]	@ 0x40
 8005d1a:	4b7c      	ldr	r3, [pc, #496]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d1c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d1e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d22:	60bb      	str	r3, [r7, #8]
 8005d24:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005d26:	2301      	movs	r3, #1
 8005d28:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d2a:	4b79      	ldr	r3, [pc, #484]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d32:	2b00      	cmp	r3, #0
 8005d34:	d118      	bne.n	8005d68 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005d36:	4b76      	ldr	r3, [pc, #472]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d38:	681b      	ldr	r3, [r3, #0]
 8005d3a:	4a75      	ldr	r2, [pc, #468]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d3c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005d40:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005d42:	f7fc fe81 	bl	8002a48 <HAL_GetTick>
 8005d46:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d48:	e008      	b.n	8005d5c <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005d4a:	f7fc fe7d 	bl	8002a48 <HAL_GetTick>
 8005d4e:	4602      	mov	r2, r0
 8005d50:	693b      	ldr	r3, [r7, #16]
 8005d52:	1ad3      	subs	r3, r2, r3
 8005d54:	2b02      	cmp	r3, #2
 8005d56:	d901      	bls.n	8005d5c <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8005d58:	2303      	movs	r3, #3
 8005d5a:	e118      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d5c:	4b6c      	ldr	r3, [pc, #432]	@ (8005f10 <HAL_RCC_OscConfig+0x4b0>)
 8005d5e:	681b      	ldr	r3, [r3, #0]
 8005d60:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d64:	2b00      	cmp	r3, #0
 8005d66:	d0f0      	beq.n	8005d4a <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005d68:	687b      	ldr	r3, [r7, #4]
 8005d6a:	689b      	ldr	r3, [r3, #8]
 8005d6c:	2b01      	cmp	r3, #1
 8005d6e:	d106      	bne.n	8005d7e <HAL_RCC_OscConfig+0x31e>
 8005d70:	4b66      	ldr	r3, [pc, #408]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d72:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005d74:	4a65      	ldr	r2, [pc, #404]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d76:	f043 0301 	orr.w	r3, r3, #1
 8005d7a:	6713      	str	r3, [r2, #112]	@ 0x70
 8005d7c:	e01c      	b.n	8005db8 <HAL_RCC_OscConfig+0x358>
 8005d7e:	687b      	ldr	r3, [r7, #4]
 8005d80:	689b      	ldr	r3, [r3, #8]
 8005d82:	2b05      	cmp	r3, #5
 8005d84:	d10c      	bne.n	8005da0 <HAL_RCC_OscConfig+0x340>
 8005d86:	4b61      	ldr	r3, [pc, #388]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d88:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005d8a:	4a60      	ldr	r2, [pc, #384]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d8c:	f043 0304 	orr.w	r3, r3, #4
 8005d90:	6713      	str	r3, [r2, #112]	@ 0x70
 8005d92:	4b5e      	ldr	r3, [pc, #376]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d94:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005d96:	4a5d      	ldr	r2, [pc, #372]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005d98:	f043 0301 	orr.w	r3, r3, #1
 8005d9c:	6713      	str	r3, [r2, #112]	@ 0x70
 8005d9e:	e00b      	b.n	8005db8 <HAL_RCC_OscConfig+0x358>
 8005da0:	4b5a      	ldr	r3, [pc, #360]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005da2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005da4:	4a59      	ldr	r2, [pc, #356]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005da6:	f023 0301 	bic.w	r3, r3, #1
 8005daa:	6713      	str	r3, [r2, #112]	@ 0x70
 8005dac:	4b57      	ldr	r3, [pc, #348]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005dae:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005db0:	4a56      	ldr	r2, [pc, #344]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005db2:	f023 0304 	bic.w	r3, r3, #4
 8005db6:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	689b      	ldr	r3, [r3, #8]
 8005dbc:	2b00      	cmp	r3, #0
 8005dbe:	d015      	beq.n	8005dec <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005dc0:	f7fc fe42 	bl	8002a48 <HAL_GetTick>
 8005dc4:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dc6:	e00a      	b.n	8005dde <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005dc8:	f7fc fe3e 	bl	8002a48 <HAL_GetTick>
 8005dcc:	4602      	mov	r2, r0
 8005dce:	693b      	ldr	r3, [r7, #16]
 8005dd0:	1ad3      	subs	r3, r2, r3
 8005dd2:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005dd6:	4293      	cmp	r3, r2
 8005dd8:	d901      	bls.n	8005dde <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8005dda:	2303      	movs	r3, #3
 8005ddc:	e0d7      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dde:	4b4b      	ldr	r3, [pc, #300]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005de0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005de2:	f003 0302 	and.w	r3, r3, #2
 8005de6:	2b00      	cmp	r3, #0
 8005de8:	d0ee      	beq.n	8005dc8 <HAL_RCC_OscConfig+0x368>
 8005dea:	e014      	b.n	8005e16 <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005dec:	f7fc fe2c 	bl	8002a48 <HAL_GetTick>
 8005df0:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005df2:	e00a      	b.n	8005e0a <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005df4:	f7fc fe28 	bl	8002a48 <HAL_GetTick>
 8005df8:	4602      	mov	r2, r0
 8005dfa:	693b      	ldr	r3, [r7, #16]
 8005dfc:	1ad3      	subs	r3, r2, r3
 8005dfe:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005e02:	4293      	cmp	r3, r2
 8005e04:	d901      	bls.n	8005e0a <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8005e06:	2303      	movs	r3, #3
 8005e08:	e0c1      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005e0a:	4b40      	ldr	r3, [pc, #256]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e0c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005e0e:	f003 0302 	and.w	r3, r3, #2
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	d1ee      	bne.n	8005df4 <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8005e16:	7dfb      	ldrb	r3, [r7, #23]
 8005e18:	2b01      	cmp	r3, #1
 8005e1a:	d105      	bne.n	8005e28 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005e1c:	4b3b      	ldr	r3, [pc, #236]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e20:	4a3a      	ldr	r2, [pc, #232]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e22:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005e26:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	699b      	ldr	r3, [r3, #24]
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	f000 80ad 	beq.w	8005f8c <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005e32:	4b36      	ldr	r3, [pc, #216]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e34:	689b      	ldr	r3, [r3, #8]
 8005e36:	f003 030c 	and.w	r3, r3, #12
 8005e3a:	2b08      	cmp	r3, #8
 8005e3c:	d060      	beq.n	8005f00 <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	699b      	ldr	r3, [r3, #24]
 8005e42:	2b02      	cmp	r3, #2
 8005e44:	d145      	bne.n	8005ed2 <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005e46:	4b33      	ldr	r3, [pc, #204]	@ (8005f14 <HAL_RCC_OscConfig+0x4b4>)
 8005e48:	2200      	movs	r2, #0
 8005e4a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005e4c:	f7fc fdfc 	bl	8002a48 <HAL_GetTick>
 8005e50:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e52:	e008      	b.n	8005e66 <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005e54:	f7fc fdf8 	bl	8002a48 <HAL_GetTick>
 8005e58:	4602      	mov	r2, r0
 8005e5a:	693b      	ldr	r3, [r7, #16]
 8005e5c:	1ad3      	subs	r3, r2, r3
 8005e5e:	2b02      	cmp	r3, #2
 8005e60:	d901      	bls.n	8005e66 <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8005e62:	2303      	movs	r3, #3
 8005e64:	e093      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e66:	4b29      	ldr	r3, [pc, #164]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d1f0      	bne.n	8005e54 <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	69da      	ldr	r2, [r3, #28]
 8005e76:	687b      	ldr	r3, [r7, #4]
 8005e78:	6a1b      	ldr	r3, [r3, #32]
 8005e7a:	431a      	orrs	r2, r3
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e80:	019b      	lsls	r3, r3, #6
 8005e82:	431a      	orrs	r2, r3
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005e88:	085b      	lsrs	r3, r3, #1
 8005e8a:	3b01      	subs	r3, #1
 8005e8c:	041b      	lsls	r3, r3, #16
 8005e8e:	431a      	orrs	r2, r3
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005e94:	061b      	lsls	r3, r3, #24
 8005e96:	431a      	orrs	r2, r3
 8005e98:	687b      	ldr	r3, [r7, #4]
 8005e9a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005e9c:	071b      	lsls	r3, r3, #28
 8005e9e:	491b      	ldr	r1, [pc, #108]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ea0:	4313      	orrs	r3, r2
 8005ea2:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005ea4:	4b1b      	ldr	r3, [pc, #108]	@ (8005f14 <HAL_RCC_OscConfig+0x4b4>)
 8005ea6:	2201      	movs	r2, #1
 8005ea8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005eaa:	f7fc fdcd 	bl	8002a48 <HAL_GetTick>
 8005eae:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005eb0:	e008      	b.n	8005ec4 <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005eb2:	f7fc fdc9 	bl	8002a48 <HAL_GetTick>
 8005eb6:	4602      	mov	r2, r0
 8005eb8:	693b      	ldr	r3, [r7, #16]
 8005eba:	1ad3      	subs	r3, r2, r3
 8005ebc:	2b02      	cmp	r3, #2
 8005ebe:	d901      	bls.n	8005ec4 <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8005ec0:	2303      	movs	r3, #3
 8005ec2:	e064      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ec4:	4b11      	ldr	r3, [pc, #68]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ec6:	681b      	ldr	r3, [r3, #0]
 8005ec8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d0f0      	beq.n	8005eb2 <HAL_RCC_OscConfig+0x452>
 8005ed0:	e05c      	b.n	8005f8c <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005ed2:	4b10      	ldr	r3, [pc, #64]	@ (8005f14 <HAL_RCC_OscConfig+0x4b4>)
 8005ed4:	2200      	movs	r2, #0
 8005ed6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005ed8:	f7fc fdb6 	bl	8002a48 <HAL_GetTick>
 8005edc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ede:	e008      	b.n	8005ef2 <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005ee0:	f7fc fdb2 	bl	8002a48 <HAL_GetTick>
 8005ee4:	4602      	mov	r2, r0
 8005ee6:	693b      	ldr	r3, [r7, #16]
 8005ee8:	1ad3      	subs	r3, r2, r3
 8005eea:	2b02      	cmp	r3, #2
 8005eec:	d901      	bls.n	8005ef2 <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8005eee:	2303      	movs	r3, #3
 8005ef0:	e04d      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ef2:	4b06      	ldr	r3, [pc, #24]	@ (8005f0c <HAL_RCC_OscConfig+0x4ac>)
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	d1f0      	bne.n	8005ee0 <HAL_RCC_OscConfig+0x480>
 8005efe:	e045      	b.n	8005f8c <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005f00:	687b      	ldr	r3, [r7, #4]
 8005f02:	699b      	ldr	r3, [r3, #24]
 8005f04:	2b01      	cmp	r3, #1
 8005f06:	d107      	bne.n	8005f18 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8005f08:	2301      	movs	r3, #1
 8005f0a:	e040      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
 8005f0c:	40023800 	.word	0x40023800
 8005f10:	40007000 	.word	0x40007000
 8005f14:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005f18:	4b1f      	ldr	r3, [pc, #124]	@ (8005f98 <HAL_RCC_OscConfig+0x538>)
 8005f1a:	685b      	ldr	r3, [r3, #4]
 8005f1c:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005f1e:	687b      	ldr	r3, [r7, #4]
 8005f20:	699b      	ldr	r3, [r3, #24]
 8005f22:	2b01      	cmp	r3, #1
 8005f24:	d030      	beq.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005f26:	68fb      	ldr	r3, [r7, #12]
 8005f28:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005f2c:	687b      	ldr	r3, [r7, #4]
 8005f2e:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005f30:	429a      	cmp	r2, r3
 8005f32:	d129      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005f34:	68fb      	ldr	r3, [r7, #12]
 8005f36:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005f3a:	687b      	ldr	r3, [r7, #4]
 8005f3c:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005f3e:	429a      	cmp	r2, r3
 8005f40:	d122      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f42:	68fa      	ldr	r2, [r7, #12]
 8005f44:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005f48:	4013      	ands	r3, r2
 8005f4a:	687a      	ldr	r2, [r7, #4]
 8005f4c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005f4e:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005f50:	4293      	cmp	r3, r2
 8005f52:	d119      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f54:	68fb      	ldr	r3, [r7, #12]
 8005f56:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8005f5a:	687b      	ldr	r3, [r7, #4]
 8005f5c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005f5e:	085b      	lsrs	r3, r3, #1
 8005f60:	3b01      	subs	r3, #1
 8005f62:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f64:	429a      	cmp	r2, r3
 8005f66:	d10f      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005f68:	68fb      	ldr	r3, [r7, #12]
 8005f6a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8005f6e:	687b      	ldr	r3, [r7, #4]
 8005f70:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005f72:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f74:	429a      	cmp	r2, r3
 8005f76:	d107      	bne.n	8005f88 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8005f7e:	687b      	ldr	r3, [r7, #4]
 8005f80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f82:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005f84:	429a      	cmp	r2, r3
 8005f86:	d001      	beq.n	8005f8c <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 8005f88:	2301      	movs	r3, #1
 8005f8a:	e000      	b.n	8005f8e <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 8005f8c:	2300      	movs	r3, #0
}
 8005f8e:	4618      	mov	r0, r3
 8005f90:	3718      	adds	r7, #24
 8005f92:	46bd      	mov	sp, r7
 8005f94:	bd80      	pop	{r7, pc}
 8005f96:	bf00      	nop
 8005f98:	40023800 	.word	0x40023800

08005f9c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005f9c:	b580      	push	{r7, lr}
 8005f9e:	b082      	sub	sp, #8
 8005fa0:	af00      	add	r7, sp, #0
 8005fa2:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005fa4:	687b      	ldr	r3, [r7, #4]
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	d101      	bne.n	8005fae <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005faa:	2301      	movs	r3, #1
 8005fac:	e07b      	b.n	80060a6 <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005fb2:	2b00      	cmp	r3, #0
 8005fb4:	d108      	bne.n	8005fc8 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	685b      	ldr	r3, [r3, #4]
 8005fba:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005fbe:	d009      	beq.n	8005fd4 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	2200      	movs	r2, #0
 8005fc4:	61da      	str	r2, [r3, #28]
 8005fc6:	e005      	b.n	8005fd4 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005fc8:	687b      	ldr	r3, [r7, #4]
 8005fca:	2200      	movs	r2, #0
 8005fcc:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	2200      	movs	r2, #0
 8005fd2:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	2200      	movs	r2, #0
 8005fd8:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005fda:	687b      	ldr	r3, [r7, #4]
 8005fdc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005fe0:	b2db      	uxtb	r3, r3
 8005fe2:	2b00      	cmp	r3, #0
 8005fe4:	d106      	bne.n	8005ff4 <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	2200      	movs	r2, #0
 8005fea:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8005fee:	6878      	ldr	r0, [r7, #4]
 8005ff0:	f7fb fd5a 	bl	8001aa8 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8005ff4:	687b      	ldr	r3, [r7, #4]
 8005ff6:	2202      	movs	r2, #2
 8005ff8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	681b      	ldr	r3, [r3, #0]
 8006000:	681a      	ldr	r2, [r3, #0]
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	681b      	ldr	r3, [r3, #0]
 8006006:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800600a:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	685b      	ldr	r3, [r3, #4]
 8006010:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	689b      	ldr	r3, [r3, #8]
 8006018:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 800601c:	431a      	orrs	r2, r3
 800601e:	687b      	ldr	r3, [r7, #4]
 8006020:	68db      	ldr	r3, [r3, #12]
 8006022:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8006026:	431a      	orrs	r2, r3
 8006028:	687b      	ldr	r3, [r7, #4]
 800602a:	691b      	ldr	r3, [r3, #16]
 800602c:	f003 0302 	and.w	r3, r3, #2
 8006030:	431a      	orrs	r2, r3
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	695b      	ldr	r3, [r3, #20]
 8006036:	f003 0301 	and.w	r3, r3, #1
 800603a:	431a      	orrs	r2, r3
 800603c:	687b      	ldr	r3, [r7, #4]
 800603e:	699b      	ldr	r3, [r3, #24]
 8006040:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006044:	431a      	orrs	r2, r3
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	69db      	ldr	r3, [r3, #28]
 800604a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800604e:	431a      	orrs	r2, r3
 8006050:	687b      	ldr	r3, [r7, #4]
 8006052:	6a1b      	ldr	r3, [r3, #32]
 8006054:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006058:	ea42 0103 	orr.w	r1, r2, r3
 800605c:	687b      	ldr	r3, [r7, #4]
 800605e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006060:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	681b      	ldr	r3, [r3, #0]
 8006068:	430a      	orrs	r2, r1
 800606a:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800606c:	687b      	ldr	r3, [r7, #4]
 800606e:	699b      	ldr	r3, [r3, #24]
 8006070:	0c1b      	lsrs	r3, r3, #16
 8006072:	f003 0104 	and.w	r1, r3, #4
 8006076:	687b      	ldr	r3, [r7, #4]
 8006078:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800607a:	f003 0210 	and.w	r2, r3, #16
 800607e:	687b      	ldr	r3, [r7, #4]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	430a      	orrs	r2, r1
 8006084:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006086:	687b      	ldr	r3, [r7, #4]
 8006088:	681b      	ldr	r3, [r3, #0]
 800608a:	69da      	ldr	r2, [r3, #28]
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8006094:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	2200      	movs	r2, #0
 800609a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800609c:	687b      	ldr	r3, [r7, #4]
 800609e:	2201      	movs	r2, #1
 80060a0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 80060a4:	2300      	movs	r3, #0
}
 80060a6:	4618      	mov	r0, r3
 80060a8:	3708      	adds	r7, #8
 80060aa:	46bd      	mov	sp, r7
 80060ac:	bd80      	pop	{r7, pc}

080060ae <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80060ae:	b580      	push	{r7, lr}
 80060b0:	b088      	sub	sp, #32
 80060b2:	af00      	add	r7, sp, #0
 80060b4:	60f8      	str	r0, [r7, #12]
 80060b6:	60b9      	str	r1, [r7, #8]
 80060b8:	603b      	str	r3, [r7, #0]
 80060ba:	4613      	mov	r3, r2
 80060bc:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80060be:	f7fc fcc3 	bl	8002a48 <HAL_GetTick>
 80060c2:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 80060c4:	88fb      	ldrh	r3, [r7, #6]
 80060c6:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 80060c8:	68fb      	ldr	r3, [r7, #12]
 80060ca:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80060ce:	b2db      	uxtb	r3, r3
 80060d0:	2b01      	cmp	r3, #1
 80060d2:	d001      	beq.n	80060d8 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 80060d4:	2302      	movs	r3, #2
 80060d6:	e12a      	b.n	800632e <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 80060d8:	68bb      	ldr	r3, [r7, #8]
 80060da:	2b00      	cmp	r3, #0
 80060dc:	d002      	beq.n	80060e4 <HAL_SPI_Transmit+0x36>
 80060de:	88fb      	ldrh	r3, [r7, #6]
 80060e0:	2b00      	cmp	r3, #0
 80060e2:	d101      	bne.n	80060e8 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 80060e4:	2301      	movs	r3, #1
 80060e6:	e122      	b.n	800632e <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80060ee:	2b01      	cmp	r3, #1
 80060f0:	d101      	bne.n	80060f6 <HAL_SPI_Transmit+0x48>
 80060f2:	2302      	movs	r3, #2
 80060f4:	e11b      	b.n	800632e <HAL_SPI_Transmit+0x280>
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	2201      	movs	r2, #1
 80060fa:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80060fe:	68fb      	ldr	r3, [r7, #12]
 8006100:	2203      	movs	r2, #3
 8006102:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	2200      	movs	r2, #0
 800610a:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800610c:	68fb      	ldr	r3, [r7, #12]
 800610e:	68ba      	ldr	r2, [r7, #8]
 8006110:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	88fa      	ldrh	r2, [r7, #6]
 8006116:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	88fa      	ldrh	r2, [r7, #6]
 800611c:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	2200      	movs	r2, #0
 8006122:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	2200      	movs	r2, #0
 8006128:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 800612a:	68fb      	ldr	r3, [r7, #12]
 800612c:	2200      	movs	r2, #0
 800612e:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8006130:	68fb      	ldr	r3, [r7, #12]
 8006132:	2200      	movs	r2, #0
 8006134:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	2200      	movs	r2, #0
 800613a:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	689b      	ldr	r3, [r3, #8]
 8006140:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006144:	d10f      	bne.n	8006166 <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006146:	68fb      	ldr	r3, [r7, #12]
 8006148:	681b      	ldr	r3, [r3, #0]
 800614a:	681a      	ldr	r2, [r3, #0]
 800614c:	68fb      	ldr	r3, [r7, #12]
 800614e:	681b      	ldr	r3, [r3, #0]
 8006150:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006154:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	681a      	ldr	r2, [r3, #0]
 800615c:	68fb      	ldr	r3, [r7, #12]
 800615e:	681b      	ldr	r3, [r3, #0]
 8006160:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006164:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	681b      	ldr	r3, [r3, #0]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006170:	2b40      	cmp	r3, #64	@ 0x40
 8006172:	d007      	beq.n	8006184 <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	681a      	ldr	r2, [r3, #0]
 800617a:	68fb      	ldr	r3, [r7, #12]
 800617c:	681b      	ldr	r3, [r3, #0]
 800617e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006182:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006184:	68fb      	ldr	r3, [r7, #12]
 8006186:	68db      	ldr	r3, [r3, #12]
 8006188:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800618c:	d152      	bne.n	8006234 <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	685b      	ldr	r3, [r3, #4]
 8006192:	2b00      	cmp	r3, #0
 8006194:	d002      	beq.n	800619c <HAL_SPI_Transmit+0xee>
 8006196:	8b7b      	ldrh	r3, [r7, #26]
 8006198:	2b01      	cmp	r3, #1
 800619a:	d145      	bne.n	8006228 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061a0:	881a      	ldrh	r2, [r3, #0]
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80061a8:	68fb      	ldr	r3, [r7, #12]
 80061aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061ac:	1c9a      	adds	r2, r3, #2
 80061ae:	68fb      	ldr	r3, [r7, #12]
 80061b0:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80061b2:	68fb      	ldr	r3, [r7, #12]
 80061b4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80061b6:	b29b      	uxth	r3, r3
 80061b8:	3b01      	subs	r3, #1
 80061ba:	b29a      	uxth	r2, r3
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 80061c0:	e032      	b.n	8006228 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80061c2:	68fb      	ldr	r3, [r7, #12]
 80061c4:	681b      	ldr	r3, [r3, #0]
 80061c6:	689b      	ldr	r3, [r3, #8]
 80061c8:	f003 0302 	and.w	r3, r3, #2
 80061cc:	2b02      	cmp	r3, #2
 80061ce:	d112      	bne.n	80061f6 <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80061d0:	68fb      	ldr	r3, [r7, #12]
 80061d2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061d4:	881a      	ldrh	r2, [r3, #0]
 80061d6:	68fb      	ldr	r3, [r7, #12]
 80061d8:	681b      	ldr	r3, [r3, #0]
 80061da:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061e0:	1c9a      	adds	r2, r3, #2
 80061e2:	68fb      	ldr	r3, [r7, #12]
 80061e4:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80061e6:	68fb      	ldr	r3, [r7, #12]
 80061e8:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80061ea:	b29b      	uxth	r3, r3
 80061ec:	3b01      	subs	r3, #1
 80061ee:	b29a      	uxth	r2, r3
 80061f0:	68fb      	ldr	r3, [r7, #12]
 80061f2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80061f4:	e018      	b.n	8006228 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80061f6:	f7fc fc27 	bl	8002a48 <HAL_GetTick>
 80061fa:	4602      	mov	r2, r0
 80061fc:	69fb      	ldr	r3, [r7, #28]
 80061fe:	1ad3      	subs	r3, r2, r3
 8006200:	683a      	ldr	r2, [r7, #0]
 8006202:	429a      	cmp	r2, r3
 8006204:	d803      	bhi.n	800620e <HAL_SPI_Transmit+0x160>
 8006206:	683b      	ldr	r3, [r7, #0]
 8006208:	f1b3 3fff 	cmp.w	r3, #4294967295
 800620c:	d102      	bne.n	8006214 <HAL_SPI_Transmit+0x166>
 800620e:	683b      	ldr	r3, [r7, #0]
 8006210:	2b00      	cmp	r3, #0
 8006212:	d109      	bne.n	8006228 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	2201      	movs	r2, #1
 8006218:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	2200      	movs	r2, #0
 8006220:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006224:	2303      	movs	r3, #3
 8006226:	e082      	b.n	800632e <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800622c:	b29b      	uxth	r3, r3
 800622e:	2b00      	cmp	r3, #0
 8006230:	d1c7      	bne.n	80061c2 <HAL_SPI_Transmit+0x114>
 8006232:	e053      	b.n	80062dc <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006234:	68fb      	ldr	r3, [r7, #12]
 8006236:	685b      	ldr	r3, [r3, #4]
 8006238:	2b00      	cmp	r3, #0
 800623a:	d002      	beq.n	8006242 <HAL_SPI_Transmit+0x194>
 800623c:	8b7b      	ldrh	r3, [r7, #26]
 800623e:	2b01      	cmp	r3, #1
 8006240:	d147      	bne.n	80062d2 <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006242:	68fb      	ldr	r3, [r7, #12]
 8006244:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006246:	68fb      	ldr	r3, [r7, #12]
 8006248:	681b      	ldr	r3, [r3, #0]
 800624a:	330c      	adds	r3, #12
 800624c:	7812      	ldrb	r2, [r2, #0]
 800624e:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006250:	68fb      	ldr	r3, [r7, #12]
 8006252:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006254:	1c5a      	adds	r2, r3, #1
 8006256:	68fb      	ldr	r3, [r7, #12]
 8006258:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800625e:	b29b      	uxth	r3, r3
 8006260:	3b01      	subs	r3, #1
 8006262:	b29a      	uxth	r2, r3
 8006264:	68fb      	ldr	r3, [r7, #12]
 8006266:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 8006268:	e033      	b.n	80062d2 <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 800626a:	68fb      	ldr	r3, [r7, #12]
 800626c:	681b      	ldr	r3, [r3, #0]
 800626e:	689b      	ldr	r3, [r3, #8]
 8006270:	f003 0302 	and.w	r3, r3, #2
 8006274:	2b02      	cmp	r3, #2
 8006276:	d113      	bne.n	80062a0 <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006278:	68fb      	ldr	r3, [r7, #12]
 800627a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800627c:	68fb      	ldr	r3, [r7, #12]
 800627e:	681b      	ldr	r3, [r3, #0]
 8006280:	330c      	adds	r3, #12
 8006282:	7812      	ldrb	r2, [r2, #0]
 8006284:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8006286:	68fb      	ldr	r3, [r7, #12]
 8006288:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800628a:	1c5a      	adds	r2, r3, #1
 800628c:	68fb      	ldr	r3, [r7, #12]
 800628e:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 8006290:	68fb      	ldr	r3, [r7, #12]
 8006292:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006294:	b29b      	uxth	r3, r3
 8006296:	3b01      	subs	r3, #1
 8006298:	b29a      	uxth	r2, r3
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	86da      	strh	r2, [r3, #54]	@ 0x36
 800629e:	e018      	b.n	80062d2 <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80062a0:	f7fc fbd2 	bl	8002a48 <HAL_GetTick>
 80062a4:	4602      	mov	r2, r0
 80062a6:	69fb      	ldr	r3, [r7, #28]
 80062a8:	1ad3      	subs	r3, r2, r3
 80062aa:	683a      	ldr	r2, [r7, #0]
 80062ac:	429a      	cmp	r2, r3
 80062ae:	d803      	bhi.n	80062b8 <HAL_SPI_Transmit+0x20a>
 80062b0:	683b      	ldr	r3, [r7, #0]
 80062b2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062b6:	d102      	bne.n	80062be <HAL_SPI_Transmit+0x210>
 80062b8:	683b      	ldr	r3, [r7, #0]
 80062ba:	2b00      	cmp	r3, #0
 80062bc:	d109      	bne.n	80062d2 <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80062be:	68fb      	ldr	r3, [r7, #12]
 80062c0:	2201      	movs	r2, #1
 80062c2:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80062c6:	68fb      	ldr	r3, [r7, #12]
 80062c8:	2200      	movs	r2, #0
 80062ca:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80062ce:	2303      	movs	r3, #3
 80062d0:	e02d      	b.n	800632e <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 80062d2:	68fb      	ldr	r3, [r7, #12]
 80062d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80062d6:	b29b      	uxth	r3, r3
 80062d8:	2b00      	cmp	r3, #0
 80062da:	d1c6      	bne.n	800626a <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80062dc:	69fa      	ldr	r2, [r7, #28]
 80062de:	6839      	ldr	r1, [r7, #0]
 80062e0:	68f8      	ldr	r0, [r7, #12]
 80062e2:	f000 fe1f 	bl	8006f24 <SPI_EndRxTxTransaction>
 80062e6:	4603      	mov	r3, r0
 80062e8:	2b00      	cmp	r3, #0
 80062ea:	d002      	beq.n	80062f2 <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80062ec:	68fb      	ldr	r3, [r7, #12]
 80062ee:	2220      	movs	r2, #32
 80062f0:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80062f2:	68fb      	ldr	r3, [r7, #12]
 80062f4:	689b      	ldr	r3, [r3, #8]
 80062f6:	2b00      	cmp	r3, #0
 80062f8:	d10a      	bne.n	8006310 <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80062fa:	2300      	movs	r3, #0
 80062fc:	617b      	str	r3, [r7, #20]
 80062fe:	68fb      	ldr	r3, [r7, #12]
 8006300:	681b      	ldr	r3, [r3, #0]
 8006302:	68db      	ldr	r3, [r3, #12]
 8006304:	617b      	str	r3, [r7, #20]
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	681b      	ldr	r3, [r3, #0]
 800630a:	689b      	ldr	r3, [r3, #8]
 800630c:	617b      	str	r3, [r7, #20]
 800630e:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	2201      	movs	r2, #1
 8006314:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006318:	68fb      	ldr	r3, [r7, #12]
 800631a:	2200      	movs	r2, #0
 800631c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006320:	68fb      	ldr	r3, [r7, #12]
 8006322:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006324:	2b00      	cmp	r3, #0
 8006326:	d001      	beq.n	800632c <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8006328:	2301      	movs	r3, #1
 800632a:	e000      	b.n	800632e <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 800632c:	2300      	movs	r3, #0
  }
}
 800632e:	4618      	mov	r0, r3
 8006330:	3720      	adds	r7, #32
 8006332:	46bd      	mov	sp, r7
 8006334:	bd80      	pop	{r7, pc}

08006336 <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8006336:	b580      	push	{r7, lr}
 8006338:	b088      	sub	sp, #32
 800633a:	af02      	add	r7, sp, #8
 800633c:	60f8      	str	r0, [r7, #12]
 800633e:	60b9      	str	r1, [r7, #8]
 8006340:	603b      	str	r3, [r7, #0]
 8006342:	4613      	mov	r3, r2
 8006344:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800634c:	b2db      	uxtb	r3, r3
 800634e:	2b01      	cmp	r3, #1
 8006350:	d001      	beq.n	8006356 <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 8006352:	2302      	movs	r3, #2
 8006354:	e104      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8006356:	68fb      	ldr	r3, [r7, #12]
 8006358:	685b      	ldr	r3, [r3, #4]
 800635a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800635e:	d112      	bne.n	8006386 <HAL_SPI_Receive+0x50>
 8006360:	68fb      	ldr	r3, [r7, #12]
 8006362:	689b      	ldr	r3, [r3, #8]
 8006364:	2b00      	cmp	r3, #0
 8006366:	d10e      	bne.n	8006386 <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006368:	68fb      	ldr	r3, [r7, #12]
 800636a:	2204      	movs	r2, #4
 800636c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006370:	88fa      	ldrh	r2, [r7, #6]
 8006372:	683b      	ldr	r3, [r7, #0]
 8006374:	9300      	str	r3, [sp, #0]
 8006376:	4613      	mov	r3, r2
 8006378:	68ba      	ldr	r2, [r7, #8]
 800637a:	68b9      	ldr	r1, [r7, #8]
 800637c:	68f8      	ldr	r0, [r7, #12]
 800637e:	f000 f8f3 	bl	8006568 <HAL_SPI_TransmitReceive>
 8006382:	4603      	mov	r3, r0
 8006384:	e0ec      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006386:	f7fc fb5f 	bl	8002a48 <HAL_GetTick>
 800638a:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 800638c:	68bb      	ldr	r3, [r7, #8]
 800638e:	2b00      	cmp	r3, #0
 8006390:	d002      	beq.n	8006398 <HAL_SPI_Receive+0x62>
 8006392:	88fb      	ldrh	r3, [r7, #6]
 8006394:	2b00      	cmp	r3, #0
 8006396:	d101      	bne.n	800639c <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 8006398:	2301      	movs	r3, #1
 800639a:	e0e1      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80063a2:	2b01      	cmp	r3, #1
 80063a4:	d101      	bne.n	80063aa <HAL_SPI_Receive+0x74>
 80063a6:	2302      	movs	r3, #2
 80063a8:	e0da      	b.n	8006560 <HAL_SPI_Receive+0x22a>
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	2201      	movs	r2, #1
 80063ae:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	2204      	movs	r2, #4
 80063b6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80063ba:	68fb      	ldr	r3, [r7, #12]
 80063bc:	2200      	movs	r2, #0
 80063be:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80063c0:	68fb      	ldr	r3, [r7, #12]
 80063c2:	68ba      	ldr	r2, [r7, #8]
 80063c4:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	88fa      	ldrh	r2, [r7, #6]
 80063ca:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 80063cc:	68fb      	ldr	r3, [r7, #12]
 80063ce:	88fa      	ldrh	r2, [r7, #6]
 80063d0:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	2200      	movs	r2, #0
 80063d6:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 80063d8:	68fb      	ldr	r3, [r7, #12]
 80063da:	2200      	movs	r2, #0
 80063dc:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 80063de:	68fb      	ldr	r3, [r7, #12]
 80063e0:	2200      	movs	r2, #0
 80063e2:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 80063e4:	68fb      	ldr	r3, [r7, #12]
 80063e6:	2200      	movs	r2, #0
 80063e8:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	2200      	movs	r2, #0
 80063ee:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	689b      	ldr	r3, [r3, #8]
 80063f4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80063f8:	d10f      	bne.n	800641a <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 80063fa:	68fb      	ldr	r3, [r7, #12]
 80063fc:	681b      	ldr	r3, [r3, #0]
 80063fe:	681a      	ldr	r2, [r3, #0]
 8006400:	68fb      	ldr	r3, [r7, #12]
 8006402:	681b      	ldr	r3, [r3, #0]
 8006404:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006408:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 800640a:	68fb      	ldr	r3, [r7, #12]
 800640c:	681b      	ldr	r3, [r3, #0]
 800640e:	681a      	ldr	r2, [r3, #0]
 8006410:	68fb      	ldr	r3, [r7, #12]
 8006412:	681b      	ldr	r3, [r3, #0]
 8006414:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006418:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	681b      	ldr	r3, [r3, #0]
 8006420:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006424:	2b40      	cmp	r3, #64	@ 0x40
 8006426:	d007      	beq.n	8006438 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	681a      	ldr	r2, [r3, #0]
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	681b      	ldr	r3, [r3, #0]
 8006432:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006436:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006438:	68fb      	ldr	r3, [r7, #12]
 800643a:	68db      	ldr	r3, [r3, #12]
 800643c:	2b00      	cmp	r3, #0
 800643e:	d170      	bne.n	8006522 <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 8006440:	e035      	b.n	80064ae <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8006442:	68fb      	ldr	r3, [r7, #12]
 8006444:	681b      	ldr	r3, [r3, #0]
 8006446:	689b      	ldr	r3, [r3, #8]
 8006448:	f003 0301 	and.w	r3, r3, #1
 800644c:	2b01      	cmp	r3, #1
 800644e:	d115      	bne.n	800647c <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	f103 020c 	add.w	r2, r3, #12
 8006458:	68fb      	ldr	r3, [r7, #12]
 800645a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800645c:	7812      	ldrb	r2, [r2, #0]
 800645e:	b2d2      	uxtb	r2, r2
 8006460:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8006462:	68fb      	ldr	r3, [r7, #12]
 8006464:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006466:	1c5a      	adds	r2, r3, #1
 8006468:	68fb      	ldr	r3, [r7, #12]
 800646a:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 800646c:	68fb      	ldr	r3, [r7, #12]
 800646e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006470:	b29b      	uxth	r3, r3
 8006472:	3b01      	subs	r3, #1
 8006474:	b29a      	uxth	r2, r3
 8006476:	68fb      	ldr	r3, [r7, #12]
 8006478:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800647a:	e018      	b.n	80064ae <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800647c:	f7fc fae4 	bl	8002a48 <HAL_GetTick>
 8006480:	4602      	mov	r2, r0
 8006482:	697b      	ldr	r3, [r7, #20]
 8006484:	1ad3      	subs	r3, r2, r3
 8006486:	683a      	ldr	r2, [r7, #0]
 8006488:	429a      	cmp	r2, r3
 800648a:	d803      	bhi.n	8006494 <HAL_SPI_Receive+0x15e>
 800648c:	683b      	ldr	r3, [r7, #0]
 800648e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006492:	d102      	bne.n	800649a <HAL_SPI_Receive+0x164>
 8006494:	683b      	ldr	r3, [r7, #0]
 8006496:	2b00      	cmp	r3, #0
 8006498:	d109      	bne.n	80064ae <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800649a:	68fb      	ldr	r3, [r7, #12]
 800649c:	2201      	movs	r2, #1
 800649e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80064a2:	68fb      	ldr	r3, [r7, #12]
 80064a4:	2200      	movs	r2, #0
 80064a6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80064aa:	2303      	movs	r3, #3
 80064ac:	e058      	b.n	8006560 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 80064ae:	68fb      	ldr	r3, [r7, #12]
 80064b0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064b2:	b29b      	uxth	r3, r3
 80064b4:	2b00      	cmp	r3, #0
 80064b6:	d1c4      	bne.n	8006442 <HAL_SPI_Receive+0x10c>
 80064b8:	e038      	b.n	800652c <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80064ba:	68fb      	ldr	r3, [r7, #12]
 80064bc:	681b      	ldr	r3, [r3, #0]
 80064be:	689b      	ldr	r3, [r3, #8]
 80064c0:	f003 0301 	and.w	r3, r3, #1
 80064c4:	2b01      	cmp	r3, #1
 80064c6:	d113      	bne.n	80064f0 <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80064c8:	68fb      	ldr	r3, [r7, #12]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	68da      	ldr	r2, [r3, #12]
 80064ce:	68fb      	ldr	r3, [r7, #12]
 80064d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064d2:	b292      	uxth	r2, r2
 80064d4:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80064d6:	68fb      	ldr	r3, [r7, #12]
 80064d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064da:	1c9a      	adds	r2, r3, #2
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80064e0:	68fb      	ldr	r3, [r7, #12]
 80064e2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064e4:	b29b      	uxth	r3, r3
 80064e6:	3b01      	subs	r3, #1
 80064e8:	b29a      	uxth	r2, r3
 80064ea:	68fb      	ldr	r3, [r7, #12]
 80064ec:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80064ee:	e018      	b.n	8006522 <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80064f0:	f7fc faaa 	bl	8002a48 <HAL_GetTick>
 80064f4:	4602      	mov	r2, r0
 80064f6:	697b      	ldr	r3, [r7, #20]
 80064f8:	1ad3      	subs	r3, r2, r3
 80064fa:	683a      	ldr	r2, [r7, #0]
 80064fc:	429a      	cmp	r2, r3
 80064fe:	d803      	bhi.n	8006508 <HAL_SPI_Receive+0x1d2>
 8006500:	683b      	ldr	r3, [r7, #0]
 8006502:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006506:	d102      	bne.n	800650e <HAL_SPI_Receive+0x1d8>
 8006508:	683b      	ldr	r3, [r7, #0]
 800650a:	2b00      	cmp	r3, #0
 800650c:	d109      	bne.n	8006522 <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	2201      	movs	r2, #1
 8006512:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006516:	68fb      	ldr	r3, [r7, #12]
 8006518:	2200      	movs	r2, #0
 800651a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800651e:	2303      	movs	r3, #3
 8006520:	e01e      	b.n	8006560 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006526:	b29b      	uxth	r3, r3
 8006528:	2b00      	cmp	r3, #0
 800652a:	d1c6      	bne.n	80064ba <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800652c:	697a      	ldr	r2, [r7, #20]
 800652e:	6839      	ldr	r1, [r7, #0]
 8006530:	68f8      	ldr	r0, [r7, #12]
 8006532:	f000 fc91 	bl	8006e58 <SPI_EndRxTransaction>
 8006536:	4603      	mov	r3, r0
 8006538:	2b00      	cmp	r3, #0
 800653a:	d002      	beq.n	8006542 <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800653c:	68fb      	ldr	r3, [r7, #12]
 800653e:	2220      	movs	r2, #32
 8006540:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 8006542:	68fb      	ldr	r3, [r7, #12]
 8006544:	2201      	movs	r2, #1
 8006546:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800654a:	68fb      	ldr	r3, [r7, #12]
 800654c:	2200      	movs	r2, #0
 800654e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006552:	68fb      	ldr	r3, [r7, #12]
 8006554:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006556:	2b00      	cmp	r3, #0
 8006558:	d001      	beq.n	800655e <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 800655a:	2301      	movs	r3, #1
 800655c:	e000      	b.n	8006560 <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 800655e:	2300      	movs	r3, #0
  }
}
 8006560:	4618      	mov	r0, r3
 8006562:	3718      	adds	r7, #24
 8006564:	46bd      	mov	sp, r7
 8006566:	bd80      	pop	{r7, pc}

08006568 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 8006568:	b580      	push	{r7, lr}
 800656a:	b08a      	sub	sp, #40	@ 0x28
 800656c:	af00      	add	r7, sp, #0
 800656e:	60f8      	str	r0, [r7, #12]
 8006570:	60b9      	str	r1, [r7, #8]
 8006572:	607a      	str	r2, [r7, #4]
 8006574:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 8006576:	2301      	movs	r3, #1
 8006578:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800657a:	f7fc fa65 	bl	8002a48 <HAL_GetTick>
 800657e:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8006580:	68fb      	ldr	r3, [r7, #12]
 8006582:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006586:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 8006588:	68fb      	ldr	r3, [r7, #12]
 800658a:	685b      	ldr	r3, [r3, #4]
 800658c:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 800658e:	887b      	ldrh	r3, [r7, #2]
 8006590:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8006592:	7ffb      	ldrb	r3, [r7, #31]
 8006594:	2b01      	cmp	r3, #1
 8006596:	d00c      	beq.n	80065b2 <HAL_SPI_TransmitReceive+0x4a>
 8006598:	69bb      	ldr	r3, [r7, #24]
 800659a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800659e:	d106      	bne.n	80065ae <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	689b      	ldr	r3, [r3, #8]
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d102      	bne.n	80065ae <HAL_SPI_TransmitReceive+0x46>
 80065a8:	7ffb      	ldrb	r3, [r7, #31]
 80065aa:	2b04      	cmp	r3, #4
 80065ac:	d001      	beq.n	80065b2 <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 80065ae:	2302      	movs	r3, #2
 80065b0:	e17f      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80065b2:	68bb      	ldr	r3, [r7, #8]
 80065b4:	2b00      	cmp	r3, #0
 80065b6:	d005      	beq.n	80065c4 <HAL_SPI_TransmitReceive+0x5c>
 80065b8:	687b      	ldr	r3, [r7, #4]
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d002      	beq.n	80065c4 <HAL_SPI_TransmitReceive+0x5c>
 80065be:	887b      	ldrh	r3, [r7, #2]
 80065c0:	2b00      	cmp	r3, #0
 80065c2:	d101      	bne.n	80065c8 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 80065c4:	2301      	movs	r3, #1
 80065c6:	e174      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80065ce:	2b01      	cmp	r3, #1
 80065d0:	d101      	bne.n	80065d6 <HAL_SPI_TransmitReceive+0x6e>
 80065d2:	2302      	movs	r3, #2
 80065d4:	e16d      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
 80065d6:	68fb      	ldr	r3, [r7, #12]
 80065d8:	2201      	movs	r2, #1
 80065da:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80065de:	68fb      	ldr	r3, [r7, #12]
 80065e0:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80065e4:	b2db      	uxtb	r3, r3
 80065e6:	2b04      	cmp	r3, #4
 80065e8:	d003      	beq.n	80065f2 <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80065ea:	68fb      	ldr	r3, [r7, #12]
 80065ec:	2205      	movs	r2, #5
 80065ee:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80065f2:	68fb      	ldr	r3, [r7, #12]
 80065f4:	2200      	movs	r2, #0
 80065f6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80065f8:	68fb      	ldr	r3, [r7, #12]
 80065fa:	687a      	ldr	r2, [r7, #4]
 80065fc:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 80065fe:	68fb      	ldr	r3, [r7, #12]
 8006600:	887a      	ldrh	r2, [r7, #2]
 8006602:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 8006604:	68fb      	ldr	r3, [r7, #12]
 8006606:	887a      	ldrh	r2, [r7, #2]
 8006608:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 800660a:	68fb      	ldr	r3, [r7, #12]
 800660c:	68ba      	ldr	r2, [r7, #8]
 800660e:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	887a      	ldrh	r2, [r7, #2]
 8006614:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	887a      	ldrh	r2, [r7, #2]
 800661a:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 800661c:	68fb      	ldr	r3, [r7, #12]
 800661e:	2200      	movs	r2, #0
 8006620:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	2200      	movs	r2, #0
 8006626:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	681b      	ldr	r3, [r3, #0]
 800662c:	681b      	ldr	r3, [r3, #0]
 800662e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006632:	2b40      	cmp	r3, #64	@ 0x40
 8006634:	d007      	beq.n	8006646 <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006636:	68fb      	ldr	r3, [r7, #12]
 8006638:	681b      	ldr	r3, [r3, #0]
 800663a:	681a      	ldr	r2, [r3, #0]
 800663c:	68fb      	ldr	r3, [r7, #12]
 800663e:	681b      	ldr	r3, [r3, #0]
 8006640:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8006644:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8006646:	68fb      	ldr	r3, [r7, #12]
 8006648:	68db      	ldr	r3, [r3, #12]
 800664a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800664e:	d17e      	bne.n	800674e <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	685b      	ldr	r3, [r3, #4]
 8006654:	2b00      	cmp	r3, #0
 8006656:	d002      	beq.n	800665e <HAL_SPI_TransmitReceive+0xf6>
 8006658:	8afb      	ldrh	r3, [r7, #22]
 800665a:	2b01      	cmp	r3, #1
 800665c:	d16c      	bne.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006662:	881a      	ldrh	r2, [r3, #0]
 8006664:	68fb      	ldr	r3, [r7, #12]
 8006666:	681b      	ldr	r3, [r3, #0]
 8006668:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800666a:	68fb      	ldr	r3, [r7, #12]
 800666c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800666e:	1c9a      	adds	r2, r3, #2
 8006670:	68fb      	ldr	r3, [r7, #12]
 8006672:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006674:	68fb      	ldr	r3, [r7, #12]
 8006676:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006678:	b29b      	uxth	r3, r3
 800667a:	3b01      	subs	r3, #1
 800667c:	b29a      	uxth	r2, r3
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006682:	e059      	b.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006684:	68fb      	ldr	r3, [r7, #12]
 8006686:	681b      	ldr	r3, [r3, #0]
 8006688:	689b      	ldr	r3, [r3, #8]
 800668a:	f003 0302 	and.w	r3, r3, #2
 800668e:	2b02      	cmp	r3, #2
 8006690:	d11b      	bne.n	80066ca <HAL_SPI_TransmitReceive+0x162>
 8006692:	68fb      	ldr	r3, [r7, #12]
 8006694:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006696:	b29b      	uxth	r3, r3
 8006698:	2b00      	cmp	r3, #0
 800669a:	d016      	beq.n	80066ca <HAL_SPI_TransmitReceive+0x162>
 800669c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800669e:	2b01      	cmp	r3, #1
 80066a0:	d113      	bne.n	80066ca <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80066a2:	68fb      	ldr	r3, [r7, #12]
 80066a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066a6:	881a      	ldrh	r2, [r3, #0]
 80066a8:	68fb      	ldr	r3, [r7, #12]
 80066aa:	681b      	ldr	r3, [r3, #0]
 80066ac:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80066ae:	68fb      	ldr	r3, [r7, #12]
 80066b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066b2:	1c9a      	adds	r2, r3, #2
 80066b4:	68fb      	ldr	r3, [r7, #12]
 80066b6:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80066b8:	68fb      	ldr	r3, [r7, #12]
 80066ba:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80066bc:	b29b      	uxth	r3, r3
 80066be:	3b01      	subs	r3, #1
 80066c0:	b29a      	uxth	r2, r3
 80066c2:	68fb      	ldr	r3, [r7, #12]
 80066c4:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80066c6:	2300      	movs	r3, #0
 80066c8:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80066ca:	68fb      	ldr	r3, [r7, #12]
 80066cc:	681b      	ldr	r3, [r3, #0]
 80066ce:	689b      	ldr	r3, [r3, #8]
 80066d0:	f003 0301 	and.w	r3, r3, #1
 80066d4:	2b01      	cmp	r3, #1
 80066d6:	d119      	bne.n	800670c <HAL_SPI_TransmitReceive+0x1a4>
 80066d8:	68fb      	ldr	r3, [r7, #12]
 80066da:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80066dc:	b29b      	uxth	r3, r3
 80066de:	2b00      	cmp	r3, #0
 80066e0:	d014      	beq.n	800670c <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	68da      	ldr	r2, [r3, #12]
 80066e8:	68fb      	ldr	r3, [r7, #12]
 80066ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80066ec:	b292      	uxth	r2, r2
 80066ee:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80066f4:	1c9a      	adds	r2, r3, #2
 80066f6:	68fb      	ldr	r3, [r7, #12]
 80066f8:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80066fa:	68fb      	ldr	r3, [r7, #12]
 80066fc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80066fe:	b29b      	uxth	r3, r3
 8006700:	3b01      	subs	r3, #1
 8006702:	b29a      	uxth	r2, r3
 8006704:	68fb      	ldr	r3, [r7, #12]
 8006706:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006708:	2301      	movs	r3, #1
 800670a:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 800670c:	f7fc f99c 	bl	8002a48 <HAL_GetTick>
 8006710:	4602      	mov	r2, r0
 8006712:	6a3b      	ldr	r3, [r7, #32]
 8006714:	1ad3      	subs	r3, r2, r3
 8006716:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006718:	429a      	cmp	r2, r3
 800671a:	d80d      	bhi.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
 800671c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800671e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006722:	d009      	beq.n	8006738 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	2201      	movs	r2, #1
 8006728:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800672c:	68fb      	ldr	r3, [r7, #12]
 800672e:	2200      	movs	r2, #0
 8006730:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006734:	2303      	movs	r3, #3
 8006736:	e0bc      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006738:	68fb      	ldr	r3, [r7, #12]
 800673a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800673c:	b29b      	uxth	r3, r3
 800673e:	2b00      	cmp	r3, #0
 8006740:	d1a0      	bne.n	8006684 <HAL_SPI_TransmitReceive+0x11c>
 8006742:	68fb      	ldr	r3, [r7, #12]
 8006744:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006746:	b29b      	uxth	r3, r3
 8006748:	2b00      	cmp	r3, #0
 800674a:	d19b      	bne.n	8006684 <HAL_SPI_TransmitReceive+0x11c>
 800674c:	e082      	b.n	8006854 <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800674e:	68fb      	ldr	r3, [r7, #12]
 8006750:	685b      	ldr	r3, [r3, #4]
 8006752:	2b00      	cmp	r3, #0
 8006754:	d002      	beq.n	800675c <HAL_SPI_TransmitReceive+0x1f4>
 8006756:	8afb      	ldrh	r3, [r7, #22]
 8006758:	2b01      	cmp	r3, #1
 800675a:	d171      	bne.n	8006840 <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800675c:	68fb      	ldr	r3, [r7, #12]
 800675e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006760:	68fb      	ldr	r3, [r7, #12]
 8006762:	681b      	ldr	r3, [r3, #0]
 8006764:	330c      	adds	r3, #12
 8006766:	7812      	ldrb	r2, [r2, #0]
 8006768:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 800676a:	68fb      	ldr	r3, [r7, #12]
 800676c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800676e:	1c5a      	adds	r2, r3, #1
 8006770:	68fb      	ldr	r3, [r7, #12]
 8006772:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006774:	68fb      	ldr	r3, [r7, #12]
 8006776:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006778:	b29b      	uxth	r3, r3
 800677a:	3b01      	subs	r3, #1
 800677c:	b29a      	uxth	r2, r3
 800677e:	68fb      	ldr	r3, [r7, #12]
 8006780:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006782:	e05d      	b.n	8006840 <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8006784:	68fb      	ldr	r3, [r7, #12]
 8006786:	681b      	ldr	r3, [r3, #0]
 8006788:	689b      	ldr	r3, [r3, #8]
 800678a:	f003 0302 	and.w	r3, r3, #2
 800678e:	2b02      	cmp	r3, #2
 8006790:	d11c      	bne.n	80067cc <HAL_SPI_TransmitReceive+0x264>
 8006792:	68fb      	ldr	r3, [r7, #12]
 8006794:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006796:	b29b      	uxth	r3, r3
 8006798:	2b00      	cmp	r3, #0
 800679a:	d017      	beq.n	80067cc <HAL_SPI_TransmitReceive+0x264>
 800679c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800679e:	2b01      	cmp	r3, #1
 80067a0:	d114      	bne.n	80067cc <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80067a2:	68fb      	ldr	r3, [r7, #12]
 80067a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80067a6:	68fb      	ldr	r3, [r7, #12]
 80067a8:	681b      	ldr	r3, [r3, #0]
 80067aa:	330c      	adds	r3, #12
 80067ac:	7812      	ldrb	r2, [r2, #0]
 80067ae:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 80067b0:	68fb      	ldr	r3, [r7, #12]
 80067b2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80067b4:	1c5a      	adds	r2, r3, #1
 80067b6:	68fb      	ldr	r3, [r7, #12]
 80067b8:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80067ba:	68fb      	ldr	r3, [r7, #12]
 80067bc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80067be:	b29b      	uxth	r3, r3
 80067c0:	3b01      	subs	r3, #1
 80067c2:	b29a      	uxth	r2, r3
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80067c8:	2300      	movs	r3, #0
 80067ca:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80067cc:	68fb      	ldr	r3, [r7, #12]
 80067ce:	681b      	ldr	r3, [r3, #0]
 80067d0:	689b      	ldr	r3, [r3, #8]
 80067d2:	f003 0301 	and.w	r3, r3, #1
 80067d6:	2b01      	cmp	r3, #1
 80067d8:	d119      	bne.n	800680e <HAL_SPI_TransmitReceive+0x2a6>
 80067da:	68fb      	ldr	r3, [r7, #12]
 80067dc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80067de:	b29b      	uxth	r3, r3
 80067e0:	2b00      	cmp	r3, #0
 80067e2:	d014      	beq.n	800680e <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80067e4:	68fb      	ldr	r3, [r7, #12]
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	68da      	ldr	r2, [r3, #12]
 80067ea:	68fb      	ldr	r3, [r7, #12]
 80067ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80067ee:	b2d2      	uxtb	r2, r2
 80067f0:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 80067f2:	68fb      	ldr	r3, [r7, #12]
 80067f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80067f6:	1c5a      	adds	r2, r3, #1
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80067fc:	68fb      	ldr	r3, [r7, #12]
 80067fe:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006800:	b29b      	uxth	r3, r3
 8006802:	3b01      	subs	r3, #1
 8006804:	b29a      	uxth	r2, r3
 8006806:	68fb      	ldr	r3, [r7, #12]
 8006808:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 800680a:	2301      	movs	r3, #1
 800680c:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800680e:	f7fc f91b 	bl	8002a48 <HAL_GetTick>
 8006812:	4602      	mov	r2, r0
 8006814:	6a3b      	ldr	r3, [r7, #32]
 8006816:	1ad3      	subs	r3, r2, r3
 8006818:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800681a:	429a      	cmp	r2, r3
 800681c:	d803      	bhi.n	8006826 <HAL_SPI_TransmitReceive+0x2be>
 800681e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006820:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006824:	d102      	bne.n	800682c <HAL_SPI_TransmitReceive+0x2c4>
 8006826:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006828:	2b00      	cmp	r3, #0
 800682a:	d109      	bne.n	8006840 <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 800682c:	68fb      	ldr	r3, [r7, #12]
 800682e:	2201      	movs	r2, #1
 8006830:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006834:	68fb      	ldr	r3, [r7, #12]
 8006836:	2200      	movs	r2, #0
 8006838:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 800683c:	2303      	movs	r3, #3
 800683e:	e038      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006840:	68fb      	ldr	r3, [r7, #12]
 8006842:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006844:	b29b      	uxth	r3, r3
 8006846:	2b00      	cmp	r3, #0
 8006848:	d19c      	bne.n	8006784 <HAL_SPI_TransmitReceive+0x21c>
 800684a:	68fb      	ldr	r3, [r7, #12]
 800684c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800684e:	b29b      	uxth	r3, r3
 8006850:	2b00      	cmp	r3, #0
 8006852:	d197      	bne.n	8006784 <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006854:	6a3a      	ldr	r2, [r7, #32]
 8006856:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8006858:	68f8      	ldr	r0, [r7, #12]
 800685a:	f000 fb63 	bl	8006f24 <SPI_EndRxTxTransaction>
 800685e:	4603      	mov	r3, r0
 8006860:	2b00      	cmp	r3, #0
 8006862:	d008      	beq.n	8006876 <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006864:	68fb      	ldr	r3, [r7, #12]
 8006866:	2220      	movs	r2, #32
 8006868:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 800686a:	68fb      	ldr	r3, [r7, #12]
 800686c:	2200      	movs	r2, #0
 800686e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 8006872:	2301      	movs	r3, #1
 8006874:	e01d      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006876:	68fb      	ldr	r3, [r7, #12]
 8006878:	689b      	ldr	r3, [r3, #8]
 800687a:	2b00      	cmp	r3, #0
 800687c:	d10a      	bne.n	8006894 <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800687e:	2300      	movs	r3, #0
 8006880:	613b      	str	r3, [r7, #16]
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	68db      	ldr	r3, [r3, #12]
 8006888:	613b      	str	r3, [r7, #16]
 800688a:	68fb      	ldr	r3, [r7, #12]
 800688c:	681b      	ldr	r3, [r3, #0]
 800688e:	689b      	ldr	r3, [r3, #8]
 8006890:	613b      	str	r3, [r7, #16]
 8006892:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 8006894:	68fb      	ldr	r3, [r7, #12]
 8006896:	2201      	movs	r2, #1
 8006898:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 800689c:	68fb      	ldr	r3, [r7, #12]
 800689e:	2200      	movs	r2, #0
 80068a0:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80068a4:	68fb      	ldr	r3, [r7, #12]
 80068a6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80068a8:	2b00      	cmp	r3, #0
 80068aa:	d001      	beq.n	80068b0 <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 80068ac:	2301      	movs	r3, #1
 80068ae:	e000      	b.n	80068b2 <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 80068b0:	2300      	movs	r3, #0
  }
}
 80068b2:	4618      	mov	r0, r3
 80068b4:	3728      	adds	r7, #40	@ 0x28
 80068b6:	46bd      	mov	sp, r7
 80068b8:	bd80      	pop	{r7, pc}
	...

080068bc <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 80068bc:	b580      	push	{r7, lr}
 80068be:	b084      	sub	sp, #16
 80068c0:	af00      	add	r7, sp, #0
 80068c2:	60f8      	str	r0, [r7, #12]
 80068c4:	60b9      	str	r1, [r7, #8]
 80068c6:	4613      	mov	r3, r2
 80068c8:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 80068ca:	68fb      	ldr	r3, [r7, #12]
 80068cc:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80068d0:	b2db      	uxtb	r3, r3
 80068d2:	2b01      	cmp	r3, #1
 80068d4:	d001      	beq.n	80068da <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 80068d6:	2302      	movs	r3, #2
 80068d8:	e097      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 80068da:	68bb      	ldr	r3, [r7, #8]
 80068dc:	2b00      	cmp	r3, #0
 80068de:	d002      	beq.n	80068e6 <HAL_SPI_Transmit_DMA+0x2a>
 80068e0:	88fb      	ldrh	r3, [r7, #6]
 80068e2:	2b00      	cmp	r3, #0
 80068e4:	d101      	bne.n	80068ea <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 80068e6:	2301      	movs	r3, #1
 80068e8:	e08f      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80068ea:	68fb      	ldr	r3, [r7, #12]
 80068ec:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80068f0:	2b01      	cmp	r3, #1
 80068f2:	d101      	bne.n	80068f8 <HAL_SPI_Transmit_DMA+0x3c>
 80068f4:	2302      	movs	r3, #2
 80068f6:	e088      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	2201      	movs	r2, #1
 80068fc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006900:	68fb      	ldr	r3, [r7, #12]
 8006902:	2203      	movs	r2, #3
 8006904:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006908:	68fb      	ldr	r3, [r7, #12]
 800690a:	2200      	movs	r2, #0
 800690c:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 800690e:	68fb      	ldr	r3, [r7, #12]
 8006910:	68ba      	ldr	r2, [r7, #8]
 8006912:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 8006914:	68fb      	ldr	r3, [r7, #12]
 8006916:	88fa      	ldrh	r2, [r7, #6]
 8006918:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 800691a:	68fb      	ldr	r3, [r7, #12]
 800691c:	88fa      	ldrh	r2, [r7, #6]
 800691e:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	2200      	movs	r2, #0
 8006924:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 8006926:	68fb      	ldr	r3, [r7, #12]
 8006928:	2200      	movs	r2, #0
 800692a:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	2200      	movs	r2, #0
 8006930:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 8006932:	68fb      	ldr	r3, [r7, #12]
 8006934:	2200      	movs	r2, #0
 8006936:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006938:	68fb      	ldr	r3, [r7, #12]
 800693a:	2200      	movs	r2, #0
 800693c:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800693e:	68fb      	ldr	r3, [r7, #12]
 8006940:	689b      	ldr	r3, [r3, #8]
 8006942:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006946:	d10f      	bne.n	8006968 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006948:	68fb      	ldr	r3, [r7, #12]
 800694a:	681b      	ldr	r3, [r3, #0]
 800694c:	681a      	ldr	r2, [r3, #0]
 800694e:	68fb      	ldr	r3, [r7, #12]
 8006950:	681b      	ldr	r3, [r3, #0]
 8006952:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006956:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006958:	68fb      	ldr	r3, [r7, #12]
 800695a:	681b      	ldr	r3, [r3, #0]
 800695c:	681a      	ldr	r2, [r3, #0]
 800695e:	68fb      	ldr	r3, [r7, #12]
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006966:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8006968:	68fb      	ldr	r3, [r7, #12]
 800696a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800696c:	4a29      	ldr	r2, [pc, #164]	@ (8006a14 <HAL_SPI_Transmit_DMA+0x158>)
 800696e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006974:	4a28      	ldr	r2, [pc, #160]	@ (8006a18 <HAL_SPI_Transmit_DMA+0x15c>)
 8006976:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8006978:	68fb      	ldr	r3, [r7, #12]
 800697a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800697c:	4a27      	ldr	r2, [pc, #156]	@ (8006a1c <HAL_SPI_Transmit_DMA+0x160>)
 800697e:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006984:	2200      	movs	r2, #0
 8006986:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 8006988:	68fb      	ldr	r3, [r7, #12]
 800698a:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 800698c:	68fb      	ldr	r3, [r7, #12]
 800698e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006990:	4619      	mov	r1, r3
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	330c      	adds	r3, #12
 8006998:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 800699a:	68fb      	ldr	r3, [r7, #12]
 800699c:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800699e:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80069a0:	f7fd f802 	bl	80039a8 <HAL_DMA_Start_IT>
 80069a4:	4603      	mov	r3, r0
 80069a6:	2b00      	cmp	r3, #0
 80069a8:	d00b      	beq.n	80069c2 <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 80069aa:	68fb      	ldr	r3, [r7, #12]
 80069ac:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80069ae:	f043 0210 	orr.w	r2, r3, #16
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 80069b6:	68fb      	ldr	r3, [r7, #12]
 80069b8:	2200      	movs	r2, #0
 80069ba:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 80069be:	2301      	movs	r3, #1
 80069c0:	e023      	b.n	8006a0a <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	681b      	ldr	r3, [r3, #0]
 80069c6:	681b      	ldr	r3, [r3, #0]
 80069c8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80069cc:	2b40      	cmp	r3, #64	@ 0x40
 80069ce:	d007      	beq.n	80069e0 <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80069d0:	68fb      	ldr	r3, [r7, #12]
 80069d2:	681b      	ldr	r3, [r3, #0]
 80069d4:	681a      	ldr	r2, [r3, #0]
 80069d6:	68fb      	ldr	r3, [r7, #12]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80069de:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80069e0:	68fb      	ldr	r3, [r7, #12]
 80069e2:	2200      	movs	r2, #0
 80069e4:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	681b      	ldr	r3, [r3, #0]
 80069ec:	685a      	ldr	r2, [r3, #4]
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	f042 0220 	orr.w	r2, r2, #32
 80069f6:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	685a      	ldr	r2, [r3, #4]
 80069fe:	68fb      	ldr	r3, [r7, #12]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	f042 0202 	orr.w	r2, r2, #2
 8006a06:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 8006a08:	2300      	movs	r3, #0
}
 8006a0a:	4618      	mov	r0, r3
 8006a0c:	3710      	adds	r7, #16
 8006a0e:	46bd      	mov	sp, r7
 8006a10:	bd80      	pop	{r7, pc}
 8006a12:	bf00      	nop
 8006a14:	08006cc5 	.word	0x08006cc5
 8006a18:	08006c1d 	.word	0x08006c1d
 8006a1c:	08006ce1 	.word	0x08006ce1

08006a20 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8006a20:	b580      	push	{r7, lr}
 8006a22:	b088      	sub	sp, #32
 8006a24:	af00      	add	r7, sp, #0
 8006a26:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	681b      	ldr	r3, [r3, #0]
 8006a2c:	685b      	ldr	r3, [r3, #4]
 8006a2e:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8006a30:	687b      	ldr	r3, [r7, #4]
 8006a32:	681b      	ldr	r3, [r3, #0]
 8006a34:	689b      	ldr	r3, [r3, #8]
 8006a36:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006a38:	69bb      	ldr	r3, [r7, #24]
 8006a3a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a3e:	2b00      	cmp	r3, #0
 8006a40:	d10e      	bne.n	8006a60 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006a42:	69bb      	ldr	r3, [r7, #24]
 8006a44:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006a48:	2b00      	cmp	r3, #0
 8006a4a:	d009      	beq.n	8006a60 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006a4c:	69fb      	ldr	r3, [r7, #28]
 8006a4e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a52:	2b00      	cmp	r3, #0
 8006a54:	d004      	beq.n	8006a60 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8006a56:	687b      	ldr	r3, [r7, #4]
 8006a58:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a5a:	6878      	ldr	r0, [r7, #4]
 8006a5c:	4798      	blx	r3
    return;
 8006a5e:	e0ce      	b.n	8006bfe <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8006a60:	69bb      	ldr	r3, [r7, #24]
 8006a62:	f003 0302 	and.w	r3, r3, #2
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	d009      	beq.n	8006a7e <HAL_SPI_IRQHandler+0x5e>
 8006a6a:	69fb      	ldr	r3, [r7, #28]
 8006a6c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006a70:	2b00      	cmp	r3, #0
 8006a72:	d004      	beq.n	8006a7e <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006a78:	6878      	ldr	r0, [r7, #4]
 8006a7a:	4798      	blx	r3
    return;
 8006a7c:	e0bf      	b.n	8006bfe <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006a7e:	69bb      	ldr	r3, [r7, #24]
 8006a80:	f003 0320 	and.w	r3, r3, #32
 8006a84:	2b00      	cmp	r3, #0
 8006a86:	d10a      	bne.n	8006a9e <HAL_SPI_IRQHandler+0x7e>
 8006a88:	69bb      	ldr	r3, [r7, #24]
 8006a8a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a8e:	2b00      	cmp	r3, #0
 8006a90:	d105      	bne.n	8006a9e <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8006a92:	69bb      	ldr	r3, [r7, #24]
 8006a94:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006a98:	2b00      	cmp	r3, #0
 8006a9a:	f000 80b0 	beq.w	8006bfe <HAL_SPI_IRQHandler+0x1de>
 8006a9e:	69fb      	ldr	r3, [r7, #28]
 8006aa0:	f003 0320 	and.w	r3, r3, #32
 8006aa4:	2b00      	cmp	r3, #0
 8006aa6:	f000 80aa 	beq.w	8006bfe <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006aaa:	69bb      	ldr	r3, [r7, #24]
 8006aac:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	d023      	beq.n	8006afc <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006ab4:	687b      	ldr	r3, [r7, #4]
 8006ab6:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006aba:	b2db      	uxtb	r3, r3
 8006abc:	2b03      	cmp	r3, #3
 8006abe:	d011      	beq.n	8006ae4 <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ac4:	f043 0204 	orr.w	r2, r3, #4
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006acc:	2300      	movs	r3, #0
 8006ace:	617b      	str	r3, [r7, #20]
 8006ad0:	687b      	ldr	r3, [r7, #4]
 8006ad2:	681b      	ldr	r3, [r3, #0]
 8006ad4:	68db      	ldr	r3, [r3, #12]
 8006ad6:	617b      	str	r3, [r7, #20]
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	689b      	ldr	r3, [r3, #8]
 8006ade:	617b      	str	r3, [r7, #20]
 8006ae0:	697b      	ldr	r3, [r7, #20]
 8006ae2:	e00b      	b.n	8006afc <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	613b      	str	r3, [r7, #16]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	68db      	ldr	r3, [r3, #12]
 8006aee:	613b      	str	r3, [r7, #16]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	689b      	ldr	r3, [r3, #8]
 8006af6:	613b      	str	r3, [r7, #16]
 8006af8:	693b      	ldr	r3, [r7, #16]
        return;
 8006afa:	e080      	b.n	8006bfe <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006afc:	69bb      	ldr	r3, [r7, #24]
 8006afe:	f003 0320 	and.w	r3, r3, #32
 8006b02:	2b00      	cmp	r3, #0
 8006b04:	d014      	beq.n	8006b30 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006b06:	687b      	ldr	r3, [r7, #4]
 8006b08:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b0a:	f043 0201 	orr.w	r2, r3, #1
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006b12:	2300      	movs	r3, #0
 8006b14:	60fb      	str	r3, [r7, #12]
 8006b16:	687b      	ldr	r3, [r7, #4]
 8006b18:	681b      	ldr	r3, [r3, #0]
 8006b1a:	689b      	ldr	r3, [r3, #8]
 8006b1c:	60fb      	str	r3, [r7, #12]
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	681b      	ldr	r3, [r3, #0]
 8006b22:	681a      	ldr	r2, [r3, #0]
 8006b24:	687b      	ldr	r3, [r7, #4]
 8006b26:	681b      	ldr	r3, [r3, #0]
 8006b28:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b2c:	601a      	str	r2, [r3, #0]
 8006b2e:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8006b30:	69bb      	ldr	r3, [r7, #24]
 8006b32:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006b36:	2b00      	cmp	r3, #0
 8006b38:	d00c      	beq.n	8006b54 <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b3e:	f043 0208 	orr.w	r2, r3, #8
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006b46:	2300      	movs	r3, #0
 8006b48:	60bb      	str	r3, [r7, #8]
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	681b      	ldr	r3, [r3, #0]
 8006b4e:	689b      	ldr	r3, [r3, #8]
 8006b50:	60bb      	str	r3, [r7, #8]
 8006b52:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b58:	2b00      	cmp	r3, #0
 8006b5a:	d04f      	beq.n	8006bfc <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8006b5c:	687b      	ldr	r3, [r7, #4]
 8006b5e:	681b      	ldr	r3, [r3, #0]
 8006b60:	685a      	ldr	r2, [r3, #4]
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	681b      	ldr	r3, [r3, #0]
 8006b66:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006b6a:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	2201      	movs	r2, #1
 8006b70:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8006b74:	69fb      	ldr	r3, [r7, #28]
 8006b76:	f003 0302 	and.w	r3, r3, #2
 8006b7a:	2b00      	cmp	r3, #0
 8006b7c:	d104      	bne.n	8006b88 <HAL_SPI_IRQHandler+0x168>
 8006b7e:	69fb      	ldr	r3, [r7, #28]
 8006b80:	f003 0301 	and.w	r3, r3, #1
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	d034      	beq.n	8006bf2 <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006b88:	687b      	ldr	r3, [r7, #4]
 8006b8a:	681b      	ldr	r3, [r3, #0]
 8006b8c:	685a      	ldr	r2, [r3, #4]
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	681b      	ldr	r3, [r3, #0]
 8006b92:	f022 0203 	bic.w	r2, r2, #3
 8006b96:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006b98:	687b      	ldr	r3, [r7, #4]
 8006b9a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006b9c:	2b00      	cmp	r3, #0
 8006b9e:	d011      	beq.n	8006bc4 <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006ba4:	4a17      	ldr	r2, [pc, #92]	@ (8006c04 <HAL_SPI_IRQHandler+0x1e4>)
 8006ba6:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006bac:	4618      	mov	r0, r3
 8006bae:	f7fc ff53 	bl	8003a58 <HAL_DMA_Abort_IT>
 8006bb2:	4603      	mov	r3, r0
 8006bb4:	2b00      	cmp	r3, #0
 8006bb6:	d005      	beq.n	8006bc4 <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006bbc:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8006bc4:	687b      	ldr	r3, [r7, #4]
 8006bc6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bc8:	2b00      	cmp	r3, #0
 8006bca:	d016      	beq.n	8006bfa <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bd0:	4a0c      	ldr	r2, [pc, #48]	@ (8006c04 <HAL_SPI_IRQHandler+0x1e4>)
 8006bd2:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bd8:	4618      	mov	r0, r3
 8006bda:	f7fc ff3d 	bl	8003a58 <HAL_DMA_Abort_IT>
 8006bde:	4603      	mov	r3, r0
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	d00a      	beq.n	8006bfa <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006be8:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 8006bf0:	e003      	b.n	8006bfa <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8006bf2:	6878      	ldr	r0, [r7, #4]
 8006bf4:	f7fb fbc2 	bl	800237c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8006bf8:	e000      	b.n	8006bfc <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8006bfa:	bf00      	nop
    return;
 8006bfc:	bf00      	nop
  }
}
 8006bfe:	3720      	adds	r7, #32
 8006c00:	46bd      	mov	sp, r7
 8006c02:	bd80      	pop	{r7, pc}
 8006c04:	08006d21 	.word	0x08006d21

08006c08 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8006c08:	b480      	push	{r7}
 8006c0a:	b083      	sub	sp, #12
 8006c0c:	af00      	add	r7, sp, #0
 8006c0e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8006c10:	bf00      	nop
 8006c12:	370c      	adds	r7, #12
 8006c14:	46bd      	mov	sp, r7
 8006c16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c1a:	4770      	bx	lr

08006c1c <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006c1c:	b580      	push	{r7, lr}
 8006c1e:	b086      	sub	sp, #24
 8006c20:	af00      	add	r7, sp, #0
 8006c22:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006c24:	687b      	ldr	r3, [r7, #4]
 8006c26:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006c28:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006c2a:	f7fb ff0d 	bl	8002a48 <HAL_GetTick>
 8006c2e:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c3a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006c3e:	d03b      	beq.n	8006cb8 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8006c40:	697b      	ldr	r3, [r7, #20]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	685a      	ldr	r2, [r3, #4]
 8006c46:	697b      	ldr	r3, [r7, #20]
 8006c48:	681b      	ldr	r3, [r3, #0]
 8006c4a:	f022 0220 	bic.w	r2, r2, #32
 8006c4e:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8006c50:	697b      	ldr	r3, [r7, #20]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	685a      	ldr	r2, [r3, #4]
 8006c56:	697b      	ldr	r3, [r7, #20]
 8006c58:	681b      	ldr	r3, [r3, #0]
 8006c5a:	f022 0202 	bic.w	r2, r2, #2
 8006c5e:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8006c60:	693a      	ldr	r2, [r7, #16]
 8006c62:	2164      	movs	r1, #100	@ 0x64
 8006c64:	6978      	ldr	r0, [r7, #20]
 8006c66:	f000 f95d 	bl	8006f24 <SPI_EndRxTxTransaction>
 8006c6a:	4603      	mov	r3, r0
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	d005      	beq.n	8006c7c <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c70:	697b      	ldr	r3, [r7, #20]
 8006c72:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c74:	f043 0220 	orr.w	r2, r3, #32
 8006c78:	697b      	ldr	r3, [r7, #20]
 8006c7a:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006c7c:	697b      	ldr	r3, [r7, #20]
 8006c7e:	689b      	ldr	r3, [r3, #8]
 8006c80:	2b00      	cmp	r3, #0
 8006c82:	d10a      	bne.n	8006c9a <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006c84:	2300      	movs	r3, #0
 8006c86:	60fb      	str	r3, [r7, #12]
 8006c88:	697b      	ldr	r3, [r7, #20]
 8006c8a:	681b      	ldr	r3, [r3, #0]
 8006c8c:	68db      	ldr	r3, [r3, #12]
 8006c8e:	60fb      	str	r3, [r7, #12]
 8006c90:	697b      	ldr	r3, [r7, #20]
 8006c92:	681b      	ldr	r3, [r3, #0]
 8006c94:	689b      	ldr	r3, [r3, #8]
 8006c96:	60fb      	str	r3, [r7, #12]
 8006c98:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8006c9a:	697b      	ldr	r3, [r7, #20]
 8006c9c:	2200      	movs	r2, #0
 8006c9e:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8006ca0:	697b      	ldr	r3, [r7, #20]
 8006ca2:	2201      	movs	r2, #1
 8006ca4:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006ca8:	697b      	ldr	r3, [r7, #20]
 8006caa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cac:	2b00      	cmp	r3, #0
 8006cae:	d003      	beq.n	8006cb8 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8006cb0:	6978      	ldr	r0, [r7, #20]
 8006cb2:	f7fb fb63 	bl	800237c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8006cb6:	e002      	b.n	8006cbe <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8006cb8:	6978      	ldr	r0, [r7, #20]
 8006cba:	f7fb fb75 	bl	80023a8 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006cbe:	3718      	adds	r7, #24
 8006cc0:	46bd      	mov	sp, r7
 8006cc2:	bd80      	pop	{r7, pc}

08006cc4 <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006cc4:	b580      	push	{r7, lr}
 8006cc6:	b084      	sub	sp, #16
 8006cc8:	af00      	add	r7, sp, #0
 8006cca:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006cd0:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8006cd2:	68f8      	ldr	r0, [r7, #12]
 8006cd4:	f7ff ff98 	bl	8006c08 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006cd8:	bf00      	nop
 8006cda:	3710      	adds	r7, #16
 8006cdc:	46bd      	mov	sp, r7
 8006cde:	bd80      	pop	{r7, pc}

08006ce0 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8006ce0:	b580      	push	{r7, lr}
 8006ce2:	b084      	sub	sp, #16
 8006ce4:	af00      	add	r7, sp, #0
 8006ce6:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006ce8:	687b      	ldr	r3, [r7, #4]
 8006cea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006cec:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8006cee:	68fb      	ldr	r3, [r7, #12]
 8006cf0:	681b      	ldr	r3, [r3, #0]
 8006cf2:	685a      	ldr	r2, [r3, #4]
 8006cf4:	68fb      	ldr	r3, [r7, #12]
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	f022 0203 	bic.w	r2, r2, #3
 8006cfc:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006cfe:	68fb      	ldr	r3, [r7, #12]
 8006d00:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006d02:	f043 0210 	orr.w	r2, r3, #16
 8006d06:	68fb      	ldr	r3, [r7, #12]
 8006d08:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8006d0a:	68fb      	ldr	r3, [r7, #12]
 8006d0c:	2201      	movs	r2, #1
 8006d0e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006d12:	68f8      	ldr	r0, [r7, #12]
 8006d14:	f7fb fb32 	bl	800237c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006d18:	bf00      	nop
 8006d1a:	3710      	adds	r7, #16
 8006d1c:	46bd      	mov	sp, r7
 8006d1e:	bd80      	pop	{r7, pc}

08006d20 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006d20:	b580      	push	{r7, lr}
 8006d22:	b084      	sub	sp, #16
 8006d24:	af00      	add	r7, sp, #0
 8006d26:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d2c:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8006d2e:	68fb      	ldr	r3, [r7, #12]
 8006d30:	2200      	movs	r2, #0
 8006d32:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8006d34:	68fb      	ldr	r3, [r7, #12]
 8006d36:	2200      	movs	r2, #0
 8006d38:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006d3a:	68f8      	ldr	r0, [r7, #12]
 8006d3c:	f7fb fb1e 	bl	800237c <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006d40:	bf00      	nop
 8006d42:	3710      	adds	r7, #16
 8006d44:	46bd      	mov	sp, r7
 8006d46:	bd80      	pop	{r7, pc}

08006d48 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006d48:	b580      	push	{r7, lr}
 8006d4a:	b088      	sub	sp, #32
 8006d4c:	af00      	add	r7, sp, #0
 8006d4e:	60f8      	str	r0, [r7, #12]
 8006d50:	60b9      	str	r1, [r7, #8]
 8006d52:	603b      	str	r3, [r7, #0]
 8006d54:	4613      	mov	r3, r2
 8006d56:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006d58:	f7fb fe76 	bl	8002a48 <HAL_GetTick>
 8006d5c:	4602      	mov	r2, r0
 8006d5e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006d60:	1a9b      	subs	r3, r3, r2
 8006d62:	683a      	ldr	r2, [r7, #0]
 8006d64:	4413      	add	r3, r2
 8006d66:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006d68:	f7fb fe6e 	bl	8002a48 <HAL_GetTick>
 8006d6c:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006d6e:	4b39      	ldr	r3, [pc, #228]	@ (8006e54 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	015b      	lsls	r3, r3, #5
 8006d74:	0d1b      	lsrs	r3, r3, #20
 8006d76:	69fa      	ldr	r2, [r7, #28]
 8006d78:	fb02 f303 	mul.w	r3, r2, r3
 8006d7c:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006d7e:	e054      	b.n	8006e2a <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006d80:	683b      	ldr	r3, [r7, #0]
 8006d82:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d86:	d050      	beq.n	8006e2a <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006d88:	f7fb fe5e 	bl	8002a48 <HAL_GetTick>
 8006d8c:	4602      	mov	r2, r0
 8006d8e:	69bb      	ldr	r3, [r7, #24]
 8006d90:	1ad3      	subs	r3, r2, r3
 8006d92:	69fa      	ldr	r2, [r7, #28]
 8006d94:	429a      	cmp	r2, r3
 8006d96:	d902      	bls.n	8006d9e <SPI_WaitFlagStateUntilTimeout+0x56>
 8006d98:	69fb      	ldr	r3, [r7, #28]
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d13d      	bne.n	8006e1a <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	685a      	ldr	r2, [r3, #4]
 8006da4:	68fb      	ldr	r3, [r7, #12]
 8006da6:	681b      	ldr	r3, [r3, #0]
 8006da8:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006dac:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006dae:	68fb      	ldr	r3, [r7, #12]
 8006db0:	685b      	ldr	r3, [r3, #4]
 8006db2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006db6:	d111      	bne.n	8006ddc <SPI_WaitFlagStateUntilTimeout+0x94>
 8006db8:	68fb      	ldr	r3, [r7, #12]
 8006dba:	689b      	ldr	r3, [r3, #8]
 8006dbc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006dc0:	d004      	beq.n	8006dcc <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	689b      	ldr	r3, [r3, #8]
 8006dc6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006dca:	d107      	bne.n	8006ddc <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006dcc:	68fb      	ldr	r3, [r7, #12]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	681a      	ldr	r2, [r3, #0]
 8006dd2:	68fb      	ldr	r3, [r7, #12]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006dda:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006ddc:	68fb      	ldr	r3, [r7, #12]
 8006dde:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006de0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006de4:	d10f      	bne.n	8006e06 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006de6:	68fb      	ldr	r3, [r7, #12]
 8006de8:	681b      	ldr	r3, [r3, #0]
 8006dea:	681a      	ldr	r2, [r3, #0]
 8006dec:	68fb      	ldr	r3, [r7, #12]
 8006dee:	681b      	ldr	r3, [r3, #0]
 8006df0:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006df4:	601a      	str	r2, [r3, #0]
 8006df6:	68fb      	ldr	r3, [r7, #12]
 8006df8:	681b      	ldr	r3, [r3, #0]
 8006dfa:	681a      	ldr	r2, [r3, #0]
 8006dfc:	68fb      	ldr	r3, [r7, #12]
 8006dfe:	681b      	ldr	r3, [r3, #0]
 8006e00:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006e04:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006e06:	68fb      	ldr	r3, [r7, #12]
 8006e08:	2201      	movs	r2, #1
 8006e0a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006e0e:	68fb      	ldr	r3, [r7, #12]
 8006e10:	2200      	movs	r2, #0
 8006e12:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8006e16:	2303      	movs	r3, #3
 8006e18:	e017      	b.n	8006e4a <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006e1a:	697b      	ldr	r3, [r7, #20]
 8006e1c:	2b00      	cmp	r3, #0
 8006e1e:	d101      	bne.n	8006e24 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006e20:	2300      	movs	r3, #0
 8006e22:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006e24:	697b      	ldr	r3, [r7, #20]
 8006e26:	3b01      	subs	r3, #1
 8006e28:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006e2a:	68fb      	ldr	r3, [r7, #12]
 8006e2c:	681b      	ldr	r3, [r3, #0]
 8006e2e:	689a      	ldr	r2, [r3, #8]
 8006e30:	68bb      	ldr	r3, [r7, #8]
 8006e32:	4013      	ands	r3, r2
 8006e34:	68ba      	ldr	r2, [r7, #8]
 8006e36:	429a      	cmp	r2, r3
 8006e38:	bf0c      	ite	eq
 8006e3a:	2301      	moveq	r3, #1
 8006e3c:	2300      	movne	r3, #0
 8006e3e:	b2db      	uxtb	r3, r3
 8006e40:	461a      	mov	r2, r3
 8006e42:	79fb      	ldrb	r3, [r7, #7]
 8006e44:	429a      	cmp	r2, r3
 8006e46:	d19b      	bne.n	8006d80 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006e48:	2300      	movs	r3, #0
}
 8006e4a:	4618      	mov	r0, r3
 8006e4c:	3720      	adds	r7, #32
 8006e4e:	46bd      	mov	sp, r7
 8006e50:	bd80      	pop	{r7, pc}
 8006e52:	bf00      	nop
 8006e54:	20000008 	.word	0x20000008

08006e58 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006e58:	b580      	push	{r7, lr}
 8006e5a:	b086      	sub	sp, #24
 8006e5c:	af02      	add	r7, sp, #8
 8006e5e:	60f8      	str	r0, [r7, #12]
 8006e60:	60b9      	str	r1, [r7, #8]
 8006e62:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006e64:	68fb      	ldr	r3, [r7, #12]
 8006e66:	685b      	ldr	r3, [r3, #4]
 8006e68:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006e6c:	d111      	bne.n	8006e92 <SPI_EndRxTransaction+0x3a>
 8006e6e:	68fb      	ldr	r3, [r7, #12]
 8006e70:	689b      	ldr	r3, [r3, #8]
 8006e72:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006e76:	d004      	beq.n	8006e82 <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006e78:	68fb      	ldr	r3, [r7, #12]
 8006e7a:	689b      	ldr	r3, [r3, #8]
 8006e7c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006e80:	d107      	bne.n	8006e92 <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006e82:	68fb      	ldr	r3, [r7, #12]
 8006e84:	681b      	ldr	r3, [r3, #0]
 8006e86:	681a      	ldr	r2, [r3, #0]
 8006e88:	68fb      	ldr	r3, [r7, #12]
 8006e8a:	681b      	ldr	r3, [r3, #0]
 8006e8c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006e90:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006e92:	68fb      	ldr	r3, [r7, #12]
 8006e94:	685b      	ldr	r3, [r3, #4]
 8006e96:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006e9a:	d12a      	bne.n	8006ef2 <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	689b      	ldr	r3, [r3, #8]
 8006ea0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006ea4:	d012      	beq.n	8006ecc <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	9300      	str	r3, [sp, #0]
 8006eaa:	68bb      	ldr	r3, [r7, #8]
 8006eac:	2200      	movs	r2, #0
 8006eae:	2180      	movs	r1, #128	@ 0x80
 8006eb0:	68f8      	ldr	r0, [r7, #12]
 8006eb2:	f7ff ff49 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006eb6:	4603      	mov	r3, r0
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d02d      	beq.n	8006f18 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006ebc:	68fb      	ldr	r3, [r7, #12]
 8006ebe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ec0:	f043 0220 	orr.w	r2, r3, #32
 8006ec4:	68fb      	ldr	r3, [r7, #12]
 8006ec6:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006ec8:	2303      	movs	r3, #3
 8006eca:	e026      	b.n	8006f1a <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	9300      	str	r3, [sp, #0]
 8006ed0:	68bb      	ldr	r3, [r7, #8]
 8006ed2:	2200      	movs	r2, #0
 8006ed4:	2101      	movs	r1, #1
 8006ed6:	68f8      	ldr	r0, [r7, #12]
 8006ed8:	f7ff ff36 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006edc:	4603      	mov	r3, r0
 8006ede:	2b00      	cmp	r3, #0
 8006ee0:	d01a      	beq.n	8006f18 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006ee2:	68fb      	ldr	r3, [r7, #12]
 8006ee4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ee6:	f043 0220 	orr.w	r2, r3, #32
 8006eea:	68fb      	ldr	r3, [r7, #12]
 8006eec:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006eee:	2303      	movs	r3, #3
 8006ef0:	e013      	b.n	8006f1a <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	9300      	str	r3, [sp, #0]
 8006ef6:	68bb      	ldr	r3, [r7, #8]
 8006ef8:	2200      	movs	r2, #0
 8006efa:	2101      	movs	r1, #1
 8006efc:	68f8      	ldr	r0, [r7, #12]
 8006efe:	f7ff ff23 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006f02:	4603      	mov	r3, r0
 8006f04:	2b00      	cmp	r3, #0
 8006f06:	d007      	beq.n	8006f18 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f08:	68fb      	ldr	r3, [r7, #12]
 8006f0a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f0c:	f043 0220 	orr.w	r2, r3, #32
 8006f10:	68fb      	ldr	r3, [r7, #12]
 8006f12:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006f14:	2303      	movs	r3, #3
 8006f16:	e000      	b.n	8006f1a <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006f18:	2300      	movs	r3, #0
}
 8006f1a:	4618      	mov	r0, r3
 8006f1c:	3710      	adds	r7, #16
 8006f1e:	46bd      	mov	sp, r7
 8006f20:	bd80      	pop	{r7, pc}
	...

08006f24 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006f24:	b580      	push	{r7, lr}
 8006f26:	b088      	sub	sp, #32
 8006f28:	af02      	add	r7, sp, #8
 8006f2a:	60f8      	str	r0, [r7, #12]
 8006f2c:	60b9      	str	r1, [r7, #8]
 8006f2e:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	9300      	str	r3, [sp, #0]
 8006f34:	68bb      	ldr	r3, [r7, #8]
 8006f36:	2201      	movs	r2, #1
 8006f38:	2102      	movs	r1, #2
 8006f3a:	68f8      	ldr	r0, [r7, #12]
 8006f3c:	f7ff ff04 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006f40:	4603      	mov	r3, r0
 8006f42:	2b00      	cmp	r3, #0
 8006f44:	d007      	beq.n	8006f56 <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f46:	68fb      	ldr	r3, [r7, #12]
 8006f48:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f4a:	f043 0220 	orr.w	r2, r3, #32
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006f52:	2303      	movs	r3, #3
 8006f54:	e032      	b.n	8006fbc <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006f56:	4b1b      	ldr	r3, [pc, #108]	@ (8006fc4 <SPI_EndRxTxTransaction+0xa0>)
 8006f58:	681b      	ldr	r3, [r3, #0]
 8006f5a:	4a1b      	ldr	r2, [pc, #108]	@ (8006fc8 <SPI_EndRxTxTransaction+0xa4>)
 8006f5c:	fba2 2303 	umull	r2, r3, r2, r3
 8006f60:	0d5b      	lsrs	r3, r3, #21
 8006f62:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006f66:	fb02 f303 	mul.w	r3, r2, r3
 8006f6a:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f6c:	68fb      	ldr	r3, [r7, #12]
 8006f6e:	685b      	ldr	r3, [r3, #4]
 8006f70:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006f74:	d112      	bne.n	8006f9c <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	9300      	str	r3, [sp, #0]
 8006f7a:	68bb      	ldr	r3, [r7, #8]
 8006f7c:	2200      	movs	r2, #0
 8006f7e:	2180      	movs	r1, #128	@ 0x80
 8006f80:	68f8      	ldr	r0, [r7, #12]
 8006f82:	f7ff fee1 	bl	8006d48 <SPI_WaitFlagStateUntilTimeout>
 8006f86:	4603      	mov	r3, r0
 8006f88:	2b00      	cmp	r3, #0
 8006f8a:	d016      	beq.n	8006fba <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f8c:	68fb      	ldr	r3, [r7, #12]
 8006f8e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f90:	f043 0220 	orr.w	r2, r3, #32
 8006f94:	68fb      	ldr	r3, [r7, #12]
 8006f96:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006f98:	2303      	movs	r3, #3
 8006f9a:	e00f      	b.n	8006fbc <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8006f9c:	697b      	ldr	r3, [r7, #20]
 8006f9e:	2b00      	cmp	r3, #0
 8006fa0:	d00a      	beq.n	8006fb8 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8006fa2:	697b      	ldr	r3, [r7, #20]
 8006fa4:	3b01      	subs	r3, #1
 8006fa6:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006fa8:	68fb      	ldr	r3, [r7, #12]
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	689b      	ldr	r3, [r3, #8]
 8006fae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006fb2:	2b80      	cmp	r3, #128	@ 0x80
 8006fb4:	d0f2      	beq.n	8006f9c <SPI_EndRxTxTransaction+0x78>
 8006fb6:	e000      	b.n	8006fba <SPI_EndRxTxTransaction+0x96>
        break;
 8006fb8:	bf00      	nop
  }

  return HAL_OK;
 8006fba:	2300      	movs	r3, #0
}
 8006fbc:	4618      	mov	r0, r3
 8006fbe:	3718      	adds	r7, #24
 8006fc0:	46bd      	mov	sp, r7
 8006fc2:	bd80      	pop	{r7, pc}
 8006fc4:	20000008 	.word	0x20000008
 8006fc8:	165e9f81 	.word	0x165e9f81

08006fcc <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006fcc:	b580      	push	{r7, lr}
 8006fce:	b082      	sub	sp, #8
 8006fd0:	af00      	add	r7, sp, #0
 8006fd2:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	d101      	bne.n	8006fde <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006fda:	2301      	movs	r3, #1
 8006fdc:	e041      	b.n	8007062 <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006fde:	687b      	ldr	r3, [r7, #4]
 8006fe0:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006fe4:	b2db      	uxtb	r3, r3
 8006fe6:	2b00      	cmp	r3, #0
 8006fe8:	d106      	bne.n	8006ff8 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8006fea:	687b      	ldr	r3, [r7, #4]
 8006fec:	2200      	movs	r2, #0
 8006fee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8006ff2:	6878      	ldr	r0, [r7, #4]
 8006ff4:	f7fa fe0a 	bl	8001c0c <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8006ff8:	687b      	ldr	r3, [r7, #4]
 8006ffa:	2202      	movs	r2, #2
 8006ffc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	681a      	ldr	r2, [r3, #0]
 8007004:	687b      	ldr	r3, [r7, #4]
 8007006:	3304      	adds	r3, #4
 8007008:	4619      	mov	r1, r3
 800700a:	4610      	mov	r0, r2
 800700c:	f000 fc62 	bl	80078d4 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	2201      	movs	r2, #1
 8007014:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	2201      	movs	r2, #1
 800701c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007020:	687b      	ldr	r3, [r7, #4]
 8007022:	2201      	movs	r2, #1
 8007024:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	2201      	movs	r2, #1
 800702c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007030:	687b      	ldr	r3, [r7, #4]
 8007032:	2201      	movs	r2, #1
 8007034:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	2201      	movs	r2, #1
 800703c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	2201      	movs	r2, #1
 8007044:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	2201      	movs	r2, #1
 800704c:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007050:	687b      	ldr	r3, [r7, #4]
 8007052:	2201      	movs	r2, #1
 8007054:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	2201      	movs	r2, #1
 800705c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8007060:	2300      	movs	r3, #0
}
 8007062:	4618      	mov	r0, r3
 8007064:	3708      	adds	r7, #8
 8007066:	46bd      	mov	sp, r7
 8007068:	bd80      	pop	{r7, pc}
	...

0800706c <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 800706c:	b480      	push	{r7}
 800706e:	b085      	sub	sp, #20
 8007070:	af00      	add	r7, sp, #0
 8007072:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800707a:	b2db      	uxtb	r3, r3
 800707c:	2b01      	cmp	r3, #1
 800707e:	d001      	beq.n	8007084 <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8007080:	2301      	movs	r3, #1
 8007082:	e04e      	b.n	8007122 <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	2202      	movs	r2, #2
 8007088:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	681b      	ldr	r3, [r3, #0]
 8007090:	68da      	ldr	r2, [r3, #12]
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	681b      	ldr	r3, [r3, #0]
 8007096:	f042 0201 	orr.w	r2, r2, #1
 800709a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	681b      	ldr	r3, [r3, #0]
 80070a0:	4a23      	ldr	r2, [pc, #140]	@ (8007130 <HAL_TIM_Base_Start_IT+0xc4>)
 80070a2:	4293      	cmp	r3, r2
 80070a4:	d022      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	681b      	ldr	r3, [r3, #0]
 80070aa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070ae:	d01d      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	681b      	ldr	r3, [r3, #0]
 80070b4:	4a1f      	ldr	r2, [pc, #124]	@ (8007134 <HAL_TIM_Base_Start_IT+0xc8>)
 80070b6:	4293      	cmp	r3, r2
 80070b8:	d018      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070ba:	687b      	ldr	r3, [r7, #4]
 80070bc:	681b      	ldr	r3, [r3, #0]
 80070be:	4a1e      	ldr	r2, [pc, #120]	@ (8007138 <HAL_TIM_Base_Start_IT+0xcc>)
 80070c0:	4293      	cmp	r3, r2
 80070c2:	d013      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070c4:	687b      	ldr	r3, [r7, #4]
 80070c6:	681b      	ldr	r3, [r3, #0]
 80070c8:	4a1c      	ldr	r2, [pc, #112]	@ (800713c <HAL_TIM_Base_Start_IT+0xd0>)
 80070ca:	4293      	cmp	r3, r2
 80070cc:	d00e      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	681b      	ldr	r3, [r3, #0]
 80070d2:	4a1b      	ldr	r2, [pc, #108]	@ (8007140 <HAL_TIM_Base_Start_IT+0xd4>)
 80070d4:	4293      	cmp	r3, r2
 80070d6:	d009      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070d8:	687b      	ldr	r3, [r7, #4]
 80070da:	681b      	ldr	r3, [r3, #0]
 80070dc:	4a19      	ldr	r2, [pc, #100]	@ (8007144 <HAL_TIM_Base_Start_IT+0xd8>)
 80070de:	4293      	cmp	r3, r2
 80070e0:	d004      	beq.n	80070ec <HAL_TIM_Base_Start_IT+0x80>
 80070e2:	687b      	ldr	r3, [r7, #4]
 80070e4:	681b      	ldr	r3, [r3, #0]
 80070e6:	4a18      	ldr	r2, [pc, #96]	@ (8007148 <HAL_TIM_Base_Start_IT+0xdc>)
 80070e8:	4293      	cmp	r3, r2
 80070ea:	d111      	bne.n	8007110 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	681b      	ldr	r3, [r3, #0]
 80070f0:	689b      	ldr	r3, [r3, #8]
 80070f2:	f003 0307 	and.w	r3, r3, #7
 80070f6:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 80070f8:	68fb      	ldr	r3, [r7, #12]
 80070fa:	2b06      	cmp	r3, #6
 80070fc:	d010      	beq.n	8007120 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 80070fe:	687b      	ldr	r3, [r7, #4]
 8007100:	681b      	ldr	r3, [r3, #0]
 8007102:	681a      	ldr	r2, [r3, #0]
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	f042 0201 	orr.w	r2, r2, #1
 800710c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800710e:	e007      	b.n	8007120 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007110:	687b      	ldr	r3, [r7, #4]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	681a      	ldr	r2, [r3, #0]
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	f042 0201 	orr.w	r2, r2, #1
 800711e:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007120:	2300      	movs	r3, #0
}
 8007122:	4618      	mov	r0, r3
 8007124:	3714      	adds	r7, #20
 8007126:	46bd      	mov	sp, r7
 8007128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800712c:	4770      	bx	lr
 800712e:	bf00      	nop
 8007130:	40010000 	.word	0x40010000
 8007134:	40000400 	.word	0x40000400
 8007138:	40000800 	.word	0x40000800
 800713c:	40000c00 	.word	0x40000c00
 8007140:	40010400 	.word	0x40010400
 8007144:	40014000 	.word	0x40014000
 8007148:	40001800 	.word	0x40001800

0800714c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 800714c:	b580      	push	{r7, lr}
 800714e:	b082      	sub	sp, #8
 8007150:	af00      	add	r7, sp, #0
 8007152:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007154:	687b      	ldr	r3, [r7, #4]
 8007156:	2b00      	cmp	r3, #0
 8007158:	d101      	bne.n	800715e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 800715a:	2301      	movs	r3, #1
 800715c:	e041      	b.n	80071e2 <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 800715e:	687b      	ldr	r3, [r7, #4]
 8007160:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007164:	b2db      	uxtb	r3, r3
 8007166:	2b00      	cmp	r3, #0
 8007168:	d106      	bne.n	8007178 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	2200      	movs	r2, #0
 800716e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8007172:	6878      	ldr	r0, [r7, #4]
 8007174:	f000 f839 	bl	80071ea <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007178:	687b      	ldr	r3, [r7, #4]
 800717a:	2202      	movs	r2, #2
 800717c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007180:	687b      	ldr	r3, [r7, #4]
 8007182:	681a      	ldr	r2, [r3, #0]
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	3304      	adds	r3, #4
 8007188:	4619      	mov	r1, r3
 800718a:	4610      	mov	r0, r2
 800718c:	f000 fba2 	bl	80078d4 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	2201      	movs	r2, #1
 8007194:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	2201      	movs	r2, #1
 800719c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	2201      	movs	r2, #1
 80071a4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	2201      	movs	r2, #1
 80071ac:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	2201      	movs	r2, #1
 80071b4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	2201      	movs	r2, #1
 80071bc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	2201      	movs	r2, #1
 80071c4:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	2201      	movs	r2, #1
 80071cc:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	2201      	movs	r2, #1
 80071d4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	2201      	movs	r2, #1
 80071dc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 80071e0:	2300      	movs	r3, #0
}
 80071e2:	4618      	mov	r0, r3
 80071e4:	3708      	adds	r7, #8
 80071e6:	46bd      	mov	sp, r7
 80071e8:	bd80      	pop	{r7, pc}

080071ea <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 80071ea:	b480      	push	{r7}
 80071ec:	b083      	sub	sp, #12
 80071ee:	af00      	add	r7, sp, #0
 80071f0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 80071f2:	bf00      	nop
 80071f4:	370c      	adds	r7, #12
 80071f6:	46bd      	mov	sp, r7
 80071f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071fc:	4770      	bx	lr
	...

08007200 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8007200:	b580      	push	{r7, lr}
 8007202:	b084      	sub	sp, #16
 8007204:	af00      	add	r7, sp, #0
 8007206:	6078      	str	r0, [r7, #4]
 8007208:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 800720a:	683b      	ldr	r3, [r7, #0]
 800720c:	2b00      	cmp	r3, #0
 800720e:	d109      	bne.n	8007224 <HAL_TIM_PWM_Start+0x24>
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8007216:	b2db      	uxtb	r3, r3
 8007218:	2b01      	cmp	r3, #1
 800721a:	bf14      	ite	ne
 800721c:	2301      	movne	r3, #1
 800721e:	2300      	moveq	r3, #0
 8007220:	b2db      	uxtb	r3, r3
 8007222:	e022      	b.n	800726a <HAL_TIM_PWM_Start+0x6a>
 8007224:	683b      	ldr	r3, [r7, #0]
 8007226:	2b04      	cmp	r3, #4
 8007228:	d109      	bne.n	800723e <HAL_TIM_PWM_Start+0x3e>
 800722a:	687b      	ldr	r3, [r7, #4]
 800722c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007230:	b2db      	uxtb	r3, r3
 8007232:	2b01      	cmp	r3, #1
 8007234:	bf14      	ite	ne
 8007236:	2301      	movne	r3, #1
 8007238:	2300      	moveq	r3, #0
 800723a:	b2db      	uxtb	r3, r3
 800723c:	e015      	b.n	800726a <HAL_TIM_PWM_Start+0x6a>
 800723e:	683b      	ldr	r3, [r7, #0]
 8007240:	2b08      	cmp	r3, #8
 8007242:	d109      	bne.n	8007258 <HAL_TIM_PWM_Start+0x58>
 8007244:	687b      	ldr	r3, [r7, #4]
 8007246:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800724a:	b2db      	uxtb	r3, r3
 800724c:	2b01      	cmp	r3, #1
 800724e:	bf14      	ite	ne
 8007250:	2301      	movne	r3, #1
 8007252:	2300      	moveq	r3, #0
 8007254:	b2db      	uxtb	r3, r3
 8007256:	e008      	b.n	800726a <HAL_TIM_PWM_Start+0x6a>
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800725e:	b2db      	uxtb	r3, r3
 8007260:	2b01      	cmp	r3, #1
 8007262:	bf14      	ite	ne
 8007264:	2301      	movne	r3, #1
 8007266:	2300      	moveq	r3, #0
 8007268:	b2db      	uxtb	r3, r3
 800726a:	2b00      	cmp	r3, #0
 800726c:	d001      	beq.n	8007272 <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 800726e:	2301      	movs	r3, #1
 8007270:	e07c      	b.n	800736c <HAL_TIM_PWM_Start+0x16c>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007272:	683b      	ldr	r3, [r7, #0]
 8007274:	2b00      	cmp	r3, #0
 8007276:	d104      	bne.n	8007282 <HAL_TIM_PWM_Start+0x82>
 8007278:	687b      	ldr	r3, [r7, #4]
 800727a:	2202      	movs	r2, #2
 800727c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007280:	e013      	b.n	80072aa <HAL_TIM_PWM_Start+0xaa>
 8007282:	683b      	ldr	r3, [r7, #0]
 8007284:	2b04      	cmp	r3, #4
 8007286:	d104      	bne.n	8007292 <HAL_TIM_PWM_Start+0x92>
 8007288:	687b      	ldr	r3, [r7, #4]
 800728a:	2202      	movs	r2, #2
 800728c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007290:	e00b      	b.n	80072aa <HAL_TIM_PWM_Start+0xaa>
 8007292:	683b      	ldr	r3, [r7, #0]
 8007294:	2b08      	cmp	r3, #8
 8007296:	d104      	bne.n	80072a2 <HAL_TIM_PWM_Start+0xa2>
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	2202      	movs	r2, #2
 800729c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80072a0:	e003      	b.n	80072aa <HAL_TIM_PWM_Start+0xaa>
 80072a2:	687b      	ldr	r3, [r7, #4]
 80072a4:	2202      	movs	r2, #2
 80072a6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	2201      	movs	r2, #1
 80072b0:	6839      	ldr	r1, [r7, #0]
 80072b2:	4618      	mov	r0, r3
 80072b4:	f000 fe04 	bl	8007ec0 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80072b8:	687b      	ldr	r3, [r7, #4]
 80072ba:	681b      	ldr	r3, [r3, #0]
 80072bc:	4a2d      	ldr	r2, [pc, #180]	@ (8007374 <HAL_TIM_PWM_Start+0x174>)
 80072be:	4293      	cmp	r3, r2
 80072c0:	d004      	beq.n	80072cc <HAL_TIM_PWM_Start+0xcc>
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	4a2c      	ldr	r2, [pc, #176]	@ (8007378 <HAL_TIM_PWM_Start+0x178>)
 80072c8:	4293      	cmp	r3, r2
 80072ca:	d101      	bne.n	80072d0 <HAL_TIM_PWM_Start+0xd0>
 80072cc:	2301      	movs	r3, #1
 80072ce:	e000      	b.n	80072d2 <HAL_TIM_PWM_Start+0xd2>
 80072d0:	2300      	movs	r3, #0
 80072d2:	2b00      	cmp	r3, #0
 80072d4:	d007      	beq.n	80072e6 <HAL_TIM_PWM_Start+0xe6>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 80072d6:	687b      	ldr	r3, [r7, #4]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80072dc:	687b      	ldr	r3, [r7, #4]
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80072e4:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80072e6:	687b      	ldr	r3, [r7, #4]
 80072e8:	681b      	ldr	r3, [r3, #0]
 80072ea:	4a22      	ldr	r2, [pc, #136]	@ (8007374 <HAL_TIM_PWM_Start+0x174>)
 80072ec:	4293      	cmp	r3, r2
 80072ee:	d022      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	681b      	ldr	r3, [r3, #0]
 80072f4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80072f8:	d01d      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	4a1f      	ldr	r2, [pc, #124]	@ (800737c <HAL_TIM_PWM_Start+0x17c>)
 8007300:	4293      	cmp	r3, r2
 8007302:	d018      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	681b      	ldr	r3, [r3, #0]
 8007308:	4a1d      	ldr	r2, [pc, #116]	@ (8007380 <HAL_TIM_PWM_Start+0x180>)
 800730a:	4293      	cmp	r3, r2
 800730c:	d013      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 800730e:	687b      	ldr	r3, [r7, #4]
 8007310:	681b      	ldr	r3, [r3, #0]
 8007312:	4a1c      	ldr	r2, [pc, #112]	@ (8007384 <HAL_TIM_PWM_Start+0x184>)
 8007314:	4293      	cmp	r3, r2
 8007316:	d00e      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 8007318:	687b      	ldr	r3, [r7, #4]
 800731a:	681b      	ldr	r3, [r3, #0]
 800731c:	4a16      	ldr	r2, [pc, #88]	@ (8007378 <HAL_TIM_PWM_Start+0x178>)
 800731e:	4293      	cmp	r3, r2
 8007320:	d009      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	681b      	ldr	r3, [r3, #0]
 8007326:	4a18      	ldr	r2, [pc, #96]	@ (8007388 <HAL_TIM_PWM_Start+0x188>)
 8007328:	4293      	cmp	r3, r2
 800732a:	d004      	beq.n	8007336 <HAL_TIM_PWM_Start+0x136>
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	4a16      	ldr	r2, [pc, #88]	@ (800738c <HAL_TIM_PWM_Start+0x18c>)
 8007332:	4293      	cmp	r3, r2
 8007334:	d111      	bne.n	800735a <HAL_TIM_PWM_Start+0x15a>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	681b      	ldr	r3, [r3, #0]
 800733a:	689b      	ldr	r3, [r3, #8]
 800733c:	f003 0307 	and.w	r3, r3, #7
 8007340:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007342:	68fb      	ldr	r3, [r7, #12]
 8007344:	2b06      	cmp	r3, #6
 8007346:	d010      	beq.n	800736a <HAL_TIM_PWM_Start+0x16a>
    {
      __HAL_TIM_ENABLE(htim);
 8007348:	687b      	ldr	r3, [r7, #4]
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	681a      	ldr	r2, [r3, #0]
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	f042 0201 	orr.w	r2, r2, #1
 8007356:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007358:	e007      	b.n	800736a <HAL_TIM_PWM_Start+0x16a>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	681a      	ldr	r2, [r3, #0]
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	681b      	ldr	r3, [r3, #0]
 8007364:	f042 0201 	orr.w	r2, r2, #1
 8007368:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800736a:	2300      	movs	r3, #0
}
 800736c:	4618      	mov	r0, r3
 800736e:	3710      	adds	r7, #16
 8007370:	46bd      	mov	sp, r7
 8007372:	bd80      	pop	{r7, pc}
 8007374:	40010000 	.word	0x40010000
 8007378:	40010400 	.word	0x40010400
 800737c:	40000400 	.word	0x40000400
 8007380:	40000800 	.word	0x40000800
 8007384:	40000c00 	.word	0x40000c00
 8007388:	40014000 	.word	0x40014000
 800738c:	40001800 	.word	0x40001800

08007390 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8007390:	b580      	push	{r7, lr}
 8007392:	b084      	sub	sp, #16
 8007394:	af00      	add	r7, sp, #0
 8007396:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	68db      	ldr	r3, [r3, #12]
 800739e:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	681b      	ldr	r3, [r3, #0]
 80073a4:	691b      	ldr	r3, [r3, #16]
 80073a6:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80073a8:	68bb      	ldr	r3, [r7, #8]
 80073aa:	f003 0302 	and.w	r3, r3, #2
 80073ae:	2b00      	cmp	r3, #0
 80073b0:	d020      	beq.n	80073f4 <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80073b2:	68fb      	ldr	r3, [r7, #12]
 80073b4:	f003 0302 	and.w	r3, r3, #2
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	d01b      	beq.n	80073f4 <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80073bc:	687b      	ldr	r3, [r7, #4]
 80073be:	681b      	ldr	r3, [r3, #0]
 80073c0:	f06f 0202 	mvn.w	r2, #2
 80073c4:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80073c6:	687b      	ldr	r3, [r7, #4]
 80073c8:	2201      	movs	r2, #1
 80073ca:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80073cc:	687b      	ldr	r3, [r7, #4]
 80073ce:	681b      	ldr	r3, [r3, #0]
 80073d0:	699b      	ldr	r3, [r3, #24]
 80073d2:	f003 0303 	and.w	r3, r3, #3
 80073d6:	2b00      	cmp	r3, #0
 80073d8:	d003      	beq.n	80073e2 <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80073da:	6878      	ldr	r0, [r7, #4]
 80073dc:	f000 fa5b 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 80073e0:	e005      	b.n	80073ee <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80073e2:	6878      	ldr	r0, [r7, #4]
 80073e4:	f000 fa4d 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80073e8:	6878      	ldr	r0, [r7, #4]
 80073ea:	f000 fa5e 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80073ee:	687b      	ldr	r3, [r7, #4]
 80073f0:	2200      	movs	r2, #0
 80073f2:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80073f4:	68bb      	ldr	r3, [r7, #8]
 80073f6:	f003 0304 	and.w	r3, r3, #4
 80073fa:	2b00      	cmp	r3, #0
 80073fc:	d020      	beq.n	8007440 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80073fe:	68fb      	ldr	r3, [r7, #12]
 8007400:	f003 0304 	and.w	r3, r3, #4
 8007404:	2b00      	cmp	r3, #0
 8007406:	d01b      	beq.n	8007440 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007408:	687b      	ldr	r3, [r7, #4]
 800740a:	681b      	ldr	r3, [r3, #0]
 800740c:	f06f 0204 	mvn.w	r2, #4
 8007410:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007412:	687b      	ldr	r3, [r7, #4]
 8007414:	2202      	movs	r2, #2
 8007416:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	681b      	ldr	r3, [r3, #0]
 800741c:	699b      	ldr	r3, [r3, #24]
 800741e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007422:	2b00      	cmp	r3, #0
 8007424:	d003      	beq.n	800742e <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007426:	6878      	ldr	r0, [r7, #4]
 8007428:	f000 fa35 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 800742c:	e005      	b.n	800743a <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800742e:	6878      	ldr	r0, [r7, #4]
 8007430:	f000 fa27 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007434:	6878      	ldr	r0, [r7, #4]
 8007436:	f000 fa38 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800743a:	687b      	ldr	r3, [r7, #4]
 800743c:	2200      	movs	r2, #0
 800743e:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007440:	68bb      	ldr	r3, [r7, #8]
 8007442:	f003 0308 	and.w	r3, r3, #8
 8007446:	2b00      	cmp	r3, #0
 8007448:	d020      	beq.n	800748c <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 800744a:	68fb      	ldr	r3, [r7, #12]
 800744c:	f003 0308 	and.w	r3, r3, #8
 8007450:	2b00      	cmp	r3, #0
 8007452:	d01b      	beq.n	800748c <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007454:	687b      	ldr	r3, [r7, #4]
 8007456:	681b      	ldr	r3, [r3, #0]
 8007458:	f06f 0208 	mvn.w	r2, #8
 800745c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	2204      	movs	r2, #4
 8007462:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007464:	687b      	ldr	r3, [r7, #4]
 8007466:	681b      	ldr	r3, [r3, #0]
 8007468:	69db      	ldr	r3, [r3, #28]
 800746a:	f003 0303 	and.w	r3, r3, #3
 800746e:	2b00      	cmp	r3, #0
 8007470:	d003      	beq.n	800747a <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8007472:	6878      	ldr	r0, [r7, #4]
 8007474:	f000 fa0f 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 8007478:	e005      	b.n	8007486 <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800747a:	6878      	ldr	r0, [r7, #4]
 800747c:	f000 fa01 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007480:	6878      	ldr	r0, [r7, #4]
 8007482:	f000 fa12 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007486:	687b      	ldr	r3, [r7, #4]
 8007488:	2200      	movs	r2, #0
 800748a:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 800748c:	68bb      	ldr	r3, [r7, #8]
 800748e:	f003 0310 	and.w	r3, r3, #16
 8007492:	2b00      	cmp	r3, #0
 8007494:	d020      	beq.n	80074d8 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007496:	68fb      	ldr	r3, [r7, #12]
 8007498:	f003 0310 	and.w	r3, r3, #16
 800749c:	2b00      	cmp	r3, #0
 800749e:	d01b      	beq.n	80074d8 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80074a0:	687b      	ldr	r3, [r7, #4]
 80074a2:	681b      	ldr	r3, [r3, #0]
 80074a4:	f06f 0210 	mvn.w	r2, #16
 80074a8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80074aa:	687b      	ldr	r3, [r7, #4]
 80074ac:	2208      	movs	r2, #8
 80074ae:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	69db      	ldr	r3, [r3, #28]
 80074b6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d003      	beq.n	80074c6 <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80074be:	6878      	ldr	r0, [r7, #4]
 80074c0:	f000 f9e9 	bl	8007896 <HAL_TIM_IC_CaptureCallback>
 80074c4:	e005      	b.n	80074d2 <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80074c6:	6878      	ldr	r0, [r7, #4]
 80074c8:	f000 f9db 	bl	8007882 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80074cc:	6878      	ldr	r0, [r7, #4]
 80074ce:	f000 f9ec 	bl	80078aa <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	2200      	movs	r2, #0
 80074d6:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80074d8:	68bb      	ldr	r3, [r7, #8]
 80074da:	f003 0301 	and.w	r3, r3, #1
 80074de:	2b00      	cmp	r3, #0
 80074e0:	d00c      	beq.n	80074fc <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80074e2:	68fb      	ldr	r3, [r7, #12]
 80074e4:	f003 0301 	and.w	r3, r3, #1
 80074e8:	2b00      	cmp	r3, #0
 80074ea:	d007      	beq.n	80074fc <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	681b      	ldr	r3, [r3, #0]
 80074f0:	f06f 0201 	mvn.w	r2, #1
 80074f4:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 80074f6:	6878      	ldr	r0, [r7, #4]
 80074f8:	f7fa f98c 	bl	8001814 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 80074fc:	68bb      	ldr	r3, [r7, #8]
 80074fe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007502:	2b00      	cmp	r3, #0
 8007504:	d00c      	beq.n	8007520 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007506:	68fb      	ldr	r3, [r7, #12]
 8007508:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800750c:	2b00      	cmp	r3, #0
 800750e:	d007      	beq.n	8007520 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007518:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800751a:	6878      	ldr	r0, [r7, #4]
 800751c:	f000 fd7c 	bl	8008018 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007520:	68bb      	ldr	r3, [r7, #8]
 8007522:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007526:	2b00      	cmp	r3, #0
 8007528:	d00c      	beq.n	8007544 <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 800752a:	68fb      	ldr	r3, [r7, #12]
 800752c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007530:	2b00      	cmp	r3, #0
 8007532:	d007      	beq.n	8007544 <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	681b      	ldr	r3, [r3, #0]
 8007538:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800753c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800753e:	6878      	ldr	r0, [r7, #4]
 8007540:	f000 f9bd 	bl	80078be <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007544:	68bb      	ldr	r3, [r7, #8]
 8007546:	f003 0320 	and.w	r3, r3, #32
 800754a:	2b00      	cmp	r3, #0
 800754c:	d00c      	beq.n	8007568 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 800754e:	68fb      	ldr	r3, [r7, #12]
 8007550:	f003 0320 	and.w	r3, r3, #32
 8007554:	2b00      	cmp	r3, #0
 8007556:	d007      	beq.n	8007568 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007558:	687b      	ldr	r3, [r7, #4]
 800755a:	681b      	ldr	r3, [r3, #0]
 800755c:	f06f 0220 	mvn.w	r2, #32
 8007560:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8007562:	6878      	ldr	r0, [r7, #4]
 8007564:	f000 fd4e 	bl	8008004 <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007568:	bf00      	nop
 800756a:	3710      	adds	r7, #16
 800756c:	46bd      	mov	sp, r7
 800756e:	bd80      	pop	{r7, pc}

08007570 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8007570:	b580      	push	{r7, lr}
 8007572:	b086      	sub	sp, #24
 8007574:	af00      	add	r7, sp, #0
 8007576:	60f8      	str	r0, [r7, #12]
 8007578:	60b9      	str	r1, [r7, #8]
 800757a:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800757c:	2300      	movs	r3, #0
 800757e:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8007580:	68fb      	ldr	r3, [r7, #12]
 8007582:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007586:	2b01      	cmp	r3, #1
 8007588:	d101      	bne.n	800758e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800758a:	2302      	movs	r3, #2
 800758c:	e0ae      	b.n	80076ec <HAL_TIM_PWM_ConfigChannel+0x17c>
 800758e:	68fb      	ldr	r3, [r7, #12]
 8007590:	2201      	movs	r2, #1
 8007592:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 8007596:	687b      	ldr	r3, [r7, #4]
 8007598:	2b0c      	cmp	r3, #12
 800759a:	f200 809f 	bhi.w	80076dc <HAL_TIM_PWM_ConfigChannel+0x16c>
 800759e:	a201      	add	r2, pc, #4	@ (adr r2, 80075a4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80075a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075a4:	080075d9 	.word	0x080075d9
 80075a8:	080076dd 	.word	0x080076dd
 80075ac:	080076dd 	.word	0x080076dd
 80075b0:	080076dd 	.word	0x080076dd
 80075b4:	08007619 	.word	0x08007619
 80075b8:	080076dd 	.word	0x080076dd
 80075bc:	080076dd 	.word	0x080076dd
 80075c0:	080076dd 	.word	0x080076dd
 80075c4:	0800765b 	.word	0x0800765b
 80075c8:	080076dd 	.word	0x080076dd
 80075cc:	080076dd 	.word	0x080076dd
 80075d0:	080076dd 	.word	0x080076dd
 80075d4:	0800769b 	.word	0x0800769b
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80075d8:	68fb      	ldr	r3, [r7, #12]
 80075da:	681b      	ldr	r3, [r3, #0]
 80075dc:	68b9      	ldr	r1, [r7, #8]
 80075de:	4618      	mov	r0, r3
 80075e0:	f000 fa24 	bl	8007a2c <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80075e4:	68fb      	ldr	r3, [r7, #12]
 80075e6:	681b      	ldr	r3, [r3, #0]
 80075e8:	699a      	ldr	r2, [r3, #24]
 80075ea:	68fb      	ldr	r3, [r7, #12]
 80075ec:	681b      	ldr	r3, [r3, #0]
 80075ee:	f042 0208 	orr.w	r2, r2, #8
 80075f2:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80075f4:	68fb      	ldr	r3, [r7, #12]
 80075f6:	681b      	ldr	r3, [r3, #0]
 80075f8:	699a      	ldr	r2, [r3, #24]
 80075fa:	68fb      	ldr	r3, [r7, #12]
 80075fc:	681b      	ldr	r3, [r3, #0]
 80075fe:	f022 0204 	bic.w	r2, r2, #4
 8007602:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 8007604:	68fb      	ldr	r3, [r7, #12]
 8007606:	681b      	ldr	r3, [r3, #0]
 8007608:	6999      	ldr	r1, [r3, #24]
 800760a:	68bb      	ldr	r3, [r7, #8]
 800760c:	691a      	ldr	r2, [r3, #16]
 800760e:	68fb      	ldr	r3, [r7, #12]
 8007610:	681b      	ldr	r3, [r3, #0]
 8007612:	430a      	orrs	r2, r1
 8007614:	619a      	str	r2, [r3, #24]
      break;
 8007616:	e064      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8007618:	68fb      	ldr	r3, [r7, #12]
 800761a:	681b      	ldr	r3, [r3, #0]
 800761c:	68b9      	ldr	r1, [r7, #8]
 800761e:	4618      	mov	r0, r3
 8007620:	f000 fa74 	bl	8007b0c <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8007624:	68fb      	ldr	r3, [r7, #12]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	699a      	ldr	r2, [r3, #24]
 800762a:	68fb      	ldr	r3, [r7, #12]
 800762c:	681b      	ldr	r3, [r3, #0]
 800762e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8007632:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8007634:	68fb      	ldr	r3, [r7, #12]
 8007636:	681b      	ldr	r3, [r3, #0]
 8007638:	699a      	ldr	r2, [r3, #24]
 800763a:	68fb      	ldr	r3, [r7, #12]
 800763c:	681b      	ldr	r3, [r3, #0]
 800763e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8007642:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8007644:	68fb      	ldr	r3, [r7, #12]
 8007646:	681b      	ldr	r3, [r3, #0]
 8007648:	6999      	ldr	r1, [r3, #24]
 800764a:	68bb      	ldr	r3, [r7, #8]
 800764c:	691b      	ldr	r3, [r3, #16]
 800764e:	021a      	lsls	r2, r3, #8
 8007650:	68fb      	ldr	r3, [r7, #12]
 8007652:	681b      	ldr	r3, [r3, #0]
 8007654:	430a      	orrs	r2, r1
 8007656:	619a      	str	r2, [r3, #24]
      break;
 8007658:	e043      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800765a:	68fb      	ldr	r3, [r7, #12]
 800765c:	681b      	ldr	r3, [r3, #0]
 800765e:	68b9      	ldr	r1, [r7, #8]
 8007660:	4618      	mov	r0, r3
 8007662:	f000 fac9 	bl	8007bf8 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8007666:	68fb      	ldr	r3, [r7, #12]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	69da      	ldr	r2, [r3, #28]
 800766c:	68fb      	ldr	r3, [r7, #12]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	f042 0208 	orr.w	r2, r2, #8
 8007674:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 8007676:	68fb      	ldr	r3, [r7, #12]
 8007678:	681b      	ldr	r3, [r3, #0]
 800767a:	69da      	ldr	r2, [r3, #28]
 800767c:	68fb      	ldr	r3, [r7, #12]
 800767e:	681b      	ldr	r3, [r3, #0]
 8007680:	f022 0204 	bic.w	r2, r2, #4
 8007684:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8007686:	68fb      	ldr	r3, [r7, #12]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	69d9      	ldr	r1, [r3, #28]
 800768c:	68bb      	ldr	r3, [r7, #8]
 800768e:	691a      	ldr	r2, [r3, #16]
 8007690:	68fb      	ldr	r3, [r7, #12]
 8007692:	681b      	ldr	r3, [r3, #0]
 8007694:	430a      	orrs	r2, r1
 8007696:	61da      	str	r2, [r3, #28]
      break;
 8007698:	e023      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800769a:	68fb      	ldr	r3, [r7, #12]
 800769c:	681b      	ldr	r3, [r3, #0]
 800769e:	68b9      	ldr	r1, [r7, #8]
 80076a0:	4618      	mov	r0, r3
 80076a2:	f000 fb1d 	bl	8007ce0 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80076a6:	68fb      	ldr	r3, [r7, #12]
 80076a8:	681b      	ldr	r3, [r3, #0]
 80076aa:	69da      	ldr	r2, [r3, #28]
 80076ac:	68fb      	ldr	r3, [r7, #12]
 80076ae:	681b      	ldr	r3, [r3, #0]
 80076b0:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80076b4:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80076b6:	68fb      	ldr	r3, [r7, #12]
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	69da      	ldr	r2, [r3, #28]
 80076bc:	68fb      	ldr	r3, [r7, #12]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80076c4:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80076c6:	68fb      	ldr	r3, [r7, #12]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	69d9      	ldr	r1, [r3, #28]
 80076cc:	68bb      	ldr	r3, [r7, #8]
 80076ce:	691b      	ldr	r3, [r3, #16]
 80076d0:	021a      	lsls	r2, r3, #8
 80076d2:	68fb      	ldr	r3, [r7, #12]
 80076d4:	681b      	ldr	r3, [r3, #0]
 80076d6:	430a      	orrs	r2, r1
 80076d8:	61da      	str	r2, [r3, #28]
      break;
 80076da:	e002      	b.n	80076e2 <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 80076dc:	2301      	movs	r3, #1
 80076de:	75fb      	strb	r3, [r7, #23]
      break;
 80076e0:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 80076e2:	68fb      	ldr	r3, [r7, #12]
 80076e4:	2200      	movs	r2, #0
 80076e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80076ea:	7dfb      	ldrb	r3, [r7, #23]
}
 80076ec:	4618      	mov	r0, r3
 80076ee:	3718      	adds	r7, #24
 80076f0:	46bd      	mov	sp, r7
 80076f2:	bd80      	pop	{r7, pc}

080076f4 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80076f4:	b580      	push	{r7, lr}
 80076f6:	b084      	sub	sp, #16
 80076f8:	af00      	add	r7, sp, #0
 80076fa:	6078      	str	r0, [r7, #4]
 80076fc:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80076fe:	2300      	movs	r3, #0
 8007700:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007708:	2b01      	cmp	r3, #1
 800770a:	d101      	bne.n	8007710 <HAL_TIM_ConfigClockSource+0x1c>
 800770c:	2302      	movs	r3, #2
 800770e:	e0b4      	b.n	800787a <HAL_TIM_ConfigClockSource+0x186>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	2201      	movs	r2, #1
 8007714:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007718:	687b      	ldr	r3, [r7, #4]
 800771a:	2202      	movs	r2, #2
 800771c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	681b      	ldr	r3, [r3, #0]
 8007724:	689b      	ldr	r3, [r3, #8]
 8007726:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007728:	68bb      	ldr	r3, [r7, #8]
 800772a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800772e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007730:	68bb      	ldr	r3, [r7, #8]
 8007732:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007736:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	68ba      	ldr	r2, [r7, #8]
 800773e:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8007740:	683b      	ldr	r3, [r7, #0]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007748:	d03e      	beq.n	80077c8 <HAL_TIM_ConfigClockSource+0xd4>
 800774a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800774e:	f200 8087 	bhi.w	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007752:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007756:	f000 8086 	beq.w	8007866 <HAL_TIM_ConfigClockSource+0x172>
 800775a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800775e:	d87f      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007760:	2b70      	cmp	r3, #112	@ 0x70
 8007762:	d01a      	beq.n	800779a <HAL_TIM_ConfigClockSource+0xa6>
 8007764:	2b70      	cmp	r3, #112	@ 0x70
 8007766:	d87b      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007768:	2b60      	cmp	r3, #96	@ 0x60
 800776a:	d050      	beq.n	800780e <HAL_TIM_ConfigClockSource+0x11a>
 800776c:	2b60      	cmp	r3, #96	@ 0x60
 800776e:	d877      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007770:	2b50      	cmp	r3, #80	@ 0x50
 8007772:	d03c      	beq.n	80077ee <HAL_TIM_ConfigClockSource+0xfa>
 8007774:	2b50      	cmp	r3, #80	@ 0x50
 8007776:	d873      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007778:	2b40      	cmp	r3, #64	@ 0x40
 800777a:	d058      	beq.n	800782e <HAL_TIM_ConfigClockSource+0x13a>
 800777c:	2b40      	cmp	r3, #64	@ 0x40
 800777e:	d86f      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007780:	2b30      	cmp	r3, #48	@ 0x30
 8007782:	d064      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 8007784:	2b30      	cmp	r3, #48	@ 0x30
 8007786:	d86b      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007788:	2b20      	cmp	r3, #32
 800778a:	d060      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 800778c:	2b20      	cmp	r3, #32
 800778e:	d867      	bhi.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
 8007790:	2b00      	cmp	r3, #0
 8007792:	d05c      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 8007794:	2b10      	cmp	r3, #16
 8007796:	d05a      	beq.n	800784e <HAL_TIM_ConfigClockSource+0x15a>
 8007798:	e062      	b.n	8007860 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 800779a:	687b      	ldr	r3, [r7, #4]
 800779c:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800779e:	683b      	ldr	r3, [r7, #0]
 80077a0:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80077a2:	683b      	ldr	r3, [r7, #0]
 80077a4:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80077a6:	683b      	ldr	r3, [r7, #0]
 80077a8:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80077aa:	f000 fb69 	bl	8007e80 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	689b      	ldr	r3, [r3, #8]
 80077b4:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80077b6:	68bb      	ldr	r3, [r7, #8]
 80077b8:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80077bc:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	68ba      	ldr	r2, [r7, #8]
 80077c4:	609a      	str	r2, [r3, #8]
      break;
 80077c6:	e04f      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80077cc:	683b      	ldr	r3, [r7, #0]
 80077ce:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80077d0:	683b      	ldr	r3, [r7, #0]
 80077d2:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80077d4:	683b      	ldr	r3, [r7, #0]
 80077d6:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80077d8:	f000 fb52 	bl	8007e80 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	681b      	ldr	r3, [r3, #0]
 80077e0:	689a      	ldr	r2, [r3, #8]
 80077e2:	687b      	ldr	r3, [r7, #4]
 80077e4:	681b      	ldr	r3, [r3, #0]
 80077e6:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80077ea:	609a      	str	r2, [r3, #8]
      break;
 80077ec:	e03c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80077f2:	683b      	ldr	r3, [r7, #0]
 80077f4:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80077f6:	683b      	ldr	r3, [r7, #0]
 80077f8:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80077fa:	461a      	mov	r2, r3
 80077fc:	f000 fac6 	bl	8007d8c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8007800:	687b      	ldr	r3, [r7, #4]
 8007802:	681b      	ldr	r3, [r3, #0]
 8007804:	2150      	movs	r1, #80	@ 0x50
 8007806:	4618      	mov	r0, r3
 8007808:	f000 fb1f 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800780c:	e02c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007812:	683b      	ldr	r3, [r7, #0]
 8007814:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007816:	683b      	ldr	r3, [r7, #0]
 8007818:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 800781a:	461a      	mov	r2, r3
 800781c:	f000 fae5 	bl	8007dea <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8007820:	687b      	ldr	r3, [r7, #4]
 8007822:	681b      	ldr	r3, [r3, #0]
 8007824:	2160      	movs	r1, #96	@ 0x60
 8007826:	4618      	mov	r0, r3
 8007828:	f000 fb0f 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800782c:	e01c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 8007832:	683b      	ldr	r3, [r7, #0]
 8007834:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 8007836:	683b      	ldr	r3, [r7, #0]
 8007838:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 800783a:	461a      	mov	r2, r3
 800783c:	f000 faa6 	bl	8007d8c <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	681b      	ldr	r3, [r3, #0]
 8007844:	2140      	movs	r1, #64	@ 0x40
 8007846:	4618      	mov	r0, r3
 8007848:	f000 faff 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800784c:	e00c      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	681a      	ldr	r2, [r3, #0]
 8007852:	683b      	ldr	r3, [r7, #0]
 8007854:	681b      	ldr	r3, [r3, #0]
 8007856:	4619      	mov	r1, r3
 8007858:	4610      	mov	r0, r2
 800785a:	f000 faf6 	bl	8007e4a <TIM_ITRx_SetConfig>
      break;
 800785e:	e003      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8007860:	2301      	movs	r3, #1
 8007862:	73fb      	strb	r3, [r7, #15]
      break;
 8007864:	e000      	b.n	8007868 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8007866:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	2201      	movs	r2, #1
 800786c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	2200      	movs	r2, #0
 8007874:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007878:	7bfb      	ldrb	r3, [r7, #15]
}
 800787a:	4618      	mov	r0, r3
 800787c:	3710      	adds	r7, #16
 800787e:	46bd      	mov	sp, r7
 8007880:	bd80      	pop	{r7, pc}

08007882 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8007882:	b480      	push	{r7}
 8007884:	b083      	sub	sp, #12
 8007886:	af00      	add	r7, sp, #0
 8007888:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 800788a:	bf00      	nop
 800788c:	370c      	adds	r7, #12
 800788e:	46bd      	mov	sp, r7
 8007890:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007894:	4770      	bx	lr

08007896 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8007896:	b480      	push	{r7}
 8007898:	b083      	sub	sp, #12
 800789a:	af00      	add	r7, sp, #0
 800789c:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 800789e:	bf00      	nop
 80078a0:	370c      	adds	r7, #12
 80078a2:	46bd      	mov	sp, r7
 80078a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078a8:	4770      	bx	lr

080078aa <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80078aa:	b480      	push	{r7}
 80078ac:	b083      	sub	sp, #12
 80078ae:	af00      	add	r7, sp, #0
 80078b0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80078b2:	bf00      	nop
 80078b4:	370c      	adds	r7, #12
 80078b6:	46bd      	mov	sp, r7
 80078b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078bc:	4770      	bx	lr

080078be <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80078be:	b480      	push	{r7}
 80078c0:	b083      	sub	sp, #12
 80078c2:	af00      	add	r7, sp, #0
 80078c4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80078c6:	bf00      	nop
 80078c8:	370c      	adds	r7, #12
 80078ca:	46bd      	mov	sp, r7
 80078cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078d0:	4770      	bx	lr
	...

080078d4 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80078d4:	b480      	push	{r7}
 80078d6:	b085      	sub	sp, #20
 80078d8:	af00      	add	r7, sp, #0
 80078da:	6078      	str	r0, [r7, #4]
 80078dc:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80078de:	687b      	ldr	r3, [r7, #4]
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	4a46      	ldr	r2, [pc, #280]	@ (8007a00 <TIM_Base_SetConfig+0x12c>)
 80078e8:	4293      	cmp	r3, r2
 80078ea:	d013      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80078f2:	d00f      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	4a43      	ldr	r2, [pc, #268]	@ (8007a04 <TIM_Base_SetConfig+0x130>)
 80078f8:	4293      	cmp	r3, r2
 80078fa:	d00b      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	4a42      	ldr	r2, [pc, #264]	@ (8007a08 <TIM_Base_SetConfig+0x134>)
 8007900:	4293      	cmp	r3, r2
 8007902:	d007      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	4a41      	ldr	r2, [pc, #260]	@ (8007a0c <TIM_Base_SetConfig+0x138>)
 8007908:	4293      	cmp	r3, r2
 800790a:	d003      	beq.n	8007914 <TIM_Base_SetConfig+0x40>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	4a40      	ldr	r2, [pc, #256]	@ (8007a10 <TIM_Base_SetConfig+0x13c>)
 8007910:	4293      	cmp	r3, r2
 8007912:	d108      	bne.n	8007926 <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8007914:	68fb      	ldr	r3, [r7, #12]
 8007916:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800791a:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800791c:	683b      	ldr	r3, [r7, #0]
 800791e:	685b      	ldr	r3, [r3, #4]
 8007920:	68fa      	ldr	r2, [r7, #12]
 8007922:	4313      	orrs	r3, r2
 8007924:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8007926:	687b      	ldr	r3, [r7, #4]
 8007928:	4a35      	ldr	r2, [pc, #212]	@ (8007a00 <TIM_Base_SetConfig+0x12c>)
 800792a:	4293      	cmp	r3, r2
 800792c:	d02b      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007934:	d027      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	4a32      	ldr	r2, [pc, #200]	@ (8007a04 <TIM_Base_SetConfig+0x130>)
 800793a:	4293      	cmp	r3, r2
 800793c:	d023      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	4a31      	ldr	r2, [pc, #196]	@ (8007a08 <TIM_Base_SetConfig+0x134>)
 8007942:	4293      	cmp	r3, r2
 8007944:	d01f      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	4a30      	ldr	r2, [pc, #192]	@ (8007a0c <TIM_Base_SetConfig+0x138>)
 800794a:	4293      	cmp	r3, r2
 800794c:	d01b      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800794e:	687b      	ldr	r3, [r7, #4]
 8007950:	4a2f      	ldr	r2, [pc, #188]	@ (8007a10 <TIM_Base_SetConfig+0x13c>)
 8007952:	4293      	cmp	r3, r2
 8007954:	d017      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	4a2e      	ldr	r2, [pc, #184]	@ (8007a14 <TIM_Base_SetConfig+0x140>)
 800795a:	4293      	cmp	r3, r2
 800795c:	d013      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	4a2d      	ldr	r2, [pc, #180]	@ (8007a18 <TIM_Base_SetConfig+0x144>)
 8007962:	4293      	cmp	r3, r2
 8007964:	d00f      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	4a2c      	ldr	r2, [pc, #176]	@ (8007a1c <TIM_Base_SetConfig+0x148>)
 800796a:	4293      	cmp	r3, r2
 800796c:	d00b      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	4a2b      	ldr	r2, [pc, #172]	@ (8007a20 <TIM_Base_SetConfig+0x14c>)
 8007972:	4293      	cmp	r3, r2
 8007974:	d007      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	4a2a      	ldr	r2, [pc, #168]	@ (8007a24 <TIM_Base_SetConfig+0x150>)
 800797a:	4293      	cmp	r3, r2
 800797c:	d003      	beq.n	8007986 <TIM_Base_SetConfig+0xb2>
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	4a29      	ldr	r2, [pc, #164]	@ (8007a28 <TIM_Base_SetConfig+0x154>)
 8007982:	4293      	cmp	r3, r2
 8007984:	d108      	bne.n	8007998 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8007986:	68fb      	ldr	r3, [r7, #12]
 8007988:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800798c:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800798e:	683b      	ldr	r3, [r7, #0]
 8007990:	68db      	ldr	r3, [r3, #12]
 8007992:	68fa      	ldr	r2, [r7, #12]
 8007994:	4313      	orrs	r3, r2
 8007996:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8007998:	68fb      	ldr	r3, [r7, #12]
 800799a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800799e:	683b      	ldr	r3, [r7, #0]
 80079a0:	695b      	ldr	r3, [r3, #20]
 80079a2:	4313      	orrs	r3, r2
 80079a4:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80079a6:	687b      	ldr	r3, [r7, #4]
 80079a8:	68fa      	ldr	r2, [r7, #12]
 80079aa:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80079ac:	683b      	ldr	r3, [r7, #0]
 80079ae:	689a      	ldr	r2, [r3, #8]
 80079b0:	687b      	ldr	r3, [r7, #4]
 80079b2:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80079b4:	683b      	ldr	r3, [r7, #0]
 80079b6:	681a      	ldr	r2, [r3, #0]
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	4a10      	ldr	r2, [pc, #64]	@ (8007a00 <TIM_Base_SetConfig+0x12c>)
 80079c0:	4293      	cmp	r3, r2
 80079c2:	d003      	beq.n	80079cc <TIM_Base_SetConfig+0xf8>
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	4a12      	ldr	r2, [pc, #72]	@ (8007a10 <TIM_Base_SetConfig+0x13c>)
 80079c8:	4293      	cmp	r3, r2
 80079ca:	d103      	bne.n	80079d4 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80079cc:	683b      	ldr	r3, [r7, #0]
 80079ce:	691a      	ldr	r2, [r3, #16]
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	2201      	movs	r2, #1
 80079d8:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80079da:	687b      	ldr	r3, [r7, #4]
 80079dc:	691b      	ldr	r3, [r3, #16]
 80079de:	f003 0301 	and.w	r3, r3, #1
 80079e2:	2b01      	cmp	r3, #1
 80079e4:	d105      	bne.n	80079f2 <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	691b      	ldr	r3, [r3, #16]
 80079ea:	f023 0201 	bic.w	r2, r3, #1
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	611a      	str	r2, [r3, #16]
  }
}
 80079f2:	bf00      	nop
 80079f4:	3714      	adds	r7, #20
 80079f6:	46bd      	mov	sp, r7
 80079f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079fc:	4770      	bx	lr
 80079fe:	bf00      	nop
 8007a00:	40010000 	.word	0x40010000
 8007a04:	40000400 	.word	0x40000400
 8007a08:	40000800 	.word	0x40000800
 8007a0c:	40000c00 	.word	0x40000c00
 8007a10:	40010400 	.word	0x40010400
 8007a14:	40014000 	.word	0x40014000
 8007a18:	40014400 	.word	0x40014400
 8007a1c:	40014800 	.word	0x40014800
 8007a20:	40001800 	.word	0x40001800
 8007a24:	40001c00 	.word	0x40001c00
 8007a28:	40002000 	.word	0x40002000

08007a2c <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007a2c:	b480      	push	{r7}
 8007a2e:	b087      	sub	sp, #28
 8007a30:	af00      	add	r7, sp, #0
 8007a32:	6078      	str	r0, [r7, #4]
 8007a34:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007a36:	687b      	ldr	r3, [r7, #4]
 8007a38:	6a1b      	ldr	r3, [r3, #32]
 8007a3a:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	6a1b      	ldr	r3, [r3, #32]
 8007a40:	f023 0201 	bic.w	r2, r3, #1
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	685b      	ldr	r3, [r3, #4]
 8007a4c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	699b      	ldr	r3, [r3, #24]
 8007a52:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8007a54:	68fb      	ldr	r3, [r7, #12]
 8007a56:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a5a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8007a5c:	68fb      	ldr	r3, [r7, #12]
 8007a5e:	f023 0303 	bic.w	r3, r3, #3
 8007a62:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007a64:	683b      	ldr	r3, [r7, #0]
 8007a66:	681b      	ldr	r3, [r3, #0]
 8007a68:	68fa      	ldr	r2, [r7, #12]
 8007a6a:	4313      	orrs	r3, r2
 8007a6c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8007a6e:	697b      	ldr	r3, [r7, #20]
 8007a70:	f023 0302 	bic.w	r3, r3, #2
 8007a74:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8007a76:	683b      	ldr	r3, [r7, #0]
 8007a78:	689b      	ldr	r3, [r3, #8]
 8007a7a:	697a      	ldr	r2, [r7, #20]
 8007a7c:	4313      	orrs	r3, r2
 8007a7e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8007a80:	687b      	ldr	r3, [r7, #4]
 8007a82:	4a20      	ldr	r2, [pc, #128]	@ (8007b04 <TIM_OC1_SetConfig+0xd8>)
 8007a84:	4293      	cmp	r3, r2
 8007a86:	d003      	beq.n	8007a90 <TIM_OC1_SetConfig+0x64>
 8007a88:	687b      	ldr	r3, [r7, #4]
 8007a8a:	4a1f      	ldr	r2, [pc, #124]	@ (8007b08 <TIM_OC1_SetConfig+0xdc>)
 8007a8c:	4293      	cmp	r3, r2
 8007a8e:	d10c      	bne.n	8007aaa <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8007a90:	697b      	ldr	r3, [r7, #20]
 8007a92:	f023 0308 	bic.w	r3, r3, #8
 8007a96:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8007a98:	683b      	ldr	r3, [r7, #0]
 8007a9a:	68db      	ldr	r3, [r3, #12]
 8007a9c:	697a      	ldr	r2, [r7, #20]
 8007a9e:	4313      	orrs	r3, r2
 8007aa0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8007aa2:	697b      	ldr	r3, [r7, #20]
 8007aa4:	f023 0304 	bic.w	r3, r3, #4
 8007aa8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	4a15      	ldr	r2, [pc, #84]	@ (8007b04 <TIM_OC1_SetConfig+0xd8>)
 8007aae:	4293      	cmp	r3, r2
 8007ab0:	d003      	beq.n	8007aba <TIM_OC1_SetConfig+0x8e>
 8007ab2:	687b      	ldr	r3, [r7, #4]
 8007ab4:	4a14      	ldr	r2, [pc, #80]	@ (8007b08 <TIM_OC1_SetConfig+0xdc>)
 8007ab6:	4293      	cmp	r3, r2
 8007ab8:	d111      	bne.n	8007ade <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8007aba:	693b      	ldr	r3, [r7, #16]
 8007abc:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007ac0:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8007ac2:	693b      	ldr	r3, [r7, #16]
 8007ac4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007ac8:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8007aca:	683b      	ldr	r3, [r7, #0]
 8007acc:	695b      	ldr	r3, [r3, #20]
 8007ace:	693a      	ldr	r2, [r7, #16]
 8007ad0:	4313      	orrs	r3, r2
 8007ad2:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8007ad4:	683b      	ldr	r3, [r7, #0]
 8007ad6:	699b      	ldr	r3, [r3, #24]
 8007ad8:	693a      	ldr	r2, [r7, #16]
 8007ada:	4313      	orrs	r3, r2
 8007adc:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007ade:	687b      	ldr	r3, [r7, #4]
 8007ae0:	693a      	ldr	r2, [r7, #16]
 8007ae2:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	68fa      	ldr	r2, [r7, #12]
 8007ae8:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8007aea:	683b      	ldr	r3, [r7, #0]
 8007aec:	685a      	ldr	r2, [r3, #4]
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007af2:	687b      	ldr	r3, [r7, #4]
 8007af4:	697a      	ldr	r2, [r7, #20]
 8007af6:	621a      	str	r2, [r3, #32]
}
 8007af8:	bf00      	nop
 8007afa:	371c      	adds	r7, #28
 8007afc:	46bd      	mov	sp, r7
 8007afe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b02:	4770      	bx	lr
 8007b04:	40010000 	.word	0x40010000
 8007b08:	40010400 	.word	0x40010400

08007b0c <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007b0c:	b480      	push	{r7}
 8007b0e:	b087      	sub	sp, #28
 8007b10:	af00      	add	r7, sp, #0
 8007b12:	6078      	str	r0, [r7, #4]
 8007b14:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007b16:	687b      	ldr	r3, [r7, #4]
 8007b18:	6a1b      	ldr	r3, [r3, #32]
 8007b1a:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	6a1b      	ldr	r3, [r3, #32]
 8007b20:	f023 0210 	bic.w	r2, r3, #16
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007b28:	687b      	ldr	r3, [r7, #4]
 8007b2a:	685b      	ldr	r3, [r3, #4]
 8007b2c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	699b      	ldr	r3, [r3, #24]
 8007b32:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8007b34:	68fb      	ldr	r3, [r7, #12]
 8007b36:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007b3a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8007b3c:	68fb      	ldr	r3, [r7, #12]
 8007b3e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007b42:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007b44:	683b      	ldr	r3, [r7, #0]
 8007b46:	681b      	ldr	r3, [r3, #0]
 8007b48:	021b      	lsls	r3, r3, #8
 8007b4a:	68fa      	ldr	r2, [r7, #12]
 8007b4c:	4313      	orrs	r3, r2
 8007b4e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8007b50:	697b      	ldr	r3, [r7, #20]
 8007b52:	f023 0320 	bic.w	r3, r3, #32
 8007b56:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007b58:	683b      	ldr	r3, [r7, #0]
 8007b5a:	689b      	ldr	r3, [r3, #8]
 8007b5c:	011b      	lsls	r3, r3, #4
 8007b5e:	697a      	ldr	r2, [r7, #20]
 8007b60:	4313      	orrs	r3, r2
 8007b62:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	4a22      	ldr	r2, [pc, #136]	@ (8007bf0 <TIM_OC2_SetConfig+0xe4>)
 8007b68:	4293      	cmp	r3, r2
 8007b6a:	d003      	beq.n	8007b74 <TIM_OC2_SetConfig+0x68>
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	4a21      	ldr	r2, [pc, #132]	@ (8007bf4 <TIM_OC2_SetConfig+0xe8>)
 8007b70:	4293      	cmp	r3, r2
 8007b72:	d10d      	bne.n	8007b90 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8007b74:	697b      	ldr	r3, [r7, #20]
 8007b76:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007b7a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007b7c:	683b      	ldr	r3, [r7, #0]
 8007b7e:	68db      	ldr	r3, [r3, #12]
 8007b80:	011b      	lsls	r3, r3, #4
 8007b82:	697a      	ldr	r2, [r7, #20]
 8007b84:	4313      	orrs	r3, r2
 8007b86:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8007b88:	697b      	ldr	r3, [r7, #20]
 8007b8a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007b8e:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007b90:	687b      	ldr	r3, [r7, #4]
 8007b92:	4a17      	ldr	r2, [pc, #92]	@ (8007bf0 <TIM_OC2_SetConfig+0xe4>)
 8007b94:	4293      	cmp	r3, r2
 8007b96:	d003      	beq.n	8007ba0 <TIM_OC2_SetConfig+0x94>
 8007b98:	687b      	ldr	r3, [r7, #4]
 8007b9a:	4a16      	ldr	r2, [pc, #88]	@ (8007bf4 <TIM_OC2_SetConfig+0xe8>)
 8007b9c:	4293      	cmp	r3, r2
 8007b9e:	d113      	bne.n	8007bc8 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8007ba0:	693b      	ldr	r3, [r7, #16]
 8007ba2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007ba6:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8007ba8:	693b      	ldr	r3, [r7, #16]
 8007baa:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007bae:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8007bb0:	683b      	ldr	r3, [r7, #0]
 8007bb2:	695b      	ldr	r3, [r3, #20]
 8007bb4:	009b      	lsls	r3, r3, #2
 8007bb6:	693a      	ldr	r2, [r7, #16]
 8007bb8:	4313      	orrs	r3, r2
 8007bba:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007bbc:	683b      	ldr	r3, [r7, #0]
 8007bbe:	699b      	ldr	r3, [r3, #24]
 8007bc0:	009b      	lsls	r3, r3, #2
 8007bc2:	693a      	ldr	r2, [r7, #16]
 8007bc4:	4313      	orrs	r3, r2
 8007bc6:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	693a      	ldr	r2, [r7, #16]
 8007bcc:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	68fa      	ldr	r2, [r7, #12]
 8007bd2:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8007bd4:	683b      	ldr	r3, [r7, #0]
 8007bd6:	685a      	ldr	r2, [r3, #4]
 8007bd8:	687b      	ldr	r3, [r7, #4]
 8007bda:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007bdc:	687b      	ldr	r3, [r7, #4]
 8007bde:	697a      	ldr	r2, [r7, #20]
 8007be0:	621a      	str	r2, [r3, #32]
}
 8007be2:	bf00      	nop
 8007be4:	371c      	adds	r7, #28
 8007be6:	46bd      	mov	sp, r7
 8007be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bec:	4770      	bx	lr
 8007bee:	bf00      	nop
 8007bf0:	40010000 	.word	0x40010000
 8007bf4:	40010400 	.word	0x40010400

08007bf8 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007bf8:	b480      	push	{r7}
 8007bfa:	b087      	sub	sp, #28
 8007bfc:	af00      	add	r7, sp, #0
 8007bfe:	6078      	str	r0, [r7, #4]
 8007c00:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007c02:	687b      	ldr	r3, [r7, #4]
 8007c04:	6a1b      	ldr	r3, [r3, #32]
 8007c06:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	6a1b      	ldr	r3, [r3, #32]
 8007c0c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	685b      	ldr	r3, [r3, #4]
 8007c18:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007c1a:	687b      	ldr	r3, [r7, #4]
 8007c1c:	69db      	ldr	r3, [r3, #28]
 8007c1e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8007c20:	68fb      	ldr	r3, [r7, #12]
 8007c22:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c26:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	f023 0303 	bic.w	r3, r3, #3
 8007c2e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007c30:	683b      	ldr	r3, [r7, #0]
 8007c32:	681b      	ldr	r3, [r3, #0]
 8007c34:	68fa      	ldr	r2, [r7, #12]
 8007c36:	4313      	orrs	r3, r2
 8007c38:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8007c3a:	697b      	ldr	r3, [r7, #20]
 8007c3c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007c40:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8007c42:	683b      	ldr	r3, [r7, #0]
 8007c44:	689b      	ldr	r3, [r3, #8]
 8007c46:	021b      	lsls	r3, r3, #8
 8007c48:	697a      	ldr	r2, [r7, #20]
 8007c4a:	4313      	orrs	r3, r2
 8007c4c:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007c4e:	687b      	ldr	r3, [r7, #4]
 8007c50:	4a21      	ldr	r2, [pc, #132]	@ (8007cd8 <TIM_OC3_SetConfig+0xe0>)
 8007c52:	4293      	cmp	r3, r2
 8007c54:	d003      	beq.n	8007c5e <TIM_OC3_SetConfig+0x66>
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	4a20      	ldr	r2, [pc, #128]	@ (8007cdc <TIM_OC3_SetConfig+0xe4>)
 8007c5a:	4293      	cmp	r3, r2
 8007c5c:	d10d      	bne.n	8007c7a <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8007c5e:	697b      	ldr	r3, [r7, #20]
 8007c60:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007c64:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007c66:	683b      	ldr	r3, [r7, #0]
 8007c68:	68db      	ldr	r3, [r3, #12]
 8007c6a:	021b      	lsls	r3, r3, #8
 8007c6c:	697a      	ldr	r2, [r7, #20]
 8007c6e:	4313      	orrs	r3, r2
 8007c70:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8007c72:	697b      	ldr	r3, [r7, #20]
 8007c74:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007c78:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	4a16      	ldr	r2, [pc, #88]	@ (8007cd8 <TIM_OC3_SetConfig+0xe0>)
 8007c7e:	4293      	cmp	r3, r2
 8007c80:	d003      	beq.n	8007c8a <TIM_OC3_SetConfig+0x92>
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	4a15      	ldr	r2, [pc, #84]	@ (8007cdc <TIM_OC3_SetConfig+0xe4>)
 8007c86:	4293      	cmp	r3, r2
 8007c88:	d113      	bne.n	8007cb2 <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8007c8a:	693b      	ldr	r3, [r7, #16]
 8007c8c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007c90:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007c92:	693b      	ldr	r3, [r7, #16]
 8007c94:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007c98:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8007c9a:	683b      	ldr	r3, [r7, #0]
 8007c9c:	695b      	ldr	r3, [r3, #20]
 8007c9e:	011b      	lsls	r3, r3, #4
 8007ca0:	693a      	ldr	r2, [r7, #16]
 8007ca2:	4313      	orrs	r3, r2
 8007ca4:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8007ca6:	683b      	ldr	r3, [r7, #0]
 8007ca8:	699b      	ldr	r3, [r3, #24]
 8007caa:	011b      	lsls	r3, r3, #4
 8007cac:	693a      	ldr	r2, [r7, #16]
 8007cae:	4313      	orrs	r3, r2
 8007cb0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	693a      	ldr	r2, [r7, #16]
 8007cb6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007cb8:	687b      	ldr	r3, [r7, #4]
 8007cba:	68fa      	ldr	r2, [r7, #12]
 8007cbc:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007cbe:	683b      	ldr	r3, [r7, #0]
 8007cc0:	685a      	ldr	r2, [r3, #4]
 8007cc2:	687b      	ldr	r3, [r7, #4]
 8007cc4:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007cc6:	687b      	ldr	r3, [r7, #4]
 8007cc8:	697a      	ldr	r2, [r7, #20]
 8007cca:	621a      	str	r2, [r3, #32]
}
 8007ccc:	bf00      	nop
 8007cce:	371c      	adds	r7, #28
 8007cd0:	46bd      	mov	sp, r7
 8007cd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cd6:	4770      	bx	lr
 8007cd8:	40010000 	.word	0x40010000
 8007cdc:	40010400 	.word	0x40010400

08007ce0 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007ce0:	b480      	push	{r7}
 8007ce2:	b087      	sub	sp, #28
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	6078      	str	r0, [r7, #4]
 8007ce8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	6a1b      	ldr	r3, [r3, #32]
 8007cee:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	6a1b      	ldr	r3, [r3, #32]
 8007cf4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	685b      	ldr	r3, [r3, #4]
 8007d00:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	69db      	ldr	r3, [r3, #28]
 8007d06:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007d08:	68fb      	ldr	r3, [r7, #12]
 8007d0a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007d0e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007d10:	68fb      	ldr	r3, [r7, #12]
 8007d12:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007d16:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007d18:	683b      	ldr	r3, [r7, #0]
 8007d1a:	681b      	ldr	r3, [r3, #0]
 8007d1c:	021b      	lsls	r3, r3, #8
 8007d1e:	68fa      	ldr	r2, [r7, #12]
 8007d20:	4313      	orrs	r3, r2
 8007d22:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8007d24:	693b      	ldr	r3, [r7, #16]
 8007d26:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007d2a:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007d2c:	683b      	ldr	r3, [r7, #0]
 8007d2e:	689b      	ldr	r3, [r3, #8]
 8007d30:	031b      	lsls	r3, r3, #12
 8007d32:	693a      	ldr	r2, [r7, #16]
 8007d34:	4313      	orrs	r3, r2
 8007d36:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007d38:	687b      	ldr	r3, [r7, #4]
 8007d3a:	4a12      	ldr	r2, [pc, #72]	@ (8007d84 <TIM_OC4_SetConfig+0xa4>)
 8007d3c:	4293      	cmp	r3, r2
 8007d3e:	d003      	beq.n	8007d48 <TIM_OC4_SetConfig+0x68>
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	4a11      	ldr	r2, [pc, #68]	@ (8007d88 <TIM_OC4_SetConfig+0xa8>)
 8007d44:	4293      	cmp	r3, r2
 8007d46:	d109      	bne.n	8007d5c <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007d48:	697b      	ldr	r3, [r7, #20]
 8007d4a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007d4e:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007d50:	683b      	ldr	r3, [r7, #0]
 8007d52:	695b      	ldr	r3, [r3, #20]
 8007d54:	019b      	lsls	r3, r3, #6
 8007d56:	697a      	ldr	r2, [r7, #20]
 8007d58:	4313      	orrs	r3, r2
 8007d5a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	697a      	ldr	r2, [r7, #20]
 8007d60:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007d62:	687b      	ldr	r3, [r7, #4]
 8007d64:	68fa      	ldr	r2, [r7, #12]
 8007d66:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8007d68:	683b      	ldr	r3, [r7, #0]
 8007d6a:	685a      	ldr	r2, [r3, #4]
 8007d6c:	687b      	ldr	r3, [r7, #4]
 8007d6e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007d70:	687b      	ldr	r3, [r7, #4]
 8007d72:	693a      	ldr	r2, [r7, #16]
 8007d74:	621a      	str	r2, [r3, #32]
}
 8007d76:	bf00      	nop
 8007d78:	371c      	adds	r7, #28
 8007d7a:	46bd      	mov	sp, r7
 8007d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d80:	4770      	bx	lr
 8007d82:	bf00      	nop
 8007d84:	40010000 	.word	0x40010000
 8007d88:	40010400 	.word	0x40010400

08007d8c <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007d8c:	b480      	push	{r7}
 8007d8e:	b087      	sub	sp, #28
 8007d90:	af00      	add	r7, sp, #0
 8007d92:	60f8      	str	r0, [r7, #12]
 8007d94:	60b9      	str	r1, [r7, #8]
 8007d96:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007d98:	68fb      	ldr	r3, [r7, #12]
 8007d9a:	6a1b      	ldr	r3, [r3, #32]
 8007d9c:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007d9e:	68fb      	ldr	r3, [r7, #12]
 8007da0:	6a1b      	ldr	r3, [r3, #32]
 8007da2:	f023 0201 	bic.w	r2, r3, #1
 8007da6:	68fb      	ldr	r3, [r7, #12]
 8007da8:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007daa:	68fb      	ldr	r3, [r7, #12]
 8007dac:	699b      	ldr	r3, [r3, #24]
 8007dae:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007db0:	693b      	ldr	r3, [r7, #16]
 8007db2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007db6:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007db8:	687b      	ldr	r3, [r7, #4]
 8007dba:	011b      	lsls	r3, r3, #4
 8007dbc:	693a      	ldr	r2, [r7, #16]
 8007dbe:	4313      	orrs	r3, r2
 8007dc0:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007dc2:	697b      	ldr	r3, [r7, #20]
 8007dc4:	f023 030a 	bic.w	r3, r3, #10
 8007dc8:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007dca:	697a      	ldr	r2, [r7, #20]
 8007dcc:	68bb      	ldr	r3, [r7, #8]
 8007dce:	4313      	orrs	r3, r2
 8007dd0:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007dd2:	68fb      	ldr	r3, [r7, #12]
 8007dd4:	693a      	ldr	r2, [r7, #16]
 8007dd6:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007dd8:	68fb      	ldr	r3, [r7, #12]
 8007dda:	697a      	ldr	r2, [r7, #20]
 8007ddc:	621a      	str	r2, [r3, #32]
}
 8007dde:	bf00      	nop
 8007de0:	371c      	adds	r7, #28
 8007de2:	46bd      	mov	sp, r7
 8007de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007de8:	4770      	bx	lr

08007dea <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007dea:	b480      	push	{r7}
 8007dec:	b087      	sub	sp, #28
 8007dee:	af00      	add	r7, sp, #0
 8007df0:	60f8      	str	r0, [r7, #12]
 8007df2:	60b9      	str	r1, [r7, #8]
 8007df4:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8007df6:	68fb      	ldr	r3, [r7, #12]
 8007df8:	6a1b      	ldr	r3, [r3, #32]
 8007dfa:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007dfc:	68fb      	ldr	r3, [r7, #12]
 8007dfe:	6a1b      	ldr	r3, [r3, #32]
 8007e00:	f023 0210 	bic.w	r2, r3, #16
 8007e04:	68fb      	ldr	r3, [r7, #12]
 8007e06:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007e08:	68fb      	ldr	r3, [r7, #12]
 8007e0a:	699b      	ldr	r3, [r3, #24]
 8007e0c:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007e0e:	693b      	ldr	r3, [r7, #16]
 8007e10:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007e14:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	031b      	lsls	r3, r3, #12
 8007e1a:	693a      	ldr	r2, [r7, #16]
 8007e1c:	4313      	orrs	r3, r2
 8007e1e:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007e20:	697b      	ldr	r3, [r7, #20]
 8007e22:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8007e26:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007e28:	68bb      	ldr	r3, [r7, #8]
 8007e2a:	011b      	lsls	r3, r3, #4
 8007e2c:	697a      	ldr	r2, [r7, #20]
 8007e2e:	4313      	orrs	r3, r2
 8007e30:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007e32:	68fb      	ldr	r3, [r7, #12]
 8007e34:	693a      	ldr	r2, [r7, #16]
 8007e36:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007e38:	68fb      	ldr	r3, [r7, #12]
 8007e3a:	697a      	ldr	r2, [r7, #20]
 8007e3c:	621a      	str	r2, [r3, #32]
}
 8007e3e:	bf00      	nop
 8007e40:	371c      	adds	r7, #28
 8007e42:	46bd      	mov	sp, r7
 8007e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e48:	4770      	bx	lr

08007e4a <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007e4a:	b480      	push	{r7}
 8007e4c:	b085      	sub	sp, #20
 8007e4e:	af00      	add	r7, sp, #0
 8007e50:	6078      	str	r0, [r7, #4]
 8007e52:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	689b      	ldr	r3, [r3, #8]
 8007e58:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007e5a:	68fb      	ldr	r3, [r7, #12]
 8007e5c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007e60:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007e62:	683a      	ldr	r2, [r7, #0]
 8007e64:	68fb      	ldr	r3, [r7, #12]
 8007e66:	4313      	orrs	r3, r2
 8007e68:	f043 0307 	orr.w	r3, r3, #7
 8007e6c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007e6e:	687b      	ldr	r3, [r7, #4]
 8007e70:	68fa      	ldr	r2, [r7, #12]
 8007e72:	609a      	str	r2, [r3, #8]
}
 8007e74:	bf00      	nop
 8007e76:	3714      	adds	r7, #20
 8007e78:	46bd      	mov	sp, r7
 8007e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e7e:	4770      	bx	lr

08007e80 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007e80:	b480      	push	{r7}
 8007e82:	b087      	sub	sp, #28
 8007e84:	af00      	add	r7, sp, #0
 8007e86:	60f8      	str	r0, [r7, #12]
 8007e88:	60b9      	str	r1, [r7, #8]
 8007e8a:	607a      	str	r2, [r7, #4]
 8007e8c:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007e8e:	68fb      	ldr	r3, [r7, #12]
 8007e90:	689b      	ldr	r3, [r3, #8]
 8007e92:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007e94:	697b      	ldr	r3, [r7, #20]
 8007e96:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007e9a:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007e9c:	683b      	ldr	r3, [r7, #0]
 8007e9e:	021a      	lsls	r2, r3, #8
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	431a      	orrs	r2, r3
 8007ea4:	68bb      	ldr	r3, [r7, #8]
 8007ea6:	4313      	orrs	r3, r2
 8007ea8:	697a      	ldr	r2, [r7, #20]
 8007eaa:	4313      	orrs	r3, r2
 8007eac:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007eae:	68fb      	ldr	r3, [r7, #12]
 8007eb0:	697a      	ldr	r2, [r7, #20]
 8007eb2:	609a      	str	r2, [r3, #8]
}
 8007eb4:	bf00      	nop
 8007eb6:	371c      	adds	r7, #28
 8007eb8:	46bd      	mov	sp, r7
 8007eba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ebe:	4770      	bx	lr

08007ec0 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007ec0:	b480      	push	{r7}
 8007ec2:	b087      	sub	sp, #28
 8007ec4:	af00      	add	r7, sp, #0
 8007ec6:	60f8      	str	r0, [r7, #12]
 8007ec8:	60b9      	str	r1, [r7, #8]
 8007eca:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007ecc:	68bb      	ldr	r3, [r7, #8]
 8007ece:	f003 031f 	and.w	r3, r3, #31
 8007ed2:	2201      	movs	r2, #1
 8007ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8007ed8:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007eda:	68fb      	ldr	r3, [r7, #12]
 8007edc:	6a1a      	ldr	r2, [r3, #32]
 8007ede:	697b      	ldr	r3, [r7, #20]
 8007ee0:	43db      	mvns	r3, r3
 8007ee2:	401a      	ands	r2, r3
 8007ee4:	68fb      	ldr	r3, [r7, #12]
 8007ee6:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007ee8:	68fb      	ldr	r3, [r7, #12]
 8007eea:	6a1a      	ldr	r2, [r3, #32]
 8007eec:	68bb      	ldr	r3, [r7, #8]
 8007eee:	f003 031f 	and.w	r3, r3, #31
 8007ef2:	6879      	ldr	r1, [r7, #4]
 8007ef4:	fa01 f303 	lsl.w	r3, r1, r3
 8007ef8:	431a      	orrs	r2, r3
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	621a      	str	r2, [r3, #32]
}
 8007efe:	bf00      	nop
 8007f00:	371c      	adds	r7, #28
 8007f02:	46bd      	mov	sp, r7
 8007f04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f08:	4770      	bx	lr
	...

08007f0c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007f0c:	b480      	push	{r7}
 8007f0e:	b085      	sub	sp, #20
 8007f10:	af00      	add	r7, sp, #0
 8007f12:	6078      	str	r0, [r7, #4]
 8007f14:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007f16:	687b      	ldr	r3, [r7, #4]
 8007f18:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007f1c:	2b01      	cmp	r3, #1
 8007f1e:	d101      	bne.n	8007f24 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007f20:	2302      	movs	r3, #2
 8007f22:	e05a      	b.n	8007fda <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007f24:	687b      	ldr	r3, [r7, #4]
 8007f26:	2201      	movs	r2, #1
 8007f28:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	2202      	movs	r2, #2
 8007f30:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007f34:	687b      	ldr	r3, [r7, #4]
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	685b      	ldr	r3, [r3, #4]
 8007f3a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	681b      	ldr	r3, [r3, #0]
 8007f40:	689b      	ldr	r3, [r3, #8]
 8007f42:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007f44:	68fb      	ldr	r3, [r7, #12]
 8007f46:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007f4a:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007f4c:	683b      	ldr	r3, [r7, #0]
 8007f4e:	681b      	ldr	r3, [r3, #0]
 8007f50:	68fa      	ldr	r2, [r7, #12]
 8007f52:	4313      	orrs	r3, r2
 8007f54:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007f56:	687b      	ldr	r3, [r7, #4]
 8007f58:	681b      	ldr	r3, [r3, #0]
 8007f5a:	68fa      	ldr	r2, [r7, #12]
 8007f5c:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	681b      	ldr	r3, [r3, #0]
 8007f62:	4a21      	ldr	r2, [pc, #132]	@ (8007fe8 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007f64:	4293      	cmp	r3, r2
 8007f66:	d022      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f68:	687b      	ldr	r3, [r7, #4]
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007f70:	d01d      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	681b      	ldr	r3, [r3, #0]
 8007f76:	4a1d      	ldr	r2, [pc, #116]	@ (8007fec <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007f78:	4293      	cmp	r3, r2
 8007f7a:	d018      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f7c:	687b      	ldr	r3, [r7, #4]
 8007f7e:	681b      	ldr	r3, [r3, #0]
 8007f80:	4a1b      	ldr	r2, [pc, #108]	@ (8007ff0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007f82:	4293      	cmp	r3, r2
 8007f84:	d013      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	681b      	ldr	r3, [r3, #0]
 8007f8a:	4a1a      	ldr	r2, [pc, #104]	@ (8007ff4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8007f8c:	4293      	cmp	r3, r2
 8007f8e:	d00e      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f90:	687b      	ldr	r3, [r7, #4]
 8007f92:	681b      	ldr	r3, [r3, #0]
 8007f94:	4a18      	ldr	r2, [pc, #96]	@ (8007ff8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007f96:	4293      	cmp	r3, r2
 8007f98:	d009      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f9a:	687b      	ldr	r3, [r7, #4]
 8007f9c:	681b      	ldr	r3, [r3, #0]
 8007f9e:	4a17      	ldr	r2, [pc, #92]	@ (8007ffc <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007fa0:	4293      	cmp	r3, r2
 8007fa2:	d004      	beq.n	8007fae <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007fa4:	687b      	ldr	r3, [r7, #4]
 8007fa6:	681b      	ldr	r3, [r3, #0]
 8007fa8:	4a15      	ldr	r2, [pc, #84]	@ (8008000 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007faa:	4293      	cmp	r3, r2
 8007fac:	d10c      	bne.n	8007fc8 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007fae:	68bb      	ldr	r3, [r7, #8]
 8007fb0:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007fb4:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007fb6:	683b      	ldr	r3, [r7, #0]
 8007fb8:	685b      	ldr	r3, [r3, #4]
 8007fba:	68ba      	ldr	r2, [r7, #8]
 8007fbc:	4313      	orrs	r3, r2
 8007fbe:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	681b      	ldr	r3, [r3, #0]
 8007fc4:	68ba      	ldr	r2, [r7, #8]
 8007fc6:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007fc8:	687b      	ldr	r3, [r7, #4]
 8007fca:	2201      	movs	r2, #1
 8007fcc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007fd0:	687b      	ldr	r3, [r7, #4]
 8007fd2:	2200      	movs	r2, #0
 8007fd4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8007fd8:	2300      	movs	r3, #0
}
 8007fda:	4618      	mov	r0, r3
 8007fdc:	3714      	adds	r7, #20
 8007fde:	46bd      	mov	sp, r7
 8007fe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe4:	4770      	bx	lr
 8007fe6:	bf00      	nop
 8007fe8:	40010000 	.word	0x40010000
 8007fec:	40000400 	.word	0x40000400
 8007ff0:	40000800 	.word	0x40000800
 8007ff4:	40000c00 	.word	0x40000c00
 8007ff8:	40010400 	.word	0x40010400
 8007ffc:	40014000 	.word	0x40014000
 8008000:	40001800 	.word	0x40001800

08008004 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8008004:	b480      	push	{r7}
 8008006:	b083      	sub	sp, #12
 8008008:	af00      	add	r7, sp, #0
 800800a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 800800c:	bf00      	nop
 800800e:	370c      	adds	r7, #12
 8008010:	46bd      	mov	sp, r7
 8008012:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008016:	4770      	bx	lr

08008018 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8008018:	b480      	push	{r7}
 800801a:	b083      	sub	sp, #12
 800801c:	af00      	add	r7, sp, #0
 800801e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8008020:	bf00      	nop
 8008022:	370c      	adds	r7, #12
 8008024:	46bd      	mov	sp, r7
 8008026:	f85d 7b04 	ldr.w	r7, [sp], #4
 800802a:	4770      	bx	lr

0800802c <MX_TouchGFX_Init>:
 800802c:	b580      	push	{r7, lr}
 800802e:	af00      	add	r7, sp, #0
 8008030:	f005 fb6c 	bl	800d70c <touchgfx_components_init>
 8008034:	f005 fb40 	bl	800d6b8 <touchgfx_init>
 8008038:	bf00      	nop
 800803a:	bd80      	pop	{r7, pc}

0800803c <MX_TouchGFX_Process>:
 800803c:	b580      	push	{r7, lr}
 800803e:	af00      	add	r7, sp, #0
 8008040:	f005 fb6c 	bl	800d71c <touchgfx_taskEntry>
 8008044:	bf00      	nop
 8008046:	bd80      	pop	{r7, pc}

08008048 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8008048:	b480      	push	{r7}
 800804a:	b083      	sub	sp, #12
 800804c:	af00      	add	r7, sp, #0
 800804e:	6078      	str	r0, [r7, #4]
    {
 8008050:	4a04      	ldr	r2, [pc, #16]	@ (8008064 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8008052:	687b      	ldr	r3, [r7, #4]
 8008054:	601a      	str	r2, [r3, #0]
    }
 8008056:	687b      	ldr	r3, [r7, #4]
 8008058:	4618      	mov	r0, r3
 800805a:	370c      	adds	r7, #12
 800805c:	46bd      	mov	sp, r7
 800805e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008062:	4770      	bx	lr
 8008064:	08025f38 	.word	0x08025f38

08008068 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8008068:	b580      	push	{r7, lr}
 800806a:	b082      	sub	sp, #8
 800806c:	af00      	add	r7, sp, #0
 800806e:	6078      	str	r0, [r7, #4]
    }
 8008070:	6878      	ldr	r0, [r7, #4]
 8008072:	f7ff ffe9 	bl	8008048 <_ZN8touchgfx12FontProviderD1Ev>
 8008076:	2104      	movs	r1, #4
 8008078:	6878      	ldr	r0, [r7, #4]
 800807a:	f01b fdca 	bl	8023c12 <_ZdlPvj>
 800807e:	687b      	ldr	r3, [r7, #4]
 8008080:	4618      	mov	r0, r3
 8008082:	3708      	adds	r7, #8
 8008084:	46bd      	mov	sp, r7
 8008086:	bd80      	pop	{r7, pc}

08008088 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8008088:	b580      	push	{r7, lr}
 800808a:	b082      	sub	sp, #8
 800808c:	af00      	add	r7, sp, #0
 800808e:	6078      	str	r0, [r7, #4]
 8008090:	460b      	mov	r3, r1
 8008092:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8008094:	887b      	ldrh	r3, [r7, #2]
 8008096:	2b00      	cmp	r3, #0
 8008098:	d002      	beq.n	80080a0 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 800809a:	2b01      	cmp	r3, #1
 800809c:	d005      	beq.n	80080aa <_ZN23ApplicationFontProvider7getFontEt+0x22>
 800809e:	e009      	b.n	80080b4 <_ZN23ApplicationFontProvider7getFontEt+0x2c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80080a0:	f003 ffa8 	bl	800bff4 <_ZN17TypedTextDatabase8getFontsEv>
 80080a4:	4603      	mov	r3, r0
 80080a6:	681b      	ldr	r3, [r3, #0]
 80080a8:	e005      	b.n	80080b6 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    case Typography::TYPOGRAPHY_00:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80080aa:	f003 ffa3 	bl	800bff4 <_ZN17TypedTextDatabase8getFontsEv>
 80080ae:	4603      	mov	r3, r0
 80080b0:	685b      	ldr	r3, [r3, #4]
 80080b2:	e000      	b.n	80080b6 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    default:
        return 0;
 80080b4:	2300      	movs	r3, #0
    }
}
 80080b6:	4618      	mov	r0, r3
 80080b8:	3708      	adds	r7, #8
 80080ba:	46bd      	mov	sp, r7
 80080bc:	bd80      	pop	{r7, pc}
	...

080080c0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DEFAULT = 0;       // Asap_Regular_80_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 1; // verdana_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80080c0:	b580      	push	{r7, lr}
 80080c2:	b082      	sub	sp, #8
 80080c4:	af00      	add	r7, sp, #0
 80080c6:	6078      	str	r0, [r7, #4]
 80080c8:	4a05      	ldr	r2, [pc, #20]	@ (80080e0 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 80080ca:	687b      	ldr	r3, [r7, #4]
 80080cc:	601a      	str	r2, [r3, #0]
 80080ce:	687b      	ldr	r3, [r7, #4]
 80080d0:	4618      	mov	r0, r3
 80080d2:	f7ff ffb9 	bl	8008048 <_ZN8touchgfx12FontProviderD1Ev>
 80080d6:	687b      	ldr	r3, [r7, #4]
 80080d8:	4618      	mov	r0, r3
 80080da:	3708      	adds	r7, #8
 80080dc:	46bd      	mov	sp, r7
 80080de:	bd80      	pop	{r7, pc}
 80080e0:	08025f24 	.word	0x08025f24

080080e4 <_ZN23ApplicationFontProviderD0Ev>:
 80080e4:	b580      	push	{r7, lr}
 80080e6:	b082      	sub	sp, #8
 80080e8:	af00      	add	r7, sp, #0
 80080ea:	6078      	str	r0, [r7, #4]
 80080ec:	6878      	ldr	r0, [r7, #4]
 80080ee:	f7ff ffe7 	bl	80080c0 <_ZN23ApplicationFontProviderD1Ev>
 80080f2:	2104      	movs	r1, #4
 80080f4:	6878      	ldr	r0, [r7, #4]
 80080f6:	f01b fd8c 	bl	8023c12 <_ZdlPvj>
 80080fa:	687b      	ldr	r3, [r7, #4]
 80080fc:	4618      	mov	r0, r3
 80080fe:	3708      	adds	r7, #8
 8008100:	46bd      	mov	sp, r7
 8008102:	bd80      	pop	{r7, pc}

08008104 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8008104:	b480      	push	{r7}
 8008106:	b083      	sub	sp, #12
 8008108:	af00      	add	r7, sp, #0
 800810a:	6078      	str	r0, [r7, #4]
    {
 800810c:	4a04      	ldr	r2, [pc, #16]	@ (8008120 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	601a      	str	r2, [r3, #0]
    }
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	4618      	mov	r0, r3
 8008116:	370c      	adds	r7, #12
 8008118:	46bd      	mov	sp, r7
 800811a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800811e:	4770      	bx	lr
 8008120:	080265b4 	.word	0x080265b4

08008124 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8008124:	b580      	push	{r7, lr}
 8008126:	b082      	sub	sp, #8
 8008128:	af00      	add	r7, sp, #0
 800812a:	6078      	str	r0, [r7, #4]
    }
 800812c:	6878      	ldr	r0, [r7, #4]
 800812e:	f7ff ffe9 	bl	8008104 <_ZN8touchgfx4FontD1Ev>
 8008132:	2114      	movs	r1, #20
 8008134:	6878      	ldr	r0, [r7, #4]
 8008136:	f01b fd6c 	bl	8023c12 <_ZdlPvj>
 800813a:	687b      	ldr	r3, [r7, #4]
 800813c:	4618      	mov	r0, r3
 800813e:	3708      	adds	r7, #8
 8008140:	46bd      	mov	sp, r7
 8008142:	bd80      	pop	{r7, pc}

08008144 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8008144:	b590      	push	{r4, r7, lr}
 8008146:	b087      	sub	sp, #28
 8008148:	af00      	add	r7, sp, #0
 800814a:	6078      	str	r0, [r7, #4]
 800814c:	460b      	mov	r3, r1
 800814e:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8008150:	887b      	ldrh	r3, [r7, #2]
 8008152:	2b00      	cmp	r3, #0
 8008154:	d101      	bne.n	800815a <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8008156:	2300      	movs	r3, #0
 8008158:	e010      	b.n	800817c <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800815a:	2300      	movs	r3, #0
 800815c:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800815e:	2300      	movs	r3, #0
 8008160:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8008162:	687b      	ldr	r3, [r7, #4]
 8008164:	681b      	ldr	r3, [r3, #0]
 8008166:	3308      	adds	r3, #8
 8008168:	681c      	ldr	r4, [r3, #0]
 800816a:	f107 030f 	add.w	r3, r7, #15
 800816e:	f107 0210 	add.w	r2, r7, #16
 8008172:	8879      	ldrh	r1, [r7, #2]
 8008174:	6878      	ldr	r0, [r7, #4]
 8008176:	47a0      	blx	r4
 8008178:	6178      	str	r0, [r7, #20]
        return glyph;
 800817a:	697b      	ldr	r3, [r7, #20]
    }
 800817c:	4618      	mov	r0, r3
 800817e:	371c      	adds	r7, #28
 8008180:	46bd      	mov	sp, r7
 8008182:	bd90      	pop	{r4, r7, pc}

08008184 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8008184:	b480      	push	{r7}
 8008186:	b083      	sub	sp, #12
 8008188:	af00      	add	r7, sp, #0
 800818a:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	89db      	ldrh	r3, [r3, #14]
    }
 8008190:	4618      	mov	r0, r3
 8008192:	370c      	adds	r7, #12
 8008194:	46bd      	mov	sp, r7
 8008196:	f85d 7b04 	ldr.w	r7, [sp], #4
 800819a:	4770      	bx	lr

0800819c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800819c:	b480      	push	{r7}
 800819e:	b083      	sub	sp, #12
 80081a0:	af00      	add	r7, sp, #0
 80081a2:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	8a1b      	ldrh	r3, [r3, #16]
    }
 80081a8:	4618      	mov	r0, r3
 80081aa:	370c      	adds	r7, #12
 80081ac:	46bd      	mov	sp, r7
 80081ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081b2:	4770      	bx	lr

080081b4 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 80081b4:	b480      	push	{r7}
 80081b6:	b083      	sub	sp, #12
 80081b8:	af00      	add	r7, sp, #0
 80081ba:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	88db      	ldrh	r3, [r3, #6]
    }
 80081c0:	4618      	mov	r0, r3
 80081c2:	370c      	adds	r7, #12
 80081c4:	46bd      	mov	sp, r7
 80081c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ca:	4770      	bx	lr

080081cc <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 80081cc:	b480      	push	{r7}
 80081ce:	b083      	sub	sp, #12
 80081d0:	af00      	add	r7, sp, #0
 80081d2:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	889b      	ldrh	r3, [r3, #4]
    }
 80081d8:	4618      	mov	r0, r3
 80081da:	370c      	adds	r7, #12
 80081dc:	46bd      	mov	sp, r7
 80081de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081e2:	4770      	bx	lr

080081e4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 80081e4:	b480      	push	{r7}
 80081e6:	b083      	sub	sp, #12
 80081e8:	af00      	add	r7, sp, #0
 80081ea:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	7a9b      	ldrb	r3, [r3, #10]
 80081f0:	f3c3 0306 	ubfx	r3, r3, #0, #7
 80081f4:	b2db      	uxtb	r3, r3
    }
 80081f6:	4618      	mov	r0, r3
 80081f8:	370c      	adds	r7, #12
 80081fa:	46bd      	mov	sp, r7
 80081fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008200:	4770      	bx	lr

08008202 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8008202:	b480      	push	{r7}
 8008204:	b083      	sub	sp, #12
 8008206:	af00      	add	r7, sp, #0
 8008208:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800820a:	687b      	ldr	r3, [r7, #4]
 800820c:	7a9b      	ldrb	r3, [r3, #10]
 800820e:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8008212:	b2db      	uxtb	r3, r3
    }
 8008214:	4618      	mov	r0, r3
 8008216:	370c      	adds	r7, #12
 8008218:	46bd      	mov	sp, r7
 800821a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800821e:	4770      	bx	lr

08008220 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8008220:	b480      	push	{r7}
 8008222:	b083      	sub	sp, #12
 8008224:	af00      	add	r7, sp, #0
 8008226:	6078      	str	r0, [r7, #4]
    {
        return false;
 8008228:	2300      	movs	r3, #0
    }
 800822a:	4618      	mov	r0, r3
 800822c:	370c      	adds	r7, #12
 800822e:	46bd      	mov	sp, r7
 8008230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008234:	4770      	bx	lr

08008236 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 8008236:	b480      	push	{r7}
 8008238:	b083      	sub	sp, #12
 800823a:	af00      	add	r7, sp, #0
 800823c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800823e:	f04f 0300 	mov.w	r3, #0
 8008242:	ee07 3a90 	vmov	s15, r3
    }
 8008246:	eeb0 0a67 	vmov.f32	s0, s15
 800824a:	370c      	adds	r7, #12
 800824c:	46bd      	mov	sp, r7
 800824e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008252:	4770      	bx	lr

08008254 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8008254:	b580      	push	{r7, lr}
 8008256:	b082      	sub	sp, #8
 8008258:	af00      	add	r7, sp, #0
 800825a:	6078      	str	r0, [r7, #4]
 800825c:	4a05      	ldr	r2, [pc, #20]	@ (8008274 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	601a      	str	r2, [r3, #0]
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	4618      	mov	r0, r3
 8008266:	f7ff ff4d 	bl	8008104 <_ZN8touchgfx4FontD1Ev>
 800826a:	687b      	ldr	r3, [r7, #4]
 800826c:	4618      	mov	r0, r3
 800826e:	3708      	adds	r7, #8
 8008270:	46bd      	mov	sp, r7
 8008272:	bd80      	pop	{r7, pc}
 8008274:	08027208 	.word	0x08027208

08008278 <_ZN8touchgfx9ConstFontD0Ev>:
 8008278:	b580      	push	{r7, lr}
 800827a:	b082      	sub	sp, #8
 800827c:	af00      	add	r7, sp, #0
 800827e:	6078      	str	r0, [r7, #4]
 8008280:	6878      	ldr	r0, [r7, #4]
 8008282:	f7ff ffe7 	bl	8008254 <_ZN8touchgfx9ConstFontD1Ev>
 8008286:	211c      	movs	r1, #28
 8008288:	6878      	ldr	r0, [r7, #4]
 800828a:	f01b fcc2 	bl	8023c12 <_ZdlPvj>
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	4618      	mov	r0, r3
 8008292:	3708      	adds	r7, #8
 8008294:	46bd      	mov	sp, r7
 8008296:	bd80      	pop	{r7, pc}

08008298 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8008298:	b580      	push	{r7, lr}
 800829a:	b082      	sub	sp, #8
 800829c:	af00      	add	r7, sp, #0
 800829e:	6078      	str	r0, [r7, #4]
 80082a0:	4a05      	ldr	r2, [pc, #20]	@ (80082b8 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	601a      	str	r2, [r3, #0]
 80082a6:	687b      	ldr	r3, [r7, #4]
 80082a8:	4618      	mov	r0, r3
 80082aa:	f7ff ffd3 	bl	8008254 <_ZN8touchgfx9ConstFontD1Ev>
 80082ae:	687b      	ldr	r3, [r7, #4]
 80082b0:	4618      	mov	r0, r3
 80082b2:	3708      	adds	r7, #8
 80082b4:	46bd      	mov	sp, r7
 80082b6:	bd80      	pop	{r7, pc}
 80082b8:	08025f5c 	.word	0x08025f5c

080082bc <_ZN8touchgfx13GeneratedFontD0Ev>:
 80082bc:	b580      	push	{r7, lr}
 80082be:	b082      	sub	sp, #8
 80082c0:	af00      	add	r7, sp, #0
 80082c2:	6078      	str	r0, [r7, #4]
 80082c4:	6878      	ldr	r0, [r7, #4]
 80082c6:	f7ff ffe7 	bl	8008298 <_ZN8touchgfx13GeneratedFontD1Ev>
 80082ca:	212c      	movs	r1, #44	@ 0x2c
 80082cc:	6878      	ldr	r0, [r7, #4]
 80082ce:	f01b fca0 	bl	8023c12 <_ZdlPvj>
 80082d2:	687b      	ldr	r3, [r7, #4]
 80082d4:	4618      	mov	r0, r3
 80082d6:	3708      	adds	r7, #8
 80082d8:	46bd      	mov	sp, r7
 80082da:	bd80      	pop	{r7, pc}

080082dc <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 80082dc:	b480      	push	{r7}
 80082de:	b083      	sub	sp, #12
 80082e0:	af00      	add	r7, sp, #0
 80082e2:	6078      	str	r0, [r7, #4]
    {
 80082e4:	4a04      	ldr	r2, [pc, #16]	@ (80082f8 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	601a      	str	r2, [r3, #0]
    }
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	4618      	mov	r0, r3
 80082ee:	370c      	adds	r7, #12
 80082f0:	46bd      	mov	sp, r7
 80082f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80082f6:	4770      	bx	lr
 80082f8:	08025f4c 	.word	0x08025f4c

080082fc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80082fc:	b580      	push	{r7, lr}
 80082fe:	b082      	sub	sp, #8
 8008300:	af00      	add	r7, sp, #0
 8008302:	6078      	str	r0, [r7, #4]
    }
 8008304:	6878      	ldr	r0, [r7, #4]
 8008306:	f7ff ffe9 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
 800830a:	2108      	movs	r1, #8
 800830c:	6878      	ldr	r0, [r7, #4]
 800830e:	f01b fc80 	bl	8023c12 <_ZdlPvj>
 8008312:	687b      	ldr	r3, [r7, #4]
 8008314:	4618      	mov	r0, r3
 8008316:	3708      	adds	r7, #8
 8008318:	46bd      	mov	sp, r7
 800831a:	bd80      	pop	{r7, pc}

0800831c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800831c:	b480      	push	{r7}
 800831e:	b083      	sub	sp, #12
 8008320:	af00      	add	r7, sp, #0
 8008322:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8008324:	687b      	ldr	r3, [r7, #4]
 8008326:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8008328:	4618      	mov	r0, r3
 800832a:	370c      	adds	r7, #12
 800832c:	46bd      	mov	sp, r7
 800832e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008332:	4770      	bx	lr

08008334 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8008334:	b480      	push	{r7}
 8008336:	b083      	sub	sp, #12
 8008338:	af00      	add	r7, sp, #0
 800833a:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8008340:	4618      	mov	r0, r3
 8008342:	370c      	adds	r7, #12
 8008344:	46bd      	mov	sp, r7
 8008346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800834a:	4770      	bx	lr

0800834c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800834c:	b580      	push	{r7, lr}
 800834e:	b08e      	sub	sp, #56	@ 0x38
 8008350:	af0a      	add	r7, sp, #40	@ 0x28
 8008352:	60f8      	str	r0, [r7, #12]
 8008354:	60b9      	str	r1, [r7, #8]
 8008356:	4611      	mov	r1, r2
 8008358:	461a      	mov	r2, r3
 800835a:	460b      	mov	r3, r1
 800835c:	80fb      	strh	r3, [r7, #6]
 800835e:	4613      	mov	r3, r2
 8008360:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8008362:	68f8      	ldr	r0, [r7, #12]
 8008364:	88b9      	ldrh	r1, [r7, #4]
 8008366:	88fa      	ldrh	r2, [r7, #6]
 8008368:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 800836c:	9308      	str	r3, [sp, #32]
 800836e:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8008370:	9307      	str	r3, [sp, #28]
 8008372:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8008376:	9306      	str	r3, [sp, #24]
 8008378:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800837c:	9305      	str	r3, [sp, #20]
 800837e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8008382:	9304      	str	r3, [sp, #16]
 8008384:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8008388:	9303      	str	r3, [sp, #12]
 800838a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800838e:	9302      	str	r3, [sp, #8]
 8008390:	7f3b      	ldrb	r3, [r7, #28]
 8008392:	9301      	str	r3, [sp, #4]
 8008394:	8b3b      	ldrh	r3, [r7, #24]
 8008396:	9300      	str	r3, [sp, #0]
 8008398:	460b      	mov	r3, r1
 800839a:	68b9      	ldr	r1, [r7, #8]
 800839c:	f00b f804 	bl	80133a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80083a0:	4a09      	ldr	r2, [pc, #36]	@ (80083c8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 80083a2:	68fb      	ldr	r3, [r7, #12]
 80083a4:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 80083a6:	68fb      	ldr	r3, [r7, #12]
 80083a8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80083aa:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 80083ac:	68fb      	ldr	r3, [r7, #12]
 80083ae:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80083b0:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 80083b2:	68fb      	ldr	r3, [r7, #12]
 80083b4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80083b6:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 80083b8:	68fb      	ldr	r3, [r7, #12]
 80083ba:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80083bc:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 80083be:	68fb      	ldr	r3, [r7, #12]
 80083c0:	4618      	mov	r0, r3
 80083c2:	3710      	adds	r7, #16
 80083c4:	46bd      	mov	sp, r7
 80083c6:	bd80      	pop	{r7, pc}
 80083c8:	08025f5c 	.word	0x08025f5c

080083cc <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80083cc:	b480      	push	{r7}
 80083ce:	b085      	sub	sp, #20
 80083d0:	af00      	add	r7, sp, #0
 80083d2:	6078      	str	r0, [r7, #4]
 80083d4:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	69db      	ldr	r3, [r3, #28]
 80083da:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80083dc:	683b      	ldr	r3, [r7, #0]
 80083de:	889b      	ldrh	r3, [r3, #4]
 80083e0:	0adb      	lsrs	r3, r3, #11
 80083e2:	b29b      	uxth	r3, r3
 80083e4:	009b      	lsls	r3, r3, #2
 80083e6:	68fa      	ldr	r2, [r7, #12]
 80083e8:	4413      	add	r3, r2
 80083ea:	681a      	ldr	r2, [r3, #0]
 80083ec:	683b      	ldr	r3, [r7, #0]
 80083ee:	681b      	ldr	r3, [r3, #0]
 80083f0:	4413      	add	r3, r2
}
 80083f2:	4618      	mov	r0, r3
 80083f4:	3714      	adds	r7, #20
 80083f6:	46bd      	mov	sp, r7
 80083f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083fc:	4770      	bx	lr

080083fe <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80083fe:	b480      	push	{r7}
 8008400:	b089      	sub	sp, #36	@ 0x24
 8008402:	af00      	add	r7, sp, #0
 8008404:	60f8      	str	r0, [r7, #12]
 8008406:	460b      	mov	r3, r1
 8008408:	607a      	str	r2, [r7, #4]
 800840a:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800840c:	687b      	ldr	r3, [r7, #4]
 800840e:	2b00      	cmp	r3, #0
 8008410:	d003      	beq.n	800841a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8008412:	687b      	ldr	r3, [r7, #4]
 8008414:	7b1b      	ldrb	r3, [r3, #12]
 8008416:	2b00      	cmp	r3, #0
 8008418:	d101      	bne.n	800841e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800841a:	2300      	movs	r3, #0
 800841c:	e031      	b.n	8008482 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800841e:	68fb      	ldr	r3, [r7, #12]
 8008420:	6a1a      	ldr	r2, [r3, #32]
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8008426:	697b      	ldr	r3, [r7, #20]
 8008428:	7b5b      	ldrb	r3, [r3, #13]
 800842a:	021b      	lsls	r3, r3, #8
 800842c:	b21b      	sxth	r3, r3
 800842e:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8008432:	b219      	sxth	r1, r3
 8008434:	697b      	ldr	r3, [r7, #20]
 8008436:	7adb      	ldrb	r3, [r3, #11]
 8008438:	b21b      	sxth	r3, r3
 800843a:	430b      	orrs	r3, r1
 800843c:	b21b      	sxth	r3, r3
 800843e:	b29b      	uxth	r3, r3
 8008440:	009b      	lsls	r3, r3, #2
 8008442:	4413      	add	r3, r2
 8008444:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	7b1b      	ldrb	r3, [r3, #12]
 800844a:	837b      	strh	r3, [r7, #26]
 800844c:	e013      	b.n	8008476 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800844e:	69fb      	ldr	r3, [r7, #28]
 8008450:	881b      	ldrh	r3, [r3, #0]
 8008452:	897a      	ldrh	r2, [r7, #10]
 8008454:	429a      	cmp	r2, r3
 8008456:	d103      	bne.n	8008460 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8008458:	69fb      	ldr	r3, [r7, #28]
 800845a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800845e:	e010      	b.n	8008482 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8008460:	69fb      	ldr	r3, [r7, #28]
 8008462:	881b      	ldrh	r3, [r3, #0]
 8008464:	897a      	ldrh	r2, [r7, #10]
 8008466:	429a      	cmp	r2, r3
 8008468:	d309      	bcc.n	800847e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800846a:	8b7b      	ldrh	r3, [r7, #26]
 800846c:	3b01      	subs	r3, #1
 800846e:	837b      	strh	r3, [r7, #26]
 8008470:	69fb      	ldr	r3, [r7, #28]
 8008472:	3304      	adds	r3, #4
 8008474:	61fb      	str	r3, [r7, #28]
 8008476:	8b7b      	ldrh	r3, [r7, #26]
 8008478:	2b00      	cmp	r3, #0
 800847a:	d1e8      	bne.n	800844e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800847c:	e000      	b.n	8008480 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800847e:	bf00      	nop
        }
    }
    return 0;
 8008480:	2300      	movs	r3, #0
}
 8008482:	4618      	mov	r0, r3
 8008484:	3724      	adds	r7, #36	@ 0x24
 8008486:	46bd      	mov	sp, r7
 8008488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800848c:	4770      	bx	lr
	...

08008490 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 8008490:	b580      	push	{r7, lr}
 8008492:	af00      	add	r7, sp, #0
 8008494:	4801      	ldr	r0, [pc, #4]	@ (800849c <__tcf_0+0xc>)
 8008496:	f7ff feff 	bl	8008298 <_ZN8touchgfx13GeneratedFontD1Ev>
 800849a:	bd80      	pop	{r7, pc}
 800849c:	200005e8 	.word	0x200005e8

080084a0 <_Z28getFont_Asap_Regular_80_4bppv>:
{
 80084a0:	b580      	push	{r7, lr}
 80084a2:	b08e      	sub	sp, #56	@ 0x38
 80084a4:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80084a6:	4b21      	ldr	r3, [pc, #132]	@ (800852c <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80084a8:	681b      	ldr	r3, [r3, #0]
 80084aa:	f3bf 8f5b 	dmb	ish
 80084ae:	f003 0301 	and.w	r3, r3, #1
 80084b2:	2b00      	cmp	r3, #0
 80084b4:	bf0c      	ite	eq
 80084b6:	2301      	moveq	r3, #1
 80084b8:	2300      	movne	r3, #0
 80084ba:	b2db      	uxtb	r3, r3
 80084bc:	2b00      	cmp	r3, #0
 80084be:	d030      	beq.n	8008522 <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 80084c0:	481a      	ldr	r0, [pc, #104]	@ (800852c <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80084c2:	f01b fba8 	bl	8023c16 <__cxa_guard_acquire>
 80084c6:	4603      	mov	r3, r0
 80084c8:	2b00      	cmp	r3, #0
 80084ca:	bf14      	ite	ne
 80084cc:	2301      	movne	r3, #1
 80084ce:	2300      	moveq	r3, #0
 80084d0:	b2db      	uxtb	r3, r3
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d025      	beq.n	8008522 <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 80084d6:	2300      	movs	r3, #0
 80084d8:	930c      	str	r3, [sp, #48]	@ 0x30
 80084da:	2300      	movs	r3, #0
 80084dc:	930b      	str	r3, [sp, #44]	@ 0x2c
 80084de:	2300      	movs	r3, #0
 80084e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80084e2:	2300      	movs	r3, #0
 80084e4:	9309      	str	r3, [sp, #36]	@ 0x24
 80084e6:	4b12      	ldr	r3, [pc, #72]	@ (8008530 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 80084e8:	9308      	str	r3, [sp, #32]
 80084ea:	4b12      	ldr	r3, [pc, #72]	@ (8008534 <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 80084ec:	9307      	str	r3, [sp, #28]
 80084ee:	2300      	movs	r3, #0
 80084f0:	9306      	str	r3, [sp, #24]
 80084f2:	2300      	movs	r3, #0
 80084f4:	9305      	str	r3, [sp, #20]
 80084f6:	2301      	movs	r3, #1
 80084f8:	9304      	str	r3, [sp, #16]
 80084fa:	2304      	movs	r3, #4
 80084fc:	9303      	str	r3, [sp, #12]
 80084fe:	2300      	movs	r3, #0
 8008500:	9302      	str	r3, [sp, #8]
 8008502:	2300      	movs	r3, #0
 8008504:	9301      	str	r3, [sp, #4]
 8008506:	2350      	movs	r3, #80	@ 0x50
 8008508:	9300      	str	r3, [sp, #0]
 800850a:	2350      	movs	r3, #80	@ 0x50
 800850c:	220a      	movs	r2, #10
 800850e:	490a      	ldr	r1, [pc, #40]	@ (8008538 <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 8008510:	480a      	ldr	r0, [pc, #40]	@ (800853c <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 8008512:	f7ff ff1b 	bl	800834c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8008516:	480a      	ldr	r0, [pc, #40]	@ (8008540 <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 8008518:	f01b fc48 	bl	8023dac <atexit>
 800851c:	4803      	ldr	r0, [pc, #12]	@ (800852c <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 800851e:	f01b fb86 	bl	8023c2e <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 8008522:	4b06      	ldr	r3, [pc, #24]	@ (800853c <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 8008524:	4618      	mov	r0, r3
 8008526:	46bd      	mov	sp, r7
 8008528:	bd80      	pop	{r7, pc}
 800852a:	bf00      	nop
 800852c:	20000614 	.word	0x20000614
 8008530:	0802dfd8 	.word	0x0802dfd8
 8008534:	0802e284 	.word	0x0802e284
 8008538:	0802da18 	.word	0x0802da18
 800853c:	200005e8 	.word	0x200005e8
 8008540:	08008491 	.word	0x08008491

08008544 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8008544:	b580      	push	{r7, lr}
 8008546:	af00      	add	r7, sp, #0
 8008548:	4801      	ldr	r0, [pc, #4]	@ (8008550 <__tcf_0+0xc>)
 800854a:	f7ff fea5 	bl	8008298 <_ZN8touchgfx13GeneratedFontD1Ev>
 800854e:	bd80      	pop	{r7, pc}
 8008550:	20000618 	.word	0x20000618

08008554 <_Z23getFont_verdana_30_4bppv>:
{
 8008554:	b580      	push	{r7, lr}
 8008556:	b08e      	sub	sp, #56	@ 0x38
 8008558:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 800855a:	4b21      	ldr	r3, [pc, #132]	@ (80085e0 <_Z23getFont_verdana_30_4bppv+0x8c>)
 800855c:	681b      	ldr	r3, [r3, #0]
 800855e:	f3bf 8f5b 	dmb	ish
 8008562:	f003 0301 	and.w	r3, r3, #1
 8008566:	2b00      	cmp	r3, #0
 8008568:	bf0c      	ite	eq
 800856a:	2301      	moveq	r3, #1
 800856c:	2300      	movne	r3, #0
 800856e:	b2db      	uxtb	r3, r3
 8008570:	2b00      	cmp	r3, #0
 8008572:	d030      	beq.n	80085d6 <_Z23getFont_verdana_30_4bppv+0x82>
 8008574:	481a      	ldr	r0, [pc, #104]	@ (80085e0 <_Z23getFont_verdana_30_4bppv+0x8c>)
 8008576:	f01b fb4e 	bl	8023c16 <__cxa_guard_acquire>
 800857a:	4603      	mov	r3, r0
 800857c:	2b00      	cmp	r3, #0
 800857e:	bf14      	ite	ne
 8008580:	2301      	movne	r3, #1
 8008582:	2300      	moveq	r3, #0
 8008584:	b2db      	uxtb	r3, r3
 8008586:	2b00      	cmp	r3, #0
 8008588:	d025      	beq.n	80085d6 <_Z23getFont_verdana_30_4bppv+0x82>
 800858a:	2300      	movs	r3, #0
 800858c:	930c      	str	r3, [sp, #48]	@ 0x30
 800858e:	2300      	movs	r3, #0
 8008590:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008592:	2300      	movs	r3, #0
 8008594:	930a      	str	r3, [sp, #40]	@ 0x28
 8008596:	233f      	movs	r3, #63	@ 0x3f
 8008598:	9309      	str	r3, [sp, #36]	@ 0x24
 800859a:	4b12      	ldr	r3, [pc, #72]	@ (80085e4 <_Z23getFont_verdana_30_4bppv+0x90>)
 800859c:	9308      	str	r3, [sp, #32]
 800859e:	4b12      	ldr	r3, [pc, #72]	@ (80085e8 <_Z23getFont_verdana_30_4bppv+0x94>)
 80085a0:	9307      	str	r3, [sp, #28]
 80085a2:	2301      	movs	r3, #1
 80085a4:	9306      	str	r3, [sp, #24]
 80085a6:	2301      	movs	r3, #1
 80085a8:	9305      	str	r3, [sp, #20]
 80085aa:	2301      	movs	r3, #1
 80085ac:	9304      	str	r3, [sp, #16]
 80085ae:	2304      	movs	r3, #4
 80085b0:	9303      	str	r3, [sp, #12]
 80085b2:	2300      	movs	r3, #0
 80085b4:	9302      	str	r3, [sp, #8]
 80085b6:	2300      	movs	r3, #0
 80085b8:	9301      	str	r3, [sp, #4]
 80085ba:	231e      	movs	r3, #30
 80085bc:	9300      	str	r3, [sp, #0]
 80085be:	2324      	movs	r3, #36	@ 0x24
 80085c0:	225f      	movs	r2, #95	@ 0x5f
 80085c2:	490a      	ldr	r1, [pc, #40]	@ (80085ec <_Z23getFont_verdana_30_4bppv+0x98>)
 80085c4:	480a      	ldr	r0, [pc, #40]	@ (80085f0 <_Z23getFont_verdana_30_4bppv+0x9c>)
 80085c6:	f7ff fec1 	bl	800834c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80085ca:	480a      	ldr	r0, [pc, #40]	@ (80085f4 <_Z23getFont_verdana_30_4bppv+0xa0>)
 80085cc:	f01b fbee 	bl	8023dac <atexit>
 80085d0:	4803      	ldr	r0, [pc, #12]	@ (80085e0 <_Z23getFont_verdana_30_4bppv+0x8c>)
 80085d2:	f01b fb2c 	bl	8023c2e <__cxa_guard_release>
    return verdana_30_4bpp;
 80085d6:	4b06      	ldr	r3, [pc, #24]	@ (80085f0 <_Z23getFont_verdana_30_4bppv+0x9c>)
}
 80085d8:	4618      	mov	r0, r3
 80085da:	46bd      	mov	sp, r7
 80085dc:	bd80      	pop	{r7, pc}
 80085de:	bf00      	nop
 80085e0:	20000644 	.word	0x20000644
 80085e4:	0802dfdc 	.word	0x0802dfdc
 80085e8:	0802e288 	.word	0x0802e288
 80085ec:	0802daa4 	.word	0x0802daa4
 80085f0:	20000618 	.word	0x20000618
 80085f4:	08008545 	.word	0x08008545

080085f8 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 80085f8:	b480      	push	{r7}
 80085fa:	b083      	sub	sp, #12
 80085fc:	af00      	add	r7, sp, #0
 80085fe:	6078      	str	r0, [r7, #4]
 8008600:	6039      	str	r1, [r7, #0]
 8008602:	683b      	ldr	r3, [r7, #0]
 8008604:	4618      	mov	r0, r3
 8008606:	370c      	adds	r7, #12
 8008608:	46bd      	mov	sp, r7
 800860a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800860e:	4770      	bx	lr

08008610 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008610:	b480      	push	{r7}
 8008612:	b083      	sub	sp, #12
 8008614:	af00      	add	r7, sp, #0
 8008616:	6078      	str	r0, [r7, #4]
 8008618:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800861a:	bf00      	nop
 800861c:	370c      	adds	r7, #12
 800861e:	46bd      	mov	sp, r7
 8008620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008624:	4770      	bx	lr

08008626 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8008626:	b480      	push	{r7}
 8008628:	b083      	sub	sp, #12
 800862a:	af00      	add	r7, sp, #0
 800862c:	6078      	str	r0, [r7, #4]
 800862e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008630:	bf00      	nop
 8008632:	370c      	adds	r7, #12
 8008634:	46bd      	mov	sp, r7
 8008636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800863a:	4770      	bx	lr

0800863c <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800863c:	b480      	push	{r7}
 800863e:	b083      	sub	sp, #12
 8008640:	af00      	add	r7, sp, #0
 8008642:	6078      	str	r0, [r7, #4]
 8008644:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008646:	bf00      	nop
 8008648:	370c      	adds	r7, #12
 800864a:	46bd      	mov	sp, r7
 800864c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008650:	4770      	bx	lr

08008652 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 8008652:	b480      	push	{r7}
 8008654:	b083      	sub	sp, #12
 8008656:	af00      	add	r7, sp, #0
 8008658:	6078      	str	r0, [r7, #4]
 800865a:	460b      	mov	r3, r1
 800865c:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800865e:	bf00      	nop
 8008660:	370c      	adds	r7, #12
 8008662:	46bd      	mov	sp, r7
 8008664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008668:	4770      	bx	lr

0800866a <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800866a:	b480      	push	{r7}
 800866c:	b083      	sub	sp, #12
 800866e:	af00      	add	r7, sp, #0
 8008670:	6078      	str	r0, [r7, #4]
    {
    }
 8008672:	bf00      	nop
 8008674:	370c      	adds	r7, #12
 8008676:	46bd      	mov	sp, r7
 8008678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800867c:	4770      	bx	lr

0800867e <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800867e:	b480      	push	{r7}
 8008680:	b083      	sub	sp, #12
 8008682:	af00      	add	r7, sp, #0
 8008684:	6078      	str	r0, [r7, #4]
    {
    }
 8008686:	bf00      	nop
 8008688:	370c      	adds	r7, #12
 800868a:	46bd      	mov	sp, r7
 800868c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008690:	4770      	bx	lr
	...

08008694 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 8008694:	b480      	push	{r7}
 8008696:	b083      	sub	sp, #12
 8008698:	af00      	add	r7, sp, #0
 800869a:	6078      	str	r0, [r7, #4]
    {
 800869c:	4a04      	ldr	r2, [pc, #16]	@ (80086b0 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800869e:	687b      	ldr	r3, [r7, #4]
 80086a0:	601a      	str	r2, [r3, #0]
    }
 80086a2:	687b      	ldr	r3, [r7, #4]
 80086a4:	4618      	mov	r0, r3
 80086a6:	370c      	adds	r7, #12
 80086a8:	46bd      	mov	sp, r7
 80086aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086ae:	4770      	bx	lr
 80086b0:	080260e4 	.word	0x080260e4

080086b4 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 80086b4:	b580      	push	{r7, lr}
 80086b6:	b082      	sub	sp, #8
 80086b8:	af00      	add	r7, sp, #0
 80086ba:	6078      	str	r0, [r7, #4]
    }
 80086bc:	6878      	ldr	r0, [r7, #4]
 80086be:	f7ff ffe9 	bl	8008694 <_ZN8touchgfx15UIEventListenerD1Ev>
 80086c2:	2104      	movs	r1, #4
 80086c4:	6878      	ldr	r0, [r7, #4]
 80086c6:	f01b faa4 	bl	8023c12 <_ZdlPvj>
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	4618      	mov	r0, r3
 80086ce:	3708      	adds	r7, #8
 80086d0:	46bd      	mov	sp, r7
 80086d2:	bd80      	pop	{r7, pc}

080086d4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 80086d4:	b480      	push	{r7}
 80086d6:	b083      	sub	sp, #12
 80086d8:	af00      	add	r7, sp, #0
 80086da:	6078      	str	r0, [r7, #4]
    {
    }
 80086dc:	bf00      	nop
 80086de:	370c      	adds	r7, #12
 80086e0:	46bd      	mov	sp, r7
 80086e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086e6:	4770      	bx	lr

080086e8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 80086e8:	b480      	push	{r7}
 80086ea:	b083      	sub	sp, #12
 80086ec:	af00      	add	r7, sp, #0
 80086ee:	6078      	str	r0, [r7, #4]
 80086f0:	460b      	mov	r3, r1
 80086f2:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 80086f4:	bf00      	nop
 80086f6:	370c      	adds	r7, #12
 80086f8:	46bd      	mov	sp, r7
 80086fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086fe:	4770      	bx	lr

08008700 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8008700:	b480      	push	{r7}
 8008702:	b083      	sub	sp, #12
 8008704:	af00      	add	r7, sp, #0
 8008706:	6078      	str	r0, [r7, #4]
 8008708:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800870a:	687b      	ldr	r3, [r7, #4]
 800870c:	683a      	ldr	r2, [r7, #0]
 800870e:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 8008712:	6810      	ldr	r0, [r2, #0]
 8008714:	6851      	ldr	r1, [r2, #4]
 8008716:	c303      	stmia	r3!, {r0, r1}
    }
 8008718:	bf00      	nop
 800871a:	370c      	adds	r7, #12
 800871c:	46bd      	mov	sp, r7
 800871e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008722:	4770      	bx	lr

08008724 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 8008724:	b580      	push	{r7, lr}
 8008726:	b082      	sub	sp, #8
 8008728:	af00      	add	r7, sp, #0
 800872a:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800872c:	687b      	ldr	r3, [r7, #4]
 800872e:	3304      	adds	r3, #4
 8008730:	4618      	mov	r0, r3
 8008732:	f009 fd3a 	bl	80121aa <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 8008736:	bf00      	nop
 8008738:	3708      	adds	r7, #8
 800873a:	46bd      	mov	sp, r7
 800873c:	bd80      	pop	{r7, pc}
	...

08008740 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8008740:	b480      	push	{r7}
 8008742:	b083      	sub	sp, #12
 8008744:	af00      	add	r7, sp, #0
 8008746:	6078      	str	r0, [r7, #4]
    {
 8008748:	4a04      	ldr	r2, [pc, #16]	@ (800875c <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	601a      	str	r2, [r3, #0]
    }
 800874e:	687b      	ldr	r3, [r7, #4]
 8008750:	4618      	mov	r0, r3
 8008752:	370c      	adds	r7, #12
 8008754:	46bd      	mov	sp, r7
 8008756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800875a:	4770      	bx	lr
 800875c:	080260cc 	.word	0x080260cc

08008760 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8008760:	b580      	push	{r7, lr}
 8008762:	b082      	sub	sp, #8
 8008764:	af00      	add	r7, sp, #0
 8008766:	6078      	str	r0, [r7, #4]
    }
 8008768:	6878      	ldr	r0, [r7, #4]
 800876a:	f7ff ffe9 	bl	8008740 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800876e:	2104      	movs	r1, #4
 8008770:	6878      	ldr	r0, [r7, #4]
 8008772:	f01b fa4e 	bl	8023c12 <_ZdlPvj>
 8008776:	687b      	ldr	r3, [r7, #4]
 8008778:	4618      	mov	r0, r3
 800877a:	3708      	adds	r7, #8
 800877c:	46bd      	mov	sp, r7
 800877e:	bd80      	pop	{r7, pc}

08008780 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8008780:	b480      	push	{r7}
 8008782:	af00      	add	r7, sp, #0
    {
        return instance;
 8008784:	4b03      	ldr	r3, [pc, #12]	@ (8008794 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 8008786:	681b      	ldr	r3, [r3, #0]
    }
 8008788:	4618      	mov	r0, r3
 800878a:	46bd      	mov	sp, r7
 800878c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008790:	4770      	bx	lr
 8008792:	bf00      	nop
 8008794:	20002f34 	.word	0x20002f34

08008798 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 8008798:	b480      	push	{r7}
 800879a:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800879c:	4b0b      	ldr	r3, [pc, #44]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800879e:	681b      	ldr	r3, [r3, #0]
 80087a0:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80087a4:	2b00      	cmp	r3, #0
 80087a6:	d008      	beq.n	80087ba <_ZN8touchgfx3HAL3lcdEv+0x22>
 80087a8:	4b08      	ldr	r3, [pc, #32]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087aa:	681b      	ldr	r3, [r3, #0]
 80087ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80087ae:	2b00      	cmp	r3, #0
 80087b0:	d003      	beq.n	80087ba <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80087b2:	4b06      	ldr	r3, [pc, #24]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087b4:	681b      	ldr	r3, [r3, #0]
 80087b6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80087b8:	e002      	b.n	80087c0 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 80087ba:	4b04      	ldr	r3, [pc, #16]	@ (80087cc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087bc:	681b      	ldr	r3, [r3, #0]
 80087be:	689b      	ldr	r3, [r3, #8]
    }
 80087c0:	4618      	mov	r0, r3
 80087c2:	46bd      	mov	sp, r7
 80087c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087c8:	4770      	bx	lr
 80087ca:	bf00      	nop
 80087cc:	20002f34 	.word	0x20002f34

080087d0 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 80087d0:	b480      	push	{r7}
 80087d2:	b083      	sub	sp, #12
 80087d4:	af00      	add	r7, sp, #0
 80087d6:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 80087d8:	4a07      	ldr	r2, [pc, #28]	@ (80087f8 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80087da:	687b      	ldr	r3, [r7, #4]
 80087dc:	601a      	str	r2, [r3, #0]
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	2200      	movs	r2, #0
 80087e2:	605a      	str	r2, [r3, #4]
 80087e4:	687b      	ldr	r3, [r7, #4]
 80087e6:	2200      	movs	r2, #0
 80087e8:	721a      	strb	r2, [r3, #8]
    {
    }
 80087ea:	687b      	ldr	r3, [r7, #4]
 80087ec:	4618      	mov	r0, r3
 80087ee:	370c      	adds	r7, #12
 80087f0:	46bd      	mov	sp, r7
 80087f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f6:	4770      	bx	lr
 80087f8:	080260a8 	.word	0x080260a8

080087fc <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 80087fc:	b480      	push	{r7}
 80087fe:	b083      	sub	sp, #12
 8008800:	af00      	add	r7, sp, #0
 8008802:	6078      	str	r0, [r7, #4]
    {
 8008804:	4a04      	ldr	r2, [pc, #16]	@ (8008818 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 8008806:	687b      	ldr	r3, [r7, #4]
 8008808:	601a      	str	r2, [r3, #0]
    }
 800880a:	687b      	ldr	r3, [r7, #4]
 800880c:	4618      	mov	r0, r3
 800880e:	370c      	adds	r7, #12
 8008810:	46bd      	mov	sp, r7
 8008812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008816:	4770      	bx	lr
 8008818:	080260a8 	.word	0x080260a8

0800881c <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800881c:	b580      	push	{r7, lr}
 800881e:	b082      	sub	sp, #8
 8008820:	af00      	add	r7, sp, #0
 8008822:	6078      	str	r0, [r7, #4]
    }
 8008824:	6878      	ldr	r0, [r7, #4]
 8008826:	f7ff ffe9 	bl	80087fc <_ZN8touchgfx10TransitionD1Ev>
 800882a:	210c      	movs	r1, #12
 800882c:	6878      	ldr	r0, [r7, #4]
 800882e:	f01b f9f0 	bl	8023c12 <_ZdlPvj>
 8008832:	687b      	ldr	r3, [r7, #4]
 8008834:	4618      	mov	r0, r3
 8008836:	3708      	adds	r7, #8
 8008838:	46bd      	mov	sp, r7
 800883a:	bd80      	pop	{r7, pc}

0800883c <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800883c:	b480      	push	{r7}
 800883e:	b083      	sub	sp, #12
 8008840:	af00      	add	r7, sp, #0
 8008842:	6078      	str	r0, [r7, #4]
    {
    }
 8008844:	bf00      	nop
 8008846:	370c      	adds	r7, #12
 8008848:	46bd      	mov	sp, r7
 800884a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800884e:	4770      	bx	lr

08008850 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 8008850:	b480      	push	{r7}
 8008852:	b083      	sub	sp, #12
 8008854:	af00      	add	r7, sp, #0
 8008856:	6078      	str	r0, [r7, #4]
    {
    }
 8008858:	bf00      	nop
 800885a:	370c      	adds	r7, #12
 800885c:	46bd      	mov	sp, r7
 800885e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008862:	4770      	bx	lr

08008864 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 8008864:	b480      	push	{r7}
 8008866:	b083      	sub	sp, #12
 8008868:	af00      	add	r7, sp, #0
 800886a:	6078      	str	r0, [r7, #4]
    {
    }
 800886c:	bf00      	nop
 800886e:	370c      	adds	r7, #12
 8008870:	46bd      	mov	sp, r7
 8008872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008876:	4770      	bx	lr

08008878 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8008878:	b580      	push	{r7, lr}
 800887a:	b082      	sub	sp, #8
 800887c:	af00      	add	r7, sp, #0
 800887e:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 8008880:	f009 fc6e 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 8008884:	4603      	mov	r3, r0
 8008886:	681a      	ldr	r2, [r3, #0]
 8008888:	323c      	adds	r2, #60	@ 0x3c
 800888a:	6812      	ldr	r2, [r2, #0]
 800888c:	4618      	mov	r0, r3
 800888e:	4790      	blx	r2
    }
 8008890:	bf00      	nop
 8008892:	3708      	adds	r7, #8
 8008894:	46bd      	mov	sp, r7
 8008896:	bd80      	pop	{r7, pc}

08008898 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8008898:	b480      	push	{r7}
 800889a:	b083      	sub	sp, #12
 800889c:	af00      	add	r7, sp, #0
 800889e:	6078      	str	r0, [r7, #4]
 80088a0:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	683a      	ldr	r2, [r7, #0]
 80088a6:	605a      	str	r2, [r3, #4]
    }
 80088a8:	bf00      	nop
 80088aa:	370c      	adds	r7, #12
 80088ac:	46bd      	mov	sp, r7
 80088ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b2:	4770      	bx	lr

080088b4 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80088b4:	b580      	push	{r7, lr}
 80088b6:	b082      	sub	sp, #8
 80088b8:	af00      	add	r7, sp, #0
 80088ba:	6078      	str	r0, [r7, #4]
 80088bc:	4a05      	ldr	r2, [pc, #20]	@ (80088d4 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80088be:	687b      	ldr	r3, [r7, #4]
 80088c0:	601a      	str	r2, [r3, #0]
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	4618      	mov	r0, r3
 80088c6:	f7ff fee5 	bl	8008694 <_ZN8touchgfx15UIEventListenerD1Ev>
 80088ca:	687b      	ldr	r3, [r7, #4]
 80088cc:	4618      	mov	r0, r3
 80088ce:	3708      	adds	r7, #8
 80088d0:	46bd      	mov	sp, r7
 80088d2:	bd80      	pop	{r7, pc}
 80088d4:	0802714c 	.word	0x0802714c

080088d8 <_ZN8touchgfx11ApplicationD0Ev>:
 80088d8:	b580      	push	{r7, lr}
 80088da:	b082      	sub	sp, #8
 80088dc:	af00      	add	r7, sp, #0
 80088de:	6078      	str	r0, [r7, #4]
 80088e0:	6878      	ldr	r0, [r7, #4]
 80088e2:	f7ff ffe7 	bl	80088b4 <_ZN8touchgfx11ApplicationD1Ev>
 80088e6:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 80088ea:	6878      	ldr	r0, [r7, #4]
 80088ec:	f01b f991 	bl	8023c12 <_ZdlPvj>
 80088f0:	687b      	ldr	r3, [r7, #4]
 80088f2:	4618      	mov	r0, r3
 80088f4:	3708      	adds	r7, #8
 80088f6:	46bd      	mov	sp, r7
 80088f8:	bd80      	pop	{r7, pc}
	...

080088fc <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 80088fc:	b580      	push	{r7, lr}
 80088fe:	b082      	sub	sp, #8
 8008900:	af00      	add	r7, sp, #0
 8008902:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 8008904:	687b      	ldr	r3, [r7, #4]
 8008906:	4618      	mov	r0, r3
 8008908:	f009 fcec 	bl	80122e4 <_ZN8touchgfx11ApplicationC1Ev>
 800890c:	4a09      	ldr	r2, [pc, #36]	@ (8008934 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800890e:	687b      	ldr	r3, [r7, #4]
 8008910:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 8008912:	687b      	ldr	r3, [r7, #4]
 8008914:	2200      	movs	r2, #0
 8008916:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	2200      	movs	r2, #0
 800891e:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 8008922:	687b      	ldr	r3, [r7, #4]
 8008924:	4a04      	ldr	r2, [pc, #16]	@ (8008938 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8008926:	6013      	str	r3, [r2, #0]
    }
 8008928:	687b      	ldr	r3, [r7, #4]
 800892a:	4618      	mov	r0, r3
 800892c:	3708      	adds	r7, #8
 800892e:	46bd      	mov	sp, r7
 8008930:	bd80      	pop	{r7, pc}
 8008932:	bf00      	nop
 8008934:	08026054 	.word	0x08026054
 8008938:	20002f80 	.word	0x20002f80

0800893c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800893c:	b580      	push	{r7, lr}
 800893e:	b082      	sub	sp, #8
 8008940:	af00      	add	r7, sp, #0
 8008942:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8008944:	6878      	ldr	r0, [r7, #4]
 8008946:	f000 f804 	bl	8008952 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800894a:	bf00      	nop
 800894c:	3708      	adds	r7, #8
 800894e:	46bd      	mov	sp, r7
 8008950:	bd80      	pop	{r7, pc}

08008952 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8008952:	b580      	push	{r7, lr}
 8008954:	b082      	sub	sp, #8
 8008956:	af00      	add	r7, sp, #0
 8008958:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800895a:	687b      	ldr	r3, [r7, #4]
 800895c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008960:	2b00      	cmp	r3, #0
 8008962:	d00f      	beq.n	8008984 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800896a:	687b      	ldr	r3, [r7, #4]
 800896c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	330c      	adds	r3, #12
 8008974:	681b      	ldr	r3, [r3, #0]
 8008976:	4610      	mov	r0, r2
 8008978:	4798      	blx	r3
 800897a:	4603      	mov	r3, r0
 800897c:	2b00      	cmp	r3, #0
 800897e:	d001      	beq.n	8008984 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008980:	2301      	movs	r3, #1
 8008982:	e000      	b.n	8008986 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8008984:	2300      	movs	r3, #0
 8008986:	2b00      	cmp	r3, #0
 8008988:	d00e      	beq.n	80089a8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800898a:	687b      	ldr	r3, [r7, #4]
 800898c:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008990:	687b      	ldr	r3, [r7, #4]
 8008992:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008996:	681b      	ldr	r3, [r3, #0]
 8008998:	3308      	adds	r3, #8
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	4610      	mov	r0, r2
 800899e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80089a0:	687b      	ldr	r3, [r7, #4]
 80089a2:	2200      	movs	r2, #0
 80089a4:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 80089a8:	bf00      	nop
 80089aa:	3708      	adds	r7, #8
 80089ac:	46bd      	mov	sp, r7
 80089ae:	bd80      	pop	{r7, pc}

080089b0 <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 80089b0:	b480      	push	{r7}
 80089b2:	b083      	sub	sp, #12
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	6078      	str	r0, [r7, #4]
 80089b8:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	683a      	ldr	r2, [r7, #0]
 80089be:	601a      	str	r2, [r3, #0]
    }
 80089c0:	bf00      	nop
 80089c2:	370c      	adds	r7, #12
 80089c4:	46bd      	mov	sp, r7
 80089c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089ca:	4770      	bx	lr

080089cc <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 80089cc:	b580      	push	{r7, lr}
 80089ce:	b082      	sub	sp, #8
 80089d0:	af00      	add	r7, sp, #0
 80089d2:	6078      	str	r0, [r7, #4]
 80089d4:	4a05      	ldr	r2, [pc, #20]	@ (80089ec <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 80089d6:	687b      	ldr	r3, [r7, #4]
 80089d8:	601a      	str	r2, [r3, #0]
 80089da:	687b      	ldr	r3, [r7, #4]
 80089dc:	4618      	mov	r0, r3
 80089de:	f7ff ff69 	bl	80088b4 <_ZN8touchgfx11ApplicationD1Ev>
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	4618      	mov	r0, r3
 80089e6:	3708      	adds	r7, #8
 80089e8:	46bd      	mov	sp, r7
 80089ea:	bd80      	pop	{r7, pc}
 80089ec:	08026054 	.word	0x08026054

080089f0 <_ZN8touchgfx14MVPApplicationD0Ev>:
 80089f0:	b580      	push	{r7, lr}
 80089f2:	b082      	sub	sp, #8
 80089f4:	af00      	add	r7, sp, #0
 80089f6:	6078      	str	r0, [r7, #4]
 80089f8:	6878      	ldr	r0, [r7, #4]
 80089fa:	f7ff ffe7 	bl	80089cc <_ZN8touchgfx14MVPApplicationD1Ev>
 80089fe:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8008a02:	6878      	ldr	r0, [r7, #4]
 8008a04:	f01b f905 	bl	8023c12 <_ZdlPvj>
 8008a08:	687b      	ldr	r3, [r7, #4]
 8008a0a:	4618      	mov	r0, r3
 8008a0c:	3708      	adds	r7, #8
 8008a0e:	46bd      	mov	sp, r7
 8008a10:	bd80      	pop	{r7, pc}
	...

08008a14 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8008a14:	b580      	push	{r7, lr}
 8008a16:	b082      	sub	sp, #8
 8008a18:	af00      	add	r7, sp, #0
 8008a1a:	6078      	str	r0, [r7, #4]
 8008a1c:	4a08      	ldr	r2, [pc, #32]	@ (8008a40 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	601a      	str	r2, [r3, #0]
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008a28:	4618      	mov	r0, r3
 8008a2a:	f000 fc67 	bl	80092fc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008a2e:	687b      	ldr	r3, [r7, #4]
 8008a30:	4618      	mov	r0, r3
 8008a32:	f7ff ffcb 	bl	80089cc <_ZN8touchgfx14MVPApplicationD1Ev>
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	4618      	mov	r0, r3
 8008a3a:	3708      	adds	r7, #8
 8008a3c:	46bd      	mov	sp, r7
 8008a3e:	bd80      	pop	{r7, pc}
 8008a40:	08025fe8 	.word	0x08025fe8

08008a44 <_ZN23FrontendApplicationBaseD0Ev>:
 8008a44:	b580      	push	{r7, lr}
 8008a46:	b082      	sub	sp, #8
 8008a48:	af00      	add	r7, sp, #0
 8008a4a:	6078      	str	r0, [r7, #4]
 8008a4c:	6878      	ldr	r0, [r7, #4]
 8008a4e:	f7ff ffe1 	bl	8008a14 <_ZN23FrontendApplicationBaseD1Ev>
 8008a52:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8008a56:	6878      	ldr	r0, [r7, #4]
 8008a58:	f01b f8db 	bl	8023c12 <_ZdlPvj>
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	4618      	mov	r0, r3
 8008a60:	3708      	adds	r7, #8
 8008a62:	46bd      	mov	sp, r7
 8008a64:	bd80      	pop	{r7, pc}

08008a66 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8008a66:	b580      	push	{r7, lr}
 8008a68:	b082      	sub	sp, #8
 8008a6a:	af00      	add	r7, sp, #0
 8008a6c:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 8008a6e:	6878      	ldr	r0, [r7, #4]
 8008a70:	f000 f8ce 	bl	8008c10 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 8008a74:	bf00      	nop
 8008a76:	3708      	adds	r7, #8
 8008a78:	46bd      	mov	sp, r7
 8008a7a:	bd80      	pop	{r7, pc}

08008a7c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8008a7c:	b480      	push	{r7}
 8008a7e:	b083      	sub	sp, #12
 8008a80:	af00      	add	r7, sp, #0
 8008a82:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008a84:	687b      	ldr	r3, [r7, #4]
 8008a86:	2201      	movs	r2, #1
 8008a88:	721a      	strb	r2, [r3, #8]
    }
 8008a8a:	bf00      	nop
 8008a8c:	370c      	adds	r7, #12
 8008a8e:	46bd      	mov	sp, r7
 8008a90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a94:	4770      	bx	lr

08008a96 <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 8008a96:	b480      	push	{r7}
 8008a98:	b083      	sub	sp, #12
 8008a9a:	af00      	add	r7, sp, #0
 8008a9c:	6078      	str	r0, [r7, #4]
 8008a9e:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	683a      	ldr	r2, [r7, #0]
 8008aa4:	605a      	str	r2, [r3, #4]
    }
 8008aa6:	bf00      	nop
 8008aa8:	370c      	adds	r7, #12
 8008aaa:	46bd      	mov	sp, r7
 8008aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ab0:	4770      	bx	lr
	...

08008ab4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008ab4:	b580      	push	{r7, lr}
 8008ab6:	b084      	sub	sp, #16
 8008ab8:	af00      	add	r7, sp, #0
 8008aba:	60f8      	str	r0, [r7, #12]
 8008abc:	60b9      	str	r1, [r7, #8]
 8008abe:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008ac0:	68fb      	ldr	r3, [r7, #12]
 8008ac2:	4618      	mov	r0, r3
 8008ac4:	f7ff ff1a 	bl	80088fc <_ZN8touchgfx14MVPApplicationC1Ev>
 8008ac8:	4a19      	ldr	r2, [pc, #100]	@ (8008b30 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 8008aca:	68fb      	ldr	r3, [r7, #12]
 8008acc:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 8008ace:	68fb      	ldr	r3, [r7, #12]
 8008ad0:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008ad4:	4618      	mov	r0, r3
 8008ad6:	f000 f8f1 	bl	8008cbc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 8008ada:	68fb      	ldr	r3, [r7, #12]
 8008adc:	687a      	ldr	r2, [r7, #4]
 8008ade:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 8008ae2:	68fb      	ldr	r3, [r7, #12]
 8008ae4:	68ba      	ldr	r2, [r7, #8]
 8008ae6:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8008aea:	f7ff fe49 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 8008aee:	4603      	mov	r3, r0
 8008af0:	681a      	ldr	r2, [r3, #0]
 8008af2:	3208      	adds	r2, #8
 8008af4:	6812      	ldr	r2, [r2, #0]
 8008af6:	2100      	movs	r1, #0
 8008af8:	4618      	mov	r0, r3
 8008afa:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008afc:	2000      	movs	r0, #0
 8008afe:	f003 fa01 	bl	800bf04 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008b02:	f7ff fe49 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 8008b06:	4603      	mov	r3, r0
 8008b08:	4618      	mov	r0, r3
 8008b0a:	f013 fcea 	bl	801c4e2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8008b0e:	f7ff fe43 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 8008b12:	4603      	mov	r3, r0
 8008b14:	4618      	mov	r0, r3
 8008b16:	f013 fd5f 	bl	801c5d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8008b1a:	f7ff fe3d 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 8008b1e:	4603      	mov	r3, r0
 8008b20:	4618      	mov	r0, r3
 8008b22:	f013 fd65 	bl	801c5f0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8008b26:	68fb      	ldr	r3, [r7, #12]
 8008b28:	4618      	mov	r0, r3
 8008b2a:	3710      	adds	r7, #16
 8008b2c:	46bd      	mov	sp, r7
 8008b2e:	bd80      	pop	{r7, pc}
 8008b30:	08025fe8 	.word	0x08025fe8

08008b34 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008b34:	b480      	push	{r7}
 8008b36:	b083      	sub	sp, #12
 8008b38:	af00      	add	r7, sp, #0
 8008b3a:	6078      	str	r0, [r7, #4]
 8008b3c:	6039      	str	r1, [r7, #0]
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	4618      	mov	r0, r3
 8008b42:	370c      	adds	r7, #12
 8008b44:	46bd      	mov	sp, r7
 8008b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b4a:	4770      	bx	lr

08008b4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008b4c:	b580      	push	{r7, lr}
 8008b4e:	b082      	sub	sp, #8
 8008b50:	af00      	add	r7, sp, #0
 8008b52:	6078      	str	r0, [r7, #4]
 8008b54:	6039      	str	r1, [r7, #0]
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	683a      	ldr	r2, [r7, #0]
 8008b5a:	4611      	mov	r1, r2
 8008b5c:	4618      	mov	r0, r3
 8008b5e:	f7ff ffe9 	bl	8008b34 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008b62:	683b      	ldr	r3, [r7, #0]
 8008b64:	685a      	ldr	r2, [r3, #4]
 8008b66:	687b      	ldr	r3, [r7, #4]
 8008b68:	605a      	str	r2, [r3, #4]
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	683a      	ldr	r2, [r7, #0]
 8008b6e:	3308      	adds	r3, #8
 8008b70:	3208      	adds	r2, #8
 8008b72:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008b76:	e883 0003 	stmia.w	r3, {r0, r1}
 8008b7a:	687b      	ldr	r3, [r7, #4]
 8008b7c:	4618      	mov	r0, r3
 8008b7e:	3708      	adds	r7, #8
 8008b80:	46bd      	mov	sp, r7
 8008b82:	bd80      	pop	{r7, pc}

08008b84 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>:
 */

// humidity_screen

void FrontendApplicationBase::gotohumidity_screenScreenNoTransition()
{
 8008b84:	b590      	push	{r4, r7, lr}
 8008b86:	b089      	sub	sp, #36	@ 0x24
 8008b88:	af00      	add	r7, sp, #0
 8008b8a:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl);
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008b92:	4b10      	ldr	r3, [pc, #64]	@ (8008bd4 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv+0x50>)
 8008b94:	61bb      	str	r3, [r7, #24]
 8008b96:	2300      	movs	r3, #0
 8008b98:	61fb      	str	r3, [r7, #28]
 8008b9a:	f107 0008 	add.w	r0, r7, #8
 8008b9e:	f107 0318 	add.w	r3, r7, #24
 8008ba2:	cb0c      	ldmia	r3, {r2, r3}
 8008ba4:	6879      	ldr	r1, [r7, #4]
 8008ba6:	f000 f8a5 	bl	8008cf4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008baa:	f107 0308 	add.w	r3, r7, #8
 8008bae:	4619      	mov	r1, r3
 8008bb0:	4620      	mov	r0, r4
 8008bb2:	f7ff ffcb 	bl	8008b4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008bb6:	f107 0308 	add.w	r3, r7, #8
 8008bba:	4618      	mov	r0, r3
 8008bbc:	f000 fb9e 	bl	80092fc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008bc0:	687b      	ldr	r3, [r7, #4]
 8008bc2:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008bcc:	bf00      	nop
 8008bce:	3724      	adds	r7, #36	@ 0x24
 8008bd0:	46bd      	mov	sp, r7
 8008bd2:	bd90      	pop	{r4, r7, pc}
 8008bd4:	08008bd9 	.word	0x08008bd9

08008bd8 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl()
{
 8008bd8:	b580      	push	{r7, lr}
 8008bda:	b084      	sub	sp, #16
 8008bdc:	af02      	add	r7, sp, #8
 8008bde:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<humidity_screenView, humidity_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008be0:	687b      	ldr	r3, [r7, #4]
 8008be2:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008be6:	687b      	ldr	r3, [r7, #4]
 8008be8:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008bec:	461a      	mov	r2, r3
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008bf4:	9300      	str	r3, [sp, #0]
 8008bf6:	4b04      	ldr	r3, [pc, #16]	@ (8008c08 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x30>)
 8008bf8:	4804      	ldr	r0, [pc, #16]	@ (8008c0c <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x34>)
 8008bfa:	f000 f8ad 	bl	8008d58 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008bfe:	bf00      	nop
 8008c00:	3708      	adds	r7, #8
 8008c02:	46bd      	mov	sp, r7
 8008c04:	bd80      	pop	{r7, pc}
 8008c06:	bf00      	nop
 8008c08:	20002f74 	.word	0x20002f74
 8008c0c:	20002f70 	.word	0x20002f70

08008c10 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 8008c10:	b590      	push	{r4, r7, lr}
 8008c12:	b089      	sub	sp, #36	@ 0x24
 8008c14:	af00      	add	r7, sp, #0
 8008c16:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 8008c18:	687b      	ldr	r3, [r7, #4]
 8008c1a:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008c1e:	4b10      	ldr	r3, [pc, #64]	@ (8008c60 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 8008c20:	61bb      	str	r3, [r7, #24]
 8008c22:	2300      	movs	r3, #0
 8008c24:	61fb      	str	r3, [r7, #28]
 8008c26:	f107 0008 	add.w	r0, r7, #8
 8008c2a:	f107 0318 	add.w	r3, r7, #24
 8008c2e:	cb0c      	ldmia	r3, {r2, r3}
 8008c30:	6879      	ldr	r1, [r7, #4]
 8008c32:	f000 f85f 	bl	8008cf4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008c36:	f107 0308 	add.w	r3, r7, #8
 8008c3a:	4619      	mov	r1, r3
 8008c3c:	4620      	mov	r0, r4
 8008c3e:	f7ff ff85 	bl	8008b4c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008c42:	f107 0308 	add.w	r3, r7, #8
 8008c46:	4618      	mov	r0, r3
 8008c48:	f000 fb58 	bl	80092fc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008c58:	bf00      	nop
 8008c5a:	3724      	adds	r7, #36	@ 0x24
 8008c5c:	46bd      	mov	sp, r7
 8008c5e:	bd90      	pop	{r4, r7, pc}
 8008c60:	08008c65 	.word	0x08008c65

08008c64 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8008c64:	b580      	push	{r7, lr}
 8008c66:	b084      	sub	sp, #16
 8008c68:	af02      	add	r7, sp, #8
 8008c6a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008c72:	687b      	ldr	r3, [r7, #4]
 8008c74:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008c78:	461a      	mov	r2, r3
 8008c7a:	687b      	ldr	r3, [r7, #4]
 8008c7c:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008c80:	9300      	str	r3, [sp, #0]
 8008c82:	4b04      	ldr	r3, [pc, #16]	@ (8008c94 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 8008c84:	4804      	ldr	r0, [pc, #16]	@ (8008c98 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 8008c86:	f000 f981 	bl	8008f8c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008c8a:	bf00      	nop
 8008c8c:	3708      	adds	r7, #8
 8008c8e:	46bd      	mov	sp, r7
 8008c90:	bd80      	pop	{r7, pc}
 8008c92:	bf00      	nop
 8008c94:	20002f74 	.word	0x20002f74
 8008c98:	20002f70 	.word	0x20002f70

08008c9c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008c9c:	b480      	push	{r7}
 8008c9e:	b083      	sub	sp, #12
 8008ca0:	af00      	add	r7, sp, #0
 8008ca2:	6078      	str	r0, [r7, #4]
 8008ca4:	4a04      	ldr	r2, [pc, #16]	@ (8008cb8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008ca6:	687b      	ldr	r3, [r7, #4]
 8008ca8:	601a      	str	r2, [r3, #0]
 8008caa:	687b      	ldr	r3, [r7, #4]
 8008cac:	4618      	mov	r0, r3
 8008cae:	370c      	adds	r7, #12
 8008cb0:	46bd      	mov	sp, r7
 8008cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cb6:	4770      	bx	lr
 8008cb8:	080260cc 	.word	0x080260cc

08008cbc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8008cbc:	b580      	push	{r7, lr}
 8008cbe:	b082      	sub	sp, #8
 8008cc0:	af00      	add	r7, sp, #0
 8008cc2:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	4618      	mov	r0, r3
 8008cc8:	f7ff ffe8 	bl	8008c9c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008ccc:	4a08      	ldr	r2, [pc, #32]	@ (8008cf0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	601a      	str	r2, [r3, #0]
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	2200      	movs	r2, #0
 8008cd6:	605a      	str	r2, [r3, #4]
 8008cd8:	687b      	ldr	r3, [r7, #4]
 8008cda:	2200      	movs	r2, #0
 8008cdc:	609a      	str	r2, [r3, #8]
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	2200      	movs	r2, #0
 8008ce2:	60da      	str	r2, [r3, #12]
    {
    }
 8008ce4:	687b      	ldr	r3, [r7, #4]
 8008ce6:	4618      	mov	r0, r3
 8008ce8:	3708      	adds	r7, #8
 8008cea:	46bd      	mov	sp, r7
 8008cec:	bd80      	pop	{r7, pc}
 8008cee:	bf00      	nop
 8008cf0:	0802603c 	.word	0x0802603c

08008cf4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8008cf4:	b580      	push	{r7, lr}
 8008cf6:	b084      	sub	sp, #16
 8008cf8:	af00      	add	r7, sp, #0
 8008cfa:	60f8      	str	r0, [r7, #12]
 8008cfc:	60b9      	str	r1, [r7, #8]
 8008cfe:	4639      	mov	r1, r7
 8008d00:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8008d04:	68fb      	ldr	r3, [r7, #12]
 8008d06:	4618      	mov	r0, r3
 8008d08:	f7ff ffc8 	bl	8008c9c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008d0c:	4a08      	ldr	r2, [pc, #32]	@ (8008d30 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008d0e:	68fb      	ldr	r3, [r7, #12]
 8008d10:	601a      	str	r2, [r3, #0]
 8008d12:	68fb      	ldr	r3, [r7, #12]
 8008d14:	68ba      	ldr	r2, [r7, #8]
 8008d16:	605a      	str	r2, [r3, #4]
 8008d18:	68fb      	ldr	r3, [r7, #12]
 8008d1a:	3308      	adds	r3, #8
 8008d1c:	463a      	mov	r2, r7
 8008d1e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008d22:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8008d26:	68fb      	ldr	r3, [r7, #12]
 8008d28:	4618      	mov	r0, r3
 8008d2a:	3710      	adds	r7, #16
 8008d2c:	46bd      	mov	sp, r7
 8008d2e:	bd80      	pop	{r7, pc}
 8008d30:	0802603c 	.word	0x0802603c

08008d34 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008d34:	b580      	push	{r7, lr}
 8008d36:	b082      	sub	sp, #8
 8008d38:	af00      	add	r7, sp, #0
 8008d3a:	6078      	str	r0, [r7, #4]
 8008d3c:	687b      	ldr	r3, [r7, #4]
 8008d3e:	4618      	mov	r0, r3
 8008d40:	f7ff fd46 	bl	80087d0 <_ZN8touchgfx10TransitionC1Ev>
 8008d44:	4a03      	ldr	r2, [pc, #12]	@ (8008d54 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	601a      	str	r2, [r3, #0]
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	4618      	mov	r0, r3
 8008d4e:	3708      	adds	r7, #8
 8008d50:	46bd      	mov	sp, r7
 8008d52:	bd80      	pop	{r7, pc}
 8008d54:	08025fc4 	.word	0x08025fc4

08008d58 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008d58:	b590      	push	{r4, r7, lr}
 8008d5a:	b08f      	sub	sp, #60	@ 0x3c
 8008d5c:	af00      	add	r7, sp, #0
 8008d5e:	60f8      	str	r0, [r7, #12]
 8008d60:	60b9      	str	r1, [r7, #8]
 8008d62:	607a      	str	r2, [r7, #4]
 8008d64:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	689a      	ldr	r2, [r3, #8]
 8008d6a:	687b      	ldr	r3, [r7, #4]
 8008d6c:	689b      	ldr	r3, [r3, #8]
 8008d6e:	681b      	ldr	r3, [r3, #0]
 8008d70:	3320      	adds	r3, #32
 8008d72:	681b      	ldr	r3, [r3, #0]
 8008d74:	4610      	mov	r0, r2
 8008d76:	4798      	blx	r3
 8008d78:	4603      	mov	r3, r0
 8008d7a:	f5b3 7ffe 	cmp.w	r3, #508	@ 0x1fc
 8008d7e:	d205      	bcs.n	8008d8c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008d80:	4b7d      	ldr	r3, [pc, #500]	@ (8008f78 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008d82:	4a7e      	ldr	r2, [pc, #504]	@ (8008f7c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008d84:	21a3      	movs	r1, #163	@ 0xa3
 8008d86:	487e      	ldr	r0, [pc, #504]	@ (8008f80 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008d88:	f01a fff2 	bl	8023d70 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008d8c:	687b      	ldr	r3, [r7, #4]
 8008d8e:	685a      	ldr	r2, [r3, #4]
 8008d90:	687b      	ldr	r3, [r7, #4]
 8008d92:	685b      	ldr	r3, [r3, #4]
 8008d94:	681b      	ldr	r3, [r3, #0]
 8008d96:	3320      	adds	r3, #32
 8008d98:	681b      	ldr	r3, [r3, #0]
 8008d9a:	4610      	mov	r0, r2
 8008d9c:	4798      	blx	r3
 8008d9e:	4603      	mov	r3, r0
 8008da0:	2b0f      	cmp	r3, #15
 8008da2:	d805      	bhi.n	8008db0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008da4:	4b77      	ldr	r3, [pc, #476]	@ (8008f84 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008da6:	4a75      	ldr	r2, [pc, #468]	@ (8008f7c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008da8:	21a4      	movs	r1, #164	@ 0xa4
 8008daa:	4875      	ldr	r0, [pc, #468]	@ (8008f80 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008dac:	f01a ffe0 	bl	8023d70 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008db0:	687b      	ldr	r3, [r7, #4]
 8008db2:	68da      	ldr	r2, [r3, #12]
 8008db4:	687b      	ldr	r3, [r7, #4]
 8008db6:	68db      	ldr	r3, [r3, #12]
 8008db8:	681b      	ldr	r3, [r3, #0]
 8008dba:	3320      	adds	r3, #32
 8008dbc:	681b      	ldr	r3, [r3, #0]
 8008dbe:	4610      	mov	r0, r2
 8008dc0:	4798      	blx	r3
 8008dc2:	4603      	mov	r3, r0
 8008dc4:	2b0b      	cmp	r3, #11
 8008dc6:	d805      	bhi.n	8008dd4 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008dc8:	4b6f      	ldr	r3, [pc, #444]	@ (8008f88 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008dca:	4a6c      	ldr	r2, [pc, #432]	@ (8008f7c <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008dcc:	21a5      	movs	r1, #165	@ 0xa5
 8008dce:	486c      	ldr	r0, [pc, #432]	@ (8008f80 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008dd0:	f01a ffce 	bl	8023d70 <__assert_func>
 8008dd4:	68fb      	ldr	r3, [r7, #12]
 8008dd6:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008dd8:	68bb      	ldr	r3, [r7, #8]
 8008dda:	627b      	str	r3, [r7, #36]	@ 0x24
 8008ddc:	683b      	ldr	r3, [r7, #0]
 8008dde:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008de0:	f009 f9be 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 8008de4:	4603      	mov	r3, r0
 8008de6:	4618      	mov	r0, r3
 8008de8:	f7ff fc9c 	bl	8008724 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008dec:	6a3b      	ldr	r3, [r7, #32]
 8008dee:	681b      	ldr	r3, [r3, #0]
 8008df0:	2b00      	cmp	r3, #0
 8008df2:	d008      	beq.n	8008e06 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008df4:	6a3b      	ldr	r3, [r7, #32]
 8008df6:	681a      	ldr	r2, [r3, #0]
 8008df8:	6a3b      	ldr	r3, [r7, #32]
 8008dfa:	681b      	ldr	r3, [r3, #0]
 8008dfc:	681b      	ldr	r3, [r3, #0]
 8008dfe:	330c      	adds	r3, #12
 8008e00:	681b      	ldr	r3, [r3, #0]
 8008e02:	4610      	mov	r0, r2
 8008e04:	4798      	blx	r3
    if (*currentTrans)
 8008e06:	6a3b      	ldr	r3, [r7, #32]
 8008e08:	681b      	ldr	r3, [r3, #0]
 8008e0a:	2b00      	cmp	r3, #0
 8008e0c:	d007      	beq.n	8008e1e <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008e0e:	6a3b      	ldr	r3, [r7, #32]
 8008e10:	681a      	ldr	r2, [r3, #0]
 8008e12:	6a3b      	ldr	r3, [r7, #32]
 8008e14:	681b      	ldr	r3, [r3, #0]
 8008e16:	681b      	ldr	r3, [r3, #0]
 8008e18:	681b      	ldr	r3, [r3, #0]
 8008e1a:	4610      	mov	r0, r2
 8008e1c:	4798      	blx	r3
    if (*currentScreen)
 8008e1e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e20:	681b      	ldr	r3, [r3, #0]
 8008e22:	2b00      	cmp	r3, #0
 8008e24:	d008      	beq.n	8008e38 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008e26:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e28:	681a      	ldr	r2, [r3, #0]
 8008e2a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e2c:	681b      	ldr	r3, [r3, #0]
 8008e2e:	681b      	ldr	r3, [r3, #0]
 8008e30:	3314      	adds	r3, #20
 8008e32:	681b      	ldr	r3, [r3, #0]
 8008e34:	4610      	mov	r0, r2
 8008e36:	4798      	blx	r3
    if (*currentPresenter)
 8008e38:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e3a:	681b      	ldr	r3, [r3, #0]
 8008e3c:	2b00      	cmp	r3, #0
 8008e3e:	d008      	beq.n	8008e52 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008e40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e42:	681a      	ldr	r2, [r3, #0]
 8008e44:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e46:	681b      	ldr	r3, [r3, #0]
 8008e48:	681b      	ldr	r3, [r3, #0]
 8008e4a:	3304      	adds	r3, #4
 8008e4c:	681b      	ldr	r3, [r3, #0]
 8008e4e:	4610      	mov	r0, r2
 8008e50:	4798      	blx	r3
    if (*currentScreen)
 8008e52:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e54:	681b      	ldr	r3, [r3, #0]
 8008e56:	2b00      	cmp	r3, #0
 8008e58:	d007      	beq.n	8008e6a <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008e5a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e5c:	681a      	ldr	r2, [r3, #0]
 8008e5e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008e60:	681b      	ldr	r3, [r3, #0]
 8008e62:	681b      	ldr	r3, [r3, #0]
 8008e64:	681b      	ldr	r3, [r3, #0]
 8008e66:	4610      	mov	r0, r2
 8008e68:	4798      	blx	r3
    if (*currentPresenter)
 8008e6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e6c:	681b      	ldr	r3, [r3, #0]
 8008e6e:	2b00      	cmp	r3, #0
 8008e70:	d008      	beq.n	8008e84 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008e72:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e74:	681a      	ldr	r2, [r3, #0]
 8008e76:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008e78:	681b      	ldr	r3, [r3, #0]
 8008e7a:	681b      	ldr	r3, [r3, #0]
 8008e7c:	3308      	adds	r3, #8
 8008e7e:	681b      	ldr	r3, [r3, #0]
 8008e80:	4610      	mov	r0, r2
 8008e82:	4798      	blx	r3
}
 8008e84:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008e86:	687b      	ldr	r3, [r7, #4]
 8008e88:	68db      	ldr	r3, [r3, #12]
 8008e8a:	2100      	movs	r1, #0
 8008e8c:	4618      	mov	r0, r3
 8008e8e:	f000 f997 	bl	80091c0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008e92:	4603      	mov	r3, r0
 8008e94:	4619      	mov	r1, r3
 8008e96:	200c      	movs	r0, #12
 8008e98:	f7ff fbae 	bl	80085f8 <_ZnwjPv>
 8008e9c:	4604      	mov	r4, r0
 8008e9e:	4620      	mov	r0, r4
 8008ea0:	f7ff ff48 	bl	8008d34 <_ZN8touchgfx12NoTransitionC1Ev>
 8008ea4:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008ea6:	687b      	ldr	r3, [r7, #4]
 8008ea8:	689b      	ldr	r3, [r3, #8]
 8008eaa:	2100      	movs	r1, #0
 8008eac:	4618      	mov	r0, r3
 8008eae:	f000 f99a 	bl	80091e6 <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>
 8008eb2:	4603      	mov	r3, r0
 8008eb4:	4619      	mov	r1, r3
 8008eb6:	f44f 70fe 	mov.w	r0, #508	@ 0x1fc
 8008eba:	f7ff fb9d 	bl	80085f8 <_ZnwjPv>
 8008ebe:	4604      	mov	r4, r0
 8008ec0:	4620      	mov	r0, r4
 8008ec2:	f003 fa3b 	bl	800c33c <_ZN19humidity_screenViewC1Ev>
 8008ec6:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	685b      	ldr	r3, [r3, #4]
 8008ecc:	2100      	movs	r1, #0
 8008ece:	4618      	mov	r0, r3
 8008ed0:	f000 f99c 	bl	800920c <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>
 8008ed4:	4603      	mov	r3, r0
 8008ed6:	4619      	mov	r1, r3
 8008ed8:	2010      	movs	r0, #16
 8008eda:	f7ff fb8d 	bl	80085f8 <_ZnwjPv>
 8008ede:	4604      	mov	r4, r0
 8008ee0:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008ee2:	4620      	mov	r0, r4
 8008ee4:	f003 f9d2 	bl	800c28c <_ZN24humidity_screenPresenterC1ER19humidity_screenView>
 8008ee8:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8008eea:	683b      	ldr	r3, [r7, #0]
 8008eec:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8008eee:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8008ef0:	68bb      	ldr	r3, [r7, #8]
 8008ef2:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8008ef4:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8008ef6:	68fb      	ldr	r3, [r7, #12]
 8008ef8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008efa:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8008efc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008efe:	2b00      	cmp	r3, #0
 8008f00:	d002      	beq.n	8008f08 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8008f02:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008f04:	3304      	adds	r3, #4
 8008f06:	e000      	b.n	8008f0a <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8008f08:	2300      	movs	r3, #0
 8008f0a:	4619      	mov	r1, r3
 8008f0c:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8008f0e:	f7ff fd4f 	bl	80089b0 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8008f12:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008f14:	3304      	adds	r3, #4
 8008f16:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8008f18:	4618      	mov	r0, r3
 8008f1a:	f7ff fdbc 	bl	8008a96 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8008f1e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008f20:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008f22:	4618      	mov	r0, r3
 8008f24:	f000 f985 	bl	8009232 <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>
 8008f28:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008f2a:	61fb      	str	r3, [r7, #28]
 8008f2c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8008f2e:	61bb      	str	r3, [r7, #24]
 8008f30:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008f32:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8008f34:	69fb      	ldr	r3, [r7, #28]
 8008f36:	681b      	ldr	r3, [r3, #0]
 8008f38:	330c      	adds	r3, #12
 8008f3a:	681b      	ldr	r3, [r3, #0]
 8008f3c:	69f8      	ldr	r0, [r7, #28]
 8008f3e:	4798      	blx	r3
    newPresenter->activate();
 8008f40:	69bb      	ldr	r3, [r7, #24]
 8008f42:	681b      	ldr	r3, [r3, #0]
 8008f44:	681b      	ldr	r3, [r3, #0]
 8008f46:	69b8      	ldr	r0, [r7, #24]
 8008f48:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8008f4a:	6979      	ldr	r1, [r7, #20]
 8008f4c:	69f8      	ldr	r0, [r7, #28]
 8008f4e:	f00a fdc9 	bl	8013ae4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8008f52:	697b      	ldr	r3, [r7, #20]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	3310      	adds	r3, #16
 8008f58:	681b      	ldr	r3, [r3, #0]
 8008f5a:	6978      	ldr	r0, [r7, #20]
 8008f5c:	4798      	blx	r3
    newTransition->invalidate();
 8008f5e:	697b      	ldr	r3, [r7, #20]
 8008f60:	681b      	ldr	r3, [r3, #0]
 8008f62:	3314      	adds	r3, #20
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	6978      	ldr	r0, [r7, #20]
 8008f68:	4798      	blx	r3
}
 8008f6a:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 8008f6c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8008f6e:	4618      	mov	r0, r3
 8008f70:	373c      	adds	r7, #60	@ 0x3c
 8008f72:	46bd      	mov	sp, r7
 8008f74:	bd90      	pop	{r4, r7, pc}
 8008f76:	bf00      	nop
 8008f78:	08024dd0 	.word	0x08024dd0
 8008f7c:	08024e60 	.word	0x08024e60
 8008f80:	08024f44 	.word	0x08024f44
 8008f84:	08024f88 	.word	0x08024f88
 8008f88:	0802502c 	.word	0x0802502c

08008f8c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008f8c:	b590      	push	{r4, r7, lr}
 8008f8e:	b08f      	sub	sp, #60	@ 0x3c
 8008f90:	af00      	add	r7, sp, #0
 8008f92:	60f8      	str	r0, [r7, #12]
 8008f94:	60b9      	str	r1, [r7, #8]
 8008f96:	607a      	str	r2, [r7, #4]
 8008f98:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008f9a:	687b      	ldr	r3, [r7, #4]
 8008f9c:	689a      	ldr	r2, [r3, #8]
 8008f9e:	687b      	ldr	r3, [r7, #4]
 8008fa0:	689b      	ldr	r3, [r3, #8]
 8008fa2:	681b      	ldr	r3, [r3, #0]
 8008fa4:	3320      	adds	r3, #32
 8008fa6:	681b      	ldr	r3, [r3, #0]
 8008fa8:	4610      	mov	r0, r2
 8008faa:	4798      	blx	r3
 8008fac:	4603      	mov	r3, r0
 8008fae:	f5b3 7f76 	cmp.w	r3, #984	@ 0x3d8
 8008fb2:	d205      	bcs.n	8008fc0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008fb4:	4b7d      	ldr	r3, [pc, #500]	@ (80091ac <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008fb6:	4a7e      	ldr	r2, [pc, #504]	@ (80091b0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008fb8:	21a3      	movs	r1, #163	@ 0xa3
 8008fba:	487e      	ldr	r0, [pc, #504]	@ (80091b4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008fbc:	f01a fed8 	bl	8023d70 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008fc0:	687b      	ldr	r3, [r7, #4]
 8008fc2:	685a      	ldr	r2, [r3, #4]
 8008fc4:	687b      	ldr	r3, [r7, #4]
 8008fc6:	685b      	ldr	r3, [r3, #4]
 8008fc8:	681b      	ldr	r3, [r3, #0]
 8008fca:	3320      	adds	r3, #32
 8008fcc:	681b      	ldr	r3, [r3, #0]
 8008fce:	4610      	mov	r0, r2
 8008fd0:	4798      	blx	r3
 8008fd2:	4603      	mov	r3, r0
 8008fd4:	2b0f      	cmp	r3, #15
 8008fd6:	d805      	bhi.n	8008fe4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008fd8:	4b77      	ldr	r3, [pc, #476]	@ (80091b8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008fda:	4a75      	ldr	r2, [pc, #468]	@ (80091b0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008fdc:	21a4      	movs	r1, #164	@ 0xa4
 8008fde:	4875      	ldr	r0, [pc, #468]	@ (80091b4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008fe0:	f01a fec6 	bl	8023d70 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008fe4:	687b      	ldr	r3, [r7, #4]
 8008fe6:	68da      	ldr	r2, [r3, #12]
 8008fe8:	687b      	ldr	r3, [r7, #4]
 8008fea:	68db      	ldr	r3, [r3, #12]
 8008fec:	681b      	ldr	r3, [r3, #0]
 8008fee:	3320      	adds	r3, #32
 8008ff0:	681b      	ldr	r3, [r3, #0]
 8008ff2:	4610      	mov	r0, r2
 8008ff4:	4798      	blx	r3
 8008ff6:	4603      	mov	r3, r0
 8008ff8:	2b0b      	cmp	r3, #11
 8008ffa:	d805      	bhi.n	8009008 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008ffc:	4b6f      	ldr	r3, [pc, #444]	@ (80091bc <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008ffe:	4a6c      	ldr	r2, [pc, #432]	@ (80091b0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009000:	21a5      	movs	r1, #165	@ 0xa5
 8009002:	486c      	ldr	r0, [pc, #432]	@ (80091b4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009004:	f01a feb4 	bl	8023d70 <__assert_func>
 8009008:	68fb      	ldr	r3, [r7, #12]
 800900a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800900c:	68bb      	ldr	r3, [r7, #8]
 800900e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009010:	683b      	ldr	r3, [r7, #0]
 8009012:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8009014:	f009 f8a4 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 8009018:	4603      	mov	r3, r0
 800901a:	4618      	mov	r0, r3
 800901c:	f7ff fb82 	bl	8008724 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8009020:	6a3b      	ldr	r3, [r7, #32]
 8009022:	681b      	ldr	r3, [r3, #0]
 8009024:	2b00      	cmp	r3, #0
 8009026:	d008      	beq.n	800903a <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8009028:	6a3b      	ldr	r3, [r7, #32]
 800902a:	681a      	ldr	r2, [r3, #0]
 800902c:	6a3b      	ldr	r3, [r7, #32]
 800902e:	681b      	ldr	r3, [r3, #0]
 8009030:	681b      	ldr	r3, [r3, #0]
 8009032:	330c      	adds	r3, #12
 8009034:	681b      	ldr	r3, [r3, #0]
 8009036:	4610      	mov	r0, r2
 8009038:	4798      	blx	r3
    if (*currentTrans)
 800903a:	6a3b      	ldr	r3, [r7, #32]
 800903c:	681b      	ldr	r3, [r3, #0]
 800903e:	2b00      	cmp	r3, #0
 8009040:	d007      	beq.n	8009052 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8009042:	6a3b      	ldr	r3, [r7, #32]
 8009044:	681a      	ldr	r2, [r3, #0]
 8009046:	6a3b      	ldr	r3, [r7, #32]
 8009048:	681b      	ldr	r3, [r3, #0]
 800904a:	681b      	ldr	r3, [r3, #0]
 800904c:	681b      	ldr	r3, [r3, #0]
 800904e:	4610      	mov	r0, r2
 8009050:	4798      	blx	r3
    if (*currentScreen)
 8009052:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009054:	681b      	ldr	r3, [r3, #0]
 8009056:	2b00      	cmp	r3, #0
 8009058:	d008      	beq.n	800906c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800905a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800905c:	681a      	ldr	r2, [r3, #0]
 800905e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	681b      	ldr	r3, [r3, #0]
 8009064:	3314      	adds	r3, #20
 8009066:	681b      	ldr	r3, [r3, #0]
 8009068:	4610      	mov	r0, r2
 800906a:	4798      	blx	r3
    if (*currentPresenter)
 800906c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800906e:	681b      	ldr	r3, [r3, #0]
 8009070:	2b00      	cmp	r3, #0
 8009072:	d008      	beq.n	8009086 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8009074:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009076:	681a      	ldr	r2, [r3, #0]
 8009078:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800907a:	681b      	ldr	r3, [r3, #0]
 800907c:	681b      	ldr	r3, [r3, #0]
 800907e:	3304      	adds	r3, #4
 8009080:	681b      	ldr	r3, [r3, #0]
 8009082:	4610      	mov	r0, r2
 8009084:	4798      	blx	r3
    if (*currentScreen)
 8009086:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009088:	681b      	ldr	r3, [r3, #0]
 800908a:	2b00      	cmp	r3, #0
 800908c:	d007      	beq.n	800909e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800908e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009090:	681a      	ldr	r2, [r3, #0]
 8009092:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009094:	681b      	ldr	r3, [r3, #0]
 8009096:	681b      	ldr	r3, [r3, #0]
 8009098:	681b      	ldr	r3, [r3, #0]
 800909a:	4610      	mov	r0, r2
 800909c:	4798      	blx	r3
    if (*currentPresenter)
 800909e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80090a0:	681b      	ldr	r3, [r3, #0]
 80090a2:	2b00      	cmp	r3, #0
 80090a4:	d008      	beq.n	80090b8 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 80090a6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80090a8:	681a      	ldr	r2, [r3, #0]
 80090aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80090ac:	681b      	ldr	r3, [r3, #0]
 80090ae:	681b      	ldr	r3, [r3, #0]
 80090b0:	3308      	adds	r3, #8
 80090b2:	681b      	ldr	r3, [r3, #0]
 80090b4:	4610      	mov	r0, r2
 80090b6:	4798      	blx	r3
}
 80090b8:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80090ba:	687b      	ldr	r3, [r7, #4]
 80090bc:	68db      	ldr	r3, [r3, #12]
 80090be:	2100      	movs	r1, #0
 80090c0:	4618      	mov	r0, r3
 80090c2:	f000 f87d 	bl	80091c0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80090c6:	4603      	mov	r3, r0
 80090c8:	4619      	mov	r1, r3
 80090ca:	200c      	movs	r0, #12
 80090cc:	f7ff fa94 	bl	80085f8 <_ZnwjPv>
 80090d0:	4604      	mov	r4, r0
 80090d2:	4620      	mov	r0, r4
 80090d4:	f7ff fe2e 	bl	8008d34 <_ZN8touchgfx12NoTransitionC1Ev>
 80090d8:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80090da:	687b      	ldr	r3, [r7, #4]
 80090dc:	689b      	ldr	r3, [r3, #8]
 80090de:	2100      	movs	r1, #0
 80090e0:	4618      	mov	r0, r3
 80090e2:	f000 f8b4 	bl	800924e <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 80090e6:	4603      	mov	r3, r0
 80090e8:	4619      	mov	r1, r3
 80090ea:	f44f 7076 	mov.w	r0, #984	@ 0x3d8
 80090ee:	f7ff fa83 	bl	80085f8 <_ZnwjPv>
 80090f2:	4604      	mov	r4, r0
 80090f4:	4620      	mov	r0, r4
 80090f6:	f003 fa35 	bl	800c564 <_ZN8MainViewC1Ev>
 80090fa:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80090fc:	687b      	ldr	r3, [r7, #4]
 80090fe:	685b      	ldr	r3, [r3, #4]
 8009100:	2100      	movs	r1, #0
 8009102:	4618      	mov	r0, r3
 8009104:	f000 f8b6 	bl	8009274 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 8009108:	4603      	mov	r3, r0
 800910a:	4619      	mov	r1, r3
 800910c:	2010      	movs	r0, #16
 800910e:	f7ff fa73 	bl	80085f8 <_ZnwjPv>
 8009112:	4604      	mov	r4, r0
 8009114:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8009116:	4620      	mov	r0, r4
 8009118:	f003 f96e 	bl	800c3f8 <_ZN13MainPresenterC1ER8MainView>
 800911c:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800911e:	683b      	ldr	r3, [r7, #0]
 8009120:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009122:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009124:	68bb      	ldr	r3, [r7, #8]
 8009126:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009128:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800912a:	68fb      	ldr	r3, [r7, #12]
 800912c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800912e:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009130:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009132:	2b00      	cmp	r3, #0
 8009134:	d002      	beq.n	800913c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8009136:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009138:	3304      	adds	r3, #4
 800913a:	e000      	b.n	800913e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800913c:	2300      	movs	r3, #0
 800913e:	4619      	mov	r1, r3
 8009140:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8009142:	f7ff fc35 	bl	80089b0 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009146:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009148:	3304      	adds	r3, #4
 800914a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800914c:	4618      	mov	r0, r3
 800914e:	f7ff fca2 	bl	8008a96 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8009152:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009154:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009156:	4618      	mov	r0, r3
 8009158:	f000 f89f 	bl	800929a <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 800915c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800915e:	61fb      	str	r3, [r7, #28]
 8009160:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009162:	61bb      	str	r3, [r7, #24]
 8009164:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009166:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009168:	69fb      	ldr	r3, [r7, #28]
 800916a:	681b      	ldr	r3, [r3, #0]
 800916c:	330c      	adds	r3, #12
 800916e:	681b      	ldr	r3, [r3, #0]
 8009170:	69f8      	ldr	r0, [r7, #28]
 8009172:	4798      	blx	r3
    newPresenter->activate();
 8009174:	69bb      	ldr	r3, [r7, #24]
 8009176:	681b      	ldr	r3, [r3, #0]
 8009178:	681b      	ldr	r3, [r3, #0]
 800917a:	69b8      	ldr	r0, [r7, #24]
 800917c:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800917e:	6979      	ldr	r1, [r7, #20]
 8009180:	69f8      	ldr	r0, [r7, #28]
 8009182:	f00a fcaf 	bl	8013ae4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8009186:	697b      	ldr	r3, [r7, #20]
 8009188:	681b      	ldr	r3, [r3, #0]
 800918a:	3310      	adds	r3, #16
 800918c:	681b      	ldr	r3, [r3, #0]
 800918e:	6978      	ldr	r0, [r7, #20]
 8009190:	4798      	blx	r3
    newTransition->invalidate();
 8009192:	697b      	ldr	r3, [r7, #20]
 8009194:	681b      	ldr	r3, [r3, #0]
 8009196:	3314      	adds	r3, #20
 8009198:	681b      	ldr	r3, [r3, #0]
 800919a:	6978      	ldr	r0, [r7, #20]
 800919c:	4798      	blx	r3
}
 800919e:	bf00      	nop
    return newPresenter;
 80091a0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 80091a2:	4618      	mov	r0, r3
 80091a4:	373c      	adds	r7, #60	@ 0x3c
 80091a6:	46bd      	mov	sp, r7
 80091a8:	bd90      	pop	{r4, r7, pc}
 80091aa:	bf00      	nop
 80091ac:	08024dd0 	.word	0x08024dd0
 80091b0:	080250d0 	.word	0x080250d0
 80091b4:	08024f44 	.word	0x08024f44
 80091b8:	08024f88 	.word	0x08024f88
 80091bc:	0802502c 	.word	0x0802502c

080091c0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 80091c0:	b580      	push	{r7, lr}
 80091c2:	b082      	sub	sp, #8
 80091c4:	af00      	add	r7, sp, #0
 80091c6:	6078      	str	r0, [r7, #4]
 80091c8:	460b      	mov	r3, r1
 80091ca:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 80091cc:	687b      	ldr	r3, [r7, #4]
 80091ce:	681b      	ldr	r3, [r3, #0]
 80091d0:	3324      	adds	r3, #36	@ 0x24
 80091d2:	681b      	ldr	r3, [r3, #0]
 80091d4:	887a      	ldrh	r2, [r7, #2]
 80091d6:	4611      	mov	r1, r2
 80091d8:	6878      	ldr	r0, [r7, #4]
 80091da:	4798      	blx	r3
 80091dc:	4603      	mov	r3, r0
    }
 80091de:	4618      	mov	r0, r3
 80091e0:	3708      	adds	r7, #8
 80091e2:	46bd      	mov	sp, r7
 80091e4:	bd80      	pop	{r7, pc}

080091e6 <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>:
    T& at(const uint16_t index)
 80091e6:	b580      	push	{r7, lr}
 80091e8:	b082      	sub	sp, #8
 80091ea:	af00      	add	r7, sp, #0
 80091ec:	6078      	str	r0, [r7, #4]
 80091ee:	460b      	mov	r3, r1
 80091f0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80091f2:	687b      	ldr	r3, [r7, #4]
 80091f4:	681b      	ldr	r3, [r3, #0]
 80091f6:	3324      	adds	r3, #36	@ 0x24
 80091f8:	681b      	ldr	r3, [r3, #0]
 80091fa:	887a      	ldrh	r2, [r7, #2]
 80091fc:	4611      	mov	r1, r2
 80091fe:	6878      	ldr	r0, [r7, #4]
 8009200:	4798      	blx	r3
 8009202:	4603      	mov	r3, r0
    }
 8009204:	4618      	mov	r0, r3
 8009206:	3708      	adds	r7, #8
 8009208:	46bd      	mov	sp, r7
 800920a:	bd80      	pop	{r7, pc}

0800920c <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800920c:	b580      	push	{r7, lr}
 800920e:	b082      	sub	sp, #8
 8009210:	af00      	add	r7, sp, #0
 8009212:	6078      	str	r0, [r7, #4]
 8009214:	460b      	mov	r3, r1
 8009216:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	681b      	ldr	r3, [r3, #0]
 800921c:	3324      	adds	r3, #36	@ 0x24
 800921e:	681b      	ldr	r3, [r3, #0]
 8009220:	887a      	ldrh	r2, [r7, #2]
 8009222:	4611      	mov	r1, r2
 8009224:	6878      	ldr	r0, [r7, #4]
 8009226:	4798      	blx	r3
 8009228:	4603      	mov	r3, r0
    }
 800922a:	4618      	mov	r0, r3
 800922c:	3708      	adds	r7, #8
 800922e:	46bd      	mov	sp, r7
 8009230:	bd80      	pop	{r7, pc}

08009232 <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 8009232:	b480      	push	{r7}
 8009234:	b083      	sub	sp, #12
 8009236:	af00      	add	r7, sp, #0
 8009238:	6078      	str	r0, [r7, #4]
 800923a:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	683a      	ldr	r2, [r7, #0]
 8009240:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009242:	bf00      	nop
 8009244:	370c      	adds	r7, #12
 8009246:	46bd      	mov	sp, r7
 8009248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800924c:	4770      	bx	lr

0800924e <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 800924e:	b580      	push	{r7, lr}
 8009250:	b082      	sub	sp, #8
 8009252:	af00      	add	r7, sp, #0
 8009254:	6078      	str	r0, [r7, #4]
 8009256:	460b      	mov	r3, r1
 8009258:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800925a:	687b      	ldr	r3, [r7, #4]
 800925c:	681b      	ldr	r3, [r3, #0]
 800925e:	3324      	adds	r3, #36	@ 0x24
 8009260:	681b      	ldr	r3, [r3, #0]
 8009262:	887a      	ldrh	r2, [r7, #2]
 8009264:	4611      	mov	r1, r2
 8009266:	6878      	ldr	r0, [r7, #4]
 8009268:	4798      	blx	r3
 800926a:	4603      	mov	r3, r0
    }
 800926c:	4618      	mov	r0, r3
 800926e:	3708      	adds	r7, #8
 8009270:	46bd      	mov	sp, r7
 8009272:	bd80      	pop	{r7, pc}

08009274 <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 8009274:	b580      	push	{r7, lr}
 8009276:	b082      	sub	sp, #8
 8009278:	af00      	add	r7, sp, #0
 800927a:	6078      	str	r0, [r7, #4]
 800927c:	460b      	mov	r3, r1
 800927e:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009280:	687b      	ldr	r3, [r7, #4]
 8009282:	681b      	ldr	r3, [r3, #0]
 8009284:	3324      	adds	r3, #36	@ 0x24
 8009286:	681b      	ldr	r3, [r3, #0]
 8009288:	887a      	ldrh	r2, [r7, #2]
 800928a:	4611      	mov	r1, r2
 800928c:	6878      	ldr	r0, [r7, #4]
 800928e:	4798      	blx	r3
 8009290:	4603      	mov	r3, r0
    }
 8009292:	4618      	mov	r0, r3
 8009294:	3708      	adds	r7, #8
 8009296:	46bd      	mov	sp, r7
 8009298:	bd80      	pop	{r7, pc}

0800929a <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800929a:	b480      	push	{r7}
 800929c:	b083      	sub	sp, #12
 800929e:	af00      	add	r7, sp, #0
 80092a0:	6078      	str	r0, [r7, #4]
 80092a2:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 80092a4:	687b      	ldr	r3, [r7, #4]
 80092a6:	683a      	ldr	r2, [r7, #0]
 80092a8:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80092aa:	bf00      	nop
 80092ac:	370c      	adds	r7, #12
 80092ae:	46bd      	mov	sp, r7
 80092b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092b4:	4770      	bx	lr
	...

080092b8 <_ZN8touchgfx12NoTransitionD1Ev>:
 80092b8:	b580      	push	{r7, lr}
 80092ba:	b082      	sub	sp, #8
 80092bc:	af00      	add	r7, sp, #0
 80092be:	6078      	str	r0, [r7, #4]
 80092c0:	4a05      	ldr	r2, [pc, #20]	@ (80092d8 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	601a      	str	r2, [r3, #0]
 80092c6:	687b      	ldr	r3, [r7, #4]
 80092c8:	4618      	mov	r0, r3
 80092ca:	f7ff fa97 	bl	80087fc <_ZN8touchgfx10TransitionD1Ev>
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	4618      	mov	r0, r3
 80092d2:	3708      	adds	r7, #8
 80092d4:	46bd      	mov	sp, r7
 80092d6:	bd80      	pop	{r7, pc}
 80092d8:	08025fc4 	.word	0x08025fc4

080092dc <_ZN8touchgfx12NoTransitionD0Ev>:
 80092dc:	b580      	push	{r7, lr}
 80092de:	b082      	sub	sp, #8
 80092e0:	af00      	add	r7, sp, #0
 80092e2:	6078      	str	r0, [r7, #4]
 80092e4:	6878      	ldr	r0, [r7, #4]
 80092e6:	f7ff ffe7 	bl	80092b8 <_ZN8touchgfx12NoTransitionD1Ev>
 80092ea:	210c      	movs	r1, #12
 80092ec:	6878      	ldr	r0, [r7, #4]
 80092ee:	f01a fc90 	bl	8023c12 <_ZdlPvj>
 80092f2:	687b      	ldr	r3, [r7, #4]
 80092f4:	4618      	mov	r0, r3
 80092f6:	3708      	adds	r7, #8
 80092f8:	46bd      	mov	sp, r7
 80092fa:	bd80      	pop	{r7, pc}

080092fc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80092fc:	b580      	push	{r7, lr}
 80092fe:	b082      	sub	sp, #8
 8009300:	af00      	add	r7, sp, #0
 8009302:	6078      	str	r0, [r7, #4]
 8009304:	4a05      	ldr	r2, [pc, #20]	@ (800931c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 8009306:	687b      	ldr	r3, [r7, #4]
 8009308:	601a      	str	r2, [r3, #0]
 800930a:	687b      	ldr	r3, [r7, #4]
 800930c:	4618      	mov	r0, r3
 800930e:	f7ff fa17 	bl	8008740 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8009312:	687b      	ldr	r3, [r7, #4]
 8009314:	4618      	mov	r0, r3
 8009316:	3708      	adds	r7, #8
 8009318:	46bd      	mov	sp, r7
 800931a:	bd80      	pop	{r7, pc}
 800931c:	0802603c 	.word	0x0802603c

08009320 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8009320:	b580      	push	{r7, lr}
 8009322:	b082      	sub	sp, #8
 8009324:	af00      	add	r7, sp, #0
 8009326:	6078      	str	r0, [r7, #4]
 8009328:	6878      	ldr	r0, [r7, #4]
 800932a:	f7ff ffe7 	bl	80092fc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800932e:	2110      	movs	r1, #16
 8009330:	6878      	ldr	r0, [r7, #4]
 8009332:	f01a fc6e 	bl	8023c12 <_ZdlPvj>
 8009336:	687b      	ldr	r3, [r7, #4]
 8009338:	4618      	mov	r0, r3
 800933a:	3708      	adds	r7, #8
 800933c:	46bd      	mov	sp, r7
 800933e:	bd80      	pop	{r7, pc}

08009340 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8009340:	b580      	push	{r7, lr}
 8009342:	b082      	sub	sp, #8
 8009344:	af00      	add	r7, sp, #0
 8009346:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	685b      	ldr	r3, [r3, #4]
 800934c:	687a      	ldr	r2, [r7, #4]
 800934e:	68d2      	ldr	r2, [r2, #12]
 8009350:	1052      	asrs	r2, r2, #1
 8009352:	1899      	adds	r1, r3, r2
 8009354:	687b      	ldr	r3, [r7, #4]
 8009356:	68db      	ldr	r3, [r3, #12]
 8009358:	f003 0301 	and.w	r3, r3, #1
 800935c:	2b00      	cmp	r3, #0
 800935e:	d102      	bne.n	8009366 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 8009360:	687b      	ldr	r3, [r7, #4]
 8009362:	689b      	ldr	r3, [r3, #8]
 8009364:	e00a      	b.n	800937c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 8009366:	687b      	ldr	r3, [r7, #4]
 8009368:	685b      	ldr	r3, [r3, #4]
 800936a:	687a      	ldr	r2, [r7, #4]
 800936c:	68d2      	ldr	r2, [r2, #12]
 800936e:	1052      	asrs	r2, r2, #1
 8009370:	4413      	add	r3, r2
 8009372:	681b      	ldr	r3, [r3, #0]
 8009374:	687a      	ldr	r2, [r7, #4]
 8009376:	6892      	ldr	r2, [r2, #8]
 8009378:	4413      	add	r3, r2
 800937a:	681b      	ldr	r3, [r3, #0]
 800937c:	4608      	mov	r0, r1
 800937e:	4798      	blx	r3
    }
 8009380:	bf00      	nop
 8009382:	3708      	adds	r7, #8
 8009384:	46bd      	mov	sp, r7
 8009386:	bd80      	pop	{r7, pc}

08009388 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 8009388:	b480      	push	{r7}
 800938a:	b083      	sub	sp, #12
 800938c:	af00      	add	r7, sp, #0
 800938e:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 8009390:	687b      	ldr	r3, [r7, #4]
 8009392:	685b      	ldr	r3, [r3, #4]
 8009394:	2b00      	cmp	r3, #0
 8009396:	d010      	beq.n	80093ba <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009398:	687b      	ldr	r3, [r7, #4]
 800939a:	689b      	ldr	r3, [r3, #8]
 800939c:	2b00      	cmp	r3, #0
 800939e:	d107      	bne.n	80093b0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80093a0:	687b      	ldr	r3, [r7, #4]
 80093a2:	68db      	ldr	r3, [r3, #12]
 80093a4:	f003 0301 	and.w	r3, r3, #1
 80093a8:	2b00      	cmp	r3, #0
 80093aa:	d101      	bne.n	80093b0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 80093ac:	2301      	movs	r3, #1
 80093ae:	e000      	b.n	80093b2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 80093b0:	2300      	movs	r3, #0
 80093b2:	2b01      	cmp	r3, #1
 80093b4:	d001      	beq.n	80093ba <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80093b6:	2301      	movs	r3, #1
 80093b8:	e000      	b.n	80093bc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 80093ba:	2300      	movs	r3, #0
    }
 80093bc:	4618      	mov	r0, r3
 80093be:	370c      	adds	r7, #12
 80093c0:	46bd      	mov	sp, r7
 80093c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093c6:	4770      	bx	lr

080093c8 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 80093c8:	b480      	push	{r7}
 80093ca:	b083      	sub	sp, #12
 80093cc:	af00      	add	r7, sp, #0
 80093ce:	6078      	str	r0, [r7, #4]
        : color(0)
 80093d0:	687b      	ldr	r3, [r7, #4]
 80093d2:	2200      	movs	r2, #0
 80093d4:	601a      	str	r2, [r3, #0]
    {
    }
 80093d6:	687b      	ldr	r3, [r7, #4]
 80093d8:	4618      	mov	r0, r3
 80093da:	370c      	adds	r7, #12
 80093dc:	46bd      	mov	sp, r7
 80093de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093e2:	4770      	bx	lr

080093e4 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 80093e4:	b480      	push	{r7}
 80093e6:	b083      	sub	sp, #12
 80093e8:	af00      	add	r7, sp, #0
 80093ea:	6078      	str	r0, [r7, #4]
 80093ec:	6039      	str	r1, [r7, #0]
        : color(col)
 80093ee:	687b      	ldr	r3, [r7, #4]
 80093f0:	683a      	ldr	r2, [r7, #0]
 80093f2:	601a      	str	r2, [r3, #0]
    {
    }
 80093f4:	687b      	ldr	r3, [r7, #4]
 80093f6:	4618      	mov	r0, r3
 80093f8:	370c      	adds	r7, #12
 80093fa:	46bd      	mov	sp, r7
 80093fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009400:	4770      	bx	lr

08009402 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009402:	b480      	push	{r7}
 8009404:	b083      	sub	sp, #12
 8009406:	af00      	add	r7, sp, #0
 8009408:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800940a:	687b      	ldr	r3, [r7, #4]
 800940c:	2200      	movs	r2, #0
 800940e:	801a      	strh	r2, [r3, #0]
 8009410:	687b      	ldr	r3, [r7, #4]
 8009412:	2200      	movs	r2, #0
 8009414:	805a      	strh	r2, [r3, #2]
 8009416:	687b      	ldr	r3, [r7, #4]
 8009418:	2200      	movs	r2, #0
 800941a:	809a      	strh	r2, [r3, #4]
 800941c:	687b      	ldr	r3, [r7, #4]
 800941e:	2200      	movs	r2, #0
 8009420:	80da      	strh	r2, [r3, #6]
    {
    }
 8009422:	687b      	ldr	r3, [r7, #4]
 8009424:	4618      	mov	r0, r3
 8009426:	370c      	adds	r7, #12
 8009428:	46bd      	mov	sp, r7
 800942a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800942e:	4770      	bx	lr

08009430 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8009430:	b480      	push	{r7}
 8009432:	b085      	sub	sp, #20
 8009434:	af00      	add	r7, sp, #0
 8009436:	60f8      	str	r0, [r7, #12]
 8009438:	4608      	mov	r0, r1
 800943a:	4611      	mov	r1, r2
 800943c:	461a      	mov	r2, r3
 800943e:	4603      	mov	r3, r0
 8009440:	817b      	strh	r3, [r7, #10]
 8009442:	460b      	mov	r3, r1
 8009444:	813b      	strh	r3, [r7, #8]
 8009446:	4613      	mov	r3, r2
 8009448:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800944a:	68fb      	ldr	r3, [r7, #12]
 800944c:	897a      	ldrh	r2, [r7, #10]
 800944e:	801a      	strh	r2, [r3, #0]
 8009450:	68fb      	ldr	r3, [r7, #12]
 8009452:	893a      	ldrh	r2, [r7, #8]
 8009454:	805a      	strh	r2, [r3, #2]
 8009456:	68fb      	ldr	r3, [r7, #12]
 8009458:	88fa      	ldrh	r2, [r7, #6]
 800945a:	809a      	strh	r2, [r3, #4]
 800945c:	68fb      	ldr	r3, [r7, #12]
 800945e:	8b3a      	ldrh	r2, [r7, #24]
 8009460:	80da      	strh	r2, [r3, #6]
    {
    }
 8009462:	68fb      	ldr	r3, [r7, #12]
 8009464:	4618      	mov	r0, r3
 8009466:	3714      	adds	r7, #20
 8009468:	46bd      	mov	sp, r7
 800946a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800946e:	4770      	bx	lr

08009470 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8009470:	b480      	push	{r7}
 8009472:	b083      	sub	sp, #12
 8009474:	af00      	add	r7, sp, #0
 8009476:	6078      	str	r0, [r7, #4]
 8009478:	460b      	mov	r3, r1
 800947a:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	887a      	ldrh	r2, [r7, #2]
 8009480:	801a      	strh	r2, [r3, #0]
    {
    }
 8009482:	687b      	ldr	r3, [r7, #4]
 8009484:	4618      	mov	r0, r3
 8009486:	370c      	adds	r7, #12
 8009488:	46bd      	mov	sp, r7
 800948a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800948e:	4770      	bx	lr

08009490 <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 8009490:	b480      	push	{r7}
 8009492:	b083      	sub	sp, #12
 8009494:	af00      	add	r7, sp, #0
 8009496:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	791b      	ldrb	r3, [r3, #4]
    }
 800949c:	4618      	mov	r0, r3
 800949e:	370c      	adds	r7, #12
 80094a0:	46bd      	mov	sp, r7
 80094a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80094a6:	4770      	bx	lr

080094a8 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 80094a8:	b580      	push	{r7, lr}
 80094aa:	b082      	sub	sp, #8
 80094ac:	af00      	add	r7, sp, #0
 80094ae:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 80094b0:	4a14      	ldr	r2, [pc, #80]	@ (8009504 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 80094b2:	687b      	ldr	r3, [r7, #4]
 80094b4:	601a      	str	r2, [r3, #0]
        : rect(),
 80094b6:	687b      	ldr	r3, [r7, #4]
 80094b8:	3304      	adds	r3, #4
 80094ba:	4618      	mov	r0, r3
 80094bc:	f7ff ffa1 	bl	8009402 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 80094c0:	687b      	ldr	r3, [r7, #4]
 80094c2:	330c      	adds	r3, #12
 80094c4:	4618      	mov	r0, r3
 80094c6:	f7ff ff9c 	bl	8009402 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	2200      	movs	r2, #0
 80094ce:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 80094d0:	687b      	ldr	r3, [r7, #4]
 80094d2:	2200      	movs	r2, #0
 80094d4:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 80094d6:	687b      	ldr	r3, [r7, #4]
 80094d8:	2200      	movs	r2, #0
 80094da:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 80094dc:	687b      	ldr	r3, [r7, #4]
 80094de:	2200      	movs	r2, #0
 80094e0:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 80094e2:	687b      	ldr	r3, [r7, #4]
 80094e4:	2200      	movs	r2, #0
 80094e6:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 80094e8:	687b      	ldr	r3, [r7, #4]
 80094ea:	2200      	movs	r2, #0
 80094ec:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 80094f0:	687b      	ldr	r3, [r7, #4]
 80094f2:	2201      	movs	r2, #1
 80094f4:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	4618      	mov	r0, r3
 80094fc:	3708      	adds	r7, #8
 80094fe:	46bd      	mov	sp, r7
 8009500:	bd80      	pop	{r7, pc}
 8009502:	bf00      	nop
 8009504:	080271a0 	.word	0x080271a0

08009508 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009508:	b480      	push	{r7}
 800950a:	b083      	sub	sp, #12
 800950c:	af00      	add	r7, sp, #0
 800950e:	6078      	str	r0, [r7, #4]
    {
 8009510:	4a04      	ldr	r2, [pc, #16]	@ (8009524 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009512:	687b      	ldr	r3, [r7, #4]
 8009514:	601a      	str	r2, [r3, #0]
    }
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	4618      	mov	r0, r3
 800951a:	370c      	adds	r7, #12
 800951c:	46bd      	mov	sp, r7
 800951e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009522:	4770      	bx	lr
 8009524:	080271a0 	.word	0x080271a0

08009528 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009528:	b580      	push	{r7, lr}
 800952a:	b082      	sub	sp, #8
 800952c:	af00      	add	r7, sp, #0
 800952e:	6078      	str	r0, [r7, #4]
    }
 8009530:	6878      	ldr	r0, [r7, #4]
 8009532:	f7ff ffe9 	bl	8009508 <_ZN8touchgfx8DrawableD1Ev>
 8009536:	2128      	movs	r1, #40	@ 0x28
 8009538:	6878      	ldr	r0, [r7, #4]
 800953a:	f01a fb6a 	bl	8023c12 <_ZdlPvj>
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	4618      	mov	r0, r3
 8009542:	3708      	adds	r7, #8
 8009544:	46bd      	mov	sp, r7
 8009546:	bd80      	pop	{r7, pc}

08009548 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8009548:	b580      	push	{r7, lr}
 800954a:	b082      	sub	sp, #8
 800954c:	af00      	add	r7, sp, #0
 800954e:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8009550:	687b      	ldr	r3, [r7, #4]
 8009552:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8009556:	2b00      	cmp	r3, #0
 8009558:	d005      	beq.n	8009566 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	681b      	ldr	r3, [r3, #0]
 800955e:	3314      	adds	r3, #20
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	6878      	ldr	r0, [r7, #4]
 8009564:	4798      	blx	r3
        }
    }
 8009566:	bf00      	nop
 8009568:	3708      	adds	r7, #8
 800956a:	46bd      	mov	sp, r7
 800956c:	bd80      	pop	{r7, pc}

0800956e <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800956e:	b480      	push	{r7}
 8009570:	b083      	sub	sp, #12
 8009572:	af00      	add	r7, sp, #0
 8009574:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009576:	2300      	movs	r3, #0
    }
 8009578:	4618      	mov	r0, r3
 800957a:	370c      	adds	r7, #12
 800957c:	46bd      	mov	sp, r7
 800957e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009582:	4770      	bx	lr

08009584 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009584:	b580      	push	{r7, lr}
 8009586:	b084      	sub	sp, #16
 8009588:	af00      	add	r7, sp, #0
 800958a:	60f8      	str	r0, [r7, #12]
 800958c:	4608      	mov	r0, r1
 800958e:	4611      	mov	r1, r2
 8009590:	461a      	mov	r2, r3
 8009592:	4603      	mov	r3, r0
 8009594:	817b      	strh	r3, [r7, #10]
 8009596:	460b      	mov	r3, r1
 8009598:	813b      	strh	r3, [r7, #8]
 800959a:	4613      	mov	r3, r2
 800959c:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800959e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 80095a2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80095a6:	4619      	mov	r1, r3
 80095a8:	68f8      	ldr	r0, [r7, #12]
 80095aa:	f000 f82a 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80095ae:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 80095b2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80095b6:	4619      	mov	r1, r3
 80095b8:	68f8      	ldr	r0, [r7, #12]
 80095ba:	f000 f87e 	bl	80096ba <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 80095be:	bf00      	nop
 80095c0:	3710      	adds	r7, #16
 80095c2:	46bd      	mov	sp, r7
 80095c4:	bd80      	pop	{r7, pc}

080095c6 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 80095c6:	b480      	push	{r7}
 80095c8:	b083      	sub	sp, #12
 80095ca:	af00      	add	r7, sp, #0
 80095cc:	6078      	str	r0, [r7, #4]
 80095ce:	460b      	mov	r3, r1
 80095d0:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	887a      	ldrh	r2, [r7, #2]
 80095d6:	809a      	strh	r2, [r3, #4]
    }
 80095d8:	bf00      	nop
 80095da:	370c      	adds	r7, #12
 80095dc:	46bd      	mov	sp, r7
 80095de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095e2:	4770      	bx	lr

080095e4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 80095e4:	b480      	push	{r7}
 80095e6:	b083      	sub	sp, #12
 80095e8:	af00      	add	r7, sp, #0
 80095ea:	6078      	str	r0, [r7, #4]
 80095ec:	460b      	mov	r3, r1
 80095ee:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 80095f0:	687b      	ldr	r3, [r7, #4]
 80095f2:	887a      	ldrh	r2, [r7, #2]
 80095f4:	80da      	strh	r2, [r3, #6]
    }
 80095f6:	bf00      	nop
 80095f8:	370c      	adds	r7, #12
 80095fa:	46bd      	mov	sp, r7
 80095fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009600:	4770      	bx	lr

08009602 <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8009602:	b580      	push	{r7, lr}
 8009604:	b082      	sub	sp, #8
 8009606:	af00      	add	r7, sp, #0
 8009608:	6078      	str	r0, [r7, #4]
 800960a:	460b      	mov	r3, r1
 800960c:	807b      	strh	r3, [r7, #2]
 800960e:	4613      	mov	r3, r2
 8009610:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	681b      	ldr	r3, [r3, #0]
 8009616:	3330      	adds	r3, #48	@ 0x30
 8009618:	681b      	ldr	r3, [r3, #0]
 800961a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800961e:	4611      	mov	r1, r2
 8009620:	6878      	ldr	r0, [r7, #4]
 8009622:	4798      	blx	r3
        setY(y);
 8009624:	687b      	ldr	r3, [r7, #4]
 8009626:	681b      	ldr	r3, [r3, #0]
 8009628:	3334      	adds	r3, #52	@ 0x34
 800962a:	681b      	ldr	r3, [r3, #0]
 800962c:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009630:	4611      	mov	r1, r2
 8009632:	6878      	ldr	r0, [r7, #4]
 8009634:	4798      	blx	r3
    }
 8009636:	bf00      	nop
 8009638:	3708      	adds	r7, #8
 800963a:	46bd      	mov	sp, r7
 800963c:	bd80      	pop	{r7, pc}

0800963e <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800963e:	b480      	push	{r7}
 8009640:	b083      	sub	sp, #12
 8009642:	af00      	add	r7, sp, #0
 8009644:	6078      	str	r0, [r7, #4]
 8009646:	460b      	mov	r3, r1
 8009648:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	887a      	ldrh	r2, [r7, #2]
 800964e:	811a      	strh	r2, [r3, #8]
    }
 8009650:	bf00      	nop
 8009652:	370c      	adds	r7, #12
 8009654:	46bd      	mov	sp, r7
 8009656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800965a:	4770      	bx	lr

0800965c <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800965c:	b480      	push	{r7}
 800965e:	b083      	sub	sp, #12
 8009660:	af00      	add	r7, sp, #0
 8009662:	6078      	str	r0, [r7, #4]
 8009664:	460b      	mov	r3, r1
 8009666:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009668:	687b      	ldr	r3, [r7, #4]
 800966a:	887a      	ldrh	r2, [r7, #2]
 800966c:	815a      	strh	r2, [r3, #10]
    }
 800966e:	bf00      	nop
 8009670:	370c      	adds	r7, #12
 8009672:	46bd      	mov	sp, r7
 8009674:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009678:	4770      	bx	lr

0800967a <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800967a:	b480      	push	{r7}
 800967c:	b083      	sub	sp, #12
 800967e:	af00      	add	r7, sp, #0
 8009680:	6078      	str	r0, [r7, #4]
    {
    }
 8009682:	bf00      	nop
 8009684:	370c      	adds	r7, #12
 8009686:	46bd      	mov	sp, r7
 8009688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800968c:	4770      	bx	lr

0800968e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800968e:	b480      	push	{r7}
 8009690:	b083      	sub	sp, #12
 8009692:	af00      	add	r7, sp, #0
 8009694:	6078      	str	r0, [r7, #4]
 8009696:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009698:	bf00      	nop
 800969a:	370c      	adds	r7, #12
 800969c:	46bd      	mov	sp, r7
 800969e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096a2:	4770      	bx	lr

080096a4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 80096a4:	b480      	push	{r7}
 80096a6:	b083      	sub	sp, #12
 80096a8:	af00      	add	r7, sp, #0
 80096aa:	6078      	str	r0, [r7, #4]
 80096ac:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 80096ae:	bf00      	nop
 80096b0:	370c      	adds	r7, #12
 80096b2:	46bd      	mov	sp, r7
 80096b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b8:	4770      	bx	lr

080096ba <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 80096ba:	b580      	push	{r7, lr}
 80096bc:	b082      	sub	sp, #8
 80096be:	af00      	add	r7, sp, #0
 80096c0:	6078      	str	r0, [r7, #4]
 80096c2:	460b      	mov	r3, r1
 80096c4:	807b      	strh	r3, [r7, #2]
 80096c6:	4613      	mov	r3, r2
 80096c8:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	681b      	ldr	r3, [r3, #0]
 80096ce:	3338      	adds	r3, #56	@ 0x38
 80096d0:	681b      	ldr	r3, [r3, #0]
 80096d2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80096d6:	4611      	mov	r1, r2
 80096d8:	6878      	ldr	r0, [r7, #4]
 80096da:	4798      	blx	r3
        setHeight(height);
 80096dc:	687b      	ldr	r3, [r7, #4]
 80096de:	681b      	ldr	r3, [r3, #0]
 80096e0:	333c      	adds	r3, #60	@ 0x3c
 80096e2:	681b      	ldr	r3, [r3, #0]
 80096e4:	f9b7 2000 	ldrsh.w	r2, [r7]
 80096e8:	4611      	mov	r1, r2
 80096ea:	6878      	ldr	r0, [r7, #4]
 80096ec:	4798      	blx	r3
    }
 80096ee:	bf00      	nop
 80096f0:	3708      	adds	r7, #8
 80096f2:	46bd      	mov	sp, r7
 80096f4:	bd80      	pop	{r7, pc}

080096f6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 80096f6:	b480      	push	{r7}
 80096f8:	b083      	sub	sp, #12
 80096fa:	af00      	add	r7, sp, #0
 80096fc:	6078      	str	r0, [r7, #4]
 80096fe:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009700:	bf00      	nop
 8009702:	370c      	adds	r7, #12
 8009704:	46bd      	mov	sp, r7
 8009706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800970a:	4770      	bx	lr

0800970c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800970c:	b480      	push	{r7}
 800970e:	b083      	sub	sp, #12
 8009710:	af00      	add	r7, sp, #0
 8009712:	6078      	str	r0, [r7, #4]
    {
    }
 8009714:	bf00      	nop
 8009716:	370c      	adds	r7, #12
 8009718:	46bd      	mov	sp, r7
 800971a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800971e:	4770      	bx	lr

08009720 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 8009720:	b480      	push	{r7}
 8009722:	b083      	sub	sp, #12
 8009724:	af00      	add	r7, sp, #0
 8009726:	6078      	str	r0, [r7, #4]
 8009728:	460b      	mov	r3, r1
 800972a:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800972c:	687b      	ldr	r3, [r7, #4]
 800972e:	78fa      	ldrb	r2, [r7, #3]
 8009730:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 8009734:	bf00      	nop
 8009736:	370c      	adds	r7, #12
 8009738:	46bd      	mov	sp, r7
 800973a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800973e:	4770      	bx	lr

08009740 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009740:	b480      	push	{r7}
 8009742:	b083      	sub	sp, #12
 8009744:	af00      	add	r7, sp, #0
 8009746:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009748:	687b      	ldr	r3, [r7, #4]
 800974a:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 800974e:	4618      	mov	r0, r3
 8009750:	370c      	adds	r7, #12
 8009752:	46bd      	mov	sp, r7
 8009754:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009758:	4770      	bx	lr

0800975a <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800975a:	b480      	push	{r7}
 800975c:	b083      	sub	sp, #12
 800975e:	af00      	add	r7, sp, #0
 8009760:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009762:	687b      	ldr	r3, [r7, #4]
 8009764:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8009768:	4618      	mov	r0, r3
 800976a:	370c      	adds	r7, #12
 800976c:	46bd      	mov	sp, r7
 800976e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009772:	4770      	bx	lr

08009774 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009774:	b580      	push	{r7, lr}
 8009776:	b082      	sub	sp, #8
 8009778:	af00      	add	r7, sp, #0
 800977a:	6078      	str	r0, [r7, #4]
 800977c:	460b      	mov	r3, r1
 800977e:	807b      	strh	r3, [r7, #2]
 8009780:	4613      	mov	r3, r2
 8009782:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	681b      	ldr	r3, [r3, #0]
 8009788:	3354      	adds	r3, #84	@ 0x54
 800978a:	681b      	ldr	r3, [r3, #0]
 800978c:	8879      	ldrh	r1, [r7, #2]
 800978e:	687a      	ldr	r2, [r7, #4]
 8009790:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009794:	b292      	uxth	r2, r2
 8009796:	1a8a      	subs	r2, r1, r2
 8009798:	b292      	uxth	r2, r2
 800979a:	b210      	sxth	r0, r2
 800979c:	8839      	ldrh	r1, [r7, #0]
 800979e:	687a      	ldr	r2, [r7, #4]
 80097a0:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 80097a4:	b292      	uxth	r2, r2
 80097a6:	1a8a      	subs	r2, r1, r2
 80097a8:	b292      	uxth	r2, r2
 80097aa:	b212      	sxth	r2, r2
 80097ac:	4601      	mov	r1, r0
 80097ae:	6878      	ldr	r0, [r7, #4]
 80097b0:	4798      	blx	r3
    }
 80097b2:	bf00      	nop
 80097b4:	3708      	adds	r7, #8
 80097b6:	46bd      	mov	sp, r7
 80097b8:	bd80      	pop	{r7, pc}

080097ba <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 80097ba:	b480      	push	{r7}
 80097bc:	b083      	sub	sp, #12
 80097be:	af00      	add	r7, sp, #0
 80097c0:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80097c2:	687b      	ldr	r3, [r7, #4]
 80097c4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80097c8:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80097d0:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80097d8:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 80097da:	bf00      	nop
 80097dc:	370c      	adds	r7, #12
 80097de:	46bd      	mov	sp, r7
 80097e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097e4:	4770      	bx	lr

080097e6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 80097e6:	b580      	push	{r7, lr}
 80097e8:	b084      	sub	sp, #16
 80097ea:	af00      	add	r7, sp, #0
 80097ec:	60f8      	str	r0, [r7, #12]
 80097ee:	60b9      	str	r1, [r7, #8]
 80097f0:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 80097f2:	68f8      	ldr	r0, [r7, #12]
 80097f4:	f7ff ffe1 	bl	80097ba <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 80097f8:	687b      	ldr	r3, [r7, #4]
 80097fa:	681a      	ldr	r2, [r3, #0]
 80097fc:	68fb      	ldr	r3, [r7, #12]
 80097fe:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	68fa      	ldr	r2, [r7, #12]
 8009804:	601a      	str	r2, [r3, #0]
    }
 8009806:	bf00      	nop
 8009808:	3710      	adds	r7, #16
 800980a:	46bd      	mov	sp, r7
 800980c:	bd80      	pop	{r7, pc}

0800980e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800980e:	b580      	push	{r7, lr}
 8009810:	b084      	sub	sp, #16
 8009812:	af00      	add	r7, sp, #0
 8009814:	60f8      	str	r0, [r7, #12]
 8009816:	607b      	str	r3, [r7, #4]
 8009818:	460b      	mov	r3, r1
 800981a:	817b      	strh	r3, [r7, #10]
 800981c:	4613      	mov	r3, r2
 800981e:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8009820:	68fb      	ldr	r3, [r7, #12]
 8009822:	4618      	mov	r0, r3
 8009824:	f7ff ff8c 	bl	8009740 <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009828:	4603      	mov	r3, r0
 800982a:	2b00      	cmp	r3, #0
 800982c:	d008      	beq.n	8009840 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800982e:	68fb      	ldr	r3, [r7, #12]
 8009830:	4618      	mov	r0, r3
 8009832:	f7ff ff92 	bl	800975a <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009836:	4603      	mov	r3, r0
 8009838:	2b00      	cmp	r3, #0
 800983a:	d001      	beq.n	8009840 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800983c:	2301      	movs	r3, #1
 800983e:	e000      	b.n	8009842 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8009840:	2300      	movs	r3, #0
 8009842:	2b00      	cmp	r3, #0
 8009844:	d002      	beq.n	800984c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009846:	68fa      	ldr	r2, [r7, #12]
 8009848:	687b      	ldr	r3, [r7, #4]
 800984a:	601a      	str	r2, [r3, #0]
        }
    }
 800984c:	bf00      	nop
 800984e:	3710      	adds	r7, #16
 8009850:	46bd      	mov	sp, r7
 8009852:	bd80      	pop	{r7, pc}

08009854 <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 8009854:	b580      	push	{r7, lr}
 8009856:	b082      	sub	sp, #8
 8009858:	af00      	add	r7, sp, #0
 800985a:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800985c:	687b      	ldr	r3, [r7, #4]
 800985e:	4618      	mov	r0, r3
 8009860:	f7ff fe22 	bl	80094a8 <_ZN8touchgfx8DrawableC1Ev>
 8009864:	4a05      	ldr	r2, [pc, #20]	@ (800987c <_ZN8touchgfx9ContainerC1Ev+0x28>)
 8009866:	687b      	ldr	r3, [r7, #4]
 8009868:	601a      	str	r2, [r3, #0]
 800986a:	687b      	ldr	r3, [r7, #4]
 800986c:	2200      	movs	r2, #0
 800986e:	629a      	str	r2, [r3, #40]	@ 0x28
    {
    }
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	4618      	mov	r0, r3
 8009874:	3708      	adds	r7, #8
 8009876:	46bd      	mov	sp, r7
 8009878:	bd80      	pop	{r7, pc}
 800987a:	bf00      	nop
 800987c:	08026b4c 	.word	0x08026b4c

08009880 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 8009880:	b480      	push	{r7}
 8009882:	b083      	sub	sp, #12
 8009884:	af00      	add	r7, sp, #0
 8009886:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 8009888:	687b      	ldr	r3, [r7, #4]
 800988a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800988c:	4618      	mov	r0, r3
 800988e:	370c      	adds	r7, #12
 8009890:	46bd      	mov	sp, r7
 8009892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009896:	4770      	bx	lr

08009898 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8009898:	b580      	push	{r7, lr}
 800989a:	b082      	sub	sp, #8
 800989c:	af00      	add	r7, sp, #0
 800989e:	6078      	str	r0, [r7, #4]
    {
 80098a0:	4a06      	ldr	r2, [pc, #24]	@ (80098bc <_ZN8touchgfx6ScreenD1Ev+0x24>)
 80098a2:	687b      	ldr	r3, [r7, #4]
 80098a4:	601a      	str	r2, [r3, #0]
    }
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	3304      	adds	r3, #4
 80098aa:	4618      	mov	r0, r3
 80098ac:	f000 f93c 	bl	8009b28 <_ZN8touchgfx9ContainerD1Ev>
 80098b0:	687b      	ldr	r3, [r7, #4]
 80098b2:	4618      	mov	r0, r3
 80098b4:	3708      	adds	r7, #8
 80098b6:	46bd      	mov	sp, r7
 80098b8:	bd80      	pop	{r7, pc}
 80098ba:	bf00      	nop
 80098bc:	080272ac 	.word	0x080272ac

080098c0 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 80098c0:	b580      	push	{r7, lr}
 80098c2:	b082      	sub	sp, #8
 80098c4:	af00      	add	r7, sp, #0
 80098c6:	6078      	str	r0, [r7, #4]
    }
 80098c8:	6878      	ldr	r0, [r7, #4]
 80098ca:	f7ff ffe5 	bl	8009898 <_ZN8touchgfx6ScreenD1Ev>
 80098ce:	213c      	movs	r1, #60	@ 0x3c
 80098d0:	6878      	ldr	r0, [r7, #4]
 80098d2:	f01a f99e 	bl	8023c12 <_ZdlPvj>
 80098d6:	687b      	ldr	r3, [r7, #4]
 80098d8:	4618      	mov	r0, r3
 80098da:	3708      	adds	r7, #8
 80098dc:	46bd      	mov	sp, r7
 80098de:	bd80      	pop	{r7, pc}

080098e0 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 80098e0:	b480      	push	{r7}
 80098e2:	b083      	sub	sp, #12
 80098e4:	af00      	add	r7, sp, #0
 80098e6:	6078      	str	r0, [r7, #4]
    {
    }
 80098e8:	bf00      	nop
 80098ea:	370c      	adds	r7, #12
 80098ec:	46bd      	mov	sp, r7
 80098ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098f2:	4770      	bx	lr

080098f4 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 80098f4:	b480      	push	{r7}
 80098f6:	b083      	sub	sp, #12
 80098f8:	af00      	add	r7, sp, #0
 80098fa:	6078      	str	r0, [r7, #4]
    {
    }
 80098fc:	bf00      	nop
 80098fe:	370c      	adds	r7, #12
 8009900:	46bd      	mov	sp, r7
 8009902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009906:	4770      	bx	lr

08009908 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8009908:	b480      	push	{r7}
 800990a:	b083      	sub	sp, #12
 800990c:	af00      	add	r7, sp, #0
 800990e:	6078      	str	r0, [r7, #4]
    {
    }
 8009910:	bf00      	nop
 8009912:	370c      	adds	r7, #12
 8009914:	46bd      	mov	sp, r7
 8009916:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991a:	4770      	bx	lr

0800991c <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800991c:	b480      	push	{r7}
 800991e:	b083      	sub	sp, #12
 8009920:	af00      	add	r7, sp, #0
 8009922:	6078      	str	r0, [r7, #4]
    {
    }
 8009924:	bf00      	nop
 8009926:	370c      	adds	r7, #12
 8009928:	46bd      	mov	sp, r7
 800992a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800992e:	4770      	bx	lr

08009930 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009930:	b480      	push	{r7}
 8009932:	b083      	sub	sp, #12
 8009934:	af00      	add	r7, sp, #0
 8009936:	6078      	str	r0, [r7, #4]
 8009938:	460b      	mov	r3, r1
 800993a:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800993c:	bf00      	nop
 800993e:	370c      	adds	r7, #12
 8009940:	46bd      	mov	sp, r7
 8009942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009946:	4770      	bx	lr

08009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8009948:	b580      	push	{r7, lr}
 800994a:	b082      	sub	sp, #8
 800994c:	af00      	add	r7, sp, #0
 800994e:	6078      	str	r0, [r7, #4]
 8009950:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8009952:	687b      	ldr	r3, [r7, #4]
 8009954:	3304      	adds	r3, #4
 8009956:	6839      	ldr	r1, [r7, #0]
 8009958:	4618      	mov	r0, r3
 800995a:	f004 ff31 	bl	800e7c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800995e:	bf00      	nop
 8009960:	3708      	adds	r7, #8
 8009962:	46bd      	mov	sp, r7
 8009964:	bd80      	pop	{r7, pc}
	...

08009968 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8009968:	b580      	push	{r7, lr}
 800996a:	b082      	sub	sp, #8
 800996c:	af00      	add	r7, sp, #0
 800996e:	6078      	str	r0, [r7, #4]
 8009970:	687b      	ldr	r3, [r7, #4]
 8009972:	4618      	mov	r0, r3
 8009974:	f7ff fd98 	bl	80094a8 <_ZN8touchgfx8DrawableC1Ev>
 8009978:	4a03      	ldr	r2, [pc, #12]	@ (8009988 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800997a:	687b      	ldr	r3, [r7, #4]
 800997c:	601a      	str	r2, [r3, #0]
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	4618      	mov	r0, r3
 8009982:	3708      	adds	r7, #8
 8009984:	46bd      	mov	sp, r7
 8009986:	bd80      	pop	{r7, pc}
 8009988:	0802637c 	.word	0x0802637c

0800998c <_ZN8touchgfx6WidgetD1Ev>:
 800998c:	b580      	push	{r7, lr}
 800998e:	b082      	sub	sp, #8
 8009990:	af00      	add	r7, sp, #0
 8009992:	6078      	str	r0, [r7, #4]
 8009994:	4a05      	ldr	r2, [pc, #20]	@ (80099ac <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009996:	687b      	ldr	r3, [r7, #4]
 8009998:	601a      	str	r2, [r3, #0]
 800999a:	687b      	ldr	r3, [r7, #4]
 800999c:	4618      	mov	r0, r3
 800999e:	f7ff fdb3 	bl	8009508 <_ZN8touchgfx8DrawableD1Ev>
 80099a2:	687b      	ldr	r3, [r7, #4]
 80099a4:	4618      	mov	r0, r3
 80099a6:	3708      	adds	r7, #8
 80099a8:	46bd      	mov	sp, r7
 80099aa:	bd80      	pop	{r7, pc}
 80099ac:	0802637c 	.word	0x0802637c

080099b0 <_ZN8touchgfx6WidgetD0Ev>:
 80099b0:	b580      	push	{r7, lr}
 80099b2:	b082      	sub	sp, #8
 80099b4:	af00      	add	r7, sp, #0
 80099b6:	6078      	str	r0, [r7, #4]
 80099b8:	6878      	ldr	r0, [r7, #4]
 80099ba:	f7ff ffe7 	bl	800998c <_ZN8touchgfx6WidgetD1Ev>
 80099be:	2128      	movs	r1, #40	@ 0x28
 80099c0:	6878      	ldr	r0, [r7, #4]
 80099c2:	f01a f926 	bl	8023c12 <_ZdlPvj>
 80099c6:	687b      	ldr	r3, [r7, #4]
 80099c8:	4618      	mov	r0, r3
 80099ca:	3708      	adds	r7, #8
 80099cc:	46bd      	mov	sp, r7
 80099ce:	bd80      	pop	{r7, pc}

080099d0 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 80099d0:	b580      	push	{r7, lr}
 80099d2:	b082      	sub	sp, #8
 80099d4:	af00      	add	r7, sp, #0
 80099d6:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 80099d8:	687b      	ldr	r3, [r7, #4]
 80099da:	4618      	mov	r0, r3
 80099dc:	2326      	movs	r3, #38	@ 0x26
 80099de:	461a      	mov	r2, r3
 80099e0:	2100      	movs	r1, #0
 80099e2:	f01a fbcc 	bl	802417e <memset>
 80099e6:	687b      	ldr	r3, [r7, #4]
 80099e8:	4618      	mov	r0, r3
 80099ea:	f7ff ffbd 	bl	8009968 <_ZN8touchgfx6WidgetC1Ev>
 80099ee:	4a09      	ldr	r2, [pc, #36]	@ (8009a14 <_ZN8touchgfx3BoxC1Ev+0x44>)
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	601a      	str	r2, [r3, #0]
 80099f4:	687b      	ldr	r3, [r7, #4]
 80099f6:	22ff      	movs	r2, #255	@ 0xff
 80099f8:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 80099fc:	687b      	ldr	r3, [r7, #4]
 80099fe:	3328      	adds	r3, #40	@ 0x28
 8009a00:	2100      	movs	r1, #0
 8009a02:	4618      	mov	r0, r3
 8009a04:	f7ff fcee 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	4618      	mov	r0, r3
 8009a0c:	3708      	adds	r7, #8
 8009a0e:	46bd      	mov	sp, r7
 8009a10:	bd80      	pop	{r7, pc}
 8009a12:	bf00      	nop
 8009a14:	08026ea8 	.word	0x08026ea8

08009a18 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 8009a18:	b480      	push	{r7}
 8009a1a:	b083      	sub	sp, #12
 8009a1c:	af00      	add	r7, sp, #0
 8009a1e:	6078      	str	r0, [r7, #4]
 8009a20:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 8009a22:	687b      	ldr	r3, [r7, #4]
 8009a24:	683a      	ldr	r2, [r7, #0]
 8009a26:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 8009a28:	bf00      	nop
 8009a2a:	370c      	adds	r7, #12
 8009a2c:	46bd      	mov	sp, r7
 8009a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a32:	4770      	bx	lr

08009a34 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 8009a34:	b480      	push	{r7}
 8009a36:	b083      	sub	sp, #12
 8009a38:	af00      	add	r7, sp, #0
 8009a3a:	6078      	str	r0, [r7, #4]
 8009a3c:	460b      	mov	r3, r1
 8009a3e:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 8009a40:	687b      	ldr	r3, [r7, #4]
 8009a42:	78fa      	ldrb	r2, [r7, #3]
 8009a44:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
    }
 8009a48:	bf00      	nop
 8009a4a:	370c      	adds	r7, #12
 8009a4c:	46bd      	mov	sp, r7
 8009a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a52:	4770      	bx	lr

08009a54 <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 8009a54:	b480      	push	{r7}
 8009a56:	b083      	sub	sp, #12
 8009a58:	af00      	add	r7, sp, #0
 8009a5a:	6078      	str	r0, [r7, #4]
 8009a5c:	460b      	mov	r3, r1
 8009a5e:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 8009a60:	4a06      	ldr	r2, [pc, #24]	@ (8009a7c <_ZN8touchgfx9TypedTextC1Et+0x28>)
 8009a62:	687b      	ldr	r3, [r7, #4]
 8009a64:	601a      	str	r2, [r3, #0]
 8009a66:	687b      	ldr	r3, [r7, #4]
 8009a68:	887a      	ldrh	r2, [r7, #2]
 8009a6a:	809a      	strh	r2, [r3, #4]
    }
 8009a6c:	687b      	ldr	r3, [r7, #4]
 8009a6e:	4618      	mov	r0, r3
 8009a70:	370c      	adds	r7, #12
 8009a72:	46bd      	mov	sp, r7
 8009a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a78:	4770      	bx	lr
 8009a7a:	bf00      	nop
 8009a7c:	08025f4c 	.word	0x08025f4c

08009a80 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 8009a80:	b580      	push	{r7, lr}
 8009a82:	b082      	sub	sp, #8
 8009a84:	af00      	add	r7, sp, #0
 8009a86:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8009a88:	687b      	ldr	r3, [r7, #4]
 8009a8a:	4618      	mov	r0, r3
 8009a8c:	2326      	movs	r3, #38	@ 0x26
 8009a8e:	461a      	mov	r2, r3
 8009a90:	2100      	movs	r1, #0
 8009a92:	f01a fb74 	bl	802417e <memset>
 8009a96:	687b      	ldr	r3, [r7, #4]
 8009a98:	4618      	mov	r0, r3
 8009a9a:	f7ff ff65 	bl	8009968 <_ZN8touchgfx6WidgetC1Ev>
 8009a9e:	4a16      	ldr	r2, [pc, #88]	@ (8009af8 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	601a      	str	r2, [r3, #0]
 8009aa4:	687b      	ldr	r3, [r7, #4]
 8009aa6:	3328      	adds	r3, #40	@ 0x28
 8009aa8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8009aac:	4618      	mov	r0, r3
 8009aae:	f7ff ffd1 	bl	8009a54 <_ZN8touchgfx9TypedTextC1Et>
 8009ab2:	687b      	ldr	r3, [r7, #4]
 8009ab4:	3330      	adds	r3, #48	@ 0x30
 8009ab6:	2100      	movs	r1, #0
 8009ab8:	4618      	mov	r0, r3
 8009aba:	f7ff fc93 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 8009abe:	687b      	ldr	r3, [r7, #4]
 8009ac0:	2200      	movs	r2, #0
 8009ac2:	869a      	strh	r2, [r3, #52]	@ 0x34
 8009ac4:	687b      	ldr	r3, [r7, #4]
 8009ac6:	22ff      	movs	r2, #255	@ 0xff
 8009ac8:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 8009acc:	687b      	ldr	r3, [r7, #4]
 8009ace:	2200      	movs	r2, #0
 8009ad0:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 8009ad4:	687b      	ldr	r3, [r7, #4]
 8009ad6:	2200      	movs	r2, #0
 8009ad8:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 8009adc:	687b      	ldr	r3, [r7, #4]
 8009ade:	2200      	movs	r2, #0
 8009ae0:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 8009ae4:	687b      	ldr	r3, [r7, #4]
 8009ae6:	333c      	adds	r3, #60	@ 0x3c
 8009ae8:	4618      	mov	r0, r3
 8009aea:	f000 f807 	bl	8009afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 8009aee:	687b      	ldr	r3, [r7, #4]
 8009af0:	4618      	mov	r0, r3
 8009af2:	3708      	adds	r7, #8
 8009af4:	46bd      	mov	sp, r7
 8009af6:	bd80      	pop	{r7, pc}
 8009af8:	08026e18 	.word	0x08026e18

08009afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 8009afc:	b580      	push	{r7, lr}
 8009afe:	b084      	sub	sp, #16
 8009b00:	af02      	add	r7, sp, #8
 8009b02:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8009b04:	6878      	ldr	r0, [r7, #4]
 8009b06:	f04f 33ff 	mov.w	r3, #4294967295
 8009b0a:	9300      	str	r3, [sp, #0]
 8009b0c:	f04f 33ff 	mov.w	r3, #4294967295
 8009b10:	2200      	movs	r2, #0
 8009b12:	2100      	movs	r1, #0
 8009b14:	f7ff fc8c 	bl	8009430 <_ZN8touchgfx4RectC1Essss>
              text(0)
 8009b18:	687b      	ldr	r3, [r7, #4]
 8009b1a:	2200      	movs	r2, #0
 8009b1c:	609a      	str	r2, [r3, #8]
        {
        }
 8009b1e:	687b      	ldr	r3, [r7, #4]
 8009b20:	4618      	mov	r0, r3
 8009b22:	3708      	adds	r7, #8
 8009b24:	46bd      	mov	sp, r7
 8009b26:	bd80      	pop	{r7, pc}

08009b28 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 8009b28:	b580      	push	{r7, lr}
 8009b2a:	b082      	sub	sp, #8
 8009b2c:	af00      	add	r7, sp, #0
 8009b2e:	6078      	str	r0, [r7, #4]
 8009b30:	4a05      	ldr	r2, [pc, #20]	@ (8009b48 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	601a      	str	r2, [r3, #0]
 8009b36:	687b      	ldr	r3, [r7, #4]
 8009b38:	4618      	mov	r0, r3
 8009b3a:	f7ff fce5 	bl	8009508 <_ZN8touchgfx8DrawableD1Ev>
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	4618      	mov	r0, r3
 8009b42:	3708      	adds	r7, #8
 8009b44:	46bd      	mov	sp, r7
 8009b46:	bd80      	pop	{r7, pc}
 8009b48:	08026b4c 	.word	0x08026b4c

08009b4c <_ZN8touchgfx9ContainerD0Ev>:
 8009b4c:	b580      	push	{r7, lr}
 8009b4e:	b082      	sub	sp, #8
 8009b50:	af00      	add	r7, sp, #0
 8009b52:	6078      	str	r0, [r7, #4]
 8009b54:	6878      	ldr	r0, [r7, #4]
 8009b56:	f7ff ffe7 	bl	8009b28 <_ZN8touchgfx9ContainerD1Ev>
 8009b5a:	212c      	movs	r1, #44	@ 0x2c
 8009b5c:	6878      	ldr	r0, [r7, #4]
 8009b5e:	f01a f858 	bl	8023c12 <_ZdlPvj>
 8009b62:	687b      	ldr	r3, [r7, #4]
 8009b64:	4618      	mov	r0, r3
 8009b66:	3708      	adds	r7, #8
 8009b68:	46bd      	mov	sp, r7
 8009b6a:	bd80      	pop	{r7, pc}

08009b6c <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 8009b6c:	b580      	push	{r7, lr}
 8009b6e:	b082      	sub	sp, #8
 8009b70:	af00      	add	r7, sp, #0
 8009b72:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 8009b74:	687b      	ldr	r3, [r7, #4]
 8009b76:	4618      	mov	r0, r3
 8009b78:	f7ff fe6c 	bl	8009854 <_ZN8touchgfx9ContainerC1Ev>
 8009b7c:	4a0b      	ldr	r2, [pc, #44]	@ (8009bac <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 8009b7e:	687b      	ldr	r3, [r7, #4]
 8009b80:	601a      	str	r2, [r3, #0]
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	2200      	movs	r2, #0
 8009b86:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 8009b8a:	687b      	ldr	r3, [r7, #4]
 8009b8c:	22ff      	movs	r2, #255	@ 0xff
 8009b8e:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 8009b92:	687b      	ldr	r3, [r7, #4]
 8009b94:	2200      	movs	r2, #0
 8009b96:	631a      	str	r2, [r3, #48]	@ 0x30
    {
        setTouchable(true);
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	2101      	movs	r1, #1
 8009b9c:	4618      	mov	r0, r3
 8009b9e:	f7ff fdbf 	bl	8009720 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 8009ba2:	687b      	ldr	r3, [r7, #4]
 8009ba4:	4618      	mov	r0, r3
 8009ba6:	3708      	adds	r7, #8
 8009ba8:	46bd      	mov	sp, r7
 8009baa:	bd80      	pop	{r7, pc}
 8009bac:	080262e0 	.word	0x080262e0

08009bb0 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 8009bb0:	b580      	push	{r7, lr}
 8009bb2:	b082      	sub	sp, #8
 8009bb4:	af00      	add	r7, sp, #0
 8009bb6:	6078      	str	r0, [r7, #4]
 8009bb8:	460b      	mov	r3, r1
 8009bba:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 8009bbc:	687b      	ldr	r3, [r7, #4]
 8009bbe:	78fa      	ldrb	r2, [r7, #3]
 8009bc0:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        handlePressedUpdated();
 8009bc4:	687b      	ldr	r3, [r7, #4]
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	338c      	adds	r3, #140	@ 0x8c
 8009bca:	681b      	ldr	r3, [r3, #0]
 8009bcc:	6878      	ldr	r0, [r7, #4]
 8009bce:	4798      	blx	r3
    }
 8009bd0:	bf00      	nop
 8009bd2:	3708      	adds	r7, #8
 8009bd4:	46bd      	mov	sp, r7
 8009bd6:	bd80      	pop	{r7, pc}

08009bd8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed() const
 8009bd8:	b480      	push	{r7}
 8009bda:	b083      	sub	sp, #12
 8009bdc:	af00      	add	r7, sp, #0
 8009bde:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 8009be0:	687b      	ldr	r3, [r7, #4]
 8009be2:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
    }
 8009be6:	4618      	mov	r0, r3
 8009be8:	370c      	adds	r7, #12
 8009bea:	46bd      	mov	sp, r7
 8009bec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bf0:	4770      	bx	lr

08009bf2 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 8009bf2:	b480      	push	{r7}
 8009bf4:	b083      	sub	sp, #12
 8009bf6:	af00      	add	r7, sp, #0
 8009bf8:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 8009bfa:	687b      	ldr	r3, [r7, #4]
 8009bfc:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
    }
 8009c00:	4618      	mov	r0, r3
 8009c02:	370c      	adds	r7, #12
 8009c04:	46bd      	mov	sp, r7
 8009c06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c0a:	4770      	bx	lr

08009c0c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 8009c0c:	b480      	push	{r7}
 8009c0e:	b083      	sub	sp, #12
 8009c10:	af00      	add	r7, sp, #0
 8009c12:	6078      	str	r0, [r7, #4]
 8009c14:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 8009c16:	687b      	ldr	r3, [r7, #4]
 8009c18:	683a      	ldr	r2, [r7, #0]
 8009c1a:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 8009c1c:	bf00      	nop
 8009c1e:	370c      	adds	r7, #12
 8009c20:	46bd      	mov	sp, r7
 8009c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c26:	4770      	bx	lr

08009c28 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8009c28:	b580      	push	{r7, lr}
 8009c2a:	b082      	sub	sp, #8
 8009c2c:	af00      	add	r7, sp, #0
 8009c2e:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 8009c30:	687b      	ldr	r3, [r7, #4]
 8009c32:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009c34:	2b00      	cmp	r3, #0
 8009c36:	d00d      	beq.n	8009c54 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 8009c38:	687b      	ldr	r3, [r7, #4]
 8009c3a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8009c3c:	687b      	ldr	r3, [r7, #4]
 8009c3e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009c40:	681b      	ldr	r3, [r3, #0]
 8009c42:	330c      	adds	r3, #12
 8009c44:	681b      	ldr	r3, [r3, #0]
 8009c46:	4610      	mov	r0, r2
 8009c48:	4798      	blx	r3
 8009c4a:	4603      	mov	r3, r0
 8009c4c:	2b00      	cmp	r3, #0
 8009c4e:	d001      	beq.n	8009c54 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 8009c50:	2301      	movs	r3, #1
 8009c52:	e000      	b.n	8009c56 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 8009c54:	2300      	movs	r3, #0
 8009c56:	2b00      	cmp	r3, #0
 8009c58:	d009      	beq.n	8009c6e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 8009c5a:	687b      	ldr	r3, [r7, #4]
 8009c5c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8009c5e:	687b      	ldr	r3, [r7, #4]
 8009c60:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8009c62:	681b      	ldr	r3, [r3, #0]
 8009c64:	3308      	adds	r3, #8
 8009c66:	681b      	ldr	r3, [r3, #0]
 8009c68:	6879      	ldr	r1, [r7, #4]
 8009c6a:	4610      	mov	r0, r2
 8009c6c:	4798      	blx	r3
        }
    }
 8009c6e:	bf00      	nop
 8009c70:	3708      	adds	r7, #8
 8009c72:	46bd      	mov	sp, r7
 8009c74:	bd80      	pop	{r7, pc}

08009c76 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 8009c76:	b480      	push	{r7}
 8009c78:	b083      	sub	sp, #12
 8009c7a:	af00      	add	r7, sp, #0
 8009c7c:	6078      	str	r0, [r7, #4]
    {
    }
 8009c7e:	bf00      	nop
 8009c80:	370c      	adds	r7, #12
 8009c82:	46bd      	mov	sp, r7
 8009c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c88:	4770      	bx	lr

08009c8a <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 8009c8a:	b480      	push	{r7}
 8009c8c:	b083      	sub	sp, #12
 8009c8e:	af00      	add	r7, sp, #0
 8009c90:	6078      	str	r0, [r7, #4]
    {
    }
 8009c92:	bf00      	nop
 8009c94:	370c      	adds	r7, #12
 8009c96:	46bd      	mov	sp, r7
 8009c98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c9c:	4770      	bx	lr
	...

08009ca0 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 8009ca0:	b580      	push	{r7, lr}
 8009ca2:	b082      	sub	sp, #8
 8009ca4:	af00      	add	r7, sp, #0
 8009ca6:	6078      	str	r0, [r7, #4]
 8009ca8:	4a05      	ldr	r2, [pc, #20]	@ (8009cc0 <_ZN8touchgfx3BoxD1Ev+0x20>)
 8009caa:	687b      	ldr	r3, [r7, #4]
 8009cac:	601a      	str	r2, [r3, #0]
 8009cae:	687b      	ldr	r3, [r7, #4]
 8009cb0:	4618      	mov	r0, r3
 8009cb2:	f7ff fe6b 	bl	800998c <_ZN8touchgfx6WidgetD1Ev>
 8009cb6:	687b      	ldr	r3, [r7, #4]
 8009cb8:	4618      	mov	r0, r3
 8009cba:	3708      	adds	r7, #8
 8009cbc:	46bd      	mov	sp, r7
 8009cbe:	bd80      	pop	{r7, pc}
 8009cc0:	08026ea8 	.word	0x08026ea8

08009cc4 <_ZN8touchgfx3BoxD0Ev>:
 8009cc4:	b580      	push	{r7, lr}
 8009cc6:	b082      	sub	sp, #8
 8009cc8:	af00      	add	r7, sp, #0
 8009cca:	6078      	str	r0, [r7, #4]
 8009ccc:	6878      	ldr	r0, [r7, #4]
 8009cce:	f7ff ffe7 	bl	8009ca0 <_ZN8touchgfx3BoxD1Ev>
 8009cd2:	212c      	movs	r1, #44	@ 0x2c
 8009cd4:	6878      	ldr	r0, [r7, #4]
 8009cd6:	f019 ff9c 	bl	8023c12 <_ZdlPvj>
 8009cda:	687b      	ldr	r3, [r7, #4]
 8009cdc:	4618      	mov	r0, r3
 8009cde:	3708      	adds	r7, #8
 8009ce0:	46bd      	mov	sp, r7
 8009ce2:	bd80      	pop	{r7, pc}

08009ce4 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 8009ce4:	b580      	push	{r7, lr}
 8009ce6:	b082      	sub	sp, #8
 8009ce8:	af00      	add	r7, sp, #0
 8009cea:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 8009cec:	687b      	ldr	r3, [r7, #4]
 8009cee:	4618      	mov	r0, r3
 8009cf0:	f7ff fe6e 	bl	80099d0 <_ZN8touchgfx3BoxC1Ev>
 8009cf4:	4a08      	ldr	r2, [pc, #32]	@ (8009d18 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 8009cf6:	687b      	ldr	r3, [r7, #4]
 8009cf8:	601a      	str	r2, [r3, #0]
 8009cfa:	687b      	ldr	r3, [r7, #4]
 8009cfc:	332c      	adds	r3, #44	@ 0x2c
 8009cfe:	2100      	movs	r1, #0
 8009d00:	4618      	mov	r0, r3
 8009d02:	f7ff fb6f 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	2200      	movs	r2, #0
 8009d0a:	861a      	strh	r2, [r3, #48]	@ 0x30
    {
    }
 8009d0c:	687b      	ldr	r3, [r7, #4]
 8009d0e:	4618      	mov	r0, r3
 8009d10:	3708      	adds	r7, #8
 8009d12:	46bd      	mov	sp, r7
 8009d14:	bd80      	pop	{r7, pc}
 8009d16:	bf00      	nop
 8009d18:	08027014 	.word	0x08027014

08009d1c <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 8009d1c:	b480      	push	{r7}
 8009d1e:	b083      	sub	sp, #12
 8009d20:	af00      	add	r7, sp, #0
 8009d22:	6078      	str	r0, [r7, #4]
 8009d24:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	683a      	ldr	r2, [r7, #0]
 8009d2a:	62da      	str	r2, [r3, #44]	@ 0x2c
    }
 8009d2c:	bf00      	nop
 8009d2e:	370c      	adds	r7, #12
 8009d30:	46bd      	mov	sp, r7
 8009d32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d36:	4770      	bx	lr

08009d38 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 8009d38:	b480      	push	{r7}
 8009d3a:	b083      	sub	sp, #12
 8009d3c:	af00      	add	r7, sp, #0
 8009d3e:	6078      	str	r0, [r7, #4]
 8009d40:	460b      	mov	r3, r1
 8009d42:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	887a      	ldrh	r2, [r7, #2]
 8009d48:	861a      	strh	r2, [r3, #48]	@ 0x30
    }
 8009d4a:	bf00      	nop
 8009d4c:	370c      	adds	r7, #12
 8009d4e:	46bd      	mov	sp, r7
 8009d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d54:	4770      	bx	lr

08009d56 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009d56:	b580      	push	{r7, lr}
 8009d58:	b084      	sub	sp, #16
 8009d5a:	af00      	add	r7, sp, #0
 8009d5c:	6078      	str	r0, [r7, #4]
 8009d5e:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 8009d60:	687b      	ldr	r3, [r7, #4]
 8009d62:	4618      	mov	r0, r3
 8009d64:	f7ff ff38 	bl	8009bd8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 8009d68:	4603      	mov	r3, r0
 8009d6a:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8009d6c:	6838      	ldr	r0, [r7, #0]
 8009d6e:	f7ff fb8f 	bl	8009490 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 8009d72:	4603      	mov	r3, r0
 8009d74:	2b00      	cmp	r3, #0
 8009d76:	bf0c      	ite	eq
 8009d78:	2301      	moveq	r3, #1
 8009d7a:	2300      	movne	r3, #0
 8009d7c:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8009d7e:	7bbb      	ldrb	r3, [r7, #14]
 8009d80:	2b00      	cmp	r3, #0
 8009d82:	d005      	beq.n	8009d90 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 8009d84:	7bfb      	ldrb	r3, [r7, #15]
 8009d86:	f083 0301 	eor.w	r3, r3, #1
 8009d8a:	b2db      	uxtb	r3, r3
 8009d8c:	2b00      	cmp	r3, #0
 8009d8e:	d108      	bne.n	8009da2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 8009d90:	7bbb      	ldrb	r3, [r7, #14]
 8009d92:	f083 0301 	eor.w	r3, r3, #1
 8009d96:	b2db      	uxtb	r3, r3
 8009d98:	2b00      	cmp	r3, #0
 8009d9a:	d00f      	beq.n	8009dbc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 8009d9c:	7bfb      	ldrb	r3, [r7, #15]
 8009d9e:	2b00      	cmp	r3, #0
 8009da0:	d00c      	beq.n	8009dbc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 8009da2:	687b      	ldr	r3, [r7, #4]
 8009da4:	7bba      	ldrb	r2, [r7, #14]
 8009da6:	4611      	mov	r1, r2
 8009da8:	4618      	mov	r0, r3
 8009daa:	f7ff ff01 	bl	8009bb0 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 8009dae:	687a      	ldr	r2, [r7, #4]
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	681b      	ldr	r3, [r3, #0]
 8009db4:	3314      	adds	r3, #20
 8009db6:	681b      	ldr	r3, [r3, #0]
 8009db8:	4610      	mov	r0, r2
 8009dba:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8009dbc:	7bfb      	ldrb	r3, [r7, #15]
 8009dbe:	2b00      	cmp	r3, #0
 8009dc0:	d007      	beq.n	8009dd2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 8009dc2:	6838      	ldr	r0, [r7, #0]
 8009dc4:	f7ff fb64 	bl	8009490 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 8009dc8:	4603      	mov	r3, r0
 8009dca:	2b01      	cmp	r3, #1
 8009dcc:	d101      	bne.n	8009dd2 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 8009dce:	2301      	movs	r3, #1
 8009dd0:	e000      	b.n	8009dd4 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 8009dd2:	2300      	movs	r3, #0
 8009dd4:	2b00      	cmp	r3, #0
 8009dd6:	d006      	beq.n	8009de6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 8009dd8:	687a      	ldr	r2, [r7, #4]
 8009dda:	687b      	ldr	r3, [r7, #4]
 8009ddc:	681b      	ldr	r3, [r3, #0]
 8009dde:	3388      	adds	r3, #136	@ 0x88
 8009de0:	681b      	ldr	r3, [r3, #0]
 8009de2:	4610      	mov	r0, r2
 8009de4:	4798      	blx	r3
        }
    }
 8009de6:	bf00      	nop
 8009de8:	3710      	adds	r7, #16
 8009dea:	46bd      	mov	sp, r7
 8009dec:	bd80      	pop	{r7, pc}
	...

08009df0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 8009df0:	b580      	push	{r7, lr}
 8009df2:	b082      	sub	sp, #8
 8009df4:	af00      	add	r7, sp, #0
 8009df6:	6078      	str	r0, [r7, #4]
 8009df8:	4a05      	ldr	r2, [pc, #20]	@ (8009e10 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 8009dfa:	687b      	ldr	r3, [r7, #4]
 8009dfc:	601a      	str	r2, [r3, #0]
 8009dfe:	687b      	ldr	r3, [r7, #4]
 8009e00:	4618      	mov	r0, r3
 8009e02:	f7ff fe91 	bl	8009b28 <_ZN8touchgfx9ContainerD1Ev>
 8009e06:	687b      	ldr	r3, [r7, #4]
 8009e08:	4618      	mov	r0, r3
 8009e0a:	3708      	adds	r7, #8
 8009e0c:	46bd      	mov	sp, r7
 8009e0e:	bd80      	pop	{r7, pc}
 8009e10:	080262e0 	.word	0x080262e0

08009e14 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 8009e14:	b580      	push	{r7, lr}
 8009e16:	b082      	sub	sp, #8
 8009e18:	af00      	add	r7, sp, #0
 8009e1a:	6078      	str	r0, [r7, #4]
 8009e1c:	6878      	ldr	r0, [r7, #4]
 8009e1e:	f7ff ffe7 	bl	8009df0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 8009e22:	2134      	movs	r1, #52	@ 0x34
 8009e24:	6878      	ldr	r0, [r7, #4]
 8009e26:	f019 fef4 	bl	8023c12 <_ZdlPvj>
 8009e2a:	687b      	ldr	r3, [r7, #4]
 8009e2c:	4618      	mov	r0, r3
 8009e2e:	3708      	adds	r7, #8
 8009e30:	46bd      	mov	sp, r7
 8009e32:	bd80      	pop	{r7, pc}

08009e34 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 8009e34:	b580      	push	{r7, lr}
 8009e36:	b082      	sub	sp, #8
 8009e38:	af00      	add	r7, sp, #0
 8009e3a:	6078      	str	r0, [r7, #4]
 8009e3c:	4a08      	ldr	r2, [pc, #32]	@ (8009e60 <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 8009e3e:	687b      	ldr	r3, [r7, #4]
 8009e40:	601a      	str	r2, [r3, #0]
 8009e42:	687b      	ldr	r3, [r7, #4]
 8009e44:	3328      	adds	r3, #40	@ 0x28
 8009e46:	4618      	mov	r0, r3
 8009e48:	f7fe fa48 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	4618      	mov	r0, r3
 8009e50:	f7ff fd9c 	bl	800998c <_ZN8touchgfx6WidgetD1Ev>
 8009e54:	687b      	ldr	r3, [r7, #4]
 8009e56:	4618      	mov	r0, r3
 8009e58:	3708      	adds	r7, #8
 8009e5a:	46bd      	mov	sp, r7
 8009e5c:	bd80      	pop	{r7, pc}
 8009e5e:	bf00      	nop
 8009e60:	08026e18 	.word	0x08026e18

08009e64 <_ZN8touchgfx8TextAreaD0Ev>:
 8009e64:	b580      	push	{r7, lr}
 8009e66:	b082      	sub	sp, #8
 8009e68:	af00      	add	r7, sp, #0
 8009e6a:	6078      	str	r0, [r7, #4]
 8009e6c:	6878      	ldr	r0, [r7, #4]
 8009e6e:	f7ff ffe1 	bl	8009e34 <_ZN8touchgfx8TextAreaD1Ev>
 8009e72:	2148      	movs	r1, #72	@ 0x48
 8009e74:	6878      	ldr	r0, [r7, #4]
 8009e76:	f019 fecc 	bl	8023c12 <_ZdlPvj>
 8009e7a:	687b      	ldr	r3, [r7, #4]
 8009e7c:	4618      	mov	r0, r3
 8009e7e:	3708      	adds	r7, #8
 8009e80:	46bd      	mov	sp, r7
 8009e82:	bd80      	pop	{r7, pc}

08009e84 <_ZN8touchgfx14AbstractButtonD1Ev>:
/**
 * This class defines an abstract interface for button-like elements. A button is a clickable
 * element that has two states: pressed and released. A button also has an action that
 * is executed when the button goes from state pressed to state released.
 */
class AbstractButton : public Widget
 8009e84:	b580      	push	{r7, lr}
 8009e86:	b082      	sub	sp, #8
 8009e88:	af00      	add	r7, sp, #0
 8009e8a:	6078      	str	r0, [r7, #4]
 8009e8c:	4a05      	ldr	r2, [pc, #20]	@ (8009ea4 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 8009e8e:	687b      	ldr	r3, [r7, #4]
 8009e90:	601a      	str	r2, [r3, #0]
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	4618      	mov	r0, r3
 8009e96:	f7ff fd79 	bl	800998c <_ZN8touchgfx6WidgetD1Ev>
 8009e9a:	687b      	ldr	r3, [r7, #4]
 8009e9c:	4618      	mov	r0, r3
 8009e9e:	3708      	adds	r7, #8
 8009ea0:	46bd      	mov	sp, r7
 8009ea2:	bd80      	pop	{r7, pc}
 8009ea4:	08026d34 	.word	0x08026d34

08009ea8 <_ZN8touchgfx14AbstractButtonD0Ev>:
 8009ea8:	b580      	push	{r7, lr}
 8009eaa:	b082      	sub	sp, #8
 8009eac:	af00      	add	r7, sp, #0
 8009eae:	6078      	str	r0, [r7, #4]
 8009eb0:	6878      	ldr	r0, [r7, #4]
 8009eb2:	f7ff ffe7 	bl	8009e84 <_ZN8touchgfx14AbstractButtonD1Ev>
 8009eb6:	2130      	movs	r1, #48	@ 0x30
 8009eb8:	6878      	ldr	r0, [r7, #4]
 8009eba:	f019 feaa 	bl	8023c12 <_ZdlPvj>
 8009ebe:	687b      	ldr	r3, [r7, #4]
 8009ec0:	4618      	mov	r0, r3
 8009ec2:	3708      	adds	r7, #8
 8009ec4:	46bd      	mov	sp, r7
 8009ec6:	bd80      	pop	{r7, pc}

08009ec8 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 8009ec8:	b480      	push	{r7}
 8009eca:	b083      	sub	sp, #12
 8009ecc:	af00      	add	r7, sp, #0
 8009ece:	6078      	str	r0, [r7, #4]
 8009ed0:	460b      	mov	r3, r1
 8009ed2:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 8009ed4:	687b      	ldr	r3, [r7, #4]
 8009ed6:	887a      	ldrh	r2, [r7, #2]
 8009ed8:	871a      	strh	r2, [r3, #56]	@ 0x38
    }
 8009eda:	bf00      	nop
 8009edc:	370c      	adds	r7, #12
 8009ede:	46bd      	mov	sp, r7
 8009ee0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ee4:	4770      	bx	lr

08009ee6 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 8009ee6:	b480      	push	{r7}
 8009ee8:	b083      	sub	sp, #12
 8009eea:	af00      	add	r7, sp, #0
 8009eec:	6078      	str	r0, [r7, #4]
 8009eee:	460b      	mov	r3, r1
 8009ef0:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 8009ef2:	687b      	ldr	r3, [r7, #4]
 8009ef4:	887a      	ldrh	r2, [r7, #2]
 8009ef6:	875a      	strh	r2, [r3, #58]	@ 0x3a
    }
 8009ef8:	bf00      	nop
 8009efa:	370c      	adds	r7, #12
 8009efc:	46bd      	mov	sp, r7
 8009efe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f02:	4770      	bx	lr

08009f04 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 8009f04:	b580      	push	{r7, lr}
 8009f06:	b082      	sub	sp, #8
 8009f08:	af00      	add	r7, sp, #0
 8009f0a:	6078      	str	r0, [r7, #4]
 8009f0c:	460b      	mov	r3, r1
 8009f0e:	807b      	strh	r3, [r7, #2]
 8009f10:	4613      	mov	r3, r2
 8009f12:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 8009f14:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8009f18:	4619      	mov	r1, r3
 8009f1a:	6878      	ldr	r0, [r7, #4]
 8009f1c:	f7ff ffd4 	bl	8009ec8 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 8009f20:	f9b7 3000 	ldrsh.w	r3, [r7]
 8009f24:	4619      	mov	r1, r3
 8009f26:	6878      	ldr	r0, [r7, #4]
 8009f28:	f7ff ffdd 	bl	8009ee6 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 8009f2c:	bf00      	nop
 8009f2e:	3708      	adds	r7, #8
 8009f30:	46bd      	mov	sp, r7
 8009f32:	bd80      	pop	{r7, pc}

08009f34 <_ZN23humidity_screenViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 8009f34:	b480      	push	{r7}
 8009f36:	b083      	sub	sp, #12
 8009f38:	af00      	add	r7, sp, #0
 8009f3a:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in humidity_screen
    }
 8009f3c:	bf00      	nop
 8009f3e:	370c      	adds	r7, #12
 8009f40:	46bd      	mov	sp, r7
 8009f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f46:	4770      	bx	lr

08009f48 <_ZN23humidity_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 8009f48:	b580      	push	{r7, lr}
 8009f4a:	b082      	sub	sp, #8
 8009f4c:	af00      	add	r7, sp, #0
 8009f4e:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8009f50:	f008 f906 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 8009f54:	4603      	mov	r3, r0
    }
 8009f56:	4618      	mov	r0, r3
 8009f58:	3708      	adds	r7, #8
 8009f5a:	46bd      	mov	sp, r7
 8009f5c:	bd80      	pop	{r7, pc}
	...

08009f60 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>:
class View : public Screen
 8009f60:	b580      	push	{r7, lr}
 8009f62:	b082      	sub	sp, #8
 8009f64:	af00      	add	r7, sp, #0
 8009f66:	6078      	str	r0, [r7, #4]
 8009f68:	4a05      	ldr	r2, [pc, #20]	@ (8009f80 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev+0x20>)
 8009f6a:	687b      	ldr	r3, [r7, #4]
 8009f6c:	601a      	str	r2, [r3, #0]
 8009f6e:	687b      	ldr	r3, [r7, #4]
 8009f70:	4618      	mov	r0, r3
 8009f72:	f7ff fc91 	bl	8009898 <_ZN8touchgfx6ScreenD1Ev>
 8009f76:	687b      	ldr	r3, [r7, #4]
 8009f78:	4618      	mov	r0, r3
 8009f7a:	3708      	adds	r7, #8
 8009f7c:	46bd      	mov	sp, r7
 8009f7e:	bd80      	pop	{r7, pc}
 8009f80:	080261f8 	.word	0x080261f8

08009f84 <_ZN8touchgfx4ViewI24humidity_screenPresenterED0Ev>:
 8009f84:	b580      	push	{r7, lr}
 8009f86:	b082      	sub	sp, #8
 8009f88:	af00      	add	r7, sp, #0
 8009f8a:	6078      	str	r0, [r7, #4]
 8009f8c:	6878      	ldr	r0, [r7, #4]
 8009f8e:	f7ff ffe7 	bl	8009f60 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 8009f92:	2140      	movs	r1, #64	@ 0x40
 8009f94:	6878      	ldr	r0, [r7, #4]
 8009f96:	f019 fe3c 	bl	8023c12 <_ZdlPvj>
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	4618      	mov	r0, r3
 8009f9e:	3708      	adds	r7, #8
 8009fa0:	46bd      	mov	sp, r7
 8009fa2:	bd80      	pop	{r7, pc}

08009fa4 <_ZN23humidity_screenViewBaseC1Ev>:
#include <gui_generated/humidity_screen_screen/humidity_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

humidity_screenViewBase::humidity_screenViewBase() :
 8009fa4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009fa8:	b0ac      	sub	sp, #176	@ 0xb0
 8009faa:	af02      	add	r7, sp, #8
 8009fac:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &humidity_screenViewBase::flexButtonCallbackHandler)
 8009fae:	697b      	ldr	r3, [r7, #20]
 8009fb0:	4618      	mov	r0, r3
 8009fb2:	f000 fae3 	bl	800a57c <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>
 8009fb6:	4adf      	ldr	r2, [pc, #892]	@ (800a334 <_ZN23humidity_screenViewBaseC1Ev+0x390>)
 8009fb8:	697b      	ldr	r3, [r7, #20]
 8009fba:	601a      	str	r2, [r3, #0]
 8009fbc:	697b      	ldr	r3, [r7, #20]
 8009fbe:	3340      	adds	r3, #64	@ 0x40
 8009fc0:	4618      	mov	r0, r3
 8009fc2:	f7ff fd05 	bl	80099d0 <_ZN8touchgfx3BoxC1Ev>
 8009fc6:	697b      	ldr	r3, [r7, #20]
 8009fc8:	336c      	adds	r3, #108	@ 0x6c
 8009fca:	4618      	mov	r0, r3
 8009fcc:	f7ff fd58 	bl	8009a80 <_ZN8touchgfx8TextAreaC1Ev>
 8009fd0:	697b      	ldr	r3, [r7, #20]
 8009fd2:	33b4      	adds	r3, #180	@ 0xb4
 8009fd4:	4618      	mov	r0, r3
 8009fd6:	f000 fb3d 	bl	800a654 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8009fda:	697b      	ldr	r3, [r7, #20]
 8009fdc:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 8009fe0:	4618      	mov	r0, r3
 8009fe2:	f7ff fd4d 	bl	8009a80 <_ZN8touchgfx8TextAreaC1Ev>
 8009fe6:	697b      	ldr	r3, [r7, #20]
 8009fe8:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 8009fec:	4618      	mov	r0, r3
 8009fee:	f006 fbb5 	bl	801075c <_ZN8touchgfx14ButtonWithIconC1Ev>
 8009ff2:	697b      	ldr	r3, [r7, #20]
 8009ff4:	f503 73d8 	add.w	r3, r3, #432	@ 0x1b0
 8009ff8:	4618      	mov	r0, r3
 8009ffa:	f006 fbaf 	bl	801075c <_ZN8touchgfx14ButtonWithIconC1Ev>
 8009ffe:	697b      	ldr	r3, [r7, #20]
 800a000:	f503 70f6 	add.w	r0, r3, #492	@ 0x1ec
 800a004:	4bcc      	ldr	r3, [pc, #816]	@ (800a338 <_ZN23humidity_screenViewBaseC1Ev+0x394>)
 800a006:	627b      	str	r3, [r7, #36]	@ 0x24
 800a008:	2300      	movs	r3, #0
 800a00a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a00c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800a010:	cb0c      	ldmia	r3, {r2, r3}
 800a012:	6979      	ldr	r1, [r7, #20]
 800a014:	f000 fb6e 	bl	800a6f4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800a018:	697b      	ldr	r3, [r7, #20]
 800a01a:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800a01e:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800a022:	9300      	str	r3, [sp, #0]
 800a024:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800a028:	2200      	movs	r2, #0
 800a02a:	2100      	movs	r1, #0
 800a02c:	f7ff faaa 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800a030:	697b      	ldr	r3, [r7, #20]
 800a032:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800a036:	2300      	movs	r3, #0
 800a038:	f887 307c 	strb.w	r3, [r7, #124]	@ 0x7c
 800a03c:	2300      	movs	r3, #0
 800a03e:	f887 307b 	strb.w	r3, [r7, #123]	@ 0x7b
 800a042:	2300      	movs	r3, #0
 800a044:	f887 307a 	strb.w	r3, [r7, #122]	@ 0x7a
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a048:	f897 307c 	ldrb.w	r3, [r7, #124]	@ 0x7c
 800a04c:	041a      	lsls	r2, r3, #16
 800a04e:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 800a052:	021b      	lsls	r3, r3, #8
 800a054:	431a      	orrs	r2, r3
 800a056:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 800a05a:	4313      	orrs	r3, r2
 800a05c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a060:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800a064:	4611      	mov	r1, r2
 800a066:	4618      	mov	r0, r3
 800a068:	f7ff f9bc 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800a06c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a06e:	4619      	mov	r1, r3
 800a070:	4620      	mov	r0, r4
 800a072:	f7ff fcd1 	bl	8009a18 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800a076:	697a      	ldr	r2, [r7, #20]
 800a078:	697b      	ldr	r3, [r7, #20]
 800a07a:	3340      	adds	r3, #64	@ 0x40
 800a07c:	4619      	mov	r1, r3
 800a07e:	4610      	mov	r0, r2
 800a080:	f7ff fc62 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text.setPosition(87, 18, 306, 48);
 800a084:	697b      	ldr	r3, [r7, #20]
 800a086:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800a08a:	2330      	movs	r3, #48	@ 0x30
 800a08c:	9300      	str	r3, [sp, #0]
 800a08e:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800a092:	2212      	movs	r2, #18
 800a094:	2157      	movs	r1, #87	@ 0x57
 800a096:	f7ff fa75 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a09a:	697b      	ldr	r3, [r7, #20]
 800a09c:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800a0a0:	23ff      	movs	r3, #255	@ 0xff
 800a0a2:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 800a0a6:	23ff      	movs	r3, #255	@ 0xff
 800a0a8:	f887 307e 	strb.w	r3, [r7, #126]	@ 0x7e
 800a0ac:	23ff      	movs	r3, #255	@ 0xff
 800a0ae:	f887 307d 	strb.w	r3, [r7, #125]	@ 0x7d
 800a0b2:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 800a0b6:	041a      	lsls	r2, r3, #16
 800a0b8:	f897 307e 	ldrb.w	r3, [r7, #126]	@ 0x7e
 800a0bc:	021b      	lsls	r3, r3, #8
 800a0be:	431a      	orrs	r2, r3
 800a0c0:	f897 307d 	ldrb.w	r3, [r7, #125]	@ 0x7d
 800a0c4:	4313      	orrs	r3, r2
 800a0c6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a0ca:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800a0ce:	4611      	mov	r1, r2
 800a0d0:	4618      	mov	r0, r3
 800a0d2:	f7ff f987 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800a0d6:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800a0d8:	f8c7 4080 	str.w	r4, [r7, #128]	@ 0x80
 800a0dc:	623b      	str	r3, [r7, #32]
        color = newColor;
 800a0de:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800a0e2:	6a3a      	ldr	r2, [r7, #32]
 800a0e4:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a0e6:	bf00      	nop
    text.setLinespacing(0);
 800a0e8:	697b      	ldr	r3, [r7, #20]
 800a0ea:	336c      	adds	r3, #108	@ 0x6c
 800a0ec:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800a0f0:	2300      	movs	r3, #0
 800a0f2:	f8a7 3086 	strh.w	r3, [r7, #134]	@ 0x86
        linespace = space;
 800a0f6:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800a0fa:	f8b7 2086 	ldrh.w	r2, [r7, #134]	@ 0x86
 800a0fe:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a100:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800a104:	681b      	ldr	r3, [r3, #0]
 800a106:	3384      	adds	r3, #132	@ 0x84
 800a108:	681b      	ldr	r3, [r3, #0]
 800a10a:	f8d7 4088 	ldr.w	r4, [r7, #136]	@ 0x88
 800a10e:	463a      	mov	r2, r7
 800a110:	f8d7 1088 	ldr.w	r1, [r7, #136]	@ 0x88
 800a114:	4610      	mov	r0, r2
 800a116:	4798      	blx	r3
 800a118:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a11c:	463a      	mov	r2, r7
 800a11e:	ca07      	ldmia	r2, {r0, r1, r2}
 800a120:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a124:	bf00      	nop
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5FNA));
 800a126:	697b      	ldr	r3, [r7, #20]
 800a128:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800a12c:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800a130:	2106      	movs	r1, #6
 800a132:	4618      	mov	r0, r3
 800a134:	f7ff fc8e 	bl	8009a54 <_ZN8touchgfx9TypedTextC1Et>
 800a138:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800a13c:	4619      	mov	r1, r3
 800a13e:	4620      	mov	r0, r4
 800a140:	f006 f880 	bl	8010244 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a144:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800a148:	4618      	mov	r0, r3
 800a14a:	f7fe f8c7 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(text);
 800a14e:	697a      	ldr	r2, [r7, #20]
 800a150:	697b      	ldr	r3, [r7, #20]
 800a152:	336c      	adds	r3, #108	@ 0x6c
 800a154:	4619      	mov	r1, r3
 800a156:	4610      	mov	r0, r2
 800a158:	f7ff fbf6 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800a15c:	697b      	ldr	r3, [r7, #20]
 800a15e:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800a162:	2332      	movs	r3, #50	@ 0x32
 800a164:	9300      	str	r3, [sp, #0]
 800a166:	2332      	movs	r3, #50	@ 0x32
 800a168:	2200      	movs	r2, #0
 800a16a:	2100      	movs	r1, #0
 800a16c:	f000 fae2 	bl	800a734 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800a170:	697b      	ldr	r3, [r7, #20]
 800a172:	33b4      	adds	r3, #180	@ 0xb4
 800a174:	2105      	movs	r1, #5
 800a176:	4618      	mov	r0, r3
 800a178:	f000 fafc 	bl	800a774 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800a17c:	697b      	ldr	r3, [r7, #20]
 800a17e:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800a182:	2300      	movs	r3, #0
 800a184:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f
 800a188:	2366      	movs	r3, #102	@ 0x66
 800a18a:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
 800a18e:	2399      	movs	r3, #153	@ 0x99
 800a190:	f887 308d 	strb.w	r3, [r7, #141]	@ 0x8d
 800a194:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 800a198:	041a      	lsls	r2, r3, #16
 800a19a:	f897 308e 	ldrb.w	r3, [r7, #142]	@ 0x8e
 800a19e:	021b      	lsls	r3, r3, #8
 800a1a0:	431a      	orrs	r2, r3
 800a1a2:	f897 308d 	ldrb.w	r3, [r7, #141]	@ 0x8d
 800a1a6:	4313      	orrs	r3, r2
 800a1a8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a1ac:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800a1b0:	4611      	mov	r1, r2
 800a1b2:	4618      	mov	r0, r3
 800a1b4:	f7ff f916 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800a1b8:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800a1ba:	461d      	mov	r5, r3
 800a1bc:	2300      	movs	r3, #0
 800a1be:	f887 3092 	strb.w	r3, [r7, #146]	@ 0x92
 800a1c2:	2399      	movs	r3, #153	@ 0x99
 800a1c4:	f887 3091 	strb.w	r3, [r7, #145]	@ 0x91
 800a1c8:	23cc      	movs	r3, #204	@ 0xcc
 800a1ca:	f887 3090 	strb.w	r3, [r7, #144]	@ 0x90
 800a1ce:	f897 3092 	ldrb.w	r3, [r7, #146]	@ 0x92
 800a1d2:	041a      	lsls	r2, r3, #16
 800a1d4:	f897 3091 	ldrb.w	r3, [r7, #145]	@ 0x91
 800a1d8:	021b      	lsls	r3, r3, #8
 800a1da:	431a      	orrs	r2, r3
 800a1dc:	f897 3090 	ldrb.w	r3, [r7, #144]	@ 0x90
 800a1e0:	4313      	orrs	r3, r2
 800a1e2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a1e6:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800a1ea:	4611      	mov	r1, r2
 800a1ec:	4618      	mov	r0, r3
 800a1ee:	f7ff f8f9 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800a1f2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800a1f4:	461e      	mov	r6, r3
 800a1f6:	2300      	movs	r3, #0
 800a1f8:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800a1fc:	2333      	movs	r3, #51	@ 0x33
 800a1fe:	f887 3094 	strb.w	r3, [r7, #148]	@ 0x94
 800a202:	2366      	movs	r3, #102	@ 0x66
 800a204:	f887 3093 	strb.w	r3, [r7, #147]	@ 0x93
 800a208:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800a20c:	041a      	lsls	r2, r3, #16
 800a20e:	f897 3094 	ldrb.w	r3, [r7, #148]	@ 0x94
 800a212:	021b      	lsls	r3, r3, #8
 800a214:	431a      	orrs	r2, r3
 800a216:	f897 3093 	ldrb.w	r3, [r7, #147]	@ 0x93
 800a21a:	4313      	orrs	r3, r2
 800a21c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a220:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800a224:	4611      	mov	r1, r2
 800a226:	4618      	mov	r0, r3
 800a228:	f7ff f8dc 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800a22c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a22e:	4698      	mov	r8, r3
 800a230:	2333      	movs	r3, #51	@ 0x33
 800a232:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800a236:	2366      	movs	r3, #102	@ 0x66
 800a238:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800a23c:	2399      	movs	r3, #153	@ 0x99
 800a23e:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800a242:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800a246:	041a      	lsls	r2, r3, #16
 800a248:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800a24c:	021b      	lsls	r3, r3, #8
 800a24e:	431a      	orrs	r2, r3
 800a250:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800a254:	4313      	orrs	r3, r2
 800a256:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a25a:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800a25e:	4611      	mov	r1, r2
 800a260:	4618      	mov	r0, r3
 800a262:	f7ff f8bf 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800a266:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800a268:	9300      	str	r3, [sp, #0]
 800a26a:	4643      	mov	r3, r8
 800a26c:	4632      	mov	r2, r6
 800a26e:	4629      	mov	r1, r5
 800a270:	4620      	mov	r0, r4
 800a272:	f000 fa91 	bl	800a798 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800a276:	697b      	ldr	r3, [r7, #20]
 800a278:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800a27c:	697b      	ldr	r3, [r7, #20]
 800a27e:	f503 73f6 	add.w	r3, r3, #492	@ 0x1ec
 800a282:	4619      	mov	r1, r3
 800a284:	4610      	mov	r0, r2
 800a286:	f7ff fcc1 	bl	8009c0c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800a28a:	697b      	ldr	r3, [r7, #20]
 800a28c:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800a290:	2332      	movs	r3, #50	@ 0x32
 800a292:	9300      	str	r3, [sp, #0]
 800a294:	2332      	movs	r3, #50	@ 0x32
 800a296:	22f5      	movs	r2, #245	@ 0xf5
 800a298:	f240 1189 	movw	r1, #393	@ 0x189
 800a29c:	f7ff f972 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800a2a0:	697a      	ldr	r2, [r7, #20]
 800a2a2:	697b      	ldr	r3, [r7, #20]
 800a2a4:	33b4      	adds	r3, #180	@ 0xb4
 800a2a6:	4619      	mov	r1, r3
 800a2a8:	4610      	mov	r0, r2
 800a2aa:	f7ff fb4d 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(162, 142);
 800a2ae:	697b      	ldr	r3, [r7, #20]
 800a2b0:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a2b4:	228e      	movs	r2, #142	@ 0x8e
 800a2b6:	21a2      	movs	r1, #162	@ 0xa2
 800a2b8:	4618      	mov	r0, r3
 800a2ba:	f7ff f9a2 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800a2be:	697b      	ldr	r3, [r7, #20]
 800a2c0:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800a2c4:	23ff      	movs	r3, #255	@ 0xff
 800a2c6:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800a2ca:	23ff      	movs	r3, #255	@ 0xff
 800a2cc:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800a2d0:	23ff      	movs	r3, #255	@ 0xff
 800a2d2:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800a2d6:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800a2da:	041a      	lsls	r2, r3, #16
 800a2dc:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800a2e0:	021b      	lsls	r3, r3, #8
 800a2e2:	431a      	orrs	r2, r3
 800a2e4:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800a2e8:	4313      	orrs	r3, r2
 800a2ea:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a2ee:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800a2f2:	4611      	mov	r1, r2
 800a2f4:	4618      	mov	r0, r3
 800a2f6:	f7ff f875 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800a2fa:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800a2fc:	f8c7 409c 	str.w	r4, [r7, #156]	@ 0x9c
 800a300:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800a302:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800a306:	69fa      	ldr	r2, [r7, #28]
 800a308:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a30a:	bf00      	nop
    textArea1.setLinespacing(0);
 800a30c:	697b      	ldr	r3, [r7, #20]
 800a30e:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a312:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800a316:	2300      	movs	r3, #0
 800a318:	f8a7 30a2 	strh.w	r3, [r7, #162]	@ 0xa2
        linespace = space;
 800a31c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800a320:	f8b7 20a2 	ldrh.w	r2, [r7, #162]	@ 0xa2
 800a324:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800a326:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800a32a:	681b      	ldr	r3, [r3, #0]
 800a32c:	3384      	adds	r3, #132	@ 0x84
 800a32e:	681b      	ldr	r3, [r3, #0]
 800a330:	e004      	b.n	800a33c <_ZN23humidity_screenViewBaseC1Ev+0x398>
 800a332:	bf00      	nop
 800a334:	0802610c 	.word	0x0802610c
 800a338:	0800a547 	.word	0x0800a547
 800a33c:	f8d7 40a4 	ldr.w	r4, [r7, #164]	@ 0xa4
 800a340:	463a      	mov	r2, r7
 800a342:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 800a346:	4610      	mov	r0, r2
 800a348:	4798      	blx	r3
 800a34a:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a34e:	463a      	mov	r2, r7
 800a350:	ca07      	ldmia	r2, {r0, r1, r2}
 800a352:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a356:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9B9B));
 800a358:	697b      	ldr	r3, [r7, #20]
 800a35a:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800a35e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a362:	2105      	movs	r1, #5
 800a364:	4618      	mov	r0, r3
 800a366:	f7ff fb75 	bl	8009a54 <_ZN8touchgfx9TypedTextC1Et>
 800a36a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a36e:	4619      	mov	r1, r3
 800a370:	4620      	mov	r0, r4
 800a372:	f005 ff67 	bl	8010244 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800a376:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800a37a:	4618      	mov	r0, r3
 800a37c:	f7fd ffae 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800a380:	697a      	ldr	r2, [r7, #20]
 800a382:	697b      	ldr	r3, [r7, #20]
 800a384:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a388:	4619      	mov	r1, r3
 800a38a:	4610      	mov	r0, r2
 800a38c:	f7ff fadc 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800a390:	697b      	ldr	r3, [r7, #20]
 800a392:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 800a396:	2248      	movs	r2, #72	@ 0x48
 800a398:	216f      	movs	r1, #111	@ 0x6f
 800a39a:	4618      	mov	r0, r3
 800a39c:	f7ff f931 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800a3a0:	697b      	ldr	r3, [r7, #20]
 800a3a2:	f503 74ba 	add.w	r4, r3, #372	@ 0x174
 800a3a6:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800a3aa:	2100      	movs	r1, #0
 800a3ac:	4618      	mov	r0, r3
 800a3ae:	f7ff f85f 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a3b2:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800a3b6:	2101      	movs	r1, #1
 800a3b8:	4618      	mov	r0, r3
 800a3ba:	f7ff f859 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a3be:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800a3c2:	2106      	movs	r1, #6
 800a3c4:	4618      	mov	r0, r3
 800a3c6:	f7ff f853 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a3ca:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800a3ce:	2104      	movs	r1, #4
 800a3d0:	4618      	mov	r0, r3
 800a3d2:	f7ff f84d 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a3d6:	f107 0044 	add.w	r0, r7, #68	@ 0x44
 800a3da:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 800a3de:	f107 013c 	add.w	r1, r7, #60	@ 0x3c
 800a3e2:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800a3e6:	9300      	str	r3, [sp, #0]
 800a3e8:	4603      	mov	r3, r0
 800a3ea:	4620      	mov	r0, r4
 800a3ec:	f006 f920 	bl	8010630 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800a3f0:	697b      	ldr	r3, [r7, #20]
 800a3f2:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 800a3f6:	2200      	movs	r2, #0
 800a3f8:	2161      	movs	r1, #97	@ 0x61
 800a3fa:	4618      	mov	r0, r3
 800a3fc:	f7ff fd82 	bl	8009f04 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    add(buttonWithIcon1);
 800a400:	697a      	ldr	r2, [r7, #20]
 800a402:	697b      	ldr	r3, [r7, #20]
 800a404:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 800a408:	4619      	mov	r1, r3
 800a40a:	4610      	mov	r0, r2
 800a40c:	f7ff fa9c 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800a410:	697b      	ldr	r3, [r7, #20]
 800a412:	f503 73d8 	add.w	r3, r3, #432	@ 0x1b0
 800a416:	22c3      	movs	r2, #195	@ 0xc3
 800a418:	216f      	movs	r1, #111	@ 0x6f
 800a41a:	4618      	mov	r0, r3
 800a41c:	f7ff f8f1 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800a420:	697b      	ldr	r3, [r7, #20]
 800a422:	f503 74d8 	add.w	r4, r3, #432	@ 0x1b0
 800a426:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800a42a:	2100      	movs	r1, #0
 800a42c:	4618      	mov	r0, r3
 800a42e:	f7ff f81f 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a432:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800a436:	2101      	movs	r1, #1
 800a438:	4618      	mov	r0, r3
 800a43a:	f7ff f819 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a43e:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800a442:	2105      	movs	r1, #5
 800a444:	4618      	mov	r0, r3
 800a446:	f7ff f813 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a44a:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800a44e:	2104      	movs	r1, #4
 800a450:	4618      	mov	r0, r3
 800a452:	f7ff f80d 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800a456:	f107 0054 	add.w	r0, r7, #84	@ 0x54
 800a45a:	f107 0250 	add.w	r2, r7, #80	@ 0x50
 800a45e:	f107 014c 	add.w	r1, r7, #76	@ 0x4c
 800a462:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800a466:	9300      	str	r3, [sp, #0]
 800a468:	4603      	mov	r3, r0
 800a46a:	4620      	mov	r0, r4
 800a46c:	f006 f8e0 	bl	8010630 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800a470:	697b      	ldr	r3, [r7, #20]
 800a472:	f503 73d8 	add.w	r3, r3, #432	@ 0x1b0
 800a476:	2200      	movs	r2, #0
 800a478:	215f      	movs	r1, #95	@ 0x5f
 800a47a:	4618      	mov	r0, r3
 800a47c:	f7ff fd42 	bl	8009f04 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    add(buttonWithIcon1_1);
 800a480:	697a      	ldr	r2, [r7, #20]
 800a482:	697b      	ldr	r3, [r7, #20]
 800a484:	f503 73d8 	add.w	r3, r3, #432	@ 0x1b0
 800a488:	4619      	mov	r1, r3
 800a48a:	4610      	mov	r0, r2
 800a48c:	f7ff fa5c 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800a490:	697b      	ldr	r3, [r7, #20]
 800a492:	4618      	mov	r0, r3
 800a494:	37a8      	adds	r7, #168	@ 0xa8
 800a496:	46bd      	mov	sp, r7
 800a498:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a49c <_ZN23humidity_screenViewBaseD1Ev>:

humidity_screenViewBase::~humidity_screenViewBase()
 800a49c:	b580      	push	{r7, lr}
 800a49e:	b082      	sub	sp, #8
 800a4a0:	af00      	add	r7, sp, #0
 800a4a2:	6078      	str	r0, [r7, #4]
 800a4a4:	4a19      	ldr	r2, [pc, #100]	@ (800a50c <_ZN23humidity_screenViewBaseD1Ev+0x70>)
 800a4a6:	687b      	ldr	r3, [r7, #4]
 800a4a8:	601a      	str	r2, [r3, #0]
{

}
 800a4aa:	687b      	ldr	r3, [r7, #4]
 800a4ac:	f503 73f6 	add.w	r3, r3, #492	@ 0x1ec
 800a4b0:	4618      	mov	r0, r3
 800a4b2:	f000 f9e1 	bl	800a878 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800a4b6:	687b      	ldr	r3, [r7, #4]
 800a4b8:	f503 73d8 	add.w	r3, r3, #432	@ 0x1b0
 800a4bc:	4618      	mov	r0, r3
 800a4be:	f000 fa47 	bl	800a950 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800a4c2:	687b      	ldr	r3, [r7, #4]
 800a4c4:	f503 73ba 	add.w	r3, r3, #372	@ 0x174
 800a4c8:	4618      	mov	r0, r3
 800a4ca:	f000 fa41 	bl	800a950 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800a4ce:	687b      	ldr	r3, [r7, #4]
 800a4d0:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a4d4:	4618      	mov	r0, r3
 800a4d6:	f7ff fcad 	bl	8009e34 <_ZN8touchgfx8TextAreaD1Ev>
 800a4da:	687b      	ldr	r3, [r7, #4]
 800a4dc:	33b4      	adds	r3, #180	@ 0xb4
 800a4de:	4618      	mov	r0, r3
 800a4e0:	f000 f9ec 	bl	800a8bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800a4e4:	687b      	ldr	r3, [r7, #4]
 800a4e6:	336c      	adds	r3, #108	@ 0x6c
 800a4e8:	4618      	mov	r0, r3
 800a4ea:	f7ff fca3 	bl	8009e34 <_ZN8touchgfx8TextAreaD1Ev>
 800a4ee:	687b      	ldr	r3, [r7, #4]
 800a4f0:	3340      	adds	r3, #64	@ 0x40
 800a4f2:	4618      	mov	r0, r3
 800a4f4:	f7ff fbd4 	bl	8009ca0 <_ZN8touchgfx3BoxD1Ev>
 800a4f8:	687b      	ldr	r3, [r7, #4]
 800a4fa:	4618      	mov	r0, r3
 800a4fc:	f7ff fd30 	bl	8009f60 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	4618      	mov	r0, r3
 800a504:	3708      	adds	r7, #8
 800a506:	46bd      	mov	sp, r7
 800a508:	bd80      	pop	{r7, pc}
 800a50a:	bf00      	nop
 800a50c:	0802610c 	.word	0x0802610c

0800a510 <_ZN23humidity_screenViewBaseD0Ev>:
humidity_screenViewBase::~humidity_screenViewBase()
 800a510:	b580      	push	{r7, lr}
 800a512:	b082      	sub	sp, #8
 800a514:	af00      	add	r7, sp, #0
 800a516:	6078      	str	r0, [r7, #4]
}
 800a518:	6878      	ldr	r0, [r7, #4]
 800a51a:	f7ff ffbf 	bl	800a49c <_ZN23humidity_screenViewBaseD1Ev>
 800a51e:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
 800a522:	6878      	ldr	r0, [r7, #4]
 800a524:	f019 fb75 	bl	8023c12 <_ZdlPvj>
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	4618      	mov	r0, r3
 800a52c:	3708      	adds	r7, #8
 800a52e:	46bd      	mov	sp, r7
 800a530:	bd80      	pop	{r7, pc}

0800a532 <_ZN23humidity_screenViewBase11setupScreenEv>:

void humidity_screenViewBase::setupScreen()
{
 800a532:	b480      	push	{r7}
 800a534:	b083      	sub	sp, #12
 800a536:	af00      	add	r7, sp, #0
 800a538:	6078      	str	r0, [r7, #4]

}
 800a53a:	bf00      	nop
 800a53c:	370c      	adds	r7, #12
 800a53e:	46bd      	mov	sp, r7
 800a540:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a544:	4770      	bx	lr

0800a546 <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void humidity_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800a546:	b580      	push	{r7, lr}
 800a548:	b082      	sub	sp, #8
 800a54a:	af00      	add	r7, sp, #0
 800a54c:	6078      	str	r0, [r7, #4]
 800a54e:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800a550:	687b      	ldr	r3, [r7, #4]
 800a552:	33b4      	adds	r3, #180	@ 0xb4
 800a554:	683a      	ldr	r2, [r7, #0]
 800a556:	429a      	cmp	r2, r3
 800a558:	d10c      	bne.n	800a574 <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2e>
    {
        //Interaction1
        //When flexButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 800a55a:	687b      	ldr	r3, [r7, #4]
 800a55c:	681b      	ldr	r3, [r3, #0]
 800a55e:	332c      	adds	r3, #44	@ 0x2c
 800a560:	681b      	ldr	r3, [r3, #0]
 800a562:	6878      	ldr	r0, [r7, #4]
 800a564:	4798      	blx	r3

        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800a566:	6878      	ldr	r0, [r7, #4]
 800a568:	f7ff fcee 	bl	8009f48 <_ZN23humidity_screenViewBase11applicationEv>
 800a56c:	4603      	mov	r3, r0
 800a56e:	4618      	mov	r0, r3
 800a570:	f7fe fb4e 	bl	8008c10 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800a574:	bf00      	nop
 800a576:	3708      	adds	r7, #8
 800a578:	46bd      	mov	sp, r7
 800a57a:	bd80      	pop	{r7, pc}

0800a57c <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>:
    View()
 800a57c:	b580      	push	{r7, lr}
 800a57e:	b082      	sub	sp, #8
 800a580:	af00      	add	r7, sp, #0
 800a582:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800a584:	687b      	ldr	r3, [r7, #4]
 800a586:	4618      	mov	r0, r3
 800a588:	f009 f900 	bl	801378c <_ZN8touchgfx6ScreenC1Ev>
 800a58c:	4a05      	ldr	r2, [pc, #20]	@ (800a5a4 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev+0x28>)
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	601a      	str	r2, [r3, #0]
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	2200      	movs	r2, #0
 800a596:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800a598:	687b      	ldr	r3, [r7, #4]
 800a59a:	4618      	mov	r0, r3
 800a59c:	3708      	adds	r7, #8
 800a59e:	46bd      	mov	sp, r7
 800a5a0:	bd80      	pop	{r7, pc}
 800a5a2:	bf00      	nop
 800a5a4:	080261f8 	.word	0x080261f8

0800a5a8 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800a5a8:	b580      	push	{r7, lr}
 800a5aa:	b082      	sub	sp, #8
 800a5ac:	af00      	add	r7, sp, #0
 800a5ae:	6078      	str	r0, [r7, #4]
 800a5b0:	687b      	ldr	r3, [r7, #4]
 800a5b2:	4618      	mov	r0, r3
 800a5b4:	f7ff fada 	bl	8009b6c <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800a5b8:	4a03      	ldr	r2, [pc, #12]	@ (800a5c8 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800a5ba:	687b      	ldr	r3, [r7, #4]
 800a5bc:	601a      	str	r2, [r3, #0]
 800a5be:	687b      	ldr	r3, [r7, #4]
 800a5c0:	4618      	mov	r0, r3
 800a5c2:	3708      	adds	r7, #8
 800a5c4:	46bd      	mov	sp, r7
 800a5c6:	bd80      	pop	{r7, pc}
 800a5c8:	0802622c 	.word	0x0802622c

0800a5cc <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800a5cc:	b580      	push	{r7, lr}
 800a5ce:	b082      	sub	sp, #8
 800a5d0:	af00      	add	r7, sp, #0
 800a5d2:	6078      	str	r0, [r7, #4]
 800a5d4:	4a05      	ldr	r2, [pc, #20]	@ (800a5ec <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800a5d6:	687b      	ldr	r3, [r7, #4]
 800a5d8:	601a      	str	r2, [r3, #0]
 800a5da:	687b      	ldr	r3, [r7, #4]
 800a5dc:	4618      	mov	r0, r3
 800a5de:	f7ff fc07 	bl	8009df0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	4618      	mov	r0, r3
 800a5e6:	3708      	adds	r7, #8
 800a5e8:	46bd      	mov	sp, r7
 800a5ea:	bd80      	pop	{r7, pc}
 800a5ec:	0802622c 	.word	0x0802622c

0800a5f0 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800a5f0:	b580      	push	{r7, lr}
 800a5f2:	b082      	sub	sp, #8
 800a5f4:	af00      	add	r7, sp, #0
 800a5f6:	6078      	str	r0, [r7, #4]
 800a5f8:	6878      	ldr	r0, [r7, #4]
 800a5fa:	f7ff ffe7 	bl	800a5cc <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800a5fe:	2134      	movs	r1, #52	@ 0x34
 800a600:	6878      	ldr	r0, [r7, #4]
 800a602:	f019 fb06 	bl	8023c12 <_ZdlPvj>
 800a606:	687b      	ldr	r3, [r7, #4]
 800a608:	4618      	mov	r0, r3
 800a60a:	3708      	adds	r7, #8
 800a60c:	46bd      	mov	sp, r7
 800a60e:	bd80      	pop	{r7, pc}

0800a610 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800a610:	b580      	push	{r7, lr}
 800a612:	b082      	sub	sp, #8
 800a614:	af00      	add	r7, sp, #0
 800a616:	6078      	str	r0, [r7, #4]
 800a618:	4a05      	ldr	r2, [pc, #20]	@ (800a630 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800a61a:	687b      	ldr	r3, [r7, #4]
 800a61c:	601a      	str	r2, [r3, #0]
 800a61e:	687b      	ldr	r3, [r7, #4]
 800a620:	4618      	mov	r0, r3
 800a622:	f7ff fb3d 	bl	8009ca0 <_ZN8touchgfx3BoxD1Ev>
 800a626:	687b      	ldr	r3, [r7, #4]
 800a628:	4618      	mov	r0, r3
 800a62a:	3708      	adds	r7, #8
 800a62c:	46bd      	mov	sp, r7
 800a62e:	bd80      	pop	{r7, pc}
 800a630:	08027014 	.word	0x08027014

0800a634 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800a634:	b580      	push	{r7, lr}
 800a636:	b082      	sub	sp, #8
 800a638:	af00      	add	r7, sp, #0
 800a63a:	6078      	str	r0, [r7, #4]
 800a63c:	6878      	ldr	r0, [r7, #4]
 800a63e:	f7ff ffe7 	bl	800a610 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800a642:	2134      	movs	r1, #52	@ 0x34
 800a644:	6878      	ldr	r0, [r7, #4]
 800a646:	f019 fae4 	bl	8023c12 <_ZdlPvj>
 800a64a:	687b      	ldr	r3, [r7, #4]
 800a64c:	4618      	mov	r0, r3
 800a64e:	3708      	adds	r7, #8
 800a650:	46bd      	mov	sp, r7
 800a652:	bd80      	pop	{r7, pc}

0800a654 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800a654:	b580      	push	{r7, lr}
 800a656:	b082      	sub	sp, #8
 800a658:	af00      	add	r7, sp, #0
 800a65a:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800a65c:	687b      	ldr	r3, [r7, #4]
 800a65e:	4618      	mov	r0, r3
 800a660:	2334      	movs	r3, #52	@ 0x34
 800a662:	461a      	mov	r2, r3
 800a664:	2100      	movs	r1, #0
 800a666:	f019 fd8a 	bl	802417e <memset>
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	4618      	mov	r0, r3
 800a66e:	f7ff ff9b 	bl	800a5a8 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800a672:	4a17      	ldr	r2, [pc, #92]	@ (800a6d0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	601a      	str	r2, [r3, #0]
 800a678:	687b      	ldr	r3, [r7, #4]
 800a67a:	3334      	adds	r3, #52	@ 0x34
 800a67c:	4618      	mov	r0, r3
 800a67e:	f7ff fb31 	bl	8009ce4 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800a682:	687b      	ldr	r3, [r7, #4]
 800a684:	3368      	adds	r3, #104	@ 0x68
 800a686:	4618      	mov	r0, r3
 800a688:	f7fe fe9e 	bl	80093c8 <_ZN8touchgfx9colortypeC1Ev>
 800a68c:	687b      	ldr	r3, [r7, #4]
 800a68e:	336c      	adds	r3, #108	@ 0x6c
 800a690:	4618      	mov	r0, r3
 800a692:	f7fe fe99 	bl	80093c8 <_ZN8touchgfx9colortypeC1Ev>
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	3370      	adds	r3, #112	@ 0x70
 800a69a:	4618      	mov	r0, r3
 800a69c:	f7fe fe94 	bl	80093c8 <_ZN8touchgfx9colortypeC1Ev>
 800a6a0:	687b      	ldr	r3, [r7, #4]
 800a6a2:	3374      	adds	r3, #116	@ 0x74
 800a6a4:	4618      	mov	r0, r3
 800a6a6:	f7fe fe8f 	bl	80093c8 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800a6aa:	687b      	ldr	r3, [r7, #4]
 800a6ac:	3334      	adds	r3, #52	@ 0x34
 800a6ae:	2200      	movs	r2, #0
 800a6b0:	2100      	movs	r1, #0
 800a6b2:	4618      	mov	r0, r3
 800a6b4:	f7fe ffa5 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800a6b8:	687a      	ldr	r2, [r7, #4]
 800a6ba:	687b      	ldr	r3, [r7, #4]
 800a6bc:	3334      	adds	r3, #52	@ 0x34
 800a6be:	4619      	mov	r1, r3
 800a6c0:	4610      	mov	r0, r2
 800a6c2:	f004 f87d 	bl	800e7c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	4618      	mov	r0, r3
 800a6ca:	3708      	adds	r7, #8
 800a6cc:	46bd      	mov	sp, r7
 800a6ce:	bd80      	pop	{r7, pc}
 800a6d0:	0802615c 	.word	0x0802615c

0800a6d4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800a6d4:	b480      	push	{r7}
 800a6d6:	b083      	sub	sp, #12
 800a6d8:	af00      	add	r7, sp, #0
 800a6da:	6078      	str	r0, [r7, #4]
 800a6dc:	4a04      	ldr	r2, [pc, #16]	@ (800a6f0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800a6de:	687b      	ldr	r3, [r7, #4]
 800a6e0:	601a      	str	r2, [r3, #0]
 800a6e2:	687b      	ldr	r3, [r7, #4]
 800a6e4:	4618      	mov	r0, r3
 800a6e6:	370c      	adds	r7, #12
 800a6e8:	46bd      	mov	sp, r7
 800a6ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a6ee:	4770      	bx	lr
 800a6f0:	080262c8 	.word	0x080262c8

0800a6f4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800a6f4:	b580      	push	{r7, lr}
 800a6f6:	b084      	sub	sp, #16
 800a6f8:	af00      	add	r7, sp, #0
 800a6fa:	60f8      	str	r0, [r7, #12]
 800a6fc:	60b9      	str	r1, [r7, #8]
 800a6fe:	4639      	mov	r1, r7
 800a700:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800a704:	68fb      	ldr	r3, [r7, #12]
 800a706:	4618      	mov	r0, r3
 800a708:	f7ff ffe4 	bl	800a6d4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800a70c:	4a08      	ldr	r2, [pc, #32]	@ (800a730 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800a70e:	68fb      	ldr	r3, [r7, #12]
 800a710:	601a      	str	r2, [r3, #0]
 800a712:	68fb      	ldr	r3, [r7, #12]
 800a714:	68ba      	ldr	r2, [r7, #8]
 800a716:	605a      	str	r2, [r3, #4]
 800a718:	68fb      	ldr	r3, [r7, #12]
 800a71a:	3308      	adds	r3, #8
 800a71c:	463a      	mov	r2, r7
 800a71e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a722:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800a726:	68fb      	ldr	r3, [r7, #12]
 800a728:	4618      	mov	r0, r3
 800a72a:	3710      	adds	r7, #16
 800a72c:	46bd      	mov	sp, r7
 800a72e:	bd80      	pop	{r7, pc}
 800a730:	08026144 	.word	0x08026144

0800a734 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800a734:	b590      	push	{r4, r7, lr}
 800a736:	b087      	sub	sp, #28
 800a738:	af02      	add	r7, sp, #8
 800a73a:	60f8      	str	r0, [r7, #12]
 800a73c:	4608      	mov	r0, r1
 800a73e:	4611      	mov	r1, r2
 800a740:	461a      	mov	r2, r3
 800a742:	4603      	mov	r3, r0
 800a744:	817b      	strh	r3, [r7, #10]
 800a746:	460b      	mov	r3, r1
 800a748:	813b      	strh	r3, [r7, #8]
 800a74a:	4613      	mov	r3, r2
 800a74c:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800a74e:	68fb      	ldr	r3, [r7, #12]
 800a750:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800a754:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800a758:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800a75c:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800a760:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800a764:	9300      	str	r3, [sp, #0]
 800a766:	4623      	mov	r3, r4
 800a768:	f7fe ff0c 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800a76c:	bf00      	nop
 800a76e:	3714      	adds	r7, #20
 800a770:	46bd      	mov	sp, r7
 800a772:	bd90      	pop	{r4, r7, pc}

0800a774 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800a774:	b580      	push	{r7, lr}
 800a776:	b082      	sub	sp, #8
 800a778:	af00      	add	r7, sp, #0
 800a77a:	6078      	str	r0, [r7, #4]
 800a77c:	460b      	mov	r3, r1
 800a77e:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800a780:	687b      	ldr	r3, [r7, #4]
 800a782:	3334      	adds	r3, #52	@ 0x34
 800a784:	78fa      	ldrb	r2, [r7, #3]
 800a786:	b292      	uxth	r2, r2
 800a788:	4611      	mov	r1, r2
 800a78a:	4618      	mov	r0, r3
 800a78c:	f7ff fad4 	bl	8009d38 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800a790:	bf00      	nop
 800a792:	3708      	adds	r7, #8
 800a794:	46bd      	mov	sp, r7
 800a796:	bd80      	pop	{r7, pc}

0800a798 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800a798:	b580      	push	{r7, lr}
 800a79a:	b084      	sub	sp, #16
 800a79c:	af00      	add	r7, sp, #0
 800a79e:	60f8      	str	r0, [r7, #12]
 800a7a0:	60b9      	str	r1, [r7, #8]
 800a7a2:	607a      	str	r2, [r7, #4]
 800a7a4:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800a7a6:	68fb      	ldr	r3, [r7, #12]
 800a7a8:	68ba      	ldr	r2, [r7, #8]
 800a7aa:	669a      	str	r2, [r3, #104]	@ 0x68
        down = colorPressed;
 800a7ac:	68fb      	ldr	r3, [r7, #12]
 800a7ae:	687a      	ldr	r2, [r7, #4]
 800a7b0:	66da      	str	r2, [r3, #108]	@ 0x6c
        borderUp = borderColorReleased;
 800a7b2:	68fb      	ldr	r3, [r7, #12]
 800a7b4:	683a      	ldr	r2, [r7, #0]
 800a7b6:	671a      	str	r2, [r3, #112]	@ 0x70
        borderDown = borderColorPressed;
 800a7b8:	68fb      	ldr	r3, [r7, #12]
 800a7ba:	69ba      	ldr	r2, [r7, #24]
 800a7bc:	675a      	str	r2, [r3, #116]	@ 0x74
        handlePressedUpdated();
 800a7be:	68fb      	ldr	r3, [r7, #12]
 800a7c0:	681b      	ldr	r3, [r3, #0]
 800a7c2:	338c      	adds	r3, #140	@ 0x8c
 800a7c4:	681b      	ldr	r3, [r3, #0]
 800a7c6:	68f8      	ldr	r0, [r7, #12]
 800a7c8:	4798      	blx	r3
    }
 800a7ca:	bf00      	nop
 800a7cc:	3710      	adds	r7, #16
 800a7ce:	46bd      	mov	sp, r7
 800a7d0:	bd80      	pop	{r7, pc}
	...

0800a7d4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800a7d4:	b480      	push	{r7}
 800a7d6:	b083      	sub	sp, #12
 800a7d8:	af00      	add	r7, sp, #0
 800a7da:	6078      	str	r0, [r7, #4]
    }
 800a7dc:	4a04      	ldr	r2, [pc, #16]	@ (800a7f0 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800a7de:	687b      	ldr	r3, [r7, #4]
 800a7e0:	601a      	str	r2, [r3, #0]
 800a7e2:	687b      	ldr	r3, [r7, #4]
 800a7e4:	4618      	mov	r0, r3
 800a7e6:	370c      	adds	r7, #12
 800a7e8:	46bd      	mov	sp, r7
 800a7ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ee:	4770      	bx	lr
 800a7f0:	080262c8 	.word	0x080262c8

0800a7f4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800a7f4:	b580      	push	{r7, lr}
 800a7f6:	b082      	sub	sp, #8
 800a7f8:	af00      	add	r7, sp, #0
 800a7fa:	6078      	str	r0, [r7, #4]
    }
 800a7fc:	6878      	ldr	r0, [r7, #4]
 800a7fe:	f7ff ffe9 	bl	800a7d4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800a802:	2104      	movs	r1, #4
 800a804:	6878      	ldr	r0, [r7, #4]
 800a806:	f019 fa04 	bl	8023c12 <_ZdlPvj>
 800a80a:	687b      	ldr	r3, [r7, #4]
 800a80c:	4618      	mov	r0, r3
 800a80e:	3708      	adds	r7, #8
 800a810:	46bd      	mov	sp, r7
 800a812:	bd80      	pop	{r7, pc}

0800a814 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800a814:	b590      	push	{r4, r7, lr}
 800a816:	b083      	sub	sp, #12
 800a818:	af00      	add	r7, sp, #0
 800a81a:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800a81c:	687b      	ldr	r3, [r7, #4]
 800a81e:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	4618      	mov	r0, r3
 800a826:	f7ff f9d7 	bl	8009bd8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800a82a:	4603      	mov	r3, r0
 800a82c:	2b00      	cmp	r3, #0
 800a82e:	d002      	beq.n	800a836 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800a830:	687b      	ldr	r3, [r7, #4]
 800a832:	336c      	adds	r3, #108	@ 0x6c
 800a834:	e001      	b.n	800a83a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800a836:	687b      	ldr	r3, [r7, #4]
 800a838:	3368      	adds	r3, #104	@ 0x68
 800a83a:	6819      	ldr	r1, [r3, #0]
 800a83c:	4620      	mov	r0, r4
 800a83e:	f7ff f8eb 	bl	8009a18 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800a848:	687b      	ldr	r3, [r7, #4]
 800a84a:	4618      	mov	r0, r3
 800a84c:	f7ff f9c4 	bl	8009bd8 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800a850:	4603      	mov	r3, r0
 800a852:	2b00      	cmp	r3, #0
 800a854:	d002      	beq.n	800a85c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800a856:	687b      	ldr	r3, [r7, #4]
 800a858:	3374      	adds	r3, #116	@ 0x74
 800a85a:	e001      	b.n	800a860 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800a85c:	687b      	ldr	r3, [r7, #4]
 800a85e:	3370      	adds	r3, #112	@ 0x70
 800a860:	6819      	ldr	r1, [r3, #0]
 800a862:	4620      	mov	r0, r4
 800a864:	f7ff fa5a 	bl	8009d1c <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800a868:	687b      	ldr	r3, [r7, #4]
 800a86a:	4618      	mov	r0, r3
 800a86c:	f7ff fa03 	bl	8009c76 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800a870:	bf00      	nop
 800a872:	370c      	adds	r7, #12
 800a874:	46bd      	mov	sp, r7
 800a876:	bd90      	pop	{r4, r7, pc}

0800a878 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800a878:	b580      	push	{r7, lr}
 800a87a:	b082      	sub	sp, #8
 800a87c:	af00      	add	r7, sp, #0
 800a87e:	6078      	str	r0, [r7, #4]
 800a880:	4a05      	ldr	r2, [pc, #20]	@ (800a898 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	601a      	str	r2, [r3, #0]
 800a886:	687b      	ldr	r3, [r7, #4]
 800a888:	4618      	mov	r0, r3
 800a88a:	f7ff ffa3 	bl	800a7d4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800a88e:	687b      	ldr	r3, [r7, #4]
 800a890:	4618      	mov	r0, r3
 800a892:	3708      	adds	r7, #8
 800a894:	46bd      	mov	sp, r7
 800a896:	bd80      	pop	{r7, pc}
 800a898:	08026144 	.word	0x08026144

0800a89c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800a89c:	b580      	push	{r7, lr}
 800a89e:	b082      	sub	sp, #8
 800a8a0:	af00      	add	r7, sp, #0
 800a8a2:	6078      	str	r0, [r7, #4]
 800a8a4:	6878      	ldr	r0, [r7, #4]
 800a8a6:	f7ff ffe7 	bl	800a878 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800a8aa:	2110      	movs	r1, #16
 800a8ac:	6878      	ldr	r0, [r7, #4]
 800a8ae:	f019 f9b0 	bl	8023c12 <_ZdlPvj>
 800a8b2:	687b      	ldr	r3, [r7, #4]
 800a8b4:	4618      	mov	r0, r3
 800a8b6:	3708      	adds	r7, #8
 800a8b8:	46bd      	mov	sp, r7
 800a8ba:	bd80      	pop	{r7, pc}

0800a8bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800a8bc:	b580      	push	{r7, lr}
 800a8be:	b082      	sub	sp, #8
 800a8c0:	af00      	add	r7, sp, #0
 800a8c2:	6078      	str	r0, [r7, #4]
 800a8c4:	4a08      	ldr	r2, [pc, #32]	@ (800a8e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800a8c6:	687b      	ldr	r3, [r7, #4]
 800a8c8:	601a      	str	r2, [r3, #0]
 800a8ca:	687b      	ldr	r3, [r7, #4]
 800a8cc:	3334      	adds	r3, #52	@ 0x34
 800a8ce:	4618      	mov	r0, r3
 800a8d0:	f7ff fe9e 	bl	800a610 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800a8d4:	687b      	ldr	r3, [r7, #4]
 800a8d6:	4618      	mov	r0, r3
 800a8d8:	f7ff fe78 	bl	800a5cc <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800a8dc:	687b      	ldr	r3, [r7, #4]
 800a8de:	4618      	mov	r0, r3
 800a8e0:	3708      	adds	r7, #8
 800a8e2:	46bd      	mov	sp, r7
 800a8e4:	bd80      	pop	{r7, pc}
 800a8e6:	bf00      	nop
 800a8e8:	0802615c 	.word	0x0802615c

0800a8ec <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800a8ec:	b580      	push	{r7, lr}
 800a8ee:	b082      	sub	sp, #8
 800a8f0:	af00      	add	r7, sp, #0
 800a8f2:	6078      	str	r0, [r7, #4]
 800a8f4:	6878      	ldr	r0, [r7, #4]
 800a8f6:	f7ff ffe1 	bl	800a8bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800a8fa:	2178      	movs	r1, #120	@ 0x78
 800a8fc:	6878      	ldr	r0, [r7, #4]
 800a8fe:	f019 f988 	bl	8023c12 <_ZdlPvj>
 800a902:	687b      	ldr	r3, [r7, #4]
 800a904:	4618      	mov	r0, r3
 800a906:	3708      	adds	r7, #8
 800a908:	46bd      	mov	sp, r7
 800a90a:	bd80      	pop	{r7, pc}

0800a90c <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800a90c:	b580      	push	{r7, lr}
 800a90e:	b082      	sub	sp, #8
 800a910:	af00      	add	r7, sp, #0
 800a912:	6078      	str	r0, [r7, #4]
 800a914:	4a05      	ldr	r2, [pc, #20]	@ (800a92c <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	601a      	str	r2, [r3, #0]
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	4618      	mov	r0, r3
 800a91e:	f7ff fab1 	bl	8009e84 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	4618      	mov	r0, r3
 800a926:	3708      	adds	r7, #8
 800a928:	46bd      	mov	sp, r7
 800a92a:	bd80      	pop	{r7, pc}
 800a92c:	08026f10 	.word	0x08026f10

0800a930 <_ZN8touchgfx6ButtonD0Ev>:
 800a930:	b580      	push	{r7, lr}
 800a932:	b082      	sub	sp, #8
 800a934:	af00      	add	r7, sp, #0
 800a936:	6078      	str	r0, [r7, #4]
 800a938:	6878      	ldr	r0, [r7, #4]
 800a93a:	f7ff ffe7 	bl	800a90c <_ZN8touchgfx6ButtonD1Ev>
 800a93e:	2134      	movs	r1, #52	@ 0x34
 800a940:	6878      	ldr	r0, [r7, #4]
 800a942:	f019 f966 	bl	8023c12 <_ZdlPvj>
 800a946:	687b      	ldr	r3, [r7, #4]
 800a948:	4618      	mov	r0, r3
 800a94a:	3708      	adds	r7, #8
 800a94c:	46bd      	mov	sp, r7
 800a94e:	bd80      	pop	{r7, pc}

0800a950 <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800a950:	b580      	push	{r7, lr}
 800a952:	b082      	sub	sp, #8
 800a954:	af00      	add	r7, sp, #0
 800a956:	6078      	str	r0, [r7, #4]
 800a958:	4a05      	ldr	r2, [pc, #20]	@ (800a970 <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800a95a:	687b      	ldr	r3, [r7, #4]
 800a95c:	601a      	str	r2, [r3, #0]
 800a95e:	687b      	ldr	r3, [r7, #4]
 800a960:	4618      	mov	r0, r3
 800a962:	f7ff ffd3 	bl	800a90c <_ZN8touchgfx6ButtonD1Ev>
 800a966:	687b      	ldr	r3, [r7, #4]
 800a968:	4618      	mov	r0, r3
 800a96a:	3708      	adds	r7, #8
 800a96c:	46bd      	mov	sp, r7
 800a96e:	bd80      	pop	{r7, pc}
 800a970:	0802707c 	.word	0x0802707c

0800a974 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800a974:	b580      	push	{r7, lr}
 800a976:	b082      	sub	sp, #8
 800a978:	af00      	add	r7, sp, #0
 800a97a:	6078      	str	r0, [r7, #4]
 800a97c:	6878      	ldr	r0, [r7, #4]
 800a97e:	f7ff ffe7 	bl	800a950 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800a982:	213c      	movs	r1, #60	@ 0x3c
 800a984:	6878      	ldr	r0, [r7, #4]
 800a986:	f019 f944 	bl	8023c12 <_ZdlPvj>
 800a98a:	687b      	ldr	r3, [r7, #4]
 800a98c:	4618      	mov	r0, r3
 800a98e:	3708      	adds	r7, #8
 800a990:	46bd      	mov	sp, r7
 800a992:	bd80      	pop	{r7, pc}

0800a994 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800a994:	b580      	push	{r7, lr}
 800a996:	b082      	sub	sp, #8
 800a998:	af00      	add	r7, sp, #0
 800a99a:	6078      	str	r0, [r7, #4]
 800a99c:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	685b      	ldr	r3, [r3, #4]
 800a9a2:	687a      	ldr	r2, [r7, #4]
 800a9a4:	68d2      	ldr	r2, [r2, #12]
 800a9a6:	1052      	asrs	r2, r2, #1
 800a9a8:	1898      	adds	r0, r3, r2
 800a9aa:	687b      	ldr	r3, [r7, #4]
 800a9ac:	68db      	ldr	r3, [r3, #12]
 800a9ae:	f003 0301 	and.w	r3, r3, #1
 800a9b2:	2b00      	cmp	r3, #0
 800a9b4:	d102      	bne.n	800a9bc <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800a9b6:	687b      	ldr	r3, [r7, #4]
 800a9b8:	689b      	ldr	r3, [r3, #8]
 800a9ba:	e00a      	b.n	800a9d2 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800a9bc:	687b      	ldr	r3, [r7, #4]
 800a9be:	685b      	ldr	r3, [r3, #4]
 800a9c0:	687a      	ldr	r2, [r7, #4]
 800a9c2:	68d2      	ldr	r2, [r2, #12]
 800a9c4:	1052      	asrs	r2, r2, #1
 800a9c6:	4413      	add	r3, r2
 800a9c8:	681b      	ldr	r3, [r3, #0]
 800a9ca:	687a      	ldr	r2, [r7, #4]
 800a9cc:	6892      	ldr	r2, [r2, #8]
 800a9ce:	4413      	add	r3, r2
 800a9d0:	681b      	ldr	r3, [r3, #0]
 800a9d2:	6839      	ldr	r1, [r7, #0]
 800a9d4:	4798      	blx	r3
    }
 800a9d6:	bf00      	nop
 800a9d8:	3708      	adds	r7, #8
 800a9da:	46bd      	mov	sp, r7
 800a9dc:	bd80      	pop	{r7, pc}

0800a9de <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800a9de:	b480      	push	{r7}
 800a9e0:	b083      	sub	sp, #12
 800a9e2:	af00      	add	r7, sp, #0
 800a9e4:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800a9e6:	687b      	ldr	r3, [r7, #4]
 800a9e8:	685b      	ldr	r3, [r3, #4]
 800a9ea:	2b00      	cmp	r3, #0
 800a9ec:	d010      	beq.n	800aa10 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800a9ee:	687b      	ldr	r3, [r7, #4]
 800a9f0:	689b      	ldr	r3, [r3, #8]
 800a9f2:	2b00      	cmp	r3, #0
 800a9f4:	d107      	bne.n	800aa06 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800a9f6:	687b      	ldr	r3, [r7, #4]
 800a9f8:	68db      	ldr	r3, [r3, #12]
 800a9fa:	f003 0301 	and.w	r3, r3, #1
 800a9fe:	2b00      	cmp	r3, #0
 800aa00:	d101      	bne.n	800aa06 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800aa02:	2301      	movs	r3, #1
 800aa04:	e000      	b.n	800aa08 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800aa06:	2300      	movs	r3, #0
 800aa08:	2b01      	cmp	r3, #1
 800aa0a:	d001      	beq.n	800aa10 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800aa0c:	2301      	movs	r3, #1
 800aa0e:	e000      	b.n	800aa12 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800aa10:	2300      	movs	r3, #0
    }
 800aa12:	4618      	mov	r0, r3
 800aa14:	370c      	adds	r7, #12
 800aa16:	46bd      	mov	sp, r7
 800aa18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa1c:	4770      	bx	lr

0800aa1e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800aa1e:	b590      	push	{r4, r7, lr}
 800aa20:	b083      	sub	sp, #12
 800aa22:	af00      	add	r7, sp, #0
 800aa24:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800aa26:	687b      	ldr	r3, [r7, #4]
 800aa28:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800aa2c:	687b      	ldr	r3, [r7, #4]
 800aa2e:	4618      	mov	r0, r3
 800aa30:	f7ff f8df 	bl	8009bf2 <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800aa34:	4603      	mov	r3, r0
 800aa36:	4619      	mov	r1, r3
 800aa38:	4620      	mov	r0, r4
 800aa3a:	f7fe fffb 	bl	8009a34 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800aa3e:	687b      	ldr	r3, [r7, #4]
 800aa40:	4618      	mov	r0, r3
 800aa42:	f7ff f922 	bl	8009c8a <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800aa46:	bf00      	nop
 800aa48:	370c      	adds	r7, #12
 800aa4a:	46bd      	mov	sp, r7
 800aa4c:	bd90      	pop	{r4, r7, pc}
	...

0800aa50 <_ZN8touchgfx14AbstractButtonC1Ev>:
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
 800aa50:	b580      	push	{r7, lr}
 800aa52:	b082      	sub	sp, #8
 800aa54:	af00      	add	r7, sp, #0
 800aa56:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800aa58:	687b      	ldr	r3, [r7, #4]
 800aa5a:	4618      	mov	r0, r3
 800aa5c:	2326      	movs	r3, #38	@ 0x26
 800aa5e:	461a      	mov	r2, r3
 800aa60:	2100      	movs	r1, #0
 800aa62:	f019 fb8c 	bl	802417e <memset>
 800aa66:	687b      	ldr	r3, [r7, #4]
 800aa68:	4618      	mov	r0, r3
 800aa6a:	f7fe ff7d 	bl	8009968 <_ZN8touchgfx6WidgetC1Ev>
 800aa6e:	4a0a      	ldr	r2, [pc, #40]	@ (800aa98 <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800aa70:	687b      	ldr	r3, [r7, #4]
 800aa72:	601a      	str	r2, [r3, #0]
 800aa74:	687b      	ldr	r3, [r7, #4]
 800aa76:	2200      	movs	r2, #0
 800aa78:	629a      	str	r2, [r3, #40]	@ 0x28
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	2200      	movs	r2, #0
 800aa7e:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    {
        setTouchable(true);
 800aa82:	687b      	ldr	r3, [r7, #4]
 800aa84:	2101      	movs	r1, #1
 800aa86:	4618      	mov	r0, r3
 800aa88:	f7fe fe4a 	bl	8009720 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800aa8c:	687b      	ldr	r3, [r7, #4]
 800aa8e:	4618      	mov	r0, r3
 800aa90:	3708      	adds	r7, #8
 800aa92:	46bd      	mov	sp, r7
 800aa94:	bd80      	pop	{r7, pc}
 800aa96:	bf00      	nop
 800aa98:	08026d34 	.word	0x08026d34

0800aa9c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800aa9c:	b480      	push	{r7}
 800aa9e:	b083      	sub	sp, #12
 800aaa0:	af00      	add	r7, sp, #0
 800aaa2:	6078      	str	r0, [r7, #4]
 800aaa4:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	683a      	ldr	r2, [r7, #0]
 800aaaa:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800aaac:	bf00      	nop
 800aaae:	370c      	adds	r7, #12
 800aab0:	46bd      	mov	sp, r7
 800aab2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aab6:	4770      	bx	lr

0800aab8 <_ZN8touchgfx6ButtonC1Ev>:
{
public:
    Button()
 800aab8:	b580      	push	{r7, lr}
 800aaba:	b082      	sub	sp, #8
 800aabc:	af00      	add	r7, sp, #0
 800aabe:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800aac0:	687b      	ldr	r3, [r7, #4]
 800aac2:	4618      	mov	r0, r3
 800aac4:	f7ff ffc4 	bl	800aa50 <_ZN8touchgfx14AbstractButtonC1Ev>
 800aac8:	4a0c      	ldr	r2, [pc, #48]	@ (800aafc <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800aaca:	687b      	ldr	r3, [r7, #4]
 800aacc:	601a      	str	r2, [r3, #0]
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	332e      	adds	r3, #46	@ 0x2e
 800aad2:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800aad6:	4618      	mov	r0, r3
 800aad8:	f7fe fcca 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800aadc:	687b      	ldr	r3, [r7, #4]
 800aade:	3330      	adds	r3, #48	@ 0x30
 800aae0:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800aae4:	4618      	mov	r0, r3
 800aae6:	f7fe fcc3 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800aaea:	687b      	ldr	r3, [r7, #4]
 800aaec:	22ff      	movs	r2, #255	@ 0xff
 800aaee:	f883 2032 	strb.w	r2, [r3, #50]	@ 0x32
    {
    }
 800aaf2:	687b      	ldr	r3, [r7, #4]
 800aaf4:	4618      	mov	r0, r3
 800aaf6:	3708      	adds	r7, #8
 800aaf8:	46bd      	mov	sp, r7
 800aafa:	bd80      	pop	{r7, pc}
 800aafc:	08026f10 	.word	0x08026f10

0800ab00 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
 800ab00:	b580      	push	{r7, lr}
 800ab02:	b084      	sub	sp, #16
 800ab04:	af00      	add	r7, sp, #0
 800ab06:	60f8      	str	r0, [r7, #12]
 800ab08:	60b9      	str	r1, [r7, #8]
 800ab0a:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bitmapPressed;
 800ab0c:	68fb      	ldr	r3, [r7, #12]
 800ab0e:	687a      	ldr	r2, [r7, #4]
 800ab10:	8812      	ldrh	r2, [r2, #0]
 800ab12:	869a      	strh	r2, [r3, #52]	@ 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800ab14:	68fb      	ldr	r3, [r7, #12]
 800ab16:	687a      	ldr	r2, [r7, #4]
 800ab18:	68b9      	ldr	r1, [r7, #8]
 800ab1a:	4618      	mov	r0, r3
 800ab1c:	f005 fbe4 	bl	80102e8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 800ab20:	bf00      	nop
 800ab22:	3710      	adds	r7, #16
 800ab24:	46bd      	mov	sp, r7
 800ab26:	bd80      	pop	{r7, pc}

0800ab28 <_ZN8touchgfx8TextArea8setWidthEs>:
    virtual void setWidth(int16_t width)
 800ab28:	b590      	push	{r4, r7, lr}
 800ab2a:	b087      	sub	sp, #28
 800ab2c:	af00      	add	r7, sp, #0
 800ab2e:	6178      	str	r0, [r7, #20]
 800ab30:	460b      	mov	r3, r1
 800ab32:	827b      	strh	r3, [r7, #18]
        Widget::setWidth(width);
 800ab34:	697b      	ldr	r3, [r7, #20]
 800ab36:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800ab3a:	4611      	mov	r1, r2
 800ab3c:	4618      	mov	r0, r3
 800ab3e:	f7fe fd7e 	bl	800963e <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800ab42:	697b      	ldr	r3, [r7, #20]
 800ab44:	681b      	ldr	r3, [r3, #0]
 800ab46:	3384      	adds	r3, #132	@ 0x84
 800ab48:	681b      	ldr	r3, [r3, #0]
 800ab4a:	697c      	ldr	r4, [r7, #20]
 800ab4c:	463a      	mov	r2, r7
 800ab4e:	6979      	ldr	r1, [r7, #20]
 800ab50:	4610      	mov	r0, r2
 800ab52:	4798      	blx	r3
 800ab54:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800ab58:	463a      	mov	r2, r7
 800ab5a:	ca07      	ldmia	r2, {r0, r1, r2}
 800ab5c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800ab60:	bf00      	nop
 800ab62:	371c      	adds	r7, #28
 800ab64:	46bd      	mov	sp, r7
 800ab66:	bd90      	pop	{r4, r7, pc}

0800ab68 <_ZN8touchgfx8TextArea9setHeightEs>:
    virtual void setHeight(int16_t height)
 800ab68:	b590      	push	{r4, r7, lr}
 800ab6a:	b087      	sub	sp, #28
 800ab6c:	af00      	add	r7, sp, #0
 800ab6e:	6178      	str	r0, [r7, #20]
 800ab70:	460b      	mov	r3, r1
 800ab72:	827b      	strh	r3, [r7, #18]
        Widget::setHeight(height);
 800ab74:	697b      	ldr	r3, [r7, #20]
 800ab76:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800ab7a:	4611      	mov	r1, r2
 800ab7c:	4618      	mov	r0, r3
 800ab7e:	f7fe fd6d 	bl	800965c <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800ab82:	697b      	ldr	r3, [r7, #20]
 800ab84:	681b      	ldr	r3, [r3, #0]
 800ab86:	3384      	adds	r3, #132	@ 0x84
 800ab88:	681b      	ldr	r3, [r3, #0]
 800ab8a:	697c      	ldr	r4, [r7, #20]
 800ab8c:	463a      	mov	r2, r7
 800ab8e:	6979      	ldr	r1, [r7, #20]
 800ab90:	4610      	mov	r0, r2
 800ab92:	4798      	blx	r3
 800ab94:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800ab98:	463a      	mov	r2, r7
 800ab9a:	ca07      	ldmia	r2, {r0, r1, r2}
 800ab9c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800aba0:	bf00      	nop
 800aba2:	371c      	adds	r7, #28
 800aba4:	46bd      	mov	sp, r7
 800aba6:	bd90      	pop	{r4, r7, pc}

0800aba8 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
    virtual Rect getSolidRect() const
 800aba8:	b580      	push	{r7, lr}
 800abaa:	b082      	sub	sp, #8
 800abac:	af00      	add	r7, sp, #0
 800abae:	6078      	str	r0, [r7, #4]
 800abb0:	6039      	str	r1, [r7, #0]
        return Rect();
 800abb2:	6878      	ldr	r0, [r7, #4]
 800abb4:	f7fe fc25 	bl	8009402 <_ZN8touchgfx4RectC1Ev>
    }
 800abb8:	6878      	ldr	r0, [r7, #4]
 800abba:	3708      	adds	r7, #8
 800abbc:	46bd      	mov	sp, r7
 800abbe:	bd80      	pop	{r7, pc}

0800abc0 <_ZN8touchgfx8TextArea8setAlphaEh>:
    virtual void setAlpha(uint8_t newAlpha)
 800abc0:	b480      	push	{r7}
 800abc2:	b083      	sub	sp, #12
 800abc4:	af00      	add	r7, sp, #0
 800abc6:	6078      	str	r0, [r7, #4]
 800abc8:	460b      	mov	r3, r1
 800abca:	70fb      	strb	r3, [r7, #3]
        alpha = newAlpha;
 800abcc:	687b      	ldr	r3, [r7, #4]
 800abce:	78fa      	ldrb	r2, [r7, #3]
 800abd0:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 800abd4:	bf00      	nop
 800abd6:	370c      	adds	r7, #12
 800abd8:	46bd      	mov	sp, r7
 800abda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abde:	4770      	bx	lr

0800abe0 <_ZN8touchgfx8TextArea12setBaselineYEs>:
    virtual void setBaselineY(int16_t baselineY)
 800abe0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800abe2:	b085      	sub	sp, #20
 800abe4:	af00      	add	r7, sp, #0
 800abe6:	6078      	str	r0, [r7, #4]
 800abe8:	460b      	mov	r3, r1
 800abea:	807b      	strh	r3, [r7, #2]
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800abec:	687e      	ldr	r6, [r7, #4]
 800abee:	687b      	ldr	r3, [r7, #4]
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	3334      	adds	r3, #52	@ 0x34
 800abf4:	681c      	ldr	r4, [r3, #0]
 800abf6:	887d      	ldrh	r5, [r7, #2]
 800abf8:	6878      	ldr	r0, [r7, #4]
 800abfa:	f000 f867 	bl	800accc <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800abfe:	4603      	mov	r3, r0
 800ac00:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800ac02:	4b1c      	ldr	r3, [pc, #112]	@ (800ac74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800ac04:	681b      	ldr	r3, [r3, #0]
 800ac06:	2b00      	cmp	r3, #0
 800ac08:	d105      	bne.n	800ac16 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800ac0a:	4b1b      	ldr	r3, [pc, #108]	@ (800ac78 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800ac0c:	4a1b      	ldr	r2, [pc, #108]	@ (800ac7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800ac0e:	216c      	movs	r1, #108	@ 0x6c
 800ac10:	481b      	ldr	r0, [pc, #108]	@ (800ac80 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800ac12:	f019 f8ad 	bl	8023d70 <__assert_func>
 800ac16:	68fb      	ldr	r3, [r7, #12]
 800ac18:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800ac1a:	68bb      	ldr	r3, [r7, #8]
 800ac1c:	889a      	ldrh	r2, [r3, #4]
 800ac1e:	4b19      	ldr	r3, [pc, #100]	@ (800ac84 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800ac20:	881b      	ldrh	r3, [r3, #0]
 800ac22:	429a      	cmp	r2, r3
 800ac24:	bf34      	ite	cc
 800ac26:	2301      	movcc	r3, #1
 800ac28:	2300      	movcs	r3, #0
 800ac2a:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800ac2c:	2b00      	cmp	r3, #0
 800ac2e:	d105      	bne.n	800ac3c <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800ac30:	4b15      	ldr	r3, [pc, #84]	@ (800ac88 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800ac32:	4a12      	ldr	r2, [pc, #72]	@ (800ac7c <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800ac34:	216d      	movs	r1, #109	@ 0x6d
 800ac36:	4812      	ldr	r0, [pc, #72]	@ (800ac80 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800ac38:	f019 f89a 	bl	8023d70 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800ac3c:	4b13      	ldr	r3, [pc, #76]	@ (800ac8c <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800ac3e:	681a      	ldr	r2, [r3, #0]
 800ac40:	4b0c      	ldr	r3, [pc, #48]	@ (800ac74 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800ac42:	6819      	ldr	r1, [r3, #0]
 800ac44:	68fb      	ldr	r3, [r7, #12]
 800ac46:	889b      	ldrh	r3, [r3, #4]
 800ac48:	005b      	lsls	r3, r3, #1
 800ac4a:	440b      	add	r3, r1
 800ac4c:	781b      	ldrb	r3, [r3, #0]
 800ac4e:	009b      	lsls	r3, r3, #2
 800ac50:	4413      	add	r3, r2
 800ac52:	681b      	ldr	r3, [r3, #0]
 800ac54:	681a      	ldr	r2, [r3, #0]
 800ac56:	3230      	adds	r2, #48	@ 0x30
 800ac58:	6812      	ldr	r2, [r2, #0]
 800ac5a:	4618      	mov	r0, r3
 800ac5c:	4790      	blx	r2
 800ac5e:	4603      	mov	r3, r0
 800ac60:	1aeb      	subs	r3, r5, r3
 800ac62:	b29b      	uxth	r3, r3
 800ac64:	b21b      	sxth	r3, r3
 800ac66:	4619      	mov	r1, r3
 800ac68:	4630      	mov	r0, r6
 800ac6a:	47a0      	blx	r4
    }
 800ac6c:	bf00      	nop
 800ac6e:	3714      	adds	r7, #20
 800ac70:	46bd      	mov	sp, r7
 800ac72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac74:	20002f84 	.word	0x20002f84
 800ac78:	0802519c 	.word	0x0802519c
 800ac7c:	080251e0 	.word	0x080251e0
 800ac80:	0802521c 	.word	0x0802521c
 800ac84:	20002f88 	.word	0x20002f88
 800ac88:	08025260 	.word	0x08025260
 800ac8c:	20002f8c 	.word	0x20002f8c

0800ac90 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800ac90:	b580      	push	{r7, lr}
 800ac92:	b082      	sub	sp, #8
 800ac94:	af00      	add	r7, sp, #0
 800ac96:	6078      	str	r0, [r7, #4]
 800ac98:	460b      	mov	r3, r1
 800ac9a:	807b      	strh	r3, [r7, #2]
 800ac9c:	4613      	mov	r3, r2
 800ac9e:	803b      	strh	r3, [r7, #0]
        setX(x);
 800aca0:	687a      	ldr	r2, [r7, #4]
 800aca2:	687b      	ldr	r3, [r7, #4]
 800aca4:	681b      	ldr	r3, [r3, #0]
 800aca6:	3330      	adds	r3, #48	@ 0x30
 800aca8:	681b      	ldr	r3, [r3, #0]
 800acaa:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800acae:	4610      	mov	r0, r2
 800acb0:	4798      	blx	r3
        setBaselineY(baselineY);
 800acb2:	687b      	ldr	r3, [r7, #4]
 800acb4:	681b      	ldr	r3, [r3, #0]
 800acb6:	3364      	adds	r3, #100	@ 0x64
 800acb8:	681b      	ldr	r3, [r3, #0]
 800acba:	f9b7 2000 	ldrsh.w	r2, [r7]
 800acbe:	4611      	mov	r1, r2
 800acc0:	6878      	ldr	r0, [r7, #4]
 800acc2:	4798      	blx	r3
    }
 800acc4:	bf00      	nop
 800acc6:	3708      	adds	r7, #8
 800acc8:	46bd      	mov	sp, r7
 800acca:	bd80      	pop	{r7, pc}

0800accc <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    const TypedText& getTypedText() const
 800accc:	b480      	push	{r7}
 800acce:	b083      	sub	sp, #12
 800acd0:	af00      	add	r7, sp, #0
 800acd2:	6078      	str	r0, [r7, #4]
        return typedText;
 800acd4:	687b      	ldr	r3, [r7, #4]
 800acd6:	3328      	adds	r3, #40	@ 0x28
    }
 800acd8:	4618      	mov	r0, r3
 800acda:	370c      	adds	r7, #12
 800acdc:	46bd      	mov	sp, r7
 800acde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ace2:	4770      	bx	lr

0800ace4 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800ace4:	b480      	push	{r7}
 800ace6:	b083      	sub	sp, #12
 800ace8:	af00      	add	r7, sp, #0
 800acea:	6078      	str	r0, [r7, #4]
        return 0;
 800acec:	2300      	movs	r3, #0
    }
 800acee:	4618      	mov	r0, r3
 800acf0:	370c      	adds	r7, #12
 800acf2:	46bd      	mov	sp, r7
 800acf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acf8:	4770      	bx	lr
	...

0800acfc <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800acfc:	b580      	push	{r7, lr}
 800acfe:	b082      	sub	sp, #8
 800ad00:	af00      	add	r7, sp, #0
 800ad02:	6078      	str	r0, [r7, #4]
        : TextArea()
 800ad04:	687b      	ldr	r3, [r7, #4]
 800ad06:	4618      	mov	r0, r3
 800ad08:	f7fe feba 	bl	8009a80 <_ZN8touchgfx8TextAreaC1Ev>
 800ad0c:	4a03      	ldr	r2, [pc, #12]	@ (800ad1c <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800ad0e:	687b      	ldr	r3, [r7, #4]
 800ad10:	601a      	str	r2, [r3, #0]
    {
    }
 800ad12:	687b      	ldr	r3, [r7, #4]
 800ad14:	4618      	mov	r0, r3
 800ad16:	3708      	adds	r7, #8
 800ad18:	46bd      	mov	sp, r7
 800ad1a:	bd80      	pop	{r7, pc}
 800ad1c:	08026f84 	.word	0x08026f84

0800ad20 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800ad20:	b580      	push	{r7, lr}
 800ad22:	b082      	sub	sp, #8
 800ad24:	af00      	add	r7, sp, #0
 800ad26:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800ad28:	687b      	ldr	r3, [r7, #4]
 800ad2a:	4618      	mov	r0, r3
 800ad2c:	f7fe fc0c 	bl	8009548 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800ad30:	bf00      	nop
 800ad32:	3708      	adds	r7, #8
 800ad34:	46bd      	mov	sp, r7
 800ad36:	bd80      	pop	{r7, pc}

0800ad38 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800ad38:	b580      	push	{r7, lr}
 800ad3a:	b082      	sub	sp, #8
 800ad3c:	af00      	add	r7, sp, #0
 800ad3e:	6078      	str	r0, [r7, #4]
 800ad40:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800ad42:	6878      	ldr	r0, [r7, #4]
 800ad44:	f7fe feda 	bl	8009afc <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800ad48:	6878      	ldr	r0, [r7, #4]
 800ad4a:	3708      	adds	r7, #8
 800ad4c:	46bd      	mov	sp, r7
 800ad4e:	bd80      	pop	{r7, pc}

0800ad50 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800ad50:	b580      	push	{r7, lr}
 800ad52:	b082      	sub	sp, #8
 800ad54:	af00      	add	r7, sp, #0
 800ad56:	6078      	str	r0, [r7, #4]
 800ad58:	4a05      	ldr	r2, [pc, #20]	@ (800ad70 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800ad5a:	687b      	ldr	r3, [r7, #4]
 800ad5c:	601a      	str	r2, [r3, #0]
 800ad5e:	687b      	ldr	r3, [r7, #4]
 800ad60:	4618      	mov	r0, r3
 800ad62:	f7ff f867 	bl	8009e34 <_ZN8touchgfx8TextAreaD1Ev>
 800ad66:	687b      	ldr	r3, [r7, #4]
 800ad68:	4618      	mov	r0, r3
 800ad6a:	3708      	adds	r7, #8
 800ad6c:	46bd      	mov	sp, r7
 800ad6e:	bd80      	pop	{r7, pc}
 800ad70:	08026f84 	.word	0x08026f84

0800ad74 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800ad74:	b580      	push	{r7, lr}
 800ad76:	b082      	sub	sp, #8
 800ad78:	af00      	add	r7, sp, #0
 800ad7a:	6078      	str	r0, [r7, #4]
 800ad7c:	6878      	ldr	r0, [r7, #4]
 800ad7e:	f7ff ffe7 	bl	800ad50 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800ad82:	2148      	movs	r1, #72	@ 0x48
 800ad84:	6878      	ldr	r0, [r7, #4]
 800ad86:	f018 ff44 	bl	8023c12 <_ZdlPvj>
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	4618      	mov	r0, r3
 800ad8e:	3708      	adds	r7, #8
 800ad90:	46bd      	mov	sp, r7
 800ad92:	bd80      	pop	{r7, pc}

0800ad94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800ad94:	b580      	push	{r7, lr}
 800ad96:	b082      	sub	sp, #8
 800ad98:	af00      	add	r7, sp, #0
 800ad9a:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800ad9c:	687b      	ldr	r3, [r7, #4]
 800ad9e:	4618      	mov	r0, r3
 800ada0:	f7ff ffac 	bl	800acfc <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800ada4:	4a05      	ldr	r2, [pc, #20]	@ (800adbc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800ada6:	687b      	ldr	r3, [r7, #4]
 800ada8:	601a      	str	r2, [r3, #0]
 800adaa:	687b      	ldr	r3, [r7, #4]
 800adac:	2200      	movs	r2, #0
 800adae:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 800adb0:	687b      	ldr	r3, [r7, #4]
 800adb2:	4618      	mov	r0, r3
 800adb4:	3708      	adds	r7, #8
 800adb6:	46bd      	mov	sp, r7
 800adb8:	bd80      	pop	{r7, pc}
 800adba:	bf00      	nop
 800adbc:	08026480 	.word	0x08026480

0800adc0 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800adc0:	b480      	push	{r7}
 800adc2:	b083      	sub	sp, #12
 800adc4:	af00      	add	r7, sp, #0
 800adc6:	6078      	str	r0, [r7, #4]
 800adc8:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800adca:	687b      	ldr	r3, [r7, #4]
 800adcc:	683a      	ldr	r2, [r7, #0]
 800adce:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 800add0:	bf00      	nop
 800add2:	370c      	adds	r7, #12
 800add4:	46bd      	mov	sp, r7
 800add6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adda:	4770      	bx	lr

0800addc <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800addc:	b480      	push	{r7}
 800adde:	b083      	sub	sp, #12
 800ade0:	af00      	add	r7, sp, #0
 800ade2:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 800ade8:	4618      	mov	r0, r3
 800adea:	370c      	adds	r7, #12
 800adec:	46bd      	mov	sp, r7
 800adee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adf2:	4770      	bx	lr

0800adf4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800adf4:	b580      	push	{r7, lr}
 800adf6:	b082      	sub	sp, #8
 800adf8:	af00      	add	r7, sp, #0
 800adfa:	6078      	str	r0, [r7, #4]
 800adfc:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800adfe:	6839      	ldr	r1, [r7, #0]
 800ae00:	6878      	ldr	r0, [r7, #4]
 800ae02:	f7ff ffdd 	bl	800adc0 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800ae06:	bf00      	nop
 800ae08:	3708      	adds	r7, #8
 800ae0a:	46bd      	mov	sp, r7
 800ae0c:	bd80      	pop	{r7, pc}

0800ae0e <_ZN12MainViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 800ae0e:	b480      	push	{r7}
 800ae10:	b083      	sub	sp, #12
 800ae12:	af00      	add	r7, sp, #0
 800ae14:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 800ae16:	bf00      	nop
 800ae18:	370c      	adds	r7, #12
 800ae1a:	46bd      	mov	sp, r7
 800ae1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae20:	4770      	bx	lr

0800ae22 <_ZN12MainViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800ae22:	b580      	push	{r7, lr}
 800ae24:	b082      	sub	sp, #8
 800ae26:	af00      	add	r7, sp, #0
 800ae28:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ae2a:	f007 f999 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 800ae2e:	4603      	mov	r3, r0
    }
 800ae30:	4618      	mov	r0, r3
 800ae32:	3708      	adds	r7, #8
 800ae34:	46bd      	mov	sp, r7
 800ae36:	bd80      	pop	{r7, pc}

0800ae38 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 800ae38:	b580      	push	{r7, lr}
 800ae3a:	b082      	sub	sp, #8
 800ae3c:	af00      	add	r7, sp, #0
 800ae3e:	6078      	str	r0, [r7, #4]
 800ae40:	4a05      	ldr	r2, [pc, #20]	@ (800ae58 <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 800ae42:	687b      	ldr	r3, [r7, #4]
 800ae44:	601a      	str	r2, [r3, #0]
 800ae46:	687b      	ldr	r3, [r7, #4]
 800ae48:	4618      	mov	r0, r3
 800ae4a:	f7fe fd25 	bl	8009898 <_ZN8touchgfx6ScreenD1Ev>
 800ae4e:	687b      	ldr	r3, [r7, #4]
 800ae50:	4618      	mov	r0, r3
 800ae52:	3708      	adds	r7, #8
 800ae54:	46bd      	mov	sp, r7
 800ae56:	bd80      	pop	{r7, pc}
 800ae58:	0802644c 	.word	0x0802644c

0800ae5c <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 800ae5c:	b580      	push	{r7, lr}
 800ae5e:	b082      	sub	sp, #8
 800ae60:	af00      	add	r7, sp, #0
 800ae62:	6078      	str	r0, [r7, #4]
 800ae64:	6878      	ldr	r0, [r7, #4]
 800ae66:	f7ff ffe7 	bl	800ae38 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800ae6a:	2140      	movs	r1, #64	@ 0x40
 800ae6c:	6878      	ldr	r0, [r7, #4]
 800ae6e:	f018 fed0 	bl	8023c12 <_ZdlPvj>
 800ae72:	687b      	ldr	r3, [r7, #4]
 800ae74:	4618      	mov	r0, r3
 800ae76:	3708      	adds	r7, #8
 800ae78:	46bd      	mov	sp, r7
 800ae7a:	bd80      	pop	{r7, pc}

0800ae7c <_ZN8touchgfx12ToggleButtonC1Ev>:
class ToggleButton : public Button
 800ae7c:	b580      	push	{r7, lr}
 800ae7e:	b082      	sub	sp, #8
 800ae80:	af00      	add	r7, sp, #0
 800ae82:	6078      	str	r0, [r7, #4]
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	4618      	mov	r0, r3
 800ae88:	f7ff fe16 	bl	800aab8 <_ZN8touchgfx6ButtonC1Ev>
 800ae8c:	4a07      	ldr	r2, [pc, #28]	@ (800aeac <_ZN8touchgfx12ToggleButtonC1Ev+0x30>)
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	601a      	str	r2, [r3, #0]
 800ae92:	687b      	ldr	r3, [r7, #4]
 800ae94:	3334      	adds	r3, #52	@ 0x34
 800ae96:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ae9a:	4618      	mov	r0, r3
 800ae9c:	f7fe fae8 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800aea0:	687b      	ldr	r3, [r7, #4]
 800aea2:	4618      	mov	r0, r3
 800aea4:	3708      	adds	r7, #8
 800aea6:	46bd      	mov	sp, r7
 800aea8:	bd80      	pop	{r7, pc}
 800aeaa:	bf00      	nop
 800aeac:	08026da4 	.word	0x08026da4

0800aeb0 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 800aeb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aeb4:	b0c6      	sub	sp, #280	@ 0x118
 800aeb6:	af02      	add	r7, sp, #8
 800aeb8:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800aeba:	697b      	ldr	r3, [r7, #20]
 800aebc:	4618      	mov	r0, r3
 800aebe:	f000 fd3b 	bl	800b938 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 800aec2:	4ada      	ldr	r2, [pc, #872]	@ (800b22c <_ZN12MainViewBaseC1Ev+0x37c>)
 800aec4:	697b      	ldr	r3, [r7, #20]
 800aec6:	601a      	str	r2, [r3, #0]
 800aec8:	697b      	ldr	r3, [r7, #20]
 800aeca:	3340      	adds	r3, #64	@ 0x40
 800aecc:	4618      	mov	r0, r3
 800aece:	f7fe fd7f 	bl	80099d0 <_ZN8touchgfx3BoxC1Ev>
 800aed2:	697b      	ldr	r3, [r7, #20]
 800aed4:	336c      	adds	r3, #108	@ 0x6c
 800aed6:	4618      	mov	r0, r3
 800aed8:	f7ff ffd0 	bl	800ae7c <_ZN8touchgfx12ToggleButtonC1Ev>
 800aedc:	697b      	ldr	r3, [r7, #20]
 800aede:	33a4      	adds	r3, #164	@ 0xa4
 800aee0:	4618      	mov	r0, r3
 800aee2:	f7ff ff57 	bl	800ad94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800aee6:	697b      	ldr	r3, [r7, #20]
 800aee8:	33f0      	adds	r3, #240	@ 0xf0
 800aeea:	4618      	mov	r0, r3
 800aeec:	f7ff ff52 	bl	800ad94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800aef0:	697b      	ldr	r3, [r7, #20]
 800aef2:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800aef6:	4618      	mov	r0, r3
 800aef8:	f7ff ff4c 	bl	800ad94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800aefc:	697b      	ldr	r3, [r7, #20]
 800aefe:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800af02:	4618      	mov	r0, r3
 800af04:	f7ff ff46 	bl	800ad94 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800af08:	697b      	ldr	r3, [r7, #20]
 800af0a:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800af0e:	4618      	mov	r0, r3
 800af10:	f7ff fba0 	bl	800a654 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800af14:	697b      	ldr	r3, [r7, #20]
 800af16:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800af1a:	4618      	mov	r0, r3
 800af1c:	f7ff fb9a 	bl	800a654 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800af20:	697b      	ldr	r3, [r7, #20]
 800af22:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800af26:	4618      	mov	r0, r3
 800af28:	f7ff fb94 	bl	800a654 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
 800af2c:	697b      	ldr	r3, [r7, #20]
 800af2e:	f503 706d 	add.w	r0, r3, #948	@ 0x3b4
 800af32:	4bbf      	ldr	r3, [pc, #764]	@ (800b230 <_ZN12MainViewBaseC1Ev+0x380>)
 800af34:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800af36:	2300      	movs	r3, #0
 800af38:	633b      	str	r3, [r7, #48]	@ 0x30
 800af3a:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800af3e:	cb0c      	ldmia	r3, {r2, r3}
 800af40:	6979      	ldr	r1, [r7, #20]
 800af42:	f000 fd1f 	bl	800b984 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800af46:	697b      	ldr	r3, [r7, #20]
 800af48:	f503 7071 	add.w	r0, r3, #964	@ 0x3c4
 800af4c:	4bb9      	ldr	r3, [pc, #740]	@ (800b234 <_ZN12MainViewBaseC1Ev+0x384>)
 800af4e:	637b      	str	r3, [r7, #52]	@ 0x34
 800af50:	2300      	movs	r3, #0
 800af52:	63bb      	str	r3, [r7, #56]	@ 0x38
 800af54:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800af58:	cb0c      	ldmia	r3, {r2, r3}
 800af5a:	6979      	ldr	r1, [r7, #20]
 800af5c:	f000 fd32 	bl	800b9c4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800af60:	697b      	ldr	r3, [r7, #20]
 800af62:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800af66:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800af6a:	9300      	str	r3, [sp, #0]
 800af6c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800af70:	2200      	movs	r2, #0
 800af72:	2100      	movs	r1, #0
 800af74:	f7fe fb06 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800af78:	697b      	ldr	r3, [r7, #20]
 800af7a:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800af7e:	2300      	movs	r3, #0
 800af80:	f887 30ac 	strb.w	r3, [r7, #172]	@ 0xac
 800af84:	2300      	movs	r3, #0
 800af86:	f887 30ab 	strb.w	r3, [r7, #171]	@ 0xab
 800af8a:	2300      	movs	r3, #0
 800af8c:	f887 30aa 	strb.w	r3, [r7, #170]	@ 0xaa
 800af90:	f897 30ac 	ldrb.w	r3, [r7, #172]	@ 0xac
 800af94:	041a      	lsls	r2, r3, #16
 800af96:	f897 30ab 	ldrb.w	r3, [r7, #171]	@ 0xab
 800af9a:	021b      	lsls	r3, r3, #8
 800af9c:	431a      	orrs	r2, r3
 800af9e:	f897 30aa 	ldrb.w	r3, [r7, #170]	@ 0xaa
 800afa2:	4313      	orrs	r3, r2
 800afa4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800afa8:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 800afac:	4611      	mov	r1, r2
 800afae:	4618      	mov	r0, r3
 800afb0:	f7fe fa18 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800afb4:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800afb8:	4619      	mov	r1, r3
 800afba:	4620      	mov	r0, r4
 800afbc:	f7fe fd2c 	bl	8009a18 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800afc0:	697a      	ldr	r2, [r7, #20]
 800afc2:	697b      	ldr	r3, [r7, #20]
 800afc4:	3340      	adds	r3, #64	@ 0x40
 800afc6:	4619      	mov	r1, r3
 800afc8:	4610      	mov	r0, r2
 800afca:	f7fe fcbd 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    toggleButton1.setXY(229, 236);
 800afce:	697b      	ldr	r3, [r7, #20]
 800afd0:	336c      	adds	r3, #108	@ 0x6c
 800afd2:	22ec      	movs	r2, #236	@ 0xec
 800afd4:	21e5      	movs	r1, #229	@ 0xe5
 800afd6:	4618      	mov	r0, r3
 800afd8:	f7fe fb13 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_OFF_NORMAL_ID));
 800afdc:	697b      	ldr	r3, [r7, #20]
 800afde:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800afe2:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800afe6:	2103      	movs	r1, #3
 800afe8:	4618      	mov	r0, r3
 800afea:	f7fe fa41 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800afee:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800aff2:	2102      	movs	r1, #2
 800aff4:	4618      	mov	r0, r3
 800aff6:	f7fe fa3b 	bl	8009470 <_ZN8touchgfx6BitmapC1Et>
 800affa:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 800affe:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800b002:	4619      	mov	r1, r3
 800b004:	4620      	mov	r0, r4
 800b006:	f7ff fd7b 	bl	800ab00 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.forceState(true);
 800b00a:	697b      	ldr	r3, [r7, #20]
 800b00c:	336c      	adds	r3, #108	@ 0x6c
 800b00e:	2101      	movs	r1, #1
 800b010:	4618      	mov	r0, r3
 800b012:	f004 fd97 	bl	800fb44 <_ZN8touchgfx12ToggleButton10forceStateEb>
    toggleButton1.setAction(buttonCallback);
 800b016:	697b      	ldr	r3, [r7, #20]
 800b018:	f103 026c 	add.w	r2, r3, #108	@ 0x6c
 800b01c:	697b      	ldr	r3, [r7, #20]
 800b01e:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800b022:	4619      	mov	r1, r3
 800b024:	4610      	mov	r0, r2
 800b026:	f7ff fd39 	bl	800aa9c <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(toggleButton1);
 800b02a:	697a      	ldr	r2, [r7, #20]
 800b02c:	697b      	ldr	r3, [r7, #20]
 800b02e:	336c      	adds	r3, #108	@ 0x6c
 800b030:	4619      	mov	r1, r3
 800b032:	4610      	mov	r0, r2
 800b034:	f7fe fc88 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    HUMVAL.setPosition(9, 24, 178, 48);
 800b038:	697b      	ldr	r3, [r7, #20]
 800b03a:	f103 00a4 	add.w	r0, r3, #164	@ 0xa4
 800b03e:	2330      	movs	r3, #48	@ 0x30
 800b040:	9300      	str	r3, [sp, #0]
 800b042:	23b2      	movs	r3, #178	@ 0xb2
 800b044:	2218      	movs	r2, #24
 800b046:	2109      	movs	r1, #9
 800b048:	f7fe fa9c 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    HUMVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b04c:	697b      	ldr	r3, [r7, #20]
 800b04e:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800b052:	23ff      	movs	r3, #255	@ 0xff
 800b054:	f887 30af 	strb.w	r3, [r7, #175]	@ 0xaf
 800b058:	23ff      	movs	r3, #255	@ 0xff
 800b05a:	f887 30ae 	strb.w	r3, [r7, #174]	@ 0xae
 800b05e:	23ff      	movs	r3, #255	@ 0xff
 800b060:	f887 30ad 	strb.w	r3, [r7, #173]	@ 0xad
 800b064:	f897 30af 	ldrb.w	r3, [r7, #175]	@ 0xaf
 800b068:	041a      	lsls	r2, r3, #16
 800b06a:	f897 30ae 	ldrb.w	r3, [r7, #174]	@ 0xae
 800b06e:	021b      	lsls	r3, r3, #8
 800b070:	431a      	orrs	r2, r3
 800b072:	f897 30ad 	ldrb.w	r3, [r7, #173]	@ 0xad
 800b076:	4313      	orrs	r3, r2
 800b078:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b07c:	f107 03a0 	add.w	r3, r7, #160	@ 0xa0
 800b080:	4611      	mov	r1, r2
 800b082:	4618      	mov	r0, r3
 800b084:	f7fe f9ae 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b088:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800b08c:	f8c7 40b0 	str.w	r4, [r7, #176]	@ 0xb0
 800b090:	62bb      	str	r3, [r7, #40]	@ 0x28
        color = newColor;
 800b092:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 800b096:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800b098:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b09a:	bf00      	nop
    HUMVAL.setLinespacing(0);
 800b09c:	697b      	ldr	r3, [r7, #20]
 800b09e:	33a4      	adds	r3, #164	@ 0xa4
 800b0a0:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800b0a4:	2300      	movs	r3, #0
 800b0a6:	f8a7 30b6 	strh.w	r3, [r7, #182]	@ 0xb6
        linespace = space;
 800b0aa:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800b0ae:	f8b7 20b6 	ldrh.w	r2, [r7, #182]	@ 0xb6
 800b0b2:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b0b4:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800b0b8:	681b      	ldr	r3, [r3, #0]
 800b0ba:	3384      	adds	r3, #132	@ 0x84
 800b0bc:	681b      	ldr	r3, [r3, #0]
 800b0be:	f8d7 40b8 	ldr.w	r4, [r7, #184]	@ 0xb8
 800b0c2:	463a      	mov	r2, r7
 800b0c4:	f8d7 10b8 	ldr.w	r1, [r7, #184]	@ 0xb8
 800b0c8:	4610      	mov	r0, r2
 800b0ca:	4798      	blx	r3
 800b0cc:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b0d0:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800b0d4:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b0d8:	ca07      	ldmia	r2, {r0, r1, r2}
 800b0da:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b0de:	bf00      	nop
    HUMVALBuffer[0] = 0;
 800b0e0:	697b      	ldr	r3, [r7, #20]
 800b0e2:	2200      	movs	r2, #0
 800b0e4:	f8a3 233c 	strh.w	r2, [r3, #828]	@ 0x33c
    HUMVAL.setWildcard(HUMVALBuffer);
 800b0e8:	697b      	ldr	r3, [r7, #20]
 800b0ea:	f103 02a4 	add.w	r2, r3, #164	@ 0xa4
 800b0ee:	697b      	ldr	r3, [r7, #20]
 800b0f0:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800b0f4:	4619      	mov	r1, r3
 800b0f6:	4610      	mov	r0, r2
 800b0f8:	f7ff fe7c 	bl	800adf4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    HUMVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPPC));
 800b0fc:	697b      	ldr	r3, [r7, #20]
 800b0fe:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800b102:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800b106:	210a      	movs	r1, #10
 800b108:	4618      	mov	r0, r3
 800b10a:	f7fe fca3 	bl	8009a54 <_ZN8touchgfx9TypedTextC1Et>
 800b10e:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800b112:	4619      	mov	r1, r3
 800b114:	4620      	mov	r0, r4
 800b116:	f005 f895 	bl	8010244 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b11a:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800b11e:	4618      	mov	r0, r3
 800b120:	f7fd f8dc 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(HUMVAL);
 800b124:	697a      	ldr	r2, [r7, #20]
 800b126:	697b      	ldr	r3, [r7, #20]
 800b128:	33a4      	adds	r3, #164	@ 0xa4
 800b12a:	4619      	mov	r1, r3
 800b12c:	4610      	mov	r0, r2
 800b12e:	f7fe fc0b 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TEMPVAL.setPosition(9, 79, 178, 46);
 800b132:	697b      	ldr	r3, [r7, #20]
 800b134:	f103 00f0 	add.w	r0, r3, #240	@ 0xf0
 800b138:	232e      	movs	r3, #46	@ 0x2e
 800b13a:	9300      	str	r3, [sp, #0]
 800b13c:	23b2      	movs	r3, #178	@ 0xb2
 800b13e:	224f      	movs	r2, #79	@ 0x4f
 800b140:	2109      	movs	r1, #9
 800b142:	f7fe fa1f 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    TEMPVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b146:	697b      	ldr	r3, [r7, #20]
 800b148:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800b14c:	23ff      	movs	r3, #255	@ 0xff
 800b14e:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
 800b152:	23ff      	movs	r3, #255	@ 0xff
 800b154:	f887 30be 	strb.w	r3, [r7, #190]	@ 0xbe
 800b158:	23ff      	movs	r3, #255	@ 0xff
 800b15a:	f887 30bd 	strb.w	r3, [r7, #189]	@ 0xbd
 800b15e:	f897 30bf 	ldrb.w	r3, [r7, #191]	@ 0xbf
 800b162:	041a      	lsls	r2, r3, #16
 800b164:	f897 30be 	ldrb.w	r3, [r7, #190]	@ 0xbe
 800b168:	021b      	lsls	r3, r3, #8
 800b16a:	431a      	orrs	r2, r3
 800b16c:	f897 30bd 	ldrb.w	r3, [r7, #189]	@ 0xbd
 800b170:	4313      	orrs	r3, r2
 800b172:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b176:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800b17a:	4611      	mov	r1, r2
 800b17c:	4618      	mov	r0, r3
 800b17e:	f7fe f931 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b182:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800b186:	f8c7 40c0 	str.w	r4, [r7, #192]	@ 0xc0
 800b18a:	627b      	str	r3, [r7, #36]	@ 0x24
        color = newColor;
 800b18c:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800b190:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800b192:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b194:	bf00      	nop
    TEMPVAL.setLinespacing(0);
 800b196:	697b      	ldr	r3, [r7, #20]
 800b198:	33f0      	adds	r3, #240	@ 0xf0
 800b19a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800b19e:	2300      	movs	r3, #0
 800b1a0:	f8a7 30c6 	strh.w	r3, [r7, #198]	@ 0xc6
        linespace = space;
 800b1a4:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800b1a8:	f8b7 20c6 	ldrh.w	r2, [r7, #198]	@ 0xc6
 800b1ac:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b1ae:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800b1b2:	681b      	ldr	r3, [r3, #0]
 800b1b4:	3384      	adds	r3, #132	@ 0x84
 800b1b6:	681b      	ldr	r3, [r3, #0]
 800b1b8:	f8d7 40c8 	ldr.w	r4, [r7, #200]	@ 0xc8
 800b1bc:	463a      	mov	r2, r7
 800b1be:	f8d7 10c8 	ldr.w	r1, [r7, #200]	@ 0xc8
 800b1c2:	4610      	mov	r0, r2
 800b1c4:	4798      	blx	r3
 800b1c6:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b1ca:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800b1ce:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b1d2:	ca07      	ldmia	r2, {r0, r1, r2}
 800b1d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b1d8:	bf00      	nop
    TEMPVALBuffer[0] = 0;
 800b1da:	697b      	ldr	r3, [r7, #20]
 800b1dc:	2200      	movs	r2, #0
 800b1de:	f8a3 2364 	strh.w	r2, [r3, #868]	@ 0x364
    TEMPVAL.setWildcard(TEMPVALBuffer);
 800b1e2:	697b      	ldr	r3, [r7, #20]
 800b1e4:	f103 02f0 	add.w	r2, r3, #240	@ 0xf0
 800b1e8:	697b      	ldr	r3, [r7, #20]
 800b1ea:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800b1ee:	4619      	mov	r1, r3
 800b1f0:	4610      	mov	r0, r2
 800b1f2:	f7ff fdff 	bl	800adf4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TEMPVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0MT1));
 800b1f6:	697b      	ldr	r3, [r7, #20]
 800b1f8:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800b1fc:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800b200:	2109      	movs	r1, #9
 800b202:	4618      	mov	r0, r3
 800b204:	f7fe fc26 	bl	8009a54 <_ZN8touchgfx9TypedTextC1Et>
 800b208:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800b20c:	4619      	mov	r1, r3
 800b20e:	4620      	mov	r0, r4
 800b210:	f005 f818 	bl	8010244 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b214:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800b218:	4618      	mov	r0, r3
 800b21a:	f7fd f85f 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(TEMPVAL);
 800b21e:	697a      	ldr	r2, [r7, #20]
 800b220:	697b      	ldr	r3, [r7, #20]
 800b222:	33f0      	adds	r3, #240	@ 0xf0
 800b224:	4619      	mov	r1, r3
 800b226:	4610      	mov	r0, r2
 800b228:	e006      	b.n	800b238 <_ZN12MainViewBaseC1Ev+0x388>
 800b22a:	bf00      	nop
 800b22c:	080263e4 	.word	0x080263e4
 800b230:	0800b8e3 	.word	0x0800b8e3
 800b234:	0800b90b 	.word	0x0800b90b
 800b238:	f7fe fb86 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ADCVAL.setPosition(98, 183, 303, 43);
 800b23c:	697b      	ldr	r3, [r7, #20]
 800b23e:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800b242:	232b      	movs	r3, #43	@ 0x2b
 800b244:	9300      	str	r3, [sp, #0]
 800b246:	f240 132f 	movw	r3, #303	@ 0x12f
 800b24a:	22b7      	movs	r2, #183	@ 0xb7
 800b24c:	2162      	movs	r1, #98	@ 0x62
 800b24e:	f7fe f999 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    ADCVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b252:	697b      	ldr	r3, [r7, #20]
 800b254:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800b258:	23ff      	movs	r3, #255	@ 0xff
 800b25a:	f887 30cf 	strb.w	r3, [r7, #207]	@ 0xcf
 800b25e:	23ff      	movs	r3, #255	@ 0xff
 800b260:	f887 30ce 	strb.w	r3, [r7, #206]	@ 0xce
 800b264:	23ff      	movs	r3, #255	@ 0xff
 800b266:	f887 30cd 	strb.w	r3, [r7, #205]	@ 0xcd
 800b26a:	f897 30cf 	ldrb.w	r3, [r7, #207]	@ 0xcf
 800b26e:	041a      	lsls	r2, r3, #16
 800b270:	f897 30ce 	ldrb.w	r3, [r7, #206]	@ 0xce
 800b274:	021b      	lsls	r3, r3, #8
 800b276:	431a      	orrs	r2, r3
 800b278:	f897 30cd 	ldrb.w	r3, [r7, #205]	@ 0xcd
 800b27c:	4313      	orrs	r3, r2
 800b27e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b282:	f107 0398 	add.w	r3, r7, #152	@ 0x98
 800b286:	4611      	mov	r1, r2
 800b288:	4618      	mov	r0, r3
 800b28a:	f7fe f8ab 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b28e:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800b292:	f8c7 40d0 	str.w	r4, [r7, #208]	@ 0xd0
 800b296:	623b      	str	r3, [r7, #32]
        color = newColor;
 800b298:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800b29c:	6a3a      	ldr	r2, [r7, #32]
 800b29e:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b2a0:	bf00      	nop
    ADCVAL.setLinespacing(0);
 800b2a2:	697b      	ldr	r3, [r7, #20]
 800b2a4:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800b2a8:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800b2ac:	2300      	movs	r3, #0
 800b2ae:	f8a7 30d6 	strh.w	r3, [r7, #214]	@ 0xd6
        linespace = space;
 800b2b2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800b2b6:	f8b7 20d6 	ldrh.w	r2, [r7, #214]	@ 0xd6
 800b2ba:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b2bc:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800b2c0:	681b      	ldr	r3, [r3, #0]
 800b2c2:	3384      	adds	r3, #132	@ 0x84
 800b2c4:	681b      	ldr	r3, [r3, #0]
 800b2c6:	f8d7 40d8 	ldr.w	r4, [r7, #216]	@ 0xd8
 800b2ca:	463a      	mov	r2, r7
 800b2cc:	f8d7 10d8 	ldr.w	r1, [r7, #216]	@ 0xd8
 800b2d0:	4610      	mov	r0, r2
 800b2d2:	4798      	blx	r3
 800b2d4:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b2d8:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800b2dc:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b2e0:	ca07      	ldmia	r2, {r0, r1, r2}
 800b2e2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b2e6:	bf00      	nop
    ADCVALBuffer[0] = 0;
 800b2e8:	697b      	ldr	r3, [r7, #20]
 800b2ea:	2200      	movs	r2, #0
 800b2ec:	f8a3 238c 	strh.w	r2, [r3, #908]	@ 0x38c
    ADCVAL.setWildcard(ADCVALBuffer);
 800b2f0:	697b      	ldr	r3, [r7, #20]
 800b2f2:	f503 729e 	add.w	r2, r3, #316	@ 0x13c
 800b2f6:	697b      	ldr	r3, [r7, #20]
 800b2f8:	f503 7363 	add.w	r3, r3, #908	@ 0x38c
 800b2fc:	4619      	mov	r1, r3
 800b2fe:	4610      	mov	r0, r2
 800b300:	f7ff fd78 	bl	800adf4 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ADCVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSQP));
 800b304:	697b      	ldr	r3, [r7, #20]
 800b306:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800b30a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800b30e:	2108      	movs	r1, #8
 800b310:	4618      	mov	r0, r3
 800b312:	f7fe fb9f 	bl	8009a54 <_ZN8touchgfx9TypedTextC1Et>
 800b316:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800b31a:	4619      	mov	r1, r3
 800b31c:	4620      	mov	r0, r4
 800b31e:	f004 ff91 	bl	8010244 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b322:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800b326:	4618      	mov	r0, r3
 800b328:	f7fc ffd8 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(ADCVAL);
 800b32c:	697a      	ldr	r2, [r7, #20]
 800b32e:	697b      	ldr	r3, [r7, #20]
 800b330:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800b334:	4619      	mov	r1, r3
 800b336:	4610      	mov	r0, r2
 800b338:	f7fe fb06 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(0, 135);
 800b33c:	697b      	ldr	r3, [r7, #20]
 800b33e:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800b342:	2287      	movs	r2, #135	@ 0x87
 800b344:	2100      	movs	r1, #0
 800b346:	4618      	mov	r0, r3
 800b348:	f7fe f95b 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b34c:	697b      	ldr	r3, [r7, #20]
 800b34e:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800b352:	23ff      	movs	r3, #255	@ 0xff
 800b354:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 800b358:	23ff      	movs	r3, #255	@ 0xff
 800b35a:	f887 30de 	strb.w	r3, [r7, #222]	@ 0xde
 800b35e:	23ff      	movs	r3, #255	@ 0xff
 800b360:	f887 30dd 	strb.w	r3, [r7, #221]	@ 0xdd
 800b364:	f897 30df 	ldrb.w	r3, [r7, #223]	@ 0xdf
 800b368:	041a      	lsls	r2, r3, #16
 800b36a:	f897 30de 	ldrb.w	r3, [r7, #222]	@ 0xde
 800b36e:	021b      	lsls	r3, r3, #8
 800b370:	431a      	orrs	r2, r3
 800b372:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 800b376:	4313      	orrs	r3, r2
 800b378:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b37c:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800b380:	4611      	mov	r1, r2
 800b382:	4618      	mov	r0, r3
 800b384:	f7fe f82e 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b388:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800b38c:	f8c7 40e0 	str.w	r4, [r7, #224]	@ 0xe0
 800b390:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800b392:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800b396:	69fa      	ldr	r2, [r7, #28]
 800b398:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b39a:	bf00      	nop
    textArea1.setLinespacing(0);
 800b39c:	697b      	ldr	r3, [r7, #20]
 800b39e:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800b3a2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800b3a6:	2300      	movs	r3, #0
 800b3a8:	f8a7 30e6 	strh.w	r3, [r7, #230]	@ 0xe6
        linespace = space;
 800b3ac:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800b3b0:	f8b7 20e6 	ldrh.w	r2, [r7, #230]	@ 0xe6
 800b3b4:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b3b6:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800b3ba:	681b      	ldr	r3, [r3, #0]
 800b3bc:	3384      	adds	r3, #132	@ 0x84
 800b3be:	681b      	ldr	r3, [r3, #0]
 800b3c0:	f8d7 40e8 	ldr.w	r4, [r7, #232]	@ 0xe8
 800b3c4:	463a      	mov	r2, r7
 800b3c6:	f8d7 10e8 	ldr.w	r1, [r7, #232]	@ 0xe8
 800b3ca:	4610      	mov	r0, r2
 800b3cc:	4798      	blx	r3
 800b3ce:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800b3d2:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800b3d6:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b3da:	ca07      	ldmia	r2, {r0, r1, r2}
 800b3dc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b3e0:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E175));
 800b3e2:	697b      	ldr	r3, [r7, #20]
 800b3e4:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800b3e8:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800b3ec:	2107      	movs	r1, #7
 800b3ee:	4618      	mov	r0, r3
 800b3f0:	f7fe fb30 	bl	8009a54 <_ZN8touchgfx9TypedTextC1Et>
 800b3f4:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800b3f8:	4619      	mov	r1, r3
 800b3fa:	4620      	mov	r0, r4
 800b3fc:	f004 ff22 	bl	8010244 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b400:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800b404:	4618      	mov	r0, r3
 800b406:	f7fc ff69 	bl	80082dc <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800b40a:	697a      	ldr	r2, [r7, #20]
 800b40c:	697b      	ldr	r3, [r7, #20]
 800b40e:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800b412:	4619      	mov	r1, r3
 800b414:	4610      	mov	r0, r2
 800b416:	f7fe fa97 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800b41a:	697b      	ldr	r3, [r7, #20]
 800b41c:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800b420:	2332      	movs	r3, #50	@ 0x32
 800b422:	9300      	str	r3, [sp, #0]
 800b424:	2332      	movs	r3, #50	@ 0x32
 800b426:	2200      	movs	r2, #0
 800b428:	2100      	movs	r1, #0
 800b42a:	f7ff f983 	bl	800a734 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800b42e:	697b      	ldr	r3, [r7, #20]
 800b430:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800b434:	2105      	movs	r1, #5
 800b436:	4618      	mov	r0, r3
 800b438:	f7ff f99c 	bl	800a774 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800b43c:	697b      	ldr	r3, [r7, #20]
 800b43e:	f503 74ea 	add.w	r4, r3, #468	@ 0x1d4
 800b442:	2300      	movs	r3, #0
 800b444:	f887 30ee 	strb.w	r3, [r7, #238]	@ 0xee
 800b448:	2366      	movs	r3, #102	@ 0x66
 800b44a:	f887 30ed 	strb.w	r3, [r7, #237]	@ 0xed
 800b44e:	2399      	movs	r3, #153	@ 0x99
 800b450:	f887 30ec 	strb.w	r3, [r7, #236]	@ 0xec
 800b454:	f897 30ee 	ldrb.w	r3, [r7, #238]	@ 0xee
 800b458:	041a      	lsls	r2, r3, #16
 800b45a:	f897 30ed 	ldrb.w	r3, [r7, #237]	@ 0xed
 800b45e:	021b      	lsls	r3, r3, #8
 800b460:	431a      	orrs	r2, r3
 800b462:	f897 30ec 	ldrb.w	r3, [r7, #236]	@ 0xec
 800b466:	4313      	orrs	r3, r2
 800b468:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b46c:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 800b470:	4611      	mov	r1, r2
 800b472:	4618      	mov	r0, r3
 800b474:	f7fd ffb6 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b478:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b47c:	461d      	mov	r5, r3
 800b47e:	2300      	movs	r3, #0
 800b480:	f887 30f1 	strb.w	r3, [r7, #241]	@ 0xf1
 800b484:	2399      	movs	r3, #153	@ 0x99
 800b486:	f887 30f0 	strb.w	r3, [r7, #240]	@ 0xf0
 800b48a:	23cc      	movs	r3, #204	@ 0xcc
 800b48c:	f887 30ef 	strb.w	r3, [r7, #239]	@ 0xef
 800b490:	f897 30f1 	ldrb.w	r3, [r7, #241]	@ 0xf1
 800b494:	041a      	lsls	r2, r3, #16
 800b496:	f897 30f0 	ldrb.w	r3, [r7, #240]	@ 0xf0
 800b49a:	021b      	lsls	r3, r3, #8
 800b49c:	431a      	orrs	r2, r3
 800b49e:	f897 30ef 	ldrb.w	r3, [r7, #239]	@ 0xef
 800b4a2:	4313      	orrs	r3, r2
 800b4a4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b4a8:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 800b4ac:	4611      	mov	r1, r2
 800b4ae:	4618      	mov	r0, r3
 800b4b0:	f7fd ff98 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b4b4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800b4b8:	461e      	mov	r6, r3
 800b4ba:	2300      	movs	r3, #0
 800b4bc:	f887 30f4 	strb.w	r3, [r7, #244]	@ 0xf4
 800b4c0:	2333      	movs	r3, #51	@ 0x33
 800b4c2:	f887 30f3 	strb.w	r3, [r7, #243]	@ 0xf3
 800b4c6:	2366      	movs	r3, #102	@ 0x66
 800b4c8:	f887 30f2 	strb.w	r3, [r7, #242]	@ 0xf2
 800b4cc:	f897 30f4 	ldrb.w	r3, [r7, #244]	@ 0xf4
 800b4d0:	041a      	lsls	r2, r3, #16
 800b4d2:	f897 30f3 	ldrb.w	r3, [r7, #243]	@ 0xf3
 800b4d6:	021b      	lsls	r3, r3, #8
 800b4d8:	431a      	orrs	r2, r3
 800b4da:	f897 30f2 	ldrb.w	r3, [r7, #242]	@ 0xf2
 800b4de:	4313      	orrs	r3, r2
 800b4e0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b4e4:	f107 0388 	add.w	r3, r7, #136	@ 0x88
 800b4e8:	4611      	mov	r1, r2
 800b4ea:	4618      	mov	r0, r3
 800b4ec:	f7fd ff7a 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b4f0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800b4f4:	4698      	mov	r8, r3
 800b4f6:	2333      	movs	r3, #51	@ 0x33
 800b4f8:	f887 30f7 	strb.w	r3, [r7, #247]	@ 0xf7
 800b4fc:	2366      	movs	r3, #102	@ 0x66
 800b4fe:	f887 30f6 	strb.w	r3, [r7, #246]	@ 0xf6
 800b502:	2399      	movs	r3, #153	@ 0x99
 800b504:	f887 30f5 	strb.w	r3, [r7, #245]	@ 0xf5
 800b508:	f897 30f7 	ldrb.w	r3, [r7, #247]	@ 0xf7
 800b50c:	041a      	lsls	r2, r3, #16
 800b50e:	f897 30f6 	ldrb.w	r3, [r7, #246]	@ 0xf6
 800b512:	021b      	lsls	r3, r3, #8
 800b514:	431a      	orrs	r2, r3
 800b516:	f897 30f5 	ldrb.w	r3, [r7, #245]	@ 0xf5
 800b51a:	4313      	orrs	r3, r2
 800b51c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b520:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 800b524:	4611      	mov	r1, r2
 800b526:	4618      	mov	r0, r3
 800b528:	f7fd ff5c 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b52c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800b530:	9300      	str	r3, [sp, #0]
 800b532:	4643      	mov	r3, r8
 800b534:	4632      	mov	r2, r6
 800b536:	4629      	mov	r1, r5
 800b538:	4620      	mov	r0, r4
 800b53a:	f7ff f92d 	bl	800a798 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800b53e:	697b      	ldr	r3, [r7, #20]
 800b540:	f503 72ea 	add.w	r2, r3, #468	@ 0x1d4
 800b544:	697b      	ldr	r3, [r7, #20]
 800b546:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800b54a:	4619      	mov	r1, r3
 800b54c:	4610      	mov	r0, r2
 800b54e:	f7fe fb5d 	bl	8009c0c <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(401, 13, 50, 50);
 800b552:	697b      	ldr	r3, [r7, #20]
 800b554:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800b558:	2332      	movs	r3, #50	@ 0x32
 800b55a:	9300      	str	r3, [sp, #0]
 800b55c:	2332      	movs	r3, #50	@ 0x32
 800b55e:	220d      	movs	r2, #13
 800b560:	f240 1191 	movw	r1, #401	@ 0x191
 800b564:	f7fe f80e 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800b568:	697a      	ldr	r2, [r7, #20]
 800b56a:	697b      	ldr	r3, [r7, #20]
 800b56c:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800b570:	4619      	mov	r1, r3
 800b572:	4610      	mov	r0, r2
 800b574:	f7fe f9e8 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_1.setBoxWithBorderPosition(0, 0, 50, 50);
 800b578:	697b      	ldr	r3, [r7, #20]
 800b57a:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800b57e:	2332      	movs	r3, #50	@ 0x32
 800b580:	9300      	str	r3, [sp, #0]
 800b582:	2332      	movs	r3, #50	@ 0x32
 800b584:	2200      	movs	r2, #0
 800b586:	2100      	movs	r1, #0
 800b588:	f7ff f8d4 	bl	800a734 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_1.setBorderSize(5);
 800b58c:	697b      	ldr	r3, [r7, #20]
 800b58e:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800b592:	2105      	movs	r1, #5
 800b594:	4618      	mov	r0, r3
 800b596:	f7ff f8ed 	bl	800a774 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800b59a:	697b      	ldr	r3, [r7, #20]
 800b59c:	f503 7413 	add.w	r4, r3, #588	@ 0x24c
 800b5a0:	2300      	movs	r3, #0
 800b5a2:	f887 30fa 	strb.w	r3, [r7, #250]	@ 0xfa
 800b5a6:	2366      	movs	r3, #102	@ 0x66
 800b5a8:	f887 30f9 	strb.w	r3, [r7, #249]	@ 0xf9
 800b5ac:	2399      	movs	r3, #153	@ 0x99
 800b5ae:	f887 30f8 	strb.w	r3, [r7, #248]	@ 0xf8
 800b5b2:	f897 30fa 	ldrb.w	r3, [r7, #250]	@ 0xfa
 800b5b6:	041a      	lsls	r2, r3, #16
 800b5b8:	f897 30f9 	ldrb.w	r3, [r7, #249]	@ 0xf9
 800b5bc:	021b      	lsls	r3, r3, #8
 800b5be:	431a      	orrs	r2, r3
 800b5c0:	f897 30f8 	ldrb.w	r3, [r7, #248]	@ 0xf8
 800b5c4:	4313      	orrs	r3, r2
 800b5c6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b5ca:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 800b5ce:	4611      	mov	r1, r2
 800b5d0:	4618      	mov	r0, r3
 800b5d2:	f7fd ff07 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b5d6:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800b5da:	461d      	mov	r5, r3
 800b5dc:	2300      	movs	r3, #0
 800b5de:	f887 30fd 	strb.w	r3, [r7, #253]	@ 0xfd
 800b5e2:	2399      	movs	r3, #153	@ 0x99
 800b5e4:	f887 30fc 	strb.w	r3, [r7, #252]	@ 0xfc
 800b5e8:	23cc      	movs	r3, #204	@ 0xcc
 800b5ea:	f887 30fb 	strb.w	r3, [r7, #251]	@ 0xfb
 800b5ee:	f897 30fd 	ldrb.w	r3, [r7, #253]	@ 0xfd
 800b5f2:	041a      	lsls	r2, r3, #16
 800b5f4:	f897 30fc 	ldrb.w	r3, [r7, #252]	@ 0xfc
 800b5f8:	021b      	lsls	r3, r3, #8
 800b5fa:	431a      	orrs	r2, r3
 800b5fc:	f897 30fb 	ldrb.w	r3, [r7, #251]	@ 0xfb
 800b600:	4313      	orrs	r3, r2
 800b602:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b606:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800b60a:	4611      	mov	r1, r2
 800b60c:	4618      	mov	r0, r3
 800b60e:	f7fd fee9 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b612:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800b614:	461e      	mov	r6, r3
 800b616:	2300      	movs	r3, #0
 800b618:	f887 3100 	strb.w	r3, [r7, #256]	@ 0x100
 800b61c:	2333      	movs	r3, #51	@ 0x33
 800b61e:	f887 30ff 	strb.w	r3, [r7, #255]	@ 0xff
 800b622:	2366      	movs	r3, #102	@ 0x66
 800b624:	f887 30fe 	strb.w	r3, [r7, #254]	@ 0xfe
 800b628:	f897 3100 	ldrb.w	r3, [r7, #256]	@ 0x100
 800b62c:	041a      	lsls	r2, r3, #16
 800b62e:	f897 30ff 	ldrb.w	r3, [r7, #255]	@ 0xff
 800b632:	021b      	lsls	r3, r3, #8
 800b634:	431a      	orrs	r2, r3
 800b636:	f897 30fe 	ldrb.w	r3, [r7, #254]	@ 0xfe
 800b63a:	4313      	orrs	r3, r2
 800b63c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b640:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800b644:	4611      	mov	r1, r2
 800b646:	4618      	mov	r0, r3
 800b648:	f7fd fecc 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b64c:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800b64e:	4698      	mov	r8, r3
 800b650:	2333      	movs	r3, #51	@ 0x33
 800b652:	f887 3103 	strb.w	r3, [r7, #259]	@ 0x103
 800b656:	2366      	movs	r3, #102	@ 0x66
 800b658:	f887 3102 	strb.w	r3, [r7, #258]	@ 0x102
 800b65c:	2399      	movs	r3, #153	@ 0x99
 800b65e:	f887 3101 	strb.w	r3, [r7, #257]	@ 0x101
 800b662:	f897 3103 	ldrb.w	r3, [r7, #259]	@ 0x103
 800b666:	041a      	lsls	r2, r3, #16
 800b668:	f897 3102 	ldrb.w	r3, [r7, #258]	@ 0x102
 800b66c:	021b      	lsls	r3, r3, #8
 800b66e:	431a      	orrs	r2, r3
 800b670:	f897 3101 	ldrb.w	r3, [r7, #257]	@ 0x101
 800b674:	4313      	orrs	r3, r2
 800b676:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b67a:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800b67e:	4611      	mov	r1, r2
 800b680:	4618      	mov	r0, r3
 800b682:	f7fd feaf 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b686:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800b688:	9300      	str	r3, [sp, #0]
 800b68a:	4643      	mov	r3, r8
 800b68c:	4632      	mov	r2, r6
 800b68e:	4629      	mov	r1, r5
 800b690:	4620      	mov	r0, r4
 800b692:	f7ff f881 	bl	800a798 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_1.setPosition(401, 72, 50, 50);
 800b696:	697b      	ldr	r3, [r7, #20]
 800b698:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800b69c:	2332      	movs	r3, #50	@ 0x32
 800b69e:	9300      	str	r3, [sp, #0]
 800b6a0:	2332      	movs	r3, #50	@ 0x32
 800b6a2:	2248      	movs	r2, #72	@ 0x48
 800b6a4:	f240 1191 	movw	r1, #401	@ 0x191
 800b6a8:	f7fd ff6c 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_1);
 800b6ac:	697a      	ldr	r2, [r7, #20]
 800b6ae:	697b      	ldr	r3, [r7, #20]
 800b6b0:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800b6b4:	4619      	mov	r1, r3
 800b6b6:	4610      	mov	r0, r2
 800b6b8:	f7fe f946 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_2.setBoxWithBorderPosition(0, 0, 50, 50);
 800b6bc:	697b      	ldr	r3, [r7, #20]
 800b6be:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800b6c2:	2332      	movs	r3, #50	@ 0x32
 800b6c4:	9300      	str	r3, [sp, #0]
 800b6c6:	2332      	movs	r3, #50	@ 0x32
 800b6c8:	2200      	movs	r2, #0
 800b6ca:	2100      	movs	r1, #0
 800b6cc:	f7ff f832 	bl	800a734 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_2.setBorderSize(5);
 800b6d0:	697b      	ldr	r3, [r7, #20]
 800b6d2:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800b6d6:	2105      	movs	r1, #5
 800b6d8:	4618      	mov	r0, r3
 800b6da:	f7ff f84b 	bl	800a774 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800b6de:	697b      	ldr	r3, [r7, #20]
 800b6e0:	f503 7431 	add.w	r4, r3, #708	@ 0x2c4
 800b6e4:	2300      	movs	r3, #0
 800b6e6:	f887 3106 	strb.w	r3, [r7, #262]	@ 0x106
 800b6ea:	2366      	movs	r3, #102	@ 0x66
 800b6ec:	f887 3105 	strb.w	r3, [r7, #261]	@ 0x105
 800b6f0:	2399      	movs	r3, #153	@ 0x99
 800b6f2:	f887 3104 	strb.w	r3, [r7, #260]	@ 0x104
 800b6f6:	f897 3106 	ldrb.w	r3, [r7, #262]	@ 0x106
 800b6fa:	041a      	lsls	r2, r3, #16
 800b6fc:	f897 3105 	ldrb.w	r3, [r7, #261]	@ 0x105
 800b700:	021b      	lsls	r3, r3, #8
 800b702:	431a      	orrs	r2, r3
 800b704:	f897 3104 	ldrb.w	r3, [r7, #260]	@ 0x104
 800b708:	4313      	orrs	r3, r2
 800b70a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b70e:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800b712:	4611      	mov	r1, r2
 800b714:	4618      	mov	r0, r3
 800b716:	f7fd fe65 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b71a:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800b71c:	461d      	mov	r5, r3
 800b71e:	2300      	movs	r3, #0
 800b720:	f887 3109 	strb.w	r3, [r7, #265]	@ 0x109
 800b724:	2399      	movs	r3, #153	@ 0x99
 800b726:	f887 3108 	strb.w	r3, [r7, #264]	@ 0x108
 800b72a:	23cc      	movs	r3, #204	@ 0xcc
 800b72c:	f887 3107 	strb.w	r3, [r7, #263]	@ 0x107
 800b730:	f897 3109 	ldrb.w	r3, [r7, #265]	@ 0x109
 800b734:	041a      	lsls	r2, r3, #16
 800b736:	f897 3108 	ldrb.w	r3, [r7, #264]	@ 0x108
 800b73a:	021b      	lsls	r3, r3, #8
 800b73c:	431a      	orrs	r2, r3
 800b73e:	f897 3107 	ldrb.w	r3, [r7, #263]	@ 0x107
 800b742:	4313      	orrs	r3, r2
 800b744:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b748:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800b74c:	4611      	mov	r1, r2
 800b74e:	4618      	mov	r0, r3
 800b750:	f7fd fe48 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b754:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b756:	461e      	mov	r6, r3
 800b758:	2300      	movs	r3, #0
 800b75a:	f887 310c 	strb.w	r3, [r7, #268]	@ 0x10c
 800b75e:	2333      	movs	r3, #51	@ 0x33
 800b760:	f887 310b 	strb.w	r3, [r7, #267]	@ 0x10b
 800b764:	2366      	movs	r3, #102	@ 0x66
 800b766:	f887 310a 	strb.w	r3, [r7, #266]	@ 0x10a
 800b76a:	f897 310c 	ldrb.w	r3, [r7, #268]	@ 0x10c
 800b76e:	041a      	lsls	r2, r3, #16
 800b770:	f897 310b 	ldrb.w	r3, [r7, #267]	@ 0x10b
 800b774:	021b      	lsls	r3, r3, #8
 800b776:	431a      	orrs	r2, r3
 800b778:	f897 310a 	ldrb.w	r3, [r7, #266]	@ 0x10a
 800b77c:	4313      	orrs	r3, r2
 800b77e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b782:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800b786:	4611      	mov	r1, r2
 800b788:	4618      	mov	r0, r3
 800b78a:	f7fd fe2b 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b78e:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800b790:	4698      	mov	r8, r3
 800b792:	2333      	movs	r3, #51	@ 0x33
 800b794:	f887 310f 	strb.w	r3, [r7, #271]	@ 0x10f
 800b798:	2366      	movs	r3, #102	@ 0x66
 800b79a:	f887 310e 	strb.w	r3, [r7, #270]	@ 0x10e
 800b79e:	2399      	movs	r3, #153	@ 0x99
 800b7a0:	f887 310d 	strb.w	r3, [r7, #269]	@ 0x10d
 800b7a4:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 800b7a8:	041a      	lsls	r2, r3, #16
 800b7aa:	f897 310e 	ldrb.w	r3, [r7, #270]	@ 0x10e
 800b7ae:	021b      	lsls	r3, r3, #8
 800b7b0:	431a      	orrs	r2, r3
 800b7b2:	f897 310d 	ldrb.w	r3, [r7, #269]	@ 0x10d
 800b7b6:	4313      	orrs	r3, r2
 800b7b8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b7bc:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800b7c0:	4611      	mov	r1, r2
 800b7c2:	4618      	mov	r0, r3
 800b7c4:	f7fd fe0e 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800b7c8:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800b7ca:	9300      	str	r3, [sp, #0]
 800b7cc:	4643      	mov	r3, r8
 800b7ce:	4632      	mov	r2, r6
 800b7d0:	4629      	mov	r1, r5
 800b7d2:	4620      	mov	r0, r4
 800b7d4:	f7fe ffe0 	bl	800a798 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_2.setPosition(401, 127, 50, 50);
 800b7d8:	697b      	ldr	r3, [r7, #20]
 800b7da:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800b7de:	2332      	movs	r3, #50	@ 0x32
 800b7e0:	9300      	str	r3, [sp, #0]
 800b7e2:	2332      	movs	r3, #50	@ 0x32
 800b7e4:	227f      	movs	r2, #127	@ 0x7f
 800b7e6:	f240 1191 	movw	r1, #401	@ 0x191
 800b7ea:	f7fd fecb 	bl	8009584 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_2);
 800b7ee:	697a      	ldr	r2, [r7, #20]
 800b7f0:	697b      	ldr	r3, [r7, #20]
 800b7f2:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800b7f6:	4619      	mov	r1, r3
 800b7f8:	4610      	mov	r0, r2
 800b7fa:	f7fe f8a5 	bl	8009948 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800b7fe:	697b      	ldr	r3, [r7, #20]
 800b800:	4618      	mov	r0, r3
 800b802:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800b806:	46bd      	mov	sp, r7
 800b808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b80c <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 800b80c:	b580      	push	{r7, lr}
 800b80e:	b082      	sub	sp, #8
 800b810:	af00      	add	r7, sp, #0
 800b812:	6078      	str	r0, [r7, #4]
 800b814:	4a24      	ldr	r2, [pc, #144]	@ (800b8a8 <_ZN12MainViewBaseD1Ev+0x9c>)
 800b816:	687b      	ldr	r3, [r7, #4]
 800b818:	601a      	str	r2, [r3, #0]
{

}
 800b81a:	687b      	ldr	r3, [r7, #4]
 800b81c:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800b820:	4618      	mov	r0, r3
 800b822:	f000 f90f 	bl	800ba44 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b826:	687b      	ldr	r3, [r7, #4]
 800b828:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800b82c:	4618      	mov	r0, r3
 800b82e:	f000 f92b 	bl	800ba88 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800b832:	687b      	ldr	r3, [r7, #4]
 800b834:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800b838:	4618      	mov	r0, r3
 800b83a:	f7ff f83f 	bl	800a8bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b83e:	687b      	ldr	r3, [r7, #4]
 800b840:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800b844:	4618      	mov	r0, r3
 800b846:	f7ff f839 	bl	800a8bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800b850:	4618      	mov	r0, r3
 800b852:	f7ff f833 	bl	800a8bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b856:	687b      	ldr	r3, [r7, #4]
 800b858:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800b85c:	4618      	mov	r0, r3
 800b85e:	f000 f935 	bl	800bacc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b862:	687b      	ldr	r3, [r7, #4]
 800b864:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800b868:	4618      	mov	r0, r3
 800b86a:	f000 f92f 	bl	800bacc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b86e:	687b      	ldr	r3, [r7, #4]
 800b870:	33f0      	adds	r3, #240	@ 0xf0
 800b872:	4618      	mov	r0, r3
 800b874:	f000 f92a 	bl	800bacc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b878:	687b      	ldr	r3, [r7, #4]
 800b87a:	33a4      	adds	r3, #164	@ 0xa4
 800b87c:	4618      	mov	r0, r3
 800b87e:	f000 f925 	bl	800bacc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b882:	687b      	ldr	r3, [r7, #4]
 800b884:	336c      	adds	r3, #108	@ 0x6c
 800b886:	4618      	mov	r0, r3
 800b888:	f000 f942 	bl	800bb10 <_ZN8touchgfx12ToggleButtonD1Ev>
 800b88c:	687b      	ldr	r3, [r7, #4]
 800b88e:	3340      	adds	r3, #64	@ 0x40
 800b890:	4618      	mov	r0, r3
 800b892:	f7fe fa05 	bl	8009ca0 <_ZN8touchgfx3BoxD1Ev>
 800b896:	687b      	ldr	r3, [r7, #4]
 800b898:	4618      	mov	r0, r3
 800b89a:	f7ff facd 	bl	800ae38 <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800b89e:	687b      	ldr	r3, [r7, #4]
 800b8a0:	4618      	mov	r0, r3
 800b8a2:	3708      	adds	r7, #8
 800b8a4:	46bd      	mov	sp, r7
 800b8a6:	bd80      	pop	{r7, pc}
 800b8a8:	080263e4 	.word	0x080263e4

0800b8ac <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800b8ac:	b580      	push	{r7, lr}
 800b8ae:	b082      	sub	sp, #8
 800b8b0:	af00      	add	r7, sp, #0
 800b8b2:	6078      	str	r0, [r7, #4]
}
 800b8b4:	6878      	ldr	r0, [r7, #4]
 800b8b6:	f7ff ffa9 	bl	800b80c <_ZN12MainViewBaseD1Ev>
 800b8ba:	f44f 7175 	mov.w	r1, #980	@ 0x3d4
 800b8be:	6878      	ldr	r0, [r7, #4]
 800b8c0:	f018 f9a7 	bl	8023c12 <_ZdlPvj>
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	4618      	mov	r0, r3
 800b8c8:	3708      	adds	r7, #8
 800b8ca:	46bd      	mov	sp, r7
 800b8cc:	bd80      	pop	{r7, pc}

0800b8ce <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 800b8ce:	b480      	push	{r7}
 800b8d0:	b083      	sub	sp, #12
 800b8d2:	af00      	add	r7, sp, #0
 800b8d4:	6078      	str	r0, [r7, #4]

}
 800b8d6:	bf00      	nop
 800b8d8:	370c      	adds	r7, #12
 800b8da:	46bd      	mov	sp, r7
 800b8dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8e0:	4770      	bx	lr

0800b8e2 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800b8e2:	b580      	push	{r7, lr}
 800b8e4:	b082      	sub	sp, #8
 800b8e6:	af00      	add	r7, sp, #0
 800b8e8:	6078      	str	r0, [r7, #4]
 800b8ea:	6039      	str	r1, [r7, #0]
    if (&src == &toggleButton1)
 800b8ec:	687b      	ldr	r3, [r7, #4]
 800b8ee:	336c      	adds	r3, #108	@ 0x6c
 800b8f0:	683a      	ldr	r2, [r7, #0]
 800b8f2:	429a      	cmp	r2, r3
 800b8f4:	d105      	bne.n	800b902 <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 800b8f6:	687b      	ldr	r3, [r7, #4]
 800b8f8:	681b      	ldr	r3, [r3, #0]
 800b8fa:	332c      	adds	r3, #44	@ 0x2c
 800b8fc:	681b      	ldr	r3, [r3, #0]
 800b8fe:	6878      	ldr	r0, [r7, #4]
 800b900:	4798      	blx	r3
    }
}
 800b902:	bf00      	nop
 800b904:	3708      	adds	r7, #8
 800b906:	46bd      	mov	sp, r7
 800b908:	bd80      	pop	{r7, pc}

0800b90a <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800b90a:	b580      	push	{r7, lr}
 800b90c:	b082      	sub	sp, #8
 800b90e:	af00      	add	r7, sp, #0
 800b910:	6078      	str	r0, [r7, #4]
 800b912:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800b914:	687b      	ldr	r3, [r7, #4]
 800b916:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800b91a:	683a      	ldr	r2, [r7, #0]
 800b91c:	429a      	cmp	r2, r3
 800b91e:	d106      	bne.n	800b92e <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //Interaction2
        //When flexButton1 clicked change screen to humidity_screen
        //Go to humidity_screen with no screen transition
        application().gotohumidity_screenScreenNoTransition();
 800b920:	6878      	ldr	r0, [r7, #4]
 800b922:	f7ff fa7e 	bl	800ae22 <_ZN12MainViewBase11applicationEv>
 800b926:	4603      	mov	r3, r0
 800b928:	4618      	mov	r0, r3
 800b92a:	f7fd f92b 	bl	8008b84 <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>
    }
}
 800b92e:	bf00      	nop
 800b930:	3708      	adds	r7, #8
 800b932:	46bd      	mov	sp, r7
 800b934:	bd80      	pop	{r7, pc}
	...

0800b938 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 800b938:	b580      	push	{r7, lr}
 800b93a:	b082      	sub	sp, #8
 800b93c:	af00      	add	r7, sp, #0
 800b93e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800b940:	687b      	ldr	r3, [r7, #4]
 800b942:	4618      	mov	r0, r3
 800b944:	f007 ff22 	bl	801378c <_ZN8touchgfx6ScreenC1Ev>
 800b948:	4a05      	ldr	r2, [pc, #20]	@ (800b960 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 800b94a:	687b      	ldr	r3, [r7, #4]
 800b94c:	601a      	str	r2, [r3, #0]
 800b94e:	687b      	ldr	r3, [r7, #4]
 800b950:	2200      	movs	r2, #0
 800b952:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800b954:	687b      	ldr	r3, [r7, #4]
 800b956:	4618      	mov	r0, r3
 800b958:	3708      	adds	r7, #8
 800b95a:	46bd      	mov	sp, r7
 800b95c:	bd80      	pop	{r7, pc}
 800b95e:	bf00      	nop
 800b960:	0802644c 	.word	0x0802644c

0800b964 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800b964:	b480      	push	{r7}
 800b966:	b083      	sub	sp, #12
 800b968:	af00      	add	r7, sp, #0
 800b96a:	6078      	str	r0, [r7, #4]
 800b96c:	4a04      	ldr	r2, [pc, #16]	@ (800b980 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800b96e:	687b      	ldr	r3, [r7, #4]
 800b970:	601a      	str	r2, [r3, #0]
 800b972:	687b      	ldr	r3, [r7, #4]
 800b974:	4618      	mov	r0, r3
 800b976:	370c      	adds	r7, #12
 800b978:	46bd      	mov	sp, r7
 800b97a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b97e:	4770      	bx	lr
 800b980:	08026510 	.word	0x08026510

0800b984 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800b984:	b580      	push	{r7, lr}
 800b986:	b084      	sub	sp, #16
 800b988:	af00      	add	r7, sp, #0
 800b98a:	60f8      	str	r0, [r7, #12]
 800b98c:	60b9      	str	r1, [r7, #8]
 800b98e:	4639      	mov	r1, r7
 800b990:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800b994:	68fb      	ldr	r3, [r7, #12]
 800b996:	4618      	mov	r0, r3
 800b998:	f7ff ffe4 	bl	800b964 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800b99c:	4a08      	ldr	r2, [pc, #32]	@ (800b9c0 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800b99e:	68fb      	ldr	r3, [r7, #12]
 800b9a0:	601a      	str	r2, [r3, #0]
 800b9a2:	68fb      	ldr	r3, [r7, #12]
 800b9a4:	68ba      	ldr	r2, [r7, #8]
 800b9a6:	605a      	str	r2, [r3, #4]
 800b9a8:	68fb      	ldr	r3, [r7, #12]
 800b9aa:	3308      	adds	r3, #8
 800b9ac:	463a      	mov	r2, r7
 800b9ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b9b2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800b9b6:	68fb      	ldr	r3, [r7, #12]
 800b9b8:	4618      	mov	r0, r3
 800b9ba:	3710      	adds	r7, #16
 800b9bc:	46bd      	mov	sp, r7
 800b9be:	bd80      	pop	{r7, pc}
 800b9c0:	08026434 	.word	0x08026434

0800b9c4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800b9c4:	b580      	push	{r7, lr}
 800b9c6:	b084      	sub	sp, #16
 800b9c8:	af00      	add	r7, sp, #0
 800b9ca:	60f8      	str	r0, [r7, #12]
 800b9cc:	60b9      	str	r1, [r7, #8]
 800b9ce:	4639      	mov	r1, r7
 800b9d0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800b9d4:	68fb      	ldr	r3, [r7, #12]
 800b9d6:	4618      	mov	r0, r3
 800b9d8:	f7fe fe7c 	bl	800a6d4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800b9dc:	4a08      	ldr	r2, [pc, #32]	@ (800ba00 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800b9de:	68fb      	ldr	r3, [r7, #12]
 800b9e0:	601a      	str	r2, [r3, #0]
 800b9e2:	68fb      	ldr	r3, [r7, #12]
 800b9e4:	68ba      	ldr	r2, [r7, #8]
 800b9e6:	605a      	str	r2, [r3, #4]
 800b9e8:	68fb      	ldr	r3, [r7, #12]
 800b9ea:	3308      	adds	r3, #8
 800b9ec:	463a      	mov	r2, r7
 800b9ee:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b9f2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800b9f6:	68fb      	ldr	r3, [r7, #12]
 800b9f8:	4618      	mov	r0, r3
 800b9fa:	3710      	adds	r7, #16
 800b9fc:	46bd      	mov	sp, r7
 800b9fe:	bd80      	pop	{r7, pc}
 800ba00:	0802641c 	.word	0x0802641c

0800ba04 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800ba04:	b480      	push	{r7}
 800ba06:	b083      	sub	sp, #12
 800ba08:	af00      	add	r7, sp, #0
 800ba0a:	6078      	str	r0, [r7, #4]
    }
 800ba0c:	4a04      	ldr	r2, [pc, #16]	@ (800ba20 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800ba0e:	687b      	ldr	r3, [r7, #4]
 800ba10:	601a      	str	r2, [r3, #0]
 800ba12:	687b      	ldr	r3, [r7, #4]
 800ba14:	4618      	mov	r0, r3
 800ba16:	370c      	adds	r7, #12
 800ba18:	46bd      	mov	sp, r7
 800ba1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba1e:	4770      	bx	lr
 800ba20:	08026510 	.word	0x08026510

0800ba24 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800ba24:	b580      	push	{r7, lr}
 800ba26:	b082      	sub	sp, #8
 800ba28:	af00      	add	r7, sp, #0
 800ba2a:	6078      	str	r0, [r7, #4]
    }
 800ba2c:	6878      	ldr	r0, [r7, #4]
 800ba2e:	f7ff ffe9 	bl	800ba04 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ba32:	2104      	movs	r1, #4
 800ba34:	6878      	ldr	r0, [r7, #4]
 800ba36:	f018 f8ec 	bl	8023c12 <_ZdlPvj>
 800ba3a:	687b      	ldr	r3, [r7, #4]
 800ba3c:	4618      	mov	r0, r3
 800ba3e:	3708      	adds	r7, #8
 800ba40:	46bd      	mov	sp, r7
 800ba42:	bd80      	pop	{r7, pc}

0800ba44 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800ba44:	b580      	push	{r7, lr}
 800ba46:	b082      	sub	sp, #8
 800ba48:	af00      	add	r7, sp, #0
 800ba4a:	6078      	str	r0, [r7, #4]
 800ba4c:	4a05      	ldr	r2, [pc, #20]	@ (800ba64 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800ba4e:	687b      	ldr	r3, [r7, #4]
 800ba50:	601a      	str	r2, [r3, #0]
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	4618      	mov	r0, r3
 800ba56:	f7fe febd 	bl	800a7d4 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800ba5a:	687b      	ldr	r3, [r7, #4]
 800ba5c:	4618      	mov	r0, r3
 800ba5e:	3708      	adds	r7, #8
 800ba60:	46bd      	mov	sp, r7
 800ba62:	bd80      	pop	{r7, pc}
 800ba64:	0802641c 	.word	0x0802641c

0800ba68 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800ba68:	b580      	push	{r7, lr}
 800ba6a:	b082      	sub	sp, #8
 800ba6c:	af00      	add	r7, sp, #0
 800ba6e:	6078      	str	r0, [r7, #4]
 800ba70:	6878      	ldr	r0, [r7, #4]
 800ba72:	f7ff ffe7 	bl	800ba44 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800ba76:	2110      	movs	r1, #16
 800ba78:	6878      	ldr	r0, [r7, #4]
 800ba7a:	f018 f8ca 	bl	8023c12 <_ZdlPvj>
 800ba7e:	687b      	ldr	r3, [r7, #4]
 800ba80:	4618      	mov	r0, r3
 800ba82:	3708      	adds	r7, #8
 800ba84:	46bd      	mov	sp, r7
 800ba86:	bd80      	pop	{r7, pc}

0800ba88 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 800ba88:	b580      	push	{r7, lr}
 800ba8a:	b082      	sub	sp, #8
 800ba8c:	af00      	add	r7, sp, #0
 800ba8e:	6078      	str	r0, [r7, #4]
 800ba90:	4a05      	ldr	r2, [pc, #20]	@ (800baa8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800ba92:	687b      	ldr	r3, [r7, #4]
 800ba94:	601a      	str	r2, [r3, #0]
 800ba96:	687b      	ldr	r3, [r7, #4]
 800ba98:	4618      	mov	r0, r3
 800ba9a:	f7ff ffb3 	bl	800ba04 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	4618      	mov	r0, r3
 800baa2:	3708      	adds	r7, #8
 800baa4:	46bd      	mov	sp, r7
 800baa6:	bd80      	pop	{r7, pc}
 800baa8:	08026434 	.word	0x08026434

0800baac <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800baac:	b580      	push	{r7, lr}
 800baae:	b082      	sub	sp, #8
 800bab0:	af00      	add	r7, sp, #0
 800bab2:	6078      	str	r0, [r7, #4]
 800bab4:	6878      	ldr	r0, [r7, #4]
 800bab6:	f7ff ffe7 	bl	800ba88 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800baba:	2110      	movs	r1, #16
 800babc:	6878      	ldr	r0, [r7, #4]
 800babe:	f018 f8a8 	bl	8023c12 <_ZdlPvj>
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	4618      	mov	r0, r3
 800bac6:	3708      	adds	r7, #8
 800bac8:	46bd      	mov	sp, r7
 800baca:	bd80      	pop	{r7, pc}

0800bacc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800bacc:	b580      	push	{r7, lr}
 800bace:	b082      	sub	sp, #8
 800bad0:	af00      	add	r7, sp, #0
 800bad2:	6078      	str	r0, [r7, #4]
 800bad4:	4a05      	ldr	r2, [pc, #20]	@ (800baec <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800bad6:	687b      	ldr	r3, [r7, #4]
 800bad8:	601a      	str	r2, [r3, #0]
 800bada:	687b      	ldr	r3, [r7, #4]
 800badc:	4618      	mov	r0, r3
 800bade:	f7ff f937 	bl	800ad50 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	4618      	mov	r0, r3
 800bae6:	3708      	adds	r7, #8
 800bae8:	46bd      	mov	sp, r7
 800baea:	bd80      	pop	{r7, pc}
 800baec:	08026480 	.word	0x08026480

0800baf0 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800baf0:	b580      	push	{r7, lr}
 800baf2:	b082      	sub	sp, #8
 800baf4:	af00      	add	r7, sp, #0
 800baf6:	6078      	str	r0, [r7, #4]
 800baf8:	6878      	ldr	r0, [r7, #4]
 800bafa:	f7ff ffe7 	bl	800bacc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800bafe:	214c      	movs	r1, #76	@ 0x4c
 800bb00:	6878      	ldr	r0, [r7, #4]
 800bb02:	f018 f886 	bl	8023c12 <_ZdlPvj>
 800bb06:	687b      	ldr	r3, [r7, #4]
 800bb08:	4618      	mov	r0, r3
 800bb0a:	3708      	adds	r7, #8
 800bb0c:	46bd      	mov	sp, r7
 800bb0e:	bd80      	pop	{r7, pc}

0800bb10 <_ZN8touchgfx12ToggleButtonD1Ev>:
 800bb10:	b580      	push	{r7, lr}
 800bb12:	b082      	sub	sp, #8
 800bb14:	af00      	add	r7, sp, #0
 800bb16:	6078      	str	r0, [r7, #4]
 800bb18:	4a05      	ldr	r2, [pc, #20]	@ (800bb30 <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 800bb1a:	687b      	ldr	r3, [r7, #4]
 800bb1c:	601a      	str	r2, [r3, #0]
 800bb1e:	687b      	ldr	r3, [r7, #4]
 800bb20:	4618      	mov	r0, r3
 800bb22:	f7fe fef3 	bl	800a90c <_ZN8touchgfx6ButtonD1Ev>
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	4618      	mov	r0, r3
 800bb2a:	3708      	adds	r7, #8
 800bb2c:	46bd      	mov	sp, r7
 800bb2e:	bd80      	pop	{r7, pc}
 800bb30:	08026da4 	.word	0x08026da4

0800bb34 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800bb34:	b580      	push	{r7, lr}
 800bb36:	b082      	sub	sp, #8
 800bb38:	af00      	add	r7, sp, #0
 800bb3a:	6078      	str	r0, [r7, #4]
 800bb3c:	6878      	ldr	r0, [r7, #4]
 800bb3e:	f7ff ffe7 	bl	800bb10 <_ZN8touchgfx12ToggleButtonD1Ev>
 800bb42:	2138      	movs	r1, #56	@ 0x38
 800bb44:	6878      	ldr	r0, [r7, #4]
 800bb46:	f018 f864 	bl	8023c12 <_ZdlPvj>
 800bb4a:	687b      	ldr	r3, [r7, #4]
 800bb4c:	4618      	mov	r0, r3
 800bb4e:	3708      	adds	r7, #8
 800bb50:	46bd      	mov	sp, r7
 800bb52:	bd80      	pop	{r7, pc}

0800bb54 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800bb54:	b580      	push	{r7, lr}
 800bb56:	b082      	sub	sp, #8
 800bb58:	af00      	add	r7, sp, #0
 800bb5a:	6078      	str	r0, [r7, #4]
 800bb5c:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800bb5e:	687b      	ldr	r3, [r7, #4]
 800bb60:	685b      	ldr	r3, [r3, #4]
 800bb62:	687a      	ldr	r2, [r7, #4]
 800bb64:	68d2      	ldr	r2, [r2, #12]
 800bb66:	1052      	asrs	r2, r2, #1
 800bb68:	1898      	adds	r0, r3, r2
 800bb6a:	687b      	ldr	r3, [r7, #4]
 800bb6c:	68db      	ldr	r3, [r3, #12]
 800bb6e:	f003 0301 	and.w	r3, r3, #1
 800bb72:	2b00      	cmp	r3, #0
 800bb74:	d102      	bne.n	800bb7c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800bb76:	687b      	ldr	r3, [r7, #4]
 800bb78:	689b      	ldr	r3, [r3, #8]
 800bb7a:	e00a      	b.n	800bb92 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800bb7c:	687b      	ldr	r3, [r7, #4]
 800bb7e:	685b      	ldr	r3, [r3, #4]
 800bb80:	687a      	ldr	r2, [r7, #4]
 800bb82:	68d2      	ldr	r2, [r2, #12]
 800bb84:	1052      	asrs	r2, r2, #1
 800bb86:	4413      	add	r3, r2
 800bb88:	681b      	ldr	r3, [r3, #0]
 800bb8a:	687a      	ldr	r2, [r7, #4]
 800bb8c:	6892      	ldr	r2, [r2, #8]
 800bb8e:	4413      	add	r3, r2
 800bb90:	681b      	ldr	r3, [r3, #0]
 800bb92:	6839      	ldr	r1, [r7, #0]
 800bb94:	4798      	blx	r3
    }
 800bb96:	bf00      	nop
 800bb98:	3708      	adds	r7, #8
 800bb9a:	46bd      	mov	sp, r7
 800bb9c:	bd80      	pop	{r7, pc}

0800bb9e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800bb9e:	b480      	push	{r7}
 800bba0:	b083      	sub	sp, #12
 800bba2:	af00      	add	r7, sp, #0
 800bba4:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800bba6:	687b      	ldr	r3, [r7, #4]
 800bba8:	685b      	ldr	r3, [r3, #4]
 800bbaa:	2b00      	cmp	r3, #0
 800bbac:	d010      	beq.n	800bbd0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bbae:	687b      	ldr	r3, [r7, #4]
 800bbb0:	689b      	ldr	r3, [r3, #8]
 800bbb2:	2b00      	cmp	r3, #0
 800bbb4:	d107      	bne.n	800bbc6 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bbb6:	687b      	ldr	r3, [r7, #4]
 800bbb8:	68db      	ldr	r3, [r3, #12]
 800bbba:	f003 0301 	and.w	r3, r3, #1
 800bbbe:	2b00      	cmp	r3, #0
 800bbc0:	d101      	bne.n	800bbc6 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bbc2:	2301      	movs	r3, #1
 800bbc4:	e000      	b.n	800bbc8 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800bbc6:	2300      	movs	r3, #0
 800bbc8:	2b01      	cmp	r3, #1
 800bbca:	d001      	beq.n	800bbd0 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bbcc:	2301      	movs	r3, #1
 800bbce:	e000      	b.n	800bbd2 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800bbd0:	2300      	movs	r3, #0
    }
 800bbd2:	4618      	mov	r0, r3
 800bbd4:	370c      	adds	r7, #12
 800bbd6:	46bd      	mov	sp, r7
 800bbd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bbdc:	4770      	bx	lr

0800bbde <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800bbde:	b580      	push	{r7, lr}
 800bbe0:	b082      	sub	sp, #8
 800bbe2:	af00      	add	r7, sp, #0
 800bbe4:	6078      	str	r0, [r7, #4]
 800bbe6:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800bbe8:	687b      	ldr	r3, [r7, #4]
 800bbea:	685b      	ldr	r3, [r3, #4]
 800bbec:	687a      	ldr	r2, [r7, #4]
 800bbee:	68d2      	ldr	r2, [r2, #12]
 800bbf0:	1052      	asrs	r2, r2, #1
 800bbf2:	1898      	adds	r0, r3, r2
 800bbf4:	687b      	ldr	r3, [r7, #4]
 800bbf6:	68db      	ldr	r3, [r3, #12]
 800bbf8:	f003 0301 	and.w	r3, r3, #1
 800bbfc:	2b00      	cmp	r3, #0
 800bbfe:	d102      	bne.n	800bc06 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800bc00:	687b      	ldr	r3, [r7, #4]
 800bc02:	689b      	ldr	r3, [r3, #8]
 800bc04:	e00a      	b.n	800bc1c <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800bc06:	687b      	ldr	r3, [r7, #4]
 800bc08:	685b      	ldr	r3, [r3, #4]
 800bc0a:	687a      	ldr	r2, [r7, #4]
 800bc0c:	68d2      	ldr	r2, [r2, #12]
 800bc0e:	1052      	asrs	r2, r2, #1
 800bc10:	4413      	add	r3, r2
 800bc12:	681b      	ldr	r3, [r3, #0]
 800bc14:	687a      	ldr	r2, [r7, #4]
 800bc16:	6892      	ldr	r2, [r2, #8]
 800bc18:	4413      	add	r3, r2
 800bc1a:	681b      	ldr	r3, [r3, #0]
 800bc1c:	6839      	ldr	r1, [r7, #0]
 800bc1e:	4798      	blx	r3
    }
 800bc20:	bf00      	nop
 800bc22:	3708      	adds	r7, #8
 800bc24:	46bd      	mov	sp, r7
 800bc26:	bd80      	pop	{r7, pc}

0800bc28 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800bc28:	b480      	push	{r7}
 800bc2a:	b083      	sub	sp, #12
 800bc2c:	af00      	add	r7, sp, #0
 800bc2e:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800bc30:	687b      	ldr	r3, [r7, #4]
 800bc32:	685b      	ldr	r3, [r3, #4]
 800bc34:	2b00      	cmp	r3, #0
 800bc36:	d010      	beq.n	800bc5a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800bc38:	687b      	ldr	r3, [r7, #4]
 800bc3a:	689b      	ldr	r3, [r3, #8]
 800bc3c:	2b00      	cmp	r3, #0
 800bc3e:	d107      	bne.n	800bc50 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bc40:	687b      	ldr	r3, [r7, #4]
 800bc42:	68db      	ldr	r3, [r3, #12]
 800bc44:	f003 0301 	and.w	r3, r3, #1
 800bc48:	2b00      	cmp	r3, #0
 800bc4a:	d101      	bne.n	800bc50 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bc4c:	2301      	movs	r3, #1
 800bc4e:	e000      	b.n	800bc52 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800bc50:	2300      	movs	r3, #0
 800bc52:	2b01      	cmp	r3, #1
 800bc54:	d001      	beq.n	800bc5a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800bc56:	2301      	movs	r3, #1
 800bc58:	e000      	b.n	800bc5c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800bc5a:	2300      	movs	r3, #0
    }
 800bc5c:	4618      	mov	r0, r3
 800bc5e:	370c      	adds	r7, #12
 800bc60:	46bd      	mov	sp, r7
 800bc62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc66:	4770      	bx	lr

0800bc68 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800bc68:	b480      	push	{r7}
 800bc6a:	af00      	add	r7, sp, #0
    return bitmap_database;
 800bc6c:	4b02      	ldr	r3, [pc, #8]	@ (800bc78 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800bc6e:	4618      	mov	r0, r3
 800bc70:	46bd      	mov	sp, r7
 800bc72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc76:	4770      	bx	lr
 800bc78:	08026520 	.word	0x08026520

0800bc7c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800bc7c:	b480      	push	{r7}
 800bc7e:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800bc80:	2307      	movs	r3, #7
}
 800bc82:	4618      	mov	r0, r3
 800bc84:	46bd      	mov	sp, r7
 800bc86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc8a:	4770      	bx	lr

0800bc8c <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800bc8c:	b480      	push	{r7}
 800bc8e:	b085      	sub	sp, #20
 800bc90:	af00      	add	r7, sp, #0
 800bc92:	60f8      	str	r0, [r7, #12]
 800bc94:	460b      	mov	r3, r1
 800bc96:	607a      	str	r2, [r7, #4]
 800bc98:	817b      	strh	r3, [r7, #10]
        return 0;
 800bc9a:	2300      	movs	r3, #0
    }
 800bc9c:	4618      	mov	r0, r3
 800bc9e:	3714      	adds	r7, #20
 800bca0:	46bd      	mov	sp, r7
 800bca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bca6:	4770      	bx	lr

0800bca8 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800bca8:	b480      	push	{r7}
 800bcaa:	b083      	sub	sp, #12
 800bcac:	af00      	add	r7, sp, #0
 800bcae:	6078      	str	r0, [r7, #4]
        return 0;
 800bcb0:	2300      	movs	r3, #0
    }
 800bcb2:	4618      	mov	r0, r3
 800bcb4:	370c      	adds	r7, #12
 800bcb6:	46bd      	mov	sp, r7
 800bcb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcbc:	4770      	bx	lr

0800bcbe <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800bcbe:	b480      	push	{r7}
 800bcc0:	b083      	sub	sp, #12
 800bcc2:	af00      	add	r7, sp, #0
 800bcc4:	6078      	str	r0, [r7, #4]
        return 0;
 800bcc6:	2300      	movs	r3, #0
    }
 800bcc8:	4618      	mov	r0, r3
 800bcca:	370c      	adds	r7, #12
 800bccc:	46bd      	mov	sp, r7
 800bcce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcd2:	4770      	bx	lr

0800bcd4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800bcd4:	b480      	push	{r7}
 800bcd6:	b085      	sub	sp, #20
 800bcd8:	af00      	add	r7, sp, #0
 800bcda:	60f8      	str	r0, [r7, #12]
 800bcdc:	60b9      	str	r1, [r7, #8]
 800bcde:	4613      	mov	r3, r2
 800bce0:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800bce2:	4a07      	ldr	r2, [pc, #28]	@ (800bd00 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800bce4:	68fb      	ldr	r3, [r7, #12]
 800bce6:	6013      	str	r3, [r2, #0]
        fonts = f;
 800bce8:	4a06      	ldr	r2, [pc, #24]	@ (800bd04 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800bcea:	68bb      	ldr	r3, [r7, #8]
 800bcec:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800bcee:	4a06      	ldr	r2, [pc, #24]	@ (800bd08 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800bcf0:	88fb      	ldrh	r3, [r7, #6]
 800bcf2:	8013      	strh	r3, [r2, #0]
    }
 800bcf4:	bf00      	nop
 800bcf6:	3714      	adds	r7, #20
 800bcf8:	46bd      	mov	sp, r7
 800bcfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcfe:	4770      	bx	lr
 800bd00:	20002f84 	.word	0x20002f84
 800bd04:	20002f8c 	.word	0x20002f8c
 800bd08:	20002f88 	.word	0x20002f88

0800bd0c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800bd0c:	b40e      	push	{r1, r2, r3}
 800bd0e:	b580      	push	{r7, lr}
 800bd10:	b085      	sub	sp, #20
 800bd12:	af00      	add	r7, sp, #0
 800bd14:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800bd16:	f107 0320 	add.w	r3, r7, #32
 800bd1a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800bd1c:	68bb      	ldr	r3, [r7, #8]
 800bd1e:	69fa      	ldr	r2, [r7, #28]
 800bd20:	2100      	movs	r1, #0
 800bd22:	6878      	ldr	r0, [r7, #4]
 800bd24:	f007 f968 	bl	8012ff8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800bd28:	4603      	mov	r3, r0
 800bd2a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800bd2c:	89fb      	ldrh	r3, [r7, #14]
}
 800bd2e:	4618      	mov	r0, r3
 800bd30:	3714      	adds	r7, #20
 800bd32:	46bd      	mov	sp, r7
 800bd34:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800bd38:	b003      	add	sp, #12
 800bd3a:	4770      	bx	lr

0800bd3c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800bd3c:	b40c      	push	{r2, r3}
 800bd3e:	b580      	push	{r7, lr}
 800bd40:	b084      	sub	sp, #16
 800bd42:	af00      	add	r7, sp, #0
 800bd44:	6078      	str	r0, [r7, #4]
 800bd46:	460b      	mov	r3, r1
 800bd48:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800bd4a:	f107 031c 	add.w	r3, r7, #28
 800bd4e:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800bd50:	78f9      	ldrb	r1, [r7, #3]
 800bd52:	68bb      	ldr	r3, [r7, #8]
 800bd54:	69ba      	ldr	r2, [r7, #24]
 800bd56:	6878      	ldr	r0, [r7, #4]
 800bd58:	f007 f94e 	bl	8012ff8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800bd5c:	4603      	mov	r3, r0
 800bd5e:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800bd60:	89fb      	ldrh	r3, [r7, #14]
}
 800bd62:	4618      	mov	r0, r3
 800bd64:	3710      	adds	r7, #16
 800bd66:	46bd      	mov	sp, r7
 800bd68:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800bd6c:	b002      	add	sp, #8
 800bd6e:	4770      	bx	lr

0800bd70 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800bd70:	b580      	push	{r7, lr}
 800bd72:	b08a      	sub	sp, #40	@ 0x28
 800bd74:	af00      	add	r7, sp, #0
 800bd76:	6078      	str	r0, [r7, #4]
 800bd78:	460b      	mov	r3, r1
 800bd7a:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800bd7c:	687b      	ldr	r3, [r7, #4]
 800bd7e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800bd80:	2b00      	cmp	r3, #0
 800bd82:	d016      	beq.n	800bdb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800bd84:	687b      	ldr	r3, [r7, #4]
 800bd86:	3322      	adds	r3, #34	@ 0x22
 800bd88:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800bd8a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bd8c:	8adb      	ldrh	r3, [r3, #22]
 800bd8e:	2b00      	cmp	r3, #0
 800bd90:	d105      	bne.n	800bd9e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800bd92:	4b43      	ldr	r3, [pc, #268]	@ (800bea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800bd94:	4a43      	ldr	r2, [pc, #268]	@ (800bea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800bd96:	21c5      	movs	r1, #197	@ 0xc5
 800bd98:	4843      	ldr	r0, [pc, #268]	@ (800bea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800bd9a:	f017 ffe9 	bl	8023d70 <__assert_func>
            return buffer[pos];
 800bd9e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bda0:	8a9b      	ldrh	r3, [r3, #20]
 800bda2:	461a      	mov	r2, r3
 800bda4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bda6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800bdaa:	2b00      	cmp	r3, #0
 800bdac:	d001      	beq.n	800bdb2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800bdae:	2301      	movs	r3, #1
 800bdb0:	e000      	b.n	800bdb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800bdb2:	2300      	movs	r3, #0
 800bdb4:	2b00      	cmp	r3, #0
 800bdb6:	d06a      	beq.n	800be8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800bdb8:	6878      	ldr	r0, [r7, #4]
 800bdba:	f008 fbec 	bl	8014596 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800bdbe:	687b      	ldr	r3, [r7, #4]
 800bdc0:	3322      	adds	r3, #34	@ 0x22
 800bdc2:	623b      	str	r3, [r7, #32]
 800bdc4:	2301      	movs	r3, #1
 800bdc6:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800bdc8:	6a3b      	ldr	r3, [r7, #32]
 800bdca:	8adb      	ldrh	r3, [r3, #22]
 800bdcc:	8bfa      	ldrh	r2, [r7, #30]
 800bdce:	429a      	cmp	r2, r3
 800bdd0:	d305      	bcc.n	800bdde <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800bdd2:	4b36      	ldr	r3, [pc, #216]	@ (800beac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800bdd4:	4a36      	ldr	r2, [pc, #216]	@ (800beb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800bdd6:	21cb      	movs	r1, #203	@ 0xcb
 800bdd8:	4833      	ldr	r0, [pc, #204]	@ (800bea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800bdda:	f017 ffc9 	bl	8023d70 <__assert_func>
            const uint16_t index = pos + offset;
 800bdde:	6a3b      	ldr	r3, [r7, #32]
 800bde0:	8a9a      	ldrh	r2, [r3, #20]
 800bde2:	8bfb      	ldrh	r3, [r7, #30]
 800bde4:	4413      	add	r3, r2
 800bde6:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800bde8:	8bbb      	ldrh	r3, [r7, #28]
 800bdea:	2b09      	cmp	r3, #9
 800bdec:	d801      	bhi.n	800bdf2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800bdee:	8bbb      	ldrh	r3, [r7, #28]
 800bdf0:	e001      	b.n	800bdf6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800bdf2:	8bbb      	ldrh	r3, [r7, #28]
 800bdf4:	3b0a      	subs	r3, #10
 800bdf6:	6a3a      	ldr	r2, [r7, #32]
 800bdf8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800bdfc:	f640 123f 	movw	r2, #2367	@ 0x93f
 800be00:	4293      	cmp	r3, r2
 800be02:	bf0c      	ite	eq
 800be04:	2301      	moveq	r3, #1
 800be06:	2300      	movne	r3, #0
 800be08:	b2db      	uxtb	r3, r3
 800be0a:	2b00      	cmp	r3, #0
 800be0c:	d03f      	beq.n	800be8e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800be0e:	687b      	ldr	r3, [r7, #4]
 800be10:	3322      	adds	r3, #34	@ 0x22
 800be12:	687a      	ldr	r2, [r7, #4]
 800be14:	3222      	adds	r2, #34	@ 0x22
 800be16:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800be18:	68ba      	ldr	r2, [r7, #8]
 800be1a:	8ad2      	ldrh	r2, [r2, #22]
 800be1c:	2a00      	cmp	r2, #0
 800be1e:	d105      	bne.n	800be2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800be20:	4b1f      	ldr	r3, [pc, #124]	@ (800bea0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800be22:	4a20      	ldr	r2, [pc, #128]	@ (800bea4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800be24:	21c5      	movs	r1, #197	@ 0xc5
 800be26:	4820      	ldr	r0, [pc, #128]	@ (800bea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800be28:	f017 ffa2 	bl	8023d70 <__assert_func>
            return buffer[pos];
 800be2c:	68ba      	ldr	r2, [r7, #8]
 800be2e:	8a92      	ldrh	r2, [r2, #20]
 800be30:	4611      	mov	r1, r2
 800be32:	68ba      	ldr	r2, [r7, #8]
 800be34:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800be38:	613b      	str	r3, [r7, #16]
 800be3a:	4613      	mov	r3, r2
 800be3c:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800be3e:	693b      	ldr	r3, [r7, #16]
 800be40:	8adb      	ldrh	r3, [r3, #22]
 800be42:	2b01      	cmp	r3, #1
 800be44:	d806      	bhi.n	800be54 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800be46:	4b1b      	ldr	r3, [pc, #108]	@ (800beb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800be48:	4a1b      	ldr	r2, [pc, #108]	@ (800beb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800be4a:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800be4e:	4816      	ldr	r0, [pc, #88]	@ (800bea8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800be50:	f017 ff8e 	bl	8023d70 <__assert_func>
            const uint16_t index = pos + 1;
 800be54:	693b      	ldr	r3, [r7, #16]
 800be56:	8a9b      	ldrh	r3, [r3, #20]
 800be58:	3301      	adds	r3, #1
 800be5a:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800be5c:	89bb      	ldrh	r3, [r7, #12]
 800be5e:	2b09      	cmp	r3, #9
 800be60:	d801      	bhi.n	800be66 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800be62:	89bb      	ldrh	r3, [r7, #12]
 800be64:	e000      	b.n	800be68 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800be66:	2300      	movs	r3, #0
 800be68:	693a      	ldr	r2, [r7, #16]
 800be6a:	89f9      	ldrh	r1, [r7, #14]
 800be6c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800be70:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800be72:	687b      	ldr	r3, [r7, #4]
 800be74:	3322      	adds	r3, #34	@ 0x22
 800be76:	61bb      	str	r3, [r7, #24]
 800be78:	f640 133f 	movw	r3, #2367	@ 0x93f
 800be7c:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800be7e:	69bb      	ldr	r3, [r7, #24]
 800be80:	8a9b      	ldrh	r3, [r3, #20]
 800be82:	4619      	mov	r1, r3
 800be84:	69bb      	ldr	r3, [r7, #24]
 800be86:	8afa      	ldrh	r2, [r7, #22]
 800be88:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800be8c:	bf00      	nop
        }
    }
    return getNextChar();
 800be8e:	6878      	ldr	r0, [r7, #4]
 800be90:	f008 fa84 	bl	801439c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800be94:	4603      	mov	r3, r0
}
 800be96:	4618      	mov	r0, r3
 800be98:	3728      	adds	r7, #40	@ 0x28
 800be9a:	46bd      	mov	sp, r7
 800be9c:	bd80      	pop	{r7, pc}
 800be9e:	bf00      	nop
 800bea0:	080252a0 	.word	0x080252a0
 800bea4:	080252ac 	.word	0x080252ac
 800bea8:	08025358 	.word	0x08025358
 800beac:	080253a0 	.word	0x080253a0
 800beb0:	080253b0 	.word	0x080253b0
 800beb4:	08025484 	.word	0x08025484
 800beb8:	08025490 	.word	0x08025490

0800bebc <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800bebc:	b580      	push	{r7, lr}
 800bebe:	b082      	sub	sp, #8
 800bec0:	af00      	add	r7, sp, #0
 800bec2:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800bec4:	6878      	ldr	r0, [r7, #4]
 800bec6:	f008 fa30 	bl	801432a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800beca:	bf00      	nop
 800becc:	3708      	adds	r7, #8
 800bece:	46bd      	mov	sp, r7
 800bed0:	bd80      	pop	{r7, pc}

0800bed2 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800bed2:	b580      	push	{r7, lr}
 800bed4:	b088      	sub	sp, #32
 800bed6:	af02      	add	r7, sp, #8
 800bed8:	60f8      	str	r0, [r7, #12]
 800beda:	1d38      	adds	r0, r7, #4
 800bedc:	e880 0006 	stmia.w	r0, {r1, r2}
 800bee0:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800bee2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800bee6:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800bee8:	1d39      	adds	r1, r7, #4
 800beea:	697b      	ldr	r3, [r7, #20]
 800beec:	9301      	str	r3, [sp, #4]
 800beee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bef0:	9300      	str	r3, [sp, #0]
 800bef2:	6a3b      	ldr	r3, [r7, #32]
 800bef4:	683a      	ldr	r2, [r7, #0]
 800bef6:	68f8      	ldr	r0, [r7, #12]
 800bef8:	f005 fcda 	bl	80118b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800befc:	bf00      	nop
 800befe:	3718      	adds	r7, #24
 800bf00:	46bd      	mov	sp, r7
 800bf02:	bd80      	pop	{r7, pc}

0800bf04 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800bf04:	b590      	push	{r4, r7, lr}
 800bf06:	b085      	sub	sp, #20
 800bf08:	af00      	add	r7, sp, #0
 800bf0a:	4603      	mov	r3, r0
 800bf0c:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800bf0e:	2300      	movs	r3, #0
 800bf10:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800bf12:	88fb      	ldrh	r3, [r7, #6]
 800bf14:	2b00      	cmp	r3, #0
 800bf16:	d127      	bne.n	800bf68 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800bf18:	88fb      	ldrh	r3, [r7, #6]
 800bf1a:	4a1e      	ldr	r2, [pc, #120]	@ (800bf94 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800bf1c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800bf20:	2b00      	cmp	r3, #0
 800bf22:	d016      	beq.n	800bf52 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800bf24:	88fb      	ldrh	r3, [r7, #6]
 800bf26:	4a1b      	ldr	r2, [pc, #108]	@ (800bf94 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800bf28:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800bf2c:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800bf2e:	68bb      	ldr	r3, [r7, #8]
 800bf30:	681b      	ldr	r3, [r3, #0]
 800bf32:	68ba      	ldr	r2, [r7, #8]
 800bf34:	4413      	add	r3, r2
 800bf36:	4a18      	ldr	r2, [pc, #96]	@ (800bf98 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800bf38:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800bf3a:	68bb      	ldr	r3, [r7, #8]
 800bf3c:	685b      	ldr	r3, [r3, #4]
 800bf3e:	68ba      	ldr	r2, [r7, #8]
 800bf40:	4413      	add	r3, r2
 800bf42:	4a16      	ldr	r2, [pc, #88]	@ (800bf9c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800bf44:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800bf46:	68bb      	ldr	r3, [r7, #8]
 800bf48:	689b      	ldr	r3, [r3, #8]
 800bf4a:	68ba      	ldr	r2, [r7, #8]
 800bf4c:	4413      	add	r3, r2
 800bf4e:	60fb      	str	r3, [r7, #12]
 800bf50:	e00a      	b.n	800bf68 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800bf52:	4b11      	ldr	r3, [pc, #68]	@ (800bf98 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800bf54:	4a12      	ldr	r2, [pc, #72]	@ (800bfa0 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800bf56:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800bf58:	4a12      	ldr	r2, [pc, #72]	@ (800bfa4 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800bf5a:	4b10      	ldr	r3, [pc, #64]	@ (800bf9c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800bf5c:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800bf5e:	88fb      	ldrh	r3, [r7, #6]
 800bf60:	4a11      	ldr	r2, [pc, #68]	@ (800bfa8 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800bf62:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800bf66:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800bf68:	68fb      	ldr	r3, [r7, #12]
 800bf6a:	2b00      	cmp	r3, #0
 800bf6c:	d00d      	beq.n	800bf8a <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800bf6e:	4a0f      	ldr	r2, [pc, #60]	@ (800bfac <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800bf70:	88fb      	ldrh	r3, [r7, #6]
 800bf72:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800bf74:	f000 f83e 	bl	800bff4 <_ZN17TypedTextDatabase8getFontsEv>
 800bf78:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800bf7a:	f000 f833 	bl	800bfe4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800bf7e:	4603      	mov	r3, r0
 800bf80:	461a      	mov	r2, r3
 800bf82:	4621      	mov	r1, r4
 800bf84:	68f8      	ldr	r0, [r7, #12]
 800bf86:	f7ff fea5 	bl	800bcd4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800bf8a:	bf00      	nop
 800bf8c:	3714      	adds	r7, #20
 800bf8e:	46bd      	mov	sp, r7
 800bf90:	bd90      	pop	{r4, r7, pc}
 800bf92:	bf00      	nop
 800bf94:	20000648 	.word	0x20000648
 800bf98:	20000650 	.word	0x20000650
 800bf9c:	20000654 	.word	0x20000654
 800bfa0:	0805dce8 	.word	0x0805dce8
 800bfa4:	0805dcbc 	.word	0x0805dcbc
 800bfa8:	0805dda8 	.word	0x0805dda8
 800bfac:	2000064c 	.word	0x2000064c

0800bfb0 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800bfb0:	b480      	push	{r7}
 800bfb2:	b083      	sub	sp, #12
 800bfb4:	af00      	add	r7, sp, #0
 800bfb6:	6078      	str	r0, [r7, #4]
 800bfb8:	460b      	mov	r3, r1
 800bfba:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800bfbc:	4b07      	ldr	r3, [pc, #28]	@ (800bfdc <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800bfbe:	681a      	ldr	r2, [r3, #0]
 800bfc0:	4b07      	ldr	r3, [pc, #28]	@ (800bfe0 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800bfc2:	6819      	ldr	r1, [r3, #0]
 800bfc4:	887b      	ldrh	r3, [r7, #2]
 800bfc6:	009b      	lsls	r3, r3, #2
 800bfc8:	440b      	add	r3, r1
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	005b      	lsls	r3, r3, #1
 800bfce:	4413      	add	r3, r2
}
 800bfd0:	4618      	mov	r0, r3
 800bfd2:	370c      	adds	r7, #12
 800bfd4:	46bd      	mov	sp, r7
 800bfd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfda:	4770      	bx	lr
 800bfdc:	20000650 	.word	0x20000650
 800bfe0:	20000654 	.word	0x20000654

0800bfe4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800bfe4:	b480      	push	{r7}
 800bfe6:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800bfe8:	230b      	movs	r3, #11
}
 800bfea:	4618      	mov	r0, r3
 800bfec:	46bd      	mov	sp, r7
 800bfee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bff2:	4770      	bx	lr

0800bff4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800bff4:	b480      	push	{r7}
 800bff6:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800bff8:	4b02      	ldr	r3, [pc, #8]	@ (800c004 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800bffa:	4618      	mov	r0, r3
 800bffc:	46bd      	mov	sp, r7
 800bffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c002:	4770      	bx	lr
 800c004:	20000658 	.word	0x20000658

0800c008 <_Z41__static_initialization_and_destruction_0ii>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800c008:	b580      	push	{r7, lr}
 800c00a:	b082      	sub	sp, #8
 800c00c:	af00      	add	r7, sp, #0
 800c00e:	6078      	str	r0, [r7, #4]
 800c010:	6039      	str	r1, [r7, #0]
 800c012:	687b      	ldr	r3, [r7, #4]
 800c014:	2b01      	cmp	r3, #1
 800c016:	d10e      	bne.n	800c036 <_Z41__static_initialization_and_destruction_0ii+0x2e>
 800c018:	683b      	ldr	r3, [r7, #0]
 800c01a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c01e:	4293      	cmp	r3, r2
 800c020:	d109      	bne.n	800c036 <_Z41__static_initialization_and_destruction_0ii+0x2e>
    &(getFont_Asap_Regular_80_4bpp()),
 800c022:	f7fc fa3d 	bl	80084a0 <_Z28getFont_Asap_Regular_80_4bppv>
 800c026:	4603      	mov	r3, r0
};
 800c028:	4a05      	ldr	r2, [pc, #20]	@ (800c040 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800c02a:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_30_4bpp())
 800c02c:	f7fc fa92 	bl	8008554 <_Z23getFont_verdana_30_4bppv>
 800c030:	4603      	mov	r3, r0
};
 800c032:	4a03      	ldr	r2, [pc, #12]	@ (800c040 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800c034:	6053      	str	r3, [r2, #4]
} // namespace TypedTextDatabase
 800c036:	bf00      	nop
 800c038:	3708      	adds	r7, #8
 800c03a:	46bd      	mov	sp, r7
 800c03c:	bd80      	pop	{r7, pc}
 800c03e:	bf00      	nop
 800c040:	20000658 	.word	0x20000658

0800c044 <_GLOBAL__sub_I_touchgfx_fonts>:
 800c044:	b580      	push	{r7, lr}
 800c046:	af00      	add	r7, sp, #0
 800c048:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c04c:	2001      	movs	r0, #1
 800c04e:	f7ff ffdb 	bl	800c008 <_Z41__static_initialization_and_destruction_0ii>
 800c052:	bd80      	pop	{r7, pc}

0800c054 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800c054:	b580      	push	{r7, lr}
 800c056:	b082      	sub	sp, #8
 800c058:	af00      	add	r7, sp, #0
 800c05a:	6078      	str	r0, [r7, #4]
 800c05c:	4a05      	ldr	r2, [pc, #20]	@ (800c074 <_ZN19FrontendApplicationD1Ev+0x20>)
 800c05e:	687b      	ldr	r3, [r7, #4]
 800c060:	601a      	str	r2, [r3, #0]
 800c062:	687b      	ldr	r3, [r7, #4]
 800c064:	4618      	mov	r0, r3
 800c066:	f7fc fcd5 	bl	8008a14 <_ZN23FrontendApplicationBaseD1Ev>
 800c06a:	687b      	ldr	r3, [r7, #4]
 800c06c:	4618      	mov	r0, r3
 800c06e:	3708      	adds	r7, #8
 800c070:	46bd      	mov	sp, r7
 800c072:	bd80      	pop	{r7, pc}
 800c074:	08026618 	.word	0x08026618

0800c078 <_ZN19FrontendApplicationD0Ev>:
 800c078:	b580      	push	{r7, lr}
 800c07a:	b082      	sub	sp, #8
 800c07c:	af00      	add	r7, sp, #0
 800c07e:	6078      	str	r0, [r7, #4]
 800c080:	6878      	ldr	r0, [r7, #4]
 800c082:	f7ff ffe7 	bl	800c054 <_ZN19FrontendApplicationD1Ev>
 800c086:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800c08a:	6878      	ldr	r0, [r7, #4]
 800c08c:	f017 fdc1 	bl	8023c12 <_ZdlPvj>
 800c090:	687b      	ldr	r3, [r7, #4]
 800c092:	4618      	mov	r0, r3
 800c094:	3708      	adds	r7, #8
 800c096:	46bd      	mov	sp, r7
 800c098:	bd80      	pop	{r7, pc}

0800c09a <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800c09a:	b580      	push	{r7, lr}
 800c09c:	b082      	sub	sp, #8
 800c09e:	af00      	add	r7, sp, #0
 800c0a0:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800c0a2:	687b      	ldr	r3, [r7, #4]
 800c0a4:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800c0a8:	4618      	mov	r0, r3
 800c0aa:	f000 fb37 	bl	800c71c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800c0ae:	687b      	ldr	r3, [r7, #4]
 800c0b0:	4618      	mov	r0, r3
 800c0b2:	f006 f8d7 	bl	8012264 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800c0b6:	bf00      	nop
 800c0b8:	3708      	adds	r7, #8
 800c0ba:	46bd      	mov	sp, r7
 800c0bc:	bd80      	pop	{r7, pc}
	...

0800c0c0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800c0c0:	b580      	push	{r7, lr}
 800c0c2:	b084      	sub	sp, #16
 800c0c4:	af00      	add	r7, sp, #0
 800c0c6:	60f8      	str	r0, [r7, #12]
 800c0c8:	60b9      	str	r1, [r7, #8]
 800c0ca:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800c0cc:	68fb      	ldr	r3, [r7, #12]
 800c0ce:	687a      	ldr	r2, [r7, #4]
 800c0d0:	68b9      	ldr	r1, [r7, #8]
 800c0d2:	4618      	mov	r0, r3
 800c0d4:	f7fc fcee 	bl	8008ab4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800c0d8:	4a03      	ldr	r2, [pc, #12]	@ (800c0e8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800c0da:	68fb      	ldr	r3, [r7, #12]
 800c0dc:	601a      	str	r2, [r3, #0]
{
}
 800c0de:	68fb      	ldr	r3, [r7, #12]
 800c0e0:	4618      	mov	r0, r3
 800c0e2:	3710      	adds	r7, #16
 800c0e4:	46bd      	mov	sp, r7
 800c0e6:	bd80      	pop	{r7, pc}
 800c0e8:	08026618 	.word	0x08026618

0800c0ec <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800c0ec:	b480      	push	{r7}
 800c0ee:	b083      	sub	sp, #12
 800c0f0:	af00      	add	r7, sp, #0
 800c0f2:	6078      	str	r0, [r7, #4]
    {
    }
 800c0f4:	bf00      	nop
 800c0f6:	370c      	adds	r7, #12
 800c0f8:	46bd      	mov	sp, r7
 800c0fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0fe:	4770      	bx	lr

0800c100 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800c100:	b480      	push	{r7}
 800c102:	b083      	sub	sp, #12
 800c104:	af00      	add	r7, sp, #0
 800c106:	6078      	str	r0, [r7, #4]
    {
    }
 800c108:	bf00      	nop
 800c10a:	370c      	adds	r7, #12
 800c10c:	46bd      	mov	sp, r7
 800c10e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c112:	4770      	bx	lr

0800c114 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800c114:	b480      	push	{r7}
 800c116:	b083      	sub	sp, #12
 800c118:	af00      	add	r7, sp, #0
 800c11a:	6078      	str	r0, [r7, #4]
    {
 800c11c:	4a04      	ldr	r2, [pc, #16]	@ (800c130 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800c11e:	687b      	ldr	r3, [r7, #4]
 800c120:	601a      	str	r2, [r3, #0]
    }
 800c122:	687b      	ldr	r3, [r7, #4]
 800c124:	4618      	mov	r0, r3
 800c126:	370c      	adds	r7, #12
 800c128:	46bd      	mov	sp, r7
 800c12a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c12e:	4770      	bx	lr
 800c130:	080266bc 	.word	0x080266bc

0800c134 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800c134:	b580      	push	{r7, lr}
 800c136:	b082      	sub	sp, #8
 800c138:	af00      	add	r7, sp, #0
 800c13a:	6078      	str	r0, [r7, #4]
    }
 800c13c:	6878      	ldr	r0, [r7, #4]
 800c13e:	f7ff ffe9 	bl	800c114 <_ZN8touchgfx9PresenterD1Ev>
 800c142:	2104      	movs	r1, #4
 800c144:	6878      	ldr	r0, [r7, #4]
 800c146:	f017 fd64 	bl	8023c12 <_ZdlPvj>
 800c14a:	687b      	ldr	r3, [r7, #4]
 800c14c:	4618      	mov	r0, r3
 800c14e:	3708      	adds	r7, #8
 800c150:	46bd      	mov	sp, r7
 800c152:	bd80      	pop	{r7, pc}

0800c154 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800c154:	b480      	push	{r7}
 800c156:	b083      	sub	sp, #12
 800c158:	af00      	add	r7, sp, #0
 800c15a:	6078      	str	r0, [r7, #4]
    {
 800c15c:	4a04      	ldr	r2, [pc, #16]	@ (800c170 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800c15e:	687b      	ldr	r3, [r7, #4]
 800c160:	601a      	str	r2, [r3, #0]
    }
 800c162:	687b      	ldr	r3, [r7, #4]
 800c164:	4618      	mov	r0, r3
 800c166:	370c      	adds	r7, #12
 800c168:	46bd      	mov	sp, r7
 800c16a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c16e:	4770      	bx	lr
 800c170:	080266bc 	.word	0x080266bc

0800c174 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800c174:	b480      	push	{r7}
 800c176:	b083      	sub	sp, #12
 800c178:	af00      	add	r7, sp, #0
 800c17a:	6078      	str	r0, [r7, #4]
 800c17c:	4a06      	ldr	r2, [pc, #24]	@ (800c198 <_ZN13ModelListenerC1Ev+0x24>)
 800c17e:	687b      	ldr	r3, [r7, #4]
 800c180:	601a      	str	r2, [r3, #0]
 800c182:	687b      	ldr	r3, [r7, #4]
 800c184:	2200      	movs	r2, #0
 800c186:	605a      	str	r2, [r3, #4]
 800c188:	687b      	ldr	r3, [r7, #4]
 800c18a:	4618      	mov	r0, r3
 800c18c:	370c      	adds	r7, #12
 800c18e:	46bd      	mov	sp, r7
 800c190:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c194:	4770      	bx	lr
 800c196:	bf00      	nop
 800c198:	080266a0 	.word	0x080266a0

0800c19c <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800c19c:	b480      	push	{r7}
 800c19e:	b083      	sub	sp, #12
 800c1a0:	af00      	add	r7, sp, #0
 800c1a2:	6078      	str	r0, [r7, #4]
 800c1a4:	4a04      	ldr	r2, [pc, #16]	@ (800c1b8 <_ZN13ModelListenerD1Ev+0x1c>)
 800c1a6:	687b      	ldr	r3, [r7, #4]
 800c1a8:	601a      	str	r2, [r3, #0]
 800c1aa:	687b      	ldr	r3, [r7, #4]
 800c1ac:	4618      	mov	r0, r3
 800c1ae:	370c      	adds	r7, #12
 800c1b0:	46bd      	mov	sp, r7
 800c1b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1b6:	4770      	bx	lr
 800c1b8:	080266a0 	.word	0x080266a0

0800c1bc <_ZN13ModelListenerD0Ev>:
 800c1bc:	b580      	push	{r7, lr}
 800c1be:	b082      	sub	sp, #8
 800c1c0:	af00      	add	r7, sp, #0
 800c1c2:	6078      	str	r0, [r7, #4]
 800c1c4:	6878      	ldr	r0, [r7, #4]
 800c1c6:	f7ff ffe9 	bl	800c19c <_ZN13ModelListenerD1Ev>
 800c1ca:	2108      	movs	r1, #8
 800c1cc:	6878      	ldr	r0, [r7, #4]
 800c1ce:	f017 fd20 	bl	8023c12 <_ZdlPvj>
 800c1d2:	687b      	ldr	r3, [r7, #4]
 800c1d4:	4618      	mov	r0, r3
 800c1d6:	3708      	adds	r7, #8
 800c1d8:	46bd      	mov	sp, r7
 800c1da:	bd80      	pop	{r7, pc}

0800c1dc <_ZN13ModelListener16notifyADCChangedEm>:


    virtual void notifyADCChanged(uint32_t newVal) {}
 800c1dc:	b480      	push	{r7}
 800c1de:	b083      	sub	sp, #12
 800c1e0:	af00      	add	r7, sp, #0
 800c1e2:	6078      	str	r0, [r7, #4]
 800c1e4:	6039      	str	r1, [r7, #0]
 800c1e6:	bf00      	nop
 800c1e8:	370c      	adds	r7, #12
 800c1ea:	46bd      	mov	sp, r7
 800c1ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1f0:	4770      	bx	lr

0800c1f2 <_ZN13ModelListener24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp) {}
 800c1f2:	b480      	push	{r7}
 800c1f4:	b083      	sub	sp, #12
 800c1f6:	af00      	add	r7, sp, #0
 800c1f8:	6078      	str	r0, [r7, #4]
 800c1fa:	ed87 0a00 	vstr	s0, [r7]
 800c1fe:	bf00      	nop
 800c200:	370c      	adds	r7, #12
 800c202:	46bd      	mov	sp, r7
 800c204:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c208:	4770      	bx	lr

0800c20a <_ZN13ModelListener21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity) {}
 800c20a:	b480      	push	{r7}
 800c20c:	b083      	sub	sp, #12
 800c20e:	af00      	add	r7, sp, #0
 800c210:	6078      	str	r0, [r7, #4]
 800c212:	ed87 0a00 	vstr	s0, [r7]
 800c216:	bf00      	nop
 800c218:	370c      	adds	r7, #12
 800c21a:	46bd      	mov	sp, r7
 800c21c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c220:	4770      	bx	lr
	...

0800c224 <_ZN24humidity_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~humidity_screenPresenter() {}
 800c224:	b580      	push	{r7, lr}
 800c226:	b082      	sub	sp, #8
 800c228:	af00      	add	r7, sp, #0
 800c22a:	6078      	str	r0, [r7, #4]
 800c22c:	4a09      	ldr	r2, [pc, #36]	@ (800c254 <_ZN24humidity_screenPresenterD1Ev+0x30>)
 800c22e:	687b      	ldr	r3, [r7, #4]
 800c230:	601a      	str	r2, [r3, #0]
 800c232:	4a09      	ldr	r2, [pc, #36]	@ (800c258 <_ZN24humidity_screenPresenterD1Ev+0x34>)
 800c234:	687b      	ldr	r3, [r7, #4]
 800c236:	605a      	str	r2, [r3, #4]
 800c238:	687b      	ldr	r3, [r7, #4]
 800c23a:	3304      	adds	r3, #4
 800c23c:	4618      	mov	r0, r3
 800c23e:	f7ff ffad 	bl	800c19c <_ZN13ModelListenerD1Ev>
 800c242:	687b      	ldr	r3, [r7, #4]
 800c244:	4618      	mov	r0, r3
 800c246:	f7ff ff65 	bl	800c114 <_ZN8touchgfx9PresenterD1Ev>
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	4618      	mov	r0, r3
 800c24e:	3708      	adds	r7, #8
 800c250:	46bd      	mov	sp, r7
 800c252:	bd80      	pop	{r7, pc}
 800c254:	0802666c 	.word	0x0802666c
 800c258:	08026684 	.word	0x08026684

0800c25c <_ZThn4_N24humidity_screenPresenterD1Ev>:
 800c25c:	f1a0 0004 	sub.w	r0, r0, #4
 800c260:	e7e0      	b.n	800c224 <_ZN24humidity_screenPresenterD1Ev>
 800c262:	bf00      	nop

0800c264 <_ZN24humidity_screenPresenterD0Ev>:
 800c264:	b580      	push	{r7, lr}
 800c266:	b082      	sub	sp, #8
 800c268:	af00      	add	r7, sp, #0
 800c26a:	6078      	str	r0, [r7, #4]
 800c26c:	6878      	ldr	r0, [r7, #4]
 800c26e:	f7ff ffd9 	bl	800c224 <_ZN24humidity_screenPresenterD1Ev>
 800c272:	2110      	movs	r1, #16
 800c274:	6878      	ldr	r0, [r7, #4]
 800c276:	f017 fccc 	bl	8023c12 <_ZdlPvj>
 800c27a:	687b      	ldr	r3, [r7, #4]
 800c27c:	4618      	mov	r0, r3
 800c27e:	3708      	adds	r7, #8
 800c280:	46bd      	mov	sp, r7
 800c282:	bd80      	pop	{r7, pc}

0800c284 <_ZThn4_N24humidity_screenPresenterD0Ev>:
 800c284:	f1a0 0004 	sub.w	r0, r0, #4
 800c288:	e7ec      	b.n	800c264 <_ZN24humidity_screenPresenterD0Ev>
	...

0800c28c <_ZN24humidity_screenPresenterC1ER19humidity_screenView>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>
#include <gui/humidity_screen_screen/humidity_screenPresenter.hpp>

humidity_screenPresenter::humidity_screenPresenter(humidity_screenView& v)
 800c28c:	b580      	push	{r7, lr}
 800c28e:	b082      	sub	sp, #8
 800c290:	af00      	add	r7, sp, #0
 800c292:	6078      	str	r0, [r7, #4]
 800c294:	6039      	str	r1, [r7, #0]
    : view(v)
 800c296:	687b      	ldr	r3, [r7, #4]
 800c298:	4618      	mov	r0, r3
 800c29a:	f7ff ff5b 	bl	800c154 <_ZN8touchgfx9PresenterC1Ev>
 800c29e:	687b      	ldr	r3, [r7, #4]
 800c2a0:	3304      	adds	r3, #4
 800c2a2:	4618      	mov	r0, r3
 800c2a4:	f7ff ff66 	bl	800c174 <_ZN13ModelListenerC1Ev>
 800c2a8:	4a06      	ldr	r2, [pc, #24]	@ (800c2c4 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x38>)
 800c2aa:	687b      	ldr	r3, [r7, #4]
 800c2ac:	601a      	str	r2, [r3, #0]
 800c2ae:	4a06      	ldr	r2, [pc, #24]	@ (800c2c8 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x3c>)
 800c2b0:	687b      	ldr	r3, [r7, #4]
 800c2b2:	605a      	str	r2, [r3, #4]
 800c2b4:	687b      	ldr	r3, [r7, #4]
 800c2b6:	683a      	ldr	r2, [r7, #0]
 800c2b8:	60da      	str	r2, [r3, #12]
{

}
 800c2ba:	687b      	ldr	r3, [r7, #4]
 800c2bc:	4618      	mov	r0, r3
 800c2be:	3708      	adds	r7, #8
 800c2c0:	46bd      	mov	sp, r7
 800c2c2:	bd80      	pop	{r7, pc}
 800c2c4:	0802666c 	.word	0x0802666c
 800c2c8:	08026684 	.word	0x08026684

0800c2cc <_ZN24humidity_screenPresenter8activateEv>:

void humidity_screenPresenter::activate()
{
 800c2cc:	b480      	push	{r7}
 800c2ce:	b083      	sub	sp, #12
 800c2d0:	af00      	add	r7, sp, #0
 800c2d2:	6078      	str	r0, [r7, #4]

}
 800c2d4:	bf00      	nop
 800c2d6:	370c      	adds	r7, #12
 800c2d8:	46bd      	mov	sp, r7
 800c2da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2de:	4770      	bx	lr

0800c2e0 <_ZN24humidity_screenPresenter10deactivateEv>:

void humidity_screenPresenter::deactivate()
{
 800c2e0:	b480      	push	{r7}
 800c2e2:	b083      	sub	sp, #12
 800c2e4:	af00      	add	r7, sp, #0
 800c2e6:	6078      	str	r0, [r7, #4]

}
 800c2e8:	bf00      	nop
 800c2ea:	370c      	adds	r7, #12
 800c2ec:	46bd      	mov	sp, r7
 800c2ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2f2:	4770      	bx	lr

0800c2f4 <_ZN19humidity_screenViewD1Ev>:

class humidity_screenView : public humidity_screenViewBase
{
public:
    humidity_screenView();
    virtual ~humidity_screenView() {}
 800c2f4:	b580      	push	{r7, lr}
 800c2f6:	b082      	sub	sp, #8
 800c2f8:	af00      	add	r7, sp, #0
 800c2fa:	6078      	str	r0, [r7, #4]
 800c2fc:	4a05      	ldr	r2, [pc, #20]	@ (800c314 <_ZN19humidity_screenViewD1Ev+0x20>)
 800c2fe:	687b      	ldr	r3, [r7, #4]
 800c300:	601a      	str	r2, [r3, #0]
 800c302:	687b      	ldr	r3, [r7, #4]
 800c304:	4618      	mov	r0, r3
 800c306:	f7fe f8c9 	bl	800a49c <_ZN23humidity_screenViewBaseD1Ev>
 800c30a:	687b      	ldr	r3, [r7, #4]
 800c30c:	4618      	mov	r0, r3
 800c30e:	3708      	adds	r7, #8
 800c310:	46bd      	mov	sp, r7
 800c312:	bd80      	pop	{r7, pc}
 800c314:	080266d4 	.word	0x080266d4

0800c318 <_ZN19humidity_screenViewD0Ev>:
 800c318:	b580      	push	{r7, lr}
 800c31a:	b082      	sub	sp, #8
 800c31c:	af00      	add	r7, sp, #0
 800c31e:	6078      	str	r0, [r7, #4]
 800c320:	6878      	ldr	r0, [r7, #4]
 800c322:	f7ff ffe7 	bl	800c2f4 <_ZN19humidity_screenViewD1Ev>
 800c326:	f44f 71fe 	mov.w	r1, #508	@ 0x1fc
 800c32a:	6878      	ldr	r0, [r7, #4]
 800c32c:	f017 fc71 	bl	8023c12 <_ZdlPvj>
 800c330:	687b      	ldr	r3, [r7, #4]
 800c332:	4618      	mov	r0, r3
 800c334:	3708      	adds	r7, #8
 800c336:	46bd      	mov	sp, r7
 800c338:	bd80      	pop	{r7, pc}
	...

0800c33c <_ZN19humidity_screenViewC1Ev>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>

humidity_screenView::humidity_screenView()
 800c33c:	b580      	push	{r7, lr}
 800c33e:	b082      	sub	sp, #8
 800c340:	af00      	add	r7, sp, #0
 800c342:	6078      	str	r0, [r7, #4]
 800c344:	687b      	ldr	r3, [r7, #4]
 800c346:	4618      	mov	r0, r3
 800c348:	f7fd fe2c 	bl	8009fa4 <_ZN23humidity_screenViewBaseC1Ev>
 800c34c:	4a03      	ldr	r2, [pc, #12]	@ (800c35c <_ZN19humidity_screenViewC1Ev+0x20>)
 800c34e:	687b      	ldr	r3, [r7, #4]
 800c350:	601a      	str	r2, [r3, #0]
{

}
 800c352:	687b      	ldr	r3, [r7, #4]
 800c354:	4618      	mov	r0, r3
 800c356:	3708      	adds	r7, #8
 800c358:	46bd      	mov	sp, r7
 800c35a:	bd80      	pop	{r7, pc}
 800c35c:	080266d4 	.word	0x080266d4

0800c360 <_ZN19humidity_screenView11setupScreenEv>:

void humidity_screenView::setupScreen()
{
 800c360:	b580      	push	{r7, lr}
 800c362:	b082      	sub	sp, #8
 800c364:	af00      	add	r7, sp, #0
 800c366:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::setupScreen();
 800c368:	687b      	ldr	r3, [r7, #4]
 800c36a:	4618      	mov	r0, r3
 800c36c:	f7fe f8e1 	bl	800a532 <_ZN23humidity_screenViewBase11setupScreenEv>
}
 800c370:	bf00      	nop
 800c372:	3708      	adds	r7, #8
 800c374:	46bd      	mov	sp, r7
 800c376:	bd80      	pop	{r7, pc}

0800c378 <_ZN19humidity_screenView14tearDownScreenEv>:

void humidity_screenView::tearDownScreen()
{
 800c378:	b580      	push	{r7, lr}
 800c37a:	b082      	sub	sp, #8
 800c37c:	af00      	add	r7, sp, #0
 800c37e:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::tearDownScreen();
 800c380:	687b      	ldr	r3, [r7, #4]
 800c382:	4618      	mov	r0, r3
 800c384:	f7fd fac0 	bl	8009908 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800c388:	bf00      	nop
 800c38a:	3708      	adds	r7, #8
 800c38c:	46bd      	mov	sp, r7
 800c38e:	bd80      	pop	{r7, pc}

0800c390 <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800c390:	b580      	push	{r7, lr}
 800c392:	b082      	sub	sp, #8
 800c394:	af00      	add	r7, sp, #0
 800c396:	6078      	str	r0, [r7, #4]
 800c398:	4a09      	ldr	r2, [pc, #36]	@ (800c3c0 <_ZN13MainPresenterD1Ev+0x30>)
 800c39a:	687b      	ldr	r3, [r7, #4]
 800c39c:	601a      	str	r2, [r3, #0]
 800c39e:	4a09      	ldr	r2, [pc, #36]	@ (800c3c4 <_ZN13MainPresenterD1Ev+0x34>)
 800c3a0:	687b      	ldr	r3, [r7, #4]
 800c3a2:	605a      	str	r2, [r3, #4]
 800c3a4:	687b      	ldr	r3, [r7, #4]
 800c3a6:	3304      	adds	r3, #4
 800c3a8:	4618      	mov	r0, r3
 800c3aa:	f7ff fef7 	bl	800c19c <_ZN13ModelListenerD1Ev>
 800c3ae:	687b      	ldr	r3, [r7, #4]
 800c3b0:	4618      	mov	r0, r3
 800c3b2:	f7ff feaf 	bl	800c114 <_ZN8touchgfx9PresenterD1Ev>
 800c3b6:	687b      	ldr	r3, [r7, #4]
 800c3b8:	4618      	mov	r0, r3
 800c3ba:	3708      	adds	r7, #8
 800c3bc:	46bd      	mov	sp, r7
 800c3be:	bd80      	pop	{r7, pc}
 800c3c0:	0802670c 	.word	0x0802670c
 800c3c4:	08026730 	.word	0x08026730

0800c3c8 <_ZThn4_N13MainPresenterD1Ev>:
 800c3c8:	f1a0 0004 	sub.w	r0, r0, #4
 800c3cc:	e7e0      	b.n	800c390 <_ZN13MainPresenterD1Ev>
 800c3ce:	bf00      	nop

0800c3d0 <_ZN13MainPresenterD0Ev>:
 800c3d0:	b580      	push	{r7, lr}
 800c3d2:	b082      	sub	sp, #8
 800c3d4:	af00      	add	r7, sp, #0
 800c3d6:	6078      	str	r0, [r7, #4]
 800c3d8:	6878      	ldr	r0, [r7, #4]
 800c3da:	f7ff ffd9 	bl	800c390 <_ZN13MainPresenterD1Ev>
 800c3de:	2110      	movs	r1, #16
 800c3e0:	6878      	ldr	r0, [r7, #4]
 800c3e2:	f017 fc16 	bl	8023c12 <_ZdlPvj>
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	4618      	mov	r0, r3
 800c3ea:	3708      	adds	r7, #8
 800c3ec:	46bd      	mov	sp, r7
 800c3ee:	bd80      	pop	{r7, pc}

0800c3f0 <_ZThn4_N13MainPresenterD0Ev>:
 800c3f0:	f1a0 0004 	sub.w	r0, r0, #4
 800c3f4:	e7ec      	b.n	800c3d0 <_ZN13MainPresenterD0Ev>
	...

0800c3f8 <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800c3f8:	b580      	push	{r7, lr}
 800c3fa:	b082      	sub	sp, #8
 800c3fc:	af00      	add	r7, sp, #0
 800c3fe:	6078      	str	r0, [r7, #4]
 800c400:	6039      	str	r1, [r7, #0]
    : view(v)
 800c402:	687b      	ldr	r3, [r7, #4]
 800c404:	4618      	mov	r0, r3
 800c406:	f7ff fea5 	bl	800c154 <_ZN8touchgfx9PresenterC1Ev>
 800c40a:	687b      	ldr	r3, [r7, #4]
 800c40c:	3304      	adds	r3, #4
 800c40e:	4618      	mov	r0, r3
 800c410:	f7ff feb0 	bl	800c174 <_ZN13ModelListenerC1Ev>
 800c414:	4a06      	ldr	r2, [pc, #24]	@ (800c430 <_ZN13MainPresenterC1ER8MainView+0x38>)
 800c416:	687b      	ldr	r3, [r7, #4]
 800c418:	601a      	str	r2, [r3, #0]
 800c41a:	4a06      	ldr	r2, [pc, #24]	@ (800c434 <_ZN13MainPresenterC1ER8MainView+0x3c>)
 800c41c:	687b      	ldr	r3, [r7, #4]
 800c41e:	605a      	str	r2, [r3, #4]
 800c420:	687b      	ldr	r3, [r7, #4]
 800c422:	683a      	ldr	r2, [r7, #0]
 800c424:	60da      	str	r2, [r3, #12]
{
}
 800c426:	687b      	ldr	r3, [r7, #4]
 800c428:	4618      	mov	r0, r3
 800c42a:	3708      	adds	r7, #8
 800c42c:	46bd      	mov	sp, r7
 800c42e:	bd80      	pop	{r7, pc}
 800c430:	0802670c 	.word	0x0802670c
 800c434:	08026730 	.word	0x08026730

0800c438 <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800c438:	b480      	push	{r7}
 800c43a:	b083      	sub	sp, #12
 800c43c:	af00      	add	r7, sp, #0
 800c43e:	6078      	str	r0, [r7, #4]
}
 800c440:	bf00      	nop
 800c442:	370c      	adds	r7, #12
 800c444:	46bd      	mov	sp, r7
 800c446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c44a:	4770      	bx	lr

0800c44c <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 800c44c:	b480      	push	{r7}
 800c44e:	b083      	sub	sp, #12
 800c450:	af00      	add	r7, sp, #0
 800c452:	6078      	str	r0, [r7, #4]
}
 800c454:	bf00      	nop
 800c456:	370c      	adds	r7, #12
 800c458:	46bd      	mov	sp, r7
 800c45a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c45e:	4770      	bx	lr

0800c460 <_ZN13MainPresenter16notifyADCChangedEm>:


void MainPresenter::notifyADCChanged(uint32_t newVal){
 800c460:	b580      	push	{r7, lr}
 800c462:	b082      	sub	sp, #8
 800c464:	af00      	add	r7, sp, #0
 800c466:	6078      	str	r0, [r7, #4]
 800c468:	6039      	str	r1, [r7, #0]
	view.setVal(newVal);
 800c46a:	687b      	ldr	r3, [r7, #4]
 800c46c:	68da      	ldr	r2, [r3, #12]
 800c46e:	687b      	ldr	r3, [r7, #4]
 800c470:	68db      	ldr	r3, [r3, #12]
 800c472:	681b      	ldr	r3, [r3, #0]
 800c474:	3338      	adds	r3, #56	@ 0x38
 800c476:	681b      	ldr	r3, [r3, #0]
 800c478:	6839      	ldr	r1, [r7, #0]
 800c47a:	4610      	mov	r0, r2
 800c47c:	4798      	blx	r3
}
 800c47e:	bf00      	nop
 800c480:	3708      	adds	r7, #8
 800c482:	46bd      	mov	sp, r7
 800c484:	bd80      	pop	{r7, pc}

0800c486 <_ZThn4_N13MainPresenter16notifyADCChangedEm>:

    virtual void notifyADCChanged(uint32_t newVal);
 800c486:	f1a0 0004 	sub.w	r0, r0, #4
 800c48a:	f7ff bfe9 	b.w	800c460 <_ZN13MainPresenter16notifyADCChangedEm>

0800c48e <_ZN13MainPresenter24notifyTemperatureChangedEf>:

void MainPresenter::notifyTemperatureChanged(float newTemp){
 800c48e:	b580      	push	{r7, lr}
 800c490:	b082      	sub	sp, #8
 800c492:	af00      	add	r7, sp, #0
 800c494:	6078      	str	r0, [r7, #4]
 800c496:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(newTemp);
 800c49a:	687b      	ldr	r3, [r7, #4]
 800c49c:	68da      	ldr	r2, [r3, #12]
 800c49e:	687b      	ldr	r3, [r7, #4]
 800c4a0:	68db      	ldr	r3, [r3, #12]
 800c4a2:	681b      	ldr	r3, [r3, #0]
 800c4a4:	3340      	adds	r3, #64	@ 0x40
 800c4a6:	681b      	ldr	r3, [r3, #0]
 800c4a8:	ed97 0a00 	vldr	s0, [r7]
 800c4ac:	4610      	mov	r0, r2
 800c4ae:	4798      	blx	r3

}
 800c4b0:	bf00      	nop
 800c4b2:	3708      	adds	r7, #8
 800c4b4:	46bd      	mov	sp, r7
 800c4b6:	bd80      	pop	{r7, pc}

0800c4b8 <_ZThn4_N13MainPresenter24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp);
 800c4b8:	f1a0 0004 	sub.w	r0, r0, #4
 800c4bc:	f7ff bfe7 	b.w	800c48e <_ZN13MainPresenter24notifyTemperatureChangedEf>

0800c4c0 <_ZN13MainPresenter21notifyHumidityChangedEf>:

void MainPresenter::notifyHumidityChanged(float newHumidity){
 800c4c0:	b580      	push	{r7, lr}
 800c4c2:	b082      	sub	sp, #8
 800c4c4:	af00      	add	r7, sp, #0
 800c4c6:	6078      	str	r0, [r7, #4]
 800c4c8:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(newHumidity);
 800c4cc:	687b      	ldr	r3, [r7, #4]
 800c4ce:	68da      	ldr	r2, [r3, #12]
 800c4d0:	687b      	ldr	r3, [r7, #4]
 800c4d2:	68db      	ldr	r3, [r3, #12]
 800c4d4:	681b      	ldr	r3, [r3, #0]
 800c4d6:	333c      	adds	r3, #60	@ 0x3c
 800c4d8:	681b      	ldr	r3, [r3, #0]
 800c4da:	ed97 0a00 	vldr	s0, [r7]
 800c4de:	4610      	mov	r0, r2
 800c4e0:	4798      	blx	r3
}
 800c4e2:	bf00      	nop
 800c4e4:	3708      	adds	r7, #8
 800c4e6:	46bd      	mov	sp, r7
 800c4e8:	bd80      	pop	{r7, pc}

0800c4ea <_ZThn4_N13MainPresenter21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity);
 800c4ea:	f1a0 0004 	sub.w	r0, r0, #4
 800c4ee:	f7ff bfe7 	b.w	800c4c0 <_ZN13MainPresenter21notifyHumidityChangedEf>

0800c4f2 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800c4f2:	b580      	push	{r7, lr}
 800c4f4:	b084      	sub	sp, #16
 800c4f6:	af00      	add	r7, sp, #0
 800c4f8:	60f8      	str	r0, [r7, #12]
 800c4fa:	460b      	mov	r3, r1
 800c4fc:	607a      	str	r2, [r7, #4]
 800c4fe:	ed87 0a00 	vstr	s0, [r7]
 800c502:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800c504:	463b      	mov	r3, r7
 800c506:	8979      	ldrh	r1, [r7, #10]
 800c508:	687a      	ldr	r2, [r7, #4]
 800c50a:	68f8      	ldr	r0, [r7, #12]
 800c50c:	f008 fff8 	bl	8015500 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800c510:	4603      	mov	r3, r0
    }
 800c512:	4618      	mov	r0, r3
 800c514:	3710      	adds	r7, #16
 800c516:	46bd      	mov	sp, r7
 800c518:	bd80      	pop	{r7, pc}
	...

0800c51c <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 800c51c:	b580      	push	{r7, lr}
 800c51e:	b082      	sub	sp, #8
 800c520:	af00      	add	r7, sp, #0
 800c522:	6078      	str	r0, [r7, #4]
 800c524:	4a05      	ldr	r2, [pc, #20]	@ (800c53c <_ZN8MainViewD1Ev+0x20>)
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	601a      	str	r2, [r3, #0]
 800c52a:	687b      	ldr	r3, [r7, #4]
 800c52c:	4618      	mov	r0, r3
 800c52e:	f7ff f96d 	bl	800b80c <_ZN12MainViewBaseD1Ev>
 800c532:	687b      	ldr	r3, [r7, #4]
 800c534:	4618      	mov	r0, r3
 800c536:	3708      	adds	r7, #8
 800c538:	46bd      	mov	sp, r7
 800c53a:	bd80      	pop	{r7, pc}
 800c53c:	0802674c 	.word	0x0802674c

0800c540 <_ZN8MainViewD0Ev>:
 800c540:	b580      	push	{r7, lr}
 800c542:	b082      	sub	sp, #8
 800c544:	af00      	add	r7, sp, #0
 800c546:	6078      	str	r0, [r7, #4]
 800c548:	6878      	ldr	r0, [r7, #4]
 800c54a:	f7ff ffe7 	bl	800c51c <_ZN8MainViewD1Ev>
 800c54e:	f44f 7176 	mov.w	r1, #984	@ 0x3d8
 800c552:	6878      	ldr	r0, [r7, #4]
 800c554:	f017 fb5d 	bl	8023c12 <_ZdlPvj>
 800c558:	687b      	ldr	r3, [r7, #4]
 800c55a:	4618      	mov	r0, r3
 800c55c:	3708      	adds	r7, #8
 800c55e:	46bd      	mov	sp, r7
 800c560:	bd80      	pop	{r7, pc}
	...

0800c564 <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800c564:	b580      	push	{r7, lr}
 800c566:	b082      	sub	sp, #8
 800c568:	af00      	add	r7, sp, #0
 800c56a:	6078      	str	r0, [r7, #4]
 800c56c:	687b      	ldr	r3, [r7, #4]
 800c56e:	4618      	mov	r0, r3
 800c570:	f7fe fc9e 	bl	800aeb0 <_ZN12MainViewBaseC1Ev>
 800c574:	4a05      	ldr	r2, [pc, #20]	@ (800c58c <_ZN8MainViewC1Ev+0x28>)
 800c576:	687b      	ldr	r3, [r7, #4]
 800c578:	601a      	str	r2, [r3, #0]
 800c57a:	687b      	ldr	r3, [r7, #4]
 800c57c:	2200      	movs	r2, #0
 800c57e:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
 800c582:	687b      	ldr	r3, [r7, #4]
 800c584:	4618      	mov	r0, r3
 800c586:	3708      	adds	r7, #8
 800c588:	46bd      	mov	sp, r7
 800c58a:	bd80      	pop	{r7, pc}
 800c58c:	0802674c 	.word	0x0802674c

0800c590 <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 800c590:	b580      	push	{r7, lr}
 800c592:	b082      	sub	sp, #8
 800c594:	af00      	add	r7, sp, #0
 800c596:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 800c598:	6878      	ldr	r0, [r7, #4]
 800c59a:	f000 f855 	bl	800c648 <_ZN8MainView17updateGFXElementsEv>
    MainViewBase::setupScreen();
 800c59e:	687b      	ldr	r3, [r7, #4]
 800c5a0:	4618      	mov	r0, r3
 800c5a2:	f7ff f994 	bl	800b8ce <_ZN12MainViewBase11setupScreenEv>

}
 800c5a6:	bf00      	nop
 800c5a8:	3708      	adds	r7, #8
 800c5aa:	46bd      	mov	sp, r7
 800c5ac:	bd80      	pop	{r7, pc}

0800c5ae <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 800c5ae:	b580      	push	{r7, lr}
 800c5b0:	b082      	sub	sp, #8
 800c5b2:	af00      	add	r7, sp, #0
 800c5b4:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800c5b6:	687b      	ldr	r3, [r7, #4]
 800c5b8:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800c5bc:	1c5a      	adds	r2, r3, #1
 800c5be:	b2d1      	uxtb	r1, r2
 800c5c0:	687a      	ldr	r2, [r7, #4]
 800c5c2:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800c5c6:	2b2a      	cmp	r3, #42	@ 0x2a
 800c5c8:	d804      	bhi.n	800c5d4 <_ZN8MainView13increaseValueEv+0x26>
 800c5ca:	687b      	ldr	r3, [r7, #4]
 800c5cc:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800c5d0:	781a      	ldrb	r2, [r3, #0]
 800c5d2:	e000      	b.n	800c5d6 <_ZN8MainView13increaseValueEv+0x28>
 800c5d4:	222a      	movs	r2, #42	@ 0x2a
 800c5d6:	687b      	ldr	r3, [r7, #4]
 800c5d8:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800c5dc:	6878      	ldr	r0, [r7, #4]
 800c5de:	f000 f833 	bl	800c648 <_ZN8MainView17updateGFXElementsEv>
}
 800c5e2:	bf00      	nop
 800c5e4:	3708      	adds	r7, #8
 800c5e6:	46bd      	mov	sp, r7
 800c5e8:	bd80      	pop	{r7, pc}

0800c5ea <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 800c5ea:	b580      	push	{r7, lr}
 800c5ec:	b082      	sub	sp, #8
 800c5ee:	af00      	add	r7, sp, #0
 800c5f0:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 800c5f2:	687b      	ldr	r3, [r7, #4]
 800c5f4:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800c5f8:	1e5a      	subs	r2, r3, #1
 800c5fa:	b2d1      	uxtb	r1, r2
 800c5fc:	687a      	ldr	r2, [r7, #4]
 800c5fe:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800c602:	2b00      	cmp	r3, #0
 800c604:	d004      	beq.n	800c610 <_ZN8MainView13decreaseValueEv+0x26>
 800c606:	687b      	ldr	r3, [r7, #4]
 800c608:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800c60c:	781a      	ldrb	r2, [r3, #0]
 800c60e:	e000      	b.n	800c612 <_ZN8MainView13decreaseValueEv+0x28>
 800c610:	2200      	movs	r2, #0
 800c612:	687b      	ldr	r3, [r7, #4]
 800c614:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800c618:	6878      	ldr	r0, [r7, #4]
 800c61a:	f000 f815 	bl	800c648 <_ZN8MainView17updateGFXElementsEv>
}
 800c61e:	bf00      	nop
 800c620:	3708      	adds	r7, #8
 800c622:	46bd      	mov	sp, r7
 800c624:	bd80      	pop	{r7, pc}
	...

0800c628 <_ZN8MainView12ToggleLightsEv>:

void MainView::ToggleLights(){
 800c628:	b580      	push	{r7, lr}
 800c62a:	b082      	sub	sp, #8
 800c62c:	af00      	add	r7, sp, #0
 800c62e:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
 800c630:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800c634:	4803      	ldr	r0, [pc, #12]	@ (800c644 <_ZN8MainView12ToggleLightsEv+0x1c>)
 800c636:	f7f7 fe60 	bl	80042fa <HAL_GPIO_TogglePin>


}
 800c63a:	bf00      	nop
 800c63c:	3708      	adds	r7, #8
 800c63e:	46bd      	mov	sp, r7
 800c640:	bd80      	pop	{r7, pc}
 800c642:	bf00      	nop
 800c644:	40020400 	.word	0x40020400

0800c648 <_ZN8MainView17updateGFXElementsEv>:
void MainView::updateGFXElements()
{
 800c648:	b480      	push	{r7}
 800c64a:	b083      	sub	sp, #12
 800c64c:	af00      	add	r7, sp, #0
 800c64e:	6078      	str	r0, [r7, #4]
//    }
//    // Invalidate all GFX area, which will result in it being redrawn in next tick.
//    countTxt.invalidate();
//    buttonUp.invalidate();
//    buttonDown.invalidate();
}
 800c650:	bf00      	nop
 800c652:	370c      	adds	r7, #12
 800c654:	46bd      	mov	sp, r7
 800c656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c65a:	4770      	bx	lr

0800c65c <_ZN8MainView6setValEm>:

void MainView::setVal(uint32_t val){
 800c65c:	b580      	push	{r7, lr}
 800c65e:	b082      	sub	sp, #8
 800c660:	af00      	add	r7, sp, #0
 800c662:	6078      	str	r0, [r7, #4]
 800c664:	6039      	str	r1, [r7, #0]

	Unicode::snprintf(ADCVALBuffer, ADCVAL_SIZE, "%d", val);
 800c666:	687b      	ldr	r3, [r7, #4]
 800c668:	f503 7063 	add.w	r0, r3, #908	@ 0x38c
 800c66c:	683b      	ldr	r3, [r7, #0]
 800c66e:	4a07      	ldr	r2, [pc, #28]	@ (800c68c <_ZN8MainView6setValEm+0x30>)
 800c670:	2114      	movs	r1, #20
 800c672:	f008 fd45 	bl	8015100 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ADCVAL.invalidate();
 800c676:	687b      	ldr	r3, [r7, #4]
 800c678:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c67c:	4618      	mov	r0, r3
 800c67e:	f006 fde5 	bl	801324c <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800c682:	bf00      	nop
 800c684:	3708      	adds	r7, #8
 800c686:	46bd      	mov	sp, r7
 800c688:	bd80      	pop	{r7, pc}
 800c68a:	bf00      	nop
 800c68c:	08025544 	.word	0x08025544

0800c690 <_ZN8MainView14setTemperatureEf>:

void MainView::setTemperature(float temp){
 800c690:	b580      	push	{r7, lr}
 800c692:	b082      	sub	sp, #8
 800c694:	af00      	add	r7, sp, #0
 800c696:	6078      	str	r0, [r7, #4]
 800c698:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(TEMPVALBuffer, TEMPVAL_SIZE, "%.1f", temp);
 800c69c:	687b      	ldr	r3, [r7, #4]
 800c69e:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800c6a2:	ed97 0a00 	vldr	s0, [r7]
 800c6a6:	4a07      	ldr	r2, [pc, #28]	@ (800c6c4 <_ZN8MainView14setTemperatureEf+0x34>)
 800c6a8:	2114      	movs	r1, #20
 800c6aa:	4618      	mov	r0, r3
 800c6ac:	f7ff ff21 	bl	800c4f2 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	TEMPVAL.invalidate();
 800c6b0:	687b      	ldr	r3, [r7, #4]
 800c6b2:	33f0      	adds	r3, #240	@ 0xf0
 800c6b4:	4618      	mov	r0, r3
 800c6b6:	f006 fdc9 	bl	801324c <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800c6ba:	bf00      	nop
 800c6bc:	3708      	adds	r7, #8
 800c6be:	46bd      	mov	sp, r7
 800c6c0:	bd80      	pop	{r7, pc}
 800c6c2:	bf00      	nop
 800c6c4:	08025548 	.word	0x08025548

0800c6c8 <_ZN8MainView11setHumidityEf>:

void MainView::setHumidity(float humidity){
 800c6c8:	b580      	push	{r7, lr}
 800c6ca:	b082      	sub	sp, #8
 800c6cc:	af00      	add	r7, sp, #0
 800c6ce:	6078      	str	r0, [r7, #4]
 800c6d0:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(HUMVALBuffer, HUMVAL_SIZE, "%.1f", humidity);
 800c6d4:	687b      	ldr	r3, [r7, #4]
 800c6d6:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800c6da:	ed97 0a00 	vldr	s0, [r7]
 800c6de:	4a07      	ldr	r2, [pc, #28]	@ (800c6fc <_ZN8MainView11setHumidityEf+0x34>)
 800c6e0:	2114      	movs	r1, #20
 800c6e2:	4618      	mov	r0, r3
 800c6e4:	f7ff ff05 	bl	800c4f2 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	HUMVAL.invalidate();
 800c6e8:	687b      	ldr	r3, [r7, #4]
 800c6ea:	33a4      	adds	r3, #164	@ 0xa4
 800c6ec:	4618      	mov	r0, r3
 800c6ee:	f006 fdad 	bl	801324c <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800c6f2:	bf00      	nop
 800c6f4:	3708      	adds	r7, #8
 800c6f6:	46bd      	mov	sp, r7
 800c6f8:	bd80      	pop	{r7, pc}
 800c6fa:	bf00      	nop
 800c6fc:	08025548 	.word	0x08025548

0800c700 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 800c700:	b480      	push	{r7}
 800c702:	b083      	sub	sp, #12
 800c704:	af00      	add	r7, sp, #0
 800c706:	6078      	str	r0, [r7, #4]
 800c708:	687b      	ldr	r3, [r7, #4]
 800c70a:	2200      	movs	r2, #0
 800c70c:	601a      	str	r2, [r3, #0]
{
}
 800c70e:	687b      	ldr	r3, [r7, #4]
 800c710:	4618      	mov	r0, r3
 800c712:	370c      	adds	r7, #12
 800c714:	46bd      	mov	sp, r7
 800c716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c71a:	4770      	bx	lr

0800c71c <_ZN5Model4tickEv>:

void Model::tick()
{
 800c71c:	b580      	push	{r7, lr}
 800c71e:	b086      	sub	sp, #24
 800c720:	af00      	add	r7, sp, #0
 800c722:	6078      	str	r0, [r7, #4]

	float humidity = hum;
 800c724:	4b18      	ldr	r3, [pc, #96]	@ (800c788 <_ZN5Model4tickEv+0x6c>)
 800c726:	681b      	ldr	r3, [r3, #0]
 800c728:	617b      	str	r3, [r7, #20]
	float temperature = temp;
 800c72a:	4b18      	ldr	r3, [pc, #96]	@ (800c78c <_ZN5Model4tickEv+0x70>)
 800c72c:	681b      	ldr	r3, [r3, #0]
 800c72e:	613b      	str	r3, [r7, #16]
	//uint32_t val = htim4.Instance->CCR2;
	uint32_t val = value_adc;
 800c730:	4b17      	ldr	r3, [pc, #92]	@ (800c790 <_ZN5Model4tickEv+0x74>)
 800c732:	681b      	ldr	r3, [r3, #0]
 800c734:	60fb      	str	r3, [r7, #12]

	if (modelListener != 0) {
 800c736:	687b      	ldr	r3, [r7, #4]
 800c738:	681b      	ldr	r3, [r3, #0]
 800c73a:	2b00      	cmp	r3, #0
 800c73c:	d01f      	beq.n	800c77e <_ZN5Model4tickEv+0x62>
		modelListener -> notifyADCChanged(val);
 800c73e:	687b      	ldr	r3, [r7, #4]
 800c740:	681a      	ldr	r2, [r3, #0]
 800c742:	687b      	ldr	r3, [r7, #4]
 800c744:	681b      	ldr	r3, [r3, #0]
 800c746:	681b      	ldr	r3, [r3, #0]
 800c748:	3308      	adds	r3, #8
 800c74a:	681b      	ldr	r3, [r3, #0]
 800c74c:	68f9      	ldr	r1, [r7, #12]
 800c74e:	4610      	mov	r0, r2
 800c750:	4798      	blx	r3
		modelListener -> notifyTemperatureChanged(temperature);
 800c752:	687b      	ldr	r3, [r7, #4]
 800c754:	681a      	ldr	r2, [r3, #0]
 800c756:	687b      	ldr	r3, [r7, #4]
 800c758:	681b      	ldr	r3, [r3, #0]
 800c75a:	681b      	ldr	r3, [r3, #0]
 800c75c:	330c      	adds	r3, #12
 800c75e:	681b      	ldr	r3, [r3, #0]
 800c760:	ed97 0a04 	vldr	s0, [r7, #16]
 800c764:	4610      	mov	r0, r2
 800c766:	4798      	blx	r3
		modelListener -> notifyHumidityChanged(humidity);
 800c768:	687b      	ldr	r3, [r7, #4]
 800c76a:	681a      	ldr	r2, [r3, #0]
 800c76c:	687b      	ldr	r3, [r7, #4]
 800c76e:	681b      	ldr	r3, [r3, #0]
 800c770:	681b      	ldr	r3, [r3, #0]
 800c772:	3310      	adds	r3, #16
 800c774:	681b      	ldr	r3, [r3, #0]
 800c776:	ed97 0a05 	vldr	s0, [r7, #20]
 800c77a:	4610      	mov	r0, r2
 800c77c:	4798      	blx	r3


	}


}
 800c77e:	bf00      	nop
 800c780:	3718      	adds	r7, #24
 800c782:	46bd      	mov	sp, r7
 800c784:	bd80      	pop	{r7, pc}
 800c786:	bf00      	nop
 800c788:	200005b8 	.word	0x200005b8
 800c78c:	200005b4 	.word	0x200005b4
 800c790:	200005b0 	.word	0x200005b0

0800c794 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800c794:	b480      	push	{r7}
 800c796:	b083      	sub	sp, #12
 800c798:	af00      	add	r7, sp, #0
 800c79a:	6078      	str	r0, [r7, #4]
    {
 800c79c:	4a04      	ldr	r2, [pc, #16]	@ (800c7b0 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800c79e:	687b      	ldr	r3, [r7, #4]
 800c7a0:	601a      	str	r2, [r3, #0]
    }
 800c7a2:	687b      	ldr	r3, [r7, #4]
 800c7a4:	4618      	mov	r0, r3
 800c7a6:	370c      	adds	r7, #12
 800c7a8:	46bd      	mov	sp, r7
 800c7aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7ae:	4770      	bx	lr
 800c7b0:	080267b0 	.word	0x080267b0

0800c7b4 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800c7b4:	b580      	push	{r7, lr}
 800c7b6:	b082      	sub	sp, #8
 800c7b8:	af00      	add	r7, sp, #0
 800c7ba:	6078      	str	r0, [r7, #4]
    }
 800c7bc:	6878      	ldr	r0, [r7, #4]
 800c7be:	f7ff ffe9 	bl	800c794 <_ZN8touchgfx15TouchControllerD1Ev>
 800c7c2:	2104      	movs	r1, #4
 800c7c4:	6878      	ldr	r0, [r7, #4]
 800c7c6:	f017 fa24 	bl	8023c12 <_ZdlPvj>
 800c7ca:	687b      	ldr	r3, [r7, #4]
 800c7cc:	4618      	mov	r0, r3
 800c7ce:	3708      	adds	r7, #8
 800c7d0:	46bd      	mov	sp, r7
 800c7d2:	bd80      	pop	{r7, pc}

0800c7d4 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 800c7d4:	b480      	push	{r7}
 800c7d6:	b083      	sub	sp, #12
 800c7d8:	af00      	add	r7, sp, #0
 800c7da:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800c7dc:	bf00      	nop
 800c7de:	370c      	adds	r7, #12
 800c7e0:	46bd      	mov	sp, r7
 800c7e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7e6:	4770      	bx	lr

0800c7e8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800c7e8:	b580      	push	{r7, lr}
 800c7ea:	b084      	sub	sp, #16
 800c7ec:	af00      	add	r7, sp, #0
 800c7ee:	60f8      	str	r0, [r7, #12]
 800c7f0:	60b9      	str	r1, [r7, #8]
 800c7f2:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

	return((bool) Touch_TouchGFXSampleTouch(&x,&y));
 800c7f4:	6879      	ldr	r1, [r7, #4]
 800c7f6:	68b8      	ldr	r0, [r7, #8]
 800c7f8:	f7f6 f814 	bl	8002824 <Touch_TouchGFXSampleTouch>
 800c7fc:	4603      	mov	r3, r0
 800c7fe:	2b00      	cmp	r3, #0
 800c800:	bf14      	ite	ne
 800c802:	2301      	movne	r3, #1
 800c804:	2300      	moveq	r3, #0
 800c806:	b2db      	uxtb	r3, r3
}
 800c808:	4618      	mov	r0, r3
 800c80a:	3710      	adds	r7, #16
 800c80c:	46bd      	mov	sp, r7
 800c80e:	bd80      	pop	{r7, pc}

0800c810 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800c810:	b580      	push	{r7, lr}
 800c812:	b082      	sub	sp, #8
 800c814:	af00      	add	r7, sp, #0
 800c816:	6078      	str	r0, [r7, #4]
 800c818:	4a05      	ldr	r2, [pc, #20]	@ (800c830 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800c81a:	687b      	ldr	r3, [r7, #4]
 800c81c:	601a      	str	r2, [r3, #0]
 800c81e:	687b      	ldr	r3, [r7, #4]
 800c820:	4618      	mov	r0, r3
 800c822:	f7ff ffb7 	bl	800c794 <_ZN8touchgfx15TouchControllerD1Ev>
 800c826:	687b      	ldr	r3, [r7, #4]
 800c828:	4618      	mov	r0, r3
 800c82a:	3708      	adds	r7, #8
 800c82c:	46bd      	mov	sp, r7
 800c82e:	bd80      	pop	{r7, pc}
 800c830:	08026798 	.word	0x08026798

0800c834 <_ZN20STM32TouchControllerD0Ev>:
 800c834:	b580      	push	{r7, lr}
 800c836:	b082      	sub	sp, #8
 800c838:	af00      	add	r7, sp, #0
 800c83a:	6078      	str	r0, [r7, #4]
 800c83c:	6878      	ldr	r0, [r7, #4]
 800c83e:	f7ff ffe7 	bl	800c810 <_ZN20STM32TouchControllerD1Ev>
 800c842:	2104      	movs	r1, #4
 800c844:	6878      	ldr	r0, [r7, #4]
 800c846:	f017 f9e4 	bl	8023c12 <_ZdlPvj>
 800c84a:	687b      	ldr	r3, [r7, #4]
 800c84c:	4618      	mov	r0, r3
 800c84e:	3708      	adds	r7, #8
 800c850:	46bd      	mov	sp, r7
 800c852:	bd80      	pop	{r7, pc}

0800c854 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800c854:	b480      	push	{r7}
 800c856:	af00      	add	r7, sp, #0

}
 800c858:	bf00      	nop
 800c85a:	46bd      	mov	sp, r7
 800c85c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c860:	4770      	bx	lr
	...

0800c864 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800c864:	b480      	push	{r7}
 800c866:	b083      	sub	sp, #12
 800c868:	af00      	add	r7, sp, #0
 800c86a:	4603      	mov	r3, r0
 800c86c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800c86e:	79fb      	ldrb	r3, [r7, #7]
 800c870:	2b03      	cmp	r3, #3
 800c872:	d80c      	bhi.n	800c88e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800c874:	a201      	add	r2, pc, #4	@ (adr r2, 800c87c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800c876:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c87a:	bf00      	nop
 800c87c:	0800c88d 	.word	0x0800c88d
 800c880:	0800c88d 	.word	0x0800c88d
 800c884:	0800c88d 	.word	0x0800c88d
 800c888:	0800c88d 	.word	0x0800c88d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800c88c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800c88e:	bf00      	nop
 800c890:	370c      	adds	r7, #12
 800c892:	46bd      	mov	sp, r7
 800c894:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c898:	4770      	bx	lr
 800c89a:	bf00      	nop

0800c89c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800c89c:	b480      	push	{r7}
 800c89e:	b083      	sub	sp, #12
 800c8a0:	af00      	add	r7, sp, #0
 800c8a2:	4603      	mov	r3, r0
 800c8a4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800c8a6:	79fb      	ldrb	r3, [r7, #7]
 800c8a8:	2b03      	cmp	r3, #3
 800c8aa:	d80c      	bhi.n	800c8c6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800c8ac:	a201      	add	r2, pc, #4	@ (adr r2, 800c8b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800c8ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c8b2:	bf00      	nop
 800c8b4:	0800c8c5 	.word	0x0800c8c5
 800c8b8:	0800c8c5 	.word	0x0800c8c5
 800c8bc:	0800c8c5 	.word	0x0800c8c5
 800c8c0:	0800c8c5 	.word	0x0800c8c5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800c8c4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800c8c6:	bf00      	nop
 800c8c8:	370c      	adds	r7, #12
 800c8ca:	46bd      	mov	sp, r7
 800c8cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8d0:	4770      	bx	lr
 800c8d2:	bf00      	nop

0800c8d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800c8d4:	b480      	push	{r7}
 800c8d6:	b083      	sub	sp, #12
 800c8d8:	af00      	add	r7, sp, #0
 800c8da:	4603      	mov	r3, r0
 800c8dc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800c8de:	79fb      	ldrb	r3, [r7, #7]
 800c8e0:	2b03      	cmp	r3, #3
 800c8e2:	d80c      	bhi.n	800c8fe <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800c8e4:	a201      	add	r2, pc, #4	@ (adr r2, 800c8ec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800c8e6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c8ea:	bf00      	nop
 800c8ec:	0800c8fd 	.word	0x0800c8fd
 800c8f0:	0800c8fd 	.word	0x0800c8fd
 800c8f4:	0800c8fd 	.word	0x0800c8fd
 800c8f8:	0800c8fd 	.word	0x0800c8fd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800c8fc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800c8fe:	bf00      	nop
 800c900:	370c      	adds	r7, #12
 800c902:	46bd      	mov	sp, r7
 800c904:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c908:	4770      	bx	lr
 800c90a:	bf00      	nop

0800c90c <_ZN8touchgfx3HALD1Ev>:
 800c90c:	b480      	push	{r7}
 800c90e:	b083      	sub	sp, #12
 800c910:	af00      	add	r7, sp, #0
 800c912:	6078      	str	r0, [r7, #4]
 800c914:	4a04      	ldr	r2, [pc, #16]	@ (800c928 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800c916:	687b      	ldr	r3, [r7, #4]
 800c918:	601a      	str	r2, [r3, #0]
 800c91a:	687b      	ldr	r3, [r7, #4]
 800c91c:	4618      	mov	r0, r3
 800c91e:	370c      	adds	r7, #12
 800c920:	46bd      	mov	sp, r7
 800c922:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c926:	4770      	bx	lr
 800c928:	08026be8 	.word	0x08026be8

0800c92c <_ZN8touchgfx3HALD0Ev>:
 800c92c:	b580      	push	{r7, lr}
 800c92e:	b082      	sub	sp, #8
 800c930:	af00      	add	r7, sp, #0
 800c932:	6078      	str	r0, [r7, #4]
 800c934:	6878      	ldr	r0, [r7, #4]
 800c936:	f7ff ffe9 	bl	800c90c <_ZN8touchgfx3HALD1Ev>
 800c93a:	217c      	movs	r1, #124	@ 0x7c
 800c93c:	6878      	ldr	r0, [r7, #4]
 800c93e:	f017 f968 	bl	8023c12 <_ZdlPvj>
 800c942:	687b      	ldr	r3, [r7, #4]
 800c944:	4618      	mov	r0, r3
 800c946:	3708      	adds	r7, #8
 800c948:	46bd      	mov	sp, r7
 800c94a:	bd80      	pop	{r7, pc}

0800c94c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
 800c94c:	b480      	push	{r7}
 800c94e:	b083      	sub	sp, #12
 800c950:	af00      	add	r7, sp, #0
 800c952:	6078      	str	r0, [r7, #4]
 800c954:	460b      	mov	r3, r1
 800c956:	70fb      	strb	r3, [r7, #3]
 800c958:	687b      	ldr	r3, [r7, #4]
 800c95a:	78fa      	ldrb	r2, [r7, #3]
 800c95c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800c960:	687b      	ldr	r3, [r7, #4]
 800c962:	2201      	movs	r2, #1
 800c964:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
 800c968:	bf00      	nop
 800c96a:	370c      	adds	r7, #12
 800c96c:	46bd      	mov	sp, r7
 800c96e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c972:	4770      	bx	lr

0800c974 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
 800c974:	b580      	push	{r7, lr}
 800c976:	b082      	sub	sp, #8
 800c978:	af00      	add	r7, sp, #0
 800c97a:	6078      	str	r0, [r7, #4]
 800c97c:	460b      	mov	r3, r1
 800c97e:	807b      	strh	r3, [r7, #2]
 800c980:	4613      	mov	r3, r2
 800c982:	803b      	strh	r3, [r7, #0]
 800c984:	4b0c      	ldr	r3, [pc, #48]	@ (800c9b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800c986:	881b      	ldrh	r3, [r3, #0]
 800c988:	887a      	ldrh	r2, [r7, #2]
 800c98a:	429a      	cmp	r2, r3
 800c98c:	d304      	bcc.n	800c998 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800c98e:	4b0b      	ldr	r3, [pc, #44]	@ (800c9bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800c990:	881b      	ldrh	r3, [r3, #0]
 800c992:	883a      	ldrh	r2, [r7, #0]
 800c994:	429a      	cmp	r2, r3
 800c996:	d205      	bcs.n	800c9a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800c998:	4b09      	ldr	r3, [pc, #36]	@ (800c9c0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800c99a:	4a0a      	ldr	r2, [pc, #40]	@ (800c9c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800c99c:	219e      	movs	r1, #158	@ 0x9e
 800c99e:	480a      	ldr	r0, [pc, #40]	@ (800c9c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800c9a0:	f017 f9e6 	bl	8023d70 <__assert_func>
 800c9a4:	4a09      	ldr	r2, [pc, #36]	@ (800c9cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800c9a6:	887b      	ldrh	r3, [r7, #2]
 800c9a8:	8013      	strh	r3, [r2, #0]
 800c9aa:	4a09      	ldr	r2, [pc, #36]	@ (800c9d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800c9ac:	883b      	ldrh	r3, [r7, #0]
 800c9ae:	8013      	strh	r3, [r2, #0]
 800c9b0:	bf00      	nop
 800c9b2:	3708      	adds	r7, #8
 800c9b4:	46bd      	mov	sp, r7
 800c9b6:	bd80      	pop	{r7, pc}
 800c9b8:	20002f28 	.word	0x20002f28
 800c9bc:	20002f2a 	.word	0x20002f2a
 800c9c0:	08025550 	.word	0x08025550
 800c9c4:	080255b4 	.word	0x080255b4
 800c9c8:	080255f8 	.word	0x080255f8
 800c9cc:	20002f2e 	.word	0x20002f2e
 800c9d0:	20002f30 	.word	0x20002f30

0800c9d4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
 800c9d4:	b580      	push	{r7, lr}
 800c9d6:	b082      	sub	sp, #8
 800c9d8:	af00      	add	r7, sp, #0
 800c9da:	6078      	str	r0, [r7, #4]
 800c9dc:	687b      	ldr	r3, [r7, #4]
 800c9de:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800c9e2:	2b00      	cmp	r3, #0
 800c9e4:	d009      	beq.n	800c9fa <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
 800c9e6:	687b      	ldr	r3, [r7, #4]
 800c9e8:	685a      	ldr	r2, [r3, #4]
 800c9ea:	687b      	ldr	r3, [r7, #4]
 800c9ec:	685b      	ldr	r3, [r3, #4]
 800c9ee:	681b      	ldr	r3, [r3, #0]
 800c9f0:	681b      	ldr	r3, [r3, #0]
 800c9f2:	4610      	mov	r0, r2
 800c9f4:	4798      	blx	r3
 800c9f6:	4603      	mov	r3, r0
 800c9f8:	e000      	b.n	800c9fc <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
 800c9fa:	2300      	movs	r3, #0
 800c9fc:	4618      	mov	r0, r3
 800c9fe:	3708      	adds	r7, #8
 800ca00:	46bd      	mov	sp, r7
 800ca02:	bd80      	pop	{r7, pc}

0800ca04 <_ZN8touchgfx3HAL15backPorchExitedEv>:
 800ca04:	b580      	push	{r7, lr}
 800ca06:	b082      	sub	sp, #8
 800ca08:	af00      	add	r7, sp, #0
 800ca0a:	6078      	str	r0, [r7, #4]
 800ca0c:	6878      	ldr	r0, [r7, #4]
 800ca0e:	f002 ff07 	bl	800f820 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 800ca12:	687b      	ldr	r3, [r7, #4]
 800ca14:	681b      	ldr	r3, [r3, #0]
 800ca16:	33ac      	adds	r3, #172	@ 0xac
 800ca18:	681b      	ldr	r3, [r3, #0]
 800ca1a:	6878      	ldr	r0, [r7, #4]
 800ca1c:	4798      	blx	r3
 800ca1e:	bf00      	nop
 800ca20:	3708      	adds	r7, #8
 800ca22:	46bd      	mov	sp, r7
 800ca24:	bd80      	pop	{r7, pc}

0800ca26 <_ZN8touchgfx3HAL9sampleKeyERh>:
 800ca26:	b480      	push	{r7}
 800ca28:	b083      	sub	sp, #12
 800ca2a:	af00      	add	r7, sp, #0
 800ca2c:	6078      	str	r0, [r7, #4]
 800ca2e:	6039      	str	r1, [r7, #0]
 800ca30:	2300      	movs	r3, #0
 800ca32:	4618      	mov	r0, r3
 800ca34:	370c      	adds	r7, #12
 800ca36:	46bd      	mov	sp, r7
 800ca38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca3c:	4770      	bx	lr
	...

0800ca40 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
 800ca40:	b580      	push	{r7, lr}
 800ca42:	b084      	sub	sp, #16
 800ca44:	af00      	add	r7, sp, #0
 800ca46:	60f8      	str	r0, [r7, #12]
 800ca48:	60b9      	str	r1, [r7, #8]
 800ca4a:	607a      	str	r2, [r7, #4]
 800ca4c:	603b      	str	r3, [r7, #0]
 800ca4e:	68bb      	ldr	r3, [r7, #8]
 800ca50:	2b00      	cmp	r3, #0
 800ca52:	d106      	bne.n	800ca62 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800ca54:	4b0f      	ldr	r3, [pc, #60]	@ (800ca94 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800ca56:	4a10      	ldr	r2, [pc, #64]	@ (800ca98 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800ca58:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800ca5c:	480f      	ldr	r0, [pc, #60]	@ (800ca9c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800ca5e:	f017 f987 	bl	8023d70 <__assert_func>
 800ca62:	68fb      	ldr	r3, [r7, #12]
 800ca64:	68ba      	ldr	r2, [r7, #8]
 800ca66:	63da      	str	r2, [r3, #60]	@ 0x3c
 800ca68:	68fb      	ldr	r3, [r7, #12]
 800ca6a:	687a      	ldr	r2, [r7, #4]
 800ca6c:	641a      	str	r2, [r3, #64]	@ 0x40
 800ca6e:	687b      	ldr	r3, [r7, #4]
 800ca70:	2b00      	cmp	r3, #0
 800ca72:	bf14      	ite	ne
 800ca74:	2301      	movne	r3, #1
 800ca76:	2300      	moveq	r3, #0
 800ca78:	b2da      	uxtb	r2, r3
 800ca7a:	4b09      	ldr	r3, [pc, #36]	@ (800caa0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800ca7c:	701a      	strb	r2, [r3, #0]
 800ca7e:	68fb      	ldr	r3, [r7, #12]
 800ca80:	681b      	ldr	r3, [r3, #0]
 800ca82:	338c      	adds	r3, #140	@ 0x8c
 800ca84:	681b      	ldr	r3, [r3, #0]
 800ca86:	6839      	ldr	r1, [r7, #0]
 800ca88:	68f8      	ldr	r0, [r7, #12]
 800ca8a:	4798      	blx	r3
 800ca8c:	bf00      	nop
 800ca8e:	3710      	adds	r7, #16
 800ca90:	46bd      	mov	sp, r7
 800ca92:	bd80      	pop	{r7, pc}
 800ca94:	0802563c 	.word	0x0802563c
 800ca98:	08025674 	.word	0x08025674
 800ca9c:	080255f8 	.word	0x080255f8
 800caa0:	20002f32 	.word	0x20002f32

0800caa4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
 800caa4:	b480      	push	{r7}
 800caa6:	b083      	sub	sp, #12
 800caa8:	af00      	add	r7, sp, #0
 800caaa:	6078      	str	r0, [r7, #4]
 800caac:	6039      	str	r1, [r7, #0]
 800caae:	687b      	ldr	r3, [r7, #4]
 800cab0:	683a      	ldr	r2, [r7, #0]
 800cab2:	645a      	str	r2, [r3, #68]	@ 0x44
 800cab4:	683b      	ldr	r3, [r7, #0]
 800cab6:	2b00      	cmp	r3, #0
 800cab8:	bf14      	ite	ne
 800caba:	2301      	movne	r3, #1
 800cabc:	2300      	moveq	r3, #0
 800cabe:	b2da      	uxtb	r2, r3
 800cac0:	4b03      	ldr	r3, [pc, #12]	@ (800cad0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800cac2:	701a      	strb	r2, [r3, #0]
 800cac4:	bf00      	nop
 800cac6:	370c      	adds	r7, #12
 800cac8:	46bd      	mov	sp, r7
 800caca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cace:	4770      	bx	lr
 800cad0:	20002f33 	.word	0x20002f33

0800cad4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
 800cad4:	b480      	push	{r7}
 800cad6:	b083      	sub	sp, #12
 800cad8:	af00      	add	r7, sp, #0
 800cada:	6078      	str	r0, [r7, #4]
 800cadc:	2300      	movs	r3, #0
 800cade:	4618      	mov	r0, r3
 800cae0:	370c      	adds	r7, #12
 800cae2:	46bd      	mov	sp, r7
 800cae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cae8:	4770      	bx	lr

0800caea <_ZN8touchgfx3HAL9taskDelayEt>:
 800caea:	b580      	push	{r7, lr}
 800caec:	b082      	sub	sp, #8
 800caee:	af00      	add	r7, sp, #0
 800caf0:	6078      	str	r0, [r7, #4]
 800caf2:	460b      	mov	r3, r1
 800caf4:	807b      	strh	r3, [r7, #2]
 800caf6:	687b      	ldr	r3, [r7, #4]
 800caf8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cafa:	2b00      	cmp	r3, #0
 800cafc:	d004      	beq.n	800cb08 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
 800cafe:	687b      	ldr	r3, [r7, #4]
 800cb00:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800cb02:	887a      	ldrh	r2, [r7, #2]
 800cb04:	4610      	mov	r0, r2
 800cb06:	4798      	blx	r3
 800cb08:	bf00      	nop
 800cb0a:	3708      	adds	r7, #8
 800cb0c:	46bd      	mov	sp, r7
 800cb0e:	bd80      	pop	{r7, pc}

0800cb10 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800cb10:	b480      	push	{r7}
 800cb12:	b083      	sub	sp, #12
 800cb14:	af00      	add	r7, sp, #0
 800cb16:	6078      	str	r0, [r7, #4]
 800cb18:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800cb1c:	4618      	mov	r0, r3
 800cb1e:	370c      	adds	r7, #12
 800cb20:	46bd      	mov	sp, r7
 800cb22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb26:	4770      	bx	lr

0800cb28 <_ZN8touchgfx3HAL10getDMATypeEv>:
 800cb28:	b580      	push	{r7, lr}
 800cb2a:	b082      	sub	sp, #8
 800cb2c:	af00      	add	r7, sp, #0
 800cb2e:	6078      	str	r0, [r7, #4]
 800cb30:	687b      	ldr	r3, [r7, #4]
 800cb32:	685a      	ldr	r2, [r3, #4]
 800cb34:	687b      	ldr	r3, [r7, #4]
 800cb36:	685b      	ldr	r3, [r3, #4]
 800cb38:	681b      	ldr	r3, [r3, #0]
 800cb3a:	3318      	adds	r3, #24
 800cb3c:	681b      	ldr	r3, [r3, #0]
 800cb3e:	4610      	mov	r0, r2
 800cb40:	4798      	blx	r3
 800cb42:	4603      	mov	r3, r0
 800cb44:	4618      	mov	r0, r3
 800cb46:	3708      	adds	r7, #8
 800cb48:	46bd      	mov	sp, r7
 800cb4a:	bd80      	pop	{r7, pc}

0800cb4c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
 800cb4c:	b480      	push	{r7}
 800cb4e:	b085      	sub	sp, #20
 800cb50:	af00      	add	r7, sp, #0
 800cb52:	6078      	str	r0, [r7, #4]
 800cb54:	687b      	ldr	r3, [r7, #4]
 800cb56:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800cb5a:	687b      	ldr	r3, [r7, #4]
 800cb5c:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800cb60:	429a      	cmp	r2, r3
 800cb62:	d011      	beq.n	800cb88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
 800cb64:	4b14      	ldr	r3, [pc, #80]	@ (800cbb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800cb66:	781b      	ldrb	r3, [r3, #0]
 800cb68:	2b00      	cmp	r3, #0
 800cb6a:	d11e      	bne.n	800cbaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800cb6c:	4b13      	ldr	r3, [pc, #76]	@ (800cbbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800cb6e:	881b      	ldrh	r3, [r3, #0]
 800cb70:	81bb      	strh	r3, [r7, #12]
 800cb72:	4b13      	ldr	r3, [pc, #76]	@ (800cbc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cb74:	881a      	ldrh	r2, [r3, #0]
 800cb76:	4b11      	ldr	r3, [pc, #68]	@ (800cbbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800cb78:	801a      	strh	r2, [r3, #0]
 800cb7a:	4a11      	ldr	r2, [pc, #68]	@ (800cbc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cb7c:	89bb      	ldrh	r3, [r7, #12]
 800cb7e:	8013      	strh	r3, [r2, #0]
 800cb80:	4b0d      	ldr	r3, [pc, #52]	@ (800cbb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800cb82:	2201      	movs	r2, #1
 800cb84:	701a      	strb	r2, [r3, #0]
 800cb86:	e010      	b.n	800cbaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800cb88:	4b0b      	ldr	r3, [pc, #44]	@ (800cbb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800cb8a:	781b      	ldrb	r3, [r3, #0]
 800cb8c:	2b00      	cmp	r3, #0
 800cb8e:	d00c      	beq.n	800cbaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800cb90:	4b0a      	ldr	r3, [pc, #40]	@ (800cbbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800cb92:	881b      	ldrh	r3, [r3, #0]
 800cb94:	81fb      	strh	r3, [r7, #14]
 800cb96:	4b0a      	ldr	r3, [pc, #40]	@ (800cbc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cb98:	881a      	ldrh	r2, [r3, #0]
 800cb9a:	4b08      	ldr	r3, [pc, #32]	@ (800cbbc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800cb9c:	801a      	strh	r2, [r3, #0]
 800cb9e:	4a08      	ldr	r2, [pc, #32]	@ (800cbc0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800cba0:	89fb      	ldrh	r3, [r7, #14]
 800cba2:	8013      	strh	r3, [r2, #0]
 800cba4:	4b04      	ldr	r3, [pc, #16]	@ (800cbb8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800cba6:	2200      	movs	r2, #0
 800cba8:	701a      	strb	r2, [r3, #0]
 800cbaa:	bf00      	nop
 800cbac:	3714      	adds	r7, #20
 800cbae:	46bd      	mov	sp, r7
 800cbb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbb4:	4770      	bx	lr
 800cbb6:	bf00      	nop
 800cbb8:	20002f2c 	.word	0x20002f2c
 800cbbc:	20002f2a 	.word	0x20002f2a
 800cbc0:	20002f28 	.word	0x20002f28

0800cbc4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800cbc4:	b480      	push	{r7}
 800cbc6:	b083      	sub	sp, #12
 800cbc8:	af00      	add	r7, sp, #0
 800cbca:	6078      	str	r0, [r7, #4]
 800cbcc:	bf00      	nop
 800cbce:	370c      	adds	r7, #12
 800cbd0:	46bd      	mov	sp, r7
 800cbd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbd6:	4770      	bx	lr

0800cbd8 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800cbd8:	b480      	push	{r7}
 800cbda:	b083      	sub	sp, #12
 800cbdc:	af00      	add	r7, sp, #0
 800cbde:	6078      	str	r0, [r7, #4]
 800cbe0:	bf00      	nop
 800cbe2:	370c      	adds	r7, #12
 800cbe4:	46bd      	mov	sp, r7
 800cbe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbea:	4770      	bx	lr

0800cbec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
 800cbec:	b580      	push	{r7, lr}
 800cbee:	b082      	sub	sp, #8
 800cbf0:	af00      	add	r7, sp, #0
 800cbf2:	6078      	str	r0, [r7, #4]
 800cbf4:	687b      	ldr	r3, [r7, #4]
 800cbf6:	4618      	mov	r0, r3
 800cbf8:	f002 f870 	bl	800ecdc <_ZN8touchgfx3HAL16flushFrameBufferEv>
 800cbfc:	bf00      	nop
 800cbfe:	3708      	adds	r7, #8
 800cc00:	46bd      	mov	sp, r7
 800cc02:	bd80      	pop	{r7, pc}

0800cc04 <_ZN20TouchGFXGeneratedHALD1Ev>:
 800cc04:	b580      	push	{r7, lr}
 800cc06:	b082      	sub	sp, #8
 800cc08:	af00      	add	r7, sp, #0
 800cc0a:	6078      	str	r0, [r7, #4]
 800cc0c:	4a05      	ldr	r2, [pc, #20]	@ (800cc24 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800cc0e:	687b      	ldr	r3, [r7, #4]
 800cc10:	601a      	str	r2, [r3, #0]
 800cc12:	687b      	ldr	r3, [r7, #4]
 800cc14:	4618      	mov	r0, r3
 800cc16:	f7ff fe79 	bl	800c90c <_ZN8touchgfx3HALD1Ev>
 800cc1a:	687b      	ldr	r3, [r7, #4]
 800cc1c:	4618      	mov	r0, r3
 800cc1e:	3708      	adds	r7, #8
 800cc20:	46bd      	mov	sp, r7
 800cc22:	bd80      	pop	{r7, pc}
 800cc24:	08026a14 	.word	0x08026a14

0800cc28 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800cc28:	b580      	push	{r7, lr}
 800cc2a:	b082      	sub	sp, #8
 800cc2c:	af00      	add	r7, sp, #0
 800cc2e:	6078      	str	r0, [r7, #4]
 800cc30:	6878      	ldr	r0, [r7, #4]
 800cc32:	f7ff ffe7 	bl	800cc04 <_ZN20TouchGFXGeneratedHALD1Ev>
 800cc36:	217c      	movs	r1, #124	@ 0x7c
 800cc38:	6878      	ldr	r0, [r7, #4]
 800cc3a:	f016 ffea 	bl	8023c12 <_ZdlPvj>
 800cc3e:	687b      	ldr	r3, [r7, #4]
 800cc40:	4618      	mov	r0, r3
 800cc42:	3708      	adds	r7, #8
 800cc44:	46bd      	mov	sp, r7
 800cc46:	bd80      	pop	{r7, pc}

0800cc48 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
 800cc48:	b580      	push	{r7, lr}
 800cc4a:	b082      	sub	sp, #8
 800cc4c:	af00      	add	r7, sp, #0
 800cc4e:	6078      	str	r0, [r7, #4]
 800cc50:	687b      	ldr	r3, [r7, #4]
 800cc52:	4618      	mov	r0, r3
 800cc54:	f7ff ffca 	bl	800cbec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
 800cc58:	bf00      	nop
 800cc5a:	3708      	adds	r7, #8
 800cc5c:	46bd      	mov	sp, r7
 800cc5e:	bd80      	pop	{r7, pc}

0800cc60 <_ZN11TouchGFXHAL10initializeEv>:
 800cc60:	b580      	push	{r7, lr}
 800cc62:	b082      	sub	sp, #8
 800cc64:	af00      	add	r7, sp, #0
 800cc66:	6078      	str	r0, [r7, #4]
 800cc68:	687b      	ldr	r3, [r7, #4]
 800cc6a:	4618      	mov	r0, r3
 800cc6c:	f001 f9aa 	bl	800dfc4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
 800cc70:	bf00      	nop
 800cc72:	3708      	adds	r7, #8
 800cc74:	46bd      	mov	sp, r7
 800cc76:	bd80      	pop	{r7, pc}

0800cc78 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 800cc78:	b580      	push	{r7, lr}
 800cc7a:	b082      	sub	sp, #8
 800cc7c:	af00      	add	r7, sp, #0
 800cc7e:	6078      	str	r0, [r7, #4]
 800cc80:	687b      	ldr	r3, [r7, #4]
 800cc82:	4618      	mov	r0, r3
 800cc84:	f001 fa1c 	bl	800e0c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800cc88:	4603      	mov	r3, r0
 800cc8a:	4618      	mov	r0, r3
 800cc8c:	3708      	adds	r7, #8
 800cc8e:	46bd      	mov	sp, r7
 800cc90:	bd80      	pop	{r7, pc}

0800cc92 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 800cc92:	b580      	push	{r7, lr}
 800cc94:	b082      	sub	sp, #8
 800cc96:	af00      	add	r7, sp, #0
 800cc98:	6078      	str	r0, [r7, #4]
 800cc9a:	6039      	str	r1, [r7, #0]
 800cc9c:	687b      	ldr	r3, [r7, #4]
 800cc9e:	6839      	ldr	r1, [r7, #0]
 800cca0:	4618      	mov	r0, r3
 800cca2:	f001 fa18 	bl	800e0d6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
 800cca6:	bf00      	nop
 800cca8:	3708      	adds	r7, #8
 800ccaa:	46bd      	mov	sp, r7
 800ccac:	bd80      	pop	{r7, pc}

0800ccae <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 800ccae:	b580      	push	{r7, lr}
 800ccb0:	b082      	sub	sp, #8
 800ccb2:	af00      	add	r7, sp, #0
 800ccb4:	6078      	str	r0, [r7, #4]
 800ccb6:	6039      	str	r1, [r7, #0]
 800ccb8:	687b      	ldr	r3, [r7, #4]
 800ccba:	6839      	ldr	r1, [r7, #0]
 800ccbc:	4618      	mov	r0, r3
 800ccbe:	f001 fa15 	bl	800e0ec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 800ccc2:	bf00      	nop
 800ccc4:	3708      	adds	r7, #8
 800ccc6:	46bd      	mov	sp, r7
 800ccc8:	bd80      	pop	{r7, pc}

0800ccca <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
 800ccca:	b580      	push	{r7, lr}
 800cccc:	b084      	sub	sp, #16
 800ccce:	af00      	add	r7, sp, #0
 800ccd0:	60f8      	str	r0, [r7, #12]
 800ccd2:	60b9      	str	r1, [r7, #8]
 800ccd4:	607a      	str	r2, [r7, #4]
 800ccd6:	603b      	str	r3, [r7, #0]
 800ccd8:	68f8      	ldr	r0, [r7, #12]
 800ccda:	683b      	ldr	r3, [r7, #0]
 800ccdc:	687a      	ldr	r2, [r7, #4]
 800ccde:	68b9      	ldr	r1, [r7, #8]
 800cce0:	f001 fa47 	bl	800e172 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800cce4:	4603      	mov	r3, r0
 800cce6:	4618      	mov	r0, r3
 800cce8:	3710      	adds	r7, #16
 800ccea:	46bd      	mov	sp, r7
 800ccec:	bd80      	pop	{r7, pc}

0800ccee <_ZN11TouchGFXHAL19configureInterruptsEv>:
 800ccee:	b580      	push	{r7, lr}
 800ccf0:	b082      	sub	sp, #8
 800ccf2:	af00      	add	r7, sp, #0
 800ccf4:	6078      	str	r0, [r7, #4]
 800ccf6:	687b      	ldr	r3, [r7, #4]
 800ccf8:	4618      	mov	r0, r3
 800ccfa:	f001 f993 	bl	800e024 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 800ccfe:	bf00      	nop
 800cd00:	3708      	adds	r7, #8
 800cd02:	46bd      	mov	sp, r7
 800cd04:	bd80      	pop	{r7, pc}

0800cd06 <_ZN11TouchGFXHAL16enableInterruptsEv>:
 800cd06:	b580      	push	{r7, lr}
 800cd08:	b082      	sub	sp, #8
 800cd0a:	af00      	add	r7, sp, #0
 800cd0c:	6078      	str	r0, [r7, #4]
 800cd0e:	687b      	ldr	r3, [r7, #4]
 800cd10:	4618      	mov	r0, r3
 800cd12:	f001 f991 	bl	800e038 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
 800cd16:	bf00      	nop
 800cd18:	3708      	adds	r7, #8
 800cd1a:	46bd      	mov	sp, r7
 800cd1c:	bd80      	pop	{r7, pc}

0800cd1e <_ZN11TouchGFXHAL17disableInterruptsEv>:
 800cd1e:	b580      	push	{r7, lr}
 800cd20:	b082      	sub	sp, #8
 800cd22:	af00      	add	r7, sp, #0
 800cd24:	6078      	str	r0, [r7, #4]
 800cd26:	687b      	ldr	r3, [r7, #4]
 800cd28:	4618      	mov	r0, r3
 800cd2a:	f001 f98f 	bl	800e04c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
 800cd2e:	bf00      	nop
 800cd30:	3708      	adds	r7, #8
 800cd32:	46bd      	mov	sp, r7
 800cd34:	bd80      	pop	{r7, pc}

0800cd36 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
 800cd36:	b580      	push	{r7, lr}
 800cd38:	b082      	sub	sp, #8
 800cd3a:	af00      	add	r7, sp, #0
 800cd3c:	6078      	str	r0, [r7, #4]
 800cd3e:	687b      	ldr	r3, [r7, #4]
 800cd40:	4618      	mov	r0, r3
 800cd42:	f001 f98d 	bl	800e060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 800cd46:	bf00      	nop
 800cd48:	3708      	adds	r7, #8
 800cd4a:	46bd      	mov	sp, r7
 800cd4c:	bd80      	pop	{r7, pc}

0800cd4e <_ZN11TouchGFXHAL10beginFrameEv>:
 800cd4e:	b580      	push	{r7, lr}
 800cd50:	b082      	sub	sp, #8
 800cd52:	af00      	add	r7, sp, #0
 800cd54:	6078      	str	r0, [r7, #4]
 800cd56:	687b      	ldr	r3, [r7, #4]
 800cd58:	4618      	mov	r0, r3
 800cd5a:	f001 f98b 	bl	800e074 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800cd5e:	4603      	mov	r3, r0
 800cd60:	4618      	mov	r0, r3
 800cd62:	3708      	adds	r7, #8
 800cd64:	46bd      	mov	sp, r7
 800cd66:	bd80      	pop	{r7, pc}

0800cd68 <_ZN11TouchGFXHAL8endFrameEv>:
 800cd68:	b580      	push	{r7, lr}
 800cd6a:	b082      	sub	sp, #8
 800cd6c:	af00      	add	r7, sp, #0
 800cd6e:	6078      	str	r0, [r7, #4]
 800cd70:	687b      	ldr	r3, [r7, #4]
 800cd72:	4618      	mov	r0, r3
 800cd74:	f001 f98b 	bl	800e08e <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 800cd78:	bf00      	nop
 800cd7a:	3708      	adds	r7, #8
 800cd7c:	46bd      	mov	sp, r7
 800cd7e:	bd80      	pop	{r7, pc}

0800cd80 <_ZN11TouchGFXHALD1Ev>:
 800cd80:	b580      	push	{r7, lr}
 800cd82:	b082      	sub	sp, #8
 800cd84:	af00      	add	r7, sp, #0
 800cd86:	6078      	str	r0, [r7, #4]
 800cd88:	4a05      	ldr	r2, [pc, #20]	@ (800cda0 <_ZN11TouchGFXHALD1Ev+0x20>)
 800cd8a:	687b      	ldr	r3, [r7, #4]
 800cd8c:	601a      	str	r2, [r3, #0]
 800cd8e:	687b      	ldr	r3, [r7, #4]
 800cd90:	4618      	mov	r0, r3
 800cd92:	f7ff ff37 	bl	800cc04 <_ZN20TouchGFXGeneratedHALD1Ev>
 800cd96:	687b      	ldr	r3, [r7, #4]
 800cd98:	4618      	mov	r0, r3
 800cd9a:	3708      	adds	r7, #8
 800cd9c:	46bd      	mov	sp, r7
 800cd9e:	bd80      	pop	{r7, pc}
 800cda0:	080267c8 	.word	0x080267c8

0800cda4 <_ZN11TouchGFXHALD0Ev>:
 800cda4:	b580      	push	{r7, lr}
 800cda6:	b082      	sub	sp, #8
 800cda8:	af00      	add	r7, sp, #0
 800cdaa:	6078      	str	r0, [r7, #4]
 800cdac:	6878      	ldr	r0, [r7, #4]
 800cdae:	f7ff ffe7 	bl	800cd80 <_ZN11TouchGFXHALD1Ev>
 800cdb2:	217c      	movs	r1, #124	@ 0x7c
 800cdb4:	6878      	ldr	r0, [r7, #4]
 800cdb6:	f016 ff2c 	bl	8023c12 <_ZdlPvj>
 800cdba:	687b      	ldr	r3, [r7, #4]
 800cdbc:	4618      	mov	r0, r3
 800cdbe:	3708      	adds	r7, #8
 800cdc0:	46bd      	mov	sp, r7
 800cdc2:	bd80      	pop	{r7, pc}

0800cdc4 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800cdc4:	b480      	push	{r7}
 800cdc6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800cdc8:	4b05      	ldr	r3, [pc, #20]	@ (800cde0 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800cdca:	2200      	movs	r2, #0
 800cdcc:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800cdce:	4b05      	ldr	r3, [pc, #20]	@ (800cde4 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800cdd0:	2200      	movs	r2, #0
 800cdd2:	601a      	str	r2, [r3, #0]
}
 800cdd4:	bf00      	nop
 800cdd6:	46bd      	mov	sp, r7
 800cdd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cddc:	4770      	bx	lr
 800cdde:	bf00      	nop
 800cde0:	20000660 	.word	0x20000660
 800cde4:	20000664 	.word	0x20000664

0800cde8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800cde8:	b480      	push	{r7}
 800cdea:	af00      	add	r7, sp, #0
    while (fb_sem);
 800cdec:	bf00      	nop
 800cdee:	4b08      	ldr	r3, [pc, #32]	@ (800ce10 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800cdf0:	681b      	ldr	r3, [r3, #0]
 800cdf2:	2b00      	cmp	r3, #0
 800cdf4:	bf14      	ite	ne
 800cdf6:	2301      	movne	r3, #1
 800cdf8:	2300      	moveq	r3, #0
 800cdfa:	b2db      	uxtb	r3, r3
 800cdfc:	2b00      	cmp	r3, #0
 800cdfe:	d1f6      	bne.n	800cdee <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800ce00:	4b03      	ldr	r3, [pc, #12]	@ (800ce10 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800ce02:	2201      	movs	r2, #1
 800ce04:	601a      	str	r2, [r3, #0]
}
 800ce06:	bf00      	nop
 800ce08:	46bd      	mov	sp, r7
 800ce0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce0e:	4770      	bx	lr
 800ce10:	20000660 	.word	0x20000660

0800ce14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800ce14:	b480      	push	{r7}
 800ce16:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ce18:	4b03      	ldr	r3, [pc, #12]	@ (800ce28 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800ce1a:	2200      	movs	r2, #0
 800ce1c:	601a      	str	r2, [r3, #0]
}
 800ce1e:	bf00      	nop
 800ce20:	46bd      	mov	sp, r7
 800ce22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce26:	4770      	bx	lr
 800ce28:	20000660 	.word	0x20000660

0800ce2c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800ce2c:	b480      	push	{r7}
 800ce2e:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800ce30:	4b03      	ldr	r3, [pc, #12]	@ (800ce40 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800ce32:	2201      	movs	r2, #1
 800ce34:	601a      	str	r2, [r3, #0]
}
 800ce36:	bf00      	nop
 800ce38:	46bd      	mov	sp, r7
 800ce3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce3e:	4770      	bx	lr
 800ce40:	20000660 	.word	0x20000660

0800ce44 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800ce44:	b480      	push	{r7}
 800ce46:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ce48:	4b03      	ldr	r3, [pc, #12]	@ (800ce58 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800ce4a:	2200      	movs	r2, #0
 800ce4c:	601a      	str	r2, [r3, #0]
}
 800ce4e:	bf00      	nop
 800ce50:	46bd      	mov	sp, r7
 800ce52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce56:	4770      	bx	lr
 800ce58:	20000660 	.word	0x20000660

0800ce5c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800ce5c:	b480      	push	{r7}
 800ce5e:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800ce60:	4b03      	ldr	r3, [pc, #12]	@ (800ce70 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800ce62:	2201      	movs	r2, #1
 800ce64:	601a      	str	r2, [r3, #0]
}
 800ce66:	bf00      	nop
 800ce68:	46bd      	mov	sp, r7
 800ce6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce6e:	4770      	bx	lr
 800ce70:	20000664 	.word	0x20000664

0800ce74 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800ce74:	b480      	push	{r7}
 800ce76:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800ce78:	4b03      	ldr	r3, [pc, #12]	@ (800ce88 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800ce7a:	2200      	movs	r2, #0
 800ce7c:	601a      	str	r2, [r3, #0]
}
 800ce7e:	bf00      	nop
 800ce80:	46bd      	mov	sp, r7
 800ce82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce86:	4770      	bx	lr
 800ce88:	20000664 	.word	0x20000664

0800ce8c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800ce8c:	b480      	push	{r7}
 800ce8e:	af00      	add	r7, sp, #0
    return vsync_sem;
 800ce90:	4b05      	ldr	r3, [pc, #20]	@ (800cea8 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800ce92:	681b      	ldr	r3, [r3, #0]
 800ce94:	2b00      	cmp	r3, #0
 800ce96:	bf14      	ite	ne
 800ce98:	2301      	movne	r3, #1
 800ce9a:	2300      	moveq	r3, #0
 800ce9c:	b2db      	uxtb	r3, r3
}
 800ce9e:	4618      	mov	r0, r3
 800cea0:	46bd      	mov	sp, r7
 800cea2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cea6:	4770      	bx	lr
 800cea8:	20000664 	.word	0x20000664

0800ceac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800ceac:	b580      	push	{r7, lr}
 800ceae:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800ceb0:	4b0a      	ldr	r3, [pc, #40]	@ (800cedc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800ceb2:	681b      	ldr	r3, [r3, #0]
 800ceb4:	2b00      	cmp	r3, #0
 800ceb6:	bf14      	ite	ne
 800ceb8:	2301      	movne	r3, #1
 800ceba:	2300      	moveq	r3, #0
 800cebc:	b2db      	uxtb	r3, r3
 800cebe:	2b00      	cmp	r3, #0
 800cec0:	d00a      	beq.n	800ced8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800cec2:	4b06      	ldr	r3, [pc, #24]	@ (800cedc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800cec4:	2200      	movs	r2, #0
 800cec6:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800cec8:	f7fb fc5a 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 800cecc:	4603      	mov	r3, r0
 800cece:	681a      	ldr	r2, [r3, #0]
 800ced0:	3270      	adds	r2, #112	@ 0x70
 800ced2:	6812      	ldr	r2, [r2, #0]
 800ced4:	4618      	mov	r0, r3
 800ced6:	4790      	blx	r2
    }
}
 800ced8:	bf00      	nop
 800ceda:	bd80      	pop	{r7, pc}
 800cedc:	20000664 	.word	0x20000664

0800cee0 <_ZN8touchgfx9DMA_QueueD1Ev>:
 800cee0:	b480      	push	{r7}
 800cee2:	b083      	sub	sp, #12
 800cee4:	af00      	add	r7, sp, #0
 800cee6:	6078      	str	r0, [r7, #4]
 800cee8:	4a04      	ldr	r2, [pc, #16]	@ (800cefc <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800ceea:	687b      	ldr	r3, [r7, #4]
 800ceec:	601a      	str	r2, [r3, #0]
 800ceee:	687b      	ldr	r3, [r7, #4]
 800cef0:	4618      	mov	r0, r3
 800cef2:	370c      	adds	r7, #12
 800cef4:	46bd      	mov	sp, r7
 800cef6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cefa:	4770      	bx	lr
 800cefc:	080268f0 	.word	0x080268f0

0800cf00 <_ZN8touchgfx9DMA_QueueD0Ev>:
 800cf00:	b580      	push	{r7, lr}
 800cf02:	b082      	sub	sp, #8
 800cf04:	af00      	add	r7, sp, #0
 800cf06:	6078      	str	r0, [r7, #4]
 800cf08:	6878      	ldr	r0, [r7, #4]
 800cf0a:	f7ff ffe9 	bl	800cee0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800cf0e:	2104      	movs	r1, #4
 800cf10:	6878      	ldr	r0, [r7, #4]
 800cf12:	f016 fe7e 	bl	8023c12 <_ZdlPvj>
 800cf16:	687b      	ldr	r3, [r7, #4]
 800cf18:	4618      	mov	r0, r3
 800cf1a:	3708      	adds	r7, #8
 800cf1c:	46bd      	mov	sp, r7
 800cf1e:	bd80      	pop	{r7, pc}

0800cf20 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800cf20:	b480      	push	{r7}
 800cf22:	b083      	sub	sp, #12
 800cf24:	af00      	add	r7, sp, #0
 800cf26:	6078      	str	r0, [r7, #4]
 800cf28:	bf00      	nop
 800cf2a:	370c      	adds	r7, #12
 800cf2c:	46bd      	mov	sp, r7
 800cf2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf32:	4770      	bx	lr

0800cf34 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800cf34:	b480      	push	{r7}
 800cf36:	b083      	sub	sp, #12
 800cf38:	af00      	add	r7, sp, #0
 800cf3a:	6078      	str	r0, [r7, #4]
 800cf3c:	2300      	movs	r3, #0
 800cf3e:	4618      	mov	r0, r3
 800cf40:	370c      	adds	r7, #12
 800cf42:	46bd      	mov	sp, r7
 800cf44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf48:	4770      	bx	lr
	...

0800cf4c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
 800cf4c:	b480      	push	{r7}
 800cf4e:	b083      	sub	sp, #12
 800cf50:	af00      	add	r7, sp, #0
 800cf52:	6078      	str	r0, [r7, #4]
 800cf54:	4a04      	ldr	r2, [pc, #16]	@ (800cf68 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800cf56:	687b      	ldr	r3, [r7, #4]
 800cf58:	601a      	str	r2, [r3, #0]
 800cf5a:	687b      	ldr	r3, [r7, #4]
 800cf5c:	4618      	mov	r0, r3
 800cf5e:	370c      	adds	r7, #12
 800cf60:	46bd      	mov	sp, r7
 800cf62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf66:	4770      	bx	lr
 800cf68:	08026cc0 	.word	0x08026cc0

0800cf6c <_ZN8touchgfx13DMA_InterfaceD0Ev>:
 800cf6c:	b580      	push	{r7, lr}
 800cf6e:	b082      	sub	sp, #8
 800cf70:	af00      	add	r7, sp, #0
 800cf72:	6078      	str	r0, [r7, #4]
 800cf74:	6878      	ldr	r0, [r7, #4]
 800cf76:	f7ff ffe9 	bl	800cf4c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800cf7a:	210c      	movs	r1, #12
 800cf7c:	6878      	ldr	r0, [r7, #4]
 800cf7e:	f016 fe48 	bl	8023c12 <_ZdlPvj>
 800cf82:	687b      	ldr	r3, [r7, #4]
 800cf84:	4618      	mov	r0, r3
 800cf86:	3708      	adds	r7, #8
 800cf88:	46bd      	mov	sp, r7
 800cf8a:	bd80      	pop	{r7, pc}

0800cf8c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
 800cf8c:	b480      	push	{r7}
 800cf8e:	b083      	sub	sp, #12
 800cf90:	af00      	add	r7, sp, #0
 800cf92:	6078      	str	r0, [r7, #4]
 800cf94:	6039      	str	r1, [r7, #0]
 800cf96:	4a09      	ldr	r2, [pc, #36]	@ (800cfbc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800cf98:	687b      	ldr	r3, [r7, #4]
 800cf9a:	601a      	str	r2, [r3, #0]
 800cf9c:	687b      	ldr	r3, [r7, #4]
 800cf9e:	683a      	ldr	r2, [r7, #0]
 800cfa0:	605a      	str	r2, [r3, #4]
 800cfa2:	687b      	ldr	r3, [r7, #4]
 800cfa4:	2200      	movs	r2, #0
 800cfa6:	721a      	strb	r2, [r3, #8]
 800cfa8:	687b      	ldr	r3, [r7, #4]
 800cfaa:	2200      	movs	r2, #0
 800cfac:	725a      	strb	r2, [r3, #9]
 800cfae:	687b      	ldr	r3, [r7, #4]
 800cfb0:	4618      	mov	r0, r3
 800cfb2:	370c      	adds	r7, #12
 800cfb4:	46bd      	mov	sp, r7
 800cfb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfba:	4770      	bx	lr
 800cfbc:	08026cc0 	.word	0x08026cc0

0800cfc0 <_ZN8STM32DMA18signalDMAInterruptEv>:
 800cfc0:	b480      	push	{r7}
 800cfc2:	b083      	sub	sp, #12
 800cfc4:	af00      	add	r7, sp, #0
 800cfc6:	6078      	str	r0, [r7, #4]
 800cfc8:	bf00      	nop
 800cfca:	370c      	adds	r7, #12
 800cfcc:	46bd      	mov	sp, r7
 800cfce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfd2:	4770      	bx	lr

0800cfd4 <_ZN8STM32DMA5flushEv>:
 800cfd4:	b480      	push	{r7}
 800cfd6:	b083      	sub	sp, #12
 800cfd8:	af00      	add	r7, sp, #0
 800cfda:	6078      	str	r0, [r7, #4]
 800cfdc:	bf00      	nop
 800cfde:	370c      	adds	r7, #12
 800cfe0:	46bd      	mov	sp, r7
 800cfe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfe6:	4770      	bx	lr

0800cfe8 <_ZN8touchgfx6BlitOpC1Ev>:
 800cfe8:	b580      	push	{r7, lr}
 800cfea:	b082      	sub	sp, #8
 800cfec:	af00      	add	r7, sp, #0
 800cfee:	6078      	str	r0, [r7, #4]
 800cff0:	687b      	ldr	r3, [r7, #4]
 800cff2:	330c      	adds	r3, #12
 800cff4:	4618      	mov	r0, r3
 800cff6:	f7fc f9e7 	bl	80093c8 <_ZN8touchgfx9colortypeC1Ev>
 800cffa:	687b      	ldr	r3, [r7, #4]
 800cffc:	4618      	mov	r0, r3
 800cffe:	3708      	adds	r7, #8
 800d000:	46bd      	mov	sp, r7
 800d002:	bd80      	pop	{r7, pc}

0800d004 <_ZN8STM32DMAC1Ev>:
 800d004:	b580      	push	{r7, lr}
 800d006:	b082      	sub	sp, #8
 800d008:	af00      	add	r7, sp, #0
 800d00a:	6078      	str	r0, [r7, #4]
 800d00c:	687a      	ldr	r2, [r7, #4]
 800d00e:	687b      	ldr	r3, [r7, #4]
 800d010:	330c      	adds	r3, #12
 800d012:	4619      	mov	r1, r3
 800d014:	4610      	mov	r0, r2
 800d016:	f7ff ffb9 	bl	800cf8c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800d01a:	4a0b      	ldr	r2, [pc, #44]	@ (800d048 <_ZN8STM32DMAC1Ev+0x44>)
 800d01c:	687b      	ldr	r3, [r7, #4]
 800d01e:	601a      	str	r2, [r3, #0]
 800d020:	687b      	ldr	r3, [r7, #4]
 800d022:	f103 000c 	add.w	r0, r3, #12
 800d026:	687b      	ldr	r3, [r7, #4]
 800d028:	3320      	adds	r3, #32
 800d02a:	2201      	movs	r2, #1
 800d02c:	4619      	mov	r1, r3
 800d02e:	f002 fd31 	bl	800fa94 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800d032:	687b      	ldr	r3, [r7, #4]
 800d034:	3320      	adds	r3, #32
 800d036:	4618      	mov	r0, r3
 800d038:	f7ff ffd6 	bl	800cfe8 <_ZN8touchgfx6BlitOpC1Ev>
 800d03c:	687b      	ldr	r3, [r7, #4]
 800d03e:	4618      	mov	r0, r3
 800d040:	3708      	adds	r7, #8
 800d042:	46bd      	mov	sp, r7
 800d044:	bd80      	pop	{r7, pc}
 800d046:	bf00      	nop
 800d048:	080268a0 	.word	0x080268a0

0800d04c <_ZN8STM32DMA11getBlitCapsEv>:
 800d04c:	b480      	push	{r7}
 800d04e:	b083      	sub	sp, #12
 800d050:	af00      	add	r7, sp, #0
 800d052:	6078      	str	r0, [r7, #4]
 800d054:	2300      	movs	r3, #0
 800d056:	4618      	mov	r0, r3
 800d058:	370c      	adds	r7, #12
 800d05a:	46bd      	mov	sp, r7
 800d05c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d060:	4770      	bx	lr
	...

0800d064 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 800d064:	b580      	push	{r7, lr}
 800d066:	b082      	sub	sp, #8
 800d068:	af00      	add	r7, sp, #0
 800d06a:	6078      	str	r0, [r7, #4]
 800d06c:	6039      	str	r1, [r7, #0]
 800d06e:	4b03      	ldr	r3, [pc, #12]	@ (800d07c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800d070:	4a03      	ldr	r2, [pc, #12]	@ (800d080 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800d072:	2122      	movs	r1, #34	@ 0x22
 800d074:	4803      	ldr	r0, [pc, #12]	@ (800d084 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800d076:	f016 fe7b 	bl	8023d70 <__assert_func>
 800d07a:	bf00      	nop
 800d07c:	080256c4 	.word	0x080256c4
 800d080:	080256e8 	.word	0x080256e8
 800d084:	08025728 	.word	0x08025728

0800d088 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 800d088:	b580      	push	{r7, lr}
 800d08a:	b082      	sub	sp, #8
 800d08c:	af00      	add	r7, sp, #0
 800d08e:	6078      	str	r0, [r7, #4]
 800d090:	6039      	str	r1, [r7, #0]
 800d092:	4b03      	ldr	r3, [pc, #12]	@ (800d0a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800d094:	4a03      	ldr	r2, [pc, #12]	@ (800d0a4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800d096:	2127      	movs	r1, #39	@ 0x27
 800d098:	4803      	ldr	r0, [pc, #12]	@ (800d0a8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800d09a:	f016 fe69 	bl	8023d70 <__assert_func>
 800d09e:	bf00      	nop
 800d0a0:	080256c4 	.word	0x080256c4
 800d0a4:	08025754 	.word	0x08025754
 800d0a8:	08025728 	.word	0x08025728

0800d0ac <_ZN8STM32DMAD1Ev>:
 800d0ac:	b580      	push	{r7, lr}
 800d0ae:	b082      	sub	sp, #8
 800d0b0:	af00      	add	r7, sp, #0
 800d0b2:	6078      	str	r0, [r7, #4]
 800d0b4:	4a08      	ldr	r2, [pc, #32]	@ (800d0d8 <_ZN8STM32DMAD1Ev+0x2c>)
 800d0b6:	687b      	ldr	r3, [r7, #4]
 800d0b8:	601a      	str	r2, [r3, #0]
 800d0ba:	687b      	ldr	r3, [r7, #4]
 800d0bc:	330c      	adds	r3, #12
 800d0be:	4618      	mov	r0, r3
 800d0c0:	f000 f81c 	bl	800d0fc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800d0c4:	687b      	ldr	r3, [r7, #4]
 800d0c6:	4618      	mov	r0, r3
 800d0c8:	f7ff ff40 	bl	800cf4c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800d0cc:	687b      	ldr	r3, [r7, #4]
 800d0ce:	4618      	mov	r0, r3
 800d0d0:	3708      	adds	r7, #8
 800d0d2:	46bd      	mov	sp, r7
 800d0d4:	bd80      	pop	{r7, pc}
 800d0d6:	bf00      	nop
 800d0d8:	080268a0 	.word	0x080268a0

0800d0dc <_ZN8STM32DMAD0Ev>:
 800d0dc:	b580      	push	{r7, lr}
 800d0de:	b082      	sub	sp, #8
 800d0e0:	af00      	add	r7, sp, #0
 800d0e2:	6078      	str	r0, [r7, #4]
 800d0e4:	6878      	ldr	r0, [r7, #4]
 800d0e6:	f7ff ffe1 	bl	800d0ac <_ZN8STM32DMAD1Ev>
 800d0ea:	2144      	movs	r1, #68	@ 0x44
 800d0ec:	6878      	ldr	r0, [r7, #4]
 800d0ee:	f016 fd90 	bl	8023c12 <_ZdlPvj>
 800d0f2:	687b      	ldr	r3, [r7, #4]
 800d0f4:	4618      	mov	r0, r3
 800d0f6:	3708      	adds	r7, #8
 800d0f8:	46bd      	mov	sp, r7
 800d0fa:	bd80      	pop	{r7, pc}

0800d0fc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d0fc:	b580      	push	{r7, lr}
 800d0fe:	b082      	sub	sp, #8
 800d100:	af00      	add	r7, sp, #0
 800d102:	6078      	str	r0, [r7, #4]
 800d104:	4a05      	ldr	r2, [pc, #20]	@ (800d11c <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800d106:	687b      	ldr	r3, [r7, #4]
 800d108:	601a      	str	r2, [r3, #0]
 800d10a:	687b      	ldr	r3, [r7, #4]
 800d10c:	4618      	mov	r0, r3
 800d10e:	f7ff fee7 	bl	800cee0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800d112:	687b      	ldr	r3, [r7, #4]
 800d114:	4618      	mov	r0, r3
 800d116:	3708      	adds	r7, #8
 800d118:	46bd      	mov	sp, r7
 800d11a:	bd80      	pop	{r7, pc}
 800d11c:	08026d10 	.word	0x08026d10

0800d120 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d120:	b580      	push	{r7, lr}
 800d122:	b082      	sub	sp, #8
 800d124:	af00      	add	r7, sp, #0
 800d126:	6078      	str	r0, [r7, #4]
 800d128:	6878      	ldr	r0, [r7, #4]
 800d12a:	f7ff ffe7 	bl	800d0fc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800d12e:	2114      	movs	r1, #20
 800d130:	6878      	ldr	r0, [r7, #4]
 800d132:	f016 fd6e 	bl	8023c12 <_ZdlPvj>
 800d136:	687b      	ldr	r3, [r7, #4]
 800d138:	4618      	mov	r0, r3
 800d13a:	3708      	adds	r7, #8
 800d13c:	46bd      	mov	sp, r7
 800d13e:	bd80      	pop	{r7, pc}

0800d140 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800d140:	b480      	push	{r7}
 800d142:	b083      	sub	sp, #12
 800d144:	af00      	add	r7, sp, #0
 800d146:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800d148:	4a04      	ldr	r2, [pc, #16]	@ (800d15c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800d14a:	687b      	ldr	r3, [r7, #4]
 800d14c:	6013      	str	r3, [r2, #0]
    }
 800d14e:	bf00      	nop
 800d150:	370c      	adds	r7, #12
 800d152:	46bd      	mov	sp, r7
 800d154:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d158:	4770      	bx	lr
 800d15a:	bf00      	nop
 800d15c:	20002f90 	.word	0x20002f90

0800d160 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800d160:	b480      	push	{r7}
 800d162:	b085      	sub	sp, #20
 800d164:	af00      	add	r7, sp, #0
 800d166:	60f8      	str	r0, [r7, #12]
 800d168:	60b9      	str	r1, [r7, #8]
 800d16a:	607a      	str	r2, [r7, #4]
 800d16c:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800d16e:	4a0b      	ldr	r2, [pc, #44]	@ (800d19c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800d170:	68fb      	ldr	r3, [r7, #12]
 800d172:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800d174:	68fb      	ldr	r3, [r7, #12]
 800d176:	68ba      	ldr	r2, [r7, #8]
 800d178:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800d17a:	68fb      	ldr	r3, [r7, #12]
 800d17c:	687a      	ldr	r2, [r7, #4]
 800d17e:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800d180:	68fb      	ldr	r3, [r7, #12]
 800d182:	683a      	ldr	r2, [r7, #0]
 800d184:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800d186:	68fb      	ldr	r3, [r7, #12]
 800d188:	69ba      	ldr	r2, [r7, #24]
 800d18a:	611a      	str	r2, [r3, #16]
    {
    }
 800d18c:	68fb      	ldr	r3, [r7, #12]
 800d18e:	4618      	mov	r0, r3
 800d190:	3714      	adds	r7, #20
 800d192:	46bd      	mov	sp, r7
 800d194:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d198:	4770      	bx	lr
 800d19a:	bf00      	nop
 800d19c:	080269d8 	.word	0x080269d8

0800d1a0 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800d1a0:	b480      	push	{r7}
 800d1a2:	b083      	sub	sp, #12
 800d1a4:	af00      	add	r7, sp, #0
 800d1a6:	6078      	str	r0, [r7, #4]
    {
 800d1a8:	4a04      	ldr	r2, [pc, #16]	@ (800d1bc <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800d1aa:	687b      	ldr	r3, [r7, #4]
 800d1ac:	601a      	str	r2, [r3, #0]
    }
 800d1ae:	687b      	ldr	r3, [r7, #4]
 800d1b0:	4618      	mov	r0, r3
 800d1b2:	370c      	adds	r7, #12
 800d1b4:	46bd      	mov	sp, r7
 800d1b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1ba:	4770      	bx	lr
 800d1bc:	080269d8 	.word	0x080269d8

0800d1c0 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800d1c0:	b580      	push	{r7, lr}
 800d1c2:	b082      	sub	sp, #8
 800d1c4:	af00      	add	r7, sp, #0
 800d1c6:	6078      	str	r0, [r7, #4]
    }
 800d1c8:	6878      	ldr	r0, [r7, #4]
 800d1ca:	f7ff ffe9 	bl	800d1a0 <_ZN8touchgfx7MVPHeapD1Ev>
 800d1ce:	2114      	movs	r1, #20
 800d1d0:	6878      	ldr	r0, [r7, #4]
 800d1d2:	f016 fd1e 	bl	8023c12 <_ZdlPvj>
 800d1d6:	687b      	ldr	r3, [r7, #4]
 800d1d8:	4618      	mov	r0, r3
 800d1da:	3708      	adds	r7, #8
 800d1dc:	46bd      	mov	sp, r7
 800d1de:	bd80      	pop	{r7, pc}

0800d1e0 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800d1e0:	b480      	push	{r7}
 800d1e2:	b083      	sub	sp, #12
 800d1e4:	af00      	add	r7, sp, #0
 800d1e6:	6078      	str	r0, [r7, #4]
    {
 800d1e8:	4a04      	ldr	r2, [pc, #16]	@ (800d1fc <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	601a      	str	r2, [r3, #0]
    }
 800d1ee:	687b      	ldr	r3, [r7, #4]
 800d1f0:	4618      	mov	r0, r3
 800d1f2:	370c      	adds	r7, #12
 800d1f4:	46bd      	mov	sp, r7
 800d1f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d1fa:	4770      	bx	lr
 800d1fc:	080270f4 	.word	0x080270f4

0800d200 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800d200:	b580      	push	{r7, lr}
 800d202:	b082      	sub	sp, #8
 800d204:	af00      	add	r7, sp, #0
 800d206:	6078      	str	r0, [r7, #4]
    }
 800d208:	6878      	ldr	r0, [r7, #4]
 800d20a:	f7ff ffe9 	bl	800d1e0 <_ZN8touchgfx3LCDD1Ev>
 800d20e:	210c      	movs	r1, #12
 800d210:	6878      	ldr	r0, [r7, #4]
 800d212:	f016 fcfe 	bl	8023c12 <_ZdlPvj>
 800d216:	687b      	ldr	r3, [r7, #4]
 800d218:	4618      	mov	r0, r3
 800d21a:	3708      	adds	r7, #8
 800d21c:	46bd      	mov	sp, r7
 800d21e:	bd80      	pop	{r7, pc}

0800d220 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800d220:	b480      	push	{r7}
 800d222:	b083      	sub	sp, #12
 800d224:	af00      	add	r7, sp, #0
 800d226:	6078      	str	r0, [r7, #4]
            : startX(0),
 800d228:	687b      	ldr	r3, [r7, #4]
 800d22a:	2200      	movs	r2, #0
 800d22c:	801a      	strh	r2, [r3, #0]
              startY(0),
 800d22e:	687b      	ldr	r3, [r7, #4]
 800d230:	2200      	movs	r2, #0
 800d232:	805a      	strh	r2, [r3, #2]
              downX(0),
 800d234:	687b      	ldr	r3, [r7, #4]
 800d236:	2200      	movs	r2, #0
 800d238:	809a      	strh	r2, [r3, #4]
              downY(0),
 800d23a:	687b      	ldr	r3, [r7, #4]
 800d23c:	2200      	movs	r2, #0
 800d23e:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800d240:	687b      	ldr	r3, [r7, #4]
 800d242:	2200      	movs	r2, #0
 800d244:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800d246:	687b      	ldr	r3, [r7, #4]
 800d248:	2200      	movs	r2, #0
 800d24a:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800d24c:	687b      	ldr	r3, [r7, #4]
 800d24e:	2200      	movs	r2, #0
 800d250:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800d252:	687b      	ldr	r3, [r7, #4]
 800d254:	2200      	movs	r2, #0
 800d256:	739a      	strb	r2, [r3, #14]
        {
        }
 800d258:	687b      	ldr	r3, [r7, #4]
 800d25a:	4618      	mov	r0, r3
 800d25c:	370c      	adds	r7, #12
 800d25e:	46bd      	mov	sp, r7
 800d260:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d264:	4770      	bx	lr

0800d266 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800d266:	b580      	push	{r7, lr}
 800d268:	b082      	sub	sp, #8
 800d26a:	af00      	add	r7, sp, #0
 800d26c:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800d26e:	687b      	ldr	r3, [r7, #4]
 800d270:	4618      	mov	r0, r3
 800d272:	f7ff ffd5 	bl	800d220 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800d276:	687b      	ldr	r3, [r7, #4]
 800d278:	2200      	movs	r2, #0
 800d27a:	611a      	str	r2, [r3, #16]
 800d27c:	687b      	ldr	r3, [r7, #4]
 800d27e:	2200      	movs	r2, #0
 800d280:	829a      	strh	r2, [r3, #20]
    {
    }
 800d282:	687b      	ldr	r3, [r7, #4]
 800d284:	4618      	mov	r0, r3
 800d286:	3708      	adds	r7, #8
 800d288:	46bd      	mov	sp, r7
 800d28a:	bd80      	pop	{r7, pc}

0800d28c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800d28c:	b580      	push	{r7, lr}
 800d28e:	b084      	sub	sp, #16
 800d290:	af00      	add	r7, sp, #0
 800d292:	60f8      	str	r0, [r7, #12]
 800d294:	60b9      	str	r1, [r7, #8]
 800d296:	607a      	str	r2, [r7, #4]
 800d298:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800d29a:	4a55      	ldr	r2, [pc, #340]	@ (800d3f0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800d29c:	68fb      	ldr	r3, [r7, #12]
 800d29e:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800d2a0:	68fb      	ldr	r3, [r7, #12]
 800d2a2:	68ba      	ldr	r2, [r7, #8]
 800d2a4:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800d2a6:	68fb      	ldr	r3, [r7, #12]
 800d2a8:	687a      	ldr	r2, [r7, #4]
 800d2aa:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800d2ac:	68fb      	ldr	r3, [r7, #12]
 800d2ae:	683a      	ldr	r2, [r7, #0]
 800d2b0:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800d2b2:	68fb      	ldr	r3, [r7, #12]
 800d2b4:	2200      	movs	r2, #0
 800d2b6:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800d2b8:	68fb      	ldr	r3, [r7, #12]
 800d2ba:	2200      	movs	r2, #0
 800d2bc:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800d2be:	68fb      	ldr	r3, [r7, #12]
 800d2c0:	2200      	movs	r2, #0
 800d2c2:	619a      	str	r2, [r3, #24]
          gestures(),
 800d2c4:	68fb      	ldr	r3, [r7, #12]
 800d2c6:	331c      	adds	r3, #28
 800d2c8:	4618      	mov	r0, r3
 800d2ca:	f7ff ffcc 	bl	800d266 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800d2ce:	68fb      	ldr	r3, [r7, #12]
 800d2d0:	2200      	movs	r2, #0
 800d2d2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800d2d6:	68fb      	ldr	r3, [r7, #12]
 800d2d8:	2200      	movs	r2, #0
 800d2da:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800d2dc:	68fb      	ldr	r3, [r7, #12]
 800d2de:	2200      	movs	r2, #0
 800d2e0:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800d2e2:	68fb      	ldr	r3, [r7, #12]
 800d2e4:	2200      	movs	r2, #0
 800d2e6:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800d2e8:	68fb      	ldr	r3, [r7, #12]
 800d2ea:	2200      	movs	r2, #0
 800d2ec:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800d2ee:	68fb      	ldr	r3, [r7, #12]
 800d2f0:	2200      	movs	r2, #0
 800d2f2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800d2f6:	68fb      	ldr	r3, [r7, #12]
 800d2f8:	2201      	movs	r2, #1
 800d2fa:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800d2fe:	68fb      	ldr	r3, [r7, #12]
 800d300:	2200      	movs	r2, #0
 800d302:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800d306:	68fb      	ldr	r3, [r7, #12]
 800d308:	2200      	movs	r2, #0
 800d30a:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800d30e:	68fb      	ldr	r3, [r7, #12]
 800d310:	2200      	movs	r2, #0
 800d312:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800d314:	68fb      	ldr	r3, [r7, #12]
 800d316:	3350      	adds	r3, #80	@ 0x50
 800d318:	4618      	mov	r0, r3
 800d31a:	f7fc f872 	bl	8009402 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800d31e:	68fb      	ldr	r3, [r7, #12]
 800d320:	2200      	movs	r2, #0
 800d322:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800d326:	68fb      	ldr	r3, [r7, #12]
 800d328:	2200      	movs	r2, #0
 800d32a:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800d32c:	68fb      	ldr	r3, [r7, #12]
 800d32e:	2200      	movs	r2, #0
 800d330:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800d332:	68fb      	ldr	r3, [r7, #12]
 800d334:	2200      	movs	r2, #0
 800d336:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800d338:	68fb      	ldr	r3, [r7, #12]
 800d33a:	2201      	movs	r2, #1
 800d33c:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800d340:	68fb      	ldr	r3, [r7, #12]
 800d342:	2200      	movs	r2, #0
 800d344:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800d348:	68fb      	ldr	r3, [r7, #12]
 800d34a:	2200      	movs	r2, #0
 800d34c:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800d350:	68fb      	ldr	r3, [r7, #12]
 800d352:	2201      	movs	r2, #1
 800d354:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800d358:	68fb      	ldr	r3, [r7, #12]
 800d35a:	2200      	movs	r2, #0
 800d35c:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800d360:	68fb      	ldr	r3, [r7, #12]
 800d362:	2200      	movs	r2, #0
 800d364:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800d368:	68fb      	ldr	r3, [r7, #12]
 800d36a:	2200      	movs	r2, #0
 800d36c:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800d370:	68fb      	ldr	r3, [r7, #12]
 800d372:	2200      	movs	r2, #0
 800d374:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800d378:	68fb      	ldr	r3, [r7, #12]
 800d37a:	2200      	movs	r2, #0
 800d37c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800d380:	68fb      	ldr	r3, [r7, #12]
 800d382:	2200      	movs	r2, #0
 800d384:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800d386:	68fb      	ldr	r3, [r7, #12]
 800d388:	2200      	movs	r2, #0
 800d38a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800d38e:	68fb      	ldr	r3, [r7, #12]
 800d390:	2200      	movs	r2, #0
 800d392:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800d396:	68fb      	ldr	r3, [r7, #12]
 800d398:	2201      	movs	r2, #1
 800d39a:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800d39e:	68fb      	ldr	r3, [r7, #12]
 800d3a0:	2201      	movs	r2, #1
 800d3a2:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800d3a6:	4a13      	ldr	r2, [pc, #76]	@ (800d3f4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800d3a8:	68fb      	ldr	r3, [r7, #12]
 800d3aa:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800d3ac:	4a12      	ldr	r2, [pc, #72]	@ (800d3f8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800d3ae:	8b3b      	ldrh	r3, [r7, #24]
 800d3b0:	8013      	strh	r3, [r2, #0]
 800d3b2:	4b11      	ldr	r3, [pc, #68]	@ (800d3f8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800d3b4:	881a      	ldrh	r2, [r3, #0]
 800d3b6:	4b11      	ldr	r3, [pc, #68]	@ (800d3fc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800d3b8:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800d3ba:	4a11      	ldr	r2, [pc, #68]	@ (800d400 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800d3bc:	8bbb      	ldrh	r3, [r7, #28]
 800d3be:	8013      	strh	r3, [r2, #0]
 800d3c0:	4b0f      	ldr	r3, [pc, #60]	@ (800d400 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800d3c2:	881a      	ldrh	r2, [r3, #0]
 800d3c4:	4b0f      	ldr	r3, [pc, #60]	@ (800d404 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800d3c6:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800d3c8:	4b0f      	ldr	r3, [pc, #60]	@ (800d408 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800d3ca:	2200      	movs	r2, #0
 800d3cc:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800d3ce:	8b3a      	ldrh	r2, [r7, #24]
 800d3d0:	8bbb      	ldrh	r3, [r7, #28]
 800d3d2:	429a      	cmp	r2, r3
 800d3d4:	bf34      	ite	cc
 800d3d6:	2301      	movcc	r3, #1
 800d3d8:	2300      	movcs	r3, #0
 800d3da:	b2db      	uxtb	r3, r3
 800d3dc:	461a      	mov	r2, r3
 800d3de:	68fb      	ldr	r3, [r7, #12]
 800d3e0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800d3e4:	68fb      	ldr	r3, [r7, #12]
 800d3e6:	4618      	mov	r0, r3
 800d3e8:	3710      	adds	r7, #16
 800d3ea:	46bd      	mov	sp, r7
 800d3ec:	bd80      	pop	{r7, pc}
 800d3ee:	bf00      	nop
 800d3f0:	08026be8 	.word	0x08026be8
 800d3f4:	20002f34 	.word	0x20002f34
 800d3f8:	20002f28 	.word	0x20002f28
 800d3fc:	20002f2e 	.word	0x20002f2e
 800d400:	20002f2a 	.word	0x20002f2a
 800d404:	20002f30 	.word	0x20002f30
 800d408:	20002f2c 	.word	0x20002f2c

0800d40c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800d40c:	b580      	push	{r7, lr}
 800d40e:	b082      	sub	sp, #8
 800d410:	af00      	add	r7, sp, #0
 800d412:	6078      	str	r0, [r7, #4]
 800d414:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 800d416:	683b      	ldr	r3, [r7, #0]
 800d418:	4618      	mov	r0, r3
 800d41a:	f7fb fbf9 	bl	8008c10 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800d41e:	bf00      	nop
 800d420:	3708      	adds	r7, #8
 800d422:	46bd      	mov	sp, r7
 800d424:	bd80      	pop	{r7, pc}
	...

0800d428 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800d428:	b580      	push	{r7, lr}
 800d42a:	b086      	sub	sp, #24
 800d42c:	af02      	add	r7, sp, #8
 800d42e:	60f8      	str	r0, [r7, #12]
 800d430:	60b9      	str	r1, [r7, #8]
 800d432:	607a      	str	r2, [r7, #4]
 800d434:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800d436:	68f8      	ldr	r0, [r7, #12]
 800d438:	69bb      	ldr	r3, [r7, #24]
 800d43a:	9300      	str	r3, [sp, #0]
 800d43c:	683b      	ldr	r3, [r7, #0]
 800d43e:	687a      	ldr	r2, [r7, #4]
 800d440:	68b9      	ldr	r1, [r7, #8]
 800d442:	f7ff fe8d 	bl	800d160 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800d446:	4a04      	ldr	r2, [pc, #16]	@ (800d458 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800d448:	68fb      	ldr	r3, [r7, #12]
 800d44a:	601a      	str	r2, [r3, #0]
    {

    }
 800d44c:	68fb      	ldr	r3, [r7, #12]
 800d44e:	4618      	mov	r0, r3
 800d450:	3710      	adds	r7, #16
 800d452:	46bd      	mov	sp, r7
 800d454:	bd80      	pop	{r7, pc}
 800d456:	bf00      	nop
 800d458:	080269c4 	.word	0x080269c4

0800d45c <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800d45c:	b580      	push	{r7, lr}
 800d45e:	af00      	add	r7, sp, #0
 800d460:	4801      	ldr	r0, [pc, #4]	@ (800d468 <__tcf_0+0xc>)
 800d462:	f000 f969 	bl	800d738 <_ZN12FrontendHeapD1Ev>
 800d466:	bd80      	pop	{r7, pc}
 800d468:	20000668 	.word	0x20000668

0800d46c <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800d46c:	b580      	push	{r7, lr}
 800d46e:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800d470:	4b11      	ldr	r3, [pc, #68]	@ (800d4b8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d472:	681b      	ldr	r3, [r3, #0]
 800d474:	f3bf 8f5b 	dmb	ish
 800d478:	f003 0301 	and.w	r3, r3, #1
 800d47c:	2b00      	cmp	r3, #0
 800d47e:	bf0c      	ite	eq
 800d480:	2301      	moveq	r3, #1
 800d482:	2300      	movne	r3, #0
 800d484:	b2db      	uxtb	r3, r3
 800d486:	2b00      	cmp	r3, #0
 800d488:	d013      	beq.n	800d4b2 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800d48a:	480b      	ldr	r0, [pc, #44]	@ (800d4b8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d48c:	f016 fbc3 	bl	8023c16 <__cxa_guard_acquire>
 800d490:	4603      	mov	r3, r0
 800d492:	2b00      	cmp	r3, #0
 800d494:	bf14      	ite	ne
 800d496:	2301      	movne	r3, #1
 800d498:	2300      	moveq	r3, #0
 800d49a:	b2db      	uxtb	r3, r3
 800d49c:	2b00      	cmp	r3, #0
 800d49e:	d008      	beq.n	800d4b2 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800d4a0:	4806      	ldr	r0, [pc, #24]	@ (800d4bc <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800d4a2:	f000 f867 	bl	800d574 <_ZN12FrontendHeapC1Ev>
 800d4a6:	4806      	ldr	r0, [pc, #24]	@ (800d4c0 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800d4a8:	f016 fc80 	bl	8023dac <atexit>
 800d4ac:	4802      	ldr	r0, [pc, #8]	@ (800d4b8 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800d4ae:	f016 fbbe 	bl	8023c2e <__cxa_guard_release>
        return instance;
 800d4b2:	4b02      	ldr	r3, [pc, #8]	@ (800d4bc <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800d4b4:	4618      	mov	r0, r3
 800d4b6:	bd80      	pop	{r7, pc}
 800d4b8:	20000be8 	.word	0x20000be8
 800d4bc:	20000668 	.word	0x20000668
 800d4c0:	0800d45d 	.word	0x0800d45d

0800d4c4 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800d4c4:	b580      	push	{r7, lr}
 800d4c6:	b082      	sub	sp, #8
 800d4c8:	af00      	add	r7, sp, #0
 800d4ca:	6078      	str	r0, [r7, #4]
 800d4cc:	4a05      	ldr	r2, [pc, #20]	@ (800d4e4 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800d4ce:	687b      	ldr	r3, [r7, #4]
 800d4d0:	601a      	str	r2, [r3, #0]
 800d4d2:	687b      	ldr	r3, [r7, #4]
 800d4d4:	4618      	mov	r0, r3
 800d4d6:	f7ff fe63 	bl	800d1a0 <_ZN8touchgfx7MVPHeapD1Ev>
 800d4da:	687b      	ldr	r3, [r7, #4]
 800d4dc:	4618      	mov	r0, r3
 800d4de:	3708      	adds	r7, #8
 800d4e0:	46bd      	mov	sp, r7
 800d4e2:	bd80      	pop	{r7, pc}
 800d4e4:	080269c4 	.word	0x080269c4

0800d4e8 <_ZN16FrontendHeapBaseD0Ev>:
 800d4e8:	b580      	push	{r7, lr}
 800d4ea:	b082      	sub	sp, #8
 800d4ec:	af00      	add	r7, sp, #0
 800d4ee:	6078      	str	r0, [r7, #4]
 800d4f0:	6878      	ldr	r0, [r7, #4]
 800d4f2:	f7ff ffe7 	bl	800d4c4 <_ZN16FrontendHeapBaseD1Ev>
 800d4f6:	2114      	movs	r1, #20
 800d4f8:	6878      	ldr	r0, [r7, #4]
 800d4fa:	f016 fb8a 	bl	8023c12 <_ZdlPvj>
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	4618      	mov	r0, r3
 800d502:	3708      	adds	r7, #8
 800d504:	46bd      	mov	sp, r7
 800d506:	bd80      	pop	{r7, pc}

0800d508 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800d508:	b580      	push	{r7, lr}
 800d50a:	b082      	sub	sp, #8
 800d50c:	af00      	add	r7, sp, #0
 800d50e:	6078      	str	r0, [r7, #4]
 800d510:	687b      	ldr	r3, [r7, #4]
 800d512:	4618      	mov	r0, r3
 800d514:	f001 f942 	bl	800e79c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d518:	4a03      	ldr	r2, [pc, #12]	@ (800d528 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d51a:	687b      	ldr	r3, [r7, #4]
 800d51c:	601a      	str	r2, [r3, #0]
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	4618      	mov	r0, r3
 800d522:	3708      	adds	r7, #8
 800d524:	46bd      	mov	sp, r7
 800d526:	bd80      	pop	{r7, pc}
 800d528:	08026990 	.word	0x08026990

0800d52c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800d52c:	b580      	push	{r7, lr}
 800d52e:	b082      	sub	sp, #8
 800d530:	af00      	add	r7, sp, #0
 800d532:	6078      	str	r0, [r7, #4]
 800d534:	687b      	ldr	r3, [r7, #4]
 800d536:	4618      	mov	r0, r3
 800d538:	f001 f930 	bl	800e79c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d53c:	4a03      	ldr	r2, [pc, #12]	@ (800d54c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d53e:	687b      	ldr	r3, [r7, #4]
 800d540:	601a      	str	r2, [r3, #0]
 800d542:	687b      	ldr	r3, [r7, #4]
 800d544:	4618      	mov	r0, r3
 800d546:	3708      	adds	r7, #8
 800d548:	46bd      	mov	sp, r7
 800d54a:	bd80      	pop	{r7, pc}
 800d54c:	0802695c 	.word	0x0802695c

0800d550 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800d550:	b580      	push	{r7, lr}
 800d552:	b082      	sub	sp, #8
 800d554:	af00      	add	r7, sp, #0
 800d556:	6078      	str	r0, [r7, #4]
 800d558:	687b      	ldr	r3, [r7, #4]
 800d55a:	4618      	mov	r0, r3
 800d55c:	f001 f91e 	bl	800e79c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800d560:	4a03      	ldr	r2, [pc, #12]	@ (800d570 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800d562:	687b      	ldr	r3, [r7, #4]
 800d564:	601a      	str	r2, [r3, #0]
 800d566:	687b      	ldr	r3, [r7, #4]
 800d568:	4618      	mov	r0, r3
 800d56a:	3708      	adds	r7, #8
 800d56c:	46bd      	mov	sp, r7
 800d56e:	bd80      	pop	{r7, pc}
 800d570:	08026928 	.word	0x08026928

0800d574 <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800d574:	b590      	push	{r4, r7, lr}
 800d576:	b085      	sub	sp, #20
 800d578:	af02      	add	r7, sp, #8
 800d57a:	6078      	str	r0, [r7, #4]
        app(model, *this)
 800d57c:	6878      	ldr	r0, [r7, #4]
 800d57e:	687b      	ldr	r3, [r7, #4]
 800d580:	f103 0114 	add.w	r1, r3, #20
 800d584:	687b      	ldr	r3, [r7, #4]
 800d586:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800d58a:	687b      	ldr	r3, [r7, #4]
 800d58c:	f203 440c 	addw	r4, r3, #1036	@ 0x40c
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800d590:	687b      	ldr	r3, [r7, #4]
 800d592:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
        app(model, *this)
 800d596:	9300      	str	r3, [sp, #0]
 800d598:	4623      	mov	r3, r4
 800d59a:	f7ff ff45 	bl	800d428 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800d59e:	4a18      	ldr	r2, [pc, #96]	@ (800d600 <_ZN12FrontendHeapC1Ev+0x8c>)
 800d5a0:	687b      	ldr	r3, [r7, #4]
 800d5a2:	601a      	str	r2, [r3, #0]
 800d5a4:	687b      	ldr	r3, [r7, #4]
 800d5a6:	3314      	adds	r3, #20
 800d5a8:	4618      	mov	r0, r3
 800d5aa:	f7ff ffad 	bl	800d508 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d5ae:	687b      	ldr	r3, [r7, #4]
 800d5b0:	332c      	adds	r3, #44	@ 0x2c
 800d5b2:	4618      	mov	r0, r3
 800d5b4:	f7ff ffba 	bl	800d52c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d5b8:	687b      	ldr	r3, [r7, #4]
 800d5ba:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800d5be:	4618      	mov	r0, r3
 800d5c0:	f7ff ffc6 	bl	800d550 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800d5c4:	687b      	ldr	r3, [r7, #4]
 800d5c6:	f503 6084 	add.w	r0, r3, #1056	@ 0x420
 800d5ca:	687b      	ldr	r3, [r7, #4]
 800d5cc:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800d5d0:	687a      	ldr	r2, [r7, #4]
 800d5d2:	4619      	mov	r1, r3
 800d5d4:	f7fe fd74 	bl	800c0c0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800d5d8:	687b      	ldr	r3, [r7, #4]
 800d5da:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800d5de:	4618      	mov	r0, r3
 800d5e0:	f7ff f88e 	bl	800c700 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800d5e4:	687a      	ldr	r2, [r7, #4]
 800d5e6:	687b      	ldr	r3, [r7, #4]
 800d5e8:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800d5ec:	4619      	mov	r1, r3
 800d5ee:	4610      	mov	r0, r2
 800d5f0:	f7ff ff0c 	bl	800d40c <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800d5f4:	687b      	ldr	r3, [r7, #4]
 800d5f6:	4618      	mov	r0, r3
 800d5f8:	370c      	adds	r7, #12
 800d5fa:	46bd      	mov	sp, r7
 800d5fc:	bd90      	pop	{r4, r7, pc}
 800d5fe:	bf00      	nop
 800d600:	08026914 	.word	0x08026914

0800d604 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800d604:	b580      	push	{r7, lr}
 800d606:	b086      	sub	sp, #24
 800d608:	af02      	add	r7, sp, #8
 800d60a:	60f8      	str	r0, [r7, #12]
 800d60c:	60b9      	str	r1, [r7, #8]
 800d60e:	607a      	str	r2, [r7, #4]
 800d610:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800d612:	68f8      	ldr	r0, [r7, #12]
 800d614:	8bbb      	ldrh	r3, [r7, #28]
 800d616:	9301      	str	r3, [sp, #4]
 800d618:	8b3b      	ldrh	r3, [r7, #24]
 800d61a:	9300      	str	r3, [sp, #0]
 800d61c:	683b      	ldr	r3, [r7, #0]
 800d61e:	687a      	ldr	r2, [r7, #4]
 800d620:	68b9      	ldr	r1, [r7, #8]
 800d622:	f7ff fe33 	bl	800d28c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800d626:	4a04      	ldr	r2, [pc, #16]	@ (800d638 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800d628:	68fb      	ldr	r3, [r7, #12]
 800d62a:	601a      	str	r2, [r3, #0]
    {
    }
 800d62c:	68fb      	ldr	r3, [r7, #12]
 800d62e:	4618      	mov	r0, r3
 800d630:	3710      	adds	r7, #16
 800d632:	46bd      	mov	sp, r7
 800d634:	bd80      	pop	{r7, pc}
 800d636:	bf00      	nop
 800d638:	08026a14 	.word	0x08026a14

0800d63c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800d63c:	b580      	push	{r7, lr}
 800d63e:	b086      	sub	sp, #24
 800d640:	af02      	add	r7, sp, #8
 800d642:	60f8      	str	r0, [r7, #12]
 800d644:	60b9      	str	r1, [r7, #8]
 800d646:	607a      	str	r2, [r7, #4]
 800d648:	603b      	str	r3, [r7, #0]
 800d64a:	68f8      	ldr	r0, [r7, #12]
 800d64c:	8bbb      	ldrh	r3, [r7, #28]
 800d64e:	9301      	str	r3, [sp, #4]
 800d650:	8b3b      	ldrh	r3, [r7, #24]
 800d652:	9300      	str	r3, [sp, #0]
 800d654:	683b      	ldr	r3, [r7, #0]
 800d656:	687a      	ldr	r2, [r7, #4]
 800d658:	68b9      	ldr	r1, [r7, #8]
 800d65a:	f7ff ffd3 	bl	800d604 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800d65e:	4a04      	ldr	r2, [pc, #16]	@ (800d670 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800d660:	68fb      	ldr	r3, [r7, #12]
 800d662:	601a      	str	r2, [r3, #0]
    {
    }
 800d664:	68fb      	ldr	r3, [r7, #12]
 800d666:	4618      	mov	r0, r3
 800d668:	3710      	adds	r7, #16
 800d66a:	46bd      	mov	sp, r7
 800d66c:	bd80      	pop	{r7, pc}
 800d66e:	bf00      	nop
 800d670:	080267c8 	.word	0x080267c8

0800d674 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800d674:	b480      	push	{r7}
 800d676:	b083      	sub	sp, #12
 800d678:	af00      	add	r7, sp, #0
 800d67a:	6078      	str	r0, [r7, #4]
 800d67c:	4a04      	ldr	r2, [pc, #16]	@ (800d690 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800d67e:	687b      	ldr	r3, [r7, #4]
 800d680:	601a      	str	r2, [r3, #0]
 800d682:	687b      	ldr	r3, [r7, #4]
 800d684:	4618      	mov	r0, r3
 800d686:	370c      	adds	r7, #12
 800d688:	46bd      	mov	sp, r7
 800d68a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d68e:	4770      	bx	lr
 800d690:	080267b0 	.word	0x080267b0

0800d694 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800d694:	b580      	push	{r7, lr}
 800d696:	b082      	sub	sp, #8
 800d698:	af00      	add	r7, sp, #0
 800d69a:	6078      	str	r0, [r7, #4]
 800d69c:	687b      	ldr	r3, [r7, #4]
 800d69e:	4618      	mov	r0, r3
 800d6a0:	f7ff ffe8 	bl	800d674 <_ZN8touchgfx15TouchControllerC1Ev>
 800d6a4:	4a03      	ldr	r2, [pc, #12]	@ (800d6b4 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800d6a6:	687b      	ldr	r3, [r7, #4]
 800d6a8:	601a      	str	r2, [r3, #0]
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	4618      	mov	r0, r3
 800d6ae:	3708      	adds	r7, #8
 800d6b0:	46bd      	mov	sp, r7
 800d6b2:	bd80      	pop	{r7, pc}
 800d6b4:	08026798 	.word	0x08026798

0800d6b8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 800d6b8:	b590      	push	{r4, r7, lr}
 800d6ba:	b085      	sub	sp, #20
 800d6bc:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800d6be:	f7fe fad3 	bl	800bc68 <_ZN14BitmapDatabase11getInstanceEv>
 800d6c2:	4604      	mov	r4, r0
 800d6c4:	f7fe fada 	bl	800bc7c <_ZN14BitmapDatabase15getInstanceSizeEv>
 800d6c8:	4603      	mov	r3, r0
 800d6ca:	4619      	mov	r1, r3
 800d6cc:	2300      	movs	r3, #0
 800d6ce:	9300      	str	r3, [sp, #0]
 800d6d0:	2300      	movs	r3, #0
 800d6d2:	2200      	movs	r2, #0
 800d6d4:	4620      	mov	r0, r4
 800d6d6:	f007 ffb5 	bl	8015644 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800d6da:	4809      	ldr	r0, [pc, #36]	@ (800d700 <touchgfx_init+0x48>)
 800d6dc:	f7ff fd30 	bl	800d140 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800d6e0:	2000      	movs	r0, #0
 800d6e2:	f7fe fc0f 	bl	800bf04 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800d6e6:	4807      	ldr	r0, [pc, #28]	@ (800d704 <touchgfx_init+0x4c>)
 800d6e8:	f007 ff14 	bl	8015514 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800d6ec:	f7ff febe 	bl	800d46c <_ZN12FrontendHeap11getInstanceEv>
 800d6f0:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800d6f2:	4805      	ldr	r0, [pc, #20]	@ (800d708 <touchgfx_init+0x50>)
 800d6f4:	f7ff fab4 	bl	800cc60 <_ZN11TouchGFXHAL10initializeEv>
}
 800d6f8:	bf00      	nop
 800d6fa:	370c      	adds	r7, #12
 800d6fc:	46bd      	mov	sp, r7
 800d6fe:	bd90      	pop	{r4, r7, pc}
 800d700:	20000cc0 	.word	0x20000cc0
 800d704:	2000001c 	.word	0x2000001c
 800d708:	20000cc4 	.word	0x20000cc4

0800d70c <touchgfx_components_init>:

void touchgfx_components_init()
{
 800d70c:	b480      	push	{r7}
 800d70e:	af00      	add	r7, sp, #0
}
 800d710:	bf00      	nop
 800d712:	46bd      	mov	sp, r7
 800d714:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d718:	4770      	bx	lr
	...

0800d71c <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800d71c:	b580      	push	{r7, lr}
 800d71e:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800d720:	f7ff fbb4 	bl	800ce8c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800d724:	4603      	mov	r3, r0
 800d726:	2b00      	cmp	r3, #0
 800d728:	d002      	beq.n	800d730 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800d72a:	4802      	ldr	r0, [pc, #8]	@ (800d734 <touchgfx_taskEntry+0x18>)
 800d72c:	f7ff f96a 	bl	800ca04 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800d730:	bf00      	nop
 800d732:	bd80      	pop	{r7, pc}
 800d734:	20000cc4 	.word	0x20000cc4

0800d738 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800d738:	b580      	push	{r7, lr}
 800d73a:	b082      	sub	sp, #8
 800d73c:	af00      	add	r7, sp, #0
 800d73e:	6078      	str	r0, [r7, #4]
 800d740:	4a10      	ldr	r2, [pc, #64]	@ (800d784 <_ZN12FrontendHeapD1Ev+0x4c>)
 800d742:	687b      	ldr	r3, [r7, #4]
 800d744:	601a      	str	r2, [r3, #0]
 800d746:	687b      	ldr	r3, [r7, #4]
 800d748:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800d74c:	4618      	mov	r0, r3
 800d74e:	f7fe fc81 	bl	800c054 <_ZN19FrontendApplicationD1Ev>
 800d752:	687b      	ldr	r3, [r7, #4]
 800d754:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800d758:	4618      	mov	r0, r3
 800d75a:	f000 f827 	bl	800d7ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d75e:	687b      	ldr	r3, [r7, #4]
 800d760:	332c      	adds	r3, #44	@ 0x2c
 800d762:	4618      	mov	r0, r3
 800d764:	f000 f844 	bl	800d7f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d768:	687b      	ldr	r3, [r7, #4]
 800d76a:	3314      	adds	r3, #20
 800d76c:	4618      	mov	r0, r3
 800d76e:	f000 f863 	bl	800d838 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d772:	687b      	ldr	r3, [r7, #4]
 800d774:	4618      	mov	r0, r3
 800d776:	f7ff fea5 	bl	800d4c4 <_ZN16FrontendHeapBaseD1Ev>
 800d77a:	687b      	ldr	r3, [r7, #4]
 800d77c:	4618      	mov	r0, r3
 800d77e:	3708      	adds	r7, #8
 800d780:	46bd      	mov	sp, r7
 800d782:	bd80      	pop	{r7, pc}
 800d784:	08026914 	.word	0x08026914

0800d788 <_ZN12FrontendHeapD0Ev>:
 800d788:	b580      	push	{r7, lr}
 800d78a:	b082      	sub	sp, #8
 800d78c:	af00      	add	r7, sp, #0
 800d78e:	6078      	str	r0, [r7, #4]
 800d790:	6878      	ldr	r0, [r7, #4]
 800d792:	f7ff ffd1 	bl	800d738 <_ZN12FrontendHeapD1Ev>
 800d796:	f44f 61b0 	mov.w	r1, #1408	@ 0x580
 800d79a:	6878      	ldr	r0, [r7, #4]
 800d79c:	f016 fa39 	bl	8023c12 <_ZdlPvj>
 800d7a0:	687b      	ldr	r3, [r7, #4]
 800d7a2:	4618      	mov	r0, r3
 800d7a4:	3708      	adds	r7, #8
 800d7a6:	46bd      	mov	sp, r7
 800d7a8:	bd80      	pop	{r7, pc}
	...

0800d7ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d7ac:	b580      	push	{r7, lr}
 800d7ae:	b082      	sub	sp, #8
 800d7b0:	af00      	add	r7, sp, #0
 800d7b2:	6078      	str	r0, [r7, #4]
 800d7b4:	4a05      	ldr	r2, [pc, #20]	@ (800d7cc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d7b6:	687b      	ldr	r3, [r7, #4]
 800d7b8:	601a      	str	r2, [r3, #0]
 800d7ba:	687b      	ldr	r3, [r7, #4]
 800d7bc:	4618      	mov	r0, r3
 800d7be:	f000 ffec 	bl	800e79a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d7c2:	687b      	ldr	r3, [r7, #4]
 800d7c4:	4618      	mov	r0, r3
 800d7c6:	3708      	adds	r7, #8
 800d7c8:	46bd      	mov	sp, r7
 800d7ca:	bd80      	pop	{r7, pc}
 800d7cc:	08026928 	.word	0x08026928

0800d7d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d7d0:	b580      	push	{r7, lr}
 800d7d2:	b082      	sub	sp, #8
 800d7d4:	af00      	add	r7, sp, #0
 800d7d6:	6078      	str	r0, [r7, #4]
 800d7d8:	6878      	ldr	r0, [r7, #4]
 800d7da:	f7ff ffe7 	bl	800d7ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d7de:	2114      	movs	r1, #20
 800d7e0:	6878      	ldr	r0, [r7, #4]
 800d7e2:	f016 fa16 	bl	8023c12 <_ZdlPvj>
 800d7e6:	687b      	ldr	r3, [r7, #4]
 800d7e8:	4618      	mov	r0, r3
 800d7ea:	3708      	adds	r7, #8
 800d7ec:	46bd      	mov	sp, r7
 800d7ee:	bd80      	pop	{r7, pc}

0800d7f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d7f0:	b580      	push	{r7, lr}
 800d7f2:	b082      	sub	sp, #8
 800d7f4:	af00      	add	r7, sp, #0
 800d7f6:	6078      	str	r0, [r7, #4]
 800d7f8:	4a05      	ldr	r2, [pc, #20]	@ (800d810 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d7fa:	687b      	ldr	r3, [r7, #4]
 800d7fc:	601a      	str	r2, [r3, #0]
 800d7fe:	687b      	ldr	r3, [r7, #4]
 800d800:	4618      	mov	r0, r3
 800d802:	f000 ffca 	bl	800e79a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d806:	687b      	ldr	r3, [r7, #4]
 800d808:	4618      	mov	r0, r3
 800d80a:	3708      	adds	r7, #8
 800d80c:	46bd      	mov	sp, r7
 800d80e:	bd80      	pop	{r7, pc}
 800d810:	0802695c 	.word	0x0802695c

0800d814 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d814:	b580      	push	{r7, lr}
 800d816:	b082      	sub	sp, #8
 800d818:	af00      	add	r7, sp, #0
 800d81a:	6078      	str	r0, [r7, #4]
 800d81c:	6878      	ldr	r0, [r7, #4]
 800d81e:	f7ff ffe7 	bl	800d7f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d822:	f44f 7178 	mov.w	r1, #992	@ 0x3e0
 800d826:	6878      	ldr	r0, [r7, #4]
 800d828:	f016 f9f3 	bl	8023c12 <_ZdlPvj>
 800d82c:	687b      	ldr	r3, [r7, #4]
 800d82e:	4618      	mov	r0, r3
 800d830:	3708      	adds	r7, #8
 800d832:	46bd      	mov	sp, r7
 800d834:	bd80      	pop	{r7, pc}
	...

0800d838 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d838:	b580      	push	{r7, lr}
 800d83a:	b082      	sub	sp, #8
 800d83c:	af00      	add	r7, sp, #0
 800d83e:	6078      	str	r0, [r7, #4]
 800d840:	4a05      	ldr	r2, [pc, #20]	@ (800d858 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d842:	687b      	ldr	r3, [r7, #4]
 800d844:	601a      	str	r2, [r3, #0]
 800d846:	687b      	ldr	r3, [r7, #4]
 800d848:	4618      	mov	r0, r3
 800d84a:	f000 ffa6 	bl	800e79a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d84e:	687b      	ldr	r3, [r7, #4]
 800d850:	4618      	mov	r0, r3
 800d852:	3708      	adds	r7, #8
 800d854:	46bd      	mov	sp, r7
 800d856:	bd80      	pop	{r7, pc}
 800d858:	08026990 	.word	0x08026990

0800d85c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d85c:	b580      	push	{r7, lr}
 800d85e:	b082      	sub	sp, #8
 800d860:	af00      	add	r7, sp, #0
 800d862:	6078      	str	r0, [r7, #4]
 800d864:	6878      	ldr	r0, [r7, #4]
 800d866:	f7ff ffe7 	bl	800d838 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d86a:	2118      	movs	r1, #24
 800d86c:	6878      	ldr	r0, [r7, #4]
 800d86e:	f016 f9d0 	bl	8023c12 <_ZdlPvj>
 800d872:	687b      	ldr	r3, [r7, #4]
 800d874:	4618      	mov	r0, r3
 800d876:	3708      	adds	r7, #8
 800d878:	46bd      	mov	sp, r7
 800d87a:	bd80      	pop	{r7, pc}

0800d87c <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800d87c:	b580      	push	{r7, lr}
 800d87e:	b082      	sub	sp, #8
 800d880:	af00      	add	r7, sp, #0
 800d882:	6078      	str	r0, [r7, #4]
 800d884:	4a05      	ldr	r2, [pc, #20]	@ (800d89c <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800d886:	687b      	ldr	r3, [r7, #4]
 800d888:	601a      	str	r2, [r3, #0]
 800d88a:	687b      	ldr	r3, [r7, #4]
 800d88c:	4618      	mov	r0, r3
 800d88e:	f7ff fca7 	bl	800d1e0 <_ZN8touchgfx3LCDD1Ev>
 800d892:	687b      	ldr	r3, [r7, #4]
 800d894:	4618      	mov	r0, r3
 800d896:	3708      	adds	r7, #8
 800d898:	46bd      	mov	sp, r7
 800d89a:	bd80      	pop	{r7, pc}
 800d89c:	0802757c 	.word	0x0802757c

0800d8a0 <_ZN8touchgfx8LCD16bppD0Ev>:
 800d8a0:	b580      	push	{r7, lr}
 800d8a2:	b082      	sub	sp, #8
 800d8a4:	af00      	add	r7, sp, #0
 800d8a6:	6078      	str	r0, [r7, #4]
 800d8a8:	6878      	ldr	r0, [r7, #4]
 800d8aa:	f7ff ffe7 	bl	800d87c <_ZN8touchgfx8LCD16bppD1Ev>
 800d8ae:	218c      	movs	r1, #140	@ 0x8c
 800d8b0:	6878      	ldr	r0, [r7, #4]
 800d8b2:	f016 f9ae 	bl	8023c12 <_ZdlPvj>
 800d8b6:	687b      	ldr	r3, [r7, #4]
 800d8b8:	4618      	mov	r0, r3
 800d8ba:	3708      	adds	r7, #8
 800d8bc:	46bd      	mov	sp, r7
 800d8be:	bd80      	pop	{r7, pc}

0800d8c0 <_Z41__static_initialization_and_destruction_0ii>:
 800d8c0:	b580      	push	{r7, lr}
 800d8c2:	b084      	sub	sp, #16
 800d8c4:	af02      	add	r7, sp, #8
 800d8c6:	6078      	str	r0, [r7, #4]
 800d8c8:	6039      	str	r1, [r7, #0]
 800d8ca:	687b      	ldr	r3, [r7, #4]
 800d8cc:	2b01      	cmp	r3, #1
 800d8ce:	d119      	bne.n	800d904 <_Z41__static_initialization_and_destruction_0ii+0x44>
 800d8d0:	683b      	ldr	r3, [r7, #0]
 800d8d2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d8d6:	4293      	cmp	r3, r2
 800d8d8:	d114      	bne.n	800d904 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800d8da:	4818      	ldr	r0, [pc, #96]	@ (800d93c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d8dc:	f7ff feda 	bl	800d694 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800d8e0:	4817      	ldr	r0, [pc, #92]	@ (800d940 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d8e2:	f7ff fb8f 	bl	800d004 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800d8e6:	4817      	ldr	r0, [pc, #92]	@ (800d944 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d8e8:	f00c ffa8 	bl	801a83c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 800d8ec:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800d8f0:	9301      	str	r3, [sp, #4]
 800d8f2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800d8f6:	9300      	str	r3, [sp, #0]
 800d8f8:	4b10      	ldr	r3, [pc, #64]	@ (800d93c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d8fa:	4a12      	ldr	r2, [pc, #72]	@ (800d944 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d8fc:	4910      	ldr	r1, [pc, #64]	@ (800d940 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d8fe:	4812      	ldr	r0, [pc, #72]	@ (800d948 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800d900:	f7ff fe9c 	bl	800d63c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800d904:	687b      	ldr	r3, [r7, #4]
 800d906:	2b00      	cmp	r3, #0
 800d908:	d113      	bne.n	800d932 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800d90a:	683b      	ldr	r3, [r7, #0]
 800d90c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d910:	4293      	cmp	r3, r2
 800d912:	d10e      	bne.n	800d932 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800d914:	480c      	ldr	r0, [pc, #48]	@ (800d948 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800d916:	f7ff fa33 	bl	800cd80 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800d91a:	480c      	ldr	r0, [pc, #48]	@ (800d94c <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800d91c:	f7fa fbd0 	bl	80080c0 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800d920:	4808      	ldr	r0, [pc, #32]	@ (800d944 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d922:	f7ff ffab 	bl	800d87c <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800d926:	4806      	ldr	r0, [pc, #24]	@ (800d940 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d928:	f7ff fbc0 	bl	800d0ac <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800d92c:	4803      	ldr	r0, [pc, #12]	@ (800d93c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d92e:	f7fe ff6f 	bl	800c810 <_ZN20STM32TouchControllerD1Ev>
}
 800d932:	bf00      	nop
 800d934:	3708      	adds	r7, #8
 800d936:	46bd      	mov	sp, r7
 800d938:	bd80      	pop	{r7, pc}
 800d93a:	bf00      	nop
 800d93c:	20000bec 	.word	0x20000bec
 800d940:	20000bf0 	.word	0x20000bf0
 800d944:	20000c34 	.word	0x20000c34
 800d948:	20000cc4 	.word	0x20000cc4
 800d94c:	2000001c 	.word	0x2000001c

0800d950 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800d950:	b480      	push	{r7}
 800d952:	b083      	sub	sp, #12
 800d954:	af00      	add	r7, sp, #0
 800d956:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800d958:	2301      	movs	r3, #1
    }
 800d95a:	4618      	mov	r0, r3
 800d95c:	370c      	adds	r7, #12
 800d95e:	46bd      	mov	sp, r7
 800d960:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d964:	4770      	bx	lr

0800d966 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800d966:	b480      	push	{r7}
 800d968:	b083      	sub	sp, #12
 800d96a:	af00      	add	r7, sp, #0
 800d96c:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800d96e:	230c      	movs	r3, #12
    }
 800d970:	4618      	mov	r0, r3
 800d972:	370c      	adds	r7, #12
 800d974:	46bd      	mov	sp, r7
 800d976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d97a:	4770      	bx	lr

0800d97c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800d97c:	b480      	push	{r7}
 800d97e:	b083      	sub	sp, #12
 800d980:	af00      	add	r7, sp, #0
 800d982:	6078      	str	r0, [r7, #4]
 800d984:	460b      	mov	r3, r1
 800d986:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800d988:	887a      	ldrh	r2, [r7, #2]
 800d98a:	4613      	mov	r3, r2
 800d98c:	005b      	lsls	r3, r3, #1
 800d98e:	4413      	add	r3, r2
 800d990:	009b      	lsls	r3, r3, #2
 800d992:	3308      	adds	r3, #8
 800d994:	687a      	ldr	r2, [r7, #4]
 800d996:	4413      	add	r3, r2
    }
 800d998:	4618      	mov	r0, r3
 800d99a:	370c      	adds	r7, #12
 800d99c:	46bd      	mov	sp, r7
 800d99e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9a2:	4770      	bx	lr

0800d9a4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800d9a4:	b480      	push	{r7}
 800d9a6:	b083      	sub	sp, #12
 800d9a8:	af00      	add	r7, sp, #0
 800d9aa:	6078      	str	r0, [r7, #4]
 800d9ac:	460b      	mov	r3, r1
 800d9ae:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800d9b0:	887a      	ldrh	r2, [r7, #2]
 800d9b2:	4613      	mov	r3, r2
 800d9b4:	005b      	lsls	r3, r3, #1
 800d9b6:	4413      	add	r3, r2
 800d9b8:	009b      	lsls	r3, r3, #2
 800d9ba:	3308      	adds	r3, #8
 800d9bc:	687a      	ldr	r2, [r7, #4]
 800d9be:	4413      	add	r3, r2
    }
 800d9c0:	4618      	mov	r0, r3
 800d9c2:	370c      	adds	r7, #12
 800d9c4:	46bd      	mov	sp, r7
 800d9c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9ca:	4770      	bx	lr

0800d9cc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800d9cc:	b480      	push	{r7}
 800d9ce:	b083      	sub	sp, #12
 800d9d0:	af00      	add	r7, sp, #0
 800d9d2:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800d9d4:	2301      	movs	r3, #1
    }
 800d9d6:	4618      	mov	r0, r3
 800d9d8:	370c      	adds	r7, #12
 800d9da:	46bd      	mov	sp, r7
 800d9dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9e0:	4770      	bx	lr

0800d9e2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800d9e2:	b480      	push	{r7}
 800d9e4:	b083      	sub	sp, #12
 800d9e6:	af00      	add	r7, sp, #0
 800d9e8:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800d9ea:	f44f 7376 	mov.w	r3, #984	@ 0x3d8
    }
 800d9ee:	4618      	mov	r0, r3
 800d9f0:	370c      	adds	r7, #12
 800d9f2:	46bd      	mov	sp, r7
 800d9f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9f8:	4770      	bx	lr

0800d9fa <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800d9fa:	b480      	push	{r7}
 800d9fc:	b083      	sub	sp, #12
 800d9fe:	af00      	add	r7, sp, #0
 800da00:	6078      	str	r0, [r7, #4]
 800da02:	460b      	mov	r3, r1
 800da04:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800da06:	887b      	ldrh	r3, [r7, #2]
 800da08:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800da0c:	fb02 f303 	mul.w	r3, r2, r3
 800da10:	3308      	adds	r3, #8
 800da12:	687a      	ldr	r2, [r7, #4]
 800da14:	4413      	add	r3, r2
    }
 800da16:	4618      	mov	r0, r3
 800da18:	370c      	adds	r7, #12
 800da1a:	46bd      	mov	sp, r7
 800da1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da20:	4770      	bx	lr

0800da22 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800da22:	b480      	push	{r7}
 800da24:	b083      	sub	sp, #12
 800da26:	af00      	add	r7, sp, #0
 800da28:	6078      	str	r0, [r7, #4]
 800da2a:	460b      	mov	r3, r1
 800da2c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800da2e:	887b      	ldrh	r3, [r7, #2]
 800da30:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800da34:	fb02 f303 	mul.w	r3, r2, r3
 800da38:	3308      	adds	r3, #8
 800da3a:	687a      	ldr	r2, [r7, #4]
 800da3c:	4413      	add	r3, r2
    }
 800da3e:	4618      	mov	r0, r3
 800da40:	370c      	adds	r7, #12
 800da42:	46bd      	mov	sp, r7
 800da44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da48:	4770      	bx	lr

0800da4a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800da4a:	b480      	push	{r7}
 800da4c:	b083      	sub	sp, #12
 800da4e:	af00      	add	r7, sp, #0
 800da50:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800da52:	2301      	movs	r3, #1
    }
 800da54:	4618      	mov	r0, r3
 800da56:	370c      	adds	r7, #12
 800da58:	46bd      	mov	sp, r7
 800da5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da5e:	4770      	bx	lr

0800da60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800da60:	b480      	push	{r7}
 800da62:	b083      	sub	sp, #12
 800da64:	af00      	add	r7, sp, #0
 800da66:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800da68:	2310      	movs	r3, #16
    }
 800da6a:	4618      	mov	r0, r3
 800da6c:	370c      	adds	r7, #12
 800da6e:	46bd      	mov	sp, r7
 800da70:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da74:	4770      	bx	lr

0800da76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800da76:	b480      	push	{r7}
 800da78:	b083      	sub	sp, #12
 800da7a:	af00      	add	r7, sp, #0
 800da7c:	6078      	str	r0, [r7, #4]
 800da7e:	460b      	mov	r3, r1
 800da80:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800da82:	887b      	ldrh	r3, [r7, #2]
 800da84:	011b      	lsls	r3, r3, #4
 800da86:	3308      	adds	r3, #8
 800da88:	687a      	ldr	r2, [r7, #4]
 800da8a:	4413      	add	r3, r2
    }
 800da8c:	4618      	mov	r0, r3
 800da8e:	370c      	adds	r7, #12
 800da90:	46bd      	mov	sp, r7
 800da92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da96:	4770      	bx	lr

0800da98 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800da98:	b480      	push	{r7}
 800da9a:	b083      	sub	sp, #12
 800da9c:	af00      	add	r7, sp, #0
 800da9e:	6078      	str	r0, [r7, #4]
 800daa0:	460b      	mov	r3, r1
 800daa2:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800daa4:	887b      	ldrh	r3, [r7, #2]
 800daa6:	011b      	lsls	r3, r3, #4
 800daa8:	3308      	adds	r3, #8
 800daaa:	687a      	ldr	r2, [r7, #4]
 800daac:	4413      	add	r3, r2
    }
 800daae:	4618      	mov	r0, r3
 800dab0:	370c      	adds	r7, #12
 800dab2:	46bd      	mov	sp, r7
 800dab4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dab8:	4770      	bx	lr

0800daba <_GLOBAL__sub_I_touchgfx_init>:
 800daba:	b580      	push	{r7, lr}
 800dabc:	af00      	add	r7, sp, #0
 800dabe:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800dac2:	2001      	movs	r0, #1
 800dac4:	f7ff fefc 	bl	800d8c0 <_Z41__static_initialization_and_destruction_0ii>
 800dac8:	bd80      	pop	{r7, pc}

0800daca <_GLOBAL__sub_D_touchgfx_init>:
 800daca:	b580      	push	{r7, lr}
 800dacc:	af00      	add	r7, sp, #0
 800dace:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800dad2:	2000      	movs	r0, #0
 800dad4:	f7ff fef4 	bl	800d8c0 <_Z41__static_initialization_and_destruction_0ii>
 800dad8:	bd80      	pop	{r7, pc}

0800dada <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800dada:	b480      	push	{r7}
 800dadc:	b083      	sub	sp, #12
 800dade:	af00      	add	r7, sp, #0
 800dae0:	6078      	str	r0, [r7, #4]
        return color;
 800dae2:	687b      	ldr	r3, [r7, #4]
 800dae4:	681b      	ldr	r3, [r3, #0]
    }
 800dae6:	4618      	mov	r0, r3
 800dae8:	370c      	adds	r7, #12
 800daea:	46bd      	mov	sp, r7
 800daec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daf0:	4770      	bx	lr
	...

0800daf4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800daf4:	b480      	push	{r7}
 800daf6:	b083      	sub	sp, #12
 800daf8:	af00      	add	r7, sp, #0
 800dafa:	6078      	str	r0, [r7, #4]
    {
 800dafc:	4a04      	ldr	r2, [pc, #16]	@ (800db10 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800dafe:	687b      	ldr	r3, [r7, #4]
 800db00:	601a      	str	r2, [r3, #0]
    }
 800db02:	687b      	ldr	r3, [r7, #4]
 800db04:	4618      	mov	r0, r3
 800db06:	370c      	adds	r7, #12
 800db08:	46bd      	mov	sp, r7
 800db0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db0e:	4770      	bx	lr
 800db10:	08026aec 	.word	0x08026aec

0800db14 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800db14:	b580      	push	{r7, lr}
 800db16:	b082      	sub	sp, #8
 800db18:	af00      	add	r7, sp, #0
 800db1a:	6078      	str	r0, [r7, #4]
    }
 800db1c:	6878      	ldr	r0, [r7, #4]
 800db1e:	f7ff ffe9 	bl	800daf4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800db22:	2104      	movs	r1, #4
 800db24:	6878      	ldr	r0, [r7, #4]
 800db26:	f016 f874 	bl	8023c12 <_ZdlPvj>
 800db2a:	687b      	ldr	r3, [r7, #4]
 800db2c:	4618      	mov	r0, r3
 800db2e:	3708      	adds	r7, #8
 800db30:	46bd      	mov	sp, r7
 800db32:	bd80      	pop	{r7, pc}

0800db34 <_ZN8touchgfx3HAL5vSyncEv>:
    /**
     * Called by the VSync interrupt.
     *
     * Called by the VSync interrupt for counting of LCD refreshes.
     */
    void vSync()
 800db34:	b480      	push	{r7}
 800db36:	b083      	sub	sp, #12
 800db38:	af00      	add	r7, sp, #0
 800db3a:	6078      	str	r0, [r7, #4]
    {
        vSyncCnt++;
 800db3c:	687b      	ldr	r3, [r7, #4]
 800db3e:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800db42:	3301      	adds	r3, #1
 800db44:	b2da      	uxtb	r2, r3
 800db46:	687b      	ldr	r3, [r7, #4]
 800db48:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800db4c:	bf00      	nop
 800db4e:	370c      	adds	r7, #12
 800db50:	46bd      	mov	sp, r7
 800db52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db56:	4770      	bx	lr

0800db58 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
     * Sets a framebuffer allocator. The framebuffer allocator is only used in partial
     * framebuffer mode.
     *
     * @param [in] allocator pointer to a framebuffer allocator object.
     */
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800db58:	b480      	push	{r7}
 800db5a:	b083      	sub	sp, #12
 800db5c:	af00      	add	r7, sp, #0
 800db5e:	6078      	str	r0, [r7, #4]
 800db60:	6039      	str	r1, [r7, #0]
    {
        frameBufferAllocator = allocator;
 800db62:	687b      	ldr	r3, [r7, #4]
 800db64:	683a      	ldr	r2, [r7, #0]
 800db66:	619a      	str	r2, [r3, #24]
    }
 800db68:	bf00      	nop
 800db6a:	370c      	adds	r7, #12
 800db6c:	46bd      	mov	sp, r7
 800db6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db72:	4770      	bx	lr

0800db74 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    /**
     * Gets the framebuffer allocator.
     *
     * @return The framebuffer allocator.
     */
    FrameBufferAllocator* getFrameBufferAllocator()
 800db74:	b480      	push	{r7}
 800db76:	b083      	sub	sp, #12
 800db78:	af00      	add	r7, sp, #0
 800db7a:	6078      	str	r0, [r7, #4]
    {
        return frameBufferAllocator;
 800db7c:	687b      	ldr	r3, [r7, #4]
 800db7e:	699b      	ldr	r3, [r3, #24]
    }
 800db80:	4618      	mov	r0, r3
 800db82:	370c      	adds	r7, #12
 800db84:	46bd      	mov	sp, r7
 800db86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db8a:	4770      	bx	lr

0800db8c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
     *
     * @param  s The desired strategy to use.
     *
     * @return true if the desired strategy will be used, false otherwise.
     */
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800db8c:	b580      	push	{r7, lr}
 800db8e:	b082      	sub	sp, #8
 800db90:	af00      	add	r7, sp, #0
 800db92:	6078      	str	r0, [r7, #4]
 800db94:	460b      	mov	r3, r1
 800db96:	70fb      	strb	r3, [r7, #3]
    {
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800db98:	78fb      	ldrb	r3, [r7, #3]
 800db9a:	2b00      	cmp	r3, #0
 800db9c:	d002      	beq.n	800dba4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800db9e:	78fb      	ldrb	r3, [r7, #3]
 800dba0:	2b02      	cmp	r3, #2
 800dba2:	d105      	bne.n	800dbb0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
        {
            refreshStrategy = s;
 800dba4:	687b      	ldr	r3, [r7, #4]
 800dba6:	78fa      	ldrb	r2, [r7, #3]
 800dba8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800dbac:	2301      	movs	r3, #1
 800dbae:	e027      	b.n	800dc00 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800dbb0:	78fb      	ldrb	r3, [r7, #3]
 800dbb2:	2b01      	cmp	r3, #1
 800dbb4:	d123      	bne.n	800dbfe <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
        {
            // Perform sanity checks. This strategy requires
            //   - task delay function
            //   - a TFT controller (+ an impl of getTFTCurrentLine())
            //   - single buffering
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800dbb6:	687b      	ldr	r3, [r7, #4]
 800dbb8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800dbba:	2b00      	cmp	r3, #0
 800dbbc:	d014      	beq.n	800dbe8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800dbbe:	687b      	ldr	r3, [r7, #4]
 800dbc0:	681b      	ldr	r3, [r3, #0]
 800dbc2:	339c      	adds	r3, #156	@ 0x9c
 800dbc4:	681b      	ldr	r3, [r3, #0]
 800dbc6:	6878      	ldr	r0, [r7, #4]
 800dbc8:	4798      	blx	r3
 800dbca:	4603      	mov	r3, r0
 800dbcc:	461a      	mov	r2, r3
 800dbce:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800dbd2:	429a      	cmp	r2, r3
 800dbd4:	d008      	beq.n	800dbe8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800dbd6:	4b0c      	ldr	r3, [pc, #48]	@ (800dc08 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800dbd8:	781b      	ldrb	r3, [r3, #0]
 800dbda:	f083 0301 	eor.w	r3, r3, #1
 800dbde:	b2db      	uxtb	r3, r3
 800dbe0:	2b00      	cmp	r3, #0
 800dbe2:	d001      	beq.n	800dbe8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800dbe4:	2301      	movs	r3, #1
 800dbe6:	e000      	b.n	800dbea <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800dbe8:	2300      	movs	r3, #0
 800dbea:	2b00      	cmp	r3, #0
 800dbec:	d005      	beq.n	800dbfa <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
            {
                refreshStrategy = s;
 800dbee:	687b      	ldr	r3, [r7, #4]
 800dbf0:	78fa      	ldrb	r2, [r7, #3]
 800dbf2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800dbf6:	2301      	movs	r3, #1
 800dbf8:	e002      	b.n	800dc00 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            }
            return false;
 800dbfa:	2300      	movs	r3, #0
 800dbfc:	e000      	b.n	800dc00 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        // Unknown strategy
        return false;
 800dbfe:	2300      	movs	r3, #0
    }
 800dc00:	4618      	mov	r0, r3
 800dc02:	3708      	adds	r7, #8
 800dc04:	46bd      	mov	sp, r7
 800dc06:	bd80      	pop	{r7, pc}
 800dc08:	20002f32 	.word	0x20002f32

0800dc0c <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800dc0c:	b480      	push	{r7}
 800dc0e:	af00      	add	r7, sp, #0
}
 800dc10:	bf00      	nop
 800dc12:	46bd      	mov	sp, r7
 800dc14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc18:	4770      	bx	lr

0800dc1a <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800dc1a:	b480      	push	{r7}
 800dc1c:	b083      	sub	sp, #12
 800dc1e:	af00      	add	r7, sp, #0
 800dc20:	6078      	str	r0, [r7, #4]
 800dc22:	6039      	str	r1, [r7, #0]
}
 800dc24:	bf00      	nop
 800dc26:	370c      	adds	r7, #12
 800dc28:	46bd      	mov	sp, r7
 800dc2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc2e:	4770      	bx	lr

0800dc30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800dc30:	b480      	push	{r7}
 800dc32:	b08d      	sub	sp, #52	@ 0x34
 800dc34:	af00      	add	r7, sp, #0
 800dc36:	60f8      	str	r0, [r7, #12]
 800dc38:	60b9      	str	r1, [r7, #8]
 800dc3a:	607a      	str	r2, [r7, #4]
 800dc3c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800dc3e:	68fb      	ldr	r3, [r7, #12]
 800dc40:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800dc42:	68bb      	ldr	r3, [r7, #8]
 800dc44:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800dc46:	687b      	ldr	r3, [r7, #4]
 800dc48:	005b      	lsls	r3, r3, #1
 800dc4a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800dc4c:	4413      	add	r3, r2
 800dc4e:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800dc50:	78fb      	ldrb	r3, [r7, #3]
 800dc52:	2bff      	cmp	r3, #255	@ 0xff
 800dc54:	d112      	bne.n	800dc7c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800dc56:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dc58:	1c9a      	adds	r2, r3, #2
 800dc5a:	62ba      	str	r2, [r7, #40]	@ 0x28
 800dc5c:	881a      	ldrh	r2, [r3, #0]
 800dc5e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dc60:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800dc62:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dc64:	3302      	adds	r3, #2
 800dc66:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800dc68:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800dc6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dc6c:	429a      	cmp	r2, r3
 800dc6e:	bf34      	ite	cc
 800dc70:	2301      	movcc	r3, #1
 800dc72:	2300      	movcs	r3, #0
 800dc74:	b2db      	uxtb	r3, r3
 800dc76:	2b00      	cmp	r3, #0
 800dc78:	d1ed      	bne.n	800dc56 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800dc7a:	e079      	b.n	800dd70 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800dc7c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800dc7e:	1c9a      	adds	r2, r3, #2
 800dc80:	62ba      	str	r2, [r7, #40]	@ 0x28
 800dc82:	881a      	ldrh	r2, [r3, #0]
 800dc84:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dc86:	881b      	ldrh	r3, [r3, #0]
 800dc88:	847a      	strh	r2, [r7, #34]	@ 0x22
 800dc8a:	843b      	strh	r3, [r7, #32]
 800dc8c:	78fb      	ldrb	r3, [r7, #3]
 800dc8e:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800dc90:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800dc92:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800dc96:	f023 0307 	bic.w	r3, r3, #7
 800dc9a:	b299      	uxth	r1, r3
 800dc9c:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800dc9e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800dca2:	b29a      	uxth	r2, r3
 800dca4:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800dca6:	f003 031f 	and.w	r3, r3, #31
 800dcaa:	b29b      	uxth	r3, r3
 800dcac:	83b9      	strh	r1, [r7, #28]
 800dcae:	837a      	strh	r2, [r7, #26]
 800dcb0:	833b      	strh	r3, [r7, #24]
 800dcb2:	8c3b      	ldrh	r3, [r7, #32]
 800dcb4:	82fb      	strh	r3, [r7, #22]
 800dcb6:	7ffb      	ldrb	r3, [r7, #31]
 800dcb8:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800dcba:	7d7b      	ldrb	r3, [r7, #21]
 800dcbc:	43db      	mvns	r3, r3
 800dcbe:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800dcc0:	8bbb      	ldrh	r3, [r7, #28]
 800dcc2:	7d7a      	ldrb	r2, [r7, #21]
 800dcc4:	fb03 f202 	mul.w	r2, r3, r2
 800dcc8:	8afb      	ldrh	r3, [r7, #22]
 800dcca:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800dcce:	7d39      	ldrb	r1, [r7, #20]
 800dcd0:	fb01 f303 	mul.w	r3, r1, r3
 800dcd4:	4413      	add	r3, r2
 800dcd6:	4a29      	ldr	r2, [pc, #164]	@ (800dd7c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800dcd8:	fb82 1203 	smull	r1, r2, r2, r3
 800dcdc:	441a      	add	r2, r3
 800dcde:	11d2      	asrs	r2, r2, #7
 800dce0:	17db      	asrs	r3, r3, #31
 800dce2:	1ad3      	subs	r3, r2, r3
 800dce4:	b21b      	sxth	r3, r3
 800dce6:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800dcea:	f023 0307 	bic.w	r3, r3, #7
 800dcee:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800dcf0:	8b7b      	ldrh	r3, [r7, #26]
 800dcf2:	7d79      	ldrb	r1, [r7, #21]
 800dcf4:	fb03 f101 	mul.w	r1, r3, r1
 800dcf8:	8afb      	ldrh	r3, [r7, #22]
 800dcfa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800dcfe:	7d38      	ldrb	r0, [r7, #20]
 800dd00:	fb00 f303 	mul.w	r3, r0, r3
 800dd04:	440b      	add	r3, r1
 800dd06:	491d      	ldr	r1, [pc, #116]	@ (800dd7c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800dd08:	fb81 0103 	smull	r0, r1, r1, r3
 800dd0c:	4419      	add	r1, r3
 800dd0e:	11c9      	asrs	r1, r1, #7
 800dd10:	17db      	asrs	r3, r3, #31
 800dd12:	1acb      	subs	r3, r1, r3
 800dd14:	b21b      	sxth	r3, r3
 800dd16:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800dd1a:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800dd1c:	4313      	orrs	r3, r2
 800dd1e:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800dd20:	8b3b      	ldrh	r3, [r7, #24]
 800dd22:	7d79      	ldrb	r1, [r7, #21]
 800dd24:	fb03 f101 	mul.w	r1, r3, r1
 800dd28:	8afb      	ldrh	r3, [r7, #22]
 800dd2a:	f003 031f 	and.w	r3, r3, #31
 800dd2e:	7d38      	ldrb	r0, [r7, #20]
 800dd30:	fb00 f303 	mul.w	r3, r0, r3
 800dd34:	440b      	add	r3, r1
 800dd36:	4911      	ldr	r1, [pc, #68]	@ (800dd7c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800dd38:	fb81 0103 	smull	r0, r1, r1, r3
 800dd3c:	4419      	add	r1, r3
 800dd3e:	11c9      	asrs	r1, r1, #7
 800dd40:	17db      	asrs	r3, r3, #31
 800dd42:	1acb      	subs	r3, r1, r3
 800dd44:	b21b      	sxth	r3, r3
 800dd46:	f003 031f 	and.w	r3, r3, #31
 800dd4a:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800dd4c:	4313      	orrs	r3, r2
 800dd4e:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800dd50:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800dd52:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800dd54:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dd56:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800dd58:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800dd5a:	3302      	adds	r3, #2
 800dd5c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800dd5e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800dd60:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dd62:	429a      	cmp	r2, r3
 800dd64:	bf34      	ite	cc
 800dd66:	2301      	movcc	r3, #1
 800dd68:	2300      	movcs	r3, #0
 800dd6a:	b2db      	uxtb	r3, r3
 800dd6c:	2b00      	cmp	r3, #0
 800dd6e:	d185      	bne.n	800dc7c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800dd70:	bf00      	nop
 800dd72:	3734      	adds	r7, #52	@ 0x34
 800dd74:	46bd      	mov	sp, r7
 800dd76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd7a:	4770      	bx	lr
 800dd7c:	80808081 	.word	0x80808081

0800dd80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800dd80:	b590      	push	{r4, r7, lr}
 800dd82:	b093      	sub	sp, #76	@ 0x4c
 800dd84:	af00      	add	r7, sp, #0
 800dd86:	60f8      	str	r0, [r7, #12]
 800dd88:	60b9      	str	r1, [r7, #8]
 800dd8a:	607a      	str	r2, [r7, #4]
 800dd8c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800dd8e:	68fb      	ldr	r3, [r7, #12]
 800dd90:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800dd92:	68bb      	ldr	r3, [r7, #8]
 800dd94:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800dd96:	687b      	ldr	r3, [r7, #4]
 800dd98:	005b      	lsls	r3, r3, #1
 800dd9a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800dd9c:	4413      	add	r3, r2
 800dd9e:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800dda0:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800dda2:	681b      	ldr	r3, [r3, #0]
 800dda4:	0e1b      	lsrs	r3, r3, #24
 800dda6:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800ddaa:	78fb      	ldrb	r3, [r7, #3]
 800ddac:	b29a      	uxth	r2, r3
 800ddae:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800ddb2:	b29b      	uxth	r3, r3
 800ddb4:	fb12 f303 	smulbb	r3, r2, r3
 800ddb8:	b29b      	uxth	r3, r3
 800ddba:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800ddbc:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800ddbe:	3301      	adds	r3, #1
 800ddc0:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800ddc2:	0a12      	lsrs	r2, r2, #8
 800ddc4:	b292      	uxth	r2, r2
 800ddc6:	4413      	add	r3, r2
 800ddc8:	121b      	asrs	r3, r3, #8
 800ddca:	b2db      	uxtb	r3, r3
 800ddcc:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800ddd0:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800ddd4:	2bff      	cmp	r3, #255	@ 0xff
 800ddd6:	d133      	bne.n	800de40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800ddd8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800ddda:	681a      	ldr	r2, [r3, #0]
 800dddc:	f107 0318 	add.w	r3, r7, #24
 800dde0:	4611      	mov	r1, r2
 800dde2:	4618      	mov	r0, r3
 800dde4:	f7fb fafe 	bl	80093e4 <_ZN8touchgfx9colortypeC1Em>
 800dde8:	69bb      	ldr	r3, [r7, #24]
 800ddea:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800ddec:	f107 0314 	add.w	r3, r7, #20
 800ddf0:	4618      	mov	r0, r3
 800ddf2:	f7ff fe72 	bl	800dada <_ZNK8touchgfx9colortypecvmEv>
 800ddf6:	4603      	mov	r3, r0
 800ddf8:	0a1b      	lsrs	r3, r3, #8
 800ddfa:	b29b      	uxth	r3, r3
 800ddfc:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800de00:	f023 0307 	bic.w	r3, r3, #7
 800de04:	b29c      	uxth	r4, r3
 800de06:	f107 0314 	add.w	r3, r7, #20
 800de0a:	4618      	mov	r0, r3
 800de0c:	f7ff fe65 	bl	800dada <_ZNK8touchgfx9colortypecvmEv>
 800de10:	4603      	mov	r3, r0
 800de12:	095b      	lsrs	r3, r3, #5
 800de14:	b29b      	uxth	r3, r3
 800de16:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800de1a:	b29b      	uxth	r3, r3
 800de1c:	4323      	orrs	r3, r4
 800de1e:	b29c      	uxth	r4, r3
 800de20:	f107 0314 	add.w	r3, r7, #20
 800de24:	4618      	mov	r0, r3
 800de26:	f7ff fe58 	bl	800dada <_ZNK8touchgfx9colortypecvmEv>
 800de2a:	4603      	mov	r3, r0
 800de2c:	08db      	lsrs	r3, r3, #3
 800de2e:	b29b      	uxth	r3, r3
 800de30:	f003 031f 	and.w	r3, r3, #31
 800de34:	b29b      	uxth	r3, r3
 800de36:	4323      	orrs	r3, r4
 800de38:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800de3a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800de3c:	801a      	strh	r2, [r3, #0]
 800de3e:	e0a9      	b.n	800df94 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800de40:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800de44:	2b00      	cmp	r3, #0
 800de46:	f000 80a5 	beq.w	800df94 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800de4a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800de4c:	681b      	ldr	r3, [r3, #0]
 800de4e:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800de50:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800de52:	0c1b      	lsrs	r3, r3, #16
 800de54:	b2d8      	uxtb	r0, r3
 800de56:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800de58:	0a1b      	lsrs	r3, r3, #8
 800de5a:	b2d9      	uxtb	r1, r3
 800de5c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800de5e:	b2da      	uxtb	r2, r3
 800de60:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800de62:	881b      	ldrh	r3, [r3, #0]
 800de64:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800de68:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800de6c:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800de70:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800de72:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800de76:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800de7a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800de7e:	43db      	mvns	r3, r3
 800de80:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800de84:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800de86:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800de88:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800de8a:	0a1b      	lsrs	r3, r3, #8
 800de8c:	b29b      	uxth	r3, r3
 800de8e:	b2db      	uxtb	r3, r3
 800de90:	f023 0307 	bic.w	r3, r3, #7
 800de94:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800de98:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800de9c:	095b      	lsrs	r3, r3, #5
 800de9e:	b2da      	uxtb	r2, r3
 800dea0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800dea4:	4313      	orrs	r3, r2
 800dea6:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800dea8:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800deac:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800deae:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800deb0:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800deb2:	08db      	lsrs	r3, r3, #3
 800deb4:	b29b      	uxth	r3, r3
 800deb6:	b2db      	uxtb	r3, r3
 800deb8:	f023 0303 	bic.w	r3, r3, #3
 800debc:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800dec0:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800dec4:	099b      	lsrs	r3, r3, #6
 800dec6:	b2da      	uxtb	r2, r3
 800dec8:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800decc:	4313      	orrs	r3, r2
 800dece:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800ded0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800ded4:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800ded6:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800ded8:	8c3b      	ldrh	r3, [r7, #32]
 800deda:	b2db      	uxtb	r3, r3
 800dedc:	00db      	lsls	r3, r3, #3
 800dede:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800dee0:	7ffb      	ldrb	r3, [r7, #31]
 800dee2:	095b      	lsrs	r3, r3, #5
 800dee4:	b2da      	uxtb	r2, r3
 800dee6:	7ffb      	ldrb	r3, [r7, #31]
 800dee8:	4313      	orrs	r3, r2
 800deea:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800deec:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800deee:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800def2:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800def6:	fb03 f202 	mul.w	r2, r3, r2
 800defa:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800defe:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800df02:	fb01 f303 	mul.w	r3, r1, r3
 800df06:	4413      	add	r3, r2
 800df08:	4a2d      	ldr	r2, [pc, #180]	@ (800dfc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800df0a:	fb82 1203 	smull	r1, r2, r2, r3
 800df0e:	441a      	add	r2, r3
 800df10:	11d2      	asrs	r2, r2, #7
 800df12:	17db      	asrs	r3, r3, #31
 800df14:	1ad3      	subs	r3, r2, r3
 800df16:	021b      	lsls	r3, r3, #8
 800df18:	b21b      	sxth	r3, r3
 800df1a:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800df1e:	f023 0307 	bic.w	r3, r3, #7
 800df22:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800df24:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800df28:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800df2c:	fb03 f101 	mul.w	r1, r3, r1
 800df30:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800df34:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800df38:	fb00 f303 	mul.w	r3, r0, r3
 800df3c:	440b      	add	r3, r1
 800df3e:	4920      	ldr	r1, [pc, #128]	@ (800dfc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800df40:	fb81 0103 	smull	r0, r1, r1, r3
 800df44:	4419      	add	r1, r3
 800df46:	11c9      	asrs	r1, r1, #7
 800df48:	17db      	asrs	r3, r3, #31
 800df4a:	1acb      	subs	r3, r1, r3
 800df4c:	00db      	lsls	r3, r3, #3
 800df4e:	b21b      	sxth	r3, r3
 800df50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800df54:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800df56:	4313      	orrs	r3, r2
 800df58:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800df5a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800df5e:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 800df62:	fb03 f101 	mul.w	r1, r3, r1
 800df66:	7fbb      	ldrb	r3, [r7, #30]
 800df68:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 800df6c:	fb00 f303 	mul.w	r3, r0, r3
 800df70:	440b      	add	r3, r1
 800df72:	4913      	ldr	r1, [pc, #76]	@ (800dfc0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800df74:	fb81 0103 	smull	r0, r1, r1, r3
 800df78:	4419      	add	r1, r3
 800df7a:	11c9      	asrs	r1, r1, #7
 800df7c:	17db      	asrs	r3, r3, #31
 800df7e:	1acb      	subs	r3, r1, r3
 800df80:	10db      	asrs	r3, r3, #3
 800df82:	b21b      	sxth	r3, r3
 800df84:	f003 031f 	and.w	r3, r3, #31
 800df88:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 800df8a:	4313      	orrs	r3, r2
 800df8c:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 800df8e:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800df90:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800df92:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 800df94:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800df96:	3304      	adds	r3, #4
 800df98:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 800df9a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800df9c:	3302      	adds	r3, #2
 800df9e:	647b      	str	r3, [r7, #68]	@ 0x44
 800dfa0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800dfa2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800dfa4:	429a      	cmp	r2, r3
 800dfa6:	bf34      	ite	cc
 800dfa8:	2301      	movcc	r3, #1
 800dfaa:	2300      	movcs	r3, #0
 800dfac:	b2db      	uxtb	r3, r3
 800dfae:	2b00      	cmp	r3, #0
 800dfb0:	f47f aef6 	bne.w	800dda0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 800dfb4:	bf00      	nop
 800dfb6:	bf00      	nop
 800dfb8:	374c      	adds	r7, #76	@ 0x4c
 800dfba:	46bd      	mov	sp, r7
 800dfbc:	bd90      	pop	{r4, r7, pc}
 800dfbe:	bf00      	nop
 800dfc0:	80808081 	.word	0x80808081

0800dfc4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 800dfc4:	b5b0      	push	{r4, r5, r7, lr}
 800dfc6:	b082      	sub	sp, #8
 800dfc8:	af00      	add	r7, sp, #0
 800dfca:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800dfcc:	687b      	ldr	r3, [r7, #4]
 800dfce:	4618      	mov	r0, r3
 800dfd0:	f000 fed9 	bl	800ed86 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800dfd4:	687d      	ldr	r5, [r7, #4]
 800dfd6:	687b      	ldr	r3, [r7, #4]
 800dfd8:	681b      	ldr	r3, [r3, #0]
 800dfda:	3364      	adds	r3, #100	@ 0x64
 800dfdc:	681c      	ldr	r4, [r3, #0]
 800dfde:	f004 f8bf 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 800dfe2:	4603      	mov	r3, r0
 800dfe4:	4619      	mov	r1, r3
 800dfe6:	4628      	mov	r0, r5
 800dfe8:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800dfea:	687b      	ldr	r3, [r7, #4]
 800dfec:	681b      	ldr	r3, [r3, #0]
 800dfee:	3380      	adds	r3, #128	@ 0x80
 800dff0:	681b      	ldr	r3, [r3, #0]
 800dff2:	6878      	ldr	r0, [r7, #4]
 800dff4:	4798      	blx	r3
    enableInterrupts();
 800dff6:	687b      	ldr	r3, [r7, #4]
 800dff8:	681b      	ldr	r3, [r3, #0]
 800dffa:	3378      	adds	r3, #120	@ 0x78
 800dffc:	681b      	ldr	r3, [r3, #0]
 800dffe:	6878      	ldr	r0, [r7, #4]
 800e000:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 800e002:	687b      	ldr	r3, [r7, #4]
 800e004:	4906      	ldr	r1, [pc, #24]	@ (800e020 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800e006:	4618      	mov	r0, r3
 800e008:	f7ff fda6 	bl	800db58 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 800e00c:	687b      	ldr	r3, [r7, #4]
 800e00e:	2102      	movs	r1, #2
 800e010:	4618      	mov	r0, r3
 800e012:	f7ff fdbb 	bl	800db8c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 800e016:	bf00      	nop
 800e018:	3708      	adds	r7, #8
 800e01a:	46bd      	mov	sp, r7
 800e01c:	bdb0      	pop	{r4, r5, r7, pc}
 800e01e:	bf00      	nop
 800e020:	20000d40 	.word	0x20000d40

0800e024 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800e024:	b480      	push	{r7}
 800e026:	b083      	sub	sp, #12
 800e028:	af00      	add	r7, sp, #0
 800e02a:	6078      	str	r0, [r7, #4]
}
 800e02c:	bf00      	nop
 800e02e:	370c      	adds	r7, #12
 800e030:	46bd      	mov	sp, r7
 800e032:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e036:	4770      	bx	lr

0800e038 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800e038:	b480      	push	{r7}
 800e03a:	b083      	sub	sp, #12
 800e03c:	af00      	add	r7, sp, #0
 800e03e:	6078      	str	r0, [r7, #4]
}
 800e040:	bf00      	nop
 800e042:	370c      	adds	r7, #12
 800e044:	46bd      	mov	sp, r7
 800e046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e04a:	4770      	bx	lr

0800e04c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800e04c:	b480      	push	{r7}
 800e04e:	b083      	sub	sp, #12
 800e050:	af00      	add	r7, sp, #0
 800e052:	6078      	str	r0, [r7, #4]
}
 800e054:	bf00      	nop
 800e056:	370c      	adds	r7, #12
 800e058:	46bd      	mov	sp, r7
 800e05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e05e:	4770      	bx	lr

0800e060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800e060:	b480      	push	{r7}
 800e062:	b083      	sub	sp, #12
 800e064:	af00      	add	r7, sp, #0
 800e066:	6078      	str	r0, [r7, #4]
}
 800e068:	bf00      	nop
 800e06a:	370c      	adds	r7, #12
 800e06c:	46bd      	mov	sp, r7
 800e06e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e072:	4770      	bx	lr

0800e074 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800e074:	b580      	push	{r7, lr}
 800e076:	b082      	sub	sp, #8
 800e078:	af00      	add	r7, sp, #0
 800e07a:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800e07c:	687b      	ldr	r3, [r7, #4]
 800e07e:	4618      	mov	r0, r3
 800e080:	f000 fe68 	bl	800ed54 <_ZN8touchgfx3HAL10beginFrameEv>
 800e084:	4603      	mov	r3, r0
}
 800e086:	4618      	mov	r0, r3
 800e088:	3708      	adds	r7, #8
 800e08a:	46bd      	mov	sp, r7
 800e08c:	bd80      	pop	{r7, pc}

0800e08e <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800e08e:	b580      	push	{r7, lr}
 800e090:	b082      	sub	sp, #8
 800e092:	af00      	add	r7, sp, #0
 800e094:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 800e096:	bf00      	nop
 800e098:	f7f4 f9ca 	bl	8002430 <touchgfxDisplayDriverTransmitActive>
 800e09c:	4603      	mov	r3, r0
 800e09e:	2b00      	cmp	r3, #0
 800e0a0:	bf14      	ite	ne
 800e0a2:	2301      	movne	r3, #1
 800e0a4:	2300      	moveq	r3, #0
 800e0a6:	b2db      	uxtb	r3, r3
 800e0a8:	2b00      	cmp	r3, #0
 800e0aa:	d1f5      	bne.n	800e098 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	4618      	mov	r0, r3
 800e0b0:	f000 fe5c 	bl	800ed6c <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800e0b4:	f7fe fede 	bl	800ce74 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800e0b8:	bf00      	nop
 800e0ba:	3708      	adds	r7, #8
 800e0bc:	46bd      	mov	sp, r7
 800e0be:	bd80      	pop	{r7, pc}

0800e0c0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800e0c0:	b480      	push	{r7}
 800e0c2:	b083      	sub	sp, #12
 800e0c4:	af00      	add	r7, sp, #0
 800e0c6:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 800e0c8:	2300      	movs	r3, #0
}
 800e0ca:	4618      	mov	r0, r3
 800e0cc:	370c      	adds	r7, #12
 800e0ce:	46bd      	mov	sp, r7
 800e0d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0d4:	4770      	bx	lr

0800e0d6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800e0d6:	b480      	push	{r7}
 800e0d8:	b083      	sub	sp, #12
 800e0da:	af00      	add	r7, sp, #0
 800e0dc:	6078      	str	r0, [r7, #4]
 800e0de:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 800e0e0:	bf00      	nop
 800e0e2:	370c      	adds	r7, #12
 800e0e4:	46bd      	mov	sp, r7
 800e0e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0ea:	4770      	bx	lr

0800e0ec <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800e0ec:	b580      	push	{r7, lr}
 800e0ee:	b088      	sub	sp, #32
 800e0f0:	af02      	add	r7, sp, #8
 800e0f2:	6078      	str	r0, [r7, #4]
 800e0f4:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800e0f6:	687b      	ldr	r3, [r7, #4]
 800e0f8:	6839      	ldr	r1, [r7, #0]
 800e0fa:	4618      	mov	r0, r3
 800e0fc:	f000 fdf4 	bl	800ece8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 800e100:	687b      	ldr	r3, [r7, #4]
 800e102:	699a      	ldr	r2, [r3, #24]
 800e104:	687b      	ldr	r3, [r7, #4]
 800e106:	699b      	ldr	r3, [r3, #24]
 800e108:	681b      	ldr	r3, [r3, #0]
 800e10a:	3304      	adds	r3, #4
 800e10c:	681b      	ldr	r3, [r3, #0]
 800e10e:	4610      	mov	r0, r2
 800e110:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 800e112:	f7f4 f98d 	bl	8002430 <touchgfxDisplayDriverTransmitActive>
 800e116:	4603      	mov	r3, r0
 800e118:	2b00      	cmp	r3, #0
 800e11a:	bf0c      	ite	eq
 800e11c:	2301      	moveq	r3, #1
 800e11e:	2300      	movne	r3, #0
 800e120:	b2db      	uxtb	r3, r3
 800e122:	2b00      	cmp	r3, #0
 800e124:	d021      	beq.n	800e16a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 800e126:	f107 030c 	add.w	r3, r7, #12
 800e12a:	4618      	mov	r0, r3
 800e12c:	f7fb f969 	bl	8009402 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 800e130:	687b      	ldr	r3, [r7, #4]
 800e132:	699a      	ldr	r2, [r3, #24]
 800e134:	687b      	ldr	r3, [r7, #4]
 800e136:	699b      	ldr	r3, [r3, #24]
 800e138:	681b      	ldr	r3, [r3, #0]
 800e13a:	330c      	adds	r3, #12
 800e13c:	681b      	ldr	r3, [r3, #0]
 800e13e:	f107 010c 	add.w	r1, r7, #12
 800e142:	4610      	mov	r0, r2
 800e144:	4798      	blx	r3
 800e146:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800e148:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800e14c:	b299      	uxth	r1, r3
 800e14e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800e152:	b29a      	uxth	r2, r3
 800e154:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800e158:	b298      	uxth	r0, r3
 800e15a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800e15e:	b29b      	uxth	r3, r3
 800e160:	9300      	str	r3, [sp, #0]
 800e162:	4603      	mov	r3, r0
 800e164:	6978      	ldr	r0, [r7, #20]
 800e166:	f7f4 f975 	bl	8002454 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800e16a:	bf00      	nop
 800e16c:	3718      	adds	r7, #24
 800e16e:	46bd      	mov	sp, r7
 800e170:	bd80      	pop	{r7, pc}

0800e172 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800e172:	b580      	push	{r7, lr}
 800e174:	b084      	sub	sp, #16
 800e176:	af00      	add	r7, sp, #0
 800e178:	60f8      	str	r0, [r7, #12]
 800e17a:	60b9      	str	r1, [r7, #8]
 800e17c:	607a      	str	r2, [r7, #4]
 800e17e:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800e180:	68f8      	ldr	r0, [r7, #12]
 800e182:	683b      	ldr	r3, [r7, #0]
 800e184:	687a      	ldr	r2, [r7, #4]
 800e186:	68b9      	ldr	r1, [r7, #8]
 800e188:	f000 ff1f 	bl	800efca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800e18c:	4603      	mov	r3, r0
}
 800e18e:	4618      	mov	r0, r3
 800e190:	3710      	adds	r7, #16
 800e192:	46bd      	mov	sp, r7
 800e194:	bd80      	pop	{r7, pc}

0800e196 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 800e196:	b480      	push	{r7}
 800e198:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 800e19a:	bf00      	nop
 800e19c:	46bd      	mov	sp, r7
 800e19e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1a2:	4770      	bx	lr

0800e1a4 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 800e1a4:	b480      	push	{r7}
 800e1a6:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 800e1a8:	bf00      	nop
 800e1aa:	46bd      	mov	sp, r7
 800e1ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1b0:	4770      	bx	lr

0800e1b2 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 800e1b2:	b580      	push	{r7, lr}
 800e1b4:	b086      	sub	sp, #24
 800e1b6:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 800e1b8:	f7fa fae2 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 800e1bc:	4603      	mov	r3, r0
 800e1be:	4618      	mov	r0, r3
 800e1c0:	f7ff fcd8 	bl	800db74 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 800e1c4:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 800e1c6:	68fb      	ldr	r3, [r7, #12]
 800e1c8:	681b      	ldr	r3, [r3, #0]
 800e1ca:	3318      	adds	r3, #24
 800e1cc:	681b      	ldr	r3, [r3, #0]
 800e1ce:	68f8      	ldr	r0, [r7, #12]
 800e1d0:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 800e1d2:	68fb      	ldr	r3, [r7, #12]
 800e1d4:	681b      	ldr	r3, [r3, #0]
 800e1d6:	3308      	adds	r3, #8
 800e1d8:	681b      	ldr	r3, [r3, #0]
 800e1da:	68f8      	ldr	r0, [r7, #12]
 800e1dc:	4798      	blx	r3
 800e1de:	4603      	mov	r3, r0
 800e1e0:	2b00      	cmp	r3, #0
 800e1e2:	d01d      	beq.n	800e220 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 800e1e4:	463b      	mov	r3, r7
 800e1e6:	4618      	mov	r0, r3
 800e1e8:	f7fb f90b 	bl	8009402 <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 800e1ec:	68fb      	ldr	r3, [r7, #12]
 800e1ee:	681b      	ldr	r3, [r3, #0]
 800e1f0:	330c      	adds	r3, #12
 800e1f2:	681b      	ldr	r3, [r3, #0]
 800e1f4:	463a      	mov	r2, r7
 800e1f6:	4611      	mov	r1, r2
 800e1f8:	68f8      	ldr	r0, [r7, #12]
 800e1fa:	4798      	blx	r3
 800e1fc:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 800e1fe:	f9b7 3000 	ldrsh.w	r3, [r7]
 800e202:	b299      	uxth	r1, r3
 800e204:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800e208:	b29a      	uxth	r2, r3
 800e20a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800e20e:	b298      	uxth	r0, r3
 800e210:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800e214:	b29b      	uxth	r3, r3
 800e216:	9300      	str	r3, [sp, #0]
 800e218:	4603      	mov	r3, r0
 800e21a:	68b8      	ldr	r0, [r7, #8]
 800e21c:	f7f4 f91a 	bl	8002454 <touchgfxDisplayDriverTransmitBlock>
    }
}
 800e220:	bf00      	nop
 800e222:	3710      	adds	r7, #16
 800e224:	46bd      	mov	sp, r7
 800e226:	bd80      	pop	{r7, pc}

0800e228 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 800e228:	b580      	push	{r7, lr}
 800e22a:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 800e22c:	f7ff ffc1 	bl	800e1b2 <_ZN8touchgfx16startNewTransferEv>
}
 800e230:	bf00      	nop
 800e232:	bd80      	pop	{r7, pc}

0800e234 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 800e234:	b580      	push	{r7, lr}
 800e236:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 800e238:	f7fa faa2 	bl	8008780 <_ZN8touchgfx3HAL11getInstanceEv>
 800e23c:	4603      	mov	r3, r0
 800e23e:	4618      	mov	r0, r3
 800e240:	f7ff fc78 	bl	800db34 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 800e244:	f7fe fe0a 	bl	800ce5c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 800e248:	bf00      	nop
 800e24a:	bd80      	pop	{r7, pc}

0800e24c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 800e24c:	b480      	push	{r7}
 800e24e:	b083      	sub	sp, #12
 800e250:	af00      	add	r7, sp, #0
 800e252:	6078      	str	r0, [r7, #4]
 800e254:	4a04      	ldr	r2, [pc, #16]	@ (800e268 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 800e256:	687b      	ldr	r3, [r7, #4]
 800e258:	601a      	str	r2, [r3, #0]
 800e25a:	687b      	ldr	r3, [r7, #4]
 800e25c:	4618      	mov	r0, r3
 800e25e:	370c      	adds	r7, #12
 800e260:	46bd      	mov	sp, r7
 800e262:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e266:	4770      	bx	lr
 800e268:	08026aec 	.word	0x08026aec

0800e26c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 800e26c:	b5b0      	push	{r4, r5, r7, lr}
 800e26e:	b084      	sub	sp, #16
 800e270:	af00      	add	r7, sp, #0
 800e272:	6078      	str	r0, [r7, #4]
    {
 800e274:	687b      	ldr	r3, [r7, #4]
 800e276:	4618      	mov	r0, r3
 800e278:	f7ff ffe8 	bl	800e24c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 800e27c:	4a1a      	ldr	r2, [pc, #104]	@ (800e2e8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 800e27e:	687b      	ldr	r3, [r7, #4]
 800e280:	601a      	str	r2, [r3, #0]
 800e282:	687b      	ldr	r3, [r7, #4]
 800e284:	f503 5307 	add.w	r3, r3, #8640	@ 0x21c0
 800e288:	3308      	adds	r3, #8
 800e28a:	2402      	movs	r4, #2
 800e28c:	461d      	mov	r5, r3
 800e28e:	e004      	b.n	800e29a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 800e290:	4628      	mov	r0, r5
 800e292:	f7fb f8b6 	bl	8009402 <_ZN8touchgfx4RectC1Ev>
 800e296:	3c01      	subs	r4, #1
 800e298:	3508      	adds	r5, #8
 800e29a:	2c00      	cmp	r4, #0
 800e29c:	daf8      	bge.n	800e290 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 800e29e:	687b      	ldr	r3, [r7, #4]
 800e2a0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e2a4:	461a      	mov	r2, r3
 800e2a6:	f04f 33ff 	mov.w	r3, #4294967295
 800e2aa:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        drawingBlock = -1;
 800e2ae:	687b      	ldr	r3, [r7, #4]
 800e2b0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e2b4:	461a      	mov	r2, r3
 800e2b6:	f04f 33ff 	mov.w	r3, #4294967295
 800e2ba:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 800e2be:	2300      	movs	r3, #0
 800e2c0:	60fb      	str	r3, [r7, #12]
 800e2c2:	e008      	b.n	800e2d6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 800e2c4:	687a      	ldr	r2, [r7, #4]
 800e2c6:	68fb      	ldr	r3, [r7, #12]
 800e2c8:	4413      	add	r3, r2
 800e2ca:	3304      	adds	r3, #4
 800e2cc:	2200      	movs	r2, #0
 800e2ce:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 800e2d0:	68fb      	ldr	r3, [r7, #12]
 800e2d2:	3301      	adds	r3, #1
 800e2d4:	60fb      	str	r3, [r7, #12]
 800e2d6:	68fb      	ldr	r3, [r7, #12]
 800e2d8:	2b02      	cmp	r3, #2
 800e2da:	d9f3      	bls.n	800e2c4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 800e2dc:	687b      	ldr	r3, [r7, #4]
 800e2de:	4618      	mov	r0, r3
 800e2e0:	3710      	adds	r7, #16
 800e2e2:	46bd      	mov	sp, r7
 800e2e4:	bdb0      	pop	{r4, r5, r7, pc}
 800e2e6:	bf00      	nop
 800e2e8:	080269e8 	.word	0x080269e8

0800e2ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 800e2ec:	b580      	push	{r7, lr}
 800e2ee:	b082      	sub	sp, #8
 800e2f0:	af00      	add	r7, sp, #0
 800e2f2:	6078      	str	r0, [r7, #4]
 800e2f4:	4a05      	ldr	r2, [pc, #20]	@ (800e30c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 800e2f6:	687b      	ldr	r3, [r7, #4]
 800e2f8:	601a      	str	r2, [r3, #0]
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	4618      	mov	r0, r3
 800e2fe:	f7ff fbf9 	bl	800daf4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800e302:	687b      	ldr	r3, [r7, #4]
 800e304:	4618      	mov	r0, r3
 800e306:	3708      	adds	r7, #8
 800e308:	46bd      	mov	sp, r7
 800e30a:	bd80      	pop	{r7, pc}
 800e30c:	080269e8 	.word	0x080269e8

0800e310 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 800e310:	b580      	push	{r7, lr}
 800e312:	b082      	sub	sp, #8
 800e314:	af00      	add	r7, sp, #0
 800e316:	6078      	str	r0, [r7, #4]
 800e318:	6878      	ldr	r0, [r7, #4]
 800e31a:	f7ff ffe7 	bl	800e2ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 800e31e:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 800e322:	6878      	ldr	r0, [r7, #4]
 800e324:	f015 fc75 	bl	8023c12 <_ZdlPvj>
 800e328:	687b      	ldr	r3, [r7, #4]
 800e32a:	4618      	mov	r0, r3
 800e32c:	3708      	adds	r7, #8
 800e32e:	46bd      	mov	sp, r7
 800e330:	bd80      	pop	{r7, pc}
	...

0800e334 <_Z41__static_initialization_and_destruction_0ii>:
 800e334:	b580      	push	{r7, lr}
 800e336:	b082      	sub	sp, #8
 800e338:	af00      	add	r7, sp, #0
 800e33a:	6078      	str	r0, [r7, #4]
 800e33c:	6039      	str	r1, [r7, #0]
 800e33e:	687b      	ldr	r3, [r7, #4]
 800e340:	2b01      	cmp	r3, #1
 800e342:	d107      	bne.n	800e354 <_Z41__static_initialization_and_destruction_0ii+0x20>
 800e344:	683b      	ldr	r3, [r7, #0]
 800e346:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800e34a:	4293      	cmp	r3, r2
 800e34c:	d102      	bne.n	800e354 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 800e34e:	4809      	ldr	r0, [pc, #36]	@ (800e374 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800e350:	f7ff ff8c 	bl	800e26c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 800e354:	687b      	ldr	r3, [r7, #4]
 800e356:	2b00      	cmp	r3, #0
 800e358:	d107      	bne.n	800e36a <_Z41__static_initialization_and_destruction_0ii+0x36>
 800e35a:	683b      	ldr	r3, [r7, #0]
 800e35c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800e360:	4293      	cmp	r3, r2
 800e362:	d102      	bne.n	800e36a <_Z41__static_initialization_and_destruction_0ii+0x36>
 800e364:	4803      	ldr	r0, [pc, #12]	@ (800e374 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800e366:	f7ff ffc1 	bl	800e2ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 800e36a:	bf00      	nop
 800e36c:	3708      	adds	r7, #8
 800e36e:	46bd      	mov	sp, r7
 800e370:	bd80      	pop	{r7, pc}
 800e372:	bf00      	nop
 800e374:	20000d40 	.word	0x20000d40

0800e378 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 800e378:	b580      	push	{r7, lr}
 800e37a:	b086      	sub	sp, #24
 800e37c:	af00      	add	r7, sp, #0
 800e37e:	60f8      	str	r0, [r7, #12]
 800e380:	4608      	mov	r0, r1
 800e382:	4611      	mov	r1, r2
 800e384:	461a      	mov	r2, r3
 800e386:	4603      	mov	r3, r0
 800e388:	817b      	strh	r3, [r7, #10]
 800e38a:	460b      	mov	r3, r1
 800e38c:	813b      	strh	r3, [r7, #8]
 800e38e:	4613      	mov	r3, r2
 800e390:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 800e392:	68fb      	ldr	r3, [r7, #12]
 800e394:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e398:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e39c:	3301      	adds	r3, #1
 800e39e:	68fa      	ldr	r2, [r7, #12]
 800e3a0:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800e3a4:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        if (drawingBlock == blocks)
 800e3a8:	68fb      	ldr	r3, [r7, #12]
 800e3aa:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e3ae:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e3b2:	2b03      	cmp	r3, #3
 800e3b4:	d109      	bne.n	800e3ca <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 800e3b6:	68fb      	ldr	r3, [r7, #12]
 800e3b8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e3bc:	461a      	mov	r2, r3
 800e3be:	2300      	movs	r3, #0
 800e3c0:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 800e3c4:	e001      	b.n	800e3ca <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 800e3c6:	f7ff fee6 	bl	800e196 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 800e3ca:	68fb      	ldr	r3, [r7, #12]
 800e3cc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e3d0:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e3d4:	68fa      	ldr	r2, [r7, #12]
 800e3d6:	4413      	add	r3, r2
 800e3d8:	791b      	ldrb	r3, [r3, #4]
 800e3da:	b2db      	uxtb	r3, r3
 800e3dc:	2b00      	cmp	r3, #0
 800e3de:	bf14      	ite	ne
 800e3e0:	2301      	movne	r3, #1
 800e3e2:	2300      	moveq	r3, #0
 800e3e4:	b2db      	uxtb	r3, r3
 800e3e6:	2b00      	cmp	r3, #0
 800e3e8:	d1ed      	bne.n	800e3c6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 800e3ea:	68fb      	ldr	r3, [r7, #12]
 800e3ec:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e3f0:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e3f4:	68fa      	ldr	r2, [r7, #12]
 800e3f6:	4413      	add	r3, r2
 800e3f8:	791b      	ldrb	r3, [r3, #4]
 800e3fa:	b2db      	uxtb	r3, r3
 800e3fc:	2b00      	cmp	r3, #0
 800e3fe:	d005      	beq.n	800e40c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 800e400:	4b38      	ldr	r3, [pc, #224]	@ (800e4e4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 800e402:	4a39      	ldr	r2, [pc, #228]	@ (800e4e8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 800e404:	21aa      	movs	r1, #170	@ 0xaa
 800e406:	4839      	ldr	r0, [pc, #228]	@ (800e4ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 800e408:	f015 fcb2 	bl	8023d70 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 800e40c:	68fb      	ldr	r3, [r7, #12]
 800e40e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e412:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e416:	68fa      	ldr	r2, [r7, #12]
 800e418:	4413      	add	r3, r2
 800e41a:	2201      	movs	r2, #1
 800e41c:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 800e41e:	88fb      	ldrh	r3, [r7, #6]
 800e420:	005b      	lsls	r3, r3, #1
 800e422:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 800e424:	697b      	ldr	r3, [r7, #20]
 800e426:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800e42a:	fbb2 f3f3 	udiv	r3, r2, r3
 800e42e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 800e430:	68fb      	ldr	r3, [r7, #12]
 800e432:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e436:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e43a:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800e43e:	fb02 f303 	mul.w	r3, r2, r3
 800e442:	3308      	adds	r3, #8
 800e444:	68fa      	ldr	r2, [r7, #12]
 800e446:	441a      	add	r2, r3
 800e448:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800e44a:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 800e44c:	68fb      	ldr	r3, [r7, #12]
 800e44e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e452:	f8d3 21e4 	ldr.w	r2, [r3, #484]	@ 0x1e4
 800e456:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800e45a:	68fb      	ldr	r3, [r7, #12]
 800e45c:	f202 4239 	addw	r2, r2, #1081	@ 0x439
 800e460:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 800e464:	68fb      	ldr	r3, [r7, #12]
 800e466:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e46a:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e46e:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 800e472:	68fa      	ldr	r2, [r7, #12]
 800e474:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800e478:	00db      	lsls	r3, r3, #3
 800e47a:	4413      	add	r3, r2
 800e47c:	460a      	mov	r2, r1
 800e47e:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 800e480:	68fb      	ldr	r3, [r7, #12]
 800e482:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e486:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e48a:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 800e48e:	68fa      	ldr	r2, [r7, #12]
 800e490:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800e494:	00db      	lsls	r3, r3, #3
 800e496:	4413      	add	r3, r2
 800e498:	460a      	mov	r2, r1
 800e49a:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 800e49c:	8c3a      	ldrh	r2, [r7, #32]
 800e49e:	693b      	ldr	r3, [r7, #16]
 800e4a0:	429a      	cmp	r2, r3
 800e4a2:	bfa8      	it	ge
 800e4a4:	461a      	movge	r2, r3
 800e4a6:	68fb      	ldr	r3, [r7, #12]
 800e4a8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e4ac:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e4b0:	b211      	sxth	r1, r2
 800e4b2:	68fa      	ldr	r2, [r7, #12]
 800e4b4:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800e4b8:	00db      	lsls	r3, r3, #3
 800e4ba:	4413      	add	r3, r2
 800e4bc:	460a      	mov	r2, r1
 800e4be:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 800e4c0:	68fb      	ldr	r3, [r7, #12]
 800e4c2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e4c6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e4ca:	68fa      	ldr	r2, [r7, #12]
 800e4cc:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800e4d0:	00db      	lsls	r3, r3, #3
 800e4d2:	4413      	add	r3, r2
 800e4d4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 800e4d8:	b29b      	uxth	r3, r3
    }
 800e4da:	4618      	mov	r0, r3
 800e4dc:	3718      	adds	r7, #24
 800e4de:	46bd      	mov	sp, r7
 800e4e0:	bd80      	pop	{r7, pc}
 800e4e2:	bf00      	nop
 800e4e4:	08025908 	.word	0x08025908
 800e4e8:	08025928 	.word	0x08025928
 800e4ec:	08025a5c 	.word	0x08025a5c

0800e4f0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 800e4f0:	b580      	push	{r7, lr}
 800e4f2:	b082      	sub	sp, #8
 800e4f4:	af00      	add	r7, sp, #0
 800e4f6:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 800e4f8:	687b      	ldr	r3, [r7, #4]
 800e4fa:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e4fe:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e502:	687a      	ldr	r2, [r7, #4]
 800e504:	4413      	add	r3, r2
 800e506:	791b      	ldrb	r3, [r3, #4]
 800e508:	b2db      	uxtb	r3, r3
 800e50a:	2b01      	cmp	r3, #1
 800e50c:	d005      	beq.n	800e51a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 800e50e:	4b0a      	ldr	r3, [pc, #40]	@ (800e538 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 800e510:	4a0a      	ldr	r2, [pc, #40]	@ (800e53c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 800e512:	21b9      	movs	r1, #185	@ 0xb9
 800e514:	480a      	ldr	r0, [pc, #40]	@ (800e540 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 800e516:	f015 fc2b 	bl	8023d70 <__assert_func>
        state[drawingBlock] = DRAWN;
 800e51a:	687b      	ldr	r3, [r7, #4]
 800e51c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e520:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e524:	687a      	ldr	r2, [r7, #4]
 800e526:	4413      	add	r3, r2
 800e528:	2202      	movs	r2, #2
 800e52a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 800e52c:	f7ff fe3a 	bl	800e1a4 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 800e530:	bf00      	nop
 800e532:	3708      	adds	r7, #8
 800e534:	46bd      	mov	sp, r7
 800e536:	bd80      	pop	{r7, pc}
 800e538:	08025ab0 	.word	0x08025ab0
 800e53c:	08025ad4 	.word	0x08025ad4
 800e540:	08025a5c 	.word	0x08025a5c

0800e544 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 800e544:	b480      	push	{r7}
 800e546:	b085      	sub	sp, #20
 800e548:	af00      	add	r7, sp, #0
 800e54a:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 800e54c:	2300      	movs	r3, #0
 800e54e:	60fb      	str	r3, [r7, #12]
 800e550:	e011      	b.n	800e576 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 800e552:	687a      	ldr	r2, [r7, #4]
 800e554:	68fb      	ldr	r3, [r7, #12]
 800e556:	4413      	add	r3, r2
 800e558:	3304      	adds	r3, #4
 800e55a:	781b      	ldrb	r3, [r3, #0]
 800e55c:	b2db      	uxtb	r3, r3
 800e55e:	2b02      	cmp	r3, #2
 800e560:	bf0c      	ite	eq
 800e562:	2301      	moveq	r3, #1
 800e564:	2300      	movne	r3, #0
 800e566:	b2db      	uxtb	r3, r3
 800e568:	2b00      	cmp	r3, #0
 800e56a:	d001      	beq.n	800e570 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 800e56c:	2301      	movs	r3, #1
 800e56e:	e006      	b.n	800e57e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 800e570:	68fb      	ldr	r3, [r7, #12]
 800e572:	3301      	adds	r3, #1
 800e574:	60fb      	str	r3, [r7, #12]
 800e576:	68fb      	ldr	r3, [r7, #12]
 800e578:	2b02      	cmp	r3, #2
 800e57a:	d9ea      	bls.n	800e552 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 800e57c:	2300      	movs	r3, #0
    }
 800e57e:	4618      	mov	r0, r3
 800e580:	3714      	adds	r7, #20
 800e582:	46bd      	mov	sp, r7
 800e584:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e588:	4770      	bx	lr
	...

0800e58c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 800e58c:	b580      	push	{r7, lr}
 800e58e:	b082      	sub	sp, #8
 800e590:	af00      	add	r7, sp, #0
 800e592:	6078      	str	r0, [r7, #4]
 800e594:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 800e596:	687b      	ldr	r3, [r7, #4]
 800e598:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e59c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e5a0:	3301      	adds	r3, #1
 800e5a2:	687a      	ldr	r2, [r7, #4]
 800e5a4:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 800e5a8:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        if (sendingBlock == blocks)
 800e5ac:	687b      	ldr	r3, [r7, #4]
 800e5ae:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e5b2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e5b6:	2b03      	cmp	r3, #3
 800e5b8:	d106      	bne.n	800e5c8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 800e5ba:	687b      	ldr	r3, [r7, #4]
 800e5bc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e5c0:	461a      	mov	r2, r3
 800e5c2:	2300      	movs	r3, #0
 800e5c4:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 800e5c8:	687b      	ldr	r3, [r7, #4]
 800e5ca:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e5ce:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e5d2:	687a      	ldr	r2, [r7, #4]
 800e5d4:	4413      	add	r3, r2
 800e5d6:	791b      	ldrb	r3, [r3, #4]
 800e5d8:	b2db      	uxtb	r3, r3
 800e5da:	2b02      	cmp	r3, #2
 800e5dc:	d005      	beq.n	800e5ea <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 800e5de:	4b16      	ldr	r3, [pc, #88]	@ (800e638 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 800e5e0:	4a16      	ldr	r2, [pc, #88]	@ (800e63c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 800e5e2:	21dd      	movs	r1, #221	@ 0xdd
 800e5e4:	4816      	ldr	r0, [pc, #88]	@ (800e640 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 800e5e6:	f015 fbc3 	bl	8023d70 <__assert_func>
        rect = blockRect[sendingBlock];
 800e5ea:	687b      	ldr	r3, [r7, #4]
 800e5ec:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e5f0:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e5f4:	683a      	ldr	r2, [r7, #0]
 800e5f6:	6879      	ldr	r1, [r7, #4]
 800e5f8:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800e5fc:	00db      	lsls	r3, r3, #3
 800e5fe:	440b      	add	r3, r1
 800e600:	cb03      	ldmia	r3!, {r0, r1}
 800e602:	6010      	str	r0, [r2, #0]
 800e604:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 800e606:	687b      	ldr	r3, [r7, #4]
 800e608:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e60c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e610:	687a      	ldr	r2, [r7, #4]
 800e612:	4413      	add	r3, r2
 800e614:	2203      	movs	r2, #3
 800e616:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 800e618:	687b      	ldr	r3, [r7, #4]
 800e61a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e61e:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e622:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 800e626:	fb02 f303 	mul.w	r3, r2, r3
 800e62a:	3308      	adds	r3, #8
 800e62c:	687a      	ldr	r2, [r7, #4]
 800e62e:	4413      	add	r3, r2
    }
 800e630:	4618      	mov	r0, r3
 800e632:	3708      	adds	r7, #8
 800e634:	46bd      	mov	sp, r7
 800e636:	bd80      	pop	{r7, pc}
 800e638:	08025ba8 	.word	0x08025ba8
 800e63c:	08025bc8 	.word	0x08025bc8
 800e640:	08025a5c 	.word	0x08025a5c

0800e644 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 800e644:	b580      	push	{r7, lr}
 800e646:	b084      	sub	sp, #16
 800e648:	af00      	add	r7, sp, #0
 800e64a:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 800e64c:	687b      	ldr	r3, [r7, #4]
 800e64e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e652:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e656:	3301      	adds	r3, #1
 800e658:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 800e65a:	68fb      	ldr	r3, [r7, #12]
 800e65c:	2b03      	cmp	r3, #3
 800e65e:	d101      	bne.n	800e664 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 800e660:	2300      	movs	r3, #0
 800e662:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 800e664:	687a      	ldr	r2, [r7, #4]
 800e666:	68fb      	ldr	r3, [r7, #12]
 800e668:	4413      	add	r3, r2
 800e66a:	3304      	adds	r3, #4
 800e66c:	781b      	ldrb	r3, [r3, #0]
 800e66e:	b2db      	uxtb	r3, r3
 800e670:	2b02      	cmp	r3, #2
 800e672:	d005      	beq.n	800e680 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 800e674:	4b07      	ldr	r3, [pc, #28]	@ (800e694 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 800e676:	4a08      	ldr	r2, [pc, #32]	@ (800e698 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 800e678:	21ea      	movs	r1, #234	@ 0xea
 800e67a:	4808      	ldr	r0, [pc, #32]	@ (800e69c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 800e67c:	f015 fb78 	bl	8023d70 <__assert_func>
        return blockRect[nextSendingBlock];
 800e680:	68fb      	ldr	r3, [r7, #12]
 800e682:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 800e686:	00db      	lsls	r3, r3, #3
 800e688:	687a      	ldr	r2, [r7, #4]
 800e68a:	4413      	add	r3, r2
    }
 800e68c:	4618      	mov	r0, r3
 800e68e:	3710      	adds	r7, #16
 800e690:	46bd      	mov	sp, r7
 800e692:	bd80      	pop	{r7, pc}
 800e694:	08025cc8 	.word	0x08025cc8
 800e698:	08025cec 	.word	0x08025cec
 800e69c:	08025a5c 	.word	0x08025a5c

0800e6a0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 800e6a0:	b480      	push	{r7}
 800e6a2:	b085      	sub	sp, #20
 800e6a4:	af00      	add	r7, sp, #0
 800e6a6:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 800e6a8:	687b      	ldr	r3, [r7, #4]
 800e6aa:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e6ae:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 800e6b2:	3301      	adds	r3, #1
 800e6b4:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 800e6b6:	68fb      	ldr	r3, [r7, #12]
 800e6b8:	2b03      	cmp	r3, #3
 800e6ba:	d101      	bne.n	800e6c0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 800e6bc:	2300      	movs	r3, #0
 800e6be:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 800e6c0:	687a      	ldr	r2, [r7, #4]
 800e6c2:	68fb      	ldr	r3, [r7, #12]
 800e6c4:	4413      	add	r3, r2
 800e6c6:	3304      	adds	r3, #4
 800e6c8:	781b      	ldrb	r3, [r3, #0]
 800e6ca:	b2db      	uxtb	r3, r3
 800e6cc:	2b00      	cmp	r3, #0
 800e6ce:	bf0c      	ite	eq
 800e6d0:	2301      	moveq	r3, #1
 800e6d2:	2300      	movne	r3, #0
 800e6d4:	b2db      	uxtb	r3, r3
    }
 800e6d6:	4618      	mov	r0, r3
 800e6d8:	3714      	adds	r7, #20
 800e6da:	46bd      	mov	sp, r7
 800e6dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6e0:	4770      	bx	lr
	...

0800e6e4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 800e6e4:	b580      	push	{r7, lr}
 800e6e6:	b082      	sub	sp, #8
 800e6e8:	af00      	add	r7, sp, #0
 800e6ea:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 800e6ec:	687b      	ldr	r3, [r7, #4]
 800e6ee:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e6f2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e6f6:	687a      	ldr	r2, [r7, #4]
 800e6f8:	4413      	add	r3, r2
 800e6fa:	791b      	ldrb	r3, [r3, #4]
 800e6fc:	b2db      	uxtb	r3, r3
 800e6fe:	2b03      	cmp	r3, #3
 800e700:	d005      	beq.n	800e70e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 800e702:	4b09      	ldr	r3, [pc, #36]	@ (800e728 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 800e704:	4a09      	ldr	r2, [pc, #36]	@ (800e72c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 800e706:	21ff      	movs	r1, #255	@ 0xff
 800e708:	4809      	ldr	r0, [pc, #36]	@ (800e730 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 800e70a:	f015 fb31 	bl	8023d70 <__assert_func>
        state[sendingBlock] = EMPTY;
 800e70e:	687b      	ldr	r3, [r7, #4]
 800e710:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 800e714:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 800e718:	687a      	ldr	r2, [r7, #4]
 800e71a:	4413      	add	r3, r2
 800e71c:	2200      	movs	r2, #0
 800e71e:	711a      	strb	r2, [r3, #4]
    }
 800e720:	bf00      	nop
 800e722:	3708      	adds	r7, #8
 800e724:	46bd      	mov	sp, r7
 800e726:	bd80      	pop	{r7, pc}
 800e728:	08025dcc 	.word	0x08025dcc
 800e72c:	08025dec 	.word	0x08025dec
 800e730:	08025a5c 	.word	0x08025a5c

0800e734 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800e734:	b580      	push	{r7, lr}
 800e736:	af00      	add	r7, sp, #0
 800e738:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800e73c:	2001      	movs	r0, #1
 800e73e:	f7ff fdf9 	bl	800e334 <_Z41__static_initialization_and_destruction_0ii>
 800e742:	bd80      	pop	{r7, pc}

0800e744 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 800e744:	b580      	push	{r7, lr}
 800e746:	af00      	add	r7, sp, #0
 800e748:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800e74c:	2000      	movs	r0, #0
 800e74e:	f7ff fdf1 	bl	800e334 <_Z41__static_initialization_and_destruction_0ii>
 800e752:	bd80      	pop	{r7, pc}

0800e754 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800e754:	8880      	ldrh	r0, [r0, #4]
 800e756:	4770      	bx	lr

0800e758 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800e758:	b570      	push	{r4, r5, r6, lr}
 800e75a:	6803      	ldr	r3, [r0, #0]
 800e75c:	4605      	mov	r5, r0
 800e75e:	460c      	mov	r4, r1
 800e760:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e762:	2100      	movs	r1, #0
 800e764:	4798      	blx	r3
 800e766:	682b      	ldr	r3, [r5, #0]
 800e768:	4606      	mov	r6, r0
 800e76a:	6a1b      	ldr	r3, [r3, #32]
 800e76c:	4628      	mov	r0, r5
 800e76e:	4798      	blx	r3
 800e770:	1ba4      	subs	r4, r4, r6
 800e772:	b2a4      	uxth	r4, r4
 800e774:	fbb4 f0f0 	udiv	r0, r4, r0
 800e778:	bd70      	pop	{r4, r5, r6, pc}

0800e77a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800e77a:	2300      	movs	r3, #0
 800e77c:	8083      	strh	r3, [r0, #4]
 800e77e:	4770      	bx	lr

0800e780 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800e780:	b510      	push	{r4, lr}
 800e782:	6803      	ldr	r3, [r0, #0]
 800e784:	8881      	ldrh	r1, [r0, #4]
 800e786:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e788:	4604      	mov	r4, r0
 800e78a:	4798      	blx	r3
 800e78c:	88a3      	ldrh	r3, [r4, #4]
 800e78e:	3301      	adds	r3, #1
 800e790:	80a3      	strh	r3, [r4, #4]
 800e792:	bd10      	pop	{r4, pc}

0800e794 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800e794:	6803      	ldr	r3, [r0, #0]
 800e796:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800e798:	4718      	bx	r3

0800e79a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800e79a:	4770      	bx	lr

0800e79c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800e79c:	4a02      	ldr	r2, [pc, #8]	@ (800e7a8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800e79e:	6002      	str	r2, [r0, #0]
 800e7a0:	2200      	movs	r2, #0
 800e7a2:	8082      	strh	r2, [r0, #4]
 800e7a4:	4770      	bx	lr
 800e7a6:	bf00      	nop
 800e7a8:	08026b18 	.word	0x08026b18

0800e7ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800e7ac:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800e7ae:	2000      	movs	r0, #0
 800e7b0:	b12b      	cbz	r3, 800e7be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e7b2:	b920      	cbnz	r0, 800e7be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800e7b4:	1a5a      	subs	r2, r3, r1
 800e7b6:	4250      	negs	r0, r2
 800e7b8:	4150      	adcs	r0, r2
 800e7ba:	699b      	ldr	r3, [r3, #24]
 800e7bc:	e7f8      	b.n	800e7b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800e7be:	4770      	bx	lr

0800e7c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800e7c0:	2300      	movs	r3, #0
 800e7c2:	6148      	str	r0, [r1, #20]
 800e7c4:	618b      	str	r3, [r1, #24]
 800e7c6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800e7c8:	b913      	cbnz	r3, 800e7d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800e7ca:	6281      	str	r1, [r0, #40]	@ 0x28
 800e7cc:	4770      	bx	lr
 800e7ce:	4613      	mov	r3, r2
 800e7d0:	699a      	ldr	r2, [r3, #24]
 800e7d2:	2a00      	cmp	r2, #0
 800e7d4:	d1fb      	bne.n	800e7ce <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800e7d6:	6199      	str	r1, [r3, #24]
 800e7d8:	4770      	bx	lr

0800e7da <_ZN8touchgfx9Container9removeAllEv>:
 800e7da:	2200      	movs	r2, #0
 800e7dc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800e7de:	b123      	cbz	r3, 800e7ea <_ZN8touchgfx9Container9removeAllEv+0x10>
 800e7e0:	6999      	ldr	r1, [r3, #24]
 800e7e2:	6281      	str	r1, [r0, #40]	@ 0x28
 800e7e4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800e7e8:	e7f8      	b.n	800e7dc <_ZN8touchgfx9Container9removeAllEv+0x2>
 800e7ea:	4770      	bx	lr

0800e7ec <_ZN8touchgfx9Container6unlinkEv>:
 800e7ec:	2300      	movs	r3, #0
 800e7ee:	6283      	str	r3, [r0, #40]	@ 0x28
 800e7f0:	4770      	bx	lr

0800e7f2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800e7f2:	2200      	movs	r2, #0
 800e7f4:	8002      	strh	r2, [r0, #0]
 800e7f6:	8042      	strh	r2, [r0, #2]
 800e7f8:	8082      	strh	r2, [r0, #4]
 800e7fa:	80c2      	strh	r2, [r0, #6]
 800e7fc:	4770      	bx	lr

0800e7fe <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800e7fe:	b570      	push	{r4, r5, r6, lr}
 800e800:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800e802:	460d      	mov	r5, r1
 800e804:	4616      	mov	r6, r2
 800e806:	b13c      	cbz	r4, 800e818 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800e808:	6823      	ldr	r3, [r4, #0]
 800e80a:	4620      	mov	r0, r4
 800e80c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800e80e:	4632      	mov	r2, r6
 800e810:	4629      	mov	r1, r5
 800e812:	4798      	blx	r3
 800e814:	69a4      	ldr	r4, [r4, #24]
 800e816:	e7f6      	b.n	800e806 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800e818:	bd70      	pop	{r4, r5, r6, pc}

0800e81a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800e81a:	b538      	push	{r3, r4, r5, lr}
 800e81c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800e81e:	460d      	mov	r5, r1
 800e820:	b134      	cbz	r4, 800e830 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800e822:	682b      	ldr	r3, [r5, #0]
 800e824:	4621      	mov	r1, r4
 800e826:	689b      	ldr	r3, [r3, #8]
 800e828:	4628      	mov	r0, r5
 800e82a:	4798      	blx	r3
 800e82c:	69a4      	ldr	r4, [r4, #24]
 800e82e:	e7f7      	b.n	800e820 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800e830:	bd38      	pop	{r3, r4, r5, pc}

0800e832 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800e832:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800e834:	b19b      	cbz	r3, 800e85e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e836:	428b      	cmp	r3, r1
 800e838:	d109      	bne.n	800e84e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800e83a:	699a      	ldr	r2, [r3, #24]
 800e83c:	2100      	movs	r1, #0
 800e83e:	6159      	str	r1, [r3, #20]
 800e840:	6282      	str	r2, [r0, #40]	@ 0x28
 800e842:	b902      	cbnz	r2, 800e846 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800e844:	4770      	bx	lr
 800e846:	6199      	str	r1, [r3, #24]
 800e848:	4770      	bx	lr
 800e84a:	4613      	mov	r3, r2
 800e84c:	b13a      	cbz	r2, 800e85e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800e84e:	699a      	ldr	r2, [r3, #24]
 800e850:	428a      	cmp	r2, r1
 800e852:	d1fa      	bne.n	800e84a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800e854:	698a      	ldr	r2, [r1, #24]
 800e856:	619a      	str	r2, [r3, #24]
 800e858:	2300      	movs	r3, #0
 800e85a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800e85e:	4770      	bx	lr

0800e860 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800e860:	b410      	push	{r4}
 800e862:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800e864:	4604      	mov	r4, r0
 800e866:	b92b      	cbnz	r3, 800e874 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800e868:	6803      	ldr	r3, [r0, #0]
 800e86a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e86e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800e870:	4611      	mov	r1, r2
 800e872:	4718      	bx	r3
 800e874:	b941      	cbnz	r1, 800e888 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800e876:	6193      	str	r3, [r2, #24]
 800e878:	6282      	str	r2, [r0, #40]	@ 0x28
 800e87a:	6154      	str	r4, [r2, #20]
 800e87c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e880:	4770      	bx	lr
 800e882:	4603      	mov	r3, r0
 800e884:	2800      	cmp	r0, #0
 800e886:	d0f9      	beq.n	800e87c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800e888:	4299      	cmp	r1, r3
 800e88a:	6998      	ldr	r0, [r3, #24]
 800e88c:	d1f9      	bne.n	800e882 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800e88e:	6190      	str	r0, [r2, #24]
 800e890:	618a      	str	r2, [r1, #24]
 800e892:	e7f2      	b.n	800e87a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800e894 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800e894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e898:	461f      	mov	r7, r3
 800e89a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800e89e:	460d      	mov	r5, r1
 800e8a0:	4616      	mov	r6, r2
 800e8a2:	b103      	cbz	r3, 800e8a6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800e8a4:	6038      	str	r0, [r7, #0]
 800e8a6:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800e8a8:	b314      	cbz	r4, 800e8f0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800e8aa:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800e8ae:	b1eb      	cbz	r3, 800e8ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e8b0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e8b4:	428d      	cmp	r5, r1
 800e8b6:	db19      	blt.n	800e8ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e8b8:	8923      	ldrh	r3, [r4, #8]
 800e8ba:	b289      	uxth	r1, r1
 800e8bc:	440b      	add	r3, r1
 800e8be:	b21b      	sxth	r3, r3
 800e8c0:	429d      	cmp	r5, r3
 800e8c2:	da13      	bge.n	800e8ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e8c4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800e8c8:	4296      	cmp	r6, r2
 800e8ca:	db0f      	blt.n	800e8ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e8cc:	8963      	ldrh	r3, [r4, #10]
 800e8ce:	b292      	uxth	r2, r2
 800e8d0:	4413      	add	r3, r2
 800e8d2:	b21b      	sxth	r3, r3
 800e8d4:	429e      	cmp	r6, r3
 800e8d6:	da09      	bge.n	800e8ec <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800e8d8:	6823      	ldr	r3, [r4, #0]
 800e8da:	1ab2      	subs	r2, r6, r2
 800e8dc:	1a69      	subs	r1, r5, r1
 800e8de:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800e8e2:	b212      	sxth	r2, r2
 800e8e4:	463b      	mov	r3, r7
 800e8e6:	b209      	sxth	r1, r1
 800e8e8:	4620      	mov	r0, r4
 800e8ea:	47c0      	blx	r8
 800e8ec:	69a4      	ldr	r4, [r4, #24]
 800e8ee:	e7db      	b.n	800e8a8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800e8f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e8f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800e8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8f8:	4c6e      	ldr	r4, [pc, #440]	@ (800eab4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800e8fa:	b0a1      	sub	sp, #132	@ 0x84
 800e8fc:	6824      	ldr	r4, [r4, #0]
 800e8fe:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800e900:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800e904:	9303      	str	r3, [sp, #12]
 800e906:	2400      	movs	r4, #0
 800e908:	802c      	strh	r4, [r5, #0]
 800e90a:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800e90c:	802c      	strh	r4, [r5, #0]
 800e90e:	601c      	str	r4, [r3, #0]
 800e910:	4606      	mov	r6, r0
 800e912:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800e916:	f7ff ffbd 	bl	800e894 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800e91a:	f1b9 0f03 	cmp.w	r9, #3
 800e91e:	f340 80c2 	ble.w	800eaa6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800e922:	4631      	mov	r1, r6
 800e924:	a80c      	add	r0, sp, #48	@ 0x30
 800e926:	f004 fd2d 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e92a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800e92e:	9306      	str	r3, [sp, #24]
 800e930:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800e934:	9307      	str	r3, [sp, #28]
 800e936:	9b03      	ldr	r3, [sp, #12]
 800e938:	f8d3 a000 	ldr.w	sl, [r3]
 800e93c:	f1ba 0f00 	cmp.w	sl, #0
 800e940:	f000 80b4 	beq.w	800eaac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800e944:	4651      	mov	r1, sl
 800e946:	a810      	add	r0, sp, #64	@ 0x40
 800e948:	f004 fd1c 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e94c:	9b01      	ldr	r3, [sp, #4]
 800e94e:	9a06      	ldr	r2, [sp, #24]
 800e950:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800e954:	189d      	adds	r5, r3, r2
 800e956:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800e95a:	9a07      	ldr	r2, [sp, #28]
 800e95c:	2002      	movs	r0, #2
 800e95e:	fb91 f1f0 	sdiv	r1, r1, r0
 800e962:	4419      	add	r1, r3
 800e964:	1a6d      	subs	r5, r5, r1
 800e966:	9b02      	ldr	r3, [sp, #8]
 800e968:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800e96c:	4413      	add	r3, r2
 800e96e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800e972:	fb92 f2f0 	sdiv	r2, r2, r0
 800e976:	440a      	add	r2, r1
 800e978:	1a9b      	subs	r3, r3, r2
 800e97a:	435b      	muls	r3, r3
 800e97c:	fb05 3505 	mla	r5, r5, r5, r3
 800e980:	4f4d      	ldr	r7, [pc, #308]	@ (800eab8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800e982:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e984:	ac10      	add	r4, sp, #64	@ 0x40
 800e986:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e988:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e98a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e98c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e98e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800e990:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800e994:	f1b9 0f0c 	cmp.w	r9, #12
 800e998:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800e99c:	f04f 0303 	mov.w	r3, #3
 800e9a0:	bfc8      	it	gt
 800e9a2:	4698      	movgt	r8, r3
 800e9a4:	f8cd 9000 	str.w	r9, [sp]
 800e9a8:	f04f 0400 	mov.w	r4, #0
 800e9ac:	bfdc      	itt	le
 800e9ae:	f109 32ff 	addle.w	r2, r9, #4294967295
 800e9b2:	fb92 f8f3 	sdivle	r8, r2, r3
 800e9b6:	1c63      	adds	r3, r4, #1
 800e9b8:	aa10      	add	r2, sp, #64	@ 0x40
 800e9ba:	f004 0401 	and.w	r4, r4, #1
 800e9be:	9308      	str	r3, [sp, #32]
 800e9c0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800e9c4:	9b00      	ldr	r3, [sp, #0]
 800e9c6:	fb93 f3f8 	sdiv	r3, r3, r8
 800e9ca:	b29b      	uxth	r3, r3
 800e9cc:	3404      	adds	r4, #4
 800e9ce:	f04f 0b00 	mov.w	fp, #0
 800e9d2:	9304      	str	r3, [sp, #16]
 800e9d4:	9a04      	ldr	r2, [sp, #16]
 800e9d6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800e9da:	fb13 f302 	smulbb	r3, r3, r2
 800e9de:	9a01      	ldr	r2, [sp, #4]
 800e9e0:	b29b      	uxth	r3, r3
 800e9e2:	1899      	adds	r1, r3, r2
 800e9e4:	9305      	str	r3, [sp, #20]
 800e9e6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800e9ea:	b209      	sxth	r1, r1
 800e9ec:	4299      	cmp	r1, r3
 800e9ee:	db4d      	blt.n	800ea8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e9f0:	8932      	ldrh	r2, [r6, #8]
 800e9f2:	4413      	add	r3, r2
 800e9f4:	b21b      	sxth	r3, r3
 800e9f6:	4299      	cmp	r1, r3
 800e9f8:	da48      	bge.n	800ea8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800e9fa:	9b04      	ldr	r3, [sp, #16]
 800e9fc:	6827      	ldr	r7, [r4, #0]
 800e9fe:	fb17 f703 	smulbb	r7, r7, r3
 800ea02:	9b02      	ldr	r3, [sp, #8]
 800ea04:	b2bf      	uxth	r7, r7
 800ea06:	18fa      	adds	r2, r7, r3
 800ea08:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ea0c:	b212      	sxth	r2, r2
 800ea0e:	429a      	cmp	r2, r3
 800ea10:	db3c      	blt.n	800ea8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ea12:	8970      	ldrh	r0, [r6, #10]
 800ea14:	4403      	add	r3, r0
 800ea16:	b21b      	sxth	r3, r3
 800ea18:	429a      	cmp	r2, r3
 800ea1a:	da37      	bge.n	800ea8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ea1c:	2300      	movs	r3, #0
 800ea1e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ea20:	4630      	mov	r0, r6
 800ea22:	ab0b      	add	r3, sp, #44	@ 0x2c
 800ea24:	f7ff ff36 	bl	800e894 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ea28:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800ea2a:	b37a      	cbz	r2, 800ea8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ea2c:	4552      	cmp	r2, sl
 800ea2e:	d02d      	beq.n	800ea8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ea30:	4611      	mov	r1, r2
 800ea32:	a80e      	add	r0, sp, #56	@ 0x38
 800ea34:	9209      	str	r2, [sp, #36]	@ 0x24
 800ea36:	f004 fca5 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ea3a:	9a06      	ldr	r2, [sp, #24]
 800ea3c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800ea40:	9b01      	ldr	r3, [sp, #4]
 800ea42:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800ea46:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800ea4a:	4413      	add	r3, r2
 800ea4c:	f04f 0e02 	mov.w	lr, #2
 800ea50:	fb91 f1fe 	sdiv	r1, r1, lr
 800ea54:	4401      	add	r1, r0
 800ea56:	1a58      	subs	r0, r3, r1
 800ea58:	9a07      	ldr	r2, [sp, #28]
 800ea5a:	9b02      	ldr	r3, [sp, #8]
 800ea5c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800ea60:	fb9c fcfe 	sdiv	ip, ip, lr
 800ea64:	4413      	add	r3, r2
 800ea66:	448c      	add	ip, r1
 800ea68:	eba3 030c 	sub.w	r3, r3, ip
 800ea6c:	435b      	muls	r3, r3
 800ea6e:	fb00 3300 	mla	r3, r0, r0, r3
 800ea72:	42ab      	cmp	r3, r5
 800ea74:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800ea76:	d208      	bcs.n	800ea8a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ea78:	9803      	ldr	r0, [sp, #12]
 800ea7a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800ea7c:	6001      	str	r1, [r0, #0]
 800ea7e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800ea80:	9805      	ldr	r0, [sp, #20]
 800ea82:	8008      	strh	r0, [r1, #0]
 800ea84:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800ea86:	461d      	mov	r5, r3
 800ea88:	800f      	strh	r7, [r1, #0]
 800ea8a:	4692      	mov	sl, r2
 800ea8c:	f10b 0b01 	add.w	fp, fp, #1
 800ea90:	f1bb 0f04 	cmp.w	fp, #4
 800ea94:	f104 0408 	add.w	r4, r4, #8
 800ea98:	d19c      	bne.n	800e9d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ea9a:	9b00      	ldr	r3, [sp, #0]
 800ea9c:	9c08      	ldr	r4, [sp, #32]
 800ea9e:	444b      	add	r3, r9
 800eaa0:	4544      	cmp	r4, r8
 800eaa2:	9300      	str	r3, [sp, #0]
 800eaa4:	d187      	bne.n	800e9b6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800eaa6:	b021      	add	sp, #132	@ 0x84
 800eaa8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eaac:	f04f 35ff 	mov.w	r5, #4294967295
 800eab0:	e766      	b.n	800e980 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800eab2:	bf00      	nop
 800eab4:	20002f34 	.word	0x20002f34
 800eab8:	08025ebc 	.word	0x08025ebc

0800eabc <_ZN8touchgfx4RectaNERKS0_>:
 800eabc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eac0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800eac4:	888c      	ldrh	r4, [r1, #4]
 800eac6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800eaca:	443c      	add	r4, r7
 800eacc:	b2a4      	uxth	r4, r4
 800eace:	fa0f f884 	sxth.w	r8, r4
 800ead2:	45c1      	cmp	r9, r8
 800ead4:	da2f      	bge.n	800eb36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ead6:	8882      	ldrh	r2, [r0, #4]
 800ead8:	444a      	add	r2, r9
 800eada:	b292      	uxth	r2, r2
 800eadc:	fa0f fe82 	sxth.w	lr, r2
 800eae0:	4577      	cmp	r7, lr
 800eae2:	da28      	bge.n	800eb36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800eae4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800eae8:	88cb      	ldrh	r3, [r1, #6]
 800eaea:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800eaee:	442b      	add	r3, r5
 800eaf0:	b21b      	sxth	r3, r3
 800eaf2:	429e      	cmp	r6, r3
 800eaf4:	da1f      	bge.n	800eb36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800eaf6:	88c3      	ldrh	r3, [r0, #6]
 800eaf8:	4433      	add	r3, r6
 800eafa:	b29b      	uxth	r3, r3
 800eafc:	fa0f fc83 	sxth.w	ip, r3
 800eb00:	4565      	cmp	r5, ip
 800eb02:	da18      	bge.n	800eb36 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800eb04:	454f      	cmp	r7, r9
 800eb06:	bfb8      	it	lt
 800eb08:	464f      	movlt	r7, r9
 800eb0a:	42b5      	cmp	r5, r6
 800eb0c:	bfb8      	it	lt
 800eb0e:	4635      	movlt	r5, r6
 800eb10:	45f0      	cmp	r8, lr
 800eb12:	bfd8      	it	le
 800eb14:	4622      	movle	r2, r4
 800eb16:	1bd2      	subs	r2, r2, r7
 800eb18:	8082      	strh	r2, [r0, #4]
 800eb1a:	884a      	ldrh	r2, [r1, #2]
 800eb1c:	88c9      	ldrh	r1, [r1, #6]
 800eb1e:	8007      	strh	r7, [r0, #0]
 800eb20:	440a      	add	r2, r1
 800eb22:	b292      	uxth	r2, r2
 800eb24:	b211      	sxth	r1, r2
 800eb26:	458c      	cmp	ip, r1
 800eb28:	bfa8      	it	ge
 800eb2a:	4613      	movge	r3, r2
 800eb2c:	1b5b      	subs	r3, r3, r5
 800eb2e:	80c3      	strh	r3, [r0, #6]
 800eb30:	8045      	strh	r5, [r0, #2]
 800eb32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800eb36:	2300      	movs	r3, #0
 800eb38:	8003      	strh	r3, [r0, #0]
 800eb3a:	8043      	strh	r3, [r0, #2]
 800eb3c:	8083      	strh	r3, [r0, #4]
 800eb3e:	80c3      	strh	r3, [r0, #6]
 800eb40:	e7f7      	b.n	800eb32 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800eb42:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800eb46:	2b00      	cmp	r3, #0
 800eb48:	dd06      	ble.n	800eb58 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800eb4a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800eb4e:	2800      	cmp	r0, #0
 800eb50:	bfcc      	ite	gt
 800eb52:	2000      	movgt	r0, #0
 800eb54:	2001      	movle	r0, #1
 800eb56:	4770      	bx	lr
 800eb58:	2001      	movs	r0, #1
 800eb5a:	4770      	bx	lr

0800eb5c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800eb5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb60:	2300      	movs	r3, #0
 800eb62:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800eb64:	8003      	strh	r3, [r0, #0]
 800eb66:	4604      	mov	r4, r0
 800eb68:	8043      	strh	r3, [r0, #2]
 800eb6a:	8083      	strh	r3, [r0, #4]
 800eb6c:	80c3      	strh	r3, [r0, #6]
 800eb6e:	2d00      	cmp	r5, #0
 800eb70:	d040      	beq.n	800ebf4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800eb72:	1d28      	adds	r0, r5, #4
 800eb74:	f7ff ffe5 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eb78:	b988      	cbnz	r0, 800eb9e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800eb7a:	4620      	mov	r0, r4
 800eb7c:	f7ff ffe1 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eb80:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800eb84:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800eb88:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800eb8c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800eb90:	b138      	cbz	r0, 800eba2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800eb92:	8022      	strh	r2, [r4, #0]
 800eb94:	8063      	strh	r3, [r4, #2]
 800eb96:	f8a4 e004 	strh.w	lr, [r4, #4]
 800eb9a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800eb9e:	69ad      	ldr	r5, [r5, #24]
 800eba0:	e7e5      	b.n	800eb6e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800eba2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800eba6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ebaa:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ebae:	4290      	cmp	r0, r2
 800ebb0:	4607      	mov	r7, r0
 800ebb2:	bfa8      	it	ge
 800ebb4:	4617      	movge	r7, r2
 800ebb6:	4472      	add	r2, lr
 800ebb8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ebbc:	8027      	strh	r7, [r4, #0]
 800ebbe:	4299      	cmp	r1, r3
 800ebc0:	460e      	mov	r6, r1
 800ebc2:	4440      	add	r0, r8
 800ebc4:	bfa8      	it	ge
 800ebc6:	461e      	movge	r6, r3
 800ebc8:	4471      	add	r1, lr
 800ebca:	4463      	add	r3, ip
 800ebcc:	b200      	sxth	r0, r0
 800ebce:	b212      	sxth	r2, r2
 800ebd0:	b209      	sxth	r1, r1
 800ebd2:	b21b      	sxth	r3, r3
 800ebd4:	4290      	cmp	r0, r2
 800ebd6:	bfac      	ite	ge
 800ebd8:	ebc7 0200 	rsbge	r2, r7, r0
 800ebdc:	ebc7 0202 	rsblt	r2, r7, r2
 800ebe0:	4299      	cmp	r1, r3
 800ebe2:	bfac      	ite	ge
 800ebe4:	ebc6 0301 	rsbge	r3, r6, r1
 800ebe8:	ebc6 0303 	rsblt	r3, r6, r3
 800ebec:	8066      	strh	r6, [r4, #2]
 800ebee:	80a2      	strh	r2, [r4, #4]
 800ebf0:	80e3      	strh	r3, [r4, #6]
 800ebf2:	e7d4      	b.n	800eb9e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ebf4:	4620      	mov	r0, r4
 800ebf6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ebfa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ebfa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ebfe:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ec02:	b383      	cbz	r3, 800ec66 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ec04:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ec06:	b374      	cbz	r4, 800ec66 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ec08:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ec0c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ec10:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ec14:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ec18:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ec1c:	b303      	cbz	r3, 800ec60 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ec1e:	4668      	mov	r0, sp
 800ec20:	1d21      	adds	r1, r4, #4
 800ec22:	f8ad 5000 	strh.w	r5, [sp]
 800ec26:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ec2a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ec2e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ec32:	f7ff ff43 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 800ec36:	4668      	mov	r0, sp
 800ec38:	f7ff ff83 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec3c:	b980      	cbnz	r0, 800ec60 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ec3e:	f8bd 3000 	ldrh.w	r3, [sp]
 800ec42:	88a2      	ldrh	r2, [r4, #4]
 800ec44:	1a9b      	subs	r3, r3, r2
 800ec46:	f8ad 3000 	strh.w	r3, [sp]
 800ec4a:	88e2      	ldrh	r2, [r4, #6]
 800ec4c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ec50:	1a9b      	subs	r3, r3, r2
 800ec52:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ec56:	6823      	ldr	r3, [r4, #0]
 800ec58:	4669      	mov	r1, sp
 800ec5a:	689b      	ldr	r3, [r3, #8]
 800ec5c:	4620      	mov	r0, r4
 800ec5e:	4798      	blx	r3
 800ec60:	69a4      	ldr	r4, [r4, #24]
 800ec62:	2c00      	cmp	r4, #0
 800ec64:	d1d8      	bne.n	800ec18 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ec66:	b002      	add	sp, #8
 800ec68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ec6c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ec6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ec6e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800ec72:	460d      	mov	r5, r1
 800ec74:	4616      	mov	r6, r2
 800ec76:	b323      	cbz	r3, 800ecc2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ec78:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800ec7a:	b314      	cbz	r4, 800ecc2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ec7c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ec80:	b1eb      	cbz	r3, 800ecbe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ec82:	6828      	ldr	r0, [r5, #0]
 800ec84:	6869      	ldr	r1, [r5, #4]
 800ec86:	466b      	mov	r3, sp
 800ec88:	c303      	stmia	r3!, {r0, r1}
 800ec8a:	4668      	mov	r0, sp
 800ec8c:	1d21      	adds	r1, r4, #4
 800ec8e:	f7ff ff15 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 800ec92:	4668      	mov	r0, sp
 800ec94:	f7ff ff55 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ec98:	b988      	cbnz	r0, 800ecbe <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ec9a:	f8bd 3000 	ldrh.w	r3, [sp]
 800ec9e:	88a2      	ldrh	r2, [r4, #4]
 800eca0:	1a9b      	subs	r3, r3, r2
 800eca2:	f8ad 3000 	strh.w	r3, [sp]
 800eca6:	88e2      	ldrh	r2, [r4, #6]
 800eca8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ecac:	1a9b      	subs	r3, r3, r2
 800ecae:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ecb2:	6823      	ldr	r3, [r4, #0]
 800ecb4:	4632      	mov	r2, r6
 800ecb6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800ecb8:	4669      	mov	r1, sp
 800ecba:	4620      	mov	r0, r4
 800ecbc:	4798      	blx	r3
 800ecbe:	69a4      	ldr	r4, [r4, #24]
 800ecc0:	e7db      	b.n	800ec7a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800ecc2:	b002      	add	sp, #8
 800ecc4:	bd70      	pop	{r4, r5, r6, pc}

0800ecc6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800ecc6:	b513      	push	{r0, r1, r4, lr}
 800ecc8:	6803      	ldr	r3, [r0, #0]
 800ecca:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800ecce:	2300      	movs	r3, #0
 800ecd0:	e9cd 3300 	strd	r3, r3, [sp]
 800ecd4:	466b      	mov	r3, sp
 800ecd6:	47a0      	blx	r4
 800ecd8:	b002      	add	sp, #8
 800ecda:	bd10      	pop	{r4, pc}

0800ecdc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800ecdc:	2301      	movs	r3, #1
 800ecde:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800ece2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ece6:	4770      	bx	lr

0800ece8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800ece8:	2301      	movs	r3, #1
 800ecea:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800ecee:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800ecf2:	4770      	bx	lr

0800ecf4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800ecf4:	6843      	ldr	r3, [r0, #4]
 800ecf6:	2201      	movs	r2, #1
 800ecf8:	725a      	strb	r2, [r3, #9]
 800ecfa:	6840      	ldr	r0, [r0, #4]
 800ecfc:	6803      	ldr	r3, [r0, #0]
 800ecfe:	691b      	ldr	r3, [r3, #16]
 800ed00:	4718      	bx	r3

0800ed02 <_ZN8touchgfx3HAL8flushDMAEv>:
 800ed02:	6840      	ldr	r0, [r0, #4]
 800ed04:	6803      	ldr	r3, [r0, #0]
 800ed06:	689b      	ldr	r3, [r3, #8]
 800ed08:	4718      	bx	r3

0800ed0a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800ed0a:	b530      	push	{r4, r5, lr}
 800ed0c:	b08b      	sub	sp, #44	@ 0x2c
 800ed0e:	6804      	ldr	r4, [r0, #0]
 800ed10:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800ed14:	9509      	str	r5, [sp, #36]	@ 0x24
 800ed16:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800ed1a:	9508      	str	r5, [sp, #32]
 800ed1c:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800ed20:	9507      	str	r5, [sp, #28]
 800ed22:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800ed26:	9506      	str	r5, [sp, #24]
 800ed28:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800ed2c:	9505      	str	r5, [sp, #20]
 800ed2e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800ed32:	9504      	str	r5, [sp, #16]
 800ed34:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800ed38:	9503      	str	r5, [sp, #12]
 800ed3a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800ed3e:	9502      	str	r5, [sp, #8]
 800ed40:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800ed44:	e9cd 3500 	strd	r3, r5, [sp]
 800ed48:	4613      	mov	r3, r2
 800ed4a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800ed4c:	2200      	movs	r2, #0
 800ed4e:	47a0      	blx	r4
 800ed50:	b00b      	add	sp, #44	@ 0x2c
 800ed52:	bd30      	pop	{r4, r5, pc}

0800ed54 <_ZN8touchgfx3HAL10beginFrameEv>:
 800ed54:	4b04      	ldr	r3, [pc, #16]	@ (800ed68 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800ed56:	781b      	ldrb	r3, [r3, #0]
 800ed58:	b123      	cbz	r3, 800ed64 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800ed5a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800ed5e:	f080 0001 	eor.w	r0, r0, #1
 800ed62:	4770      	bx	lr
 800ed64:	2001      	movs	r0, #1
 800ed66:	4770      	bx	lr
 800ed68:	20002f32 	.word	0x20002f32

0800ed6c <_ZN8touchgfx3HAL8endFrameEv>:
 800ed6c:	b510      	push	{r4, lr}
 800ed6e:	4604      	mov	r4, r0
 800ed70:	6840      	ldr	r0, [r0, #4]
 800ed72:	6803      	ldr	r3, [r0, #0]
 800ed74:	689b      	ldr	r3, [r3, #8]
 800ed76:	4798      	blx	r3
 800ed78:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800ed7c:	b113      	cbz	r3, 800ed84 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800ed7e:	2301      	movs	r3, #1
 800ed80:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800ed84:	bd10      	pop	{r4, pc}

0800ed86 <_ZN8touchgfx3HAL10initializeEv>:
 800ed86:	b510      	push	{r4, lr}
 800ed88:	4604      	mov	r4, r0
 800ed8a:	f7fe f81b 	bl	800cdc4 <_ZN8touchgfx10OSWrappers10initializeEv>
 800ed8e:	f7fd fd61 	bl	800c854 <_ZN8touchgfx4GPIO4initEv>
 800ed92:	6860      	ldr	r0, [r4, #4]
 800ed94:	6803      	ldr	r3, [r0, #0]
 800ed96:	68db      	ldr	r3, [r3, #12]
 800ed98:	4798      	blx	r3
 800ed9a:	68e0      	ldr	r0, [r4, #12]
 800ed9c:	6803      	ldr	r3, [r0, #0]
 800ed9e:	689b      	ldr	r3, [r3, #8]
 800eda0:	4798      	blx	r3
 800eda2:	6823      	ldr	r3, [r4, #0]
 800eda4:	4620      	mov	r0, r4
 800eda6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800eda8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800edac:	4718      	bx	r3

0800edae <_ZN8touchgfx3HAL9taskEntryEv>:
 800edae:	b508      	push	{r3, lr}
 800edb0:	6803      	ldr	r3, [r0, #0]
 800edb2:	4604      	mov	r4, r0
 800edb4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800edb8:	4798      	blx	r3
 800edba:	6823      	ldr	r3, [r4, #0]
 800edbc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800edbe:	4620      	mov	r0, r4
 800edc0:	4798      	blx	r3
 800edc2:	f7fe f873 	bl	800ceac <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800edc6:	6823      	ldr	r3, [r4, #0]
 800edc8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800edca:	e7f8      	b.n	800edbe <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800edcc <_ZN8touchgfx3HAL4tickEv>:
 800edcc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800edce:	6803      	ldr	r3, [r0, #0]
 800edd0:	4d5b      	ldr	r5, [pc, #364]	@ (800ef40 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800edd2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800edd6:	4604      	mov	r4, r0
 800edd8:	4798      	blx	r3
 800edda:	2800      	cmp	r0, #0
 800eddc:	f000 8095 	beq.w	800ef0a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800ede0:	2001      	movs	r0, #1
 800ede2:	f7fd fd3f 	bl	800c864 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ede6:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800edea:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800edee:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800edf2:	2600      	movs	r6, #0
 800edf4:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800edf8:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800edfc:	b133      	cbz	r3, 800ee0c <_ZN8touchgfx3HAL4tickEv+0x40>
 800edfe:	6823      	ldr	r3, [r4, #0]
 800ee00:	4620      	mov	r0, r4
 800ee02:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800ee06:	4798      	blx	r3
 800ee08:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800ee0c:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800ee10:	6862      	ldr	r2, [r4, #4]
 800ee12:	f083 0301 	eor.w	r3, r3, #1
 800ee16:	7253      	strb	r3, [r2, #9]
 800ee18:	2601      	movs	r6, #1
 800ee1a:	702e      	strb	r6, [r5, #0]
 800ee1c:	f003 f9a0 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 800ee20:	6803      	ldr	r3, [r0, #0]
 800ee22:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800ee24:	4798      	blx	r3
 800ee26:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ee2a:	b90b      	cbnz	r3, 800ee30 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ee2c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800ee30:	f003 f996 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 800ee34:	6803      	ldr	r3, [r0, #0]
 800ee36:	695b      	ldr	r3, [r3, #20]
 800ee38:	4798      	blx	r3
 800ee3a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800ee3c:	6803      	ldr	r3, [r0, #0]
 800ee3e:	691b      	ldr	r3, [r3, #16]
 800ee40:	4798      	blx	r3
 800ee42:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800ee46:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800ee4a:	3b01      	subs	r3, #1
 800ee4c:	b2db      	uxtb	r3, r3
 800ee4e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800ee52:	b10a      	cbz	r2, 800ee58 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800ee54:	2b00      	cmp	r3, #0
 800ee56:	d1eb      	bne.n	800ee30 <_ZN8touchgfx3HAL4tickEv+0x64>
 800ee58:	4a3a      	ldr	r2, [pc, #232]	@ (800ef44 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800ee5a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800ee5e:	7813      	ldrb	r3, [r2, #0]
 800ee60:	3301      	adds	r3, #1
 800ee62:	b25b      	sxtb	r3, r3
 800ee64:	4299      	cmp	r1, r3
 800ee66:	7013      	strb	r3, [r2, #0]
 800ee68:	dc10      	bgt.n	800ee8c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ee6a:	68e0      	ldr	r0, [r4, #12]
 800ee6c:	2300      	movs	r3, #0
 800ee6e:	7013      	strb	r3, [r2, #0]
 800ee70:	6803      	ldr	r3, [r0, #0]
 800ee72:	aa03      	add	r2, sp, #12
 800ee74:	68db      	ldr	r3, [r3, #12]
 800ee76:	a902      	add	r1, sp, #8
 800ee78:	4798      	blx	r3
 800ee7a:	6823      	ldr	r3, [r4, #0]
 800ee7c:	2800      	cmp	r0, #0
 800ee7e:	d050      	beq.n	800ef22 <_ZN8touchgfx3HAL4tickEv+0x156>
 800ee80:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800ee84:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800ee88:	4620      	mov	r0, r4
 800ee8a:	4798      	blx	r3
 800ee8c:	6960      	ldr	r0, [r4, #20]
 800ee8e:	2300      	movs	r3, #0
 800ee90:	f88d 3007 	strb.w	r3, [sp, #7]
 800ee94:	b158      	cbz	r0, 800eeae <_ZN8touchgfx3HAL4tickEv+0xe2>
 800ee96:	6803      	ldr	r3, [r0, #0]
 800ee98:	f10d 0107 	add.w	r1, sp, #7
 800ee9c:	68db      	ldr	r3, [r3, #12]
 800ee9e:	4798      	blx	r3
 800eea0:	b128      	cbz	r0, 800eeae <_ZN8touchgfx3HAL4tickEv+0xe2>
 800eea2:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800eea4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800eea8:	6803      	ldr	r3, [r0, #0]
 800eeaa:	68db      	ldr	r3, [r3, #12]
 800eeac:	4798      	blx	r3
 800eeae:	f104 001c 	add.w	r0, r4, #28
 800eeb2:	f014 fdf9 	bl	8023aa8 <_ZN8touchgfx8Gestures4tickEv>
 800eeb6:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800eeba:	b30b      	cbz	r3, 800ef00 <_ZN8touchgfx3HAL4tickEv+0x134>
 800eebc:	6920      	ldr	r0, [r4, #16]
 800eebe:	6803      	ldr	r3, [r0, #0]
 800eec0:	691b      	ldr	r3, [r3, #16]
 800eec2:	4798      	blx	r3
 800eec4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800eec6:	4606      	mov	r6, r0
 800eec8:	b903      	cbnz	r3, 800eecc <_ZN8touchgfx3HAL4tickEv+0x100>
 800eeca:	6760      	str	r0, [r4, #116]	@ 0x74
 800eecc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800eece:	4a1e      	ldr	r2, [pc, #120]	@ (800ef48 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800eed0:	1af3      	subs	r3, r6, r3
 800eed2:	4293      	cmp	r3, r2
 800eed4:	d914      	bls.n	800ef00 <_ZN8touchgfx3HAL4tickEv+0x134>
 800eed6:	6920      	ldr	r0, [r4, #16]
 800eed8:	6803      	ldr	r3, [r0, #0]
 800eeda:	699b      	ldr	r3, [r3, #24]
 800eedc:	4798      	blx	r3
 800eede:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800eee0:	2264      	movs	r2, #100	@ 0x64
 800eee2:	1af3      	subs	r3, r6, r3
 800eee4:	fbb3 f3f2 	udiv	r3, r3, r2
 800eee8:	fbb0 f0f3 	udiv	r0, r0, r3
 800eeec:	2800      	cmp	r0, #0
 800eeee:	dc1d      	bgt.n	800ef2c <_ZN8touchgfx3HAL4tickEv+0x160>
 800eef0:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800eef4:	6920      	ldr	r0, [r4, #16]
 800eef6:	6803      	ldr	r3, [r0, #0]
 800eef8:	2100      	movs	r1, #0
 800eefa:	69db      	ldr	r3, [r3, #28]
 800eefc:	4798      	blx	r3
 800eefe:	6766      	str	r6, [r4, #116]	@ 0x74
 800ef00:	f003 f92e 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 800ef04:	6803      	ldr	r3, [r0, #0]
 800ef06:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ef08:	4798      	blx	r3
 800ef0a:	6823      	ldr	r3, [r4, #0]
 800ef0c:	4620      	mov	r0, r4
 800ef0e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800ef12:	4798      	blx	r3
 800ef14:	2001      	movs	r0, #1
 800ef16:	f7fd fcc1 	bl	800c89c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ef1a:	2300      	movs	r3, #0
 800ef1c:	702b      	strb	r3, [r5, #0]
 800ef1e:	b004      	add	sp, #16
 800ef20:	bd70      	pop	{r4, r5, r6, pc}
 800ef22:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800ef26:	4620      	mov	r0, r4
 800ef28:	4798      	blx	r3
 800ef2a:	e7af      	b.n	800ee8c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800ef2c:	2863      	cmp	r0, #99	@ 0x63
 800ef2e:	bfcb      	itete	gt
 800ef30:	2300      	movgt	r3, #0
 800ef32:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800ef36:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800ef3a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800ef3e:	e7d9      	b.n	800eef4 <_ZN8touchgfx3HAL4tickEv+0x128>
 800ef40:	20002f38 	.word	0x20002f38
 800ef44:	20002f39 	.word	0x20002f39
 800ef48:	05f5e100 	.word	0x05f5e100

0800ef4c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800ef4c:	b510      	push	{r4, lr}
 800ef4e:	4604      	mov	r4, r0
 800ef50:	f7fd ff60 	bl	800ce14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800ef54:	6863      	ldr	r3, [r4, #4]
 800ef56:	2200      	movs	r2, #0
 800ef58:	729a      	strb	r2, [r3, #10]
 800ef5a:	bd10      	pop	{r4, pc}

0800ef5c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ef5c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800ef5e:	301c      	adds	r0, #28
 800ef60:	f014 bda0 	b.w	8023aa4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ef64 <_ZN8touchgfx3HAL5touchEll>:
 800ef64:	b530      	push	{r4, r5, lr}
 800ef66:	b087      	sub	sp, #28
 800ef68:	4604      	mov	r4, r0
 800ef6a:	a804      	add	r0, sp, #16
 800ef6c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ef70:	f002 fee8 	bl	8011d44 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ef74:	9b04      	ldr	r3, [sp, #16]
 800ef76:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ef7a:	a906      	add	r1, sp, #24
 800ef7c:	9b05      	ldr	r3, [sp, #20]
 800ef7e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ef82:	a803      	add	r0, sp, #12
 800ef84:	f002 ff30 	bl	8011de8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ef88:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800ef8c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ef90:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ef94:	f104 001c 	add.w	r0, r4, #28
 800ef98:	b189      	cbz	r1, 800efbe <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ef9a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800ef9e:	9300      	str	r3, [sp, #0]
 800efa0:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800efa4:	4613      	mov	r3, r2
 800efa6:	462a      	mov	r2, r5
 800efa8:	f014 fd8c 	bl	8023ac4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800efac:	b128      	cbz	r0, 800efba <_ZN8touchgfx3HAL5touchEll+0x56>
 800efae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800efb2:	6623      	str	r3, [r4, #96]	@ 0x60
 800efb4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800efb8:	6663      	str	r3, [r4, #100]	@ 0x64
 800efba:	b007      	add	sp, #28
 800efbc:	bd30      	pop	{r4, r5, pc}
 800efbe:	f014 fdc1 	bl	8023b44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800efc2:	2301      	movs	r3, #1
 800efc4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800efc8:	e7f1      	b.n	800efae <_ZN8touchgfx3HAL5touchEll+0x4a>

0800efca <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800efca:	b510      	push	{r4, lr}
 800efcc:	2b00      	cmp	r3, #0
 800efce:	d046      	beq.n	800f05e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800efd0:	ea81 0002 	eor.w	r0, r1, r2
 800efd4:	07c4      	lsls	r4, r0, #31
 800efd6:	d508      	bpl.n	800efea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800efd8:	440b      	add	r3, r1
 800efda:	3a01      	subs	r2, #1
 800efdc:	428b      	cmp	r3, r1
 800efde:	d93e      	bls.n	800f05e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800efe0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800efe4:	f801 0b01 	strb.w	r0, [r1], #1
 800efe8:	e7f8      	b.n	800efdc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800efea:	07d0      	lsls	r0, r2, #31
 800efec:	bf42      	ittt	mi
 800efee:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800eff2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800eff6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800effa:	2b01      	cmp	r3, #1
 800effc:	d911      	bls.n	800f022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800effe:	ea81 0402 	eor.w	r4, r1, r2
 800f002:	07a4      	lsls	r4, r4, #30
 800f004:	4610      	mov	r0, r2
 800f006:	d022      	beq.n	800f04e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800f008:	f023 0401 	bic.w	r4, r3, #1
 800f00c:	440c      	add	r4, r1
 800f00e:	428c      	cmp	r4, r1
 800f010:	4602      	mov	r2, r0
 800f012:	d904      	bls.n	800f01e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800f014:	8812      	ldrh	r2, [r2, #0]
 800f016:	f821 2b02 	strh.w	r2, [r1], #2
 800f01a:	3002      	adds	r0, #2
 800f01c:	e7f7      	b.n	800f00e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800f01e:	f003 0301 	and.w	r3, r3, #1
 800f022:	f023 0003 	bic.w	r0, r3, #3
 800f026:	4408      	add	r0, r1
 800f028:	4288      	cmp	r0, r1
 800f02a:	4614      	mov	r4, r2
 800f02c:	d904      	bls.n	800f038 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800f02e:	6824      	ldr	r4, [r4, #0]
 800f030:	f841 4b04 	str.w	r4, [r1], #4
 800f034:	3204      	adds	r2, #4
 800f036:	e7f7      	b.n	800f028 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800f038:	f003 0303 	and.w	r3, r3, #3
 800f03c:	440b      	add	r3, r1
 800f03e:	3a01      	subs	r2, #1
 800f040:	428b      	cmp	r3, r1
 800f042:	d90c      	bls.n	800f05e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800f044:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800f048:	f801 0b01 	strb.w	r0, [r1], #1
 800f04c:	e7f8      	b.n	800f040 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800f04e:	0790      	lsls	r0, r2, #30
 800f050:	d0e7      	beq.n	800f022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f052:	f832 0b02 	ldrh.w	r0, [r2], #2
 800f056:	f821 0b02 	strh.w	r0, [r1], #2
 800f05a:	3b02      	subs	r3, #2
 800f05c:	e7e1      	b.n	800f022 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800f05e:	2001      	movs	r0, #1
 800f060:	bd10      	pop	{r4, pc}

0800f062 <_ZN8touchgfx3HAL7noTouchEv>:
 800f062:	b510      	push	{r4, lr}
 800f064:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800f068:	4604      	mov	r4, r0
 800f06a:	b153      	cbz	r3, 800f082 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800f06c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800f070:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800f074:	2101      	movs	r1, #1
 800f076:	301c      	adds	r0, #28
 800f078:	f014 fd64 	bl	8023b44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800f07c:	2300      	movs	r3, #0
 800f07e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800f082:	bd10      	pop	{r4, pc}

0800f084 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800f084:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f088:	b085      	sub	sp, #20
 800f08a:	ad04      	add	r5, sp, #16
 800f08c:	4604      	mov	r4, r0
 800f08e:	2000      	movs	r0, #0
 800f090:	f845 0d04 	str.w	r0, [r5, #-4]!
 800f094:	69a0      	ldr	r0, [r4, #24]
 800f096:	6806      	ldr	r6, [r0, #0]
 800f098:	9501      	str	r5, [sp, #4]
 800f09a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800f09e:	9500      	str	r5, [sp, #0]
 800f0a0:	6835      	ldr	r5, [r6, #0]
 800f0a2:	4699      	mov	r9, r3
 800f0a4:	460f      	mov	r7, r1
 800f0a6:	4690      	mov	r8, r2
 800f0a8:	47a8      	blx	r5
 800f0aa:	4d10      	ldr	r5, [pc, #64]	@ (800f0ec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800f0ac:	4606      	mov	r6, r0
 800f0ae:	f8a5 9000 	strh.w	r9, [r5]
 800f0b2:	f7f9 fb71 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f0b6:	6803      	ldr	r3, [r0, #0]
 800f0b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f0ba:	4798      	blx	r3
 800f0bc:	b128      	cbz	r0, 800f0ca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800f0be:	2801      	cmp	r0, #1
 800f0c0:	d00b      	beq.n	800f0da <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800f0c2:	4630      	mov	r0, r6
 800f0c4:	b005      	add	sp, #20
 800f0c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f0ca:	882b      	ldrh	r3, [r5, #0]
 800f0cc:	fb08 7203 	mla	r2, r8, r3, r7
 800f0d0:	9b03      	ldr	r3, [sp, #12]
 800f0d2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800f0d6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800f0d8:	e7f3      	b.n	800f0c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f0da:	882a      	ldrh	r2, [r5, #0]
 800f0dc:	9b03      	ldr	r3, [sp, #12]
 800f0de:	fb08 7202 	mla	r2, r8, r2, r7
 800f0e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800f0e6:	1a9a      	subs	r2, r3, r2
 800f0e8:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800f0ea:	e7ea      	b.n	800f0c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800f0ec:	20002f2e 	.word	0x20002f2e

0800f0f0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800f0f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f0f2:	b08b      	sub	sp, #44	@ 0x2c
 800f0f4:	4617      	mov	r7, r2
 800f0f6:	4604      	mov	r4, r0
 800f0f8:	460e      	mov	r6, r1
 800f0fa:	461d      	mov	r5, r3
 800f0fc:	f7f9 fb4c 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f100:	6803      	ldr	r3, [r0, #0]
 800f102:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f104:	4798      	blx	r3
 800f106:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800f10a:	9007      	str	r0, [sp, #28]
 800f10c:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f110:	4b0d      	ldr	r3, [pc, #52]	@ (800f148 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800f112:	6822      	ldr	r2, [r4, #0]
 800f114:	881b      	ldrh	r3, [r3, #0]
 800f116:	9306      	str	r3, [sp, #24]
 800f118:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800f11c:	9305      	str	r3, [sp, #20]
 800f11e:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800f122:	9304      	str	r3, [sp, #16]
 800f124:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800f128:	9303      	str	r3, [sp, #12]
 800f12a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800f12e:	9302      	str	r3, [sp, #8]
 800f130:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800f134:	e9cd 5300 	strd	r5, r3, [sp]
 800f138:	4631      	mov	r1, r6
 800f13a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800f13c:	463b      	mov	r3, r7
 800f13e:	2200      	movs	r2, #0
 800f140:	4620      	mov	r0, r4
 800f142:	47a8      	blx	r5
 800f144:	b00b      	add	sp, #44	@ 0x2c
 800f146:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f148:	20002f2e 	.word	0x20002f2e

0800f14c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800f14c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f150:	4698      	mov	r8, r3
 800f152:	6803      	ldr	r3, [r0, #0]
 800f154:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800f156:	4b15      	ldr	r3, [pc, #84]	@ (800f1ac <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800f158:	b08b      	sub	sp, #44	@ 0x2c
 800f15a:	4617      	mov	r7, r2
 800f15c:	f8b3 9000 	ldrh.w	r9, [r3]
 800f160:	460e      	mov	r6, r1
 800f162:	4604      	mov	r4, r0
 800f164:	f7f9 fb18 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f168:	6803      	ldr	r3, [r0, #0]
 800f16a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f16c:	4798      	blx	r3
 800f16e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800f172:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800f176:	2302      	movs	r3, #2
 800f178:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800f17c:	2301      	movs	r3, #1
 800f17e:	9305      	str	r3, [sp, #20]
 800f180:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800f184:	9304      	str	r3, [sp, #16]
 800f186:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800f18a:	9303      	str	r3, [sp, #12]
 800f18c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800f190:	9302      	str	r3, [sp, #8]
 800f192:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800f196:	2200      	movs	r2, #0
 800f198:	e9cd 8300 	strd	r8, r3, [sp]
 800f19c:	4631      	mov	r1, r6
 800f19e:	463b      	mov	r3, r7
 800f1a0:	4620      	mov	r0, r4
 800f1a2:	47a8      	blx	r5
 800f1a4:	b00b      	add	sp, #44	@ 0x2c
 800f1a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f1aa:	bf00      	nop
 800f1ac:	20002f2e 	.word	0x20002f2e

0800f1b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800f1b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f1b4:	4698      	mov	r8, r3
 800f1b6:	6803      	ldr	r3, [r0, #0]
 800f1b8:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800f1ba:	4b11      	ldr	r3, [pc, #68]	@ (800f200 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800f1bc:	b087      	sub	sp, #28
 800f1be:	f8b3 9000 	ldrh.w	r9, [r3]
 800f1c2:	460e      	mov	r6, r1
 800f1c4:	4617      	mov	r7, r2
 800f1c6:	4604      	mov	r4, r0
 800f1c8:	f7f9 fae6 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f1cc:	6803      	ldr	r3, [r0, #0]
 800f1ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f1d0:	4798      	blx	r3
 800f1d2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800f1d6:	f8cd 900c 	str.w	r9, [sp, #12]
 800f1da:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800f1de:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800f1e2:	9302      	str	r3, [sp, #8]
 800f1e4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800f1e8:	9301      	str	r3, [sp, #4]
 800f1ea:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800f1ee:	9300      	str	r3, [sp, #0]
 800f1f0:	463a      	mov	r2, r7
 800f1f2:	4643      	mov	r3, r8
 800f1f4:	4631      	mov	r1, r6
 800f1f6:	4620      	mov	r0, r4
 800f1f8:	47a8      	blx	r5
 800f1fa:	b007      	add	sp, #28
 800f1fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f200:	20002f2e 	.word	0x20002f2e

0800f204 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800f204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f208:	4604      	mov	r4, r0
 800f20a:	b08f      	sub	sp, #60	@ 0x3c
 800f20c:	4610      	mov	r0, r2
 800f20e:	460d      	mov	r5, r1
 800f210:	4691      	mov	r9, r2
 800f212:	461e      	mov	r6, r3
 800f214:	f006 f996 	bl	8015544 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f218:	2800      	cmp	r0, #0
 800f21a:	f000 809d 	beq.w	800f358 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800f21e:	6823      	ldr	r3, [r4, #0]
 800f220:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800f3bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800f224:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f226:	f8df a198 	ldr.w	sl, [pc, #408]	@ 800f3c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800f22a:	4f61      	ldr	r7, [pc, #388]	@ (800f3b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f22c:	4620      	mov	r0, r4
 800f22e:	4798      	blx	r3
 800f230:	6823      	ldr	r3, [r4, #0]
 800f232:	4620      	mov	r0, r4
 800f234:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f236:	4798      	blx	r3
 800f238:	f8bb 3000 	ldrh.w	r3, [fp]
 800f23c:	9301      	str	r3, [sp, #4]
 800f23e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800f242:	f8ba 3000 	ldrh.w	r3, [sl]
 800f246:	9302      	str	r3, [sp, #8]
 800f248:	883b      	ldrh	r3, [r7, #0]
 800f24a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800f24e:	9303      	str	r3, [sp, #12]
 800f250:	4b58      	ldr	r3, [pc, #352]	@ (800f3b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f252:	9305      	str	r3, [sp, #20]
 800f254:	881a      	ldrh	r2, [r3, #0]
 800f256:	9204      	str	r2, [sp, #16]
 800f258:	4640      	mov	r0, r8
 800f25a:	f006 fa07 	bl	801566c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f25e:	8038      	strh	r0, [r7, #0]
 800f260:	4640      	mov	r0, r8
 800f262:	f006 fa37 	bl	80156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f266:	9b05      	ldr	r3, [sp, #20]
 800f268:	b280      	uxth	r0, r0
 800f26a:	8018      	strh	r0, [r3, #0]
 800f26c:	4b52      	ldr	r3, [pc, #328]	@ (800f3b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800f26e:	781b      	ldrb	r3, [r3, #0]
 800f270:	2b00      	cmp	r3, #0
 800f272:	d174      	bne.n	800f35e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800f274:	883b      	ldrh	r3, [r7, #0]
 800f276:	f8ab 3000 	strh.w	r3, [fp]
 800f27a:	f8aa 0000 	strh.w	r0, [sl]
 800f27e:	4648      	mov	r0, r9
 800f280:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800f284:	f006 f95e 	bl	8015544 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800f288:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800f28c:	2200      	movs	r2, #0
 800f28e:	4611      	mov	r1, r2
 800f290:	4628      	mov	r0, r5
 800f292:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800f296:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800f29a:	f7fa f9b2 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
 800f29e:	2301      	movs	r3, #1
 800f2a0:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800f2a4:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800f2a8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f2ac:	2b00      	cmp	r3, #0
 800f2ae:	dd5c      	ble.n	800f36a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f2b0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f2b4:	2b00      	cmp	r3, #0
 800f2b6:	dd58      	ble.n	800f36a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800f2b8:	462a      	mov	r2, r5
 800f2ba:	ab0a      	add	r3, sp, #40	@ 0x28
 800f2bc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f2c0:	6851      	ldr	r1, [r2, #4]
 800f2c2:	c303      	stmia	r3!, {r0, r1}
 800f2c4:	4631      	mov	r1, r6
 800f2c6:	a80a      	add	r0, sp, #40	@ 0x28
 800f2c8:	f7ff fbf8 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 800f2cc:	4b38      	ldr	r3, [pc, #224]	@ (800f3b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f2ce:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f2d2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800f2d6:	2100      	movs	r1, #0
 800f2d8:	aa0a      	add	r2, sp, #40	@ 0x28
 800f2da:	4b36      	ldr	r3, [pc, #216]	@ (800f3b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f2dc:	910c      	str	r1, [sp, #48]	@ 0x30
 800f2de:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f2e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f2e6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800f2ea:	ab08      	add	r3, sp, #32
 800f2ec:	e883 0003 	stmia.w	r3, {r0, r1}
 800f2f0:	4618      	mov	r0, r3
 800f2f2:	a90c      	add	r1, sp, #48	@ 0x30
 800f2f4:	f7ff fbe2 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 800f2f8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800f2fa:	2b00      	cmp	r3, #0
 800f2fc:	d13c      	bne.n	800f378 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800f2fe:	2000      	movs	r0, #0
 800f300:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800f304:	2600      	movs	r6, #0
 800f306:	682a      	ldr	r2, [r5, #0]
 800f308:	696b      	ldr	r3, [r5, #20]
 800f30a:	616e      	str	r6, [r5, #20]
 800f30c:	9305      	str	r3, [sp, #20]
 800f30e:	6892      	ldr	r2, [r2, #8]
 800f310:	a908      	add	r1, sp, #32
 800f312:	4628      	mov	r0, r5
 800f314:	4790      	blx	r2
 800f316:	9b05      	ldr	r3, [sp, #20]
 800f318:	616b      	str	r3, [r5, #20]
 800f31a:	4652      	mov	r2, sl
 800f31c:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800f320:	4649      	mov	r1, r9
 800f322:	4628      	mov	r0, r5
 800f324:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800f328:	f7fa f96b 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
 800f32c:	4b23      	ldr	r3, [pc, #140]	@ (800f3bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800f32e:	9a01      	ldr	r2, [sp, #4]
 800f330:	801a      	strh	r2, [r3, #0]
 800f332:	4b23      	ldr	r3, [pc, #140]	@ (800f3c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800f334:	9a02      	ldr	r2, [sp, #8]
 800f336:	801a      	strh	r2, [r3, #0]
 800f338:	4b1d      	ldr	r3, [pc, #116]	@ (800f3b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800f33a:	9a03      	ldr	r2, [sp, #12]
 800f33c:	801a      	strh	r2, [r3, #0]
 800f33e:	4b1d      	ldr	r3, [pc, #116]	@ (800f3b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800f340:	9a04      	ldr	r2, [sp, #16]
 800f342:	801a      	strh	r2, [r3, #0]
 800f344:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800f348:	6823      	ldr	r3, [r4, #0]
 800f34a:	4620      	mov	r0, r4
 800f34c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f34e:	4798      	blx	r3
 800f350:	6823      	ldr	r3, [r4, #0]
 800f352:	4620      	mov	r0, r4
 800f354:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f356:	4798      	blx	r3
 800f358:	b00f      	add	sp, #60	@ 0x3c
 800f35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f35e:	883b      	ldrh	r3, [r7, #0]
 800f360:	f8ab 0000 	strh.w	r0, [fp]
 800f364:	f8aa 3000 	strh.w	r3, [sl]
 800f368:	e789      	b.n	800f27e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800f36a:	462a      	mov	r2, r5
 800f36c:	ab0a      	add	r3, sp, #40	@ 0x28
 800f36e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800f372:	6851      	ldr	r1, [r2, #4]
 800f374:	c303      	stmia	r3!, {r0, r1}
 800f376:	e7a9      	b.n	800f2cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800f378:	a807      	add	r0, sp, #28
 800f37a:	f006 faed 	bl	8015958 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f37e:	4606      	mov	r6, r0
 800f380:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800f382:	6803      	ldr	r3, [r0, #0]
 800f384:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f386:	4798      	blx	r3
 800f388:	4286      	cmp	r6, r0
 800f38a:	d1b8      	bne.n	800f2fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800f38c:	f7f9 fa04 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f390:	6803      	ldr	r3, [r0, #0]
 800f392:	4606      	mov	r6, r0
 800f394:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f396:	9305      	str	r3, [sp, #20]
 800f398:	a807      	add	r0, sp, #28
 800f39a:	f006 fadd 	bl	8015958 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800f39e:	9b05      	ldr	r3, [sp, #20]
 800f3a0:	4601      	mov	r1, r0
 800f3a2:	4630      	mov	r0, r6
 800f3a4:	4798      	blx	r3
 800f3a6:	f080 0001 	eor.w	r0, r0, #1
 800f3aa:	b2c0      	uxtb	r0, r0
 800f3ac:	e7a8      	b.n	800f300 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800f3ae:	bf00      	nop
 800f3b0:	20002f28 	.word	0x20002f28
 800f3b4:	20002f2a 	.word	0x20002f2a
 800f3b8:	20002f2c 	.word	0x20002f2c
 800f3bc:	20002f2e 	.word	0x20002f2e
 800f3c0:	20002f30 	.word	0x20002f30

0800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800f3c4:	b510      	push	{r4, lr}
 800f3c6:	4b07      	ldr	r3, [pc, #28]	@ (800f3e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800f3c8:	781b      	ldrb	r3, [r3, #0]
 800f3ca:	4604      	mov	r4, r0
 800f3cc:	b13b      	cbz	r3, 800f3de <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f3ce:	6803      	ldr	r3, [r0, #0]
 800f3d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f3d2:	4798      	blx	r3
 800f3d4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800f3d6:	4283      	cmp	r3, r0
 800f3d8:	d101      	bne.n	800f3de <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800f3da:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800f3dc:	bd10      	pop	{r4, pc}
 800f3de:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800f3e0:	e7fc      	b.n	800f3dc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800f3e2:	bf00      	nop
 800f3e4:	20002f32 	.word	0x20002f32

0800f3e8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800f3e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3ec:	b08a      	sub	sp, #40	@ 0x28
 800f3ee:	461d      	mov	r5, r3
 800f3f0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800f3f4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f3f8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800f3fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f400:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800f404:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f408:	2400      	movs	r4, #0
 800f40a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800f40e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800f412:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f416:	4690      	mov	r8, r2
 800f418:	4607      	mov	r7, r0
 800f41a:	9404      	str	r4, [sp, #16]
 800f41c:	f88d 4020 	strb.w	r4, [sp, #32]
 800f420:	f7ff ffd0 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f424:	fb06 8505 	mla	r5, r6, r5, r8
 800f428:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f42c:	6878      	ldr	r0, [r7, #4]
 800f42e:	9505      	str	r5, [sp, #20]
 800f430:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f434:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800f438:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800f43c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800f440:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800f444:	6803      	ldr	r3, [r0, #0]
 800f446:	a901      	add	r1, sp, #4
 800f448:	685b      	ldr	r3, [r3, #4]
 800f44a:	4798      	blx	r3
 800f44c:	b00a      	add	sp, #40	@ 0x28
 800f44e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f452 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800f452:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f456:	b08b      	sub	sp, #44	@ 0x2c
 800f458:	2400      	movs	r4, #0
 800f45a:	461d      	mov	r5, r3
 800f45c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800f460:	4688      	mov	r8, r1
 800f462:	4691      	mov	r9, r2
 800f464:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800f468:	9404      	str	r4, [sp, #16]
 800f46a:	4607      	mov	r7, r0
 800f46c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f470:	f7ff ffa8 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f474:	fb06 9505 	mla	r5, r6, r5, r9
 800f478:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800f47c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f480:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f484:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800f488:	6878      	ldr	r0, [r7, #4]
 800f48a:	9505      	str	r5, [sp, #20]
 800f48c:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f490:	f8ad 401c 	strh.w	r4, [sp, #28]
 800f494:	f8ad 601e 	strh.w	r6, [sp, #30]
 800f498:	f8cd 8010 	str.w	r8, [sp, #16]
 800f49c:	f8ad 4020 	strh.w	r4, [sp, #32]
 800f4a0:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800f4a4:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800f4a8:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800f4ac:	6803      	ldr	r3, [r0, #0]
 800f4ae:	a901      	add	r1, sp, #4
 800f4b0:	685b      	ldr	r3, [r3, #4]
 800f4b2:	4798      	blx	r3
 800f4b4:	b00b      	add	sp, #44	@ 0x2c
 800f4b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800f4bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800f4bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4c0:	b08a      	sub	sp, #40	@ 0x28
 800f4c2:	4698      	mov	r8, r3
 800f4c4:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800f4c8:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800f4cc:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800f4d0:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800f4d4:	2300      	movs	r3, #0
 800f4d6:	2d0b      	cmp	r5, #11
 800f4d8:	4606      	mov	r6, r0
 800f4da:	9304      	str	r3, [sp, #16]
 800f4dc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800f4e0:	d138      	bne.n	800f554 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800f4e2:	2380      	movs	r3, #128	@ 0x80
 800f4e4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f4e8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800f4ec:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f4f0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800f4f4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f4f8:	f88d 0020 	strb.w	r0, [sp, #32]
 800f4fc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800f500:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f504:	4630      	mov	r0, r6
 800f506:	9203      	str	r2, [sp, #12]
 800f508:	f7ff ff5c 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f50c:	2c0b      	cmp	r4, #11
 800f50e:	bf98      	it	ls
 800f510:	4b1b      	ldrls	r3, [pc, #108]	@ (800f580 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800f512:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800f516:	bf98      	it	ls
 800f518:	5d19      	ldrbls	r1, [r3, r4]
 800f51a:	f8ad 701e 	strh.w	r7, [sp, #30]
 800f51e:	bf88      	it	hi
 800f520:	2100      	movhi	r1, #0
 800f522:	fb02 8307 	mla	r3, r2, r7, r8
 800f526:	10c9      	asrs	r1, r1, #3
 800f528:	fb01 0003 	mla	r0, r1, r3, r0
 800f52c:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800f530:	9005      	str	r0, [sp, #20]
 800f532:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800f536:	6870      	ldr	r0, [r6, #4]
 800f538:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800f53c:	2300      	movs	r3, #0
 800f53e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800f542:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800f546:	6803      	ldr	r3, [r0, #0]
 800f548:	a901      	add	r1, sp, #4
 800f54a:	685b      	ldr	r3, [r3, #4]
 800f54c:	4798      	blx	r3
 800f54e:	b00a      	add	sp, #40	@ 0x28
 800f550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f554:	2d02      	cmp	r5, #2
 800f556:	d109      	bne.n	800f56c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800f558:	28ff      	cmp	r0, #255	@ 0xff
 800f55a:	d105      	bne.n	800f568 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800f55c:	f1bc 0f00 	cmp.w	ip, #0
 800f560:	bf14      	ite	ne
 800f562:	2340      	movne	r3, #64	@ 0x40
 800f564:	2320      	moveq	r3, #32
 800f566:	e7bd      	b.n	800f4e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f568:	2340      	movs	r3, #64	@ 0x40
 800f56a:	e7bb      	b.n	800f4e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f56c:	28ff      	cmp	r0, #255	@ 0xff
 800f56e:	d105      	bne.n	800f57c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800f570:	f1bc 0f00 	cmp.w	ip, #0
 800f574:	bf14      	ite	ne
 800f576:	2304      	movne	r3, #4
 800f578:	2301      	moveq	r3, #1
 800f57a:	e7b3      	b.n	800f4e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f57c:	2304      	movs	r3, #4
 800f57e:	e7b1      	b.n	800f4e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800f580:	08026bd4 	.word	0x08026bd4

0800f584 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800f584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f588:	b08b      	sub	sp, #44	@ 0x2c
 800f58a:	461d      	mov	r5, r3
 800f58c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800f590:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800f594:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800f598:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800f59c:	bf14      	ite	ne
 800f59e:	2308      	movne	r3, #8
 800f5a0:	2302      	moveq	r3, #2
 800f5a2:	2400      	movs	r4, #0
 800f5a4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800f5a8:	4688      	mov	r8, r1
 800f5aa:	4693      	mov	fp, r2
 800f5ac:	9404      	str	r4, [sp, #16]
 800f5ae:	4607      	mov	r7, r0
 800f5b0:	f7ff ff08 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f5b4:	2e0b      	cmp	r6, #11
 800f5b6:	bf98      	it	ls
 800f5b8:	4b15      	ldrls	r3, [pc, #84]	@ (800f610 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800f5ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800f5be:	bf98      	it	ls
 800f5c0:	5d9c      	ldrbls	r4, [r3, r6]
 800f5c2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800f5c6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f5ca:	fb05 b50a 	mla	r5, r5, sl, fp
 800f5ce:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800f5d2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f5d6:	10e4      	asrs	r4, r4, #3
 800f5d8:	fb04 0405 	mla	r4, r4, r5, r0
 800f5dc:	2300      	movs	r3, #0
 800f5de:	6878      	ldr	r0, [r7, #4]
 800f5e0:	9405      	str	r4, [sp, #20]
 800f5e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f5e6:	f8ad a01e 	strh.w	sl, [sp, #30]
 800f5ea:	f8cd 8010 	str.w	r8, [sp, #16]
 800f5ee:	f88d 9020 	strb.w	r9, [sp, #32]
 800f5f2:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800f5f6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800f5fa:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800f5fe:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800f602:	6803      	ldr	r3, [r0, #0]
 800f604:	a901      	add	r1, sp, #4
 800f606:	685b      	ldr	r3, [r3, #4]
 800f608:	4798      	blx	r3
 800f60a:	b00b      	add	sp, #44	@ 0x2c
 800f60c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f610:	08026bd4 	.word	0x08026bd4

0800f614 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800f614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f618:	461e      	mov	r6, r3
 800f61a:	4b0a      	ldr	r3, [pc, #40]	@ (800f644 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800f61c:	460f      	mov	r7, r1
 800f61e:	881d      	ldrh	r5, [r3, #0]
 800f620:	4690      	mov	r8, r2
 800f622:	f7f9 f8b9 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f626:	6803      	ldr	r3, [r0, #0]
 800f628:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f62a:	4798      	blx	r3
 800f62c:	280b      	cmp	r0, #11
 800f62e:	bf9a      	itte	ls
 800f630:	4b05      	ldrls	r3, [pc, #20]	@ (800f648 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800f632:	5c1c      	ldrbls	r4, [r3, r0]
 800f634:	2400      	movhi	r4, #0
 800f636:	fb08 7005 	mla	r0, r8, r5, r7
 800f63a:	10e4      	asrs	r4, r4, #3
 800f63c:	fb04 6000 	mla	r0, r4, r0, r6
 800f640:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f644:	20002f2e 	.word	0x20002f2e
 800f648:	08026bd4 	.word	0x08026bd4

0800f64c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800f64c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f64e:	b08b      	sub	sp, #44	@ 0x2c
 800f650:	461f      	mov	r7, r3
 800f652:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800f656:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f65a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800f65e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f662:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800f666:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f66a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800f66e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f672:	2500      	movs	r5, #0
 800f674:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800f678:	f88d 3020 	strb.w	r3, [sp, #32]
 800f67c:	4604      	mov	r4, r0
 800f67e:	4616      	mov	r6, r2
 800f680:	9504      	str	r5, [sp, #16]
 800f682:	f7ff fe9f 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f686:	463a      	mov	r2, r7
 800f688:	4631      	mov	r1, r6
 800f68a:	4603      	mov	r3, r0
 800f68c:	4620      	mov	r0, r4
 800f68e:	f7ff ffc1 	bl	800f614 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f692:	4b0e      	ldr	r3, [pc, #56]	@ (800f6cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800f694:	9005      	str	r0, [sp, #20]
 800f696:	881b      	ldrh	r3, [r3, #0]
 800f698:	f8ad 301e 	strh.w	r3, [sp, #30]
 800f69c:	f7f9 f87c 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f6a0:	6803      	ldr	r3, [r0, #0]
 800f6a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f6a4:	4798      	blx	r3
 800f6a6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800f6a8:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800f6ac:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800f6b0:	9304      	str	r3, [sp, #16]
 800f6b2:	6860      	ldr	r0, [r4, #4]
 800f6b4:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800f6b8:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800f6bc:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800f6c0:	6803      	ldr	r3, [r0, #0]
 800f6c2:	a901      	add	r1, sp, #4
 800f6c4:	685b      	ldr	r3, [r3, #4]
 800f6c6:	4798      	blx	r3
 800f6c8:	b00b      	add	sp, #44	@ 0x2c
 800f6ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f6cc:	20002f2e 	.word	0x20002f2e

0800f6d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800f6d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6d2:	b08d      	sub	sp, #52	@ 0x34
 800f6d4:	466b      	mov	r3, sp
 800f6d6:	e883 0006 	stmia.w	r3, {r1, r2}
 800f6da:	2300      	movs	r3, #0
 800f6dc:	9306      	str	r3, [sp, #24]
 800f6de:	6803      	ldr	r3, [r0, #0]
 800f6e0:	f8bd 6000 	ldrh.w	r6, [sp]
 800f6e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f6e6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800f6ea:	2501      	movs	r5, #1
 800f6ec:	9503      	str	r5, [sp, #12]
 800f6ee:	4604      	mov	r4, r0
 800f6f0:	4798      	blx	r3
 800f6f2:	463a      	mov	r2, r7
 800f6f4:	4631      	mov	r1, r6
 800f6f6:	4603      	mov	r3, r0
 800f6f8:	4620      	mov	r0, r4
 800f6fa:	f7ff ff8b 	bl	800f614 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f6fe:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800f700:	9307      	str	r3, [sp, #28]
 800f702:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f706:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f70a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f70e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800f712:	4b0f      	ldr	r3, [pc, #60]	@ (800f750 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800f714:	9004      	str	r0, [sp, #16]
 800f716:	881b      	ldrh	r3, [r3, #0]
 800f718:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800f71c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800f720:	f7f9 f83a 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f724:	6803      	ldr	r3, [r0, #0]
 800f726:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f728:	4798      	blx	r3
 800f72a:	23ff      	movs	r3, #255	@ 0xff
 800f72c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800f730:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800f734:	6860      	ldr	r0, [r4, #4]
 800f736:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800f73a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800f73e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800f742:	6803      	ldr	r3, [r0, #0]
 800f744:	a903      	add	r1, sp, #12
 800f746:	685b      	ldr	r3, [r3, #4]
 800f748:	4798      	blx	r3
 800f74a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800f74c:	b00d      	add	sp, #52	@ 0x34
 800f74e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f750:	20002f2e 	.word	0x20002f2e

0800f754 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800f754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f758:	b08c      	sub	sp, #48	@ 0x30
 800f75a:	461e      	mov	r6, r3
 800f75c:	466d      	mov	r5, sp
 800f75e:	2300      	movs	r3, #0
 800f760:	e885 0006 	stmia.w	r5, {r1, r2}
 800f764:	9306      	str	r3, [sp, #24]
 800f766:	6803      	ldr	r3, [r0, #0]
 800f768:	f8bd 7000 	ldrh.w	r7, [sp]
 800f76c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f76e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800f772:	2501      	movs	r5, #1
 800f774:	9503      	str	r5, [sp, #12]
 800f776:	4604      	mov	r4, r0
 800f778:	4798      	blx	r3
 800f77a:	4642      	mov	r2, r8
 800f77c:	4639      	mov	r1, r7
 800f77e:	4603      	mov	r3, r0
 800f780:	4620      	mov	r0, r4
 800f782:	f7ff ff47 	bl	800f614 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f786:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f78a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f78e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800f792:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800f796:	4b11      	ldr	r3, [pc, #68]	@ (800f7dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800f798:	9004      	str	r0, [sp, #16]
 800f79a:	881b      	ldrh	r3, [r3, #0]
 800f79c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800f7a0:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800f7a2:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800f7a6:	9607      	str	r6, [sp, #28]
 800f7a8:	f7f8 fff6 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 800f7ac:	6803      	ldr	r3, [r0, #0]
 800f7ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f7b0:	4798      	blx	r3
 800f7b2:	23ff      	movs	r3, #255	@ 0xff
 800f7b4:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800f7b8:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800f7bc:	6860      	ldr	r0, [r4, #4]
 800f7be:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800f7c2:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800f7c6:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800f7ca:	6803      	ldr	r3, [r0, #0]
 800f7cc:	a903      	add	r1, sp, #12
 800f7ce:	685b      	ldr	r3, [r3, #4]
 800f7d0:	4798      	blx	r3
 800f7d2:	4630      	mov	r0, r6
 800f7d4:	b00c      	add	sp, #48	@ 0x30
 800f7d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f7da:	bf00      	nop
 800f7dc:	20002f2e 	.word	0x20002f2e

0800f7e0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800f7e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7e2:	b085      	sub	sp, #20
 800f7e4:	ac02      	add	r4, sp, #8
 800f7e6:	e884 0006 	stmia.w	r4, {r1, r2}
 800f7ea:	4605      	mov	r5, r0
 800f7ec:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800f7f0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800f7f4:	f7ff fde6 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f7f8:	463a      	mov	r2, r7
 800f7fa:	4603      	mov	r3, r0
 800f7fc:	4631      	mov	r1, r6
 800f7fe:	4628      	mov	r0, r5
 800f800:	f7ff ff08 	bl	800f614 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800f804:	4a05      	ldr	r2, [pc, #20]	@ (800f81c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800f806:	682b      	ldr	r3, [r5, #0]
 800f808:	8812      	ldrh	r2, [r2, #0]
 800f80a:	9200      	str	r2, [sp, #0]
 800f80c:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800f80e:	e894 0006 	ldmia.w	r4, {r1, r2}
 800f812:	4603      	mov	r3, r0
 800f814:	4628      	mov	r0, r5
 800f816:	47b0      	blx	r6
 800f818:	b005      	add	sp, #20
 800f81a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f81c:	20002f2e 	.word	0x20002f2e

0800f820 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800f820:	b570      	push	{r4, r5, r6, lr}
 800f822:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800f826:	4604      	mov	r4, r0
 800f828:	b19b      	cbz	r3, 800f852 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800f82a:	2002      	movs	r0, #2
 800f82c:	f7fd f852 	bl	800c8d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800f830:	2300      	movs	r3, #0
 800f832:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800f836:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800f83a:	6823      	ldr	r3, [r4, #0]
 800f83c:	4620      	mov	r0, r4
 800f83e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800f842:	f7ff fdbf 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f846:	462b      	mov	r3, r5
 800f848:	4601      	mov	r1, r0
 800f84a:	4620      	mov	r0, r4
 800f84c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f850:	4718      	bx	r3
 800f852:	bd70      	pop	{r4, r5, r6, pc}

0800f854 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800f854:	b538      	push	{r3, r4, r5, lr}
 800f856:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800f85a:	428b      	cmp	r3, r1
 800f85c:	4604      	mov	r4, r0
 800f85e:	460d      	mov	r5, r1
 800f860:	d006      	beq.n	800f870 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800f862:	6803      	ldr	r3, [r0, #0]
 800f864:	b929      	cbnz	r1, 800f872 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800f866:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800f86a:	4798      	blx	r3
 800f86c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800f870:	bd38      	pop	{r3, r4, r5, pc}
 800f872:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800f876:	e7f8      	b.n	800f86a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800f878 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800f878:	b510      	push	{r4, lr}
 800f87a:	4b0d      	ldr	r3, [pc, #52]	@ (800f8b0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800f87c:	781b      	ldrb	r3, [r3, #0]
 800f87e:	4604      	mov	r4, r0
 800f880:	b95b      	cbnz	r3, 800f89a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f882:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800f886:	2b02      	cmp	r3, #2
 800f888:	d007      	beq.n	800f89a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f88a:	6840      	ldr	r0, [r0, #4]
 800f88c:	f000 f90e 	bl	800faac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800f890:	b118      	cbz	r0, 800f89a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800f892:	6862      	ldr	r2, [r4, #4]
 800f894:	7a53      	ldrb	r3, [r2, #9]
 800f896:	2b00      	cmp	r3, #0
 800f898:	d0fc      	beq.n	800f894 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800f89a:	f7fd faa5 	bl	800cde8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800f89e:	4620      	mov	r0, r4
 800f8a0:	2100      	movs	r1, #0
 800f8a2:	f7ff ffd7 	bl	800f854 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800f8a6:	4620      	mov	r0, r4
 800f8a8:	f7ff fd8c 	bl	800f3c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800f8ac:	bd10      	pop	{r4, pc}
 800f8ae:	bf00      	nop
 800f8b0:	20002f32 	.word	0x20002f32

0800f8b4 <_ZN8touchgfx13DMA_Interface5flushEv>:
 800f8b4:	6803      	ldr	r3, [r0, #0]
 800f8b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f8b8:	4718      	bx	r3

0800f8ba <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800f8ba:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800f8be:	1a13      	subs	r3, r2, r0
 800f8c0:	4258      	negs	r0, r3
 800f8c2:	4158      	adcs	r0, r3
 800f8c4:	4770      	bx	lr

0800f8c6 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800f8c6:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800f8ca:	1a9b      	subs	r3, r3, r2
 800f8cc:	2b00      	cmp	r3, #0
 800f8ce:	bfdc      	itt	le
 800f8d0:	6882      	ldrle	r2, [r0, #8]
 800f8d2:	189b      	addle	r3, r3, r2
 800f8d4:	2b01      	cmp	r3, #1
 800f8d6:	bfcc      	ite	gt
 800f8d8:	2000      	movgt	r0, #0
 800f8da:	2001      	movle	r0, #1
 800f8dc:	4770      	bx	lr

0800f8de <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800f8de:	6902      	ldr	r2, [r0, #16]
 800f8e0:	6843      	ldr	r3, [r0, #4]
 800f8e2:	2024      	movs	r0, #36	@ 0x24
 800f8e4:	fb00 3002 	mla	r0, r0, r2, r3
 800f8e8:	4770      	bx	lr

0800f8ea <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800f8ea:	6803      	ldr	r3, [r0, #0]
 800f8ec:	691b      	ldr	r3, [r3, #16]
 800f8ee:	4718      	bx	r3

0800f8f0 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800f8f0:	b570      	push	{r4, r5, r6, lr}
 800f8f2:	2301      	movs	r3, #1
 800f8f4:	7203      	strb	r3, [r0, #8]
 800f8f6:	4604      	mov	r4, r0
 800f8f8:	6840      	ldr	r0, [r0, #4]
 800f8fa:	6803      	ldr	r3, [r0, #0]
 800f8fc:	699b      	ldr	r3, [r3, #24]
 800f8fe:	4798      	blx	r3
 800f900:	6803      	ldr	r3, [r0, #0]
 800f902:	2b40      	cmp	r3, #64	@ 0x40
 800f904:	4605      	mov	r5, r0
 800f906:	d00c      	beq.n	800f922 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f908:	d810      	bhi.n	800f92c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800f90a:	2b04      	cmp	r3, #4
 800f90c:	d01d      	beq.n	800f94a <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800f90e:	d804      	bhi.n	800f91a <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800f910:	2b01      	cmp	r3, #1
 800f912:	d006      	beq.n	800f922 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f914:	2b02      	cmp	r3, #2
 800f916:	d02c      	beq.n	800f972 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800f918:	bd70      	pop	{r4, r5, r6, pc}
 800f91a:	2b08      	cmp	r3, #8
 800f91c:	d01d      	beq.n	800f95a <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800f91e:	2b20      	cmp	r3, #32
 800f920:	d1fa      	bne.n	800f918 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800f922:	6823      	ldr	r3, [r4, #0]
 800f924:	4620      	mov	r0, r4
 800f926:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f928:	4798      	blx	r3
 800f92a:	e013      	b.n	800f954 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800f92c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800f930:	d0f7      	beq.n	800f922 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f932:	d804      	bhi.n	800f93e <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800f934:	2b80      	cmp	r3, #128	@ 0x80
 800f936:	d0f4      	beq.n	800f922 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f938:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800f93c:	e7f0      	b.n	800f920 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800f93e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800f942:	d0ee      	beq.n	800f922 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800f944:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800f948:	e7e5      	b.n	800f916 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800f94a:	6823      	ldr	r3, [r4, #0]
 800f94c:	7f01      	ldrb	r1, [r0, #28]
 800f94e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f950:	4620      	mov	r0, r4
 800f952:	4798      	blx	r3
 800f954:	6823      	ldr	r3, [r4, #0]
 800f956:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800f958:	e006      	b.n	800f968 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800f95a:	6823      	ldr	r3, [r4, #0]
 800f95c:	7f01      	ldrb	r1, [r0, #28]
 800f95e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f960:	4620      	mov	r0, r4
 800f962:	4798      	blx	r3
 800f964:	6823      	ldr	r3, [r4, #0]
 800f966:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800f968:	4629      	mov	r1, r5
 800f96a:	4620      	mov	r0, r4
 800f96c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f970:	4718      	bx	r3
 800f972:	6823      	ldr	r3, [r4, #0]
 800f974:	4620      	mov	r0, r4
 800f976:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800f978:	4798      	blx	r3
 800f97a:	e7f3      	b.n	800f964 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800f97c <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800f97c:	4770      	bx	lr

0800f97e <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800f97e:	4770      	bx	lr

0800f980 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800f980:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800f984:	1ad2      	subs	r2, r2, r3
 800f986:	2a00      	cmp	r2, #0
 800f988:	b510      	push	{r4, lr}
 800f98a:	bfdc      	itt	le
 800f98c:	6884      	ldrle	r4, [r0, #8]
 800f98e:	1912      	addle	r2, r2, r4
 800f990:	2a01      	cmp	r2, #1
 800f992:	dd16      	ble.n	800f9c2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800f994:	6842      	ldr	r2, [r0, #4]
 800f996:	2424      	movs	r4, #36	@ 0x24
 800f998:	fb04 2303 	mla	r3, r4, r3, r2
 800f99c:	f101 0220 	add.w	r2, r1, #32
 800f9a0:	f851 4b04 	ldr.w	r4, [r1], #4
 800f9a4:	f843 4b04 	str.w	r4, [r3], #4
 800f9a8:	4291      	cmp	r1, r2
 800f9aa:	d1f9      	bne.n	800f9a0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800f9ac:	780a      	ldrb	r2, [r1, #0]
 800f9ae:	701a      	strb	r2, [r3, #0]
 800f9b0:	68c3      	ldr	r3, [r0, #12]
 800f9b2:	6882      	ldr	r2, [r0, #8]
 800f9b4:	f3bf 8f5b 	dmb	ish
 800f9b8:	3301      	adds	r3, #1
 800f9ba:	429a      	cmp	r2, r3
 800f9bc:	bfd8      	it	le
 800f9be:	1a9b      	suble	r3, r3, r2
 800f9c0:	60c3      	str	r3, [r0, #12]
 800f9c2:	bd10      	pop	{r4, pc}

0800f9c4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800f9c4:	6903      	ldr	r3, [r0, #16]
 800f9c6:	6882      	ldr	r2, [r0, #8]
 800f9c8:	f3bf 8f5b 	dmb	ish
 800f9cc:	3301      	adds	r3, #1
 800f9ce:	429a      	cmp	r2, r3
 800f9d0:	bfd8      	it	le
 800f9d2:	1a9b      	suble	r3, r3, r2
 800f9d4:	6103      	str	r3, [r0, #16]
 800f9d6:	4770      	bx	lr

0800f9d8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800f9d8:	b570      	push	{r4, r5, r6, lr}
 800f9da:	4604      	mov	r4, r0
 800f9dc:	460e      	mov	r6, r1
 800f9de:	6860      	ldr	r0, [r4, #4]
 800f9e0:	6803      	ldr	r3, [r0, #0]
 800f9e2:	685b      	ldr	r3, [r3, #4]
 800f9e4:	4798      	blx	r3
 800f9e6:	2800      	cmp	r0, #0
 800f9e8:	d1f9      	bne.n	800f9de <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800f9ea:	4d0d      	ldr	r5, [pc, #52]	@ (800fa20 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800f9ec:	6828      	ldr	r0, [r5, #0]
 800f9ee:	6803      	ldr	r3, [r0, #0]
 800f9f0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800f9f2:	4798      	blx	r3
 800f9f4:	f7fd fa1a 	bl	800ce2c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800f9f8:	6828      	ldr	r0, [r5, #0]
 800f9fa:	2101      	movs	r1, #1
 800f9fc:	f7ff ff2a 	bl	800f854 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800fa00:	6860      	ldr	r0, [r4, #4]
 800fa02:	6803      	ldr	r3, [r0, #0]
 800fa04:	4631      	mov	r1, r6
 800fa06:	689b      	ldr	r3, [r3, #8]
 800fa08:	4798      	blx	r3
 800fa0a:	6823      	ldr	r3, [r4, #0]
 800fa0c:	4620      	mov	r0, r4
 800fa0e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800fa10:	4798      	blx	r3
 800fa12:	6828      	ldr	r0, [r5, #0]
 800fa14:	6803      	ldr	r3, [r0, #0]
 800fa16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa1a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800fa1c:	4718      	bx	r3
 800fa1e:	bf00      	nop
 800fa20:	20002f34 	.word	0x20002f34

0800fa24 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800fa24:	b508      	push	{r3, lr}
 800fa26:	f7fd f9df 	bl	800cde8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800fa2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fa2e:	f7fd b9f1 	b.w	800ce14 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800fa32 <_ZN8touchgfx13DMA_Interface5startEv>:
 800fa32:	b510      	push	{r4, lr}
 800fa34:	4604      	mov	r4, r0
 800fa36:	6840      	ldr	r0, [r0, #4]
 800fa38:	6803      	ldr	r3, [r0, #0]
 800fa3a:	681b      	ldr	r3, [r3, #0]
 800fa3c:	4798      	blx	r3
 800fa3e:	b948      	cbnz	r0, 800fa54 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fa40:	7a63      	ldrb	r3, [r4, #9]
 800fa42:	b13b      	cbz	r3, 800fa54 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fa44:	7a23      	ldrb	r3, [r4, #8]
 800fa46:	b92b      	cbnz	r3, 800fa54 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800fa48:	6823      	ldr	r3, [r4, #0]
 800fa4a:	4620      	mov	r0, r4
 800fa4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fa4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fa52:	4718      	bx	r3
 800fa54:	bd10      	pop	{r4, pc}

0800fa56 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800fa56:	b570      	push	{r4, r5, r6, lr}
 800fa58:	4604      	mov	r4, r0
 800fa5a:	6840      	ldr	r0, [r0, #4]
 800fa5c:	6803      	ldr	r3, [r0, #0]
 800fa5e:	681b      	ldr	r3, [r3, #0]
 800fa60:	4798      	blx	r3
 800fa62:	4605      	mov	r5, r0
 800fa64:	b930      	cbnz	r0, 800fa74 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fa66:	7a23      	ldrb	r3, [r4, #8]
 800fa68:	b123      	cbz	r3, 800fa74 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800fa6a:	6860      	ldr	r0, [r4, #4]
 800fa6c:	6803      	ldr	r3, [r0, #0]
 800fa6e:	695b      	ldr	r3, [r3, #20]
 800fa70:	4798      	blx	r3
 800fa72:	7225      	strb	r5, [r4, #8]
 800fa74:	6860      	ldr	r0, [r4, #4]
 800fa76:	6803      	ldr	r3, [r0, #0]
 800fa78:	681b      	ldr	r3, [r3, #0]
 800fa7a:	4798      	blx	r3
 800fa7c:	b928      	cbnz	r0, 800fa8a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800fa7e:	6823      	ldr	r3, [r4, #0]
 800fa80:	4620      	mov	r0, r4
 800fa82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fa84:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa88:	4718      	bx	r3
 800fa8a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fa8e:	f7fd b9d9 	b.w	800ce44 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800fa94 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800fa94:	b510      	push	{r4, lr}
 800fa96:	4c04      	ldr	r4, [pc, #16]	@ (800faa8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800fa98:	6082      	str	r2, [r0, #8]
 800fa9a:	2200      	movs	r2, #0
 800fa9c:	e9c0 4100 	strd	r4, r1, [r0]
 800faa0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800faa4:	bd10      	pop	{r4, pc}
 800faa6:	bf00      	nop
 800faa8:	08026d10 	.word	0x08026d10

0800faac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800faac:	6840      	ldr	r0, [r0, #4]
 800faae:	6803      	ldr	r3, [r0, #0]
 800fab0:	681b      	ldr	r3, [r3, #0]
 800fab2:	4718      	bx	r3

0800fab4 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800fab4:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 800fab8:	4770      	bx	lr

0800faba <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800faba:	b510      	push	{r4, lr}
 800fabc:	4604      	mov	r4, r0
 800fabe:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800fac0:	b150      	cbz	r0, 800fad8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800fac2:	6803      	ldr	r3, [r0, #0]
 800fac4:	68db      	ldr	r3, [r3, #12]
 800fac6:	4798      	blx	r3
 800fac8:	b130      	cbz	r0, 800fad8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800faca:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 800facc:	6803      	ldr	r3, [r0, #0]
 800face:	4621      	mov	r1, r4
 800fad0:	689b      	ldr	r3, [r3, #8]
 800fad2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fad6:	4718      	bx	r3
 800fad8:	bd10      	pop	{r4, pc}

0800fada <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800fada:	b570      	push	{r4, r5, r6, lr}
 800fadc:	790b      	ldrb	r3, [r1, #4]
 800fade:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 800fae2:	2b00      	cmp	r3, #0
 800fae4:	bf0c      	ite	eq
 800fae6:	2301      	moveq	r3, #1
 800fae8:	2300      	movne	r3, #0
 800faea:	4604      	mov	r4, r0
 800faec:	460e      	mov	r6, r1
 800faee:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 800faf2:	d109      	bne.n	800fb08 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800faf4:	b14d      	cbz	r5, 800fb0a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800faf6:	7933      	ldrb	r3, [r6, #4]
 800faf8:	2b01      	cmp	r3, #1
 800fafa:	d10c      	bne.n	800fb16 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800fafc:	6823      	ldr	r3, [r4, #0]
 800fafe:	4620      	mov	r0, r4
 800fb00:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800fb02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fb06:	4718      	bx	r3
 800fb08:	b12d      	cbz	r5, 800fb16 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800fb0a:	6823      	ldr	r3, [r4, #0]
 800fb0c:	4620      	mov	r0, r4
 800fb0e:	695b      	ldr	r3, [r3, #20]
 800fb10:	4798      	blx	r3
 800fb12:	2d00      	cmp	r5, #0
 800fb14:	d1ef      	bne.n	800faf6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800fb16:	bd70      	pop	{r4, r5, r6, pc}

0800fb18 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800fb18:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 800fb1c:	b133      	cbz	r3, 800fb2c <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800fb1e:	790b      	ldrb	r3, [r1, #4]
 800fb20:	2b01      	cmp	r3, #1
 800fb22:	bf01      	itttt	eq
 800fb24:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 800fb26:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 800fb28:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 800fb2a:	8603      	strheq	r3, [r0, #48]	@ 0x30
 800fb2c:	f7ff bfd5 	b.w	800fada <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800fb30 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800fb30:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 800fb34:	b12a      	cbz	r2, 800fb42 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800fb36:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800fb3a:	b112      	cbz	r2, 800fb42 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800fb3c:	6803      	ldr	r3, [r0, #0]
 800fb3e:	695b      	ldr	r3, [r3, #20]
 800fb40:	4718      	bx	r3
 800fb42:	4770      	bx	lr

0800fb44 <_ZN8touchgfx12ToggleButton10forceStateEb>:
 800fb44:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
 800fb46:	b129      	cbz	r1, 800fb54 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 800fb48:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
 800fb4a:	429a      	cmp	r2, r3
 800fb4c:	d007      	beq.n	800fb5e <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 800fb4e:	8602      	strh	r2, [r0, #48]	@ 0x30
 800fb50:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 800fb52:	4770      	bx	lr
 800fb54:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 800fb56:	429a      	cmp	r2, r3
 800fb58:	bf1c      	itt	ne
 800fb5a:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
 800fb5c:	8603      	strhne	r3, [r0, #48]	@ 0x30
 800fb5e:	4770      	bx	lr

0800fb60 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800fb60:	2000      	movs	r0, #0
 800fb62:	4770      	bx	lr

0800fb64 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800fb64:	4b07      	ldr	r3, [pc, #28]	@ (800fb84 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800fb66:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 800fb68:	881b      	ldrh	r3, [r3, #0]
 800fb6a:	4293      	cmp	r3, r2
 800fb6c:	bf81      	itttt	hi
 800fb6e:	4b06      	ldrhi	r3, [pc, #24]	@ (800fb88 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800fb70:	681b      	ldrhi	r3, [r3, #0]
 800fb72:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800fb76:	7858      	ldrbhi	r0, [r3, #1]
 800fb78:	bf8c      	ite	hi
 800fb7a:	f000 0003 	andhi.w	r0, r0, #3
 800fb7e:	2000      	movls	r0, #0
 800fb80:	4770      	bx	lr
 800fb82:	bf00      	nop
 800fb84:	20002f88 	.word	0x20002f88
 800fb88:	20002f84 	.word	0x20002f84

0800fb8c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800fb8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb90:	4b10      	ldr	r3, [pc, #64]	@ (800fbd4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800fb92:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800fb94:	881b      	ldrh	r3, [r3, #0]
 800fb96:	428b      	cmp	r3, r1
 800fb98:	4604      	mov	r4, r0
 800fb9a:	d918      	bls.n	800fbce <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800fb9c:	6803      	ldr	r3, [r0, #0]
 800fb9e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 800fba0:	4b0d      	ldr	r3, [pc, #52]	@ (800fbd8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800fba2:	6818      	ldr	r0, [r3, #0]
 800fba4:	f7fc fa04 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 800fba8:	6823      	ldr	r3, [r4, #0]
 800fbaa:	4606      	mov	r6, r0
 800fbac:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800fbae:	4620      	mov	r0, r4
 800fbb0:	4798      	blx	r3
 800fbb2:	6823      	ldr	r3, [r4, #0]
 800fbb4:	4607      	mov	r7, r0
 800fbb6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800fbba:	4620      	mov	r0, r4
 800fbbc:	4798      	blx	r3
 800fbbe:	463a      	mov	r2, r7
 800fbc0:	4603      	mov	r3, r0
 800fbc2:	4631      	mov	r1, r6
 800fbc4:	4620      	mov	r0, r4
 800fbc6:	46ac      	mov	ip, r5
 800fbc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fbcc:	4760      	bx	ip
 800fbce:	2000      	movs	r0, #0
 800fbd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fbd4:	20002f88 	.word	0x20002f88
 800fbd8:	20002f90 	.word	0x20002f90

0800fbdc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800fbdc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800fbe0:	4b17      	ldr	r3, [pc, #92]	@ (800fc40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800fbe2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 800fbe4:	881b      	ldrh	r3, [r3, #0]
 800fbe6:	428b      	cmp	r3, r1
 800fbe8:	4604      	mov	r4, r0
 800fbea:	d926      	bls.n	800fc3a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800fbec:	4b15      	ldr	r3, [pc, #84]	@ (800fc44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800fbee:	681b      	ldr	r3, [r3, #0]
 800fbf0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800fbf4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800fbf8:	4b13      	ldr	r3, [pc, #76]	@ (800fc48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800fbfa:	7855      	ldrb	r5, [r2, #1]
 800fbfc:	681b      	ldr	r3, [r3, #0]
 800fbfe:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800fc02:	6833      	ldr	r3, [r6, #0]
 800fc04:	69df      	ldr	r7, [r3, #28]
 800fc06:	4b11      	ldr	r3, [pc, #68]	@ (800fc4c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800fc08:	6818      	ldr	r0, [r3, #0]
 800fc0a:	f7fc f9d1 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 800fc0e:	6823      	ldr	r3, [r4, #0]
 800fc10:	4680      	mov	r8, r0
 800fc12:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800fc14:	4620      	mov	r0, r4
 800fc16:	4798      	blx	r3
 800fc18:	6823      	ldr	r3, [r4, #0]
 800fc1a:	4681      	mov	r9, r0
 800fc1c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800fc20:	4620      	mov	r0, r4
 800fc22:	4798      	blx	r3
 800fc24:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800fc28:	9000      	str	r0, [sp, #0]
 800fc2a:	464b      	mov	r3, r9
 800fc2c:	4642      	mov	r2, r8
 800fc2e:	4629      	mov	r1, r5
 800fc30:	4630      	mov	r0, r6
 800fc32:	47b8      	blx	r7
 800fc34:	b003      	add	sp, #12
 800fc36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc3a:	2000      	movs	r0, #0
 800fc3c:	e7fa      	b.n	800fc34 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800fc3e:	bf00      	nop
 800fc40:	20002f88 	.word	0x20002f88
 800fc44:	20002f84 	.word	0x20002f84
 800fc48:	20002f8c 	.word	0x20002f8c
 800fc4c:	20002f90 	.word	0x20002f90

0800fc50 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800fc50:	b40e      	push	{r1, r2, r3}
 800fc52:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc56:	4b2f      	ldr	r3, [pc, #188]	@ (800fd14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800fc58:	881a      	ldrh	r2, [r3, #0]
 800fc5a:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 800fc5c:	429a      	cmp	r2, r3
 800fc5e:	b09d      	sub	sp, #116	@ 0x74
 800fc60:	4604      	mov	r4, r0
 800fc62:	d954      	bls.n	800fd0e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800fc64:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 800fd18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800fc68:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 800fd1c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800fc6c:	aa26      	add	r2, sp, #152	@ 0x98
 800fc6e:	9202      	str	r2, [sp, #8]
 800fc70:	f8d9 2000 	ldr.w	r2, [r9]
 800fc74:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800fc78:	f8d8 3000 	ldr.w	r3, [r8]
 800fc7c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800fc80:	682b      	ldr	r3, [r5, #0]
 800fc82:	4628      	mov	r0, r5
 800fc84:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fc86:	4798      	blx	r3
 800fc88:	b207      	sxth	r7, r0
 800fc8a:	4606      	mov	r6, r0
 800fc8c:	a803      	add	r0, sp, #12
 800fc8e:	f003 ff2f 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 800fc92:	682b      	ldr	r3, [r5, #0]
 800fc94:	4628      	mov	r0, r5
 800fc96:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fc98:	4798      	blx	r3
 800fc9a:	682b      	ldr	r3, [r5, #0]
 800fc9c:	4682      	mov	sl, r0
 800fc9e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800fca0:	4628      	mov	r0, r5
 800fca2:	4798      	blx	r3
 800fca4:	4653      	mov	r3, sl
 800fca6:	9000      	str	r0, [sp, #0]
 800fca8:	9a02      	ldr	r2, [sp, #8]
 800fcaa:	9925      	ldr	r1, [sp, #148]	@ 0x94
 800fcac:	a803      	add	r0, sp, #12
 800fcae:	f003 ff7a 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800fcb2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800fcb4:	f8d9 3000 	ldr.w	r3, [r9]
 800fcb8:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 800fcbc:	8925      	ldrh	r5, [r4, #8]
 800fcbe:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800fcc2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800fcc6:	eba5 050c 	sub.w	r5, r5, ip
 800fcca:	784a      	ldrb	r2, [r1, #1]
 800fccc:	f8d8 3000 	ldr.w	r3, [r8]
 800fcd0:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 800fcd4:	b22d      	sxth	r5, r5
 800fcd6:	9500      	str	r5, [sp, #0]
 800fcd8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800fcdc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800fce0:	a803      	add	r0, sp, #12
 800fce2:	f001 fdb5 	bl	8011850 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800fce6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 800fcea:	18b9      	adds	r1, r7, r2
 800fcec:	2900      	cmp	r1, #0
 800fcee:	b203      	sxth	r3, r0
 800fcf0:	dd0b      	ble.n	800fd0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800fcf2:	3b01      	subs	r3, #1
 800fcf4:	fb13 f302 	smulbb	r3, r3, r2
 800fcf8:	fb16 3300 	smlabb	r3, r6, r0, r3
 800fcfc:	b21f      	sxth	r7, r3
 800fcfe:	4638      	mov	r0, r7
 800fd00:	b01d      	add	sp, #116	@ 0x74
 800fd02:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fd06:	b003      	add	sp, #12
 800fd08:	4770      	bx	lr
 800fd0a:	2b00      	cmp	r3, #0
 800fd0c:	dcf7      	bgt.n	800fcfe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800fd0e:	2700      	movs	r7, #0
 800fd10:	e7f5      	b.n	800fcfe <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800fd12:	bf00      	nop
 800fd14:	20002f88 	.word	0x20002f88
 800fd18:	20002f84 	.word	0x20002f84
 800fd1c:	20002f8c 	.word	0x20002f8c

0800fd20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800fd20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd24:	4bbc      	ldr	r3, [pc, #752]	@ (8010018 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800fd26:	460c      	mov	r4, r1
 800fd28:	881b      	ldrh	r3, [r3, #0]
 800fd2a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 800fd2c:	428b      	cmp	r3, r1
 800fd2e:	b0a9      	sub	sp, #164	@ 0xa4
 800fd30:	4680      	mov	r8, r0
 800fd32:	d809      	bhi.n	800fd48 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800fd34:	2300      	movs	r3, #0
 800fd36:	f04f 32ff 	mov.w	r2, #4294967295
 800fd3a:	e9c0 3200 	strd	r3, r2, [r0]
 800fd3e:	6083      	str	r3, [r0, #8]
 800fd40:	4640      	mov	r0, r8
 800fd42:	b029      	add	sp, #164	@ 0xa4
 800fd44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd48:	4eb4      	ldr	r6, [pc, #720]	@ (801001c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800fd4a:	6833      	ldr	r3, [r6, #0]
 800fd4c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800fd50:	4bb3      	ldr	r3, [pc, #716]	@ (8010020 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800fd52:	681b      	ldr	r3, [r3, #0]
 800fd54:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800fd58:	4bb2      	ldr	r3, [pc, #712]	@ (8010024 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800fd5a:	6818      	ldr	r0, [r3, #0]
 800fd5c:	f7fc f928 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 800fd60:	682b      	ldr	r3, [r5, #0]
 800fd62:	4681      	mov	r9, r0
 800fd64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fd66:	4628      	mov	r0, r5
 800fd68:	4798      	blx	r3
 800fd6a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 800fd6c:	b203      	sxth	r3, r0
 800fd6e:	4407      	add	r7, r0
 800fd70:	9304      	str	r3, [sp, #16]
 800fd72:	b2bb      	uxth	r3, r7
 800fd74:	9303      	str	r3, [sp, #12]
 800fd76:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 800fd7a:	4682      	mov	sl, r0
 800fd7c:	a80f      	add	r0, sp, #60	@ 0x3c
 800fd7e:	2b00      	cmp	r3, #0
 800fd80:	f040 80a6 	bne.w	800fed0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800fd84:	f003 feb4 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 800fd88:	682b      	ldr	r3, [r5, #0]
 800fd8a:	4628      	mov	r0, r5
 800fd8c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800fd8e:	4798      	blx	r3
 800fd90:	682b      	ldr	r3, [r5, #0]
 800fd92:	4606      	mov	r6, r0
 800fd94:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800fd96:	4628      	mov	r0, r5
 800fd98:	4798      	blx	r3
 800fd9a:	6823      	ldr	r3, [r4, #0]
 800fd9c:	4607      	mov	r7, r0
 800fd9e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800fda0:	4620      	mov	r0, r4
 800fda2:	4798      	blx	r3
 800fda4:	6823      	ldr	r3, [r4, #0]
 800fda6:	4683      	mov	fp, r0
 800fda8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800fdac:	4620      	mov	r0, r4
 800fdae:	4798      	blx	r3
 800fdb0:	463b      	mov	r3, r7
 800fdb2:	e9cd b000 	strd	fp, r0, [sp]
 800fdb6:	4649      	mov	r1, r9
 800fdb8:	4632      	mov	r2, r6
 800fdba:	a80f      	add	r0, sp, #60	@ 0x3c
 800fdbc:	f003 ff08 	bl	8013bd0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800fdc0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800fdc4:	f8df b254 	ldr.w	fp, [pc, #596]	@ 801001c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800fdc8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800fdcc:	f04f 0600 	mov.w	r6, #0
 800fdd0:	bf0c      	ite	eq
 800fdd2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800fdd6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800fdda:	4637      	mov	r7, r6
 800fddc:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 800fdde:	f8db 3000 	ldr.w	r3, [fp]
 800fde2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800fde6:	4629      	mov	r1, r5
 800fde8:	785b      	ldrb	r3, [r3, #1]
 800fdea:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 800fdee:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800fdf2:	a80f      	add	r0, sp, #60	@ 0x3c
 800fdf4:	f001 fa33 	bl	801125e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800fdf8:	9b03      	ldr	r3, [sp, #12]
 800fdfa:	4286      	cmp	r6, r0
 800fdfc:	bfb8      	it	lt
 800fdfe:	4606      	movlt	r6, r0
 800fe00:	3701      	adds	r7, #1
 800fe02:	eba9 0903 	sub.w	r9, r9, r3
 800fe06:	a80f      	add	r0, sp, #60	@ 0x3c
 800fe08:	b236      	sxth	r6, r6
 800fe0a:	b2bf      	uxth	r7, r7
 800fe0c:	fa0f f989 	sxth.w	r9, r9
 800fe10:	f003 fe95 	bl	8013b3e <_ZN8touchgfx12TextProvider11endOfStringEv>
 800fe14:	b918      	cbnz	r0, 800fe1e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800fe16:	7a2b      	ldrb	r3, [r5, #8]
 800fe18:	444b      	add	r3, r9
 800fe1a:	2b00      	cmp	r3, #0
 800fe1c:	dcde      	bgt.n	800fddc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800fe1e:	9b03      	ldr	r3, [sp, #12]
 800fe20:	9a04      	ldr	r2, [sp, #16]
 800fe22:	f895 9009 	ldrb.w	r9, [r5, #9]
 800fe26:	fb13 f707 	smulbb	r7, r3, r7
 800fe2a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 800fe2c:	1aff      	subs	r7, r7, r3
 800fe2e:	b2bf      	uxth	r7, r7
 800fe30:	b23b      	sxth	r3, r7
 800fe32:	429a      	cmp	r2, r3
 800fe34:	bfa8      	it	ge
 800fe36:	4657      	movge	r7, sl
 800fe38:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800fe3c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800fe40:	6823      	ldr	r3, [r4, #0]
 800fe42:	bf08      	it	eq
 800fe44:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800fe48:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800fe4a:	bf18      	it	ne
 800fe4c:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800fe50:	4620      	mov	r0, r4
 800fe52:	4798      	blx	r3
 800fe54:	444f      	add	r7, r9
 800fe56:	fa1f f987 	uxth.w	r9, r7
 800fe5a:	2801      	cmp	r0, #1
 800fe5c:	fa0f f789 	sxth.w	r7, r9
 800fe60:	b2b3      	uxth	r3, r6
 800fe62:	f000 80e1 	beq.w	8010028 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800fe66:	2802      	cmp	r0, #2
 800fe68:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 800fe6c:	f000 80e2 	beq.w	8010034 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800fe70:	7aea      	ldrb	r2, [r5, #11]
 800fe72:	7b2d      	ldrb	r5, [r5, #12]
 800fe74:	b236      	sxth	r6, r6
 800fe76:	1ab6      	subs	r6, r6, r2
 800fe78:	442a      	add	r2, r5
 800fe7a:	4413      	add	r3, r2
 800fe7c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 800fe80:	fa1f fa86 	uxth.w	sl, r6
 800fe84:	b29b      	uxth	r3, r3
 800fe86:	2a02      	cmp	r2, #2
 800fe88:	fa0f fb8a 	sxth.w	fp, sl
 800fe8c:	b21e      	sxth	r6, r3
 800fe8e:	f000 80d5 	beq.w	801003c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800fe92:	2a03      	cmp	r2, #3
 800fe94:	f000 80dd 	beq.w	8010052 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800fe98:	2a01      	cmp	r2, #1
 800fe9a:	f040 80e5 	bne.w	8010068 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800fe9e:	8925      	ldrh	r5, [r4, #8]
 800fea0:	4633      	mov	r3, r6
 800fea2:	eba5 0909 	sub.w	r9, r5, r9
 800fea6:	463e      	mov	r6, r7
 800fea8:	465d      	mov	r5, fp
 800feaa:	461f      	mov	r7, r3
 800feac:	fa0f fb89 	sxth.w	fp, r9
 800feb0:	4b5c      	ldr	r3, [pc, #368]	@ (8010024 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800feb2:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800feb4:	6818      	ldr	r0, [r3, #0]
 800feb6:	f7fc f87b 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 800feba:	f8a8 b000 	strh.w	fp, [r8]
 800febe:	f8a8 5002 	strh.w	r5, [r8, #2]
 800fec2:	f8a8 6004 	strh.w	r6, [r8, #4]
 800fec6:	f8a8 7006 	strh.w	r7, [r8, #6]
 800feca:	f8c8 0008 	str.w	r0, [r8, #8]
 800fece:	e737      	b.n	800fd40 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800fed0:	f003 fe0e 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 800fed4:	682b      	ldr	r3, [r5, #0]
 800fed6:	4628      	mov	r0, r5
 800fed8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800feda:	4798      	blx	r3
 800fedc:	682b      	ldr	r3, [r5, #0]
 800fede:	4607      	mov	r7, r0
 800fee0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800fee2:	4628      	mov	r0, r5
 800fee4:	4798      	blx	r3
 800fee6:	6823      	ldr	r3, [r4, #0]
 800fee8:	4683      	mov	fp, r0
 800feea:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800feec:	4620      	mov	r0, r4
 800feee:	4798      	blx	r3
 800fef0:	6822      	ldr	r2, [r4, #0]
 800fef2:	9005      	str	r0, [sp, #20]
 800fef4:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 800fef8:	4620      	mov	r0, r4
 800fefa:	4790      	blx	r2
 800fefc:	9b05      	ldr	r3, [sp, #20]
 800fefe:	9001      	str	r0, [sp, #4]
 800ff00:	463a      	mov	r2, r7
 800ff02:	4649      	mov	r1, r9
 800ff04:	9300      	str	r3, [sp, #0]
 800ff06:	a80f      	add	r0, sp, #60	@ 0x3c
 800ff08:	465b      	mov	r3, fp
 800ff0a:	f003 fe61 	bl	8013bd0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ff0e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 800ff12:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800ff16:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 800ff18:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 800ff1c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 800ff20:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800ff24:	bf0a      	itet	eq
 800ff26:	464a      	moveq	r2, r9
 800ff28:	461a      	movne	r2, r3
 800ff2a:	4699      	moveq	r9, r3
 800ff2c:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 800ff30:	1ad2      	subs	r2, r2, r3
 800ff32:	6833      	ldr	r3, [r6, #0]
 800ff34:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 800ff38:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ff3c:	af0f      	add	r7, sp, #60	@ 0x3c
 800ff3e:	7859      	ldrb	r1, [r3, #1]
 800ff40:	9707      	str	r7, [sp, #28]
 800ff42:	2300      	movs	r3, #0
 800ff44:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800ff48:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ff4c:	f88d 1020 	strb.w	r1, [sp, #32]
 800ff50:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800ff54:	9509      	str	r5, [sp, #36]	@ 0x24
 800ff56:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 800ff5a:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 800ff5e:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 800ff62:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 800ff66:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 800ff6a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 800ff6e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 800ff72:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800ff76:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800ff7a:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 800ff7e:	b350      	cbz	r0, 800ffd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ff80:	682b      	ldr	r3, [r5, #0]
 800ff82:	4628      	mov	r0, r5
 800ff84:	695b      	ldr	r3, [r3, #20]
 800ff86:	4798      	blx	r3
 800ff88:	4607      	mov	r7, r0
 800ff8a:	b320      	cbz	r0, 800ffd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ff8c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ff8e:	6803      	ldr	r3, [r0, #0]
 800ff90:	4639      	mov	r1, r7
 800ff92:	68db      	ldr	r3, [r3, #12]
 800ff94:	4798      	blx	r3
 800ff96:	4606      	mov	r6, r0
 800ff98:	b1e8      	cbz	r0, 800ffd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ff9a:	7b43      	ldrb	r3, [r0, #13]
 800ff9c:	7a82      	ldrb	r2, [r0, #10]
 800ff9e:	005b      	lsls	r3, r3, #1
 800ffa0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800ffa4:	4313      	orrs	r3, r2
 800ffa6:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 800ffaa:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 800ffae:	2b06      	cmp	r3, #6
 800ffb0:	d111      	bne.n	800ffd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800ffb2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800ffb4:	6803      	ldr	r3, [r0, #0]
 800ffb6:	4632      	mov	r2, r6
 800ffb8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ffba:	4639      	mov	r1, r7
 800ffbc:	4798      	blx	r3
 800ffbe:	7b73      	ldrb	r3, [r6, #13]
 800ffc0:	005b      	lsls	r3, r3, #1
 800ffc2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 800ffc6:	7ab3      	ldrb	r3, [r6, #10]
 800ffc8:	4313      	orrs	r3, r2
 800ffca:	4418      	add	r0, r3
 800ffcc:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800ffd0:	4418      	add	r0, r3
 800ffd2:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 800ffd6:	2600      	movs	r6, #0
 800ffd8:	4637      	mov	r7, r6
 800ffda:	a806      	add	r0, sp, #24
 800ffdc:	f001 fb34 	bl	8011648 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800ffe0:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 800ffe4:	9b03      	ldr	r3, [sp, #12]
 800ffe6:	4286      	cmp	r6, r0
 800ffe8:	eba9 0903 	sub.w	r9, r9, r3
 800ffec:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800fff0:	bfb8      	it	lt
 800fff2:	4606      	movlt	r6, r0
 800fff4:	3701      	adds	r7, #1
 800fff6:	b236      	sxth	r6, r6
 800fff8:	b2bf      	uxth	r7, r7
 800fffa:	fa0f f989 	sxth.w	r9, r9
 800fffe:	2b00      	cmp	r3, #0
 8010000:	f43f af0d 	beq.w	800fe1e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010004:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 8010008:	2b00      	cmp	r3, #0
 801000a:	f47f af08 	bne.w	800fe1e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 801000e:	7a2b      	ldrb	r3, [r5, #8]
 8010010:	444b      	add	r3, r9
 8010012:	2b00      	cmp	r3, #0
 8010014:	dce1      	bgt.n	800ffda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8010016:	e702      	b.n	800fe1e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8010018:	20002f88 	.word	0x20002f88
 801001c:	20002f84 	.word	0x20002f84
 8010020:	20002f8c 	.word	0x20002f8c
 8010024:	20002f90 	.word	0x20002f90
 8010028:	ebaa 0606 	sub.w	r6, sl, r6
 801002c:	2002      	movs	r0, #2
 801002e:	fb96 f6f0 	sdiv	r6, r6, r0
 8010032:	e71d      	b.n	800fe70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8010034:	441e      	add	r6, r3
 8010036:	ebaa 0606 	sub.w	r6, sl, r6
 801003a:	e719      	b.n	800fe70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 801003c:	8925      	ldrh	r5, [r4, #8]
 801003e:	1aed      	subs	r5, r5, r3
 8010040:	eba5 050a 	sub.w	r5, r5, sl
 8010044:	fa0f fb85 	sxth.w	fp, r5
 8010048:	8965      	ldrh	r5, [r4, #10]
 801004a:	eba5 0509 	sub.w	r5, r5, r9
 801004e:	b22d      	sxth	r5, r5
 8010050:	e72e      	b.n	800feb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8010052:	8965      	ldrh	r5, [r4, #10]
 8010054:	1aed      	subs	r5, r5, r3
 8010056:	eba5 050a 	sub.w	r5, r5, sl
 801005a:	4633      	mov	r3, r6
 801005c:	b22d      	sxth	r5, r5
 801005e:	463e      	mov	r6, r7
 8010060:	f04f 0b00 	mov.w	fp, #0
 8010064:	461f      	mov	r7, r3
 8010066:	e723      	b.n	800feb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8010068:	2500      	movs	r5, #0
 801006a:	e721      	b.n	800feb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0801006c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 801006c:	b513      	push	{r0, r1, r4, lr}
 801006e:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 8010072:	4604      	mov	r4, r0
 8010074:	b1fb      	cbz	r3, 80100b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010076:	4b16      	ldr	r3, [pc, #88]	@ (80100d0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8010078:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 801007a:	881b      	ldrh	r3, [r3, #0]
 801007c:	428b      	cmp	r3, r1
 801007e:	d91a      	bls.n	80100b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010080:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8010084:	2b00      	cmp	r3, #0
 8010086:	dd16      	ble.n	80100b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010088:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801008c:	2b00      	cmp	r3, #0
 801008e:	dd12      	ble.n	80100b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8010090:	4b10      	ldr	r3, [pc, #64]	@ (80100d4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8010092:	6818      	ldr	r0, [r3, #0]
 8010094:	f7fb ff8c 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 8010098:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 801009c:	6822      	ldr	r2, [r4, #0]
 801009e:	2b00      	cmp	r3, #0
 80100a0:	db06      	blt.n	80100b0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80100a2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 80100a6:	2b00      	cmp	r3, #0
 80100a8:	db02      	blt.n	80100b0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 80100aa:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80100ac:	4298      	cmp	r0, r3
 80100ae:	d004      	beq.n	80100ba <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 80100b0:	6953      	ldr	r3, [r2, #20]
 80100b2:	4620      	mov	r0, r4
 80100b4:	4798      	blx	r3
 80100b6:	b002      	add	sp, #8
 80100b8:	bd10      	pop	{r4, pc}
 80100ba:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 80100be:	c903      	ldmia	r1, {r0, r1}
 80100c0:	466b      	mov	r3, sp
 80100c2:	e883 0003 	stmia.w	r3, {r0, r1}
 80100c6:	6912      	ldr	r2, [r2, #16]
 80100c8:	4619      	mov	r1, r3
 80100ca:	4620      	mov	r0, r4
 80100cc:	4790      	blx	r2
 80100ce:	e7f2      	b.n	80100b6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80100d0:	20002f88 	.word	0x20002f88
 80100d4:	20002f90 	.word	0x20002f90

080100d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80100d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80100dc:	4b44      	ldr	r3, [pc, #272]	@ (80101f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80100de:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80100e0:	881b      	ldrh	r3, [r3, #0]
 80100e2:	4293      	cmp	r3, r2
 80100e4:	b08e      	sub	sp, #56	@ 0x38
 80100e6:	4604      	mov	r4, r0
 80100e8:	d97e      	bls.n	80101e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80100ea:	6808      	ldr	r0, [r1, #0]
 80100ec:	4d41      	ldr	r5, [pc, #260]	@ (80101f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80100ee:	6849      	ldr	r1, [r1, #4]
 80100f0:	ab05      	add	r3, sp, #20
 80100f2:	c303      	stmia	r3!, {r0, r1}
 80100f4:	4611      	mov	r1, r2
 80100f6:	6828      	ldr	r0, [r5, #0]
 80100f8:	f7fb ff5a 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 80100fc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 8010100:	2b00      	cmp	r3, #0
 8010102:	db11      	blt.n	8010128 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010104:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8010108:	2b00      	cmp	r3, #0
 801010a:	db0d      	blt.n	8010128 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801010c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801010e:	4298      	cmp	r0, r3
 8010110:	d10a      	bne.n	8010128 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8010112:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 8010116:	e892 0003 	ldmia.w	r2, {r0, r1}
 801011a:	ab09      	add	r3, sp, #36	@ 0x24
 801011c:	e883 0003 	stmia.w	r3, {r0, r1}
 8010120:	4619      	mov	r1, r3
 8010122:	a805      	add	r0, sp, #20
 8010124:	f7fe fcca 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 8010128:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801012c:	2b00      	cmp	r3, #0
 801012e:	dd5b      	ble.n	80101e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010130:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8010134:	2b00      	cmp	r3, #0
 8010136:	dd57      	ble.n	80101e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8010138:	4f2f      	ldr	r7, [pc, #188]	@ (80101f8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801013a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 801013c:	683b      	ldr	r3, [r7, #0]
 801013e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8010142:	4b2e      	ldr	r3, [pc, #184]	@ (80101fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8010144:	681b      	ldr	r3, [r3, #0]
 8010146:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801014a:	2e00      	cmp	r6, #0
 801014c:	d04c      	beq.n	80101e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801014e:	6823      	ldr	r3, [r4, #0]
 8010150:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8010154:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8010156:	4620      	mov	r0, r4
 8010158:	4798      	blx	r3
 801015a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 801015c:	683b      	ldr	r3, [r7, #0]
 801015e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 8010162:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8010166:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 801016a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801016c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8010170:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8010174:	785b      	ldrb	r3, [r3, #1]
 8010176:	9609      	str	r6, [sp, #36]	@ 0x24
 8010178:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801017c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8010180:	4b1f      	ldr	r3, [pc, #124]	@ (8010200 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8010182:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8010186:	681b      	ldr	r3, [r3, #0]
 8010188:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 801018c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801018e:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 8010192:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8010196:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 801019a:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 801019e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80101a2:	b10a      	cbz	r2, 80101a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 80101a4:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 80101a6:	b906      	cbnz	r6, 80101aa <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 80101a8:	689e      	ldr	r6, [r3, #8]
 80101aa:	af07      	add	r7, sp, #28
 80101ac:	4621      	mov	r1, r4
 80101ae:	4638      	mov	r0, r7
 80101b0:	f003 f8e8 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80101b4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80101b6:	6828      	ldr	r0, [r5, #0]
 80101b8:	f7fb fefa 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 80101bc:	6823      	ldr	r3, [r4, #0]
 80101be:	4605      	mov	r5, r0
 80101c0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80101c2:	4620      	mov	r0, r4
 80101c4:	4798      	blx	r3
 80101c6:	6823      	ldr	r3, [r4, #0]
 80101c8:	4680      	mov	r8, r0
 80101ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80101ce:	4620      	mov	r0, r4
 80101d0:	4798      	blx	r3
 80101d2:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80101d6:	ab09      	add	r3, sp, #36	@ 0x24
 80101d8:	9300      	str	r3, [sp, #0]
 80101da:	9501      	str	r5, [sp, #4]
 80101dc:	ab05      	add	r3, sp, #20
 80101de:	e897 0006 	ldmia.w	r7, {r1, r2}
 80101e2:	4630      	mov	r0, r6
 80101e4:	f7fb fe75 	bl	800bed2 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80101e8:	b00e      	add	sp, #56	@ 0x38
 80101ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80101ee:	bf00      	nop
 80101f0:	20002f88 	.word	0x20002f88
 80101f4:	20002f90 	.word	0x20002f90
 80101f8:	20002f84 	.word	0x20002f84
 80101fc:	20002f8c 	.word	0x20002f8c
 8010200:	20002f34 	.word	0x20002f34

08010204 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8010204:	b538      	push	{r3, r4, r5, lr}
 8010206:	4b0e      	ldr	r3, [pc, #56]	@ (8010240 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8010208:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 801020a:	881b      	ldrh	r3, [r3, #0]
 801020c:	429a      	cmp	r2, r3
 801020e:	4604      	mov	r4, r0
 8010210:	d214      	bcs.n	801023c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8010212:	6803      	ldr	r3, [r0, #0]
 8010214:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010216:	4798      	blx	r3
 8010218:	6823      	ldr	r3, [r4, #0]
 801021a:	4605      	mov	r5, r0
 801021c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801021e:	4620      	mov	r0, r4
 8010220:	4798      	blx	r3
 8010222:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8010226:	b22d      	sxth	r5, r5
 8010228:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 801022c:	4601      	mov	r1, r0
 801022e:	bf06      	itte	eq
 8010230:	4602      	moveq	r2, r0
 8010232:	4629      	moveq	r1, r5
 8010234:	462a      	movne	r2, r5
 8010236:	4620      	mov	r0, r4
 8010238:	f7f9 fa3f 	bl	80096ba <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801023c:	bd38      	pop	{r3, r4, r5, pc}
 801023e:	bf00      	nop
 8010240:	20002f88 	.word	0x20002f88

08010244 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8010244:	b530      	push	{r4, r5, lr}
 8010246:	888b      	ldrh	r3, [r1, #4]
 8010248:	8583      	strh	r3, [r0, #44]	@ 0x2c
 801024a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801024e:	b085      	sub	sp, #20
 8010250:	4604      	mov	r4, r0
 8010252:	b923      	cbnz	r3, 801025e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8010254:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8010258:	b90b      	cbnz	r3, 801025e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801025a:	f7ff ffd3 	bl	8010204 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801025e:	6823      	ldr	r3, [r4, #0]
 8010260:	466d      	mov	r5, sp
 8010262:	4621      	mov	r1, r4
 8010264:	4628      	mov	r0, r5
 8010266:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 801026a:	4798      	blx	r3
 801026c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8010270:	343c      	adds	r4, #60	@ 0x3c
 8010272:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8010276:	b005      	add	sp, #20
 8010278:	bd30      	pop	{r4, r5, pc}

0801027a <_ZNK8touchgfx3Box12getSolidRectEv>:
 801027a:	2300      	movs	r3, #0
 801027c:	8083      	strh	r3, [r0, #4]
 801027e:	80c3      	strh	r3, [r0, #6]
 8010280:	8003      	strh	r3, [r0, #0]
 8010282:	8043      	strh	r3, [r0, #2]
 8010284:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8010288:	2bff      	cmp	r3, #255	@ 0xff
 801028a:	bf01      	itttt	eq
 801028c:	890b      	ldrheq	r3, [r1, #8]
 801028e:	8083      	strheq	r3, [r0, #4]
 8010290:	894b      	ldrheq	r3, [r1, #10]
 8010292:	80c3      	strheq	r3, [r0, #6]
 8010294:	4770      	bx	lr
	...

08010298 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8010298:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801029a:	4604      	mov	r4, r0
 801029c:	6808      	ldr	r0, [r1, #0]
 801029e:	6849      	ldr	r1, [r1, #4]
 80102a0:	466b      	mov	r3, sp
 80102a2:	c303      	stmia	r3!, {r0, r1}
 80102a4:	6823      	ldr	r3, [r4, #0]
 80102a6:	4669      	mov	r1, sp
 80102a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80102aa:	4620      	mov	r0, r4
 80102ac:	4798      	blx	r3
 80102ae:	4b08      	ldr	r3, [pc, #32]	@ (80102d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80102b0:	681b      	ldr	r3, [r3, #0]
 80102b2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80102b6:	b10a      	cbz	r2, 80102bc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80102b8:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80102ba:	b900      	cbnz	r0, 80102be <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80102bc:	6898      	ldr	r0, [r3, #8]
 80102be:	6803      	ldr	r3, [r0, #0]
 80102c0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80102c2:	6a1d      	ldr	r5, [r3, #32]
 80102c4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80102c8:	4669      	mov	r1, sp
 80102ca:	47a8      	blx	r5
 80102cc:	b003      	add	sp, #12
 80102ce:	bd30      	pop	{r4, r5, pc}
 80102d0:	20002f34 	.word	0x20002f34

080102d4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80102d4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 80102d8:	b12a      	cbz	r2, 80102e6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80102da:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80102de:	b112      	cbz	r2, 80102e6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80102e0:	6803      	ldr	r3, [r0, #0]
 80102e2:	695b      	ldr	r3, [r3, #20]
 80102e4:	4718      	bx	r3
 80102e6:	4770      	bx	lr

080102e8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80102e8:	b570      	push	{r4, r5, r6, lr}
 80102ea:	880b      	ldrh	r3, [r1, #0]
 80102ec:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 80102ee:	4605      	mov	r5, r0
 80102f0:	8813      	ldrh	r3, [r2, #0]
 80102f2:	f825 3f30 	strh.w	r3, [r5, #48]!
 80102f6:	4604      	mov	r4, r0
 80102f8:	4628      	mov	r0, r5
 80102fa:	f005 f9b7 	bl	801566c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80102fe:	4606      	mov	r6, r0
 8010300:	4628      	mov	r0, r5
 8010302:	f005 f9e7 	bl	80156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010306:	6823      	ldr	r3, [r4, #0]
 8010308:	4605      	mov	r5, r0
 801030a:	4631      	mov	r1, r6
 801030c:	4620      	mov	r0, r4
 801030e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010310:	4798      	blx	r3
 8010312:	6823      	ldr	r3, [r4, #0]
 8010314:	4629      	mov	r1, r5
 8010316:	4620      	mov	r0, r4
 8010318:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801031a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801031e:	4718      	bx	r3

08010320 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8010320:	b510      	push	{r4, lr}
 8010322:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8010326:	2bff      	cmp	r3, #255	@ 0xff
 8010328:	4604      	mov	r4, r0
 801032a:	d006      	beq.n	801033a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801032c:	2300      	movs	r3, #0
 801032e:	8003      	strh	r3, [r0, #0]
 8010330:	8043      	strh	r3, [r0, #2]
 8010332:	8083      	strh	r3, [r0, #4]
 8010334:	80c3      	strh	r3, [r0, #6]
 8010336:	4620      	mov	r0, r4
 8010338:	bd10      	pop	{r4, pc}
 801033a:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 801033e:	b11b      	cbz	r3, 8010348 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8010340:	3130      	adds	r1, #48	@ 0x30
 8010342:	f005 f9fb 	bl	801573c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8010346:	e7f6      	b.n	8010336 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8010348:	312e      	adds	r1, #46	@ 0x2e
 801034a:	e7fa      	b.n	8010342 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0801034c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801034c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010350:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8010354:	b08a      	sub	sp, #40	@ 0x28
 8010356:	4604      	mov	r4, r0
 8010358:	4688      	mov	r8, r1
 801035a:	2b00      	cmp	r3, #0
 801035c:	d066      	beq.n	801042c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801035e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8010360:	f8ad 3014 	strh.w	r3, [sp, #20]
 8010364:	a805      	add	r0, sp, #20
 8010366:	f005 f981 	bl	801566c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801036a:	4607      	mov	r7, r0
 801036c:	a805      	add	r0, sp, #20
 801036e:	f005 f9b1 	bl	80156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010372:	f9b8 6000 	ldrsh.w	r6, [r8]
 8010376:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801037a:	4432      	add	r2, r6
 801037c:	b292      	uxth	r2, r2
 801037e:	2300      	movs	r3, #0
 8010380:	fa0f fc82 	sxth.w	ip, r2
 8010384:	459c      	cmp	ip, r3
 8010386:	9306      	str	r3, [sp, #24]
 8010388:	dd52      	ble.n	8010430 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801038a:	42b7      	cmp	r7, r6
 801038c:	dd50      	ble.n	8010430 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801038e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8010392:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8010396:	442b      	add	r3, r5
 8010398:	b29b      	uxth	r3, r3
 801039a:	b219      	sxth	r1, r3
 801039c:	2900      	cmp	r1, #0
 801039e:	dd47      	ble.n	8010430 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80103a0:	42a8      	cmp	r0, r5
 80103a2:	dd45      	ble.n	8010430 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80103a4:	4567      	cmp	r7, ip
 80103a6:	bfb8      	it	lt
 80103a8:	b2ba      	uxthlt	r2, r7
 80103aa:	4288      	cmp	r0, r1
 80103ac:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 80103b0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80103b4:	bfb8      	it	lt
 80103b6:	b283      	uxthlt	r3, r0
 80103b8:	1b92      	subs	r2, r2, r6
 80103ba:	1b5b      	subs	r3, r3, r5
 80103bc:	f8ad 201c 	strh.w	r2, [sp, #28]
 80103c0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80103c4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80103c8:	f8ad 501a 	strh.w	r5, [sp, #26]
 80103cc:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80103d0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80103d4:	429a      	cmp	r2, r3
 80103d6:	d026      	beq.n	8010426 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80103d8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80103dc:	2b00      	cmp	r3, #0
 80103de:	dd22      	ble.n	8010426 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80103e0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80103e4:	2b00      	cmp	r3, #0
 80103e6:	dd1e      	ble.n	8010426 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80103e8:	2300      	movs	r3, #0
 80103ea:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80103ee:	6823      	ldr	r3, [r4, #0]
 80103f0:	a908      	add	r1, sp, #32
 80103f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80103f4:	4620      	mov	r0, r4
 80103f6:	4798      	blx	r3
 80103f8:	4b0f      	ldr	r3, [pc, #60]	@ (8010438 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80103fa:	681b      	ldr	r3, [r3, #0]
 80103fc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8010400:	b10a      	cbz	r2, 8010406 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8010402:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8010404:	b900      	cbnz	r0, 8010408 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8010406:	6898      	ldr	r0, [r3, #8]
 8010408:	6801      	ldr	r1, [r0, #0]
 801040a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801040e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8010412:	2501      	movs	r5, #1
 8010414:	9502      	str	r5, [sp, #8]
 8010416:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 801041a:	9401      	str	r4, [sp, #4]
 801041c:	ac06      	add	r4, sp, #24
 801041e:	9400      	str	r4, [sp, #0]
 8010420:	688c      	ldr	r4, [r1, #8]
 8010422:	a905      	add	r1, sp, #20
 8010424:	47a0      	blx	r4
 8010426:	b00a      	add	sp, #40	@ 0x28
 8010428:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801042c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801042e:	e797      	b.n	8010360 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8010430:	2300      	movs	r3, #0
 8010432:	9307      	str	r3, [sp, #28]
 8010434:	e7ca      	b.n	80103cc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8010436:	bf00      	nop
 8010438:	20002f34 	.word	0x20002f34

0801043c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801043c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010440:	4b2f      	ldr	r3, [pc, #188]	@ (8010500 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8010442:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8010444:	881b      	ldrh	r3, [r3, #0]
 8010446:	4293      	cmp	r3, r2
 8010448:	b08d      	sub	sp, #52	@ 0x34
 801044a:	4604      	mov	r4, r0
 801044c:	460f      	mov	r7, r1
 801044e:	d954      	bls.n	80104fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8010450:	4b2c      	ldr	r3, [pc, #176]	@ (8010504 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8010452:	6819      	ldr	r1, [r3, #0]
 8010454:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8010458:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801045c:	4a2a      	ldr	r2, [pc, #168]	@ (8010508 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801045e:	6812      	ldr	r2, [r2, #0]
 8010460:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8010464:	2900      	cmp	r1, #0
 8010466:	d048      	beq.n	80104fa <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8010468:	785a      	ldrb	r2, [r3, #1]
 801046a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 801046e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8010472:	4b26      	ldr	r3, [pc, #152]	@ (801050c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8010474:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8010478:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 801047c:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8010480:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8010482:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 8010486:	9107      	str	r1, [sp, #28]
 8010488:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801048c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8010490:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8010494:	681a      	ldr	r2, [r3, #0]
 8010496:	f88d 8020 	strb.w	r8, [sp, #32]
 801049a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 801049e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 80104a2:	9609      	str	r6, [sp, #36]	@ 0x24
 80104a4:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 80104a8:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 80104ac:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 80104b0:	b10b      	cbz	r3, 80104b6 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 80104b2:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 80104b4:	b905      	cbnz	r5, 80104b8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 80104b6:	6895      	ldr	r5, [r2, #8]
 80104b8:	ae05      	add	r6, sp, #20
 80104ba:	4621      	mov	r1, r4
 80104bc:	4630      	mov	r0, r6
 80104be:	f002 ff61 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80104c2:	4b13      	ldr	r3, [pc, #76]	@ (8010510 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80104c4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80104c6:	6818      	ldr	r0, [r3, #0]
 80104c8:	f7fb fd72 	bl	800bfb0 <_ZNK8touchgfx5Texts7getTextEt>
 80104cc:	6823      	ldr	r3, [r4, #0]
 80104ce:	4680      	mov	r8, r0
 80104d0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80104d2:	4620      	mov	r0, r4
 80104d4:	4798      	blx	r3
 80104d6:	6823      	ldr	r3, [r4, #0]
 80104d8:	4681      	mov	r9, r0
 80104da:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80104de:	4620      	mov	r0, r4
 80104e0:	4798      	blx	r3
 80104e2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80104e6:	ab07      	add	r3, sp, #28
 80104e8:	9300      	str	r3, [sp, #0]
 80104ea:	f8cd 8004 	str.w	r8, [sp, #4]
 80104ee:	463b      	mov	r3, r7
 80104f0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80104f4:	4628      	mov	r0, r5
 80104f6:	f7fb fcec 	bl	800bed2 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80104fa:	b00d      	add	sp, #52	@ 0x34
 80104fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010500:	20002f88 	.word	0x20002f88
 8010504:	20002f84 	.word	0x20002f84
 8010508:	20002f8c 	.word	0x20002f8c
 801050c:	20002f34 	.word	0x20002f34
 8010510:	20002f90 	.word	0x20002f90

08010514 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8010514:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010518:	4604      	mov	r4, r0
 801051a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 801051c:	8962      	ldrh	r2, [r4, #10]
 801051e:	b218      	sxth	r0, r3
 8010520:	460e      	mov	r6, r1
 8010522:	005b      	lsls	r3, r3, #1
 8010524:	8921      	ldrh	r1, [r4, #8]
 8010526:	b29b      	uxth	r3, r3
 8010528:	1ac9      	subs	r1, r1, r3
 801052a:	b08e      	sub	sp, #56	@ 0x38
 801052c:	b209      	sxth	r1, r1
 801052e:	1ad3      	subs	r3, r2, r3
 8010530:	b21b      	sxth	r3, r3
 8010532:	2900      	cmp	r1, #0
 8010534:	f8ad 0000 	strh.w	r0, [sp]
 8010538:	f8ad 0002 	strh.w	r0, [sp, #2]
 801053c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010540:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010544:	dd5e      	ble.n	8010604 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8010546:	2b00      	cmp	r3, #0
 8010548:	dd5c      	ble.n	8010604 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801054a:	6830      	ldr	r0, [r6, #0]
 801054c:	6871      	ldr	r1, [r6, #4]
 801054e:	ab02      	add	r3, sp, #8
 8010550:	c303      	stmia	r3!, {r0, r1}
 8010552:	4669      	mov	r1, sp
 8010554:	a802      	add	r0, sp, #8
 8010556:	f7fe fab1 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 801055a:	4620      	mov	r0, r4
 801055c:	a902      	add	r1, sp, #8
 801055e:	f7ff fe9b 	bl	8010298 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8010562:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8010564:	2800      	cmp	r0, #0
 8010566:	d05f      	beq.n	8010628 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8010568:	8963      	ldrh	r3, [r4, #10]
 801056a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801056e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010572:	1a1f      	subs	r7, r3, r0
 8010574:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8010578:	b202      	sxth	r2, r0
 801057a:	2500      	movs	r5, #0
 801057c:	b21b      	sxth	r3, r3
 801057e:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8010582:	1a09      	subs	r1, r1, r0
 8010584:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8010588:	9506      	str	r5, [sp, #24]
 801058a:	f8ad 201e 	strh.w	r2, [sp, #30]
 801058e:	f8ad 5020 	strh.w	r5, [sp, #32]
 8010592:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8010596:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 801059a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801059e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80105a2:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80105a6:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 80105aa:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80105ae:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80105b2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80105b6:	af04      	add	r7, sp, #16
 80105b8:	ab06      	add	r3, sp, #24
 80105ba:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80105be:	e893 0003 	ldmia.w	r3, {r0, r1}
 80105c2:	e887 0003 	stmia.w	r7, {r0, r1}
 80105c6:	4631      	mov	r1, r6
 80105c8:	4638      	mov	r0, r7
 80105ca:	f7fe fa77 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 80105ce:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80105d2:	2b00      	cmp	r3, #0
 80105d4:	dd12      	ble.n	80105fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80105d6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80105da:	2b00      	cmp	r3, #0
 80105dc:	dd0e      	ble.n	80105fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80105de:	6823      	ldr	r3, [r4, #0]
 80105e0:	4639      	mov	r1, r7
 80105e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80105e4:	4620      	mov	r0, r4
 80105e6:	4798      	blx	r3
 80105e8:	f7f8 f8d6 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 80105ec:	6803      	ldr	r3, [r0, #0]
 80105ee:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80105f0:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80105f4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80105f8:	4639      	mov	r1, r7
 80105fa:	47c0      	blx	r8
 80105fc:	3501      	adds	r5, #1
 80105fe:	2d04      	cmp	r5, #4
 8010600:	d1da      	bne.n	80105b8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8010602:	e011      	b.n	8010628 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8010604:	6830      	ldr	r0, [r6, #0]
 8010606:	6871      	ldr	r1, [r6, #4]
 8010608:	ab06      	add	r3, sp, #24
 801060a:	c303      	stmia	r3!, {r0, r1}
 801060c:	6823      	ldr	r3, [r4, #0]
 801060e:	a906      	add	r1, sp, #24
 8010610:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010612:	4620      	mov	r0, r4
 8010614:	4798      	blx	r3
 8010616:	f7f8 f8bf 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 801061a:	6803      	ldr	r3, [r0, #0]
 801061c:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 801061e:	6a1d      	ldr	r5, [r3, #32]
 8010620:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8010624:	a906      	add	r1, sp, #24
 8010626:	47a8      	blx	r5
 8010628:	b00e      	add	sp, #56	@ 0x38
 801062a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801062e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 801062e:	4770      	bx	lr

08010630 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8010630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010634:	461c      	mov	r4, r3
 8010636:	4606      	mov	r6, r0
 8010638:	9f06      	ldr	r7, [sp, #24]
 801063a:	f7ff fe55 	bl	80102e8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 801063e:	8823      	ldrh	r3, [r4, #0]
 8010640:	86b3      	strh	r3, [r6, #52]	@ 0x34
 8010642:	883b      	ldrh	r3, [r7, #0]
 8010644:	86f3      	strh	r3, [r6, #54]	@ 0x36
 8010646:	4638      	mov	r0, r7
 8010648:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 801064c:	f005 f80e 	bl	801566c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010650:	f04f 0802 	mov.w	r8, #2
 8010654:	fb95 f5f8 	sdiv	r5, r5, r8
 8010658:	b2ad      	uxth	r5, r5
 801065a:	fb90 f0f8 	sdiv	r0, r0, r8
 801065e:	1a2d      	subs	r5, r5, r0
 8010660:	8735      	strh	r5, [r6, #56]	@ 0x38
 8010662:	4638      	mov	r0, r7
 8010664:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8010668:	fb94 f4f8 	sdiv	r4, r4, r8
 801066c:	f005 f832 	bl	80156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010670:	b2a4      	uxth	r4, r4
 8010672:	fb90 f0f8 	sdiv	r0, r0, r8
 8010676:	1a24      	subs	r4, r4, r0
 8010678:	8774      	strh	r4, [r6, #58]	@ 0x3a
 801067a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08010680 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8010680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010684:	4604      	mov	r4, r0
 8010686:	b08c      	sub	sp, #48	@ 0x30
 8010688:	460d      	mov	r5, r1
 801068a:	f7ff fe5f 	bl	801034c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801068e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8010692:	2b00      	cmp	r3, #0
 8010694:	d05d      	beq.n	8010752 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8010696:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8010698:	f8ad 3014 	strh.w	r3, [sp, #20]
 801069c:	a805      	add	r0, sp, #20
 801069e:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 80106a2:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 80106a6:	f004 ffe1 	bl	801566c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80106aa:	4606      	mov	r6, r0
 80106ac:	a805      	add	r0, sp, #20
 80106ae:	f005 f811 	bl	80156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80106b2:	6869      	ldr	r1, [r5, #4]
 80106b4:	f8ad 001e 	strh.w	r0, [sp, #30]
 80106b8:	6828      	ldr	r0, [r5, #0]
 80106ba:	f8ad 8018 	strh.w	r8, [sp, #24]
 80106be:	ab08      	add	r3, sp, #32
 80106c0:	ad08      	add	r5, sp, #32
 80106c2:	c303      	stmia	r3!, {r0, r1}
 80106c4:	a906      	add	r1, sp, #24
 80106c6:	4628      	mov	r0, r5
 80106c8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80106cc:	f8ad 601c 	strh.w	r6, [sp, #28]
 80106d0:	f7fe f9f4 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 80106d4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80106d8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80106dc:	429a      	cmp	r2, r3
 80106de:	d035      	beq.n	801074c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80106e0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80106e4:	2b00      	cmp	r3, #0
 80106e6:	dd31      	ble.n	801074c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80106e8:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 80106ec:	2b00      	cmp	r3, #0
 80106ee:	dd2d      	ble.n	801074c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80106f0:	2300      	movs	r3, #0
 80106f2:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 80106f6:	6823      	ldr	r3, [r4, #0]
 80106f8:	a90a      	add	r1, sp, #40	@ 0x28
 80106fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80106fc:	4620      	mov	r0, r4
 80106fe:	4798      	blx	r3
 8010700:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8010704:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 8010706:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801070a:	1a9b      	subs	r3, r3, r2
 801070c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010710:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 8010712:	1ac9      	subs	r1, r1, r3
 8010714:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 8010718:	490f      	ldr	r1, [pc, #60]	@ (8010758 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 801071a:	6809      	ldr	r1, [r1, #0]
 801071c:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 8010720:	b108      	cbz	r0, 8010726 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8010722:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 8010724:	b900      	cbnz	r0, 8010728 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8010726:	6888      	ldr	r0, [r1, #8]
 8010728:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 801072c:	440b      	add	r3, r1
 801072e:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8010732:	2601      	movs	r6, #1
 8010734:	440a      	add	r2, r1
 8010736:	6801      	ldr	r1, [r0, #0]
 8010738:	9602      	str	r6, [sp, #8]
 801073a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 801073e:	e9cd 5400 	strd	r5, r4, [sp]
 8010742:	b21b      	sxth	r3, r3
 8010744:	688c      	ldr	r4, [r1, #8]
 8010746:	b212      	sxth	r2, r2
 8010748:	a905      	add	r1, sp, #20
 801074a:	47a0      	blx	r4
 801074c:	b00c      	add	sp, #48	@ 0x30
 801074e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010752:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8010754:	e7a0      	b.n	8010698 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8010756:	bf00      	nop
 8010758:	20002f34 	.word	0x20002f34

0801075c <_ZN8touchgfx14ButtonWithIconC1Ev>:
 801075c:	b510      	push	{r4, lr}
 801075e:	2101      	movs	r1, #1
 8010760:	2200      	movs	r2, #0
 8010762:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8010766:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 801076a:	4c0e      	ldr	r4, [pc, #56]	@ (80107a4 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 801076c:	8082      	strh	r2, [r0, #4]
 801076e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8010772:	80c2      	strh	r2, [r0, #6]
 8010774:	8102      	strh	r2, [r0, #8]
 8010776:	8142      	strh	r2, [r0, #10]
 8010778:	8182      	strh	r2, [r0, #12]
 801077a:	81c2      	strh	r2, [r0, #14]
 801077c:	8202      	strh	r2, [r0, #16]
 801077e:	8242      	strh	r2, [r0, #18]
 8010780:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010784:	61c2      	str	r2, [r0, #28]
 8010786:	8402      	strh	r2, [r0, #32]
 8010788:	8442      	strh	r2, [r0, #34]	@ 0x22
 801078a:	6282      	str	r2, [r0, #40]	@ 0x28
 801078c:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8010790:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8010792:	8601      	strh	r1, [r0, #48]	@ 0x30
 8010794:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8010798:	6004      	str	r4, [r0, #0]
 801079a:	8681      	strh	r1, [r0, #52]	@ 0x34
 801079c:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801079e:	8702      	strh	r2, [r0, #56]	@ 0x38
 80107a0:	8742      	strh	r2, [r0, #58]	@ 0x3a
 80107a2:	bd10      	pop	{r4, pc}
 80107a4:	0802707c 	.word	0x0802707c

080107a8 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80107a8:	b510      	push	{r4, lr}
 80107aa:	6803      	ldr	r3, [r0, #0]
 80107ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80107ae:	460c      	mov	r4, r1
 80107b0:	4798      	blx	r3
 80107b2:	1b03      	subs	r3, r0, r4
 80107b4:	4258      	negs	r0, r3
 80107b6:	4158      	adcs	r0, r3
 80107b8:	bd10      	pop	{r4, pc}
	...

080107bc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80107bc:	4b01      	ldr	r3, [pc, #4]	@ (80107c4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80107be:	6019      	str	r1, [r3, #0]
 80107c0:	4770      	bx	lr
 80107c2:	bf00      	nop
 80107c4:	20002f3c 	.word	0x20002f3c

080107c8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80107c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107cc:	4696      	mov	lr, r2
 80107ce:	4605      	mov	r5, r0
 80107d0:	4614      	mov	r4, r2
 80107d2:	460e      	mov	r6, r1
 80107d4:	461f      	mov	r7, r3
 80107d6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80107da:	b097      	sub	sp, #92	@ 0x5c
 80107dc:	f10d 0c1c 	add.w	ip, sp, #28
 80107e0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80107e4:	f8de 3000 	ldr.w	r3, [lr]
 80107e8:	f8cc 3000 	str.w	r3, [ip]
 80107ec:	f104 0e14 	add.w	lr, r4, #20
 80107f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80107f4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80107f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80107fc:	f8de 3000 	ldr.w	r3, [lr]
 8010800:	f8cc 3000 	str.w	r3, [ip]
 8010804:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8010808:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801080c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8010810:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010814:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8010818:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 801081c:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8010820:	f8de 3000 	ldr.w	r3, [lr]
 8010824:	f8cc 3000 	str.w	r3, [ip]
 8010828:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801082a:	682b      	ldr	r3, [r5, #0]
 801082c:	9201      	str	r2, [sp, #4]
 801082e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010832:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8010834:	9200      	str	r2, [sp, #0]
 8010836:	f8cd 8008 	str.w	r8, [sp, #8]
 801083a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 801083e:	aa07      	add	r2, sp, #28
 8010840:	463b      	mov	r3, r7
 8010842:	4631      	mov	r1, r6
 8010844:	4628      	mov	r0, r5
 8010846:	47d8      	blx	fp
 8010848:	46a6      	mov	lr, r4
 801084a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801084e:	f10d 0c1c 	add.w	ip, sp, #28
 8010852:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010856:	f8de 3000 	ldr.w	r3, [lr]
 801085a:	f8cc 3000 	str.w	r3, [ip]
 801085e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8010862:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010866:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801086a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801086e:	343c      	adds	r4, #60	@ 0x3c
 8010870:	f8de 3000 	ldr.w	r3, [lr]
 8010874:	f8cc 3000 	str.w	r3, [ip]
 8010878:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801087a:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 801087e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010882:	6823      	ldr	r3, [r4, #0]
 8010884:	f8cc 3000 	str.w	r3, [ip]
 8010888:	682b      	ldr	r3, [r5, #0]
 801088a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801088e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8010890:	9201      	str	r2, [sp, #4]
 8010892:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8010894:	9200      	str	r2, [sp, #0]
 8010896:	f8cd 8008 	str.w	r8, [sp, #8]
 801089a:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 801089c:	aa07      	add	r2, sp, #28
 801089e:	463b      	mov	r3, r7
 80108a0:	4631      	mov	r1, r6
 80108a2:	4628      	mov	r0, r5
 80108a4:	47a0      	blx	r4
 80108a6:	b017      	add	sp, #92	@ 0x5c
 80108a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080108ac <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80108ac:	2000      	movs	r0, #0
 80108ae:	4770      	bx	lr

080108b0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80108b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80108b4:	b08d      	sub	sp, #52	@ 0x34
 80108b6:	4688      	mov	r8, r1
 80108b8:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80108ba:	f8d3 c000 	ldr.w	ip, [r3]
 80108be:	680f      	ldr	r7, [r1, #0]
 80108c0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80108c4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80108c8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80108cc:	edd3 6a07 	vldr	s13, [r3, #28]
 80108d0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80108d2:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80108d6:	f9b1 9000 	ldrsh.w	r9, [r1]
 80108da:	f9ba 1000 	ldrsh.w	r1, [sl]
 80108de:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 80108e2:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 80108e6:	eba7 070c 	sub.w	r7, r7, ip
 80108ea:	42bc      	cmp	r4, r7
 80108ec:	bfa8      	it	ge
 80108ee:	463c      	movge	r4, r7
 80108f0:	ee07 4a90 	vmov	s15, r4
 80108f4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80108f8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 80108fc:	ee25 4a04 	vmul.f32	s8, s10, s8
 8010900:	ee65 4a24 	vmul.f32	s9, s10, s9
 8010904:	ee25 5a27 	vmul.f32	s10, s10, s15
 8010908:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 801090c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8010910:	eb09 0e0c 	add.w	lr, r9, ip
 8010914:	4571      	cmp	r1, lr
 8010916:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801091a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801091e:	ee36 0a84 	vadd.f32	s0, s13, s8
 8010922:	ee61 1a87 	vmul.f32	s3, s3, s14
 8010926:	ee22 2a07 	vmul.f32	s4, s4, s14
 801092a:	f340 808d 	ble.w	8010a48 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801092e:	eba1 060e 	sub.w	r6, r1, lr
 8010932:	fb96 f5f4 	sdiv	r5, r6, r4
 8010936:	ee07 5a10 	vmov	s14, r5
 801093a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801093e:	2d00      	cmp	r5, #0
 8010940:	fb04 6615 	mls	r6, r4, r5, r6
 8010944:	eea7 0a04 	vfma.f32	s0, s14, s8
 8010948:	eee7 0a24 	vfma.f32	s1, s14, s9
 801094c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8010950:	dd13      	ble.n	801097a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8010952:	ee70 6a44 	vsub.f32	s13, s0, s8
 8010956:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801095a:	eef5 6a40 	vcmp.f32	s13, #0.0
 801095e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010962:	bf18      	it	ne
 8010964:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8010968:	ee31 2a45 	vsub.f32	s4, s2, s10
 801096c:	bf08      	it	eq
 801096e:	eeb0 7a67 	vmoveq.f32	s14, s15
 8010972:	ee61 1a87 	vmul.f32	s3, s3, s14
 8010976:	ee22 2a07 	vmul.f32	s4, s4, s14
 801097a:	fb05 f204 	mul.w	r2, r5, r4
 801097e:	1abf      	subs	r7, r7, r2
 8010980:	4494      	add	ip, r2
 8010982:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8010986:	4411      	add	r1, r2
 8010988:	eb09 020c 	add.w	r2, r9, ip
 801098c:	443a      	add	r2, r7
 801098e:	b209      	sxth	r1, r1
 8010990:	428a      	cmp	r2, r1
 8010992:	bfc4      	itt	gt
 8010994:	eba1 0209 	subgt.w	r2, r1, r9
 8010998:	eba2 070c 	subgt.w	r7, r2, ip
 801099c:	2f00      	cmp	r7, #0
 801099e:	dd50      	ble.n	8010a42 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80109a0:	fb97 f1f4 	sdiv	r1, r7, r4
 80109a4:	fb04 7211 	mls	r2, r4, r1, r7
 80109a8:	b90a      	cbnz	r2, 80109ae <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80109aa:	3901      	subs	r1, #1
 80109ac:	4622      	mov	r2, r4
 80109ae:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80109b2:	6840      	ldr	r0, [r0, #4]
 80109b4:	900b      	str	r0, [sp, #44]	@ 0x2c
 80109b6:	f8d0 a000 	ldr.w	sl, [r0]
 80109ba:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80109bc:	9008      	str	r0, [sp, #32]
 80109be:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80109c2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80109c4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80109c8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80109cc:	695b      	ldr	r3, [r3, #20]
 80109ce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80109d0:	445b      	add	r3, fp
 80109d2:	eef0 6a42 	vmov.f32	s13, s4
 80109d6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80109da:	ee21 3a23 	vmul.f32	s6, s2, s7
 80109de:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80109e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80109e6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80109ea:	9307      	str	r3, [sp, #28]
 80109ec:	ee17 7a90 	vmov	r7, s15
 80109f0:	ee73 7a42 	vsub.f32	s15, s6, s4
 80109f4:	eeb0 7a61 	vmov.f32	s14, s3
 80109f8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80109fc:	ee16 3a90 	vmov	r3, s13
 8010a00:	fb97 f7f4 	sdiv	r7, r7, r4
 8010a04:	ee17 ca90 	vmov	ip, s15
 8010a08:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8010a0c:	fb9c fcf4 	sdiv	ip, ip, r4
 8010a10:	fb0c 3306 	mla	r3, ip, r6, r3
 8010a14:	9302      	str	r3, [sp, #8]
 8010a16:	ee17 3a10 	vmov	r3, s14
 8010a1a:	44b6      	add	lr, r6
 8010a1c:	fb04 e505 	mla	r5, r4, r5, lr
 8010a20:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8010a24:	fb07 3706 	mla	r7, r7, r6, r3
 8010a28:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8010a2c:	e9cd 4700 	strd	r4, r7, [sp]
 8010a30:	2900      	cmp	r1, #0
 8010a32:	bfcc      	ite	gt
 8010a34:	46a1      	movgt	r9, r4
 8010a36:	4691      	movle	r9, r2
 8010a38:	eba9 0306 	sub.w	r3, r9, r6
 8010a3c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8010a40:	47a0      	blx	r4
 8010a42:	b00d      	add	sp, #52	@ 0x34
 8010a44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a48:	2500      	movs	r5, #0
 8010a4a:	462e      	mov	r6, r5
 8010a4c:	e799      	b.n	8010982 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08010a50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a54:	b0db      	sub	sp, #364	@ 0x16c
 8010a56:	461d      	mov	r5, r3
 8010a58:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8010a5c:	930a      	str	r3, [sp, #40]	@ 0x28
 8010a5e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8010a62:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010a64:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8010a68:	9310      	str	r3, [sp, #64]	@ 0x40
 8010a6a:	6803      	ldr	r3, [r0, #0]
 8010a6c:	910f      	str	r1, [sp, #60]	@ 0x3c
 8010a6e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8010a70:	9009      	str	r0, [sp, #36]	@ 0x24
 8010a72:	4614      	mov	r4, r2
 8010a74:	4629      	mov	r1, r5
 8010a76:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8010a7a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8010a7e:	47b8      	blx	r7
 8010a80:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010a82:	6058      	str	r0, [r3, #4]
 8010a84:	2800      	cmp	r0, #0
 8010a86:	f000 83a1 	beq.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010a8a:	682b      	ldr	r3, [r5, #0]
 8010a8c:	9314      	str	r3, [sp, #80]	@ 0x50
 8010a8e:	686b      	ldr	r3, [r5, #4]
 8010a90:	9315      	str	r3, [sp, #84]	@ 0x54
 8010a92:	4bc4      	ldr	r3, [pc, #784]	@ (8010da4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8010a94:	ed94 7a02 	vldr	s14, [r4, #8]
 8010a98:	7819      	ldrb	r1, [r3, #0]
 8010a9a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8010a9e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8010aa2:	2900      	cmp	r1, #0
 8010aa4:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010aa8:	bf16      	itet	ne
 8010aaa:	4619      	movne	r1, r3
 8010aac:	4611      	moveq	r1, r2
 8010aae:	4613      	movne	r3, r2
 8010ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010ab4:	9116      	str	r1, [sp, #88]	@ 0x58
 8010ab6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8010aba:	f240 8387 	bls.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010abe:	ed94 7a07 	vldr	s14, [r4, #28]
 8010ac2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010ac6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010aca:	f240 837f 	bls.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010ace:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8010ad2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010ad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010ada:	f240 8377 	bls.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010ade:	6822      	ldr	r2, [r4, #0]
 8010ae0:	4bb1      	ldr	r3, [pc, #708]	@ (8010da8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8010ae2:	429a      	cmp	r2, r3
 8010ae4:	f2c0 8372 	blt.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010ae8:	49b0      	ldr	r1, [pc, #704]	@ (8010dac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8010aea:	6963      	ldr	r3, [r4, #20]
 8010aec:	428a      	cmp	r2, r1
 8010aee:	f300 836d 	bgt.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010af2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8010af6:	48ae      	ldr	r0, [pc, #696]	@ (8010db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8010af8:	33ff      	adds	r3, #255	@ 0xff
 8010afa:	4283      	cmp	r3, r0
 8010afc:	f200 8366 	bhi.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010b00:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8010b02:	4dac      	ldr	r5, [pc, #688]	@ (8010db4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8010b04:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8010b08:	33ff      	adds	r3, #255	@ 0xff
 8010b0a:	42ab      	cmp	r3, r5
 8010b0c:	f200 835e 	bhi.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010b10:	6862      	ldr	r2, [r4, #4]
 8010b12:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8010b16:	33ff      	adds	r3, #255	@ 0xff
 8010b18:	4283      	cmp	r3, r0
 8010b1a:	f200 8357 	bhi.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010b1e:	69a1      	ldr	r1, [r4, #24]
 8010b20:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8010b24:	33ff      	adds	r3, #255	@ 0xff
 8010b26:	4283      	cmp	r3, r0
 8010b28:	f200 8350 	bhi.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010b2c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8010b2e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8010b32:	30ff      	adds	r0, #255	@ 0xff
 8010b34:	42a8      	cmp	r0, r5
 8010b36:	f200 8349 	bhi.w	80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010b3a:	428a      	cmp	r2, r1
 8010b3c:	f280 8110 	bge.w	8010d60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8010b40:	429a      	cmp	r2, r3
 8010b42:	f300 8119 	bgt.w	8010d78 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8010b46:	4299      	cmp	r1, r3
 8010b48:	f280 811d 	bge.w	8010d86 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8010b4c:	2502      	movs	r5, #2
 8010b4e:	2701      	movs	r7, #1
 8010b50:	46a9      	mov	r9, r5
 8010b52:	46b8      	mov	r8, r7
 8010b54:	f04f 0a00 	mov.w	sl, #0
 8010b58:	4621      	mov	r1, r4
 8010b5a:	a849      	add	r0, sp, #292	@ 0x124
 8010b5c:	f003 fd3a 	bl	80145d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8010b60:	4622      	mov	r2, r4
 8010b62:	4653      	mov	r3, sl
 8010b64:	a949      	add	r1, sp, #292	@ 0x124
 8010b66:	f8cd 9000 	str.w	r9, [sp]
 8010b6a:	a819      	add	r0, sp, #100	@ 0x64
 8010b6c:	f003 fe62 	bl	8014834 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010b70:	4622      	mov	r2, r4
 8010b72:	4653      	mov	r3, sl
 8010b74:	a949      	add	r1, sp, #292	@ 0x124
 8010b76:	f8cd 8000 	str.w	r8, [sp]
 8010b7a:	a829      	add	r0, sp, #164	@ 0xa4
 8010b7c:	f003 fe5a 	bl	8014834 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010b80:	4643      	mov	r3, r8
 8010b82:	4622      	mov	r2, r4
 8010b84:	a949      	add	r1, sp, #292	@ 0x124
 8010b86:	f8cd 9000 	str.w	r9, [sp]
 8010b8a:	a839      	add	r0, sp, #228	@ 0xe4
 8010b8c:	f003 fe52 	bl	8014834 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010b90:	42af      	cmp	r7, r5
 8010b92:	bfb5      	itete	lt
 8010b94:	2300      	movlt	r3, #0
 8010b96:	2301      	movge	r3, #1
 8010b98:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8010b9a:	930e      	strge	r3, [sp, #56]	@ 0x38
 8010b9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8010b9e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010ba2:	af12      	add	r7, sp, #72	@ 0x48
 8010ba4:	bfb9      	ittee	lt
 8010ba6:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8010ba8:	ac19      	addlt	r4, sp, #100	@ 0x64
 8010baa:	ad19      	addge	r5, sp, #100	@ 0x64
 8010bac:	ac29      	addge	r4, sp, #164	@ 0xa4
 8010bae:	e887 0003 	stmia.w	r7, {r0, r1}
 8010bb2:	b928      	cbnz	r0, 8010bc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8010bb4:	4b80      	ldr	r3, [pc, #512]	@ (8010db8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8010bb6:	6818      	ldr	r0, [r3, #0]
 8010bb8:	6803      	ldr	r3, [r0, #0]
 8010bba:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010bbc:	4798      	blx	r3
 8010bbe:	6038      	str	r0, [r7, #0]
 8010bc0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8010bc2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010bc6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010bca:	930c      	str	r3, [sp, #48]	@ 0x30
 8010bcc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8010bce:	6963      	ldr	r3, [r4, #20]
 8010bd0:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8010bd2:	440b      	add	r3, r1
 8010bd4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010bd8:	4408      	add	r0, r1
 8010bda:	b200      	sxth	r0, r0
 8010bdc:	4283      	cmp	r3, r0
 8010bde:	900d      	str	r0, [sp, #52]	@ 0x34
 8010be0:	f280 80dd 	bge.w	8010d9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8010be4:	428b      	cmp	r3, r1
 8010be6:	da08      	bge.n	8010bfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010be8:	2a00      	cmp	r2, #0
 8010bea:	dd06      	ble.n	8010bfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010bec:	1acb      	subs	r3, r1, r3
 8010bee:	429a      	cmp	r2, r3
 8010bf0:	f2c0 80e4 	blt.w	8010dbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8010bf4:	2b00      	cmp	r3, #0
 8010bf6:	f300 80e2 	bgt.w	8010dbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8010bfa:	6967      	ldr	r7, [r4, #20]
 8010bfc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010bfe:	443b      	add	r3, r7
 8010c00:	461f      	mov	r7, r3
 8010c02:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010c04:	1bdf      	subs	r7, r3, r7
 8010c06:	4297      	cmp	r7, r2
 8010c08:	bfa8      	it	ge
 8010c0a:	4617      	movge	r7, r2
 8010c0c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8010c10:	2f00      	cmp	r7, #0
 8010c12:	f340 8166 	ble.w	8010ee2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8010c16:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8010c18:	6829      	ldr	r1, [r5, #0]
 8010c1a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010c1e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010c22:	6820      	ldr	r0, [r4, #0]
 8010c24:	4411      	add	r1, r2
 8010c26:	4299      	cmp	r1, r3
 8010c28:	dd1a      	ble.n	8010c60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8010c2a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010c2e:	440b      	add	r3, r1
 8010c30:	4402      	add	r2, r0
 8010c32:	b21b      	sxth	r3, r3
 8010c34:	429a      	cmp	r2, r3
 8010c36:	dc13      	bgt.n	8010c60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8010c38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010c3a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010c3c:	681b      	ldr	r3, [r3, #0]
 8010c3e:	9206      	str	r2, [sp, #24]
 8010c40:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010c42:	9205      	str	r2, [sp, #20]
 8010c44:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8010c46:	9500      	str	r5, [sp, #0]
 8010c48:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010c4c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8010c4e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010c50:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010c54:	a912      	add	r1, sp, #72	@ 0x48
 8010c56:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8010c5a:	aa49      	add	r2, sp, #292	@ 0x124
 8010c5c:	4623      	mov	r3, r4
 8010c5e:	47c8      	blx	r9
 8010c60:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010c64:	441a      	add	r2, r3
 8010c66:	6963      	ldr	r3, [r4, #20]
 8010c68:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8010c6c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8010c70:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8010c74:	68a1      	ldr	r1, [r4, #8]
 8010c76:	ed94 6a08 	vldr	s12, [r4, #32]
 8010c7a:	6022      	str	r2, [r4, #0]
 8010c7c:	3301      	adds	r3, #1
 8010c7e:	6163      	str	r3, [r4, #20]
 8010c80:	69a3      	ldr	r3, [r4, #24]
 8010c82:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010c86:	3b01      	subs	r3, #1
 8010c88:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8010c8c:	61a3      	str	r3, [r4, #24]
 8010c8e:	6923      	ldr	r3, [r4, #16]
 8010c90:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010c94:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010c98:	edd4 6a07 	vldr	s13, [r4, #28]
 8010c9c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010ca0:	440b      	add	r3, r1
 8010ca2:	68e1      	ldr	r1, [r4, #12]
 8010ca4:	6123      	str	r3, [r4, #16]
 8010ca6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010caa:	428b      	cmp	r3, r1
 8010cac:	edc4 6a07 	vstr	s13, [r4, #28]
 8010cb0:	db15      	blt.n	8010cde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8010cb2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8010cb6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010cba:	3201      	adds	r2, #1
 8010cbc:	edc4 6a07 	vstr	s13, [r4, #28]
 8010cc0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8010cc4:	6022      	str	r2, [r4, #0]
 8010cc6:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010cca:	1a5b      	subs	r3, r3, r1
 8010ccc:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010cd0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8010cd4:	6123      	str	r3, [r4, #16]
 8010cd6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010cda:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010cde:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010ce2:	441a      	add	r2, r3
 8010ce4:	696b      	ldr	r3, [r5, #20]
 8010ce6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8010cea:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8010cee:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8010cf2:	68a9      	ldr	r1, [r5, #8]
 8010cf4:	ed95 6a08 	vldr	s12, [r5, #32]
 8010cf8:	602a      	str	r2, [r5, #0]
 8010cfa:	3301      	adds	r3, #1
 8010cfc:	616b      	str	r3, [r5, #20]
 8010cfe:	69ab      	ldr	r3, [r5, #24]
 8010d00:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010d04:	3b01      	subs	r3, #1
 8010d06:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8010d0a:	61ab      	str	r3, [r5, #24]
 8010d0c:	692b      	ldr	r3, [r5, #16]
 8010d0e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010d12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010d16:	edd5 6a07 	vldr	s13, [r5, #28]
 8010d1a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010d1e:	440b      	add	r3, r1
 8010d20:	68e9      	ldr	r1, [r5, #12]
 8010d22:	612b      	str	r3, [r5, #16]
 8010d24:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010d28:	428b      	cmp	r3, r1
 8010d2a:	edc5 6a07 	vstr	s13, [r5, #28]
 8010d2e:	db15      	blt.n	8010d5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8010d30:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8010d34:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010d38:	3201      	adds	r2, #1
 8010d3a:	edc5 6a07 	vstr	s13, [r5, #28]
 8010d3e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8010d42:	602a      	str	r2, [r5, #0]
 8010d44:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010d48:	1a5b      	subs	r3, r3, r1
 8010d4a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8010d4e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8010d52:	612b      	str	r3, [r5, #16]
 8010d54:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010d58:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8010d5c:	3f01      	subs	r7, #1
 8010d5e:	e757      	b.n	8010c10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010d60:	4299      	cmp	r1, r3
 8010d62:	dc13      	bgt.n	8010d8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8010d64:	429a      	cmp	r2, r3
 8010d66:	da14      	bge.n	8010d92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8010d68:	2502      	movs	r5, #2
 8010d6a:	2703      	movs	r7, #3
 8010d6c:	46a9      	mov	r9, r5
 8010d6e:	f04f 0800 	mov.w	r8, #0
 8010d72:	f04f 0a01 	mov.w	sl, #1
 8010d76:	e6ef      	b.n	8010b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010d78:	2501      	movs	r5, #1
 8010d7a:	2700      	movs	r7, #0
 8010d7c:	46a9      	mov	r9, r5
 8010d7e:	46b8      	mov	r8, r7
 8010d80:	f04f 0a02 	mov.w	sl, #2
 8010d84:	e6e8      	b.n	8010b58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010d86:	2501      	movs	r5, #1
 8010d88:	2702      	movs	r7, #2
 8010d8a:	e6e1      	b.n	8010b50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8010d8c:	2500      	movs	r5, #0
 8010d8e:	2701      	movs	r7, #1
 8010d90:	e7f4      	b.n	8010d7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8010d92:	2702      	movs	r7, #2
 8010d94:	2503      	movs	r5, #3
 8010d96:	f04f 0900 	mov.w	r9, #0
 8010d9a:	46b8      	mov	r8, r7
 8010d9c:	e7e9      	b.n	8010d72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8010d9e:	4613      	mov	r3, r2
 8010da0:	e728      	b.n	8010bf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8010da2:	bf00      	nop
 8010da4:	20002f2c 	.word	0x20002f2c
 8010da8:	fffd8f01 	.word	0xfffd8f01
 8010dac:	00027100 	.word	0x00027100
 8010db0:	0004e1ff 	.word	0x0004e1ff
 8010db4:	0004e1fe 	.word	0x0004e1fe
 8010db8:	20002f34 	.word	0x20002f34
 8010dbc:	4613      	mov	r3, r2
 8010dbe:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8010dc0:	9111      	str	r1, [sp, #68]	@ 0x44
 8010dc2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8010dc6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8010dca:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 8010dcc:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8010dd0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8010dd4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8010dd8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8010ddc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8010de0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8010de4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8010de8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8010dec:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8010df0:	469e      	mov	lr, r3
 8010df2:	469c      	mov	ip, r3
 8010df4:	f04f 0900 	mov.w	r9, #0
 8010df8:	f1bc 0f00 	cmp.w	ip, #0
 8010dfc:	d147      	bne.n	8010e8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8010dfe:	eb03 0c07 	add.w	ip, r3, r7
 8010e02:	1ad7      	subs	r7, r2, r3
 8010e04:	f1b9 0f00 	cmp.w	r9, #0
 8010e08:	d009      	beq.n	8010e1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8010e0a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8010e0e:	9029      	str	r0, [sp, #164]	@ 0xa4
 8010e10:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8010e14:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8010e18:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8010e1c:	912d      	str	r1, [sp, #180]	@ 0xb4
 8010e1e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8010e20:	9111      	str	r1, [sp, #68]	@ 0x44
 8010e22:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8010e26:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8010e2a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8010e2e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8010e32:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8010e36:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8010e3a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8010e3e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8010e42:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8010e46:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8010e4a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8010e4e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8010e52:	f04f 0800 	mov.w	r8, #0
 8010e56:	f1be 0f00 	cmp.w	lr, #0
 8010e5a:	d031      	beq.n	8010ec0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8010e5c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8010e5e:	4431      	add	r1, r6
 8010e60:	4549      	cmp	r1, r9
 8010e62:	4450      	add	r0, sl
 8010e64:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010e68:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010e6c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010e70:	db08      	blt.n	8010e84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8010e72:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010e76:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8010e7a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010e7e:	3001      	adds	r0, #1
 8010e80:	eba1 0109 	sub.w	r1, r1, r9
 8010e84:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010e88:	f04f 0801 	mov.w	r8, #1
 8010e8c:	e7e3      	b.n	8010e56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8010e8e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8010e90:	4431      	add	r1, r6
 8010e92:	4541      	cmp	r1, r8
 8010e94:	4450      	add	r0, sl
 8010e96:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010e9a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010e9e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010ea2:	db08      	blt.n	8010eb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010ea4:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010ea8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010eac:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010eb0:	3001      	adds	r0, #1
 8010eb2:	eba1 0108 	sub.w	r1, r1, r8
 8010eb6:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010eba:	f04f 0901 	mov.w	r9, #1
 8010ebe:	e79b      	b.n	8010df8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010ec0:	449c      	add	ip, r3
 8010ec2:	1aff      	subs	r7, r7, r3
 8010ec4:	f1b8 0f00 	cmp.w	r8, #0
 8010ec8:	d009      	beq.n	8010ede <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8010eca:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8010ece:	9019      	str	r0, [sp, #100]	@ 0x64
 8010ed0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8010ed4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8010ed8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8010edc:	911d      	str	r1, [sp, #116]	@ 0x74
 8010ede:	1ad2      	subs	r2, r2, r3
 8010ee0:	e68b      	b.n	8010bfa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010ee2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8010ee4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8010ee6:	2b00      	cmp	r3, #0
 8010ee8:	f000 80d1 	beq.w	801108e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8010eec:	ad19      	add	r5, sp, #100	@ 0x64
 8010eee:	ac39      	add	r4, sp, #228	@ 0xe4
 8010ef0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8010ef2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010ef6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8010efa:	930c      	str	r3, [sp, #48]	@ 0x30
 8010efc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8010efe:	6963      	ldr	r3, [r4, #20]
 8010f00:	440b      	add	r3, r1
 8010f02:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010f06:	4408      	add	r0, r1
 8010f08:	b200      	sxth	r0, r0
 8010f0a:	4283      	cmp	r3, r0
 8010f0c:	900d      	str	r0, [sp, #52]	@ 0x34
 8010f0e:	f280 80c1 	bge.w	8011094 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8010f12:	428b      	cmp	r3, r1
 8010f14:	da08      	bge.n	8010f28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010f16:	2a00      	cmp	r2, #0
 8010f18:	dd06      	ble.n	8010f28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010f1a:	1acb      	subs	r3, r1, r3
 8010f1c:	429a      	cmp	r2, r3
 8010f1e:	f2c0 80bb 	blt.w	8011098 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8010f22:	2b00      	cmp	r3, #0
 8010f24:	f300 80b9 	bgt.w	801109a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8010f28:	6967      	ldr	r7, [r4, #20]
 8010f2a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8010f2c:	443b      	add	r3, r7
 8010f2e:	461f      	mov	r7, r3
 8010f30:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8010f32:	1bdf      	subs	r7, r3, r7
 8010f34:	4297      	cmp	r7, r2
 8010f36:	bfa8      	it	ge
 8010f38:	4617      	movge	r7, r2
 8010f3a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8010f3e:	2f00      	cmp	r7, #0
 8010f40:	f340 813c 	ble.w	80111bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8010f44:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8010f46:	6829      	ldr	r1, [r5, #0]
 8010f48:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f4c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010f50:	6820      	ldr	r0, [r4, #0]
 8010f52:	4411      	add	r1, r2
 8010f54:	4299      	cmp	r1, r3
 8010f56:	dd1a      	ble.n	8010f8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010f58:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010f5c:	440b      	add	r3, r1
 8010f5e:	4402      	add	r2, r0
 8010f60:	b21b      	sxth	r3, r3
 8010f62:	429a      	cmp	r2, r3
 8010f64:	dc13      	bgt.n	8010f8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8010f66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8010f68:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8010f6a:	681b      	ldr	r3, [r3, #0]
 8010f6c:	9206      	str	r2, [sp, #24]
 8010f6e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010f70:	9205      	str	r2, [sp, #20]
 8010f72:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8010f74:	9500      	str	r5, [sp, #0]
 8010f76:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010f7a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8010f7c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8010f7e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010f82:	a912      	add	r1, sp, #72	@ 0x48
 8010f84:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8010f88:	aa49      	add	r2, sp, #292	@ 0x124
 8010f8a:	4623      	mov	r3, r4
 8010f8c:	47c8      	blx	r9
 8010f8e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010f92:	441a      	add	r2, r3
 8010f94:	6963      	ldr	r3, [r4, #20]
 8010f96:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8010f9a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8010f9e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8010fa2:	68a1      	ldr	r1, [r4, #8]
 8010fa4:	ed94 6a08 	vldr	s12, [r4, #32]
 8010fa8:	6022      	str	r2, [r4, #0]
 8010faa:	3301      	adds	r3, #1
 8010fac:	6163      	str	r3, [r4, #20]
 8010fae:	69a3      	ldr	r3, [r4, #24]
 8010fb0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010fb4:	3b01      	subs	r3, #1
 8010fb6:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8010fba:	61a3      	str	r3, [r4, #24]
 8010fbc:	6923      	ldr	r3, [r4, #16]
 8010fbe:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010fc2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010fc6:	edd4 6a07 	vldr	s13, [r4, #28]
 8010fca:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8010fce:	440b      	add	r3, r1
 8010fd0:	68e1      	ldr	r1, [r4, #12]
 8010fd2:	6123      	str	r3, [r4, #16]
 8010fd4:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010fd8:	428b      	cmp	r3, r1
 8010fda:	edc4 6a07 	vstr	s13, [r4, #28]
 8010fde:	db15      	blt.n	801100c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010fe0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8010fe4:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010fe8:	3201      	adds	r2, #1
 8010fea:	edc4 6a07 	vstr	s13, [r4, #28]
 8010fee:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8010ff2:	6022      	str	r2, [r4, #0]
 8010ff4:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010ff8:	1a5b      	subs	r3, r3, r1
 8010ffa:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8010ffe:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8011002:	6123      	str	r3, [r4, #16]
 8011004:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011008:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801100c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8011010:	441a      	add	r2, r3
 8011012:	696b      	ldr	r3, [r5, #20]
 8011014:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8011018:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 801101c:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8011020:	68a9      	ldr	r1, [r5, #8]
 8011022:	ed95 6a08 	vldr	s12, [r5, #32]
 8011026:	602a      	str	r2, [r5, #0]
 8011028:	3301      	adds	r3, #1
 801102a:	616b      	str	r3, [r5, #20]
 801102c:	69ab      	ldr	r3, [r5, #24]
 801102e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8011032:	3b01      	subs	r3, #1
 8011034:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8011038:	61ab      	str	r3, [r5, #24]
 801103a:	692b      	ldr	r3, [r5, #16]
 801103c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8011040:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011044:	edd5 6a07 	vldr	s13, [r5, #28]
 8011048:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801104c:	440b      	add	r3, r1
 801104e:	68e9      	ldr	r1, [r5, #12]
 8011050:	612b      	str	r3, [r5, #16]
 8011052:	ee76 6a86 	vadd.f32	s13, s13, s12
 8011056:	428b      	cmp	r3, r1
 8011058:	edc5 6a07 	vstr	s13, [r5, #28]
 801105c:	db15      	blt.n	801108a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801105e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8011062:	ee76 6a26 	vadd.f32	s13, s12, s13
 8011066:	3201      	adds	r2, #1
 8011068:	edc5 6a07 	vstr	s13, [r5, #28]
 801106c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8011070:	602a      	str	r2, [r5, #0]
 8011072:	ee36 7a87 	vadd.f32	s14, s13, s14
 8011076:	1a5b      	subs	r3, r3, r1
 8011078:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801107c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8011080:	612b      	str	r3, [r5, #16]
 8011082:	ee77 7a27 	vadd.f32	s15, s14, s15
 8011086:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801108a:	3f01      	subs	r7, #1
 801108c:	e757      	b.n	8010f3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801108e:	ad39      	add	r5, sp, #228	@ 0xe4
 8011090:	ac19      	add	r4, sp, #100	@ 0x64
 8011092:	e72d      	b.n	8010ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8011094:	4613      	mov	r3, r2
 8011096:	e744      	b.n	8010f22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8011098:	4613      	mov	r3, r2
 801109a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 801109e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 80110a0:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 80110a4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 80110a8:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 80110ac:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 80110b0:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 80110b4:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80110b8:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80110bc:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80110be:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80110c2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80110c6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80110ca:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80110ce:	960e      	str	r6, [sp, #56]	@ 0x38
 80110d0:	469e      	mov	lr, r3
 80110d2:	461f      	mov	r7, r3
 80110d4:	f04f 0900 	mov.w	r9, #0
 80110d8:	2f00      	cmp	r7, #0
 80110da:	d146      	bne.n	801116a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80110dc:	449c      	add	ip, r3
 80110de:	1ad7      	subs	r7, r2, r3
 80110e0:	f1b9 0f00 	cmp.w	r9, #0
 80110e4:	d009      	beq.n	80110fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80110e6:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 80110ea:	9039      	str	r0, [sp, #228]	@ 0xe4
 80110ec:	913d      	str	r1, [sp, #244]	@ 0xf4
 80110ee:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 80110f2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 80110f6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 80110fa:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80110fc:	910e      	str	r1, [sp, #56]	@ 0x38
 80110fe:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8011102:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8011106:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801110a:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801110e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8011112:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8011116:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801111a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801111e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8011122:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8011126:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801112a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801112e:	f04f 0800 	mov.w	r8, #0
 8011132:	f1be 0f00 	cmp.w	lr, #0
 8011136:	d030      	beq.n	801119a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8011138:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801113a:	4431      	add	r1, r6
 801113c:	4549      	cmp	r1, r9
 801113e:	4450      	add	r0, sl
 8011140:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8011144:	ee37 7a04 	vadd.f32	s14, s14, s8
 8011148:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801114c:	db08      	blt.n	8011160 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801114e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8011152:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8011156:	ee37 7a06 	vadd.f32	s14, s14, s12
 801115a:	3001      	adds	r0, #1
 801115c:	eba1 0109 	sub.w	r1, r1, r9
 8011160:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011164:	f04f 0801 	mov.w	r8, #1
 8011168:	e7e3      	b.n	8011132 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801116a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801116c:	4431      	add	r1, r6
 801116e:	4541      	cmp	r1, r8
 8011170:	4450      	add	r0, sl
 8011172:	ee37 7a24 	vadd.f32	s14, s14, s9
 8011176:	ee77 7a84 	vadd.f32	s15, s15, s8
 801117a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801117e:	db08      	blt.n	8011192 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8011180:	ee76 6a85 	vadd.f32	s13, s13, s10
 8011184:	ee37 7a25 	vadd.f32	s14, s14, s11
 8011188:	ee77 7a86 	vadd.f32	s15, s15, s12
 801118c:	3001      	adds	r0, #1
 801118e:	eba1 0108 	sub.w	r1, r1, r8
 8011192:	3f01      	subs	r7, #1
 8011194:	f04f 0901 	mov.w	r9, #1
 8011198:	e79e      	b.n	80110d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801119a:	449c      	add	ip, r3
 801119c:	1aff      	subs	r7, r7, r3
 801119e:	f1b8 0f00 	cmp.w	r8, #0
 80111a2:	d009      	beq.n	80111b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 80111a4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80111a8:	9019      	str	r0, [sp, #100]	@ 0x64
 80111aa:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80111ae:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80111b2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80111b6:	911d      	str	r1, [sp, #116]	@ 0x74
 80111b8:	1ad2      	subs	r2, r2, r3
 80111ba:	e6b5      	b.n	8010f28 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80111bc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80111be:	681b      	ldr	r3, [r3, #0]
 80111c0:	b923      	cbnz	r3, 80111cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80111c2:	4b04      	ldr	r3, [pc, #16]	@ (80111d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80111c4:	6818      	ldr	r0, [r3, #0]
 80111c6:	6803      	ldr	r3, [r0, #0]
 80111c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80111ca:	4798      	blx	r3
 80111cc:	b05b      	add	sp, #364	@ 0x16c
 80111ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111d2:	bf00      	nop
 80111d4:	20002f34 	.word	0x20002f34

080111d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80111d8:	b570      	push	{r4, r5, r6, lr}
 80111da:	4604      	mov	r4, r0
 80111dc:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80111e0:	9805      	ldr	r0, [sp, #20]
 80111e2:	6061      	str	r1, [r4, #4]
 80111e4:	2500      	movs	r5, #0
 80111e6:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80111ea:	8263      	strh	r3, [r4, #18]
 80111ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80111f0:	8025      	strh	r5, [r4, #0]
 80111f2:	7221      	strb	r1, [r4, #8]
 80111f4:	7266      	strb	r6, [r4, #9]
 80111f6:	60e0      	str	r0, [r4, #12]
 80111f8:	8222      	strh	r2, [r4, #16]
 80111fa:	82a3      	strh	r3, [r4, #20]
 80111fc:	82e5      	strh	r5, [r4, #22]
 80111fe:	8325      	strh	r5, [r4, #24]
 8011200:	8365      	strh	r5, [r4, #26]
 8011202:	83a5      	strh	r5, [r4, #28]
 8011204:	83e5      	strh	r5, [r4, #30]
 8011206:	8425      	strh	r5, [r4, #32]
 8011208:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 801120c:	b32e      	cbz	r6, 801125a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801120e:	6803      	ldr	r3, [r0, #0]
 8011210:	695b      	ldr	r3, [r3, #20]
 8011212:	4798      	blx	r3
 8011214:	4606      	mov	r6, r0
 8011216:	b300      	cbz	r0, 801125a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8011218:	68e0      	ldr	r0, [r4, #12]
 801121a:	6803      	ldr	r3, [r0, #0]
 801121c:	4631      	mov	r1, r6
 801121e:	68db      	ldr	r3, [r3, #12]
 8011220:	4798      	blx	r3
 8011222:	4605      	mov	r5, r0
 8011224:	b1c8      	cbz	r0, 801125a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8011226:	7b43      	ldrb	r3, [r0, #13]
 8011228:	7a82      	ldrb	r2, [r0, #10]
 801122a:	005b      	lsls	r3, r3, #1
 801122c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011230:	4313      	orrs	r3, r2
 8011232:	8423      	strh	r3, [r4, #32]
 8011234:	7a63      	ldrb	r3, [r4, #9]
 8011236:	2b06      	cmp	r3, #6
 8011238:	d10f      	bne.n	801125a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801123a:	68e0      	ldr	r0, [r4, #12]
 801123c:	6803      	ldr	r3, [r0, #0]
 801123e:	462a      	mov	r2, r5
 8011240:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011242:	4631      	mov	r1, r6
 8011244:	4798      	blx	r3
 8011246:	7b6b      	ldrb	r3, [r5, #13]
 8011248:	005b      	lsls	r3, r3, #1
 801124a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801124e:	7aab      	ldrb	r3, [r5, #10]
 8011250:	4313      	orrs	r3, r2
 8011252:	4418      	add	r0, r3
 8011254:	8c23      	ldrh	r3, [r4, #32]
 8011256:	4418      	add	r0, r3
 8011258:	8420      	strh	r0, [r4, #32]
 801125a:	4620      	mov	r0, r4
 801125c:	bd70      	pop	{r4, r5, r6, pc}

0801125e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801125e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011262:	2400      	movs	r4, #0
 8011264:	b085      	sub	sp, #20
 8011266:	4681      	mov	r9, r0
 8011268:	4688      	mov	r8, r1
 801126a:	4692      	mov	sl, r2
 801126c:	469b      	mov	fp, r3
 801126e:	4627      	mov	r7, r4
 8011270:	4625      	mov	r5, r4
 8011272:	4626      	mov	r6, r4
 8011274:	4554      	cmp	r4, sl
 8011276:	da2a      	bge.n	80112ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8011278:	2300      	movs	r3, #0
 801127a:	9303      	str	r3, [sp, #12]
 801127c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011280:	429d      	cmp	r5, r3
 8011282:	d004      	beq.n	801128e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8011284:	f242 030b 	movw	r3, #8203	@ 0x200b
 8011288:	429d      	cmp	r5, r3
 801128a:	bf18      	it	ne
 801128c:	462f      	movne	r7, r5
 801128e:	ab03      	add	r3, sp, #12
 8011290:	4642      	mov	r2, r8
 8011292:	4659      	mov	r1, fp
 8011294:	4648      	mov	r0, r9
 8011296:	f002 ffb3 	bl	8014200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801129a:	4605      	mov	r5, r0
 801129c:	b1b8      	cbz	r0, 80112ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801129e:	280a      	cmp	r0, #10
 80112a0:	d015      	beq.n	80112ce <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80112a2:	9a03      	ldr	r2, [sp, #12]
 80112a4:	b18a      	cbz	r2, 80112ca <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80112a6:	7b50      	ldrb	r0, [r2, #13]
 80112a8:	7a93      	ldrb	r3, [r2, #10]
 80112aa:	8895      	ldrh	r5, [r2, #4]
 80112ac:	0040      	lsls	r0, r0, #1
 80112ae:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80112b2:	4303      	orrs	r3, r0
 80112b4:	9301      	str	r3, [sp, #4]
 80112b6:	f8d8 3000 	ldr.w	r3, [r8]
 80112ba:	4639      	mov	r1, r7
 80112bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80112be:	4640      	mov	r0, r8
 80112c0:	4798      	blx	r3
 80112c2:	9b01      	ldr	r3, [sp, #4]
 80112c4:	4418      	add	r0, r3
 80112c6:	4406      	add	r6, r0
 80112c8:	b2b6      	uxth	r6, r6
 80112ca:	3401      	adds	r4, #1
 80112cc:	e7d2      	b.n	8011274 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80112ce:	4630      	mov	r0, r6
 80112d0:	b005      	add	sp, #20
 80112d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080112d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80112d6:	2a02      	cmp	r2, #2
 80112d8:	b530      	push	{r4, r5, lr}
 80112da:	d011      	beq.n	8011300 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80112dc:	2a03      	cmp	r2, #3
 80112de:	d01c      	beq.n	801131a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80112e0:	2a01      	cmp	r2, #1
 80112e2:	d10c      	bne.n	80112fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80112e4:	888b      	ldrh	r3, [r1, #4]
 80112e6:	8801      	ldrh	r1, [r0, #0]
 80112e8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80112ec:	8844      	ldrh	r4, [r0, #2]
 80112ee:	8004      	strh	r4, [r0, #0]
 80112f0:	1a5b      	subs	r3, r3, r1
 80112f2:	1a9b      	subs	r3, r3, r2
 80112f4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80112f8:	8043      	strh	r3, [r0, #2]
 80112fa:	8081      	strh	r1, [r0, #4]
 80112fc:	80c2      	strh	r2, [r0, #6]
 80112fe:	bd30      	pop	{r4, r5, pc}
 8011300:	88cb      	ldrh	r3, [r1, #6]
 8011302:	8842      	ldrh	r2, [r0, #2]
 8011304:	1a9b      	subs	r3, r3, r2
 8011306:	88c2      	ldrh	r2, [r0, #6]
 8011308:	1a9b      	subs	r3, r3, r2
 801130a:	888a      	ldrh	r2, [r1, #4]
 801130c:	8801      	ldrh	r1, [r0, #0]
 801130e:	8043      	strh	r3, [r0, #2]
 8011310:	1a52      	subs	r2, r2, r1
 8011312:	8881      	ldrh	r1, [r0, #4]
 8011314:	1a52      	subs	r2, r2, r1
 8011316:	8002      	strh	r2, [r0, #0]
 8011318:	e7f1      	b.n	80112fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801131a:	88cb      	ldrh	r3, [r1, #6]
 801131c:	8841      	ldrh	r1, [r0, #2]
 801131e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8011322:	f9b0 5000 	ldrsh.w	r5, [r0]
 8011326:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801132a:	8045      	strh	r5, [r0, #2]
 801132c:	1a5b      	subs	r3, r3, r1
 801132e:	1a9b      	subs	r3, r3, r2
 8011330:	8003      	strh	r3, [r0, #0]
 8011332:	8082      	strh	r2, [r0, #4]
 8011334:	80c4      	strh	r4, [r0, #6]
 8011336:	e7e2      	b.n	80112fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08011338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8011338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801133c:	b09f      	sub	sp, #124	@ 0x7c
 801133e:	920f      	str	r2, [sp, #60]	@ 0x3c
 8011340:	9312      	str	r3, [sp, #72]	@ 0x48
 8011342:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8011344:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8011346:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8011348:	8812      	ldrh	r2, [r2, #0]
 801134a:	889b      	ldrh	r3, [r3, #4]
 801134c:	900e      	str	r0, [sp, #56]	@ 0x38
 801134e:	4413      	add	r3, r2
 8011350:	6828      	ldr	r0, [r5, #0]
 8011352:	9117      	str	r1, [sp, #92]	@ 0x5c
 8011354:	b21b      	sxth	r3, r3
 8011356:	9311      	str	r3, [sp, #68]	@ 0x44
 8011358:	6803      	ldr	r3, [r0, #0]
 801135a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 801135e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8011360:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8011364:	4798      	blx	r3
 8011366:	682b      	ldr	r3, [r5, #0]
 8011368:	9013      	str	r0, [sp, #76]	@ 0x4c
 801136a:	7b1a      	ldrb	r2, [r3, #12]
 801136c:	7adb      	ldrb	r3, [r3, #11]
 801136e:	9215      	str	r2, [sp, #84]	@ 0x54
 8011370:	9316      	str	r3, [sp, #88]	@ 0x58
 8011372:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8011376:	2c00      	cmp	r4, #0
 8011378:	d067      	beq.n	801144a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801137a:	7c2b      	ldrb	r3, [r5, #16]
 801137c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801137e:	2b06      	cmp	r3, #6
 8011380:	bf14      	ite	ne
 8011382:	2301      	movne	r3, #1
 8011384:	2302      	moveq	r3, #2
 8011386:	4413      	add	r3, r2
 8011388:	f04f 0900 	mov.w	r9, #0
 801138c:	9310      	str	r3, [sp, #64]	@ 0x40
 801138e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8011392:	464c      	mov	r4, r9
 8011394:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8011398:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801139a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801139c:	4293      	cmp	r3, r2
 801139e:	f280 808b 	bge.w	80114b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 80113a2:	2300      	movs	r3, #0
 80113a4:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 80113a8:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 80113ac:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80113b0:	429c      	cmp	r4, r3
 80113b2:	d006      	beq.n	80113c2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 80113b4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80113b6:	f242 020b 	movw	r2, #8203	@ 0x200b
 80113ba:	4294      	cmp	r4, r2
 80113bc:	bf18      	it	ne
 80113be:	4623      	movne	r3, r4
 80113c0:	930c      	str	r3, [sp, #48]	@ 0x30
 80113c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80113c4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80113c6:	682a      	ldr	r2, [r5, #0]
 80113c8:	428b      	cmp	r3, r1
 80113ca:	db40      	blt.n	801144e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80113cc:	6813      	ldr	r3, [r2, #0]
 80113ce:	4610      	mov	r0, r2
 80113d0:	695b      	ldr	r3, [r3, #20]
 80113d2:	4798      	blx	r3
 80113d4:	4604      	mov	r4, r0
 80113d6:	6828      	ldr	r0, [r5, #0]
 80113d8:	6803      	ldr	r3, [r0, #0]
 80113da:	aa1d      	add	r2, sp, #116	@ 0x74
 80113dc:	689f      	ldr	r7, [r3, #8]
 80113de:	4621      	mov	r1, r4
 80113e0:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 80113e4:	47b8      	blx	r7
 80113e6:	901c      	str	r0, [sp, #112]	@ 0x70
 80113e8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80113ec:	429c      	cmp	r4, r3
 80113ee:	f000 80ea 	beq.w	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80113f2:	f242 030b 	movw	r3, #8203	@ 0x200b
 80113f6:	429c      	cmp	r4, r3
 80113f8:	f000 80e5 	beq.w	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80113fc:	2c00      	cmp	r4, #0
 80113fe:	f000 810c 	beq.w	801161a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8011402:	2c0a      	cmp	r4, #10
 8011404:	d05e      	beq.n	80114c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8011406:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8011408:	b36a      	cbz	r2, 8011466 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801140a:	8894      	ldrh	r4, [r2, #4]
 801140c:	f1bb 0f00 	cmp.w	fp, #0
 8011410:	d03a      	beq.n	8011488 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8011412:	f892 900d 	ldrb.w	r9, [r2, #13]
 8011416:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801141a:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801141e:	f892 900a 	ldrb.w	r9, [r2, #10]
 8011422:	f1bb 0f01 	cmp.w	fp, #1
 8011426:	ea49 0903 	orr.w	r9, r9, r3
 801142a:	d133      	bne.n	8011494 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 801142c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801142e:	eba6 0609 	sub.w	r6, r6, r9
 8011432:	2b00      	cmp	r3, #0
 8011434:	d14d      	bne.n	80114d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8011436:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8011438:	eb09 0306 	add.w	r3, r9, r6
 801143c:	4413      	add	r3, r2
 801143e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8011440:	f9b2 2000 	ldrsh.w	r2, [r2]
 8011444:	4293      	cmp	r3, r2
 8011446:	da4e      	bge.n	80114e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8011448:	e036      	b.n	80114b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801144a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801144c:	e79c      	b.n	8011388 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 801144e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8011452:	9301      	str	r3, [sp, #4]
 8011454:	ab1d      	add	r3, sp, #116	@ 0x74
 8011456:	9300      	str	r3, [sp, #0]
 8011458:	4659      	mov	r1, fp
 801145a:	ab1c      	add	r3, sp, #112	@ 0x70
 801145c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801145e:	f002 ff18 	bl	8014292 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8011462:	4604      	mov	r4, r0
 8011464:	e7c0      	b.n	80113e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8011466:	6828      	ldr	r0, [r5, #0]
 8011468:	6803      	ldr	r3, [r0, #0]
 801146a:	691b      	ldr	r3, [r3, #16]
 801146c:	4798      	blx	r3
 801146e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011472:	4298      	cmp	r0, r3
 8011474:	f000 80a7 	beq.w	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011478:	f242 030b 	movw	r3, #8203	@ 0x200b
 801147c:	4298      	cmp	r0, r3
 801147e:	f000 80a2 	beq.w	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011482:	f1bb 0f00 	cmp.w	fp, #0
 8011486:	d100      	bne.n	801148a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8011488:	444e      	add	r6, r9
 801148a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801148c:	2a00      	cmp	r2, #0
 801148e:	d1c0      	bne.n	8011412 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8011490:	4691      	mov	r9, r2
 8011492:	e098      	b.n	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011494:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8011496:	2b00      	cmp	r3, #0
 8011498:	f000 80c1 	beq.w	801161e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 801149c:	f1bb 0f00 	cmp.w	fp, #0
 80114a0:	d117      	bne.n	80114d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 80114a2:	6828      	ldr	r0, [r5, #0]
 80114a4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80114a6:	6803      	ldr	r3, [r0, #0]
 80114a8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80114aa:	4798      	blx	r3
 80114ac:	4406      	add	r6, r0
 80114ae:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80114b0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80114b2:	1af3      	subs	r3, r6, r3
 80114b4:	4293      	cmp	r3, r2
 80114b6:	dd16      	ble.n	80114e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 80114b8:	2c00      	cmp	r4, #0
 80114ba:	f000 80ae 	beq.w	801161a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80114be:	2c0a      	cmp	r4, #10
 80114c0:	f040 809c 	bne.w	80115fc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 80114c4:	240a      	movs	r4, #10
 80114c6:	fab4 f084 	clz	r0, r4
 80114ca:	0940      	lsrs	r0, r0, #5
 80114cc:	b01f      	add	sp, #124	@ 0x7c
 80114ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114d2:	6828      	ldr	r0, [r5, #0]
 80114d4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80114d6:	6803      	ldr	r3, [r0, #0]
 80114d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80114da:	4798      	blx	r3
 80114dc:	f1bb 0f01 	cmp.w	fp, #1
 80114e0:	eba6 0600 	sub.w	r6, r6, r0
 80114e4:	d0a7      	beq.n	8011436 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80114e6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80114e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80114ea:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80114ee:	f9b3 8000 	ldrsh.w	r8, [r3]
 80114f2:	7b43      	ldrb	r3, [r0, #13]
 80114f4:	015b      	lsls	r3, r3, #5
 80114f6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80114fa:	7983      	ldrb	r3, [r0, #6]
 80114fc:	4431      	add	r1, r6
 80114fe:	4313      	orrs	r3, r2
 8011500:	440b      	add	r3, r1
 8011502:	4543      	cmp	r3, r8
 8011504:	db5f      	blt.n	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011506:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8011508:	4299      	cmp	r1, r3
 801150a:	da5c      	bge.n	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 801150c:	6828      	ldr	r0, [r5, #0]
 801150e:	6803      	ldr	r3, [r0, #0]
 8011510:	45b0      	cmp	r8, r6
 8011512:	bfc8      	it	gt
 8011514:	eba8 0806 	subgt.w	r8, r8, r6
 8011518:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801151a:	bfcc      	ite	gt
 801151c:	fa1f f888 	uxthgt.w	r8, r8
 8011520:	f04f 0800 	movle.w	r8, #0
 8011524:	4798      	blx	r3
 8011526:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8011528:	7b53      	ldrb	r3, [r2, #13]
 801152a:	00d9      	lsls	r1, r3, #3
 801152c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8011530:	7a11      	ldrb	r1, [r2, #8]
 8011532:	4339      	orrs	r1, r7
 8011534:	065f      	lsls	r7, r3, #25
 8011536:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8011538:	bf44      	itt	mi
 801153a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 801153e:	b209      	sxthmi	r1, r1
 8011540:	19c7      	adds	r7, r0, r7
 8011542:	1a7f      	subs	r7, r7, r1
 8011544:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8011546:	b2bf      	uxth	r7, r7
 8011548:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801154c:	fa0f fa87 	sxth.w	sl, r7
 8011550:	4551      	cmp	r1, sl
 8011552:	dd3c      	ble.n	80115ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8011554:	011b      	lsls	r3, r3, #4
 8011556:	79d0      	ldrb	r0, [r2, #7]
 8011558:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801155c:	4303      	orrs	r3, r0
 801155e:	449a      	add	sl, r3
 8011560:	4551      	cmp	r1, sl
 8011562:	dc30      	bgt.n	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8011564:	1bcf      	subs	r7, r1, r7
 8011566:	b23f      	sxth	r7, r7
 8011568:	468a      	mov	sl, r1
 801156a:	9219      	str	r2, [sp, #100]	@ 0x64
 801156c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801156e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8011570:	6828      	ldr	r0, [r5, #0]
 8011572:	2a00      	cmp	r2, #0
 8011574:	d12d      	bne.n	80115d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8011576:	9318      	str	r3, [sp, #96]	@ 0x60
 8011578:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801157a:	6819      	ldr	r1, [r3, #0]
 801157c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801157e:	6801      	ldr	r1, [r0, #0]
 8011580:	9314      	str	r3, [sp, #80]	@ 0x50
 8011582:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8011584:	4788      	blx	r1
 8011586:	79a9      	ldrb	r1, [r5, #6]
 8011588:	910b      	str	r1, [sp, #44]	@ 0x2c
 801158a:	7ba9      	ldrb	r1, [r5, #14]
 801158c:	910a      	str	r1, [sp, #40]	@ 0x28
 801158e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8011592:	9109      	str	r1, [sp, #36]	@ 0x24
 8011594:	68a9      	ldr	r1, [r5, #8]
 8011596:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8011598:	9306      	str	r3, [sp, #24]
 801159a:	b2bf      	uxth	r7, r7
 801159c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 80115a0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80115a2:	9304      	str	r3, [sp, #16]
 80115a4:	44b0      	add	r8, r6
 80115a6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80115aa:	fa0f f388 	sxth.w	r3, r8
 80115ae:	9300      	str	r3, [sp, #0]
 80115b0:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 80115b2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80115b4:	9205      	str	r2, [sp, #20]
 80115b6:	f8cd a004 	str.w	sl, [sp, #4]
 80115ba:	681a      	ldr	r2, [r3, #0]
 80115bc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80115be:	685b      	ldr	r3, [r3, #4]
 80115c0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80115c2:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80115c4:	47b8      	blx	r7
 80115c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80115c8:	3301      	adds	r3, #1
 80115ca:	930d      	str	r3, [sp, #52]	@ 0x34
 80115cc:	e6e4      	b.n	8011398 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 80115ce:	2700      	movs	r7, #0
 80115d0:	e7cb      	b.n	801156a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 80115d2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80115d4:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80115d8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80115da:	f8dc 1000 	ldr.w	r1, [ip]
 80115de:	e9cd 6204 	strd	r6, r2, [sp, #16]
 80115e2:	79aa      	ldrb	r2, [r5, #6]
 80115e4:	9203      	str	r2, [sp, #12]
 80115e6:	7baa      	ldrb	r2, [r5, #14]
 80115e8:	9202      	str	r2, [sp, #8]
 80115ea:	68aa      	ldr	r2, [r5, #8]
 80115ec:	e9cd 0200 	strd	r0, r2, [sp]
 80115f0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80115f2:	688f      	ldr	r7, [r1, #8]
 80115f4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80115f6:	4660      	mov	r0, ip
 80115f8:	47b8      	blx	r7
 80115fa:	e7e4      	b.n	80115c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80115fc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80115fe:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8011600:	3501      	adds	r5, #1
 8011602:	429d      	cmp	r5, r3
 8011604:	f6bf af5f 	bge.w	80114c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8011608:	4659      	mov	r1, fp
 801160a:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801160c:	f7fa fbb0 	bl	800bd70 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011610:	4604      	mov	r4, r0
 8011612:	b110      	cbz	r0, 801161a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 8011614:	280a      	cmp	r0, #10
 8011616:	d1f2      	bne.n	80115fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8011618:	e754      	b.n	80114c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 801161a:	2400      	movs	r4, #0
 801161c:	e753      	b.n	80114c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 801161e:	f1bb 0f00 	cmp.w	fp, #0
 8011622:	f43f af44 	beq.w	80114ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8011626:	e75e      	b.n	80114e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08011628 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8011628:	b530      	push	{r4, r5, lr}
 801162a:	8ac4      	ldrh	r4, [r0, #22]
 801162c:	8b45      	ldrh	r5, [r0, #26]
 801162e:	8343      	strh	r3, [r0, #26]
 8011630:	442c      	add	r4, r5
 8011632:	1ae4      	subs	r4, r4, r3
 8011634:	82c4      	strh	r4, [r0, #22]
 8011636:	8b83      	ldrh	r3, [r0, #28]
 8011638:	8b04      	ldrh	r4, [r0, #24]
 801163a:	4422      	add	r2, r4
 801163c:	440c      	add	r4, r1
 801163e:	1a59      	subs	r1, r3, r1
 8011640:	83c2      	strh	r2, [r0, #30]
 8011642:	8304      	strh	r4, [r0, #24]
 8011644:	8381      	strh	r1, [r0, #28]
 8011646:	bd30      	pop	{r4, r5, pc}

08011648 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8011648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801164c:	4604      	mov	r4, r0
 801164e:	8a47      	ldrh	r7, [r0, #18]
 8011650:	68c0      	ldr	r0, [r0, #12]
 8011652:	6803      	ldr	r3, [r0, #0]
 8011654:	b085      	sub	sp, #20
 8011656:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011658:	4798      	blx	r3
 801165a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801165e:	7a63      	ldrb	r3, [r4, #9]
 8011660:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8011664:	42b7      	cmp	r7, r6
 8011666:	f103 33ff 	add.w	r3, r3, #4294967295
 801166a:	bfac      	ite	ge
 801166c:	f04f 0900 	movge.w	r9, #0
 8011670:	f04f 0901 	movlt.w	r9, #1
 8011674:	2b05      	cmp	r3, #5
 8011676:	d804      	bhi.n	8011682 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8011678:	e8df f003 	tbb	[pc, r3]
 801167c:	470e0854 	.word	0x470e0854
 8011680:	4c4c      	.short	0x4c4c
 8011682:	2500      	movs	r5, #0
 8011684:	46a9      	mov	r9, r5
 8011686:	462e      	mov	r6, r5
 8011688:	462f      	mov	r7, r5
 801168a:	e00d      	b.n	80116a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801168c:	42b7      	cmp	r7, r6
 801168e:	bfb4      	ite	lt
 8011690:	2600      	movlt	r6, #0
 8011692:	2601      	movge	r6, #1
 8011694:	2500      	movs	r5, #0
 8011696:	e7f7      	b.n	8011688 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8011698:	42b7      	cmp	r7, r6
 801169a:	464d      	mov	r5, r9
 801169c:	f04f 0900 	mov.w	r9, #0
 80116a0:	bfb4      	ite	lt
 80116a2:	2600      	movlt	r6, #0
 80116a4:	2601      	movge	r6, #1
 80116a6:	464f      	mov	r7, r9
 80116a8:	f04f 0800 	mov.w	r8, #0
 80116ac:	f8a4 8016 	strh.w	r8, [r4, #22]
 80116b0:	f8a4 8018 	strh.w	r8, [r4, #24]
 80116b4:	f8cd 8004 	str.w	r8, [sp, #4]
 80116b8:	2300      	movs	r3, #0
 80116ba:	9303      	str	r3, [sp, #12]
 80116bc:	8823      	ldrh	r3, [r4, #0]
 80116be:	2b20      	cmp	r3, #32
 80116c0:	d034      	beq.n	801172c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80116c2:	f242 010b 	movw	r1, #8203	@ 0x200b
 80116c6:	1a5a      	subs	r2, r3, r1
 80116c8:	f1d2 0a00 	rsbs	sl, r2, #0
 80116cc:	eb4a 0a02 	adc.w	sl, sl, r2
 80116d0:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80116d4:	4293      	cmp	r3, r2
 80116d6:	d009      	beq.n	80116ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80116d8:	428b      	cmp	r3, r1
 80116da:	9a01      	ldr	r2, [sp, #4]
 80116dc:	bf18      	it	ne
 80116de:	461a      	movne	r2, r3
 80116e0:	9201      	str	r2, [sp, #4]
 80116e2:	bf0c      	ite	eq
 80116e4:	f04f 0a01 	moveq.w	sl, #1
 80116e8:	f04f 0a00 	movne.w	sl, #0
 80116ec:	ab03      	add	r3, sp, #12
 80116ee:	68e2      	ldr	r2, [r4, #12]
 80116f0:	7a21      	ldrb	r1, [r4, #8]
 80116f2:	6860      	ldr	r0, [r4, #4]
 80116f4:	f002 fd84 	bl	8014200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80116f8:	8020      	strh	r0, [r4, #0]
 80116fa:	b9d8      	cbnz	r0, 8011734 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80116fc:	8ba2      	ldrh	r2, [r4, #28]
 80116fe:	2300      	movs	r3, #0
 8011700:	4611      	mov	r1, r2
 8011702:	4620      	mov	r0, r4
 8011704:	f7ff ff90 	bl	8011628 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8011708:	e06e      	b.n	80117e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801170a:	2500      	movs	r5, #0
 801170c:	46a9      	mov	r9, r5
 801170e:	462e      	mov	r6, r5
 8011710:	2701      	movs	r7, #1
 8011712:	e7c9      	b.n	80116a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011714:	42b7      	cmp	r7, r6
 8011716:	f04f 0500 	mov.w	r5, #0
 801171a:	bfb4      	ite	lt
 801171c:	2700      	movlt	r7, #0
 801171e:	2701      	movge	r7, #1
 8011720:	462e      	mov	r6, r5
 8011722:	e7c1      	b.n	80116a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8011724:	2500      	movs	r5, #0
 8011726:	46a9      	mov	r9, r5
 8011728:	2601      	movs	r6, #1
 801172a:	e7ad      	b.n	8011688 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801172c:	9301      	str	r3, [sp, #4]
 801172e:	f04f 0a01 	mov.w	sl, #1
 8011732:	e7db      	b.n	80116ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8011734:	8b63      	ldrh	r3, [r4, #26]
 8011736:	280a      	cmp	r0, #10
 8011738:	f103 0301 	add.w	r3, r3, #1
 801173c:	8363      	strh	r3, [r4, #26]
 801173e:	d0dd      	beq.n	80116fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8011740:	9a03      	ldr	r2, [sp, #12]
 8011742:	bb62      	cbnz	r2, 801179e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8011744:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8011748:	4298      	cmp	r0, r3
 801174a:	d003      	beq.n	8011754 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801174c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8011750:	4298      	cmp	r0, r3
 8011752:	d1b1      	bne.n	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011754:	8823      	ldrh	r3, [r4, #0]
 8011756:	8ba1      	ldrh	r1, [r4, #28]
 8011758:	2b20      	cmp	r3, #32
 801175a:	d003      	beq.n	8011764 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801175c:	f242 000b 	movw	r0, #8203	@ 0x200b
 8011760:	4283      	cmp	r3, r0
 8011762:	d131      	bne.n	80117c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8011764:	f1ba 0f00 	cmp.w	sl, #0
 8011768:	bf0a      	itet	eq
 801176a:	4688      	moveq	r8, r1
 801176c:	4650      	movne	r0, sl
 801176e:	2001      	moveq	r0, #1
 8011770:	440a      	add	r2, r1
 8011772:	8b23      	ldrh	r3, [r4, #24]
 8011774:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8011778:	b292      	uxth	r2, r2
 801177a:	83a2      	strh	r2, [r4, #28]
 801177c:	4413      	add	r3, r2
 801177e:	f1b9 0f00 	cmp.w	r9, #0
 8011782:	d102      	bne.n	801178a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8011784:	2d00      	cmp	r5, #0
 8011786:	d042      	beq.n	801180e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8011788:	b300      	cbz	r0, 80117cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801178a:	8c21      	ldrh	r1, [r4, #32]
 801178c:	4419      	add	r1, r3
 801178e:	458c      	cmp	ip, r1
 8011790:	da37      	bge.n	8011802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8011792:	8ae1      	ldrh	r1, [r4, #22]
 8011794:	2900      	cmp	r1, #0
 8011796:	d034      	beq.n	8011802 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8011798:	4563      	cmp	r3, ip
 801179a:	dd8d      	ble.n	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801179c:	e01d      	b.n	80117da <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801179e:	8893      	ldrh	r3, [r2, #4]
 80117a0:	8023      	strh	r3, [r4, #0]
 80117a2:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80117a6:	9901      	ldr	r1, [sp, #4]
 80117a8:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80117ac:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 80117b0:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80117b4:	ea4b 0b00 	orr.w	fp, fp, r0
 80117b8:	68e0      	ldr	r0, [r4, #12]
 80117ba:	6803      	ldr	r3, [r0, #0]
 80117bc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80117be:	4798      	blx	r3
 80117c0:	eb0b 0200 	add.w	r2, fp, r0
 80117c4:	b292      	uxth	r2, r2
 80117c6:	e7c5      	b.n	8011754 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80117c8:	2000      	movs	r0, #0
 80117ca:	e7d1      	b.n	8011770 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80117cc:	4563      	cmp	r3, ip
 80117ce:	f77f af73 	ble.w	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80117d2:	8ae3      	ldrh	r3, [r4, #22]
 80117d4:	2b00      	cmp	r3, #0
 80117d6:	f43f af6f 	beq.w	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80117da:	2301      	movs	r3, #1
 80117dc:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 80117e0:	8c22      	ldrh	r2, [r4, #32]
 80117e2:	8be3      	ldrh	r3, [r4, #30]
 80117e4:	4413      	add	r3, r2
 80117e6:	83e3      	strh	r3, [r4, #30]
 80117e8:	68e0      	ldr	r0, [r4, #12]
 80117ea:	6803      	ldr	r3, [r0, #0]
 80117ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80117ee:	4798      	blx	r3
 80117f0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80117f4:	4418      	add	r0, r3
 80117f6:	8a63      	ldrh	r3, [r4, #18]
 80117f8:	1a18      	subs	r0, r3, r0
 80117fa:	8260      	strh	r0, [r4, #18]
 80117fc:	b005      	add	sp, #20
 80117fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011802:	2300      	movs	r3, #0
 8011804:	4611      	mov	r1, r2
 8011806:	4620      	mov	r0, r4
 8011808:	f7ff ff0e 	bl	8011628 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801180c:	e754      	b.n	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801180e:	4563      	cmp	r3, ip
 8011810:	dd14      	ble.n	801183c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8011812:	b117      	cbz	r7, 801181a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8011814:	2301      	movs	r3, #1
 8011816:	460a      	mov	r2, r1
 8011818:	e772      	b.n	8011700 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 801181a:	2e00      	cmp	r6, #0
 801181c:	f43f af4c 	beq.w	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011820:	2800      	cmp	r0, #0
 8011822:	f47f af49 	bne.w	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011826:	f1ba 0f00 	cmp.w	sl, #0
 801182a:	d002      	beq.n	8011832 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801182c:	2301      	movs	r3, #1
 801182e:	4642      	mov	r2, r8
 8011830:	e767      	b.n	8011702 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8011832:	8ae3      	ldrh	r3, [r4, #22]
 8011834:	2b00      	cmp	r3, #0
 8011836:	f43f af3f 	beq.w	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801183a:	e7d5      	b.n	80117e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801183c:	2800      	cmp	r0, #0
 801183e:	f47f af3b 	bne.w	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8011842:	f1ba 0f00 	cmp.w	sl, #0
 8011846:	f43f af37 	beq.w	80116b8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801184a:	2301      	movs	r3, #1
 801184c:	4642      	mov	r2, r8
 801184e:	e7da      	b.n	8011806 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08011850 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8011850:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011852:	4605      	mov	r5, r0
 8011854:	b08f      	sub	sp, #60	@ 0x3c
 8011856:	4617      	mov	r7, r2
 8011858:	461c      	mov	r4, r3
 801185a:	460e      	mov	r6, r1
 801185c:	b1d1      	cbz	r1, 8011894 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801185e:	681b      	ldr	r3, [r3, #0]
 8011860:	4620      	mov	r0, r4
 8011862:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011864:	4798      	blx	r3
 8011866:	4240      	negs	r0, r0
 8011868:	b200      	sxth	r0, r0
 801186a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801186e:	9603      	str	r6, [sp, #12]
 8011870:	9700      	str	r7, [sp, #0]
 8011872:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8011876:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801187a:	4629      	mov	r1, r5
 801187c:	a805      	add	r0, sp, #20
 801187e:	f7ff fcab 	bl	80111d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8011882:	2401      	movs	r4, #1
 8011884:	a805      	add	r0, sp, #20
 8011886:	f7ff fedf 	bl	8011648 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801188a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801188e:	b163      	cbz	r3, 80118aa <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8011890:	3401      	adds	r4, #1
 8011892:	e7f7      	b.n	8011884 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8011894:	f002 fd82 	bl	801439c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011898:	2401      	movs	r4, #1
 801189a:	280a      	cmp	r0, #10
 801189c:	4628      	mov	r0, r5
 801189e:	bf08      	it	eq
 80118a0:	3401      	addeq	r4, #1
 80118a2:	f002 fd7b 	bl	801439c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80118a6:	2800      	cmp	r0, #0
 80118a8:	d1f7      	bne.n	801189a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80118aa:	b2a0      	uxth	r0, r4
 80118ac:	b00f      	add	sp, #60	@ 0x3c
 80118ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

080118b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80118b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80118b4:	b0e3      	sub	sp, #396	@ 0x18c
 80118b6:	461c      	mov	r4, r3
 80118b8:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 80118ba:	4683      	mov	fp, r0
 80118bc:	4688      	mov	r8, r1
 80118be:	2b00      	cmp	r3, #0
 80118c0:	f000 8112 	beq.w	8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80118c4:	6823      	ldr	r3, [r4, #0]
 80118c6:	2b00      	cmp	r3, #0
 80118c8:	f000 810e 	beq.w	8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80118cc:	7ba3      	ldrb	r3, [r4, #14]
 80118ce:	2b00      	cmp	r3, #0
 80118d0:	f000 810a 	beq.w	8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80118d4:	6810      	ldr	r0, [r2, #0]
 80118d6:	6851      	ldr	r1, [r2, #4]
 80118d8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80118dc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80118e0:	ad0a      	add	r5, sp, #40	@ 0x28
 80118e2:	462b      	mov	r3, r5
 80118e4:	c303      	stmia	r3!, {r0, r1}
 80118e6:	2100      	movs	r1, #0
 80118e8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80118ec:	910c      	str	r1, [sp, #48]	@ 0x30
 80118ee:	79a2      	ldrb	r2, [r4, #6]
 80118f0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80118f4:	a90c      	add	r1, sp, #48	@ 0x30
 80118f6:	4628      	mov	r0, r5
 80118f8:	f7ff fced 	bl	80112d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80118fc:	a90c      	add	r1, sp, #48	@ 0x30
 80118fe:	4608      	mov	r0, r1
 8011900:	79a2      	ldrb	r2, [r4, #6]
 8011902:	f7ff fce8 	bl	80112d6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011906:	a817      	add	r0, sp, #92	@ 0x5c
 8011908:	f002 f8f2 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 801190c:	6820      	ldr	r0, [r4, #0]
 801190e:	6803      	ldr	r3, [r0, #0]
 8011910:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011912:	4798      	blx	r3
 8011914:	4606      	mov	r6, r0
 8011916:	6820      	ldr	r0, [r4, #0]
 8011918:	6803      	ldr	r3, [r0, #0]
 801191a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801191c:	4798      	blx	r3
 801191e:	4633      	mov	r3, r6
 8011920:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8011922:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8011924:	9000      	str	r0, [sp, #0]
 8011926:	a817      	add	r0, sp, #92	@ 0x5c
 8011928:	f002 f93d 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801192c:	6820      	ldr	r0, [r4, #0]
 801192e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8011932:	6803      	ldr	r3, [r0, #0]
 8011934:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011936:	4798      	blx	r3
 8011938:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 801193c:	6823      	ldr	r3, [r4, #0]
 801193e:	4607      	mov	r7, r0
 8011940:	4406      	add	r6, r0
 8011942:	a830      	add	r0, sp, #192	@ 0xc0
 8011944:	f893 9009 	ldrb.w	r9, [r3, #9]
 8011948:	f002 f8d2 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 801194c:	7c23      	ldrb	r3, [r4, #16]
 801194e:	b17b      	cbz	r3, 8011970 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8011950:	6820      	ldr	r0, [r4, #0]
 8011952:	6803      	ldr	r3, [r0, #0]
 8011954:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011956:	4798      	blx	r3
 8011958:	9009      	str	r0, [sp, #36]	@ 0x24
 801195a:	6820      	ldr	r0, [r4, #0]
 801195c:	6802      	ldr	r2, [r0, #0]
 801195e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8011960:	4790      	blx	r2
 8011962:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011964:	9000      	str	r0, [sp, #0]
 8011966:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8011968:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 801196a:	a830      	add	r0, sp, #192	@ 0xc0
 801196c:	f002 f91b 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011970:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8011974:	7be2      	ldrb	r2, [r4, #15]
 8011976:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801197a:	1a8a      	subs	r2, r1, r2
 801197c:	7c21      	ldrb	r1, [r4, #16]
 801197e:	9103      	str	r1, [sp, #12]
 8011980:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8011984:	9102      	str	r1, [sp, #8]
 8011986:	6821      	ldr	r1, [r4, #0]
 8011988:	9101      	str	r1, [sp, #4]
 801198a:	7961      	ldrb	r1, [r4, #5]
 801198c:	9100      	str	r1, [sp, #0]
 801198e:	b292      	uxth	r2, r2
 8011990:	a930      	add	r1, sp, #192	@ 0xc0
 8011992:	a80e      	add	r0, sp, #56	@ 0x38
 8011994:	f7ff fc20 	bl	80111d8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8011998:	2e00      	cmp	r6, #0
 801199a:	dc5b      	bgt.n	8011a54 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 801199c:	af17      	add	r7, sp, #92	@ 0x5c
 801199e:	f04f 0900 	mov.w	r9, #0
 80119a2:	7c23      	ldrb	r3, [r4, #16]
 80119a4:	2b00      	cmp	r3, #0
 80119a6:	f000 80b1 	beq.w	8011b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80119aa:	a80e      	add	r0, sp, #56	@ 0x38
 80119ac:	f7ff fe4c 	bl	8011648 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80119b0:	f1ba 0f00 	cmp.w	sl, #0
 80119b4:	f000 80a5 	beq.w	8011b02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80119b8:	7c23      	ldrb	r3, [r4, #16]
 80119ba:	9309      	str	r3, [sp, #36]	@ 0x24
 80119bc:	2264      	movs	r2, #100	@ 0x64
 80119be:	4639      	mov	r1, r7
 80119c0:	a849      	add	r0, sp, #292	@ 0x124
 80119c2:	f012 fcac 	bl	802431e <memcpy>
 80119c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80119c8:	2b00      	cmp	r3, #0
 80119ca:	f000 80a7 	beq.w	8011b1c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80119ce:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 80119d2:	7922      	ldrb	r2, [r4, #4]
 80119d4:	2a01      	cmp	r2, #1
 80119d6:	f040 808a 	bne.w	8011aee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80119da:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 80119de:	1ac0      	subs	r0, r0, r3
 80119e0:	2302      	movs	r3, #2
 80119e2:	fb90 f0f3 	sdiv	r0, r0, r3
 80119e6:	b200      	sxth	r0, r0
 80119e8:	7c23      	ldrb	r3, [r4, #16]
 80119ea:	2b00      	cmp	r3, #0
 80119ec:	f000 808b 	beq.w	8011b06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80119f0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 80119f4:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 80119f8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80119fc:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011a00:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8011a04:	4410      	add	r0, r2
 8011a06:	b200      	sxth	r0, r0
 8011a08:	9000      	str	r0, [sp, #0]
 8011a0a:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8011a0e:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8011a12:	4642      	mov	r2, r8
 8011a14:	2100      	movs	r1, #0
 8011a16:	4658      	mov	r0, fp
 8011a18:	f7ff fc8e 	bl	8011338 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8011a1c:	2800      	cmp	r0, #0
 8011a1e:	d163      	bne.n	8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011a20:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011a24:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8011a28:	b2b2      	uxth	r2, r6
 8011a2a:	4413      	add	r3, r2
 8011a2c:	1a8a      	subs	r2, r1, r2
 8011a2e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8011a32:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8011a36:	b21b      	sxth	r3, r3
 8011a38:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011a3c:	2a00      	cmp	r2, #0
 8011a3e:	d153      	bne.n	8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011a40:	6822      	ldr	r2, [r4, #0]
 8011a42:	8869      	ldrh	r1, [r5, #2]
 8011a44:	7a12      	ldrb	r2, [r2, #8]
 8011a46:	1a9b      	subs	r3, r3, r2
 8011a48:	88ea      	ldrh	r2, [r5, #6]
 8011a4a:	440a      	add	r2, r1
 8011a4c:	b212      	sxth	r2, r2
 8011a4e:	4293      	cmp	r3, r2
 8011a50:	dda7      	ble.n	80119a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8011a52:	e049      	b.n	8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011a54:	7c23      	ldrb	r3, [r4, #16]
 8011a56:	444f      	add	r7, r9
 8011a58:	b1c3      	cbz	r3, 8011a8c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8011a5a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8011a5e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8011a62:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011a66:	443b      	add	r3, r7
 8011a68:	4293      	cmp	r3, r2
 8011a6a:	da97      	bge.n	801199c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011a6c:	a80e      	add	r0, sp, #56	@ 0x38
 8011a6e:	f7ff fdeb 	bl	8011648 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011a72:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8011a76:	3b01      	subs	r3, #1
 8011a78:	b29b      	uxth	r3, r3
 8011a7a:	454b      	cmp	r3, r9
 8011a7c:	9309      	str	r3, [sp, #36]	@ 0x24
 8011a7e:	d021      	beq.n	8011ac4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8011a80:	7961      	ldrb	r1, [r4, #5]
 8011a82:	a817      	add	r0, sp, #92	@ 0x5c
 8011a84:	f7fa f974 	bl	800bd70 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011a88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8011a8a:	e7f4      	b.n	8011a76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8011a8c:	fa1f f986 	uxth.w	r9, r6
 8011a90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8011a94:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011a98:	443b      	add	r3, r7
 8011a9a:	4293      	cmp	r3, r2
 8011a9c:	f6bf af7e 	bge.w	801199c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011aa0:	a817      	add	r0, sp, #92	@ 0x5c
 8011aa2:	f002 fc7b 	bl	801439c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011aa6:	b1f8      	cbz	r0, 8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011aa8:	280a      	cmp	r0, #10
 8011aaa:	d1f1      	bne.n	8011a90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011aac:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8011ab0:	444b      	add	r3, r9
 8011ab2:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8011ab6:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8011aba:	eba3 0309 	sub.w	r3, r3, r9
 8011abe:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011ac2:	e7e5      	b.n	8011a90 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011ac4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8011ac8:	b2b3      	uxth	r3, r6
 8011aca:	441a      	add	r2, r3
 8011acc:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8011ad0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8011ad4:	1ad3      	subs	r3, r2, r3
 8011ad6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011ada:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011ade:	b11b      	cbz	r3, 8011ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011ae0:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8011ae4:	2b00      	cmp	r3, #0
 8011ae6:	d0ba      	beq.n	8011a5e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8011ae8:	b063      	add	sp, #396	@ 0x18c
 8011aea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011aee:	2a02      	cmp	r2, #2
 8011af0:	d105      	bne.n	8011afe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8011af2:	7be2      	ldrb	r2, [r4, #15]
 8011af4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8011af8:	1a80      	subs	r0, r0, r2
 8011afa:	1ac0      	subs	r0, r0, r3
 8011afc:	e773      	b.n	80119e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8011afe:	2000      	movs	r0, #0
 8011b00:	e772      	b.n	80119e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011b02:	7be0      	ldrb	r0, [r4, #15]
 8011b04:	e770      	b.n	80119e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011b06:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8011b0a:	e773      	b.n	80119f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8011b0c:	f1ba 0f00 	cmp.w	sl, #0
 8011b10:	d0f7      	beq.n	8011b02 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8011b12:	2264      	movs	r2, #100	@ 0x64
 8011b14:	4639      	mov	r1, r7
 8011b16:	a849      	add	r0, sp, #292	@ 0x124
 8011b18:	f012 fc01 	bl	802431e <memcpy>
 8011b1c:	2300      	movs	r3, #0
 8011b1e:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8011b22:	6821      	ldr	r1, [r4, #0]
 8011b24:	a849      	add	r0, sp, #292	@ 0x124
 8011b26:	f7ff fb9a 	bl	801125e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011b2a:	b203      	sxth	r3, r0
 8011b2c:	e751      	b.n	80119d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08011b2e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8011b2e:	2b03      	cmp	r3, #3
 8011b30:	d818      	bhi.n	8011b64 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8011b32:	e8df f003 	tbb	[pc, r3]
 8011b36:	0602      	.short	0x0602
 8011b38:	130d      	.short	0x130d
 8011b3a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011b3e:	1850      	adds	r0, r2, r1
 8011b40:	4770      	bx	lr
 8011b42:	8803      	ldrh	r3, [r0, #0]
 8011b44:	8880      	ldrh	r0, [r0, #4]
 8011b46:	4418      	add	r0, r3
 8011b48:	b200      	sxth	r0, r0
 8011b4a:	1a80      	subs	r0, r0, r2
 8011b4c:	3801      	subs	r0, #1
 8011b4e:	4770      	bx	lr
 8011b50:	8803      	ldrh	r3, [r0, #0]
 8011b52:	8880      	ldrh	r0, [r0, #4]
 8011b54:	4418      	add	r0, r3
 8011b56:	b200      	sxth	r0, r0
 8011b58:	1a40      	subs	r0, r0, r1
 8011b5a:	e7f7      	b.n	8011b4c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8011b5c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8011b60:	4410      	add	r0, r2
 8011b62:	4770      	bx	lr
 8011b64:	2000      	movs	r0, #0
 8011b66:	4770      	bx	lr

08011b68 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8011b68:	2b03      	cmp	r3, #3
 8011b6a:	d817      	bhi.n	8011b9c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8011b6c:	e8df f003 	tbb	[pc, r3]
 8011b70:	10090602 	.word	0x10090602
 8011b74:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011b78:	1850      	adds	r0, r2, r1
 8011b7a:	4770      	bx	lr
 8011b7c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011b80:	e7fa      	b.n	8011b78 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8011b82:	8843      	ldrh	r3, [r0, #2]
 8011b84:	88c0      	ldrh	r0, [r0, #6]
 8011b86:	4418      	add	r0, r3
 8011b88:	b200      	sxth	r0, r0
 8011b8a:	1a80      	subs	r0, r0, r2
 8011b8c:	3801      	subs	r0, #1
 8011b8e:	4770      	bx	lr
 8011b90:	8843      	ldrh	r3, [r0, #2]
 8011b92:	88c0      	ldrh	r0, [r0, #6]
 8011b94:	4418      	add	r0, r3
 8011b96:	b200      	sxth	r0, r0
 8011b98:	1a40      	subs	r0, r0, r1
 8011b9a:	e7f7      	b.n	8011b8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8011b9c:	2000      	movs	r0, #0
 8011b9e:	4770      	bx	lr

08011ba0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8011ba0:	4b01      	ldr	r3, [pc, #4]	@ (8011ba8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8011ba2:	2200      	movs	r2, #0
 8011ba4:	601a      	str	r2, [r3, #0]
 8011ba6:	4770      	bx	lr
 8011ba8:	20002f3c 	.word	0x20002f3c

08011bac <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8011bac:	4603      	mov	r3, r0
 8011bae:	b1c8      	cbz	r0, 8011be4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8011bb0:	0c02      	lsrs	r2, r0, #16
 8011bb2:	0412      	lsls	r2, r2, #16
 8011bb4:	b9a2      	cbnz	r2, 8011be0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8011bb6:	0403      	lsls	r3, r0, #16
 8011bb8:	2010      	movs	r0, #16
 8011bba:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8011bbe:	bf04      	itt	eq
 8011bc0:	021b      	lsleq	r3, r3, #8
 8011bc2:	3008      	addeq	r0, #8
 8011bc4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8011bc8:	bf04      	itt	eq
 8011bca:	011b      	lsleq	r3, r3, #4
 8011bcc:	3004      	addeq	r0, #4
 8011bce:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8011bd2:	bf04      	itt	eq
 8011bd4:	009b      	lsleq	r3, r3, #2
 8011bd6:	3002      	addeq	r0, #2
 8011bd8:	2b00      	cmp	r3, #0
 8011bda:	db04      	blt.n	8011be6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8011bdc:	3001      	adds	r0, #1
 8011bde:	4770      	bx	lr
 8011be0:	2000      	movs	r0, #0
 8011be2:	e7ea      	b.n	8011bba <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8011be4:	2020      	movs	r0, #32
 8011be6:	4770      	bx	lr

08011be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8011be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011bec:	b087      	sub	sp, #28
 8011bee:	460d      	mov	r5, r1
 8011bf0:	4616      	mov	r6, r2
 8011bf2:	4698      	mov	r8, r3
 8011bf4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8011bf8:	4601      	mov	r1, r0
 8011bfa:	b120      	cbz	r0, 8011c06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011bfc:	b11a      	cbz	r2, 8011c06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011bfe:	2d1f      	cmp	r5, #31
 8011c00:	d801      	bhi.n	8011c06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8011c02:	2b1f      	cmp	r3, #31
 8011c04:	d904      	bls.n	8011c10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8011c06:	2000      	movs	r0, #0
 8011c08:	6038      	str	r0, [r7, #0]
 8011c0a:	b007      	add	sp, #28
 8011c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c10:	b97d      	cbnz	r5, 8011c32 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8011c12:	b143      	cbz	r3, 8011c26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8011c14:	4602      	mov	r2, r0
 8011c16:	e9cd 4700 	strd	r4, r7, [sp]
 8011c1a:	462b      	mov	r3, r5
 8011c1c:	4641      	mov	r1, r8
 8011c1e:	4630      	mov	r0, r6
 8011c20:	f7ff ffe2 	bl	8011be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011c24:	e7f1      	b.n	8011c0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8011c26:	f04f 33ff 	mov.w	r3, #4294967295
 8011c2a:	603b      	str	r3, [r7, #0]
 8011c2c:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8011c30:	e7eb      	b.n	8011c0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8011c32:	fa32 fa05 	lsrs.w	sl, r2, r5
 8011c36:	d106      	bne.n	8011c46 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8011c38:	4346      	muls	r6, r0
 8011c3a:	fbb6 f0f4 	udiv	r0, r6, r4
 8011c3e:	fb04 6610 	mls	r6, r4, r0, r6
 8011c42:	603e      	str	r6, [r7, #0]
 8011c44:	e7e1      	b.n	8011c0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8011c46:	2201      	movs	r2, #1
 8011c48:	40aa      	lsls	r2, r5
 8011c4a:	3a01      	subs	r2, #1
 8011c4c:	4016      	ands	r6, r2
 8011c4e:	fa00 fb05 	lsl.w	fp, r0, r5
 8011c52:	4630      	mov	r0, r6
 8011c54:	fbbb f9f4 	udiv	r9, fp, r4
 8011c58:	fb0a f309 	mul.w	r3, sl, r9
 8011c5c:	9303      	str	r3, [sp, #12]
 8011c5e:	f7ff ffa5 	bl	8011bac <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011c62:	462b      	mov	r3, r5
 8011c64:	460a      	mov	r2, r1
 8011c66:	e9cd 4700 	strd	r4, r7, [sp]
 8011c6a:	4601      	mov	r1, r0
 8011c6c:	4630      	mov	r0, r6
 8011c6e:	f7ff ffbb 	bl	8011be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011c72:	fb04 b919 	mls	r9, r4, r9, fp
 8011c76:	4606      	mov	r6, r0
 8011c78:	4648      	mov	r0, r9
 8011c7a:	eb05 0108 	add.w	r1, r5, r8
 8011c7e:	f7ff ff95 	bl	8011bac <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011c82:	ab05      	add	r3, sp, #20
 8011c84:	e9cd 4300 	strd	r4, r3, [sp]
 8011c88:	464a      	mov	r2, r9
 8011c8a:	4603      	mov	r3, r0
 8011c8c:	4650      	mov	r0, sl
 8011c8e:	f7ff ffab 	bl	8011be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011c92:	6839      	ldr	r1, [r7, #0]
 8011c94:	9a05      	ldr	r2, [sp, #20]
 8011c96:	9b03      	ldr	r3, [sp, #12]
 8011c98:	4411      	add	r1, r2
 8011c9a:	fbb1 f2f4 	udiv	r2, r1, r4
 8011c9e:	18d3      	adds	r3, r2, r3
 8011ca0:	441e      	add	r6, r3
 8011ca2:	fb04 1412 	mls	r4, r4, r2, r1
 8011ca6:	4430      	add	r0, r6
 8011ca8:	603c      	str	r4, [r7, #0]
 8011caa:	e7ae      	b.n	8011c0a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08011cac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8011cac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011cb0:	b085      	sub	sp, #20
 8011cb2:	f1b0 0900 	subs.w	r9, r0, #0
 8011cb6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8011cb8:	461d      	mov	r5, r3
 8011cba:	bfbf      	itttt	lt
 8011cbc:	6823      	ldrlt	r3, [r4, #0]
 8011cbe:	425b      	neglt	r3, r3
 8011cc0:	f1c9 0900 	rsblt	r9, r9, #0
 8011cc4:	6023      	strlt	r3, [r4, #0]
 8011cc6:	bfb4      	ite	lt
 8011cc8:	f04f 36ff 	movlt.w	r6, #4294967295
 8011ccc:	2601      	movge	r6, #1
 8011cce:	2a00      	cmp	r2, #0
 8011cd0:	4617      	mov	r7, r2
 8011cd2:	da04      	bge.n	8011cde <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8011cd4:	6823      	ldr	r3, [r4, #0]
 8011cd6:	425b      	negs	r3, r3
 8011cd8:	4257      	negs	r7, r2
 8011cda:	4276      	negs	r6, r6
 8011cdc:	6023      	str	r3, [r4, #0]
 8011cde:	2d00      	cmp	r5, #0
 8011ce0:	4638      	mov	r0, r7
 8011ce2:	bfba      	itte	lt
 8011ce4:	426d      	neglt	r5, r5
 8011ce6:	f04f 38ff 	movlt.w	r8, #4294967295
 8011cea:	f04f 0801 	movge.w	r8, #1
 8011cee:	f7ff ff5d 	bl	8011bac <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011cf2:	ab03      	add	r3, sp, #12
 8011cf4:	e9cd 5300 	strd	r5, r3, [sp]
 8011cf8:	463a      	mov	r2, r7
 8011cfa:	4603      	mov	r3, r0
 8011cfc:	4648      	mov	r0, r9
 8011cfe:	f7ff ff73 	bl	8011be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011d02:	6823      	ldr	r3, [r4, #0]
 8011d04:	9a03      	ldr	r2, [sp, #12]
 8011d06:	4546      	cmp	r6, r8
 8011d08:	441a      	add	r2, r3
 8011d0a:	fb92 f3f5 	sdiv	r3, r2, r5
 8011d0e:	4418      	add	r0, r3
 8011d10:	bf18      	it	ne
 8011d12:	4240      	negne	r0, r0
 8011d14:	fb05 2313 	mls	r3, r5, r3, r2
 8011d18:	1c72      	adds	r2, r6, #1
 8011d1a:	6023      	str	r3, [r4, #0]
 8011d1c:	d105      	bne.n	8011d2a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8011d1e:	2b00      	cmp	r3, #0
 8011d20:	f1c3 0200 	rsb	r2, r3, #0
 8011d24:	db0b      	blt.n	8011d3e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8011d26:	6022      	str	r2, [r4, #0]
 8011d28:	e006      	b.n	8011d38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011d2a:	2e01      	cmp	r6, #1
 8011d2c:	d104      	bne.n	8011d38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011d2e:	2b00      	cmp	r3, #0
 8011d30:	da02      	bge.n	8011d38 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011d32:	442b      	add	r3, r5
 8011d34:	3801      	subs	r0, #1
 8011d36:	6023      	str	r3, [r4, #0]
 8011d38:	b005      	add	sp, #20
 8011d3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011d3e:	3801      	subs	r0, #1
 8011d40:	1b52      	subs	r2, r2, r5
 8011d42:	e7f0      	b.n	8011d26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08011d44 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8011d44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011d48:	4c1c      	ldr	r4, [pc, #112]	@ (8011dbc <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8011d4a:	6807      	ldr	r7, [r0, #0]
 8011d4c:	69a3      	ldr	r3, [r4, #24]
 8011d4e:	4605      	mov	r5, r0
 8011d50:	b92b      	cbnz	r3, 8011d5e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8011d52:	6840      	ldr	r0, [r0, #4]
 8011d54:	e9c5 7000 	strd	r7, r0, [r5]
 8011d58:	b004      	add	sp, #16
 8011d5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d5e:	68a2      	ldr	r2, [r4, #8]
 8011d60:	6820      	ldr	r0, [r4, #0]
 8011d62:	ae04      	add	r6, sp, #16
 8011d64:	f04f 0802 	mov.w	r8, #2
 8011d68:	fb93 f1f8 	sdiv	r1, r3, r8
 8011d6c:	440a      	add	r2, r1
 8011d6e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8011d72:	69e1      	ldr	r1, [r4, #28]
 8011d74:	9600      	str	r6, [sp, #0]
 8011d76:	463a      	mov	r2, r7
 8011d78:	f7ff ff98 	bl	8011cac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011d7c:	69a3      	ldr	r3, [r4, #24]
 8011d7e:	686a      	ldr	r2, [r5, #4]
 8011d80:	6a21      	ldr	r1, [r4, #32]
 8011d82:	9600      	str	r6, [sp, #0]
 8011d84:	4607      	mov	r7, r0
 8011d86:	6860      	ldr	r0, [r4, #4]
 8011d88:	f7ff ff90 	bl	8011cac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011d8c:	6962      	ldr	r2, [r4, #20]
 8011d8e:	69a3      	ldr	r3, [r4, #24]
 8011d90:	fb93 f8f8 	sdiv	r8, r3, r8
 8011d94:	4442      	add	r2, r8
 8011d96:	9203      	str	r2, [sp, #12]
 8011d98:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8011d9a:	682a      	ldr	r2, [r5, #0]
 8011d9c:	9600      	str	r6, [sp, #0]
 8011d9e:	4407      	add	r7, r0
 8011da0:	68e0      	ldr	r0, [r4, #12]
 8011da2:	f7ff ff83 	bl	8011cac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011da6:	9600      	str	r6, [sp, #0]
 8011da8:	4680      	mov	r8, r0
 8011daa:	69a3      	ldr	r3, [r4, #24]
 8011dac:	686a      	ldr	r2, [r5, #4]
 8011dae:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8011db0:	6920      	ldr	r0, [r4, #16]
 8011db2:	f7ff ff7b 	bl	8011cac <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011db6:	4440      	add	r0, r8
 8011db8:	e7cc      	b.n	8011d54 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8011dba:	bf00      	nop
 8011dbc:	20002f40 	.word	0x20002f40

08011dc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8011dc0:	4b07      	ldr	r3, [pc, #28]	@ (8011de0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8011dc2:	781b      	ldrb	r3, [r3, #0]
 8011dc4:	2b01      	cmp	r3, #1
 8011dc6:	d109      	bne.n	8011ddc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8011dc8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011dcc:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011dd0:	8003      	strh	r3, [r0, #0]
 8011dd2:	4b04      	ldr	r3, [pc, #16]	@ (8011de4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8011dd4:	881b      	ldrh	r3, [r3, #0]
 8011dd6:	3b01      	subs	r3, #1
 8011dd8:	1a9b      	subs	r3, r3, r2
 8011dda:	800b      	strh	r3, [r1, #0]
 8011ddc:	4770      	bx	lr
 8011dde:	bf00      	nop
 8011de0:	20002f2c 	.word	0x20002f2c
 8011de4:	20002f28 	.word	0x20002f28

08011de8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8011de8:	b510      	push	{r4, lr}
 8011dea:	4b07      	ldr	r3, [pc, #28]	@ (8011e08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8011dec:	781b      	ldrb	r3, [r3, #0]
 8011dee:	2b01      	cmp	r3, #1
 8011df0:	d108      	bne.n	8011e04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8011df2:	4b06      	ldr	r3, [pc, #24]	@ (8011e0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8011df4:	880c      	ldrh	r4, [r1, #0]
 8011df6:	881b      	ldrh	r3, [r3, #0]
 8011df8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011dfc:	3b01      	subs	r3, #1
 8011dfe:	1b1b      	subs	r3, r3, r4
 8011e00:	8003      	strh	r3, [r0, #0]
 8011e02:	800a      	strh	r2, [r1, #0]
 8011e04:	bd10      	pop	{r4, pc}
 8011e06:	bf00      	nop
 8011e08:	20002f2c 	.word	0x20002f2c
 8011e0c:	20002f28 	.word	0x20002f28

08011e10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8011e10:	b510      	push	{r4, lr}
 8011e12:	4b0a      	ldr	r3, [pc, #40]	@ (8011e3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8011e14:	781b      	ldrb	r3, [r3, #0]
 8011e16:	2b01      	cmp	r3, #1
 8011e18:	d10e      	bne.n	8011e38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8011e1a:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011e1e:	8843      	ldrh	r3, [r0, #2]
 8011e20:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011e24:	8044      	strh	r4, [r0, #2]
 8011e26:	18ca      	adds	r2, r1, r3
 8011e28:	4b05      	ldr	r3, [pc, #20]	@ (8011e40 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8011e2a:	881b      	ldrh	r3, [r3, #0]
 8011e2c:	1a9b      	subs	r3, r3, r2
 8011e2e:	8003      	strh	r3, [r0, #0]
 8011e30:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011e34:	80c3      	strh	r3, [r0, #6]
 8011e36:	8081      	strh	r1, [r0, #4]
 8011e38:	bd10      	pop	{r4, pc}
 8011e3a:	bf00      	nop
 8011e3c:	20002f2c 	.word	0x20002f2c
 8011e40:	20002f28 	.word	0x20002f28

08011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8011e44:	4b08      	ldr	r3, [pc, #32]	@ (8011e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8011e46:	781b      	ldrb	r3, [r3, #0]
 8011e48:	2b01      	cmp	r3, #1
 8011e4a:	d10c      	bne.n	8011e66 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8011e4c:	8803      	ldrh	r3, [r0, #0]
 8011e4e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8011e52:	8842      	ldrh	r2, [r0, #2]
 8011e54:	8002      	strh	r2, [r0, #0]
 8011e56:	185a      	adds	r2, r3, r1
 8011e58:	4b04      	ldr	r3, [pc, #16]	@ (8011e6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8011e5a:	881b      	ldrh	r3, [r3, #0]
 8011e5c:	1a9b      	subs	r3, r3, r2
 8011e5e:	8043      	strh	r3, [r0, #2]
 8011e60:	88c3      	ldrh	r3, [r0, #6]
 8011e62:	8083      	strh	r3, [r0, #4]
 8011e64:	80c1      	strh	r1, [r0, #6]
 8011e66:	4770      	bx	lr
 8011e68:	20002f2c 	.word	0x20002f2c
 8011e6c:	20002f28 	.word	0x20002f28

08011e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8011e70:	b510      	push	{r4, lr}
 8011e72:	4b07      	ldr	r3, [pc, #28]	@ (8011e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011e74:	781b      	ldrb	r3, [r3, #0]
 8011e76:	2b01      	cmp	r3, #1
 8011e78:	d108      	bne.n	8011e8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8011e7a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011e7e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011e82:	8003      	strh	r3, [r0, #0]
 8011e84:	8893      	ldrh	r3, [r2, #4]
 8011e86:	3b01      	subs	r3, #1
 8011e88:	1b1b      	subs	r3, r3, r4
 8011e8a:	800b      	strh	r3, [r1, #0]
 8011e8c:	bd10      	pop	{r4, pc}
 8011e8e:	bf00      	nop
 8011e90:	20002f2c 	.word	0x20002f2c

08011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8011e94:	b510      	push	{r4, lr}
 8011e96:	4b0a      	ldr	r3, [pc, #40]	@ (8011ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8011e98:	781b      	ldrb	r3, [r3, #0]
 8011e9a:	2b01      	cmp	r3, #1
 8011e9c:	460a      	mov	r2, r1
 8011e9e:	d10d      	bne.n	8011ebc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011ea0:	8881      	ldrh	r1, [r0, #4]
 8011ea2:	8803      	ldrh	r3, [r0, #0]
 8011ea4:	440b      	add	r3, r1
 8011ea6:	4601      	mov	r1, r0
 8011ea8:	3b01      	subs	r3, #1
 8011eaa:	f821 3b02 	strh.w	r3, [r1], #2
 8011eae:	f7ff ffdf 	bl	8011e70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8011eb2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011eb6:	88c2      	ldrh	r2, [r0, #6]
 8011eb8:	8082      	strh	r2, [r0, #4]
 8011eba:	80c3      	strh	r3, [r0, #6]
 8011ebc:	bd10      	pop	{r4, pc}
 8011ebe:	bf00      	nop
 8011ec0:	20002f2c 	.word	0x20002f2c

08011ec4 <_ZN8touchgfx11Application13requestRedrawEv>:
 8011ec4:	4b06      	ldr	r3, [pc, #24]	@ (8011ee0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8011ec6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011eca:	4b06      	ldr	r3, [pc, #24]	@ (8011ee4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8011ecc:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8011ed0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011ed4:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8011ed8:	2100      	movs	r1, #0
 8011eda:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8011ede:	4770      	bx	lr
 8011ee0:	20002f28 	.word	0x20002f28
 8011ee4:	20002f2a 	.word	0x20002f2a

08011ee8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8011ee8:	4b03      	ldr	r3, [pc, #12]	@ (8011ef8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8011eea:	6818      	ldr	r0, [r3, #0]
 8011eec:	b110      	cbz	r0, 8011ef4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8011eee:	6803      	ldr	r3, [r0, #0]
 8011ef0:	699b      	ldr	r3, [r3, #24]
 8011ef2:	4718      	bx	r3
 8011ef4:	4770      	bx	lr
 8011ef6:	bf00      	nop
 8011ef8:	20002f70 	.word	0x20002f70

08011efc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8011efc:	4770      	bx	lr
	...

08011f00 <_ZN8touchgfx11Application4drawEv>:
 8011f00:	b507      	push	{r0, r1, r2, lr}
 8011f02:	4b09      	ldr	r3, [pc, #36]	@ (8011f28 <_ZN8touchgfx11Application4drawEv+0x28>)
 8011f04:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011f08:	4b08      	ldr	r3, [pc, #32]	@ (8011f2c <_ZN8touchgfx11Application4drawEv+0x2c>)
 8011f0a:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011f0e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011f12:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011f16:	6803      	ldr	r3, [r0, #0]
 8011f18:	2100      	movs	r1, #0
 8011f1a:	9100      	str	r1, [sp, #0]
 8011f1c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011f1e:	4669      	mov	r1, sp
 8011f20:	4798      	blx	r3
 8011f22:	b003      	add	sp, #12
 8011f24:	f85d fb04 	ldr.w	pc, [sp], #4
 8011f28:	20002f28 	.word	0x20002f28
 8011f2c:	20002f2a 	.word	0x20002f2a

08011f30 <_ZN8touchgfx11Application10invalidateEv>:
 8011f30:	4b09      	ldr	r3, [pc, #36]	@ (8011f58 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8011f32:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011f36:	4b09      	ldr	r3, [pc, #36]	@ (8011f5c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8011f38:	b082      	sub	sp, #8
 8011f3a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011f3e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011f42:	2100      	movs	r1, #0
 8011f44:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011f48:	9100      	str	r1, [sp, #0]
 8011f4a:	6803      	ldr	r3, [r0, #0]
 8011f4c:	aa02      	add	r2, sp, #8
 8011f4e:	e912 0006 	ldmdb	r2, {r1, r2}
 8011f52:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011f54:	b002      	add	sp, #8
 8011f56:	4718      	bx	r3
 8011f58:	20002f28 	.word	0x20002f28
 8011f5c:	20002f2a 	.word	0x20002f2a

08011f60 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8011f60:	4b03      	ldr	r3, [pc, #12]	@ (8011f70 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8011f62:	6818      	ldr	r0, [r3, #0]
 8011f64:	b110      	cbz	r0, 8011f6c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8011f66:	6803      	ldr	r3, [r0, #0]
 8011f68:	69db      	ldr	r3, [r3, #28]
 8011f6a:	4718      	bx	r3
 8011f6c:	4770      	bx	lr
 8011f6e:	bf00      	nop
 8011f70:	20002f70 	.word	0x20002f70

08011f74 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011f74:	4b03      	ldr	r3, [pc, #12]	@ (8011f84 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8011f76:	6818      	ldr	r0, [r3, #0]
 8011f78:	b110      	cbz	r0, 8011f80 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8011f7a:	6803      	ldr	r3, [r0, #0]
 8011f7c:	6a1b      	ldr	r3, [r3, #32]
 8011f7e:	4718      	bx	r3
 8011f80:	4770      	bx	lr
 8011f82:	bf00      	nop
 8011f84:	20002f70 	.word	0x20002f70

08011f88 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8011f88:	2300      	movs	r3, #0
 8011f8a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8011f8e:	4770      	bx	lr

08011f90 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011f90:	4b03      	ldr	r3, [pc, #12]	@ (8011fa0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8011f92:	6818      	ldr	r0, [r3, #0]
 8011f94:	b110      	cbz	r0, 8011f9c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8011f96:	6803      	ldr	r3, [r0, #0]
 8011f98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011f9a:	4718      	bx	r3
 8011f9c:	4770      	bx	lr
 8011f9e:	bf00      	nop
 8011fa0:	20002f70 	.word	0x20002f70

08011fa4 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8011fa4:	b510      	push	{r4, lr}
 8011fa6:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011faa:	888a      	ldrh	r2, [r1, #4]
 8011fac:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011fb0:	4422      	add	r2, r4
 8011fb2:	b212      	sxth	r2, r2
 8011fb4:	4293      	cmp	r3, r2
 8011fb6:	da15      	bge.n	8011fe4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011fb8:	8882      	ldrh	r2, [r0, #4]
 8011fba:	4413      	add	r3, r2
 8011fbc:	b21b      	sxth	r3, r3
 8011fbe:	429c      	cmp	r4, r3
 8011fc0:	da10      	bge.n	8011fe4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011fc2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011fc6:	88c9      	ldrh	r1, [r1, #6]
 8011fc8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011fcc:	4419      	add	r1, r3
 8011fce:	b209      	sxth	r1, r1
 8011fd0:	428a      	cmp	r2, r1
 8011fd2:	da07      	bge.n	8011fe4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011fd4:	88c0      	ldrh	r0, [r0, #6]
 8011fd6:	4410      	add	r0, r2
 8011fd8:	b200      	sxth	r0, r0
 8011fda:	4283      	cmp	r3, r0
 8011fdc:	bfac      	ite	ge
 8011fde:	2000      	movge	r0, #0
 8011fe0:	2001      	movlt	r0, #1
 8011fe2:	bd10      	pop	{r4, pc}
 8011fe4:	2000      	movs	r0, #0
 8011fe6:	e7fc      	b.n	8011fe2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08011fe8 <_ZN8touchgfx4Rect10restrictToEss>:
 8011fe8:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011fec:	2b00      	cmp	r3, #0
 8011fee:	b510      	push	{r4, lr}
 8011ff0:	da04      	bge.n	8011ffc <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8011ff2:	8884      	ldrh	r4, [r0, #4]
 8011ff4:	4423      	add	r3, r4
 8011ff6:	8083      	strh	r3, [r0, #4]
 8011ff8:	2300      	movs	r3, #0
 8011ffa:	8003      	strh	r3, [r0, #0]
 8011ffc:	f9b0 4000 	ldrsh.w	r4, [r0]
 8012000:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8012004:	1b09      	subs	r1, r1, r4
 8012006:	428b      	cmp	r3, r1
 8012008:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801200c:	bfc8      	it	gt
 801200e:	8081      	strhgt	r1, [r0, #4]
 8012010:	2b00      	cmp	r3, #0
 8012012:	da04      	bge.n	801201e <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8012014:	88c1      	ldrh	r1, [r0, #6]
 8012016:	440b      	add	r3, r1
 8012018:	80c3      	strh	r3, [r0, #6]
 801201a:	2300      	movs	r3, #0
 801201c:	8043      	strh	r3, [r0, #2]
 801201e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8012022:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8012026:	1a52      	subs	r2, r2, r1
 8012028:	4293      	cmp	r3, r2
 801202a:	bfc8      	it	gt
 801202c:	80c2      	strhgt	r2, [r0, #6]
 801202e:	bd10      	pop	{r4, pc}

08012030 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8012030:	b510      	push	{r4, lr}
 8012032:	4b10      	ldr	r3, [pc, #64]	@ (8012074 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8012034:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012038:	4b0f      	ldr	r3, [pc, #60]	@ (8012078 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801203a:	460c      	mov	r4, r1
 801203c:	4620      	mov	r0, r4
 801203e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8012042:	f7ff ffd1 	bl	8011fe8 <_ZN8touchgfx4Rect10restrictToEss>
 8012046:	4b0d      	ldr	r3, [pc, #52]	@ (801207c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8012048:	6818      	ldr	r0, [r3, #0]
 801204a:	b190      	cbz	r0, 8012072 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801204c:	6803      	ldr	r3, [r0, #0]
 801204e:	4621      	mov	r1, r4
 8012050:	689b      	ldr	r3, [r3, #8]
 8012052:	4798      	blx	r3
 8012054:	4b0a      	ldr	r3, [pc, #40]	@ (8012080 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8012056:	6818      	ldr	r0, [r3, #0]
 8012058:	b118      	cbz	r0, 8012062 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801205a:	6803      	ldr	r3, [r0, #0]
 801205c:	4621      	mov	r1, r4
 801205e:	689b      	ldr	r3, [r3, #8]
 8012060:	4798      	blx	r3
 8012062:	4b08      	ldr	r3, [pc, #32]	@ (8012084 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8012064:	6818      	ldr	r0, [r3, #0]
 8012066:	6803      	ldr	r3, [r0, #0]
 8012068:	4621      	mov	r1, r4
 801206a:	69db      	ldr	r3, [r3, #28]
 801206c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012070:	4718      	bx	r3
 8012072:	bd10      	pop	{r4, pc}
 8012074:	20002f2a 	.word	0x20002f2a
 8012078:	20002f28 	.word	0x20002f28
 801207c:	20002f70 	.word	0x20002f70
 8012080:	20002f6c 	.word	0x20002f6c
 8012084:	20002f34 	.word	0x20002f34

08012088 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8012088:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801208a:	4606      	mov	r6, r0
 801208c:	4608      	mov	r0, r1
 801208e:	460f      	mov	r7, r1
 8012090:	f7fc fd57 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012094:	b9e8      	cbnz	r0, 80120d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8012096:	f9b7 5000 	ldrsh.w	r5, [r7]
 801209a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801209e:	42a5      	cmp	r5, r4
 80120a0:	db17      	blt.n	80120d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80120a2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80120a6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 80120aa:	429a      	cmp	r2, r3
 80120ac:	db11      	blt.n	80120d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80120ae:	88b9      	ldrh	r1, [r7, #4]
 80120b0:	440d      	add	r5, r1
 80120b2:	88b1      	ldrh	r1, [r6, #4]
 80120b4:	440c      	add	r4, r1
 80120b6:	b22d      	sxth	r5, r5
 80120b8:	b224      	sxth	r4, r4
 80120ba:	42a5      	cmp	r5, r4
 80120bc:	dc09      	bgt.n	80120d2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80120be:	88f8      	ldrh	r0, [r7, #6]
 80120c0:	4410      	add	r0, r2
 80120c2:	88f2      	ldrh	r2, [r6, #6]
 80120c4:	4413      	add	r3, r2
 80120c6:	b200      	sxth	r0, r0
 80120c8:	b21b      	sxth	r3, r3
 80120ca:	4298      	cmp	r0, r3
 80120cc:	bfcc      	ite	gt
 80120ce:	2000      	movgt	r0, #0
 80120d0:	2001      	movle	r0, #1
 80120d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080120d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80120d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80120d6:	4604      	mov	r4, r0
 80120d8:	4608      	mov	r0, r1
 80120da:	460d      	mov	r5, r1
 80120dc:	f7fc fd31 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 80120e0:	b978      	cbnz	r0, 8012102 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80120e2:	4620      	mov	r0, r4
 80120e4:	f7fc fd2d 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 80120e8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80120ec:	b150      	cbz	r0, 8012104 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80120ee:	8026      	strh	r6, [r4, #0]
 80120f0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80120f4:	8063      	strh	r3, [r4, #2]
 80120f6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80120fa:	80a3      	strh	r3, [r4, #4]
 80120fc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012100:	80e3      	strh	r3, [r4, #6]
 8012102:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012104:	f9b4 1000 	ldrsh.w	r1, [r4]
 8012108:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801210c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8012110:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8012114:	88ed      	ldrh	r5, [r5, #6]
 8012116:	42b1      	cmp	r1, r6
 8012118:	460f      	mov	r7, r1
 801211a:	bfa8      	it	ge
 801211c:	4637      	movge	r7, r6
 801211e:	4293      	cmp	r3, r2
 8012120:	4618      	mov	r0, r3
 8012122:	4466      	add	r6, ip
 8012124:	bfa8      	it	ge
 8012126:	4610      	movge	r0, r2
 8012128:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801212c:	8027      	strh	r7, [r4, #0]
 801212e:	442a      	add	r2, r5
 8012130:	88e5      	ldrh	r5, [r4, #6]
 8012132:	8060      	strh	r0, [r4, #2]
 8012134:	4461      	add	r1, ip
 8012136:	442b      	add	r3, r5
 8012138:	b236      	sxth	r6, r6
 801213a:	b209      	sxth	r1, r1
 801213c:	b212      	sxth	r2, r2
 801213e:	b21b      	sxth	r3, r3
 8012140:	428e      	cmp	r6, r1
 8012142:	bfac      	ite	ge
 8012144:	ebc7 0106 	rsbge	r1, r7, r6
 8012148:	ebc7 0101 	rsblt	r1, r7, r1
 801214c:	429a      	cmp	r2, r3
 801214e:	bfac      	ite	ge
 8012150:	ebc0 0202 	rsbge	r2, r0, r2
 8012154:	ebc0 0203 	rsblt	r2, r0, r3
 8012158:	80a1      	strh	r1, [r4, #4]
 801215a:	80e2      	strh	r2, [r4, #6]
 801215c:	e7d1      	b.n	8012102 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08012160 <_ZN8touchgfx11Application11getInstanceEv>:
 8012160:	4b01      	ldr	r3, [pc, #4]	@ (8012168 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8012162:	6818      	ldr	r0, [r3, #0]
 8012164:	4770      	bx	lr
 8012166:	bf00      	nop
 8012168:	20002f80 	.word	0x20002f80

0801216c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801216c:	b510      	push	{r4, lr}
 801216e:	2300      	movs	r3, #0
 8012170:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8012174:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8012178:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801217c:	4604      	mov	r4, r0
 801217e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8012182:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8012186:	429a      	cmp	r2, r3
 8012188:	d90e      	bls.n	80121a8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801218a:	18e2      	adds	r2, r4, r3
 801218c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8012190:	b122      	cbz	r2, 801219c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8012192:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8012196:	6803      	ldr	r3, [r0, #0]
 8012198:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801219a:	4798      	blx	r3
 801219c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80121a0:	3301      	adds	r3, #1
 80121a2:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80121a6:	e7ea      	b.n	801217e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80121a8:	bd10      	pop	{r4, pc}

080121aa <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80121aa:	2300      	movs	r3, #0
 80121ac:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 80121b0:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80121b4:	30a4      	adds	r0, #164	@ 0xa4
 80121b6:	f802 3b01 	strb.w	r3, [r2], #1
 80121ba:	4282      	cmp	r2, r0
 80121bc:	d1fb      	bne.n	80121b6 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80121be:	4770      	bx	lr

080121c0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80121c0:	b570      	push	{r4, r5, r6, lr}
 80121c2:	4c0b      	ldr	r4, [pc, #44]	@ (80121f0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80121c4:	4605      	mov	r5, r0
 80121c6:	6820      	ldr	r0, [r4, #0]
 80121c8:	460e      	mov	r6, r1
 80121ca:	b110      	cbz	r0, 80121d2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80121cc:	6803      	ldr	r3, [r0, #0]
 80121ce:	695b      	ldr	r3, [r3, #20]
 80121d0:	4798      	blx	r3
 80121d2:	1d28      	adds	r0, r5, #4
 80121d4:	f7ff ffe9 	bl	80121aa <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80121d8:	6026      	str	r6, [r4, #0]
 80121da:	6833      	ldr	r3, [r6, #0]
 80121dc:	4630      	mov	r0, r6
 80121de:	68db      	ldr	r3, [r3, #12]
 80121e0:	4798      	blx	r3
 80121e2:	682b      	ldr	r3, [r5, #0]
 80121e4:	4628      	mov	r0, r5
 80121e6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80121e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121ec:	4718      	bx	r3
 80121ee:	bf00      	nop
 80121f0:	20002f70 	.word	0x20002f70

080121f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80121f4:	2300      	movs	r3, #0
 80121f6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 80121fa:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 80121fe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012200:	461a      	mov	r2, r3
 8012202:	461c      	mov	r4, r3
 8012204:	461d      	mov	r5, r3
 8012206:	459c      	cmp	ip, r3
 8012208:	dd1a      	ble.n	8012240 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801220a:	18c6      	adds	r6, r0, r3
 801220c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8012210:	b16e      	cbz	r6, 801222e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8012212:	429a      	cmp	r2, r3
 8012214:	d008      	beq.n	8012228 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8012216:	fa1f fe82 	uxth.w	lr, r2
 801221a:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801221e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8012222:	1887      	adds	r7, r0, r2
 8012224:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8012228:	3201      	adds	r2, #1
 801222a:	3301      	adds	r3, #1
 801222c:	e7eb      	b.n	8012206 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801222e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8012232:	4299      	cmp	r1, r3
 8012234:	bfa8      	it	ge
 8012236:	3501      	addge	r5, #1
 8012238:	429e      	cmp	r6, r3
 801223a:	bfc8      	it	gt
 801223c:	3401      	addgt	r4, #1
 801223e:	e7f4      	b.n	801222a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8012240:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8012244:	1b49      	subs	r1, r1, r5
 8012246:	1b1b      	subs	r3, r3, r4
 8012248:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801224c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8012250:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8012254:	4293      	cmp	r3, r2
 8012256:	dd03      	ble.n	8012260 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8012258:	3b01      	subs	r3, #1
 801225a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801225e:	e7f7      	b.n	8012250 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8012260:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08012264 <_ZN8touchgfx11Application15handleTickEventEv>:
 8012264:	b570      	push	{r4, r5, r6, lr}
 8012266:	4d16      	ldr	r5, [pc, #88]	@ (80122c0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8012268:	4604      	mov	r4, r0
 801226a:	6828      	ldr	r0, [r5, #0]
 801226c:	b140      	cbz	r0, 8012280 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801226e:	7a03      	ldrb	r3, [r0, #8]
 8012270:	b933      	cbnz	r3, 8012280 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8012272:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8012276:	6803      	ldr	r3, [r0, #0]
 8012278:	689b      	ldr	r3, [r3, #8]
 801227a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801227e:	4718      	bx	r3
 8012280:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8012284:	4e0f      	ldr	r6, [pc, #60]	@ (80122c4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8012286:	b973      	cbnz	r3, 80122a6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8012288:	b168      	cbz	r0, 80122a6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801228a:	7a03      	ldrb	r3, [r0, #8]
 801228c:	b15b      	cbz	r3, 80122a6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801228e:	6830      	ldr	r0, [r6, #0]
 8012290:	b110      	cbz	r0, 8012298 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8012292:	6803      	ldr	r3, [r0, #0]
 8012294:	691b      	ldr	r3, [r3, #16]
 8012296:	4798      	blx	r3
 8012298:	6828      	ldr	r0, [r5, #0]
 801229a:	6803      	ldr	r3, [r0, #0]
 801229c:	68db      	ldr	r3, [r3, #12]
 801229e:	4798      	blx	r3
 80122a0:	2301      	movs	r3, #1
 80122a2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80122a6:	3404      	adds	r4, #4
 80122a8:	4620      	mov	r0, r4
 80122aa:	f7ff ff5f 	bl	801216c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80122ae:	4620      	mov	r0, r4
 80122b0:	f7ff ffa0 	bl	80121f4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80122b4:	6830      	ldr	r0, [r6, #0]
 80122b6:	b110      	cbz	r0, 80122be <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80122b8:	6803      	ldr	r3, [r0, #0]
 80122ba:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80122bc:	e7dd      	b.n	801227a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80122be:	bd70      	pop	{r4, r5, r6, pc}
 80122c0:	20002f74 	.word	0x20002f74
 80122c4:	20002f70 	.word	0x20002f70

080122c8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80122c8:	4603      	mov	r3, r0
 80122ca:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80122ce:	2200      	movs	r2, #0
 80122d0:	801a      	strh	r2, [r3, #0]
 80122d2:	805a      	strh	r2, [r3, #2]
 80122d4:	809a      	strh	r2, [r3, #4]
 80122d6:	80da      	strh	r2, [r3, #6]
 80122d8:	3308      	adds	r3, #8
 80122da:	428b      	cmp	r3, r1
 80122dc:	d1f8      	bne.n	80122d0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80122de:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 80122e2:	4770      	bx	lr

080122e4 <_ZN8touchgfx11ApplicationC1Ev>:
 80122e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80122e6:	4606      	mov	r6, r0
 80122e8:	4b1c      	ldr	r3, [pc, #112]	@ (801235c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80122ea:	f846 3b04 	str.w	r3, [r6], #4
 80122ee:	4604      	mov	r4, r0
 80122f0:	2500      	movs	r5, #0
 80122f2:	22a8      	movs	r2, #168	@ 0xa8
 80122f4:	2100      	movs	r1, #0
 80122f6:	4630      	mov	r0, r6
 80122f8:	f011 ff41 	bl	802417e <memset>
 80122fc:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8012300:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8012304:	f7ff ffe0 	bl	80122c8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012308:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 801230c:	f7ff ffdc 	bl	80122c8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012310:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8012314:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8012318:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 801231c:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8012320:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8012324:	490e      	ldr	r1, [pc, #56]	@ (8012360 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8012326:	480f      	ldr	r0, [pc, #60]	@ (8012364 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8012328:	4f0f      	ldr	r7, [pc, #60]	@ (8012368 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801232a:	f011 fb49 	bl	80239c0 <CRC_Lock>
 801232e:	4b0f      	ldr	r3, [pc, #60]	@ (801236c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8012330:	b158      	cbz	r0, 801234a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8012332:	801d      	strh	r5, [r3, #0]
 8012334:	4a0e      	ldr	r2, [pc, #56]	@ (8012370 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8012336:	2300      	movs	r3, #0
 8012338:	6013      	str	r3, [r2, #0]
 801233a:	4a0e      	ldr	r2, [pc, #56]	@ (8012374 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801233c:	603b      	str	r3, [r7, #0]
 801233e:	4630      	mov	r0, r6
 8012340:	6013      	str	r3, [r2, #0]
 8012342:	f7ff ff32 	bl	80121aa <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8012346:	4620      	mov	r0, r4
 8012348:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801234a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801234e:	2002      	movs	r0, #2
 8012350:	801a      	strh	r2, [r3, #0]
 8012352:	6038      	str	r0, [r7, #0]
 8012354:	f001 fa52 	bl	80137fc <_ZN8touchgfx6Screen4drawEv>
 8012358:	e7ec      	b.n	8012334 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801235a:	bf00      	nop
 801235c:	0802714c 	.word	0x0802714c
 8012360:	b5e8b5cd 	.word	0xb5e8b5cd
 8012364:	f407a5c2 	.word	0xf407a5c2
 8012368:	20002f70 	.word	0x20002f70
 801236c:	20000020 	.word	0x20000020
 8012370:	20002f80 	.word	0x20002f80
 8012374:	20002f74 	.word	0x20002f74

08012378 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8012378:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801237c:	3b01      	subs	r3, #1
 801237e:	b29b      	uxth	r3, r3
 8012380:	428b      	cmp	r3, r1
 8012382:	b510      	push	{r4, lr}
 8012384:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8012388:	d908      	bls.n	801239c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801238a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801238e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8012392:	681a      	ldr	r2, [r3, #0]
 8012394:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8012398:	685a      	ldr	r2, [r3, #4]
 801239a:	6062      	str	r2, [r4, #4]
 801239c:	bd10      	pop	{r4, pc}
	...

080123a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80123a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123a4:	4b8f      	ldr	r3, [pc, #572]	@ (80125e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80123a6:	b08f      	sub	sp, #60	@ 0x3c
 80123a8:	ac0a      	add	r4, sp, #40	@ 0x28
 80123aa:	e884 0006 	stmia.w	r4, {r1, r2}
 80123ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80123b2:	4b8d      	ldr	r3, [pc, #564]	@ (80125e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80123b4:	4683      	mov	fp, r0
 80123b6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80123ba:	4620      	mov	r0, r4
 80123bc:	f7ff fe14 	bl	8011fe8 <_ZN8touchgfx4Rect10restrictToEss>
 80123c0:	4620      	mov	r0, r4
 80123c2:	f7fc fbbe 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 80123c6:	2800      	cmp	r0, #0
 80123c8:	d16a      	bne.n	80124a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80123ca:	9403      	str	r4, [sp, #12]
 80123cc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80123d0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80123d4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80123d8:	35a4      	adds	r5, #164	@ 0xa4
 80123da:	9301      	str	r3, [sp, #4]
 80123dc:	b15c      	cbz	r4, 80123f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80123de:	4629      	mov	r1, r5
 80123e0:	9803      	ldr	r0, [sp, #12]
 80123e2:	f7ff fe51 	bl	8012088 <_ZNK8touchgfx4Rect8includesERKS0_>
 80123e6:	3c01      	subs	r4, #1
 80123e8:	b118      	cbz	r0, 80123f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80123ea:	b2a1      	uxth	r1, r4
 80123ec:	9801      	ldr	r0, [sp, #4]
 80123ee:	f7ff ffc3 	bl	8012378 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80123f2:	3d08      	subs	r5, #8
 80123f4:	e7f2      	b.n	80123dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80123f6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80123fa:	f8cd a010 	str.w	sl, [sp, #16]
 80123fe:	f10a 33ff 	add.w	r3, sl, #4294967295
 8012402:	9302      	str	r3, [sp, #8]
 8012404:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8012408:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 801240c:	9306      	str	r3, [sp, #24]
 801240e:	445c      	add	r4, fp
 8012410:	2500      	movs	r5, #0
 8012412:	4626      	mov	r6, r4
 8012414:	f8cd a014 	str.w	sl, [sp, #20]
 8012418:	462f      	mov	r7, r5
 801241a:	9b05      	ldr	r3, [sp, #20]
 801241c:	2b00      	cmp	r3, #0
 801241e:	d073      	beq.n	8012508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8012420:	9903      	ldr	r1, [sp, #12]
 8012422:	4630      	mov	r0, r6
 8012424:	f7ff fdbe 	bl	8011fa4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012428:	b350      	cbz	r0, 8012480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801242a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801242e:	f9b6 c000 	ldrsh.w	ip, [r6]
 8012432:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8012436:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801243a:	45e6      	cmp	lr, ip
 801243c:	db33      	blt.n	80124a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801243e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8012442:	88b3      	ldrh	r3, [r6, #4]
 8012444:	4472      	add	r2, lr
 8012446:	4463      	add	r3, ip
 8012448:	b212      	sxth	r2, r2
 801244a:	b21b      	sxth	r3, r3
 801244c:	429a      	cmp	r2, r3
 801244e:	dc2a      	bgt.n	80124a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8012450:	88f3      	ldrh	r3, [r6, #6]
 8012452:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8012456:	fa1f f289 	uxth.w	r2, r9
 801245a:	4413      	add	r3, r2
 801245c:	b29b      	uxth	r3, r3
 801245e:	45c8      	cmp	r8, r9
 8012460:	fa1f fc88 	uxth.w	ip, r8
 8012464:	fa0f fe83 	sxth.w	lr, r3
 8012468:	db0f      	blt.n	801248a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801246a:	eba3 030c 	sub.w	r3, r3, ip
 801246e:	1ac9      	subs	r1, r1, r3
 8012470:	b209      	sxth	r1, r1
 8012472:	2900      	cmp	r1, #0
 8012474:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8012478:	dd12      	ble.n	80124a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801247a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801247e:	4605      	mov	r5, r0
 8012480:	9b05      	ldr	r3, [sp, #20]
 8012482:	3b01      	subs	r3, #1
 8012484:	9305      	str	r3, [sp, #20]
 8012486:	3e08      	subs	r6, #8
 8012488:	e7c7      	b.n	801241a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801248a:	4461      	add	r1, ip
 801248c:	b209      	sxth	r1, r1
 801248e:	4571      	cmp	r1, lr
 8012490:	dc38      	bgt.n	8012504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8012492:	eba2 020c 	sub.w	r2, r2, ip
 8012496:	b212      	sxth	r2, r2
 8012498:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801249c:	2a00      	cmp	r2, #0
 801249e:	dcee      	bgt.n	801247e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80124a0:	b00f      	add	sp, #60	@ 0x3c
 80124a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124a6:	45c8      	cmp	r8, r9
 80124a8:	db2c      	blt.n	8012504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80124aa:	88f3      	ldrh	r3, [r6, #6]
 80124ac:	4499      	add	r9, r3
 80124ae:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 80124b2:	4498      	add	r8, r3
 80124b4:	fa0f f989 	sxth.w	r9, r9
 80124b8:	fa0f f888 	sxth.w	r8, r8
 80124bc:	45c1      	cmp	r9, r8
 80124be:	db21      	blt.n	8012504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80124c0:	88b3      	ldrh	r3, [r6, #4]
 80124c2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80124c6:	fa1f f28c 	uxth.w	r2, ip
 80124ca:	4413      	add	r3, r2
 80124cc:	b29b      	uxth	r3, r3
 80124ce:	45e6      	cmp	lr, ip
 80124d0:	fa1f f88e 	uxth.w	r8, lr
 80124d4:	fa0f f983 	sxth.w	r9, r3
 80124d8:	db0a      	blt.n	80124f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80124da:	eba3 0308 	sub.w	r3, r3, r8
 80124de:	1ac9      	subs	r1, r1, r3
 80124e0:	b209      	sxth	r1, r1
 80124e2:	2900      	cmp	r1, #0
 80124e4:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80124e8:	ddda      	ble.n	80124a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80124ea:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80124ee:	e7c6      	b.n	801247e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80124f0:	4441      	add	r1, r8
 80124f2:	b209      	sxth	r1, r1
 80124f4:	4549      	cmp	r1, r9
 80124f6:	dc05      	bgt.n	8012504 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80124f8:	eba2 0208 	sub.w	r2, r2, r8
 80124fc:	b212      	sxth	r2, r2
 80124fe:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8012502:	e7cb      	b.n	801249c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8012504:	4607      	mov	r7, r0
 8012506:	e7bb      	b.n	8012480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8012508:	2d00      	cmp	r5, #0
 801250a:	d181      	bne.n	8012410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 801250c:	2f00      	cmp	r7, #0
 801250e:	f000 81dd 	beq.w	80128cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8012512:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8012516:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 801251a:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 801251e:	b2b3      	uxth	r3, r6
 8012520:	9305      	str	r3, [sp, #20]
 8012522:	9a05      	ldr	r2, [sp, #20]
 8012524:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8012528:	4413      	add	r3, r2
 801252a:	b2ba      	uxth	r2, r7
 801252c:	4492      	add	sl, r2
 801252e:	b29b      	uxth	r3, r3
 8012530:	fa1f fa8a 	uxth.w	sl, sl
 8012534:	fa0f f883 	sxth.w	r8, r3
 8012538:	fa0f f98a 	sxth.w	r9, sl
 801253c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8012540:	9b04      	ldr	r3, [sp, #16]
 8012542:	2b00      	cmp	r3, #0
 8012544:	d052      	beq.n	80125ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8012546:	9903      	ldr	r1, [sp, #12]
 8012548:	4620      	mov	r0, r4
 801254a:	f7ff fd2b 	bl	8011fa4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801254e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8012552:	b1c0      	cbz	r0, 8012586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8012554:	f9b4 e000 	ldrsh.w	lr, [r4]
 8012558:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801255c:	4576      	cmp	r6, lr
 801255e:	dc22      	bgt.n	80125a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8012560:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8012564:	44f4      	add	ip, lr
 8012566:	fa0f fc8c 	sxth.w	ip, ip
 801256a:	45e0      	cmp	r8, ip
 801256c:	db1b      	blt.n	80125a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801256e:	428f      	cmp	r7, r1
 8012570:	fa1f fc81 	uxth.w	ip, r1
 8012574:	88e1      	ldrh	r1, [r4, #6]
 8012576:	dc0d      	bgt.n	8012594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8012578:	ebaa 0c0c 	sub.w	ip, sl, ip
 801257c:	eba1 010c 	sub.w	r1, r1, ip
 8012580:	f8a4 9002 	strh.w	r9, [r4, #2]
 8012584:	80e1      	strh	r1, [r4, #6]
 8012586:	4628      	mov	r0, r5
 8012588:	9904      	ldr	r1, [sp, #16]
 801258a:	3901      	subs	r1, #1
 801258c:	9104      	str	r1, [sp, #16]
 801258e:	3c08      	subs	r4, #8
 8012590:	4605      	mov	r5, r0
 8012592:	e7d3      	b.n	801253c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8012594:	4461      	add	r1, ip
 8012596:	b209      	sxth	r1, r1
 8012598:	4549      	cmp	r1, r9
 801259a:	dcf5      	bgt.n	8012588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801259c:	eba2 0c0c 	sub.w	ip, r2, ip
 80125a0:	f8a4 c006 	strh.w	ip, [r4, #6]
 80125a4:	e7ef      	b.n	8012586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80125a6:	428f      	cmp	r7, r1
 80125a8:	dcee      	bgt.n	8012588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80125aa:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80125ae:	4461      	add	r1, ip
 80125b0:	b209      	sxth	r1, r1
 80125b2:	4589      	cmp	r9, r1
 80125b4:	dbe8      	blt.n	8012588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80125b6:	4576      	cmp	r6, lr
 80125b8:	fa1f fc8e 	uxth.w	ip, lr
 80125bc:	88a1      	ldrh	r1, [r4, #4]
 80125be:	dc07      	bgt.n	80125d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80125c0:	eba3 0c0c 	sub.w	ip, r3, ip
 80125c4:	eba1 010c 	sub.w	r1, r1, ip
 80125c8:	f8a4 8000 	strh.w	r8, [r4]
 80125cc:	80a1      	strh	r1, [r4, #4]
 80125ce:	e7da      	b.n	8012586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80125d0:	4461      	add	r1, ip
 80125d2:	b209      	sxth	r1, r1
 80125d4:	4588      	cmp	r8, r1
 80125d6:	dbd7      	blt.n	8012588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80125d8:	9905      	ldr	r1, [sp, #20]
 80125da:	eba1 0c0c 	sub.w	ip, r1, ip
 80125de:	f8a4 c004 	strh.w	ip, [r4, #4]
 80125e2:	e7d0      	b.n	8012586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80125e4:	20002f2a 	.word	0x20002f2a
 80125e8:	20002f28 	.word	0x20002f28
 80125ec:	2d00      	cmp	r5, #0
 80125ee:	f000 816d 	beq.w	80128cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80125f2:	9b06      	ldr	r3, [sp, #24]
 80125f4:	445b      	add	r3, fp
 80125f6:	461c      	mov	r4, r3
 80125f8:	9b02      	ldr	r3, [sp, #8]
 80125fa:	3301      	adds	r3, #1
 80125fc:	f000 8166 	beq.w	80128cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8012600:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8012604:	4629      	mov	r1, r5
 8012606:	9803      	ldr	r0, [sp, #12]
 8012608:	f7ff fd3e 	bl	8012088 <_ZNK8touchgfx4Rect8includesERKS0_>
 801260c:	b120      	cbz	r0, 8012618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801260e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8012612:	9801      	ldr	r0, [sp, #4]
 8012614:	f7ff feb0 	bl	8012378 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012618:	9903      	ldr	r1, [sp, #12]
 801261a:	4628      	mov	r0, r5
 801261c:	f7ff fcc2 	bl	8011fa4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012620:	2800      	cmp	r0, #0
 8012622:	f000 809c 	beq.w	801275e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8012626:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801262a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801262e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8012632:	9309      	str	r3, [sp, #36]	@ 0x24
 8012634:	fa1f f189 	uxth.w	r1, r9
 8012638:	eb01 0c03 	add.w	ip, r1, r3
 801263c:	fa1f fa8c 	uxth.w	sl, ip
 8012640:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8012644:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8012648:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801264c:	b283      	uxth	r3, r0
 801264e:	eb03 050c 	add.w	r5, r3, ip
 8012652:	b2ad      	uxth	r5, r5
 8012654:	9505      	str	r5, [sp, #20]
 8012656:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801265a:	9504      	str	r5, [sp, #16]
 801265c:	4548      	cmp	r0, r9
 801265e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8012662:	f340 8099 	ble.w	8012798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8012666:	1a5b      	subs	r3, r3, r1
 8012668:	b29b      	uxth	r3, r3
 801266a:	4596      	cmp	lr, r2
 801266c:	fa0f f08a 	sxth.w	r0, sl
 8012670:	b21e      	sxth	r6, r3
 8012672:	dd2e      	ble.n	80126d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8012674:	9f02      	ldr	r7, [sp, #8]
 8012676:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801267a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801267e:	9f04      	ldr	r7, [sp, #16]
 8012680:	1a3f      	subs	r7, r7, r0
 8012682:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8012686:	fa1f fe8e 	uxth.w	lr, lr
 801268a:	b292      	uxth	r2, r2
 801268c:	ebae 0102 	sub.w	r1, lr, r2
 8012690:	44a6      	add	lr, r4
 8012692:	4402      	add	r2, r0
 8012694:	b289      	uxth	r1, r1
 8012696:	fa0f fe8e 	sxth.w	lr, lr
 801269a:	b212      	sxth	r2, r2
 801269c:	b20d      	sxth	r5, r1
 801269e:	ebae 0202 	sub.w	r2, lr, r2
 80126a2:	436f      	muls	r7, r5
 80126a4:	4372      	muls	r2, r6
 80126a6:	4297      	cmp	r7, r2
 80126a8:	db09      	blt.n	80126be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80126aa:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 80126ae:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 80126b2:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80126b6:	449c      	add	ip, r3
 80126b8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 80126bc:	e686      	b.n	80123cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80126be:	4421      	add	r1, r4
 80126c0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80126c4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 80126c8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80126cc:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80126d0:	e67c      	b.n	80123cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80126d2:	9f04      	ldr	r7, [sp, #16]
 80126d4:	42b8      	cmp	r0, r7
 80126d6:	da27      	bge.n	8012728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80126d8:	9902      	ldr	r1, [sp, #8]
 80126da:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 80126de:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80126e2:	eb05 010e 	add.w	r1, r5, lr
 80126e6:	fa1f f881 	uxth.w	r8, r1
 80126ea:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 80126ee:	4411      	add	r1, r2
 80126f0:	eba1 0108 	sub.w	r1, r1, r8
 80126f4:	b289      	uxth	r1, r1
 80126f6:	fa0f f988 	sxth.w	r9, r8
 80126fa:	eba2 020e 	sub.w	r2, r2, lr
 80126fe:	fa0f f881 	sxth.w	r8, r1
 8012702:	1a3f      	subs	r7, r7, r0
 8012704:	4372      	muls	r2, r6
 8012706:	fb08 f707 	mul.w	r7, r8, r7
 801270a:	42ba      	cmp	r2, r7
 801270c:	dc06      	bgt.n	801271c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801270e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8012712:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8012716:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 801271a:	e7ca      	b.n	80126b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 801271c:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8012720:	4429      	add	r1, r5
 8012722:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8012726:	e651      	b.n	80123cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012728:	9805      	ldr	r0, [sp, #20]
 801272a:	ebaa 0000 	sub.w	r0, sl, r0
 801272e:	b280      	uxth	r0, r0
 8012730:	2d06      	cmp	r5, #6
 8012732:	fa0f fe80 	sxth.w	lr, r0
 8012736:	d817      	bhi.n	8012768 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8012738:	9b04      	ldr	r3, [sp, #16]
 801273a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801273e:	1c6b      	adds	r3, r5, #1
 8012740:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8012744:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8012748:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801274c:	9b01      	ldr	r3, [sp, #4]
 801274e:	9801      	ldr	r0, [sp, #4]
 8012750:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012754:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012758:	805a      	strh	r2, [r3, #2]
 801275a:	809e      	strh	r6, [r3, #4]
 801275c:	80d9      	strh	r1, [r3, #6]
 801275e:	9b02      	ldr	r3, [sp, #8]
 8012760:	3b01      	subs	r3, #1
 8012762:	9302      	str	r3, [sp, #8]
 8012764:	3c08      	subs	r4, #8
 8012766:	e747      	b.n	80125f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8012768:	9a02      	ldr	r2, [sp, #8]
 801276a:	45b6      	cmp	lr, r6
 801276c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012770:	db0d      	blt.n	801278e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8012772:	449c      	add	ip, r3
 8012774:	fa1f fc8c 	uxth.w	ip, ip
 8012778:	445a      	add	r2, fp
 801277a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801277e:	448c      	add	ip, r1
 8012780:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8012784:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8012788:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801278c:	e61e      	b.n	80123cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801278e:	445a      	add	r2, fp
 8012790:	4484      	add	ip, r0
 8012792:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8012796:	e78f      	b.n	80126b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012798:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801279c:	fa1f f18e 	uxth.w	r1, lr
 80127a0:	eb01 0806 	add.w	r8, r1, r6
 80127a4:	b293      	uxth	r3, r2
 80127a6:	fa1f f888 	uxth.w	r8, r8
 80127aa:	9306      	str	r3, [sp, #24]
 80127ac:	fa0f f388 	sxth.w	r3, r8
 80127b0:	9307      	str	r3, [sp, #28]
 80127b2:	9f06      	ldr	r7, [sp, #24]
 80127b4:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 80127b8:	443b      	add	r3, r7
 80127ba:	b29b      	uxth	r3, r3
 80127bc:	4596      	cmp	lr, r2
 80127be:	9308      	str	r3, [sp, #32]
 80127c0:	da24      	bge.n	801280c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80127c2:	9905      	ldr	r1, [sp, #20]
 80127c4:	eba3 0308 	sub.w	r3, r3, r8
 80127c8:	ebaa 0401 	sub.w	r4, sl, r1
 80127cc:	b2a4      	uxth	r4, r4
 80127ce:	b29b      	uxth	r3, r3
 80127d0:	b225      	sxth	r5, r4
 80127d2:	b219      	sxth	r1, r3
 80127d4:	eba2 020e 	sub.w	r2, r2, lr
 80127d8:	eba9 0000 	sub.w	r0, r9, r0
 80127dc:	436a      	muls	r2, r5
 80127de:	4348      	muls	r0, r1
 80127e0:	4282      	cmp	r2, r0
 80127e2:	9a02      	ldr	r2, [sp, #8]
 80127e4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80127e8:	445a      	add	r2, fp
 80127ea:	dc06      	bgt.n	80127fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80127ec:	9b07      	ldr	r3, [sp, #28]
 80127ee:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80127f2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80127f6:	44a4      	add	ip, r4
 80127f8:	e75e      	b.n	80126b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80127fa:	9904      	ldr	r1, [sp, #16]
 80127fc:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8012800:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8012804:	4433      	add	r3, r6
 8012806:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801280a:	e5df      	b.n	80123cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801280c:	9f06      	ldr	r7, [sp, #24]
 801280e:	9b04      	ldr	r3, [sp, #16]
 8012810:	1bc9      	subs	r1, r1, r7
 8012812:	fa0f f78a 	sxth.w	r7, sl
 8012816:	b289      	uxth	r1, r1
 8012818:	429f      	cmp	r7, r3
 801281a:	fa0f fe81 	sxth.w	lr, r1
 801281e:	dd23      	ble.n	8012868 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8012820:	9a05      	ldr	r2, [sp, #20]
 8012822:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012826:	9d07      	ldr	r5, [sp, #28]
 8012828:	ebaa 0202 	sub.w	r2, sl, r2
 801282c:	b292      	uxth	r2, r2
 801282e:	eba5 0a03 	sub.w	sl, r5, r3
 8012832:	b214      	sxth	r4, r2
 8012834:	eba9 0000 	sub.w	r0, r9, r0
 8012838:	9b02      	ldr	r3, [sp, #8]
 801283a:	fb0e f000 	mul.w	r0, lr, r0
 801283e:	fb04 fa0a 	mul.w	sl, r4, sl
 8012842:	00db      	lsls	r3, r3, #3
 8012844:	4550      	cmp	r0, sl
 8012846:	445b      	add	r3, fp
 8012848:	db03      	blt.n	8012852 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801284a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801284e:	4494      	add	ip, r2
 8012850:	e732      	b.n	80126b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012852:	9a04      	ldr	r2, [sp, #16]
 8012854:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8012858:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801285c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8012860:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8012864:	4431      	add	r1, r6
 8012866:	e75c      	b.n	8012722 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8012868:	9b08      	ldr	r3, [sp, #32]
 801286a:	eba3 0308 	sub.w	r3, r3, r8
 801286e:	b29b      	uxth	r3, r3
 8012870:	2d06      	cmp	r5, #6
 8012872:	b218      	sxth	r0, r3
 8012874:	d813      	bhi.n	801289e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8012876:	9b07      	ldr	r3, [sp, #28]
 8012878:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801287c:	1c6b      	adds	r3, r5, #1
 801287e:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8012882:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8012886:	9b01      	ldr	r3, [sp, #4]
 8012888:	9901      	ldr	r1, [sp, #4]
 801288a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801288e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8012892:	805a      	strh	r2, [r3, #2]
 8012894:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8012896:	809a      	strh	r2, [r3, #4]
 8012898:	f8a3 e006 	strh.w	lr, [r3, #6]
 801289c:	e75f      	b.n	801275e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801289e:	9c02      	ldr	r4, [sp, #8]
 80128a0:	4570      	cmp	r0, lr
 80128a2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80128a6:	db0d      	blt.n	80128c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80128a8:	4431      	add	r1, r6
 80128aa:	9b06      	ldr	r3, [sp, #24]
 80128ac:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80128b0:	b289      	uxth	r1, r1
 80128b2:	445c      	add	r4, fp
 80128b4:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80128b8:	4419      	add	r1, r3
 80128ba:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 80128be:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80128c2:	e583      	b.n	80123cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80128c4:	445c      	add	r4, fp
 80128c6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 80128ca:	e79b      	b.n	8012804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80128cc:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80128d0:	1e65      	subs	r5, r4, #1
 80128d2:	b2ad      	uxth	r5, r5
 80128d4:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80128d8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80128dc:	42b5      	cmp	r5, r6
 80128de:	d044      	beq.n	801296a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80128e0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80128e4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80128e8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80128ec:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80128f0:	4282      	cmp	r2, r0
 80128f2:	d11f      	bne.n	8012934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80128f4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80128f8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80128fc:	459c      	cmp	ip, r3
 80128fe:	d119      	bne.n	8012934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8012900:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8012904:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8012908:	19d8      	adds	r0, r3, r7
 801290a:	b200      	sxth	r0, r0
 801290c:	4288      	cmp	r0, r1
 801290e:	d109      	bne.n	8012924 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8012910:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8012914:	4413      	add	r3, r2
 8012916:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801291a:	4629      	mov	r1, r5
 801291c:	9801      	ldr	r0, [sp, #4]
 801291e:	f7ff fd2b 	bl	8012378 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012922:	e003      	b.n	801292c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8012924:	4411      	add	r1, r2
 8012926:	b209      	sxth	r1, r1
 8012928:	42b9      	cmp	r1, r7
 801292a:	d0f3      	beq.n	8012914 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 801292c:	3d01      	subs	r5, #1
 801292e:	b2ad      	uxth	r5, r5
 8012930:	3c08      	subs	r4, #8
 8012932:	e7d3      	b.n	80128dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8012934:	42b9      	cmp	r1, r7
 8012936:	d1f9      	bne.n	801292c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8012938:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801293c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8012940:	4299      	cmp	r1, r3
 8012942:	d1f3      	bne.n	801292c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8012944:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8012948:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801294c:	181f      	adds	r7, r3, r0
 801294e:	b23f      	sxth	r7, r7
 8012950:	42ba      	cmp	r2, r7
 8012952:	d105      	bne.n	8012960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8012954:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8012958:	440b      	add	r3, r1
 801295a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801295e:	e7dc      	b.n	801291a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8012960:	440a      	add	r2, r1
 8012962:	b212      	sxth	r2, r2
 8012964:	4290      	cmp	r0, r2
 8012966:	d1e1      	bne.n	801292c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8012968:	e7f6      	b.n	8012958 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801296a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801296e:	2e07      	cmp	r6, #7
 8012970:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8012974:	d812      	bhi.n	801299c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8012976:	1c75      	adds	r5, r6, #1
 8012978:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 801297c:	9d01      	ldr	r5, [sp, #4]
 801297e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8012982:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8012986:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801298a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801298e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8012992:	442c      	add	r4, r5
 8012994:	8061      	strh	r1, [r4, #2]
 8012996:	80a2      	strh	r2, [r4, #4]
 8012998:	80e3      	strh	r3, [r4, #6]
 801299a:	e581      	b.n	80124a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801299c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80129a0:	3e01      	subs	r6, #1
 80129a2:	445c      	add	r4, fp
 80129a4:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80129a8:	f04f 37ff 	mov.w	r7, #4294967295
 80129ac:	2500      	movs	r5, #0
 80129ae:	9305      	str	r3, [sp, #20]
 80129b0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80129b4:	9302      	str	r3, [sp, #8]
 80129b6:	1e72      	subs	r2, r6, #1
 80129b8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80129bc:	9304      	str	r3, [sp, #16]
 80129be:	4691      	mov	r9, r2
 80129c0:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80129c4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80129c8:	bf14      	ite	ne
 80129ca:	9905      	ldrne	r1, [sp, #20]
 80129cc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80129d0:	6818      	ldr	r0, [r3, #0]
 80129d2:	9207      	str	r2, [sp, #28]
 80129d4:	bf18      	it	ne
 80129d6:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80129da:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80129de:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80129e2:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80129e6:	9306      	str	r3, [sp, #24]
 80129e8:	fb18 f801 	smulbb	r8, r8, r1
 80129ec:	6859      	ldr	r1, [r3, #4]
 80129ee:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80129f2:	4671      	mov	r1, lr
 80129f4:	a80c      	add	r0, sp, #48	@ 0x30
 80129f6:	f7ff fb6d 	bl	80120d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80129fa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80129fe:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8012a02:	9b04      	ldr	r3, [sp, #16]
 8012a04:	9a02      	ldr	r2, [sp, #8]
 8012a06:	fb10 f001 	smulbb	r0, r0, r1
 8012a0a:	fb02 8803 	mla	r8, r2, r3, r8
 8012a0e:	eba0 0108 	sub.w	r1, r0, r8
 8012a12:	f04f 0c08 	mov.w	ip, #8
 8012a16:	fb90 f0fc 	sdiv	r0, r0, ip
 8012a1a:	4288      	cmp	r0, r1
 8012a1c:	dc20      	bgt.n	8012a60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8012a1e:	4551      	cmp	r1, sl
 8012a20:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8012a24:	da03      	bge.n	8012a2e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8012a26:	b1d9      	cbz	r1, 8012a60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8012a28:	468a      	mov	sl, r1
 8012a2a:	464f      	mov	r7, r9
 8012a2c:	4635      	mov	r5, r6
 8012a2e:	f109 39ff 	add.w	r9, r9, #4294967295
 8012a32:	f119 0f02 	cmn.w	r9, #2
 8012a36:	d1c5      	bne.n	80129c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8012a38:	4616      	mov	r6, r2
 8012a3a:	3201      	adds	r2, #1
 8012a3c:	f1a4 0408 	sub.w	r4, r4, #8
 8012a40:	d1b6      	bne.n	80129b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8012a42:	9b01      	ldr	r3, [sp, #4]
 8012a44:	b2ac      	uxth	r4, r5
 8012a46:	00ed      	lsls	r5, r5, #3
 8012a48:	1958      	adds	r0, r3, r5
 8012a4a:	1c7b      	adds	r3, r7, #1
 8012a4c:	d10b      	bne.n	8012a66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8012a4e:	4601      	mov	r1, r0
 8012a50:	9803      	ldr	r0, [sp, #12]
 8012a52:	f7ff fb3f 	bl	80120d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012a56:	4621      	mov	r1, r4
 8012a58:	9801      	ldr	r0, [sp, #4]
 8012a5a:	f7ff fc8d 	bl	8012378 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012a5e:	e4b5      	b.n	80123cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012a60:	464f      	mov	r7, r9
 8012a62:	4635      	mov	r5, r6
 8012a64:	e7ed      	b.n	8012a42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8012a66:	9b01      	ldr	r3, [sp, #4]
 8012a68:	00ff      	lsls	r7, r7, #3
 8012a6a:	19d9      	adds	r1, r3, r7
 8012a6c:	f7ff fb32 	bl	80120d4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012a70:	9b03      	ldr	r3, [sp, #12]
 8012a72:	cb03      	ldmia	r3!, {r0, r1}
 8012a74:	445f      	add	r7, fp
 8012a76:	445d      	add	r5, fp
 8012a78:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8012a7c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8012a80:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8012a84:	9b03      	ldr	r3, [sp, #12]
 8012a86:	6869      	ldr	r1, [r5, #4]
 8012a88:	c303      	stmia	r3!, {r0, r1}
 8012a8a:	e7e4      	b.n	8012a56 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08012a8c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8012a8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a90:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8012a94:	b09b      	sub	sp, #108	@ 0x6c
 8012a96:	4604      	mov	r4, r0
 8012a98:	4630      	mov	r0, r6
 8012a9a:	f7fc f852 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012a9e:	4605      	mov	r5, r0
 8012aa0:	b948      	cbnz	r0, 8012ab6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8012aa2:	6823      	ldr	r3, [r4, #0]
 8012aa4:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012aa8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012aaa:	4620      	mov	r0, r4
 8012aac:	4798      	blx	r3
 8012aae:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8012ab2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8012ab6:	4bc6      	ldr	r3, [pc, #792]	@ (8012dd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8012ab8:	681b      	ldr	r3, [r3, #0]
 8012aba:	2b00      	cmp	r3, #0
 8012abc:	d03f      	beq.n	8012b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8012abe:	4dc5      	ldr	r5, [pc, #788]	@ (8012dd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8012ac0:	4628      	mov	r0, r5
 8012ac2:	f7fc f83e 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012ac6:	4606      	mov	r6, r0
 8012ac8:	2800      	cmp	r0, #0
 8012aca:	d138      	bne.n	8012b3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8012acc:	4628      	mov	r0, r5
 8012ace:	f7ff f99f 	bl	8011e10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012ad2:	6823      	ldr	r3, [r4, #0]
 8012ad4:	6829      	ldr	r1, [r5, #0]
 8012ad6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8012ad8:	686a      	ldr	r2, [r5, #4]
 8012ada:	4620      	mov	r0, r4
 8012adc:	4798      	blx	r3
 8012ade:	802e      	strh	r6, [r5, #0]
 8012ae0:	806e      	strh	r6, [r5, #2]
 8012ae2:	80ae      	strh	r6, [r5, #4]
 8012ae4:	80ee      	strh	r6, [r5, #6]
 8012ae6:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8012aea:	4dbb      	ldr	r5, [pc, #748]	@ (8012dd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8012aec:	4640      	mov	r0, r8
 8012aee:	f7ff fbeb 	bl	80122c8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8012af2:	882e      	ldrh	r6, [r5, #0]
 8012af4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8012af8:	4633      	mov	r3, r6
 8012afa:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8012afe:	42bb      	cmp	r3, r7
 8012b00:	d224      	bcs.n	8012b4c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8012b02:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8012b06:	2907      	cmp	r1, #7
 8012b08:	d816      	bhi.n	8012b38 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8012b0a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8012b0e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8012b12:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8012b16:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8012b1a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8012b1e:	1c4a      	adds	r2, r1, #1
 8012b20:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8012b24:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8012b28:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8012b2c:	f8a2 a002 	strh.w	sl, [r2, #2]
 8012b30:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012b34:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012b38:	3301      	adds	r3, #1
 8012b3a:	b29b      	uxth	r3, r3
 8012b3c:	e7df      	b.n	8012afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8012b3e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012b42:	2b00      	cmp	r3, #0
 8012b44:	d1cf      	bne.n	8012ae6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8012b46:	b01b      	add	sp, #108	@ 0x6c
 8012b48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b4c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8012b50:	42b3      	cmp	r3, r6
 8012b52:	d90c      	bls.n	8012b6e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8012b54:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8012b58:	6822      	ldr	r2, [r4, #0]
 8012b5a:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8012b5e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8012b60:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8012b64:	4620      	mov	r0, r4
 8012b66:	3601      	adds	r6, #1
 8012b68:	47b8      	blx	r7
 8012b6a:	b2b6      	uxth	r6, r6
 8012b6c:	e7ee      	b.n	8012b4c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8012b6e:	4a9b      	ldr	r2, [pc, #620]	@ (8012ddc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8012b70:	6813      	ldr	r3, [r2, #0]
 8012b72:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8012b76:	2b01      	cmp	r3, #1
 8012b78:	4691      	mov	r9, r2
 8012b7a:	f040 80e2 	bne.w	8012d42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8012b7e:	8829      	ldrh	r1, [r5, #0]
 8012b80:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8012b84:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8012b88:	33ae      	adds	r3, #174	@ 0xae
 8012b8a:	2600      	movs	r6, #0
 8012b8c:	428f      	cmp	r7, r1
 8012b8e:	f103 0308 	add.w	r3, r3, #8
 8012b92:	dd0a      	ble.n	8012baa <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8012b94:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8012b98:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8012b9c:	4402      	add	r2, r0
 8012b9e:	b212      	sxth	r2, r2
 8012ba0:	4296      	cmp	r6, r2
 8012ba2:	bfb8      	it	lt
 8012ba4:	4616      	movlt	r6, r2
 8012ba6:	3101      	adds	r1, #1
 8012ba8:	e7f0      	b.n	8012b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8012baa:	4b8d      	ldr	r3, [pc, #564]	@ (8012de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8012bac:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8012ddc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8012bb0:	881b      	ldrh	r3, [r3, #0]
 8012bb2:	2b0f      	cmp	r3, #15
 8012bb4:	bf88      	it	hi
 8012bb6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8012bba:	f04f 0300 	mov.w	r3, #0
 8012bbe:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8012bc2:	bf98      	it	ls
 8012bc4:	f04f 0b01 	movls.w	fp, #1
 8012bc8:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8012bcc:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8012bd0:	4b82      	ldr	r3, [pc, #520]	@ (8012ddc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8012bd2:	4438      	add	r0, r7
 8012bd4:	b207      	sxth	r7, r0
 8012bd6:	6818      	ldr	r0, [r3, #0]
 8012bd8:	42b7      	cmp	r7, r6
 8012bda:	6803      	ldr	r3, [r0, #0]
 8012bdc:	f280 8083 	bge.w	8012ce6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8012be0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8012be4:	4798      	blx	r3
 8012be6:	eb07 030b 	add.w	r3, r7, fp
 8012bea:	4298      	cmp	r0, r3
 8012bec:	da07      	bge.n	8012bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8012bee:	42b0      	cmp	r0, r6
 8012bf0:	da05      	bge.n	8012bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8012bf2:	4287      	cmp	r7, r0
 8012bf4:	dd6c      	ble.n	8012cd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8012bf6:	2f00      	cmp	r7, #0
 8012bf8:	dd6a      	ble.n	8012cd0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8012bfa:	4630      	mov	r0, r6
 8012bfc:	e004      	b.n	8012c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8012bfe:	4287      	cmp	r7, r0
 8012c00:	dcfb      	bgt.n	8012bfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8012c02:	42b0      	cmp	r0, r6
 8012c04:	bfa8      	it	ge
 8012c06:	4630      	movge	r0, r6
 8012c08:	4b76      	ldr	r3, [pc, #472]	@ (8012de4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8012c0a:	f8ad 7016 	strh.w	r7, [sp, #22]
 8012c0e:	1bc0      	subs	r0, r0, r7
 8012c10:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012c14:	882f      	ldrh	r7, [r5, #0]
 8012c16:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012c1a:	2200      	movs	r2, #0
 8012c1c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012c20:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012c24:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012c28:	42bb      	cmp	r3, r7
 8012c2a:	d9cd      	bls.n	8012bc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8012c2c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8012c30:	ab07      	add	r3, sp, #28
 8012c32:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012c36:	6851      	ldr	r1, [r2, #4]
 8012c38:	c303      	stmia	r3!, {r0, r1}
 8012c3a:	a905      	add	r1, sp, #20
 8012c3c:	a807      	add	r0, sp, #28
 8012c3e:	f7ff f9b1 	bl	8011fa4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012c42:	2800      	cmp	r0, #0
 8012c44:	d04c      	beq.n	8012ce0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8012c46:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8012c4a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8012c4e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8012c52:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8012c56:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012c5a:	9302      	str	r3, [sp, #8]
 8012c5c:	4686      	mov	lr, r0
 8012c5e:	4290      	cmp	r0, r2
 8012c60:	4450      	add	r0, sl
 8012c62:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8012c66:	bfb8      	it	lt
 8012c68:	4696      	movlt	lr, r2
 8012c6a:	4452      	add	r2, sl
 8012c6c:	4299      	cmp	r1, r3
 8012c6e:	b280      	uxth	r0, r0
 8012c70:	b292      	uxth	r2, r2
 8012c72:	468c      	mov	ip, r1
 8012c74:	fa0f fa82 	sxth.w	sl, r2
 8012c78:	bfb8      	it	lt
 8012c7a:	469c      	movlt	ip, r3
 8012c7c:	b203      	sxth	r3, r0
 8012c7e:	4553      	cmp	r3, sl
 8012c80:	bfb8      	it	lt
 8012c82:	4602      	movlt	r2, r0
 8012c84:	eba2 020e 	sub.w	r2, r2, lr
 8012c88:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012c8c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8012c90:	9b02      	ldr	r3, [sp, #8]
 8012c92:	f8ad e01c 	strh.w	lr, [sp, #28]
 8012c96:	4411      	add	r1, r2
 8012c98:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012c9c:	f8ad c01e 	strh.w	ip, [sp, #30]
 8012ca0:	4413      	add	r3, r2
 8012ca2:	b289      	uxth	r1, r1
 8012ca4:	b29b      	uxth	r3, r3
 8012ca6:	b208      	sxth	r0, r1
 8012ca8:	b21a      	sxth	r2, r3
 8012caa:	4290      	cmp	r0, r2
 8012cac:	bfb8      	it	lt
 8012cae:	460b      	movlt	r3, r1
 8012cb0:	eba3 030c 	sub.w	r3, r3, ip
 8012cb4:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8012cb8:	a807      	add	r0, sp, #28
 8012cba:	f7fb ff42 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012cbe:	b920      	cbnz	r0, 8012cca <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8012cc0:	6823      	ldr	r3, [r4, #0]
 8012cc2:	a907      	add	r1, sp, #28
 8012cc4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012cc6:	4620      	mov	r0, r4
 8012cc8:	4798      	blx	r3
 8012cca:	3701      	adds	r7, #1
 8012ccc:	b2bf      	uxth	r7, r7
 8012cce:	e7a9      	b.n	8012c24 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8012cd0:	f8d9 0000 	ldr.w	r0, [r9]
 8012cd4:	6803      	ldr	r3, [r0, #0]
 8012cd6:	2101      	movs	r1, #1
 8012cd8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8012cdc:	4798      	blx	r3
 8012cde:	e773      	b.n	8012bc8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8012ce0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8012ce4:	e7e8      	b.n	8012cb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8012ce6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8012ce8:	4798      	blx	r3
 8012cea:	4b3f      	ldr	r3, [pc, #252]	@ (8012de8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8012cec:	781b      	ldrb	r3, [r3, #0]
 8012cee:	2b00      	cmp	r3, #0
 8012cf0:	f43f af29 	beq.w	8012b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8012cf4:	2300      	movs	r3, #0
 8012cf6:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8012cfa:	882b      	ldrh	r3, [r5, #0]
 8012cfc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8012d00:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8012d04:	42ab      	cmp	r3, r5
 8012d06:	f4bf af1e 	bcs.w	8012b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8012d0a:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8012d0e:	2907      	cmp	r1, #7
 8012d10:	d814      	bhi.n	8012d3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8012d12:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8012d16:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8012d1a:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8012d1e:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8012d22:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8012d26:	1c4a      	adds	r2, r1, #1
 8012d28:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8012d2c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8012d30:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8012d34:	f8a2 c002 	strh.w	ip, [r2, #2]
 8012d38:	8097      	strh	r7, [r2, #4]
 8012d3a:	80d6      	strh	r6, [r2, #6]
 8012d3c:	3301      	adds	r3, #1
 8012d3e:	b29b      	uxth	r3, r3
 8012d40:	e7e0      	b.n	8012d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8012d42:	2b02      	cmp	r3, #2
 8012d44:	f040 8133 	bne.w	8012fae <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8012d48:	4b28      	ldr	r3, [pc, #160]	@ (8012dec <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8012d4a:	781b      	ldrb	r3, [r3, #0]
 8012d4c:	2b01      	cmp	r3, #1
 8012d4e:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8012d52:	f000 8098 	beq.w	8012e86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8012d56:	882a      	ldrh	r2, [r5, #0]
 8012d58:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8012d5c:	3201      	adds	r2, #1
 8012d5e:	b292      	uxth	r2, r2
 8012d60:	2900      	cmp	r1, #0
 8012d62:	d0c2      	beq.n	8012cea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8012d64:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8012d68:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8012d6c:	441e      	add	r6, r3
 8012d6e:	b236      	sxth	r6, r6
 8012d70:	4694      	mov	ip, r2
 8012d72:	f04f 0900 	mov.w	r9, #0
 8012d76:	fa1f f38c 	uxth.w	r3, ip
 8012d7a:	4299      	cmp	r1, r3
 8012d7c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8012d80:	f240 80bf 	bls.w	8012f02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8012d84:	4427      	add	r7, r4
 8012d86:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8012d8a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8012d8e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8012d92:	4283      	cmp	r3, r0
 8012d94:	f340 80a1 	ble.w	8012eda <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8012d98:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8012d9c:	4406      	add	r6, r0
 8012d9e:	b236      	sxth	r6, r6
 8012da0:	429e      	cmp	r6, r3
 8012da2:	bfa8      	it	ge
 8012da4:	461e      	movge	r6, r3
 8012da6:	46e1      	mov	r9, ip
 8012da8:	f10c 0c01 	add.w	ip, ip, #1
 8012dac:	e7e3      	b.n	8012d76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8012dae:	d10a      	bne.n	8012dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8012db0:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8012db4:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8012db8:	4562      	cmp	r2, ip
 8012dba:	bfb8      	it	lt
 8012dbc:	4662      	movlt	r2, ip
 8012dbe:	4288      	cmp	r0, r1
 8012dc0:	bfb8      	it	lt
 8012dc2:	461f      	movlt	r7, r3
 8012dc4:	e087      	b.n	8012ed6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8012dc6:	428a      	cmp	r2, r1
 8012dc8:	bfb8      	it	lt
 8012dca:	460a      	movlt	r2, r1
 8012dcc:	e083      	b.n	8012ed6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8012dce:	bf00      	nop
 8012dd0:	20002f6c 	.word	0x20002f6c
 8012dd4:	20002f78 	.word	0x20002f78
 8012dd8:	20000020 	.word	0x20000020
 8012ddc:	20002f34 	.word	0x20002f34
 8012de0:	20002f2a 	.word	0x20002f2a
 8012de4:	20002f28 	.word	0x20002f28
 8012de8:	20002f32 	.word	0x20002f32
 8012dec:	20002f2c 	.word	0x20002f2c
 8012df0:	19a1      	adds	r1, r4, r6
 8012df2:	ab07      	add	r3, sp, #28
 8012df4:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8012df8:	6849      	ldr	r1, [r1, #4]
 8012dfa:	c303      	stmia	r3!, {r0, r1}
 8012dfc:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8012e00:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012e04:	2b13      	cmp	r3, #19
 8012e06:	bfd8      	it	le
 8012e08:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8012e0c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012e10:	440b      	add	r3, r1
 8012e12:	1a9b      	subs	r3, r3, r2
 8012e14:	a807      	add	r0, sp, #28
 8012e16:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012e1a:	f7ff f813 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012e1e:	a807      	add	r0, sp, #28
 8012e20:	f7fb fe8f 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012e24:	bb78      	cbnz	r0, 8012e86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8012e26:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8012e2a:	f8d9 0000 	ldr.w	r0, [r9]
 8012e2e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012e32:	f8d0 e000 	ldr.w	lr, [r0]
 8012e36:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8012e3a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012e3e:	f1bc 0f14 	cmp.w	ip, #20
 8012e42:	bfa8      	it	ge
 8012e44:	f04f 0c14 	movge.w	ip, #20
 8012e48:	fa1f fc8c 	uxth.w	ip, ip
 8012e4c:	f8cd c000 	str.w	ip, [sp]
 8012e50:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8012e54:	47d8      	blx	fp
 8012e56:	4683      	mov	fp, r0
 8012e58:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8012e5c:	a807      	add	r0, sp, #28
 8012e5e:	f7fe ffd7 	bl	8011e10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8012e62:	6823      	ldr	r3, [r4, #0]
 8012e64:	4426      	add	r6, r4
 8012e66:	4620      	mov	r0, r4
 8012e68:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012e6a:	a907      	add	r1, sp, #28
 8012e6c:	4798      	blx	r3
 8012e6e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8012e72:	eba0 000b 	sub.w	r0, r0, fp
 8012e76:	b200      	sxth	r0, r0
 8012e78:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8012e7c:	b918      	cbnz	r0, 8012e86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8012e7e:	b2b9      	uxth	r1, r7
 8012e80:	4650      	mov	r0, sl
 8012e82:	f7ff fa79 	bl	8012378 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012e86:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8012e8a:	f1bb 0f00 	cmp.w	fp, #0
 8012e8e:	f43f af2c 	beq.w	8012cea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8012e92:	882b      	ldrh	r3, [r5, #0]
 8012e94:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8012e98:	3301      	adds	r3, #1
 8012e9a:	b29b      	uxth	r3, r3
 8012e9c:	2700      	movs	r7, #0
 8012e9e:	b299      	uxth	r1, r3
 8012ea0:	458b      	cmp	fp, r1
 8012ea2:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8012ea6:	d9a3      	bls.n	8012df0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8012ea8:	4426      	add	r6, r4
 8012eaa:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8012eae:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8012eb2:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8012eb6:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8012eba:	4408      	add	r0, r1
 8012ebc:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8012ec0:	4461      	add	r1, ip
 8012ec2:	b200      	sxth	r0, r0
 8012ec4:	b209      	sxth	r1, r1
 8012ec6:	4288      	cmp	r0, r1
 8012ec8:	f6bf af71 	bge.w	8012dae <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8012ecc:	4584      	cmp	ip, r0
 8012ece:	4662      	mov	r2, ip
 8012ed0:	461f      	mov	r7, r3
 8012ed2:	bfb8      	it	lt
 8012ed4:	4602      	movlt	r2, r0
 8012ed6:	3301      	adds	r3, #1
 8012ed8:	e7e1      	b.n	8012e9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8012eda:	d10e      	bne.n	8012efa <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8012edc:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8012ee0:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8012ee4:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8012ee8:	4473      	add	r3, lr
 8012eea:	b21b      	sxth	r3, r3
 8012eec:	429e      	cmp	r6, r3
 8012eee:	bfa8      	it	ge
 8012ef0:	461e      	movge	r6, r3
 8012ef2:	4287      	cmp	r7, r0
 8012ef4:	bfb8      	it	lt
 8012ef6:	46e1      	movlt	r9, ip
 8012ef8:	e756      	b.n	8012da8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012efa:	4286      	cmp	r6, r0
 8012efc:	bfa8      	it	ge
 8012efe:	4606      	movge	r6, r0
 8012f00:	e752      	b.n	8012da8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8012f02:	eb0a 0007 	add.w	r0, sl, r7
 8012f06:	4427      	add	r7, r4
 8012f08:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8012f0c:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8012f10:	f1bb 0f13 	cmp.w	fp, #19
 8012f14:	bfde      	ittt	le
 8012f16:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8012f1a:	445e      	addle	r6, fp
 8012f1c:	b236      	sxthle	r6, r6
 8012f1e:	f7fb fe10 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012f22:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8012f26:	2800      	cmp	r0, #0
 8012f28:	f47f af1a 	bne.w	8012d60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8012f2c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8012f30:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8012f34:	482a      	ldr	r0, [pc, #168]	@ (8012fe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8012f36:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8012f3a:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8012f3e:	6800      	ldr	r0, [r0, #0]
 8012f40:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012f44:	1ab6      	subs	r6, r6, r2
 8012f46:	2e14      	cmp	r6, #20
 8012f48:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012f4c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012f50:	bfa8      	it	ge
 8012f52:	2614      	movge	r6, #20
 8012f54:	f8d0 c000 	ldr.w	ip, [r0]
 8012f58:	b2b6      	uxth	r6, r6
 8012f5a:	fa1f fb8b 	uxth.w	fp, fp
 8012f5e:	455e      	cmp	r6, fp
 8012f60:	bf94      	ite	ls
 8012f62:	9600      	strls	r6, [sp, #0]
 8012f64:	f8cd b000 	strhi.w	fp, [sp]
 8012f68:	b292      	uxth	r2, r2
 8012f6a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8012f6e:	b29b      	uxth	r3, r3
 8012f70:	b289      	uxth	r1, r1
 8012f72:	47b0      	blx	r6
 8012f74:	6823      	ldr	r3, [r4, #0]
 8012f76:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8012f7a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012f7c:	a907      	add	r1, sp, #28
 8012f7e:	4620      	mov	r0, r4
 8012f80:	4798      	blx	r3
 8012f82:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8012f86:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8012f8a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8012f8e:	1a5b      	subs	r3, r3, r1
 8012f90:	440a      	add	r2, r1
 8012f92:	b21b      	sxth	r3, r3
 8012f94:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8012f98:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8012f9c:	2b00      	cmp	r3, #0
 8012f9e:	f47f aeda 	bne.w	8012d56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8012fa2:	fa1f f189 	uxth.w	r1, r9
 8012fa6:	4650      	mov	r0, sl
 8012fa8:	f7ff f9e6 	bl	8012378 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012fac:	e6d3      	b.n	8012d56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8012fae:	882e      	ldrh	r6, [r5, #0]
 8012fb0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8012fb4:	42b3      	cmp	r3, r6
 8012fb6:	f67f ae98 	bls.w	8012cea <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8012fba:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8012fbe:	ab07      	add	r3, sp, #28
 8012fc0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012fc4:	6851      	ldr	r1, [r2, #4]
 8012fc6:	c303      	stmia	r3!, {r0, r1}
 8012fc8:	a807      	add	r0, sp, #28
 8012fca:	f7fb fdba 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012fce:	b920      	cbnz	r0, 8012fda <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8012fd0:	6823      	ldr	r3, [r4, #0]
 8012fd2:	a907      	add	r1, sp, #28
 8012fd4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8012fd6:	4620      	mov	r0, r4
 8012fd8:	4798      	blx	r3
 8012fda:	3601      	adds	r6, #1
 8012fdc:	b2b6      	uxth	r6, r6
 8012fde:	e7e7      	b.n	8012fb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8012fe0:	20002f34 	.word	0x20002f34

08012fe4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8012fe4:	4b03      	ldr	r3, [pc, #12]	@ (8012ff4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8012fe6:	2200      	movs	r2, #0
 8012fe8:	801a      	strh	r2, [r3, #0]
 8012fea:	805a      	strh	r2, [r3, #2]
 8012fec:	809a      	strh	r2, [r3, #4]
 8012fee:	80da      	strh	r2, [r3, #6]
 8012ff0:	4770      	bx	lr
 8012ff2:	bf00      	nop
 8012ff4:	20002f78 	.word	0x20002f78

08012ff8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8012ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ffc:	4606      	mov	r6, r0
 8012ffe:	b09d      	sub	sp, #116	@ 0x74
 8013000:	a803      	add	r0, sp, #12
 8013002:	4614      	mov	r4, r2
 8013004:	468a      	mov	sl, r1
 8013006:	461d      	mov	r5, r3
 8013008:	f000 fd72 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 801300c:	6833      	ldr	r3, [r6, #0]
 801300e:	4630      	mov	r0, r6
 8013010:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013012:	4798      	blx	r3
 8013014:	6833      	ldr	r3, [r6, #0]
 8013016:	4607      	mov	r7, r0
 8013018:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801301a:	4630      	mov	r0, r6
 801301c:	4798      	blx	r3
 801301e:	462a      	mov	r2, r5
 8013020:	9000      	str	r0, [sp, #0]
 8013022:	4621      	mov	r1, r4
 8013024:	463b      	mov	r3, r7
 8013026:	a803      	add	r0, sp, #12
 8013028:	f000 fdbd 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801302c:	2500      	movs	r5, #0
 801302e:	462c      	mov	r4, r5
 8013030:	46a9      	mov	r9, r5
 8013032:	46a8      	mov	r8, r5
 8013034:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8013038:	2300      	movs	r3, #0
 801303a:	9302      	str	r3, [sp, #8]
 801303c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013040:	429c      	cmp	r4, r3
 8013042:	d002      	beq.n	801304a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8013044:	455c      	cmp	r4, fp
 8013046:	bf18      	it	ne
 8013048:	4625      	movne	r5, r4
 801304a:	ab02      	add	r3, sp, #8
 801304c:	4632      	mov	r2, r6
 801304e:	4651      	mov	r1, sl
 8013050:	a803      	add	r0, sp, #12
 8013052:	f001 f8d5 	bl	8014200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013056:	4604      	mov	r4, r0
 8013058:	b108      	cbz	r0, 801305e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801305a:	280a      	cmp	r0, #10
 801305c:	d10a      	bne.n	8013074 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801305e:	45c1      	cmp	r9, r8
 8013060:	bf38      	it	cc
 8013062:	46c1      	movcc	r9, r8
 8013064:	f04f 0800 	mov.w	r8, #0
 8013068:	2c00      	cmp	r4, #0
 801306a:	d1e5      	bne.n	8013038 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801306c:	4648      	mov	r0, r9
 801306e:	b01d      	add	sp, #116	@ 0x74
 8013070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013074:	9a02      	ldr	r2, [sp, #8]
 8013076:	2a00      	cmp	r2, #0
 8013078:	d0de      	beq.n	8013038 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801307a:	7b57      	ldrb	r7, [r2, #13]
 801307c:	6833      	ldr	r3, [r6, #0]
 801307e:	8894      	ldrh	r4, [r2, #4]
 8013080:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013082:	007f      	lsls	r7, r7, #1
 8013084:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8013088:	7a97      	ldrb	r7, [r2, #10]
 801308a:	4629      	mov	r1, r5
 801308c:	4307      	orrs	r7, r0
 801308e:	4630      	mov	r0, r6
 8013090:	4798      	blx	r3
 8013092:	4438      	add	r0, r7
 8013094:	4480      	add	r8, r0
 8013096:	fa1f f888 	uxth.w	r8, r8
 801309a:	e7e5      	b.n	8013068 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801309c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801309c:	b508      	push	{r3, lr}
 801309e:	6803      	ldr	r3, [r0, #0]
 80130a0:	68db      	ldr	r3, [r3, #12]
 80130a2:	4798      	blx	r3
 80130a4:	b128      	cbz	r0, 80130b2 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80130a6:	7b43      	ldrb	r3, [r0, #13]
 80130a8:	7a80      	ldrb	r0, [r0, #10]
 80130aa:	005b      	lsls	r3, r3, #1
 80130ac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80130b0:	4318      	orrs	r0, r3
 80130b2:	bd08      	pop	{r3, pc}

080130b4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80130b4:	b40e      	push	{r1, r2, r3}
 80130b6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80130b8:	b09e      	sub	sp, #120	@ 0x78
 80130ba:	ab23      	add	r3, sp, #140	@ 0x8c
 80130bc:	4605      	mov	r5, r0
 80130be:	f853 4b04 	ldr.w	r4, [r3], #4
 80130c2:	9303      	str	r3, [sp, #12]
 80130c4:	a805      	add	r0, sp, #20
 80130c6:	f000 fd13 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 80130ca:	682b      	ldr	r3, [r5, #0]
 80130cc:	4628      	mov	r0, r5
 80130ce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80130d0:	4798      	blx	r3
 80130d2:	682b      	ldr	r3, [r5, #0]
 80130d4:	4606      	mov	r6, r0
 80130d6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80130d8:	4628      	mov	r0, r5
 80130da:	4798      	blx	r3
 80130dc:	4633      	mov	r3, r6
 80130de:	ae1e      	add	r6, sp, #120	@ 0x78
 80130e0:	4621      	mov	r1, r4
 80130e2:	9000      	str	r0, [sp, #0]
 80130e4:	9a03      	ldr	r2, [sp, #12]
 80130e6:	2400      	movs	r4, #0
 80130e8:	a805      	add	r0, sp, #20
 80130ea:	f000 fd5c 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80130ee:	f846 4d68 	str.w	r4, [r6, #-104]!
 80130f2:	462a      	mov	r2, r5
 80130f4:	4633      	mov	r3, r6
 80130f6:	4621      	mov	r1, r4
 80130f8:	a805      	add	r0, sp, #20
 80130fa:	f001 f881 	bl	8014200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80130fe:	b1f0      	cbz	r0, 801313e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8013100:	280a      	cmp	r0, #10
 8013102:	d018      	beq.n	8013136 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8013104:	9f04      	ldr	r7, [sp, #16]
 8013106:	b1b7      	cbz	r7, 8013136 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8013108:	7b78      	ldrb	r0, [r7, #13]
 801310a:	7a3b      	ldrb	r3, [r7, #8]
 801310c:	88ea      	ldrh	r2, [r5, #6]
 801310e:	00c1      	lsls	r1, r0, #3
 8013110:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8013114:	4319      	orrs	r1, r3
 8013116:	0643      	lsls	r3, r0, #25
 8013118:	bf44      	itt	mi
 801311a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 801311e:	b219      	sxthmi	r1, r3
 8013120:	0100      	lsls	r0, r0, #4
 8013122:	79fb      	ldrb	r3, [r7, #7]
 8013124:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8013128:	4303      	orrs	r3, r0
 801312a:	4413      	add	r3, r2
 801312c:	1a5b      	subs	r3, r3, r1
 801312e:	b21b      	sxth	r3, r3
 8013130:	429c      	cmp	r4, r3
 8013132:	bfb8      	it	lt
 8013134:	461c      	movlt	r4, r3
 8013136:	4633      	mov	r3, r6
 8013138:	462a      	mov	r2, r5
 801313a:	2100      	movs	r1, #0
 801313c:	e7dc      	b.n	80130f8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801313e:	b2a0      	uxth	r0, r4
 8013140:	b01e      	add	sp, #120	@ 0x78
 8013142:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013146:	b003      	add	sp, #12
 8013148:	4770      	bx	lr

0801314a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801314a:	7a43      	ldrb	r3, [r0, #9]
 801314c:	8880      	ldrh	r0, [r0, #4]
 801314e:	4418      	add	r0, r3
 8013150:	b280      	uxth	r0, r0
 8013152:	4770      	bx	lr

08013154 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8013154:	6803      	ldr	r3, [r0, #0]
 8013156:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013158:	4718      	bx	r3

0801315a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801315a:	b40e      	push	{r1, r2, r3}
 801315c:	b570      	push	{r4, r5, r6, lr}
 801315e:	b09d      	sub	sp, #116	@ 0x74
 8013160:	ab21      	add	r3, sp, #132	@ 0x84
 8013162:	4604      	mov	r4, r0
 8013164:	f853 5b04 	ldr.w	r5, [r3], #4
 8013168:	9302      	str	r3, [sp, #8]
 801316a:	a803      	add	r0, sp, #12
 801316c:	f000 fcc0 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 8013170:	6823      	ldr	r3, [r4, #0]
 8013172:	4620      	mov	r0, r4
 8013174:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013176:	4798      	blx	r3
 8013178:	6823      	ldr	r3, [r4, #0]
 801317a:	4606      	mov	r6, r0
 801317c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801317e:	4620      	mov	r0, r4
 8013180:	4798      	blx	r3
 8013182:	4633      	mov	r3, r6
 8013184:	9000      	str	r0, [sp, #0]
 8013186:	9a02      	ldr	r2, [sp, #8]
 8013188:	4629      	mov	r1, r5
 801318a:	a803      	add	r0, sp, #12
 801318c:	f000 fd0b 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013190:	a803      	add	r0, sp, #12
 8013192:	f001 f903 	bl	801439c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013196:	2401      	movs	r4, #1
 8013198:	b2a3      	uxth	r3, r4
 801319a:	b140      	cbz	r0, 80131ae <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801319c:	280a      	cmp	r0, #10
 801319e:	bf08      	it	eq
 80131a0:	3301      	addeq	r3, #1
 80131a2:	a803      	add	r0, sp, #12
 80131a4:	bf08      	it	eq
 80131a6:	b21c      	sxtheq	r4, r3
 80131a8:	f001 f8f8 	bl	801439c <_ZN8touchgfx12TextProvider11getNextCharEv>
 80131ac:	e7f4      	b.n	8013198 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80131ae:	4618      	mov	r0, r3
 80131b0:	b01d      	add	sp, #116	@ 0x74
 80131b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80131b6:	b003      	add	sp, #12
 80131b8:	4770      	bx	lr

080131ba <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80131ba:	b40e      	push	{r1, r2, r3}
 80131bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80131be:	b09e      	sub	sp, #120	@ 0x78
 80131c0:	ab23      	add	r3, sp, #140	@ 0x8c
 80131c2:	4604      	mov	r4, r0
 80131c4:	f853 5b04 	ldr.w	r5, [r3], #4
 80131c8:	9303      	str	r3, [sp, #12]
 80131ca:	a805      	add	r0, sp, #20
 80131cc:	f000 fc90 	bl	8013af0 <_ZN8touchgfx12TextProviderC1Ev>
 80131d0:	6823      	ldr	r3, [r4, #0]
 80131d2:	4620      	mov	r0, r4
 80131d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80131d6:	4798      	blx	r3
 80131d8:	6823      	ldr	r3, [r4, #0]
 80131da:	4606      	mov	r6, r0
 80131dc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80131de:	4620      	mov	r0, r4
 80131e0:	4798      	blx	r3
 80131e2:	4633      	mov	r3, r6
 80131e4:	4629      	mov	r1, r5
 80131e6:	9000      	str	r0, [sp, #0]
 80131e8:	9a03      	ldr	r2, [sp, #12]
 80131ea:	a805      	add	r0, sp, #20
 80131ec:	ad1e      	add	r5, sp, #120	@ 0x78
 80131ee:	f000 fcda 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80131f2:	2100      	movs	r1, #0
 80131f4:	f845 1d68 	str.w	r1, [r5, #-104]!
 80131f8:	4622      	mov	r2, r4
 80131fa:	462b      	mov	r3, r5
 80131fc:	a805      	add	r0, sp, #20
 80131fe:	f000 ffff 	bl	8014200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013202:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8013206:	b1d8      	cbz	r0, 8013240 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8013208:	280a      	cmp	r0, #10
 801320a:	d012      	beq.n	8013232 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801320c:	9804      	ldr	r0, [sp, #16]
 801320e:	b180      	cbz	r0, 8013232 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8013210:	7b47      	ldrb	r7, [r0, #13]
 8013212:	88e2      	ldrh	r2, [r4, #6]
 8013214:	00fb      	lsls	r3, r7, #3
 8013216:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801321a:	7a03      	ldrb	r3, [r0, #8]
 801321c:	430b      	orrs	r3, r1
 801321e:	0679      	lsls	r1, r7, #25
 8013220:	bf44      	itt	mi
 8013222:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013226:	b21b      	sxthmi	r3, r3
 8013228:	1ad3      	subs	r3, r2, r3
 801322a:	b21b      	sxth	r3, r3
 801322c:	429e      	cmp	r6, r3
 801322e:	bfa8      	it	ge
 8013230:	461e      	movge	r6, r3
 8013232:	462b      	mov	r3, r5
 8013234:	4622      	mov	r2, r4
 8013236:	2100      	movs	r1, #0
 8013238:	a805      	add	r0, sp, #20
 801323a:	f000 ffe1 	bl	8014200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801323e:	e7e2      	b.n	8013206 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8013240:	4630      	mov	r0, r6
 8013242:	b01e      	add	sp, #120	@ 0x78
 8013244:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8013248:	b003      	add	sp, #12
 801324a:	4770      	bx	lr

0801324c <_ZNK8touchgfx8Drawable10invalidateEv>:
 801324c:	b513      	push	{r0, r1, r4, lr}
 801324e:	6803      	ldr	r3, [r0, #0]
 8013250:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8013254:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013258:	f8ad 1004 	strh.w	r1, [sp, #4]
 801325c:	2400      	movs	r4, #0
 801325e:	9400      	str	r4, [sp, #0]
 8013260:	f8ad 2006 	strh.w	r2, [sp, #6]
 8013264:	691b      	ldr	r3, [r3, #16]
 8013266:	4669      	mov	r1, sp
 8013268:	4798      	blx	r3
 801326a:	b002      	add	sp, #8
 801326c:	bd10      	pop	{r4, pc}

0801326e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801326e:	b538      	push	{r3, r4, r5, lr}
 8013270:	680b      	ldr	r3, [r1, #0]
 8013272:	460c      	mov	r4, r1
 8013274:	68db      	ldr	r3, [r3, #12]
 8013276:	4605      	mov	r5, r0
 8013278:	4798      	blx	r3
 801327a:	6823      	ldr	r3, [r4, #0]
 801327c:	4620      	mov	r0, r4
 801327e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013280:	4629      	mov	r1, r5
 8013282:	4798      	blx	r3
 8013284:	4628      	mov	r0, r5
 8013286:	bd38      	pop	{r3, r4, r5, pc}

08013288 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8013288:	b410      	push	{r4}
 801328a:	880a      	ldrh	r2, [r1, #0]
 801328c:	8884      	ldrh	r4, [r0, #4]
 801328e:	4422      	add	r2, r4
 8013290:	800a      	strh	r2, [r1, #0]
 8013292:	88c4      	ldrh	r4, [r0, #6]
 8013294:	884a      	ldrh	r2, [r1, #2]
 8013296:	4422      	add	r2, r4
 8013298:	804a      	strh	r2, [r1, #2]
 801329a:	6940      	ldr	r0, [r0, #20]
 801329c:	b120      	cbz	r0, 80132a8 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801329e:	6803      	ldr	r3, [r0, #0]
 80132a0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80132a4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80132a6:	4718      	bx	r3
 80132a8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80132ac:	4770      	bx	lr

080132ae <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80132ae:	b570      	push	{r4, r5, r6, lr}
 80132b0:	8882      	ldrh	r2, [r0, #4]
 80132b2:	880b      	ldrh	r3, [r1, #0]
 80132b4:	4413      	add	r3, r2
 80132b6:	800b      	strh	r3, [r1, #0]
 80132b8:	88c2      	ldrh	r2, [r0, #6]
 80132ba:	884b      	ldrh	r3, [r1, #2]
 80132bc:	460c      	mov	r4, r1
 80132be:	4413      	add	r3, r2
 80132c0:	804b      	strh	r3, [r1, #2]
 80132c2:	4605      	mov	r5, r0
 80132c4:	1d01      	adds	r1, r0, #4
 80132c6:	4620      	mov	r0, r4
 80132c8:	f7fb fbf8 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 80132cc:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80132d0:	2b00      	cmp	r3, #0
 80132d2:	dd0b      	ble.n	80132ec <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80132d4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80132d8:	2b00      	cmp	r3, #0
 80132da:	dd07      	ble.n	80132ec <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80132dc:	6968      	ldr	r0, [r5, #20]
 80132de:	b128      	cbz	r0, 80132ec <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80132e0:	6803      	ldr	r3, [r0, #0]
 80132e2:	4621      	mov	r1, r4
 80132e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80132e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132ea:	4718      	bx	r3
 80132ec:	bd70      	pop	{r4, r5, r6, pc}
	...

080132f0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80132f0:	b570      	push	{r4, r5, r6, lr}
 80132f2:	8882      	ldrh	r2, [r0, #4]
 80132f4:	880b      	ldrh	r3, [r1, #0]
 80132f6:	4413      	add	r3, r2
 80132f8:	800b      	strh	r3, [r1, #0]
 80132fa:	88c2      	ldrh	r2, [r0, #6]
 80132fc:	884b      	ldrh	r3, [r1, #2]
 80132fe:	460c      	mov	r4, r1
 8013300:	4413      	add	r3, r2
 8013302:	804b      	strh	r3, [r1, #2]
 8013304:	4605      	mov	r5, r0
 8013306:	1d01      	adds	r1, r0, #4
 8013308:	4620      	mov	r0, r4
 801330a:	f7fb fbd7 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 801330e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8013312:	2b00      	cmp	r3, #0
 8013314:	dd19      	ble.n	801334a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8013316:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801331a:	2b00      	cmp	r3, #0
 801331c:	dd15      	ble.n	801334a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801331e:	6968      	ldr	r0, [r5, #20]
 8013320:	b128      	cbz	r0, 801332e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8013322:	6803      	ldr	r3, [r0, #0]
 8013324:	4621      	mov	r1, r4
 8013326:	691b      	ldr	r3, [r3, #16]
 8013328:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801332c:	4718      	bx	r3
 801332e:	4b07      	ldr	r3, [pc, #28]	@ (801334c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8013330:	681b      	ldr	r3, [r3, #0]
 8013332:	3304      	adds	r3, #4
 8013334:	429d      	cmp	r5, r3
 8013336:	d108      	bne.n	801334a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8013338:	f7fe ff12 	bl	8012160 <_ZN8touchgfx11Application11getInstanceEv>
 801333c:	6803      	ldr	r3, [r0, #0]
 801333e:	6821      	ldr	r1, [r4, #0]
 8013340:	6862      	ldr	r2, [r4, #4]
 8013342:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8013344:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013348:	4718      	bx	r3
 801334a:	bd70      	pop	{r4, r5, r6, pc}
 801334c:	20002f70 	.word	0x20002f70

08013350 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8013350:	b570      	push	{r4, r5, r6, lr}
 8013352:	4604      	mov	r4, r0
 8013354:	4616      	mov	r6, r2
 8013356:	460d      	mov	r5, r1
 8013358:	b901      	cbnz	r1, 801335c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801335a:	b192      	cbz	r2, 8013382 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801335c:	6823      	ldr	r3, [r4, #0]
 801335e:	4620      	mov	r0, r4
 8013360:	699b      	ldr	r3, [r3, #24]
 8013362:	4798      	blx	r3
 8013364:	88e2      	ldrh	r2, [r4, #6]
 8013366:	88a1      	ldrh	r1, [r4, #4]
 8013368:	4432      	add	r2, r6
 801336a:	4429      	add	r1, r5
 801336c:	4620      	mov	r0, r4
 801336e:	b212      	sxth	r2, r2
 8013370:	b209      	sxth	r1, r1
 8013372:	f7f6 f946 	bl	8009602 <_ZN8touchgfx8Drawable5setXYEss>
 8013376:	6823      	ldr	r3, [r4, #0]
 8013378:	4620      	mov	r0, r4
 801337a:	699b      	ldr	r3, [r3, #24]
 801337c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013380:	4718      	bx	r3
 8013382:	bd70      	pop	{r4, r5, r6, pc}

08013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8013384:	b510      	push	{r4, lr}
 8013386:	4604      	mov	r4, r0
 8013388:	4608      	mov	r0, r1
 801338a:	2300      	movs	r3, #0
 801338c:	8023      	strh	r3, [r4, #0]
 801338e:	8063      	strh	r3, [r4, #2]
 8013390:	6803      	ldr	r3, [r0, #0]
 8013392:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8013396:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801339a:	80a1      	strh	r1, [r4, #4]
 801339c:	80e2      	strh	r2, [r4, #6]
 801339e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80133a0:	4621      	mov	r1, r4
 80133a2:	4798      	blx	r3
 80133a4:	4620      	mov	r0, r4
 80133a6:	bd10      	pop	{r4, pc}

080133a8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80133a8:	b530      	push	{r4, r5, lr}
 80133aa:	8083      	strh	r3, [r0, #4]
 80133ac:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80133b0:	80c3      	strh	r3, [r0, #6]
 80133b2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80133b6:	7203      	strb	r3, [r0, #8]
 80133b8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80133bc:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80133c0:	7243      	strb	r3, [r0, #9]
 80133c2:	7a83      	ldrb	r3, [r0, #10]
 80133c4:	6141      	str	r1, [r0, #20]
 80133c6:	f365 0306 	bfi	r3, r5, #0, #7
 80133ca:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80133ce:	8302      	strh	r2, [r0, #24]
 80133d0:	f365 13c7 	bfi	r3, r5, #7, #1
 80133d4:	7283      	strb	r3, [r0, #10]
 80133d6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80133da:	72c3      	strb	r3, [r0, #11]
 80133dc:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 80133e0:	7303      	strb	r3, [r0, #12]
 80133e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80133e6:	81c3      	strh	r3, [r0, #14]
 80133e8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80133ec:	8203      	strh	r3, [r0, #16]
 80133ee:	4b01      	ldr	r3, [pc, #4]	@ (80133f4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80133f0:	6003      	str	r3, [r0, #0]
 80133f2:	bd30      	pop	{r4, r5, pc}
 80133f4:	08027208 	.word	0x08027208

080133f8 <_ZNK8touchgfx9ConstFont4findEt>:
 80133f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80133fa:	6944      	ldr	r4, [r0, #20]
 80133fc:	b3bc      	cbz	r4, 801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80133fe:	88a3      	ldrh	r3, [r4, #4]
 8013400:	8b02      	ldrh	r2, [r0, #24]
 8013402:	1acb      	subs	r3, r1, r3
 8013404:	f102 32ff 	add.w	r2, r2, #4294967295
 8013408:	d431      	bmi.n	801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801340a:	4293      	cmp	r3, r2
 801340c:	dd0c      	ble.n	8013428 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801340e:	230e      	movs	r3, #14
 8013410:	fb03 4302 	mla	r3, r3, r2, r4
 8013414:	889b      	ldrh	r3, [r3, #4]
 8013416:	1a5b      	subs	r3, r3, r1
 8013418:	1ad3      	subs	r3, r2, r3
 801341a:	429a      	cmp	r2, r3
 801341c:	db27      	blt.n	801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801341e:	2b00      	cmp	r3, #0
 8013420:	bfbc      	itt	lt
 8013422:	2302      	movlt	r3, #2
 8013424:	fb92 f3f3 	sdivlt	r3, r2, r3
 8013428:	2500      	movs	r5, #0
 801342a:	260e      	movs	r6, #14
 801342c:	4295      	cmp	r5, r2
 801342e:	dc1e      	bgt.n	801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013430:	fb06 4003 	mla	r0, r6, r3, r4
 8013434:	8887      	ldrh	r7, [r0, #4]
 8013436:	42b9      	cmp	r1, r7
 8013438:	d01a      	beq.n	8013470 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801343a:	d20d      	bcs.n	8013458 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801343c:	1e5a      	subs	r2, r3, #1
 801343e:	4295      	cmp	r5, r2
 8013440:	dc15      	bgt.n	801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013442:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8013446:	1a5b      	subs	r3, r3, r1
 8013448:	1ad3      	subs	r3, r2, r3
 801344a:	429a      	cmp	r2, r3
 801344c:	db0f      	blt.n	801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801344e:	429d      	cmp	r5, r3
 8013450:	ddec      	ble.n	801342c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013452:	1953      	adds	r3, r2, r5
 8013454:	105b      	asrs	r3, r3, #1
 8013456:	e7e9      	b.n	801342c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8013458:	1c5d      	adds	r5, r3, #1
 801345a:	42aa      	cmp	r2, r5
 801345c:	db07      	blt.n	801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801345e:	8a43      	ldrh	r3, [r0, #18]
 8013460:	1acb      	subs	r3, r1, r3
 8013462:	442b      	add	r3, r5
 8013464:	429d      	cmp	r5, r3
 8013466:	dc02      	bgt.n	801346e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8013468:	429a      	cmp	r2, r3
 801346a:	dadf      	bge.n	801342c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801346c:	e7f1      	b.n	8013452 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801346e:	2000      	movs	r0, #0
 8013470:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013472 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8013472:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013474:	4604      	mov	r4, r0
 8013476:	4617      	mov	r7, r2
 8013478:	461e      	mov	r6, r3
 801347a:	b911      	cbnz	r1, 8013482 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801347c:	2500      	movs	r5, #0
 801347e:	4628      	mov	r0, r5
 8013480:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013482:	290a      	cmp	r1, #10
 8013484:	d0fa      	beq.n	801347c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013486:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801348a:	4291      	cmp	r1, r2
 801348c:	d0f6      	beq.n	801347c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801348e:	f242 020b 	movw	r2, #8203	@ 0x200b
 8013492:	4291      	cmp	r1, r2
 8013494:	d0f2      	beq.n	801347c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8013496:	f7ff ffaf 	bl	80133f8 <_ZNK8touchgfx9ConstFont4findEt>
 801349a:	4605      	mov	r5, r0
 801349c:	b950      	cbnz	r0, 80134b4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801349e:	6823      	ldr	r3, [r4, #0]
 80134a0:	4620      	mov	r0, r4
 80134a2:	691b      	ldr	r3, [r3, #16]
 80134a4:	4798      	blx	r3
 80134a6:	4601      	mov	r1, r0
 80134a8:	4620      	mov	r0, r4
 80134aa:	f7ff ffa5 	bl	80133f8 <_ZNK8touchgfx9ConstFont4findEt>
 80134ae:	4605      	mov	r5, r0
 80134b0:	2800      	cmp	r0, #0
 80134b2:	d0e3      	beq.n	801347c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80134b4:	6823      	ldr	r3, [r4, #0]
 80134b6:	4629      	mov	r1, r5
 80134b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80134ba:	4620      	mov	r0, r4
 80134bc:	4798      	blx	r3
 80134be:	6038      	str	r0, [r7, #0]
 80134c0:	6823      	ldr	r3, [r4, #0]
 80134c2:	4620      	mov	r0, r4
 80134c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80134c6:	4798      	blx	r3
 80134c8:	7030      	strb	r0, [r6, #0]
 80134ca:	e7d8      	b.n	801347e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080134cc <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80134cc:	2000      	movs	r0, #0
 80134ce:	4770      	bx	lr

080134d0 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80134d0:	2001      	movs	r0, #1
 80134d2:	4770      	bx	lr

080134d4 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80134d4:	2002      	movs	r0, #2
 80134d6:	4770      	bx	lr

080134d8 <_ZN8touchgfx12GestureEventD1Ev>:
 80134d8:	4770      	bx	lr

080134da <_ZN8touchgfx9DragEventD1Ev>:
 80134da:	4770      	bx	lr

080134dc <_ZN8touchgfx10ClickEventD1Ev>:
 80134dc:	4770      	bx	lr

080134de <_ZN8touchgfx10ClickEventD0Ev>:
 80134de:	b510      	push	{r4, lr}
 80134e0:	210c      	movs	r1, #12
 80134e2:	4604      	mov	r4, r0
 80134e4:	f010 fb95 	bl	8023c12 <_ZdlPvj>
 80134e8:	4620      	mov	r0, r4
 80134ea:	bd10      	pop	{r4, pc}

080134ec <_ZN8touchgfx9DragEventD0Ev>:
 80134ec:	b510      	push	{r4, lr}
 80134ee:	2110      	movs	r1, #16
 80134f0:	4604      	mov	r4, r0
 80134f2:	f010 fb8e 	bl	8023c12 <_ZdlPvj>
 80134f6:	4620      	mov	r0, r4
 80134f8:	bd10      	pop	{r4, pc}

080134fa <_ZN8touchgfx12GestureEventD0Ev>:
 80134fa:	b510      	push	{r4, lr}
 80134fc:	210c      	movs	r1, #12
 80134fe:	4604      	mov	r4, r0
 8013500:	f010 fb87 	bl	8023c12 <_ZdlPvj>
 8013504:	4620      	mov	r0, r4
 8013506:	bd10      	pop	{r4, pc}

08013508 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8013508:	b530      	push	{r4, r5, lr}
 801350a:	460d      	mov	r5, r1
 801350c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 801350e:	b087      	sub	sp, #28
 8013510:	4604      	mov	r4, r0
 8013512:	b301      	cbz	r1, 8013556 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8013514:	a801      	add	r0, sp, #4
 8013516:	f7ff ff35 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801351a:	892a      	ldrh	r2, [r5, #8]
 801351c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8013520:	7928      	ldrb	r0, [r5, #4]
 8013522:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8013526:	f88d 0010 	strb.w	r0, [sp, #16]
 801352a:	1ad2      	subs	r2, r2, r3
 801352c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801352e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8013530:	f8ad 1012 	strh.w	r1, [sp, #18]
 8013534:	441a      	add	r2, r3
 8013536:	896b      	ldrh	r3, [r5, #10]
 8013538:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801353c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013540:	1b5b      	subs	r3, r3, r5
 8013542:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8013544:	442b      	add	r3, r5
 8013546:	4d05      	ldr	r5, [pc, #20]	@ (801355c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8013548:	9503      	str	r5, [sp, #12]
 801354a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801354e:	6803      	ldr	r3, [r0, #0]
 8013550:	a903      	add	r1, sp, #12
 8013552:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013554:	4798      	blx	r3
 8013556:	b007      	add	sp, #28
 8013558:	bd30      	pop	{r4, r5, pc}
 801355a:	bf00      	nop
 801355c:	08027298 	.word	0x08027298

08013560 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8013560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013564:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8013566:	b08a      	sub	sp, #40	@ 0x28
 8013568:	4604      	mov	r4, r0
 801356a:	460d      	mov	r5, r1
 801356c:	b113      	cbz	r3, 8013574 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801356e:	790b      	ldrb	r3, [r1, #4]
 8013570:	2b00      	cmp	r3, #0
 8013572:	d044      	beq.n	80135fe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8013574:	f104 0804 	add.w	r8, r4, #4
 8013578:	4641      	mov	r1, r8
 801357a:	a803      	add	r0, sp, #12
 801357c:	f7ff ff02 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013580:	792b      	ldrb	r3, [r5, #4]
 8013582:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8013586:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801358a:	b983      	cbnz	r3, 80135ae <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801358c:	892a      	ldrh	r2, [r5, #8]
 801358e:	88e9      	ldrh	r1, [r5, #6]
 8013590:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8013594:	1b92      	subs	r2, r2, r6
 8013596:	1bc9      	subs	r1, r1, r7
 8013598:	9301      	str	r3, [sp, #4]
 801359a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801359e:	9300      	str	r3, [sp, #0]
 80135a0:	b212      	sxth	r2, r2
 80135a2:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 80135a6:	b209      	sxth	r1, r1
 80135a8:	4640      	mov	r0, r8
 80135aa:	f7fb f9a3 	bl	800e8f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80135ae:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 80135b0:	b329      	cbz	r1, 80135fe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80135b2:	a805      	add	r0, sp, #20
 80135b4:	f7ff fee6 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80135b8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80135bc:	792b      	ldrb	r3, [r5, #4]
 80135be:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80135c0:	f88d 3020 	strb.w	r3, [sp, #32]
 80135c4:	1abf      	subs	r7, r7, r2
 80135c6:	88ea      	ldrh	r2, [r5, #6]
 80135c8:	4417      	add	r7, r2
 80135ca:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80135cc:	4417      	add	r7, r2
 80135ce:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80135d2:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80135d6:	1ab6      	subs	r6, r6, r2
 80135d8:	892a      	ldrh	r2, [r5, #8]
 80135da:	4416      	add	r6, r2
 80135dc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80135de:	4416      	add	r6, r2
 80135e0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80135e4:	4a07      	ldr	r2, [pc, #28]	@ (8013604 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80135e6:	9207      	str	r2, [sp, #28]
 80135e8:	2600      	movs	r6, #0
 80135ea:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80135ee:	6803      	ldr	r3, [r0, #0]
 80135f0:	a907      	add	r1, sp, #28
 80135f2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80135f4:	4798      	blx	r3
 80135f6:	792b      	ldrb	r3, [r5, #4]
 80135f8:	b10b      	cbz	r3, 80135fe <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80135fa:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80135fe:	b00a      	add	sp, #40	@ 0x28
 8013600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013604:	08027270 	.word	0x08027270

08013608 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8013608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801360c:	460c      	mov	r4, r1
 801360e:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8013610:	b088      	sub	sp, #32
 8013612:	4605      	mov	r5, r0
 8013614:	2900      	cmp	r1, #0
 8013616:	d06d      	beq.n	80136f4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8013618:	4668      	mov	r0, sp
 801361a:	f7ff feb3 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801361e:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8013620:	88e3      	ldrh	r3, [r4, #6]
 8013622:	f9bd 8000 	ldrsh.w	r8, [sp]
 8013626:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801362a:	440b      	add	r3, r1
 801362c:	b21b      	sxth	r3, r3
 801362e:	4543      	cmp	r3, r8
 8013630:	db31      	blt.n	8013696 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013632:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8013636:	44c4      	add	ip, r8
 8013638:	fa0f fc8c 	sxth.w	ip, ip
 801363c:	4563      	cmp	r3, ip
 801363e:	da2a      	bge.n	8013696 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013640:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8013642:	8926      	ldrh	r6, [r4, #8]
 8013644:	4416      	add	r6, r2
 8013646:	b236      	sxth	r6, r6
 8013648:	42be      	cmp	r6, r7
 801364a:	db24      	blt.n	8013696 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801364c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013650:	4438      	add	r0, r7
 8013652:	b200      	sxth	r0, r0
 8013654:	4286      	cmp	r6, r0
 8013656:	da1e      	bge.n	8013696 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013658:	8963      	ldrh	r3, [r4, #10]
 801365a:	4419      	add	r1, r3
 801365c:	b209      	sxth	r1, r1
 801365e:	4541      	cmp	r1, r8
 8013660:	db08      	blt.n	8013674 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013662:	4561      	cmp	r1, ip
 8013664:	da06      	bge.n	8013674 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013666:	89a3      	ldrh	r3, [r4, #12]
 8013668:	441a      	add	r2, r3
 801366a:	b212      	sxth	r2, r2
 801366c:	42ba      	cmp	r2, r7
 801366e:	db01      	blt.n	8013674 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8013670:	4282      	cmp	r2, r0
 8013672:	db10      	blt.n	8013696 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013674:	4b21      	ldr	r3, [pc, #132]	@ (80136fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8013676:	9304      	str	r3, [sp, #16]
 8013678:	2302      	movs	r3, #2
 801367a:	f88d 3014 	strb.w	r3, [sp, #20]
 801367e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8013680:	2300      	movs	r3, #0
 8013682:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013686:	f8ad 3018 	strh.w	r3, [sp, #24]
 801368a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801368e:	6803      	ldr	r3, [r0, #0]
 8013690:	a904      	add	r1, sp, #16
 8013692:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013694:	4798      	blx	r3
 8013696:	1d29      	adds	r1, r5, #4
 8013698:	a802      	add	r0, sp, #8
 801369a:	f7ff fe73 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801369e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80136a2:	88e0      	ldrh	r0, [r4, #6]
 80136a4:	7921      	ldrb	r1, [r4, #4]
 80136a6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 80136aa:	8922      	ldrh	r2, [r4, #8]
 80136ac:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 80136ae:	f88d 1014 	strb.w	r1, [sp, #20]
 80136b2:	eba3 0808 	sub.w	r8, r3, r8
 80136b6:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80136ba:	1bdf      	subs	r7, r3, r7
 80136bc:	b2bb      	uxth	r3, r7
 80136be:	fa1f f888 	uxth.w	r8, r8
 80136c2:	8967      	ldrh	r7, [r4, #10]
 80136c4:	89a4      	ldrh	r4, [r4, #12]
 80136c6:	4440      	add	r0, r8
 80136c8:	4460      	add	r0, ip
 80136ca:	441a      	add	r2, r3
 80136cc:	44b8      	add	r8, r7
 80136ce:	4423      	add	r3, r4
 80136d0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80136d4:	4433      	add	r3, r6
 80136d6:	4432      	add	r2, r6
 80136d8:	44e0      	add	r8, ip
 80136da:	4c09      	ldr	r4, [pc, #36]	@ (8013700 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80136dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80136de:	9404      	str	r4, [sp, #16]
 80136e0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80136e4:	f8ad 801a 	strh.w	r8, [sp, #26]
 80136e8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80136ec:	6803      	ldr	r3, [r0, #0]
 80136ee:	a904      	add	r1, sp, #16
 80136f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80136f2:	4798      	blx	r3
 80136f4:	b008      	add	sp, #32
 80136f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80136fa:	bf00      	nop
 80136fc:	08027270 	.word	0x08027270
 8013700:	08027284 	.word	0x08027284

08013704 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8013704:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013706:	4604      	mov	r4, r0
 8013708:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801370c:	3201      	adds	r2, #1
 801370e:	d112      	bne.n	8013736 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8013710:	6803      	ldr	r3, [r0, #0]
 8013712:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8013716:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801371a:	f8ad 1004 	strh.w	r1, [sp, #4]
 801371e:	2500      	movs	r5, #0
 8013720:	9500      	str	r5, [sp, #0]
 8013722:	466d      	mov	r5, sp
 8013724:	4629      	mov	r1, r5
 8013726:	f8ad 2006 	strh.w	r2, [sp, #6]
 801372a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801372c:	4798      	blx	r3
 801372e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8013732:	e884 0003 	stmia.w	r4, {r0, r1}
 8013736:	4620      	mov	r0, r4
 8013738:	b003      	add	sp, #12
 801373a:	bd30      	pop	{r4, r5, pc}

0801373c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801373c:	b513      	push	{r0, r1, r4, lr}
 801373e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8013742:	3301      	adds	r3, #1
 8013744:	4604      	mov	r4, r0
 8013746:	d109      	bne.n	801375c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8013748:	4601      	mov	r1, r0
 801374a:	4668      	mov	r0, sp
 801374c:	f7ff fe1a 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013750:	f8bd 3000 	ldrh.w	r3, [sp]
 8013754:	8423      	strh	r3, [r4, #32]
 8013756:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801375a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801375c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8013760:	b002      	add	sp, #8
 8013762:	bd10      	pop	{r4, pc}

08013764 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8013764:	b513      	push	{r0, r1, r4, lr}
 8013766:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801376a:	3301      	adds	r3, #1
 801376c:	4604      	mov	r4, r0
 801376e:	d109      	bne.n	8013784 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8013770:	4601      	mov	r1, r0
 8013772:	4668      	mov	r0, sp
 8013774:	f7ff fe06 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013778:	f8bd 3000 	ldrh.w	r3, [sp]
 801377c:	8423      	strh	r3, [r4, #32]
 801377e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013782:	8463      	strh	r3, [r4, #34]	@ 0x22
 8013784:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8013788:	b002      	add	sp, #8
 801378a:	bd10      	pop	{r4, pc}

0801378c <_ZN8touchgfx6ScreenC1Ev>:
 801378c:	b570      	push	{r4, r5, r6, lr}
 801378e:	4605      	mov	r5, r0
 8013790:	4b16      	ldr	r3, [pc, #88]	@ (80137ec <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8013792:	f845 3b04 	str.w	r3, [r5], #4
 8013796:	2300      	movs	r3, #0
 8013798:	8103      	strh	r3, [r0, #8]
 801379a:	8143      	strh	r3, [r0, #10]
 801379c:	8183      	strh	r3, [r0, #12]
 801379e:	81c3      	strh	r3, [r0, #14]
 80137a0:	8203      	strh	r3, [r0, #16]
 80137a2:	8243      	strh	r3, [r0, #18]
 80137a4:	8283      	strh	r3, [r0, #20]
 80137a6:	82c3      	strh	r3, [r0, #22]
 80137a8:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80137ac:	6203      	str	r3, [r0, #32]
 80137ae:	8483      	strh	r3, [r0, #36]	@ 0x24
 80137b0:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80137b2:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 80137b6:	4a0e      	ldr	r2, [pc, #56]	@ (80137f0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80137b8:	6343      	str	r3, [r0, #52]	@ 0x34
 80137ba:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 80137be:	4b0d      	ldr	r3, [pc, #52]	@ (80137f4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80137c0:	6042      	str	r2, [r0, #4]
 80137c2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80137c6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80137c8:	4a0b      	ldr	r2, [pc, #44]	@ (80137f8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80137ca:	4604      	mov	r4, r0
 80137cc:	2101      	movs	r1, #1
 80137ce:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80137d2:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80137d6:	f9b2 1000 	ldrsh.w	r1, [r2]
 80137da:	4628      	mov	r0, r5
 80137dc:	4798      	blx	r3
 80137de:	6863      	ldr	r3, [r4, #4]
 80137e0:	4628      	mov	r0, r5
 80137e2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80137e4:	4631      	mov	r1, r6
 80137e6:	4798      	blx	r3
 80137e8:	4620      	mov	r0, r4
 80137ea:	bd70      	pop	{r4, r5, r6, pc}
 80137ec:	080272ac 	.word	0x080272ac
 80137f0:	08026b4c 	.word	0x08026b4c
 80137f4:	20002f2a 	.word	0x20002f2a
 80137f8:	20002f28 	.word	0x20002f28

080137fc <_ZN8touchgfx6Screen4drawEv>:
 80137fc:	b507      	push	{r0, r1, r2, lr}
 80137fe:	4b09      	ldr	r3, [pc, #36]	@ (8013824 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8013800:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013804:	4b08      	ldr	r3, [pc, #32]	@ (8013828 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8013806:	f8ad 2004 	strh.w	r2, [sp, #4]
 801380a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801380e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013812:	6803      	ldr	r3, [r0, #0]
 8013814:	2100      	movs	r1, #0
 8013816:	9100      	str	r1, [sp, #0]
 8013818:	689b      	ldr	r3, [r3, #8]
 801381a:	4669      	mov	r1, sp
 801381c:	4798      	blx	r3
 801381e:	b003      	add	sp, #12
 8013820:	f85d fb04 	ldr.w	pc, [sp], #4
 8013824:	20002f28 	.word	0x20002f28
 8013828:	20002f2a 	.word	0x20002f2a

0801382c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801382c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013830:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8013834:	2b00      	cmp	r3, #0
 8013836:	b089      	sub	sp, #36	@ 0x24
 8013838:	4680      	mov	r8, r0
 801383a:	460c      	mov	r4, r1
 801383c:	4615      	mov	r5, r2
 801383e:	dd0e      	ble.n	801385e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013840:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8013844:	2b00      	cmp	r3, #0
 8013846:	dd0a      	ble.n	801385e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013848:	4628      	mov	r0, r5
 801384a:	f7ff ff5b 	bl	8013704 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801384e:	4621      	mov	r1, r4
 8013850:	f7fe fba8 	bl	8011fa4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013854:	69eb      	ldr	r3, [r5, #28]
 8013856:	b928      	cbnz	r0, 8013864 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8013858:	461d      	mov	r5, r3
 801385a:	2b00      	cmp	r3, #0
 801385c:	d1f4      	bne.n	8013848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801385e:	b009      	add	sp, #36	@ 0x24
 8013860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013864:	ae04      	add	r6, sp, #16
 8013866:	2b00      	cmp	r3, #0
 8013868:	f000 80b5 	beq.w	80139d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801386c:	682b      	ldr	r3, [r5, #0]
 801386e:	4629      	mov	r1, r5
 8013870:	68db      	ldr	r3, [r3, #12]
 8013872:	a802      	add	r0, sp, #8
 8013874:	4798      	blx	r3
 8013876:	4628      	mov	r0, r5
 8013878:	f7ff ff60 	bl	801373c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801387c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8013880:	4407      	add	r7, r0
 8013882:	4628      	mov	r0, r5
 8013884:	f7ff ff6e 	bl	8013764 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013888:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801388c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8013890:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013894:	4418      	add	r0, r3
 8013896:	4621      	mov	r1, r4
 8013898:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801389c:	f8ad 0012 	strh.w	r0, [sp, #18]
 80138a0:	b23f      	sxth	r7, r7
 80138a2:	4630      	mov	r0, r6
 80138a4:	f8ad 3016 	strh.w	r3, [sp, #22]
 80138a8:	f8ad 7010 	strh.w	r7, [sp, #16]
 80138ac:	f7fb f906 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 80138b0:	4628      	mov	r0, r5
 80138b2:	f7ff ff27 	bl	8013704 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80138b6:	4602      	mov	r2, r0
 80138b8:	e896 0003 	ldmia.w	r6, {r0, r1}
 80138bc:	ab06      	add	r3, sp, #24
 80138be:	e883 0003 	stmia.w	r3, {r0, r1}
 80138c2:	4611      	mov	r1, r2
 80138c4:	4618      	mov	r0, r3
 80138c6:	f7fb f8f9 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 80138ca:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80138ce:	f9b4 1000 	ldrsh.w	r1, [r4]
 80138d2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80138d6:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80138da:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80138de:	4299      	cmp	r1, r3
 80138e0:	d10b      	bne.n	80138fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80138e2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80138e6:	4552      	cmp	r2, sl
 80138e8:	d107      	bne.n	80138fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80138ea:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80138ee:	455a      	cmp	r2, fp
 80138f0:	d103      	bne.n	80138fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80138f2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80138f6:	454a      	cmp	r2, r9
 80138f8:	d06d      	beq.n	80139d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80138fa:	f1bb 0f00 	cmp.w	fp, #0
 80138fe:	dd65      	ble.n	80139cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013900:	f1b9 0f00 	cmp.w	r9, #0
 8013904:	dd62      	ble.n	80139cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013906:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801390a:	fa1f f08a 	uxth.w	r0, sl
 801390e:	4552      	cmp	r2, sl
 8013910:	9000      	str	r0, [sp, #0]
 8013912:	da12      	bge.n	801393a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8013914:	9301      	str	r3, [sp, #4]
 8013916:	9b00      	ldr	r3, [sp, #0]
 8013918:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801391c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8013920:	1a9a      	subs	r2, r3, r2
 8013922:	f8ad 1010 	strh.w	r1, [sp, #16]
 8013926:	f8ad 0014 	strh.w	r0, [sp, #20]
 801392a:	f8ad 2016 	strh.w	r2, [sp, #22]
 801392e:	69ea      	ldr	r2, [r5, #28]
 8013930:	4631      	mov	r1, r6
 8013932:	4640      	mov	r0, r8
 8013934:	f7ff ff7a 	bl	801382c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013938:	9b01      	ldr	r3, [sp, #4]
 801393a:	f9b4 2000 	ldrsh.w	r2, [r4]
 801393e:	429a      	cmp	r2, r3
 8013940:	b29f      	uxth	r7, r3
 8013942:	da0d      	bge.n	8013960 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8013944:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013948:	1aba      	subs	r2, r7, r2
 801394a:	f8ad a012 	strh.w	sl, [sp, #18]
 801394e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013952:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013956:	69ea      	ldr	r2, [r5, #28]
 8013958:	4631      	mov	r1, r6
 801395a:	4640      	mov	r0, r8
 801395c:	f7ff ff66 	bl	801382c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013960:	8822      	ldrh	r2, [r4, #0]
 8013962:	88a3      	ldrh	r3, [r4, #4]
 8013964:	445f      	add	r7, fp
 8013966:	4413      	add	r3, r2
 8013968:	b29b      	uxth	r3, r3
 801396a:	b2bf      	uxth	r7, r7
 801396c:	b23a      	sxth	r2, r7
 801396e:	b219      	sxth	r1, r3
 8013970:	4291      	cmp	r1, r2
 8013972:	dd0d      	ble.n	8013990 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8013974:	1bdb      	subs	r3, r3, r7
 8013976:	f8ad 2010 	strh.w	r2, [sp, #16]
 801397a:	f8ad a012 	strh.w	sl, [sp, #18]
 801397e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8013982:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013986:	69ea      	ldr	r2, [r5, #28]
 8013988:	4631      	mov	r1, r6
 801398a:	4640      	mov	r0, r8
 801398c:	f7ff ff4e 	bl	801382c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013990:	88e2      	ldrh	r2, [r4, #6]
 8013992:	8863      	ldrh	r3, [r4, #2]
 8013994:	4413      	add	r3, r2
 8013996:	9a00      	ldr	r2, [sp, #0]
 8013998:	444a      	add	r2, r9
 801399a:	b29b      	uxth	r3, r3
 801399c:	fa1f f982 	uxth.w	r9, r2
 80139a0:	fa0f f289 	sxth.w	r2, r9
 80139a4:	b219      	sxth	r1, r3
 80139a6:	428a      	cmp	r2, r1
 80139a8:	da15      	bge.n	80139d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80139aa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80139ae:	f9b4 0000 	ldrsh.w	r0, [r4]
 80139b2:	f8ad 1014 	strh.w	r1, [sp, #20]
 80139b6:	eba3 0309 	sub.w	r3, r3, r9
 80139ba:	f8ad 0010 	strh.w	r0, [sp, #16]
 80139be:	f8ad 2012 	strh.w	r2, [sp, #18]
 80139c2:	f8ad 3016 	strh.w	r3, [sp, #22]
 80139c6:	69ea      	ldr	r2, [r5, #28]
 80139c8:	4631      	mov	r1, r6
 80139ca:	e001      	b.n	80139d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80139cc:	69ea      	ldr	r2, [r5, #28]
 80139ce:	4621      	mov	r1, r4
 80139d0:	4640      	mov	r0, r8
 80139d2:	f7ff ff2b 	bl	801382c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80139d6:	4628      	mov	r0, r5
 80139d8:	f7ff fe94 	bl	8013704 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80139dc:	6861      	ldr	r1, [r4, #4]
 80139de:	4602      	mov	r2, r0
 80139e0:	6820      	ldr	r0, [r4, #0]
 80139e2:	4633      	mov	r3, r6
 80139e4:	c303      	stmia	r3!, {r0, r1}
 80139e6:	4611      	mov	r1, r2
 80139e8:	4630      	mov	r0, r6
 80139ea:	f7fb f867 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 80139ee:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80139f2:	2b00      	cmp	r3, #0
 80139f4:	f77f af33 	ble.w	801385e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80139f8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80139fc:	2b00      	cmp	r3, #0
 80139fe:	f77f af2e 	ble.w	801385e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013a02:	4628      	mov	r0, r5
 8013a04:	f7ff fe9a 	bl	801373c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013a08:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8013a0c:	1a18      	subs	r0, r3, r0
 8013a0e:	f8ad 0010 	strh.w	r0, [sp, #16]
 8013a12:	4628      	mov	r0, r5
 8013a14:	f7ff fea6 	bl	8013764 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013a18:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013a1c:	1a18      	subs	r0, r3, r0
 8013a1e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8013a22:	682b      	ldr	r3, [r5, #0]
 8013a24:	4631      	mov	r1, r6
 8013a26:	689b      	ldr	r3, [r3, #8]
 8013a28:	4628      	mov	r0, r5
 8013a2a:	4798      	blx	r3
 8013a2c:	e717      	b.n	801385e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08013a2e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8013a2e:	b570      	push	{r4, r5, r6, lr}
 8013a30:	460c      	mov	r4, r1
 8013a32:	b086      	sub	sp, #24
 8013a34:	1d06      	adds	r6, r0, #4
 8013a36:	2300      	movs	r3, #0
 8013a38:	4631      	mov	r1, r6
 8013a3a:	4605      	mov	r5, r0
 8013a3c:	a802      	add	r0, sp, #8
 8013a3e:	9301      	str	r3, [sp, #4]
 8013a40:	f7ff fca0 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013a44:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8013a48:	8822      	ldrh	r2, [r4, #0]
 8013a4a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8013a4e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8013a52:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013a56:	1ad2      	subs	r2, r2, r3
 8013a58:	8863      	ldrh	r3, [r4, #2]
 8013a5a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013a5e:	1a5b      	subs	r3, r3, r1
 8013a60:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8013a64:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013a68:	aa01      	add	r2, sp, #4
 8013a6a:	a904      	add	r1, sp, #16
 8013a6c:	4630      	mov	r0, r6
 8013a6e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8013a72:	f7fb f8fb 	bl	800ec6c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8013a76:	9a01      	ldr	r2, [sp, #4]
 8013a78:	b11a      	cbz	r2, 8013a82 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013a7a:	4621      	mov	r1, r4
 8013a7c:	4628      	mov	r0, r5
 8013a7e:	f7ff fed5 	bl	801382c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013a82:	b006      	add	sp, #24
 8013a84:	bd70      	pop	{r4, r5, r6, pc}

08013a86 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8013a86:	b530      	push	{r4, r5, lr}
 8013a88:	4602      	mov	r2, r0
 8013a8a:	4604      	mov	r4, r0
 8013a8c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8013a90:	b085      	sub	sp, #20
 8013a92:	460d      	mov	r5, r1
 8013a94:	6851      	ldr	r1, [r2, #4]
 8013a96:	466b      	mov	r3, sp
 8013a98:	c303      	stmia	r3!, {r0, r1}
 8013a9a:	4629      	mov	r1, r5
 8013a9c:	4668      	mov	r0, sp
 8013a9e:	f7fb f80d 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 8013aa2:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8013aa6:	b12b      	cbz	r3, 8013ab4 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013aa8:	4669      	mov	r1, sp
 8013aaa:	4620      	mov	r0, r4
 8013aac:	f7ff ffbf 	bl	8013a2e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8013ab0:	b005      	add	sp, #20
 8013ab2:	bd30      	pop	{r4, r5, pc}
 8013ab4:	3404      	adds	r4, #4
 8013ab6:	4621      	mov	r1, r4
 8013ab8:	a802      	add	r0, sp, #8
 8013aba:	f7ff fc63 	bl	8013384 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013abe:	f8bd 3000 	ldrh.w	r3, [sp]
 8013ac2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8013ac6:	1a9b      	subs	r3, r3, r2
 8013ac8:	f8ad 3000 	strh.w	r3, [sp]
 8013acc:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8013ad0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013ad4:	4669      	mov	r1, sp
 8013ad6:	1a9b      	subs	r3, r3, r2
 8013ad8:	4620      	mov	r0, r4
 8013ada:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013ade:	f7fb f88c 	bl	800ebfa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8013ae2:	e7e5      	b.n	8013ab0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08013ae4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8013ae4:	680a      	ldr	r2, [r1, #0]
 8013ae6:	460b      	mov	r3, r1
 8013ae8:	6992      	ldr	r2, [r2, #24]
 8013aea:	1d01      	adds	r1, r0, #4
 8013aec:	4618      	mov	r0, r3
 8013aee:	4710      	bx	r2

08013af0 <_ZN8touchgfx12TextProviderC1Ev>:
 8013af0:	b538      	push	{r3, r4, r5, lr}
 8013af2:	2500      	movs	r5, #0
 8013af4:	2302      	movs	r3, #2
 8013af6:	4604      	mov	r4, r0
 8013af8:	e9c0 5500 	strd	r5, r5, [r0]
 8013afc:	7403      	strb	r3, [r0, #16]
 8013afe:	6145      	str	r5, [r0, #20]
 8013b00:	7605      	strb	r5, [r0, #24]
 8013b02:	83c5      	strh	r5, [r0, #30]
 8013b04:	8405      	strh	r5, [r0, #32]
 8013b06:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8013b08:	8705      	strh	r5, [r0, #56]	@ 0x38
 8013b0a:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8013b0c:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8013b10:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8013b14:	220e      	movs	r2, #14
 8013b16:	4629      	mov	r1, r5
 8013b18:	304c      	adds	r0, #76	@ 0x4c
 8013b1a:	f010 fb30 	bl	802417e <memset>
 8013b1e:	2301      	movs	r3, #1
 8013b20:	4620      	mov	r0, r4
 8013b22:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8013b26:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8013b2a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8013b2e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8013b32:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8013b36:	f7f8 f9c1 	bl	800bebc <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8013b3a:	4620      	mov	r0, r4
 8013b3c:	bd38      	pop	{r3, r4, r5, pc}

08013b3e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8013b3e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8013b40:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013b44:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8013b46:	fab0 f080 	clz	r0, r0
 8013b4a:	0940      	lsrs	r0, r0, #5
 8013b4c:	4770      	bx	lr

08013b4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8013b4e:	b530      	push	{r4, r5, lr}
 8013b50:	2500      	movs	r5, #0
 8013b52:	2401      	movs	r4, #1
 8013b54:	6843      	ldr	r3, [r0, #4]
 8013b56:	b913      	cbnz	r3, 8013b5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8013b58:	6803      	ldr	r3, [r0, #0]
 8013b5a:	b313      	cbz	r3, 8013ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013b5c:	6043      	str	r3, [r0, #4]
 8013b5e:	7e03      	ldrb	r3, [r0, #24]
 8013b60:	b143      	cbz	r3, 8013b74 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8013b62:	6943      	ldr	r3, [r0, #20]
 8013b64:	b12b      	cbz	r3, 8013b72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013b66:	881a      	ldrh	r2, [r3, #0]
 8013b68:	b11a      	cbz	r2, 8013b72 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013b6a:	1c9a      	adds	r2, r3, #2
 8013b6c:	6142      	str	r2, [r0, #20]
 8013b6e:	8818      	ldrh	r0, [r3, #0]
 8013b70:	bd30      	pop	{r4, r5, pc}
 8013b72:	7605      	strb	r5, [r0, #24]
 8013b74:	6843      	ldr	r3, [r0, #4]
 8013b76:	8819      	ldrh	r1, [r3, #0]
 8013b78:	b199      	cbz	r1, 8013ba2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013b7a:	1c9a      	adds	r2, r3, #2
 8013b7c:	2902      	cmp	r1, #2
 8013b7e:	6042      	str	r2, [r0, #4]
 8013b80:	d1f5      	bne.n	8013b6e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8013b82:	7c03      	ldrb	r3, [r0, #16]
 8013b84:	2b01      	cmp	r3, #1
 8013b86:	d8e5      	bhi.n	8013b54 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013b88:	1c5a      	adds	r2, r3, #1
 8013b8a:	3302      	adds	r3, #2
 8013b8c:	7402      	strb	r2, [r0, #16]
 8013b8e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8013b92:	6143      	str	r3, [r0, #20]
 8013b94:	2b00      	cmp	r3, #0
 8013b96:	d0dd      	beq.n	8013b54 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013b98:	881b      	ldrh	r3, [r3, #0]
 8013b9a:	2b00      	cmp	r3, #0
 8013b9c:	d0da      	beq.n	8013b54 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013b9e:	7604      	strb	r4, [r0, #24]
 8013ba0:	e7d8      	b.n	8013b54 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013ba2:	2000      	movs	r0, #0
 8013ba4:	e7e4      	b.n	8013b70 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8013ba6:	b430      	push	{r4, r5}
 8013ba8:	6001      	str	r1, [r0, #0]
 8013baa:	2100      	movs	r1, #0
 8013bac:	6041      	str	r1, [r0, #4]
 8013bae:	6815      	ldr	r5, [r2, #0]
 8013bb0:	6085      	str	r5, [r0, #8]
 8013bb2:	6852      	ldr	r2, [r2, #4]
 8013bb4:	6443      	str	r3, [r0, #68]	@ 0x44
 8013bb6:	9b02      	ldr	r3, [sp, #8]
 8013bb8:	60c2      	str	r2, [r0, #12]
 8013bba:	7401      	strb	r1, [r0, #16]
 8013bbc:	6141      	str	r1, [r0, #20]
 8013bbe:	7601      	strb	r1, [r0, #24]
 8013bc0:	8701      	strh	r1, [r0, #56]	@ 0x38
 8013bc2:	8401      	strh	r1, [r0, #32]
 8013bc4:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8013bc8:	6483      	str	r3, [r0, #72]	@ 0x48
 8013bca:	bc30      	pop	{r4, r5}
 8013bcc:	f7f8 b976 	b.w	800bebc <_ZN8touchgfx12TextProvider18initializeInternalEv>

08013bd0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8013bd0:	b408      	push	{r3}
 8013bd2:	b510      	push	{r4, lr}
 8013bd4:	b085      	sub	sp, #20
 8013bd6:	ac07      	add	r4, sp, #28
 8013bd8:	f854 3b04 	ldr.w	r3, [r4], #4
 8013bdc:	9300      	str	r3, [sp, #0]
 8013bde:	4613      	mov	r3, r2
 8013be0:	4622      	mov	r2, r4
 8013be2:	9403      	str	r4, [sp, #12]
 8013be4:	f7ff ffdf 	bl	8013ba6 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013be8:	b005      	add	sp, #20
 8013bea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013bee:	b001      	add	sp, #4
 8013bf0:	4770      	bx	lr

08013bf2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8013bf2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013bf4:	4605      	mov	r5, r0
 8013bf6:	4608      	mov	r0, r1
 8013bf8:	b1e9      	cbz	r1, 8013c36 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8013bfa:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8013bfe:	460b      	mov	r3, r1
 8013c00:	f101 0708 	add.w	r7, r1, #8
 8013c04:	4622      	mov	r2, r4
 8013c06:	6818      	ldr	r0, [r3, #0]
 8013c08:	6859      	ldr	r1, [r3, #4]
 8013c0a:	4626      	mov	r6, r4
 8013c0c:	c603      	stmia	r6!, {r0, r1}
 8013c0e:	3308      	adds	r3, #8
 8013c10:	42bb      	cmp	r3, r7
 8013c12:	4634      	mov	r4, r6
 8013c14:	d1f7      	bne.n	8013c06 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8013c16:	6818      	ldr	r0, [r3, #0]
 8013c18:	6030      	str	r0, [r6, #0]
 8013c1a:	889b      	ldrh	r3, [r3, #4]
 8013c1c:	80b3      	strh	r3, [r6, #4]
 8013c1e:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8013c22:	015b      	lsls	r3, r3, #5
 8013c24:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8013c28:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8013c2c:	430b      	orrs	r3, r1
 8013c2e:	425b      	negs	r3, r3
 8013c30:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8013c34:	4610      	mov	r0, r2
 8013c36:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013c38 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8013c38:	b538      	push	{r3, r4, r5, lr}
 8013c3a:	460c      	mov	r4, r1
 8013c3c:	6811      	ldr	r1, [r2, #0]
 8013c3e:	4610      	mov	r0, r2
 8013c40:	68cd      	ldr	r5, [r1, #12]
 8013c42:	4619      	mov	r1, r3
 8013c44:	47a8      	blx	r5
 8013c46:	2800      	cmp	r0, #0
 8013c48:	bf08      	it	eq
 8013c4a:	4620      	moveq	r0, r4
 8013c4c:	bd38      	pop	{r3, r4, r5, pc}
	...

08013c50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8013c50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c54:	468c      	mov	ip, r1
 8013c56:	4605      	mov	r5, r0
 8013c58:	4614      	mov	r4, r2
 8013c5a:	b942      	cbnz	r2, 8013c6e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8013c5c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8013c60:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8013c64:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8013c68:	4620      	mov	r0, r4
 8013c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c6e:	7b50      	ldrb	r0, [r2, #13]
 8013c70:	8893      	ldrh	r3, [r2, #4]
 8013c72:	0106      	lsls	r6, r0, #4
 8013c74:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8013c78:	79e6      	ldrb	r6, [r4, #7]
 8013c7a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8013c7e:	4316      	orrs	r6, r2
 8013c80:	185a      	adds	r2, r3, r1
 8013c82:	b291      	uxth	r1, r2
 8013c84:	291d      	cmp	r1, #29
 8013c86:	b2b7      	uxth	r7, r6
 8013c88:	d87e      	bhi.n	8013d88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8013c8a:	2201      	movs	r2, #1
 8013c8c:	408a      	lsls	r2, r1
 8013c8e:	498a      	ldr	r1, [pc, #552]	@ (8013eb8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8013c90:	420a      	tst	r2, r1
 8013c92:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8013c96:	d12d      	bne.n	8013cf4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8013c98:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8013c9c:	d074      	beq.n	8013d88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8013c9e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013ca2:	4623      	mov	r3, r4
 8013ca4:	f104 0e08 	add.w	lr, r4, #8
 8013ca8:	4614      	mov	r4, r2
 8013caa:	6818      	ldr	r0, [r3, #0]
 8013cac:	6859      	ldr	r1, [r3, #4]
 8013cae:	4694      	mov	ip, r2
 8013cb0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013cb4:	3308      	adds	r3, #8
 8013cb6:	4573      	cmp	r3, lr
 8013cb8:	4662      	mov	r2, ip
 8013cba:	d1f6      	bne.n	8013caa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8013cbc:	6818      	ldr	r0, [r3, #0]
 8013cbe:	f8cc 0000 	str.w	r0, [ip]
 8013cc2:	889b      	ldrh	r3, [r3, #4]
 8013cc4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8013cc8:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8013ccc:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8013cd0:	b2b3      	uxth	r3, r6
 8013cd2:	1aca      	subs	r2, r1, r3
 8013cd4:	b292      	uxth	r2, r2
 8013cd6:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8013cda:	10d2      	asrs	r2, r2, #3
 8013cdc:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8013ce0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8013ce4:	4302      	orrs	r2, r0
 8013ce6:	1bcf      	subs	r7, r1, r7
 8013ce8:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8013cec:	1afb      	subs	r3, r7, r3
 8013cee:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8013cf2:	e7b9      	b.n	8013c68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8013cf4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013cf8:	4623      	mov	r3, r4
 8013cfa:	f104 0808 	add.w	r8, r4, #8
 8013cfe:	4614      	mov	r4, r2
 8013d00:	6818      	ldr	r0, [r3, #0]
 8013d02:	6859      	ldr	r1, [r3, #4]
 8013d04:	4696      	mov	lr, r2
 8013d06:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013d0a:	3308      	adds	r3, #8
 8013d0c:	4543      	cmp	r3, r8
 8013d0e:	4672      	mov	r2, lr
 8013d10:	d1f6      	bne.n	8013d00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8013d12:	6818      	ldr	r0, [r3, #0]
 8013d14:	f8ce 0000 	str.w	r0, [lr]
 8013d18:	889b      	ldrh	r3, [r3, #4]
 8013d1a:	f8ae 3004 	strh.w	r3, [lr, #4]
 8013d1e:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8013d20:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8013d24:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8013d26:	f640 6333 	movw	r3, #3635	@ 0xe33
 8013d2a:	4299      	cmp	r1, r3
 8013d2c:	d111      	bne.n	8013d52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8013d2e:	f8dc 3000 	ldr.w	r3, [ip]
 8013d32:	4660      	mov	r0, ip
 8013d34:	68db      	ldr	r3, [r3, #12]
 8013d36:	4798      	blx	r3
 8013d38:	7b41      	ldrb	r1, [r0, #13]
 8013d3a:	00cb      	lsls	r3, r1, #3
 8013d3c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013d40:	7a03      	ldrb	r3, [r0, #8]
 8013d42:	4313      	orrs	r3, r2
 8013d44:	064a      	lsls	r2, r1, #25
 8013d46:	bf44      	itt	mi
 8013d48:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013d4c:	b21b      	sxthmi	r3, r3
 8013d4e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013d52:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8013d56:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8013d5a:	443b      	add	r3, r7
 8013d5c:	4433      	add	r3, r6
 8013d5e:	b29b      	uxth	r3, r3
 8013d60:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013d64:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8013d68:	10db      	asrs	r3, r3, #3
 8013d6a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8013d6e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8013d72:	4313      	orrs	r3, r2
 8013d74:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8013d78:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8013d7c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8013d80:	1a9b      	subs	r3, r3, r2
 8013d82:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8013d86:	e76f      	b.n	8013c68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8013d88:	f023 0204 	bic.w	r2, r3, #4
 8013d8c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8013d90:	428a      	cmp	r2, r1
 8013d92:	d003      	beq.n	8013d9c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8013d94:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8013d98:	4293      	cmp	r3, r2
 8013d9a:	d137      	bne.n	8013e0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8013d9c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8013da0:	4622      	mov	r2, r4
 8013da2:	f104 0808 	add.w	r8, r4, #8
 8013da6:	4634      	mov	r4, r6
 8013da8:	6810      	ldr	r0, [r2, #0]
 8013daa:	6851      	ldr	r1, [r2, #4]
 8013dac:	46b6      	mov	lr, r6
 8013dae:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013db2:	3208      	adds	r2, #8
 8013db4:	4542      	cmp	r2, r8
 8013db6:	4676      	mov	r6, lr
 8013db8:	d1f6      	bne.n	8013da8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8013dba:	6810      	ldr	r0, [r2, #0]
 8013dbc:	f8ce 0000 	str.w	r0, [lr]
 8013dc0:	8892      	ldrh	r2, [r2, #4]
 8013dc2:	f8ae 2004 	strh.w	r2, [lr, #4]
 8013dc6:	3b01      	subs	r3, #1
 8013dc8:	b29b      	uxth	r3, r3
 8013dca:	4662      	mov	r2, ip
 8013dcc:	4621      	mov	r1, r4
 8013dce:	4628      	mov	r0, r5
 8013dd0:	f7ff ff32 	bl	8013c38 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013dd4:	7b41      	ldrb	r1, [r0, #13]
 8013dd6:	00cb      	lsls	r3, r1, #3
 8013dd8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013ddc:	7a03      	ldrb	r3, [r0, #8]
 8013dde:	0648      	lsls	r0, r1, #25
 8013de0:	ea43 0302 	orr.w	r3, r3, r2
 8013de4:	bf44      	itt	mi
 8013de6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013dea:	b21b      	sxthmi	r3, r3
 8013dec:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8013df0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8013df4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8013df8:	005b      	lsls	r3, r3, #1
 8013dfa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013dfe:	4313      	orrs	r3, r2
 8013e00:	115a      	asrs	r2, r3, #5
 8013e02:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8013e06:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8013e0a:	e046      	b.n	8013e9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8013e0c:	00c2      	lsls	r2, r0, #3
 8013e0e:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8013e12:	7a22      	ldrb	r2, [r4, #8]
 8013e14:	430a      	orrs	r2, r1
 8013e16:	0641      	lsls	r1, r0, #25
 8013e18:	bf44      	itt	mi
 8013e1a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8013e1e:	b212      	sxthmi	r2, r2
 8013e20:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8013e24:	f640 6109 	movw	r1, #3593	@ 0xe09
 8013e28:	f023 0210 	bic.w	r2, r3, #16
 8013e2c:	428a      	cmp	r2, r1
 8013e2e:	d003      	beq.n	8013e38 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8013e30:	f640 6213 	movw	r2, #3603	@ 0xe13
 8013e34:	4293      	cmp	r3, r2
 8013e36:	d13d      	bne.n	8013eb4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8013e38:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8013e3c:	f104 0808 	add.w	r8, r4, #8
 8013e40:	4696      	mov	lr, r2
 8013e42:	6820      	ldr	r0, [r4, #0]
 8013e44:	6861      	ldr	r1, [r4, #4]
 8013e46:	4616      	mov	r6, r2
 8013e48:	c603      	stmia	r6!, {r0, r1}
 8013e4a:	3408      	adds	r4, #8
 8013e4c:	4544      	cmp	r4, r8
 8013e4e:	4632      	mov	r2, r6
 8013e50:	d1f7      	bne.n	8013e42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8013e52:	6820      	ldr	r0, [r4, #0]
 8013e54:	6030      	str	r0, [r6, #0]
 8013e56:	88a1      	ldrh	r1, [r4, #4]
 8013e58:	80b1      	strh	r1, [r6, #4]
 8013e5a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8013e5e:	0076      	lsls	r6, r6, #1
 8013e60:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8013e64:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8013e68:	4316      	orrs	r6, r2
 8013e6a:	f640 6213 	movw	r2, #3603	@ 0xe13
 8013e6e:	4293      	cmp	r3, r2
 8013e70:	bf1a      	itte	ne
 8013e72:	f103 33ff 	addne.w	r3, r3, #4294967295
 8013e76:	b29b      	uxthne	r3, r3
 8013e78:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8013e7c:	4662      	mov	r2, ip
 8013e7e:	4671      	mov	r1, lr
 8013e80:	4628      	mov	r0, r5
 8013e82:	4674      	mov	r4, lr
 8013e84:	f7ff fed8 	bl	8013c38 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8013e88:	7b43      	ldrb	r3, [r0, #13]
 8013e8a:	7a82      	ldrb	r2, [r0, #10]
 8013e8c:	005b      	lsls	r3, r3, #1
 8013e8e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013e92:	4313      	orrs	r3, r2
 8013e94:	1af6      	subs	r6, r6, r3
 8013e96:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8013e9a:	7b61      	ldrb	r1, [r4, #13]
 8013e9c:	00cb      	lsls	r3, r1, #3
 8013e9e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013ea2:	7a23      	ldrb	r3, [r4, #8]
 8013ea4:	4313      	orrs	r3, r2
 8013ea6:	064a      	lsls	r2, r1, #25
 8013ea8:	bf44      	itt	mi
 8013eaa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013eae:	b21b      	sxthmi	r3, r3
 8013eb0:	1bdb      	subs	r3, r3, r7
 8013eb2:	e71c      	b.n	8013cee <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8013eb4:	2300      	movs	r3, #0
 8013eb6:	e7a6      	b.n	8013e06 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8013eb8:	3fc00079 	.word	0x3fc00079

08013ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8013ebc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013ec0:	4604      	mov	r4, r0
 8013ec2:	b942      	cbnz	r2, 8013ed6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8013ec4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8013ec8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8013ecc:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8013ed0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8013ed4:	e047      	b.n	8013f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013ed6:	7b51      	ldrb	r1, [r2, #13]
 8013ed8:	8893      	ldrh	r3, [r2, #4]
 8013eda:	010d      	lsls	r5, r1, #4
 8013edc:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8013ee0:	79d5      	ldrb	r5, [r2, #7]
 8013ee2:	4305      	orrs	r5, r0
 8013ee4:	2d04      	cmp	r5, #4
 8013ee6:	bfcc      	ite	gt
 8013ee8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8013eec:	f04f 0e01 	movle.w	lr, #1
 8013ef0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8013ef4:	f200 80ab 	bhi.w	801404e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8013ef8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8013efc:	4283      	cmp	r3, r0
 8013efe:	d216      	bcs.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013f00:	f240 605b 	movw	r0, #1627	@ 0x65b
 8013f04:	4283      	cmp	r3, r0
 8013f06:	d859      	bhi.n	8013fbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013f08:	f240 6057 	movw	r0, #1623	@ 0x657
 8013f0c:	4283      	cmp	r3, r0
 8013f0e:	d20e      	bcs.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013f10:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8013f14:	d24a      	bcs.n	8013fac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8013f16:	f240 604e 	movw	r0, #1614	@ 0x64e
 8013f1a:	4283      	cmp	r3, r0
 8013f1c:	d207      	bcs.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013f1e:	f240 601a 	movw	r0, #1562	@ 0x61a
 8013f22:	4283      	cmp	r3, r0
 8013f24:	d02a      	beq.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013f26:	d821      	bhi.n	8013f6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013f28:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8013f2c:	d35b      	bcc.n	8013fe6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013f2e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8013f32:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8013f36:	f040 80d0 	bne.w	80140da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013f3a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8013f3e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8013f42:	f040 80ca 	bne.w	80140da <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013f46:	00cb      	lsls	r3, r1, #3
 8013f48:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8013f4c:	7a13      	ldrb	r3, [r2, #8]
 8013f4e:	0649      	lsls	r1, r1, #25
 8013f50:	ea43 0300 	orr.w	r3, r3, r0
 8013f54:	bf44      	itt	mi
 8013f56:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013f5a:	b21b      	sxthmi	r3, r3
 8013f5c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8013f60:	1b5d      	subs	r5, r3, r5
 8013f62:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8013f66:	4610      	mov	r0, r2
 8013f68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013f6c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8013f70:	4283      	cmp	r3, r0
 8013f72:	d338      	bcc.n	8013fe6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013f74:	f240 604c 	movw	r0, #1612	@ 0x64c
 8013f78:	4283      	cmp	r3, r0
 8013f7a:	d9d8      	bls.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013f7c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8013f80:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8013f84:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8013f88:	f040 80f2 	bne.w	8014170 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013f8c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8013f90:	f040 80ee 	bne.w	8014170 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013f94:	00cb      	lsls	r3, r1, #3
 8013f96:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8013f9a:	7a13      	ldrb	r3, [r2, #8]
 8013f9c:	064e      	lsls	r6, r1, #25
 8013f9e:	ea43 0300 	orr.w	r3, r3, r0
 8013fa2:	bf44      	itt	mi
 8013fa4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013fa8:	b21b      	sxthmi	r3, r3
 8013faa:	e7d9      	b.n	8013f60 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8013fac:	f240 6054 	movw	r0, #1620	@ 0x654
 8013fb0:	4283      	cmp	r3, r0
 8013fb2:	d8e3      	bhi.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013fb4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8013fb8:	d9e0      	bls.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013fba:	e7b8      	b.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013fbc:	f240 6074 	movw	r0, #1652	@ 0x674
 8013fc0:	4283      	cmp	r3, r0
 8013fc2:	d0b4      	beq.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013fc4:	d82d      	bhi.n	8014022 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8013fc6:	f240 605e 	movw	r0, #1630	@ 0x65e
 8013fca:	4283      	cmp	r3, r0
 8013fcc:	d804      	bhi.n	8013fd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8013fce:	f240 605d 	movw	r0, #1629	@ 0x65d
 8013fd2:	4283      	cmp	r3, r0
 8013fd4:	d3d2      	bcc.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013fd6:	e7aa      	b.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013fd8:	f240 605f 	movw	r0, #1631	@ 0x65f
 8013fdc:	4283      	cmp	r3, r0
 8013fde:	d0cd      	beq.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013fe0:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8013fe4:	d0a3      	beq.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013fe6:	00cb      	lsls	r3, r1, #3
 8013fe8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8013fec:	7a13      	ldrb	r3, [r2, #8]
 8013fee:	0649      	lsls	r1, r1, #25
 8013ff0:	ea43 0300 	orr.w	r3, r3, r0
 8013ff4:	bf44      	itt	mi
 8013ff6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8013ffa:	b21b      	sxthmi	r3, r3
 8013ffc:	1b5d      	subs	r5, r3, r5
 8013ffe:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014002:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8014006:	7b53      	ldrb	r3, [r2, #13]
 8014008:	015b      	lsls	r3, r3, #5
 801400a:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 801400e:	7993      	ldrb	r3, [r2, #6]
 8014010:	430b      	orrs	r3, r1
 8014012:	005b      	lsls	r3, r3, #1
 8014014:	2105      	movs	r1, #5
 8014016:	fb93 f3f1 	sdiv	r3, r3, r1
 801401a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801401e:	440b      	add	r3, r1
 8014020:	e756      	b.n	8013ed0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8014022:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8014026:	4283      	cmp	r3, r0
 8014028:	d809      	bhi.n	801403e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801402a:	f240 60df 	movw	r0, #1759	@ 0x6df
 801402e:	4283      	cmp	r3, r0
 8014030:	f4bf af7d 	bcs.w	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014034:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8014038:	2b05      	cmp	r3, #5
 801403a:	d8d4      	bhi.n	8013fe6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801403c:	e777      	b.n	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801403e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8014042:	4283      	cmp	r3, r0
 8014044:	d09a      	beq.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8014046:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801404a:	4283      	cmp	r3, r0
 801404c:	e7ca      	b.n	8013fe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801404e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8014052:	d22b      	bcs.n	80140ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8014054:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8014058:	4283      	cmp	r3, r0
 801405a:	d28f      	bcs.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801405c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8014060:	4283      	cmp	r3, r0
 8014062:	d816      	bhi.n	8014092 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8014064:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8014068:	4283      	cmp	r3, r0
 801406a:	f4bf af60 	bcs.w	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801406e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8014072:	4283      	cmp	r3, r0
 8014074:	d80a      	bhi.n	801408c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8014076:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801407a:	4283      	cmp	r3, r0
 801407c:	f4bf af57 	bcs.w	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8014080:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8014084:	4283      	cmp	r3, r0
 8014086:	f43f af79 	beq.w	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801408a:	e7ac      	b.n	8013fe6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801408c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8014090:	e7f8      	b.n	8014084 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8014092:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8014096:	4283      	cmp	r3, r0
 8014098:	d802      	bhi.n	80140a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801409a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801409e:	e798      	b.n	8013fd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80140a0:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 80140a4:	4283      	cmp	r3, r0
 80140a6:	f47f af42 	bne.w	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80140aa:	e767      	b.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80140ac:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 80140b0:	4283      	cmp	r3, r0
 80140b2:	f43f af63 	beq.w	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80140b6:	d802      	bhi.n	80140be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80140b8:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 80140bc:	e7f2      	b.n	80140a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80140be:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80140c2:	4283      	cmp	r3, r0
 80140c4:	d805      	bhi.n	80140d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80140c6:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80140ca:	4283      	cmp	r3, r0
 80140cc:	f4ff af2f 	bcc.w	8013f2e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80140d0:	e754      	b.n	8013f7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80140d2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80140d6:	4283      	cmp	r3, r0
 80140d8:	e7af      	b.n	801403a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80140da:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80140de:	4617      	mov	r7, r2
 80140e0:	f102 0808 	add.w	r8, r2, #8
 80140e4:	4666      	mov	r6, ip
 80140e6:	6838      	ldr	r0, [r7, #0]
 80140e8:	6879      	ldr	r1, [r7, #4]
 80140ea:	46e6      	mov	lr, ip
 80140ec:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80140f0:	3708      	adds	r7, #8
 80140f2:	4547      	cmp	r7, r8
 80140f4:	46f4      	mov	ip, lr
 80140f6:	d1f6      	bne.n	80140e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80140f8:	6838      	ldr	r0, [r7, #0]
 80140fa:	f8ce 0000 	str.w	r0, [lr]
 80140fe:	88b9      	ldrh	r1, [r7, #4]
 8014100:	f8ae 1004 	strh.w	r1, [lr, #4]
 8014104:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8014108:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801410c:	d009      	beq.n	8014122 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 801410e:	7b51      	ldrb	r1, [r2, #13]
 8014110:	7992      	ldrb	r2, [r2, #6]
 8014112:	0149      	lsls	r1, r1, #5
 8014114:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8014118:	4311      	orrs	r1, r2
 801411a:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801411e:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8014122:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8014126:	b2ad      	uxth	r5, r5
 8014128:	d00d      	beq.n	8014146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801412a:	442b      	add	r3, r5
 801412c:	b29b      	uxth	r3, r3
 801412e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8014132:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8014136:	10db      	asrs	r3, r3, #3
 8014138:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801413c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8014140:	4313      	orrs	r3, r2
 8014142:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8014146:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801414a:	00cb      	lsls	r3, r1, #3
 801414c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8014150:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8014154:	064f      	lsls	r7, r1, #25
 8014156:	ea43 0302 	orr.w	r3, r3, r2
 801415a:	bf44      	itt	mi
 801415c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8014160:	b21b      	sxthmi	r3, r3
 8014162:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8014166:	1b5b      	subs	r3, r3, r5
 8014168:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801416c:	4632      	mov	r2, r6
 801416e:	e6fa      	b.n	8013f66 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8014170:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8014174:	4617      	mov	r7, r2
 8014176:	f102 0908 	add.w	r9, r2, #8
 801417a:	4666      	mov	r6, ip
 801417c:	6838      	ldr	r0, [r7, #0]
 801417e:	6879      	ldr	r1, [r7, #4]
 8014180:	46e0      	mov	r8, ip
 8014182:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8014186:	3708      	adds	r7, #8
 8014188:	454f      	cmp	r7, r9
 801418a:	46c4      	mov	ip, r8
 801418c:	d1f6      	bne.n	801417c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801418e:	6838      	ldr	r0, [r7, #0]
 8014190:	f8c8 0000 	str.w	r0, [r8]
 8014194:	88b9      	ldrh	r1, [r7, #4]
 8014196:	f8a8 1004 	strh.w	r1, [r8, #4]
 801419a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801419e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80141a2:	d009      	beq.n	80141b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80141a4:	7b51      	ldrb	r1, [r2, #13]
 80141a6:	7992      	ldrb	r2, [r2, #6]
 80141a8:	0149      	lsls	r1, r1, #5
 80141aa:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80141ae:	4311      	orrs	r1, r2
 80141b0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80141b4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80141b8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80141bc:	d00e      	beq.n	80141dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80141be:	eba3 030e 	sub.w	r3, r3, lr
 80141c2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80141c6:	b29b      	uxth	r3, r3
 80141c8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80141cc:	10db      	asrs	r3, r3, #3
 80141ce:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80141d2:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80141d6:	4313      	orrs	r3, r2
 80141d8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80141dc:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80141e0:	00cb      	lsls	r3, r1, #3
 80141e2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80141e6:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80141ea:	0648      	lsls	r0, r1, #25
 80141ec:	ea43 0302 	orr.w	r3, r3, r2
 80141f0:	bf44      	itt	mi
 80141f2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80141f6:	b21b      	sxthmi	r3, r3
 80141f8:	1b5d      	subs	r5, r3, r5
 80141fa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80141fe:	e7b5      	b.n	801416c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08014200 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8014200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014204:	461e      	mov	r6, r3
 8014206:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8014208:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801420c:	4604      	mov	r4, r0
 801420e:	4617      	mov	r7, r2
 8014210:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8014214:	f7f7 fdac 	bl	800bd70 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014218:	4605      	mov	r5, r0
 801421a:	b918      	cbnz	r0, 8014224 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 801421c:	6030      	str	r0, [r6, #0]
 801421e:	4628      	mov	r0, r5
 8014220:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014224:	683b      	ldr	r3, [r7, #0]
 8014226:	4601      	mov	r1, r0
 8014228:	68db      	ldr	r3, [r3, #12]
 801422a:	4638      	mov	r0, r7
 801422c:	4798      	blx	r3
 801422e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8014232:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8014236:	4602      	mov	r2, r0
 8014238:	6030      	str	r0, [r6, #0]
 801423a:	d213      	bcs.n	8014264 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801423c:	4643      	mov	r3, r8
 801423e:	4639      	mov	r1, r7
 8014240:	4620      	mov	r0, r4
 8014242:	f7ff fe3b 	bl	8013ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8014246:	6030      	str	r0, [r6, #0]
 8014248:	6833      	ldr	r3, [r6, #0]
 801424a:	b143      	cbz	r3, 801425e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801424c:	7b5a      	ldrb	r2, [r3, #13]
 801424e:	7a9b      	ldrb	r3, [r3, #10]
 8014250:	0052      	lsls	r2, r2, #1
 8014252:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8014256:	4313      	orrs	r3, r2
 8014258:	bf0c      	ite	eq
 801425a:	2301      	moveq	r3, #1
 801425c:	2300      	movne	r3, #0
 801425e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8014262:	e7dc      	b.n	801421e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8014264:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8014268:	b29b      	uxth	r3, r3
 801426a:	2b7f      	cmp	r3, #127	@ 0x7f
 801426c:	d804      	bhi.n	8014278 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801426e:	4639      	mov	r1, r7
 8014270:	4620      	mov	r0, r4
 8014272:	f7ff fced 	bl	8013c50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8014276:	e7e6      	b.n	8014246 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8014278:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801427c:	2b00      	cmp	r3, #0
 801427e:	d0e3      	beq.n	8014248 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014280:	f640 1302 	movw	r3, #2306	@ 0x902
 8014284:	429d      	cmp	r5, r3
 8014286:	d1df      	bne.n	8014248 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8014288:	4601      	mov	r1, r0
 801428a:	4620      	mov	r0, r4
 801428c:	f7ff fcb1 	bl	8013bf2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8014290:	e7d9      	b.n	8014246 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08014292 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8014292:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014296:	461e      	mov	r6, r3
 8014298:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801429a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801429e:	4604      	mov	r4, r0
 80142a0:	4617      	mov	r7, r2
 80142a2:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80142a6:	f7f7 fd63 	bl	800bd70 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80142aa:	4605      	mov	r5, r0
 80142ac:	b918      	cbnz	r0, 80142b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80142ae:	6030      	str	r0, [r6, #0]
 80142b0:	4628      	mov	r0, r5
 80142b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80142b6:	683b      	ldr	r3, [r7, #0]
 80142b8:	4601      	mov	r1, r0
 80142ba:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80142be:	4638      	mov	r0, r7
 80142c0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80142c4:	47c8      	blx	r9
 80142c6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80142ca:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80142ce:	4602      	mov	r2, r0
 80142d0:	6030      	str	r0, [r6, #0]
 80142d2:	d213      	bcs.n	80142fc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80142d4:	4643      	mov	r3, r8
 80142d6:	4639      	mov	r1, r7
 80142d8:	4620      	mov	r0, r4
 80142da:	f7ff fdef 	bl	8013ebc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80142de:	6030      	str	r0, [r6, #0]
 80142e0:	6833      	ldr	r3, [r6, #0]
 80142e2:	b143      	cbz	r3, 80142f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80142e4:	7b5a      	ldrb	r2, [r3, #13]
 80142e6:	7a9b      	ldrb	r3, [r3, #10]
 80142e8:	0052      	lsls	r2, r2, #1
 80142ea:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80142ee:	4313      	orrs	r3, r2
 80142f0:	bf0c      	ite	eq
 80142f2:	2301      	moveq	r3, #1
 80142f4:	2300      	movne	r3, #0
 80142f6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80142fa:	e7d9      	b.n	80142b0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80142fc:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8014300:	b29b      	uxth	r3, r3
 8014302:	2b7f      	cmp	r3, #127	@ 0x7f
 8014304:	d804      	bhi.n	8014310 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8014306:	4639      	mov	r1, r7
 8014308:	4620      	mov	r0, r4
 801430a:	f7ff fca1 	bl	8013c50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801430e:	e7e6      	b.n	80142de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8014310:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8014314:	2b00      	cmp	r3, #0
 8014316:	d0e3      	beq.n	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8014318:	f640 1302 	movw	r3, #2306	@ 0x902
 801431c:	429d      	cmp	r5, r3
 801431e:	d1df      	bne.n	80142e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8014320:	4601      	mov	r1, r0
 8014322:	4620      	mov	r0, r4
 8014324:	f7ff fc65 	bl	8013bf2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8014328:	e7d9      	b.n	80142de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801432a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801432a:	b510      	push	{r4, lr}
 801432c:	4604      	mov	r4, r0
 801432e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8014332:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014334:	b1f1      	cbz	r1, 8014374 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8014336:	2b0a      	cmp	r3, #10
 8014338:	d02f      	beq.n	801439a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801433a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801433c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8014340:	3901      	subs	r1, #1
 8014342:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8014344:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8014348:	1c51      	adds	r1, r2, #1
 801434a:	b289      	uxth	r1, r1
 801434c:	2901      	cmp	r1, #1
 801434e:	bf84      	itt	hi
 8014350:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8014354:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8014356:	f103 0201 	add.w	r2, r3, #1
 801435a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801435c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801435e:	bf98      	it	ls
 8014360:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8014362:	4413      	add	r3, r2
 8014364:	b29b      	uxth	r3, r3
 8014366:	2b09      	cmp	r3, #9
 8014368:	bf88      	it	hi
 801436a:	3b0a      	subhi	r3, #10
 801436c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014370:	8458      	strh	r0, [r3, #34]	@ 0x22
 8014372:	e7dc      	b.n	801432e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8014374:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014376:	2b0a      	cmp	r3, #10
 8014378:	d00f      	beq.n	801439a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801437a:	4620      	mov	r0, r4
 801437c:	f7ff fbe7 	bl	8013b4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8014380:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8014382:	1c5a      	adds	r2, r3, #1
 8014384:	8722      	strh	r2, [r4, #56]	@ 0x38
 8014386:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8014388:	4413      	add	r3, r2
 801438a:	b29b      	uxth	r3, r3
 801438c:	2b09      	cmp	r3, #9
 801438e:	bf88      	it	hi
 8014390:	3b0a      	subhi	r3, #10
 8014392:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8014396:	8458      	strh	r0, [r3, #34]	@ 0x22
 8014398:	e7ec      	b.n	8014374 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801439a:	bd10      	pop	{r4, pc}

0801439c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801439c:	b538      	push	{r3, r4, r5, lr}
 801439e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80143a0:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80143a4:	4604      	mov	r4, r0
 80143a6:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 80143a8:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 80143aa:	3a01      	subs	r2, #1
 80143ac:	8702      	strh	r2, [r0, #56]	@ 0x38
 80143ae:	1c5a      	adds	r2, r3, #1
 80143b0:	b292      	uxth	r2, r2
 80143b2:	2a09      	cmp	r2, #9
 80143b4:	bf86      	itte	hi
 80143b6:	3b09      	subhi	r3, #9
 80143b8:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 80143ba:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 80143bc:	f7ff ffb5 	bl	801432a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80143c0:	8c23      	ldrh	r3, [r4, #32]
 80143c2:	2b01      	cmp	r3, #1
 80143c4:	bf9c      	itt	ls
 80143c6:	3301      	addls	r3, #1
 80143c8:	8423      	strhls	r3, [r4, #32]
 80143ca:	8be3      	ldrh	r3, [r4, #30]
 80143cc:	b90b      	cbnz	r3, 80143d2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80143ce:	2302      	movs	r3, #2
 80143d0:	83e3      	strh	r3, [r4, #30]
 80143d2:	8be3      	ldrh	r3, [r4, #30]
 80143d4:	3b01      	subs	r3, #1
 80143d6:	b29b      	uxth	r3, r3
 80143d8:	83e3      	strh	r3, [r4, #30]
 80143da:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80143de:	4628      	mov	r0, r5
 80143e0:	8365      	strh	r5, [r4, #26]
 80143e2:	bd38      	pop	{r3, r4, r5, pc}

080143e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80143e4:	428a      	cmp	r2, r1
 80143e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80143ea:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80143ec:	d931      	bls.n	8014452 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80143ee:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80143f0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80143f4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80143f8:	19ee      	adds	r6, r5, r7
 80143fa:	1a54      	subs	r4, r2, r1
 80143fc:	3e01      	subs	r6, #1
 80143fe:	fa1f fe84 	uxth.w	lr, r4
 8014402:	b2b4      	uxth	r4, r6
 8014404:	eba4 090e 	sub.w	r9, r4, lr
 8014408:	fa1f f989 	uxth.w	r9, r9
 801440c:	2c09      	cmp	r4, #9
 801440e:	4626      	mov	r6, r4
 8014410:	bf88      	it	hi
 8014412:	f1a4 060a 	subhi.w	r6, r4, #10
 8014416:	f1bc 0f00 	cmp.w	ip, #0
 801441a:	bf08      	it	eq
 801441c:	f04f 0c02 	moveq.w	ip, #2
 8014420:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014424:	f10c 3cff 	add.w	ip, ip, #4294967295
 8014428:	fa1f fc8c 	uxth.w	ip, ip
 801442c:	3c01      	subs	r4, #1
 801442e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8014432:	b2a4      	uxth	r4, r4
 8014434:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8014438:	454c      	cmp	r4, r9
 801443a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801443e:	d1e5      	bne.n	801440c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8014440:	eba5 050e 	sub.w	r5, r5, lr
 8014444:	eb0e 0408 	add.w	r4, lr, r8
 8014448:	8705      	strh	r5, [r0, #56]	@ 0x38
 801444a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801444e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8014452:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8014454:	1a64      	subs	r4, r4, r1
 8014456:	4439      	add	r1, r7
 8014458:	b289      	uxth	r1, r1
 801445a:	2909      	cmp	r1, #9
 801445c:	bf88      	it	hi
 801445e:	390a      	subhi	r1, #10
 8014460:	8704      	strh	r4, [r0, #56]	@ 0x38
 8014462:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8014464:	250a      	movs	r5, #10
 8014466:	b18a      	cbz	r2, 801448c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8014468:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801446a:	3a01      	subs	r2, #1
 801446c:	b292      	uxth	r2, r2
 801446e:	3101      	adds	r1, #1
 8014470:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8014474:	8701      	strh	r1, [r0, #56]	@ 0x38
 8014476:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8014478:	b901      	cbnz	r1, 801447c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801447a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801447c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801447e:	3901      	subs	r1, #1
 8014480:	b289      	uxth	r1, r1
 8014482:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8014484:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8014488:	844c      	strh	r4, [r1, #34]	@ 0x22
 801448a:	e7ec      	b.n	8014466 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801448c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014490:	f7ff bf4b 	b.w	801432a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08014494 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8014494:	b570      	push	{r4, r5, r6, lr}
 8014496:	2500      	movs	r5, #0
 8014498:	4295      	cmp	r5, r2
 801449a:	d011      	beq.n	80144c0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801449c:	8bc4      	ldrh	r4, [r0, #30]
 801449e:	f831 6b02 	ldrh.w	r6, [r1], #2
 80144a2:	4414      	add	r4, r2
 80144a4:	3c01      	subs	r4, #1
 80144a6:	1b64      	subs	r4, r4, r5
 80144a8:	b2a4      	uxth	r4, r4
 80144aa:	2c01      	cmp	r4, #1
 80144ac:	bf88      	it	hi
 80144ae:	3c02      	subhi	r4, #2
 80144b0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80144b4:	8b64      	ldrh	r4, [r4, #26]
 80144b6:	42b4      	cmp	r4, r6
 80144b8:	d117      	bne.n	80144ea <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80144ba:	3501      	adds	r5, #1
 80144bc:	b2ad      	uxth	r5, r5
 80144be:	e7eb      	b.n	8014498 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80144c0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80144c4:	2400      	movs	r4, #0
 80144c6:	4413      	add	r3, r2
 80144c8:	b2a2      	uxth	r2, r4
 80144ca:	429a      	cmp	r2, r3
 80144cc:	da0f      	bge.n	80144ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80144ce:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80144d0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80144d4:	4432      	add	r2, r6
 80144d6:	b292      	uxth	r2, r2
 80144d8:	2a09      	cmp	r2, #9
 80144da:	bf88      	it	hi
 80144dc:	3a0a      	subhi	r2, #10
 80144de:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80144e2:	3401      	adds	r4, #1
 80144e4:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80144e6:	42aa      	cmp	r2, r5
 80144e8:	d0ee      	beq.n	80144c8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80144ea:	2000      	movs	r0, #0
 80144ec:	bd70      	pop	{r4, r5, r6, pc}
 80144ee:	2001      	movs	r0, #1
 80144f0:	e7fc      	b.n	80144ec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080144f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80144f2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144f6:	4605      	mov	r5, r0
 80144f8:	4616      	mov	r6, r2
 80144fa:	1c8c      	adds	r4, r1, #2
 80144fc:	8809      	ldrh	r1, [r1, #0]
 80144fe:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8014502:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8014506:	42b3      	cmp	r3, r6
 8014508:	d124      	bne.n	8014554 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801450a:	f3c1 2903 	ubfx	r9, r1, #8, #4
 801450e:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8014512:	f001 070f 	and.w	r7, r1, #15
 8014516:	f8cd 8000 	str.w	r8, [sp]
 801451a:	464b      	mov	r3, r9
 801451c:	4652      	mov	r2, sl
 801451e:	4621      	mov	r1, r4
 8014520:	4628      	mov	r0, r5
 8014522:	f7ff ffb7 	bl	8014494 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8014526:	4683      	mov	fp, r0
 8014528:	b168      	cbz	r0, 8014546 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801452a:	eb0a 0109 	add.w	r1, sl, r9
 801452e:	4441      	add	r1, r8
 8014530:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8014534:	463a      	mov	r2, r7
 8014536:	4649      	mov	r1, r9
 8014538:	4628      	mov	r0, r5
 801453a:	f7ff ff53 	bl	80143e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801453e:	4658      	mov	r0, fp
 8014540:	b003      	add	sp, #12
 8014542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014546:	eb07 010a 	add.w	r1, r7, sl
 801454a:	4449      	add	r1, r9
 801454c:	4441      	add	r1, r8
 801454e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8014552:	e7d2      	b.n	80144fa <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8014554:	f04f 0b00 	mov.w	fp, #0
 8014558:	e7f1      	b.n	801453e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801455a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801455a:	b570      	push	{r4, r5, r6, lr}
 801455c:	8810      	ldrh	r0, [r2, #0]
 801455e:	4298      	cmp	r0, r3
 8014560:	d817      	bhi.n	8014592 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014562:	1e48      	subs	r0, r1, #1
 8014564:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8014568:	4298      	cmp	r0, r3
 801456a:	d312      	bcc.n	8014592 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801456c:	2400      	movs	r4, #0
 801456e:	428c      	cmp	r4, r1
 8014570:	d20f      	bcs.n	8014592 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8014572:	1860      	adds	r0, r4, r1
 8014574:	1040      	asrs	r0, r0, #1
 8014576:	0085      	lsls	r5, r0, #2
 8014578:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801457c:	42b3      	cmp	r3, r6
 801457e:	d902      	bls.n	8014586 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8014580:	3001      	adds	r0, #1
 8014582:	b284      	uxth	r4, r0
 8014584:	e7f3      	b.n	801456e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8014586:	d201      	bcs.n	801458c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8014588:	b281      	uxth	r1, r0
 801458a:	e7f0      	b.n	801456e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801458c:	442a      	add	r2, r5
 801458e:	8850      	ldrh	r0, [r2, #2]
 8014590:	bd70      	pop	{r4, r5, r6, pc}
 8014592:	2000      	movs	r0, #0
 8014594:	e7fc      	b.n	8014590 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08014596 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8014596:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801459a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801459c:	886f      	ldrh	r7, [r5, #2]
 801459e:	4604      	mov	r4, r0
 80145a0:	087f      	lsrs	r7, r7, #1
 80145a2:	260b      	movs	r6, #11
 80145a4:	3e01      	subs	r6, #1
 80145a6:	d013      	beq.n	80145d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80145a8:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80145aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80145ae:	462a      	mov	r2, r5
 80145b0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80145b4:	4639      	mov	r1, r7
 80145b6:	4643      	mov	r3, r8
 80145b8:	4620      	mov	r0, r4
 80145ba:	f7ff ffce 	bl	801455a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80145be:	b138      	cbz	r0, 80145d0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80145c0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80145c4:	4642      	mov	r2, r8
 80145c6:	4620      	mov	r0, r4
 80145c8:	f7ff ff93 	bl	80144f2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80145cc:	2800      	cmp	r0, #0
 80145ce:	d1e9      	bne.n	80145a4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80145d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080145d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80145d4:	b570      	push	{r4, r5, r6, lr}
 80145d6:	694a      	ldr	r2, [r1, #20]
 80145d8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80145da:	684b      	ldr	r3, [r1, #4]
 80145dc:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80145de:	1b54      	subs	r4, r2, r5
 80145e0:	f000 8106 	beq.w	80147f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80145e4:	1b9b      	subs	r3, r3, r6
 80145e6:	d003      	beq.n	80145f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80145e8:	4363      	muls	r3, r4
 80145ea:	2210      	movs	r2, #16
 80145ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80145f0:	680c      	ldr	r4, [r1, #0]
 80145f2:	698a      	ldr	r2, [r1, #24]
 80145f4:	1b65      	subs	r5, r4, r5
 80145f6:	f000 80fd 	beq.w	80147f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80145fa:	1b92      	subs	r2, r2, r6
 80145fc:	d003      	beq.n	8014606 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80145fe:	436a      	muls	r2, r5
 8014600:	2410      	movs	r4, #16
 8014602:	fb92 f2f4 	sdiv	r2, r2, r4
 8014606:	1a9b      	subs	r3, r3, r2
 8014608:	ee07 3a90 	vmov	s15, r3
 801460c:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8014830 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8014610:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014614:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8014618:	ee67 7a84 	vmul.f32	s15, s15, s8
 801461c:	460a      	mov	r2, r1
 801461e:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8014622:	4603      	mov	r3, r0
 8014624:	f100 040c 	add.w	r4, r0, #12
 8014628:	eeb1 6a43 	vneg.f32	s12, s6
 801462c:	edd2 7a02 	vldr	s15, [r2, #8]
 8014630:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8014634:	3214      	adds	r2, #20
 8014636:	ece3 6a01 	vstmia	r3!, {s13}
 801463a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801463e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014642:	429c      	cmp	r4, r3
 8014644:	edc3 7a02 	vstr	s15, [r3, #8]
 8014648:	ed52 7a01 	vldr	s15, [r2, #-4]
 801464c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014650:	edc3 7a05 	vstr	s15, [r3, #20]
 8014654:	d1ea      	bne.n	801462c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8014656:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014658:	698b      	ldr	r3, [r1, #24]
 801465a:	edd0 4a02 	vldr	s9, [r0, #8]
 801465e:	edd0 3a00 	vldr	s7, [r0]
 8014662:	edd0 6a01 	vldr	s13, [r0, #4]
 8014666:	ed90 5a05 	vldr	s10, [r0, #20]
 801466a:	ed90 2a03 	vldr	s4, [r0, #12]
 801466e:	edd0 5a04 	vldr	s11, [r0, #16]
 8014672:	ed90 1a07 	vldr	s2, [r0, #28]
 8014676:	edd0 2a06 	vldr	s5, [r0, #24]
 801467a:	1a9b      	subs	r3, r3, r2
 801467c:	ee07 3a90 	vmov	s15, r3
 8014680:	684b      	ldr	r3, [r1, #4]
 8014682:	1a9b      	subs	r3, r3, r2
 8014684:	ee07 3a10 	vmov	s14, r3
 8014688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801468c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8014690:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014694:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8014698:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801469c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80146a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80146a4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80146a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80146ac:	ee32 5a45 	vsub.f32	s10, s4, s10
 80146b0:	ee67 7a83 	vmul.f32	s15, s15, s6
 80146b4:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80146b8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80146ba:	694a      	ldr	r2, [r1, #20]
 80146bc:	1b13      	subs	r3, r2, r4
 80146be:	ee07 3a10 	vmov	s14, r3
 80146c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80146c6:	680b      	ldr	r3, [r1, #0]
 80146c8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80146cc:	1b1b      	subs	r3, r3, r4
 80146ce:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80146d2:	ee07 3a10 	vmov	s14, r3
 80146d6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80146da:	ee27 7a04 	vmul.f32	s14, s14, s8
 80146de:	eee6 4a87 	vfma.f32	s9, s13, s14
 80146e2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80146e6:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80146ea:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80146ec:	698b      	ldr	r3, [r1, #24]
 80146ee:	1a9b      	subs	r3, r3, r2
 80146f0:	ee06 3a90 	vmov	s13, r3
 80146f4:	684b      	ldr	r3, [r1, #4]
 80146f6:	1a9b      	subs	r3, r3, r2
 80146f8:	ee07 3a10 	vmov	s14, r3
 80146fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014700:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014704:	ee66 6a84 	vmul.f32	s13, s13, s8
 8014708:	ee27 7a04 	vmul.f32	s14, s14, s8
 801470c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8014710:	eee5 6a87 	vfma.f32	s13, s11, s14
 8014714:	ee66 6a83 	vmul.f32	s13, s13, s6
 8014718:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 801471c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801471e:	694a      	ldr	r2, [r1, #20]
 8014720:	1b13      	subs	r3, r2, r4
 8014722:	ee07 3a10 	vmov	s14, r3
 8014726:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801472a:	680b      	ldr	r3, [r1, #0]
 801472c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014730:	1b1b      	subs	r3, r3, r4
 8014732:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8014736:	ee07 3a10 	vmov	s14, r3
 801473a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801473e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014742:	eea5 5a87 	vfma.f32	s10, s11, s14
 8014746:	edd0 5a08 	vldr	s11, [r0, #32]
 801474a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801474e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8014752:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8014756:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8014758:	698b      	ldr	r3, [r1, #24]
 801475a:	1a9b      	subs	r3, r3, r2
 801475c:	ee07 3a10 	vmov	s14, r3
 8014760:	684b      	ldr	r3, [r1, #4]
 8014762:	1a9b      	subs	r3, r3, r2
 8014764:	ee01 3a90 	vmov	s3, r3
 8014768:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801476c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8014770:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014774:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8014778:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801477c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8014780:	eea1 7a21 	vfma.f32	s14, s2, s3
 8014784:	ee27 7a03 	vmul.f32	s14, s14, s6
 8014788:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801478c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801478e:	694a      	ldr	r2, [r1, #20]
 8014790:	1b13      	subs	r3, r2, r4
 8014792:	ee03 3a10 	vmov	s6, r3
 8014796:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801479a:	680b      	ldr	r3, [r1, #0]
 801479c:	ee23 3a04 	vmul.f32	s6, s6, s8
 80147a0:	1b1b      	subs	r3, r3, r4
 80147a2:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80147a6:	ee03 3a10 	vmov	s6, r3
 80147aa:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80147ae:	ee23 4a04 	vmul.f32	s8, s6, s8
 80147b2:	eee1 5a04 	vfma.f32	s11, s2, s8
 80147b6:	ee25 6a86 	vmul.f32	s12, s11, s12
 80147ba:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80147be:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80147c2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80147c6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80147ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80147ce:	dd13      	ble.n	80147f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80147d0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80147d4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80147d8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80147da:	eee3 7a87 	vfma.f32	s15, s7, s14
 80147de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80147e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80147e6:	dd15      	ble.n	8014814 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80147e8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80147ec:	6403      	str	r3, [r0, #64]	@ 0x40
 80147ee:	bd70      	pop	{r4, r5, r6, pc}
 80147f0:	4623      	mov	r3, r4
 80147f2:	e6fd      	b.n	80145f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80147f4:	462a      	mov	r2, r5
 80147f6:	e706      	b.n	8014606 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80147f8:	d502      	bpl.n	8014800 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80147fa:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80147fe:	e7e9      	b.n	80147d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8014800:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8014804:	eea3 2a85 	vfma.f32	s4, s7, s10
 8014808:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 801480c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014810:	dade      	bge.n	80147d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8014812:	e7f2      	b.n	80147fa <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8014814:	d502      	bpl.n	801481c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8014816:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801481a:	e7e7      	b.n	80147ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 801481c:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014820:	eee3 4a86 	vfma.f32	s9, s7, s12
 8014824:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014828:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801482c:	dadc      	bge.n	80147e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801482e:	e7f2      	b.n	8014816 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014830:	3d800000 	.word	0x3d800000

08014834 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8014834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014838:	2714      	movs	r7, #20
 801483a:	435f      	muls	r7, r3
 801483c:	eb02 0c07 	add.w	ip, r2, r7
 8014840:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8014844:	f115 0e0f 	adds.w	lr, r5, #15
 8014848:	f100 80a2 	bmi.w	8014990 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801484c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014850:	9c08      	ldr	r4, [sp, #32]
 8014852:	f8c0 e014 	str.w	lr, [r0, #20]
 8014856:	2614      	movs	r6, #20
 8014858:	4366      	muls	r6, r4
 801485a:	eb02 0806 	add.w	r8, r2, r6
 801485e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8014862:	f115 040f 	adds.w	r4, r5, #15
 8014866:	f100 809f 	bmi.w	80149a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801486a:	1124      	asrs	r4, r4, #4
 801486c:	eba4 040e 	sub.w	r4, r4, lr
 8014870:	6184      	str	r4, [r0, #24]
 8014872:	2c00      	cmp	r4, #0
 8014874:	f000 808a 	beq.w	801498c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8014878:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801487c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014880:	5995      	ldr	r5, [r2, r6]
 8014882:	eba4 0809 	sub.w	r8, r4, r9
 8014886:	59d4      	ldr	r4, [r2, r7]
 8014888:	eba5 0a04 	sub.w	sl, r5, r4
 801488c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8014890:	fb0e fe05 	mul.w	lr, lr, r5
 8014894:	fb0a ee19 	mls	lr, sl, r9, lr
 8014898:	fb08 e404 	mla	r4, r8, r4, lr
 801489c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80148a0:	3c01      	subs	r4, #1
 80148a2:	19a4      	adds	r4, r4, r6
 80148a4:	f100 808c 	bmi.w	80149c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80148a8:	fb94 fef6 	sdiv	lr, r4, r6
 80148ac:	f8c0 e000 	str.w	lr, [r0]
 80148b0:	fb06 441e 	mls	r4, r6, lr, r4
 80148b4:	6104      	str	r4, [r0, #16]
 80148b6:	2d00      	cmp	r5, #0
 80148b8:	f2c0 8095 	blt.w	80149e6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80148bc:	fb95 f4f6 	sdiv	r4, r5, r6
 80148c0:	6044      	str	r4, [r0, #4]
 80148c2:	fb06 5514 	mls	r5, r6, r4, r5
 80148c6:	6085      	str	r5, [r0, #8]
 80148c8:	60c6      	str	r6, [r0, #12]
 80148ca:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80148ce:	6945      	ldr	r5, [r0, #20]
 80148d0:	59d2      	ldr	r2, [r2, r7]
 80148d2:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8014a08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80148d6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80148da:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80148de:	ee07 4a10 	vmov	s14, r4
 80148e2:	6804      	ldr	r4, [r0, #0]
 80148e4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80148e8:	ee07 2a90 	vmov	s15, r2
 80148ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80148f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80148f4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80148f8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80148fc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014900:	edd3 6a00 	vldr	s13, [r3]
 8014904:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014908:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 801490c:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014910:	edc0 6a07 	vstr	s13, [r0, #28]
 8014914:	edd0 6a01 	vldr	s13, [r0, #4]
 8014918:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 801491c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8014920:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8014924:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014928:	ed80 6a08 	vstr	s12, [r0, #32]
 801492c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 801492e:	6242      	str	r2, [r0, #36]	@ 0x24
 8014930:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8014934:	ed93 6a03 	vldr	s12, [r3, #12]
 8014938:	eea5 6a87 	vfma.f32	s12, s11, s14
 801493c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8014940:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8014944:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8014948:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 801494c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8014950:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014954:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8014958:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801495a:	6302      	str	r2, [r0, #48]	@ 0x30
 801495c:	ed93 6a06 	vldr	s12, [r3, #24]
 8014960:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8014964:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014968:	eeb0 7a46 	vmov.f32	s14, s12
 801496c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8014970:	eea6 7a27 	vfma.f32	s14, s12, s15
 8014974:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8014978:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 801497c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8014980:	eee6 7a87 	vfma.f32	s15, s13, s14
 8014984:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8014988:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801498a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 801498c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014990:	f1c5 0501 	rsb	r5, r5, #1
 8014994:	f015 050f 	ands.w	r5, r5, #15
 8014998:	bf18      	it	ne
 801499a:	2501      	movne	r5, #1
 801499c:	2410      	movs	r4, #16
 801499e:	fb9e fef4 	sdiv	lr, lr, r4
 80149a2:	ebae 0e05 	sub.w	lr, lr, r5
 80149a6:	e753      	b.n	8014850 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80149a8:	f1c5 0501 	rsb	r5, r5, #1
 80149ac:	f015 050f 	ands.w	r5, r5, #15
 80149b0:	bf18      	it	ne
 80149b2:	2501      	movne	r5, #1
 80149b4:	f04f 0910 	mov.w	r9, #16
 80149b8:	fb94 f4f9 	sdiv	r4, r4, r9
 80149bc:	1b64      	subs	r4, r4, r5
 80149be:	e755      	b.n	801486c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80149c0:	4264      	negs	r4, r4
 80149c2:	fb94 fef6 	sdiv	lr, r4, r6
 80149c6:	f1ce 0800 	rsb	r8, lr, #0
 80149ca:	fb06 441e 	mls	r4, r6, lr, r4
 80149ce:	f8c0 8000 	str.w	r8, [r0]
 80149d2:	6104      	str	r4, [r0, #16]
 80149d4:	2c00      	cmp	r4, #0
 80149d6:	f43f af6e 	beq.w	80148b6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80149da:	ea6f 0e0e 	mvn.w	lr, lr
 80149de:	f8c0 e000 	str.w	lr, [r0]
 80149e2:	1b34      	subs	r4, r6, r4
 80149e4:	e766      	b.n	80148b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80149e6:	426d      	negs	r5, r5
 80149e8:	fb95 f4f6 	sdiv	r4, r5, r6
 80149ec:	f1c4 0e00 	rsb	lr, r4, #0
 80149f0:	fb06 5514 	mls	r5, r6, r4, r5
 80149f4:	f8c0 e004 	str.w	lr, [r0, #4]
 80149f8:	6085      	str	r5, [r0, #8]
 80149fa:	2d00      	cmp	r5, #0
 80149fc:	f43f af64 	beq.w	80148c8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8014a00:	43e4      	mvns	r4, r4
 8014a02:	6044      	str	r4, [r0, #4]
 8014a04:	1b75      	subs	r5, r6, r5
 8014a06:	e75e      	b.n	80148c6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8014a08:	3d800000 	.word	0x3d800000

08014a0c <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014a0c:	4602      	mov	r2, r0
 8014a0e:	b148      	cbz	r0, 8014a24 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014a10:	2300      	movs	r3, #0
 8014a12:	b298      	uxth	r0, r3
 8014a14:	3301      	adds	r3, #1
 8014a16:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014a1a:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014a1e:	2900      	cmp	r1, #0
 8014a20:	d1f7      	bne.n	8014a12 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8014a22:	4770      	bx	lr
 8014a24:	4770      	bx	lr

08014a26 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8014a26:	b530      	push	{r4, r5, lr}
 8014a28:	4604      	mov	r4, r0
 8014a2a:	b159      	cbz	r1, 8014a44 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014a2c:	b148      	cbz	r0, 8014a42 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014a2e:	2300      	movs	r3, #0
 8014a30:	b298      	uxth	r0, r3
 8014a32:	4282      	cmp	r2, r0
 8014a34:	d905      	bls.n	8014a42 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014a36:	5ccd      	ldrb	r5, [r1, r3]
 8014a38:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014a3c:	3301      	adds	r3, #1
 8014a3e:	2d00      	cmp	r5, #0
 8014a40:	d1f6      	bne.n	8014a30 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8014a42:	bd30      	pop	{r4, r5, pc}
 8014a44:	4608      	mov	r0, r1
 8014a46:	e7fc      	b.n	8014a42 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08014a48 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8014a48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014a4a:	b08b      	sub	sp, #44	@ 0x2c
 8014a4c:	468c      	mov	ip, r1
 8014a4e:	2100      	movs	r1, #0
 8014a50:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8014a54:	4604      	mov	r4, r0
 8014a56:	261f      	movs	r6, #31
 8014a58:	af01      	add	r7, sp, #4
 8014a5a:	fb94 fef3 	sdiv	lr, r4, r3
 8014a5e:	fb03 441e 	mls	r4, r3, lr, r4
 8014a62:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8014a66:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8014a6a:	b2ec      	uxtb	r4, r5
 8014a6c:	2d09      	cmp	r5, #9
 8014a6e:	bfd4      	ite	le
 8014a70:	3430      	addle	r4, #48	@ 0x30
 8014a72:	3457      	addgt	r4, #87	@ 0x57
 8014a74:	b2e4      	uxtb	r4, r4
 8014a76:	55bc      	strb	r4, [r7, r6]
 8014a78:	4674      	mov	r4, lr
 8014a7a:	1e71      	subs	r1, r6, #1
 8014a7c:	b974      	cbnz	r4, 8014a9c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8014a7e:	2800      	cmp	r0, #0
 8014a80:	da05      	bge.n	8014a8e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8014a82:	ab0a      	add	r3, sp, #40	@ 0x28
 8014a84:	4419      	add	r1, r3
 8014a86:	232d      	movs	r3, #45	@ 0x2d
 8014a88:	f801 3c24 	strb.w	r3, [r1, #-36]
 8014a8c:	1eb1      	subs	r1, r6, #2
 8014a8e:	3101      	adds	r1, #1
 8014a90:	4439      	add	r1, r7
 8014a92:	4660      	mov	r0, ip
 8014a94:	f7ff ffc7 	bl	8014a26 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014a98:	b00b      	add	sp, #44	@ 0x2c
 8014a9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014a9c:	460e      	mov	r6, r1
 8014a9e:	e7dc      	b.n	8014a5a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08014aa0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8014aa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014aa2:	b08b      	sub	sp, #44	@ 0x2c
 8014aa4:	468c      	mov	ip, r1
 8014aa6:	2100      	movs	r1, #0
 8014aa8:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8014aac:	ae01      	add	r6, sp, #4
 8014aae:	211f      	movs	r1, #31
 8014ab0:	fbb0 f7f3 	udiv	r7, r0, r3
 8014ab4:	fb03 0517 	mls	r5, r3, r7, r0
 8014ab8:	b2ec      	uxtb	r4, r5
 8014aba:	2d09      	cmp	r5, #9
 8014abc:	bfd4      	ite	le
 8014abe:	3430      	addle	r4, #48	@ 0x30
 8014ac0:	3457      	addgt	r4, #87	@ 0x57
 8014ac2:	b2e4      	uxtb	r4, r4
 8014ac4:	558c      	strb	r4, [r1, r6]
 8014ac6:	4638      	mov	r0, r7
 8014ac8:	1e4c      	subs	r4, r1, #1
 8014aca:	b92f      	cbnz	r7, 8014ad8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8014acc:	4431      	add	r1, r6
 8014ace:	4660      	mov	r0, ip
 8014ad0:	f7ff ffa9 	bl	8014a26 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014ad4:	b00b      	add	sp, #44	@ 0x2c
 8014ad6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014ad8:	4621      	mov	r1, r4
 8014ada:	e7e9      	b.n	8014ab0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08014adc <_ZN8touchgfx7Unicode4itoaElPtti>:
 8014adc:	b410      	push	{r4}
 8014ade:	b131      	cbz	r1, 8014aee <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8014ae0:	1e9c      	subs	r4, r3, #2
 8014ae2:	2c22      	cmp	r4, #34	@ 0x22
 8014ae4:	d803      	bhi.n	8014aee <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8014ae6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014aea:	f7ff bfad 	b.w	8014a48 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8014aee:	f85d 4b04 	ldr.w	r4, [sp], #4
 8014af2:	4770      	bx	lr

08014af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8014af4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014af8:	4691      	mov	r9, r2
 8014afa:	b085      	sub	sp, #20
 8014afc:	6802      	ldr	r2, [r0, #0]
 8014afe:	9201      	str	r2, [sp, #4]
 8014b00:	4688      	mov	r8, r1
 8014b02:	4683      	mov	fp, r0
 8014b04:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8014b08:	9103      	str	r1, [sp, #12]
 8014b0a:	4610      	mov	r0, r2
 8014b0c:	461c      	mov	r4, r3
 8014b0e:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8014b12:	9302      	str	r3, [sp, #8]
 8014b14:	f7ff ff7a 	bl	8014a0c <_ZN8touchgfx7Unicode6strlenEPKt>
 8014b18:	f1b8 0f00 	cmp.w	r8, #0
 8014b1c:	bf0c      	ite	eq
 8014b1e:	4684      	moveq	ip, r0
 8014b20:	f100 0c01 	addne.w	ip, r0, #1
 8014b24:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8014b28:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8014b2c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014b2e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014b30:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8014b34:	9903      	ldr	r1, [sp, #12]
 8014b36:	fa1f fc8c 	uxth.w	ip, ip
 8014b3a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8014b3e:	d041      	beq.n	8014bc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014b40:	d834      	bhi.n	8014bac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8014b42:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8014b46:	d059      	beq.n	8014bfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014b48:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8014b4c:	d03a      	beq.n	8014bc4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8014b4e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8014b52:	d034      	beq.n	8014bbe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014b54:	2400      	movs	r4, #0
 8014b56:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8014b5a:	3a01      	subs	r2, #1
 8014b5c:	b169      	cbz	r1, 8014b7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014b5e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8014b60:	458c      	cmp	ip, r1
 8014b62:	da09      	bge.n	8014b78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014b64:	eba1 010c 	sub.w	r1, r1, ip
 8014b68:	b289      	uxth	r1, r1
 8014b6a:	b933      	cbnz	r3, 8014b7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014b6c:	2e00      	cmp	r6, #0
 8014b6e:	d051      	beq.n	8014c14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014b70:	2800      	cmp	r0, #0
 8014b72:	d04f      	beq.n	8014c14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014b74:	440c      	add	r4, r1
 8014b76:	b2a4      	uxth	r4, r4
 8014b78:	2100      	movs	r1, #0
 8014b7a:	682b      	ldr	r3, [r5, #0]
 8014b7c:	4293      	cmp	r3, r2
 8014b7e:	da07      	bge.n	8014b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8014b80:	f1b8 0f00 	cmp.w	r8, #0
 8014b84:	d004      	beq.n	8014b90 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8014b86:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8014b8a:	682b      	ldr	r3, [r5, #0]
 8014b8c:	3301      	adds	r3, #1
 8014b8e:	602b      	str	r3, [r5, #0]
 8014b90:	2730      	movs	r7, #48	@ 0x30
 8014b92:	2c00      	cmp	r4, #0
 8014b94:	d04e      	beq.n	8014c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014b96:	682e      	ldr	r6, [r5, #0]
 8014b98:	3c01      	subs	r4, #1
 8014b9a:	42b2      	cmp	r2, r6
 8014b9c:	b2a4      	uxth	r4, r4
 8014b9e:	dd49      	ble.n	8014c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014ba0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014ba4:	682b      	ldr	r3, [r5, #0]
 8014ba6:	3301      	adds	r3, #1
 8014ba8:	602b      	str	r3, [r5, #0]
 8014baa:	e7f2      	b.n	8014b92 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8014bac:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8014bb0:	d01d      	beq.n	8014bee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8014bb2:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8014bb6:	d002      	beq.n	8014bbe <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014bb8:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8014bbc:	e7c9      	b.n	8014b52 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8014bbe:	4684      	mov	ip, r0
 8014bc0:	f04f 0800 	mov.w	r8, #0
 8014bc4:	2c00      	cmp	r4, #0
 8014bc6:	d0c6      	beq.n	8014b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014bc8:	b947      	cbnz	r7, 8014bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8014bca:	2801      	cmp	r0, #1
 8014bcc:	d106      	bne.n	8014bdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8014bce:	8814      	ldrh	r4, [r2, #0]
 8014bd0:	2c30      	cmp	r4, #48	@ 0x30
 8014bd2:	bf02      	ittt	eq
 8014bd4:	3202      	addeq	r2, #2
 8014bd6:	f8cb 2000 	streq.w	r2, [fp]
 8014bda:	4638      	moveq	r0, r7
 8014bdc:	45bc      	cmp	ip, r7
 8014bde:	da14      	bge.n	8014c0a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8014be0:	b2bf      	uxth	r7, r7
 8014be2:	eba7 040c 	sub.w	r4, r7, ip
 8014be6:	b2a4      	uxth	r4, r4
 8014be8:	46bc      	mov	ip, r7
 8014bea:	2600      	movs	r6, #0
 8014bec:	e7b3      	b.n	8014b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014bee:	4684      	mov	ip, r0
 8014bf0:	b16c      	cbz	r4, 8014c0e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8014bf2:	42b8      	cmp	r0, r7
 8014bf4:	dd00      	ble.n	8014bf8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8014bf6:	b2b8      	uxth	r0, r7
 8014bf8:	2400      	movs	r4, #0
 8014bfa:	e003      	b.n	8014c04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8014bfc:	f04f 0c01 	mov.w	ip, #1
 8014c00:	2400      	movs	r4, #0
 8014c02:	4660      	mov	r0, ip
 8014c04:	4626      	mov	r6, r4
 8014c06:	46a0      	mov	r8, r4
 8014c08:	e7a5      	b.n	8014b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014c0a:	2400      	movs	r4, #0
 8014c0c:	e7ed      	b.n	8014bea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8014c0e:	4626      	mov	r6, r4
 8014c10:	46a0      	mov	r8, r4
 8014c12:	e7a0      	b.n	8014b56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014c14:	2900      	cmp	r1, #0
 8014c16:	d0b0      	beq.n	8014b7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014c18:	2720      	movs	r7, #32
 8014c1a:	682e      	ldr	r6, [r5, #0]
 8014c1c:	2900      	cmp	r1, #0
 8014c1e:	d0ac      	beq.n	8014b7a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014c20:	3901      	subs	r1, #1
 8014c22:	4296      	cmp	r6, r2
 8014c24:	b289      	uxth	r1, r1
 8014c26:	daa7      	bge.n	8014b78 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014c28:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014c2c:	682b      	ldr	r3, [r5, #0]
 8014c2e:	3301      	adds	r3, #1
 8014c30:	602b      	str	r3, [r5, #0]
 8014c32:	e7f2      	b.n	8014c1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8014c34:	b188      	cbz	r0, 8014c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014c36:	682b      	ldr	r3, [r5, #0]
 8014c38:	3801      	subs	r0, #1
 8014c3a:	429a      	cmp	r2, r3
 8014c3c:	b280      	uxth	r0, r0
 8014c3e:	dd0c      	ble.n	8014c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014c40:	f8db 3000 	ldr.w	r3, [fp]
 8014c44:	1c9c      	adds	r4, r3, #2
 8014c46:	f8cb 4000 	str.w	r4, [fp]
 8014c4a:	881c      	ldrh	r4, [r3, #0]
 8014c4c:	682b      	ldr	r3, [r5, #0]
 8014c4e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8014c52:	682b      	ldr	r3, [r5, #0]
 8014c54:	3301      	adds	r3, #1
 8014c56:	602b      	str	r3, [r5, #0]
 8014c58:	e7ec      	b.n	8014c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014c5a:	2620      	movs	r6, #32
 8014c5c:	b151      	cbz	r1, 8014c74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014c5e:	6828      	ldr	r0, [r5, #0]
 8014c60:	3901      	subs	r1, #1
 8014c62:	4282      	cmp	r2, r0
 8014c64:	b289      	uxth	r1, r1
 8014c66:	dd05      	ble.n	8014c74 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014c68:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8014c6c:	682b      	ldr	r3, [r5, #0]
 8014c6e:	3301      	adds	r3, #1
 8014c70:	602b      	str	r3, [r5, #0]
 8014c72:	e7f3      	b.n	8014c5c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8014c74:	b005      	add	sp, #20
 8014c76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8014c7a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014c7e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8014c82:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8014c86:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8014c8a:	2400      	movs	r4, #0
 8014c8c:	8014      	strh	r4, [r2, #0]
 8014c8e:	701c      	strb	r4, [r3, #0]
 8014c90:	f888 4000 	strb.w	r4, [r8]
 8014c94:	f88c 4000 	strb.w	r4, [ip]
 8014c98:	f88e 4000 	strb.w	r4, [lr]
 8014c9c:	703c      	strb	r4, [r7, #0]
 8014c9e:	6804      	ldr	r4, [r0, #0]
 8014ca0:	b1a4      	cbz	r4, 8014ccc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8014ca2:	8824      	ldrh	r4, [r4, #0]
 8014ca4:	f04f 0901 	mov.w	r9, #1
 8014ca8:	b314      	cbz	r4, 8014cf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014caa:	2c2b      	cmp	r4, #43	@ 0x2b
 8014cac:	d001      	beq.n	8014cb2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8014cae:	2c20      	cmp	r4, #32
 8014cb0:	d110      	bne.n	8014cd4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8014cb2:	8014      	strh	r4, [r2, #0]
 8014cb4:	6804      	ldr	r4, [r0, #0]
 8014cb6:	b10c      	cbz	r4, 8014cbc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8014cb8:	3402      	adds	r4, #2
 8014cba:	6004      	str	r4, [r0, #0]
 8014cbc:	680c      	ldr	r4, [r1, #0]
 8014cbe:	b10c      	cbz	r4, 8014cc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8014cc0:	3401      	adds	r4, #1
 8014cc2:	600c      	str	r4, [r1, #0]
 8014cc4:	6804      	ldr	r4, [r0, #0]
 8014cc6:	b17c      	cbz	r4, 8014ce8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8014cc8:	8824      	ldrh	r4, [r4, #0]
 8014cca:	e7ed      	b.n	8014ca8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014ccc:	680c      	ldr	r4, [r1, #0]
 8014cce:	b17c      	cbz	r4, 8014cf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014cd0:	7824      	ldrb	r4, [r4, #0]
 8014cd2:	e7e7      	b.n	8014ca4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8014cd4:	2c2d      	cmp	r4, #45	@ 0x2d
 8014cd6:	d102      	bne.n	8014cde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8014cd8:	f883 9000 	strb.w	r9, [r3]
 8014cdc:	e7ea      	b.n	8014cb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014cde:	2c23      	cmp	r4, #35	@ 0x23
 8014ce0:	d107      	bne.n	8014cf2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8014ce2:	f888 9000 	strb.w	r9, [r8]
 8014ce6:	e7e5      	b.n	8014cb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014ce8:	680c      	ldr	r4, [r1, #0]
 8014cea:	b10c      	cbz	r4, 8014cf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014cec:	7824      	ldrb	r4, [r4, #0]
 8014cee:	e7db      	b.n	8014ca8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014cf0:	2400      	movs	r4, #0
 8014cf2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8014cf6:	2b09      	cmp	r3, #9
 8014cf8:	d901      	bls.n	8014cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8014cfa:	2c2a      	cmp	r4, #42	@ 0x2a
 8014cfc:	d122      	bne.n	8014d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014cfe:	2301      	movs	r3, #1
 8014d00:	2c30      	cmp	r4, #48	@ 0x30
 8014d02:	f88e 3000 	strb.w	r3, [lr]
 8014d06:	d10d      	bne.n	8014d24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014d08:	f88c 3000 	strb.w	r3, [ip]
 8014d0c:	6803      	ldr	r3, [r0, #0]
 8014d0e:	b10b      	cbz	r3, 8014d14 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8014d10:	3302      	adds	r3, #2
 8014d12:	6003      	str	r3, [r0, #0]
 8014d14:	680b      	ldr	r3, [r1, #0]
 8014d16:	b10b      	cbz	r3, 8014d1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8014d18:	3301      	adds	r3, #1
 8014d1a:	600b      	str	r3, [r1, #0]
 8014d1c:	6803      	ldr	r3, [r0, #0]
 8014d1e:	2b00      	cmp	r3, #0
 8014d20:	d02f      	beq.n	8014d82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8014d22:	881c      	ldrh	r4, [r3, #0]
 8014d24:	2c2a      	cmp	r4, #42	@ 0x2a
 8014d26:	d135      	bne.n	8014d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014d28:	f04f 33ff 	mov.w	r3, #4294967295
 8014d2c:	6033      	str	r3, [r6, #0]
 8014d2e:	6803      	ldr	r3, [r0, #0]
 8014d30:	b10b      	cbz	r3, 8014d36 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8014d32:	3302      	adds	r3, #2
 8014d34:	6003      	str	r3, [r0, #0]
 8014d36:	680b      	ldr	r3, [r1, #0]
 8014d38:	b10b      	cbz	r3, 8014d3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014d3a:	3301      	adds	r3, #1
 8014d3c:	600b      	str	r3, [r1, #0]
 8014d3e:	6803      	ldr	r3, [r0, #0]
 8014d40:	b31b      	cbz	r3, 8014d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8014d42:	881c      	ldrh	r4, [r3, #0]
 8014d44:	2c2e      	cmp	r4, #46	@ 0x2e
 8014d46:	d11a      	bne.n	8014d7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014d48:	2301      	movs	r3, #1
 8014d4a:	703b      	strb	r3, [r7, #0]
 8014d4c:	6803      	ldr	r3, [r0, #0]
 8014d4e:	b10b      	cbz	r3, 8014d54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8014d50:	3302      	adds	r3, #2
 8014d52:	6003      	str	r3, [r0, #0]
 8014d54:	680b      	ldr	r3, [r1, #0]
 8014d56:	b10b      	cbz	r3, 8014d5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014d58:	3301      	adds	r3, #1
 8014d5a:	600b      	str	r3, [r1, #0]
 8014d5c:	6803      	ldr	r3, [r0, #0]
 8014d5e:	2b00      	cmp	r3, #0
 8014d60:	d036      	beq.n	8014dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8014d62:	881b      	ldrh	r3, [r3, #0]
 8014d64:	2b2a      	cmp	r3, #42	@ 0x2a
 8014d66:	d137      	bne.n	8014dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014d68:	f04f 33ff 	mov.w	r3, #4294967295
 8014d6c:	602b      	str	r3, [r5, #0]
 8014d6e:	6803      	ldr	r3, [r0, #0]
 8014d70:	b10b      	cbz	r3, 8014d76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8014d72:	3302      	adds	r3, #2
 8014d74:	6003      	str	r3, [r0, #0]
 8014d76:	680b      	ldr	r3, [r1, #0]
 8014d78:	b10b      	cbz	r3, 8014d7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014d7a:	3301      	adds	r3, #1
 8014d7c:	600b      	str	r3, [r1, #0]
 8014d7e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014d82:	680c      	ldr	r4, [r1, #0]
 8014d84:	b134      	cbz	r4, 8014d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014d86:	7824      	ldrb	r4, [r4, #0]
 8014d88:	e7cc      	b.n	8014d24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014d8a:	680b      	ldr	r3, [r1, #0]
 8014d8c:	2b00      	cmp	r3, #0
 8014d8e:	d0f6      	beq.n	8014d7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014d90:	781c      	ldrb	r4, [r3, #0]
 8014d92:	e7d7      	b.n	8014d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014d94:	2300      	movs	r3, #0
 8014d96:	6033      	str	r3, [r6, #0]
 8014d98:	220a      	movs	r2, #10
 8014d9a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8014d9e:	fa1f f38c 	uxth.w	r3, ip
 8014da2:	2b09      	cmp	r3, #9
 8014da4:	d8ce      	bhi.n	8014d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014da6:	6833      	ldr	r3, [r6, #0]
 8014da8:	fb02 c303 	mla	r3, r2, r3, ip
 8014dac:	6033      	str	r3, [r6, #0]
 8014dae:	6803      	ldr	r3, [r0, #0]
 8014db0:	b10b      	cbz	r3, 8014db6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8014db2:	3302      	adds	r3, #2
 8014db4:	6003      	str	r3, [r0, #0]
 8014db6:	680b      	ldr	r3, [r1, #0]
 8014db8:	b10b      	cbz	r3, 8014dbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8014dba:	3301      	adds	r3, #1
 8014dbc:	600b      	str	r3, [r1, #0]
 8014dbe:	6803      	ldr	r3, [r0, #0]
 8014dc0:	b10b      	cbz	r3, 8014dc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8014dc2:	881c      	ldrh	r4, [r3, #0]
 8014dc4:	e7e9      	b.n	8014d9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014dc6:	680c      	ldr	r4, [r1, #0]
 8014dc8:	2c00      	cmp	r4, #0
 8014dca:	d0e6      	beq.n	8014d9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014dcc:	7824      	ldrb	r4, [r4, #0]
 8014dce:	e7e4      	b.n	8014d9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014dd0:	680b      	ldr	r3, [r1, #0]
 8014dd2:	b10b      	cbz	r3, 8014dd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014dd4:	781b      	ldrb	r3, [r3, #0]
 8014dd6:	e7c5      	b.n	8014d64 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8014dd8:	2200      	movs	r2, #0
 8014dda:	602a      	str	r2, [r5, #0]
 8014ddc:	240a      	movs	r4, #10
 8014dde:	3b30      	subs	r3, #48	@ 0x30
 8014de0:	b29e      	uxth	r6, r3
 8014de2:	2e09      	cmp	r6, #9
 8014de4:	682a      	ldr	r2, [r5, #0]
 8014de6:	d813      	bhi.n	8014e10 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8014de8:	fb04 3302 	mla	r3, r4, r2, r3
 8014dec:	602b      	str	r3, [r5, #0]
 8014dee:	6803      	ldr	r3, [r0, #0]
 8014df0:	b10b      	cbz	r3, 8014df6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8014df2:	3302      	adds	r3, #2
 8014df4:	6003      	str	r3, [r0, #0]
 8014df6:	680b      	ldr	r3, [r1, #0]
 8014df8:	b10b      	cbz	r3, 8014dfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8014dfa:	3301      	adds	r3, #1
 8014dfc:	600b      	str	r3, [r1, #0]
 8014dfe:	6803      	ldr	r3, [r0, #0]
 8014e00:	b10b      	cbz	r3, 8014e06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8014e02:	881b      	ldrh	r3, [r3, #0]
 8014e04:	e7eb      	b.n	8014dde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014e06:	680b      	ldr	r3, [r1, #0]
 8014e08:	2b00      	cmp	r3, #0
 8014e0a:	d0e8      	beq.n	8014dde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014e0c:	781b      	ldrb	r3, [r3, #0]
 8014e0e:	e7e6      	b.n	8014dde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014e10:	2a06      	cmp	r2, #6
 8014e12:	bfa8      	it	ge
 8014e14:	2206      	movge	r2, #6
 8014e16:	602a      	str	r2, [r5, #0]
 8014e18:	e7b1      	b.n	8014d7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08014e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8014e1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e1e:	b0a3      	sub	sp, #140	@ 0x8c
 8014e20:	2600      	movs	r6, #0
 8014e22:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8014e26:	4607      	mov	r7, r0
 8014e28:	4688      	mov	r8, r1
 8014e2a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8014e2e:	4631      	mov	r1, r6
 8014e30:	2242      	movs	r2, #66	@ 0x42
 8014e32:	4648      	mov	r0, r9
 8014e34:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8014e36:	960d      	str	r6, [sp, #52]	@ 0x34
 8014e38:	f00f f9a1 	bl	802417e <memset>
 8014e3c:	b15f      	cbz	r7, 8014e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8014e3e:	f108 3aff 	add.w	sl, r8, #4294967295
 8014e42:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014e44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014e46:	b152      	cbz	r2, 8014e5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014e48:	8812      	ldrh	r2, [r2, #0]
 8014e4a:	b10a      	cbz	r2, 8014e50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014e4c:	459a      	cmp	sl, r3
 8014e4e:	dc2e      	bgt.n	8014eae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8014e50:	2200      	movs	r2, #0
 8014e52:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014e56:	4638      	mov	r0, r7
 8014e58:	b023      	add	sp, #140	@ 0x8c
 8014e5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e5e:	9a08      	ldr	r2, [sp, #32]
 8014e60:	2a00      	cmp	r2, #0
 8014e62:	d0f5      	beq.n	8014e50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014e64:	7812      	ldrb	r2, [r2, #0]
 8014e66:	e7f0      	b.n	8014e4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014e68:	2d00      	cmp	r5, #0
 8014e6a:	d0ea      	beq.n	8014e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014e6c:	782a      	ldrb	r2, [r5, #0]
 8014e6e:	b142      	cbz	r2, 8014e82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8014e70:	2a25      	cmp	r2, #37	@ 0x25
 8014e72:	d001      	beq.n	8014e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8014e74:	459a      	cmp	sl, r3
 8014e76:	dc08      	bgt.n	8014e8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014e78:	f1bb 0f00 	cmp.w	fp, #0
 8014e7c:	d121      	bne.n	8014ec2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8014e7e:	2d00      	cmp	r5, #0
 8014e80:	d0df      	beq.n	8014e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014e82:	782a      	ldrb	r2, [r5, #0]
 8014e84:	f04f 0b00 	mov.w	fp, #0
 8014e88:	e01d      	b.n	8014ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014e8a:	f1bb 0f00 	cmp.w	fp, #0
 8014e8e:	d078      	beq.n	8014f82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8014e90:	f8bb 2000 	ldrh.w	r2, [fp]
 8014e94:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014e98:	f1bb 0f00 	cmp.w	fp, #0
 8014e9c:	d002      	beq.n	8014ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8014e9e:	f10b 0202 	add.w	r2, fp, #2
 8014ea2:	9209      	str	r2, [sp, #36]	@ 0x24
 8014ea4:	b10d      	cbz	r5, 8014eaa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8014ea6:	3501      	adds	r5, #1
 8014ea8:	9508      	str	r5, [sp, #32]
 8014eaa:	3301      	adds	r3, #1
 8014eac:	930d      	str	r3, [sp, #52]	@ 0x34
 8014eae:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8014eb2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014eb4:	f1bb 0f00 	cmp.w	fp, #0
 8014eb8:	d0d6      	beq.n	8014e68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8014eba:	f8bb 2000 	ldrh.w	r2, [fp]
 8014ebe:	2a00      	cmp	r2, #0
 8014ec0:	d1d6      	bne.n	8014e70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8014ec2:	f8bb 2000 	ldrh.w	r2, [fp]
 8014ec6:	2a00      	cmp	r2, #0
 8014ec8:	d0bb      	beq.n	8014e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014eca:	459a      	cmp	sl, r3
 8014ecc:	ddb9      	ble.n	8014e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014ece:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8014ed2:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8014ed6:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8014eda:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8014ede:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8014ee2:	960e      	str	r6, [sp, #56]	@ 0x38
 8014ee4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8014ee8:	960f      	str	r6, [sp, #60]	@ 0x3c
 8014eea:	f1bb 0f00 	cmp.w	fp, #0
 8014eee:	d002      	beq.n	8014ef6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8014ef0:	f10b 0302 	add.w	r3, fp, #2
 8014ef4:	9309      	str	r3, [sp, #36]	@ 0x24
 8014ef6:	b10d      	cbz	r5, 8014efc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8014ef8:	1c6b      	adds	r3, r5, #1
 8014efa:	9308      	str	r3, [sp, #32]
 8014efc:	ab0f      	add	r3, sp, #60	@ 0x3c
 8014efe:	9305      	str	r3, [sp, #20]
 8014f00:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8014f04:	9304      	str	r3, [sp, #16]
 8014f06:	ab0e      	add	r3, sp, #56	@ 0x38
 8014f08:	9303      	str	r3, [sp, #12]
 8014f0a:	ab0c      	add	r3, sp, #48	@ 0x30
 8014f0c:	9302      	str	r3, [sp, #8]
 8014f0e:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8014f12:	9301      	str	r3, [sp, #4]
 8014f14:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8014f18:	9300      	str	r3, [sp, #0]
 8014f1a:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8014f1e:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8014f22:	a908      	add	r1, sp, #32
 8014f24:	a809      	add	r0, sp, #36	@ 0x24
 8014f26:	f7ff fea8 	bl	8014c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014f2a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014f2c:	2b00      	cmp	r3, #0
 8014f2e:	bfbe      	ittt	lt
 8014f30:	6823      	ldrlt	r3, [r4, #0]
 8014f32:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014f36:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8014f38:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014f3a:	bfb8      	it	lt
 8014f3c:	3404      	addlt	r4, #4
 8014f3e:	2b00      	cmp	r3, #0
 8014f40:	bfb8      	it	lt
 8014f42:	6823      	ldrlt	r3, [r4, #0]
 8014f44:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014f48:	bfbe      	ittt	lt
 8014f4a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014f4e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8014f50:	3404      	addlt	r4, #4
 8014f52:	b1d9      	cbz	r1, 8014f8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8014f54:	880b      	ldrh	r3, [r1, #0]
 8014f56:	2b69      	cmp	r3, #105	@ 0x69
 8014f58:	d01f      	beq.n	8014f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014f5a:	d82f      	bhi.n	8014fbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8014f5c:	2b58      	cmp	r3, #88	@ 0x58
 8014f5e:	d01c      	beq.n	8014f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014f60:	d818      	bhi.n	8014f94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8014f62:	2b25      	cmp	r3, #37	@ 0x25
 8014f64:	d034      	beq.n	8014fd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8014f66:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014f6a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014f6c:	f1bb 0f00 	cmp.w	fp, #0
 8014f70:	f000 80b8 	beq.w	80150e4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8014f74:	f8bb 5000 	ldrh.w	r5, [fp]
 8014f78:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014f7c:	3301      	adds	r3, #1
 8014f7e:	930d      	str	r3, [sp, #52]	@ 0x34
 8014f80:	e029      	b.n	8014fd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8014f82:	b10d      	cbz	r5, 8014f88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8014f84:	782a      	ldrb	r2, [r5, #0]
 8014f86:	e785      	b.n	8014e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014f88:	462a      	mov	r2, r5
 8014f8a:	e783      	b.n	8014e94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014f8c:	2a00      	cmp	r2, #0
 8014f8e:	d0ea      	beq.n	8014f66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014f90:	7813      	ldrb	r3, [r2, #0]
 8014f92:	e7e0      	b.n	8014f56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8014f94:	3b63      	subs	r3, #99	@ 0x63
 8014f96:	2b01      	cmp	r3, #1
 8014f98:	d8e5      	bhi.n	8014f66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014f9a:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 8014f9e:	b329      	cbz	r1, 8014fec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8014fa0:	880b      	ldrh	r3, [r1, #0]
 8014fa2:	2b69      	cmp	r3, #105	@ 0x69
 8014fa4:	d063      	beq.n	801506e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8014fa6:	d825      	bhi.n	8014ff4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8014fa8:	2b63      	cmp	r3, #99	@ 0x63
 8014faa:	d038      	beq.n	801501e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8014fac:	2b64      	cmp	r3, #100	@ 0x64
 8014fae:	d05e      	beq.n	801506e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8014fb0:	2b58      	cmp	r3, #88	@ 0x58
 8014fb2:	d07b      	beq.n	80150ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8014fb4:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8014fb8:	4625      	mov	r5, r4
 8014fba:	e036      	b.n	801502a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014fbc:	2b73      	cmp	r3, #115	@ 0x73
 8014fbe:	d0ec      	beq.n	8014f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014fc0:	d802      	bhi.n	8014fc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8014fc2:	2b6f      	cmp	r3, #111	@ 0x6f
 8014fc4:	d1cf      	bne.n	8014f66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014fc6:	e7e8      	b.n	8014f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014fc8:	2b75      	cmp	r3, #117	@ 0x75
 8014fca:	d0e6      	beq.n	8014f9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014fcc:	2b78      	cmp	r3, #120	@ 0x78
 8014fce:	e7f9      	b.n	8014fc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8014fd0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8014fd2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8014fd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014fd8:	b10b      	cbz	r3, 8014fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8014fda:	3302      	adds	r3, #2
 8014fdc:	9309      	str	r3, [sp, #36]	@ 0x24
 8014fde:	9b08      	ldr	r3, [sp, #32]
 8014fe0:	2b00      	cmp	r3, #0
 8014fe2:	f43f af2e 	beq.w	8014e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014fe6:	3301      	adds	r3, #1
 8014fe8:	9308      	str	r3, [sp, #32]
 8014fea:	e72a      	b.n	8014e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014fec:	2a00      	cmp	r2, #0
 8014fee:	d0e1      	beq.n	8014fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8014ff0:	7813      	ldrb	r3, [r2, #0]
 8014ff2:	e7d6      	b.n	8014fa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8014ff4:	2b73      	cmp	r3, #115	@ 0x73
 8014ff6:	d036      	beq.n	8015066 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8014ff8:	d807      	bhi.n	801500a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8014ffa:	2b6f      	cmp	r3, #111	@ 0x6f
 8014ffc:	d1da      	bne.n	8014fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8014ffe:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015000:	1d25      	adds	r5, r4, #4
 8015002:	eba8 0202 	sub.w	r2, r8, r2
 8015006:	2308      	movs	r3, #8
 8015008:	e04a      	b.n	80150a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801500a:	2b75      	cmp	r3, #117	@ 0x75
 801500c:	d043      	beq.n	8015096 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801500e:	2b78      	cmp	r3, #120	@ 0x78
 8015010:	d1d0      	bne.n	8014fb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8015012:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015014:	1d25      	adds	r5, r4, #4
 8015016:	eba8 0202 	sub.w	r2, r8, r2
 801501a:	2310      	movs	r3, #16
 801501c:	e040      	b.n	80150a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801501e:	6823      	ldr	r3, [r4, #0]
 8015020:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8015024:	1d25      	adds	r5, r4, #4
 8015026:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801502a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801502c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8015030:	2b00      	cmp	r3, #0
 8015032:	d052      	beq.n	80150da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8015034:	881a      	ldrh	r2, [r3, #0]
 8015036:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801503a:	a80d      	add	r0, sp, #52	@ 0x34
 801503c:	9005      	str	r0, [sp, #20]
 801503e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8015042:	9004      	str	r0, [sp, #16]
 8015044:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8015046:	9003      	str	r0, [sp, #12]
 8015048:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 801504c:	9002      	str	r0, [sp, #8]
 801504e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8015050:	9001      	str	r0, [sp, #4]
 8015052:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8015056:	9000      	str	r0, [sp, #0]
 8015058:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801505c:	a810      	add	r0, sp, #64	@ 0x40
 801505e:	f7ff fd49 	bl	8014af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8015062:	462c      	mov	r4, r5
 8015064:	e7b7      	b.n	8014fd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8015066:	6823      	ldr	r3, [r4, #0]
 8015068:	1d25      	adds	r5, r4, #4
 801506a:	9310      	str	r3, [sp, #64]	@ 0x40
 801506c:	e7dd      	b.n	801502a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801506e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015070:	6820      	ldr	r0, [r4, #0]
 8015072:	eba8 0202 	sub.w	r2, r8, r2
 8015076:	230a      	movs	r3, #10
 8015078:	b292      	uxth	r2, r2
 801507a:	4649      	mov	r1, r9
 801507c:	f7ff fce4 	bl	8014a48 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8015080:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8015084:	2b2d      	cmp	r3, #45	@ 0x2d
 8015086:	f104 0504 	add.w	r5, r4, #4
 801508a:	d1ce      	bne.n	801502a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801508c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015090:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015092:	3302      	adds	r3, #2
 8015094:	e7e9      	b.n	801506a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8015096:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8015098:	1d25      	adds	r5, r4, #4
 801509a:	eba8 0202 	sub.w	r2, r8, r2
 801509e:	230a      	movs	r3, #10
 80150a0:	b292      	uxth	r2, r2
 80150a2:	4649      	mov	r1, r9
 80150a4:	6820      	ldr	r0, [r4, #0]
 80150a6:	f7ff fcfb 	bl	8014aa0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80150aa:	e7be      	b.n	801502a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80150ac:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80150ae:	6820      	ldr	r0, [r4, #0]
 80150b0:	eba8 0202 	sub.w	r2, r8, r2
 80150b4:	b292      	uxth	r2, r2
 80150b6:	2310      	movs	r3, #16
 80150b8:	4649      	mov	r1, r9
 80150ba:	f7ff fcf1 	bl	8014aa0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 80150be:	1d25      	adds	r5, r4, #4
 80150c0:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 80150c4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80150c8:	2b00      	cmp	r3, #0
 80150ca:	d0ae      	beq.n	801502a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80150cc:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 80150d0:	2919      	cmp	r1, #25
 80150d2:	d8f7      	bhi.n	80150c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80150d4:	3b20      	subs	r3, #32
 80150d6:	8013      	strh	r3, [r2, #0]
 80150d8:	e7f4      	b.n	80150c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80150da:	9a08      	ldr	r2, [sp, #32]
 80150dc:	2a00      	cmp	r2, #0
 80150de:	d0aa      	beq.n	8015036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80150e0:	7812      	ldrb	r2, [r2, #0]
 80150e2:	e7a8      	b.n	8015036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80150e4:	2d00      	cmp	r5, #0
 80150e6:	f43f af47 	beq.w	8014f78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80150ea:	782d      	ldrb	r5, [r5, #0]
 80150ec:	e744      	b.n	8014f78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080150ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80150ee:	b507      	push	{r0, r1, r2, lr}
 80150f0:	9300      	str	r3, [sp, #0]
 80150f2:	4613      	mov	r3, r2
 80150f4:	2200      	movs	r2, #0
 80150f6:	f7ff fe90 	bl	8014e1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80150fa:	b003      	add	sp, #12
 80150fc:	f85d fb04 	ldr.w	pc, [sp], #4

08015100 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8015100:	b40c      	push	{r2, r3}
 8015102:	b507      	push	{r0, r1, r2, lr}
 8015104:	ab04      	add	r3, sp, #16
 8015106:	f853 2b04 	ldr.w	r2, [r3], #4
 801510a:	9301      	str	r3, [sp, #4]
 801510c:	f7ff ffef 	bl	80150ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8015110:	b003      	add	sp, #12
 8015112:	f85d eb04 	ldr.w	lr, [sp], #4
 8015116:	b002      	add	sp, #8
 8015118:	4770      	bx	lr
	...

0801511c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 801511c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015120:	b0c5      	sub	sp, #276	@ 0x114
 8015122:	2400      	movs	r4, #0
 8015124:	af11      	add	r7, sp, #68	@ 0x44
 8015126:	4606      	mov	r6, r0
 8015128:	468a      	mov	sl, r1
 801512a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801512e:	4621      	mov	r1, r4
 8015130:	22c8      	movs	r2, #200	@ 0xc8
 8015132:	4638      	mov	r0, r7
 8015134:	f8dd b138 	ldr.w	fp, [sp, #312]	@ 0x138
 8015138:	940d      	str	r4, [sp, #52]	@ 0x34
 801513a:	f00f f820 	bl	802417e <memset>
 801513e:	b16e      	cbz	r6, 801515c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8015140:	ed9f 5aa8 	vldr	s10, [pc, #672]	@ 80153e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8015144:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015146:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015148:	b162      	cbz	r2, 8015164 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801514a:	8812      	ldrh	r2, [r2, #0]
 801514c:	b11a      	cbz	r2, 8015156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801514e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8015152:	4299      	cmp	r1, r3
 8015154:	dc2e      	bgt.n	80151b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8015156:	2200      	movs	r2, #0
 8015158:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801515c:	4630      	mov	r0, r6
 801515e:	b045      	add	sp, #276	@ 0x114
 8015160:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015164:	9a08      	ldr	r2, [sp, #32]
 8015166:	2a00      	cmp	r2, #0
 8015168:	d0f5      	beq.n	8015156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801516a:	7812      	ldrb	r2, [r2, #0]
 801516c:	e7ee      	b.n	801514c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801516e:	2d00      	cmp	r5, #0
 8015170:	d0e8      	beq.n	8015144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8015172:	782a      	ldrb	r2, [r5, #0]
 8015174:	b142      	cbz	r2, 8015188 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8015176:	2a25      	cmp	r2, #37	@ 0x25
 8015178:	d001      	beq.n	801517e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801517a:	4299      	cmp	r1, r3
 801517c:	dc08      	bgt.n	8015190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801517e:	f1b8 0f00 	cmp.w	r8, #0
 8015182:	d121      	bne.n	80151c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8015184:	2d00      	cmp	r5, #0
 8015186:	d0dd      	beq.n	8015144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8015188:	782a      	ldrb	r2, [r5, #0]
 801518a:	f04f 0800 	mov.w	r8, #0
 801518e:	e01d      	b.n	80151cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8015190:	f1b8 0f00 	cmp.w	r8, #0
 8015194:	d07f      	beq.n	8015296 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8015196:	f8b8 2000 	ldrh.w	r2, [r8]
 801519a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801519e:	f1b8 0f00 	cmp.w	r8, #0
 80151a2:	d002      	beq.n	80151aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80151a4:	f108 0202 	add.w	r2, r8, #2
 80151a8:	9209      	str	r2, [sp, #36]	@ 0x24
 80151aa:	b10d      	cbz	r5, 80151b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 80151ac:	3501      	adds	r5, #1
 80151ae:	9508      	str	r5, [sp, #32]
 80151b0:	3301      	adds	r3, #1
 80151b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80151b4:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 80151b8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80151ba:	f1b8 0f00 	cmp.w	r8, #0
 80151be:	d0d6      	beq.n	801516e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80151c0:	f8b8 2000 	ldrh.w	r2, [r8]
 80151c4:	2a00      	cmp	r2, #0
 80151c6:	d1d6      	bne.n	8015176 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80151c8:	f8b8 2000 	ldrh.w	r2, [r8]
 80151cc:	2a00      	cmp	r2, #0
 80151ce:	d0b9      	beq.n	8015144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80151d0:	4299      	cmp	r1, r3
 80151d2:	ddb7      	ble.n	8015144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80151d4:	2300      	movs	r3, #0
 80151d6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80151da:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
 80151de:	f88d 302e 	strb.w	r3, [sp, #46]	@ 0x2e
 80151e2:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
 80151e6:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
 80151ea:	930e      	str	r3, [sp, #56]	@ 0x38
 80151ec:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80151f0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80151f2:	f1b8 0f00 	cmp.w	r8, #0
 80151f6:	d002      	beq.n	80151fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80151f8:	f108 0302 	add.w	r3, r8, #2
 80151fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80151fe:	b10d      	cbz	r5, 8015204 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8015200:	1c6b      	adds	r3, r5, #1
 8015202:	9308      	str	r3, [sp, #32]
 8015204:	ab0f      	add	r3, sp, #60	@ 0x3c
 8015206:	9305      	str	r3, [sp, #20]
 8015208:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 801520c:	9304      	str	r3, [sp, #16]
 801520e:	ab0e      	add	r3, sp, #56	@ 0x38
 8015210:	9303      	str	r3, [sp, #12]
 8015212:	ab0c      	add	r3, sp, #48	@ 0x30
 8015214:	9302      	str	r3, [sp, #8]
 8015216:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 801521a:	9301      	str	r3, [sp, #4]
 801521c:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8015220:	9300      	str	r3, [sp, #0]
 8015222:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8015226:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801522a:	a908      	add	r1, sp, #32
 801522c:	a809      	add	r0, sp, #36	@ 0x24
 801522e:	f7ff fd24 	bl	8014c7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8015232:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015234:	2b00      	cmp	r3, #0
 8015236:	da0b      	bge.n	8015250 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8015238:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801523c:	edd3 7a00 	vldr	s15, [r3]
 8015240:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015244:	3401      	adds	r4, #1
 8015246:	ee17 3a90 	vmov	r3, s15
 801524a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801524e:	930e      	str	r3, [sp, #56]	@ 0x38
 8015250:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015252:	2b00      	cmp	r3, #0
 8015254:	da0b      	bge.n	801526e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8015256:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801525a:	edd3 7a00 	vldr	s15, [r3]
 801525e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8015262:	3401      	adds	r4, #1
 8015264:	ee17 3a90 	vmov	r3, s15
 8015268:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801526c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801526e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015270:	b1b3      	cbz	r3, 80152a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8015272:	881a      	ldrh	r2, [r3, #0]
 8015274:	2a25      	cmp	r2, #37	@ 0x25
 8015276:	d018      	beq.n	80152aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8015278:	2a66      	cmp	r2, #102	@ 0x66
 801527a:	d01c      	beq.n	80152b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801527c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8015280:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015282:	f1b8 0f00 	cmp.w	r8, #0
 8015286:	f000 8136 	beq.w	80154f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3da>
 801528a:	f8b8 5000 	ldrh.w	r5, [r8]
 801528e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8015292:	3301      	adds	r3, #1
 8015294:	e00d      	b.n	80152b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8015296:	b10d      	cbz	r5, 801529c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8015298:	782a      	ldrb	r2, [r5, #0]
 801529a:	e77e      	b.n	801519a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801529c:	462a      	mov	r2, r5
 801529e:	e77c      	b.n	801519a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 80152a0:	9b08      	ldr	r3, [sp, #32]
 80152a2:	2b00      	cmp	r3, #0
 80152a4:	d0ea      	beq.n	801527c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80152a6:	781a      	ldrb	r2, [r3, #0]
 80152a8:	e7e4      	b.n	8015274 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80152aa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80152ac:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80152b0:	3302      	adds	r3, #2
 80152b2:	930d      	str	r3, [sp, #52]	@ 0x34
 80152b4:	e041      	b.n	801533a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 80152b6:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80152ba:	edd3 7a00 	vldr	s15, [r3]
 80152be:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80152c2:	9710      	str	r7, [sp, #64]	@ 0x40
 80152c4:	3401      	adds	r4, #1
 80152c6:	b923      	cbnz	r3, 80152d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80152c8:	2301      	movs	r3, #1
 80152ca:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80152ce:	2306      	movs	r3, #6
 80152d0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80152d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80152d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152da:	bf48      	it	mi
 80152dc:	eef1 7a67 	vnegmi.f32	s15, s15
 80152e0:	eeb0 7ae7 	vabs.f32	s14, s15
 80152e4:	bf48      	it	mi
 80152e6:	232d      	movmi	r3, #45	@ 0x2d
 80152e8:	eeb4 7a45 	vcmp.f32	s14, s10
 80152ec:	bf48      	it	mi
 80152ee:	f8ad 3032 	strhmi.w	r3, [sp, #50]	@ 0x32
 80152f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80152f6:	dd2b      	ble.n	8015350 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80152f8:	4b3b      	ldr	r3, [pc, #236]	@ (80153e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80152fa:	9311      	str	r3, [sp, #68]	@ 0x44
 80152fc:	2366      	movs	r3, #102	@ 0x66
 80152fe:	9312      	str	r3, [sp, #72]	@ 0x48
 8015300:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015302:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8015306:	2b00      	cmp	r3, #0
 8015308:	f000 80ef 	beq.w	80154ea <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3ce>
 801530c:	881a      	ldrh	r2, [r3, #0]
 801530e:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 8015312:	a80d      	add	r0, sp, #52	@ 0x34
 8015314:	9005      	str	r0, [sp, #20]
 8015316:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 801531a:	9004      	str	r0, [sp, #16]
 801531c:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801531e:	9003      	str	r0, [sp, #12]
 8015320:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8015324:	9002      	str	r0, [sp, #8]
 8015326:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8015328:	9001      	str	r0, [sp, #4]
 801532a:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801532e:	9000      	str	r0, [sp, #0]
 8015330:	e9cd a606 	strd	sl, r6, [sp, #24]
 8015334:	a810      	add	r0, sp, #64	@ 0x40
 8015336:	f7ff fbdd 	bl	8014af4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801533a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801533c:	b10b      	cbz	r3, 8015342 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801533e:	3302      	adds	r3, #2
 8015340:	9309      	str	r3, [sp, #36]	@ 0x24
 8015342:	9b08      	ldr	r3, [sp, #32]
 8015344:	2b00      	cmp	r3, #0
 8015346:	f43f aefd 	beq.w	8015144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801534a:	3301      	adds	r3, #1
 801534c:	9308      	str	r3, [sp, #32]
 801534e:	e6f9      	b.n	8015144 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8015350:	eef4 7a67 	vcmp.f32	s15, s15
 8015354:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015358:	d63a      	bvs.n	80153d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801535a:	f10d 0846 	add.w	r8, sp, #70	@ 0x46
 801535e:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 8015362:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8015366:	eeb0 6a67 	vmov.f32	s12, s15
 801536a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801536e:	eef0 5a47 	vmov.f32	s11, s14
 8015372:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8015376:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801537a:	da2d      	bge.n	80153d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801537c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801537e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8015382:	2100      	movs	r1, #0
 8015384:	eef0 4a46 	vmov.f32	s9, s12
 8015388:	ebaa 0202 	sub.w	r2, sl, r2
 801538c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8015390:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015394:	b28b      	uxth	r3, r1
 8015396:	db2c      	blt.n	80153f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8015398:	1a50      	subs	r0, r2, r1
 801539a:	2800      	cmp	r0, #0
 801539c:	dd29      	ble.n	80153f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801539e:	3101      	adds	r1, #1
 80153a0:	2964      	cmp	r1, #100	@ 0x64
 80153a2:	d025      	beq.n	80153f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 80153a4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80153a8:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80153ac:	ee17 3a10 	vmov	r3, s14
 80153b0:	2b09      	cmp	r3, #9
 80153b2:	bfa8      	it	ge
 80153b4:	2309      	movge	r3, #9
 80153b6:	ee07 3a10 	vmov	s14, r3
 80153ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80153be:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 80153c2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80153c6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80153ca:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80153ce:	e7dd      	b.n	801538c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80153d0:	4b06      	ldr	r3, [pc, #24]	@ (80153ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80153d2:	9311      	str	r3, [sp, #68]	@ 0x44
 80153d4:	236e      	movs	r3, #110	@ 0x6e
 80153d6:	e792      	b.n	80152fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80153d8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80153dc:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80153e0:	e7c7      	b.n	8015372 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80153e2:	bf00      	nop
 80153e4:	7f7fffff 	.word	0x7f7fffff
 80153e8:	006e0069 	.word	0x006e0069
 80153ec:	0061006e 	.word	0x0061006e
 80153f0:	2363      	movs	r3, #99	@ 0x63
 80153f2:	2a63      	cmp	r2, #99	@ 0x63
 80153f4:	bfd4      	ite	le
 80153f6:	ebc3 0202 	rsble	r2, r3, r2
 80153fa:	f1c3 0263 	rsbgt	r2, r3, #99	@ 0x63
 80153fe:	2a00      	cmp	r2, #0
 8015400:	f103 0501 	add.w	r5, r3, #1
 8015404:	dd57      	ble.n	80154b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8015406:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015408:	2900      	cmp	r1, #0
 801540a:	dd2b      	ble.n	8015464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x348>
 801540c:	f04f 0901 	mov.w	r9, #1
 8015410:	230a      	movs	r3, #10
 8015412:	f111 31ff 	adds.w	r1, r1, #4294967295
 8015416:	d30c      	bcc.n	8015432 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x316>
 8015418:	ee67 7aa5 	vmul.f32	s15, s15, s11
 801541c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8015420:	ee17 0a10 	vmov	r0, s14
 8015424:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015428:	fb03 0909 	mla	r9, r3, r9, r0
 801542c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015430:	e7ef      	b.n	8015412 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f6>
 8015432:	910f      	str	r1, [sp, #60]	@ 0x3c
 8015434:	230a      	movs	r3, #10
 8015436:	b292      	uxth	r2, r2
 8015438:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801543c:	4648      	mov	r0, r9
 801543e:	f7ff fb4d 	bl	8014adc <_ZN8touchgfx7Unicode4itoaElPtti>
 8015442:	f1b9 0f01 	cmp.w	r9, #1
 8015446:	dc0b      	bgt.n	8015460 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
 8015448:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
 801544c:	2b00      	cmp	r3, #0
 801544e:	bf0c      	ite	eq
 8015450:	2300      	moveq	r3, #0
 8015452:	232e      	movne	r3, #46	@ 0x2e
 8015454:	aa44      	add	r2, sp, #272	@ 0x110
 8015456:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801545a:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801545e:	e015      	b.n	801548c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x370>
 8015460:	232e      	movs	r3, #46	@ 0x2e
 8015462:	e7f7      	b.n	8015454 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8015464:	2a01      	cmp	r2, #1
 8015466:	d026      	beq.n	80154b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8015468:	2b63      	cmp	r3, #99	@ 0x63
 801546a:	d024      	beq.n	80154b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 801546c:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
 8015470:	b30a      	cbz	r2, 80154b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8015472:	aa44      	add	r2, sp, #272	@ 0x110
 8015474:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8015478:	222e      	movs	r2, #46	@ 0x2e
 801547a:	f825 2ccc 	strh.w	r2, [r5, #-204]
 801547e:	3302      	adds	r3, #2
 8015480:	aa44      	add	r2, sp, #272	@ 0x110
 8015482:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015486:	2200      	movs	r2, #0
 8015488:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801548c:	eef4 7ae4 	vcmpe.f32	s15, s9
 8015490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015494:	f6ff af34 	blt.w	8015300 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8015498:	2300      	movs	r3, #0
 801549a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801549e:	1c59      	adds	r1, r3, #1
 80154a0:	b972      	cbnz	r2, 80154c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80154a2:	b29b      	uxth	r3, r3
 80154a4:	2130      	movs	r1, #48	@ 0x30
 80154a6:	b96b      	cbnz	r3, 80154c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a8>
 80154a8:	2331      	movs	r3, #49	@ 0x31
 80154aa:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 80154ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80154b0:	3b02      	subs	r3, #2
 80154b2:	9310      	str	r3, [sp, #64]	@ 0x40
 80154b4:	e724      	b.n	8015300 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80154b6:	ab44      	add	r3, sp, #272	@ 0x110
 80154b8:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80154bc:	2300      	movs	r3, #0
 80154be:	e7cc      	b.n	801545a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33e>
 80154c0:	460b      	mov	r3, r1
 80154c2:	e7ea      	b.n	801549a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80154c4:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80154c8:	f1a2 0030 	sub.w	r0, r2, #48	@ 0x30
 80154cc:	2808      	cmp	r0, #8
 80154ce:	d806      	bhi.n	80154de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c2>
 80154d0:	a944      	add	r1, sp, #272	@ 0x110
 80154d2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80154d6:	3201      	adds	r2, #1
 80154d8:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80154dc:	e710      	b.n	8015300 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80154de:	2a39      	cmp	r2, #57	@ 0x39
 80154e0:	bf08      	it	eq
 80154e2:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80154e6:	3b01      	subs	r3, #1
 80154e8:	e7dd      	b.n	80154a6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x38a>
 80154ea:	9a08      	ldr	r2, [sp, #32]
 80154ec:	2a00      	cmp	r2, #0
 80154ee:	f43f af0e 	beq.w	801530e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80154f2:	7812      	ldrb	r2, [r2, #0]
 80154f4:	e70b      	b.n	801530e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80154f6:	2d00      	cmp	r5, #0
 80154f8:	f43f aec9 	beq.w	801528e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80154fc:	782d      	ldrb	r5, [r5, #0]
 80154fe:	e6c6      	b.n	801528e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>

08015500 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8015500:	b507      	push	{r0, r1, r2, lr}
 8015502:	9300      	str	r3, [sp, #0]
 8015504:	4613      	mov	r3, r2
 8015506:	2200      	movs	r2, #0
 8015508:	f7ff fe08 	bl	801511c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801550c:	b003      	add	sp, #12
 801550e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08015514 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8015514:	4b01      	ldr	r3, [pc, #4]	@ (801551c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8015516:	6018      	str	r0, [r3, #0]
 8015518:	4770      	bx	lr
 801551a:	bf00      	nop
 801551c:	20002f94 	.word	0x20002f94

08015520 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8015520:	4b06      	ldr	r3, [pc, #24]	@ (801553c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8015522:	881a      	ldrh	r2, [r3, #0]
 8015524:	4282      	cmp	r2, r0
 8015526:	d807      	bhi.n	8015538 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8015528:	4b05      	ldr	r3, [pc, #20]	@ (8015540 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801552a:	881b      	ldrh	r3, [r3, #0]
 801552c:	4413      	add	r3, r2
 801552e:	4298      	cmp	r0, r3
 8015530:	bfac      	ite	ge
 8015532:	2000      	movge	r0, #0
 8015534:	2001      	movlt	r0, #1
 8015536:	4770      	bx	lr
 8015538:	2000      	movs	r0, #0
 801553a:	4770      	bx	lr
 801553c:	20002fb4 	.word	0x20002fb4
 8015540:	20002fb8 	.word	0x20002fb8

08015544 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8015544:	b508      	push	{r3, lr}
 8015546:	4601      	mov	r1, r0
 8015548:	f7ff ffea 	bl	8015520 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801554c:	b118      	cbz	r0, 8015556 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801554e:	4b02      	ldr	r3, [pc, #8]	@ (8015558 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8015550:	681b      	ldr	r3, [r3, #0]
 8015552:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8015556:	bd08      	pop	{r3, pc}
 8015558:	20002f98 	.word	0x20002f98

0801555c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801555c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801555e:	4c24      	ldr	r4, [pc, #144]	@ (80155f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8015560:	6823      	ldr	r3, [r4, #0]
 8015562:	2b00      	cmp	r3, #0
 8015564:	d042      	beq.n	80155ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8015566:	4a23      	ldr	r2, [pc, #140]	@ (80155f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8015568:	4d23      	ldr	r5, [pc, #140]	@ (80155f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801556a:	8811      	ldrh	r1, [r2, #0]
 801556c:	f8b5 c000 	ldrh.w	ip, [r5]
 8015570:	4822      	ldr	r0, [pc, #136]	@ (80155fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8015572:	4461      	add	r1, ip
 8015574:	1c4a      	adds	r2, r1, #1
 8015576:	f022 0201 	bic.w	r2, r2, #1
 801557a:	008f      	lsls	r7, r1, #2
 801557c:	0412      	lsls	r2, r2, #16
 801557e:	19de      	adds	r6, r3, r7
 8015580:	0c12      	lsrs	r2, r2, #16
 8015582:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8015586:	6006      	str	r6, [r0, #0]
 8015588:	4e1d      	ldr	r6, [pc, #116]	@ (8015600 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801558a:	19da      	adds	r2, r3, r7
 801558c:	6032      	str	r2, [r6, #0]
 801558e:	220e      	movs	r2, #14
 8015590:	fb02 f20c 	mul.w	r2, r2, ip
 8015594:	3203      	adds	r2, #3
 8015596:	f022 0203 	bic.w	r2, r2, #3
 801559a:	443a      	add	r2, r7
 801559c:	4f19      	ldr	r7, [pc, #100]	@ (8015604 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801559e:	4413      	add	r3, r2
 80155a0:	603b      	str	r3, [r7, #0]
 80155a2:	4f19      	ldr	r7, [pc, #100]	@ (8015608 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80155a4:	2300      	movs	r3, #0
 80155a6:	803b      	strh	r3, [r7, #0]
 80155a8:	4f18      	ldr	r7, [pc, #96]	@ (801560c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80155aa:	683f      	ldr	r7, [r7, #0]
 80155ac:	1aba      	subs	r2, r7, r2
 80155ae:	4f18      	ldr	r7, [pc, #96]	@ (8015610 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80155b0:	603a      	str	r2, [r7, #0]
 80155b2:	4a18      	ldr	r2, [pc, #96]	@ (8015614 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80155b4:	469c      	mov	ip, r3
 80155b6:	8013      	strh	r3, [r2, #0]
 80155b8:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80155bc:	428b      	cmp	r3, r1
 80155be:	d10d      	bne.n	80155dc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80155c0:	882d      	ldrh	r5, [r5, #0]
 80155c2:	6830      	ldr	r0, [r6, #0]
 80155c4:	2300      	movs	r3, #0
 80155c6:	240e      	movs	r4, #14
 80155c8:	429d      	cmp	r5, r3
 80155ca:	d90f      	bls.n	80155ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80155cc:	fb04 0203 	mla	r2, r4, r3, r0
 80155d0:	3301      	adds	r3, #1
 80155d2:	7b11      	ldrb	r1, [r2, #12]
 80155d4:	f36f 1145 	bfc	r1, #5, #1
 80155d8:	7311      	strb	r1, [r2, #12]
 80155da:	e7f5      	b.n	80155c8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80155dc:	6822      	ldr	r2, [r4, #0]
 80155de:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80155e2:	6802      	ldr	r2, [r0, #0]
 80155e4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80155e8:	3301      	adds	r3, #1
 80155ea:	e7e7      	b.n	80155bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80155ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80155ee:	bf00      	nop
 80155f0:	20002f98 	.word	0x20002f98
 80155f4:	20002fb4 	.word	0x20002fb4
 80155f8:	20002fb8 	.word	0x20002fb8
 80155fc:	20002fac 	.word	0x20002fac
 8015600:	20002f9c 	.word	0x20002f9c
 8015604:	20002fa4 	.word	0x20002fa4
 8015608:	20002fb6 	.word	0x20002fb6
 801560c:	20002fa0 	.word	0x20002fa0
 8015610:	20002fb0 	.word	0x20002fb0
 8015614:	20002fa8 	.word	0x20002fa8

08015618 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8015618:	4b06      	ldr	r3, [pc, #24]	@ (8015634 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801561a:	681b      	ldr	r3, [r3, #0]
 801561c:	b943      	cbnz	r3, 8015630 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801561e:	b139      	cbz	r1, 8015630 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8015620:	4b05      	ldr	r3, [pc, #20]	@ (8015638 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8015622:	801a      	strh	r2, [r3, #0]
 8015624:	4b05      	ldr	r3, [pc, #20]	@ (801563c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8015626:	6019      	str	r1, [r3, #0]
 8015628:	4b05      	ldr	r3, [pc, #20]	@ (8015640 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801562a:	6018      	str	r0, [r3, #0]
 801562c:	f7ff bf96 	b.w	801555c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8015630:	4770      	bx	lr
 8015632:	bf00      	nop
 8015634:	20002fa4 	.word	0x20002fa4
 8015638:	20002fb8 	.word	0x20002fb8
 801563c:	20002fa0 	.word	0x20002fa0
 8015640:	20002f98 	.word	0x20002f98

08015644 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8015644:	b470      	push	{r4, r5, r6}
 8015646:	4c07      	ldr	r4, [pc, #28]	@ (8015664 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8015648:	6826      	ldr	r6, [r4, #0]
 801564a:	4605      	mov	r5, r0
 801564c:	4610      	mov	r0, r2
 801564e:	9a03      	ldr	r2, [sp, #12]
 8015650:	b936      	cbnz	r6, 8015660 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8015652:	6025      	str	r5, [r4, #0]
 8015654:	4c04      	ldr	r4, [pc, #16]	@ (8015668 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8015656:	8021      	strh	r1, [r4, #0]
 8015658:	bc70      	pop	{r4, r5, r6}
 801565a:	4619      	mov	r1, r3
 801565c:	f7ff bfdc 	b.w	8015618 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8015660:	bc70      	pop	{r4, r5, r6}
 8015662:	4770      	bx	lr
 8015664:	20002fbc 	.word	0x20002fbc
 8015668:	20002fb4 	.word	0x20002fb4

0801566c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801566c:	4a12      	ldr	r2, [pc, #72]	@ (80156b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801566e:	8803      	ldrh	r3, [r0, #0]
 8015670:	8812      	ldrh	r2, [r2, #0]
 8015672:	4293      	cmp	r3, r2
 8015674:	d207      	bcs.n	8015686 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8015676:	4a11      	ldr	r2, [pc, #68]	@ (80156bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8015678:	6812      	ldr	r2, [r2, #0]
 801567a:	2114      	movs	r1, #20
 801567c:	fb01 2303 	mla	r3, r1, r3, r2
 8015680:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8015684:	4770      	bx	lr
 8015686:	490e      	ldr	r1, [pc, #56]	@ (80156c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8015688:	8809      	ldrh	r1, [r1, #0]
 801568a:	4411      	add	r1, r2
 801568c:	428b      	cmp	r3, r1
 801568e:	da04      	bge.n	801569a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8015690:	1a9b      	subs	r3, r3, r2
 8015692:	4a0c      	ldr	r2, [pc, #48]	@ (80156c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8015694:	210e      	movs	r1, #14
 8015696:	6812      	ldr	r2, [r2, #0]
 8015698:	e7f0      	b.n	801567c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801569a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801569e:	4293      	cmp	r3, r2
 80156a0:	d108      	bne.n	80156b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80156a2:	4b09      	ldr	r3, [pc, #36]	@ (80156c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80156a4:	781b      	ldrb	r3, [r3, #0]
 80156a6:	b91b      	cbnz	r3, 80156b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80156a8:	4b08      	ldr	r3, [pc, #32]	@ (80156cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80156aa:	f9b3 0000 	ldrsh.w	r0, [r3]
 80156ae:	4770      	bx	lr
 80156b0:	4b07      	ldr	r3, [pc, #28]	@ (80156d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80156b2:	e7fa      	b.n	80156aa <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80156b4:	2000      	movs	r0, #0
 80156b6:	4770      	bx	lr
 80156b8:	20002fb4 	.word	0x20002fb4
 80156bc:	20002fbc 	.word	0x20002fbc
 80156c0:	20002fb8 	.word	0x20002fb8
 80156c4:	20002f9c 	.word	0x20002f9c
 80156c8:	20002f2c 	.word	0x20002f2c
 80156cc:	20002f2e 	.word	0x20002f2e
 80156d0:	20002f30 	.word	0x20002f30

080156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80156d4:	4a12      	ldr	r2, [pc, #72]	@ (8015720 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80156d6:	8803      	ldrh	r3, [r0, #0]
 80156d8:	8812      	ldrh	r2, [r2, #0]
 80156da:	4293      	cmp	r3, r2
 80156dc:	d207      	bcs.n	80156ee <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80156de:	4a11      	ldr	r2, [pc, #68]	@ (8015724 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80156e0:	6812      	ldr	r2, [r2, #0]
 80156e2:	2114      	movs	r1, #20
 80156e4:	fb01 2303 	mla	r3, r1, r3, r2
 80156e8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80156ec:	4770      	bx	lr
 80156ee:	490e      	ldr	r1, [pc, #56]	@ (8015728 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80156f0:	8809      	ldrh	r1, [r1, #0]
 80156f2:	4411      	add	r1, r2
 80156f4:	428b      	cmp	r3, r1
 80156f6:	da04      	bge.n	8015702 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80156f8:	1a9b      	subs	r3, r3, r2
 80156fa:	4a0c      	ldr	r2, [pc, #48]	@ (801572c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80156fc:	210e      	movs	r1, #14
 80156fe:	6812      	ldr	r2, [r2, #0]
 8015700:	e7f0      	b.n	80156e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8015702:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8015706:	4293      	cmp	r3, r2
 8015708:	d108      	bne.n	801571c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801570a:	4b09      	ldr	r3, [pc, #36]	@ (8015730 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801570c:	781b      	ldrb	r3, [r3, #0]
 801570e:	b91b      	cbnz	r3, 8015718 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8015710:	4b08      	ldr	r3, [pc, #32]	@ (8015734 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8015712:	f9b3 0000 	ldrsh.w	r0, [r3]
 8015716:	4770      	bx	lr
 8015718:	4b07      	ldr	r3, [pc, #28]	@ (8015738 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801571a:	e7fa      	b.n	8015712 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801571c:	2000      	movs	r0, #0
 801571e:	4770      	bx	lr
 8015720:	20002fb4 	.word	0x20002fb4
 8015724:	20002fbc 	.word	0x20002fbc
 8015728:	20002fb8 	.word	0x20002fb8
 801572c:	20002f9c 	.word	0x20002f9c
 8015730:	20002f2c 	.word	0x20002f2c
 8015734:	20002f30 	.word	0x20002f30
 8015738:	20002f2e 	.word	0x20002f2e

0801573c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801573c:	b530      	push	{r4, r5, lr}
 801573e:	4a22      	ldr	r2, [pc, #136]	@ (80157c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8015740:	880b      	ldrh	r3, [r1, #0]
 8015742:	8812      	ldrh	r2, [r2, #0]
 8015744:	4293      	cmp	r3, r2
 8015746:	d213      	bcs.n	8015770 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8015748:	4a20      	ldr	r2, [pc, #128]	@ (80157cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801574a:	6812      	ldr	r2, [r2, #0]
 801574c:	2114      	movs	r1, #20
 801574e:	fb01 2303 	mla	r3, r1, r3, r2
 8015752:	8a1a      	ldrh	r2, [r3, #16]
 8015754:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8015758:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801575c:	8a5b      	ldrh	r3, [r3, #18]
 801575e:	8004      	strh	r4, [r0, #0]
 8015760:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015764:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8015768:	8041      	strh	r1, [r0, #2]
 801576a:	8082      	strh	r2, [r0, #4]
 801576c:	80c3      	strh	r3, [r0, #6]
 801576e:	e024      	b.n	80157ba <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8015770:	4917      	ldr	r1, [pc, #92]	@ (80157d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8015772:	8809      	ldrh	r1, [r1, #0]
 8015774:	4411      	add	r1, r2
 8015776:	428b      	cmp	r3, r1
 8015778:	da10      	bge.n	801579c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801577a:	1a9b      	subs	r3, r3, r2
 801577c:	220e      	movs	r2, #14
 801577e:	4353      	muls	r3, r2
 8015780:	4a14      	ldr	r2, [pc, #80]	@ (80157d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8015782:	6811      	ldr	r1, [r2, #0]
 8015784:	18ca      	adds	r2, r1, r3
 8015786:	5ecd      	ldrsh	r5, [r1, r3]
 8015788:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801578c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8015790:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8015794:	8005      	strh	r5, [r0, #0]
 8015796:	8044      	strh	r4, [r0, #2]
 8015798:	8081      	strh	r1, [r0, #4]
 801579a:	e7e7      	b.n	801576c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801579c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80157a0:	4293      	cmp	r3, r2
 80157a2:	d10b      	bne.n	80157bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80157a4:	4b0c      	ldr	r3, [pc, #48]	@ (80157d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80157a6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80157aa:	4b0c      	ldr	r3, [pc, #48]	@ (80157dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80157ac:	8081      	strh	r1, [r0, #4]
 80157ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80157b2:	80c2      	strh	r2, [r0, #6]
 80157b4:	2300      	movs	r3, #0
 80157b6:	8003      	strh	r3, [r0, #0]
 80157b8:	8043      	strh	r3, [r0, #2]
 80157ba:	bd30      	pop	{r4, r5, pc}
 80157bc:	2300      	movs	r3, #0
 80157be:	8003      	strh	r3, [r0, #0]
 80157c0:	8043      	strh	r3, [r0, #2]
 80157c2:	8083      	strh	r3, [r0, #4]
 80157c4:	e7d2      	b.n	801576c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80157c6:	bf00      	nop
 80157c8:	20002fb4 	.word	0x20002fb4
 80157cc:	20002fbc 	.word	0x20002fbc
 80157d0:	20002fb8 	.word	0x20002fb8
 80157d4:	20002f9c 	.word	0x20002f9c
 80157d8:	20002f28 	.word	0x20002f28
 80157dc:	20002f2a 	.word	0x20002f2a

080157e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80157e0:	4a17      	ldr	r2, [pc, #92]	@ (8015840 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80157e2:	8803      	ldrh	r3, [r0, #0]
 80157e4:	8812      	ldrh	r2, [r2, #0]
 80157e6:	4293      	cmp	r3, r2
 80157e8:	d213      	bcs.n	8015812 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80157ea:	4a16      	ldr	r2, [pc, #88]	@ (8015844 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80157ec:	6812      	ldr	r2, [r2, #0]
 80157ee:	2114      	movs	r1, #20
 80157f0:	fb01 2303 	mla	r3, r1, r3, r2
 80157f4:	8a1a      	ldrh	r2, [r3, #16]
 80157f6:	8919      	ldrh	r1, [r3, #8]
 80157f8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80157fc:	428a      	cmp	r2, r1
 80157fe:	db1d      	blt.n	801583c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015800:	8a58      	ldrh	r0, [r3, #18]
 8015802:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8015806:	895b      	ldrh	r3, [r3, #10]
 8015808:	4298      	cmp	r0, r3
 801580a:	bfac      	ite	ge
 801580c:	2000      	movge	r0, #0
 801580e:	2001      	movlt	r0, #1
 8015810:	4770      	bx	lr
 8015812:	490d      	ldr	r1, [pc, #52]	@ (8015848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8015814:	8809      	ldrh	r1, [r1, #0]
 8015816:	4411      	add	r1, r2
 8015818:	428b      	cmp	r3, r1
 801581a:	da0d      	bge.n	8015838 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 801581c:	1a9b      	subs	r3, r3, r2
 801581e:	4a0b      	ldr	r2, [pc, #44]	@ (801584c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8015820:	6812      	ldr	r2, [r2, #0]
 8015822:	210e      	movs	r1, #14
 8015824:	fb01 2303 	mla	r3, r1, r3, r2
 8015828:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801582c:	891a      	ldrh	r2, [r3, #8]
 801582e:	4291      	cmp	r1, r2
 8015830:	db04      	blt.n	801583c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015832:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8015836:	e7e6      	b.n	8015806 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8015838:	2000      	movs	r0, #0
 801583a:	4770      	bx	lr
 801583c:	2001      	movs	r0, #1
 801583e:	4770      	bx	lr
 8015840:	20002fb4 	.word	0x20002fb4
 8015844:	20002fbc 	.word	0x20002fbc
 8015848:	20002fb8 	.word	0x20002fb8
 801584c:	20002f9c 	.word	0x20002f9c

08015850 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8015850:	4a12      	ldr	r2, [pc, #72]	@ (801589c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8015852:	8803      	ldrh	r3, [r0, #0]
 8015854:	8811      	ldrh	r1, [r2, #0]
 8015856:	428b      	cmp	r3, r1
 8015858:	d20b      	bcs.n	8015872 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801585a:	4a11      	ldr	r2, [pc, #68]	@ (80158a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801585c:	6812      	ldr	r2, [r2, #0]
 801585e:	b112      	cbz	r2, 8015866 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8015860:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015864:	b9c0      	cbnz	r0, 8015898 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8015866:	4a0f      	ldr	r2, [pc, #60]	@ (80158a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8015868:	6811      	ldr	r1, [r2, #0]
 801586a:	2214      	movs	r2, #20
 801586c:	4353      	muls	r3, r2
 801586e:	58c8      	ldr	r0, [r1, r3]
 8015870:	4770      	bx	lr
 8015872:	4a0d      	ldr	r2, [pc, #52]	@ (80158a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8015874:	8812      	ldrh	r2, [r2, #0]
 8015876:	440a      	add	r2, r1
 8015878:	4293      	cmp	r3, r2
 801587a:	da04      	bge.n	8015886 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801587c:	4a08      	ldr	r2, [pc, #32]	@ (80158a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801587e:	6812      	ldr	r2, [r2, #0]
 8015880:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8015884:	4770      	bx	lr
 8015886:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801588a:	4293      	cmp	r3, r2
 801588c:	d103      	bne.n	8015896 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801588e:	4b07      	ldr	r3, [pc, #28]	@ (80158ac <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8015890:	681b      	ldr	r3, [r3, #0]
 8015892:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8015894:	4770      	bx	lr
 8015896:	2000      	movs	r0, #0
 8015898:	4770      	bx	lr
 801589a:	bf00      	nop
 801589c:	20002fb4 	.word	0x20002fb4
 80158a0:	20002f98 	.word	0x20002f98
 80158a4:	20002fbc 	.word	0x20002fbc
 80158a8:	20002fb8 	.word	0x20002fb8
 80158ac:	20002f34 	.word	0x20002f34

080158b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80158b0:	4b24      	ldr	r3, [pc, #144]	@ (8015944 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80158b2:	8802      	ldrh	r2, [r0, #0]
 80158b4:	8818      	ldrh	r0, [r3, #0]
 80158b6:	4282      	cmp	r2, r0
 80158b8:	d221      	bcs.n	80158fe <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80158ba:	4b23      	ldr	r3, [pc, #140]	@ (8015948 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80158bc:	6819      	ldr	r1, [r3, #0]
 80158be:	2314      	movs	r3, #20
 80158c0:	fb03 1302 	mla	r3, r3, r2, r1
 80158c4:	6858      	ldr	r0, [r3, #4]
 80158c6:	2800      	cmp	r0, #0
 80158c8:	d03a      	beq.n	8015940 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80158ca:	4920      	ldr	r1, [pc, #128]	@ (801594c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80158cc:	6809      	ldr	r1, [r1, #0]
 80158ce:	2900      	cmp	r1, #0
 80158d0:	d036      	beq.n	8015940 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80158d2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80158d6:	2900      	cmp	r1, #0
 80158d8:	d032      	beq.n	8015940 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80158da:	891a      	ldrh	r2, [r3, #8]
 80158dc:	8958      	ldrh	r0, [r3, #10]
 80158de:	4350      	muls	r0, r2
 80158e0:	7c5a      	ldrb	r2, [r3, #17]
 80158e2:	7cdb      	ldrb	r3, [r3, #19]
 80158e4:	0952      	lsrs	r2, r2, #5
 80158e6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80158ea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80158ee:	2b0b      	cmp	r3, #11
 80158f0:	bf18      	it	ne
 80158f2:	0040      	lslne	r0, r0, #1
 80158f4:	3003      	adds	r0, #3
 80158f6:	f020 0003 	bic.w	r0, r0, #3
 80158fa:	4408      	add	r0, r1
 80158fc:	4770      	bx	lr
 80158fe:	4b14      	ldr	r3, [pc, #80]	@ (8015950 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015900:	881b      	ldrh	r3, [r3, #0]
 8015902:	4403      	add	r3, r0
 8015904:	429a      	cmp	r2, r3
 8015906:	da1a      	bge.n	801593e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015908:	4b12      	ldr	r3, [pc, #72]	@ (8015954 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801590a:	681b      	ldr	r3, [r3, #0]
 801590c:	1a10      	subs	r0, r2, r0
 801590e:	210e      	movs	r1, #14
 8015910:	fb01 3000 	mla	r0, r1, r0, r3
 8015914:	7b03      	ldrb	r3, [r0, #12]
 8015916:	f003 031f 	and.w	r3, r3, #31
 801591a:	2b0b      	cmp	r3, #11
 801591c:	d10b      	bne.n	8015936 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801591e:	8903      	ldrh	r3, [r0, #8]
 8015920:	8940      	ldrh	r0, [r0, #10]
 8015922:	4358      	muls	r0, r3
 8015924:	4b09      	ldr	r3, [pc, #36]	@ (801594c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015926:	6819      	ldr	r1, [r3, #0]
 8015928:	3003      	adds	r0, #3
 801592a:	f020 0303 	bic.w	r3, r0, #3
 801592e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8015932:	4418      	add	r0, r3
 8015934:	4770      	bx	lr
 8015936:	2b0d      	cmp	r3, #13
 8015938:	d101      	bne.n	801593e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801593a:	300d      	adds	r0, #13
 801593c:	4770      	bx	lr
 801593e:	2000      	movs	r0, #0
 8015940:	4770      	bx	lr
 8015942:	bf00      	nop
 8015944:	20002fb4 	.word	0x20002fb4
 8015948:	20002fbc 	.word	0x20002fbc
 801594c:	20002f98 	.word	0x20002f98
 8015950:	20002fb8 	.word	0x20002fb8
 8015954:	20002f9c 	.word	0x20002f9c

08015958 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8015958:	b510      	push	{r4, lr}
 801595a:	4b1f      	ldr	r3, [pc, #124]	@ (80159d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 801595c:	8802      	ldrh	r2, [r0, #0]
 801595e:	881b      	ldrh	r3, [r3, #0]
 8015960:	429a      	cmp	r2, r3
 8015962:	d21a      	bcs.n	801599a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8015964:	4b1d      	ldr	r3, [pc, #116]	@ (80159dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8015966:	681b      	ldr	r3, [r3, #0]
 8015968:	2114      	movs	r1, #20
 801596a:	fb01 3102 	mla	r1, r1, r2, r3
 801596e:	7c4b      	ldrb	r3, [r1, #17]
 8015970:	0958      	lsrs	r0, r3, #5
 8015972:	7ccb      	ldrb	r3, [r1, #19]
 8015974:	491a      	ldr	r1, [pc, #104]	@ (80159e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8015976:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801597a:	6809      	ldr	r1, [r1, #0]
 801597c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8015980:	b2d8      	uxtb	r0, r3
 8015982:	b149      	cbz	r1, 8015998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8015984:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8015988:	b132      	cbz	r2, 8015998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801598a:	2b0e      	cmp	r3, #14
 801598c:	d021      	beq.n	80159d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801598e:	280f      	cmp	r0, #15
 8015990:	d01d      	beq.n	80159ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8015992:	2810      	cmp	r0, #16
 8015994:	bf08      	it	eq
 8015996:	2002      	moveq	r0, #2
 8015998:	bd10      	pop	{r4, pc}
 801599a:	4912      	ldr	r1, [pc, #72]	@ (80159e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 801599c:	8809      	ldrh	r1, [r1, #0]
 801599e:	4419      	add	r1, r3
 80159a0:	428a      	cmp	r2, r1
 80159a2:	da09      	bge.n	80159b8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80159a4:	1ad3      	subs	r3, r2, r3
 80159a6:	4a10      	ldr	r2, [pc, #64]	@ (80159e8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80159a8:	6812      	ldr	r2, [r2, #0]
 80159aa:	210e      	movs	r1, #14
 80159ac:	fb01 2303 	mla	r3, r1, r3, r2
 80159b0:	7b18      	ldrb	r0, [r3, #12]
 80159b2:	f000 001f 	and.w	r0, r0, #31
 80159b6:	e7ef      	b.n	8015998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80159b8:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80159bc:	429a      	cmp	r2, r3
 80159be:	d108      	bne.n	80159d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80159c0:	f7f2 feea 	bl	8008798 <_ZN8touchgfx3HAL3lcdEv>
 80159c4:	6803      	ldr	r3, [r0, #0]
 80159c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80159ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80159cc:	4718      	bx	r3
 80159ce:	2001      	movs	r0, #1
 80159d0:	e7e2      	b.n	8015998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80159d2:	2000      	movs	r0, #0
 80159d4:	e7e0      	b.n	8015998 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80159d6:	bf00      	nop
 80159d8:	20002fb4 	.word	0x20002fb4
 80159dc:	20002fbc 	.word	0x20002fbc
 80159e0:	20002f98 	.word	0x20002f98
 80159e4:	20002fb8 	.word	0x20002fb8
 80159e8:	20002f9c 	.word	0x20002f9c

080159ec <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80159ec:	2010      	movs	r0, #16
 80159ee:	4770      	bx	lr

080159f0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80159f0:	2000      	movs	r0, #0
 80159f2:	4770      	bx	lr

080159f4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80159f4:	4b02      	ldr	r3, [pc, #8]	@ (8015a00 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80159f6:	8818      	ldrh	r0, [r3, #0]
 80159f8:	0040      	lsls	r0, r0, #1
 80159fa:	b280      	uxth	r0, r0
 80159fc:	4770      	bx	lr
 80159fe:	bf00      	nop
 8015a00:	20002f2e 	.word	0x20002f2e

08015a04 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8015a04:	2bff      	cmp	r3, #255	@ 0xff
 8015a06:	d05e      	beq.n	8015ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8015a08:	2a0b      	cmp	r2, #11
 8015a0a:	d058      	beq.n	8015abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8015a0c:	d80e      	bhi.n	8015a2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8015a0e:	2a03      	cmp	r2, #3
 8015a10:	d04d      	beq.n	8015aae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8015a12:	d804      	bhi.n	8015a1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8015a14:	2a01      	cmp	r2, #1
 8015a16:	d04c      	beq.n	8015ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8015a18:	d94d      	bls.n	8015ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8015a1a:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8015a1c:	e031      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a1e:	2a09      	cmp	r2, #9
 8015a20:	d04d      	beq.n	8015abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8015a22:	d84a      	bhi.n	8015aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8015a24:	2a08      	cmp	r2, #8
 8015a26:	d048      	beq.n	8015aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8015a28:	2300      	movs	r3, #0
 8015a2a:	e02a      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a2c:	2a2f      	cmp	r2, #47	@ 0x2f
 8015a2e:	d02c      	beq.n	8015a8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8015a30:	d811      	bhi.n	8015a56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8015a32:	2a2d      	cmp	r2, #45	@ 0x2d
 8015a34:	d018      	beq.n	8015a68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8015a36:	d831      	bhi.n	8015a9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8015a38:	2a2c      	cmp	r2, #44	@ 0x2c
 8015a3a:	d1f5      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015a3c:	684a      	ldr	r2, [r1, #4]
 8015a3e:	7813      	ldrb	r3, [r2, #0]
 8015a40:	7852      	ldrb	r2, [r2, #1]
 8015a42:	2a00      	cmp	r2, #0
 8015a44:	d1f0      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015a46:	2b01      	cmp	r3, #1
 8015a48:	d01d      	beq.n	8015a86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8015a4a:	2b00      	cmp	r3, #0
 8015a4c:	d02d      	beq.n	8015aaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8015a4e:	2b02      	cmp	r3, #2
 8015a50:	d1ea      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015a52:	68c3      	ldr	r3, [r0, #12]
 8015a54:	e015      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a56:	2a31      	cmp	r2, #49	@ 0x31
 8015a58:	d004      	beq.n	8015a64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8015a5a:	d332      	bcc.n	8015ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8015a5c:	2a32      	cmp	r2, #50	@ 0x32
 8015a5e:	d030      	beq.n	8015ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8015a60:	2a33      	cmp	r2, #51	@ 0x33
 8015a62:	d1e1      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015a64:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8015a66:	e00c      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a68:	684a      	ldr	r2, [r1, #4]
 8015a6a:	7813      	ldrb	r3, [r2, #0]
 8015a6c:	7852      	ldrb	r2, [r2, #1]
 8015a6e:	2a00      	cmp	r2, #0
 8015a70:	d1da      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015a72:	2b01      	cmp	r3, #1
 8015a74:	d004      	beq.n	8015a80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8015a76:	d30f      	bcc.n	8015a98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8015a78:	2b02      	cmp	r3, #2
 8015a7a:	d1d5      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015a7c:	6943      	ldr	r3, [r0, #20]
 8015a7e:	e000      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a80:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8015a82:	4618      	mov	r0, r3
 8015a84:	4770      	bx	lr
 8015a86:	69c3      	ldr	r3, [r0, #28]
 8015a88:	e7fb      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a8a:	684b      	ldr	r3, [r1, #4]
 8015a8c:	781a      	ldrb	r2, [r3, #0]
 8015a8e:	785b      	ldrb	r3, [r3, #1]
 8015a90:	2b00      	cmp	r3, #0
 8015a92:	d1c9      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015a94:	2a00      	cmp	r2, #0
 8015a96:	d1f4      	bne.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a98:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8015a9a:	e7f2      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015a9c:	684b      	ldr	r3, [r1, #4]
 8015a9e:	781a      	ldrb	r2, [r3, #0]
 8015aa0:	785b      	ldrb	r3, [r3, #1]
 8015aa2:	2b00      	cmp	r3, #0
 8015aa4:	d1c0      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015aa6:	2a00      	cmp	r2, #0
 8015aa8:	d1eb      	bne.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015aaa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8015aac:	e7e9      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015aae:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8015ab0:	e7e7      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015ab2:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8015ab4:	e7e5      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015ab6:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8015ab8:	e7e3      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015aba:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8015abc:	e7e1      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015abe:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8015ac0:	e7df      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015ac2:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8015ac4:	e7dd      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015ac6:	2a0b      	cmp	r2, #11
 8015ac8:	d059      	beq.n	8015b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8015aca:	d80e      	bhi.n	8015aea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8015acc:	2a03      	cmp	r2, #3
 8015ace:	d050      	beq.n	8015b72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8015ad0:	d804      	bhi.n	8015adc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8015ad2:	2a01      	cmp	r2, #1
 8015ad4:	d04f      	beq.n	8015b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8015ad6:	d950      	bls.n	8015b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8015ad8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8015ada:	e7d2      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015adc:	2a09      	cmp	r2, #9
 8015ade:	d04e      	beq.n	8015b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8015ae0:	d801      	bhi.n	8015ae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8015ae2:	2a08      	cmp	r2, #8
 8015ae4:	d1a0      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015ae6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8015ae8:	e7cb      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015aea:	2a2f      	cmp	r2, #47	@ 0x2f
 8015aec:	d02d      	beq.n	8015b4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8015aee:	d811      	bhi.n	8015b14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8015af0:	2a2d      	cmp	r2, #45	@ 0x2d
 8015af2:	d018      	beq.n	8015b26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8015af4:	d833      	bhi.n	8015b5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8015af6:	2a2c      	cmp	r2, #44	@ 0x2c
 8015af8:	d196      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015afa:	684a      	ldr	r2, [r1, #4]
 8015afc:	7813      	ldrb	r3, [r2, #0]
 8015afe:	7852      	ldrb	r2, [r2, #1]
 8015b00:	2a00      	cmp	r2, #0
 8015b02:	d191      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015b04:	2b01      	cmp	r3, #1
 8015b06:	d01e      	beq.n	8015b46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8015b08:	2b00      	cmp	r3, #0
 8015b0a:	d030      	beq.n	8015b6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8015b0c:	2b02      	cmp	r3, #2
 8015b0e:	d18b      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015b10:	6903      	ldr	r3, [r0, #16]
 8015b12:	e7b6      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b14:	2a31      	cmp	r2, #49	@ 0x31
 8015b16:	d004      	beq.n	8015b22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8015b18:	d333      	bcc.n	8015b82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8015b1a:	2a32      	cmp	r2, #50	@ 0x32
 8015b1c:	d031      	beq.n	8015b82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8015b1e:	2a33      	cmp	r2, #51	@ 0x33
 8015b20:	d182      	bne.n	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015b22:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8015b24:	e7ad      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b26:	684a      	ldr	r2, [r1, #4]
 8015b28:	7813      	ldrb	r3, [r2, #0]
 8015b2a:	7852      	ldrb	r2, [r2, #1]
 8015b2c:	2a00      	cmp	r2, #0
 8015b2e:	f47f af7b 	bne.w	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015b32:	2b01      	cmp	r3, #1
 8015b34:	d005      	beq.n	8015b42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8015b36:	d310      	bcc.n	8015b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8015b38:	2b02      	cmp	r3, #2
 8015b3a:	f47f af75 	bne.w	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015b3e:	6983      	ldr	r3, [r0, #24]
 8015b40:	e79f      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b42:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8015b44:	e79d      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b46:	6a03      	ldr	r3, [r0, #32]
 8015b48:	e79b      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b4a:	684b      	ldr	r3, [r1, #4]
 8015b4c:	781a      	ldrb	r2, [r3, #0]
 8015b4e:	785b      	ldrb	r3, [r3, #1]
 8015b50:	2b00      	cmp	r3, #0
 8015b52:	f47f af69 	bne.w	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015b56:	2a00      	cmp	r2, #0
 8015b58:	d193      	bne.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b5a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8015b5c:	e791      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b5e:	684b      	ldr	r3, [r1, #4]
 8015b60:	781a      	ldrb	r2, [r3, #0]
 8015b62:	785b      	ldrb	r3, [r3, #1]
 8015b64:	2b00      	cmp	r3, #0
 8015b66:	f47f af5f 	bne.w	8015a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015b6a:	2a00      	cmp	r2, #0
 8015b6c:	d189      	bne.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b6e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8015b70:	e787      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b72:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8015b74:	e785      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b76:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8015b78:	e783      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b7a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8015b7c:	e781      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b7e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8015b80:	e77f      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8015b82:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8015b84:	e77d      	b.n	8015a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08015b86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b8a:	b087      	sub	sp, #28
 8015b8c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8015b8e:	9205      	str	r2, [sp, #20]
 8015b90:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015b94:	9202      	str	r2, [sp, #8]
 8015b96:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8015b9a:	9101      	str	r1, [sp, #4]
 8015b9c:	6841      	ldr	r1, [r0, #4]
 8015b9e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8015ba2:	fb01 2404 	mla	r4, r1, r4, r2
 8015ba6:	6802      	ldr	r2, [r0, #0]
 8015ba8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015bac:	f8de 2000 	ldr.w	r2, [lr]
 8015bb0:	9203      	str	r2, [sp, #12]
 8015bb2:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015bb6:	3204      	adds	r2, #4
 8015bb8:	9204      	str	r2, [sp, #16]
 8015bba:	9a02      	ldr	r2, [sp, #8]
 8015bbc:	43d6      	mvns	r6, r2
 8015bbe:	b2f6      	uxtb	r6, r6
 8015bc0:	9a01      	ldr	r2, [sp, #4]
 8015bc2:	2a00      	cmp	r2, #0
 8015bc4:	dc03      	bgt.n	8015bce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8015bc6:	9a05      	ldr	r2, [sp, #20]
 8015bc8:	2a00      	cmp	r2, #0
 8015bca:	f340 8129 	ble.w	8015e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8015bce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015bd0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015bd4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015bd8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8015bdc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015bde:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015be2:	2b00      	cmp	r3, #0
 8015be4:	dd0e      	ble.n	8015c04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015be6:	1408      	asrs	r0, r1, #16
 8015be8:	d405      	bmi.n	8015bf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015bea:	4560      	cmp	r0, ip
 8015bec:	da03      	bge.n	8015bf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015bee:	1410      	asrs	r0, r2, #16
 8015bf0:	d401      	bmi.n	8015bf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015bf2:	42b8      	cmp	r0, r7
 8015bf4:	db07      	blt.n	8015c06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8015bf6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015bf8:	4401      	add	r1, r0
 8015bfa:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015bfc:	3b01      	subs	r3, #1
 8015bfe:	4402      	add	r2, r0
 8015c00:	3402      	adds	r4, #2
 8015c02:	e7ee      	b.n	8015be2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8015c04:	d071      	beq.n	8015cea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8015c06:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8015c08:	1e58      	subs	r0, r3, #1
 8015c0a:	fb05 1500 	mla	r5, r5, r0, r1
 8015c0e:	142d      	asrs	r5, r5, #16
 8015c10:	d45f      	bmi.n	8015cd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015c12:	4565      	cmp	r5, ip
 8015c14:	da5d      	bge.n	8015cd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015c16:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8015c18:	fb05 2000 	mla	r0, r5, r0, r2
 8015c1c:	1400      	asrs	r0, r0, #16
 8015c1e:	d458      	bmi.n	8015cd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015c20:	42b8      	cmp	r0, r7
 8015c22:	da56      	bge.n	8015cd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015c24:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8015c28:	4699      	mov	r9, r3
 8015c2a:	46a2      	mov	sl, r4
 8015c2c:	f1b9 0f00 	cmp.w	r9, #0
 8015c30:	dd57      	ble.n	8015ce2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8015c32:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015c36:	9803      	ldr	r0, [sp, #12]
 8015c38:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8015c3c:	140d      	asrs	r5, r1, #16
 8015c3e:	fb07 000c 	mla	r0, r7, ip, r0
 8015c42:	f109 39ff 	add.w	r9, r9, #4294967295
 8015c46:	5d40      	ldrb	r0, [r0, r5]
 8015c48:	9d04      	ldr	r5, [sp, #16]
 8015c4a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015c4e:	f8ba 5000 	ldrh.w	r5, [sl]
 8015c52:	122f      	asrs	r7, r5, #8
 8015c54:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015c58:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015c5c:	fb17 f706 	smulbb	r7, r7, r6
 8015c60:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015c64:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015c68:	00ed      	lsls	r5, r5, #3
 8015c6a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015c6e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8015c72:	10c7      	asrs	r7, r0, #3
 8015c74:	b2ed      	uxtb	r5, r5
 8015c76:	00c0      	lsls	r0, r0, #3
 8015c78:	fb18 f806 	smulbb	r8, r8, r6
 8015c7c:	fb15 f506 	smulbb	r5, r5, r6
 8015c80:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015c84:	b2c0      	uxtb	r0, r0
 8015c86:	fa1f fc8c 	uxth.w	ip, ip
 8015c8a:	fb07 870b 	mla	r7, r7, fp, r8
 8015c8e:	fb00 500b 	mla	r0, r0, fp, r5
 8015c92:	b280      	uxth	r0, r0
 8015c94:	b2bf      	uxth	r7, r7
 8015c96:	f10c 0501 	add.w	r5, ip, #1
 8015c9a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015c9e:	f107 0801 	add.w	r8, r7, #1
 8015ca2:	1c45      	adds	r5, r0, #1
 8015ca4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015ca8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015cac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015cae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015cb2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015cb6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015cba:	ea45 0c0c 	orr.w	ip, r5, ip
 8015cbe:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8015cc2:	4401      	add	r1, r0
 8015cc4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015cc6:	ea4c 0c08 	orr.w	ip, ip, r8
 8015cca:	f82a cb02 	strh.w	ip, [sl], #2
 8015cce:	4402      	add	r2, r0
 8015cd0:	e7ac      	b.n	8015c2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015cd2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8015cd6:	f04f 0800 	mov.w	r8, #0
 8015cda:	eb03 0008 	add.w	r0, r3, r8
 8015cde:	2800      	cmp	r0, #0
 8015ce0:	dc41      	bgt.n	8015d66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8015ce2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015ce6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015cea:	9b01      	ldr	r3, [sp, #4]
 8015cec:	2b00      	cmp	r3, #0
 8015cee:	f340 8097 	ble.w	8015e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8015cf2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015cf6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8015cfa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015cfe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015d00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015d04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015d08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015d0c:	eef0 6a62 	vmov.f32	s13, s5
 8015d10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015d14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015d1c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8015d20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015d24:	eef0 6a43 	vmov.f32	s13, s6
 8015d28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015d2c:	ee12 2a90 	vmov	r2, s5
 8015d30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015d34:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d38:	ee13 2a10 	vmov	r2, s6
 8015d3c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8015d3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015d40:	fb92 f3f3 	sdiv	r3, r2, r3
 8015d44:	9314      	str	r3, [sp, #80]	@ 0x50
 8015d46:	9b01      	ldr	r3, [sp, #4]
 8015d48:	9a05      	ldr	r2, [sp, #20]
 8015d4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015d4e:	3b01      	subs	r3, #1
 8015d50:	9301      	str	r3, [sp, #4]
 8015d52:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8015d56:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8015d58:	eeb0 3a67 	vmov.f32	s6, s15
 8015d5c:	bf08      	it	eq
 8015d5e:	4613      	moveq	r3, r2
 8015d60:	eef0 2a47 	vmov.f32	s5, s14
 8015d64:	e72c      	b.n	8015bc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8015d66:	140f      	asrs	r7, r1, #16
 8015d68:	d453      	bmi.n	8015e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015d6a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015d6e:	42bd      	cmp	r5, r7
 8015d70:	dd4f      	ble.n	8015e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015d72:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015d76:	d44c      	bmi.n	8015e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015d78:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015d7c:	4560      	cmp	r0, ip
 8015d7e:	dd48      	ble.n	8015e12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015d80:	9803      	ldr	r0, [sp, #12]
 8015d82:	b22d      	sxth	r5, r5
 8015d84:	fb0c 0505 	mla	r5, ip, r5, r0
 8015d88:	5de8      	ldrb	r0, [r5, r7]
 8015d8a:	9d04      	ldr	r5, [sp, #16]
 8015d8c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015d90:	f06f 0501 	mvn.w	r5, #1
 8015d94:	fb05 fb08 	mul.w	fp, r5, r8
 8015d98:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015d9c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015da0:	122f      	asrs	r7, r5, #8
 8015da2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8015da6:	fb17 f706 	smulbb	r7, r7, r6
 8015daa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015dae:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015db2:	00ed      	lsls	r5, r5, #3
 8015db4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015db8:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015dbc:	10c7      	asrs	r7, r0, #3
 8015dbe:	b2ed      	uxtb	r5, r5
 8015dc0:	00c0      	lsls	r0, r0, #3
 8015dc2:	fb19 f906 	smulbb	r9, r9, r6
 8015dc6:	fb15 f506 	smulbb	r5, r5, r6
 8015dca:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8015dce:	b2c0      	uxtb	r0, r0
 8015dd0:	fa1f fc8c 	uxth.w	ip, ip
 8015dd4:	fb07 970a 	mla	r7, r7, sl, r9
 8015dd8:	fb00 500a 	mla	r0, r0, sl, r5
 8015ddc:	b2bf      	uxth	r7, r7
 8015dde:	b280      	uxth	r0, r0
 8015de0:	f10c 0501 	add.w	r5, ip, #1
 8015de4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015de8:	f107 0901 	add.w	r9, r7, #1
 8015dec:	1c45      	adds	r5, r0, #1
 8015dee:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015df2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015df6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8015dfa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015dfe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015e02:	ea45 0c0c 	orr.w	ip, r5, ip
 8015e06:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8015e0a:	ea4c 0c09 	orr.w	ip, ip, r9
 8015e0e:	f824 c00b 	strh.w	ip, [r4, fp]
 8015e12:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8015e14:	4401      	add	r1, r0
 8015e16:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8015e18:	f108 38ff 	add.w	r8, r8, #4294967295
 8015e1c:	4402      	add	r2, r0
 8015e1e:	e75c      	b.n	8015cda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015e20:	b007      	add	sp, #28
 8015e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e2a:	b085      	sub	sp, #20
 8015e2c:	4693      	mov	fp, r2
 8015e2e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015e30:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8015e32:	6870      	ldr	r0, [r6, #4]
 8015e34:	9100      	str	r1, [sp, #0]
 8015e36:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8015e3a:	fb00 2404 	mla	r4, r0, r4, r2
 8015e3e:	6832      	ldr	r2, [r6, #0]
 8015e40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015e44:	682a      	ldr	r2, [r5, #0]
 8015e46:	9201      	str	r2, [sp, #4]
 8015e48:	686a      	ldr	r2, [r5, #4]
 8015e4a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8015e4e:	3204      	adds	r2, #4
 8015e50:	9202      	str	r2, [sp, #8]
 8015e52:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8015e56:	9a00      	ldr	r2, [sp, #0]
 8015e58:	2a00      	cmp	r2, #0
 8015e5a:	dc03      	bgt.n	8015e64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015e5c:	f1bb 0f00 	cmp.w	fp, #0
 8015e60:	f340 80a0 	ble.w	8015fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8015e64:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8015e66:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015e6a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015e6e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8015e72:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015e74:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8015e78:	2b00      	cmp	r3, #0
 8015e7a:	dd0c      	ble.n	8015e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015e7c:	1406      	asrs	r6, r0, #16
 8015e7e:	d405      	bmi.n	8015e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015e80:	454e      	cmp	r6, r9
 8015e82:	da03      	bge.n	8015e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015e84:	1416      	asrs	r6, r2, #16
 8015e86:	d401      	bmi.n	8015e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015e88:	4546      	cmp	r6, r8
 8015e8a:	db05      	blt.n	8015e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015e8c:	4470      	add	r0, lr
 8015e8e:	4462      	add	r2, ip
 8015e90:	3b01      	subs	r3, #1
 8015e92:	3402      	adds	r4, #2
 8015e94:	e7f0      	b.n	8015e78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015e96:	d00f      	beq.n	8015eb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015e98:	1e5e      	subs	r6, r3, #1
 8015e9a:	fb0e 0706 	mla	r7, lr, r6, r0
 8015e9e:	143f      	asrs	r7, r7, #16
 8015ea0:	d541      	bpl.n	8015f26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8015ea2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8015ea6:	4698      	mov	r8, r3
 8015ea8:	9603      	str	r6, [sp, #12]
 8015eaa:	f1b8 0f00 	cmp.w	r8, #0
 8015eae:	dc59      	bgt.n	8015f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015eb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015eb4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015eb8:	9b00      	ldr	r3, [sp, #0]
 8015eba:	2b00      	cmp	r3, #0
 8015ebc:	dd72      	ble.n	8015fa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8015ebe:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ec2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ec6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015eca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015ecc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015ed0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ed4:	eeb0 6a62 	vmov.f32	s12, s5
 8015ed8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015edc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ee0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015ee4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8015ee8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015eec:	eeb0 6a43 	vmov.f32	s12, s6
 8015ef0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015ef4:	ee12 2a90 	vmov	r2, s5
 8015ef8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015efc:	fb92 fef3 	sdiv	lr, r2, r3
 8015f00:	ee13 2a10 	vmov	r2, s6
 8015f04:	fb92 fcf3 	sdiv	ip, r2, r3
 8015f08:	9b00      	ldr	r3, [sp, #0]
 8015f0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015f0e:	3b01      	subs	r3, #1
 8015f10:	9300      	str	r3, [sp, #0]
 8015f12:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8015f16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8015f18:	eeb0 3a67 	vmov.f32	s6, s15
 8015f1c:	bf08      	it	eq
 8015f1e:	465b      	moveq	r3, fp
 8015f20:	eef0 2a47 	vmov.f32	s5, s14
 8015f24:	e797      	b.n	8015e56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015f26:	454f      	cmp	r7, r9
 8015f28:	dabb      	bge.n	8015ea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015f2a:	fb0c 2606 	mla	r6, ip, r6, r2
 8015f2e:	1436      	asrs	r6, r6, #16
 8015f30:	d4b7      	bmi.n	8015ea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015f32:	4546      	cmp	r6, r8
 8015f34:	dab5      	bge.n	8015ea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015f36:	461e      	mov	r6, r3
 8015f38:	46a0      	mov	r8, r4
 8015f3a:	2e00      	cmp	r6, #0
 8015f3c:	ddb8      	ble.n	8015eb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015f3e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8015f42:	9901      	ldr	r1, [sp, #4]
 8015f44:	1417      	asrs	r7, r2, #16
 8015f46:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015f4a:	fb0a 1707 	mla	r7, sl, r7, r1
 8015f4e:	9902      	ldr	r1, [sp, #8]
 8015f50:	f817 7009 	ldrb.w	r7, [r7, r9]
 8015f54:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015f58:	f828 7b02 	strh.w	r7, [r8], #2
 8015f5c:	4470      	add	r0, lr
 8015f5e:	4462      	add	r2, ip
 8015f60:	3e01      	subs	r6, #1
 8015f62:	e7ea      	b.n	8015f3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8015f64:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015f68:	d417      	bmi.n	8015f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015f6a:	68ae      	ldr	r6, [r5, #8]
 8015f6c:	454e      	cmp	r6, r9
 8015f6e:	dd14      	ble.n	8015f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015f70:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8015f74:	d411      	bmi.n	8015f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015f76:	68ef      	ldr	r7, [r5, #12]
 8015f78:	4557      	cmp	r7, sl
 8015f7a:	dd0e      	ble.n	8015f9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015f7c:	9f01      	ldr	r7, [sp, #4]
 8015f7e:	b236      	sxth	r6, r6
 8015f80:	fb0a 7606 	mla	r6, sl, r6, r7
 8015f84:	9f02      	ldr	r7, [sp, #8]
 8015f86:	f816 6009 	ldrb.w	r6, [r6, r9]
 8015f8a:	f06f 0101 	mvn.w	r1, #1
 8015f8e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8015f92:	fb01 f608 	mul.w	r6, r1, r8
 8015f96:	9903      	ldr	r1, [sp, #12]
 8015f98:	538f      	strh	r7, [r1, r6]
 8015f9a:	4470      	add	r0, lr
 8015f9c:	4462      	add	r2, ip
 8015f9e:	f108 38ff 	add.w	r8, r8, #4294967295
 8015fa2:	e782      	b.n	8015eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015fa4:	b005      	add	sp, #20
 8015fa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015faa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015faa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fae:	b087      	sub	sp, #28
 8015fb0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8015fb2:	9205      	str	r2, [sp, #20]
 8015fb4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015fb8:	9203      	str	r2, [sp, #12]
 8015fba:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8015fbe:	9102      	str	r1, [sp, #8]
 8015fc0:	6861      	ldr	r1, [r4, #4]
 8015fc2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8015fc6:	fb01 2000 	mla	r0, r1, r0, r2
 8015fca:	6822      	ldr	r2, [r4, #0]
 8015fcc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8015fd0:	9200      	str	r2, [sp, #0]
 8015fd2:	f8dc 2000 	ldr.w	r2, [ip]
 8015fd6:	9204      	str	r2, [sp, #16]
 8015fd8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015fdc:	3204      	adds	r2, #4
 8015fde:	9201      	str	r2, [sp, #4]
 8015fe0:	9a03      	ldr	r2, [sp, #12]
 8015fe2:	43d5      	mvns	r5, r2
 8015fe4:	b2ed      	uxtb	r5, r5
 8015fe6:	9a02      	ldr	r2, [sp, #8]
 8015fe8:	2a00      	cmp	r2, #0
 8015fea:	dc03      	bgt.n	8015ff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8015fec:	9a05      	ldr	r2, [sp, #20]
 8015fee:	2a00      	cmp	r2, #0
 8015ff0:	f340 812c 	ble.w	801624c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015ff4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8015ff6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8015ffa:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8015ffe:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016002:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016004:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016008:	2b00      	cmp	r3, #0
 801600a:	dd10      	ble.n	801602e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801600c:	140c      	asrs	r4, r1, #16
 801600e:	d405      	bmi.n	801601c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016010:	4574      	cmp	r4, lr
 8016012:	da03      	bge.n	801601c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016014:	1414      	asrs	r4, r2, #16
 8016016:	d401      	bmi.n	801601c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016018:	42bc      	cmp	r4, r7
 801601a:	db09      	blt.n	8016030 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801601c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801601e:	9800      	ldr	r0, [sp, #0]
 8016020:	4421      	add	r1, r4
 8016022:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016024:	3002      	adds	r0, #2
 8016026:	4422      	add	r2, r4
 8016028:	3b01      	subs	r3, #1
 801602a:	9000      	str	r0, [sp, #0]
 801602c:	e7ec      	b.n	8016008 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801602e:	d071      	beq.n	8016114 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8016030:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016032:	1e5c      	subs	r4, r3, #1
 8016034:	fb06 1604 	mla	r6, r6, r4, r1
 8016038:	1436      	asrs	r6, r6, #16
 801603a:	d45d      	bmi.n	80160f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801603c:	4576      	cmp	r6, lr
 801603e:	da5b      	bge.n	80160f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8016040:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8016042:	fb06 2404 	mla	r4, r6, r4, r2
 8016046:	1424      	asrs	r4, r4, #16
 8016048:	d456      	bmi.n	80160f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801604a:	42bc      	cmp	r4, r7
 801604c:	da54      	bge.n	80160f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801604e:	f8dd 9000 	ldr.w	r9, [sp]
 8016052:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8016056:	4698      	mov	r8, r3
 8016058:	f1b8 0f00 	cmp.w	r8, #0
 801605c:	dd54      	ble.n	8016108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801605e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016062:	9804      	ldr	r0, [sp, #16]
 8016064:	1414      	asrs	r4, r2, #16
 8016066:	fb07 0404 	mla	r4, r7, r4, r0
 801606a:	140e      	asrs	r6, r1, #16
 801606c:	9801      	ldr	r0, [sp, #4]
 801606e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8016072:	f8b9 4000 	ldrh.w	r4, [r9]
 8016076:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801607a:	eb00 0b0e 	add.w	fp, r0, lr
 801607e:	1227      	asrs	r7, r4, #8
 8016080:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8016084:	f89b b001 	ldrb.w	fp, [fp, #1]
 8016088:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801608c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801608e:	fb16 f60a 	smulbb	r6, r6, sl
 8016092:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016096:	fb07 6705 	mla	r7, r7, r5, r6
 801609a:	10e6      	asrs	r6, r4, #3
 801609c:	00e4      	lsls	r4, r4, #3
 801609e:	b2e4      	uxtb	r4, r4
 80160a0:	fb1b fb0a 	smulbb	fp, fp, sl
 80160a4:	fb14 f405 	smulbb	r4, r4, r5
 80160a8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80160ac:	b2bf      	uxth	r7, r7
 80160ae:	fb06 b605 	mla	r6, r6, r5, fp
 80160b2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80160b6:	b2b6      	uxth	r6, r6
 80160b8:	fa1f fe8e 	uxth.w	lr, lr
 80160bc:	1c7c      	adds	r4, r7, #1
 80160be:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80160c2:	f106 0b01 	add.w	fp, r6, #1
 80160c6:	f10e 0401 	add.w	r4, lr, #1
 80160ca:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80160ce:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80160d2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80160d6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80160da:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80160de:	4327      	orrs	r7, r4
 80160e0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80160e4:	4401      	add	r1, r0
 80160e6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80160e8:	ea47 070b 	orr.w	r7, r7, fp
 80160ec:	f829 7b02 	strh.w	r7, [r9], #2
 80160f0:	4402      	add	r2, r0
 80160f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80160f6:	e7af      	b.n	8016058 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80160f8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80160fc:	f04f 0e00 	mov.w	lr, #0
 8016100:	eb03 040e 	add.w	r4, r3, lr
 8016104:	2c00      	cmp	r4, #0
 8016106:	dc43      	bgt.n	8016190 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016108:	9a00      	ldr	r2, [sp, #0]
 801610a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801610e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016112:	9300      	str	r3, [sp, #0]
 8016114:	9b02      	ldr	r3, [sp, #8]
 8016116:	2b00      	cmp	r3, #0
 8016118:	f340 8098 	ble.w	801624c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801611c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016120:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016124:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016128:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801612a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801612e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016132:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016136:	eef0 6a62 	vmov.f32	s13, s5
 801613a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801613e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016142:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016146:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801614a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801614e:	eef0 6a43 	vmov.f32	s13, s6
 8016152:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016156:	ee12 2a90 	vmov	r2, s5
 801615a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801615e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016162:	ee13 2a10 	vmov	r2, s6
 8016166:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016168:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801616a:	fb92 f3f3 	sdiv	r3, r2, r3
 801616e:	9314      	str	r3, [sp, #80]	@ 0x50
 8016170:	9b02      	ldr	r3, [sp, #8]
 8016172:	9a05      	ldr	r2, [sp, #20]
 8016174:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016178:	3b01      	subs	r3, #1
 801617a:	9302      	str	r3, [sp, #8]
 801617c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8016180:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016182:	eeb0 3a67 	vmov.f32	s6, s15
 8016186:	bf08      	it	eq
 8016188:	4613      	moveq	r3, r2
 801618a:	eef0 2a47 	vmov.f32	s5, s14
 801618e:	e72a      	b.n	8015fe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016190:	140f      	asrs	r7, r1, #16
 8016192:	d454      	bmi.n	801623e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016194:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8016198:	42be      	cmp	r6, r7
 801619a:	dd50      	ble.n	801623e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801619c:	ea5f 4822 	movs.w	r8, r2, asr #16
 80161a0:	d44d      	bmi.n	801623e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80161a2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80161a6:	4544      	cmp	r4, r8
 80161a8:	dd49      	ble.n	801623e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80161aa:	9c04      	ldr	r4, [sp, #16]
 80161ac:	b236      	sxth	r6, r6
 80161ae:	fb08 4606 	mla	r6, r8, r6, r4
 80161b2:	f06f 0001 	mvn.w	r0, #1
 80161b6:	f816 8007 	ldrb.w	r8, [r6, r7]
 80161ba:	9c01      	ldr	r4, [sp, #4]
 80161bc:	fb00 fa0e 	mul.w	sl, r0, lr
 80161c0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80161c4:	9800      	ldr	r0, [sp, #0]
 80161c6:	eb04 0b08 	add.w	fp, r4, r8
 80161ca:	f830 400a 	ldrh.w	r4, [r0, sl]
 80161ce:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80161d2:	9801      	ldr	r0, [sp, #4]
 80161d4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80161d8:	f810 8008 	ldrb.w	r8, [r0, r8]
 80161dc:	9800      	ldr	r0, [sp, #0]
 80161de:	1227      	asrs	r7, r4, #8
 80161e0:	fb16 f609 	smulbb	r6, r6, r9
 80161e4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80161e8:	fb07 6705 	mla	r7, r7, r5, r6
 80161ec:	10e6      	asrs	r6, r4, #3
 80161ee:	00e4      	lsls	r4, r4, #3
 80161f0:	b2e4      	uxtb	r4, r4
 80161f2:	fb1b fb09 	smulbb	fp, fp, r9
 80161f6:	fb14 f405 	smulbb	r4, r4, r5
 80161fa:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80161fe:	b2bf      	uxth	r7, r7
 8016200:	fb06 b605 	mla	r6, r6, r5, fp
 8016204:	fb08 4809 	mla	r8, r8, r9, r4
 8016208:	b2b6      	uxth	r6, r6
 801620a:	fa1f f888 	uxth.w	r8, r8
 801620e:	1c7c      	adds	r4, r7, #1
 8016210:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8016214:	f106 0b01 	add.w	fp, r6, #1
 8016218:	f108 0401 	add.w	r4, r8, #1
 801621c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8016220:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8016224:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016228:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801622c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8016230:	4327      	orrs	r7, r4
 8016232:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8016236:	ea47 070b 	orr.w	r7, r7, fp
 801623a:	f820 700a 	strh.w	r7, [r0, sl]
 801623e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016240:	4401      	add	r1, r0
 8016242:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8016244:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016248:	4402      	add	r2, r0
 801624a:	e759      	b.n	8016100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801624c:	b007      	add	sp, #28
 801624e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08016254 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016258:	b085      	sub	sp, #20
 801625a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801625e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8016260:	9203      	str	r2, [sp, #12]
 8016262:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016266:	6870      	ldr	r0, [r6, #4]
 8016268:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801626a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801626e:	686f      	ldr	r7, [r5, #4]
 8016270:	9101      	str	r1, [sp, #4]
 8016272:	fb00 2404 	mla	r4, r0, r4, r2
 8016276:	6832      	ldr	r2, [r6, #0]
 8016278:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801627c:	682a      	ldr	r2, [r5, #0]
 801627e:	9202      	str	r2, [sp, #8]
 8016280:	3704      	adds	r7, #4
 8016282:	9a01      	ldr	r2, [sp, #4]
 8016284:	2a00      	cmp	r2, #0
 8016286:	dc03      	bgt.n	8016290 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016288:	9a03      	ldr	r2, [sp, #12]
 801628a:	2a00      	cmp	r2, #0
 801628c:	f340 80cc 	ble.w	8016428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8016290:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016292:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016296:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801629a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801629e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80162a0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80162a4:	2b00      	cmp	r3, #0
 80162a6:	dd0d      	ble.n	80162c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80162a8:	1406      	asrs	r6, r0, #16
 80162aa:	d405      	bmi.n	80162b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80162ac:	454e      	cmp	r6, r9
 80162ae:	da03      	bge.n	80162b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80162b0:	1416      	asrs	r6, r2, #16
 80162b2:	d401      	bmi.n	80162b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80162b4:	4546      	cmp	r6, r8
 80162b6:	db06      	blt.n	80162c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80162b8:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80162ba:	4460      	add	r0, ip
 80162bc:	4432      	add	r2, r6
 80162be:	3b01      	subs	r3, #1
 80162c0:	3402      	adds	r4, #2
 80162c2:	e7ef      	b.n	80162a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80162c4:	d00f      	beq.n	80162e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80162c6:	1e5e      	subs	r6, r3, #1
 80162c8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80162cc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80162d0:	d543      	bpl.n	801635a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80162d2:	4698      	mov	r8, r3
 80162d4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80162d8:	f1b8 0f00 	cmp.w	r8, #0
 80162dc:	dc71      	bgt.n	80163c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80162de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80162e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80162e6:	9b01      	ldr	r3, [sp, #4]
 80162e8:	2b00      	cmp	r3, #0
 80162ea:	f340 809d 	ble.w	8016428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80162ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80162f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80162f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80162fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80162fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016300:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016304:	eeb0 6a62 	vmov.f32	s12, s5
 8016308:	ee61 7a27 	vmul.f32	s15, s2, s15
 801630c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016310:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016314:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8016318:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801631c:	eeb0 6a43 	vmov.f32	s12, s6
 8016320:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016324:	ee12 2a90 	vmov	r2, s5
 8016328:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801632c:	fb92 fcf3 	sdiv	ip, r2, r3
 8016330:	ee13 2a10 	vmov	r2, s6
 8016334:	fb92 f3f3 	sdiv	r3, r2, r3
 8016338:	9312      	str	r3, [sp, #72]	@ 0x48
 801633a:	9b01      	ldr	r3, [sp, #4]
 801633c:	9a03      	ldr	r2, [sp, #12]
 801633e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016342:	3b01      	subs	r3, #1
 8016344:	9301      	str	r3, [sp, #4]
 8016346:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801634a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801634c:	eeb0 3a67 	vmov.f32	s6, s15
 8016350:	bf08      	it	eq
 8016352:	4613      	moveq	r3, r2
 8016354:	eef0 2a47 	vmov.f32	s5, s14
 8016358:	e793      	b.n	8016282 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801635a:	45ce      	cmp	lr, r9
 801635c:	dab9      	bge.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801635e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8016360:	fb01 2606 	mla	r6, r1, r6, r2
 8016364:	1436      	asrs	r6, r6, #16
 8016366:	d4b4      	bmi.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016368:	4546      	cmp	r6, r8
 801636a:	dab2      	bge.n	80162d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801636c:	4698      	mov	r8, r3
 801636e:	46a2      	mov	sl, r4
 8016370:	f1b8 0f00 	cmp.w	r8, #0
 8016374:	ddb3      	ble.n	80162de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016376:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801637a:	9902      	ldr	r1, [sp, #8]
 801637c:	1416      	asrs	r6, r2, #16
 801637e:	fb09 1606 	mla	r6, r9, r6, r1
 8016382:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8016386:	492a      	ldr	r1, [pc, #168]	@ (8016430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8016388:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801638c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8016390:	eb07 0b0e 	add.w	fp, r7, lr
 8016394:	4460      	add	r0, ip
 8016396:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801639a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801639e:	00f6      	lsls	r6, r6, #3
 80163a0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80163a4:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80163a8:	ea49 0606 	orr.w	r6, r9, r6
 80163ac:	f817 900e 	ldrb.w	r9, [r7, lr]
 80163b0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80163b2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80163b6:	f82a 6b02 	strh.w	r6, [sl], #2
 80163ba:	440a      	add	r2, r1
 80163bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80163c0:	e7d6      	b.n	8016370 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80163c2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80163c6:	d429      	bmi.n	801641c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80163c8:	68ae      	ldr	r6, [r5, #8]
 80163ca:	454e      	cmp	r6, r9
 80163cc:	dd26      	ble.n	801641c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80163ce:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80163d2:	d423      	bmi.n	801641c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80163d4:	68e9      	ldr	r1, [r5, #12]
 80163d6:	4559      	cmp	r1, fp
 80163d8:	dd20      	ble.n	801641c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80163da:	9902      	ldr	r1, [sp, #8]
 80163dc:	fa0f fe86 	sxth.w	lr, r6
 80163e0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80163e4:	f06f 0101 	mvn.w	r1, #1
 80163e8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80163ec:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80163f0:	eb07 060e 	add.w	r6, r7, lr
 80163f4:	fb01 f908 	mul.w	r9, r1, r8
 80163f8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80163fc:	7876      	ldrb	r6, [r6, #1]
 80163fe:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8016402:	00f6      	lsls	r6, r6, #3
 8016404:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8016408:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801640c:	ea4b 0606 	orr.w	r6, fp, r6
 8016410:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8016414:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8016418:	f82a 6009 	strh.w	r6, [sl, r9]
 801641c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801641e:	4460      	add	r0, ip
 8016420:	440a      	add	r2, r1
 8016422:	f108 38ff 	add.w	r8, r8, #4294967295
 8016426:	e757      	b.n	80162d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016428:	b005      	add	sp, #20
 801642a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801642e:	bf00      	nop
 8016430:	fffff800 	.word	0xfffff800

08016434 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016438:	b087      	sub	sp, #28
 801643a:	468b      	mov	fp, r1
 801643c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801643e:	9204      	str	r2, [sp, #16]
 8016440:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016444:	9205      	str	r2, [sp, #20]
 8016446:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801644a:	6841      	ldr	r1, [r0, #4]
 801644c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8016450:	fb01 2404 	mla	r4, r1, r4, r2
 8016454:	6802      	ldr	r2, [r0, #0]
 8016456:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801645a:	f8dc 2000 	ldr.w	r2, [ip]
 801645e:	9201      	str	r2, [sp, #4]
 8016460:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8016464:	3204      	adds	r2, #4
 8016466:	9202      	str	r2, [sp, #8]
 8016468:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801646c:	f1bb 0f00 	cmp.w	fp, #0
 8016470:	dc03      	bgt.n	801647a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8016472:	9a04      	ldr	r2, [sp, #16]
 8016474:	2a00      	cmp	r2, #0
 8016476:	f340 8138 	ble.w	80166ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801647a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801647c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8016480:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8016484:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8016488:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801648a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801648e:	2b00      	cmp	r3, #0
 8016490:	dd0e      	ble.n	80164b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016492:	1402      	asrs	r2, r0, #16
 8016494:	d405      	bmi.n	80164a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016496:	42ba      	cmp	r2, r7
 8016498:	da03      	bge.n	80164a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801649a:	140a      	asrs	r2, r1, #16
 801649c:	d401      	bmi.n	80164a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801649e:	42b2      	cmp	r2, r6
 80164a0:	db07      	blt.n	80164b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80164a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80164a4:	4410      	add	r0, r2
 80164a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80164a8:	3b01      	subs	r3, #1
 80164aa:	4411      	add	r1, r2
 80164ac:	3402      	adds	r4, #2
 80164ae:	e7ee      	b.n	801648e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80164b0:	d019      	beq.n	80164e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80164b2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80164b4:	1e5a      	subs	r2, r3, #1
 80164b6:	fb05 0502 	mla	r5, r5, r2, r0
 80164ba:	142d      	asrs	r5, r5, #16
 80164bc:	d409      	bmi.n	80164d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80164be:	42bd      	cmp	r5, r7
 80164c0:	da07      	bge.n	80164d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80164c2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80164c4:	fb05 1202 	mla	r2, r5, r2, r1
 80164c8:	1412      	asrs	r2, r2, #16
 80164ca:	d402      	bmi.n	80164d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80164cc:	42b2      	cmp	r2, r6
 80164ce:	f2c0 80ac 	blt.w	801662a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80164d2:	f04f 0e00 	mov.w	lr, #0
 80164d6:	eb03 020e 	add.w	r2, r3, lr
 80164da:	2a00      	cmp	r2, #0
 80164dc:	dc3e      	bgt.n	801655c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80164de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164e6:	f1bb 0f00 	cmp.w	fp, #0
 80164ea:	f340 80fe 	ble.w	80166ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80164ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80164fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80164fc:	f1bb 0b01 	subs.w	fp, fp, #1
 8016500:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016504:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016508:	eeb0 6a62 	vmov.f32	s12, s5
 801650c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016510:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016514:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016518:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801651c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016520:	eeb0 6a43 	vmov.f32	s12, s6
 8016524:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016528:	ee12 2a90 	vmov	r2, s5
 801652c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016530:	fb92 f3f3 	sdiv	r3, r2, r3
 8016534:	ee13 2a10 	vmov	r2, s6
 8016538:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801653c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801653e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016540:	fb92 f3f3 	sdiv	r3, r2, r3
 8016544:	9a04      	ldr	r2, [sp, #16]
 8016546:	9314      	str	r3, [sp, #80]	@ 0x50
 8016548:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801654c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801654e:	eeb0 3a67 	vmov.f32	s6, s15
 8016552:	bf08      	it	eq
 8016554:	4613      	moveq	r3, r2
 8016556:	eef0 2a47 	vmov.f32	s5, s14
 801655a:	e787      	b.n	801646c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801655c:	1406      	asrs	r6, r0, #16
 801655e:	d45d      	bmi.n	801661c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016560:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8016564:	42b5      	cmp	r5, r6
 8016566:	dd59      	ble.n	801661c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016568:	140f      	asrs	r7, r1, #16
 801656a:	d457      	bmi.n	801661c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801656c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8016570:	42ba      	cmp	r2, r7
 8016572:	dd53      	ble.n	801661c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016574:	9a01      	ldr	r2, [sp, #4]
 8016576:	b22d      	sxth	r5, r5
 8016578:	fb07 2505 	mla	r5, r7, r5, r2
 801657c:	5daa      	ldrb	r2, [r5, r6]
 801657e:	9d02      	ldr	r5, [sp, #8]
 8016580:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8016584:	0e2e      	lsrs	r6, r5, #24
 8016586:	d049      	beq.n	801661c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8016588:	f06f 0201 	mvn.w	r2, #1
 801658c:	fb02 f20e 	mul.w	r2, r2, lr
 8016590:	9203      	str	r2, [sp, #12]
 8016592:	f834 8002 	ldrh.w	r8, [r4, r2]
 8016596:	9a05      	ldr	r2, [sp, #20]
 8016598:	4356      	muls	r6, r2
 801659a:	1c72      	adds	r2, r6, #1
 801659c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80165a0:	1212      	asrs	r2, r2, #8
 80165a2:	fa1f f982 	uxth.w	r9, r2
 80165a6:	ea4f 2728 	mov.w	r7, r8, asr #8
 80165aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80165ae:	43d2      	mvns	r2, r2
 80165b0:	b2d2      	uxtb	r2, r2
 80165b2:	fb16 f609 	smulbb	r6, r6, r9
 80165b6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80165ba:	fb07 6702 	mla	r7, r7, r2, r6
 80165be:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80165c2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80165c6:	b2ed      	uxtb	r5, r5
 80165c8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80165cc:	fa5f f888 	uxtb.w	r8, r8
 80165d0:	fb15 f509 	smulbb	r5, r5, r9
 80165d4:	fb08 5502 	mla	r5, r8, r2, r5
 80165d8:	b2bf      	uxth	r7, r7
 80165da:	fb1a fa09 	smulbb	sl, sl, r9
 80165de:	b2ad      	uxth	r5, r5
 80165e0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80165e4:	fb06 a602 	mla	r6, r6, r2, sl
 80165e8:	1c7a      	adds	r2, r7, #1
 80165ea:	f105 0a01 	add.w	sl, r5, #1
 80165ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80165f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80165f6:	b2b6      	uxth	r6, r6
 80165f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80165fc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016600:	ea4a 0707 	orr.w	r7, sl, r7
 8016604:	f106 0a01 	add.w	sl, r6, #1
 8016608:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801660c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016610:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016614:	9a03      	ldr	r2, [sp, #12]
 8016616:	ea47 070a 	orr.w	r7, r7, sl
 801661a:	52a7      	strh	r7, [r4, r2]
 801661c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801661e:	4410      	add	r0, r2
 8016620:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8016622:	f10e 3eff 	add.w	lr, lr, #4294967295
 8016626:	4411      	add	r1, r2
 8016628:	e755      	b.n	80164d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801662a:	f04f 0800 	mov.w	r8, #0
 801662e:	eba3 0208 	sub.w	r2, r3, r8
 8016632:	2a00      	cmp	r2, #0
 8016634:	f77f af53 	ble.w	80164de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016638:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801663c:	9f01      	ldr	r7, [sp, #4]
 801663e:	140a      	asrs	r2, r1, #16
 8016640:	1405      	asrs	r5, r0, #16
 8016642:	fb06 7202 	mla	r2, r6, r2, r7
 8016646:	5d52      	ldrb	r2, [r2, r5]
 8016648:	9d02      	ldr	r5, [sp, #8]
 801664a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801664e:	0e2e      	lsrs	r6, r5, #24
 8016650:	d044      	beq.n	80166dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8016652:	9a05      	ldr	r2, [sp, #20]
 8016654:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016658:	4356      	muls	r6, r2
 801665a:	1c72      	adds	r2, r6, #1
 801665c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8016660:	1212      	asrs	r2, r2, #8
 8016662:	fa1f f982 	uxth.w	r9, r2
 8016666:	ea4f 272e 	mov.w	r7, lr, asr #8
 801666a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801666e:	43d2      	mvns	r2, r2
 8016670:	b2d2      	uxtb	r2, r2
 8016672:	fb16 f609 	smulbb	r6, r6, r9
 8016676:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801667a:	fb07 6702 	mla	r7, r7, r2, r6
 801667e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016682:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016686:	b2ed      	uxtb	r5, r5
 8016688:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801668c:	fa5f fe8e 	uxtb.w	lr, lr
 8016690:	fb15 f509 	smulbb	r5, r5, r9
 8016694:	fb0e 5502 	mla	r5, lr, r2, r5
 8016698:	b2bf      	uxth	r7, r7
 801669a:	fb1a fa09 	smulbb	sl, sl, r9
 801669e:	b2ad      	uxth	r5, r5
 80166a0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80166a4:	fb06 a602 	mla	r6, r6, r2, sl
 80166a8:	1c7a      	adds	r2, r7, #1
 80166aa:	f105 0a01 	add.w	sl, r5, #1
 80166ae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80166b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80166b6:	b2b6      	uxth	r6, r6
 80166b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80166bc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80166c0:	ea4a 0707 	orr.w	r7, sl, r7
 80166c4:	f106 0a01 	add.w	sl, r6, #1
 80166c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80166cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80166d0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80166d4:	ea47 070a 	orr.w	r7, r7, sl
 80166d8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80166dc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80166de:	4410      	add	r0, r2
 80166e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80166e2:	f108 0801 	add.w	r8, r8, #1
 80166e6:	4411      	add	r1, r2
 80166e8:	e7a1      	b.n	801662e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80166ea:	b007      	add	sp, #28
 80166ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080166f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80166f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80166f4:	b085      	sub	sp, #20
 80166f6:	468b      	mov	fp, r1
 80166f8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80166fa:	9203      	str	r2, [sp, #12]
 80166fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016700:	6841      	ldr	r1, [r0, #4]
 8016702:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8016706:	fb01 2404 	mla	r4, r1, r4, r2
 801670a:	6802      	ldr	r2, [r0, #0]
 801670c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016710:	f8de 2000 	ldr.w	r2, [lr]
 8016714:	9200      	str	r2, [sp, #0]
 8016716:	f8de 2004 	ldr.w	r2, [lr, #4]
 801671a:	3204      	adds	r2, #4
 801671c:	9201      	str	r2, [sp, #4]
 801671e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016722:	f1bb 0f00 	cmp.w	fp, #0
 8016726:	dc03      	bgt.n	8016730 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016728:	9a03      	ldr	r2, [sp, #12]
 801672a:	2a00      	cmp	r2, #0
 801672c:	f340 8153 	ble.w	80169d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016730:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016732:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016736:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801673a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801673e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016740:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016744:	2b00      	cmp	r3, #0
 8016746:	dd0e      	ble.n	8016766 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016748:	1408      	asrs	r0, r1, #16
 801674a:	d405      	bmi.n	8016758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801674c:	42b8      	cmp	r0, r7
 801674e:	da03      	bge.n	8016758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016750:	1410      	asrs	r0, r2, #16
 8016752:	d401      	bmi.n	8016758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016754:	42b0      	cmp	r0, r6
 8016756:	db07      	blt.n	8016768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016758:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801675a:	4401      	add	r1, r0
 801675c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801675e:	3b01      	subs	r3, #1
 8016760:	4402      	add	r2, r0
 8016762:	3402      	adds	r4, #2
 8016764:	e7ee      	b.n	8016744 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016766:	d017      	beq.n	8016798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016768:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801676a:	1e58      	subs	r0, r3, #1
 801676c:	fb05 1500 	mla	r5, r5, r0, r1
 8016770:	142d      	asrs	r5, r5, #16
 8016772:	d409      	bmi.n	8016788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016774:	42bd      	cmp	r5, r7
 8016776:	da07      	bge.n	8016788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016778:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801677a:	fb05 2000 	mla	r0, r5, r0, r2
 801677e:	1400      	asrs	r0, r0, #16
 8016780:	d402      	bmi.n	8016788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016782:	42b0      	cmp	r0, r6
 8016784:	f2c0 80bc 	blt.w	8016900 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8016788:	2600      	movs	r6, #0
 801678a:	1998      	adds	r0, r3, r6
 801678c:	2800      	cmp	r0, #0
 801678e:	dc3e      	bgt.n	801680e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016790:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016794:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016798:	f1bb 0f00 	cmp.w	fp, #0
 801679c:	f340 811b 	ble.w	80169d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80167a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80167a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80167a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80167ac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80167ae:	f1bb 0b01 	subs.w	fp, fp, #1
 80167b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80167b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80167ba:	eeb0 6a62 	vmov.f32	s12, s5
 80167be:	ee61 7a27 	vmul.f32	s15, s2, s15
 80167c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80167c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80167ca:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80167ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80167d2:	eeb0 6a43 	vmov.f32	s12, s6
 80167d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80167da:	ee12 2a90 	vmov	r2, s5
 80167de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80167e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80167e6:	ee13 2a10 	vmov	r2, s6
 80167ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80167ee:	9311      	str	r3, [sp, #68]	@ 0x44
 80167f0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80167f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80167f6:	9a03      	ldr	r2, [sp, #12]
 80167f8:	9312      	str	r3, [sp, #72]	@ 0x48
 80167fa:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80167fe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016800:	eeb0 3a67 	vmov.f32	s6, s15
 8016804:	bf08      	it	eq
 8016806:	4613      	moveq	r3, r2
 8016808:	eef0 2a47 	vmov.f32	s5, s14
 801680c:	e789      	b.n	8016722 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801680e:	140f      	asrs	r7, r1, #16
 8016810:	d426      	bmi.n	8016860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016812:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016816:	42bd      	cmp	r5, r7
 8016818:	dd22      	ble.n	8016860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801681a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801681e:	d41f      	bmi.n	8016860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016820:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016824:	4560      	cmp	r0, ip
 8016826:	dd1b      	ble.n	8016860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016828:	9800      	ldr	r0, [sp, #0]
 801682a:	b22d      	sxth	r5, r5
 801682c:	fb0c 0505 	mla	r5, ip, r5, r0
 8016830:	5de8      	ldrb	r0, [r5, r7]
 8016832:	9d01      	ldr	r5, [sp, #4]
 8016834:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8016838:	0e07      	lsrs	r7, r0, #24
 801683a:	2fff      	cmp	r7, #255	@ 0xff
 801683c:	d116      	bne.n	801686c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801683e:	f06f 0501 	mvn.w	r5, #1
 8016842:	fb05 f706 	mul.w	r7, r5, r6
 8016846:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801684a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801684e:	0945      	lsrs	r5, r0, #5
 8016850:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016854:	ea4c 0505 	orr.w	r5, ip, r5
 8016858:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801685c:	4305      	orrs	r5, r0
 801685e:	53e5      	strh	r5, [r4, r7]
 8016860:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016862:	4401      	add	r1, r0
 8016864:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016866:	3e01      	subs	r6, #1
 8016868:	4402      	add	r2, r0
 801686a:	e78e      	b.n	801678a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801686c:	b2fd      	uxtb	r5, r7
 801686e:	2f00      	cmp	r7, #0
 8016870:	d0f6      	beq.n	8016860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016872:	f06f 0701 	mvn.w	r7, #1
 8016876:	4377      	muls	r7, r6
 8016878:	fa1f f985 	uxth.w	r9, r5
 801687c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8016880:	9702      	str	r7, [sp, #8]
 8016882:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016886:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801688a:	43ed      	mvns	r5, r5
 801688c:	b2ed      	uxtb	r5, r5
 801688e:	fb17 f709 	smulbb	r7, r7, r9
 8016892:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016896:	fb0c 7c05 	mla	ip, ip, r5, r7
 801689a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801689e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80168a2:	b2c0      	uxtb	r0, r0
 80168a4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80168a8:	fa5f f888 	uxtb.w	r8, r8
 80168ac:	fb10 f009 	smulbb	r0, r0, r9
 80168b0:	fb08 0005 	mla	r0, r8, r5, r0
 80168b4:	b280      	uxth	r0, r0
 80168b6:	fa1f fc8c 	uxth.w	ip, ip
 80168ba:	fb1a fa09 	smulbb	sl, sl, r9
 80168be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80168c2:	fb07 a705 	mla	r7, r7, r5, sl
 80168c6:	f100 0a01 	add.w	sl, r0, #1
 80168ca:	f10c 0501 	add.w	r5, ip, #1
 80168ce:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80168d2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80168d6:	b2bf      	uxth	r7, r7
 80168d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80168dc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80168e0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80168e4:	f107 0a01 	add.w	sl, r7, #1
 80168e8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80168ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80168f0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80168f4:	9802      	ldr	r0, [sp, #8]
 80168f6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80168fa:	f824 c000 	strh.w	ip, [r4, r0]
 80168fe:	e7af      	b.n	8016860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016900:	f04f 0800 	mov.w	r8, #0
 8016904:	eba3 0008 	sub.w	r0, r3, r8
 8016908:	2800      	cmp	r0, #0
 801690a:	f77f af41 	ble.w	8016790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801690e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016912:	9f00      	ldr	r7, [sp, #0]
 8016914:	1410      	asrs	r0, r2, #16
 8016916:	140d      	asrs	r5, r1, #16
 8016918:	fb06 7000 	mla	r0, r6, r0, r7
 801691c:	5d40      	ldrb	r0, [r0, r5]
 801691e:	9d01      	ldr	r5, [sp, #4]
 8016920:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016924:	0e2e      	lsrs	r6, r5, #24
 8016926:	2eff      	cmp	r6, #255	@ 0xff
 8016928:	d112      	bne.n	8016950 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801692a:	482c      	ldr	r0, [pc, #176]	@ (80169dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801692c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016930:	0968      	lsrs	r0, r5, #5
 8016932:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8016936:	4330      	orrs	r0, r6
 8016938:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801693c:	4328      	orrs	r0, r5
 801693e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8016942:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016944:	4401      	add	r1, r0
 8016946:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016948:	f108 0801 	add.w	r8, r8, #1
 801694c:	4402      	add	r2, r0
 801694e:	e7d9      	b.n	8016904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016950:	b2f0      	uxtb	r0, r6
 8016952:	2e00      	cmp	r6, #0
 8016954:	d0f5      	beq.n	8016942 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016956:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801695a:	fa1f f980 	uxth.w	r9, r0
 801695e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016962:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016966:	43c0      	mvns	r0, r0
 8016968:	b2c0      	uxtb	r0, r0
 801696a:	fb16 f609 	smulbb	r6, r6, r9
 801696e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016972:	fb07 6700 	mla	r7, r7, r0, r6
 8016976:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801697a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801697e:	b2ed      	uxtb	r5, r5
 8016980:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016984:	fa5f fc8c 	uxtb.w	ip, ip
 8016988:	fb15 f509 	smulbb	r5, r5, r9
 801698c:	fb0c 5500 	mla	r5, ip, r0, r5
 8016990:	b2bf      	uxth	r7, r7
 8016992:	fb1a fa09 	smulbb	sl, sl, r9
 8016996:	b2ad      	uxth	r5, r5
 8016998:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801699c:	fb06 a600 	mla	r6, r6, r0, sl
 80169a0:	1c78      	adds	r0, r7, #1
 80169a2:	f105 0a01 	add.w	sl, r5, #1
 80169a6:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80169aa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80169ae:	b2b6      	uxth	r6, r6
 80169b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80169b4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80169b8:	ea4a 0707 	orr.w	r7, sl, r7
 80169bc:	f106 0a01 	add.w	sl, r6, #1
 80169c0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80169c4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80169c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80169cc:	ea47 070a 	orr.w	r7, r7, sl
 80169d0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80169d4:	e7b5      	b.n	8016942 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80169d6:	b005      	add	sp, #20
 80169d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80169dc:	fffff800 	.word	0xfffff800

080169e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80169e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80169e4:	b087      	sub	sp, #28
 80169e6:	468b      	mov	fp, r1
 80169e8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80169ea:	9204      	str	r2, [sp, #16]
 80169ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80169f0:	9205      	str	r2, [sp, #20]
 80169f2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80169f6:	6861      	ldr	r1, [r4, #4]
 80169f8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80169fc:	fb01 2000 	mla	r0, r1, r0, r2
 8016a00:	6822      	ldr	r2, [r4, #0]
 8016a02:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016a06:	f8de 2000 	ldr.w	r2, [lr]
 8016a0a:	9201      	str	r2, [sp, #4]
 8016a0c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016a10:	9202      	str	r2, [sp, #8]
 8016a12:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016a16:	f1bb 0f00 	cmp.w	fp, #0
 8016a1a:	dc03      	bgt.n	8016a24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016a1c:	9a04      	ldr	r2, [sp, #16]
 8016a1e:	2a00      	cmp	r2, #0
 8016a20:	f340 8142 	ble.w	8016ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016a24:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016a26:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016a2a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016a2e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016a32:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016a34:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016a38:	2b00      	cmp	r3, #0
 8016a3a:	dd0e      	ble.n	8016a5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016a3c:	140c      	asrs	r4, r1, #16
 8016a3e:	d405      	bmi.n	8016a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016a40:	42bc      	cmp	r4, r7
 8016a42:	da03      	bge.n	8016a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016a44:	1414      	asrs	r4, r2, #16
 8016a46:	d401      	bmi.n	8016a4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016a48:	42b4      	cmp	r4, r6
 8016a4a:	db07      	blt.n	8016a5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016a4c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016a4e:	4421      	add	r1, r4
 8016a50:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016a52:	3b01      	subs	r3, #1
 8016a54:	4422      	add	r2, r4
 8016a56:	3002      	adds	r0, #2
 8016a58:	e7ee      	b.n	8016a38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016a5a:	d019      	beq.n	8016a90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016a5c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016a5e:	1e5c      	subs	r4, r3, #1
 8016a60:	fb05 1504 	mla	r5, r5, r4, r1
 8016a64:	142d      	asrs	r5, r5, #16
 8016a66:	d409      	bmi.n	8016a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016a68:	42bd      	cmp	r5, r7
 8016a6a:	da07      	bge.n	8016a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016a6c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8016a6e:	fb05 2404 	mla	r4, r5, r4, r2
 8016a72:	1424      	asrs	r4, r4, #16
 8016a74:	d402      	bmi.n	8016a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016a76:	42b4      	cmp	r4, r6
 8016a78:	f2c0 80b1 	blt.w	8016bde <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8016a7c:	f04f 0800 	mov.w	r8, #0
 8016a80:	eb03 0408 	add.w	r4, r3, r8
 8016a84:	2c00      	cmp	r4, #0
 8016a86:	dc3e      	bgt.n	8016b06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016a88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016a8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016a90:	f1bb 0f00 	cmp.w	fp, #0
 8016a94:	f340 8108 	ble.w	8016ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016a98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016a9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016aa0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016aa4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016aa6:	f1bb 0b01 	subs.w	fp, fp, #1
 8016aaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016aae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016ab2:	eeb0 6a62 	vmov.f32	s12, s5
 8016ab6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016aba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016abe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016ac2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8016ac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016aca:	eeb0 6a43 	vmov.f32	s12, s6
 8016ace:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016ad2:	ee12 2a90 	vmov	r2, s5
 8016ad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016ada:	fb92 f3f3 	sdiv	r3, r2, r3
 8016ade:	ee13 2a10 	vmov	r2, s6
 8016ae2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016ae6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8016ae8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016aea:	fb92 f3f3 	sdiv	r3, r2, r3
 8016aee:	9a04      	ldr	r2, [sp, #16]
 8016af0:	9314      	str	r3, [sp, #80]	@ 0x50
 8016af2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8016af6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8016af8:	eeb0 3a67 	vmov.f32	s6, s15
 8016afc:	bf08      	it	eq
 8016afe:	4613      	moveq	r3, r2
 8016b00:	eef0 2a47 	vmov.f32	s5, s14
 8016b04:	e787      	b.n	8016a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8016b06:	140e      	asrs	r6, r1, #16
 8016b08:	d462      	bmi.n	8016bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016b0a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016b0e:	42b5      	cmp	r5, r6
 8016b10:	dd5e      	ble.n	8016bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016b12:	1417      	asrs	r7, r2, #16
 8016b14:	d45c      	bmi.n	8016bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016b16:	f8de 400c 	ldr.w	r4, [lr, #12]
 8016b1a:	42bc      	cmp	r4, r7
 8016b1c:	dd58      	ble.n	8016bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016b1e:	b22d      	sxth	r5, r5
 8016b20:	fb07 6505 	mla	r5, r7, r5, r6
 8016b24:	9c02      	ldr	r4, [sp, #8]
 8016b26:	5d66      	ldrb	r6, [r4, r5]
 8016b28:	2e00      	cmp	r6, #0
 8016b2a:	d051      	beq.n	8016bd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016b2c:	9c01      	ldr	r4, [sp, #4]
 8016b2e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8016b32:	f06f 0401 	mvn.w	r4, #1
 8016b36:	fb04 f408 	mul.w	r4, r4, r8
 8016b3a:	9403      	str	r4, [sp, #12]
 8016b3c:	5b05      	ldrh	r5, [r0, r4]
 8016b3e:	9c05      	ldr	r4, [sp, #20]
 8016b40:	4366      	muls	r6, r4
 8016b42:	1c74      	adds	r4, r6, #1
 8016b44:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016b48:	1224      	asrs	r4, r4, #8
 8016b4a:	b2a7      	uxth	r7, r4
 8016b4c:	122e      	asrs	r6, r5, #8
 8016b4e:	43e4      	mvns	r4, r4
 8016b50:	b2e4      	uxtb	r4, r4
 8016b52:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8016b56:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016b5a:	fb16 f604 	smulbb	r6, r6, r4
 8016b5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016b62:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016b66:	00ed      	lsls	r5, r5, #3
 8016b68:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016b6c:	b2ed      	uxtb	r5, r5
 8016b6e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8016b72:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016b76:	fb15 f504 	smulbb	r5, r5, r4
 8016b7a:	fa5f f989 	uxtb.w	r9, r9
 8016b7e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016b82:	fb09 5507 	mla	r5, r9, r7, r5
 8016b86:	fb1a fa04 	smulbb	sl, sl, r4
 8016b8a:	fa1f fc8c 	uxth.w	ip, ip
 8016b8e:	b2ad      	uxth	r5, r5
 8016b90:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016b94:	fb06 a607 	mla	r6, r6, r7, sl
 8016b98:	f10c 0401 	add.w	r4, ip, #1
 8016b9c:	f105 0a01 	add.w	sl, r5, #1
 8016ba0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016ba4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016ba8:	b2b6      	uxth	r6, r6
 8016baa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016bae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016bb2:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016bb6:	f106 0a01 	add.w	sl, r6, #1
 8016bba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016bbe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016bc2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016bc6:	9c03      	ldr	r4, [sp, #12]
 8016bc8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016bcc:	f820 c004 	strh.w	ip, [r0, r4]
 8016bd0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016bd2:	4421      	add	r1, r4
 8016bd4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016bd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8016bda:	4422      	add	r2, r4
 8016bdc:	e750      	b.n	8016a80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016bde:	f04f 0900 	mov.w	r9, #0
 8016be2:	eba3 0409 	sub.w	r4, r3, r9
 8016be6:	2c00      	cmp	r4, #0
 8016be8:	f77f af4e 	ble.w	8016a88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016bec:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8016bf0:	140d      	asrs	r5, r1, #16
 8016bf2:	1414      	asrs	r4, r2, #16
 8016bf4:	fb06 5404 	mla	r4, r6, r4, r5
 8016bf8:	9d02      	ldr	r5, [sp, #8]
 8016bfa:	5d2e      	ldrb	r6, [r5, r4]
 8016bfc:	2e00      	cmp	r6, #0
 8016bfe:	d04c      	beq.n	8016c9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8016c00:	9d01      	ldr	r5, [sp, #4]
 8016c02:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8016c06:	9c05      	ldr	r4, [sp, #20]
 8016c08:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016c0c:	4366      	muls	r6, r4
 8016c0e:	1c74      	adds	r4, r6, #1
 8016c10:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016c14:	1224      	asrs	r4, r4, #8
 8016c16:	b2a7      	uxth	r7, r4
 8016c18:	122e      	asrs	r6, r5, #8
 8016c1a:	43e4      	mvns	r4, r4
 8016c1c:	b2e4      	uxtb	r4, r4
 8016c1e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8016c22:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016c26:	fb16 f604 	smulbb	r6, r6, r4
 8016c2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016c2e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016c32:	00ed      	lsls	r5, r5, #3
 8016c34:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016c38:	b2ed      	uxtb	r5, r5
 8016c3a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016c3e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016c42:	fb15 f504 	smulbb	r5, r5, r4
 8016c46:	fa5f f888 	uxtb.w	r8, r8
 8016c4a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016c4e:	fb08 5507 	mla	r5, r8, r7, r5
 8016c52:	fb1a fa04 	smulbb	sl, sl, r4
 8016c56:	fa1f fc8c 	uxth.w	ip, ip
 8016c5a:	b2ad      	uxth	r5, r5
 8016c5c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016c60:	fb06 a607 	mla	r6, r6, r7, sl
 8016c64:	f10c 0401 	add.w	r4, ip, #1
 8016c68:	f105 0a01 	add.w	sl, r5, #1
 8016c6c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016c70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016c74:	b2b6      	uxth	r6, r6
 8016c76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016c7a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016c7e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016c82:	f106 0a01 	add.w	sl, r6, #1
 8016c86:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016c8a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c8e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016c92:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016c96:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016c9a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016c9c:	4421      	add	r1, r4
 8016c9e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8016ca0:	f109 0901 	add.w	r9, r9, #1
 8016ca4:	4422      	add	r2, r4
 8016ca6:	e79c      	b.n	8016be2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8016ca8:	b007      	add	sp, #28
 8016caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016cae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016cae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016cb2:	b085      	sub	sp, #20
 8016cb4:	468b      	mov	fp, r1
 8016cb6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8016cb8:	9203      	str	r2, [sp, #12]
 8016cba:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8016cbe:	6861      	ldr	r1, [r4, #4]
 8016cc0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8016cc4:	fb01 2000 	mla	r0, r1, r0, r2
 8016cc8:	6822      	ldr	r2, [r4, #0]
 8016cca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8016cce:	f8d8 2000 	ldr.w	r2, [r8]
 8016cd2:	9200      	str	r2, [sp, #0]
 8016cd4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8016cd8:	9201      	str	r2, [sp, #4]
 8016cda:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8016cde:	f1bb 0f00 	cmp.w	fp, #0
 8016ce2:	dc03      	bgt.n	8016cec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016ce4:	9a03      	ldr	r2, [sp, #12]
 8016ce6:	2a00      	cmp	r2, #0
 8016ce8:	f340 8146 	ble.w	8016f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016cec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016cee:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016cf2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8016cf6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016cfa:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016cfc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016d00:	2b00      	cmp	r3, #0
 8016d02:	dd0e      	ble.n	8016d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016d04:	140c      	asrs	r4, r1, #16
 8016d06:	d405      	bmi.n	8016d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016d08:	42bc      	cmp	r4, r7
 8016d0a:	da03      	bge.n	8016d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016d0c:	1414      	asrs	r4, r2, #16
 8016d0e:	d401      	bmi.n	8016d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016d10:	42b4      	cmp	r4, r6
 8016d12:	db07      	blt.n	8016d24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016d14:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016d16:	4421      	add	r1, r4
 8016d18:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016d1a:	3b01      	subs	r3, #1
 8016d1c:	4422      	add	r2, r4
 8016d1e:	3002      	adds	r0, #2
 8016d20:	e7ee      	b.n	8016d00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016d22:	d017      	beq.n	8016d54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8016d24:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8016d26:	1e5c      	subs	r4, r3, #1
 8016d28:	fb05 1504 	mla	r5, r5, r4, r1
 8016d2c:	142d      	asrs	r5, r5, #16
 8016d2e:	d409      	bmi.n	8016d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016d30:	42bd      	cmp	r5, r7
 8016d32:	da07      	bge.n	8016d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016d34:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8016d36:	fb05 2404 	mla	r4, r5, r4, r2
 8016d3a:	1424      	asrs	r4, r4, #16
 8016d3c:	d402      	bmi.n	8016d44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016d3e:	42b4      	cmp	r4, r6
 8016d40:	f2c0 80b3 	blt.w	8016eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8016d44:	2600      	movs	r6, #0
 8016d46:	199c      	adds	r4, r3, r6
 8016d48:	2c00      	cmp	r4, #0
 8016d4a:	dc3e      	bgt.n	8016dca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016d4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016d50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016d54:	f1bb 0f00 	cmp.w	fp, #0
 8016d58:	f340 810e 	ble.w	8016f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016d5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016d60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016d64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016d68:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016d6a:	f1bb 0b01 	subs.w	fp, fp, #1
 8016d6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016d72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d76:	eeb0 6a62 	vmov.f32	s12, s5
 8016d7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d82:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d86:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8016d8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d8e:	eeb0 6a43 	vmov.f32	s12, s6
 8016d92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d96:	ee12 2a90 	vmov	r2, s5
 8016d9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d9e:	fb92 f3f3 	sdiv	r3, r2, r3
 8016da2:	ee13 2a10 	vmov	r2, s6
 8016da6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016daa:	9311      	str	r3, [sp, #68]	@ 0x44
 8016dac:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016dae:	fb92 f3f3 	sdiv	r3, r2, r3
 8016db2:	9a03      	ldr	r2, [sp, #12]
 8016db4:	9312      	str	r3, [sp, #72]	@ 0x48
 8016db6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8016dba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8016dbc:	eeb0 3a67 	vmov.f32	s6, s15
 8016dc0:	bf08      	it	eq
 8016dc2:	4613      	moveq	r3, r2
 8016dc4:	eef0 2a47 	vmov.f32	s5, s14
 8016dc8:	e789      	b.n	8016cde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016dca:	140f      	asrs	r7, r1, #16
 8016dcc:	d418      	bmi.n	8016e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016dce:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016dd2:	42bd      	cmp	r5, r7
 8016dd4:	dd14      	ble.n	8016e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016dd6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016dda:	d411      	bmi.n	8016e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016ddc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8016de0:	4564      	cmp	r4, ip
 8016de2:	dd0d      	ble.n	8016e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016de4:	b22d      	sxth	r5, r5
 8016de6:	fb0c 7505 	mla	r5, ip, r5, r7
 8016dea:	9c01      	ldr	r4, [sp, #4]
 8016dec:	5d64      	ldrb	r4, [r4, r5]
 8016dee:	2cff      	cmp	r4, #255	@ 0xff
 8016df0:	d10c      	bne.n	8016e0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8016df2:	9c00      	ldr	r4, [sp, #0]
 8016df4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8016df8:	f06f 0401 	mvn.w	r4, #1
 8016dfc:	4374      	muls	r4, r6
 8016dfe:	5305      	strh	r5, [r0, r4]
 8016e00:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016e02:	4421      	add	r1, r4
 8016e04:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016e06:	3e01      	subs	r6, #1
 8016e08:	4422      	add	r2, r4
 8016e0a:	e79c      	b.n	8016d46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016e0c:	2c00      	cmp	r4, #0
 8016e0e:	d0f7      	beq.n	8016e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016e10:	9f00      	ldr	r7, [sp, #0]
 8016e12:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8016e16:	f06f 0501 	mvn.w	r5, #1
 8016e1a:	4375      	muls	r5, r6
 8016e1c:	9502      	str	r5, [sp, #8]
 8016e1e:	5b45      	ldrh	r5, [r0, r5]
 8016e20:	fa1f fc84 	uxth.w	ip, r4
 8016e24:	122f      	asrs	r7, r5, #8
 8016e26:	43e4      	mvns	r4, r4
 8016e28:	b2e4      	uxtb	r4, r4
 8016e2a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8016e2e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016e32:	fb17 f704 	smulbb	r7, r7, r4
 8016e36:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016e3a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8016e3e:	00ed      	lsls	r5, r5, #3
 8016e40:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8016e44:	b2ed      	uxtb	r5, r5
 8016e46:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8016e4a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016e4e:	fb15 f504 	smulbb	r5, r5, r4
 8016e52:	fa5f f989 	uxtb.w	r9, r9
 8016e56:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016e5a:	fb09 550c 	mla	r5, r9, ip, r5
 8016e5e:	fb1a fa04 	smulbb	sl, sl, r4
 8016e62:	fa1f fe8e 	uxth.w	lr, lr
 8016e66:	b2ad      	uxth	r5, r5
 8016e68:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8016e6c:	fb07 a70c 	mla	r7, r7, ip, sl
 8016e70:	f10e 0401 	add.w	r4, lr, #1
 8016e74:	f105 0a01 	add.w	sl, r5, #1
 8016e78:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8016e7c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016e80:	b2bf      	uxth	r7, r7
 8016e82:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016e86:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8016e8a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016e8e:	f107 0a01 	add.w	sl, r7, #1
 8016e92:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016e96:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016e9a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016e9e:	9c02      	ldr	r4, [sp, #8]
 8016ea0:	ea4e 0e0a 	orr.w	lr, lr, sl
 8016ea4:	f820 e004 	strh.w	lr, [r0, r4]
 8016ea8:	e7aa      	b.n	8016e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016eaa:	f04f 0900 	mov.w	r9, #0
 8016eae:	eba3 0409 	sub.w	r4, r3, r9
 8016eb2:	2c00      	cmp	r4, #0
 8016eb4:	f77f af4a 	ble.w	8016d4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016eb8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016ebc:	1414      	asrs	r4, r2, #16
 8016ebe:	140d      	asrs	r5, r1, #16
 8016ec0:	fb06 5504 	mla	r5, r6, r4, r5
 8016ec4:	9c01      	ldr	r4, [sp, #4]
 8016ec6:	5d64      	ldrb	r4, [r4, r5]
 8016ec8:	2cff      	cmp	r4, #255	@ 0xff
 8016eca:	d10b      	bne.n	8016ee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8016ecc:	9c00      	ldr	r4, [sp, #0]
 8016ece:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8016ed2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8016ed6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8016ed8:	4421      	add	r1, r4
 8016eda:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8016edc:	f109 0901 	add.w	r9, r9, #1
 8016ee0:	4422      	add	r2, r4
 8016ee2:	e7e4      	b.n	8016eae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8016ee4:	2c00      	cmp	r4, #0
 8016ee6:	d0f6      	beq.n	8016ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016ee8:	9e00      	ldr	r6, [sp, #0]
 8016eea:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8016eee:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016ef2:	b2a7      	uxth	r7, r4
 8016ef4:	122e      	asrs	r6, r5, #8
 8016ef6:	43e4      	mvns	r4, r4
 8016ef8:	b2e4      	uxtb	r4, r4
 8016efa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016efe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8016f02:	fb16 f604 	smulbb	r6, r6, r4
 8016f06:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016f0a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8016f0e:	00ed      	lsls	r5, r5, #3
 8016f10:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016f14:	b2ed      	uxtb	r5, r5
 8016f16:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016f1a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016f1e:	fb15 f504 	smulbb	r5, r5, r4
 8016f22:	fa5f fe8e 	uxtb.w	lr, lr
 8016f26:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8016f2a:	fb0e 5507 	mla	r5, lr, r7, r5
 8016f2e:	fb1a fa04 	smulbb	sl, sl, r4
 8016f32:	fa1f fc8c 	uxth.w	ip, ip
 8016f36:	b2ad      	uxth	r5, r5
 8016f38:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8016f3c:	fb06 a607 	mla	r6, r6, r7, sl
 8016f40:	f10c 0401 	add.w	r4, ip, #1
 8016f44:	f105 0a01 	add.w	sl, r5, #1
 8016f48:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016f4c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016f50:	b2b6      	uxth	r6, r6
 8016f52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016f56:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8016f5a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016f5e:	f106 0a01 	add.w	sl, r6, #1
 8016f62:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016f66:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016f6a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8016f6e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016f72:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016f76:	e7ae      	b.n	8016ed6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016f78:	b005      	add	sp, #20
 8016f7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f82:	b085      	sub	sp, #20
 8016f84:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016f86:	9203      	str	r2, [sp, #12]
 8016f88:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8016f8c:	9201      	str	r2, [sp, #4]
 8016f8e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8016f92:	9100      	str	r1, [sp, #0]
 8016f94:	6841      	ldr	r1, [r0, #4]
 8016f96:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8016f9a:	fb01 2404 	mla	r4, r1, r4, r2
 8016f9e:	6802      	ldr	r2, [r0, #0]
 8016fa0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016fa4:	f8de 2000 	ldr.w	r2, [lr]
 8016fa8:	9202      	str	r2, [sp, #8]
 8016faa:	9a01      	ldr	r2, [sp, #4]
 8016fac:	43d6      	mvns	r6, r2
 8016fae:	b2f6      	uxtb	r6, r6
 8016fb0:	9a00      	ldr	r2, [sp, #0]
 8016fb2:	2a00      	cmp	r2, #0
 8016fb4:	dc03      	bgt.n	8016fbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016fb6:	9a03      	ldr	r2, [sp, #12]
 8016fb8:	2a00      	cmp	r2, #0
 8016fba:	f340 8124 	ble.w	8017206 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8016fbe:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016fc0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8016fc4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8016fc8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8016fcc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8016fce:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8016fd2:	2b00      	cmp	r3, #0
 8016fd4:	dd0e      	ble.n	8016ff4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016fd6:	1408      	asrs	r0, r1, #16
 8016fd8:	d405      	bmi.n	8016fe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016fda:	4560      	cmp	r0, ip
 8016fdc:	da03      	bge.n	8016fe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016fde:	1410      	asrs	r0, r2, #16
 8016fe0:	d401      	bmi.n	8016fe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016fe2:	42b8      	cmp	r0, r7
 8016fe4:	db07      	blt.n	8016ff6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016fe6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016fe8:	4401      	add	r1, r0
 8016fea:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016fec:	3b01      	subs	r3, #1
 8016fee:	4402      	add	r2, r0
 8016ff0:	3402      	adds	r4, #2
 8016ff2:	e7ee      	b.n	8016fd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8016ff4:	d06e      	beq.n	80170d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8016ff6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8016ff8:	1e58      	subs	r0, r3, #1
 8016ffa:	fb05 1500 	mla	r5, r5, r0, r1
 8016ffe:	142d      	asrs	r5, r5, #16
 8017000:	d45c      	bmi.n	80170bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017002:	4565      	cmp	r5, ip
 8017004:	da5a      	bge.n	80170bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017006:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8017008:	fb05 2000 	mla	r0, r5, r0, r2
 801700c:	1400      	asrs	r0, r0, #16
 801700e:	d455      	bmi.n	80170bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017010:	42b8      	cmp	r0, r7
 8017012:	da53      	bge.n	80170bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017014:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8017018:	4699      	mov	r9, r3
 801701a:	46a2      	mov	sl, r4
 801701c:	f1b9 0f00 	cmp.w	r9, #0
 8017020:	dd54      	ble.n	80170cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017022:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017026:	140d      	asrs	r5, r1, #16
 8017028:	1410      	asrs	r0, r2, #16
 801702a:	fb07 5000 	mla	r0, r7, r0, r5
 801702e:	9d02      	ldr	r5, [sp, #8]
 8017030:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017034:	f8ba 5000 	ldrh.w	r5, [sl]
 8017038:	122f      	asrs	r7, r5, #8
 801703a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801703e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017042:	fb17 f706 	smulbb	r7, r7, r6
 8017046:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801704a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801704e:	00ed      	lsls	r5, r5, #3
 8017050:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017054:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8017058:	10c7      	asrs	r7, r0, #3
 801705a:	b2ed      	uxtb	r5, r5
 801705c:	00c0      	lsls	r0, r0, #3
 801705e:	fb18 f806 	smulbb	r8, r8, r6
 8017062:	fb15 f506 	smulbb	r5, r5, r6
 8017066:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801706a:	b2c0      	uxtb	r0, r0
 801706c:	fa1f fc8c 	uxth.w	ip, ip
 8017070:	fb07 870b 	mla	r7, r7, fp, r8
 8017074:	fb00 500b 	mla	r0, r0, fp, r5
 8017078:	b280      	uxth	r0, r0
 801707a:	b2bf      	uxth	r7, r7
 801707c:	f10c 0501 	add.w	r5, ip, #1
 8017080:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017084:	f107 0801 	add.w	r8, r7, #1
 8017088:	1c45      	adds	r5, r0, #1
 801708a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801708e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017092:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8017094:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017098:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801709c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80170a0:	ea45 0c0c 	orr.w	ip, r5, ip
 80170a4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80170a8:	4401      	add	r1, r0
 80170aa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80170ac:	ea4c 0c08 	orr.w	ip, ip, r8
 80170b0:	f82a cb02 	strh.w	ip, [sl], #2
 80170b4:	4402      	add	r2, r0
 80170b6:	f109 39ff 	add.w	r9, r9, #4294967295
 80170ba:	e7af      	b.n	801701c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80170bc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80170c0:	f04f 0800 	mov.w	r8, #0
 80170c4:	eb03 0008 	add.w	r0, r3, r8
 80170c8:	2800      	cmp	r0, #0
 80170ca:	dc41      	bgt.n	8017150 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80170cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80170d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80170d4:	9b00      	ldr	r3, [sp, #0]
 80170d6:	2b00      	cmp	r3, #0
 80170d8:	f340 8095 	ble.w	8017206 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80170dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80170e0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80170e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80170e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80170ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80170ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80170f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80170f6:	eef0 6a62 	vmov.f32	s13, s5
 80170fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80170fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017102:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017106:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801710a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801710e:	eef0 6a43 	vmov.f32	s13, s6
 8017112:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017116:	ee12 2a90 	vmov	r2, s5
 801711a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801711e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017122:	ee13 2a10 	vmov	r2, s6
 8017126:	9311      	str	r3, [sp, #68]	@ 0x44
 8017128:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801712a:	fb92 f3f3 	sdiv	r3, r2, r3
 801712e:	9312      	str	r3, [sp, #72]	@ 0x48
 8017130:	9b00      	ldr	r3, [sp, #0]
 8017132:	9a03      	ldr	r2, [sp, #12]
 8017134:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017138:	3b01      	subs	r3, #1
 801713a:	9300      	str	r3, [sp, #0]
 801713c:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8017140:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017142:	eeb0 3a67 	vmov.f32	s6, s15
 8017146:	bf08      	it	eq
 8017148:	4613      	moveq	r3, r2
 801714a:	eef0 2a47 	vmov.f32	s5, s14
 801714e:	e72f      	b.n	8016fb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8017150:	140f      	asrs	r7, r1, #16
 8017152:	d451      	bmi.n	80171f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017154:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017158:	42bd      	cmp	r5, r7
 801715a:	dd4d      	ble.n	80171f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801715c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017160:	d44a      	bmi.n	80171f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8017162:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017166:	4560      	cmp	r0, ip
 8017168:	dd46      	ble.n	80171f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801716a:	b22d      	sxth	r5, r5
 801716c:	fb0c 7505 	mla	r5, ip, r5, r7
 8017170:	9802      	ldr	r0, [sp, #8]
 8017172:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8017176:	f06f 0501 	mvn.w	r5, #1
 801717a:	fb05 fb08 	mul.w	fp, r5, r8
 801717e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017182:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017186:	122f      	asrs	r7, r5, #8
 8017188:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801718c:	fb17 f706 	smulbb	r7, r7, r6
 8017190:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017194:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017198:	00ed      	lsls	r5, r5, #3
 801719a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801719e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 80171a2:	10c7      	asrs	r7, r0, #3
 80171a4:	b2ed      	uxtb	r5, r5
 80171a6:	00c0      	lsls	r0, r0, #3
 80171a8:	fb19 f906 	smulbb	r9, r9, r6
 80171ac:	fb15 f506 	smulbb	r5, r5, r6
 80171b0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80171b4:	b2c0      	uxtb	r0, r0
 80171b6:	fa1f fc8c 	uxth.w	ip, ip
 80171ba:	fb07 970a 	mla	r7, r7, sl, r9
 80171be:	fb00 500a 	mla	r0, r0, sl, r5
 80171c2:	b2bf      	uxth	r7, r7
 80171c4:	b280      	uxth	r0, r0
 80171c6:	f10c 0501 	add.w	r5, ip, #1
 80171ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80171ce:	f107 0901 	add.w	r9, r7, #1
 80171d2:	1c45      	adds	r5, r0, #1
 80171d4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80171d8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80171dc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80171e0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80171e4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80171e8:	ea45 0c0c 	orr.w	ip, r5, ip
 80171ec:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80171f0:	ea4c 0c09 	orr.w	ip, ip, r9
 80171f4:	f824 c00b 	strh.w	ip, [r4, fp]
 80171f8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80171fa:	4401      	add	r1, r0
 80171fc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80171fe:	f108 38ff 	add.w	r8, r8, #4294967295
 8017202:	4402      	add	r2, r0
 8017204:	e75e      	b.n	80170c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8017206:	b005      	add	sp, #20
 8017208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801720c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801720c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017210:	b085      	sub	sp, #20
 8017212:	4693      	mov	fp, r2
 8017214:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017216:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8017218:	6870      	ldr	r0, [r6, #4]
 801721a:	9101      	str	r1, [sp, #4]
 801721c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017220:	fb00 2404 	mla	r4, r0, r4, r2
 8017224:	6832      	ldr	r2, [r6, #0]
 8017226:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801722a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801722e:	682a      	ldr	r2, [r5, #0]
 8017230:	9202      	str	r2, [sp, #8]
 8017232:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017236:	9a01      	ldr	r2, [sp, #4]
 8017238:	2a00      	cmp	r2, #0
 801723a:	dc03      	bgt.n	8017244 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801723c:	f1bb 0f00 	cmp.w	fp, #0
 8017240:	f340 809a 	ble.w	8017378 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8017244:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017246:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801724a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801724e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017252:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017254:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017258:	2b00      	cmp	r3, #0
 801725a:	dd0c      	ble.n	8017276 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801725c:	1406      	asrs	r6, r0, #16
 801725e:	d405      	bmi.n	801726c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017260:	454e      	cmp	r6, r9
 8017262:	da03      	bge.n	801726c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017264:	1416      	asrs	r6, r2, #16
 8017266:	d401      	bmi.n	801726c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8017268:	4546      	cmp	r6, r8
 801726a:	db05      	blt.n	8017278 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801726c:	4470      	add	r0, lr
 801726e:	4462      	add	r2, ip
 8017270:	3b01      	subs	r3, #1
 8017272:	3402      	adds	r4, #2
 8017274:	e7f0      	b.n	8017258 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8017276:	d00f      	beq.n	8017298 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017278:	1e5e      	subs	r6, r3, #1
 801727a:	fb0e 0706 	mla	r7, lr, r6, r0
 801727e:	143f      	asrs	r7, r7, #16
 8017280:	d541      	bpl.n	8017306 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8017282:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017286:	4698      	mov	r8, r3
 8017288:	9603      	str	r6, [sp, #12]
 801728a:	f1b8 0f00 	cmp.w	r8, #0
 801728e:	dc56      	bgt.n	801733e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8017290:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017294:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017298:	9b01      	ldr	r3, [sp, #4]
 801729a:	2b00      	cmp	r3, #0
 801729c:	dd6c      	ble.n	8017378 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801729e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80172a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80172a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80172aa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80172ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80172b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80172b4:	eeb0 6a62 	vmov.f32	s12, s5
 80172b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80172bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80172c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80172c4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80172c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80172cc:	eeb0 6a43 	vmov.f32	s12, s6
 80172d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80172d4:	ee12 2a90 	vmov	r2, s5
 80172d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80172dc:	fb92 fef3 	sdiv	lr, r2, r3
 80172e0:	ee13 2a10 	vmov	r2, s6
 80172e4:	fb92 fcf3 	sdiv	ip, r2, r3
 80172e8:	9b01      	ldr	r3, [sp, #4]
 80172ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80172ee:	3b01      	subs	r3, #1
 80172f0:	9301      	str	r3, [sp, #4]
 80172f2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80172f6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80172f8:	eeb0 3a67 	vmov.f32	s6, s15
 80172fc:	bf08      	it	eq
 80172fe:	465b      	moveq	r3, fp
 8017300:	eef0 2a47 	vmov.f32	s5, s14
 8017304:	e797      	b.n	8017236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8017306:	454f      	cmp	r7, r9
 8017308:	dabb      	bge.n	8017282 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801730a:	fb0c 2606 	mla	r6, ip, r6, r2
 801730e:	1436      	asrs	r6, r6, #16
 8017310:	d4b7      	bmi.n	8017282 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017312:	4546      	cmp	r6, r8
 8017314:	dab5      	bge.n	8017282 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8017316:	461e      	mov	r6, r3
 8017318:	46a0      	mov	r8, r4
 801731a:	2e00      	cmp	r6, #0
 801731c:	ddb8      	ble.n	8017290 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801731e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017322:	9902      	ldr	r1, [sp, #8]
 8017324:	1417      	asrs	r7, r2, #16
 8017326:	ea4f 4920 	mov.w	r9, r0, asr #16
 801732a:	fb0a 9707 	mla	r7, sl, r7, r9
 801732e:	4470      	add	r0, lr
 8017330:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017334:	f828 7b02 	strh.w	r7, [r8], #2
 8017338:	4462      	add	r2, ip
 801733a:	3e01      	subs	r6, #1
 801733c:	e7ed      	b.n	801731a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801733e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017342:	d414      	bmi.n	801736e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017344:	68ae      	ldr	r6, [r5, #8]
 8017346:	454e      	cmp	r6, r9
 8017348:	dd11      	ble.n	801736e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801734a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801734e:	d40e      	bmi.n	801736e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017350:	68ef      	ldr	r7, [r5, #12]
 8017352:	4557      	cmp	r7, sl
 8017354:	dd0b      	ble.n	801736e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8017356:	b236      	sxth	r6, r6
 8017358:	fb0a 9606 	mla	r6, sl, r6, r9
 801735c:	9f02      	ldr	r7, [sp, #8]
 801735e:	f06f 0101 	mvn.w	r1, #1
 8017362:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017366:	fb01 f608 	mul.w	r6, r1, r8
 801736a:	9903      	ldr	r1, [sp, #12]
 801736c:	538f      	strh	r7, [r1, r6]
 801736e:	4470      	add	r0, lr
 8017370:	4462      	add	r2, ip
 8017372:	f108 38ff 	add.w	r8, r8, #4294967295
 8017376:	e788      	b.n	801728a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017378:	b005      	add	sp, #20
 801737a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801737e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801737e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017382:	b087      	sub	sp, #28
 8017384:	468b      	mov	fp, r1
 8017386:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017388:	9203      	str	r2, [sp, #12]
 801738a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801738e:	9204      	str	r2, [sp, #16]
 8017390:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8017394:	6841      	ldr	r1, [r0, #4]
 8017396:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801739a:	fb01 2505 	mla	r5, r1, r5, r2
 801739e:	6802      	ldr	r2, [r0, #0]
 80173a0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80173a4:	f8d9 2000 	ldr.w	r2, [r9]
 80173a8:	9201      	str	r2, [sp, #4]
 80173aa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80173ae:	f1bb 0f00 	cmp.w	fp, #0
 80173b2:	dc03      	bgt.n	80173bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80173b4:	9a03      	ldr	r2, [sp, #12]
 80173b6:	2a00      	cmp	r2, #0
 80173b8:	f340 8159 	ble.w	801766e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80173bc:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80173be:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80173c2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80173c6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80173ca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80173cc:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80173d0:	2b00      	cmp	r3, #0
 80173d2:	dd0e      	ble.n	80173f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80173d4:	1402      	asrs	r2, r0, #16
 80173d6:	d405      	bmi.n	80173e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80173d8:	42ba      	cmp	r2, r7
 80173da:	da03      	bge.n	80173e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80173dc:	140a      	asrs	r2, r1, #16
 80173de:	d401      	bmi.n	80173e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80173e0:	42b2      	cmp	r2, r6
 80173e2:	db07      	blt.n	80173f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80173e4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80173e6:	4410      	add	r0, r2
 80173e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80173ea:	3b01      	subs	r3, #1
 80173ec:	4411      	add	r1, r2
 80173ee:	3502      	adds	r5, #2
 80173f0:	e7ee      	b.n	80173d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80173f2:	d017      	beq.n	8017424 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80173f4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80173f6:	1e5a      	subs	r2, r3, #1
 80173f8:	fb04 0402 	mla	r4, r4, r2, r0
 80173fc:	1424      	asrs	r4, r4, #16
 80173fe:	d409      	bmi.n	8017414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017400:	42bc      	cmp	r4, r7
 8017402:	da07      	bge.n	8017414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8017404:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017406:	fb04 1202 	mla	r2, r4, r2, r1
 801740a:	1412      	asrs	r2, r2, #16
 801740c:	d402      	bmi.n	8017414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801740e:	42b2      	cmp	r2, r6
 8017410:	f2c0 80bf 	blt.w	8017592 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8017414:	2700      	movs	r7, #0
 8017416:	19da      	adds	r2, r3, r7
 8017418:	2a00      	cmp	r2, #0
 801741a:	dc3e      	bgt.n	801749a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801741c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017420:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017424:	f1bb 0f00 	cmp.w	fp, #0
 8017428:	f340 8121 	ble.w	801766e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801742c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017430:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017434:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017438:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801743a:	f1bb 0b01 	subs.w	fp, fp, #1
 801743e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017442:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017446:	eeb0 6a62 	vmov.f32	s12, s5
 801744a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801744e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017452:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017456:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801745a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801745e:	eeb0 6a43 	vmov.f32	s12, s6
 8017462:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017466:	ee12 2a90 	vmov	r2, s5
 801746a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801746e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017472:	ee13 2a10 	vmov	r2, s6
 8017476:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801747a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801747c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801747e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017482:	9a03      	ldr	r2, [sp, #12]
 8017484:	9314      	str	r3, [sp, #80]	@ 0x50
 8017486:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801748a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801748c:	eeb0 3a67 	vmov.f32	s6, s15
 8017490:	bf08      	it	eq
 8017492:	4613      	moveq	r3, r2
 8017494:	eef0 2a47 	vmov.f32	s5, s14
 8017498:	e789      	b.n	80173ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801749a:	1406      	asrs	r6, r0, #16
 801749c:	d42d      	bmi.n	80174fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801749e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80174a2:	42b4      	cmp	r4, r6
 80174a4:	dd29      	ble.n	80174fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80174a6:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80174aa:	d426      	bmi.n	80174fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80174ac:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80174b0:	4562      	cmp	r2, ip
 80174b2:	dd22      	ble.n	80174fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80174b4:	b224      	sxth	r4, r4
 80174b6:	9a01      	ldr	r2, [sp, #4]
 80174b8:	fb0c 6404 	mla	r4, ip, r4, r6
 80174bc:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80174c0:	0e22      	lsrs	r2, r4, #24
 80174c2:	d01a      	beq.n	80174fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80174c4:	9e04      	ldr	r6, [sp, #16]
 80174c6:	4372      	muls	r2, r6
 80174c8:	1c56      	adds	r6, r2, #1
 80174ca:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80174ce:	1212      	asrs	r2, r2, #8
 80174d0:	0a26      	lsrs	r6, r4, #8
 80174d2:	2aff      	cmp	r2, #255	@ 0xff
 80174d4:	9605      	str	r6, [sp, #20]
 80174d6:	d116      	bne.n	8017506 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80174d8:	f06f 0201 	mvn.w	r2, #1
 80174dc:	fb02 fc07 	mul.w	ip, r2, r7
 80174e0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80174e4:	0962      	lsrs	r2, r4, #5
 80174e6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80174ea:	f026 0607 	bic.w	r6, r6, #7
 80174ee:	4316      	orrs	r6, r2
 80174f0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80174f4:	4326      	orrs	r6, r4
 80174f6:	f825 600c 	strh.w	r6, [r5, ip]
 80174fa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80174fc:	4410      	add	r0, r2
 80174fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017500:	3f01      	subs	r7, #1
 8017502:	4411      	add	r1, r2
 8017504:	e787      	b.n	8017416 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017506:	f06f 0601 	mvn.w	r6, #1
 801750a:	437e      	muls	r6, r7
 801750c:	fa1f fa82 	uxth.w	sl, r2
 8017510:	f835 8006 	ldrh.w	r8, [r5, r6]
 8017514:	9602      	str	r6, [sp, #8]
 8017516:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801751a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801751e:	43d2      	mvns	r2, r2
 8017520:	b2d2      	uxtb	r2, r2
 8017522:	fb1c fc0a 	smulbb	ip, ip, sl
 8017526:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801752a:	fb0e ce02 	mla	lr, lr, r2, ip
 801752e:	b2e4      	uxtb	r4, r4
 8017530:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017534:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017538:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801753c:	fa5f f888 	uxtb.w	r8, r8
 8017540:	fb14 f40a 	smulbb	r4, r4, sl
 8017544:	fb08 4402 	mla	r4, r8, r2, r4
 8017548:	fa1f fe8e 	uxth.w	lr, lr
 801754c:	fb16 f60a 	smulbb	r6, r6, sl
 8017550:	b2a4      	uxth	r4, r4
 8017552:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017556:	fb0c 6c02 	mla	ip, ip, r2, r6
 801755a:	f10e 0201 	add.w	r2, lr, #1
 801755e:	1c66      	adds	r6, r4, #1
 8017560:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017564:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8017568:	fa1f fc8c 	uxth.w	ip, ip
 801756c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017570:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8017574:	ea46 0e0e 	orr.w	lr, r6, lr
 8017578:	f10c 0601 	add.w	r6, ip, #1
 801757c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017580:	0976      	lsrs	r6, r6, #5
 8017582:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017586:	9a02      	ldr	r2, [sp, #8]
 8017588:	ea4e 0e06 	orr.w	lr, lr, r6
 801758c:	f825 e002 	strh.w	lr, [r5, r2]
 8017590:	e7b3      	b.n	80174fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8017592:	f04f 0800 	mov.w	r8, #0
 8017596:	eba3 0208 	sub.w	r2, r3, r8
 801759a:	2a00      	cmp	r2, #0
 801759c:	f77f af3e 	ble.w	801741c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80175a0:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80175a4:	1404      	asrs	r4, r0, #16
 80175a6:	140a      	asrs	r2, r1, #16
 80175a8:	fb06 4202 	mla	r2, r6, r2, r4
 80175ac:	9c01      	ldr	r4, [sp, #4]
 80175ae:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80175b2:	0e22      	lsrs	r2, r4, #24
 80175b4:	d016      	beq.n	80175e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80175b6:	9e04      	ldr	r6, [sp, #16]
 80175b8:	4372      	muls	r2, r6
 80175ba:	1c56      	adds	r6, r2, #1
 80175bc:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80175c0:	1212      	asrs	r2, r2, #8
 80175c2:	2aff      	cmp	r2, #255	@ 0xff
 80175c4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80175c8:	d113      	bne.n	80175f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80175ca:	0962      	lsrs	r2, r4, #5
 80175cc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80175d0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80175d4:	f026 0607 	bic.w	r6, r6, #7
 80175d8:	4316      	orrs	r6, r2
 80175da:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80175de:	4326      	orrs	r6, r4
 80175e0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80175e4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80175e6:	4410      	add	r0, r2
 80175e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80175ea:	f108 0801 	add.w	r8, r8, #1
 80175ee:	4411      	add	r1, r2
 80175f0:	e7d1      	b.n	8017596 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80175f2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80175f6:	fa1f fa82 	uxth.w	sl, r2
 80175fa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80175fe:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8017602:	43d2      	mvns	r2, r2
 8017604:	b2d2      	uxtb	r2, r2
 8017606:	fb17 f70a 	smulbb	r7, r7, sl
 801760a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801760e:	fb0c 7c02 	mla	ip, ip, r2, r7
 8017612:	b2e4      	uxtb	r4, r4
 8017614:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017618:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801761c:	fa5f fe8e 	uxtb.w	lr, lr
 8017620:	fb14 f40a 	smulbb	r4, r4, sl
 8017624:	fb0e 4402 	mla	r4, lr, r2, r4
 8017628:	b2f6      	uxtb	r6, r6
 801762a:	fa1f fc8c 	uxth.w	ip, ip
 801762e:	fb16 f60a 	smulbb	r6, r6, sl
 8017632:	b2a4      	uxth	r4, r4
 8017634:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017638:	fb07 6702 	mla	r7, r7, r2, r6
 801763c:	f10c 0201 	add.w	r2, ip, #1
 8017640:	1c66      	adds	r6, r4, #1
 8017642:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017646:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801764a:	b2bf      	uxth	r7, r7
 801764c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017650:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017654:	ea46 0c0c 	orr.w	ip, r6, ip
 8017658:	1c7e      	adds	r6, r7, #1
 801765a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801765e:	0976      	lsrs	r6, r6, #5
 8017660:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017664:	ea4c 0c06 	orr.w	ip, ip, r6
 8017668:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801766c:	e7ba      	b.n	80175e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801766e:	b007      	add	sp, #28
 8017670:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017674 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017678:	b085      	sub	sp, #20
 801767a:	468b      	mov	fp, r1
 801767c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801767e:	9203      	str	r2, [sp, #12]
 8017680:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017684:	6841      	ldr	r1, [r0, #4]
 8017686:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801768a:	fb01 2404 	mla	r4, r1, r4, r2
 801768e:	6802      	ldr	r2, [r0, #0]
 8017690:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017694:	f8d8 2000 	ldr.w	r2, [r8]
 8017698:	9201      	str	r2, [sp, #4]
 801769a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801769e:	f1bb 0f00 	cmp.w	fp, #0
 80176a2:	dc03      	bgt.n	80176ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80176a4:	9a03      	ldr	r2, [sp, #12]
 80176a6:	2a00      	cmp	r2, #0
 80176a8:	f340 814f 	ble.w	801794a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80176ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80176ae:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80176b2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80176b6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80176ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80176bc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80176c0:	2b00      	cmp	r3, #0
 80176c2:	dd0e      	ble.n	80176e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80176c4:	1408      	asrs	r0, r1, #16
 80176c6:	d405      	bmi.n	80176d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80176c8:	42b8      	cmp	r0, r7
 80176ca:	da03      	bge.n	80176d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80176cc:	1410      	asrs	r0, r2, #16
 80176ce:	d401      	bmi.n	80176d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80176d0:	42b0      	cmp	r0, r6
 80176d2:	db07      	blt.n	80176e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80176d4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80176d6:	4401      	add	r1, r0
 80176d8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80176da:	3b01      	subs	r3, #1
 80176dc:	4402      	add	r2, r0
 80176de:	3402      	adds	r4, #2
 80176e0:	e7ee      	b.n	80176c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80176e2:	d017      	beq.n	8017714 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80176e4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80176e6:	1e58      	subs	r0, r3, #1
 80176e8:	fb05 1500 	mla	r5, r5, r0, r1
 80176ec:	142d      	asrs	r5, r5, #16
 80176ee:	d409      	bmi.n	8017704 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80176f0:	42bd      	cmp	r5, r7
 80176f2:	da07      	bge.n	8017704 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80176f4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80176f6:	fb05 2000 	mla	r0, r5, r0, r2
 80176fa:	1400      	asrs	r0, r0, #16
 80176fc:	d402      	bmi.n	8017704 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80176fe:	42b0      	cmp	r0, r6
 8017700:	f2c0 80ba 	blt.w	8017878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8017704:	2600      	movs	r6, #0
 8017706:	1998      	adds	r0, r3, r6
 8017708:	2800      	cmp	r0, #0
 801770a:	dc3e      	bgt.n	801778a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801770c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017710:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017714:	f1bb 0f00 	cmp.w	fp, #0
 8017718:	f340 8117 	ble.w	801794a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801771c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017720:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017724:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017728:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801772a:	f1bb 0b01 	subs.w	fp, fp, #1
 801772e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017732:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017736:	eeb0 6a62 	vmov.f32	s12, s5
 801773a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801773e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017742:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017746:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801774a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801774e:	eeb0 6a43 	vmov.f32	s12, s6
 8017752:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017756:	ee12 2a90 	vmov	r2, s5
 801775a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801775e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017762:	ee13 2a10 	vmov	r2, s6
 8017766:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801776a:	9311      	str	r3, [sp, #68]	@ 0x44
 801776c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801776e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017772:	9a03      	ldr	r2, [sp, #12]
 8017774:	9312      	str	r3, [sp, #72]	@ 0x48
 8017776:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801777a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801777c:	eeb0 3a67 	vmov.f32	s6, s15
 8017780:	bf08      	it	eq
 8017782:	4613      	moveq	r3, r2
 8017784:	eef0 2a47 	vmov.f32	s5, s14
 8017788:	e789      	b.n	801769e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801778a:	140f      	asrs	r7, r1, #16
 801778c:	d424      	bmi.n	80177d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801778e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8017792:	42bd      	cmp	r5, r7
 8017794:	dd20      	ble.n	80177d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017796:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801779a:	d41d      	bmi.n	80177d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801779c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80177a0:	4560      	cmp	r0, ip
 80177a2:	dd19      	ble.n	80177d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80177a4:	b22d      	sxth	r5, r5
 80177a6:	fb0c 7505 	mla	r5, ip, r5, r7
 80177aa:	9801      	ldr	r0, [sp, #4]
 80177ac:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80177b0:	0e07      	lsrs	r7, r0, #24
 80177b2:	2fff      	cmp	r7, #255	@ 0xff
 80177b4:	d116      	bne.n	80177e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80177b6:	f06f 0501 	mvn.w	r5, #1
 80177ba:	fb05 f706 	mul.w	r7, r5, r6
 80177be:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80177c2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80177c6:	0945      	lsrs	r5, r0, #5
 80177c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80177cc:	ea4c 0505 	orr.w	r5, ip, r5
 80177d0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80177d4:	4305      	orrs	r5, r0
 80177d6:	53e5      	strh	r5, [r4, r7]
 80177d8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80177da:	4401      	add	r1, r0
 80177dc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80177de:	3e01      	subs	r6, #1
 80177e0:	4402      	add	r2, r0
 80177e2:	e790      	b.n	8017706 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80177e4:	b2fd      	uxtb	r5, r7
 80177e6:	2f00      	cmp	r7, #0
 80177e8:	d0f6      	beq.n	80177d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80177ea:	f06f 0701 	mvn.w	r7, #1
 80177ee:	4377      	muls	r7, r6
 80177f0:	fa1f f985 	uxth.w	r9, r5
 80177f4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80177f8:	9702      	str	r7, [sp, #8]
 80177fa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80177fe:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8017802:	43ed      	mvns	r5, r5
 8017804:	b2ed      	uxtb	r5, r5
 8017806:	fb17 f709 	smulbb	r7, r7, r9
 801780a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801780e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8017812:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8017816:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801781a:	b2c0      	uxtb	r0, r0
 801781c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017820:	fa5f fe8e 	uxtb.w	lr, lr
 8017824:	fb10 f009 	smulbb	r0, r0, r9
 8017828:	fb0e 0005 	mla	r0, lr, r5, r0
 801782c:	b280      	uxth	r0, r0
 801782e:	fa1f fc8c 	uxth.w	ip, ip
 8017832:	fb1a fa09 	smulbb	sl, sl, r9
 8017836:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801783a:	fb07 a705 	mla	r7, r7, r5, sl
 801783e:	f100 0a01 	add.w	sl, r0, #1
 8017842:	f10c 0501 	add.w	r5, ip, #1
 8017846:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801784a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801784e:	b2bf      	uxth	r7, r7
 8017850:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017854:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017858:	ea4a 0c0c 	orr.w	ip, sl, ip
 801785c:	f107 0a01 	add.w	sl, r7, #1
 8017860:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017864:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017868:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801786c:	9802      	ldr	r0, [sp, #8]
 801786e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8017872:	f824 c000 	strh.w	ip, [r4, r0]
 8017876:	e7af      	b.n	80177d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017878:	f04f 0e00 	mov.w	lr, #0
 801787c:	eba3 000e 	sub.w	r0, r3, lr
 8017880:	2800      	cmp	r0, #0
 8017882:	f77f af43 	ble.w	801770c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017886:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801788a:	140d      	asrs	r5, r1, #16
 801788c:	1410      	asrs	r0, r2, #16
 801788e:	fb06 5000 	mla	r0, r6, r0, r5
 8017892:	9d01      	ldr	r5, [sp, #4]
 8017894:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017898:	0e2e      	lsrs	r6, r5, #24
 801789a:	2eff      	cmp	r6, #255	@ 0xff
 801789c:	d112      	bne.n	80178c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801789e:	482c      	ldr	r0, [pc, #176]	@ (8017950 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80178a0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80178a4:	0968      	lsrs	r0, r5, #5
 80178a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80178aa:	4330      	orrs	r0, r6
 80178ac:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80178b0:	4328      	orrs	r0, r5
 80178b2:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80178b6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80178b8:	4401      	add	r1, r0
 80178ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80178bc:	f10e 0e01 	add.w	lr, lr, #1
 80178c0:	4402      	add	r2, r0
 80178c2:	e7db      	b.n	801787c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80178c4:	b2f0      	uxtb	r0, r6
 80178c6:	2e00      	cmp	r6, #0
 80178c8:	d0f5      	beq.n	80178b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80178ca:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80178ce:	fa1f f980 	uxth.w	r9, r0
 80178d2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80178d6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80178da:	43c0      	mvns	r0, r0
 80178dc:	b2c0      	uxtb	r0, r0
 80178de:	fb16 f609 	smulbb	r6, r6, r9
 80178e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80178e6:	fb07 6700 	mla	r7, r7, r0, r6
 80178ea:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80178ee:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80178f2:	b2ed      	uxtb	r5, r5
 80178f4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80178f8:	fa5f fc8c 	uxtb.w	ip, ip
 80178fc:	fb15 f509 	smulbb	r5, r5, r9
 8017900:	fb0c 5500 	mla	r5, ip, r0, r5
 8017904:	b2bf      	uxth	r7, r7
 8017906:	fb1a fa09 	smulbb	sl, sl, r9
 801790a:	b2ad      	uxth	r5, r5
 801790c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017910:	fb06 a600 	mla	r6, r6, r0, sl
 8017914:	1c78      	adds	r0, r7, #1
 8017916:	f105 0a01 	add.w	sl, r5, #1
 801791a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801791e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017922:	b2b6      	uxth	r6, r6
 8017924:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017928:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801792c:	ea4a 0707 	orr.w	r7, sl, r7
 8017930:	f106 0a01 	add.w	sl, r6, #1
 8017934:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017938:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801793c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017940:	ea47 070a 	orr.w	r7, r7, sl
 8017944:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017948:	e7b5      	b.n	80178b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801794a:	b005      	add	sp, #20
 801794c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017950:	fffff800 	.word	0xfffff800

08017954 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017958:	b087      	sub	sp, #28
 801795a:	468b      	mov	fp, r1
 801795c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801795e:	9203      	str	r2, [sp, #12]
 8017960:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017964:	9204      	str	r2, [sp, #16]
 8017966:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801796a:	6841      	ldr	r1, [r0, #4]
 801796c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8017970:	fb01 2404 	mla	r4, r1, r4, r2
 8017974:	6802      	ldr	r2, [r0, #0]
 8017976:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801797a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801797e:	3201      	adds	r2, #1
 8017980:	f022 0201 	bic.w	r2, r2, #1
 8017984:	9200      	str	r2, [sp, #0]
 8017986:	f8d9 2000 	ldr.w	r2, [r9]
 801798a:	9201      	str	r2, [sp, #4]
 801798c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017990:	f1bb 0f00 	cmp.w	fp, #0
 8017994:	dc03      	bgt.n	801799e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017996:	9a03      	ldr	r2, [sp, #12]
 8017998:	2a00      	cmp	r2, #0
 801799a:	f340 8169 	ble.w	8017c70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801799e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80179a0:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80179a4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80179a8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80179ac:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80179ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80179b2:	2b00      	cmp	r3, #0
 80179b4:	dd0e      	ble.n	80179d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80179b6:	1402      	asrs	r2, r0, #16
 80179b8:	d405      	bmi.n	80179c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80179ba:	42ba      	cmp	r2, r7
 80179bc:	da03      	bge.n	80179c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80179be:	140a      	asrs	r2, r1, #16
 80179c0:	d401      	bmi.n	80179c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80179c2:	42b2      	cmp	r2, r6
 80179c4:	db07      	blt.n	80179d6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80179c6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80179c8:	4410      	add	r0, r2
 80179ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80179cc:	3b01      	subs	r3, #1
 80179ce:	4411      	add	r1, r2
 80179d0:	3402      	adds	r4, #2
 80179d2:	e7ee      	b.n	80179b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80179d4:	d017      	beq.n	8017a06 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80179d6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80179d8:	1e5a      	subs	r2, r3, #1
 80179da:	fb05 0502 	mla	r5, r5, r2, r0
 80179de:	142d      	asrs	r5, r5, #16
 80179e0:	d409      	bmi.n	80179f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80179e2:	42bd      	cmp	r5, r7
 80179e4:	da07      	bge.n	80179f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80179e6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80179e8:	fb05 1202 	mla	r2, r5, r2, r1
 80179ec:	1412      	asrs	r2, r2, #16
 80179ee:	d402      	bmi.n	80179f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80179f0:	42b2      	cmp	r2, r6
 80179f2:	f2c0 80c7 	blt.w	8017b84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80179f6:	2700      	movs	r7, #0
 80179f8:	19da      	adds	r2, r3, r7
 80179fa:	2a00      	cmp	r2, #0
 80179fc:	dc3e      	bgt.n	8017a7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80179fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017a02:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017a06:	f1bb 0f00 	cmp.w	fp, #0
 8017a0a:	f340 8131 	ble.w	8017c70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8017a0e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017a12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017a16:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017a1a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017a1c:	f1bb 0b01 	subs.w	fp, fp, #1
 8017a20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017a24:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017a28:	eeb0 6a62 	vmov.f32	s12, s5
 8017a2c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017a30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a34:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017a38:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8017a3c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017a40:	eeb0 6a43 	vmov.f32	s12, s6
 8017a44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017a48:	ee12 2a90 	vmov	r2, s5
 8017a4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017a50:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a54:	ee13 2a10 	vmov	r2, s6
 8017a58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a5c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017a5e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017a60:	fb92 f3f3 	sdiv	r3, r2, r3
 8017a64:	9a03      	ldr	r2, [sp, #12]
 8017a66:	9314      	str	r3, [sp, #80]	@ 0x50
 8017a68:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8017a6c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017a6e:	eeb0 3a67 	vmov.f32	s6, s15
 8017a72:	bf08      	it	eq
 8017a74:	4613      	moveq	r3, r2
 8017a76:	eef0 2a47 	vmov.f32	s5, s14
 8017a7a:	e789      	b.n	8017990 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017a7c:	1405      	asrs	r5, r0, #16
 8017a7e:	d435      	bmi.n	8017aec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017a80:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017a84:	42aa      	cmp	r2, r5
 8017a86:	dd31      	ble.n	8017aec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017a88:	140e      	asrs	r6, r1, #16
 8017a8a:	d42f      	bmi.n	8017aec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017a8c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017a90:	42b2      	cmp	r2, r6
 8017a92:	dd2b      	ble.n	8017aec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017a94:	9a00      	ldr	r2, [sp, #0]
 8017a96:	fb06 5502 	mla	r5, r6, r2, r5
 8017a9a:	086a      	lsrs	r2, r5, #1
 8017a9c:	9e01      	ldr	r6, [sp, #4]
 8017a9e:	5cb2      	ldrb	r2, [r6, r2]
 8017aa0:	07ee      	lsls	r6, r5, #31
 8017aa2:	bf54      	ite	pl
 8017aa4:	f002 020f 	andpl.w	r2, r2, #15
 8017aa8:	1112      	asrmi	r2, r2, #4
 8017aaa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017aae:	b2d2      	uxtb	r2, r2
 8017ab0:	b1e2      	cbz	r2, 8017aec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017ab2:	9d04      	ldr	r5, [sp, #16]
 8017ab4:	436a      	muls	r2, r5
 8017ab6:	1c55      	adds	r5, r2, #1
 8017ab8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017abc:	4d6e      	ldr	r5, [pc, #440]	@ (8017c78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017abe:	682d      	ldr	r5, [r5, #0]
 8017ac0:	1212      	asrs	r2, r2, #8
 8017ac2:	0a2e      	lsrs	r6, r5, #8
 8017ac4:	2aff      	cmp	r2, #255	@ 0xff
 8017ac6:	9605      	str	r6, [sp, #20]
 8017ac8:	d116      	bne.n	8017af8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8017aca:	f06f 0201 	mvn.w	r2, #1
 8017ace:	fb02 fc07 	mul.w	ip, r2, r7
 8017ad2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8017ad6:	096a      	lsrs	r2, r5, #5
 8017ad8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017adc:	f026 0607 	bic.w	r6, r6, #7
 8017ae0:	4316      	orrs	r6, r2
 8017ae2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017ae6:	432e      	orrs	r6, r5
 8017ae8:	f824 600c 	strh.w	r6, [r4, ip]
 8017aec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017aee:	4410      	add	r0, r2
 8017af0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017af2:	3f01      	subs	r7, #1
 8017af4:	4411      	add	r1, r2
 8017af6:	e77f      	b.n	80179f8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8017af8:	f06f 0601 	mvn.w	r6, #1
 8017afc:	437e      	muls	r6, r7
 8017afe:	fa1f fa82 	uxth.w	sl, r2
 8017b02:	f834 8006 	ldrh.w	r8, [r4, r6]
 8017b06:	9602      	str	r6, [sp, #8]
 8017b08:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017b0c:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8017b10:	43d2      	mvns	r2, r2
 8017b12:	b2d2      	uxtb	r2, r2
 8017b14:	fb1c fc0a 	smulbb	ip, ip, sl
 8017b18:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8017b1c:	fb0e ce02 	mla	lr, lr, r2, ip
 8017b20:	b2ed      	uxtb	r5, r5
 8017b22:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017b26:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017b2a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8017b2e:	fa5f f888 	uxtb.w	r8, r8
 8017b32:	fb15 f50a 	smulbb	r5, r5, sl
 8017b36:	fb08 5502 	mla	r5, r8, r2, r5
 8017b3a:	fa1f fe8e 	uxth.w	lr, lr
 8017b3e:	fb16 f60a 	smulbb	r6, r6, sl
 8017b42:	b2ad      	uxth	r5, r5
 8017b44:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8017b48:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017b4c:	f10e 0201 	add.w	r2, lr, #1
 8017b50:	1c6e      	adds	r6, r5, #1
 8017b52:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8017b56:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8017b5a:	fa1f fc8c 	uxth.w	ip, ip
 8017b5e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017b62:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8017b66:	ea46 0e0e 	orr.w	lr, r6, lr
 8017b6a:	f10c 0601 	add.w	r6, ip, #1
 8017b6e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8017b72:	0976      	lsrs	r6, r6, #5
 8017b74:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017b78:	9a02      	ldr	r2, [sp, #8]
 8017b7a:	ea4e 0e06 	orr.w	lr, lr, r6
 8017b7e:	f824 e002 	strh.w	lr, [r4, r2]
 8017b82:	e7b3      	b.n	8017aec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017b84:	f04f 0800 	mov.w	r8, #0
 8017b88:	eba3 0208 	sub.w	r2, r3, r8
 8017b8c:	2a00      	cmp	r2, #0
 8017b8e:	f77f af36 	ble.w	80179fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8017b92:	9e00      	ldr	r6, [sp, #0]
 8017b94:	1402      	asrs	r2, r0, #16
 8017b96:	140d      	asrs	r5, r1, #16
 8017b98:	fb06 2505 	mla	r5, r6, r5, r2
 8017b9c:	086a      	lsrs	r2, r5, #1
 8017b9e:	9e01      	ldr	r6, [sp, #4]
 8017ba0:	5cb2      	ldrb	r2, [r6, r2]
 8017ba2:	07ed      	lsls	r5, r5, #31
 8017ba4:	bf54      	ite	pl
 8017ba6:	f002 020f 	andpl.w	r2, r2, #15
 8017baa:	1112      	asrmi	r2, r2, #4
 8017bac:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017bb0:	b2d2      	uxtb	r2, r2
 8017bb2:	b1c2      	cbz	r2, 8017be6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017bb4:	9d04      	ldr	r5, [sp, #16]
 8017bb6:	436a      	muls	r2, r5
 8017bb8:	1c55      	adds	r5, r2, #1
 8017bba:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8017bbe:	4d2e      	ldr	r5, [pc, #184]	@ (8017c78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8017bc0:	1212      	asrs	r2, r2, #8
 8017bc2:	682e      	ldr	r6, [r5, #0]
 8017bc4:	2aff      	cmp	r2, #255	@ 0xff
 8017bc6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8017bca:	d113      	bne.n	8017bf4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8017bcc:	0972      	lsrs	r2, r6, #5
 8017bce:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8017bd2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017bd6:	f025 0507 	bic.w	r5, r5, #7
 8017bda:	4315      	orrs	r5, r2
 8017bdc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017be0:	4335      	orrs	r5, r6
 8017be2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8017be6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017be8:	4410      	add	r0, r2
 8017bea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017bec:	f108 0801 	add.w	r8, r8, #1
 8017bf0:	4411      	add	r1, r2
 8017bf2:	e7c9      	b.n	8017b88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8017bf4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8017bf8:	fa1f fa82 	uxth.w	sl, r2
 8017bfc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8017c00:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8017c04:	43d2      	mvns	r2, r2
 8017c06:	b2d2      	uxtb	r2, r2
 8017c08:	fb17 f70a 	smulbb	r7, r7, sl
 8017c0c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017c10:	fb0c 7c02 	mla	ip, ip, r2, r7
 8017c14:	b2f6      	uxtb	r6, r6
 8017c16:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017c1a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017c1e:	fa5f fe8e 	uxtb.w	lr, lr
 8017c22:	fb16 f60a 	smulbb	r6, r6, sl
 8017c26:	fb0e 6602 	mla	r6, lr, r2, r6
 8017c2a:	b2ed      	uxtb	r5, r5
 8017c2c:	fa1f fc8c 	uxth.w	ip, ip
 8017c30:	fb15 f50a 	smulbb	r5, r5, sl
 8017c34:	b2b6      	uxth	r6, r6
 8017c36:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017c3a:	fb07 5702 	mla	r7, r7, r2, r5
 8017c3e:	f10c 0201 	add.w	r2, ip, #1
 8017c42:	1c75      	adds	r5, r6, #1
 8017c44:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017c48:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017c4c:	b2bf      	uxth	r7, r7
 8017c4e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017c52:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017c56:	ea45 0c0c 	orr.w	ip, r5, ip
 8017c5a:	1c7d      	adds	r5, r7, #1
 8017c5c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8017c60:	096d      	lsrs	r5, r5, #5
 8017c62:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017c66:	ea4c 0c05 	orr.w	ip, ip, r5
 8017c6a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8017c6e:	e7ba      	b.n	8017be6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017c70:	b007      	add	sp, #28
 8017c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c76:	bf00      	nop
 8017c78:	20002f3c 	.word	0x20002f3c

08017c7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017c7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c80:	b087      	sub	sp, #28
 8017c82:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 8017f90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8017c86:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017c88:	9205      	str	r2, [sp, #20]
 8017c8a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017c8e:	9101      	str	r1, [sp, #4]
 8017c90:	6841      	ldr	r1, [r0, #4]
 8017c92:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8017c96:	fb01 2404 	mla	r4, r1, r4, r2
 8017c9a:	6802      	ldr	r2, [r0, #0]
 8017c9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017ca0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017ca4:	3201      	adds	r2, #1
 8017ca6:	f022 0201 	bic.w	r2, r2, #1
 8017caa:	9202      	str	r2, [sp, #8]
 8017cac:	f8db 2000 	ldr.w	r2, [fp]
 8017cb0:	9203      	str	r2, [sp, #12]
 8017cb2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017cb6:	9a01      	ldr	r2, [sp, #4]
 8017cb8:	2a00      	cmp	r2, #0
 8017cba:	dc03      	bgt.n	8017cc4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017cbc:	9a05      	ldr	r2, [sp, #20]
 8017cbe:	2a00      	cmp	r2, #0
 8017cc0:	f340 8162 	ble.w	8017f88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8017cc4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017cc6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8017cca:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8017cce:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017cd2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017cd4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017cd8:	2b00      	cmp	r3, #0
 8017cda:	dd0e      	ble.n	8017cfa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017cdc:	1402      	asrs	r2, r0, #16
 8017cde:	d405      	bmi.n	8017cec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ce0:	42ba      	cmp	r2, r7
 8017ce2:	da03      	bge.n	8017cec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ce4:	140a      	asrs	r2, r1, #16
 8017ce6:	d401      	bmi.n	8017cec <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017ce8:	42b2      	cmp	r2, r6
 8017cea:	db07      	blt.n	8017cfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017cec:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017cee:	4410      	add	r0, r2
 8017cf0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017cf2:	3b01      	subs	r3, #1
 8017cf4:	4411      	add	r1, r2
 8017cf6:	3402      	adds	r4, #2
 8017cf8:	e7ee      	b.n	8017cd8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017cfa:	d017      	beq.n	8017d2c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8017cfc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017cfe:	1e5a      	subs	r2, r3, #1
 8017d00:	fb05 0502 	mla	r5, r5, r2, r0
 8017d04:	142d      	asrs	r5, r5, #16
 8017d06:	d409      	bmi.n	8017d1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017d08:	42bd      	cmp	r5, r7
 8017d0a:	da07      	bge.n	8017d1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017d0c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8017d0e:	fb05 1202 	mla	r2, r5, r2, r1
 8017d12:	1412      	asrs	r2, r2, #16
 8017d14:	d402      	bmi.n	8017d1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017d16:	42b2      	cmp	r2, r6
 8017d18:	f2c0 80c3 	blt.w	8017ea2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8017d1c:	2500      	movs	r5, #0
 8017d1e:	195a      	adds	r2, r3, r5
 8017d20:	2a00      	cmp	r2, #0
 8017d22:	dc3f      	bgt.n	8017da4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8017d24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017d28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017d2c:	9b01      	ldr	r3, [sp, #4]
 8017d2e:	2b00      	cmp	r3, #0
 8017d30:	f340 812a 	ble.w	8017f88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8017d34:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017d38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017d3c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017d40:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017d42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017d46:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017d4a:	eeb0 6a62 	vmov.f32	s12, s5
 8017d4e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017d52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d56:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017d5a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8017d5e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017d62:	eeb0 6a43 	vmov.f32	s12, s6
 8017d66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017d6a:	ee12 2a90 	vmov	r2, s5
 8017d6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017d72:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d76:	ee13 2a10 	vmov	r2, s6
 8017d7a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017d7c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017d7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d82:	9314      	str	r3, [sp, #80]	@ 0x50
 8017d84:	9b01      	ldr	r3, [sp, #4]
 8017d86:	9a05      	ldr	r2, [sp, #20]
 8017d88:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017d8c:	3b01      	subs	r3, #1
 8017d8e:	9301      	str	r3, [sp, #4]
 8017d90:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8017d94:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017d96:	eeb0 3a67 	vmov.f32	s6, s15
 8017d9a:	bf08      	it	eq
 8017d9c:	4613      	moveq	r3, r2
 8017d9e:	eef0 2a47 	vmov.f32	s5, s14
 8017da2:	e788      	b.n	8017cb6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017da4:	1406      	asrs	r6, r0, #16
 8017da6:	d42c      	bmi.n	8017e02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017da8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017dac:	42b2      	cmp	r2, r6
 8017dae:	dd28      	ble.n	8017e02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017db0:	140f      	asrs	r7, r1, #16
 8017db2:	d426      	bmi.n	8017e02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017db4:	f8db 200c 	ldr.w	r2, [fp, #12]
 8017db8:	42ba      	cmp	r2, r7
 8017dba:	dd22      	ble.n	8017e02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017dbc:	9a02      	ldr	r2, [sp, #8]
 8017dbe:	fb07 6602 	mla	r6, r7, r2, r6
 8017dc2:	0872      	lsrs	r2, r6, #1
 8017dc4:	9f03      	ldr	r7, [sp, #12]
 8017dc6:	5cba      	ldrb	r2, [r7, r2]
 8017dc8:	07f6      	lsls	r6, r6, #31
 8017dca:	bf54      	ite	pl
 8017dcc:	f002 020f 	andpl.w	r2, r2, #15
 8017dd0:	1112      	asrmi	r2, r2, #4
 8017dd2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017dd6:	b2d2      	uxtb	r2, r2
 8017dd8:	2aff      	cmp	r2, #255	@ 0xff
 8017dda:	d118      	bne.n	8017e0e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8017ddc:	f8d8 2000 	ldr.w	r2, [r8]
 8017de0:	f06f 0601 	mvn.w	r6, #1
 8017de4:	fb06 f705 	mul.w	r7, r6, r5
 8017de8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8017dec:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8017df0:	0956      	lsrs	r6, r2, #5
 8017df2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017df6:	ea4c 0606 	orr.w	r6, ip, r6
 8017dfa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017dfe:	4316      	orrs	r6, r2
 8017e00:	53e6      	strh	r6, [r4, r7]
 8017e02:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017e04:	4410      	add	r0, r2
 8017e06:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017e08:	3d01      	subs	r5, #1
 8017e0a:	4411      	add	r1, r2
 8017e0c:	e787      	b.n	8017d1e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017e0e:	2a00      	cmp	r2, #0
 8017e10:	d0f7      	beq.n	8017e02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017e12:	f06f 0601 	mvn.w	r6, #1
 8017e16:	436e      	muls	r6, r5
 8017e18:	f8d8 c000 	ldr.w	ip, [r8]
 8017e1c:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017e20:	9604      	str	r6, [sp, #16]
 8017e22:	fa1f f982 	uxth.w	r9, r2
 8017e26:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017e2a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8017e2e:	43d2      	mvns	r2, r2
 8017e30:	b2d2      	uxtb	r2, r2
 8017e32:	fb16 f609 	smulbb	r6, r6, r9
 8017e36:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017e3a:	fb07 6702 	mla	r7, r7, r2, r6
 8017e3e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8017e42:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8017e46:	fa5f fc8c 	uxtb.w	ip, ip
 8017e4a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017e4e:	fa5f fe8e 	uxtb.w	lr, lr
 8017e52:	fb1c fc09 	smulbb	ip, ip, r9
 8017e56:	fb0e cc02 	mla	ip, lr, r2, ip
 8017e5a:	b2bf      	uxth	r7, r7
 8017e5c:	fb1a fa09 	smulbb	sl, sl, r9
 8017e60:	fa1f fc8c 	uxth.w	ip, ip
 8017e64:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017e68:	fb06 a602 	mla	r6, r6, r2, sl
 8017e6c:	1c7a      	adds	r2, r7, #1
 8017e6e:	f10c 0a01 	add.w	sl, ip, #1
 8017e72:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8017e76:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8017e7a:	b2b6      	uxth	r6, r6
 8017e7c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017e80:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017e84:	ea4a 0707 	orr.w	r7, sl, r7
 8017e88:	f106 0a01 	add.w	sl, r6, #1
 8017e8c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017e90:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017e94:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017e98:	9a04      	ldr	r2, [sp, #16]
 8017e9a:	ea47 070a 	orr.w	r7, r7, sl
 8017e9e:	52a7      	strh	r7, [r4, r2]
 8017ea0:	e7af      	b.n	8017e02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017ea2:	f04f 0e00 	mov.w	lr, #0
 8017ea6:	eba3 020e 	sub.w	r2, r3, lr
 8017eaa:	2a00      	cmp	r2, #0
 8017eac:	f77f af3a 	ble.w	8017d24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017eb0:	9e02      	ldr	r6, [sp, #8]
 8017eb2:	1402      	asrs	r2, r0, #16
 8017eb4:	140d      	asrs	r5, r1, #16
 8017eb6:	fb06 2505 	mla	r5, r6, r5, r2
 8017eba:	086a      	lsrs	r2, r5, #1
 8017ebc:	9e03      	ldr	r6, [sp, #12]
 8017ebe:	5cb2      	ldrb	r2, [r6, r2]
 8017ec0:	07ed      	lsls	r5, r5, #31
 8017ec2:	bf54      	ite	pl
 8017ec4:	f002 020f 	andpl.w	r2, r2, #15
 8017ec8:	1112      	asrmi	r2, r2, #4
 8017eca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8017ece:	b2d2      	uxtb	r2, r2
 8017ed0:	2aff      	cmp	r2, #255	@ 0xff
 8017ed2:	d115      	bne.n	8017f00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8017ed4:	f8d8 5000 	ldr.w	r5, [r8]
 8017ed8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8017edc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8017ee0:	096a      	lsrs	r2, r5, #5
 8017ee2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8017ee6:	4332      	orrs	r2, r6
 8017ee8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8017eec:	432a      	orrs	r2, r5
 8017eee:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8017ef2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017ef4:	4410      	add	r0, r2
 8017ef6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017ef8:	f10e 0e01 	add.w	lr, lr, #1
 8017efc:	4411      	add	r1, r2
 8017efe:	e7d2      	b.n	8017ea6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8017f00:	2a00      	cmp	r2, #0
 8017f02:	d0f6      	beq.n	8017ef2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017f04:	f8d8 7000 	ldr.w	r7, [r8]
 8017f08:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017f0c:	fa1f f982 	uxth.w	r9, r2
 8017f10:	ea4f 262c 	mov.w	r6, ip, asr #8
 8017f14:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8017f18:	43d2      	mvns	r2, r2
 8017f1a:	b2d2      	uxtb	r2, r2
 8017f1c:	fb15 f509 	smulbb	r5, r5, r9
 8017f20:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017f24:	fb06 5602 	mla	r6, r6, r2, r5
 8017f28:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8017f2c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017f30:	b2ff      	uxtb	r7, r7
 8017f32:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8017f36:	fa5f fc8c 	uxtb.w	ip, ip
 8017f3a:	fb17 f709 	smulbb	r7, r7, r9
 8017f3e:	fb0c 7702 	mla	r7, ip, r2, r7
 8017f42:	b2b6      	uxth	r6, r6
 8017f44:	fb1a fa09 	smulbb	sl, sl, r9
 8017f48:	b2bf      	uxth	r7, r7
 8017f4a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017f4e:	fb05 a502 	mla	r5, r5, r2, sl
 8017f52:	1c72      	adds	r2, r6, #1
 8017f54:	f107 0a01 	add.w	sl, r7, #1
 8017f58:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8017f5c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017f60:	b2ad      	uxth	r5, r5
 8017f62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017f66:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017f6a:	ea4a 0606 	orr.w	r6, sl, r6
 8017f6e:	f105 0a01 	add.w	sl, r5, #1
 8017f72:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017f76:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017f7a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017f7e:	ea46 060a 	orr.w	r6, r6, sl
 8017f82:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8017f86:	e7b4      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017f88:	b007      	add	sp, #28
 8017f8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f8e:	bf00      	nop
 8017f90:	20002f3c 	.word	0x20002f3c

08017f94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8017f94:	4770      	bx	lr

08017f96 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8017f96:	4770      	bx	lr

08017f98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8017f98:	4770      	bx	lr

08017f9a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8017f9a:	4770      	bx	lr

08017f9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8017f9c:	4770      	bx	lr

08017f9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8017f9e:	4770      	bx	lr

08017fa0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8017fa0:	4770      	bx	lr

08017fa2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8017fa2:	4770      	bx	lr

08017fa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017fa4:	4770      	bx	lr

08017fa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017fa6:	4770      	bx	lr

08017fa8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017fa8:	4770      	bx	lr

08017faa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017faa:	4770      	bx	lr

08017fac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017fac:	4770      	bx	lr

08017fae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017fae:	4770      	bx	lr

08017fb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017fb0:	4770      	bx	lr

08017fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017fb2:	4770      	bx	lr

08017fb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017fb4:	4770      	bx	lr

08017fb6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017fb6:	4770      	bx	lr

08017fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017fb8:	4770      	bx	lr

08017fba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017fba:	4770      	bx	lr

08017fbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017fbc:	4770      	bx	lr

08017fbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017fbe:	4770      	bx	lr

08017fc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8017fc0:	4770      	bx	lr

08017fc2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8017fc2:	4770      	bx	lr

08017fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017fc4:	4770      	bx	lr

08017fc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8017fc6:	4770      	bx	lr

08017fc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017fc8:	4770      	bx	lr

08017fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8017fca:	4770      	bx	lr

08017fcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8017fcc:	4770      	bx	lr

08017fce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017fce:	4770      	bx	lr

08017fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017fd0:	4770      	bx	lr

08017fd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017fd2:	4770      	bx	lr

08017fd4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8017fd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017fd8:	b088      	sub	sp, #32
 8017fda:	ac08      	add	r4, sp, #32
 8017fdc:	4606      	mov	r6, r0
 8017fde:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8017fe2:	4620      	mov	r0, r4
 8017fe4:	4688      	mov	r8, r1
 8017fe6:	4691      	mov	r9, r2
 8017fe8:	f7fd fc32 	bl	8015850 <_ZNK8touchgfx6Bitmap7getDataEv>
 8017fec:	6833      	ldr	r3, [r6, #0]
 8017fee:	4605      	mov	r5, r0
 8017ff0:	4620      	mov	r0, r4
 8017ff2:	699f      	ldr	r7, [r3, #24]
 8017ff4:	f7fd fb3a 	bl	801566c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8017ff8:	4682      	mov	sl, r0
 8017ffa:	4620      	mov	r0, r4
 8017ffc:	f7fd fb6a 	bl	80156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018000:	9500      	str	r5, [sp, #0]
 8018002:	e9cd a001 	strd	sl, r0, [sp, #4]
 8018006:	464b      	mov	r3, r9
 8018008:	a806      	add	r0, sp, #24
 801800a:	4642      	mov	r2, r8
 801800c:	4631      	mov	r1, r6
 801800e:	47b8      	blx	r7
 8018010:	4628      	mov	r0, r5
 8018012:	b008      	add	sp, #32
 8018014:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08018018 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8018018:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801801c:	2300      	movs	r3, #0
 801801e:	9300      	str	r3, [sp, #0]
 8018020:	4b3d      	ldr	r3, [pc, #244]	@ (8018118 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8018022:	781b      	ldrb	r3, [r3, #0]
 8018024:	2b00      	cmp	r3, #0
 8018026:	d137      	bne.n	8018098 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8018028:	4a3c      	ldr	r2, [pc, #240]	@ (801811c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801802a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801802e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8018032:	2b00      	cmp	r3, #0
 8018034:	d132      	bne.n	801809c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8018036:	4b3a      	ldr	r3, [pc, #232]	@ (8018120 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8018038:	f9b3 3000 	ldrsh.w	r3, [r3]
 801803c:	6808      	ldr	r0, [r1, #0]
 801803e:	6849      	ldr	r1, [r1, #4]
 8018040:	f8ad 3006 	strh.w	r3, [sp, #6]
 8018044:	ac02      	add	r4, sp, #8
 8018046:	ab02      	add	r3, sp, #8
 8018048:	c303      	stmia	r3!, {r0, r1}
 801804a:	4669      	mov	r1, sp
 801804c:	4620      	mov	r0, r4
 801804e:	f7f9 ff21 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018052:	4668      	mov	r0, sp
 8018054:	f7f9 fef6 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018058:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801805c:	f8bd 2000 	ldrh.w	r2, [sp]
 8018060:	4d30      	ldr	r5, [pc, #192]	@ (8018124 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8018062:	4413      	add	r3, r2
 8018064:	f8ad 3008 	strh.w	r3, [sp, #8]
 8018068:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801806c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8018070:	6828      	ldr	r0, [r5, #0]
 8018072:	4413      	add	r3, r2
 8018074:	f8ad 300a 	strh.w	r3, [sp, #10]
 8018078:	6803      	ldr	r3, [r0, #0]
 801807a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801807c:	4798      	blx	r3
 801807e:	f010 0f01 	tst.w	r0, #1
 8018082:	462f      	mov	r7, r5
 8018084:	d00c      	beq.n	80180a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8018086:	6828      	ldr	r0, [r5, #0]
 8018088:	6803      	ldr	r3, [r0, #0]
 801808a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801808e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8018090:	4798      	blx	r3
 8018092:	b004      	add	sp, #16
 8018094:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018098:	4a21      	ldr	r2, [pc, #132]	@ (8018120 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801809a:	e7c6      	b.n	801802a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801809c:	4b1f      	ldr	r3, [pc, #124]	@ (801811c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801809e:	e7cb      	b.n	8018038 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 80180a0:	6838      	ldr	r0, [r7, #0]
 80180a2:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80180a6:	6803      	ldr	r3, [r0, #0]
 80180a8:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80180ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80180ae:	4798      	blx	r3
 80180b0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80180b4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80180b8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80180bc:	fb16 3602 	smlabb	r6, r6, r2, r3
 80180c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80180c4:	6838      	ldr	r0, [r7, #0]
 80180c6:	6803      	ldr	r3, [r0, #0]
 80180c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80180ca:	4798      	blx	r3
 80180cc:	4a13      	ldr	r2, [pc, #76]	@ (801811c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80180ce:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80180d2:	8813      	ldrh	r3, [r2, #0]
 80180d4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80180d8:	fb03 1404 	mla	r4, r3, r4, r1
 80180dc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80180e0:	435d      	muls	r5, r3
 80180e2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80180e6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80180ea:	4691      	mov	r9, r2
 80180ec:	6838      	ldr	r0, [r7, #0]
 80180ee:	42ac      	cmp	r4, r5
 80180f0:	6803      	ldr	r3, [r0, #0]
 80180f2:	d20e      	bcs.n	8018112 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80180f4:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 80180f8:	4632      	mov	r2, r6
 80180fa:	4643      	mov	r3, r8
 80180fc:	4621      	mov	r1, r4
 80180fe:	47d0      	blx	sl
 8018100:	f8b9 3000 	ldrh.w	r3, [r9]
 8018104:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018108:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801810c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8018110:	e7ec      	b.n	80180ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8018112:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018114:	4798      	blx	r3
 8018116:	e7bc      	b.n	8018092 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8018118:	20002f2c 	.word	0x20002f2c
 801811c:	20002f2e 	.word	0x20002f2e
 8018120:	20002f30 	.word	0x20002f30
 8018124:	20002f34 	.word	0x20002f34

08018128 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8018128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801812c:	b08b      	sub	sp, #44	@ 0x2c
 801812e:	460f      	mov	r7, r1
 8018130:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8018134:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8018138:	4616      	mov	r6, r2
 801813a:	f1bb 0f00 	cmp.w	fp, #0
 801813e:	d04a      	beq.n	80181d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8018140:	6810      	ldr	r0, [r2, #0]
 8018142:	6851      	ldr	r1, [r2, #4]
 8018144:	ad06      	add	r5, sp, #24
 8018146:	c503      	stmia	r5!, {r0, r1}
 8018148:	6818      	ldr	r0, [r3, #0]
 801814a:	6859      	ldr	r1, [r3, #4]
 801814c:	ad08      	add	r5, sp, #32
 801814e:	c503      	stmia	r5!, {r0, r1}
 8018150:	a806      	add	r0, sp, #24
 8018152:	f7f9 fe77 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018156:	4631      	mov	r1, r6
 8018158:	a808      	add	r0, sp, #32
 801815a:	f7f9 fe9b 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801815e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8018162:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8018166:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801816a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801816e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8018172:	fb16 2103 	smlabb	r1, r6, r3, r2
 8018176:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801817a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801817e:	4f5f      	ldr	r7, [pc, #380]	@ (80182fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8018180:	440a      	add	r2, r1
 8018182:	f8ad 2020 	strh.w	r2, [sp, #32]
 8018186:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801818a:	6838      	ldr	r0, [r7, #0]
 801818c:	4413      	add	r3, r2
 801818e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8018192:	6803      	ldr	r3, [r0, #0]
 8018194:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018196:	4798      	blx	r3
 8018198:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801819c:	46b9      	mov	r9, r7
 801819e:	d11d      	bne.n	80181dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 80181a0:	b9fc      	cbnz	r4, 80181e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80181a2:	f010 0f01 	tst.w	r0, #1
 80181a6:	d01c      	beq.n	80181e2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80181a8:	f8d9 0000 	ldr.w	r0, [r9]
 80181ac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80181b0:	6801      	ldr	r1, [r0, #0]
 80181b2:	f8cd b00c 	str.w	fp, [sp, #12]
 80181b6:	2700      	movs	r7, #0
 80181b8:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80181bc:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80181c0:	9402      	str	r4, [sp, #8]
 80181c2:	b2ad      	uxth	r5, r5
 80181c4:	fa1f f488 	uxth.w	r4, r8
 80181c8:	9501      	str	r5, [sp, #4]
 80181ca:	9400      	str	r4, [sp, #0]
 80181cc:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 80181ce:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80181d2:	4631      	mov	r1, r6
 80181d4:	47a0      	blx	r4
 80181d6:	b00b      	add	sp, #44	@ 0x2c
 80181d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181dc:	f010 0f04 	tst.w	r0, #4
 80181e0:	e7e1      	b.n	80181a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80181e2:	f8d9 0000 	ldr.w	r0, [r9]
 80181e6:	6803      	ldr	r3, [r0, #0]
 80181e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80181ea:	4798      	blx	r3
 80181ec:	4b44      	ldr	r3, [pc, #272]	@ (8018300 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80181ee:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80181f2:	881a      	ldrh	r2, [r3, #0]
 80181f4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80181f8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80181fc:	fb02 1404 	mla	r4, r2, r4, r1
 8018200:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8018204:	469a      	mov	sl, r3
 8018206:	fb05 f502 	mul.w	r5, r5, r2
 801820a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801820e:	d059      	beq.n	80182c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8018210:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8018214:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8018218:	fa1f f28b 	uxth.w	r2, fp
 801821c:	fa1f f989 	uxth.w	r9, r9
 8018220:	469e      	mov	lr, r3
 8018222:	42ac      	cmp	r4, r5
 8018224:	d264      	bcs.n	80182f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8018226:	eb04 0a07 	add.w	sl, r4, r7
 801822a:	4554      	cmp	r4, sl
 801822c:	d23d      	bcs.n	80182aa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801822e:	8821      	ldrh	r1, [r4, #0]
 8018230:	f836 3b02 	ldrh.w	r3, [r6], #2
 8018234:	1208      	asrs	r0, r1, #8
 8018236:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801823a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801823e:	fb10 f009 	smulbb	r0, r0, r9
 8018242:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8018246:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801824a:	00c9      	lsls	r1, r1, #3
 801824c:	fb0c 0c02 	mla	ip, ip, r2, r0
 8018250:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8018254:	10d8      	asrs	r0, r3, #3
 8018256:	b2c9      	uxtb	r1, r1
 8018258:	00db      	lsls	r3, r3, #3
 801825a:	fa1f fc8c 	uxth.w	ip, ip
 801825e:	fb1b fb09 	smulbb	fp, fp, r9
 8018262:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8018266:	b2db      	uxtb	r3, r3
 8018268:	fb11 f109 	smulbb	r1, r1, r9
 801826c:	fb00 b002 	mla	r0, r0, r2, fp
 8018270:	fb03 1302 	mla	r3, r3, r2, r1
 8018274:	f10c 0b01 	add.w	fp, ip, #1
 8018278:	b29b      	uxth	r3, r3
 801827a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801827e:	b280      	uxth	r0, r0
 8018280:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8018284:	f103 0c01 	add.w	ip, r3, #1
 8018288:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801828c:	1c43      	adds	r3, r0, #1
 801828e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018292:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018296:	0940      	lsrs	r0, r0, #5
 8018298:	ea4c 0c0b 	orr.w	ip, ip, fp
 801829c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80182a0:	ea4c 0c00 	orr.w	ip, ip, r0
 80182a4:	f824 cb02 	strh.w	ip, [r4], #2
 80182a8:	e7bf      	b.n	801822a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80182aa:	f8be 3000 	ldrh.w	r3, [lr]
 80182ae:	eba3 0308 	sub.w	r3, r3, r8
 80182b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80182b6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80182ba:	eba3 0308 	sub.w	r3, r3, r8
 80182be:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80182c2:	e7ae      	b.n	8018222 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80182c4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80182c8:	f8d9 0000 	ldr.w	r0, [r9]
 80182cc:	42ac      	cmp	r4, r5
 80182ce:	6803      	ldr	r3, [r0, #0]
 80182d0:	d20e      	bcs.n	80182f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80182d2:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 80182d6:	4632      	mov	r2, r6
 80182d8:	463b      	mov	r3, r7
 80182da:	4621      	mov	r1, r4
 80182dc:	47c0      	blx	r8
 80182de:	f8ba 3000 	ldrh.w	r3, [sl]
 80182e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80182e6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80182ea:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80182ee:	e7eb      	b.n	80182c8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80182f0:	4b02      	ldr	r3, [pc, #8]	@ (80182fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80182f2:	6818      	ldr	r0, [r3, #0]
 80182f4:	6803      	ldr	r3, [r0, #0]
 80182f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80182f8:	4798      	blx	r3
 80182fa:	e76c      	b.n	80181d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80182fc:	20002f34 	.word	0x20002f34
 8018300:	20002f2e 	.word	0x20002f2e

08018304 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8018304:	b510      	push	{r4, lr}
 8018306:	2104      	movs	r1, #4
 8018308:	4604      	mov	r4, r0
 801830a:	f00b fc82 	bl	8023c12 <_ZdlPvj>
 801830e:	4620      	mov	r0, r4
 8018310:	bd10      	pop	{r4, pc}

08018312 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8018312:	b510      	push	{r4, lr}
 8018314:	2104      	movs	r1, #4
 8018316:	4604      	mov	r4, r0
 8018318:	f00b fc7b 	bl	8023c12 <_ZdlPvj>
 801831c:	4620      	mov	r0, r4
 801831e:	bd10      	pop	{r4, pc}

08018320 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8018320:	b510      	push	{r4, lr}
 8018322:	f640 0144 	movw	r1, #2116	@ 0x844
 8018326:	4604      	mov	r4, r0
 8018328:	f00b fc73 	bl	8023c12 <_ZdlPvj>
 801832c:	4620      	mov	r0, r4
 801832e:	bd10      	pop	{r4, pc}

08018330 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8018330:	b510      	push	{r4, lr}
 8018332:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8018336:	4604      	mov	r4, r0
 8018338:	f00b fc6b 	bl	8023c12 <_ZdlPvj>
 801833c:	4620      	mov	r0, r4
 801833e:	bd10      	pop	{r4, pc}

08018340 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018340:	b510      	push	{r4, lr}
 8018342:	2104      	movs	r1, #4
 8018344:	4604      	mov	r4, r0
 8018346:	f00b fc64 	bl	8023c12 <_ZdlPvj>
 801834a:	4620      	mov	r0, r4
 801834c:	bd10      	pop	{r4, pc}

0801834e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801834e:	b510      	push	{r4, lr}
 8018350:	2104      	movs	r1, #4
 8018352:	4604      	mov	r4, r0
 8018354:	f00b fc5d 	bl	8023c12 <_ZdlPvj>
 8018358:	4620      	mov	r0, r4
 801835a:	bd10      	pop	{r4, pc}

0801835c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801835c:	b510      	push	{r4, lr}
 801835e:	2104      	movs	r1, #4
 8018360:	4604      	mov	r4, r0
 8018362:	f00b fc56 	bl	8023c12 <_ZdlPvj>
 8018366:	4620      	mov	r0, r4
 8018368:	bd10      	pop	{r4, pc}

0801836a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801836a:	b510      	push	{r4, lr}
 801836c:	2104      	movs	r1, #4
 801836e:	4604      	mov	r4, r0
 8018370:	f00b fc4f 	bl	8023c12 <_ZdlPvj>
 8018374:	4620      	mov	r0, r4
 8018376:	bd10      	pop	{r4, pc}

08018378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8018378:	b510      	push	{r4, lr}
 801837a:	2104      	movs	r1, #4
 801837c:	4604      	mov	r4, r0
 801837e:	f00b fc48 	bl	8023c12 <_ZdlPvj>
 8018382:	4620      	mov	r0, r4
 8018384:	bd10      	pop	{r4, pc}

08018386 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8018386:	b510      	push	{r4, lr}
 8018388:	2104      	movs	r1, #4
 801838a:	4604      	mov	r4, r0
 801838c:	f00b fc41 	bl	8023c12 <_ZdlPvj>
 8018390:	4620      	mov	r0, r4
 8018392:	bd10      	pop	{r4, pc}

08018394 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018394:	b510      	push	{r4, lr}
 8018396:	2104      	movs	r1, #4
 8018398:	4604      	mov	r4, r0
 801839a:	f00b fc3a 	bl	8023c12 <_ZdlPvj>
 801839e:	4620      	mov	r0, r4
 80183a0:	bd10      	pop	{r4, pc}

080183a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80183a2:	b510      	push	{r4, lr}
 80183a4:	2104      	movs	r1, #4
 80183a6:	4604      	mov	r4, r0
 80183a8:	f00b fc33 	bl	8023c12 <_ZdlPvj>
 80183ac:	4620      	mov	r0, r4
 80183ae:	bd10      	pop	{r4, pc}

080183b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80183b0:	b510      	push	{r4, lr}
 80183b2:	2104      	movs	r1, #4
 80183b4:	4604      	mov	r4, r0
 80183b6:	f00b fc2c 	bl	8023c12 <_ZdlPvj>
 80183ba:	4620      	mov	r0, r4
 80183bc:	bd10      	pop	{r4, pc}

080183be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80183be:	b510      	push	{r4, lr}
 80183c0:	2104      	movs	r1, #4
 80183c2:	4604      	mov	r4, r0
 80183c4:	f00b fc25 	bl	8023c12 <_ZdlPvj>
 80183c8:	4620      	mov	r0, r4
 80183ca:	bd10      	pop	{r4, pc}

080183cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80183cc:	b510      	push	{r4, lr}
 80183ce:	2104      	movs	r1, #4
 80183d0:	4604      	mov	r4, r0
 80183d2:	f00b fc1e 	bl	8023c12 <_ZdlPvj>
 80183d6:	4620      	mov	r0, r4
 80183d8:	bd10      	pop	{r4, pc}

080183da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80183da:	b510      	push	{r4, lr}
 80183dc:	2104      	movs	r1, #4
 80183de:	4604      	mov	r4, r0
 80183e0:	f00b fc17 	bl	8023c12 <_ZdlPvj>
 80183e4:	4620      	mov	r0, r4
 80183e6:	bd10      	pop	{r4, pc}

080183e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80183e8:	b510      	push	{r4, lr}
 80183ea:	2104      	movs	r1, #4
 80183ec:	4604      	mov	r4, r0
 80183ee:	f00b fc10 	bl	8023c12 <_ZdlPvj>
 80183f2:	4620      	mov	r0, r4
 80183f4:	bd10      	pop	{r4, pc}

080183f6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80183f6:	b510      	push	{r4, lr}
 80183f8:	2104      	movs	r1, #4
 80183fa:	4604      	mov	r4, r0
 80183fc:	f00b fc09 	bl	8023c12 <_ZdlPvj>
 8018400:	4620      	mov	r0, r4
 8018402:	bd10      	pop	{r4, pc}

08018404 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018404:	b510      	push	{r4, lr}
 8018406:	2104      	movs	r1, #4
 8018408:	4604      	mov	r4, r0
 801840a:	f00b fc02 	bl	8023c12 <_ZdlPvj>
 801840e:	4620      	mov	r0, r4
 8018410:	bd10      	pop	{r4, pc}

08018412 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018412:	b510      	push	{r4, lr}
 8018414:	2104      	movs	r1, #4
 8018416:	4604      	mov	r4, r0
 8018418:	f00b fbfb 	bl	8023c12 <_ZdlPvj>
 801841c:	4620      	mov	r0, r4
 801841e:	bd10      	pop	{r4, pc}

08018420 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8018420:	b510      	push	{r4, lr}
 8018422:	2104      	movs	r1, #4
 8018424:	4604      	mov	r4, r0
 8018426:	f00b fbf4 	bl	8023c12 <_ZdlPvj>
 801842a:	4620      	mov	r0, r4
 801842c:	bd10      	pop	{r4, pc}

0801842e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801842e:	b510      	push	{r4, lr}
 8018430:	2104      	movs	r1, #4
 8018432:	4604      	mov	r4, r0
 8018434:	f00b fbed 	bl	8023c12 <_ZdlPvj>
 8018438:	4620      	mov	r0, r4
 801843a:	bd10      	pop	{r4, pc}

0801843c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801843c:	b510      	push	{r4, lr}
 801843e:	2104      	movs	r1, #4
 8018440:	4604      	mov	r4, r0
 8018442:	f00b fbe6 	bl	8023c12 <_ZdlPvj>
 8018446:	4620      	mov	r0, r4
 8018448:	bd10      	pop	{r4, pc}

0801844a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801844a:	b510      	push	{r4, lr}
 801844c:	2104      	movs	r1, #4
 801844e:	4604      	mov	r4, r0
 8018450:	f00b fbdf 	bl	8023c12 <_ZdlPvj>
 8018454:	4620      	mov	r0, r4
 8018456:	bd10      	pop	{r4, pc}

08018458 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8018458:	b510      	push	{r4, lr}
 801845a:	2104      	movs	r1, #4
 801845c:	4604      	mov	r4, r0
 801845e:	f00b fbd8 	bl	8023c12 <_ZdlPvj>
 8018462:	4620      	mov	r0, r4
 8018464:	bd10      	pop	{r4, pc}

08018466 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8018466:	b510      	push	{r4, lr}
 8018468:	2104      	movs	r1, #4
 801846a:	4604      	mov	r4, r0
 801846c:	f00b fbd1 	bl	8023c12 <_ZdlPvj>
 8018470:	4620      	mov	r0, r4
 8018472:	bd10      	pop	{r4, pc}

08018474 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8018474:	b510      	push	{r4, lr}
 8018476:	2104      	movs	r1, #4
 8018478:	4604      	mov	r4, r0
 801847a:	f00b fbca 	bl	8023c12 <_ZdlPvj>
 801847e:	4620      	mov	r0, r4
 8018480:	bd10      	pop	{r4, pc}

08018482 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8018482:	b510      	push	{r4, lr}
 8018484:	2104      	movs	r1, #4
 8018486:	4604      	mov	r4, r0
 8018488:	f00b fbc3 	bl	8023c12 <_ZdlPvj>
 801848c:	4620      	mov	r0, r4
 801848e:	bd10      	pop	{r4, pc}

08018490 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8018490:	b510      	push	{r4, lr}
 8018492:	2104      	movs	r1, #4
 8018494:	4604      	mov	r4, r0
 8018496:	f00b fbbc 	bl	8023c12 <_ZdlPvj>
 801849a:	4620      	mov	r0, r4
 801849c:	bd10      	pop	{r4, pc}

0801849e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801849e:	b510      	push	{r4, lr}
 80184a0:	2104      	movs	r1, #4
 80184a2:	4604      	mov	r4, r0
 80184a4:	f00b fbb5 	bl	8023c12 <_ZdlPvj>
 80184a8:	4620      	mov	r0, r4
 80184aa:	bd10      	pop	{r4, pc}

080184ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80184ac:	b510      	push	{r4, lr}
 80184ae:	2104      	movs	r1, #4
 80184b0:	4604      	mov	r4, r0
 80184b2:	f00b fbae 	bl	8023c12 <_ZdlPvj>
 80184b6:	4620      	mov	r0, r4
 80184b8:	bd10      	pop	{r4, pc}

080184ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80184ba:	b510      	push	{r4, lr}
 80184bc:	2104      	movs	r1, #4
 80184be:	4604      	mov	r4, r0
 80184c0:	f00b fba7 	bl	8023c12 <_ZdlPvj>
 80184c4:	4620      	mov	r0, r4
 80184c6:	bd10      	pop	{r4, pc}

080184c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80184c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80184cc:	b08f      	sub	sp, #60	@ 0x3c
 80184ce:	4616      	mov	r6, r2
 80184d0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80184d4:	9205      	str	r2, [sp, #20]
 80184d6:	4682      	mov	sl, r0
 80184d8:	460d      	mov	r5, r1
 80184da:	2a00      	cmp	r2, #0
 80184dc:	f000 82b7 	beq.w	8018a4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80184e0:	6830      	ldr	r0, [r6, #0]
 80184e2:	6871      	ldr	r1, [r6, #4]
 80184e4:	ac0a      	add	r4, sp, #40	@ 0x28
 80184e6:	c403      	stmia	r4!, {r0, r1}
 80184e8:	6818      	ldr	r0, [r3, #0]
 80184ea:	6859      	ldr	r1, [r3, #4]
 80184ec:	ac0c      	add	r4, sp, #48	@ 0x30
 80184ee:	c403      	stmia	r4!, {r0, r1}
 80184f0:	a80a      	add	r0, sp, #40	@ 0x28
 80184f2:	f7f9 fca7 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80184f6:	4631      	mov	r1, r6
 80184f8:	a80c      	add	r0, sp, #48	@ 0x30
 80184fa:	f7f9 fccb 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80184fe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8018502:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8018506:	bfd7      	itett	le
 8018508:	b293      	uxthle	r3, r2
 801850a:	2301      	movgt	r3, #1
 801850c:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018510:	fb91 f3f3 	sdivle	r3, r1, r3
 8018514:	9300      	str	r3, [sp, #0]
 8018516:	f105 0308 	add.w	r3, r5, #8
 801851a:	9900      	ldr	r1, [sp, #0]
 801851c:	9306      	str	r3, [sp, #24]
 801851e:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8018522:	440b      	add	r3, r1
 8018524:	3b01      	subs	r3, #1
 8018526:	fb93 f3f1 	sdiv	r3, r3, r1
 801852a:	9906      	ldr	r1, [sp, #24]
 801852c:	3b01      	subs	r3, #1
 801852e:	b29b      	uxth	r3, r3
 8018530:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018534:	9307      	str	r3, [sp, #28]
 8018536:	9900      	ldr	r1, [sp, #0]
 8018538:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801853c:	fb93 f0f1 	sdiv	r0, r3, r1
 8018540:	b284      	uxth	r4, r0
 8018542:	9402      	str	r4, [sp, #8]
 8018544:	9d02      	ldr	r5, [sp, #8]
 8018546:	9c00      	ldr	r4, [sp, #0]
 8018548:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801854c:	fb05 3414 	mls	r4, r5, r4, r3
 8018550:	fb14 f402 	smulbb	r4, r4, r2
 8018554:	440c      	add	r4, r1
 8018556:	b2a4      	uxth	r4, r4
 8018558:	2d00      	cmp	r5, #0
 801855a:	d06c      	beq.n	8018636 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801855c:	1e6a      	subs	r2, r5, #1
 801855e:	9806      	ldr	r0, [sp, #24]
 8018560:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8018564:	9a07      	ldr	r2, [sp, #28]
 8018566:	ba36      	rev	r6, r6
 8018568:	4416      	add	r6, r2
 801856a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801856e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 8018572:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 80188a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8018576:	4411      	add	r1, r2
 8018578:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801857c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8018580:	4413      	add	r3, r2
 8018582:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8018586:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801858a:	9301      	str	r3, [sp, #4]
 801858c:	4bc4      	ldr	r3, [pc, #784]	@ (80188a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801858e:	6818      	ldr	r0, [r3, #0]
 8018590:	6803      	ldr	r3, [r0, #0]
 8018592:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018594:	4798      	blx	r3
 8018596:	4bc3      	ldr	r3, [pc, #780]	@ (80188a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8018598:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801859c:	881b      	ldrh	r3, [r3, #0]
 801859e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 80185a2:	fb03 2808 	mla	r8, r3, r8, r2
 80185a6:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80185aa:	436b      	muls	r3, r5
 80185ac:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80185b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80185b2:	2500      	movs	r5, #0
 80185b4:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80185b8:	fb94 f3f3 	sdiv	r3, r4, r3
 80185bc:	9304      	str	r3, [sp, #16]
 80185be:	f10a 0304 	add.w	r3, sl, #4
 80185c2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80185c6:	4629      	mov	r1, r5
 80185c8:	4618      	mov	r0, r3
 80185ca:	9308      	str	r3, [sp, #32]
 80185cc:	f00b fdd7 	bl	802417e <memset>
 80185d0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80185d2:	4543      	cmp	r3, r8
 80185d4:	f240 8236 	bls.w	8018a44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80185d8:	2203      	movs	r2, #3
 80185da:	2107      	movs	r1, #7
 80185dc:	200b      	movs	r0, #11
 80185de:	2c00      	cmp	r4, #0
 80185e0:	f000 8131 	beq.w	8018846 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80185e4:	7833      	ldrb	r3, [r6, #0]
 80185e6:	b2db      	uxtb	r3, r3
 80185e8:	2bfe      	cmp	r3, #254	@ 0xfe
 80185ea:	d126      	bne.n	801863a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80185ec:	f896 e001 	ldrb.w	lr, [r6, #1]
 80185f0:	f896 c002 	ldrb.w	ip, [r6, #2]
 80185f4:	f896 b003 	ldrb.w	fp, [r6, #3]
 80185f8:	fa5f fe8e 	uxtb.w	lr, lr
 80185fc:	fa5f fc8c 	uxtb.w	ip, ip
 8018600:	f36e 0507 	bfi	r5, lr, #0, #8
 8018604:	f36c 250f 	bfi	r5, ip, #8, #8
 8018608:	fa5f fb8b 	uxtb.w	fp, fp
 801860c:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8018610:	f36b 4517 	bfi	r5, fp, #16, #8
 8018614:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8018618:	0e2b      	lsrs	r3, r5, #24
 801861a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801861e:	fb10 c303 	smlabb	r3, r0, r3, ip
 8018622:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018626:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801862a:	3c01      	subs	r4, #1
 801862c:	1d37      	adds	r7, r6, #4
 801862e:	b2a4      	uxth	r4, r4
 8018630:	605d      	str	r5, [r3, #4]
 8018632:	463e      	mov	r6, r7
 8018634:	e7d3      	b.n	80185de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8018636:	9e07      	ldr	r6, [sp, #28]
 8018638:	e797      	b.n	801856a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801863a:	2bff      	cmp	r3, #255	@ 0xff
 801863c:	d127      	bne.n	801868e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801863e:	f896 c001 	ldrb.w	ip, [r6, #1]
 8018642:	78b3      	ldrb	r3, [r6, #2]
 8018644:	f896 e003 	ldrb.w	lr, [r6, #3]
 8018648:	f896 b004 	ldrb.w	fp, [r6, #4]
 801864c:	fa5f fc8c 	uxtb.w	ip, ip
 8018650:	b2db      	uxtb	r3, r3
 8018652:	f36c 0507 	bfi	r5, ip, #0, #8
 8018656:	f363 250f 	bfi	r5, r3, #8, #8
 801865a:	fa5f fe8e 	uxtb.w	lr, lr
 801865e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8018662:	fb12 330e 	smlabb	r3, r2, lr, r3
 8018666:	fa5f fb8b 	uxtb.w	fp, fp
 801866a:	f36e 4517 	bfi	r5, lr, #16, #8
 801866e:	fb11 330c 	smlabb	r3, r1, ip, r3
 8018672:	f36b 651f 	bfi	r5, fp, #24, #8
 8018676:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801867a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801867e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8018682:	3c01      	subs	r4, #1
 8018684:	1d77      	adds	r7, r6, #5
 8018686:	b2a4      	uxth	r4, r4
 8018688:	f8cb 5004 	str.w	r5, [fp, #4]
 801868c:	e7d1      	b.n	8018632 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801868e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 8018692:	f106 0701 	add.w	r7, r6, #1
 8018696:	d107      	bne.n	80186a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8018698:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801869c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80186a0:	685d      	ldr	r5, [r3, #4]
 80186a2:	3c01      	subs	r4, #1
 80186a4:	b2a4      	uxth	r4, r4
 80186a6:	e7c4      	b.n	8018632 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80186a8:	f1bc 0f01 	cmp.w	ip, #1
 80186ac:	d12c      	bne.n	8018708 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80186ae:	f003 0e03 	and.w	lr, r3, #3
 80186b2:	f1ae 0e02 	sub.w	lr, lr, #2
 80186b6:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 80186ba:	fa5f fe8e 	uxtb.w	lr, lr
 80186be:	f003 0c0c 	and.w	ip, r3, #12
 80186c2:	f36e 0507 	bfi	r5, lr, #0, #8
 80186c6:	f1ac 0c08 	sub.w	ip, ip, #8
 80186ca:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80186ce:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80186d2:	f36c 250f 	bfi	r5, ip, #8, #8
 80186d6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80186da:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80186de:	3b02      	subs	r3, #2
 80186e0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80186e4:	b2db      	uxtb	r3, r3
 80186e6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80186ea:	f363 4517 	bfi	r5, r3, #16, #8
 80186ee:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80186f2:	0e2e      	lsrs	r6, r5, #24
 80186f4:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80186f8:	fb10 c606 	smlabb	r6, r0, r6, ip
 80186fc:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 8018700:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8018704:	6075      	str	r5, [r6, #4]
 8018706:	e7cc      	b.n	80186a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8018708:	f1bc 0f02 	cmp.w	ip, #2
 801870c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018710:	d12a      	bne.n	8018768 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 8018712:	1cb7      	adds	r7, r6, #2
 8018714:	7876      	ldrb	r6, [r6, #1]
 8018716:	b2f6      	uxtb	r6, r6
 8018718:	f006 0c0f 	and.w	ip, r6, #15
 801871c:	3b20      	subs	r3, #32
 801871e:	f1ac 0c08 	sub.w	ip, ip, #8
 8018722:	449c      	add	ip, r3
 8018724:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8018728:	fa5f fc8c 	uxtb.w	ip, ip
 801872c:	f36c 0507 	bfi	r5, ip, #0, #8
 8018730:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8018734:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8018738:	fa5f fe8e 	uxtb.w	lr, lr
 801873c:	1136      	asrs	r6, r6, #4
 801873e:	f36e 250f 	bfi	r5, lr, #8, #8
 8018742:	3e08      	subs	r6, #8
 8018744:	4433      	add	r3, r6
 8018746:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801874a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801874e:	b2db      	uxtb	r3, r3
 8018750:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8018754:	f363 4517 	bfi	r5, r3, #16, #8
 8018758:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801875c:	0e2e      	lsrs	r6, r5, #24
 801875e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 8018762:	fb10 e606 	smlabb	r6, r0, r6, lr
 8018766:	e7c9      	b.n	80186fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8018768:	1c5e      	adds	r6, r3, #1
 801876a:	42a6      	cmp	r6, r4
 801876c:	dd4e      	ble.n	801880c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801876e:	1b36      	subs	r6, r6, r4
 8018770:	2e00      	cmp	r6, #0
 8018772:	dc4e      	bgt.n	8018812 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8018774:	f8dd b004 	ldr.w	fp, [sp, #4]
 8018778:	2400      	movs	r4, #0
 801877a:	f1bb 0f00 	cmp.w	fp, #0
 801877e:	f340 8122 	ble.w	80189c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 8018782:	1c7b      	adds	r3, r7, #1
 8018784:	9303      	str	r3, [sp, #12]
 8018786:	783b      	ldrb	r3, [r7, #0]
 8018788:	b2db      	uxtb	r3, r3
 801878a:	2bfe      	cmp	r3, #254	@ 0xfe
 801878c:	d160      	bne.n	8018850 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801878e:	7879      	ldrb	r1, [r7, #1]
 8018790:	78ba      	ldrb	r2, [r7, #2]
 8018792:	78f8      	ldrb	r0, [r7, #3]
 8018794:	b2c9      	uxtb	r1, r1
 8018796:	f361 0507 	bfi	r5, r1, #0, #8
 801879a:	b2d2      	uxtb	r2, r2
 801879c:	1d3b      	adds	r3, r7, #4
 801879e:	f362 250f 	bfi	r5, r2, #8, #8
 80187a2:	b2c0      	uxtb	r0, r0
 80187a4:	9303      	str	r3, [sp, #12]
 80187a6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80187aa:	2303      	movs	r3, #3
 80187ac:	fb13 2200 	smlabb	r2, r3, r0, r2
 80187b0:	f360 4517 	bfi	r5, r0, #16, #8
 80187b4:	2307      	movs	r3, #7
 80187b6:	fb13 2101 	smlabb	r1, r3, r1, r2
 80187ba:	0e2e      	lsrs	r6, r5, #24
 80187bc:	230b      	movs	r3, #11
 80187be:	fb13 1306 	smlabb	r3, r3, r6, r1
 80187c2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80187c6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80187ca:	605d      	str	r5, [r3, #4]
 80187cc:	2601      	movs	r6, #1
 80187ce:	4637      	mov	r7, r6
 80187d0:	0e2b      	lsrs	r3, r5, #24
 80187d2:	ebab 0b07 	sub.w	fp, fp, r7
 80187d6:	eba6 0607 	sub.w	r6, r6, r7
 80187da:	f040 80d3 	bne.w	8018984 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80187de:	b18c      	cbz	r4, 8018804 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80187e0:	4648      	mov	r0, r9
 80187e2:	00a1      	lsls	r1, r4, #2
 80187e4:	f7f5 fa19 	bl	800dc1a <_ZN8touchgfx5paint9flushLineEPmi>
 80187e8:	9b05      	ldr	r3, [sp, #20]
 80187ea:	4622      	mov	r2, r4
 80187ec:	4649      	mov	r1, r9
 80187ee:	4640      	mov	r0, r8
 80187f0:	f7f5 fac6 	bl	800dd80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80187f4:	4b2c      	ldr	r3, [pc, #176]	@ (80188a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 80187f6:	4a2d      	ldr	r2, [pc, #180]	@ (80188ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 80187f8:	4599      	cmp	r9, r3
 80187fa:	bf08      	it	eq
 80187fc:	4613      	moveq	r3, r2
 80187fe:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8018802:	4699      	mov	r9, r3
 8018804:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8018808:	2400      	movs	r4, #0
 801880a:	e0da      	b.n	80189c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801880c:	1ba6      	subs	r6, r4, r6
 801880e:	b2b4      	uxth	r4, r6
 8018810:	e70f      	b.n	8018632 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 8018812:	9b01      	ldr	r3, [sp, #4]
 8018814:	9a01      	ldr	r2, [sp, #4]
 8018816:	42b3      	cmp	r3, r6
 8018818:	bfa8      	it	ge
 801881a:	4633      	movge	r3, r6
 801881c:	0e2c      	lsrs	r4, r5, #24
 801881e:	eba2 0b03 	sub.w	fp, r2, r3
 8018822:	eba6 0603 	sub.w	r6, r6, r3
 8018826:	d00b      	beq.n	8018840 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8018828:	f1a9 0104 	sub.w	r1, r9, #4
 801882c:	461a      	mov	r2, r3
 801882e:	2a00      	cmp	r2, #0
 8018830:	dc02      	bgt.n	8018838 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 8018832:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018836:	e7a0      	b.n	801877a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018838:	f841 5f04 	str.w	r5, [r1, #4]!
 801883c:	3a01      	subs	r2, #1
 801883e:	e7f6      	b.n	801882e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 8018840:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8018844:	e799      	b.n	801877a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018846:	4637      	mov	r7, r6
 8018848:	f8dd b004 	ldr.w	fp, [sp, #4]
 801884c:	4626      	mov	r6, r4
 801884e:	e794      	b.n	801877a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8018850:	2bff      	cmp	r3, #255	@ 0xff
 8018852:	d11d      	bne.n	8018890 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8018854:	7878      	ldrb	r0, [r7, #1]
 8018856:	78ba      	ldrb	r2, [r7, #2]
 8018858:	78fe      	ldrb	r6, [r7, #3]
 801885a:	1d7b      	adds	r3, r7, #5
 801885c:	b2c0      	uxtb	r0, r0
 801885e:	9303      	str	r3, [sp, #12]
 8018860:	793b      	ldrb	r3, [r7, #4]
 8018862:	f360 0507 	bfi	r5, r0, #0, #8
 8018866:	b2d2      	uxtb	r2, r2
 8018868:	b2d9      	uxtb	r1, r3
 801886a:	f362 250f 	bfi	r5, r2, #8, #8
 801886e:	b2f6      	uxtb	r6, r6
 8018870:	2303      	movs	r3, #3
 8018872:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8018876:	fb13 2206 	smlabb	r2, r3, r6, r2
 801887a:	2307      	movs	r3, #7
 801887c:	fb13 2000 	smlabb	r0, r3, r0, r2
 8018880:	f366 4517 	bfi	r5, r6, #16, #8
 8018884:	230b      	movs	r3, #11
 8018886:	f361 651f 	bfi	r5, r1, #24, #8
 801888a:	fb13 0301 	smlabb	r3, r3, r1, r0
 801888e:	e798      	b.n	80187c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 8018890:	119e      	asrs	r6, r3, #6
 8018892:	d10d      	bne.n	80188b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8018894:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018898:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801889c:	685d      	ldr	r5, [r3, #4]
 801889e:	e795      	b.n	80187cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 80188a0:	20002f34 	.word	0x20002f34
 80188a4:	20002f2e 	.word	0x20002f2e
 80188a8:	20000100 	.word	0x20000100
 80188ac:	20000200 	.word	0x20000200
 80188b0:	2e01      	cmp	r6, #1
 80188b2:	ea4f 6115 	mov.w	r1, r5, lsr #24
 80188b6:	d12b      	bne.n	8018910 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 80188b8:	f003 0003 	and.w	r0, r3, #3
 80188bc:	3802      	subs	r0, #2
 80188be:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 80188c2:	b2c0      	uxtb	r0, r0
 80188c4:	f003 020c 	and.w	r2, r3, #12
 80188c8:	f360 0507 	bfi	r5, r0, #0, #8
 80188cc:	3a08      	subs	r2, #8
 80188ce:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80188d2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80188d6:	f362 250f 	bfi	r5, r2, #8, #8
 80188da:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80188de:	1e9f      	subs	r7, r3, #2
 80188e0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80188e4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80188e8:	b2db      	uxtb	r3, r3
 80188ea:	2703      	movs	r7, #3
 80188ec:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80188f0:	fb17 2203 	smlabb	r2, r7, r3, r2
 80188f4:	2707      	movs	r7, #7
 80188f6:	f363 4517 	bfi	r5, r3, #16, #8
 80188fa:	fb17 2000 	smlabb	r0, r7, r0, r2
 80188fe:	230b      	movs	r3, #11
 8018900:	fb13 0101 	smlabb	r1, r3, r1, r0
 8018904:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8018908:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801890c:	604d      	str	r5, [r1, #4]
 801890e:	e75e      	b.n	80187ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 8018910:	2e02      	cmp	r6, #2
 8018912:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8018916:	d12f      	bne.n	8018978 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8018918:	7878      	ldrb	r0, [r7, #1]
 801891a:	1cba      	adds	r2, r7, #2
 801891c:	b2c0      	uxtb	r0, r0
 801891e:	9203      	str	r2, [sp, #12]
 8018920:	f000 020f 	and.w	r2, r0, #15
 8018924:	3b20      	subs	r3, #32
 8018926:	3a08      	subs	r2, #8
 8018928:	441a      	add	r2, r3
 801892a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801892e:	b2d2      	uxtb	r2, r2
 8018930:	f362 0507 	bfi	r5, r2, #0, #8
 8018934:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8018938:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801893c:	b2f6      	uxtb	r6, r6
 801893e:	1100      	asrs	r0, r0, #4
 8018940:	f366 250f 	bfi	r5, r6, #8, #8
 8018944:	3808      	subs	r0, #8
 8018946:	4403      	add	r3, r0
 8018948:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801894c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8018950:	b2db      	uxtb	r3, r3
 8018952:	2003      	movs	r0, #3
 8018954:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8018958:	fb10 6603 	smlabb	r6, r0, r3, r6
 801895c:	2007      	movs	r0, #7
 801895e:	f363 4517 	bfi	r5, r3, #16, #8
 8018962:	fb10 6202 	smlabb	r2, r0, r2, r6
 8018966:	230b      	movs	r3, #11
 8018968:	fb13 2101 	smlabb	r1, r3, r1, r2
 801896c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8018970:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8018974:	604d      	str	r5, [r1, #4]
 8018976:	e729      	b.n	80187cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8018978:	1c5e      	adds	r6, r3, #1
 801897a:	45b3      	cmp	fp, r6
 801897c:	465f      	mov	r7, fp
 801897e:	bfa8      	it	ge
 8018980:	4637      	movge	r7, r6
 8018982:	e725      	b.n	80187d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8018984:	193b      	adds	r3, r7, r4
 8018986:	2b40      	cmp	r3, #64	@ 0x40
 8018988:	dd13      	ble.n	80189b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801898a:	4648      	mov	r0, r9
 801898c:	00a1      	lsls	r1, r4, #2
 801898e:	f7f5 f944 	bl	800dc1a <_ZN8touchgfx5paint9flushLineEPmi>
 8018992:	4649      	mov	r1, r9
 8018994:	9b05      	ldr	r3, [sp, #20]
 8018996:	4622      	mov	r2, r4
 8018998:	4640      	mov	r0, r8
 801899a:	f7f5 f9f1 	bl	800dd80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801899e:	4b2d      	ldr	r3, [pc, #180]	@ (8018a54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 80189a0:	4599      	cmp	r9, r3
 80189a2:	bf0c      	ite	eq
 80189a4:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 8018a60 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 80189a8:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 8018a54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 80189ac:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80189b0:	2400      	movs	r4, #0
 80189b2:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 80189b6:	463b      	mov	r3, r7
 80189b8:	3b01      	subs	r3, #1
 80189ba:	f842 5b04 	str.w	r5, [r2], #4
 80189be:	d1fb      	bne.n	80189b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80189c0:	443c      	add	r4, r7
 80189c2:	9f03      	ldr	r7, [sp, #12]
 80189c4:	e6d9      	b.n	801877a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80189c6:	b15c      	cbz	r4, 80189e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80189c8:	00a1      	lsls	r1, r4, #2
 80189ca:	4648      	mov	r0, r9
 80189cc:	f7f5 f925 	bl	800dc1a <_ZN8touchgfx5paint9flushLineEPmi>
 80189d0:	4640      	mov	r0, r8
 80189d2:	9b05      	ldr	r3, [sp, #20]
 80189d4:	4622      	mov	r2, r4
 80189d6:	4649      	mov	r1, r9
 80189d8:	f7f5 f9d2 	bl	800dd80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80189dc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80189e0:	4b1d      	ldr	r3, [pc, #116]	@ (8018a58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 80189e2:	9a01      	ldr	r2, [sp, #4]
 80189e4:	881b      	ldrh	r3, [r3, #0]
 80189e6:	1a9b      	subs	r3, r3, r2
 80189e8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80189ec:	9b04      	ldr	r3, [sp, #16]
 80189ee:	3301      	adds	r3, #1
 80189f0:	9304      	str	r3, [sp, #16]
 80189f2:	9a04      	ldr	r2, [sp, #16]
 80189f4:	9b00      	ldr	r3, [sp, #0]
 80189f6:	4293      	cmp	r3, r2
 80189f8:	d11d      	bne.n	8018a36 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 80189fa:	9b02      	ldr	r3, [sp, #8]
 80189fc:	9a02      	ldr	r2, [sp, #8]
 80189fe:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8018a02:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8018a06:	9808      	ldr	r0, [sp, #32]
 8018a08:	f103 0b01 	add.w	fp, r3, #1
 8018a0c:	9b06      	ldr	r3, [sp, #24]
 8018a0e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8018a12:	9b07      	ldr	r3, [sp, #28]
 8018a14:	2500      	movs	r5, #0
 8018a16:	ba3f      	rev	r7, r7
 8018a18:	1ba4      	subs	r4, r4, r6
 8018a1a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8018a1e:	4629      	mov	r1, r5
 8018a20:	441f      	add	r7, r3
 8018a22:	b2a4      	uxth	r4, r4
 8018a24:	f00b fbab 	bl	802417e <memset>
 8018a28:	f8cd b008 	str.w	fp, [sp, #8]
 8018a2c:	9504      	str	r5, [sp, #16]
 8018a2e:	f7f5 f8ed 	bl	800dc0c <_ZN8touchgfx5paint8tearDownEv>
 8018a32:	463e      	mov	r6, r7
 8018a34:	e5cc      	b.n	80185d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8018a36:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8018a3a:	9b01      	ldr	r3, [sp, #4]
 8018a3c:	1ae4      	subs	r4, r4, r3
 8018a3e:	1ba4      	subs	r4, r4, r6
 8018a40:	b2a4      	uxth	r4, r4
 8018a42:	e7f4      	b.n	8018a2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8018a44:	4b05      	ldr	r3, [pc, #20]	@ (8018a5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8018a46:	6818      	ldr	r0, [r3, #0]
 8018a48:	6803      	ldr	r3, [r0, #0]
 8018a4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018a4c:	4798      	blx	r3
 8018a4e:	b00f      	add	sp, #60	@ 0x3c
 8018a50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a54:	20000100 	.word	0x20000100
 8018a58:	20002f2e 	.word	0x20002f2e
 8018a5c:	20002f34 	.word	0x20002f34
 8018a60:	20000200 	.word	0x20000200

08018a64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a68:	b08f      	sub	sp, #60	@ 0x3c
 8018a6a:	461c      	mov	r4, r3
 8018a6c:	9205      	str	r2, [sp, #20]
 8018a6e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018a72:	9100      	str	r1, [sp, #0]
 8018a74:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8018a76:	9201      	str	r2, [sp, #4]
 8018a78:	2a00      	cmp	r2, #0
 8018a7a:	f000 8115 	beq.w	8018ca8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 8018a7e:	6820      	ldr	r0, [r4, #0]
 8018a80:	6861      	ldr	r1, [r4, #4]
 8018a82:	aa0a      	add	r2, sp, #40	@ 0x28
 8018a84:	c203      	stmia	r2!, {r0, r1}
 8018a86:	6818      	ldr	r0, [r3, #0]
 8018a88:	6859      	ldr	r1, [r3, #4]
 8018a8a:	aa0c      	add	r2, sp, #48	@ 0x30
 8018a8c:	c203      	stmia	r2!, {r0, r1}
 8018a8e:	a80a      	add	r0, sp, #40	@ 0x28
 8018a90:	f7f9 f9d8 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018a94:	4621      	mov	r1, r4
 8018a96:	a80c      	add	r0, sp, #48	@ 0x30
 8018a98:	f7f9 f9fc 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018a9c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8018aa0:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8018aa4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8018aa8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8018aac:	bfde      	ittt	le
 8018aae:	b2b3      	uxthle	r3, r6
 8018ab0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8018ab4:	fb92 f3f3 	sdivle	r3, r2, r3
 8018ab8:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8018abc:	bfc8      	it	gt
 8018abe:	2301      	movgt	r3, #1
 8018ac0:	fb92 f1f3 	sdiv	r1, r2, r3
 8018ac4:	fa1f fc81 	uxth.w	ip, r1
 8018ac8:	fb0c 2413 	mls	r4, ip, r3, r2
 8018acc:	fb14 f406 	smulbb	r4, r4, r6
 8018ad0:	441d      	add	r5, r3
 8018ad2:	4404      	add	r4, r0
 8018ad4:	4661      	mov	r1, ip
 8018ad6:	3d01      	subs	r5, #1
 8018ad8:	b2a4      	uxth	r4, r4
 8018ada:	fb95 f5f3 	sdiv	r5, r5, r3
 8018ade:	b131      	cbz	r1, 8018aee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 8018ae0:	9b05      	ldr	r3, [sp, #20]
 8018ae2:	9900      	ldr	r1, [sp, #0]
 8018ae4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8018ae8:	ba1b      	rev	r3, r3
 8018aea:	4419      	add	r1, r3
 8018aec:	9100      	str	r1, [sp, #0]
 8018aee:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8018af2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8018af6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8018afa:	4418      	add	r0, r3
 8018afc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8018b00:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8018b04:	441a      	add	r2, r3
 8018b06:	4b6a      	ldr	r3, [pc, #424]	@ (8018cb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018b08:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8018b0c:	6818      	ldr	r0, [r3, #0]
 8018b0e:	6803      	ldr	r3, [r0, #0]
 8018b10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018b12:	4798      	blx	r3
 8018b14:	4967      	ldr	r1, [pc, #412]	@ (8018cb4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8018b16:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8018b1a:	880b      	ldrh	r3, [r1, #0]
 8018b1c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8018b20:	9109      	str	r1, [sp, #36]	@ 0x24
 8018b22:	fb03 c202 	mla	r2, r3, r2, ip
 8018b26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018b2a:	4373      	muls	r3, r6
 8018b2c:	b2ad      	uxth	r5, r5
 8018b2e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018b32:	00ad      	lsls	r5, r5, #2
 8018b34:	9306      	str	r3, [sp, #24]
 8018b36:	1d2b      	adds	r3, r5, #4
 8018b38:	9307      	str	r3, [sp, #28]
 8018b3a:	9b01      	ldr	r3, [sp, #4]
 8018b3c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018b40:	9103      	str	r1, [sp, #12]
 8018b42:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8018b46:	2c00      	cmp	r4, #0
 8018b48:	bf0c      	ite	eq
 8018b4a:	46c6      	moveq	lr, r8
 8018b4c:	f04f 0e00 	movne.w	lr, #0
 8018b50:	2300      	movs	r3, #0
 8018b52:	b292      	uxth	r2, r2
 8018b54:	fa1f fe8e 	uxth.w	lr, lr
 8018b58:	9302      	str	r3, [sp, #8]
 8018b5a:	9204      	str	r2, [sp, #16]
 8018b5c:	9a06      	ldr	r2, [sp, #24]
 8018b5e:	4282      	cmp	r2, r0
 8018b60:	f240 809d 	bls.w	8018c9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 8018b64:	b963      	cbnz	r3, 8018b80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8018b66:	9b00      	ldr	r3, [sp, #0]
 8018b68:	781a      	ldrb	r2, [r3, #0]
 8018b6a:	0993      	lsrs	r3, r2, #6
 8018b6c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8018b70:	9202      	str	r2, [sp, #8]
 8018b72:	1e5a      	subs	r2, r3, #1
 8018b74:	2a02      	cmp	r2, #2
 8018b76:	d815      	bhi.n	8018ba4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 8018b78:	9a00      	ldr	r2, [sp, #0]
 8018b7a:	3201      	adds	r2, #1
 8018b7c:	9200      	str	r2, [sp, #0]
 8018b7e:	b29b      	uxth	r3, r3
 8018b80:	b1b4      	cbz	r4, 8018bb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 8018b82:	429c      	cmp	r4, r3
 8018b84:	bf95      	itete	ls
 8018b86:	1b1c      	subls	r4, r3, r4
 8018b88:	1ae4      	subhi	r4, r4, r3
 8018b8a:	fa1f fa84 	uxthls.w	sl, r4
 8018b8e:	b2a4      	uxthhi	r4, r4
 8018b90:	bf87      	ittee	hi
 8018b92:	4671      	movhi	r1, lr
 8018b94:	f04f 0a00 	movhi.w	sl, #0
 8018b98:	fa1f f188 	uxthls.w	r1, r8
 8018b9c:	2400      	movls	r4, #0
 8018b9e:	4653      	mov	r3, sl
 8018ba0:	468e      	mov	lr, r1
 8018ba2:	e7db      	b.n	8018b5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 8018ba4:	9a00      	ldr	r2, [sp, #0]
 8018ba6:	9b00      	ldr	r3, [sp, #0]
 8018ba8:	3202      	adds	r2, #2
 8018baa:	785b      	ldrb	r3, [r3, #1]
 8018bac:	9200      	str	r2, [sp, #0]
 8018bae:	e7e7      	b.n	8018b80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 8018bb0:	2202      	movs	r2, #2
 8018bb2:	4615      	mov	r5, r2
 8018bb4:	9907      	ldr	r1, [sp, #28]
 8018bb6:	9a02      	ldr	r2, [sp, #8]
 8018bb8:	fb15 1202 	smlabb	r2, r5, r2, r1
 8018bbc:	9905      	ldr	r1, [sp, #20]
 8018bbe:	4573      	cmp	r3, lr
 8018bc0:	f831 c002 	ldrh.w	ip, [r1, r2]
 8018bc4:	9a01      	ldr	r2, [sp, #4]
 8018bc6:	bf2b      	itete	cs
 8018bc8:	eba3 0a0e 	subcs.w	sl, r3, lr
 8018bcc:	ebae 0103 	subcc.w	r1, lr, r3
 8018bd0:	46f1      	movcs	r9, lr
 8018bd2:	4699      	movcc	r9, r3
 8018bd4:	bf27      	ittee	cs
 8018bd6:	fa1f fa8a 	uxthcs.w	sl, sl
 8018bda:	4621      	movcs	r1, r4
 8018bdc:	b289      	uxthcc	r1, r1
 8018bde:	46a2      	movcc	sl, r4
 8018be0:	2aff      	cmp	r2, #255	@ 0xff
 8018be2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018be6:	d105      	bne.n	8018bf4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8018be8:	4481      	add	r9, r0
 8018bea:	4581      	cmp	r9, r0
 8018bec:	d045      	beq.n	8018c7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8018bee:	f820 cb02 	strh.w	ip, [r0], #2
 8018bf2:	e7fa      	b.n	8018bea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8018bf4:	9d03      	ldr	r5, [sp, #12]
 8018bf6:	ea4f 222c 	mov.w	r2, ip, asr #8
 8018bfa:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8018bfe:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8018c02:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018c06:	436a      	muls	r2, r5
 8018c08:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8018c0c:	fa5f fc8c 	uxtb.w	ip, ip
 8018c10:	9208      	str	r2, [sp, #32]
 8018c12:	fb0b fb05 	mul.w	fp, fp, r5
 8018c16:	fb0c fc05 	mul.w	ip, ip, r5
 8018c1a:	4481      	add	r9, r0
 8018c1c:	4581      	cmp	r9, r0
 8018c1e:	d02c      	beq.n	8018c7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 8018c20:	8802      	ldrh	r2, [r0, #0]
 8018c22:	9d04      	ldr	r5, [sp, #16]
 8018c24:	9f04      	ldr	r7, [sp, #16]
 8018c26:	1216      	asrs	r6, r2, #8
 8018c28:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018c2c:	fb16 f605 	smulbb	r6, r6, r5
 8018c30:	9d08      	ldr	r5, [sp, #32]
 8018c32:	442e      	add	r6, r5
 8018c34:	10d5      	asrs	r5, r2, #3
 8018c36:	00d2      	lsls	r2, r2, #3
 8018c38:	b2d2      	uxtb	r2, r2
 8018c3a:	fb12 f207 	smulbb	r2, r2, r7
 8018c3e:	b2b6      	uxth	r6, r6
 8018c40:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8018c44:	4462      	add	r2, ip
 8018c46:	fb15 f507 	smulbb	r5, r5, r7
 8018c4a:	b292      	uxth	r2, r2
 8018c4c:	1c77      	adds	r7, r6, #1
 8018c4e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8018c52:	1c57      	adds	r7, r2, #1
 8018c54:	445d      	add	r5, fp
 8018c56:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8018c5a:	b2ad      	uxth	r5, r5
 8018c5c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018c60:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8018c64:	4316      	orrs	r6, r2
 8018c66:	1c6a      	adds	r2, r5, #1
 8018c68:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8018c6c:	096d      	lsrs	r5, r5, #5
 8018c6e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018c72:	432e      	orrs	r6, r5
 8018c74:	f820 6b02 	strh.w	r6, [r0], #2
 8018c78:	e7d0      	b.n	8018c1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 8018c7a:	4573      	cmp	r3, lr
 8018c7c:	d38f      	bcc.n	8018b9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8018c7e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8018c82:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c84:	fa1f f188 	uxth.w	r1, r8
 8018c88:	1a64      	subs	r4, r4, r1
 8018c8a:	881b      	ldrh	r3, [r3, #0]
 8018c8c:	b2a4      	uxth	r4, r4
 8018c8e:	2c00      	cmp	r4, #0
 8018c90:	eba3 0308 	sub.w	r3, r3, r8
 8018c94:	bf18      	it	ne
 8018c96:	2100      	movne	r1, #0
 8018c98:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018c9c:	e77f      	b.n	8018b9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 8018c9e:	4b04      	ldr	r3, [pc, #16]	@ (8018cb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8018ca0:	6818      	ldr	r0, [r3, #0]
 8018ca2:	6803      	ldr	r3, [r0, #0]
 8018ca4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018ca6:	4798      	blx	r3
 8018ca8:	b00f      	add	sp, #60	@ 0x3c
 8018caa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018cae:	bf00      	nop
 8018cb0:	20002f34 	.word	0x20002f34
 8018cb4:	20002f2e 	.word	0x20002f2e

08018cb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8018cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cbc:	b09f      	sub	sp, #124	@ 0x7c
 8018cbe:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8018cc2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8018cc6:	9209      	str	r2, [sp, #36]	@ 0x24
 8018cc8:	461d      	mov	r5, r3
 8018cca:	4604      	mov	r4, r0
 8018ccc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018cce:	2a00      	cmp	r2, #0
 8018cd0:	f000 81eb 	beq.w	80190aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 8018cd4:	6828      	ldr	r0, [r5, #0]
 8018cd6:	6869      	ldr	r1, [r5, #4]
 8018cd8:	aa1a      	add	r2, sp, #104	@ 0x68
 8018cda:	c203      	stmia	r2!, {r0, r1}
 8018cdc:	6818      	ldr	r0, [r3, #0]
 8018cde:	6859      	ldr	r1, [r3, #4]
 8018ce0:	aa1c      	add	r2, sp, #112	@ 0x70
 8018ce2:	c203      	stmia	r2!, {r0, r1}
 8018ce4:	a81a      	add	r0, sp, #104	@ 0x68
 8018ce6:	f7f9 f8ad 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018cea:	4629      	mov	r1, r5
 8018cec:	a81c      	add	r0, sp, #112	@ 0x70
 8018cee:	f7f9 f8d1 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018cf2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8018cf6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8018cfa:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8018cfe:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8018d02:	bfd7      	itett	le
 8018d04:	b29a      	uxthle	r2, r3
 8018d06:	2201      	movgt	r2, #1
 8018d08:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8018d0c:	fb91 f2f2 	sdivle	r2, r1, r2
 8018d10:	9202      	str	r2, [sp, #8]
 8018d12:	9802      	ldr	r0, [sp, #8]
 8018d14:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8018d18:	fb92 f0f0 	sdiv	r0, r2, r0
 8018d1c:	b280      	uxth	r0, r0
 8018d1e:	9010      	str	r0, [sp, #64]	@ 0x40
 8018d20:	9902      	ldr	r1, [sp, #8]
 8018d22:	9802      	ldr	r0, [sp, #8]
 8018d24:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8018d26:	4488      	add	r8, r1
 8018d28:	fb05 2510 	mls	r5, r5, r0, r2
 8018d2c:	fb15 f503 	smulbb	r5, r5, r3
 8018d30:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d34:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8018d38:	fb98 f8f1 	sdiv	r8, r8, r1
 8018d3c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8018d40:	440d      	add	r5, r1
 8018d42:	4419      	add	r1, r3
 8018d44:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8018d48:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8018d4c:	441a      	add	r2, r3
 8018d4e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8018d52:	9304      	str	r3, [sp, #16]
 8018d54:	4b95      	ldr	r3, [pc, #596]	@ (8018fac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 8018d56:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8018d5a:	6818      	ldr	r0, [r3, #0]
 8018d5c:	6803      	ldr	r3, [r0, #0]
 8018d5e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018d60:	4798      	blx	r3
 8018d62:	4b93      	ldr	r3, [pc, #588]	@ (8018fb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8018d64:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8018d68:	881a      	ldrh	r2, [r3, #0]
 8018d6a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8018d6e:	9318      	str	r3, [sp, #96]	@ 0x60
 8018d70:	fb02 7101 	mla	r1, r2, r1, r7
 8018d74:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018d78:	4356      	muls	r6, r2
 8018d7a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8018d7e:	f108 0801 	add.w	r8, r8, #1
 8018d82:	920a      	str	r2, [sp, #40]	@ 0x28
 8018d84:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018d86:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8018d8a:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018d8c:	fa1f f888 	uxth.w	r8, r8
 8018d90:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8018d94:	f108 0204 	add.w	r2, r8, #4
 8018d98:	9211      	str	r2, [sp, #68]	@ 0x44
 8018d9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018d9c:	4b85      	ldr	r3, [pc, #532]	@ (8018fb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8018d9e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8018da2:	b2ad      	uxth	r5, r5
 8018da4:	9215      	str	r2, [sp, #84]	@ 0x54
 8018da6:	2d00      	cmp	r5, #0
 8018da8:	9a04      	ldr	r2, [sp, #16]
 8018daa:	f04f 0100 	mov.w	r1, #0
 8018dae:	bf18      	it	ne
 8018db0:	2200      	movne	r2, #0
 8018db2:	1b1b      	subs	r3, r3, r4
 8018db4:	b292      	uxth	r2, r2
 8018db6:	910d      	str	r1, [sp, #52]	@ 0x34
 8018db8:	9319      	str	r3, [sp, #100]	@ 0x64
 8018dba:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8018dbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018dbe:	fa11 f383 	uxtah	r3, r1, r3
 8018dc2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8018dc4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018dc8:	3304      	adds	r3, #4
 8018dca:	9306      	str	r3, [sp, #24]
 8018dcc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018dce:	4283      	cmp	r3, r0
 8018dd0:	f240 8166 	bls.w	80190a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 8018dd4:	9902      	ldr	r1, [sp, #8]
 8018dd6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8018dda:	fbb5 f3f3 	udiv	r3, r5, r3
 8018dde:	1acb      	subs	r3, r1, r3
 8018de0:	b29b      	uxth	r3, r3
 8018de2:	9316      	str	r3, [sp, #88]	@ 0x58
 8018de4:	9b06      	ldr	r3, [sp, #24]
 8018de6:	9e06      	ldr	r6, [sp, #24]
 8018de8:	7859      	ldrb	r1, [r3, #1]
 8018dea:	789b      	ldrb	r3, [r3, #2]
 8018dec:	7836      	ldrb	r6, [r6, #0]
 8018dee:	9612      	str	r6, [sp, #72]	@ 0x48
 8018df0:	021b      	lsls	r3, r3, #8
 8018df2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8018df6:	9906      	ldr	r1, [sp, #24]
 8018df8:	78c9      	ldrb	r1, [r1, #3]
 8018dfa:	430b      	orrs	r3, r1
 8018dfc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8018dfe:	3601      	adds	r6, #1
 8018e00:	4419      	add	r1, r3
 8018e02:	9605      	str	r6, [sp, #20]
 8018e04:	1c4e      	adds	r6, r1, #1
 8018e06:	9603      	str	r6, [sp, #12]
 8018e08:	7849      	ldrb	r1, [r1, #1]
 8018e0a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018e0c:	0209      	lsls	r1, r1, #8
 8018e0e:	5cf3      	ldrb	r3, [r6, r3]
 8018e10:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8018e14:	4319      	orrs	r1, r3
 8018e16:	b28b      	uxth	r3, r1
 8018e18:	930c      	str	r3, [sp, #48]	@ 0x30
 8018e1a:	2300      	movs	r3, #0
 8018e1c:	f04f 0a01 	mov.w	sl, #1
 8018e20:	9307      	str	r3, [sp, #28]
 8018e22:	469c      	mov	ip, r3
 8018e24:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8018e28:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8018e2c:	46d3      	mov	fp, sl
 8018e2e:	4657      	mov	r7, sl
 8018e30:	930e      	str	r3, [sp, #56]	@ 0x38
 8018e32:	2d00      	cmp	r5, #0
 8018e34:	d07e      	beq.n	8018f34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8018e36:	42af      	cmp	r7, r5
 8018e38:	d26e      	bcs.n	8018f18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 8018e3a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018e3c:	9201      	str	r2, [sp, #4]
 8018e3e:	1bed      	subs	r5, r5, r7
 8018e40:	4283      	cmp	r3, r0
 8018e42:	b2ad      	uxth	r5, r5
 8018e44:	d802      	bhi.n	8018e4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8018e46:	e073      	b.n	8018f30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 8018e48:	2b00      	cmp	r3, #0
 8018e4a:	d15f      	bne.n	8018f0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 8018e4c:	9b03      	ldr	r3, [sp, #12]
 8018e4e:	785b      	ldrb	r3, [r3, #1]
 8018e50:	f1cb 0207 	rsb	r2, fp, #7
 8018e54:	4093      	lsls	r3, r2
 8018e56:	005b      	lsls	r3, r3, #1
 8018e58:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8018e5c:	9b03      	ldr	r3, [sp, #12]
 8018e5e:	781b      	ldrb	r3, [r3, #0]
 8018e60:	fa43 f30b 	asr.w	r3, r3, fp
 8018e64:	b2db      	uxtb	r3, r3
 8018e66:	4313      	orrs	r3, r2
 8018e68:	f10b 0201 	add.w	r2, fp, #1
 8018e6c:	fa5f fb82 	uxtb.w	fp, r2
 8018e70:	9a03      	ldr	r2, [sp, #12]
 8018e72:	f1bb 0f08 	cmp.w	fp, #8
 8018e76:	bf15      	itete	ne
 8018e78:	3201      	addne	r2, #1
 8018e7a:	3202      	addeq	r2, #2
 8018e7c:	9203      	strne	r2, [sp, #12]
 8018e7e:	9203      	streq	r2, [sp, #12]
 8018e80:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018e82:	b29f      	uxth	r7, r3
 8018e84:	bf08      	it	eq
 8018e86:	f04f 0b00 	moveq.w	fp, #0
 8018e8a:	42ba      	cmp	r2, r7
 8018e8c:	d309      	bcc.n	8018ea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 8018e8e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8018e92:	2301      	movs	r3, #1
 8018e94:	9a05      	ldr	r2, [sp, #20]
 8018e96:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8018e9a:	d30e      	bcc.n	8018eba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 8018e9c:	469a      	mov	sl, r3
 8018e9e:	2600      	movs	r6, #0
 8018ea0:	e035      	b.n	8018f0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 8018ea2:	9b05      	ldr	r3, [sp, #20]
 8018ea4:	429f      	cmp	r7, r3
 8018ea6:	d318      	bcc.n	8018eda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 8018ea8:	eb04 030a 	add.w	r3, r4, sl
 8018eac:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8018eb0:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8018eb4:	f10a 0301 	add.w	r3, sl, #1
 8018eb8:	b29b      	uxth	r3, r3
 8018eba:	9a05      	ldr	r2, [sp, #20]
 8018ebc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8018ec0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018ec2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018ec6:	7116      	strb	r6, [r2, #4]
 8018ec8:	f10a 0601 	add.w	r6, sl, #1
 8018ecc:	80d1      	strh	r1, [r2, #6]
 8018ece:	7156      	strb	r6, [r2, #5]
 8018ed0:	9a05      	ldr	r2, [sp, #20]
 8018ed2:	3201      	adds	r2, #1
 8018ed4:	b292      	uxth	r2, r2
 8018ed6:	9205      	str	r2, [sp, #20]
 8018ed8:	e7e0      	b.n	8018e9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 8018eda:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8018ede:	463a      	mov	r2, r7
 8018ee0:	795b      	ldrb	r3, [r3, #5]
 8018ee2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8018ee6:	4426      	add	r6, r4
 8018ee8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8018eea:	eb01 0c06 	add.w	ip, r1, r6
 8018eee:	f1bc 0f00 	cmp.w	ip, #0
 8018ef2:	dd07      	ble.n	8018f04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 8018ef4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8018ef8:	f892 c004 	ldrb.w	ip, [r2, #4]
 8018efc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8018f00:	88d2      	ldrh	r2, [r2, #6]
 8018f02:	e7f1      	b.n	8018ee8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 8018f04:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8018f08:	b29b      	uxth	r3, r3
 8018f0a:	e7c3      	b.n	8018e94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 8018f0c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8018f0e:	970c      	str	r7, [sp, #48]	@ 0x30
 8018f10:	9a01      	ldr	r2, [sp, #4]
 8018f12:	46b4      	mov	ip, r6
 8018f14:	461f      	mov	r7, r3
 8018f16:	e78c      	b.n	8018e32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 8018f18:	1b7b      	subs	r3, r7, r5
 8018f1a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018f1e:	9201      	str	r2, [sp, #4]
 8018f20:	eb0c 0605 	add.w	r6, ip, r5
 8018f24:	b29b      	uxth	r3, r3
 8018f26:	b2b6      	uxth	r6, r6
 8018f28:	2500      	movs	r5, #0
 8018f2a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8018f2c:	4282      	cmp	r2, r0
 8018f2e:	d88b      	bhi.n	8018e48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 8018f30:	9a01      	ldr	r2, [sp, #4]
 8018f32:	e74b      	b.n	8018dcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 8018f34:	4297      	cmp	r7, r2
 8018f36:	d332      	bcc.n	8018f9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 8018f38:	1abb      	subs	r3, r7, r2
 8018f3a:	b29b      	uxth	r3, r3
 8018f3c:	9208      	str	r2, [sp, #32]
 8018f3e:	9501      	str	r5, [sp, #4]
 8018f40:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018f42:	29ff      	cmp	r1, #255	@ 0xff
 8018f44:	9908      	ldr	r1, [sp, #32]
 8018f46:	eb0c 0601 	add.w	r6, ip, r1
 8018f4a:	d135      	bne.n	8018fb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 8018f4c:	f1a0 0e02 	sub.w	lr, r0, #2
 8018f50:	b2b6      	uxth	r6, r6
 8018f52:	45b4      	cmp	ip, r6
 8018f54:	f040 808c 	bne.w	8019070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 8018f58:	9908      	ldr	r1, [sp, #32]
 8018f5a:	4297      	cmp	r7, r2
 8018f5c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018f60:	d3e2      	bcc.n	8018f28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 8018f62:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8018f64:	9904      	ldr	r1, [sp, #16]
 8018f66:	8812      	ldrh	r2, [r2, #0]
 8018f68:	1a52      	subs	r2, r2, r1
 8018f6a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018f6e:	9a07      	ldr	r2, [sp, #28]
 8018f70:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8018f72:	3201      	adds	r2, #1
 8018f74:	428a      	cmp	r2, r1
 8018f76:	9207      	str	r2, [sp, #28]
 8018f78:	f040 8087 	bne.w	801908a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 8018f7c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8018f80:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8018f84:	9b04      	ldr	r3, [sp, #16]
 8018f86:	1bed      	subs	r5, r5, r7
 8018f88:	b2ad      	uxth	r5, r5
 8018f8a:	2d00      	cmp	r5, #0
 8018f8c:	bf08      	it	eq
 8018f8e:	461a      	moveq	r2, r3
 8018f90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018f92:	bf18      	it	ne
 8018f94:	2200      	movne	r2, #0
 8018f96:	3301      	adds	r3, #1
 8018f98:	930d      	str	r3, [sp, #52]	@ 0x34
 8018f9a:	b292      	uxth	r2, r2
 8018f9c:	e70d      	b.n	8018dba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 8018f9e:	1bd1      	subs	r1, r2, r7
 8018fa0:	b28b      	uxth	r3, r1
 8018fa2:	9301      	str	r3, [sp, #4]
 8018fa4:	9708      	str	r7, [sp, #32]
 8018fa6:	462b      	mov	r3, r5
 8018fa8:	e7ca      	b.n	8018f40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 8018faa:	bf00      	nop
 8018fac:	20002f34 	.word	0x20002f34
 8018fb0:	20002f2e 	.word	0x20002f2e
 8018fb4:	fffff7fb 	.word	0xfffff7fb
 8018fb8:	b2b6      	uxth	r6, r6
 8018fba:	900b      	str	r0, [sp, #44]	@ 0x2c
 8018fbc:	45b4      	cmp	ip, r6
 8018fbe:	d0cb      	beq.n	8018f58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 8018fc0:	f10c 0101 	add.w	r1, ip, #1
 8018fc4:	44a4      	add	ip, r4
 8018fc6:	9117      	str	r1, [sp, #92]	@ 0x5c
 8018fc8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8018fcc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8018fce:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8018fd2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8018fd4:	f8b1 c000 	ldrh.w	ip, [r1]
 8018fd8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018fda:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8018fde:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8018fe2:	fb1e fe01 	smulbb	lr, lr, r1
 8018fe6:	ea4f 2825 	mov.w	r8, r5, asr #8
 8018fea:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8018fec:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8018ff0:	fb08 e801 	mla	r8, r8, r1, lr
 8018ff4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8018ff8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018ffa:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018ffe:	fb19 f901 	smulbb	r9, r9, r1
 8019002:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8019006:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019008:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801900c:	fb0e 9e01 	mla	lr, lr, r1, r9
 8019010:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019014:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8019016:	fa5f fc8c 	uxtb.w	ip, ip
 801901a:	fb1c fc01 	smulbb	ip, ip, r1
 801901e:	00ed      	lsls	r5, r5, #3
 8019020:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8019022:	b2ed      	uxtb	r5, r5
 8019024:	fb05 c501 	mla	r5, r5, r1, ip
 8019028:	fa1f f888 	uxth.w	r8, r8
 801902c:	fa1f fe8e 	uxth.w	lr, lr
 8019030:	b2ad      	uxth	r5, r5
 8019032:	f108 0c01 	add.w	ip, r8, #1
 8019036:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801903a:	f10e 0901 	add.w	r9, lr, #1
 801903e:	f105 0c01 	add.w	ip, r5, #1
 8019042:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8019046:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801904a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801904e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8019052:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019056:	ea4c 0808 	orr.w	r8, ip, r8
 801905a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801905c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8019060:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8019064:	ea48 0809 	orr.w	r8, r8, r9
 8019068:	f821 8b02 	strh.w	r8, [r1], #2
 801906c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801906e:	e7a5      	b.n	8018fbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8019070:	f10c 0801 	add.w	r8, ip, #1
 8019074:	44a4      	add	ip, r4
 8019076:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8019078:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801907c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8019080:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8019084:	fa1f fc88 	uxth.w	ip, r8
 8019088:	e763      	b.n	8018f52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801908a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801908e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8019092:	1aad      	subs	r5, r5, r2
 8019094:	b2ad      	uxth	r5, r5
 8019096:	2d00      	cmp	r5, #0
 8019098:	bf18      	it	ne
 801909a:	2200      	movne	r2, #0
 801909c:	9201      	str	r2, [sp, #4]
 801909e:	e744      	b.n	8018f2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 80190a0:	4b03      	ldr	r3, [pc, #12]	@ (80190b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 80190a2:	6818      	ldr	r0, [r3, #0]
 80190a4:	6803      	ldr	r3, [r0, #0]
 80190a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80190a8:	4798      	blx	r3
 80190aa:	b01f      	add	sp, #124	@ 0x7c
 80190ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80190b0:	20002f34 	.word	0x20002f34

080190b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 80190b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190b8:	b093      	sub	sp, #76	@ 0x4c
 80190ba:	4616      	mov	r6, r2
 80190bc:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 80190c0:	9003      	str	r0, [sp, #12]
 80190c2:	460d      	mov	r5, r1
 80190c4:	9201      	str	r2, [sp, #4]
 80190c6:	2a00      	cmp	r2, #0
 80190c8:	f000 8304 	beq.w	80196d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 80190cc:	6830      	ldr	r0, [r6, #0]
 80190ce:	6871      	ldr	r1, [r6, #4]
 80190d0:	ac0e      	add	r4, sp, #56	@ 0x38
 80190d2:	c403      	stmia	r4!, {r0, r1}
 80190d4:	6818      	ldr	r0, [r3, #0]
 80190d6:	6859      	ldr	r1, [r3, #4]
 80190d8:	ac10      	add	r4, sp, #64	@ 0x40
 80190da:	c403      	stmia	r4!, {r0, r1}
 80190dc:	a80e      	add	r0, sp, #56	@ 0x38
 80190de:	f7f8 feb1 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80190e2:	4631      	mov	r1, r6
 80190e4:	a810      	add	r0, sp, #64	@ 0x40
 80190e6:	f7f8 fed5 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80190ea:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80190ee:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80190f2:	bfd7      	itett	le
 80190f4:	b293      	uxthle	r3, r2
 80190f6:	2301      	movgt	r3, #1
 80190f8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80190fc:	fb91 f3f3 	sdivle	r3, r1, r3
 8019100:	9304      	str	r3, [sp, #16]
 8019102:	f105 0308 	add.w	r3, r5, #8
 8019106:	9904      	ldr	r1, [sp, #16]
 8019108:	9308      	str	r3, [sp, #32]
 801910a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801910e:	440b      	add	r3, r1
 8019110:	3b01      	subs	r3, #1
 8019112:	fb93 f3f1 	sdiv	r3, r3, r1
 8019116:	9908      	ldr	r1, [sp, #32]
 8019118:	3b01      	subs	r3, #1
 801911a:	b29b      	uxth	r3, r3
 801911c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8019120:	9309      	str	r3, [sp, #36]	@ 0x24
 8019122:	9904      	ldr	r1, [sp, #16]
 8019124:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8019128:	fb93 f0f1 	sdiv	r0, r3, r1
 801912c:	b284      	uxth	r4, r0
 801912e:	9405      	str	r4, [sp, #20]
 8019130:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8019134:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8019138:	fb05 3914 	mls	r9, r5, r4, r3
 801913c:	fb19 f902 	smulbb	r9, r9, r2
 8019140:	4489      	add	r9, r1
 8019142:	fa1f f989 	uxth.w	r9, r9
 8019146:	2d00      	cmp	r5, #0
 8019148:	d05d      	beq.n	8019206 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801914a:	1e6a      	subs	r2, r5, #1
 801914c:	9808      	ldr	r0, [sp, #32]
 801914e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8019152:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019154:	fa9a fa8a 	rev.w	sl, sl
 8019158:	4492      	add	sl, r2
 801915a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801915e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8019162:	4411      	add	r1, r2
 8019164:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8019168:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801916c:	4413      	add	r3, r2
 801916e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8019172:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 8019176:	9302      	str	r3, [sp, #8]
 8019178:	4bcb      	ldr	r3, [pc, #812]	@ (80194a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801917a:	6818      	ldr	r0, [r3, #0]
 801917c:	6803      	ldr	r3, [r0, #0]
 801917e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019180:	4798      	blx	r3
 8019182:	4bca      	ldr	r3, [pc, #808]	@ (80194ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8019184:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8019188:	881b      	ldrh	r3, [r3, #0]
 801918a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801918e:	fb03 2404 	mla	r4, r3, r4, r2
 8019192:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019196:	436b      	muls	r3, r5
 8019198:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801919c:	930d      	str	r3, [sp, #52]	@ 0x34
 801919e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80191a2:	fb99 f3f3 	sdiv	r3, r9, r3
 80191a6:	9306      	str	r3, [sp, #24]
 80191a8:	9b01      	ldr	r3, [sp, #4]
 80191aa:	43db      	mvns	r3, r3
 80191ac:	b2db      	uxtb	r3, r3
 80191ae:	930a      	str	r3, [sp, #40]	@ 0x28
 80191b0:	9b03      	ldr	r3, [sp, #12]
 80191b2:	3304      	adds	r3, #4
 80191b4:	4618      	mov	r0, r3
 80191b6:	2280      	movs	r2, #128	@ 0x80
 80191b8:	2100      	movs	r1, #0
 80191ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 80191bc:	f00a ffdf 	bl	802417e <memset>
 80191c0:	4bbb      	ldr	r3, [pc, #748]	@ (80194b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 80191c2:	9300      	str	r3, [sp, #0]
 80191c4:	2300      	movs	r3, #0
 80191c6:	f04f 0600 	mov.w	r6, #0
 80191ca:	9307      	str	r3, [sp, #28]
 80191cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80191ce:	42a3      	cmp	r3, r4
 80191d0:	f240 827b 	bls.w	80196ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 80191d4:	f04f 0e07 	mov.w	lr, #7
 80191d8:	f1b9 0f00 	cmp.w	r9, #0
 80191dc:	f000 8159 	beq.w	8019492 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80191e0:	f89a 5000 	ldrb.w	r5, [sl]
 80191e4:	b2ed      	uxtb	r5, r5
 80191e6:	11aa      	asrs	r2, r5, #6
 80191e8:	f10a 0701 	add.w	r7, sl, #1
 80191ec:	d10e      	bne.n	801920c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80191ee:	9b03      	ldr	r3, [sp, #12]
 80191f0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80191f4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80191f8:	88ae      	ldrh	r6, [r5, #4]
 80191fa:	f109 39ff 	add.w	r9, r9, #4294967295
 80191fe:	fa1f f989 	uxth.w	r9, r9
 8019202:	46ba      	mov	sl, r7
 8019204:	e7e8      	b.n	80191d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8019206:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801920a:	e7a6      	b.n	801915a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801920c:	2a01      	cmp	r2, #1
 801920e:	d129      	bne.n	8019264 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8019210:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8019214:	f005 0203 	and.w	r2, r5, #3
 8019218:	3b02      	subs	r3, #2
 801921a:	4413      	add	r3, r2
 801921c:	f003 031f 	and.w	r3, r3, #31
 8019220:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8019224:	f363 0604 	bfi	r6, r3, #0, #5
 8019228:	3a02      	subs	r2, #2
 801922a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801922e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019232:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8019236:	f362 164a 	bfi	r6, r2, #5, #6
 801923a:	3d02      	subs	r5, #2
 801923c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8019240:	f005 051f 	and.w	r5, r5, #31
 8019244:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8019248:	2103      	movs	r1, #3
 801924a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801924e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8019252:	9a03      	ldr	r2, [sp, #12]
 8019254:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8019258:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801925c:	f365 26cf 	bfi	r6, r5, #11, #5
 8019260:	809e      	strh	r6, [r3, #4]
 8019262:	e7ca      	b.n	80191fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8019264:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8019268:	2a02      	cmp	r2, #2
 801926a:	b2ab      	uxth	r3, r5
 801926c:	d136      	bne.n	80192dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801926e:	2101      	movs	r1, #1
 8019270:	fb12 1205 	smlabb	r2, r2, r5, r1
 8019274:	4492      	add	sl, r2
 8019276:	463a      	mov	r2, r7
 8019278:	4552      	cmp	r2, sl
 801927a:	d01c      	beq.n	80192b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801927c:	4694      	mov	ip, r2
 801927e:	f04f 0b03 	mov.w	fp, #3
 8019282:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8019286:	7852      	ldrb	r2, [r2, #1]
 8019288:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801928c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8019290:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8019294:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8019298:	f001 021f 	and.w	r2, r1, #31
 801929c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80192a0:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80192a4:	9a03      	ldr	r2, [sp, #12]
 80192a6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80192aa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80192ae:	460e      	mov	r6, r1
 80192b0:	8081      	strh	r1, [r0, #4]
 80192b2:	4662      	mov	r2, ip
 80192b4:	e7e0      	b.n	8019278 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 80192b6:	4599      	cmp	r9, r3
 80192b8:	d20b      	bcs.n	80192d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 80192ba:	eba5 0509 	sub.w	r5, r5, r9
 80192be:	2d00      	cmp	r5, #0
 80192c0:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 80192c4:	f300 8209 	bgt.w	80196da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 80192c8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80192cc:	2301      	movs	r3, #1
 80192ce:	9307      	str	r3, [sp, #28]
 80192d0:	e00c      	b.n	80192ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80192d2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80192d6:	eba9 0903 	sub.w	r9, r9, r3
 80192da:	e790      	b.n	80191fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80192dc:	4599      	cmp	r9, r3
 80192de:	d2fa      	bcs.n	80192d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80192e0:	eba5 0509 	sub.w	r5, r5, r9
 80192e4:	2d00      	cmp	r5, #0
 80192e6:	dc1d      	bgt.n	8019324 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80192e8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80192ec:	f04f 0b00 	mov.w	fp, #0
 80192f0:	f1b8 0f00 	cmp.w	r8, #0
 80192f4:	f340 81a1 	ble.w	801963a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 80192f8:	783b      	ldrb	r3, [r7, #0]
 80192fa:	b2db      	uxtb	r3, r3
 80192fc:	119a      	asrs	r2, r3, #6
 80192fe:	f107 0a01 	add.w	sl, r7, #1
 8019302:	f040 80d7 	bne.w	80194b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8019306:	9a03      	ldr	r2, [sp, #12]
 8019308:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801930c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019310:	889e      	ldrh	r6, [r3, #4]
 8019312:	9b01      	ldr	r3, [sp, #4]
 8019314:	2bff      	cmp	r3, #255	@ 0xff
 8019316:	f040 81e9 	bne.w	80196ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801931a:	8026      	strh	r6, [r4, #0]
 801931c:	f108 38ff 	add.w	r8, r8, #4294967295
 8019320:	3402      	adds	r4, #2
 8019322:	e0be      	b.n	80194a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8019324:	9b02      	ldr	r3, [sp, #8]
 8019326:	9a02      	ldr	r2, [sp, #8]
 8019328:	42ab      	cmp	r3, r5
 801932a:	bfa8      	it	ge
 801932c:	462b      	movge	r3, r5
 801932e:	eba2 0803 	sub.w	r8, r2, r3
 8019332:	9a07      	ldr	r2, [sp, #28]
 8019334:	1aed      	subs	r5, r5, r3
 8019336:	2a00      	cmp	r2, #0
 8019338:	d05a      	beq.n	80193f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801933a:	9a01      	ldr	r2, [sp, #4]
 801933c:	2aff      	cmp	r2, #255	@ 0xff
 801933e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019342:	d049      	beq.n	80193d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8019344:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8019348:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801934c:	42a3      	cmp	r3, r4
 801934e:	f240 80a5 	bls.w	801949c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8019352:	46bc      	mov	ip, r7
 8019354:	8820      	ldrh	r0, [r4, #0]
 8019356:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801935a:	7879      	ldrb	r1, [r7, #1]
 801935c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8019360:	b212      	sxth	r2, r2
 8019362:	b291      	uxth	r1, r2
 8019364:	ea4f 2a20 	mov.w	sl, r0, asr #8
 8019368:	120f      	asrs	r7, r1, #8
 801936a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801936e:	fb1a fa09 	smulbb	sl, sl, r9
 8019372:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019376:	fb07 a70e 	mla	r7, r7, lr, sl
 801937a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801937e:	00c0      	lsls	r0, r0, #3
 8019380:	10c9      	asrs	r1, r1, #3
 8019382:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8019386:	00d2      	lsls	r2, r2, #3
 8019388:	b2c0      	uxtb	r0, r0
 801938a:	fb1a fa09 	smulbb	sl, sl, r9
 801938e:	fb10 f009 	smulbb	r0, r0, r9
 8019392:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019396:	b2d2      	uxtb	r2, r2
 8019398:	b2bf      	uxth	r7, r7
 801939a:	fb01 a10e 	mla	r1, r1, lr, sl
 801939e:	fb02 020e 	mla	r2, r2, lr, r0
 80193a2:	b289      	uxth	r1, r1
 80193a4:	b292      	uxth	r2, r2
 80193a6:	1c78      	adds	r0, r7, #1
 80193a8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80193ac:	f101 0a01 	add.w	sl, r1, #1
 80193b0:	1c50      	adds	r0, r2, #1
 80193b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80193b6:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 80193ba:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80193be:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80193c2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80193c6:	4307      	orrs	r7, r0
 80193c8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80193cc:	ea47 070a 	orr.w	r7, r7, sl
 80193d0:	f824 7b02 	strh.w	r7, [r4], #2
 80193d4:	4667      	mov	r7, ip
 80193d6:	e7b9      	b.n	801934c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80193d8:	42a3      	cmp	r3, r4
 80193da:	d95f      	bls.n	801949c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80193dc:	463a      	mov	r2, r7
 80193de:	f812 1b02 	ldrb.w	r1, [r2], #2
 80193e2:	7878      	ldrb	r0, [r7, #1]
 80193e4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80193e8:	f824 1b02 	strh.w	r1, [r4], #2
 80193ec:	4617      	mov	r7, r2
 80193ee:	e7f3      	b.n	80193d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80193f0:	9901      	ldr	r1, [sp, #4]
 80193f2:	29ff      	cmp	r1, #255	@ 0xff
 80193f4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80193f8:	b2b2      	uxth	r2, r6
 80193fa:	d044      	beq.n	8019486 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80193fc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8019400:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 8019404:	ea4f 2922 	mov.w	r9, r2, asr #8
 8019408:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801940c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8019410:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8019414:	4608      	mov	r0, r1
 8019416:	fb09 f901 	mul.w	r9, r9, r1
 801941a:	fb0e fe01 	mul.w	lr, lr, r1
 801941e:	00d1      	lsls	r1, r2, #3
 8019420:	b2c9      	uxtb	r1, r1
 8019422:	4341      	muls	r1, r0
 8019424:	429c      	cmp	r4, r3
 8019426:	f4bf af61 	bcs.w	80192ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801942a:	8822      	ldrh	r2, [r4, #0]
 801942c:	1210      	asrs	r0, r2, #8
 801942e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8019432:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019436:	00d2      	lsls	r2, r2, #3
 8019438:	fb00 900a 	mla	r0, r0, sl, r9
 801943c:	b2d2      	uxtb	r2, r2
 801943e:	b280      	uxth	r0, r0
 8019440:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019444:	fb02 120a 	mla	r2, r2, sl, r1
 8019448:	b292      	uxth	r2, r2
 801944a:	f100 0b01 	add.w	fp, r0, #1
 801944e:	fb0c ec0a 	mla	ip, ip, sl, lr
 8019452:	fa1f fc8c 	uxth.w	ip, ip
 8019456:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801945a:	1c50      	adds	r0, r2, #1
 801945c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019460:	f10c 0201 	add.w	r2, ip, #1
 8019464:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019468:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801946c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8019470:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019474:	ea40 0b0b 	orr.w	fp, r0, fp
 8019478:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801947c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8019480:	f824 bb02 	strh.w	fp, [r4], #2
 8019484:	e7ce      	b.n	8019424 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8019486:	429c      	cmp	r4, r3
 8019488:	f4bf af30 	bcs.w	80192ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801948c:	f824 2b02 	strh.w	r2, [r4], #2
 8019490:	e7f9      	b.n	8019486 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8019492:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8019496:	4657      	mov	r7, sl
 8019498:	464d      	mov	r5, r9
 801949a:	e727      	b.n	80192ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801949c:	2300      	movs	r3, #0
 801949e:	e716      	b.n	80192ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80194a0:	44bb      	add	fp, r7
 80194a2:	4657      	mov	r7, sl
 80194a4:	e724      	b.n	80192f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80194a6:	bf00      	nop
 80194a8:	20002f34 	.word	0x20002f34
 80194ac:	20002f2e 	.word	0x20002f2e
 80194b0:	20000100 	.word	0x20000100
 80194b4:	2a01      	cmp	r2, #1
 80194b6:	d12a      	bne.n	801950e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 80194b8:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80194bc:	f003 0203 	and.w	r2, r3, #3
 80194c0:	3902      	subs	r1, #2
 80194c2:	4411      	add	r1, r2
 80194c4:	f001 011f 	and.w	r1, r1, #31
 80194c8:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80194cc:	f361 0604 	bfi	r6, r1, #0, #5
 80194d0:	3802      	subs	r0, #2
 80194d2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80194d6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80194da:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80194de:	f360 164a 	bfi	r6, r0, #5, #6
 80194e2:	3b02      	subs	r3, #2
 80194e4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80194e8:	f002 031f 	and.w	r3, r2, #31
 80194ec:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80194f0:	2203      	movs	r2, #3
 80194f2:	f363 26cf 	bfi	r6, r3, #11, #5
 80194f6:	fb12 0303 	smlabb	r3, r2, r3, r0
 80194fa:	2207      	movs	r2, #7
 80194fc:	fb12 3301 	smlabb	r3, r2, r1, r3
 8019500:	9a03      	ldr	r2, [sp, #12]
 8019502:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8019506:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801950a:	809e      	strh	r6, [r3, #4]
 801950c:	e701      	b.n	8019312 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801950e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8019512:	45a8      	cmp	r8, r5
 8019514:	4647      	mov	r7, r8
 8019516:	bfa8      	it	ge
 8019518:	462f      	movge	r7, r5
 801951a:	2a02      	cmp	r2, #2
 801951c:	d154      	bne.n	80195c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801951e:	9b01      	ldr	r3, [sp, #4]
 8019520:	2bff      	cmp	r3, #255	@ 0xff
 8019522:	d01a      	beq.n	801955a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8019524:	eb0b 0307 	add.w	r3, fp, r7
 8019528:	2b40      	cmp	r3, #64	@ 0x40
 801952a:	dd16      	ble.n	801955a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801952c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8019530:	4649      	mov	r1, r9
 8019532:	9800      	ldr	r0, [sp, #0]
 8019534:	f7f4 fb71 	bl	800dc1a <_ZN8touchgfx5paint9flushLineEPmi>
 8019538:	465a      	mov	r2, fp
 801953a:	9b01      	ldr	r3, [sp, #4]
 801953c:	9900      	ldr	r1, [sp, #0]
 801953e:	4620      	mov	r0, r4
 8019540:	f7f4 fb76 	bl	800dc30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8019544:	9b00      	ldr	r3, [sp, #0]
 8019546:	461a      	mov	r2, r3
 8019548:	4b6c      	ldr	r3, [pc, #432]	@ (80196fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801954a:	429a      	cmp	r2, r3
 801954c:	bf0c      	ite	eq
 801954e:	4b6c      	ldreq	r3, [pc, #432]	@ (8019700 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 8019550:	4b6a      	ldrne	r3, [pc, #424]	@ (80196fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8019552:	9300      	str	r3, [sp, #0]
 8019554:	444c      	add	r4, r9
 8019556:	f04f 0b00 	mov.w	fp, #0
 801955a:	4652      	mov	r2, sl
 801955c:	2100      	movs	r1, #0
 801955e:	42a9      	cmp	r1, r5
 8019560:	da2c      	bge.n	80195bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8019562:	4694      	mov	ip, r2
 8019564:	f04f 0903 	mov.w	r9, #3
 8019568:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801956c:	7852      	ldrb	r2, [r2, #1]
 801956e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8019572:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8019576:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801957a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801957e:	f003 021f 	and.w	r2, r3, #31
 8019582:	fb19 000e 	smlabb	r0, r9, lr, r0
 8019586:	f04f 0e07 	mov.w	lr, #7
 801958a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801958e:	9a03      	ldr	r2, [sp, #12]
 8019590:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8019594:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019598:	42b9      	cmp	r1, r7
 801959a:	461e      	mov	r6, r3
 801959c:	8083      	strh	r3, [r0, #4]
 801959e:	da0a      	bge.n	80195b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80195a0:	9a01      	ldr	r2, [sp, #4]
 80195a2:	2aff      	cmp	r2, #255	@ 0xff
 80195a4:	bf15      	itete	ne
 80195a6:	9a00      	ldrne	r2, [sp, #0]
 80195a8:	8023      	strheq	r3, [r4, #0]
 80195aa:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80195ae:	3402      	addeq	r4, #2
 80195b0:	bf18      	it	ne
 80195b2:	f10b 0b01 	addne.w	fp, fp, #1
 80195b6:	3101      	adds	r1, #1
 80195b8:	4662      	mov	r2, ip
 80195ba:	e7d0      	b.n	801955e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80195bc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80195c0:	eba8 0807 	sub.w	r8, r8, r7
 80195c4:	1bed      	subs	r5, r5, r7
 80195c6:	e76c      	b.n	80194a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80195c8:	9b01      	ldr	r3, [sp, #4]
 80195ca:	2bff      	cmp	r3, #255	@ 0xff
 80195cc:	eba8 0807 	sub.w	r8, r8, r7
 80195d0:	eba5 0507 	sub.w	r5, r5, r7
 80195d4:	fa1f f986 	uxth.w	r9, r6
 80195d8:	d027      	beq.n	801962a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 80195da:	eb0b 0307 	add.w	r3, fp, r7
 80195de:	2b40      	cmp	r3, #64	@ 0x40
 80195e0:	dd18      	ble.n	8019614 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 80195e2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80195e6:	4619      	mov	r1, r3
 80195e8:	9800      	ldr	r0, [sp, #0]
 80195ea:	930c      	str	r3, [sp, #48]	@ 0x30
 80195ec:	f7f4 fb15 	bl	800dc1a <_ZN8touchgfx5paint9flushLineEPmi>
 80195f0:	465a      	mov	r2, fp
 80195f2:	9b01      	ldr	r3, [sp, #4]
 80195f4:	9900      	ldr	r1, [sp, #0]
 80195f6:	4620      	mov	r0, r4
 80195f8:	f7f4 fb1a 	bl	800dc30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80195fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80195fe:	441c      	add	r4, r3
 8019600:	9b00      	ldr	r3, [sp, #0]
 8019602:	461a      	mov	r2, r3
 8019604:	4b3d      	ldr	r3, [pc, #244]	@ (80196fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8019606:	429a      	cmp	r2, r3
 8019608:	bf0c      	ite	eq
 801960a:	4b3d      	ldreq	r3, [pc, #244]	@ (8019700 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801960c:	4b3b      	ldrne	r3, [pc, #236]	@ (80196fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801960e:	9300      	str	r3, [sp, #0]
 8019610:	f04f 0b00 	mov.w	fp, #0
 8019614:	9b00      	ldr	r3, [sp, #0]
 8019616:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801961a:	463b      	mov	r3, r7
 801961c:	2b00      	cmp	r3, #0
 801961e:	f43f af3f 	beq.w	80194a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8019622:	f822 9b02 	strh.w	r9, [r2], #2
 8019626:	3b01      	subs	r3, #1
 8019628:	e7f8      	b.n	801961c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801962a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801962e:	42a7      	cmp	r7, r4
 8019630:	f67f af37 	bls.w	80194a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8019634:	f824 9b02 	strh.w	r9, [r4], #2
 8019638:	e7f9      	b.n	801962e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801963a:	f1bb 0f00 	cmp.w	fp, #0
 801963e:	d00c      	beq.n	801965a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 8019640:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8019644:	4641      	mov	r1, r8
 8019646:	9800      	ldr	r0, [sp, #0]
 8019648:	f7f4 fae7 	bl	800dc1a <_ZN8touchgfx5paint9flushLineEPmi>
 801964c:	4620      	mov	r0, r4
 801964e:	9b01      	ldr	r3, [sp, #4]
 8019650:	9900      	ldr	r1, [sp, #0]
 8019652:	465a      	mov	r2, fp
 8019654:	f7f4 faec 	bl	800dc30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8019658:	4444      	add	r4, r8
 801965a:	4b2a      	ldr	r3, [pc, #168]	@ (8019704 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801965c:	9a02      	ldr	r2, [sp, #8]
 801965e:	881b      	ldrh	r3, [r3, #0]
 8019660:	1a9b      	subs	r3, r3, r2
 8019662:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019666:	9b06      	ldr	r3, [sp, #24]
 8019668:	3301      	adds	r3, #1
 801966a:	9306      	str	r3, [sp, #24]
 801966c:	9a06      	ldr	r2, [sp, #24]
 801966e:	9b04      	ldr	r3, [sp, #16]
 8019670:	4293      	cmp	r3, r2
 8019672:	d120      	bne.n	80196b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 8019674:	9b05      	ldr	r3, [sp, #20]
 8019676:	9a05      	ldr	r2, [sp, #20]
 8019678:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801967c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8019680:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019682:	f103 0801 	add.w	r8, r3, #1
 8019686:	9b08      	ldr	r3, [sp, #32]
 8019688:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801968c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801968e:	ba3f      	rev	r7, r7
 8019690:	2280      	movs	r2, #128	@ 0x80
 8019692:	2100      	movs	r1, #0
 8019694:	441f      	add	r7, r3
 8019696:	eba9 0905 	sub.w	r9, r9, r5
 801969a:	f00a fd70 	bl	802417e <memset>
 801969e:	2300      	movs	r3, #0
 80196a0:	fa1f f989 	uxth.w	r9, r9
 80196a4:	f04f 0600 	mov.w	r6, #0
 80196a8:	f8cd 8014 	str.w	r8, [sp, #20]
 80196ac:	9306      	str	r3, [sp, #24]
 80196ae:	f7f4 faad 	bl	800dc0c <_ZN8touchgfx5paint8tearDownEv>
 80196b2:	46ba      	mov	sl, r7
 80196b4:	e58a      	b.n	80191cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 80196b6:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 80196ba:	9b02      	ldr	r3, [sp, #8]
 80196bc:	eba9 0903 	sub.w	r9, r9, r3
 80196c0:	eba9 0505 	sub.w	r5, r9, r5
 80196c4:	fa1f f985 	uxth.w	r9, r5
 80196c8:	e7f1      	b.n	80196ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 80196ca:	4b0f      	ldr	r3, [pc, #60]	@ (8019708 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 80196cc:	6818      	ldr	r0, [r3, #0]
 80196ce:	6803      	ldr	r3, [r0, #0]
 80196d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80196d2:	4798      	blx	r3
 80196d4:	b013      	add	sp, #76	@ 0x4c
 80196d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80196da:	9b02      	ldr	r3, [sp, #8]
 80196dc:	9a02      	ldr	r2, [sp, #8]
 80196de:	42ab      	cmp	r3, r5
 80196e0:	bfa8      	it	ge
 80196e2:	462b      	movge	r3, r5
 80196e4:	eba2 0803 	sub.w	r8, r2, r3
 80196e8:	1aed      	subs	r5, r5, r3
 80196ea:	e626      	b.n	801933a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80196ec:	f108 38ff 	add.w	r8, r8, #4294967295
 80196f0:	fa1f f986 	uxth.w	r9, r6
 80196f4:	2500      	movs	r5, #0
 80196f6:	2701      	movs	r7, #1
 80196f8:	e76f      	b.n	80195da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 80196fa:	bf00      	nop
 80196fc:	20000100 	.word	0x20000100
 8019700:	20000200 	.word	0x20000200
 8019704:	20002f2e 	.word	0x20002f2e
 8019708:	20002f34 	.word	0x20002f34

0801970c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801970c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019710:	b08f      	sub	sp, #60	@ 0x3c
 8019712:	461c      	mov	r4, r3
 8019714:	9203      	str	r2, [sp, #12]
 8019716:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801971a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801971c:	9202      	str	r2, [sp, #8]
 801971e:	460f      	mov	r7, r1
 8019720:	2a00      	cmp	r2, #0
 8019722:	f000 8128 	beq.w	8019976 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8019726:	6820      	ldr	r0, [r4, #0]
 8019728:	6861      	ldr	r1, [r4, #4]
 801972a:	aa0a      	add	r2, sp, #40	@ 0x28
 801972c:	c203      	stmia	r2!, {r0, r1}
 801972e:	6818      	ldr	r0, [r3, #0]
 8019730:	6859      	ldr	r1, [r3, #4]
 8019732:	aa0c      	add	r2, sp, #48	@ 0x30
 8019734:	c203      	stmia	r2!, {r0, r1}
 8019736:	a80a      	add	r0, sp, #40	@ 0x28
 8019738:	f7f8 fb84 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801973c:	4621      	mov	r1, r4
 801973e:	a80c      	add	r0, sp, #48	@ 0x30
 8019740:	f7f8 fba8 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019744:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8019748:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801974c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8019750:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8019754:	bfde      	ittt	le
 8019756:	b2b3      	uxthle	r3, r6
 8019758:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801975c:	fb92 f3f3 	sdivle	r3, r2, r3
 8019760:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8019764:	bfc8      	it	gt
 8019766:	2301      	movgt	r3, #1
 8019768:	fb92 f1f3 	sdiv	r1, r2, r3
 801976c:	fa1f fc81 	uxth.w	ip, r1
 8019770:	fb0c 2413 	mls	r4, ip, r3, r2
 8019774:	fb14 f406 	smulbb	r4, r4, r6
 8019778:	441d      	add	r5, r3
 801977a:	4404      	add	r4, r0
 801977c:	4661      	mov	r1, ip
 801977e:	3d01      	subs	r5, #1
 8019780:	b2a4      	uxth	r4, r4
 8019782:	fb95 f5f3 	sdiv	r5, r5, r3
 8019786:	b121      	cbz	r1, 8019792 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 8019788:	9b03      	ldr	r3, [sp, #12]
 801978a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801978e:	ba1b      	rev	r3, r3
 8019790:	441f      	add	r7, r3
 8019792:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8019796:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801979a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801979e:	4418      	add	r0, r3
 80197a0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80197a4:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80197a8:	441a      	add	r2, r3
 80197aa:	4b74      	ldr	r3, [pc, #464]	@ (801997c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80197ac:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80197b0:	6818      	ldr	r0, [r3, #0]
 80197b2:	6803      	ldr	r3, [r0, #0]
 80197b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80197b6:	4798      	blx	r3
 80197b8:	4a71      	ldr	r2, [pc, #452]	@ (8019980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80197ba:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80197be:	8813      	ldrh	r3, [r2, #0]
 80197c0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80197c4:	9209      	str	r2, [sp, #36]	@ 0x24
 80197c6:	fb03 c101 	mla	r1, r3, r1, ip
 80197ca:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80197ce:	4373      	muls	r3, r6
 80197d0:	b2ad      	uxth	r5, r5
 80197d2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80197d6:	00ad      	lsls	r5, r5, #2
 80197d8:	2c00      	cmp	r4, #0
 80197da:	9304      	str	r3, [sp, #16]
 80197dc:	f105 0304 	add.w	r3, r5, #4
 80197e0:	9305      	str	r3, [sp, #20]
 80197e2:	bf0c      	ite	eq
 80197e4:	46c8      	moveq	r8, r9
 80197e6:	f04f 0800 	movne.w	r8, #0
 80197ea:	2300      	movs	r3, #0
 80197ec:	fa1f f888 	uxth.w	r8, r8
 80197f0:	9301      	str	r3, [sp, #4]
 80197f2:	9a04      	ldr	r2, [sp, #16]
 80197f4:	4282      	cmp	r2, r0
 80197f6:	f240 80b9 	bls.w	801996c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80197fa:	b95b      	cbnz	r3, 8019814 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 80197fc:	783a      	ldrb	r2, [r7, #0]
 80197fe:	0993      	lsrs	r3, r2, #6
 8019800:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019804:	9201      	str	r2, [sp, #4]
 8019806:	1e5a      	subs	r2, r3, #1
 8019808:	2a02      	cmp	r2, #2
 801980a:	bf8d      	iteet	hi
 801980c:	787b      	ldrbhi	r3, [r7, #1]
 801980e:	3701      	addls	r7, #1
 8019810:	b29b      	uxthls	r3, r3
 8019812:	3702      	addhi	r7, #2
 8019814:	b184      	cbz	r4, 8019838 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 8019816:	429c      	cmp	r4, r3
 8019818:	bf95      	itete	ls
 801981a:	1b1c      	subls	r4, r3, r4
 801981c:	1ae4      	subhi	r4, r4, r3
 801981e:	fa1f fa84 	uxthls.w	sl, r4
 8019822:	b2a4      	uxthhi	r4, r4
 8019824:	bf87      	ittee	hi
 8019826:	46c4      	movhi	ip, r8
 8019828:	f04f 0a00 	movhi.w	sl, #0
 801982c:	fa1f fc89 	uxthls.w	ip, r9
 8019830:	2400      	movls	r4, #0
 8019832:	4653      	mov	r3, sl
 8019834:	46e0      	mov	r8, ip
 8019836:	e7dc      	b.n	80197f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 8019838:	2204      	movs	r2, #4
 801983a:	4615      	mov	r5, r2
 801983c:	9905      	ldr	r1, [sp, #20]
 801983e:	9a01      	ldr	r2, [sp, #4]
 8019840:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019844:	9903      	ldr	r1, [sp, #12]
 8019846:	588a      	ldr	r2, [r1, r2]
 8019848:	4543      	cmp	r3, r8
 801984a:	bf27      	ittee	cs
 801984c:	eba3 0a08 	subcs.w	sl, r3, r8
 8019850:	46c6      	movcs	lr, r8
 8019852:	eba8 0c03 	subcc.w	ip, r8, r3
 8019856:	469e      	movcc	lr, r3
 8019858:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801985c:	bf27      	ittee	cs
 801985e:	fa1f fa8a 	uxthcs.w	sl, sl
 8019862:	46a4      	movcs	ip, r4
 8019864:	fa1f fc8c 	uxthcc.w	ip, ip
 8019868:	46a2      	movcc	sl, r4
 801986a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801986e:	2900      	cmp	r1, #0
 8019870:	d066      	beq.n	8019940 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 8019872:	29ff      	cmp	r1, #255	@ 0xff
 8019874:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8019878:	d114      	bne.n	80198a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801987a:	9d02      	ldr	r5, [sp, #8]
 801987c:	2dff      	cmp	r5, #255	@ 0xff
 801987e:	d111      	bne.n	80198a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8019880:	0951      	lsrs	r1, r2, #5
 8019882:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019886:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801988a:	f026 0607 	bic.w	r6, r6, #7
 801988e:	430e      	orrs	r6, r1
 8019890:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019894:	4316      	orrs	r6, r2
 8019896:	b2b6      	uxth	r6, r6
 8019898:	4486      	add	lr, r0
 801989a:	4586      	cmp	lr, r0
 801989c:	d051      	beq.n	8019942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801989e:	f820 6b02 	strh.w	r6, [r0], #2
 80198a2:	e7fa      	b.n	801989a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80198a4:	9d02      	ldr	r5, [sp, #8]
 80198a6:	4369      	muls	r1, r5
 80198a8:	1c4d      	adds	r5, r1, #1
 80198aa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80198ae:	122d      	asrs	r5, r5, #8
 80198b0:	ea6f 0b05 	mvn.w	fp, r5
 80198b4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80198b8:	b2ad      	uxth	r5, r5
 80198ba:	b2f6      	uxtb	r6, r6
 80198bc:	b2d2      	uxtb	r2, r2
 80198be:	fb11 f105 	smulbb	r1, r1, r5
 80198c2:	fb16 f605 	smulbb	r6, r6, r5
 80198c6:	fb12 f205 	smulbb	r2, r2, r5
 80198ca:	b289      	uxth	r1, r1
 80198cc:	b2b6      	uxth	r6, r6
 80198ce:	b292      	uxth	r2, r2
 80198d0:	9106      	str	r1, [sp, #24]
 80198d2:	9607      	str	r6, [sp, #28]
 80198d4:	9208      	str	r2, [sp, #32]
 80198d6:	4486      	add	lr, r0
 80198d8:	fa5f fb8b 	uxtb.w	fp, fp
 80198dc:	4586      	cmp	lr, r0
 80198de:	d030      	beq.n	8019942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80198e0:	8802      	ldrh	r2, [r0, #0]
 80198e2:	9906      	ldr	r1, [sp, #24]
 80198e4:	1216      	asrs	r6, r2, #8
 80198e6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80198ea:	10d5      	asrs	r5, r2, #3
 80198ec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80198f0:	fb06 160b 	mla	r6, r6, fp, r1
 80198f4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80198f8:	9907      	ldr	r1, [sp, #28]
 80198fa:	00d2      	lsls	r2, r2, #3
 80198fc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8019900:	fb05 150b 	mla	r5, r5, fp, r1
 8019904:	b2d2      	uxtb	r2, r2
 8019906:	9908      	ldr	r1, [sp, #32]
 8019908:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801990c:	b2b6      	uxth	r6, r6
 801990e:	fb02 120b 	mla	r2, r2, fp, r1
 8019912:	b292      	uxth	r2, r2
 8019914:	1c71      	adds	r1, r6, #1
 8019916:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801991a:	1c51      	adds	r1, r2, #1
 801991c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019920:	b2ad      	uxth	r5, r5
 8019922:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019926:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801992a:	4316      	orrs	r6, r2
 801992c:	1c6a      	adds	r2, r5, #1
 801992e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8019932:	096d      	lsrs	r5, r5, #5
 8019934:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019938:	432e      	orrs	r6, r5
 801993a:	f820 6b02 	strh.w	r6, [r0], #2
 801993e:	e7cd      	b.n	80198dc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 8019940:	4470      	add	r0, lr
 8019942:	4543      	cmp	r3, r8
 8019944:	f4ff af75 	bcc.w	8019832 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 8019948:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801994c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801994e:	fa1f fc89 	uxth.w	ip, r9
 8019952:	eba4 040c 	sub.w	r4, r4, ip
 8019956:	881b      	ldrh	r3, [r3, #0]
 8019958:	b2a4      	uxth	r4, r4
 801995a:	2c00      	cmp	r4, #0
 801995c:	eba3 0309 	sub.w	r3, r3, r9
 8019960:	bf18      	it	ne
 8019962:	f04f 0c00 	movne.w	ip, #0
 8019966:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801996a:	e762      	b.n	8019832 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801996c:	4b03      	ldr	r3, [pc, #12]	@ (801997c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801996e:	6818      	ldr	r0, [r3, #0]
 8019970:	6803      	ldr	r3, [r0, #0]
 8019972:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019974:	4798      	blx	r3
 8019976:	b00f      	add	sp, #60	@ 0x3c
 8019978:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801997c:	20002f34 	.word	0x20002f34
 8019980:	20002f2e 	.word	0x20002f2e

08019984 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019988:	b093      	sub	sp, #76	@ 0x4c
 801998a:	461c      	mov	r4, r3
 801998c:	9205      	str	r2, [sp, #20]
 801998e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 8019992:	9101      	str	r1, [sp, #4]
 8019994:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019996:	9202      	str	r2, [sp, #8]
 8019998:	2a00      	cmp	r2, #0
 801999a:	f000 812c 	beq.w	8019bf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801999e:	6820      	ldr	r0, [r4, #0]
 80199a0:	6861      	ldr	r1, [r4, #4]
 80199a2:	aa0e      	add	r2, sp, #56	@ 0x38
 80199a4:	c203      	stmia	r2!, {r0, r1}
 80199a6:	6818      	ldr	r0, [r3, #0]
 80199a8:	6859      	ldr	r1, [r3, #4]
 80199aa:	aa10      	add	r2, sp, #64	@ 0x40
 80199ac:	c203      	stmia	r2!, {r0, r1}
 80199ae:	a80e      	add	r0, sp, #56	@ 0x38
 80199b0:	f7f8 fa48 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80199b4:	4621      	mov	r1, r4
 80199b6:	a810      	add	r0, sp, #64	@ 0x40
 80199b8:	f7f8 fa6c 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80199bc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80199c0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80199c4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80199c8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80199cc:	bfde      	ittt	le
 80199ce:	b2b3      	uxthle	r3, r6
 80199d0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80199d4:	fb92 f3f3 	sdivle	r3, r2, r3
 80199d8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80199dc:	bfc8      	it	gt
 80199de:	2301      	movgt	r3, #1
 80199e0:	fb92 f1f3 	sdiv	r1, r2, r3
 80199e4:	fa1f fc81 	uxth.w	ip, r1
 80199e8:	fb0c 2413 	mls	r4, ip, r3, r2
 80199ec:	fb14 f406 	smulbb	r4, r4, r6
 80199f0:	441d      	add	r5, r3
 80199f2:	4404      	add	r4, r0
 80199f4:	4661      	mov	r1, ip
 80199f6:	3d01      	subs	r5, #1
 80199f8:	b2a4      	uxth	r4, r4
 80199fa:	fb95 f5f3 	sdiv	r5, r5, r3
 80199fe:	b131      	cbz	r1, 8019a0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 8019a00:	9b05      	ldr	r3, [sp, #20]
 8019a02:	9901      	ldr	r1, [sp, #4]
 8019a04:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8019a08:	ba1b      	rev	r3, r3
 8019a0a:	4419      	add	r1, r3
 8019a0c:	9101      	str	r1, [sp, #4]
 8019a0e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8019a12:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8019a16:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8019a1a:	4418      	add	r0, r3
 8019a1c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8019a20:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8019a24:	441a      	add	r2, r3
 8019a26:	4b75      	ldr	r3, [pc, #468]	@ (8019bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8019a28:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8019a2c:	6818      	ldr	r0, [r3, #0]
 8019a2e:	6803      	ldr	r3, [r0, #0]
 8019a30:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019a32:	4798      	blx	r3
 8019a34:	4972      	ldr	r1, [pc, #456]	@ (8019c00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8019a36:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8019a3a:	880b      	ldrh	r3, [r1, #0]
 8019a3c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8019a40:	910d      	str	r1, [sp, #52]	@ 0x34
 8019a42:	fb03 c202 	mla	r2, r3, r2, ip
 8019a46:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8019a4a:	4373      	muls	r3, r6
 8019a4c:	b2ad      	uxth	r5, r5
 8019a4e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019a52:	00ad      	lsls	r5, r5, #2
 8019a54:	9308      	str	r3, [sp, #32]
 8019a56:	1d2b      	adds	r3, r5, #4
 8019a58:	9309      	str	r3, [sp, #36]	@ 0x24
 8019a5a:	9b02      	ldr	r3, [sp, #8]
 8019a5c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8019a60:	9106      	str	r1, [sp, #24]
 8019a62:	43da      	mvns	r2, r3
 8019a64:	2c00      	cmp	r4, #0
 8019a66:	bf0c      	ite	eq
 8019a68:	46dc      	moveq	ip, fp
 8019a6a:	f04f 0c00 	movne.w	ip, #0
 8019a6e:	2300      	movs	r3, #0
 8019a70:	b2d2      	uxtb	r2, r2
 8019a72:	fa1f fc8c 	uxth.w	ip, ip
 8019a76:	9303      	str	r3, [sp, #12]
 8019a78:	9207      	str	r2, [sp, #28]
 8019a7a:	9a08      	ldr	r2, [sp, #32]
 8019a7c:	4282      	cmp	r2, r0
 8019a7e:	f240 80b5 	bls.w	8019bec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 8019a82:	b963      	cbnz	r3, 8019a9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019a84:	9b01      	ldr	r3, [sp, #4]
 8019a86:	781a      	ldrb	r2, [r3, #0]
 8019a88:	0993      	lsrs	r3, r2, #6
 8019a8a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8019a8e:	9203      	str	r2, [sp, #12]
 8019a90:	1e5a      	subs	r2, r3, #1
 8019a92:	2a02      	cmp	r2, #2
 8019a94:	d815      	bhi.n	8019ac2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 8019a96:	9a01      	ldr	r2, [sp, #4]
 8019a98:	3201      	adds	r2, #1
 8019a9a:	9201      	str	r2, [sp, #4]
 8019a9c:	b29b      	uxth	r3, r3
 8019a9e:	b1b4      	cbz	r4, 8019ace <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 8019aa0:	429c      	cmp	r4, r3
 8019aa2:	bf95      	itete	ls
 8019aa4:	1b1c      	subls	r4, r3, r4
 8019aa6:	1ae4      	subhi	r4, r4, r3
 8019aa8:	fa1f f884 	uxthls.w	r8, r4
 8019aac:	b2a4      	uxthhi	r4, r4
 8019aae:	bf87      	ittee	hi
 8019ab0:	4666      	movhi	r6, ip
 8019ab2:	f04f 0800 	movhi.w	r8, #0
 8019ab6:	fa1f f68b 	uxthls.w	r6, fp
 8019aba:	2400      	movls	r4, #0
 8019abc:	4643      	mov	r3, r8
 8019abe:	46b4      	mov	ip, r6
 8019ac0:	e7db      	b.n	8019a7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 8019ac2:	9a01      	ldr	r2, [sp, #4]
 8019ac4:	9b01      	ldr	r3, [sp, #4]
 8019ac6:	3202      	adds	r2, #2
 8019ac8:	785b      	ldrb	r3, [r3, #1]
 8019aca:	9201      	str	r2, [sp, #4]
 8019acc:	e7e7      	b.n	8019a9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 8019ace:	2203      	movs	r2, #3
 8019ad0:	4615      	mov	r5, r2
 8019ad2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8019ad4:	9a03      	ldr	r2, [sp, #12]
 8019ad6:	fb15 1202 	smlabb	r2, r5, r2, r1
 8019ada:	9905      	ldr	r1, [sp, #20]
 8019adc:	4563      	cmp	r3, ip
 8019ade:	eb01 0502 	add.w	r5, r1, r2
 8019ae2:	9902      	ldr	r1, [sp, #8]
 8019ae4:	bf29      	itett	cs
 8019ae6:	eba3 080c 	subcs.w	r8, r3, ip
 8019aea:	ebac 0603 	subcc.w	r6, ip, r3
 8019aee:	fa1f f888 	uxthcs.w	r8, r8
 8019af2:	46e1      	movcs	r9, ip
 8019af4:	bf2f      	iteee	cs
 8019af6:	4626      	movcs	r6, r4
 8019af8:	b2b6      	uxthcc	r6, r6
 8019afa:	4699      	movcc	r9, r3
 8019afc:	46a0      	movcc	r8, r4
 8019afe:	29ff      	cmp	r1, #255	@ 0xff
 8019b00:	d04a      	beq.n	8019b98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 8019b02:	9f06      	ldr	r7, [sp, #24]
 8019b04:	78a9      	ldrb	r1, [r5, #2]
 8019b06:	9004      	str	r0, [sp, #16]
 8019b08:	4379      	muls	r1, r7
 8019b0a:	910a      	str	r1, [sp, #40]	@ 0x28
 8019b0c:	7869      	ldrb	r1, [r5, #1]
 8019b0e:	4379      	muls	r1, r7
 8019b10:	910b      	str	r1, [sp, #44]	@ 0x2c
 8019b12:	9905      	ldr	r1, [sp, #20]
 8019b14:	5c8a      	ldrb	r2, [r1, r2]
 8019b16:	437a      	muls	r2, r7
 8019b18:	920c      	str	r2, [sp, #48]	@ 0x30
 8019b1a:	46ca      	mov	sl, r9
 8019b1c:	f1ba 0f00 	cmp.w	sl, #0
 8019b20:	d03d      	beq.n	8019b9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 8019b22:	9a04      	ldr	r2, [sp, #16]
 8019b24:	9f07      	ldr	r7, [sp, #28]
 8019b26:	8812      	ldrh	r2, [r2, #0]
 8019b28:	1215      	asrs	r5, r2, #8
 8019b2a:	46be      	mov	lr, r7
 8019b2c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019b30:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8019b32:	10d1      	asrs	r1, r2, #3
 8019b34:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8019b38:	fb05 750e 	mla	r5, r5, lr, r7
 8019b3c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019b40:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8019b42:	00d2      	lsls	r2, r2, #3
 8019b44:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019b48:	fb01 710e 	mla	r1, r1, lr, r7
 8019b4c:	b2d2      	uxtb	r2, r2
 8019b4e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8019b50:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8019b54:	b2ad      	uxth	r5, r5
 8019b56:	fb02 720e 	mla	r2, r2, lr, r7
 8019b5a:	b292      	uxth	r2, r2
 8019b5c:	f105 0e01 	add.w	lr, r5, #1
 8019b60:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8019b64:	f102 0e01 	add.w	lr, r2, #1
 8019b68:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8019b6c:	b289      	uxth	r1, r1
 8019b6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019b72:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8019b76:	4315      	orrs	r5, r2
 8019b78:	1c4a      	adds	r2, r1, #1
 8019b7a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019b7e:	0949      	lsrs	r1, r1, #5
 8019b80:	9a04      	ldr	r2, [sp, #16]
 8019b82:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019b86:	430d      	orrs	r5, r1
 8019b88:	f822 5b02 	strh.w	r5, [r2], #2
 8019b8c:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019b90:	9204      	str	r2, [sp, #16]
 8019b92:	fa1f fa8a 	uxth.w	sl, sl
 8019b96:	e7c1      	b.n	8019b1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 8019b98:	4649      	mov	r1, r9
 8019b9a:	4686      	mov	lr, r0
 8019b9c:	b999      	cbnz	r1, 8019bc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 8019b9e:	4563      	cmp	r3, ip
 8019ba0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8019ba4:	d38a      	bcc.n	8019abc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8019ba6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8019baa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019bac:	fa1f f68b 	uxth.w	r6, fp
 8019bb0:	1ba4      	subs	r4, r4, r6
 8019bb2:	881b      	ldrh	r3, [r3, #0]
 8019bb4:	b2a4      	uxth	r4, r4
 8019bb6:	2c00      	cmp	r4, #0
 8019bb8:	eba3 030b 	sub.w	r3, r3, fp
 8019bbc:	bf18      	it	ne
 8019bbe:	2600      	movne	r6, #0
 8019bc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019bc4:	e77a      	b.n	8019abc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 8019bc6:	78aa      	ldrb	r2, [r5, #2]
 8019bc8:	4f0e      	ldr	r7, [pc, #56]	@ (8019c04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8019bca:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8019bce:	786a      	ldrb	r2, [r5, #1]
 8019bd0:	00d2      	lsls	r2, r2, #3
 8019bd2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019bd6:	ea4a 0202 	orr.w	r2, sl, r2
 8019bda:	f895 a000 	ldrb.w	sl, [r5]
 8019bde:	3901      	subs	r1, #1
 8019be0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8019be4:	f82e 2b02 	strh.w	r2, [lr], #2
 8019be8:	b289      	uxth	r1, r1
 8019bea:	e7d7      	b.n	8019b9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8019bec:	4b03      	ldr	r3, [pc, #12]	@ (8019bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 8019bee:	6818      	ldr	r0, [r3, #0]
 8019bf0:	6803      	ldr	r3, [r0, #0]
 8019bf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019bf4:	4798      	blx	r3
 8019bf6:	b013      	add	sp, #76	@ 0x4c
 8019bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019bfc:	20002f34 	.word	0x20002f34
 8019c00:	20002f2e 	.word	0x20002f2e
 8019c04:	fffff800 	.word	0xfffff800

08019c08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8019c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c0c:	b09d      	sub	sp, #116	@ 0x74
 8019c0e:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8019c12:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8019c16:	920e      	str	r2, [sp, #56]	@ 0x38
 8019c18:	461c      	mov	r4, r3
 8019c1a:	4683      	mov	fp, r0
 8019c1c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019c1e:	2a00      	cmp	r2, #0
 8019c20:	f000 81e0 	beq.w	8019fe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 8019c24:	6820      	ldr	r0, [r4, #0]
 8019c26:	6861      	ldr	r1, [r4, #4]
 8019c28:	aa18      	add	r2, sp, #96	@ 0x60
 8019c2a:	c203      	stmia	r2!, {r0, r1}
 8019c2c:	6818      	ldr	r0, [r3, #0]
 8019c2e:	6859      	ldr	r1, [r3, #4]
 8019c30:	aa1a      	add	r2, sp, #104	@ 0x68
 8019c32:	c203      	stmia	r2!, {r0, r1}
 8019c34:	a818      	add	r0, sp, #96	@ 0x60
 8019c36:	f7f8 f905 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019c3a:	4621      	mov	r1, r4
 8019c3c:	a81a      	add	r0, sp, #104	@ 0x68
 8019c3e:	f7f8 f929 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019c42:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8019c46:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8019c4a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8019c4e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8019c52:	bfd7      	itett	le
 8019c54:	b29a      	uxthle	r2, r3
 8019c56:	2201      	movgt	r2, #1
 8019c58:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8019c5c:	fb91 f2f2 	sdivle	r2, r1, r2
 8019c60:	9202      	str	r2, [sp, #8]
 8019c62:	9802      	ldr	r0, [sp, #8]
 8019c64:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8019c68:	fb92 f0f0 	sdiv	r0, r2, r0
 8019c6c:	b280      	uxth	r0, r0
 8019c6e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8019c70:	9902      	ldr	r1, [sp, #8]
 8019c72:	9802      	ldr	r0, [sp, #8]
 8019c74:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8019c76:	440c      	add	r4, r1
 8019c78:	fb05 2510 	mls	r5, r5, r0, r2
 8019c7c:	fb15 f503 	smulbb	r5, r5, r3
 8019c80:	3c01      	subs	r4, #1
 8019c82:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8019c86:	fb94 f4f1 	sdiv	r4, r4, r1
 8019c8a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8019c8e:	440d      	add	r5, r1
 8019c90:	4419      	add	r1, r3
 8019c92:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8019c96:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8019c9a:	441a      	add	r2, r3
 8019c9c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8019ca0:	9306      	str	r3, [sp, #24]
 8019ca2:	4bb3      	ldr	r3, [pc, #716]	@ (8019f70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 8019ca4:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8019ca8:	6818      	ldr	r0, [r3, #0]
 8019caa:	6803      	ldr	r3, [r0, #0]
 8019cac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019cae:	4798      	blx	r3
 8019cb0:	4bb0      	ldr	r3, [pc, #704]	@ (8019f74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 8019cb2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8019cb6:	881a      	ldrh	r2, [r3, #0]
 8019cb8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8019cbc:	9316      	str	r3, [sp, #88]	@ 0x58
 8019cbe:	fb02 7101 	mla	r1, r2, r1, r7
 8019cc2:	3401      	adds	r4, #1
 8019cc4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8019cc8:	b2a4      	uxth	r4, r4
 8019cca:	4356      	muls	r6, r2
 8019ccc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8019cd0:	00a4      	lsls	r4, r4, #2
 8019cd2:	920a      	str	r2, [sp, #40]	@ 0x28
 8019cd4:	1d22      	adds	r2, r4, #4
 8019cd6:	b2ad      	uxth	r5, r5
 8019cd8:	9213      	str	r2, [sp, #76]	@ 0x4c
 8019cda:	4ba7      	ldr	r3, [pc, #668]	@ (8019f78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8019cdc:	9a06      	ldr	r2, [sp, #24]
 8019cde:	2d00      	cmp	r5, #0
 8019ce0:	bf0c      	ite	eq
 8019ce2:	4611      	moveq	r1, r2
 8019ce4:	2100      	movne	r1, #0
 8019ce6:	2200      	movs	r2, #0
 8019ce8:	eba3 030b 	sub.w	r3, r3, fp
 8019cec:	b289      	uxth	r1, r1
 8019cee:	920d      	str	r2, [sp, #52]	@ 0x34
 8019cf0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019cf2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019cf4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019cf6:	fa12 f383 	uxtah	r3, r2, r3
 8019cfa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019cfc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8019d00:	3304      	adds	r3, #4
 8019d02:	9308      	str	r3, [sp, #32]
 8019d04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019d06:	4543      	cmp	r3, r8
 8019d08:	f240 8167 	bls.w	8019fda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 8019d0c:	9a02      	ldr	r2, [sp, #8]
 8019d0e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8019d12:	fbb5 f3f3 	udiv	r3, r5, r3
 8019d16:	1ad3      	subs	r3, r2, r3
 8019d18:	b29b      	uxth	r3, r3
 8019d1a:	9314      	str	r3, [sp, #80]	@ 0x50
 8019d1c:	9b08      	ldr	r3, [sp, #32]
 8019d1e:	9808      	ldr	r0, [sp, #32]
 8019d20:	785a      	ldrb	r2, [r3, #1]
 8019d22:	789b      	ldrb	r3, [r3, #2]
 8019d24:	7800      	ldrb	r0, [r0, #0]
 8019d26:	9010      	str	r0, [sp, #64]	@ 0x40
 8019d28:	021b      	lsls	r3, r3, #8
 8019d2a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8019d2e:	9a08      	ldr	r2, [sp, #32]
 8019d30:	78d2      	ldrb	r2, [r2, #3]
 8019d32:	4313      	orrs	r3, r2
 8019d34:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019d36:	3001      	adds	r0, #1
 8019d38:	441a      	add	r2, r3
 8019d3a:	9007      	str	r0, [sp, #28]
 8019d3c:	1c50      	adds	r0, r2, #1
 8019d3e:	9005      	str	r0, [sp, #20]
 8019d40:	7852      	ldrb	r2, [r2, #1]
 8019d42:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019d44:	0212      	lsls	r2, r2, #8
 8019d46:	5cc3      	ldrb	r3, [r0, r3]
 8019d48:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8019d4c:	431a      	orrs	r2, r3
 8019d4e:	b293      	uxth	r3, r2
 8019d50:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019d52:	2300      	movs	r3, #0
 8019d54:	9309      	str	r3, [sp, #36]	@ 0x24
 8019d56:	2301      	movs	r3, #1
 8019d58:	9301      	str	r3, [sp, #4]
 8019d5a:	9304      	str	r3, [sp, #16]
 8019d5c:	2300      	movs	r3, #0
 8019d5e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8019d62:	9303      	str	r3, [sp, #12]
 8019d64:	f04f 0e01 	mov.w	lr, #1
 8019d68:	2d00      	cmp	r5, #0
 8019d6a:	d07c      	beq.n	8019e66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 8019d6c:	45ae      	cmp	lr, r5
 8019d6e:	d26b      	bcs.n	8019e48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8019d70:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8019d72:	eba5 050e 	sub.w	r5, r5, lr
 8019d76:	4543      	cmp	r3, r8
 8019d78:	b2ad      	uxth	r5, r5
 8019d7a:	460c      	mov	r4, r1
 8019d7c:	d802      	bhi.n	8019d84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 8019d7e:	e070      	b.n	8019e62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8019d80:	2b00      	cmp	r3, #0
 8019d82:	d15c      	bne.n	8019e3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8019d84:	9b05      	ldr	r3, [sp, #20]
 8019d86:	9a04      	ldr	r2, [sp, #16]
 8019d88:	785b      	ldrb	r3, [r3, #1]
 8019d8a:	9904      	ldr	r1, [sp, #16]
 8019d8c:	f1c2 0207 	rsb	r2, r2, #7
 8019d90:	4093      	lsls	r3, r2
 8019d92:	005b      	lsls	r3, r3, #1
 8019d94:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8019d98:	9b05      	ldr	r3, [sp, #20]
 8019d9a:	781b      	ldrb	r3, [r3, #0]
 8019d9c:	410b      	asrs	r3, r1
 8019d9e:	3101      	adds	r1, #1
 8019da0:	b2c9      	uxtb	r1, r1
 8019da2:	2908      	cmp	r1, #8
 8019da4:	9104      	str	r1, [sp, #16]
 8019da6:	9905      	ldr	r1, [sp, #20]
 8019da8:	bf0a      	itet	eq
 8019daa:	3102      	addeq	r1, #2
 8019dac:	3101      	addne	r1, #1
 8019dae:	9105      	streq	r1, [sp, #20]
 8019db0:	b2db      	uxtb	r3, r3
 8019db2:	bf0a      	itet	eq
 8019db4:	2100      	moveq	r1, #0
 8019db6:	9105      	strne	r1, [sp, #20]
 8019db8:	9104      	streq	r1, [sp, #16]
 8019dba:	4313      	orrs	r3, r2
 8019dbc:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8019dbe:	b29a      	uxth	r2, r3
 8019dc0:	4291      	cmp	r1, r2
 8019dc2:	d30a      	bcc.n	8019dda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8019dc4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8019dc8:	2301      	movs	r3, #1
 8019dca:	9907      	ldr	r1, [sp, #28]
 8019dcc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8019dd0:	d30f      	bcc.n	8019df2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8019dd2:	2100      	movs	r1, #0
 8019dd4:	9301      	str	r3, [sp, #4]
 8019dd6:	9103      	str	r1, [sp, #12]
 8019dd8:	e032      	b.n	8019e40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 8019dda:	9b07      	ldr	r3, [sp, #28]
 8019ddc:	429a      	cmp	r2, r3
 8019dde:	d318      	bcc.n	8019e12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 8019de0:	9b01      	ldr	r3, [sp, #4]
 8019de2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8019de6:	445b      	add	r3, fp
 8019de8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8019dec:	9b01      	ldr	r3, [sp, #4]
 8019dee:	3301      	adds	r3, #1
 8019df0:	b29b      	uxth	r3, r3
 8019df2:	9907      	ldr	r1, [sp, #28]
 8019df4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8019df8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019dfc:	7108      	strb	r0, [r1, #4]
 8019dfe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8019e00:	80c8      	strh	r0, [r1, #6]
 8019e02:	9801      	ldr	r0, [sp, #4]
 8019e04:	3001      	adds	r0, #1
 8019e06:	7148      	strb	r0, [r1, #5]
 8019e08:	9907      	ldr	r1, [sp, #28]
 8019e0a:	3101      	adds	r1, #1
 8019e0c:	b289      	uxth	r1, r1
 8019e0e:	9107      	str	r1, [sp, #28]
 8019e10:	e7df      	b.n	8019dd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8019e12:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8019e16:	4611      	mov	r1, r2
 8019e18:	795b      	ldrb	r3, [r3, #5]
 8019e1a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8019e1e:	4458      	add	r0, fp
 8019e20:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8019e22:	4406      	add	r6, r0
 8019e24:	2e00      	cmp	r6, #0
 8019e26:	dd06      	ble.n	8019e36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 8019e28:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8019e2c:	790e      	ldrb	r6, [r1, #4]
 8019e2e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8019e32:	88c9      	ldrh	r1, [r1, #6]
 8019e34:	e7f4      	b.n	8019e20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 8019e36:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8019e3a:	b29b      	uxth	r3, r3
 8019e3c:	e7c5      	b.n	8019dca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 8019e3e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019e40:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019e42:	4621      	mov	r1, r4
 8019e44:	469e      	mov	lr, r3
 8019e46:	e78f      	b.n	8019d68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 8019e48:	9a03      	ldr	r2, [sp, #12]
 8019e4a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8019e4e:	442a      	add	r2, r5
 8019e50:	ebae 0305 	sub.w	r3, lr, r5
 8019e54:	b292      	uxth	r2, r2
 8019e56:	b29b      	uxth	r3, r3
 8019e58:	9203      	str	r2, [sp, #12]
 8019e5a:	2500      	movs	r5, #0
 8019e5c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8019e5e:	4542      	cmp	r2, r8
 8019e60:	d88e      	bhi.n	8019d80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 8019e62:	4621      	mov	r1, r4
 8019e64:	e74e      	b.n	8019d04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 8019e66:	458e      	cmp	lr, r1
 8019e68:	bf29      	itett	cs
 8019e6a:	ebae 0301 	subcs.w	r3, lr, r1
 8019e6e:	eba1 040e 	subcc.w	r4, r1, lr
 8019e72:	b29b      	uxthcs	r3, r3
 8019e74:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8019e76:	bf2f      	iteee	cs
 8019e78:	462c      	movcs	r4, r5
 8019e7a:	b2a4      	uxthcc	r4, r4
 8019e7c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8019e80:	462b      	movcc	r3, r5
 8019e82:	f04f 0900 	mov.w	r9, #0
 8019e86:	9a03      	ldr	r2, [sp, #12]
 8019e88:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8019e8a:	444a      	add	r2, r9
 8019e8c:	4548      	cmp	r0, r9
 8019e8e:	b292      	uxth	r2, r2
 8019e90:	d074      	beq.n	8019f7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 8019e92:	445a      	add	r2, fp
 8019e94:	2004      	movs	r0, #4
 8019e96:	4605      	mov	r5, r0
 8019e98:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8019e9c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019e9e:	fb15 0202 	smlabb	r2, r5, r2, r0
 8019ea2:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019ea4:	5880      	ldr	r0, [r0, r2]
 8019ea6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8019eaa:	d014      	beq.n	8019ed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8019eac:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8019eb0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8019eb4:	d112      	bne.n	8019edc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8019eb6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019eb8:	2aff      	cmp	r2, #255	@ 0xff
 8019eba:	d10f      	bne.n	8019edc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 8019ebc:	0942      	lsrs	r2, r0, #5
 8019ebe:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8019ec2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019ec6:	f025 0507 	bic.w	r5, r5, #7
 8019eca:	4315      	orrs	r5, r2
 8019ecc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019ed0:	4305      	orrs	r5, r0
 8019ed2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8019ed6:	f109 0901 	add.w	r9, r9, #1
 8019eda:	e7d4      	b.n	8019e86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 8019edc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8019ee0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019ee4:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8019ee8:	9215      	str	r2, [sp, #84]	@ 0x54
 8019eea:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019eec:	fb02 fa0a 	mul.w	sl, r2, sl
 8019ef0:	f10a 0201 	add.w	r2, sl, #1
 8019ef4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8019ef8:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019efc:	1212      	asrs	r2, r2, #8
 8019efe:	fa1f fa82 	uxth.w	sl, r2
 8019f02:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8019f06:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019f0a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019f0e:	43d2      	mvns	r2, r2
 8019f10:	b2d2      	uxtb	r2, r2
 8019f12:	fb16 f60a 	smulbb	r6, r6, sl
 8019f16:	fa5f fc8c 	uxtb.w	ip, ip
 8019f1a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8019f1e:	b2c0      	uxtb	r0, r0
 8019f20:	fb07 6702 	mla	r7, r7, r2, r6
 8019f24:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8019f28:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8019f2a:	fb10 f00a 	smulbb	r0, r0, sl
 8019f2e:	fb0c 0002 	mla	r0, ip, r2, r0
 8019f32:	b2ed      	uxtb	r5, r5
 8019f34:	b2bf      	uxth	r7, r7
 8019f36:	fb15 f50a 	smulbb	r5, r5, sl
 8019f3a:	b280      	uxth	r0, r0
 8019f3c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8019f40:	fb06 5602 	mla	r6, r6, r2, r5
 8019f44:	1c7a      	adds	r2, r7, #1
 8019f46:	1c45      	adds	r5, r0, #1
 8019f48:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019f4c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019f50:	b2b6      	uxth	r6, r6
 8019f52:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019f56:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019f5a:	432f      	orrs	r7, r5
 8019f5c:	1c75      	adds	r5, r6, #1
 8019f5e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019f62:	096d      	lsrs	r5, r5, #5
 8019f64:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019f68:	432f      	orrs	r7, r5
 8019f6a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8019f6e:	e7b2      	b.n	8019ed6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 8019f70:	20002f34 	.word	0x20002f34
 8019f74:	20002f2e 	.word	0x20002f2e
 8019f78:	fffff7fb 	.word	0xfffff7fb
 8019f7c:	9203      	str	r2, [sp, #12]
 8019f7e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8019f80:	458e      	cmp	lr, r1
 8019f82:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019f86:	f4ff af68 	bcc.w	8019e5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 8019f8a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8019f8c:	9906      	ldr	r1, [sp, #24]
 8019f8e:	8812      	ldrh	r2, [r2, #0]
 8019f90:	1a52      	subs	r2, r2, r1
 8019f92:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8019f96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8019f98:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8019f9a:	3201      	adds	r2, #1
 8019f9c:	428a      	cmp	r2, r1
 8019f9e:	9209      	str	r2, [sp, #36]	@ 0x24
 8019fa0:	d111      	bne.n	8019fc6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 8019fa2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8019fa6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8019faa:	9b06      	ldr	r3, [sp, #24]
 8019fac:	eba5 0509 	sub.w	r5, r5, r9
 8019fb0:	b2ad      	uxth	r5, r5
 8019fb2:	2d00      	cmp	r5, #0
 8019fb4:	bf08      	it	eq
 8019fb6:	4619      	moveq	r1, r3
 8019fb8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8019fba:	bf18      	it	ne
 8019fbc:	2100      	movne	r1, #0
 8019fbe:	3301      	adds	r3, #1
 8019fc0:	930d      	str	r3, [sp, #52]	@ 0x34
 8019fc2:	b289      	uxth	r1, r1
 8019fc4:	e695      	b.n	8019cf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 8019fc6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8019fca:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8019fce:	1b2d      	subs	r5, r5, r4
 8019fd0:	b2ad      	uxth	r5, r5
 8019fd2:	2d00      	cmp	r5, #0
 8019fd4:	bf18      	it	ne
 8019fd6:	2400      	movne	r4, #0
 8019fd8:	e740      	b.n	8019e5c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 8019fda:	4b04      	ldr	r3, [pc, #16]	@ (8019fec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 8019fdc:	6818      	ldr	r0, [r3, #0]
 8019fde:	6803      	ldr	r3, [r0, #0]
 8019fe0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019fe2:	4798      	blx	r3
 8019fe4:	b01d      	add	sp, #116	@ 0x74
 8019fe6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019fea:	bf00      	nop
 8019fec:	20002f34 	.word	0x20002f34

08019ff0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8019ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ff4:	b09f      	sub	sp, #124	@ 0x7c
 8019ff6:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8019ffa:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8019ffe:	920a      	str	r2, [sp, #40]	@ 0x28
 801a000:	461d      	mov	r5, r3
 801a002:	4604      	mov	r4, r0
 801a004:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a006:	2a00      	cmp	r2, #0
 801a008:	f000 81fa 	beq.w	801a400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801a00c:	6828      	ldr	r0, [r5, #0]
 801a00e:	6869      	ldr	r1, [r5, #4]
 801a010:	aa1a      	add	r2, sp, #104	@ 0x68
 801a012:	c203      	stmia	r2!, {r0, r1}
 801a014:	6818      	ldr	r0, [r3, #0]
 801a016:	6859      	ldr	r1, [r3, #4]
 801a018:	aa1c      	add	r2, sp, #112	@ 0x70
 801a01a:	c203      	stmia	r2!, {r0, r1}
 801a01c:	a81a      	add	r0, sp, #104	@ 0x68
 801a01e:	f7f7 ff11 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a022:	4629      	mov	r1, r5
 801a024:	a81c      	add	r0, sp, #112	@ 0x70
 801a026:	f7f7 ff35 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a02a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801a02e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801a032:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801a036:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801a03a:	bfd7      	itett	le
 801a03c:	b29a      	uxthle	r2, r3
 801a03e:	2201      	movgt	r2, #1
 801a040:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a044:	fb91 f2f2 	sdivle	r2, r1, r2
 801a048:	9201      	str	r2, [sp, #4]
 801a04a:	9801      	ldr	r0, [sp, #4]
 801a04c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801a050:	fb92 f0f0 	sdiv	r0, r2, r0
 801a054:	b280      	uxth	r0, r0
 801a056:	9010      	str	r0, [sp, #64]	@ 0x40
 801a058:	9901      	ldr	r1, [sp, #4]
 801a05a:	9801      	ldr	r0, [sp, #4]
 801a05c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801a05e:	440e      	add	r6, r1
 801a060:	fb05 2510 	mls	r5, r5, r0, r2
 801a064:	fb15 f503 	smulbb	r5, r5, r3
 801a068:	3e01      	subs	r6, #1
 801a06a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801a06e:	fb96 f6f1 	sdiv	r6, r6, r1
 801a072:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801a076:	440d      	add	r5, r1
 801a078:	4419      	add	r1, r3
 801a07a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801a07e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801a082:	441a      	add	r2, r3
 801a084:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801a088:	9304      	str	r3, [sp, #16]
 801a08a:	4b96      	ldr	r3, [pc, #600]	@ (801a2e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801a08c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801a090:	6818      	ldr	r0, [r3, #0]
 801a092:	6803      	ldr	r3, [r0, #0]
 801a094:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a096:	4798      	blx	r3
 801a098:	4b93      	ldr	r3, [pc, #588]	@ (801a2e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801a09a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801a09e:	881a      	ldrh	r2, [r3, #0]
 801a0a0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801a0a4:	9318      	str	r3, [sp, #96]	@ 0x60
 801a0a6:	fb02 c101 	mla	r1, r2, r1, ip
 801a0aa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801a0ae:	4357      	muls	r7, r2
 801a0b0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801a0b4:	3601      	adds	r6, #1
 801a0b6:	920b      	str	r2, [sp, #44]	@ 0x2c
 801a0b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a0ba:	4b8c      	ldr	r3, [pc, #560]	@ (801a2ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801a0bc:	b2b6      	uxth	r6, r6
 801a0be:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801a0c2:	1d32      	adds	r2, r6, #4
 801a0c4:	9206      	str	r2, [sp, #24]
 801a0c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a0c8:	43d2      	mvns	r2, r2
 801a0ca:	b2d2      	uxtb	r2, r2
 801a0cc:	b2ad      	uxth	r5, r5
 801a0ce:	9215      	str	r2, [sp, #84]	@ 0x54
 801a0d0:	9a04      	ldr	r2, [sp, #16]
 801a0d2:	2d00      	cmp	r5, #0
 801a0d4:	bf0c      	ite	eq
 801a0d6:	4611      	moveq	r1, r2
 801a0d8:	2100      	movne	r1, #0
 801a0da:	2200      	movs	r2, #0
 801a0dc:	1b1b      	subs	r3, r3, r4
 801a0de:	b289      	uxth	r1, r1
 801a0e0:	920d      	str	r2, [sp, #52]	@ 0x34
 801a0e2:	9319      	str	r3, [sp, #100]	@ 0x64
 801a0e4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a0e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a0e8:	fa12 f383 	uxtah	r3, r2, r3
 801a0ec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a0ee:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801a0f2:	3304      	adds	r3, #4
 801a0f4:	9307      	str	r3, [sp, #28]
 801a0f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a0f8:	455b      	cmp	r3, fp
 801a0fa:	f240 817c 	bls.w	801a3f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801a0fe:	9a01      	ldr	r2, [sp, #4]
 801a100:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801a104:	fbb5 f3f3 	udiv	r3, r5, r3
 801a108:	1ad3      	subs	r3, r2, r3
 801a10a:	b29b      	uxth	r3, r3
 801a10c:	9316      	str	r3, [sp, #88]	@ 0x58
 801a10e:	9b07      	ldr	r3, [sp, #28]
 801a110:	9807      	ldr	r0, [sp, #28]
 801a112:	785a      	ldrb	r2, [r3, #1]
 801a114:	789b      	ldrb	r3, [r3, #2]
 801a116:	7800      	ldrb	r0, [r0, #0]
 801a118:	9011      	str	r0, [sp, #68]	@ 0x44
 801a11a:	021b      	lsls	r3, r3, #8
 801a11c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801a120:	9a07      	ldr	r2, [sp, #28]
 801a122:	78d2      	ldrb	r2, [r2, #3]
 801a124:	4313      	orrs	r3, r2
 801a126:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801a128:	3001      	adds	r0, #1
 801a12a:	441a      	add	r2, r3
 801a12c:	9005      	str	r0, [sp, #20]
 801a12e:	1c50      	adds	r0, r2, #1
 801a130:	9003      	str	r0, [sp, #12]
 801a132:	7852      	ldrb	r2, [r2, #1]
 801a134:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a136:	0212      	lsls	r2, r2, #8
 801a138:	5cc3      	ldrb	r3, [r0, r3]
 801a13a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801a13e:	431a      	orrs	r2, r3
 801a140:	b293      	uxth	r3, r2
 801a142:	930c      	str	r3, [sp, #48]	@ 0x30
 801a144:	2300      	movs	r3, #0
 801a146:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801a14a:	9308      	str	r3, [sp, #32]
 801a14c:	461a      	mov	r2, r3
 801a14e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801a152:	930e      	str	r3, [sp, #56]	@ 0x38
 801a154:	f04f 0801 	mov.w	r8, #1
 801a158:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801a15c:	f8cd 8008 	str.w	r8, [sp, #8]
 801a160:	46c4      	mov	ip, r8
 801a162:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a164:	2d00      	cmp	r5, #0
 801a166:	d07c      	beq.n	801a262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801a168:	45ac      	cmp	ip, r5
 801a16a:	d26c      	bcs.n	801a246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801a16c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a16e:	eba5 050c 	sub.w	r5, r5, ip
 801a172:	455b      	cmp	r3, fp
 801a174:	b2ad      	uxth	r5, r5
 801a176:	4608      	mov	r0, r1
 801a178:	d802      	bhi.n	801a180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801a17a:	e070      	b.n	801a25e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801a17c:	2b00      	cmp	r3, #0
 801a17e:	d15c      	bne.n	801a23a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801a180:	9b03      	ldr	r3, [sp, #12]
 801a182:	9a02      	ldr	r2, [sp, #8]
 801a184:	785b      	ldrb	r3, [r3, #1]
 801a186:	9902      	ldr	r1, [sp, #8]
 801a188:	f1c2 0207 	rsb	r2, r2, #7
 801a18c:	4093      	lsls	r3, r2
 801a18e:	005b      	lsls	r3, r3, #1
 801a190:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801a194:	9b03      	ldr	r3, [sp, #12]
 801a196:	781b      	ldrb	r3, [r3, #0]
 801a198:	410b      	asrs	r3, r1
 801a19a:	3101      	adds	r1, #1
 801a19c:	b2c9      	uxtb	r1, r1
 801a19e:	2908      	cmp	r1, #8
 801a1a0:	9102      	str	r1, [sp, #8]
 801a1a2:	9903      	ldr	r1, [sp, #12]
 801a1a4:	bf0a      	itet	eq
 801a1a6:	3102      	addeq	r1, #2
 801a1a8:	3101      	addne	r1, #1
 801a1aa:	9103      	streq	r1, [sp, #12]
 801a1ac:	b2db      	uxtb	r3, r3
 801a1ae:	bf0a      	itet	eq
 801a1b0:	2100      	moveq	r1, #0
 801a1b2:	9103      	strne	r1, [sp, #12]
 801a1b4:	9102      	streq	r1, [sp, #8]
 801a1b6:	4313      	orrs	r3, r2
 801a1b8:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801a1ba:	b29a      	uxth	r2, r3
 801a1bc:	4291      	cmp	r1, r2
 801a1be:	d30a      	bcc.n	801a1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801a1c0:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801a1c4:	2301      	movs	r3, #1
 801a1c6:	9905      	ldr	r1, [sp, #20]
 801a1c8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801a1cc:	d30f      	bcc.n	801a1ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801a1ce:	2100      	movs	r1, #0
 801a1d0:	4698      	mov	r8, r3
 801a1d2:	9100      	str	r1, [sp, #0]
 801a1d4:	e032      	b.n	801a23c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801a1d6:	9b05      	ldr	r3, [sp, #20]
 801a1d8:	429a      	cmp	r2, r3
 801a1da:	d318      	bcc.n	801a20e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801a1dc:	eb04 0308 	add.w	r3, r4, r8
 801a1e0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801a1e4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801a1e8:	f108 0301 	add.w	r3, r8, #1
 801a1ec:	b29b      	uxth	r3, r3
 801a1ee:	9905      	ldr	r1, [sp, #20]
 801a1f0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801a1f4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801a1f8:	710e      	strb	r6, [r1, #4]
 801a1fa:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a1fc:	80ce      	strh	r6, [r1, #6]
 801a1fe:	f108 0601 	add.w	r6, r8, #1
 801a202:	714e      	strb	r6, [r1, #5]
 801a204:	9905      	ldr	r1, [sp, #20]
 801a206:	3101      	adds	r1, #1
 801a208:	b289      	uxth	r1, r1
 801a20a:	9105      	str	r1, [sp, #20]
 801a20c:	e7df      	b.n	801a1ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801a20e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801a212:	4611      	mov	r1, r2
 801a214:	795b      	ldrb	r3, [r3, #5]
 801a216:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801a21a:	4426      	add	r6, r4
 801a21c:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801a21e:	4437      	add	r7, r6
 801a220:	2f00      	cmp	r7, #0
 801a222:	dd06      	ble.n	801a232 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801a224:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801a228:	790f      	ldrb	r7, [r1, #4]
 801a22a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801a22e:	88c9      	ldrh	r1, [r1, #6]
 801a230:	e7f4      	b.n	801a21c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801a232:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801a236:	b29b      	uxth	r3, r3
 801a238:	e7c5      	b.n	801a1c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801a23a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801a23c:	920c      	str	r2, [sp, #48]	@ 0x30
 801a23e:	4601      	mov	r1, r0
 801a240:	9a00      	ldr	r2, [sp, #0]
 801a242:	469c      	mov	ip, r3
 801a244:	e78e      	b.n	801a164 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801a246:	1957      	adds	r7, r2, r5
 801a248:	ebac 0305 	sub.w	r3, ip, r5
 801a24c:	b2ba      	uxth	r2, r7
 801a24e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a252:	9200      	str	r2, [sp, #0]
 801a254:	b29b      	uxth	r3, r3
 801a256:	2500      	movs	r5, #0
 801a258:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801a25a:	455a      	cmp	r2, fp
 801a25c:	d88e      	bhi.n	801a17c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801a25e:	4601      	mov	r1, r0
 801a260:	e749      	b.n	801a0f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801a262:	458c      	cmp	ip, r1
 801a264:	bf2c      	ite	cs
 801a266:	4628      	movcs	r0, r5
 801a268:	462b      	movcc	r3, r5
 801a26a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801a26c:	bf27      	ittee	cs
 801a26e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801a270:	ebac 0301 	subcs.w	r3, ip, r1
 801a274:	eba1 000c 	subcc.w	r0, r1, ip
 801a278:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801a27c:	bf2c      	ite	cs
 801a27e:	b29b      	uxthcs	r3, r3
 801a280:	b280      	uxthcc	r0, r0
 801a282:	2dff      	cmp	r5, #255	@ 0xff
 801a284:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801a286:	eb02 0705 	add.w	r7, r2, r5
 801a28a:	b2bd      	uxth	r5, r7
 801a28c:	9500      	str	r5, [sp, #0]
 801a28e:	d12f      	bne.n	801a2f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801a290:	465e      	mov	r6, fp
 801a292:	9d00      	ldr	r5, [sp, #0]
 801a294:	42aa      	cmp	r2, r5
 801a296:	f040 8084 	bne.w	801a3a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801a29a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a29c:	458c      	cmp	ip, r1
 801a29e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a2a2:	d3d8      	bcc.n	801a256 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801a2a4:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801a2a6:	9904      	ldr	r1, [sp, #16]
 801a2a8:	8812      	ldrh	r2, [r2, #0]
 801a2aa:	1a52      	subs	r2, r2, r1
 801a2ac:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801a2b0:	9a08      	ldr	r2, [sp, #32]
 801a2b2:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801a2b4:	3201      	adds	r2, #1
 801a2b6:	428a      	cmp	r2, r1
 801a2b8:	9208      	str	r2, [sp, #32]
 801a2ba:	f040 8092 	bne.w	801a3e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801a2be:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801a2c2:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801a2c6:	9b04      	ldr	r3, [sp, #16]
 801a2c8:	eba5 050c 	sub.w	r5, r5, ip
 801a2cc:	b2ad      	uxth	r5, r5
 801a2ce:	2d00      	cmp	r5, #0
 801a2d0:	bf08      	it	eq
 801a2d2:	4619      	moveq	r1, r3
 801a2d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a2d6:	bf18      	it	ne
 801a2d8:	2100      	movne	r1, #0
 801a2da:	3301      	adds	r3, #1
 801a2dc:	930d      	str	r3, [sp, #52]	@ 0x34
 801a2de:	b289      	uxth	r1, r1
 801a2e0:	e700      	b.n	801a0e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801a2e2:	bf00      	nop
 801a2e4:	20002f34 	.word	0x20002f34
 801a2e8:	20002f2e 	.word	0x20002f2e
 801a2ec:	fffff7fb 	.word	0xfffff7fb
 801a2f0:	46d9      	mov	r9, fp
 801a2f2:	9d00      	ldr	r5, [sp, #0]
 801a2f4:	42aa      	cmp	r2, r5
 801a2f6:	d0d0      	beq.n	801a29a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801a2f8:	1c55      	adds	r5, r2, #1
 801a2fa:	4422      	add	r2, r4
 801a2fc:	9517      	str	r5, [sp, #92]	@ 0x5c
 801a2fe:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801a302:	9a06      	ldr	r2, [sp, #24]
 801a304:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801a308:	4472      	add	r2, lr
 801a30a:	9212      	str	r2, [sp, #72]	@ 0x48
 801a30c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a30e:	f8b9 2000 	ldrh.w	r2, [r9]
 801a312:	f897 a002 	ldrb.w	sl, [r7, #2]
 801a316:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a318:	1216      	asrs	r6, r2, #8
 801a31a:	fb1a fa07 	smulbb	sl, sl, r7
 801a31e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a322:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a324:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a328:	fb06 a607 	mla	r6, r6, r7, sl
 801a32c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801a32e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801a332:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a334:	10d5      	asrs	r5, r2, #3
 801a336:	fb1a fa07 	smulbb	sl, sl, r7
 801a33a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a33e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a340:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a344:	fb05 a507 	mla	r5, r5, r7, sl
 801a348:	9f06      	ldr	r7, [sp, #24]
 801a34a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801a34e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801a350:	00d2      	lsls	r2, r2, #3
 801a352:	fb1e fe07 	smulbb	lr, lr, r7
 801a356:	b2d2      	uxtb	r2, r2
 801a358:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a35a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a35e:	b2b6      	uxth	r6, r6
 801a360:	fb02 e207 	mla	r2, r2, r7, lr
 801a364:	b292      	uxth	r2, r2
 801a366:	b2ad      	uxth	r5, r5
 801a368:	f106 0a01 	add.w	sl, r6, #1
 801a36c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801a370:	f102 0e01 	add.w	lr, r2, #1
 801a374:	f105 0a01 	add.w	sl, r5, #1
 801a378:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801a37c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a380:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a384:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a388:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a38c:	ea4e 0606 	orr.w	r6, lr, r6
 801a390:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a394:	ea46 060a 	orr.w	r6, r6, sl
 801a398:	f829 6b02 	strh.w	r6, [r9], #2
 801a39c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801a3a0:	e7a7      	b.n	801a2f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801a3a2:	f102 0e01 	add.w	lr, r2, #1
 801a3a6:	4422      	add	r2, r4
 801a3a8:	9f06      	ldr	r7, [sp, #24]
 801a3aa:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801a3ae:	9a06      	ldr	r2, [sp, #24]
 801a3b0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a3b4:	eb02 0a05 	add.w	sl, r2, r5
 801a3b8:	4a13      	ldr	r2, [pc, #76]	@ (801a408 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801a3ba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801a3be:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801a3c2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a3c6:	00d2      	lsls	r2, r2, #3
 801a3c8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801a3cc:	ea49 0202 	orr.w	r2, r9, r2
 801a3d0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801a3d4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801a3d8:	f826 2b02 	strh.w	r2, [r6], #2
 801a3dc:	fa1f f28e 	uxth.w	r2, lr
 801a3e0:	e757      	b.n	801a292 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801a3e2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801a3e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801a3ea:	1a2d      	subs	r5, r5, r0
 801a3ec:	b2ad      	uxth	r5, r5
 801a3ee:	2d00      	cmp	r5, #0
 801a3f0:	bf18      	it	ne
 801a3f2:	2000      	movne	r0, #0
 801a3f4:	e730      	b.n	801a258 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801a3f6:	4b05      	ldr	r3, [pc, #20]	@ (801a40c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801a3f8:	6818      	ldr	r0, [r3, #0]
 801a3fa:	6803      	ldr	r3, [r0, #0]
 801a3fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a3fe:	4798      	blx	r3
 801a400:	b01f      	add	sp, #124	@ 0x7c
 801a402:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a406:	bf00      	nop
 801a408:	fffff800 	.word	0xfffff800
 801a40c:	20002f34 	.word	0x20002f34

0801a410 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801a410:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a414:	b091      	sub	sp, #68	@ 0x44
 801a416:	469b      	mov	fp, r3
 801a418:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801a41c:	4616      	mov	r6, r2
 801a41e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801a422:	f9b3 2000 	ldrsh.w	r2, [r3]
 801a426:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801a42a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801a42e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801a432:	4604      	mov	r4, r0
 801a434:	460d      	mov	r5, r1
 801a436:	4640      	mov	r0, r8
 801a438:	4659      	mov	r1, fp
 801a43a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801a43e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801a442:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801a446:	f7f4 fb39 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 801a44a:	4631      	mov	r1, r6
 801a44c:	4640      	mov	r0, r8
 801a44e:	f7f4 fb35 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 801a452:	4b74      	ldr	r3, [pc, #464]	@ (801a624 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801a454:	8818      	ldrh	r0, [r3, #0]
 801a456:	4b74      	ldr	r3, [pc, #464]	@ (801a628 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801a458:	8819      	ldrh	r1, [r3, #0]
 801a45a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a45e:	2b00      	cmp	r3, #0
 801a460:	b202      	sxth	r2, r0
 801a462:	b20e      	sxth	r6, r1
 801a464:	da07      	bge.n	801a476 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801a466:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801a46a:	4463      	add	r3, ip
 801a46c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801a470:	2300      	movs	r3, #0
 801a472:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801a476:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801a47a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801a47e:	1ad2      	subs	r2, r2, r3
 801a480:	4594      	cmp	ip, r2
 801a482:	bfc4      	itt	gt
 801a484:	1ac2      	subgt	r2, r0, r3
 801a486:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801a48a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a48e:	2a00      	cmp	r2, #0
 801a490:	da07      	bge.n	801a4a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801a492:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801a496:	4462      	add	r2, ip
 801a498:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801a49c:	2200      	movs	r2, #0
 801a49e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801a4a2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801a4a6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a4aa:	eba6 060a 	sub.w	r6, r6, sl
 801a4ae:	42b2      	cmp	r2, r6
 801a4b0:	bfc4      	itt	gt
 801a4b2:	eba1 020a 	subgt.w	r2, r1, sl
 801a4b6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801a4ba:	4a5c      	ldr	r2, [pc, #368]	@ (801a62c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801a4bc:	7812      	ldrb	r2, [r2, #0]
 801a4be:	b9a2      	cbnz	r2, 801a4ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801a4c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801a4c4:	4286      	cmp	r6, r0
 801a4c6:	4640      	mov	r0, r8
 801a4c8:	9303      	str	r3, [sp, #12]
 801a4ca:	bf14      	ite	ne
 801a4cc:	2600      	movne	r6, #0
 801a4ce:	2601      	moveq	r6, #1
 801a4d0:	f7f4 fb37 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a4d4:	9b03      	ldr	r3, [sp, #12]
 801a4d6:	b160      	cbz	r0, 801a4f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801a4d8:	2300      	movs	r3, #0
 801a4da:	8023      	strh	r3, [r4, #0]
 801a4dc:	8063      	strh	r3, [r4, #2]
 801a4de:	80a3      	strh	r3, [r4, #4]
 801a4e0:	4620      	mov	r0, r4
 801a4e2:	80e3      	strh	r3, [r4, #6]
 801a4e4:	b011      	add	sp, #68	@ 0x44
 801a4e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a4ea:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801a4ee:	428e      	cmp	r6, r1
 801a4f0:	e7e9      	b.n	801a4c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801a4f2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a4f6:	9205      	str	r2, [sp, #20]
 801a4f8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801a4fc:	9206      	str	r2, [sp, #24]
 801a4fe:	f8bb 2000 	ldrh.w	r2, [fp]
 801a502:	900e      	str	r0, [sp, #56]	@ 0x38
 801a504:	1a9b      	subs	r3, r3, r2
 801a506:	b21b      	sxth	r3, r3
 801a508:	9303      	str	r3, [sp, #12]
 801a50a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a50e:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801a512:	ebaa 0a03 	sub.w	sl, sl, r3
 801a516:	fa0f f38a 	sxth.w	r3, sl
 801a51a:	9304      	str	r3, [sp, #16]
 801a51c:	9b03      	ldr	r3, [sp, #12]
 801a51e:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801a522:	9b04      	ldr	r3, [sp, #16]
 801a524:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a528:	9b05      	ldr	r3, [sp, #20]
 801a52a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801a52e:	a90e      	add	r1, sp, #56	@ 0x38
 801a530:	9b06      	ldr	r3, [sp, #24]
 801a532:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801a536:	a80c      	add	r0, sp, #48	@ 0x30
 801a538:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801a53c:	f7f7 fcaa 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a540:	4640      	mov	r0, r8
 801a542:	f7f7 fc7f 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a546:	a80e      	add	r0, sp, #56	@ 0x38
 801a548:	f7f7 fc7c 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a54c:	4b38      	ldr	r3, [pc, #224]	@ (801a630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801a54e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801a552:	881b      	ldrh	r3, [r3, #0]
 801a554:	9307      	str	r3, [sp, #28]
 801a556:	682b      	ldr	r3, [r5, #0]
 801a558:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801a634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a55c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a55e:	4628      	mov	r0, r5
 801a560:	4798      	blx	r3
 801a562:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801a566:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801a56a:	4681      	mov	r9, r0
 801a56c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801a570:	f8db 0000 	ldr.w	r0, [fp]
 801a574:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801a576:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a57a:	6803      	ldr	r3, [r0, #0]
 801a57c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a57e:	4798      	blx	r3
 801a580:	4607      	mov	r7, r0
 801a582:	f8db 0000 	ldr.w	r0, [fp]
 801a586:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801a58a:	6803      	ldr	r3, [r0, #0]
 801a58c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a590:	9109      	str	r1, [sp, #36]	@ 0x24
 801a592:	9208      	str	r2, [sp, #32]
 801a594:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a596:	4798      	blx	r3
 801a598:	f010 0f01 	tst.w	r0, #1
 801a59c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a5a0:	d012      	beq.n	801a5c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801a5a2:	f8db 0000 	ldr.w	r0, [fp]
 801a5a6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801a5aa:	6803      	ldr	r3, [r0, #0]
 801a5ac:	9200      	str	r2, [sp, #0]
 801a5ae:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801a5b0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801a5b4:	462b      	mov	r3, r5
 801a5b6:	47b0      	blx	r6
 801a5b8:	9b03      	ldr	r3, [sp, #12]
 801a5ba:	8023      	strh	r3, [r4, #0]
 801a5bc:	9b04      	ldr	r3, [sp, #16]
 801a5be:	8063      	strh	r3, [r4, #2]
 801a5c0:	9b05      	ldr	r3, [sp, #20]
 801a5c2:	80a3      	strh	r3, [r4, #4]
 801a5c4:	9b06      	ldr	r3, [sp, #24]
 801a5c6:	e78b      	b.n	801a4e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801a5c8:	fb09 f202 	mul.w	r2, r9, r2
 801a5cc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801a5d0:	440f      	add	r7, r1
 801a5d2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801a5d6:	b166      	cbz	r6, 801a5f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a5d8:	9a07      	ldr	r2, [sp, #28]
 801a5da:	4592      	cmp	sl, r2
 801a5dc:	d109      	bne.n	801a5f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801a5de:	f8db 0000 	ldr.w	r0, [fp]
 801a5e2:	6802      	ldr	r2, [r0, #0]
 801a5e4:	fb09 f303 	mul.w	r3, r9, r3
 801a5e8:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801a5ea:	4629      	mov	r1, r5
 801a5ec:	463a      	mov	r2, r7
 801a5ee:	47b0      	blx	r6
 801a5f0:	e7e2      	b.n	801a5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a5f2:	fb0a f303 	mul.w	r3, sl, r3
 801a5f6:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801a634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801a5fa:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801a5fe:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801a602:	4545      	cmp	r5, r8
 801a604:	d2d8      	bcs.n	801a5b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801a606:	f8db 0000 	ldr.w	r0, [fp]
 801a60a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a60e:	6802      	ldr	r2, [r0, #0]
 801a610:	4629      	mov	r1, r5
 801a612:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801a616:	005b      	lsls	r3, r3, #1
 801a618:	463a      	mov	r2, r7
 801a61a:	47d0      	blx	sl
 801a61c:	444f      	add	r7, r9
 801a61e:	4435      	add	r5, r6
 801a620:	e7ef      	b.n	801a602 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801a622:	bf00      	nop
 801a624:	20002f28 	.word	0x20002f28
 801a628:	20002f2a 	.word	0x20002f2a
 801a62c:	20002f2c 	.word	0x20002f2c
 801a630:	20002f2e 	.word	0x20002f2e
 801a634:	20002f34 	.word	0x20002f34

0801a638 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801a638:	b5f0      	push	{r4, r5, r6, r7, lr}
 801a63a:	4606      	mov	r6, r0
 801a63c:	b087      	sub	sp, #28
 801a63e:	460c      	mov	r4, r1
 801a640:	4617      	mov	r7, r2
 801a642:	461d      	mov	r5, r3
 801a644:	b333      	cbz	r3, 801a694 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a646:	4608      	mov	r0, r1
 801a648:	f7f4 fa7b 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a64c:	bb10      	cbnz	r0, 801a694 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a64e:	6820      	ldr	r0, [r4, #0]
 801a650:	6861      	ldr	r1, [r4, #4]
 801a652:	4c1c      	ldr	r4, [pc, #112]	@ (801a6c4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801a654:	ab04      	add	r3, sp, #16
 801a656:	c303      	stmia	r3!, {r0, r1}
 801a658:	a804      	add	r0, sp, #16
 801a65a:	f7f7 fbf3 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a65e:	6820      	ldr	r0, [r4, #0]
 801a660:	6803      	ldr	r3, [r0, #0]
 801a662:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a664:	4798      	blx	r3
 801a666:	2dff      	cmp	r5, #255	@ 0xff
 801a668:	d016      	beq.n	801a698 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801a66a:	f010 0f08 	tst.w	r0, #8
 801a66e:	6820      	ldr	r0, [r4, #0]
 801a670:	d015      	beq.n	801a69e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801a672:	2400      	movs	r4, #0
 801a674:	6801      	ldr	r1, [r0, #0]
 801a676:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801a67a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801a67e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801a682:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801a686:	9401      	str	r4, [sp, #4]
 801a688:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801a68c:	9400      	str	r4, [sp, #0]
 801a68e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801a690:	4639      	mov	r1, r7
 801a692:	47a0      	blx	r4
 801a694:	b007      	add	sp, #28
 801a696:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a698:	f010 0f02 	tst.w	r0, #2
 801a69c:	e7e7      	b.n	801a66e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801a69e:	6803      	ldr	r3, [r0, #0]
 801a6a0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a6a2:	4798      	blx	r3
 801a6a4:	4b08      	ldr	r3, [pc, #32]	@ (801a6c8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801a6a6:	881a      	ldrh	r2, [r3, #0]
 801a6a8:	6833      	ldr	r3, [r6, #0]
 801a6aa:	e9cd 7500 	strd	r7, r5, [sp]
 801a6ae:	4601      	mov	r1, r0
 801a6b0:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801a6b2:	4630      	mov	r0, r6
 801a6b4:	ab04      	add	r3, sp, #16
 801a6b6:	47a8      	blx	r5
 801a6b8:	6820      	ldr	r0, [r4, #0]
 801a6ba:	6803      	ldr	r3, [r0, #0]
 801a6bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a6be:	4798      	blx	r3
 801a6c0:	e7e8      	b.n	801a694 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801a6c2:	bf00      	nop
 801a6c4:	20002f34 	.word	0x20002f34
 801a6c8:	20002f2e 	.word	0x20002f2e

0801a6cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801a6cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a6d0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801a6d4:	9e08      	ldr	r6, [sp, #32]
 801a6d6:	4688      	mov	r8, r1
 801a6d8:	4614      	mov	r4, r2
 801a6da:	461d      	mov	r5, r3
 801a6dc:	2f00      	cmp	r7, #0
 801a6de:	f000 80a9 	beq.w	801a834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a6e2:	4618      	mov	r0, r3
 801a6e4:	f7f4 fa2d 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a6e8:	2800      	cmp	r0, #0
 801a6ea:	f040 80a3 	bne.w	801a834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a6ee:	f9b5 1000 	ldrsh.w	r1, [r5]
 801a6f2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801a6f6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801a6fa:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801a6fe:	fb04 1303 	mla	r3, r4, r3, r1
 801a702:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801a706:	4365      	muls	r5, r4
 801a708:	2fff      	cmp	r7, #255	@ 0xff
 801a70a:	eba4 0200 	sub.w	r2, r4, r0
 801a70e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801a712:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801a716:	d04a      	beq.n	801a7ae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801a718:	b2bc      	uxth	r4, r7
 801a71a:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801a71e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801a722:	fa5f f788 	uxtb.w	r7, r8
 801a726:	b2f3      	uxtb	r3, r6
 801a728:	0040      	lsls	r0, r0, #1
 801a72a:	fb0e fe04 	mul.w	lr, lr, r4
 801a72e:	4367      	muls	r7, r4
 801a730:	4363      	muls	r3, r4
 801a732:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801a736:	fa1f fc8c 	uxth.w	ip, ip
 801a73a:	42a9      	cmp	r1, r5
 801a73c:	d27a      	bcs.n	801a834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a73e:	eb01 0900 	add.w	r9, r1, r0
 801a742:	4549      	cmp	r1, r9
 801a744:	d231      	bcs.n	801a7aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801a746:	880a      	ldrh	r2, [r1, #0]
 801a748:	1214      	asrs	r4, r2, #8
 801a74a:	10d6      	asrs	r6, r2, #3
 801a74c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801a750:	00d2      	lsls	r2, r2, #3
 801a752:	b2d2      	uxtb	r2, r2
 801a754:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801a758:	fb14 f40c 	smulbb	r4, r4, ip
 801a75c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801a760:	4474      	add	r4, lr
 801a762:	fb12 f20c 	smulbb	r2, r2, ip
 801a766:	b2a4      	uxth	r4, r4
 801a768:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a76c:	441a      	add	r2, r3
 801a76e:	b292      	uxth	r2, r2
 801a770:	f104 0a01 	add.w	sl, r4, #1
 801a774:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801a778:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a77c:	fb16 f60c 	smulbb	r6, r6, ip
 801a780:	f102 0a01 	add.w	sl, r2, #1
 801a784:	443e      	add	r6, r7
 801a786:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801a78a:	b2b6      	uxth	r6, r6
 801a78c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801a790:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a794:	4322      	orrs	r2, r4
 801a796:	1c74      	adds	r4, r6, #1
 801a798:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801a79c:	0976      	lsrs	r6, r6, #5
 801a79e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801a7a2:	4332      	orrs	r2, r6
 801a7a4:	f821 2b02 	strh.w	r2, [r1], #2
 801a7a8:	e7cb      	b.n	801a742 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801a7aa:	4441      	add	r1, r8
 801a7ac:	e7c5      	b.n	801a73a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801a7ae:	4f22      	ldr	r7, [pc, #136]	@ (801a838 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801a7b0:	0973      	lsrs	r3, r6, #5
 801a7b2:	ea08 0707 	and.w	r7, r8, r7
 801a7b6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a7ba:	433b      	orrs	r3, r7
 801a7bc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a7c0:	4333      	orrs	r3, r6
 801a7c2:	07e7      	lsls	r7, r4, #31
 801a7c4:	b29b      	uxth	r3, r3
 801a7c6:	d50b      	bpl.n	801a7e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801a7c8:	0040      	lsls	r0, r0, #1
 801a7ca:	0052      	lsls	r2, r2, #1
 801a7cc:	42a9      	cmp	r1, r5
 801a7ce:	d231      	bcs.n	801a834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a7d0:	180c      	adds	r4, r1, r0
 801a7d2:	42a1      	cmp	r1, r4
 801a7d4:	d202      	bcs.n	801a7dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801a7d6:	f821 3b02 	strh.w	r3, [r1], #2
 801a7da:	e7fa      	b.n	801a7d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801a7dc:	4411      	add	r1, r2
 801a7de:	e7f5      	b.n	801a7cc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801a7e0:	078e      	lsls	r6, r1, #30
 801a7e2:	d008      	beq.n	801a7f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801a7e4:	0066      	lsls	r6, r4, #1
 801a7e6:	460a      	mov	r2, r1
 801a7e8:	42aa      	cmp	r2, r5
 801a7ea:	d202      	bcs.n	801a7f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801a7ec:	8013      	strh	r3, [r2, #0]
 801a7ee:	4432      	add	r2, r6
 801a7f0:	e7fa      	b.n	801a7e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801a7f2:	3102      	adds	r1, #2
 801a7f4:	3801      	subs	r0, #1
 801a7f6:	07c2      	lsls	r2, r0, #31
 801a7f8:	d50b      	bpl.n	801a812 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801a7fa:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801a7fe:	3a01      	subs	r2, #1
 801a800:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801a804:	0066      	lsls	r6, r4, #1
 801a806:	42aa      	cmp	r2, r5
 801a808:	d202      	bcs.n	801a810 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801a80a:	8013      	strh	r3, [r2, #0]
 801a80c:	4432      	add	r2, r6
 801a80e:	e7fa      	b.n	801a806 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801a810:	3801      	subs	r0, #1
 801a812:	b178      	cbz	r0, 801a834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a814:	1040      	asrs	r0, r0, #1
 801a816:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801a81a:	0080      	lsls	r0, r0, #2
 801a81c:	0064      	lsls	r4, r4, #1
 801a81e:	42a9      	cmp	r1, r5
 801a820:	d208      	bcs.n	801a834 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801a822:	180e      	adds	r6, r1, r0
 801a824:	460a      	mov	r2, r1
 801a826:	42b2      	cmp	r2, r6
 801a828:	d202      	bcs.n	801a830 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801a82a:	f842 3b04 	str.w	r3, [r2], #4
 801a82e:	e7fa      	b.n	801a826 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801a830:	4421      	add	r1, r4
 801a832:	e7f4      	b.n	801a81e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801a834:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a838:	00fff800 	.word	0x00fff800

0801a83c <_ZN8touchgfx8LCD16bppC1Ev>:
 801a83c:	2200      	movs	r2, #0
 801a83e:	4912      	ldr	r1, [pc, #72]	@ (801a888 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801a840:	6001      	str	r1, [r0, #0]
 801a842:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801a846:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801a84a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801a84e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801a852:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801a856:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801a85a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801a85e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801a862:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801a866:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801a86a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801a86e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801a872:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801a876:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801a87a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801a87e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801a882:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801a886:	4770      	bx	lr
 801a888:	0802757c 	.word	0x0802757c

0801a88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801a88c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a890:	460d      	mov	r5, r1
 801a892:	b08d      	sub	sp, #52	@ 0x34
 801a894:	4604      	mov	r4, r0
 801a896:	6808      	ldr	r0, [r1, #0]
 801a898:	6849      	ldr	r1, [r1, #4]
 801a89a:	4699      	mov	r9, r3
 801a89c:	ab08      	add	r3, sp, #32
 801a89e:	c303      	stmia	r3!, {r0, r1}
 801a8a0:	6810      	ldr	r0, [r2, #0]
 801a8a2:	6851      	ldr	r1, [r2, #4]
 801a8a4:	ab0a      	add	r3, sp, #40	@ 0x28
 801a8a6:	c303      	stmia	r3!, {r0, r1}
 801a8a8:	a808      	add	r0, sp, #32
 801a8aa:	f7f7 facb 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a8ae:	4629      	mov	r1, r5
 801a8b0:	a80a      	add	r0, sp, #40	@ 0x28
 801a8b2:	f7f7 faef 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a8b6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801a8ba:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801a8be:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801a8c2:	4d63      	ldr	r5, [pc, #396]	@ (801aa50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801a8c4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801a8c8:	6828      	ldr	r0, [r5, #0]
 801a8ca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801a8ce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801a8d2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801a8d6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801a8da:	440a      	add	r2, r1
 801a8dc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801a8e0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801a8e4:	4413      	add	r3, r2
 801a8e6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801a8ea:	6803      	ldr	r3, [r0, #0]
 801a8ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a8ee:	4798      	blx	r3
 801a8f0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a8f4:	d119      	bne.n	801a92a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801a8f6:	f010 0f20 	tst.w	r0, #32
 801a8fa:	6828      	ldr	r0, [r5, #0]
 801a8fc:	d018      	beq.n	801a930 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801a8fe:	2500      	movs	r5, #0
 801a900:	6801      	ldr	r1, [r0, #0]
 801a902:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801a906:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801a90a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801a90e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801a912:	9502      	str	r5, [sp, #8]
 801a914:	b2b6      	uxth	r6, r6
 801a916:	fa1f f588 	uxth.w	r5, r8
 801a91a:	9601      	str	r6, [sp, #4]
 801a91c:	9500      	str	r5, [sp, #0]
 801a91e:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801a920:	4621      	mov	r1, r4
 801a922:	47a8      	blx	r5
 801a924:	b00d      	add	sp, #52	@ 0x34
 801a926:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a92a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801a92e:	e7e4      	b.n	801a8fa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801a930:	6803      	ldr	r3, [r0, #0]
 801a932:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a934:	4798      	blx	r3
 801a936:	4947      	ldr	r1, [pc, #284]	@ (801aa54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801a938:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801a93c:	880b      	ldrh	r3, [r1, #0]
 801a93e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801a942:	fb03 5202 	mla	r2, r3, r2, r5
 801a946:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a94a:	4373      	muls	r3, r6
 801a94c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a950:	9307      	str	r3, [sp, #28]
 801a952:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801a956:	9306      	str	r3, [sp, #24]
 801a958:	468a      	mov	sl, r1
 801a95a:	9b07      	ldr	r3, [sp, #28]
 801a95c:	4298      	cmp	r0, r3
 801a95e:	d270      	bcs.n	801aa42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801a960:	9b06      	ldr	r3, [sp, #24]
 801a962:	4621      	mov	r1, r4
 801a964:	eb00 0b03 	add.w	fp, r0, r3
 801a968:	4558      	cmp	r0, fp
 801a96a:	d25d      	bcs.n	801aa28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801a96c:	f851 4b04 	ldr.w	r4, [r1], #4
 801a970:	0e23      	lsrs	r3, r4, #24
 801a972:	d014      	beq.n	801a99e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801a974:	2bff      	cmp	r3, #255	@ 0xff
 801a976:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801a97a:	d112      	bne.n	801a9a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a97c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801a980:	d10f      	bne.n	801a9a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801a982:	0963      	lsrs	r3, r4, #5
 801a984:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801a988:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a98c:	f02c 0c07 	bic.w	ip, ip, #7
 801a990:	ea43 0c0c 	orr.w	ip, r3, ip
 801a994:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a998:	ea4c 0404 	orr.w	r4, ip, r4
 801a99c:	8004      	strh	r4, [r0, #0]
 801a99e:	3002      	adds	r0, #2
 801a9a0:	e7e2      	b.n	801a968 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801a9a2:	fb09 f303 	mul.w	r3, r9, r3
 801a9a6:	8807      	ldrh	r7, [r0, #0]
 801a9a8:	1c5a      	adds	r2, r3, #1
 801a9aa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801a9ae:	1212      	asrs	r2, r2, #8
 801a9b0:	123e      	asrs	r6, r7, #8
 801a9b2:	b293      	uxth	r3, r2
 801a9b4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801a9b8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a9bc:	43d2      	mvns	r2, r2
 801a9be:	b2d2      	uxtb	r2, r2
 801a9c0:	10fd      	asrs	r5, r7, #3
 801a9c2:	fb1e fe03 	smulbb	lr, lr, r3
 801a9c6:	00ff      	lsls	r7, r7, #3
 801a9c8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801a9cc:	fb06 e602 	mla	r6, r6, r2, lr
 801a9d0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a9d4:	b2ff      	uxtb	r7, r7
 801a9d6:	fa5f fc8c 	uxtb.w	ip, ip
 801a9da:	b2e4      	uxtb	r4, r4
 801a9dc:	b2b6      	uxth	r6, r6
 801a9de:	fb1c fc03 	smulbb	ip, ip, r3
 801a9e2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801a9e6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801a9ea:	fb14 f403 	smulbb	r4, r4, r3
 801a9ee:	fb05 c502 	mla	r5, r5, r2, ip
 801a9f2:	f106 0e01 	add.w	lr, r6, #1
 801a9f6:	fb07 4702 	mla	r7, r7, r2, r4
 801a9fa:	b2ad      	uxth	r5, r5
 801a9fc:	b2bf      	uxth	r7, r7
 801a9fe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801aa02:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801aa06:	f105 0c01 	add.w	ip, r5, #1
 801aa0a:	1c7e      	adds	r6, r7, #1
 801aa0c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801aa10:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801aa14:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801aa18:	096d      	lsrs	r5, r5, #5
 801aa1a:	ea46 060e 	orr.w	r6, r6, lr
 801aa1e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801aa22:	432e      	orrs	r6, r5
 801aa24:	8006      	strh	r6, [r0, #0]
 801aa26:	e7ba      	b.n	801a99e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801aa28:	f8ba 3000 	ldrh.w	r3, [sl]
 801aa2c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801aa30:	eba3 0308 	sub.w	r3, r3, r8
 801aa34:	eba4 0408 	sub.w	r4, r4, r8
 801aa38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801aa3c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801aa40:	e78b      	b.n	801a95a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801aa42:	4b03      	ldr	r3, [pc, #12]	@ (801aa50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801aa44:	6818      	ldr	r0, [r3, #0]
 801aa46:	6803      	ldr	r3, [r0, #0]
 801aa48:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801aa4a:	4798      	blx	r3
 801aa4c:	e76a      	b.n	801a924 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801aa4e:	bf00      	nop
 801aa50:	20002f34 	.word	0x20002f34
 801aa54:	20002f2e 	.word	0x20002f2e

0801aa58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801aa58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801aa5c:	460c      	mov	r4, r1
 801aa5e:	b085      	sub	sp, #20
 801aa60:	6810      	ldr	r0, [r2, #0]
 801aa62:	6851      	ldr	r1, [r2, #4]
 801aa64:	466d      	mov	r5, sp
 801aa66:	c503      	stmia	r5!, {r0, r1}
 801aa68:	6818      	ldr	r0, [r3, #0]
 801aa6a:	6859      	ldr	r1, [r3, #4]
 801aa6c:	4616      	mov	r6, r2
 801aa6e:	c503      	stmia	r5!, {r0, r1}
 801aa70:	4668      	mov	r0, sp
 801aa72:	f7f7 f9e7 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801aa76:	4631      	mov	r1, r6
 801aa78:	a802      	add	r0, sp, #8
 801aa7a:	f7f7 fa0b 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aa7e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801aa82:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801aa86:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801aa8a:	4d28      	ldr	r5, [pc, #160]	@ (801ab2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801aa8c:	4e28      	ldr	r6, [pc, #160]	@ (801ab30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801aa8e:	6828      	ldr	r0, [r5, #0]
 801aa90:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801aa94:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801aa98:	fb11 2103 	smlabb	r1, r1, r3, r2
 801aa9c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801aaa0:	f8bd 1000 	ldrh.w	r1, [sp]
 801aaa4:	440a      	add	r2, r1
 801aaa6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801aaaa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801aaae:	4413      	add	r3, r2
 801aab0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801aab4:	6803      	ldr	r3, [r0, #0]
 801aab6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801aab8:	4798      	blx	r3
 801aaba:	8833      	ldrh	r3, [r6, #0]
 801aabc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801aac0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801aac4:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801ab34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801aac8:	fb03 1202 	mla	r2, r3, r2, r1
 801aacc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801aad0:	fb08 f303 	mul.w	r3, r8, r3
 801aad4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801aad8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801aadc:	4298      	cmp	r0, r3
 801aade:	d21d      	bcs.n	801ab1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801aae0:	eb00 080c 	add.w	r8, r0, ip
 801aae4:	4540      	cmp	r0, r8
 801aae6:	d20f      	bcs.n	801ab08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801aae8:	f854 1b04 	ldr.w	r1, [r4], #4
 801aaec:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801aaf0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801aaf4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801aaf8:	ea42 0209 	orr.w	r2, r2, r9
 801aafc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ab00:	430a      	orrs	r2, r1
 801ab02:	f820 2b02 	strh.w	r2, [r0], #2
 801ab06:	e7ed      	b.n	801aae4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801ab08:	8832      	ldrh	r2, [r6, #0]
 801ab0a:	1bd2      	subs	r2, r2, r7
 801ab0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ab10:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801ab14:	1bd2      	subs	r2, r2, r7
 801ab16:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801ab1a:	e7df      	b.n	801aadc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801ab1c:	6828      	ldr	r0, [r5, #0]
 801ab1e:	6803      	ldr	r3, [r0, #0]
 801ab20:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ab22:	4798      	blx	r3
 801ab24:	b005      	add	sp, #20
 801ab26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801ab2a:	bf00      	nop
 801ab2c:	20002f34 	.word	0x20002f34
 801ab30:	20002f2e 	.word	0x20002f2e
 801ab34:	fffff800 	.word	0xfffff800

0801ab38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801ab38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ab3c:	460e      	mov	r6, r1
 801ab3e:	b08e      	sub	sp, #56	@ 0x38
 801ab40:	4604      	mov	r4, r0
 801ab42:	6808      	ldr	r0, [r1, #0]
 801ab44:	6849      	ldr	r1, [r1, #4]
 801ab46:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801ad20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801ab4a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801ad24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801ab4e:	461d      	mov	r5, r3
 801ab50:	ab0a      	add	r3, sp, #40	@ 0x28
 801ab52:	c303      	stmia	r3!, {r0, r1}
 801ab54:	6810      	ldr	r0, [r2, #0]
 801ab56:	6851      	ldr	r1, [r2, #4]
 801ab58:	ab0c      	add	r3, sp, #48	@ 0x30
 801ab5a:	c303      	stmia	r3!, {r0, r1}
 801ab5c:	a80a      	add	r0, sp, #40	@ 0x28
 801ab5e:	f7f7 f971 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab62:	4631      	mov	r1, r6
 801ab64:	a80c      	add	r0, sp, #48	@ 0x30
 801ab66:	f7f7 f995 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab6a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801ab6e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801ab72:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801ab76:	f8d8 0000 	ldr.w	r0, [r8]
 801ab7a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801ab7e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801ab82:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ab86:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ab8a:	440c      	add	r4, r1
 801ab8c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801ab90:	440a      	add	r2, r1
 801ab92:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801ab96:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801ab9a:	4413      	add	r3, r2
 801ab9c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801aba0:	6803      	ldr	r3, [r0, #0]
 801aba2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801aba4:	4798      	blx	r3
 801aba6:	2dff      	cmp	r5, #255	@ 0xff
 801aba8:	d124      	bne.n	801abf4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801abaa:	f010 0f01 	tst.w	r0, #1
 801abae:	f8d8 0000 	ldr.w	r0, [r8]
 801abb2:	d022      	beq.n	801abfa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801abb4:	2100      	movs	r1, #0
 801abb6:	f8d0 c000 	ldr.w	ip, [r0]
 801abba:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801abbe:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801abc2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801abc6:	f04f 0e01 	mov.w	lr, #1
 801abca:	f8cd e018 	str.w	lr, [sp, #24]
 801abce:	f8b9 e000 	ldrh.w	lr, [r9]
 801abd2:	9503      	str	r5, [sp, #12]
 801abd4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801abd8:	b2b6      	uxth	r6, r6
 801abda:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801abde:	9102      	str	r1, [sp, #8]
 801abe0:	b2bf      	uxth	r7, r7
 801abe2:	9601      	str	r6, [sp, #4]
 801abe4:	9700      	str	r7, [sp, #0]
 801abe6:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801abea:	4621      	mov	r1, r4
 801abec:	47a8      	blx	r5
 801abee:	b00e      	add	sp, #56	@ 0x38
 801abf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801abf4:	f010 0f04 	tst.w	r0, #4
 801abf8:	e7d9      	b.n	801abae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801abfa:	6803      	ldr	r3, [r0, #0]
 801abfc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801abfe:	4798      	blx	r3
 801ac00:	f8b9 3000 	ldrh.w	r3, [r9]
 801ac04:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801ac08:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801ac0c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801ac10:	fb03 1202 	mla	r2, r3, r2, r1
 801ac14:	ebac 0c07 	sub.w	ip, ip, r7
 801ac18:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ac1c:	435e      	muls	r6, r3
 801ac1e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801ac22:	2dff      	cmp	r5, #255	@ 0xff
 801ac24:	eba3 0707 	sub.w	r7, r3, r7
 801ac28:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ac2c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ac30:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801ac34:	d049      	beq.n	801acca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801ac36:	43eb      	mvns	r3, r5
 801ac38:	fa1f f985 	uxth.w	r9, r5
 801ac3c:	b2db      	uxtb	r3, r3
 801ac3e:	42b0      	cmp	r0, r6
 801ac40:	d266      	bcs.n	801ad10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ac42:	eb00 0a0e 	add.w	sl, r0, lr
 801ac46:	4550      	cmp	r0, sl
 801ac48:	4621      	mov	r1, r4
 801ac4a:	f104 0403 	add.w	r4, r4, #3
 801ac4e:	d25b      	bcs.n	801ad08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801ac50:	8802      	ldrh	r2, [r0, #0]
 801ac52:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ac56:	ea4f 2822 	mov.w	r8, r2, asr #8
 801ac5a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801ac5e:	fb11 f109 	smulbb	r1, r1, r9
 801ac62:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801ac66:	10d5      	asrs	r5, r2, #3
 801ac68:	fb08 1803 	mla	r8, r8, r3, r1
 801ac6c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801ac70:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ac74:	fb11 f109 	smulbb	r1, r1, r9
 801ac78:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ac7c:	fb05 1503 	mla	r5, r5, r3, r1
 801ac80:	00d2      	lsls	r2, r2, #3
 801ac82:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ac86:	b2d2      	uxtb	r2, r2
 801ac88:	fb11 f109 	smulbb	r1, r1, r9
 801ac8c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ac90:	fa1f f888 	uxth.w	r8, r8
 801ac94:	fb02 1203 	mla	r2, r2, r3, r1
 801ac98:	b292      	uxth	r2, r2
 801ac9a:	f108 0101 	add.w	r1, r8, #1
 801ac9e:	b2ad      	uxth	r5, r5
 801aca0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801aca4:	1c51      	adds	r1, r2, #1
 801aca6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801acaa:	1c69      	adds	r1, r5, #1
 801acac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801acb0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801acb4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801acb8:	096d      	lsrs	r5, r5, #5
 801acba:	ea42 0208 	orr.w	r2, r2, r8
 801acbe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801acc2:	432a      	orrs	r2, r5
 801acc4:	f820 2b02 	strh.w	r2, [r0], #2
 801acc8:	e7bd      	b.n	801ac46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801acca:	4a14      	ldr	r2, [pc, #80]	@ (801ad1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801accc:	42b0      	cmp	r0, r6
 801acce:	d21f      	bcs.n	801ad10 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801acd0:	eb00 050e 	add.w	r5, r0, lr
 801acd4:	42a8      	cmp	r0, r5
 801acd6:	4621      	mov	r1, r4
 801acd8:	f104 0403 	add.w	r4, r4, #3
 801acdc:	d210      	bcs.n	801ad00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801acde:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ace2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ace6:	00db      	lsls	r3, r3, #3
 801ace8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801acec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801acf0:	430b      	orrs	r3, r1
 801acf2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801acf6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801acfa:	f820 3b02 	strh.w	r3, [r0], #2
 801acfe:	e7e9      	b.n	801acd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ad00:	4438      	add	r0, r7
 801ad02:	eb01 040c 	add.w	r4, r1, ip
 801ad06:	e7e1      	b.n	801accc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801ad08:	4438      	add	r0, r7
 801ad0a:	eb01 040c 	add.w	r4, r1, ip
 801ad0e:	e796      	b.n	801ac3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ad10:	4b03      	ldr	r3, [pc, #12]	@ (801ad20 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ad12:	6818      	ldr	r0, [r3, #0]
 801ad14:	6803      	ldr	r3, [r0, #0]
 801ad16:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ad18:	4798      	blx	r3
 801ad1a:	e768      	b.n	801abee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ad1c:	fffff800 	.word	0xfffff800
 801ad20:	20002f34 	.word	0x20002f34
 801ad24:	20002f2e 	.word	0x20002f2e

0801ad28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ad28:	b4f0      	push	{r4, r5, r6, r7}
 801ad2a:	4616      	mov	r6, r2
 801ad2c:	2e01      	cmp	r6, #1
 801ad2e:	461c      	mov	r4, r3
 801ad30:	460d      	mov	r5, r1
 801ad32:	9a04      	ldr	r2, [sp, #16]
 801ad34:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ad38:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ad3c:	d012      	beq.n	801ad64 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ad3e:	d303      	bcc.n	801ad48 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ad40:	2e02      	cmp	r6, #2
 801ad42:	d00a      	beq.n	801ad5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ad44:	bcf0      	pop	{r4, r5, r6, r7}
 801ad46:	4770      	bx	lr
 801ad48:	6805      	ldr	r5, [r0, #0]
 801ad4a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ad4e:	68ed      	ldr	r5, [r5, #12]
 801ad50:	4613      	mov	r3, r2
 801ad52:	46ac      	mov	ip, r5
 801ad54:	4622      	mov	r2, r4
 801ad56:	bcf0      	pop	{r4, r5, r6, r7}
 801ad58:	4760      	bx	ip
 801ad5a:	4621      	mov	r1, r4
 801ad5c:	4628      	mov	r0, r5
 801ad5e:	bcf0      	pop	{r4, r5, r6, r7}
 801ad60:	f7ff bd94 	b.w	801a88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ad64:	4621      	mov	r1, r4
 801ad66:	4628      	mov	r0, r5
 801ad68:	bcf0      	pop	{r4, r5, r6, r7}
 801ad6a:	f7ff bee5 	b.w	801ab38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ad70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ad70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad74:	4681      	mov	r9, r0
 801ad76:	b093      	sub	sp, #76	@ 0x4c
 801ad78:	6810      	ldr	r0, [r2, #0]
 801ad7a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801ad7e:	4f6d      	ldr	r7, [pc, #436]	@ (801af34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ad80:	4688      	mov	r8, r1
 801ad82:	6851      	ldr	r1, [r2, #4]
 801ad84:	ac0e      	add	r4, sp, #56	@ 0x38
 801ad86:	c403      	stmia	r4!, {r0, r1}
 801ad88:	6818      	ldr	r0, [r3, #0]
 801ad8a:	6859      	ldr	r1, [r3, #4]
 801ad8c:	ac10      	add	r4, sp, #64	@ 0x40
 801ad8e:	4616      	mov	r6, r2
 801ad90:	c403      	stmia	r4!, {r0, r1}
 801ad92:	a80e      	add	r0, sp, #56	@ 0x38
 801ad94:	f7f7 f856 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad98:	4631      	mov	r1, r6
 801ad9a:	a810      	add	r0, sp, #64	@ 0x40
 801ad9c:	f7f7 f87a 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ada0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801ada4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801ada8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801adac:	4e62      	ldr	r6, [pc, #392]	@ (801af38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801adae:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801adb2:	6830      	ldr	r0, [r6, #0]
 801adb4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801adb8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801adbc:	4489      	add	r9, r1
 801adbe:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801adc2:	440a      	add	r2, r1
 801adc4:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801adc8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801adcc:	4413      	add	r3, r2
 801adce:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801add2:	6803      	ldr	r3, [r0, #0]
 801add4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801add6:	4798      	blx	r3
 801add8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801addc:	6830      	ldr	r0, [r6, #0]
 801adde:	d01d      	beq.n	801ae1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801ade0:	2200      	movs	r2, #0
 801ade2:	6801      	ldr	r1, [r0, #0]
 801ade4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801ade8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801adec:	220b      	movs	r2, #11
 801adee:	9207      	str	r2, [sp, #28]
 801adf0:	883a      	ldrh	r2, [r7, #0]
 801adf2:	9206      	str	r2, [sp, #24]
 801adf4:	2201      	movs	r2, #1
 801adf6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801adfa:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801adfe:	9203      	str	r2, [sp, #12]
 801ae00:	b2a4      	uxth	r4, r4
 801ae02:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801ae06:	9200      	str	r2, [sp, #0]
 801ae08:	b2ad      	uxth	r5, r5
 801ae0a:	9502      	str	r5, [sp, #8]
 801ae0c:	9401      	str	r4, [sp, #4]
 801ae0e:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801ae10:	4642      	mov	r2, r8
 801ae12:	4649      	mov	r1, r9
 801ae14:	47a0      	blx	r4
 801ae16:	b013      	add	sp, #76	@ 0x4c
 801ae18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae1c:	6803      	ldr	r3, [r0, #0]
 801ae1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ae20:	4798      	blx	r3
 801ae22:	883b      	ldrh	r3, [r7, #0]
 801ae24:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801ae28:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801ae2c:	fb03 1202 	mla	r2, r3, r2, r1
 801ae30:	435d      	muls	r5, r3
 801ae32:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ae36:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801ae3a:	920c      	str	r2, [sp, #48]	@ 0x30
 801ae3c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801ae40:	1b12      	subs	r2, r2, r4
 801ae42:	920d      	str	r2, [sp, #52]	@ 0x34
 801ae44:	0062      	lsls	r2, r4, #1
 801ae46:	1b1c      	subs	r4, r3, r4
 801ae48:	0063      	lsls	r3, r4, #1
 801ae4a:	920a      	str	r2, [sp, #40]	@ 0x28
 801ae4c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ae4e:	f04f 0e04 	mov.w	lr, #4
 801ae52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ae54:	4298      	cmp	r0, r3
 801ae56:	d266      	bcs.n	801af26 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ae58:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ae5a:	eb00 0b03 	add.w	fp, r0, r3
 801ae5e:	4558      	cmp	r0, fp
 801ae60:	d25c      	bcs.n	801af1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ae62:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ae66:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ae6a:	f858 2003 	ldr.w	r2, [r8, r3]
 801ae6e:	0e11      	lsrs	r1, r2, #24
 801ae70:	d012      	beq.n	801ae98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ae72:	29ff      	cmp	r1, #255	@ 0xff
 801ae74:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ae78:	d110      	bne.n	801ae9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ae7a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ae7e:	d10d      	bne.n	801ae9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ae80:	0953      	lsrs	r3, r2, #5
 801ae82:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801ae86:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ae8a:	f027 0707 	bic.w	r7, r7, #7
 801ae8e:	431f      	orrs	r7, r3
 801ae90:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ae94:	433a      	orrs	r2, r7
 801ae96:	8002      	strh	r2, [r0, #0]
 801ae98:	3002      	adds	r0, #2
 801ae9a:	e7e0      	b.n	801ae5e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ae9c:	fb0a f101 	mul.w	r1, sl, r1
 801aea0:	8806      	ldrh	r6, [r0, #0]
 801aea2:	1c4b      	adds	r3, r1, #1
 801aea4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801aea8:	1235      	asrs	r5, r6, #8
 801aeaa:	10f4      	asrs	r4, r6, #3
 801aeac:	121b      	asrs	r3, r3, #8
 801aeae:	00f6      	lsls	r6, r6, #3
 801aeb0:	b299      	uxth	r1, r3
 801aeb2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801aeb6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801aeba:	b2f6      	uxtb	r6, r6
 801aebc:	43db      	mvns	r3, r3
 801aebe:	b2d2      	uxtb	r2, r2
 801aec0:	b2db      	uxtb	r3, r3
 801aec2:	fb1c fc01 	smulbb	ip, ip, r1
 801aec6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801aeca:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801aece:	fb12 f201 	smulbb	r2, r2, r1
 801aed2:	fb05 c503 	mla	r5, r5, r3, ip
 801aed6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801aeda:	b2ff      	uxtb	r7, r7
 801aedc:	fb06 2203 	mla	r2, r6, r3, r2
 801aee0:	b2ad      	uxth	r5, r5
 801aee2:	fb17 f701 	smulbb	r7, r7, r1
 801aee6:	b292      	uxth	r2, r2
 801aee8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801aeec:	fb04 7403 	mla	r4, r4, r3, r7
 801aef0:	f105 0c01 	add.w	ip, r5, #1
 801aef4:	1c57      	adds	r7, r2, #1
 801aef6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801aefa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801aefe:	b2a4      	uxth	r4, r4
 801af00:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801af04:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801af08:	433d      	orrs	r5, r7
 801af0a:	1c67      	adds	r7, r4, #1
 801af0c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801af10:	0964      	lsrs	r4, r4, #5
 801af12:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801af16:	4325      	orrs	r5, r4
 801af18:	8005      	strh	r5, [r0, #0]
 801af1a:	e7bd      	b.n	801ae98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801af1c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801af1e:	4418      	add	r0, r3
 801af20:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801af22:	4499      	add	r9, r3
 801af24:	e795      	b.n	801ae52 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801af26:	4b04      	ldr	r3, [pc, #16]	@ (801af38 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801af28:	6818      	ldr	r0, [r3, #0]
 801af2a:	6803      	ldr	r3, [r0, #0]
 801af2c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801af2e:	4798      	blx	r3
 801af30:	e771      	b.n	801ae16 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801af32:	bf00      	nop
 801af34:	20002f2e 	.word	0x20002f2e
 801af38:	20002f34 	.word	0x20002f34

0801af3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801af3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af40:	b087      	sub	sp, #28
 801af42:	4680      	mov	r8, r0
 801af44:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801af48:	460d      	mov	r5, r1
 801af4a:	4614      	mov	r4, r2
 801af4c:	2e00      	cmp	r6, #0
 801af4e:	f000 80b9 	beq.w	801b0c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801af52:	6810      	ldr	r0, [r2, #0]
 801af54:	6851      	ldr	r1, [r2, #4]
 801af56:	af02      	add	r7, sp, #8
 801af58:	c703      	stmia	r7!, {r0, r1}
 801af5a:	6818      	ldr	r0, [r3, #0]
 801af5c:	6859      	ldr	r1, [r3, #4]
 801af5e:	af04      	add	r7, sp, #16
 801af60:	c703      	stmia	r7!, {r0, r1}
 801af62:	a802      	add	r0, sp, #8
 801af64:	f7f6 ff6e 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801af68:	4621      	mov	r1, r4
 801af6a:	a804      	add	r0, sp, #16
 801af6c:	f7f6 ff92 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801af70:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801af74:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801af78:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801af7c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801af80:	fb14 2103 	smlabb	r1, r4, r3, r2
 801af84:	eb08 0401 	add.w	r4, r8, r1
 801af88:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801af8c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801af90:	440a      	add	r2, r1
 801af92:	f8ad 2010 	strh.w	r2, [sp, #16]
 801af96:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801af9a:	4413      	add	r3, r2
 801af9c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801afa0:	4b4a      	ldr	r3, [pc, #296]	@ (801b0cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801afa2:	6818      	ldr	r0, [r3, #0]
 801afa4:	6803      	ldr	r3, [r0, #0]
 801afa6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801afa8:	4798      	blx	r3
 801afaa:	4b49      	ldr	r3, [pc, #292]	@ (801b0d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801afac:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801afb0:	881a      	ldrh	r2, [r3, #0]
 801afb2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801afb6:	2eff      	cmp	r6, #255	@ 0xff
 801afb8:	fb02 c101 	mla	r1, r2, r1, ip
 801afbc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801afc0:	fb02 f207 	mul.w	r2, r2, r7
 801afc4:	f105 0104 	add.w	r1, r5, #4
 801afc8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801afcc:	461d      	mov	r5, r3
 801afce:	d05a      	beq.n	801b086 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801afd0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801afd4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801afd8:	b2b6      	uxth	r6, r6
 801afda:	fa1f fe8e 	uxth.w	lr, lr
 801afde:	9301      	str	r3, [sp, #4]
 801afe0:	4282      	cmp	r2, r0
 801afe2:	d96a      	bls.n	801b0ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801afe4:	eb00 0b0a 	add.w	fp, r0, sl
 801afe8:	4583      	cmp	fp, r0
 801afea:	d940      	bls.n	801b06e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801afec:	f814 3b01 	ldrb.w	r3, [r4], #1
 801aff0:	8805      	ldrh	r5, [r0, #0]
 801aff2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801aff6:	122f      	asrs	r7, r5, #8
 801aff8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801affc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b000:	fb17 f70e 	smulbb	r7, r7, lr
 801b004:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801b008:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b00c:	00ed      	lsls	r5, r5, #3
 801b00e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801b012:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b016:	10df      	asrs	r7, r3, #3
 801b018:	b2ed      	uxtb	r5, r5
 801b01a:	00db      	lsls	r3, r3, #3
 801b01c:	fa1f fc8c 	uxth.w	ip, ip
 801b020:	fb19 f90e 	smulbb	r9, r9, lr
 801b024:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b028:	b2db      	uxtb	r3, r3
 801b02a:	fb15 f50e 	smulbb	r5, r5, lr
 801b02e:	fb07 9706 	mla	r7, r7, r6, r9
 801b032:	fb03 5306 	mla	r3, r3, r6, r5
 801b036:	f10c 0901 	add.w	r9, ip, #1
 801b03a:	b29b      	uxth	r3, r3
 801b03c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801b040:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801b044:	f103 0c01 	add.w	ip, r3, #1
 801b048:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b04c:	b2bf      	uxth	r7, r7
 801b04e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b052:	ea4c 0c09 	orr.w	ip, ip, r9
 801b056:	f107 0901 	add.w	r9, r7, #1
 801b05a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801b05e:	097f      	lsrs	r7, r7, #5
 801b060:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801b064:	ea4c 0c07 	orr.w	ip, ip, r7
 801b068:	f820 cb02 	strh.w	ip, [r0], #2
 801b06c:	e7bc      	b.n	801afe8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801b06e:	9b01      	ldr	r3, [sp, #4]
 801b070:	881b      	ldrh	r3, [r3, #0]
 801b072:	eba3 0308 	sub.w	r3, r3, r8
 801b076:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b07a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801b07e:	eba3 0308 	sub.w	r3, r3, r8
 801b082:	441c      	add	r4, r3
 801b084:	e7ac      	b.n	801afe0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801b086:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801b08a:	4282      	cmp	r2, r0
 801b08c:	d915      	bls.n	801b0ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801b08e:	eb00 060a 	add.w	r6, r0, sl
 801b092:	4286      	cmp	r6, r0
 801b094:	d906      	bls.n	801b0a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801b096:	f814 3b01 	ldrb.w	r3, [r4], #1
 801b09a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801b09e:	f820 3b02 	strh.w	r3, [r0], #2
 801b0a2:	e7f6      	b.n	801b092 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801b0a4:	882b      	ldrh	r3, [r5, #0]
 801b0a6:	eba3 0308 	sub.w	r3, r3, r8
 801b0aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b0ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801b0b2:	eba3 0308 	sub.w	r3, r3, r8
 801b0b6:	441c      	add	r4, r3
 801b0b8:	e7e7      	b.n	801b08a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801b0ba:	4b04      	ldr	r3, [pc, #16]	@ (801b0cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801b0bc:	6818      	ldr	r0, [r3, #0]
 801b0be:	6803      	ldr	r3, [r0, #0]
 801b0c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b0c2:	4798      	blx	r3
 801b0c4:	b007      	add	sp, #28
 801b0c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0ca:	bf00      	nop
 801b0cc:	20002f34 	.word	0x20002f34
 801b0d0:	20002f2e 	.word	0x20002f2e

0801b0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801b0d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0d8:	b091      	sub	sp, #68	@ 0x44
 801b0da:	4680      	mov	r8, r0
 801b0dc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801b0e0:	460f      	mov	r7, r1
 801b0e2:	4614      	mov	r4, r2
 801b0e4:	2d00      	cmp	r5, #0
 801b0e6:	d051      	beq.n	801b18c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801b0e8:	6810      	ldr	r0, [r2, #0]
 801b0ea:	6851      	ldr	r1, [r2, #4]
 801b0ec:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801b2f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801b0f0:	ae0c      	add	r6, sp, #48	@ 0x30
 801b0f2:	c603      	stmia	r6!, {r0, r1}
 801b0f4:	6818      	ldr	r0, [r3, #0]
 801b0f6:	6859      	ldr	r1, [r3, #4]
 801b0f8:	ae0e      	add	r6, sp, #56	@ 0x38
 801b0fa:	c603      	stmia	r6!, {r0, r1}
 801b0fc:	a80c      	add	r0, sp, #48	@ 0x30
 801b0fe:	f7f6 fea1 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b102:	4621      	mov	r1, r4
 801b104:	a80e      	add	r0, sp, #56	@ 0x38
 801b106:	f7f6 fec5 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b10a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801b10e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801b112:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801b116:	f8d9 0000 	ldr.w	r0, [r9]
 801b11a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801b11e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801b122:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b126:	eb08 0401 	add.w	r4, r8, r1
 801b12a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801b12e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801b2f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801b132:	440a      	add	r2, r1
 801b134:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801b138:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801b13c:	4413      	add	r3, r2
 801b13e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801b142:	6803      	ldr	r3, [r0, #0]
 801b144:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801b146:	4798      	blx	r3
 801b148:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801b14c:	f8d9 0000 	ldr.w	r0, [r9]
 801b150:	d01f      	beq.n	801b192 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801b152:	2200      	movs	r2, #0
 801b154:	6801      	ldr	r1, [r0, #0]
 801b156:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801b15a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801b15e:	220b      	movs	r2, #11
 801b160:	9207      	str	r2, [sp, #28]
 801b162:	f8b8 2000 	ldrh.w	r2, [r8]
 801b166:	9206      	str	r2, [sp, #24]
 801b168:	2201      	movs	r2, #1
 801b16a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801b16e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801b172:	9203      	str	r2, [sp, #12]
 801b174:	fa1f f28a 	uxth.w	r2, sl
 801b178:	9202      	str	r2, [sp, #8]
 801b17a:	b2b6      	uxth	r6, r6
 801b17c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801b180:	9200      	str	r2, [sp, #0]
 801b182:	9601      	str	r6, [sp, #4]
 801b184:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801b186:	463a      	mov	r2, r7
 801b188:	4621      	mov	r1, r4
 801b18a:	47a8      	blx	r5
 801b18c:	b011      	add	sp, #68	@ 0x44
 801b18e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b192:	6803      	ldr	r3, [r0, #0]
 801b194:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b196:	4798      	blx	r3
 801b198:	f8b8 2000 	ldrh.w	r2, [r8]
 801b19c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801b1a0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801b1a4:	2dff      	cmp	r5, #255	@ 0xff
 801b1a6:	fb02 1303 	mla	r3, r2, r3, r1
 801b1aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b1ae:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801b1b2:	fb0a fa02 	mul.w	sl, sl, r2
 801b1b6:	d062      	beq.n	801b27e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801b1b8:	ea6f 0c05 	mvn.w	ip, r5
 801b1bc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801b1c0:	930a      	str	r3, [sp, #40]	@ 0x28
 801b1c2:	b2ad      	uxth	r5, r5
 801b1c4:	fa5f fc8c 	uxtb.w	ip, ip
 801b1c8:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801b1cc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b1ce:	4298      	cmp	r0, r3
 801b1d0:	f080 8085 	bcs.w	801b2de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801b1d4:	eb00 0b09 	add.w	fp, r0, r9
 801b1d8:	4558      	cmp	r0, fp
 801b1da:	d246      	bcs.n	801b26a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801b1dc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801b1e0:	2303      	movs	r3, #3
 801b1e2:	2204      	movs	r2, #4
 801b1e4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801b1e8:	eb07 0a0e 	add.w	sl, r7, lr
 801b1ec:	8803      	ldrh	r3, [r0, #0]
 801b1ee:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801b1f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b1f6:	1219      	asrs	r1, r3, #8
 801b1f8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b1fc:	fb18 f805 	smulbb	r8, r8, r5
 801b200:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801b204:	10da      	asrs	r2, r3, #3
 801b206:	fb01 810c 	mla	r1, r1, ip, r8
 801b20a:	00db      	lsls	r3, r3, #3
 801b20c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801b210:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b214:	b2db      	uxtb	r3, r3
 801b216:	fb18 f805 	smulbb	r8, r8, r5
 801b21a:	fb1e fe05 	smulbb	lr, lr, r5
 801b21e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801b222:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801b226:	b289      	uxth	r1, r1
 801b228:	fb02 820c 	mla	r2, r2, ip, r8
 801b22c:	fb03 e30c 	mla	r3, r3, ip, lr
 801b230:	b292      	uxth	r2, r2
 801b232:	b29b      	uxth	r3, r3
 801b234:	f101 0801 	add.w	r8, r1, #1
 801b238:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801b23c:	f103 0e01 	add.w	lr, r3, #1
 801b240:	f102 0801 	add.w	r8, r2, #1
 801b244:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801b248:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801b24c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b250:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b254:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801b258:	ea4e 0101 	orr.w	r1, lr, r1
 801b25c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801b260:	ea41 0108 	orr.w	r1, r1, r8
 801b264:	f820 1b02 	strh.w	r1, [r0], #2
 801b268:	e7b6      	b.n	801b1d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801b26a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801b26c:	881b      	ldrh	r3, [r3, #0]
 801b26e:	1b9b      	subs	r3, r3, r6
 801b270:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b274:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b278:	1b9b      	subs	r3, r3, r6
 801b27a:	441c      	add	r4, r3
 801b27c:	e7a6      	b.n	801b1cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801b27e:	491b      	ldr	r1, [pc, #108]	@ (801b2ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801b280:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801b284:	2203      	movs	r2, #3
 801b286:	2504      	movs	r5, #4
 801b288:	4550      	cmp	r0, sl
 801b28a:	d228      	bcs.n	801b2de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801b28c:	eb00 0c09 	add.w	ip, r0, r9
 801b290:	4560      	cmp	r0, ip
 801b292:	4623      	mov	r3, r4
 801b294:	d219      	bcs.n	801b2ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801b296:	f893 e000 	ldrb.w	lr, [r3]
 801b29a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801b29e:	eb07 0b0e 	add.w	fp, r7, lr
 801b2a2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801b2a6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801b2aa:	f89b b001 	ldrb.w	fp, [fp, #1]
 801b2ae:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801b2b2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801b2b6:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801b2ba:	ea43 030b 	orr.w	r3, r3, fp
 801b2be:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801b2c2:	3401      	adds	r4, #1
 801b2c4:	f820 3b02 	strh.w	r3, [r0], #2
 801b2c8:	e7e2      	b.n	801b290 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801b2ca:	f8b8 3000 	ldrh.w	r3, [r8]
 801b2ce:	1b9b      	subs	r3, r3, r6
 801b2d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b2d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801b2d8:	1b9b      	subs	r3, r3, r6
 801b2da:	441c      	add	r4, r3
 801b2dc:	e7d4      	b.n	801b288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801b2de:	4b04      	ldr	r3, [pc, #16]	@ (801b2f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801b2e0:	6818      	ldr	r0, [r3, #0]
 801b2e2:	6803      	ldr	r3, [r0, #0]
 801b2e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b2e6:	4798      	blx	r3
 801b2e8:	e750      	b.n	801b18c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801b2ea:	bf00      	nop
 801b2ec:	fffff800 	.word	0xfffff800
 801b2f0:	20002f34 	.word	0x20002f34
 801b2f4:	20002f2e 	.word	0x20002f2e

0801b2f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801b2f8:	b4f0      	push	{r4, r5, r6, r7}
 801b2fa:	460c      	mov	r4, r1
 801b2fc:	4611      	mov	r1, r2
 801b2fe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801b302:	780f      	ldrb	r7, [r1, #0]
 801b304:	784e      	ldrb	r6, [r1, #1]
 801b306:	2f01      	cmp	r7, #1
 801b308:	461a      	mov	r2, r3
 801b30a:	9b04      	ldr	r3, [sp, #16]
 801b30c:	d038      	beq.n	801b380 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801b30e:	d31f      	bcc.n	801b350 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801b310:	2f02      	cmp	r7, #2
 801b312:	d14d      	bne.n	801b3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b314:	2e03      	cmp	r6, #3
 801b316:	d84b      	bhi.n	801b3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b318:	e8df f006 	tbb	[pc, r6]
 801b31c:	17140702 	.word	0x17140702
 801b320:	9504      	str	r5, [sp, #16]
 801b322:	4620      	mov	r0, r4
 801b324:	bcf0      	pop	{r4, r5, r6, r7}
 801b326:	f7ff be09 	b.w	801af3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801b32a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b32c:	2800      	cmp	r0, #0
 801b32e:	d03f      	beq.n	801b3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b330:	6806      	ldr	r6, [r0, #0]
 801b332:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b336:	68b5      	ldr	r5, [r6, #8]
 801b338:	4613      	mov	r3, r2
 801b33a:	46ac      	mov	ip, r5
 801b33c:	460a      	mov	r2, r1
 801b33e:	4621      	mov	r1, r4
 801b340:	bcf0      	pop	{r4, r5, r6, r7}
 801b342:	4760      	bx	ip
 801b344:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b348:	e7f0      	b.n	801b32c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b34a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b34e:	e7ed      	b.n	801b32c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801b350:	2e03      	cmp	r6, #3
 801b352:	d82d      	bhi.n	801b3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b354:	e8df f006 	tbb	[pc, r6]
 801b358:	110e0702 	.word	0x110e0702
 801b35c:	9504      	str	r5, [sp, #16]
 801b35e:	4620      	mov	r0, r4
 801b360:	bcf0      	pop	{r4, r5, r6, r7}
 801b362:	f7ff bd05 	b.w	801ad70 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801b366:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b368:	b310      	cbz	r0, 801b3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b36a:	6806      	ldr	r6, [r0, #0]
 801b36c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b370:	68f5      	ldr	r5, [r6, #12]
 801b372:	e7e1      	b.n	801b338 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b374:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b378:	e7f6      	b.n	801b368 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801b37a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b37e:	e7f3      	b.n	801b368 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801b380:	2e03      	cmp	r6, #3
 801b382:	d815      	bhi.n	801b3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b384:	e8df f006 	tbb	[pc, r6]
 801b388:	110e0702 	.word	0x110e0702
 801b38c:	9504      	str	r5, [sp, #16]
 801b38e:	4620      	mov	r0, r4
 801b390:	bcf0      	pop	{r4, r5, r6, r7}
 801b392:	f7ff be9f 	b.w	801b0d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801b396:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801b398:	b150      	cbz	r0, 801b3b0 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801b39a:	6806      	ldr	r6, [r0, #0]
 801b39c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801b3a0:	6935      	ldr	r5, [r6, #16]
 801b3a2:	e7c9      	b.n	801b338 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801b3a4:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801b3a8:	e7f6      	b.n	801b398 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801b3aa:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801b3ae:	e7f3      	b.n	801b398 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801b3b0:	bcf0      	pop	{r4, r5, r6, r7}
 801b3b2:	4770      	bx	lr

0801b3b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801b3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3b8:	4604      	mov	r4, r0
 801b3ba:	b087      	sub	sp, #28
 801b3bc:	6810      	ldr	r0, [r2, #0]
 801b3be:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801b3c2:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801b5fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801b3c6:	460e      	mov	r6, r1
 801b3c8:	6851      	ldr	r1, [r2, #4]
 801b3ca:	ad02      	add	r5, sp, #8
 801b3cc:	c503      	stmia	r5!, {r0, r1}
 801b3ce:	6818      	ldr	r0, [r3, #0]
 801b3d0:	6859      	ldr	r1, [r3, #4]
 801b3d2:	ad04      	add	r5, sp, #16
 801b3d4:	4617      	mov	r7, r2
 801b3d6:	c503      	stmia	r5!, {r0, r1}
 801b3d8:	a802      	add	r0, sp, #8
 801b3da:	f7f6 fd33 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b3de:	4639      	mov	r1, r7
 801b3e0:	a804      	add	r0, sp, #16
 801b3e2:	f7f6 fd57 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b3e6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b3ea:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b3ee:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801b3f2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801b3f6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801b3fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 801b3fe:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801b402:	440e      	add	r6, r1
 801b404:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b408:	440a      	add	r2, r1
 801b40a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801b40e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b412:	4413      	add	r3, r2
 801b414:	f8ad 3012 	strh.w	r3, [sp, #18]
 801b418:	4b77      	ldr	r3, [pc, #476]	@ (801b5f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b41a:	6818      	ldr	r0, [r3, #0]
 801b41c:	6803      	ldr	r3, [r0, #0]
 801b41e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b420:	4798      	blx	r3
 801b422:	f8b9 b000 	ldrh.w	fp, [r9]
 801b426:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b42a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801b42e:	fb0b 2303 	mla	r3, fp, r3, r2
 801b432:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b436:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801b43a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801b43e:	fb05 f50b 	mul.w	r5, r5, fp
 801b442:	9300      	str	r3, [sp, #0]
 801b444:	d069      	beq.n	801b51a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801b446:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801b44a:	4558      	cmp	r0, fp
 801b44c:	f080 80cc 	bcs.w	801b5e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b450:	9b00      	ldr	r3, [sp, #0]
 801b452:	18c3      	adds	r3, r0, r3
 801b454:	9301      	str	r3, [sp, #4]
 801b456:	4631      	mov	r1, r6
 801b458:	9b01      	ldr	r3, [sp, #4]
 801b45a:	4298      	cmp	r0, r3
 801b45c:	d24f      	bcs.n	801b4fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801b45e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801b462:	2a00      	cmp	r2, #0
 801b464:	d048      	beq.n	801b4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b466:	fb0a f202 	mul.w	r2, sl, r2
 801b46a:	1c53      	adds	r3, r2, #1
 801b46c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b470:	121b      	asrs	r3, r3, #8
 801b472:	d041      	beq.n	801b4f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801b474:	8802      	ldrh	r2, [r0, #0]
 801b476:	f8b4 c000 	ldrh.w	ip, [r4]
 801b47a:	b29e      	uxth	r6, r3
 801b47c:	1215      	asrs	r5, r2, #8
 801b47e:	43db      	mvns	r3, r3
 801b480:	b2db      	uxtb	r3, r3
 801b482:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b486:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b48a:	fb15 f503 	smulbb	r5, r5, r3
 801b48e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b492:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b496:	00d2      	lsls	r2, r2, #3
 801b498:	fb07 5706 	mla	r7, r7, r6, r5
 801b49c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b4a0:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b4a4:	b2d2      	uxtb	r2, r2
 801b4a6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b4aa:	b2bf      	uxth	r7, r7
 801b4ac:	fb1e fe03 	smulbb	lr, lr, r3
 801b4b0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b4b4:	fa5f fc8c 	uxtb.w	ip, ip
 801b4b8:	fb12 f203 	smulbb	r2, r2, r3
 801b4bc:	fb05 e506 	mla	r5, r5, r6, lr
 801b4c0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801b4c4:	f107 0e01 	add.w	lr, r7, #1
 801b4c8:	fa1f fc8c 	uxth.w	ip, ip
 801b4cc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801b4d0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801b4d4:	f10c 0701 	add.w	r7, ip, #1
 801b4d8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b4dc:	b2ad      	uxth	r5, r5
 801b4de:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b4e2:	ea47 070e 	orr.w	r7, r7, lr
 801b4e6:	f105 0e01 	add.w	lr, r5, #1
 801b4ea:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b4ee:	096d      	lsrs	r5, r5, #5
 801b4f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b4f4:	432f      	orrs	r7, r5
 801b4f6:	8007      	strh	r7, [r0, #0]
 801b4f8:	3002      	adds	r0, #2
 801b4fa:	3402      	adds	r4, #2
 801b4fc:	e7ac      	b.n	801b458 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801b4fe:	f8b9 3000 	ldrh.w	r3, [r9]
 801b502:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b506:	eba3 0308 	sub.w	r3, r3, r8
 801b50a:	eba6 0608 	sub.w	r6, r6, r8
 801b50e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b512:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b516:	440e      	add	r6, r1
 801b518:	e797      	b.n	801b44a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801b51a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801b51e:	42a8      	cmp	r0, r5
 801b520:	d262      	bcs.n	801b5e8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801b522:	9b00      	ldr	r3, [sp, #0]
 801b524:	4631      	mov	r1, r6
 801b526:	eb00 0b03 	add.w	fp, r0, r3
 801b52a:	4558      	cmp	r0, fp
 801b52c:	d24e      	bcs.n	801b5cc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801b52e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801b532:	b12b      	cbz	r3, 801b540 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b534:	2bff      	cmp	r3, #255	@ 0xff
 801b536:	f8b4 e000 	ldrh.w	lr, [r4]
 801b53a:	d104      	bne.n	801b546 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801b53c:	f8a0 e000 	strh.w	lr, [r0]
 801b540:	3002      	adds	r0, #2
 801b542:	3402      	adds	r4, #2
 801b544:	e7f1      	b.n	801b52a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801b546:	8802      	ldrh	r2, [r0, #0]
 801b548:	b29f      	uxth	r7, r3
 801b54a:	1216      	asrs	r6, r2, #8
 801b54c:	43db      	mvns	r3, r3
 801b54e:	b2db      	uxtb	r3, r3
 801b550:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b554:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b558:	fb16 f603 	smulbb	r6, r6, r3
 801b55c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801b560:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b564:	00d2      	lsls	r2, r2, #3
 801b566:	fb0c 6c07 	mla	ip, ip, r7, r6
 801b56a:	b2d2      	uxtb	r2, r2
 801b56c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b570:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b574:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b578:	fb1a fa03 	smulbb	sl, sl, r3
 801b57c:	fa1f fc8c 	uxth.w	ip, ip
 801b580:	fb12 f303 	smulbb	r3, r2, r3
 801b584:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b588:	fa5f fe8e 	uxtb.w	lr, lr
 801b58c:	fb06 a607 	mla	r6, r6, r7, sl
 801b590:	f10c 0201 	add.w	r2, ip, #1
 801b594:	fb0e 3307 	mla	r3, lr, r7, r3
 801b598:	b2b6      	uxth	r6, r6
 801b59a:	b29b      	uxth	r3, r3
 801b59c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b5a0:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801b5a4:	f106 0a01 	add.w	sl, r6, #1
 801b5a8:	f103 0c01 	add.w	ip, r3, #1
 801b5ac:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b5b0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801b5b4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b5b8:	0976      	lsrs	r6, r6, #5
 801b5ba:	ea4c 0c02 	orr.w	ip, ip, r2
 801b5be:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b5c2:	ea4c 0c06 	orr.w	ip, ip, r6
 801b5c6:	f8a0 c000 	strh.w	ip, [r0]
 801b5ca:	e7b9      	b.n	801b540 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801b5cc:	f8b9 3000 	ldrh.w	r3, [r9]
 801b5d0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801b5d4:	eba3 0308 	sub.w	r3, r3, r8
 801b5d8:	eba6 0608 	sub.w	r6, r6, r8
 801b5dc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801b5e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b5e4:	440e      	add	r6, r1
 801b5e6:	e79a      	b.n	801b51e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801b5e8:	4b03      	ldr	r3, [pc, #12]	@ (801b5f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801b5ea:	6818      	ldr	r0, [r3, #0]
 801b5ec:	6803      	ldr	r3, [r0, #0]
 801b5ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b5f0:	4798      	blx	r3
 801b5f2:	b007      	add	sp, #28
 801b5f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5f8:	20002f34 	.word	0x20002f34
 801b5fc:	20002f2e 	.word	0x20002f2e

0801b600 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801b600:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b604:	b089      	sub	sp, #36	@ 0x24
 801b606:	4607      	mov	r7, r0
 801b608:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801b60c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b60e:	4688      	mov	r8, r1
 801b610:	4692      	mov	sl, r2
 801b612:	4699      	mov	r9, r3
 801b614:	2e00      	cmp	r6, #0
 801b616:	d048      	beq.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b618:	4608      	mov	r0, r1
 801b61a:	f7fa f827 	bl	801566c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b61e:	4605      	mov	r5, r0
 801b620:	4640      	mov	r0, r8
 801b622:	f7fa f857 	bl	80156d4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b626:	f8ad 000e 	strh.w	r0, [sp, #14]
 801b62a:	4640      	mov	r0, r8
 801b62c:	f8ad a008 	strh.w	sl, [sp, #8]
 801b630:	f8ad 500c 	strh.w	r5, [sp, #12]
 801b634:	f8ad 900a 	strh.w	r9, [sp, #10]
 801b638:	f7fa f90a 	bl	8015850 <_ZNK8touchgfx6Bitmap7getDataEv>
 801b63c:	4605      	mov	r5, r0
 801b63e:	4640      	mov	r0, r8
 801b640:	f7fa f936 	bl	80158b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801b644:	4682      	mov	sl, r0
 801b646:	4640      	mov	r0, r8
 801b648:	f7fa f986 	bl	8015958 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801b64c:	2810      	cmp	r0, #16
 801b64e:	d82c      	bhi.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b650:	e8df f010 	tbh	[pc, r0, lsl #1]
 801b654:	00ba00ca 	.word	0x00ba00ca
 801b658:	002b0011 	.word	0x002b0011
 801b65c:	002b002b 	.word	0x002b002b
 801b660:	002b002b 	.word	0x002b002b
 801b664:	002b002b 	.word	0x002b002b
 801b668:	00c1002b 	.word	0x00c1002b
 801b66c:	002b002b 	.word	0x002b002b
 801b670:	002b0180 	.word	0x002b0180
 801b674:	0173      	.short	0x0173
 801b676:	4bbc      	ldr	r3, [pc, #752]	@ (801b968 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801b678:	6818      	ldr	r0, [r3, #0]
 801b67a:	6803      	ldr	r3, [r0, #0]
 801b67c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801b67e:	4798      	blx	r3
 801b680:	2eff      	cmp	r6, #255	@ 0xff
 801b682:	d101      	bne.n	801b688 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801b684:	0683      	lsls	r3, r0, #26
 801b686:	d506      	bpl.n	801b696 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801b688:	4633      	mov	r3, r6
 801b68a:	4622      	mov	r2, r4
 801b68c:	a902      	add	r1, sp, #8
 801b68e:	4628      	mov	r0, r5
 801b690:	f7ff f8fc 	bl	801a88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b694:	e009      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b696:	4640      	mov	r0, r8
 801b698:	f7fa f8a2 	bl	80157e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b69c:	b940      	cbnz	r0, 801b6b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801b69e:	4623      	mov	r3, r4
 801b6a0:	aa02      	add	r2, sp, #8
 801b6a2:	4629      	mov	r1, r5
 801b6a4:	4638      	mov	r0, r7
 801b6a6:	f7ff f9d7 	bl	801aa58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b6aa:	b009      	add	sp, #36	@ 0x24
 801b6ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b6b0:	f10d 0918 	add.w	r9, sp, #24
 801b6b4:	4641      	mov	r1, r8
 801b6b6:	4648      	mov	r0, r9
 801b6b8:	f7fa f840 	bl	801573c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b6bc:	e899 0003 	ldmia.w	r9, {r0, r1}
 801b6c0:	f10d 0810 	add.w	r8, sp, #16
 801b6c4:	e888 0003 	stmia.w	r8, {r0, r1}
 801b6c8:	4640      	mov	r0, r8
 801b6ca:	4621      	mov	r1, r4
 801b6cc:	f7f3 f9f6 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 801b6d0:	4640      	mov	r0, r8
 801b6d2:	f7f3 fa36 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b6d6:	2800      	cmp	r0, #0
 801b6d8:	d1d6      	bne.n	801b688 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801b6da:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b6de:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b6e2:	4293      	cmp	r3, r2
 801b6e4:	dd12      	ble.n	801b70c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801b6e6:	1a9b      	subs	r3, r3, r2
 801b6e8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b6ec:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b6f0:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b6f4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b6f8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b6fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b700:	464a      	mov	r2, r9
 801b702:	4633      	mov	r3, r6
 801b704:	a902      	add	r1, sp, #8
 801b706:	4628      	mov	r0, r5
 801b708:	f7ff f8c0 	bl	801a88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b70c:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b710:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b714:	4293      	cmp	r3, r2
 801b716:	dd12      	ble.n	801b73e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801b718:	1a9b      	subs	r3, r3, r2
 801b71a:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b71e:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b722:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b726:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b72a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b72e:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b732:	23ff      	movs	r3, #255	@ 0xff
 801b734:	464a      	mov	r2, r9
 801b736:	a902      	add	r1, sp, #8
 801b738:	4628      	mov	r0, r5
 801b73a:	f7ff f8a7 	bl	801a88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b73e:	4643      	mov	r3, r8
 801b740:	aa02      	add	r2, sp, #8
 801b742:	4629      	mov	r1, r5
 801b744:	4638      	mov	r0, r7
 801b746:	f7ff f987 	bl	801aa58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801b74a:	88a2      	ldrh	r2, [r4, #4]
 801b74c:	8823      	ldrh	r3, [r4, #0]
 801b74e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b752:	4413      	add	r3, r2
 801b754:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b758:	440a      	add	r2, r1
 801b75a:	b29b      	uxth	r3, r3
 801b75c:	b292      	uxth	r2, r2
 801b75e:	b211      	sxth	r1, r2
 801b760:	b218      	sxth	r0, r3
 801b762:	4288      	cmp	r0, r1
 801b764:	dd12      	ble.n	801b78c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801b766:	1a9b      	subs	r3, r3, r2
 801b768:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b76c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801b770:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b774:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b778:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b77c:	23ff      	movs	r3, #255	@ 0xff
 801b77e:	464a      	mov	r2, r9
 801b780:	a902      	add	r1, sp, #8
 801b782:	4628      	mov	r0, r5
 801b784:	f8ad 601a 	strh.w	r6, [sp, #26]
 801b788:	f7ff f880 	bl	801a88c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801b78c:	88e2      	ldrh	r2, [r4, #6]
 801b78e:	8863      	ldrh	r3, [r4, #2]
 801b790:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b794:	4413      	add	r3, r2
 801b796:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b79a:	440a      	add	r2, r1
 801b79c:	b29b      	uxth	r3, r3
 801b79e:	b292      	uxth	r2, r2
 801b7a0:	b211      	sxth	r1, r2
 801b7a2:	b218      	sxth	r0, r3
 801b7a4:	4288      	cmp	r0, r1
 801b7a6:	dd80      	ble.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b7a8:	1a9b      	subs	r3, r3, r2
 801b7aa:	f9b4 6000 	ldrsh.w	r6, [r4]
 801b7ae:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b7b2:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b7b6:	f8ad 6018 	strh.w	r6, [sp, #24]
 801b7ba:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b7be:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b7c2:	23ff      	movs	r3, #255	@ 0xff
 801b7c4:	464a      	mov	r2, r9
 801b7c6:	e761      	b.n	801b68c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801b7c8:	4633      	mov	r3, r6
 801b7ca:	4622      	mov	r2, r4
 801b7cc:	a902      	add	r1, sp, #8
 801b7ce:	4628      	mov	r0, r5
 801b7d0:	f7ff f9b2 	bl	801ab38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801b7d4:	e769      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b7d6:	e9cd 4600 	strd	r4, r6, [sp]
 801b7da:	ab02      	add	r3, sp, #8
 801b7dc:	4652      	mov	r2, sl
 801b7de:	4629      	mov	r1, r5
 801b7e0:	4638      	mov	r0, r7
 801b7e2:	f7ff fd89 	bl	801b2f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801b7e6:	e760      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b7e8:	4640      	mov	r0, r8
 801b7ea:	f7f9 fff9 	bl	80157e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801b7ee:	b948      	cbnz	r0, 801b804 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801b7f0:	683b      	ldr	r3, [r7, #0]
 801b7f2:	e9cd 6000 	strd	r6, r0, [sp]
 801b7f6:	aa02      	add	r2, sp, #8
 801b7f8:	68de      	ldr	r6, [r3, #12]
 801b7fa:	4629      	mov	r1, r5
 801b7fc:	4623      	mov	r3, r4
 801b7fe:	4638      	mov	r0, r7
 801b800:	47b0      	blx	r6
 801b802:	e752      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b804:	f10d 0918 	add.w	r9, sp, #24
 801b808:	4641      	mov	r1, r8
 801b80a:	4648      	mov	r0, r9
 801b80c:	f7f9 ff96 	bl	801573c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b810:	e899 0003 	ldmia.w	r9, {r0, r1}
 801b814:	f10d 0810 	add.w	r8, sp, #16
 801b818:	e888 0003 	stmia.w	r8, {r0, r1}
 801b81c:	4640      	mov	r0, r8
 801b81e:	4621      	mov	r1, r4
 801b820:	f7f3 f94c 	bl	800eabc <_ZN8touchgfx4RectaNERKS0_>
 801b824:	4640      	mov	r0, r8
 801b826:	f7f3 f98c 	bl	800eb42 <_ZNK8touchgfx4Rect7isEmptyEv>
 801b82a:	b138      	cbz	r0, 801b83c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801b82c:	9600      	str	r6, [sp, #0]
 801b82e:	4623      	mov	r3, r4
 801b830:	aa02      	add	r2, sp, #8
 801b832:	4651      	mov	r1, sl
 801b834:	4628      	mov	r0, r5
 801b836:	f7ff fdbd 	bl	801b3b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b83a:	e736      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b83c:	683b      	ldr	r3, [r7, #0]
 801b83e:	e9cd 6000 	strd	r6, r0, [sp]
 801b842:	aa02      	add	r2, sp, #8
 801b844:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801b848:	4629      	mov	r1, r5
 801b84a:	4643      	mov	r3, r8
 801b84c:	4638      	mov	r0, r7
 801b84e:	47d8      	blx	fp
 801b850:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801b854:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801b858:	4293      	cmp	r3, r2
 801b85a:	dd13      	ble.n	801b884 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801b85c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801b860:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801b864:	f8ad 0018 	strh.w	r0, [sp, #24]
 801b868:	1a9b      	subs	r3, r3, r2
 801b86a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801b86e:	f8ad 101c 	strh.w	r1, [sp, #28]
 801b872:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b876:	9600      	str	r6, [sp, #0]
 801b878:	464b      	mov	r3, r9
 801b87a:	aa02      	add	r2, sp, #8
 801b87c:	4651      	mov	r1, sl
 801b87e:	4628      	mov	r0, r5
 801b880:	f7ff fd98 	bl	801b3b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b884:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801b888:	f9b4 2000 	ldrsh.w	r2, [r4]
 801b88c:	4293      	cmp	r3, r2
 801b88e:	dd13      	ble.n	801b8b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801b890:	1a9b      	subs	r3, r3, r2
 801b892:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801b896:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801b89a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801b89e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801b8a2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b8a6:	f8ad 101e 	strh.w	r1, [sp, #30]
 801b8aa:	9600      	str	r6, [sp, #0]
 801b8ac:	464b      	mov	r3, r9
 801b8ae:	aa02      	add	r2, sp, #8
 801b8b0:	4651      	mov	r1, sl
 801b8b2:	4628      	mov	r0, r5
 801b8b4:	f7ff fd7e 	bl	801b3b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b8b8:	88a2      	ldrh	r2, [r4, #4]
 801b8ba:	8823      	ldrh	r3, [r4, #0]
 801b8bc:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801b8c0:	4413      	add	r3, r2
 801b8c2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b8c6:	440a      	add	r2, r1
 801b8c8:	b29b      	uxth	r3, r3
 801b8ca:	b292      	uxth	r2, r2
 801b8cc:	b211      	sxth	r1, r2
 801b8ce:	b218      	sxth	r0, r3
 801b8d0:	4288      	cmp	r0, r1
 801b8d2:	dd13      	ble.n	801b8fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801b8d4:	1a9b      	subs	r3, r3, r2
 801b8d6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801b8da:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801b8de:	f8ad 1018 	strh.w	r1, [sp, #24]
 801b8e2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b8e6:	f8ad 001e 	strh.w	r0, [sp, #30]
 801b8ea:	9600      	str	r6, [sp, #0]
 801b8ec:	464b      	mov	r3, r9
 801b8ee:	aa02      	add	r2, sp, #8
 801b8f0:	4651      	mov	r1, sl
 801b8f2:	4628      	mov	r0, r5
 801b8f4:	f8ad 701a 	strh.w	r7, [sp, #26]
 801b8f8:	f7ff fd5c 	bl	801b3b4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801b8fc:	88e2      	ldrh	r2, [r4, #6]
 801b8fe:	8863      	ldrh	r3, [r4, #2]
 801b900:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801b904:	4413      	add	r3, r2
 801b906:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801b90a:	440a      	add	r2, r1
 801b90c:	b29b      	uxth	r3, r3
 801b90e:	b292      	uxth	r2, r2
 801b910:	b211      	sxth	r1, r2
 801b912:	b218      	sxth	r0, r3
 801b914:	4288      	cmp	r0, r1
 801b916:	f77f aec8 	ble.w	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b91a:	f9b4 7000 	ldrsh.w	r7, [r4]
 801b91e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801b922:	f8ad 7018 	strh.w	r7, [sp, #24]
 801b926:	1a9b      	subs	r3, r3, r2
 801b928:	f8ad 301e 	strh.w	r3, [sp, #30]
 801b92c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801b930:	f8ad 001c 	strh.w	r0, [sp, #28]
 801b934:	9600      	str	r6, [sp, #0]
 801b936:	464b      	mov	r3, r9
 801b938:	e77a      	b.n	801b830 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801b93a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801b93e:	2800      	cmp	r0, #0
 801b940:	f43f aeb3 	beq.w	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b944:	6803      	ldr	r3, [r0, #0]
 801b946:	9600      	str	r6, [sp, #0]
 801b948:	68de      	ldr	r6, [r3, #12]
 801b94a:	4623      	mov	r3, r4
 801b94c:	aa02      	add	r2, sp, #8
 801b94e:	4629      	mov	r1, r5
 801b950:	47b0      	blx	r6
 801b952:	e6aa      	b.n	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b954:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801b958:	2800      	cmp	r0, #0
 801b95a:	f43f aea6 	beq.w	801b6aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801b95e:	6803      	ldr	r3, [r0, #0]
 801b960:	9600      	str	r6, [sp, #0]
 801b962:	689e      	ldr	r6, [r3, #8]
 801b964:	e7f1      	b.n	801b94a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801b966:	bf00      	nop
 801b968:	20002f34 	.word	0x20002f34

0801b96c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801b96c:	b180      	cbz	r0, 801b990 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801b96e:	2903      	cmp	r1, #3
 801b970:	d81c      	bhi.n	801b9ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b972:	e8df f001 	tbb	[pc, r1]
 801b976:	1d02      	.short	0x1d02
 801b978:	1f08      	.short	0x1f08
 801b97a:	4b10      	ldr	r3, [pc, #64]	@ (801b9bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b97c:	8818      	ldrh	r0, [r3, #0]
 801b97e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b982:	4240      	negs	r0, r0
 801b984:	4770      	bx	lr
 801b986:	4b0d      	ldr	r3, [pc, #52]	@ (801b9bc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801b988:	8818      	ldrh	r0, [r3, #0]
 801b98a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b98e:	4770      	bx	lr
 801b990:	2903      	cmp	r1, #3
 801b992:	d80b      	bhi.n	801b9ac <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801b994:	a301      	add	r3, pc, #4	@ (adr r3, 801b99c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801b996:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b99a:	bf00      	nop
 801b99c:	0801b9b1 	.word	0x0801b9b1
 801b9a0:	0801b987 	.word	0x0801b987
 801b9a4:	0801b9b5 	.word	0x0801b9b5
 801b9a8:	0801b97b 	.word	0x0801b97b
 801b9ac:	2000      	movs	r0, #0
 801b9ae:	4770      	bx	lr
 801b9b0:	2001      	movs	r0, #1
 801b9b2:	4770      	bx	lr
 801b9b4:	f04f 30ff 	mov.w	r0, #4294967295
 801b9b8:	4770      	bx	lr
 801b9ba:	bf00      	nop
 801b9bc:	20002f2e 	.word	0x20002f2e

0801b9c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801b9c0:	b180      	cbz	r0, 801b9e4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801b9c2:	2903      	cmp	r1, #3
 801b9c4:	d81c      	bhi.n	801ba00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b9c6:	e8df f001 	tbb	[pc, r1]
 801b9ca:	021d      	.short	0x021d
 801b9cc:	071f      	.short	0x071f
 801b9ce:	4b10      	ldr	r3, [pc, #64]	@ (801ba10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b9d0:	8818      	ldrh	r0, [r3, #0]
 801b9d2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b9d6:	4770      	bx	lr
 801b9d8:	4b0d      	ldr	r3, [pc, #52]	@ (801ba10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801b9da:	8818      	ldrh	r0, [r3, #0]
 801b9dc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801b9e0:	4240      	negs	r0, r0
 801b9e2:	4770      	bx	lr
 801b9e4:	2903      	cmp	r1, #3
 801b9e6:	d80b      	bhi.n	801ba00 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801b9e8:	a301      	add	r3, pc, #4	@ (adr r3, 801b9f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801b9ea:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801b9ee:	bf00      	nop
 801b9f0:	0801b9cf 	.word	0x0801b9cf
 801b9f4:	0801ba09 	.word	0x0801ba09
 801b9f8:	0801b9d9 	.word	0x0801b9d9
 801b9fc:	0801ba05 	.word	0x0801ba05
 801ba00:	2000      	movs	r0, #0
 801ba02:	4770      	bx	lr
 801ba04:	2001      	movs	r0, #1
 801ba06:	4770      	bx	lr
 801ba08:	f04f 30ff 	mov.w	r0, #4294967295
 801ba0c:	4770      	bx	lr
 801ba0e:	bf00      	nop
 801ba10:	20002f2e 	.word	0x20002f2e

0801ba14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ba14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba18:	b099      	sub	sp, #100	@ 0x64
 801ba1a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ba1c:	a914      	add	r1, sp, #80	@ 0x50
 801ba1e:	e881 000c 	stmia.w	r1, {r2, r3}
 801ba22:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801ba26:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801ba2a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801ba2e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ba30:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801ba34:	9310      	str	r3, [sp, #64]	@ 0x40
 801ba36:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ba3a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801ba3e:	930c      	str	r3, [sp, #48]	@ 0x30
 801ba40:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801ba44:	798f      	ldrb	r7, [r1, #6]
 801ba46:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801ba4a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801ba4e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801ba52:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801ba56:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801ba5a:	431f      	orrs	r7, r3
 801ba5c:	f000 8195 	beq.w	801bd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ba60:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801ba64:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801ba68:	f891 9007 	ldrb.w	r9, [r1, #7]
 801ba6c:	ea59 0903 	orrs.w	r9, r9, r3
 801ba70:	f000 818b 	beq.w	801bd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ba74:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801ba78:	b29b      	uxth	r3, r3
 801ba7a:	2d00      	cmp	r5, #0
 801ba7c:	f000 812e 	beq.w	801bcdc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801ba80:	1aed      	subs	r5, r5, r3
 801ba82:	b2ad      	uxth	r5, r5
 801ba84:	042b      	lsls	r3, r5, #16
 801ba86:	d502      	bpl.n	801ba8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ba88:	1b64      	subs	r4, r4, r5
 801ba8a:	b224      	sxth	r4, r4
 801ba8c:	2500      	movs	r5, #0
 801ba8e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801ba92:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801ba96:	428c      	cmp	r4, r1
 801ba98:	b28b      	uxth	r3, r1
 801ba9a:	bfbf      	itttt	lt
 801ba9c:	18ed      	addlt	r5, r5, r3
 801ba9e:	1b2c      	sublt	r4, r5, r4
 801baa0:	b2a5      	uxthlt	r5, r4
 801baa2:	460c      	movlt	r4, r1
 801baa4:	8891      	ldrh	r1, [r2, #4]
 801baa6:	440b      	add	r3, r1
 801baa8:	b21b      	sxth	r3, r3
 801baaa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801baac:	88d3      	ldrh	r3, [r2, #6]
 801baae:	8852      	ldrh	r2, [r2, #2]
 801bab0:	4413      	add	r3, r2
 801bab2:	b21b      	sxth	r3, r3
 801bab4:	930d      	str	r3, [sp, #52]	@ 0x34
 801bab6:	4bbe      	ldr	r3, [pc, #760]	@ (801bdb0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801bab8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801baba:	f893 b000 	ldrb.w	fp, [r3]
 801babe:	f10b 3cff 	add.w	ip, fp, #4294967295
 801bac2:	f1dc 0300 	rsbs	r3, ip, #0
 801bac6:	eb43 030c 	adc.w	r3, r3, ip
 801baca:	930e      	str	r3, [sp, #56]	@ 0x38
 801bacc:	4621      	mov	r1, r4
 801bace:	4653      	mov	r3, sl
 801bad0:	a814      	add	r0, sp, #80	@ 0x50
 801bad2:	f7f6 f82c 	bl	8011b2e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801bad6:	4621      	mov	r1, r4
 801bad8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801badc:	4653      	mov	r3, sl
 801bade:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bae0:	a814      	add	r0, sp, #80	@ 0x50
 801bae2:	f7f6 f841 	bl	8011b68 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801bae6:	a918      	add	r1, sp, #96	@ 0x60
 801bae8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801baec:	a817      	add	r0, sp, #92	@ 0x5c
 801baee:	f7f6 f967 	bl	8011dc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801baf2:	f1ba 0f00 	cmp.w	sl, #0
 801baf6:	f040 80f4 	bne.w	801bce2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801bafa:	f1bb 0f01 	cmp.w	fp, #1
 801bafe:	f040 80f8 	bne.w	801bcf2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801bb02:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bb04:	2b00      	cmp	r3, #0
 801bb06:	f040 8145 	bne.w	801bd94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801bb0a:	b2ba      	uxth	r2, r7
 801bb0c:	b905      	cbnz	r5, 801bb10 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801bb0e:	b16e      	cbz	r6, 801bb2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801bb10:	fb06 5302 	mla	r3, r6, r2, r5
 801bb14:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801bb16:	fb08 f303 	mul.w	r3, r8, r3
 801bb1a:	4631      	mov	r1, r6
 801bb1c:	f003 0607 	and.w	r6, r3, #7
 801bb20:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801bb24:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bb26:	eba9 0301 	sub.w	r3, r9, r1
 801bb2a:	930a      	str	r3, [sp, #40]	@ 0x28
 801bb2c:	4651      	mov	r1, sl
 801bb2e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801bb30:	f7ff ff1c 	bl	801b96c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801bb34:	4681      	mov	r9, r0
 801bb36:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801bb38:	f7ff ff42 	bl	801b9c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801bb3c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bb3e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801bb40:	eba3 0a01 	sub.w	sl, r3, r1
 801bb44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bb46:	459a      	cmp	sl, r3
 801bb48:	bfa8      	it	ge
 801bb4a:	469a      	movge	sl, r3
 801bb4c:	f1ba 0f00 	cmp.w	sl, #0
 801bb50:	4683      	mov	fp, r0
 801bb52:	f340 811a 	ble.w	801bd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bb56:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801bb58:	1b64      	subs	r4, r4, r5
 801bb5a:	1b1c      	subs	r4, r3, r4
 801bb5c:	42bc      	cmp	r4, r7
 801bb5e:	bfd4      	ite	le
 801bb60:	ebc5 0504 	rsble	r5, r5, r4
 801bb64:	ebc5 0507 	rsbgt	r5, r5, r7
 801bb68:	2d00      	cmp	r5, #0
 801bb6a:	f340 810e 	ble.w	801bd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bb6e:	1b52      	subs	r2, r2, r5
 801bb70:	fb08 f302 	mul.w	r3, r8, r2
 801bb74:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bb76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bb78:	2b00      	cmp	r3, #0
 801bb7a:	f040 8116 	bne.w	801bdaa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801bb7e:	4b8d      	ldr	r3, [pc, #564]	@ (801bdb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801bb80:	6818      	ldr	r0, [r3, #0]
 801bb82:	6803      	ldr	r3, [r0, #0]
 801bb84:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bb86:	4798      	blx	r3
 801bb88:	2301      	movs	r3, #1
 801bb8a:	fa03 f308 	lsl.w	r3, r3, r8
 801bb8e:	4a8a      	ldr	r2, [pc, #552]	@ (801bdb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801bb90:	3b01      	subs	r3, #1
 801bb92:	b2db      	uxtb	r3, r3
 801bb94:	8811      	ldrh	r1, [r2, #0]
 801bb96:	930e      	str	r3, [sp, #56]	@ 0x38
 801bb98:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801bb9c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801bba0:	fb01 2303 	mla	r3, r1, r3, r2
 801bba4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bba8:	930a      	str	r3, [sp, #40]	@ 0x28
 801bbaa:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801bbac:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801bbb0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801bbb2:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801bbb4:	0a19      	lsrs	r1, r3, #8
 801bbb6:	b2cb      	uxtb	r3, r1
 801bbb8:	9312      	str	r3, [sp, #72]	@ 0x48
 801bbba:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801bbbc:	b2db      	uxtb	r3, r3
 801bbbe:	9311      	str	r3, [sp, #68]	@ 0x44
 801bbc0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801bbc2:	095a      	lsrs	r2, r3, #5
 801bbc4:	4b7d      	ldr	r3, [pc, #500]	@ (801bdbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801bbc6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bbca:	400b      	ands	r3, r1
 801bbcc:	4313      	orrs	r3, r2
 801bbce:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801bbd0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bbd4:	4313      	orrs	r3, r2
 801bbd6:	b29b      	uxth	r3, r3
 801bbd8:	9310      	str	r3, [sp, #64]	@ 0x40
 801bbda:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bbdc:	781a      	ldrb	r2, [r3, #0]
 801bbde:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801bbe2:	4132      	asrs	r2, r6
 801bbe4:	fb05 b919 	mls	r9, r5, r9, fp
 801bbe8:	fb03 fb05 	mul.w	fp, r3, r5
 801bbec:	b2d2      	uxtb	r2, r2
 801bbee:	930d      	str	r3, [sp, #52]	@ 0x34
 801bbf0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801bbf4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801bbf8:	f0c0 80f5 	bcc.w	801bde6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801bbfc:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801bc00:	46ae      	mov	lr, r5
 801bc02:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801bc06:	f0c0 80dd 	bcc.w	801bdc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801bc0a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801bc0c:	4013      	ands	r3, r2
 801bc0e:	d055      	beq.n	801bcbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801bc10:	20ff      	movs	r0, #255	@ 0xff
 801bc12:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801bc14:	fb90 f1f1 	sdiv	r1, r0, r1
 801bc18:	434b      	muls	r3, r1
 801bc1a:	2bfe      	cmp	r3, #254	@ 0xfe
 801bc1c:	dd03      	ble.n	801bc26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801bc1e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801bc20:	4281      	cmp	r1, r0
 801bc22:	f000 80cd 	beq.w	801bdc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801bc26:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801bc28:	f8bc 4000 	ldrh.w	r4, [ip]
 801bc2c:	fb11 f303 	smulbb	r3, r1, r3
 801bc30:	b29b      	uxth	r3, r3
 801bc32:	1c59      	adds	r1, r3, #1
 801bc34:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801bc38:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bc3c:	b29f      	uxth	r7, r3
 801bc3e:	43db      	mvns	r3, r3
 801bc40:	b2db      	uxtb	r3, r3
 801bc42:	9309      	str	r3, [sp, #36]	@ 0x24
 801bc44:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801bc46:	1220      	asrs	r0, r4, #8
 801bc48:	fb13 f907 	smulbb	r9, r3, r7
 801bc4c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801bc50:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bc52:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801bc56:	fb00 9003 	mla	r0, r0, r3, r9
 801bc5a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801bc5c:	10e1      	asrs	r1, r4, #3
 801bc5e:	fb13 f907 	smulbb	r9, r3, r7
 801bc62:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bc66:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bc68:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bc6c:	fb01 9103 	mla	r1, r1, r3, r9
 801bc70:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801bc72:	00e4      	lsls	r4, r4, #3
 801bc74:	fb13 f707 	smulbb	r7, r3, r7
 801bc78:	b2e4      	uxtb	r4, r4
 801bc7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bc7c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801bc80:	fb04 7403 	mla	r4, r4, r3, r7
 801bc84:	b280      	uxth	r0, r0
 801bc86:	b2a4      	uxth	r4, r4
 801bc88:	1c43      	adds	r3, r0, #1
 801bc8a:	f104 0901 	add.w	r9, r4, #1
 801bc8e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bc92:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801bc96:	b289      	uxth	r1, r1
 801bc98:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801bc9c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801bca0:	ea49 0000 	orr.w	r0, r9, r0
 801bca4:	f101 0901 	add.w	r9, r1, #1
 801bca8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801bcac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801bcb0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801bcb4:	ea40 0009 	orr.w	r0, r0, r9
 801bcb8:	f8ac 0000 	strh.w	r0, [ip]
 801bcbc:	4446      	add	r6, r8
 801bcbe:	b2b6      	uxth	r6, r6
 801bcc0:	2e07      	cmp	r6, #7
 801bcc2:	bf81      	itttt	hi
 801bcc4:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801bcc6:	785a      	ldrbhi	r2, [r3, #1]
 801bcc8:	3301      	addhi	r3, #1
 801bcca:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801bccc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bcce:	bf9a      	itte	ls
 801bcd0:	fa42 f208 	asrls.w	r2, r2, r8
 801bcd4:	b2d2      	uxtbls	r2, r2
 801bcd6:	2600      	movhi	r6, #0
 801bcd8:	449c      	add	ip, r3
 801bcda:	e792      	b.n	801bc02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801bcdc:	441c      	add	r4, r3
 801bcde:	b224      	sxth	r4, r4
 801bce0:	e6d5      	b.n	801ba8e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801bce2:	f1ba 0f01 	cmp.w	sl, #1
 801bce6:	f47f af0c 	bne.w	801bb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bcea:	f1bb 0f01 	cmp.w	fp, #1
 801bcee:	f47f af08 	bne.w	801bb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bcf2:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801bdb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801bcf6:	f8db 0000 	ldr.w	r0, [fp]
 801bcfa:	6803      	ldr	r3, [r0, #0]
 801bcfc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801bcfe:	4798      	blx	r3
 801bd00:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801bd04:	465a      	mov	r2, fp
 801bd06:	d006      	beq.n	801bd16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801bd08:	f1b8 0f04 	cmp.w	r8, #4
 801bd0c:	d140      	bne.n	801bd90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801bd0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801bd10:	3300      	adds	r3, #0
 801bd12:	bf18      	it	ne
 801bd14:	2301      	movne	r3, #1
 801bd16:	0580      	lsls	r0, r0, #22
 801bd18:	d56e      	bpl.n	801bdf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801bd1a:	f1b8 0f08 	cmp.w	r8, #8
 801bd1e:	d16b      	bne.n	801bdf8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801bd20:	2b00      	cmp	r3, #0
 801bd22:	bf0c      	ite	eq
 801bd24:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801bd28:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801bd2c:	2d00      	cmp	r5, #0
 801bd2e:	f47f aee8 	bne.w	801bb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bd32:	2e00      	cmp	r6, #0
 801bd34:	f47f aee5 	bne.w	801bb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bd38:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801bd3a:	19e3      	adds	r3, r4, r7
 801bd3c:	4283      	cmp	r3, r0
 801bd3e:	f73f aee0 	bgt.w	801bb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bd42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801bd44:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801bd46:	444b      	add	r3, r9
 801bd48:	4283      	cmp	r3, r0
 801bd4a:	f73f aeda 	bgt.w	801bb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bd4e:	6810      	ldr	r0, [r2, #0]
 801bd50:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801bd54:	6804      	ldr	r4, [r0, #0]
 801bd56:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801bd5a:	b2bf      	uxth	r7, r7
 801bd5c:	f1b8 0f08 	cmp.w	r8, #8
 801bd60:	f04f 0500 	mov.w	r5, #0
 801bd64:	bf18      	it	ne
 801bd66:	3701      	addne	r7, #1
 801bd68:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801bd6c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801bd6e:	9104      	str	r1, [sp, #16]
 801bd70:	bf18      	it	ne
 801bd72:	f027 0701 	bicne.w	r7, r7, #1
 801bd76:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801bd78:	bf18      	it	ne
 801bd7a:	b2bf      	uxthne	r7, r7
 801bd7c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801bd80:	e9cd 7900 	strd	r7, r9, [sp]
 801bd84:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801bd86:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801bd88:	47a0      	blx	r4
 801bd8a:	b019      	add	sp, #100	@ 0x64
 801bd8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd90:	2300      	movs	r3, #0
 801bd92:	e7c0      	b.n	801bd16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801bd94:	2208      	movs	r2, #8
 801bd96:	fb92 f3f8 	sdiv	r3, r2, r8
 801bd9a:	1e5a      	subs	r2, r3, #1
 801bd9c:	443a      	add	r2, r7
 801bd9e:	fb92 f2f3 	sdiv	r2, r2, r3
 801bda2:	fb12 f203 	smulbb	r2, r2, r3
 801bda6:	b292      	uxth	r2, r2
 801bda8:	e6b0      	b.n	801bb0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801bdaa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bdac:	e6ec      	b.n	801bb88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801bdae:	bf00      	nop
 801bdb0:	20002f2c 	.word	0x20002f2c
 801bdb4:	20002f34 	.word	0x20002f34
 801bdb8:	20002f2e 	.word	0x20002f2e
 801bdbc:	00fff800 	.word	0x00fff800
 801bdc0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801bdc2:	e779      	b.n	801bcb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801bdc4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801bdc6:	b153      	cbz	r3, 801bdde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801bdc8:	441e      	add	r6, r3
 801bdca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bdcc:	b2b6      	uxth	r6, r6
 801bdce:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801bdd2:	f006 0607 	and.w	r6, r6, #7
 801bdd6:	781a      	ldrb	r2, [r3, #0]
 801bdd8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bdda:	4132      	asrs	r2, r6
 801bddc:	b2d2      	uxtb	r2, r2
 801bdde:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bde0:	445b      	add	r3, fp
 801bde2:	930a      	str	r3, [sp, #40]	@ 0x28
 801bde4:	e706      	b.n	801bbf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801bde6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bde8:	2b00      	cmp	r3, #0
 801bdea:	d1ce      	bne.n	801bd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bdec:	4b05      	ldr	r3, [pc, #20]	@ (801be04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801bdee:	6818      	ldr	r0, [r3, #0]
 801bdf0:	6803      	ldr	r3, [r0, #0]
 801bdf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bdf4:	4798      	blx	r3
 801bdf6:	e7c8      	b.n	801bd8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801bdf8:	2b00      	cmp	r3, #0
 801bdfa:	f43f ae82 	beq.w	801bb02 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801bdfe:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801be02:	e793      	b.n	801bd2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801be04:	20002f34 	.word	0x20002f34

0801be08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801be08:	b538      	push	{r3, r4, r5, lr}
 801be0a:	4c15      	ldr	r4, [pc, #84]	@ (801be60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801be0c:	7823      	ldrb	r3, [r4, #0]
 801be0e:	f3bf 8f5b 	dmb	ish
 801be12:	07da      	lsls	r2, r3, #31
 801be14:	4605      	mov	r5, r0
 801be16:	d40b      	bmi.n	801be30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801be18:	4620      	mov	r0, r4
 801be1a:	f007 fefc 	bl	8023c16 <__cxa_guard_acquire>
 801be1e:	b138      	cbz	r0, 801be30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801be20:	4620      	mov	r0, r4
 801be22:	f007 ff04 	bl	8023c2e <__cxa_guard_release>
 801be26:	4a0f      	ldr	r2, [pc, #60]	@ (801be64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801be28:	490f      	ldr	r1, [pc, #60]	@ (801be68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801be2a:	4810      	ldr	r0, [pc, #64]	@ (801be6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801be2c:	f007 feec 	bl	8023c08 <__aeabi_atexit>
 801be30:	4c0f      	ldr	r4, [pc, #60]	@ (801be70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801be32:	7823      	ldrb	r3, [r4, #0]
 801be34:	f3bf 8f5b 	dmb	ish
 801be38:	07db      	lsls	r3, r3, #31
 801be3a:	d40b      	bmi.n	801be54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801be3c:	4620      	mov	r0, r4
 801be3e:	f007 feea 	bl	8023c16 <__cxa_guard_acquire>
 801be42:	b138      	cbz	r0, 801be54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801be44:	4620      	mov	r0, r4
 801be46:	f007 fef2 	bl	8023c2e <__cxa_guard_release>
 801be4a:	4a06      	ldr	r2, [pc, #24]	@ (801be64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801be4c:	4909      	ldr	r1, [pc, #36]	@ (801be74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801be4e:	480a      	ldr	r0, [pc, #40]	@ (801be78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801be50:	f007 feda 	bl	8023c08 <__aeabi_atexit>
 801be54:	4b05      	ldr	r3, [pc, #20]	@ (801be6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801be56:	616b      	str	r3, [r5, #20]
 801be58:	4b07      	ldr	r3, [pc, #28]	@ (801be78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801be5a:	61ab      	str	r3, [r5, #24]
 801be5c:	bd38      	pop	{r3, r4, r5, pc}
 801be5e:	bf00      	nop
 801be60:	20003010 	.word	0x20003010
 801be64:	20000000 	.word	0x20000000
 801be68:	08017fcf 	.word	0x08017fcf
 801be6c:	2000006c 	.word	0x2000006c
 801be70:	20003014 	.word	0x20003014
 801be74:	08017fcd 	.word	0x08017fcd
 801be78:	20000070 	.word	0x20000070

0801be7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801be7c:	b538      	push	{r3, r4, r5, lr}
 801be7e:	4c15      	ldr	r4, [pc, #84]	@ (801bed4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801be80:	7823      	ldrb	r3, [r4, #0]
 801be82:	f3bf 8f5b 	dmb	ish
 801be86:	07da      	lsls	r2, r3, #31
 801be88:	4605      	mov	r5, r0
 801be8a:	d40b      	bmi.n	801bea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801be8c:	4620      	mov	r0, r4
 801be8e:	f007 fec2 	bl	8023c16 <__cxa_guard_acquire>
 801be92:	b138      	cbz	r0, 801bea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801be94:	4620      	mov	r0, r4
 801be96:	f007 feca 	bl	8023c2e <__cxa_guard_release>
 801be9a:	4a0f      	ldr	r2, [pc, #60]	@ (801bed8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801be9c:	490f      	ldr	r1, [pc, #60]	@ (801bedc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801be9e:	4810      	ldr	r0, [pc, #64]	@ (801bee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801bea0:	f007 feb2 	bl	8023c08 <__aeabi_atexit>
 801bea4:	4c0f      	ldr	r4, [pc, #60]	@ (801bee4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801bea6:	7823      	ldrb	r3, [r4, #0]
 801bea8:	f3bf 8f5b 	dmb	ish
 801beac:	07db      	lsls	r3, r3, #31
 801beae:	d40b      	bmi.n	801bec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801beb0:	4620      	mov	r0, r4
 801beb2:	f007 feb0 	bl	8023c16 <__cxa_guard_acquire>
 801beb6:	b138      	cbz	r0, 801bec8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801beb8:	4620      	mov	r0, r4
 801beba:	f007 feb8 	bl	8023c2e <__cxa_guard_release>
 801bebe:	4a06      	ldr	r2, [pc, #24]	@ (801bed8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801bec0:	4909      	ldr	r1, [pc, #36]	@ (801bee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801bec2:	480a      	ldr	r0, [pc, #40]	@ (801beec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801bec4:	f007 fea0 	bl	8023c08 <__aeabi_atexit>
 801bec8:	4b05      	ldr	r3, [pc, #20]	@ (801bee0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801beca:	60eb      	str	r3, [r5, #12]
 801becc:	4b07      	ldr	r3, [pc, #28]	@ (801beec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801bece:	612b      	str	r3, [r5, #16]
 801bed0:	bd38      	pop	{r3, r4, r5, pc}
 801bed2:	bf00      	nop
 801bed4:	20002fe8 	.word	0x20002fe8
 801bed8:	20000000 	.word	0x20000000
 801bedc:	08017fd3 	.word	0x08017fd3
 801bee0:	20000044 	.word	0x20000044
 801bee4:	20002fec 	.word	0x20002fec
 801bee8:	08017fd1 	.word	0x08017fd1
 801beec:	20000048 	.word	0x20000048

0801bef0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801bef0:	b510      	push	{r4, lr}
 801bef2:	4604      	mov	r4, r0
 801bef4:	f7ff ff88 	bl	801be08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801bef8:	4620      	mov	r0, r4
 801befa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801befe:	f7ff bfbd 	b.w	801be7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801bf04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801bf04:	b538      	push	{r3, r4, r5, lr}
 801bf06:	4c15      	ldr	r4, [pc, #84]	@ (801bf5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801bf08:	7823      	ldrb	r3, [r4, #0]
 801bf0a:	f3bf 8f5b 	dmb	ish
 801bf0e:	07da      	lsls	r2, r3, #31
 801bf10:	4605      	mov	r5, r0
 801bf12:	d40b      	bmi.n	801bf2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801bf14:	4620      	mov	r0, r4
 801bf16:	f007 fe7e 	bl	8023c16 <__cxa_guard_acquire>
 801bf1a:	b138      	cbz	r0, 801bf2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801bf1c:	4620      	mov	r0, r4
 801bf1e:	f007 fe86 	bl	8023c2e <__cxa_guard_release>
 801bf22:	4a0f      	ldr	r2, [pc, #60]	@ (801bf60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801bf24:	490f      	ldr	r1, [pc, #60]	@ (801bf64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801bf26:	4810      	ldr	r0, [pc, #64]	@ (801bf68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801bf28:	f007 fe6e 	bl	8023c08 <__aeabi_atexit>
 801bf2c:	4c0f      	ldr	r4, [pc, #60]	@ (801bf6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801bf2e:	7823      	ldrb	r3, [r4, #0]
 801bf30:	f3bf 8f5b 	dmb	ish
 801bf34:	07db      	lsls	r3, r3, #31
 801bf36:	d40b      	bmi.n	801bf50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801bf38:	4620      	mov	r0, r4
 801bf3a:	f007 fe6c 	bl	8023c16 <__cxa_guard_acquire>
 801bf3e:	b138      	cbz	r0, 801bf50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801bf40:	4620      	mov	r0, r4
 801bf42:	f007 fe74 	bl	8023c2e <__cxa_guard_release>
 801bf46:	4a06      	ldr	r2, [pc, #24]	@ (801bf60 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801bf48:	4909      	ldr	r1, [pc, #36]	@ (801bf70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801bf4a:	480a      	ldr	r0, [pc, #40]	@ (801bf74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801bf4c:	f007 fe5c 	bl	8023c08 <__aeabi_atexit>
 801bf50:	4b05      	ldr	r3, [pc, #20]	@ (801bf68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801bf52:	626b      	str	r3, [r5, #36]	@ 0x24
 801bf54:	4b07      	ldr	r3, [pc, #28]	@ (801bf74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801bf56:	62ab      	str	r3, [r5, #40]	@ 0x28
 801bf58:	bd38      	pop	{r3, r4, r5, pc}
 801bf5a:	bf00      	nop
 801bf5c:	20003018 	.word	0x20003018
 801bf60:	20000000 	.word	0x20000000
 801bf64:	08017fc7 	.word	0x08017fc7
 801bf68:	20000074 	.word	0x20000074
 801bf6c:	2000301c 	.word	0x2000301c
 801bf70:	08017fc5 	.word	0x08017fc5
 801bf74:	20000078 	.word	0x20000078

0801bf78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801bf78:	b538      	push	{r3, r4, r5, lr}
 801bf7a:	4c15      	ldr	r4, [pc, #84]	@ (801bfd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801bf7c:	7823      	ldrb	r3, [r4, #0]
 801bf7e:	f3bf 8f5b 	dmb	ish
 801bf82:	07da      	lsls	r2, r3, #31
 801bf84:	4605      	mov	r5, r0
 801bf86:	d40b      	bmi.n	801bfa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801bf88:	4620      	mov	r0, r4
 801bf8a:	f007 fe44 	bl	8023c16 <__cxa_guard_acquire>
 801bf8e:	b138      	cbz	r0, 801bfa0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801bf90:	4620      	mov	r0, r4
 801bf92:	f007 fe4c 	bl	8023c2e <__cxa_guard_release>
 801bf96:	4a0f      	ldr	r2, [pc, #60]	@ (801bfd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801bf98:	490f      	ldr	r1, [pc, #60]	@ (801bfd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801bf9a:	4810      	ldr	r0, [pc, #64]	@ (801bfdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801bf9c:	f007 fe34 	bl	8023c08 <__aeabi_atexit>
 801bfa0:	4c0f      	ldr	r4, [pc, #60]	@ (801bfe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801bfa2:	7823      	ldrb	r3, [r4, #0]
 801bfa4:	f3bf 8f5b 	dmb	ish
 801bfa8:	07db      	lsls	r3, r3, #31
 801bfaa:	d40b      	bmi.n	801bfc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801bfac:	4620      	mov	r0, r4
 801bfae:	f007 fe32 	bl	8023c16 <__cxa_guard_acquire>
 801bfb2:	b138      	cbz	r0, 801bfc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801bfb4:	4620      	mov	r0, r4
 801bfb6:	f007 fe3a 	bl	8023c2e <__cxa_guard_release>
 801bfba:	4a06      	ldr	r2, [pc, #24]	@ (801bfd4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801bfbc:	4909      	ldr	r1, [pc, #36]	@ (801bfe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801bfbe:	480a      	ldr	r0, [pc, #40]	@ (801bfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801bfc0:	f007 fe22 	bl	8023c08 <__aeabi_atexit>
 801bfc4:	4b05      	ldr	r3, [pc, #20]	@ (801bfdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801bfc6:	61eb      	str	r3, [r5, #28]
 801bfc8:	4b07      	ldr	r3, [pc, #28]	@ (801bfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801bfca:	622b      	str	r3, [r5, #32]
 801bfcc:	bd38      	pop	{r3, r4, r5, pc}
 801bfce:	bf00      	nop
 801bfd0:	20002ff0 	.word	0x20002ff0
 801bfd4:	20000000 	.word	0x20000000
 801bfd8:	08017fcb 	.word	0x08017fcb
 801bfdc:	2000004c 	.word	0x2000004c
 801bfe0:	20002ff4 	.word	0x20002ff4
 801bfe4:	08017fc9 	.word	0x08017fc9
 801bfe8:	20000050 	.word	0x20000050

0801bfec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801bfec:	b510      	push	{r4, lr}
 801bfee:	4604      	mov	r4, r0
 801bff0:	f7ff ff88 	bl	801bf04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801bff4:	4620      	mov	r0, r4
 801bff6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801bffa:	f7ff bfbd 	b.w	801bf78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801c000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801c000:	b538      	push	{r3, r4, r5, lr}
 801c002:	4c15      	ldr	r4, [pc, #84]	@ (801c058 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801c004:	7823      	ldrb	r3, [r4, #0]
 801c006:	f3bf 8f5b 	dmb	ish
 801c00a:	07da      	lsls	r2, r3, #31
 801c00c:	4605      	mov	r5, r0
 801c00e:	d40b      	bmi.n	801c028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801c010:	4620      	mov	r0, r4
 801c012:	f007 fe00 	bl	8023c16 <__cxa_guard_acquire>
 801c016:	b138      	cbz	r0, 801c028 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801c018:	4620      	mov	r0, r4
 801c01a:	f007 fe08 	bl	8023c2e <__cxa_guard_release>
 801c01e:	4a0f      	ldr	r2, [pc, #60]	@ (801c05c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801c020:	490f      	ldr	r1, [pc, #60]	@ (801c060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801c022:	4810      	ldr	r0, [pc, #64]	@ (801c064 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801c024:	f007 fdf0 	bl	8023c08 <__aeabi_atexit>
 801c028:	4c0f      	ldr	r4, [pc, #60]	@ (801c068 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801c02a:	7823      	ldrb	r3, [r4, #0]
 801c02c:	f3bf 8f5b 	dmb	ish
 801c030:	07db      	lsls	r3, r3, #31
 801c032:	d40b      	bmi.n	801c04c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801c034:	4620      	mov	r0, r4
 801c036:	f007 fdee 	bl	8023c16 <__cxa_guard_acquire>
 801c03a:	b138      	cbz	r0, 801c04c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801c03c:	4620      	mov	r0, r4
 801c03e:	f007 fdf6 	bl	8023c2e <__cxa_guard_release>
 801c042:	4a06      	ldr	r2, [pc, #24]	@ (801c05c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801c044:	4909      	ldr	r1, [pc, #36]	@ (801c06c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801c046:	480a      	ldr	r0, [pc, #40]	@ (801c070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801c048:	f007 fdde 	bl	8023c08 <__aeabi_atexit>
 801c04c:	4b05      	ldr	r3, [pc, #20]	@ (801c064 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801c04e:	636b      	str	r3, [r5, #52]	@ 0x34
 801c050:	4b07      	ldr	r3, [pc, #28]	@ (801c070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801c052:	63ab      	str	r3, [r5, #56]	@ 0x38
 801c054:	bd38      	pop	{r3, r4, r5, pc}
 801c056:	bf00      	nop
 801c058:	20003028 	.word	0x20003028
 801c05c:	20000000 	.word	0x20000000
 801c060:	08017fbf 	.word	0x08017fbf
 801c064:	20000084 	.word	0x20000084
 801c068:	2000302c 	.word	0x2000302c
 801c06c:	08017fbd 	.word	0x08017fbd
 801c070:	20000088 	.word	0x20000088

0801c074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801c074:	b538      	push	{r3, r4, r5, lr}
 801c076:	4c15      	ldr	r4, [pc, #84]	@ (801c0cc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801c078:	7823      	ldrb	r3, [r4, #0]
 801c07a:	f3bf 8f5b 	dmb	ish
 801c07e:	07da      	lsls	r2, r3, #31
 801c080:	4605      	mov	r5, r0
 801c082:	d40b      	bmi.n	801c09c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801c084:	4620      	mov	r0, r4
 801c086:	f007 fdc6 	bl	8023c16 <__cxa_guard_acquire>
 801c08a:	b138      	cbz	r0, 801c09c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801c08c:	4620      	mov	r0, r4
 801c08e:	f007 fdce 	bl	8023c2e <__cxa_guard_release>
 801c092:	4a0f      	ldr	r2, [pc, #60]	@ (801c0d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801c094:	490f      	ldr	r1, [pc, #60]	@ (801c0d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801c096:	4810      	ldr	r0, [pc, #64]	@ (801c0d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801c098:	f007 fdb6 	bl	8023c08 <__aeabi_atexit>
 801c09c:	4c0f      	ldr	r4, [pc, #60]	@ (801c0dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801c09e:	7823      	ldrb	r3, [r4, #0]
 801c0a0:	f3bf 8f5b 	dmb	ish
 801c0a4:	07db      	lsls	r3, r3, #31
 801c0a6:	d40b      	bmi.n	801c0c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801c0a8:	4620      	mov	r0, r4
 801c0aa:	f007 fdb4 	bl	8023c16 <__cxa_guard_acquire>
 801c0ae:	b138      	cbz	r0, 801c0c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801c0b0:	4620      	mov	r0, r4
 801c0b2:	f007 fdbc 	bl	8023c2e <__cxa_guard_release>
 801c0b6:	4a06      	ldr	r2, [pc, #24]	@ (801c0d0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801c0b8:	4909      	ldr	r1, [pc, #36]	@ (801c0e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801c0ba:	480a      	ldr	r0, [pc, #40]	@ (801c0e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801c0bc:	f007 fda4 	bl	8023c08 <__aeabi_atexit>
 801c0c0:	4b05      	ldr	r3, [pc, #20]	@ (801c0d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801c0c2:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801c0c4:	4b07      	ldr	r3, [pc, #28]	@ (801c0e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801c0c6:	632b      	str	r3, [r5, #48]	@ 0x30
 801c0c8:	bd38      	pop	{r3, r4, r5, pc}
 801c0ca:	bf00      	nop
 801c0cc:	20002ff8 	.word	0x20002ff8
 801c0d0:	20000000 	.word	0x20000000
 801c0d4:	08017fc3 	.word	0x08017fc3
 801c0d8:	20000054 	.word	0x20000054
 801c0dc:	20002ffc 	.word	0x20002ffc
 801c0e0:	08017fc1 	.word	0x08017fc1
 801c0e4:	20000058 	.word	0x20000058

0801c0e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801c0e8:	b510      	push	{r4, lr}
 801c0ea:	4604      	mov	r4, r0
 801c0ec:	f7ff ff88 	bl	801c000 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801c0f0:	4620      	mov	r0, r4
 801c0f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c0f6:	f7ff bfbd 	b.w	801c074 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801c0fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801c0fc:	b538      	push	{r3, r4, r5, lr}
 801c0fe:	4c15      	ldr	r4, [pc, #84]	@ (801c154 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801c100:	7823      	ldrb	r3, [r4, #0]
 801c102:	f3bf 8f5b 	dmb	ish
 801c106:	07da      	lsls	r2, r3, #31
 801c108:	4605      	mov	r5, r0
 801c10a:	d40b      	bmi.n	801c124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801c10c:	4620      	mov	r0, r4
 801c10e:	f007 fd82 	bl	8023c16 <__cxa_guard_acquire>
 801c112:	b138      	cbz	r0, 801c124 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801c114:	4620      	mov	r0, r4
 801c116:	f007 fd8a 	bl	8023c2e <__cxa_guard_release>
 801c11a:	4a0f      	ldr	r2, [pc, #60]	@ (801c158 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801c11c:	490f      	ldr	r1, [pc, #60]	@ (801c15c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801c11e:	4810      	ldr	r0, [pc, #64]	@ (801c160 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801c120:	f007 fd72 	bl	8023c08 <__aeabi_atexit>
 801c124:	4c0f      	ldr	r4, [pc, #60]	@ (801c164 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801c126:	7823      	ldrb	r3, [r4, #0]
 801c128:	f3bf 8f5b 	dmb	ish
 801c12c:	07db      	lsls	r3, r3, #31
 801c12e:	d40b      	bmi.n	801c148 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801c130:	4620      	mov	r0, r4
 801c132:	f007 fd70 	bl	8023c16 <__cxa_guard_acquire>
 801c136:	b138      	cbz	r0, 801c148 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801c138:	4620      	mov	r0, r4
 801c13a:	f007 fd78 	bl	8023c2e <__cxa_guard_release>
 801c13e:	4a06      	ldr	r2, [pc, #24]	@ (801c158 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801c140:	4909      	ldr	r1, [pc, #36]	@ (801c168 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801c142:	480a      	ldr	r0, [pc, #40]	@ (801c16c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801c144:	f007 fd60 	bl	8023c08 <__aeabi_atexit>
 801c148:	4b05      	ldr	r3, [pc, #20]	@ (801c160 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801c14a:	656b      	str	r3, [r5, #84]	@ 0x54
 801c14c:	4b07      	ldr	r3, [pc, #28]	@ (801c16c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801c14e:	65ab      	str	r3, [r5, #88]	@ 0x58
 801c150:	bd38      	pop	{r3, r4, r5, pc}
 801c152:	bf00      	nop
 801c154:	20003030 	.word	0x20003030
 801c158:	20000000 	.word	0x20000000
 801c15c:	08017faf 	.word	0x08017faf
 801c160:	2000008c 	.word	0x2000008c
 801c164:	20003034 	.word	0x20003034
 801c168:	08017fad 	.word	0x08017fad
 801c16c:	20000090 	.word	0x20000090

0801c170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801c170:	b538      	push	{r3, r4, r5, lr}
 801c172:	4c15      	ldr	r4, [pc, #84]	@ (801c1c8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801c174:	7823      	ldrb	r3, [r4, #0]
 801c176:	f3bf 8f5b 	dmb	ish
 801c17a:	07da      	lsls	r2, r3, #31
 801c17c:	4605      	mov	r5, r0
 801c17e:	d40b      	bmi.n	801c198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801c180:	4620      	mov	r0, r4
 801c182:	f007 fd48 	bl	8023c16 <__cxa_guard_acquire>
 801c186:	b138      	cbz	r0, 801c198 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801c188:	4620      	mov	r0, r4
 801c18a:	f007 fd50 	bl	8023c2e <__cxa_guard_release>
 801c18e:	4a0f      	ldr	r2, [pc, #60]	@ (801c1cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801c190:	490f      	ldr	r1, [pc, #60]	@ (801c1d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801c192:	4810      	ldr	r0, [pc, #64]	@ (801c1d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801c194:	f007 fd38 	bl	8023c08 <__aeabi_atexit>
 801c198:	4c0f      	ldr	r4, [pc, #60]	@ (801c1d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801c19a:	7823      	ldrb	r3, [r4, #0]
 801c19c:	f3bf 8f5b 	dmb	ish
 801c1a0:	07db      	lsls	r3, r3, #31
 801c1a2:	d40b      	bmi.n	801c1bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801c1a4:	4620      	mov	r0, r4
 801c1a6:	f007 fd36 	bl	8023c16 <__cxa_guard_acquire>
 801c1aa:	b138      	cbz	r0, 801c1bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801c1ac:	4620      	mov	r0, r4
 801c1ae:	f007 fd3e 	bl	8023c2e <__cxa_guard_release>
 801c1b2:	4a06      	ldr	r2, [pc, #24]	@ (801c1cc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801c1b4:	4909      	ldr	r1, [pc, #36]	@ (801c1dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801c1b6:	480a      	ldr	r0, [pc, #40]	@ (801c1e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801c1b8:	f007 fd26 	bl	8023c08 <__aeabi_atexit>
 801c1bc:	4b05      	ldr	r3, [pc, #20]	@ (801c1d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801c1be:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801c1c0:	4b07      	ldr	r3, [pc, #28]	@ (801c1e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801c1c2:	652b      	str	r3, [r5, #80]	@ 0x50
 801c1c4:	bd38      	pop	{r3, r4, r5, pc}
 801c1c6:	bf00      	nop
 801c1c8:	20003038 	.word	0x20003038
 801c1cc:	20000000 	.word	0x20000000
 801c1d0:	08017fb3 	.word	0x08017fb3
 801c1d4:	20000094 	.word	0x20000094
 801c1d8:	2000303c 	.word	0x2000303c
 801c1dc:	08017fb1 	.word	0x08017fb1
 801c1e0:	20000098 	.word	0x20000098

0801c1e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801c1e4:	b538      	push	{r3, r4, r5, lr}
 801c1e6:	4c15      	ldr	r4, [pc, #84]	@ (801c23c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801c1e8:	7823      	ldrb	r3, [r4, #0]
 801c1ea:	f3bf 8f5b 	dmb	ish
 801c1ee:	07da      	lsls	r2, r3, #31
 801c1f0:	4605      	mov	r5, r0
 801c1f2:	d40b      	bmi.n	801c20c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801c1f4:	4620      	mov	r0, r4
 801c1f6:	f007 fd0e 	bl	8023c16 <__cxa_guard_acquire>
 801c1fa:	b138      	cbz	r0, 801c20c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801c1fc:	4620      	mov	r0, r4
 801c1fe:	f007 fd16 	bl	8023c2e <__cxa_guard_release>
 801c202:	4a0f      	ldr	r2, [pc, #60]	@ (801c240 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801c204:	490f      	ldr	r1, [pc, #60]	@ (801c244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801c206:	4810      	ldr	r0, [pc, #64]	@ (801c248 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801c208:	f007 fcfe 	bl	8023c08 <__aeabi_atexit>
 801c20c:	4c0f      	ldr	r4, [pc, #60]	@ (801c24c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801c20e:	7823      	ldrb	r3, [r4, #0]
 801c210:	f3bf 8f5b 	dmb	ish
 801c214:	07db      	lsls	r3, r3, #31
 801c216:	d40b      	bmi.n	801c230 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801c218:	4620      	mov	r0, r4
 801c21a:	f007 fcfc 	bl	8023c16 <__cxa_guard_acquire>
 801c21e:	b138      	cbz	r0, 801c230 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801c220:	4620      	mov	r0, r4
 801c222:	f007 fd04 	bl	8023c2e <__cxa_guard_release>
 801c226:	4a06      	ldr	r2, [pc, #24]	@ (801c240 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801c228:	4909      	ldr	r1, [pc, #36]	@ (801c250 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801c22a:	480a      	ldr	r0, [pc, #40]	@ (801c254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801c22c:	f007 fcec 	bl	8023c08 <__aeabi_atexit>
 801c230:	4b05      	ldr	r3, [pc, #20]	@ (801c248 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801c232:	646b      	str	r3, [r5, #68]	@ 0x44
 801c234:	4b07      	ldr	r3, [pc, #28]	@ (801c254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801c236:	64ab      	str	r3, [r5, #72]	@ 0x48
 801c238:	bd38      	pop	{r3, r4, r5, pc}
 801c23a:	bf00      	nop
 801c23c:	20003000 	.word	0x20003000
 801c240:	20000000 	.word	0x20000000
 801c244:	08017fb7 	.word	0x08017fb7
 801c248:	2000005c 	.word	0x2000005c
 801c24c:	20003004 	.word	0x20003004
 801c250:	08017fb5 	.word	0x08017fb5
 801c254:	20000060 	.word	0x20000060

0801c258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801c258:	b538      	push	{r3, r4, r5, lr}
 801c25a:	4c15      	ldr	r4, [pc, #84]	@ (801c2b0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801c25c:	7823      	ldrb	r3, [r4, #0]
 801c25e:	f3bf 8f5b 	dmb	ish
 801c262:	07da      	lsls	r2, r3, #31
 801c264:	4605      	mov	r5, r0
 801c266:	d40b      	bmi.n	801c280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c268:	4620      	mov	r0, r4
 801c26a:	f007 fcd4 	bl	8023c16 <__cxa_guard_acquire>
 801c26e:	b138      	cbz	r0, 801c280 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801c270:	4620      	mov	r0, r4
 801c272:	f007 fcdc 	bl	8023c2e <__cxa_guard_release>
 801c276:	4a0f      	ldr	r2, [pc, #60]	@ (801c2b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c278:	490f      	ldr	r1, [pc, #60]	@ (801c2b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801c27a:	4810      	ldr	r0, [pc, #64]	@ (801c2bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c27c:	f007 fcc4 	bl	8023c08 <__aeabi_atexit>
 801c280:	4c0f      	ldr	r4, [pc, #60]	@ (801c2c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801c282:	7823      	ldrb	r3, [r4, #0]
 801c284:	f3bf 8f5b 	dmb	ish
 801c288:	07db      	lsls	r3, r3, #31
 801c28a:	d40b      	bmi.n	801c2a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c28c:	4620      	mov	r0, r4
 801c28e:	f007 fcc2 	bl	8023c16 <__cxa_guard_acquire>
 801c292:	b138      	cbz	r0, 801c2a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801c294:	4620      	mov	r0, r4
 801c296:	f007 fcca 	bl	8023c2e <__cxa_guard_release>
 801c29a:	4a06      	ldr	r2, [pc, #24]	@ (801c2b4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801c29c:	4909      	ldr	r1, [pc, #36]	@ (801c2c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801c29e:	480a      	ldr	r0, [pc, #40]	@ (801c2c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c2a0:	f007 fcb2 	bl	8023c08 <__aeabi_atexit>
 801c2a4:	4b05      	ldr	r3, [pc, #20]	@ (801c2bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801c2a6:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801c2a8:	4b07      	ldr	r3, [pc, #28]	@ (801c2c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801c2aa:	642b      	str	r3, [r5, #64]	@ 0x40
 801c2ac:	bd38      	pop	{r3, r4, r5, pc}
 801c2ae:	bf00      	nop
 801c2b0:	20003020 	.word	0x20003020
 801c2b4:	20000000 	.word	0x20000000
 801c2b8:	08017fbb 	.word	0x08017fbb
 801c2bc:	2000007c 	.word	0x2000007c
 801c2c0:	20003024 	.word	0x20003024
 801c2c4:	08017fb9 	.word	0x08017fb9
 801c2c8:	20000080 	.word	0x20000080

0801c2cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801c2cc:	b510      	push	{r4, lr}
 801c2ce:	4604      	mov	r4, r0
 801c2d0:	f7ff ff14 	bl	801c0fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801c2d4:	4620      	mov	r0, r4
 801c2d6:	f7ff ff85 	bl	801c1e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801c2da:	4620      	mov	r0, r4
 801c2dc:	f7ff ff48 	bl	801c170 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801c2e0:	4620      	mov	r0, r4
 801c2e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c2e6:	f7ff bfb7 	b.w	801c258 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801c2ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801c2ec:	b538      	push	{r3, r4, r5, lr}
 801c2ee:	4c15      	ldr	r4, [pc, #84]	@ (801c344 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801c2f0:	7823      	ldrb	r3, [r4, #0]
 801c2f2:	f3bf 8f5b 	dmb	ish
 801c2f6:	07da      	lsls	r2, r3, #31
 801c2f8:	4605      	mov	r5, r0
 801c2fa:	d40b      	bmi.n	801c314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c2fc:	4620      	mov	r0, r4
 801c2fe:	f007 fc8a 	bl	8023c16 <__cxa_guard_acquire>
 801c302:	b138      	cbz	r0, 801c314 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801c304:	4620      	mov	r0, r4
 801c306:	f007 fc92 	bl	8023c2e <__cxa_guard_release>
 801c30a:	4a0f      	ldr	r2, [pc, #60]	@ (801c348 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c30c:	490f      	ldr	r1, [pc, #60]	@ (801c34c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801c30e:	4810      	ldr	r0, [pc, #64]	@ (801c350 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c310:	f007 fc7a 	bl	8023c08 <__aeabi_atexit>
 801c314:	4c0f      	ldr	r4, [pc, #60]	@ (801c354 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801c316:	7823      	ldrb	r3, [r4, #0]
 801c318:	f3bf 8f5b 	dmb	ish
 801c31c:	07db      	lsls	r3, r3, #31
 801c31e:	d40b      	bmi.n	801c338 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c320:	4620      	mov	r0, r4
 801c322:	f007 fc78 	bl	8023c16 <__cxa_guard_acquire>
 801c326:	b138      	cbz	r0, 801c338 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801c328:	4620      	mov	r0, r4
 801c32a:	f007 fc80 	bl	8023c2e <__cxa_guard_release>
 801c32e:	4a06      	ldr	r2, [pc, #24]	@ (801c348 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801c330:	4909      	ldr	r1, [pc, #36]	@ (801c358 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801c332:	480a      	ldr	r0, [pc, #40]	@ (801c35c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c334:	f007 fc68 	bl	8023c08 <__aeabi_atexit>
 801c338:	4b05      	ldr	r3, [pc, #20]	@ (801c350 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801c33a:	666b      	str	r3, [r5, #100]	@ 0x64
 801c33c:	4b07      	ldr	r3, [pc, #28]	@ (801c35c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801c33e:	66ab      	str	r3, [r5, #104]	@ 0x68
 801c340:	bd38      	pop	{r3, r4, r5, pc}
 801c342:	bf00      	nop
 801c344:	20003008 	.word	0x20003008
 801c348:	20000000 	.word	0x20000000
 801c34c:	08017fa7 	.word	0x08017fa7
 801c350:	20000064 	.word	0x20000064
 801c354:	2000300c 	.word	0x2000300c
 801c358:	08017fa5 	.word	0x08017fa5
 801c35c:	20000068 	.word	0x20000068

0801c360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801c360:	b538      	push	{r3, r4, r5, lr}
 801c362:	4c15      	ldr	r4, [pc, #84]	@ (801c3b8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801c364:	7823      	ldrb	r3, [r4, #0]
 801c366:	f3bf 8f5b 	dmb	ish
 801c36a:	07da      	lsls	r2, r3, #31
 801c36c:	4605      	mov	r5, r0
 801c36e:	d40b      	bmi.n	801c388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c370:	4620      	mov	r0, r4
 801c372:	f007 fc50 	bl	8023c16 <__cxa_guard_acquire>
 801c376:	b138      	cbz	r0, 801c388 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801c378:	4620      	mov	r0, r4
 801c37a:	f007 fc58 	bl	8023c2e <__cxa_guard_release>
 801c37e:	4a0f      	ldr	r2, [pc, #60]	@ (801c3bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c380:	490f      	ldr	r1, [pc, #60]	@ (801c3c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801c382:	4810      	ldr	r0, [pc, #64]	@ (801c3c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c384:	f007 fc40 	bl	8023c08 <__aeabi_atexit>
 801c388:	4c0f      	ldr	r4, [pc, #60]	@ (801c3c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801c38a:	7823      	ldrb	r3, [r4, #0]
 801c38c:	f3bf 8f5b 	dmb	ish
 801c390:	07db      	lsls	r3, r3, #31
 801c392:	d40b      	bmi.n	801c3ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c394:	4620      	mov	r0, r4
 801c396:	f007 fc3e 	bl	8023c16 <__cxa_guard_acquire>
 801c39a:	b138      	cbz	r0, 801c3ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801c39c:	4620      	mov	r0, r4
 801c39e:	f007 fc46 	bl	8023c2e <__cxa_guard_release>
 801c3a2:	4a06      	ldr	r2, [pc, #24]	@ (801c3bc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801c3a4:	4909      	ldr	r1, [pc, #36]	@ (801c3cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801c3a6:	480a      	ldr	r0, [pc, #40]	@ (801c3d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c3a8:	f007 fc2e 	bl	8023c08 <__aeabi_atexit>
 801c3ac:	4b05      	ldr	r3, [pc, #20]	@ (801c3c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801c3ae:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801c3b0:	4b07      	ldr	r3, [pc, #28]	@ (801c3d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801c3b2:	662b      	str	r3, [r5, #96]	@ 0x60
 801c3b4:	bd38      	pop	{r3, r4, r5, pc}
 801c3b6:	bf00      	nop
 801c3b8:	20002fe0 	.word	0x20002fe0
 801c3bc:	20000000 	.word	0x20000000
 801c3c0:	08017fab 	.word	0x08017fab
 801c3c4:	2000003c 	.word	0x2000003c
 801c3c8:	20002fe4 	.word	0x20002fe4
 801c3cc:	08017fa9 	.word	0x08017fa9
 801c3d0:	20000040 	.word	0x20000040

0801c3d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801c3d4:	b510      	push	{r4, lr}
 801c3d6:	4604      	mov	r4, r0
 801c3d8:	f7ff ff88 	bl	801c2ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801c3dc:	4620      	mov	r0, r4
 801c3de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c3e2:	f7ff bfbd 	b.w	801c360 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801c3e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801c3e8:	b538      	push	{r3, r4, r5, lr}
 801c3ea:	4c15      	ldr	r4, [pc, #84]	@ (801c440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801c3ec:	7823      	ldrb	r3, [r4, #0]
 801c3ee:	f3bf 8f5b 	dmb	ish
 801c3f2:	07da      	lsls	r2, r3, #31
 801c3f4:	4605      	mov	r5, r0
 801c3f6:	d40b      	bmi.n	801c410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c3f8:	4620      	mov	r0, r4
 801c3fa:	f007 fc0c 	bl	8023c16 <__cxa_guard_acquire>
 801c3fe:	b138      	cbz	r0, 801c410 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801c400:	4620      	mov	r0, r4
 801c402:	f007 fc14 	bl	8023c2e <__cxa_guard_release>
 801c406:	4a0f      	ldr	r2, [pc, #60]	@ (801c444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c408:	490f      	ldr	r1, [pc, #60]	@ (801c448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801c40a:	4810      	ldr	r0, [pc, #64]	@ (801c44c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c40c:	f007 fbfc 	bl	8023c08 <__aeabi_atexit>
 801c410:	4c0f      	ldr	r4, [pc, #60]	@ (801c450 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801c412:	7823      	ldrb	r3, [r4, #0]
 801c414:	f3bf 8f5b 	dmb	ish
 801c418:	07db      	lsls	r3, r3, #31
 801c41a:	d40b      	bmi.n	801c434 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c41c:	4620      	mov	r0, r4
 801c41e:	f007 fbfa 	bl	8023c16 <__cxa_guard_acquire>
 801c422:	b138      	cbz	r0, 801c434 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801c424:	4620      	mov	r0, r4
 801c426:	f007 fc02 	bl	8023c2e <__cxa_guard_release>
 801c42a:	4a06      	ldr	r2, [pc, #24]	@ (801c444 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801c42c:	4909      	ldr	r1, [pc, #36]	@ (801c454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801c42e:	480a      	ldr	r0, [pc, #40]	@ (801c458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c430:	f007 fbea 	bl	8023c08 <__aeabi_atexit>
 801c434:	4b05      	ldr	r3, [pc, #20]	@ (801c44c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801c436:	676b      	str	r3, [r5, #116]	@ 0x74
 801c438:	4b07      	ldr	r3, [pc, #28]	@ (801c458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801c43a:	67ab      	str	r3, [r5, #120]	@ 0x78
 801c43c:	bd38      	pop	{r3, r4, r5, pc}
 801c43e:	bf00      	nop
 801c440:	20002fd8 	.word	0x20002fd8
 801c444:	20000000 	.word	0x20000000
 801c448:	08017f9f 	.word	0x08017f9f
 801c44c:	20000034 	.word	0x20000034
 801c450:	20002fdc 	.word	0x20002fdc
 801c454:	08017f9d 	.word	0x08017f9d
 801c458:	20000038 	.word	0x20000038

0801c45c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801c45c:	b538      	push	{r3, r4, r5, lr}
 801c45e:	4c15      	ldr	r4, [pc, #84]	@ (801c4b4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801c460:	7823      	ldrb	r3, [r4, #0]
 801c462:	f3bf 8f5b 	dmb	ish
 801c466:	07da      	lsls	r2, r3, #31
 801c468:	4605      	mov	r5, r0
 801c46a:	d40b      	bmi.n	801c484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c46c:	4620      	mov	r0, r4
 801c46e:	f007 fbd2 	bl	8023c16 <__cxa_guard_acquire>
 801c472:	b138      	cbz	r0, 801c484 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801c474:	4620      	mov	r0, r4
 801c476:	f007 fbda 	bl	8023c2e <__cxa_guard_release>
 801c47a:	4a0f      	ldr	r2, [pc, #60]	@ (801c4b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c47c:	490f      	ldr	r1, [pc, #60]	@ (801c4bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801c47e:	4810      	ldr	r0, [pc, #64]	@ (801c4c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c480:	f007 fbc2 	bl	8023c08 <__aeabi_atexit>
 801c484:	4c0f      	ldr	r4, [pc, #60]	@ (801c4c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801c486:	7823      	ldrb	r3, [r4, #0]
 801c488:	f3bf 8f5b 	dmb	ish
 801c48c:	07db      	lsls	r3, r3, #31
 801c48e:	d40b      	bmi.n	801c4a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c490:	4620      	mov	r0, r4
 801c492:	f007 fbc0 	bl	8023c16 <__cxa_guard_acquire>
 801c496:	b138      	cbz	r0, 801c4a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801c498:	4620      	mov	r0, r4
 801c49a:	f007 fbc8 	bl	8023c2e <__cxa_guard_release>
 801c49e:	4a06      	ldr	r2, [pc, #24]	@ (801c4b8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801c4a0:	4909      	ldr	r1, [pc, #36]	@ (801c4c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801c4a2:	480a      	ldr	r0, [pc, #40]	@ (801c4cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c4a4:	f007 fbb0 	bl	8023c08 <__aeabi_atexit>
 801c4a8:	4b05      	ldr	r3, [pc, #20]	@ (801c4c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801c4aa:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801c4ac:	4b07      	ldr	r3, [pc, #28]	@ (801c4cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801c4ae:	672b      	str	r3, [r5, #112]	@ 0x70
 801c4b0:	bd38      	pop	{r3, r4, r5, pc}
 801c4b2:	bf00      	nop
 801c4b4:	20002fd0 	.word	0x20002fd0
 801c4b8:	20000000 	.word	0x20000000
 801c4bc:	08017fa3 	.word	0x08017fa3
 801c4c0:	2000002c 	.word	0x2000002c
 801c4c4:	20002fd4 	.word	0x20002fd4
 801c4c8:	08017fa1 	.word	0x08017fa1
 801c4cc:	20000030 	.word	0x20000030

0801c4d0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801c4d0:	b510      	push	{r4, lr}
 801c4d2:	4604      	mov	r4, r0
 801c4d4:	f7ff ff88 	bl	801c3e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801c4d8:	4620      	mov	r0, r4
 801c4da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c4de:	f7ff bfbd 	b.w	801c45c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801c4e2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801c4e2:	b510      	push	{r4, lr}
 801c4e4:	4604      	mov	r4, r0
 801c4e6:	f7ff fff3 	bl	801c4d0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801c4ea:	4620      	mov	r0, r4
 801c4ec:	f7ff ff72 	bl	801c3d4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801c4f0:	4620      	mov	r0, r4
 801c4f2:	f7ff fdf9 	bl	801c0e8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801c4f6:	4620      	mov	r0, r4
 801c4f8:	f7ff fcfa 	bl	801bef0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801c4fc:	4620      	mov	r0, r4
 801c4fe:	f7ff fd75 	bl	801bfec <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801c502:	4620      	mov	r0, r4
 801c504:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c508:	f7ff bee0 	b.w	801c2cc <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801c50c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801c50c:	b538      	push	{r3, r4, r5, lr}
 801c50e:	4c0b      	ldr	r4, [pc, #44]	@ (801c53c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801c510:	7823      	ldrb	r3, [r4, #0]
 801c512:	f3bf 8f5b 	dmb	ish
 801c516:	07db      	lsls	r3, r3, #31
 801c518:	4605      	mov	r5, r0
 801c51a:	d40b      	bmi.n	801c534 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c51c:	4620      	mov	r0, r4
 801c51e:	f007 fb7a 	bl	8023c16 <__cxa_guard_acquire>
 801c522:	b138      	cbz	r0, 801c534 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801c524:	4620      	mov	r0, r4
 801c526:	f007 fb82 	bl	8023c2e <__cxa_guard_release>
 801c52a:	4a05      	ldr	r2, [pc, #20]	@ (801c540 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801c52c:	4905      	ldr	r1, [pc, #20]	@ (801c544 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801c52e:	4806      	ldr	r0, [pc, #24]	@ (801c548 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c530:	f007 fb6a 	bl	8023c08 <__aeabi_atexit>
 801c534:	4b04      	ldr	r3, [pc, #16]	@ (801c548 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801c536:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801c538:	bd38      	pop	{r3, r4, r5, pc}
 801c53a:	bf00      	nop
 801c53c:	20002fc4 	.word	0x20002fc4
 801c540:	20000000 	.word	0x20000000
 801c544:	08017f9b 	.word	0x08017f9b
 801c548:	20000024 	.word	0x20000024

0801c54c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801c54c:	b538      	push	{r3, r4, r5, lr}
 801c54e:	4c0b      	ldr	r4, [pc, #44]	@ (801c57c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801c550:	7823      	ldrb	r3, [r4, #0]
 801c552:	f3bf 8f5b 	dmb	ish
 801c556:	07db      	lsls	r3, r3, #31
 801c558:	4605      	mov	r5, r0
 801c55a:	d40b      	bmi.n	801c574 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c55c:	4620      	mov	r0, r4
 801c55e:	f007 fb5a 	bl	8023c16 <__cxa_guard_acquire>
 801c562:	b138      	cbz	r0, 801c574 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801c564:	4620      	mov	r0, r4
 801c566:	f007 fb62 	bl	8023c2e <__cxa_guard_release>
 801c56a:	4a05      	ldr	r2, [pc, #20]	@ (801c580 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801c56c:	4905      	ldr	r1, [pc, #20]	@ (801c584 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801c56e:	4806      	ldr	r0, [pc, #24]	@ (801c588 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c570:	f007 fb4a 	bl	8023c08 <__aeabi_atexit>
 801c574:	4b04      	ldr	r3, [pc, #16]	@ (801c588 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801c576:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801c57a:	bd38      	pop	{r3, r4, r5, pc}
 801c57c:	20002fc8 	.word	0x20002fc8
 801c580:	20000000 	.word	0x20000000
 801c584:	08017f99 	.word	0x08017f99
 801c588:	20000028 	.word	0x20000028

0801c58c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801c58c:	b570      	push	{r4, r5, r6, lr}
 801c58e:	4d0d      	ldr	r5, [pc, #52]	@ (801c5c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801c590:	4c0d      	ldr	r4, [pc, #52]	@ (801c5c8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801c592:	782b      	ldrb	r3, [r5, #0]
 801c594:	f3bf 8f5b 	dmb	ish
 801c598:	f013 0f01 	tst.w	r3, #1
 801c59c:	4606      	mov	r6, r0
 801c59e:	d10d      	bne.n	801c5bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c5a0:	4628      	mov	r0, r5
 801c5a2:	f007 fb38 	bl	8023c16 <__cxa_guard_acquire>
 801c5a6:	b148      	cbz	r0, 801c5bc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801c5a8:	4b08      	ldr	r3, [pc, #32]	@ (801c5cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801c5aa:	6023      	str	r3, [r4, #0]
 801c5ac:	4628      	mov	r0, r5
 801c5ae:	f007 fb3e 	bl	8023c2e <__cxa_guard_release>
 801c5b2:	4a07      	ldr	r2, [pc, #28]	@ (801c5d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801c5b4:	4907      	ldr	r1, [pc, #28]	@ (801c5d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801c5b6:	4620      	mov	r0, r4
 801c5b8:	f007 fb26 	bl	8023c08 <__aeabi_atexit>
 801c5bc:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801c5c0:	bd70      	pop	{r4, r5, r6, pc}
 801c5c2:	bf00      	nop
 801c5c4:	20002fcc 	.word	0x20002fcc
 801c5c8:	20003144 	.word	0x20003144
 801c5cc:	08027318 	.word	0x08027318
 801c5d0:	20000000 	.word	0x20000000
 801c5d4:	08017f97 	.word	0x08017f97

0801c5d8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801c5d8:	b510      	push	{r4, lr}
 801c5da:	4604      	mov	r4, r0
 801c5dc:	f7ff ff96 	bl	801c50c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801c5e0:	4620      	mov	r0, r4
 801c5e2:	f7ff ffb3 	bl	801c54c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801c5e6:	4620      	mov	r0, r4
 801c5e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801c5ec:	f7ff bfce 	b.w	801c58c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801c5f0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801c5f0:	b570      	push	{r4, r5, r6, lr}
 801c5f2:	4d0d      	ldr	r5, [pc, #52]	@ (801c628 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801c5f4:	4c0d      	ldr	r4, [pc, #52]	@ (801c62c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801c5f6:	782b      	ldrb	r3, [r5, #0]
 801c5f8:	f3bf 8f5b 	dmb	ish
 801c5fc:	f013 0f01 	tst.w	r3, #1
 801c600:	4606      	mov	r6, r0
 801c602:	d10d      	bne.n	801c620 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801c604:	4628      	mov	r0, r5
 801c606:	f007 fb06 	bl	8023c16 <__cxa_guard_acquire>
 801c60a:	b148      	cbz	r0, 801c620 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801c60c:	4b08      	ldr	r3, [pc, #32]	@ (801c630 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801c60e:	6023      	str	r3, [r4, #0]
 801c610:	4628      	mov	r0, r5
 801c612:	f007 fb0c 	bl	8023c2e <__cxa_guard_release>
 801c616:	4a07      	ldr	r2, [pc, #28]	@ (801c634 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801c618:	4907      	ldr	r1, [pc, #28]	@ (801c638 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801c61a:	4620      	mov	r0, r4
 801c61c:	f007 faf4 	bl	8023c08 <__aeabi_atexit>
 801c620:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801c624:	bd70      	pop	{r4, r5, r6, pc}
 801c626:	bf00      	nop
 801c628:	20002fc0 	.word	0x20002fc0
 801c62c:	20003040 	.word	0x20003040
 801c630:	08027334 	.word	0x08027334
 801c634:	20000000 	.word	0x20000000
 801c638:	08017f95 	.word	0x08017f95

0801c63c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801c63c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c640:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801c644:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801c648:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801c64c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801c650:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801c654:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801c658:	8808      	ldrh	r0, [r1, #0]
 801c65a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801c65e:	2d00      	cmp	r5, #0
 801c660:	eb02 0a0c 	add.w	sl, r2, ip
 801c664:	f2c0 80b0 	blt.w	801c7c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c668:	45ab      	cmp	fp, r5
 801c66a:	f340 80ad 	ble.w	801c7c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801c66e:	2c00      	cmp	r4, #0
 801c670:	f2c0 80a8 	blt.w	801c7c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c674:	45a6      	cmp	lr, r4
 801c676:	f340 80a5 	ble.w	801c7c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801c67a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801c67e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801c682:	1c62      	adds	r2, r4, #1
 801c684:	f100 80a3 	bmi.w	801c7ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c688:	4596      	cmp	lr, r2
 801c68a:	f340 80a0 	ble.w	801c7ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c68e:	f1b9 0f00 	cmp.w	r9, #0
 801c692:	f000 809c 	beq.w	801c7ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801c696:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c69a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801c69e:	3501      	adds	r5, #1
 801c6a0:	f100 8099 	bmi.w	801c7d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c6a4:	45ab      	cmp	fp, r5
 801c6a6:	f340 8096 	ble.w	801c7d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c6aa:	2f00      	cmp	r7, #0
 801c6ac:	f000 8093 	beq.w	801c7d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801c6b0:	2c00      	cmp	r4, #0
 801c6b2:	f2c0 808e 	blt.w	801c7d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c6b6:	45a6      	cmp	lr, r4
 801c6b8:	f340 808b 	ble.w	801c7d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801c6bc:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801c6c0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801c6c4:	3401      	adds	r4, #1
 801c6c6:	f100 8089 	bmi.w	801c7dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c6ca:	45a6      	cmp	lr, r4
 801c6cc:	f340 8086 	ble.w	801c7dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c6d0:	f1b9 0f00 	cmp.w	r9, #0
 801c6d4:	f000 8082 	beq.w	801c7dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801c6d8:	44d6      	add	lr, sl
 801c6da:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801c6de:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801c6e2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801c6e6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c6ea:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801c6ee:	fb19 fe07 	smulbb	lr, r9, r7
 801c6f2:	ea44 0808 	orr.w	r8, r4, r8
 801c6f6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801c6fa:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801c6fe:	f1c7 0210 	rsb	r2, r7, #16
 801c702:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c706:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801c70a:	ea44 0c0c 	orr.w	ip, r4, ip
 801c70e:	eba2 0209 	sub.w	r2, r2, r9
 801c712:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801c716:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801c71a:	fb04 f40c 	mul.w	r4, r4, ip
 801c71e:	fb02 4808 	mla	r8, r2, r8, r4
 801c722:	041a      	lsls	r2, r3, #16
 801c724:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c728:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c72c:	4313      	orrs	r3, r2
 801c72e:	042a      	lsls	r2, r5, #16
 801c730:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801c734:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c738:	fb0e 8303 	mla	r3, lr, r3, r8
 801c73c:	432a      	orrs	r2, r5
 801c73e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801c742:	fb07 3202 	mla	r2, r7, r2, r3
 801c746:	0d53      	lsrs	r3, r2, #21
 801c748:	0952      	lsrs	r2, r2, #5
 801c74a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c74e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c752:	431a      	orrs	r2, r3
 801c754:	b293      	uxth	r3, r2
 801c756:	b2b4      	uxth	r4, r6
 801c758:	1202      	asrs	r2, r0, #8
 801c75a:	43f6      	mvns	r6, r6
 801c75c:	b2f6      	uxtb	r6, r6
 801c75e:	121d      	asrs	r5, r3, #8
 801c760:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c764:	fb12 f206 	smulbb	r2, r2, r6
 801c768:	10c7      	asrs	r7, r0, #3
 801c76a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c76e:	00c0      	lsls	r0, r0, #3
 801c770:	fb05 2504 	mla	r5, r5, r4, r2
 801c774:	b2c0      	uxtb	r0, r0
 801c776:	10da      	asrs	r2, r3, #3
 801c778:	00db      	lsls	r3, r3, #3
 801c77a:	b2db      	uxtb	r3, r3
 801c77c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801c780:	fb10 f006 	smulbb	r0, r0, r6
 801c784:	b2ad      	uxth	r5, r5
 801c786:	fb03 0004 	mla	r0, r3, r4, r0
 801c78a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801c78e:	fb17 f706 	smulbb	r7, r7, r6
 801c792:	b280      	uxth	r0, r0
 801c794:	1c6b      	adds	r3, r5, #1
 801c796:	fb02 7204 	mla	r2, r2, r4, r7
 801c79a:	b292      	uxth	r2, r2
 801c79c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c7a0:	1c43      	adds	r3, r0, #1
 801c7a2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c7a6:	1c50      	adds	r0, r2, #1
 801c7a8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801c7ac:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c7b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c7b4:	0952      	lsrs	r2, r2, #5
 801c7b6:	432b      	orrs	r3, r5
 801c7b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c7bc:	4313      	orrs	r3, r2
 801c7be:	800b      	strh	r3, [r1, #0]
 801c7c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c7c4:	4680      	mov	r8, r0
 801c7c6:	e75c      	b.n	801c682 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801c7c8:	4684      	mov	ip, r0
 801c7ca:	4680      	mov	r8, r0
 801c7cc:	e767      	b.n	801c69e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801c7ce:	4684      	mov	ip, r0
 801c7d0:	e765      	b.n	801c69e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801c7d2:	4605      	mov	r5, r0
 801c7d4:	e776      	b.n	801c6c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801c7d6:	4603      	mov	r3, r0
 801c7d8:	4605      	mov	r5, r0
 801c7da:	e782      	b.n	801c6e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801c7dc:	4603      	mov	r3, r0
 801c7de:	e780      	b.n	801c6e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801c7e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c7e4:	b099      	sub	sp, #100	@ 0x64
 801c7e6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801c7ea:	9215      	str	r2, [sp, #84]	@ 0x54
 801c7ec:	9309      	str	r3, [sp, #36]	@ 0x24
 801c7ee:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801c7f0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801c7f4:	930d      	str	r3, [sp, #52]	@ 0x34
 801c7f6:	910c      	str	r1, [sp, #48]	@ 0x30
 801c7f8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801c7fc:	9016      	str	r0, [sp, #88]	@ 0x58
 801c7fe:	6850      	ldr	r0, [r2, #4]
 801c800:	6812      	ldr	r2, [r2, #0]
 801c802:	fb00 1303 	mla	r3, r0, r3, r1
 801c806:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801c80a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c80c:	681b      	ldr	r3, [r3, #0]
 801c80e:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c810:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c812:	685e      	ldr	r6, [r3, #4]
 801c814:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c816:	43db      	mvns	r3, r3
 801c818:	b2db      	uxtb	r3, r3
 801c81a:	3604      	adds	r6, #4
 801c81c:	930a      	str	r3, [sp, #40]	@ 0x28
 801c81e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c820:	2b00      	cmp	r3, #0
 801c822:	dc03      	bgt.n	801c82c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c824:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801c826:	2b00      	cmp	r3, #0
 801c828:	f340 8225 	ble.w	801cc76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801c82c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c82e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c832:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c836:	1e48      	subs	r0, r1, #1
 801c838:	1e57      	subs	r7, r2, #1
 801c83a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c83c:	2b00      	cmp	r3, #0
 801c83e:	f340 80e3 	ble.w	801ca08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801c842:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801c846:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c84a:	d406      	bmi.n	801c85a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c84c:	4584      	cmp	ip, r0
 801c84e:	da04      	bge.n	801c85a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c850:	2b00      	cmp	r3, #0
 801c852:	db02      	blt.n	801c85a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801c854:	42bb      	cmp	r3, r7
 801c856:	f2c0 80d8 	blt.w	801ca0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801c85a:	f11c 0c01 	adds.w	ip, ip, #1
 801c85e:	f100 80c9 	bmi.w	801c9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c862:	4561      	cmp	r1, ip
 801c864:	f2c0 80c6 	blt.w	801c9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c868:	3301      	adds	r3, #1
 801c86a:	f100 80c3 	bmi.w	801c9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c86e:	429a      	cmp	r2, r3
 801c870:	f2c0 80c0 	blt.w	801c9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801c874:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801c878:	4647      	mov	r7, r8
 801c87a:	f1bb 0f00 	cmp.w	fp, #0
 801c87e:	f340 80e3 	ble.w	801ca48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801c882:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801c884:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801c886:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801c88a:	689b      	ldr	r3, [r3, #8]
 801c88c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801c890:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c894:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801c898:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801c89c:	f100 8121 	bmi.w	801cae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c8a0:	f103 39ff 	add.w	r9, r3, #4294967295
 801c8a4:	454a      	cmp	r2, r9
 801c8a6:	f280 811c 	bge.w	801cae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c8aa:	f1bc 0f00 	cmp.w	ip, #0
 801c8ae:	f2c0 8118 	blt.w	801cae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c8b2:	f10e 39ff 	add.w	r9, lr, #4294967295
 801c8b6:	45cc      	cmp	ip, r9
 801c8b8:	f280 8113 	bge.w	801cae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801c8bc:	b21b      	sxth	r3, r3
 801c8be:	fb0c 2203 	mla	r2, ip, r3, r2
 801c8c2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c8c4:	eb04 0902 	add.w	r9, r4, r2
 801c8c8:	5ca2      	ldrb	r2, [r4, r2]
 801c8ca:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801c8ce:	2800      	cmp	r0, #0
 801c8d0:	f000 80fe 	beq.w	801cad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c8d4:	f899 2001 	ldrb.w	r2, [r9, #1]
 801c8d8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801c8dc:	9211      	str	r2, [sp, #68]	@ 0x44
 801c8de:	b151      	cbz	r1, 801c8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801c8e0:	eb09 0203 	add.w	r2, r9, r3
 801c8e4:	f819 3003 	ldrb.w	r3, [r9, r3]
 801c8e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c8ec:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c8ee:	7853      	ldrb	r3, [r2, #1]
 801c8f0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801c8f4:	9312      	str	r3, [sp, #72]	@ 0x48
 801c8f6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c8f8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c8fa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801c8fe:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c902:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c906:	ea4c 0c03 	orr.w	ip, ip, r3
 801c90a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801c90c:	041b      	lsls	r3, r3, #16
 801c90e:	fb10 f201 	smulbb	r2, r0, r1
 801c912:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c916:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801c91a:	10d2      	asrs	r2, r2, #3
 801c91c:	4323      	orrs	r3, r4
 801c91e:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801c922:	4353      	muls	r3, r2
 801c924:	fb09 330c 	mla	r3, r9, ip, r3
 801c928:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801c92c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801c930:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c934:	ea4c 0e0e 	orr.w	lr, ip, lr
 801c938:	f1c1 0c10 	rsb	ip, r1, #16
 801c93c:	ebac 0c00 	sub.w	ip, ip, r0
 801c940:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801c944:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801c948:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801c94a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c94c:	0418      	lsls	r0, r3, #16
 801c94e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801c952:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801c956:	4318      	orrs	r0, r3
 801c958:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801c95c:	fb02 c200 	mla	r2, r2, r0, ip
 801c960:	0d53      	lsrs	r3, r2, #21
 801c962:	0952      	lsrs	r2, r2, #5
 801c964:	8838      	ldrh	r0, [r7, #0]
 801c966:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c96a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c96e:	431a      	orrs	r2, r3
 801c970:	b292      	uxth	r2, r2
 801c972:	1201      	asrs	r1, r0, #8
 801c974:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801c978:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801c97c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801c980:	fb11 f104 	smulbb	r1, r1, r4
 801c984:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801c988:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801c98c:	00c0      	lsls	r0, r0, #3
 801c98e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801c992:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801c996:	10d1      	asrs	r1, r2, #3
 801c998:	b2c0      	uxtb	r0, r0
 801c99a:	00d2      	lsls	r2, r2, #3
 801c99c:	b2d2      	uxtb	r2, r2
 801c99e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c9a2:	fb1e fe04 	smulbb	lr, lr, r4
 801c9a6:	fb10 f004 	smulbb	r0, r0, r4
 801c9aa:	fa1f fc8c 	uxth.w	ip, ip
 801c9ae:	fb01 e103 	mla	r1, r1, r3, lr
 801c9b2:	fb02 0303 	mla	r3, r2, r3, r0
 801c9b6:	b29a      	uxth	r2, r3
 801c9b8:	f10c 0301 	add.w	r3, ip, #1
 801c9bc:	b289      	uxth	r1, r1
 801c9be:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801c9c2:	1c53      	adds	r3, r2, #1
 801c9c4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c9c8:	1c4a      	adds	r2, r1, #1
 801c9ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c9ce:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801c9d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c9d6:	0949      	lsrs	r1, r1, #5
 801c9d8:	ea43 030c 	orr.w	r3, r3, ip
 801c9dc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c9e0:	430b      	orrs	r3, r1
 801c9e2:	803b      	strh	r3, [r7, #0]
 801c9e4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c9e6:	449a      	add	sl, r3
 801c9e8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c9ea:	3702      	adds	r7, #2
 801c9ec:	441d      	add	r5, r3
 801c9ee:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c9f2:	e742      	b.n	801c87a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c9f4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801c9f6:	449a      	add	sl, r3
 801c9f8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801c9fa:	441d      	add	r5, r3
 801c9fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c9fe:	3b01      	subs	r3, #1
 801ca00:	9309      	str	r3, [sp, #36]	@ 0x24
 801ca02:	f108 0802 	add.w	r8, r8, #2
 801ca06:	e718      	b.n	801c83a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ca08:	d023      	beq.n	801ca52 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ca0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ca0c:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801ca0e:	3b01      	subs	r3, #1
 801ca10:	fb00 a003 	mla	r0, r0, r3, sl
 801ca14:	1400      	asrs	r0, r0, #16
 801ca16:	f53f af2d 	bmi.w	801c874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ca1a:	3901      	subs	r1, #1
 801ca1c:	4288      	cmp	r0, r1
 801ca1e:	f6bf af29 	bge.w	801c874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ca22:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801ca24:	fb01 5303 	mla	r3, r1, r3, r5
 801ca28:	141b      	asrs	r3, r3, #16
 801ca2a:	f53f af23 	bmi.w	801c874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ca2e:	3a01      	subs	r2, #1
 801ca30:	4293      	cmp	r3, r2
 801ca32:	f6bf af1f 	bge.w	801c874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ca36:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801ca3a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801ca3e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801ca42:	f1be 0f00 	cmp.w	lr, #0
 801ca46:	dc6c      	bgt.n	801cb22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801ca48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ca4a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ca4e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801ca52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ca54:	2b00      	cmp	r3, #0
 801ca56:	f340 810e 	ble.w	801cc76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801ca5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca5e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ca62:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ca66:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801ca68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca74:	eef0 6a62 	vmov.f32	s13, s5
 801ca78:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca80:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca84:	ee16 aa90 	vmov	sl, s13
 801ca88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca8c:	eef0 6a43 	vmov.f32	s13, s6
 801ca90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca94:	ee12 2a90 	vmov	r2, s5
 801ca98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ca9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801caa0:	ee13 2a10 	vmov	r2, s6
 801caa4:	9325      	str	r3, [sp, #148]	@ 0x94
 801caa6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801caa8:	fb92 f3f3 	sdiv	r3, r2, r3
 801caac:	9326      	str	r3, [sp, #152]	@ 0x98
 801caae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cab0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801cab2:	3b01      	subs	r3, #1
 801cab4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cab8:	930c      	str	r3, [sp, #48]	@ 0x30
 801caba:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801cabc:	bf08      	it	eq
 801cabe:	4613      	moveq	r3, r2
 801cac0:	ee16 5a90 	vmov	r5, s13
 801cac4:	9309      	str	r3, [sp, #36]	@ 0x24
 801cac6:	eeb0 3a67 	vmov.f32	s6, s15
 801caca:	eef0 2a47 	vmov.f32	s5, s14
 801cace:	e6a6      	b.n	801c81e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801cad0:	2900      	cmp	r1, #0
 801cad2:	f43f af10 	beq.w	801c8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cad6:	f819 3003 	ldrb.w	r3, [r9, r3]
 801cada:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cade:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cae0:	e709      	b.n	801c8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801cae2:	f112 0901 	adds.w	r9, r2, #1
 801cae6:	f53f af7d 	bmi.w	801c9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801caea:	454b      	cmp	r3, r9
 801caec:	f6ff af7a 	blt.w	801c9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801caf0:	f11c 0901 	adds.w	r9, ip, #1
 801caf4:	f53f af76 	bmi.w	801c9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801caf8:	45ce      	cmp	lr, r9
 801cafa:	f6ff af73 	blt.w	801c9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cafe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801cb00:	9202      	str	r2, [sp, #8]
 801cb02:	b21b      	sxth	r3, r3
 801cb04:	fa0f f28e 	sxth.w	r2, lr
 801cb08:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801cb0c:	e9cd c003 	strd	ip, r0, [sp, #12]
 801cb10:	9201      	str	r2, [sp, #4]
 801cb12:	9300      	str	r3, [sp, #0]
 801cb14:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cb16:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801cb18:	4633      	mov	r3, r6
 801cb1a:	4639      	mov	r1, r7
 801cb1c:	f7ff fd8e 	bl	801c63c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801cb20:	e760      	b.n	801c9e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801cb22:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801cb24:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801cb26:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801cb2a:	ea4f 422a 	mov.w	r2, sl, asr #16
 801cb2e:	1429      	asrs	r1, r5, #16
 801cb30:	fb03 2101 	mla	r1, r3, r1, r2
 801cb34:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801cb36:	440a      	add	r2, r1
 801cb38:	5c61      	ldrb	r1, [r4, r1]
 801cb3a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801cb3e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801cb42:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801cb46:	f1bc 0f00 	cmp.w	ip, #0
 801cb4a:	f000 808c 	beq.w	801cc66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801cb4e:	7857      	ldrb	r7, [r2, #1]
 801cb50:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801cb54:	9413      	str	r4, [sp, #76]	@ 0x4c
 801cb56:	b140      	cbz	r0, 801cb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cb58:	18d7      	adds	r7, r2, r3
 801cb5a:	5cd3      	ldrb	r3, [r2, r3]
 801cb5c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cb60:	9310      	str	r3, [sp, #64]	@ 0x40
 801cb62:	787b      	ldrb	r3, [r7, #1]
 801cb64:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cb68:	9314      	str	r3, [sp, #80]	@ 0x50
 801cb6a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cb6c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801cb6e:	fb1c f200 	smulbb	r2, ip, r0
 801cb72:	041f      	lsls	r7, r3, #16
 801cb74:	10d2      	asrs	r2, r2, #3
 801cb76:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cb7a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801cb7e:	431f      	orrs	r7, r3
 801cb80:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801cb84:	9317      	str	r3, [sp, #92]	@ 0x5c
 801cb86:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801cb88:	041b      	lsls	r3, r3, #16
 801cb8a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801cb8e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cb92:	ea43 030b 	orr.w	r3, r3, fp
 801cb96:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801cb98:	4353      	muls	r3, r2
 801cb9a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801cb9e:	fb04 3707 	mla	r7, r4, r7, r3
 801cba2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cba6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801cbaa:	ea43 0b01 	orr.w	fp, r3, r1
 801cbae:	f1c0 0110 	rsb	r1, r0, #16
 801cbb2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801cbb4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cbb6:	eba1 0c0c 	sub.w	ip, r1, ip
 801cbba:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801cbbe:	fb0c 770b 	mla	r7, ip, fp, r7
 801cbc2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801cbc6:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801cbca:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cbce:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801cbd2:	ea4c 0c0b 	orr.w	ip, ip, fp
 801cbd6:	fb02 770c 	mla	r7, r2, ip, r7
 801cbda:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801cbdc:	0d79      	lsrs	r1, r7, #21
 801cbde:	097f      	lsrs	r7, r7, #5
 801cbe0:	8812      	ldrh	r2, [r2, #0]
 801cbe2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cbe6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cbea:	430f      	orrs	r7, r1
 801cbec:	b2bb      	uxth	r3, r7
 801cbee:	1211      	asrs	r1, r2, #8
 801cbf0:	1218      	asrs	r0, r3, #8
 801cbf2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cbf6:	fb11 f104 	smulbb	r1, r1, r4
 801cbfa:	10d7      	asrs	r7, r2, #3
 801cbfc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cc00:	00d2      	lsls	r2, r2, #3
 801cc02:	fb00 1009 	mla	r0, r0, r9, r1
 801cc06:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cc0a:	10d9      	asrs	r1, r3, #3
 801cc0c:	b2d2      	uxtb	r2, r2
 801cc0e:	00db      	lsls	r3, r3, #3
 801cc10:	fb17 f704 	smulbb	r7, r7, r4
 801cc14:	fb12 f204 	smulbb	r2, r2, r4
 801cc18:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cc1c:	b2db      	uxtb	r3, r3
 801cc1e:	b280      	uxth	r0, r0
 801cc20:	fb01 7109 	mla	r1, r1, r9, r7
 801cc24:	fb03 2309 	mla	r3, r3, r9, r2
 801cc28:	b29b      	uxth	r3, r3
 801cc2a:	b289      	uxth	r1, r1
 801cc2c:	1c42      	adds	r2, r0, #1
 801cc2e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801cc32:	1c4f      	adds	r7, r1, #1
 801cc34:	1c5a      	adds	r2, r3, #1
 801cc36:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cc3a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801cc3e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801cc42:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cc46:	0949      	lsrs	r1, r1, #5
 801cc48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cc4a:	4310      	orrs	r0, r2
 801cc4c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801cc50:	4308      	orrs	r0, r1
 801cc52:	f823 0b02 	strh.w	r0, [r3], #2
 801cc56:	930e      	str	r3, [sp, #56]	@ 0x38
 801cc58:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801cc5a:	449a      	add	sl, r3
 801cc5c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801cc5e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801cc62:	441d      	add	r5, r3
 801cc64:	e6ed      	b.n	801ca42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801cc66:	2800      	cmp	r0, #0
 801cc68:	f43f af7f 	beq.w	801cb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cc6c:	5cd3      	ldrb	r3, [r2, r3]
 801cc6e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801cc72:	9310      	str	r3, [sp, #64]	@ 0x40
 801cc74:	e779      	b.n	801cb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801cc76:	b019      	add	sp, #100	@ 0x64
 801cc78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cc7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cc7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cc80:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801cc84:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801cc88:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801cc8c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801cc90:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801cc94:	8808      	ldrh	r0, [r1, #0]
 801cc96:	fb08 470e 	mla	r7, r8, lr, r4
 801cc9a:	f1b8 0f00 	cmp.w	r8, #0
 801cc9e:	eb02 0907 	add.w	r9, r2, r7
 801cca2:	db67      	blt.n	801cd74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801cca4:	45c2      	cmp	sl, r8
 801cca6:	dd65      	ble.n	801cd74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801cca8:	2c00      	cmp	r4, #0
 801ccaa:	db61      	blt.n	801cd70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ccac:	45a6      	cmp	lr, r4
 801ccae:	dd5f      	ble.n	801cd70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ccb0:	5dd2      	ldrb	r2, [r2, r7]
 801ccb2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ccb6:	1c62      	adds	r2, r4, #1
 801ccb8:	d45f      	bmi.n	801cd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ccba:	4596      	cmp	lr, r2
 801ccbc:	dd5d      	ble.n	801cd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ccbe:	2d00      	cmp	r5, #0
 801ccc0:	d05b      	beq.n	801cd7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ccc2:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ccc6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ccca:	f118 0801 	adds.w	r8, r8, #1
 801ccce:	d458      	bmi.n	801cd82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ccd0:	45c2      	cmp	sl, r8
 801ccd2:	dd56      	ble.n	801cd82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ccd4:	2e00      	cmp	r6, #0
 801ccd6:	d054      	beq.n	801cd82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ccd8:	2c00      	cmp	r4, #0
 801ccda:	db50      	blt.n	801cd7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ccdc:	45a6      	cmp	lr, r4
 801ccde:	dd4e      	ble.n	801cd7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801cce0:	f819 200e 	ldrb.w	r2, [r9, lr]
 801cce4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801cce8:	3401      	adds	r4, #1
 801ccea:	d407      	bmi.n	801ccfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ccec:	45a6      	cmp	lr, r4
 801ccee:	dd05      	ble.n	801ccfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ccf0:	b125      	cbz	r5, 801ccfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801ccf2:	44ce      	add	lr, r9
 801ccf4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801ccf8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801ccfc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801cd00:	fb15 f406 	smulbb	r4, r5, r6
 801cd04:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cd08:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801cd0c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801cd10:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801cd14:	ea43 0c0c 	orr.w	ip, r3, ip
 801cd18:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801cd1c:	f1c6 0310 	rsb	r3, r6, #16
 801cd20:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801cd24:	1b5b      	subs	r3, r3, r5
 801cd26:	ea4e 0707 	orr.w	r7, lr, r7
 801cd2a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801cd2e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cd32:	437d      	muls	r5, r7
 801cd34:	fb03 5c0c 	mla	ip, r3, ip, r5
 801cd38:	0403      	lsls	r3, r0, #16
 801cd3a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cd3e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cd42:	4318      	orrs	r0, r3
 801cd44:	0413      	lsls	r3, r2, #16
 801cd46:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801cd4a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cd4e:	4313      	orrs	r3, r2
 801cd50:	fb04 c000 	mla	r0, r4, r0, ip
 801cd54:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801cd58:	fb06 0003 	mla	r0, r6, r3, r0
 801cd5c:	0d43      	lsrs	r3, r0, #21
 801cd5e:	0940      	lsrs	r0, r0, #5
 801cd60:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cd64:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cd68:	4318      	orrs	r0, r3
 801cd6a:	8008      	strh	r0, [r1, #0]
 801cd6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cd70:	4684      	mov	ip, r0
 801cd72:	e7a0      	b.n	801ccb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801cd74:	4607      	mov	r7, r0
 801cd76:	4684      	mov	ip, r0
 801cd78:	e7a7      	b.n	801ccca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cd7a:	4607      	mov	r7, r0
 801cd7c:	e7a5      	b.n	801ccca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801cd7e:	4602      	mov	r2, r0
 801cd80:	e7b2      	b.n	801cce8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801cd82:	4602      	mov	r2, r0
 801cd84:	e7ba      	b.n	801ccfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801cd86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cd86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cd8a:	b093      	sub	sp, #76	@ 0x4c
 801cd8c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801cd90:	920f      	str	r2, [sp, #60]	@ 0x3c
 801cd92:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801cd94:	9108      	str	r1, [sp, #32]
 801cd96:	9306      	str	r3, [sp, #24]
 801cd98:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801cd9c:	9010      	str	r0, [sp, #64]	@ 0x40
 801cd9e:	6850      	ldr	r0, [r2, #4]
 801cda0:	6812      	ldr	r2, [r2, #0]
 801cda2:	fb00 1303 	mla	r3, r0, r3, r1
 801cda6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801cdaa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdac:	681b      	ldr	r3, [r3, #0]
 801cdae:	9307      	str	r3, [sp, #28]
 801cdb0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdb2:	685f      	ldr	r7, [r3, #4]
 801cdb4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801cdb8:	3704      	adds	r7, #4
 801cdba:	9b08      	ldr	r3, [sp, #32]
 801cdbc:	2b00      	cmp	r3, #0
 801cdbe:	dc03      	bgt.n	801cdc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801cdc0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cdc2:	2b00      	cmp	r3, #0
 801cdc4:	f340 81b2 	ble.w	801d12c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cdc8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cdca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cdce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cdd2:	1e48      	subs	r0, r1, #1
 801cdd4:	f102 3cff 	add.w	ip, r2, #4294967295
 801cdd8:	9b06      	ldr	r3, [sp, #24]
 801cdda:	2b00      	cmp	r3, #0
 801cddc:	f340 80a9 	ble.w	801cf32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801cde0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801cde4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801cde8:	d406      	bmi.n	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cdea:	4586      	cmp	lr, r0
 801cdec:	da04      	bge.n	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cdee:	2b00      	cmp	r3, #0
 801cdf0:	db02      	blt.n	801cdf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801cdf2:	4563      	cmp	r3, ip
 801cdf4:	f2c0 809e 	blt.w	801cf34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801cdf8:	f11e 0e01 	adds.w	lr, lr, #1
 801cdfc:	f100 808f 	bmi.w	801cf1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ce00:	4571      	cmp	r1, lr
 801ce02:	f2c0 808c 	blt.w	801cf1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ce06:	3301      	adds	r3, #1
 801ce08:	f100 8089 	bmi.w	801cf1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ce0c:	429a      	cmp	r2, r3
 801ce0e:	f2c0 8086 	blt.w	801cf1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ce12:	f8dd b018 	ldr.w	fp, [sp, #24]
 801ce16:	46c8      	mov	r8, r9
 801ce18:	f1bb 0f00 	cmp.w	fp, #0
 801ce1c:	f340 80a6 	ble.w	801cf6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ce20:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801ce22:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ce24:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ce28:	689b      	ldr	r3, [r3, #8]
 801ce2a:	1422      	asrs	r2, r4, #16
 801ce2c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ce30:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ce34:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ce38:	f100 80e3 	bmi.w	801d002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ce3c:	f103 3aff 	add.w	sl, r3, #4294967295
 801ce40:	4552      	cmp	r2, sl
 801ce42:	f280 80de 	bge.w	801d002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ce46:	f1bc 0f00 	cmp.w	ip, #0
 801ce4a:	f2c0 80da 	blt.w	801d002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ce4e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ce52:	45d4      	cmp	ip, sl
 801ce54:	f280 80d5 	bge.w	801d002 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ce58:	b21b      	sxth	r3, r3
 801ce5a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ce5e:	9d07      	ldr	r5, [sp, #28]
 801ce60:	eb05 0a02 	add.w	sl, r5, r2
 801ce64:	5caa      	ldrb	r2, [r5, r2]
 801ce66:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ce6a:	2800      	cmp	r0, #0
 801ce6c:	f000 80c0 	beq.w	801cff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ce70:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ce74:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ce78:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ce7a:	b151      	cbz	r1, 801ce92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ce7c:	eb0a 0203 	add.w	r2, sl, r3
 801ce80:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ce84:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ce88:	9309      	str	r3, [sp, #36]	@ 0x24
 801ce8a:	7853      	ldrb	r3, [r2, #1]
 801ce8c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ce90:	930c      	str	r3, [sp, #48]	@ 0x30
 801ce92:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ce94:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ce96:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ce9a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ce9e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cea2:	ea4c 0c03 	orr.w	ip, ip, r3
 801cea6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cea8:	041b      	lsls	r3, r3, #16
 801ceaa:	fb10 f201 	smulbb	r2, r0, r1
 801ceae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ceb2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ceb6:	10d2      	asrs	r2, r2, #3
 801ceb8:	432b      	orrs	r3, r5
 801ceba:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801cebe:	4353      	muls	r3, r2
 801cec0:	fb0a 330c 	mla	r3, sl, ip, r3
 801cec4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801cec8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801cecc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ced0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ced4:	f1c1 0c10 	rsb	ip, r1, #16
 801ced8:	ebac 0c00 	sub.w	ip, ip, r0
 801cedc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801cee0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801cee4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cee6:	0418      	lsls	r0, r3, #16
 801cee8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ceec:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801cef0:	4318      	orrs	r0, r3
 801cef2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801cef6:	fb02 c200 	mla	r2, r2, r0, ip
 801cefa:	0d53      	lsrs	r3, r2, #21
 801cefc:	0952      	lsrs	r2, r2, #5
 801cefe:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf02:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cf06:	431a      	orrs	r2, r3
 801cf08:	f8a8 2000 	strh.w	r2, [r8]
 801cf0c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cf0e:	441c      	add	r4, r3
 801cf10:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf12:	f108 0802 	add.w	r8, r8, #2
 801cf16:	441e      	add	r6, r3
 801cf18:	f10b 3bff 	add.w	fp, fp, #4294967295
 801cf1c:	e77c      	b.n	801ce18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801cf1e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801cf20:	441c      	add	r4, r3
 801cf22:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801cf24:	441e      	add	r6, r3
 801cf26:	9b06      	ldr	r3, [sp, #24]
 801cf28:	3b01      	subs	r3, #1
 801cf2a:	9306      	str	r3, [sp, #24]
 801cf2c:	f109 0902 	add.w	r9, r9, #2
 801cf30:	e752      	b.n	801cdd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801cf32:	d020      	beq.n	801cf76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801cf34:	9b06      	ldr	r3, [sp, #24]
 801cf36:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801cf38:	3b01      	subs	r3, #1
 801cf3a:	fb00 4003 	mla	r0, r0, r3, r4
 801cf3e:	1400      	asrs	r0, r0, #16
 801cf40:	f53f af67 	bmi.w	801ce12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801cf44:	3901      	subs	r1, #1
 801cf46:	4288      	cmp	r0, r1
 801cf48:	f6bf af63 	bge.w	801ce12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801cf4c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801cf4e:	fb01 6303 	mla	r3, r1, r3, r6
 801cf52:	141b      	asrs	r3, r3, #16
 801cf54:	f53f af5d 	bmi.w	801ce12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801cf58:	3a01      	subs	r2, #1
 801cf5a:	4293      	cmp	r3, r2
 801cf5c:	f6bf af59 	bge.w	801ce12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801cf60:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801cf64:	46ca      	mov	sl, r9
 801cf66:	f1b8 0f00 	cmp.w	r8, #0
 801cf6a:	dc67      	bgt.n	801d03c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801cf6c:	9b06      	ldr	r3, [sp, #24]
 801cf6e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801cf72:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801cf76:	9b08      	ldr	r3, [sp, #32]
 801cf78:	2b00      	cmp	r3, #0
 801cf7a:	f340 80d7 	ble.w	801d12c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cf7e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf82:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf86:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801cf8a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cf8c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf90:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf94:	eeb0 6a62 	vmov.f32	s12, s5
 801cf98:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf9c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cfa0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cfa4:	ee16 4a10 	vmov	r4, s12
 801cfa8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cfac:	eeb0 6a43 	vmov.f32	s12, s6
 801cfb0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cfb4:	ee12 2a90 	vmov	r2, s5
 801cfb8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cfbc:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfc0:	ee13 2a10 	vmov	r2, s6
 801cfc4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801cfc6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cfc8:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfcc:	9320      	str	r3, [sp, #128]	@ 0x80
 801cfce:	9b08      	ldr	r3, [sp, #32]
 801cfd0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801cfd2:	3b01      	subs	r3, #1
 801cfd4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801cfd8:	9308      	str	r3, [sp, #32]
 801cfda:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801cfdc:	bf08      	it	eq
 801cfde:	4613      	moveq	r3, r2
 801cfe0:	ee16 6a10 	vmov	r6, s12
 801cfe4:	9306      	str	r3, [sp, #24]
 801cfe6:	eeb0 3a67 	vmov.f32	s6, s15
 801cfea:	eef0 2a47 	vmov.f32	s5, s14
 801cfee:	e6e4      	b.n	801cdba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801cff0:	2900      	cmp	r1, #0
 801cff2:	f43f af4e 	beq.w	801ce92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801cff6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801cffa:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801cffe:	9309      	str	r3, [sp, #36]	@ 0x24
 801d000:	e747      	b.n	801ce92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801d002:	f112 0a01 	adds.w	sl, r2, #1
 801d006:	d481      	bmi.n	801cf0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d008:	4553      	cmp	r3, sl
 801d00a:	f6ff af7f 	blt.w	801cf0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d00e:	f11c 0a01 	adds.w	sl, ip, #1
 801d012:	f53f af7b 	bmi.w	801cf0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d016:	45d6      	cmp	lr, sl
 801d018:	f6ff af78 	blt.w	801cf0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d01c:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801d020:	b21b      	sxth	r3, r3
 801d022:	fa0f f28e 	sxth.w	r2, lr
 801d026:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801d02a:	9201      	str	r2, [sp, #4]
 801d02c:	9300      	str	r3, [sp, #0]
 801d02e:	9a07      	ldr	r2, [sp, #28]
 801d030:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801d032:	463b      	mov	r3, r7
 801d034:	4641      	mov	r1, r8
 801d036:	f7ff fe21 	bl	801cc7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d03a:	e767      	b.n	801cf0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801d03c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d03e:	9d07      	ldr	r5, [sp, #28]
 801d040:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801d044:	1422      	asrs	r2, r4, #16
 801d046:	1431      	asrs	r1, r6, #16
 801d048:	fb03 2101 	mla	r1, r3, r1, r2
 801d04c:	9a07      	ldr	r2, [sp, #28]
 801d04e:	440a      	add	r2, r1
 801d050:	5c69      	ldrb	r1, [r5, r1]
 801d052:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801d056:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801d05a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801d05e:	f1be 0f00 	cmp.w	lr, #0
 801d062:	d05c      	beq.n	801d11e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801d064:	f892 c001 	ldrb.w	ip, [r2, #1]
 801d068:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801d06c:	950d      	str	r5, [sp, #52]	@ 0x34
 801d06e:	b150      	cbz	r0, 801d086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d070:	eb02 0c03 	add.w	ip, r2, r3
 801d074:	5cd3      	ldrb	r3, [r2, r3]
 801d076:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d07a:	930a      	str	r3, [sp, #40]	@ 0x28
 801d07c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801d080:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d084:	930e      	str	r3, [sp, #56]	@ 0x38
 801d086:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d088:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801d08a:	fb1e f200 	smulbb	r2, lr, r0
 801d08e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801d092:	10d2      	asrs	r2, r2, #3
 801d094:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d098:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d09c:	ea4c 0c03 	orr.w	ip, ip, r3
 801d0a0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801d0a4:	9311      	str	r3, [sp, #68]	@ 0x44
 801d0a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d0a8:	041b      	lsls	r3, r3, #16
 801d0aa:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801d0ae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801d0b2:	ea43 030b 	orr.w	r3, r3, fp
 801d0b6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801d0b8:	4353      	muls	r3, r2
 801d0ba:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801d0be:	fb05 3c0c 	mla	ip, r5, ip, r3
 801d0c2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d0c6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801d0ca:	ea43 0b01 	orr.w	fp, r3, r1
 801d0ce:	f1c0 0110 	rsb	r1, r0, #16
 801d0d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d0d4:	eba1 0e0e 	sub.w	lr, r1, lr
 801d0d8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801d0dc:	fb0e cc0b 	mla	ip, lr, fp, ip
 801d0e0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801d0e4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801d0e8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d0ec:	ea4b 0e0e 	orr.w	lr, fp, lr
 801d0f0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801d0f4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801d0f8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801d0fc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d100:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d104:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d108:	ea43 0c0c 	orr.w	ip, r3, ip
 801d10c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d10e:	f82a cb02 	strh.w	ip, [sl], #2
 801d112:	441c      	add	r4, r3
 801d114:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d116:	f108 38ff 	add.w	r8, r8, #4294967295
 801d11a:	441e      	add	r6, r3
 801d11c:	e723      	b.n	801cf66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801d11e:	2800      	cmp	r0, #0
 801d120:	d0b1      	beq.n	801d086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d122:	5cd3      	ldrb	r3, [r2, r3]
 801d124:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801d128:	930a      	str	r3, [sp, #40]	@ 0x28
 801d12a:	e7ac      	b.n	801d086 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801d12c:	b013      	add	sp, #76	@ 0x4c
 801d12e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801d132:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d136:	880d      	ldrh	r5, [r1, #0]
 801d138:	b087      	sub	sp, #28
 801d13a:	10ef      	asrs	r7, r5, #3
 801d13c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801d140:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d144:	00ed      	lsls	r5, r5, #3
 801d146:	9701      	str	r7, [sp, #4]
 801d148:	b2ed      	uxtb	r5, r5
 801d14a:	9502      	str	r5, [sp, #8]
 801d14c:	9d01      	ldr	r5, [sp, #4]
 801d14e:	9103      	str	r1, [sp, #12]
 801d150:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801d154:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801d158:	9902      	ldr	r1, [sp, #8]
 801d15a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801d15e:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801d162:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801d166:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801d16a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801d16e:	022d      	lsls	r5, r5, #8
 801d170:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801d174:	fb06 0709 	mla	r7, r6, r9, r0
 801d178:	430d      	orrs	r5, r1
 801d17a:	2e00      	cmp	r6, #0
 801d17c:	eb02 0c07 	add.w	ip, r2, r7
 801d180:	9505      	str	r5, [sp, #20]
 801d182:	f2c0 80b6 	blt.w	801d2f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801d186:	45b3      	cmp	fp, r6
 801d188:	f340 80b3 	ble.w	801d2f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801d18c:	2800      	cmp	r0, #0
 801d18e:	f2c0 80ae 	blt.w	801d2ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801d192:	4581      	cmp	r9, r0
 801d194:	f340 80ab 	ble.w	801d2ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801d198:	5dd7      	ldrb	r7, [r2, r7]
 801d19a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d19e:	441f      	add	r7, r3
 801d1a0:	1c42      	adds	r2, r0, #1
 801d1a2:	f100 80a9 	bmi.w	801d2f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d1a6:	4591      	cmp	r9, r2
 801d1a8:	f340 80a6 	ble.w	801d2f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d1ac:	2c00      	cmp	r4, #0
 801d1ae:	f000 80a3 	beq.w	801d2f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801d1b2:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d1b6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d1ba:	441d      	add	r5, r3
 801d1bc:	3601      	adds	r6, #1
 801d1be:	f100 809f 	bmi.w	801d300 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d1c2:	45b3      	cmp	fp, r6
 801d1c4:	f340 809c 	ble.w	801d300 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d1c8:	f1be 0f00 	cmp.w	lr, #0
 801d1cc:	f000 8098 	beq.w	801d300 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801d1d0:	2800      	cmp	r0, #0
 801d1d2:	f2c0 8093 	blt.w	801d2fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801d1d6:	4581      	cmp	r9, r0
 801d1d8:	f340 8090 	ble.w	801d2fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801d1dc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801d1e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801d1e4:	441e      	add	r6, r3
 801d1e6:	3001      	adds	r0, #1
 801d1e8:	f100 808d 	bmi.w	801d306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d1ec:	4581      	cmp	r9, r0
 801d1ee:	f340 808a 	ble.w	801d306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d1f2:	2c00      	cmp	r4, #0
 801d1f4:	f000 8087 	beq.w	801d306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801d1f8:	44e1      	add	r9, ip
 801d1fa:	f899 2001 	ldrb.w	r2, [r9, #1]
 801d1fe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d202:	4413      	add	r3, r2
 801d204:	b2a4      	uxth	r4, r4
 801d206:	fa1f fe8e 	uxth.w	lr, lr
 801d20a:	fb04 fb0e 	mul.w	fp, r4, lr
 801d20e:	0124      	lsls	r4, r4, #4
 801d210:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801d214:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801d218:	eba4 040b 	sub.w	r4, r4, fp
 801d21c:	fa1f f08e 	uxth.w	r0, lr
 801d220:	b2a2      	uxth	r2, r4
 801d222:	78ac      	ldrb	r4, [r5, #2]
 801d224:	f897 c002 	ldrb.w	ip, [r7, #2]
 801d228:	9901      	ldr	r1, [sp, #4]
 801d22a:	eba9 0900 	sub.w	r9, r9, r0
 801d22e:	fa1f f989 	uxth.w	r9, r9
 801d232:	4354      	muls	r4, r2
 801d234:	fb09 440c 	mla	r4, r9, ip, r4
 801d238:	f896 c002 	ldrb.w	ip, [r6, #2]
 801d23c:	fb00 440c 	mla	r4, r0, ip, r4
 801d240:	f893 c002 	ldrb.w	ip, [r3, #2]
 801d244:	fa1f fe88 	uxth.w	lr, r8
 801d248:	ea6f 0808 	mvn.w	r8, r8
 801d24c:	fa5f f888 	uxtb.w	r8, r8
 801d250:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801d254:	fb1a fa08 	smulbb	sl, sl, r8
 801d258:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d25c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801d260:	f895 a001 	ldrb.w	sl, [r5, #1]
 801d264:	787c      	ldrb	r4, [r7, #1]
 801d266:	782d      	ldrb	r5, [r5, #0]
 801d268:	783f      	ldrb	r7, [r7, #0]
 801d26a:	fb02 fa0a 	mul.w	sl, r2, sl
 801d26e:	fb09 aa04 	mla	sl, r9, r4, sl
 801d272:	7874      	ldrb	r4, [r6, #1]
 801d274:	436a      	muls	r2, r5
 801d276:	7835      	ldrb	r5, [r6, #0]
 801d278:	fb00 aa04 	mla	sl, r0, r4, sl
 801d27c:	fb09 2207 	mla	r2, r9, r7, r2
 801d280:	785c      	ldrb	r4, [r3, #1]
 801d282:	781b      	ldrb	r3, [r3, #0]
 801d284:	fb00 2005 	mla	r0, r0, r5, r2
 801d288:	fb0b a404 	mla	r4, fp, r4, sl
 801d28c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801d290:	9b02      	ldr	r3, [sp, #8]
 801d292:	fb11 fa08 	smulbb	sl, r1, r8
 801d296:	fa1f fc8c 	uxth.w	ip, ip
 801d29a:	fb13 f808 	smulbb	r8, r3, r8
 801d29e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801d2a2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801d2a6:	fb04 a40e 	mla	r4, r4, lr, sl
 801d2aa:	f10c 0301 	add.w	r3, ip, #1
 801d2ae:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801d2b2:	fa1f fe8e 	uxth.w	lr, lr
 801d2b6:	b2a4      	uxth	r4, r4
 801d2b8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d2bc:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801d2c0:	f104 0a01 	add.w	sl, r4, #1
 801d2c4:	f10e 0c01 	add.w	ip, lr, #1
 801d2c8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801d2cc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801d2d0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d2d4:	0964      	lsrs	r4, r4, #5
 801d2d6:	ea4c 0c03 	orr.w	ip, ip, r3
 801d2da:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801d2de:	9b03      	ldr	r3, [sp, #12]
 801d2e0:	ea4c 0c04 	orr.w	ip, ip, r4
 801d2e4:	f8a3 c000 	strh.w	ip, [r3]
 801d2e8:	b007      	add	sp, #28
 801d2ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2ee:	af05      	add	r7, sp, #20
 801d2f0:	e756      	b.n	801d1a0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801d2f2:	ad05      	add	r5, sp, #20
 801d2f4:	462f      	mov	r7, r5
 801d2f6:	e761      	b.n	801d1bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d2f8:	ad05      	add	r5, sp, #20
 801d2fa:	e75f      	b.n	801d1bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801d2fc:	ae05      	add	r6, sp, #20
 801d2fe:	e772      	b.n	801d1e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801d300:	ab05      	add	r3, sp, #20
 801d302:	461e      	mov	r6, r3
 801d304:	e77e      	b.n	801d204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801d306:	ab05      	add	r3, sp, #20
 801d308:	e77c      	b.n	801d204 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801d30a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d30a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d30e:	b095      	sub	sp, #84	@ 0x54
 801d310:	9212      	str	r2, [sp, #72]	@ 0x48
 801d312:	9309      	str	r3, [sp, #36]	@ 0x24
 801d314:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801d316:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801d31a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d31c:	910e      	str	r1, [sp, #56]	@ 0x38
 801d31e:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801d322:	9013      	str	r0, [sp, #76]	@ 0x4c
 801d324:	6850      	ldr	r0, [r2, #4]
 801d326:	6812      	ldr	r2, [r2, #0]
 801d328:	fb00 1303 	mla	r3, r0, r3, r1
 801d32c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d330:	930a      	str	r3, [sp, #40]	@ 0x28
 801d332:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d334:	681b      	ldr	r3, [r3, #0]
 801d336:	930d      	str	r3, [sp, #52]	@ 0x34
 801d338:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d33a:	685c      	ldr	r4, [r3, #4]
 801d33c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d33e:	43db      	mvns	r3, r3
 801d340:	b2db      	uxtb	r3, r3
 801d342:	3404      	adds	r4, #4
 801d344:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d346:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d348:	2b00      	cmp	r3, #0
 801d34a:	dc03      	bgt.n	801d354 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d34c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d34e:	2b00      	cmp	r3, #0
 801d350:	f340 8255 	ble.w	801d7fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d354:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d356:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d35a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d35e:	1e48      	subs	r0, r1, #1
 801d360:	1e55      	subs	r5, r2, #1
 801d362:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d364:	2b00      	cmp	r3, #0
 801d366:	f340 80f9 	ble.w	801d55c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801d36a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d36c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d36e:	1436      	asrs	r6, r6, #16
 801d370:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d374:	d406      	bmi.n	801d384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d376:	4286      	cmp	r6, r0
 801d378:	da04      	bge.n	801d384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d37a:	2b00      	cmp	r3, #0
 801d37c:	db02      	blt.n	801d384 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801d37e:	42ab      	cmp	r3, r5
 801d380:	f2c0 80ed 	blt.w	801d55e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801d384:	3601      	adds	r6, #1
 801d386:	f100 80da 	bmi.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d38a:	42b1      	cmp	r1, r6
 801d38c:	f2c0 80d7 	blt.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d390:	3301      	adds	r3, #1
 801d392:	f100 80d4 	bmi.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d396:	429a      	cmp	r2, r3
 801d398:	f2c0 80d1 	blt.w	801d53e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801d39c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d39e:	9311      	str	r3, [sp, #68]	@ 0x44
 801d3a0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d3a2:	930c      	str	r3, [sp, #48]	@ 0x30
 801d3a4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d3a6:	2b00      	cmp	r3, #0
 801d3a8:	f340 80fa 	ble.w	801d5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801d3ac:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801d3ae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d3b0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d3b2:	68c6      	ldr	r6, [r0, #12]
 801d3b4:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d3b6:	141d      	asrs	r5, r3, #16
 801d3b8:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d3bc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d3be:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d3c0:	1400      	asrs	r0, r0, #16
 801d3c2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d3c6:	6892      	ldr	r2, [r2, #8]
 801d3c8:	f100 813e 	bmi.w	801d648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d3cc:	1e57      	subs	r7, r2, #1
 801d3ce:	42b8      	cmp	r0, r7
 801d3d0:	f280 813a 	bge.w	801d648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d3d4:	2d00      	cmp	r5, #0
 801d3d6:	f2c0 8137 	blt.w	801d648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d3da:	1e77      	subs	r7, r6, #1
 801d3dc:	42bd      	cmp	r5, r7
 801d3de:	f280 8133 	bge.w	801d648 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801d3e2:	b212      	sxth	r2, r2
 801d3e4:	fb05 0002 	mla	r0, r5, r2, r0
 801d3e8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d3ea:	f815 a000 	ldrb.w	sl, [r5, r0]
 801d3ee:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801d3f2:	182e      	adds	r6, r5, r0
 801d3f4:	eb04 050a 	add.w	r5, r4, sl
 801d3f8:	2b00      	cmp	r3, #0
 801d3fa:	f000 8117 	beq.w	801d62c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801d3fe:	f896 c001 	ldrb.w	ip, [r6, #1]
 801d402:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d406:	44a4      	add	ip, r4
 801d408:	2900      	cmp	r1, #0
 801d40a:	f000 8117 	beq.w	801d63c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801d40e:	18b0      	adds	r0, r6, r2
 801d410:	5cb2      	ldrb	r2, [r6, r2]
 801d412:	7840      	ldrb	r0, [r0, #1]
 801d414:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d418:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d41c:	4422      	add	r2, r4
 801d41e:	4420      	add	r0, r4
 801d420:	b29b      	uxth	r3, r3
 801d422:	b289      	uxth	r1, r1
 801d424:	fb03 f901 	mul.w	r9, r3, r1
 801d428:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801d42c:	011b      	lsls	r3, r3, #4
 801d42e:	b289      	uxth	r1, r1
 801d430:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801d434:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d438:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d43a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801d43e:	f8b6 e000 	ldrh.w	lr, [r6]
 801d442:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801d446:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801d44a:	eba3 0309 	sub.w	r3, r3, r9
 801d44e:	b29b      	uxth	r3, r3
 801d450:	eba8 0801 	sub.w	r8, r8, r1
 801d454:	fa1f f888 	uxth.w	r8, r8
 801d458:	435f      	muls	r7, r3
 801d45a:	fb08 770b 	mla	r7, r8, fp, r7
 801d45e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d462:	9310      	str	r3, [sp, #64]	@ 0x40
 801d464:	fb01 770b 	mla	r7, r1, fp, r7
 801d468:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d46c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d46e:	fb09 770b 	mla	r7, r9, fp, r7
 801d472:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801d476:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d47a:	fb1b fb03 	smulbb	fp, fp, r3
 801d47e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d482:	fb07 b706 	mla	r7, r7, r6, fp
 801d486:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d488:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d48c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801d490:	f89c c000 	ldrb.w	ip, [ip]
 801d494:	435d      	muls	r5, r3
 801d496:	fb08 550b 	mla	r5, r8, fp, r5
 801d49a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d49e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d4a0:	fb01 550b 	mla	r5, r1, fp, r5
 801d4a4:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d4a8:	fb09 550b 	mla	r5, r9, fp, r5
 801d4ac:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801d4b0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d4b4:	fb1b fb03 	smulbb	fp, fp, r3
 801d4b8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d4ba:	fb03 f30c 	mul.w	r3, r3, ip
 801d4be:	f892 c000 	ldrb.w	ip, [r2]
 801d4c2:	fb08 330a 	mla	r3, r8, sl, r3
 801d4c6:	fb01 330c 	mla	r3, r1, ip, r3
 801d4ca:	f890 c000 	ldrb.w	ip, [r0]
 801d4ce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d4d2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801d4d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d4d8:	fa5f fe8e 	uxtb.w	lr, lr
 801d4dc:	b2bf      	uxth	r7, r7
 801d4de:	fb1e fe03 	smulbb	lr, lr, r3
 801d4e2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d4e6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801d4ea:	fb05 b506 	mla	r5, r5, r6, fp
 801d4ee:	1c7b      	adds	r3, r7, #1
 801d4f0:	fb0c e606 	mla	r6, ip, r6, lr
 801d4f4:	b2ad      	uxth	r5, r5
 801d4f6:	b2b6      	uxth	r6, r6
 801d4f8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801d4fc:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801d500:	f105 0b01 	add.w	fp, r5, #1
 801d504:	1c77      	adds	r7, r6, #1
 801d506:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801d50a:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d50e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d512:	096d      	lsrs	r5, r5, #5
 801d514:	431f      	orrs	r7, r3
 801d516:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d51a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d51c:	433d      	orrs	r5, r7
 801d51e:	801d      	strh	r5, [r3, #0]
 801d520:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d522:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d524:	3302      	adds	r3, #2
 801d526:	930c      	str	r3, [sp, #48]	@ 0x30
 801d528:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d52a:	4413      	add	r3, r2
 801d52c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d52e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d530:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d532:	4413      	add	r3, r2
 801d534:	9320      	str	r3, [sp, #128]	@ 0x80
 801d536:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d538:	3b01      	subs	r3, #1
 801d53a:	9311      	str	r3, [sp, #68]	@ 0x44
 801d53c:	e732      	b.n	801d3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801d53e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d540:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801d542:	4433      	add	r3, r6
 801d544:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d546:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801d548:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d54a:	4433      	add	r3, r6
 801d54c:	9320      	str	r3, [sp, #128]	@ 0x80
 801d54e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d550:	3b01      	subs	r3, #1
 801d552:	9309      	str	r3, [sp, #36]	@ 0x24
 801d554:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d556:	3302      	adds	r3, #2
 801d558:	930a      	str	r3, [sp, #40]	@ 0x28
 801d55a:	e702      	b.n	801d362 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d55c:	d027      	beq.n	801d5ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801d55e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d560:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801d562:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d564:	3b01      	subs	r3, #1
 801d566:	fb00 5003 	mla	r0, r0, r3, r5
 801d56a:	1400      	asrs	r0, r0, #16
 801d56c:	f53f af16 	bmi.w	801d39c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d570:	3901      	subs	r1, #1
 801d572:	4288      	cmp	r0, r1
 801d574:	f6bf af12 	bge.w	801d39c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d578:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801d57a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d57c:	fb01 0303 	mla	r3, r1, r3, r0
 801d580:	141b      	asrs	r3, r3, #16
 801d582:	f53f af0b 	bmi.w	801d39c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d586:	3a01      	subs	r2, #1
 801d588:	4293      	cmp	r3, r2
 801d58a:	f6bf af07 	bge.w	801d39c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801d58e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d590:	9311      	str	r3, [sp, #68]	@ 0x44
 801d592:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801d596:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d598:	930c      	str	r3, [sp, #48]	@ 0x30
 801d59a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d59c:	2b00      	cmp	r3, #0
 801d59e:	dc70      	bgt.n	801d682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801d5a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d5a2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d5a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801d5a8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d5ac:	930a      	str	r3, [sp, #40]	@ 0x28
 801d5ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d5b0:	2b00      	cmp	r3, #0
 801d5b2:	f340 8124 	ble.w	801d7fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801d5b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d5ba:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d5be:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d5c2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d5c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d5c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d5cc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d5d0:	eef0 6a62 	vmov.f32	s13, s5
 801d5d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d5d8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d5dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d5e0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801d5e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d5e8:	eef0 6a43 	vmov.f32	s13, s6
 801d5ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d5f0:	ee12 2a90 	vmov	r2, s5
 801d5f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d5f8:	fb92 f3f3 	sdiv	r3, r2, r3
 801d5fc:	ee13 2a10 	vmov	r2, s6
 801d600:	9321      	str	r3, [sp, #132]	@ 0x84
 801d602:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d604:	fb92 f3f3 	sdiv	r3, r2, r3
 801d608:	9322      	str	r3, [sp, #136]	@ 0x88
 801d60a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d60c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d60e:	3b01      	subs	r3, #1
 801d610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d614:	930e      	str	r3, [sp, #56]	@ 0x38
 801d616:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d618:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801d61c:	bf08      	it	eq
 801d61e:	4613      	moveq	r3, r2
 801d620:	9309      	str	r3, [sp, #36]	@ 0x24
 801d622:	eeb0 3a67 	vmov.f32	s6, s15
 801d626:	eef0 2a47 	vmov.f32	s5, s14
 801d62a:	e68c      	b.n	801d346 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d62c:	b149      	cbz	r1, 801d642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801d62e:	5cb2      	ldrb	r2, [r6, r2]
 801d630:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d634:	4422      	add	r2, r4
 801d636:	4628      	mov	r0, r5
 801d638:	46ac      	mov	ip, r5
 801d63a:	e6f1      	b.n	801d420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d63c:	4628      	mov	r0, r5
 801d63e:	462a      	mov	r2, r5
 801d640:	e6ee      	b.n	801d420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801d642:	4628      	mov	r0, r5
 801d644:	462a      	mov	r2, r5
 801d646:	e7f7      	b.n	801d638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801d648:	1c47      	adds	r7, r0, #1
 801d64a:	f53f af69 	bmi.w	801d520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d64e:	42ba      	cmp	r2, r7
 801d650:	f6ff af66 	blt.w	801d520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d654:	1c6f      	adds	r7, r5, #1
 801d656:	f53f af63 	bmi.w	801d520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d65a:	42be      	cmp	r6, r7
 801d65c:	f6ff af60 	blt.w	801d520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d660:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801d662:	9002      	str	r0, [sp, #8]
 801d664:	b236      	sxth	r6, r6
 801d666:	b212      	sxth	r2, r2
 801d668:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801d66c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801d670:	9200      	str	r2, [sp, #0]
 801d672:	9601      	str	r6, [sp, #4]
 801d674:	4623      	mov	r3, r4
 801d676:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801d67a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d67c:	f7ff fd59 	bl	801d132 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801d680:	e74e      	b.n	801d520 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801d682:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d684:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d686:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801d688:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d68a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801d68e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801d690:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801d694:	142d      	asrs	r5, r5, #16
 801d696:	1400      	asrs	r0, r0, #16
 801d698:	fb02 5000 	mla	r0, r2, r0, r5
 801d69c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801d69e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801d6a2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801d6a6:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801d6aa:	182e      	adds	r6, r5, r0
 801d6ac:	eb04 0509 	add.w	r5, r4, r9
 801d6b0:	2b00      	cmp	r3, #0
 801d6b2:	f000 8096 	beq.w	801d7e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801d6b6:	7877      	ldrb	r7, [r6, #1]
 801d6b8:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d6bc:	4427      	add	r7, r4
 801d6be:	2900      	cmp	r1, #0
 801d6c0:	f000 8097 	beq.w	801d7f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801d6c4:	18b0      	adds	r0, r6, r2
 801d6c6:	5cb2      	ldrb	r2, [r6, r2]
 801d6c8:	7840      	ldrb	r0, [r0, #1]
 801d6ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d6ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801d6d2:	4422      	add	r2, r4
 801d6d4:	4420      	add	r0, r4
 801d6d6:	b29b      	uxth	r3, r3
 801d6d8:	b289      	uxth	r1, r1
 801d6da:	fb03 f801 	mul.w	r8, r3, r1
 801d6de:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801d6e0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801d6e4:	f8b6 c000 	ldrh.w	ip, [r6]
 801d6e8:	78be      	ldrb	r6, [r7, #2]
 801d6ea:	f814 9009 	ldrb.w	r9, [r4, r9]
 801d6ee:	011b      	lsls	r3, r3, #4
 801d6f0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801d6f4:	b289      	uxth	r1, r1
 801d6f6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801d6fa:	eba3 0308 	sub.w	r3, r3, r8
 801d6fe:	b29b      	uxth	r3, r3
 801d700:	ebae 0e01 	sub.w	lr, lr, r1
 801d704:	fa1f fe8e 	uxth.w	lr, lr
 801d708:	435e      	muls	r6, r3
 801d70a:	fb0e 660b 	mla	r6, lr, fp, r6
 801d70e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801d712:	9310      	str	r3, [sp, #64]	@ 0x40
 801d714:	fb01 660b 	mla	r6, r1, fp, r6
 801d718:	f890 b002 	ldrb.w	fp, [r0, #2]
 801d71c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d71e:	fb08 660b 	mla	r6, r8, fp, r6
 801d722:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801d726:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801d72a:	fb1b fb03 	smulbb	fp, fp, r3
 801d72e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801d732:	fb06 b60a 	mla	r6, r6, sl, fp
 801d736:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d738:	f895 b001 	ldrb.w	fp, [r5, #1]
 801d73c:	787d      	ldrb	r5, [r7, #1]
 801d73e:	783f      	ldrb	r7, [r7, #0]
 801d740:	435d      	muls	r5, r3
 801d742:	fb0e 550b 	mla	r5, lr, fp, r5
 801d746:	f892 b001 	ldrb.w	fp, [r2, #1]
 801d74a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d74c:	fb01 550b 	mla	r5, r1, fp, r5
 801d750:	f890 b001 	ldrb.w	fp, [r0, #1]
 801d754:	fb08 550b 	mla	r5, r8, fp, r5
 801d758:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801d75c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801d760:	fb1b fb03 	smulbb	fp, fp, r3
 801d764:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d766:	437b      	muls	r3, r7
 801d768:	7817      	ldrb	r7, [r2, #0]
 801d76a:	fb0e 3309 	mla	r3, lr, r9, r3
 801d76e:	fb01 3307 	mla	r3, r1, r7, r3
 801d772:	7807      	ldrb	r7, [r0, #0]
 801d774:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d778:	fb08 3707 	mla	r7, r8, r7, r3
 801d77c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d77e:	fa5f fc8c 	uxtb.w	ip, ip
 801d782:	fb1c fc03 	smulbb	ip, ip, r3
 801d786:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801d78a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801d78e:	fb05 b50a 	mla	r5, r5, sl, fp
 801d792:	fb07 c70a 	mla	r7, r7, sl, ip
 801d796:	b2b6      	uxth	r6, r6
 801d798:	b2ad      	uxth	r5, r5
 801d79a:	b2bf      	uxth	r7, r7
 801d79c:	1c73      	adds	r3, r6, #1
 801d79e:	1c7a      	adds	r2, r7, #1
 801d7a0:	f105 0b01 	add.w	fp, r5, #1
 801d7a4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801d7a8:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d7ac:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801d7b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d7b4:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801d7b8:	096d      	lsrs	r5, r5, #5
 801d7ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d7bc:	4316      	orrs	r6, r2
 801d7be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d7c2:	432e      	orrs	r6, r5
 801d7c4:	f823 6b02 	strh.w	r6, [r3], #2
 801d7c8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801d7ca:	930c      	str	r3, [sp, #48]	@ 0x30
 801d7cc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801d7ce:	4413      	add	r3, r2
 801d7d0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d7d2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801d7d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d7d6:	4413      	add	r3, r2
 801d7d8:	9320      	str	r3, [sp, #128]	@ 0x80
 801d7da:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d7dc:	3b01      	subs	r3, #1
 801d7de:	9311      	str	r3, [sp, #68]	@ 0x44
 801d7e0:	e6db      	b.n	801d59a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801d7e2:	b149      	cbz	r1, 801d7f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801d7e4:	5cb2      	ldrb	r2, [r6, r2]
 801d7e6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d7ea:	4422      	add	r2, r4
 801d7ec:	4628      	mov	r0, r5
 801d7ee:	462f      	mov	r7, r5
 801d7f0:	e771      	b.n	801d6d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801d7f2:	4628      	mov	r0, r5
 801d7f4:	462a      	mov	r2, r5
 801d7f6:	e76e      	b.n	801d6d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801d7f8:	4628      	mov	r0, r5
 801d7fa:	462a      	mov	r2, r5
 801d7fc:	e7f7      	b.n	801d7ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801d7fe:	b015      	add	sp, #84	@ 0x54
 801d800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d804 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801d804:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d808:	880f      	ldrh	r7, [r1, #0]
 801d80a:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801d80e:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801d812:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801d816:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801d81a:	023c      	lsls	r4, r7, #8
 801d81c:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801d820:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801d824:	017c      	lsls	r4, r7, #5
 801d826:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801d82a:	00ff      	lsls	r7, r7, #3
 801d82c:	ea4b 0404 	orr.w	r4, fp, r4
 801d830:	b2ff      	uxtb	r7, r7
 801d832:	fb05 ca0e 	mla	sl, r5, lr, ip
 801d836:	4327      	orrs	r7, r4
 801d838:	2d00      	cmp	r5, #0
 801d83a:	eb02 080a 	add.w	r8, r2, sl
 801d83e:	9701      	str	r7, [sp, #4]
 801d840:	db7e      	blt.n	801d940 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d842:	45a9      	cmp	r9, r5
 801d844:	dd7c      	ble.n	801d940 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801d846:	f1bc 0f00 	cmp.w	ip, #0
 801d84a:	db77      	blt.n	801d93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d84c:	45e6      	cmp	lr, ip
 801d84e:	dd75      	ble.n	801d93c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801d850:	f812 700a 	ldrb.w	r7, [r2, sl]
 801d854:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801d858:	441f      	add	r7, r3
 801d85a:	f11c 0201 	adds.w	r2, ip, #1
 801d85e:	d472      	bmi.n	801d946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d860:	4596      	cmp	lr, r2
 801d862:	dd70      	ble.n	801d946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d864:	2800      	cmp	r0, #0
 801d866:	d06e      	beq.n	801d946 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801d868:	f898 4001 	ldrb.w	r4, [r8, #1]
 801d86c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801d870:	441c      	add	r4, r3
 801d872:	3501      	adds	r5, #1
 801d874:	d46b      	bmi.n	801d94e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d876:	45a9      	cmp	r9, r5
 801d878:	dd69      	ble.n	801d94e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d87a:	2e00      	cmp	r6, #0
 801d87c:	d067      	beq.n	801d94e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801d87e:	f1bc 0f00 	cmp.w	ip, #0
 801d882:	db62      	blt.n	801d94a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d884:	45e6      	cmp	lr, ip
 801d886:	dd60      	ble.n	801d94a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801d888:	f818 500e 	ldrb.w	r5, [r8, lr]
 801d88c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801d890:	441d      	add	r5, r3
 801d892:	f11c 0201 	adds.w	r2, ip, #1
 801d896:	d45d      	bmi.n	801d954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d898:	4596      	cmp	lr, r2
 801d89a:	dd5b      	ble.n	801d954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d89c:	2800      	cmp	r0, #0
 801d89e:	d059      	beq.n	801d954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801d8a0:	44c6      	add	lr, r8
 801d8a2:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801d8a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801d8aa:	4413      	add	r3, r2
 801d8ac:	b280      	uxth	r0, r0
 801d8ae:	b2b2      	uxth	r2, r6
 801d8b0:	fb00 f602 	mul.w	r6, r0, r2
 801d8b4:	0100      	lsls	r0, r0, #4
 801d8b6:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801d8ba:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801d8be:	1b80      	subs	r0, r0, r6
 801d8c0:	fa1f fc82 	uxth.w	ip, r2
 801d8c4:	b282      	uxth	r2, r0
 801d8c6:	78a0      	ldrb	r0, [r4, #2]
 801d8c8:	f897 e002 	ldrb.w	lr, [r7, #2]
 801d8cc:	f897 9000 	ldrb.w	r9, [r7]
 801d8d0:	787f      	ldrb	r7, [r7, #1]
 801d8d2:	eba8 080c 	sub.w	r8, r8, ip
 801d8d6:	fa1f f888 	uxth.w	r8, r8
 801d8da:	4350      	muls	r0, r2
 801d8dc:	fb08 0e0e 	mla	lr, r8, lr, r0
 801d8e0:	78a8      	ldrb	r0, [r5, #2]
 801d8e2:	fb0c e000 	mla	r0, ip, r0, lr
 801d8e6:	f893 e002 	ldrb.w	lr, [r3, #2]
 801d8ea:	fb06 0e0e 	mla	lr, r6, lr, r0
 801d8ee:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801d8f2:	f894 e000 	ldrb.w	lr, [r4]
 801d8f6:	fb02 fe0e 	mul.w	lr, r2, lr
 801d8fa:	fb08 e909 	mla	r9, r8, r9, lr
 801d8fe:	f895 e000 	ldrb.w	lr, [r5]
 801d902:	fb0c 990e 	mla	r9, ip, lr, r9
 801d906:	f893 e000 	ldrb.w	lr, [r3]
 801d90a:	785b      	ldrb	r3, [r3, #1]
 801d90c:	fb06 9e0e 	mla	lr, r6, lr, r9
 801d910:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d914:	ea4e 0e00 	orr.w	lr, lr, r0
 801d918:	7860      	ldrb	r0, [r4, #1]
 801d91a:	4350      	muls	r0, r2
 801d91c:	786a      	ldrb	r2, [r5, #1]
 801d91e:	fb08 0007 	mla	r0, r8, r7, r0
 801d922:	fb0c 0202 	mla	r2, ip, r2, r0
 801d926:	fb06 2303 	mla	r3, r6, r3, r2
 801d92a:	095b      	lsrs	r3, r3, #5
 801d92c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d930:	ea4e 0303 	orr.w	r3, lr, r3
 801d934:	800b      	strh	r3, [r1, #0]
 801d936:	b003      	add	sp, #12
 801d938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d93c:	af01      	add	r7, sp, #4
 801d93e:	e78c      	b.n	801d85a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801d940:	ac01      	add	r4, sp, #4
 801d942:	4627      	mov	r7, r4
 801d944:	e795      	b.n	801d872 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d946:	ac01      	add	r4, sp, #4
 801d948:	e793      	b.n	801d872 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801d94a:	ad01      	add	r5, sp, #4
 801d94c:	e7a1      	b.n	801d892 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801d94e:	ab01      	add	r3, sp, #4
 801d950:	461d      	mov	r5, r3
 801d952:	e7ab      	b.n	801d8ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801d954:	ab01      	add	r3, sp, #4
 801d956:	e7a9      	b.n	801d8ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801d958 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d958:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d95c:	b08f      	sub	sp, #60	@ 0x3c
 801d95e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801d962:	920c      	str	r2, [sp, #48]	@ 0x30
 801d964:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801d966:	910a      	str	r1, [sp, #40]	@ 0x28
 801d968:	9306      	str	r3, [sp, #24]
 801d96a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801d96e:	900d      	str	r0, [sp, #52]	@ 0x34
 801d970:	6850      	ldr	r0, [r2, #4]
 801d972:	6812      	ldr	r2, [r2, #0]
 801d974:	fb00 1303 	mla	r3, r0, r3, r1
 801d978:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d97c:	9307      	str	r3, [sp, #28]
 801d97e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d980:	681b      	ldr	r3, [r3, #0]
 801d982:	9308      	str	r3, [sp, #32]
 801d984:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d986:	685c      	ldr	r4, [r3, #4]
 801d988:	3404      	adds	r4, #4
 801d98a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d98c:	2b00      	cmp	r3, #0
 801d98e:	dc03      	bgt.n	801d998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801d990:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801d992:	2b00      	cmp	r3, #0
 801d994:	f340 81d6 	ble.w	801dd44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801d998:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d99a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d99e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d9a2:	1e48      	subs	r0, r1, #1
 801d9a4:	1e56      	subs	r6, r2, #1
 801d9a6:	9b06      	ldr	r3, [sp, #24]
 801d9a8:	2b00      	cmp	r3, #0
 801d9aa:	f340 80b7 	ble.w	801db1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801d9ae:	ea5f 472b 	movs.w	r7, fp, asr #16
 801d9b2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801d9b6:	d406      	bmi.n	801d9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d9b8:	4287      	cmp	r7, r0
 801d9ba:	da04      	bge.n	801d9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d9bc:	2b00      	cmp	r3, #0
 801d9be:	db02      	blt.n	801d9c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801d9c0:	42b3      	cmp	r3, r6
 801d9c2:	f2c0 80ac 	blt.w	801db1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d9c6:	3701      	adds	r7, #1
 801d9c8:	f100 809d 	bmi.w	801db06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d9cc:	42b9      	cmp	r1, r7
 801d9ce:	f2c0 809a 	blt.w	801db06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d9d2:	3301      	adds	r3, #1
 801d9d4:	f100 8097 	bmi.w	801db06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d9d8:	429a      	cmp	r2, r3
 801d9da:	f2c0 8094 	blt.w	801db06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801d9de:	9b06      	ldr	r3, [sp, #24]
 801d9e0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d9e2:	9b07      	ldr	r3, [sp, #28]
 801d9e4:	9309      	str	r3, [sp, #36]	@ 0x24
 801d9e6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d9e8:	2b00      	cmp	r3, #0
 801d9ea:	f340 80b5 	ble.w	801db58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d9ee:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801d9f0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801d9f2:	68c7      	ldr	r7, [r0, #12]
 801d9f4:	6892      	ldr	r2, [r2, #8]
 801d9f6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801d9fa:	ea4f 4625 	mov.w	r6, r5, asr #16
 801d9fe:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801da02:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801da06:	f100 80fb 	bmi.w	801dc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801da0a:	f102 3cff 	add.w	ip, r2, #4294967295
 801da0e:	4560      	cmp	r0, ip
 801da10:	f280 80f6 	bge.w	801dc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801da14:	2e00      	cmp	r6, #0
 801da16:	f2c0 80f3 	blt.w	801dc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801da1a:	f107 3cff 	add.w	ip, r7, #4294967295
 801da1e:	4566      	cmp	r6, ip
 801da20:	f280 80ee 	bge.w	801dc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801da24:	b212      	sxth	r2, r2
 801da26:	fb06 0002 	mla	r0, r6, r2, r0
 801da2a:	9e08      	ldr	r6, [sp, #32]
 801da2c:	1837      	adds	r7, r6, r0
 801da2e:	5c30      	ldrb	r0, [r6, r0]
 801da30:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801da34:	eb04 0c08 	add.w	ip, r4, r8
 801da38:	2b00      	cmp	r3, #0
 801da3a:	f000 80d3 	beq.w	801dbe4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801da3e:	787e      	ldrb	r6, [r7, #1]
 801da40:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801da44:	4426      	add	r6, r4
 801da46:	2900      	cmp	r1, #0
 801da48:	f000 80d4 	beq.w	801dbf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801da4c:	18b8      	adds	r0, r7, r2
 801da4e:	5cba      	ldrb	r2, [r7, r2]
 801da50:	7840      	ldrb	r0, [r0, #1]
 801da52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801da56:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801da5a:	4422      	add	r2, r4
 801da5c:	4420      	add	r0, r4
 801da5e:	b29b      	uxth	r3, r3
 801da60:	b289      	uxth	r1, r1
 801da62:	fb03 f901 	mul.w	r9, r3, r1
 801da66:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801da6a:	011b      	lsls	r3, r3, #4
 801da6c:	b289      	uxth	r1, r1
 801da6e:	78b7      	ldrb	r7, [r6, #2]
 801da70:	f89c a002 	ldrb.w	sl, [ip, #2]
 801da74:	f89c c001 	ldrb.w	ip, [ip, #1]
 801da78:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801da7c:	eba3 0309 	sub.w	r3, r3, r9
 801da80:	b29b      	uxth	r3, r3
 801da82:	ebae 0e01 	sub.w	lr, lr, r1
 801da86:	fa1f fe8e 	uxth.w	lr, lr
 801da8a:	435f      	muls	r7, r3
 801da8c:	fb0e 770a 	mla	r7, lr, sl, r7
 801da90:	f892 a002 	ldrb.w	sl, [r2, #2]
 801da94:	fb01 770a 	mla	r7, r1, sl, r7
 801da98:	f890 a002 	ldrb.w	sl, [r0, #2]
 801da9c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801daa0:	f814 7008 	ldrb.w	r7, [r4, r8]
 801daa4:	f896 8000 	ldrb.w	r8, [r6]
 801daa8:	7876      	ldrb	r6, [r6, #1]
 801daaa:	fb03 f808 	mul.w	r8, r3, r8
 801daae:	fb0e 8807 	mla	r8, lr, r7, r8
 801dab2:	7817      	ldrb	r7, [r2, #0]
 801dab4:	fb01 8807 	mla	r8, r1, r7, r8
 801dab8:	7807      	ldrb	r7, [r0, #0]
 801daba:	fb09 8707 	mla	r7, r9, r7, r8
 801dabe:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801dac2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dac6:	ea47 070a 	orr.w	r7, r7, sl
 801daca:	4373      	muls	r3, r6
 801dacc:	f892 a001 	ldrb.w	sl, [r2, #1]
 801dad0:	fb0e 330c 	mla	r3, lr, ip, r3
 801dad4:	fb01 310a 	mla	r1, r1, sl, r3
 801dad8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801dadc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dade:	fb09 1a0a 	mla	sl, r9, sl, r1
 801dae2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dae6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801daea:	ea47 070a 	orr.w	r7, r7, sl
 801daee:	801f      	strh	r7, [r3, #0]
 801daf0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801daf2:	3302      	adds	r3, #2
 801daf4:	9309      	str	r3, [sp, #36]	@ 0x24
 801daf6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801daf8:	449b      	add	fp, r3
 801dafa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dafc:	441d      	add	r5, r3
 801dafe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801db00:	3b01      	subs	r3, #1
 801db02:	930b      	str	r3, [sp, #44]	@ 0x2c
 801db04:	e76f      	b.n	801d9e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801db06:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801db08:	449b      	add	fp, r3
 801db0a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801db0c:	441d      	add	r5, r3
 801db0e:	9b06      	ldr	r3, [sp, #24]
 801db10:	3b01      	subs	r3, #1
 801db12:	9306      	str	r3, [sp, #24]
 801db14:	9b07      	ldr	r3, [sp, #28]
 801db16:	3302      	adds	r3, #2
 801db18:	9307      	str	r3, [sp, #28]
 801db1a:	e744      	b.n	801d9a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801db1c:	d023      	beq.n	801db66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801db1e:	9b06      	ldr	r3, [sp, #24]
 801db20:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801db22:	3b01      	subs	r3, #1
 801db24:	fb00 b003 	mla	r0, r0, r3, fp
 801db28:	1400      	asrs	r0, r0, #16
 801db2a:	f53f af58 	bmi.w	801d9de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801db2e:	3901      	subs	r1, #1
 801db30:	4288      	cmp	r0, r1
 801db32:	f6bf af54 	bge.w	801d9de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801db36:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801db38:	fb01 5303 	mla	r3, r1, r3, r5
 801db3c:	141b      	asrs	r3, r3, #16
 801db3e:	f53f af4e 	bmi.w	801d9de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801db42:	3a01      	subs	r2, #1
 801db44:	4293      	cmp	r3, r2
 801db46:	f6bf af4a 	bge.w	801d9de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801db4a:	9b06      	ldr	r3, [sp, #24]
 801db4c:	9309      	str	r3, [sp, #36]	@ 0x24
 801db4e:	9b07      	ldr	r3, [sp, #28]
 801db50:	930b      	str	r3, [sp, #44]	@ 0x2c
 801db52:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801db54:	2b00      	cmp	r3, #0
 801db56:	dc70      	bgt.n	801dc3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801db58:	9b06      	ldr	r3, [sp, #24]
 801db5a:	9a07      	ldr	r2, [sp, #28]
 801db5c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801db60:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801db64:	9307      	str	r3, [sp, #28]
 801db66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801db68:	2b00      	cmp	r3, #0
 801db6a:	f340 80eb 	ble.w	801dd44 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801db6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db72:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801db76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801db7a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801db7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db80:	ee31 1a05 	vadd.f32	s2, s2, s10
 801db84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801db88:	eef0 6a62 	vmov.f32	s13, s5
 801db8c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801db90:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801db94:	ee77 2a62 	vsub.f32	s5, s14, s5
 801db98:	ee16 ba90 	vmov	fp, s13
 801db9c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dba0:	eef0 6a43 	vmov.f32	s13, s6
 801dba4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dba8:	ee12 2a90 	vmov	r2, s5
 801dbac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dbb0:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbb4:	ee13 2a10 	vmov	r2, s6
 801dbb8:	931b      	str	r3, [sp, #108]	@ 0x6c
 801dbba:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dbbc:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbc0:	931c      	str	r3, [sp, #112]	@ 0x70
 801dbc2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dbc4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dbc6:	3b01      	subs	r3, #1
 801dbc8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbcc:	930a      	str	r3, [sp, #40]	@ 0x28
 801dbce:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dbd0:	bf08      	it	eq
 801dbd2:	4613      	moveq	r3, r2
 801dbd4:	ee16 5a90 	vmov	r5, s13
 801dbd8:	9306      	str	r3, [sp, #24]
 801dbda:	eeb0 3a67 	vmov.f32	s6, s15
 801dbde:	eef0 2a47 	vmov.f32	s5, s14
 801dbe2:	e6d2      	b.n	801d98a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801dbe4:	b149      	cbz	r1, 801dbfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801dbe6:	5cba      	ldrb	r2, [r7, r2]
 801dbe8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dbec:	4422      	add	r2, r4
 801dbee:	4660      	mov	r0, ip
 801dbf0:	4666      	mov	r6, ip
 801dbf2:	e734      	b.n	801da5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801dbf4:	4660      	mov	r0, ip
 801dbf6:	4662      	mov	r2, ip
 801dbf8:	e731      	b.n	801da5e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801dbfa:	4660      	mov	r0, ip
 801dbfc:	4662      	mov	r2, ip
 801dbfe:	e7f7      	b.n	801dbf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801dc00:	f110 0c01 	adds.w	ip, r0, #1
 801dc04:	f53f af74 	bmi.w	801daf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc08:	4562      	cmp	r2, ip
 801dc0a:	f6ff af71 	blt.w	801daf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc0e:	f116 0c01 	adds.w	ip, r6, #1
 801dc12:	f53f af6d 	bmi.w	801daf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc16:	4567      	cmp	r7, ip
 801dc18:	f6ff af6a 	blt.w	801daf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc1c:	b23f      	sxth	r7, r7
 801dc1e:	b212      	sxth	r2, r2
 801dc20:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801dc24:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801dc28:	9200      	str	r2, [sp, #0]
 801dc2a:	9701      	str	r7, [sp, #4]
 801dc2c:	4623      	mov	r3, r4
 801dc2e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801dc32:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801dc34:	f7ff fde6 	bl	801d804 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801dc38:	e75a      	b.n	801daf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801dc3a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801dc3c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801dc40:	ea4f 462b 	mov.w	r6, fp, asr #16
 801dc44:	1428      	asrs	r0, r5, #16
 801dc46:	fb02 6000 	mla	r0, r2, r0, r6
 801dc4a:	9e08      	ldr	r6, [sp, #32]
 801dc4c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801dc50:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801dc54:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801dc58:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801dc5c:	1837      	adds	r7, r6, r0
 801dc5e:	eb04 0c08 	add.w	ip, r4, r8
 801dc62:	2b00      	cmp	r3, #0
 801dc64:	d060      	beq.n	801dd28 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801dc66:	787e      	ldrb	r6, [r7, #1]
 801dc68:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801dc6c:	4426      	add	r6, r4
 801dc6e:	2900      	cmp	r1, #0
 801dc70:	d062      	beq.n	801dd38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801dc72:	18b8      	adds	r0, r7, r2
 801dc74:	5cba      	ldrb	r2, [r7, r2]
 801dc76:	7840      	ldrb	r0, [r0, #1]
 801dc78:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dc7c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801dc80:	4422      	add	r2, r4
 801dc82:	4420      	add	r0, r4
 801dc84:	b29b      	uxth	r3, r3
 801dc86:	b289      	uxth	r1, r1
 801dc88:	fb03 f901 	mul.w	r9, r3, r1
 801dc8c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801dc90:	011b      	lsls	r3, r3, #4
 801dc92:	b289      	uxth	r1, r1
 801dc94:	78b7      	ldrb	r7, [r6, #2]
 801dc96:	f89c a002 	ldrb.w	sl, [ip, #2]
 801dc9a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801dc9e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801dca2:	eba3 0309 	sub.w	r3, r3, r9
 801dca6:	b29b      	uxth	r3, r3
 801dca8:	ebae 0e01 	sub.w	lr, lr, r1
 801dcac:	fa1f fe8e 	uxth.w	lr, lr
 801dcb0:	435f      	muls	r7, r3
 801dcb2:	fb0e 770a 	mla	r7, lr, sl, r7
 801dcb6:	f892 a002 	ldrb.w	sl, [r2, #2]
 801dcba:	fb01 770a 	mla	r7, r1, sl, r7
 801dcbe:	f890 a002 	ldrb.w	sl, [r0, #2]
 801dcc2:	fb09 7a0a 	mla	sl, r9, sl, r7
 801dcc6:	f814 7008 	ldrb.w	r7, [r4, r8]
 801dcca:	f896 8000 	ldrb.w	r8, [r6]
 801dcce:	7876      	ldrb	r6, [r6, #1]
 801dcd0:	fb03 f808 	mul.w	r8, r3, r8
 801dcd4:	fb0e 8807 	mla	r8, lr, r7, r8
 801dcd8:	7817      	ldrb	r7, [r2, #0]
 801dcda:	fb01 8807 	mla	r8, r1, r7, r8
 801dcde:	7807      	ldrb	r7, [r0, #0]
 801dce0:	fb09 8707 	mla	r7, r9, r7, r8
 801dce4:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801dce8:	4373      	muls	r3, r6
 801dcea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801dcee:	7856      	ldrb	r6, [r2, #1]
 801dcf0:	ea47 070a 	orr.w	r7, r7, sl
 801dcf4:	fb0e 330c 	mla	r3, lr, ip, r3
 801dcf8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801dcfc:	fb01 3306 	mla	r3, r1, r6, r3
 801dd00:	fb09 3a0a 	mla	sl, r9, sl, r3
 801dd04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dd08:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dd0a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801dd0e:	ea47 070a 	orr.w	r7, r7, sl
 801dd12:	f823 7b02 	strh.w	r7, [r3], #2
 801dd16:	930b      	str	r3, [sp, #44]	@ 0x2c
 801dd18:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801dd1a:	449b      	add	fp, r3
 801dd1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dd1e:	441d      	add	r5, r3
 801dd20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd22:	3b01      	subs	r3, #1
 801dd24:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd26:	e714      	b.n	801db52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801dd28:	b149      	cbz	r1, 801dd3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801dd2a:	5cba      	ldrb	r2, [r7, r2]
 801dd2c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801dd30:	4422      	add	r2, r4
 801dd32:	4660      	mov	r0, ip
 801dd34:	4666      	mov	r6, ip
 801dd36:	e7a5      	b.n	801dc84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801dd38:	4660      	mov	r0, ip
 801dd3a:	4662      	mov	r2, ip
 801dd3c:	e7a2      	b.n	801dc84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801dd3e:	4660      	mov	r0, ip
 801dd40:	4662      	mov	r2, ip
 801dd42:	e7f7      	b.n	801dd34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801dd44:	b00f      	add	sp, #60	@ 0x3c
 801dd46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dd4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801dd4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd4e:	b085      	sub	sp, #20
 801dd50:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801dd54:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801dd58:	9102      	str	r1, [sp, #8]
 801dd5a:	2c00      	cmp	r4, #0
 801dd5c:	fb04 710c 	mla	r1, r4, ip, r7
 801dd60:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801dd64:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801dd68:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801dd6c:	eb02 0e01 	add.w	lr, r2, r1
 801dd70:	f2c0 8122 	blt.w	801dfb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dd74:	45a0      	cmp	r8, r4
 801dd76:	f340 811f 	ble.w	801dfb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801dd7a:	2f00      	cmp	r7, #0
 801dd7c:	f2c0 811a 	blt.w	801dfb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801dd80:	45bc      	cmp	ip, r7
 801dd82:	f340 8117 	ble.w	801dfb4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801dd86:	5c52      	ldrb	r2, [r2, r1]
 801dd88:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801dd8c:	1c7a      	adds	r2, r7, #1
 801dd8e:	f100 8116 	bmi.w	801dfbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801dd92:	4594      	cmp	ip, r2
 801dd94:	f340 8113 	ble.w	801dfbe <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801dd98:	2e00      	cmp	r6, #0
 801dd9a:	f000 8112 	beq.w	801dfc2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801dd9e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801dda2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801dda6:	3401      	adds	r4, #1
 801dda8:	f100 810f 	bmi.w	801dfca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ddac:	45a0      	cmp	r8, r4
 801ddae:	f340 810c 	ble.w	801dfca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ddb2:	2800      	cmp	r0, #0
 801ddb4:	f000 810c 	beq.w	801dfd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ddb8:	2f00      	cmp	r7, #0
 801ddba:	f2c0 8104 	blt.w	801dfc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ddbe:	45bc      	cmp	ip, r7
 801ddc0:	f340 8101 	ble.w	801dfc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ddc4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ddc8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ddcc:	3701      	adds	r7, #1
 801ddce:	f100 8102 	bmi.w	801dfd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ddd2:	45bc      	cmp	ip, r7
 801ddd4:	f340 80ff 	ble.w	801dfd6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ddd8:	2e00      	cmp	r6, #0
 801ddda:	f000 80fe 	beq.w	801dfda <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ddde:	44f4      	add	ip, lr
 801dde0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801dde4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801dde8:	b2b6      	uxth	r6, r6
 801ddea:	b280      	uxth	r0, r0
 801ddec:	fb00 fe06 	mul.w	lr, r0, r6
 801ddf0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ddf4:	0136      	lsls	r6, r6, #4
 801ddf6:	eba6 070e 	sub.w	r7, r6, lr
 801ddfa:	b280      	uxth	r0, r0
 801ddfc:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801de00:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801de04:	b2bf      	uxth	r7, r7
 801de06:	1a1b      	subs	r3, r3, r0
 801de08:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801de0c:	b29b      	uxth	r3, r3
 801de0e:	fb0a f607 	mul.w	r6, sl, r7
 801de12:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801de16:	fb0b 6603 	mla	r6, fp, r3, r6
 801de1a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801de1e:	fb00 6609 	mla	r6, r0, r9, r6
 801de22:	fb0e 6608 	mla	r6, lr, r8, r6
 801de26:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801de2a:	9600      	str	r6, [sp, #0]
 801de2c:	2e00      	cmp	r6, #0
 801de2e:	f000 80be 	beq.w	801dfae <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801de32:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801de36:	fb0b fc0c 	mul.w	ip, fp, ip
 801de3a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801de3e:	fb0b f505 	mul.w	r5, fp, r5
 801de42:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801de46:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801de4a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801de4e:	44dc      	add	ip, fp
 801de50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801de54:	9501      	str	r5, [sp, #4]
 801de56:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801de5a:	9503      	str	r5, [sp, #12]
 801de5c:	9d01      	ldr	r5, [sp, #4]
 801de5e:	9e02      	ldr	r6, [sp, #8]
 801de60:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801de64:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801de68:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801de6c:	fb0a fc0c 	mul.w	ip, sl, ip
 801de70:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801de74:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801de78:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801de7c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801de80:	4465      	add	r5, ip
 801de82:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801de86:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801de8a:	fb09 fc0c 	mul.w	ip, r9, ip
 801de8e:	fb09 f904 	mul.w	r9, r9, r4
 801de92:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801de96:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801de9a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801de9e:	fb08 f404 	mul.w	r4, r8, r4
 801dea2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801dea6:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801deaa:	fb08 f802 	mul.w	r8, r8, r2
 801deae:	fb0a fa01 	mul.w	sl, sl, r1
 801deb2:	0a22      	lsrs	r2, r4, #8
 801deb4:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801deb8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801debc:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801dec0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801dec4:	4414      	add	r4, r2
 801dec6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801deca:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801dece:	0a2d      	lsrs	r5, r5, #8
 801ded0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ded4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ded8:	9a03      	ldr	r2, [sp, #12]
 801deda:	8836      	ldrh	r6, [r6, #0]
 801dedc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801dee0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801dee4:	437d      	muls	r5, r7
 801dee6:	4461      	add	r1, ip
 801dee8:	0a24      	lsrs	r4, r4, #8
 801deea:	fb02 5503 	mla	r5, r2, r3, r5
 801deee:	0a09      	lsrs	r1, r1, #8
 801def0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801def4:	fb04 540e 	mla	r4, r4, lr, r5
 801def8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801defc:	fb01 4100 	mla	r1, r1, r0, r4
 801df00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801df04:	0a09      	lsrs	r1, r1, #8
 801df06:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801df0a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801df0e:	fb07 f70a 	mul.w	r7, r7, sl
 801df12:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801df16:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801df1a:	fb03 7101 	mla	r1, r3, r1, r7
 801df1e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801df22:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801df26:	fb0e 1e08 	mla	lr, lr, r8, r1
 801df2a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801df2e:	fb00 e101 	mla	r1, r0, r1, lr
 801df32:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801df36:	9a00      	ldr	r2, [sp, #0]
 801df38:	b287      	uxth	r7, r0
 801df3a:	437a      	muls	r2, r7
 801df3c:	0a09      	lsrs	r1, r1, #8
 801df3e:	1c53      	adds	r3, r2, #1
 801df40:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801df44:	4321      	orrs	r1, r4
 801df46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801df4a:	1235      	asrs	r5, r6, #8
 801df4c:	0c0a      	lsrs	r2, r1, #16
 801df4e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801df52:	b2db      	uxtb	r3, r3
 801df54:	fb12 f207 	smulbb	r2, r2, r7
 801df58:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801df5c:	fb05 2503 	mla	r5, r5, r3, r2
 801df60:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801df64:	10f2      	asrs	r2, r6, #3
 801df66:	b2c8      	uxtb	r0, r1
 801df68:	00f6      	lsls	r6, r6, #3
 801df6a:	fb14 f407 	smulbb	r4, r4, r7
 801df6e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801df72:	b2f6      	uxtb	r6, r6
 801df74:	fb10 f007 	smulbb	r0, r0, r7
 801df78:	fb02 4203 	mla	r2, r2, r3, r4
 801df7c:	b2ad      	uxth	r5, r5
 801df7e:	fb06 0303 	mla	r3, r6, r3, r0
 801df82:	b299      	uxth	r1, r3
 801df84:	b294      	uxth	r4, r2
 801df86:	1c6b      	adds	r3, r5, #1
 801df88:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801df8c:	1c62      	adds	r2, r4, #1
 801df8e:	1c4b      	adds	r3, r1, #1
 801df90:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801df94:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801df98:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801df9c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dfa0:	0952      	lsrs	r2, r2, #5
 801dfa2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dfa6:	432b      	orrs	r3, r5
 801dfa8:	4313      	orrs	r3, r2
 801dfaa:	9a02      	ldr	r2, [sp, #8]
 801dfac:	8013      	strh	r3, [r2, #0]
 801dfae:	b005      	add	sp, #20
 801dfb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dfb4:	2500      	movs	r5, #0
 801dfb6:	e6e9      	b.n	801dd8c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801dfb8:	2100      	movs	r1, #0
 801dfba:	460d      	mov	r5, r1
 801dfbc:	e6f3      	b.n	801dda6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dfbe:	2100      	movs	r1, #0
 801dfc0:	e6f1      	b.n	801dda6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dfc2:	4631      	mov	r1, r6
 801dfc4:	e6ef      	b.n	801dda6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801dfc6:	2400      	movs	r4, #0
 801dfc8:	e700      	b.n	801ddcc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801dfca:	2200      	movs	r2, #0
 801dfcc:	4614      	mov	r4, r2
 801dfce:	e70b      	b.n	801dde8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dfd0:	4602      	mov	r2, r0
 801dfd2:	4604      	mov	r4, r0
 801dfd4:	e708      	b.n	801dde8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dfd6:	2200      	movs	r2, #0
 801dfd8:	e706      	b.n	801dde8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801dfda:	4632      	mov	r2, r6
 801dfdc:	e704      	b.n	801dde8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801dfde <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dfde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfe2:	b09f      	sub	sp, #124	@ 0x7c
 801dfe4:	921b      	str	r2, [sp, #108]	@ 0x6c
 801dfe6:	9309      	str	r3, [sp, #36]	@ 0x24
 801dfe8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801dfea:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801dfee:	931c      	str	r3, [sp, #112]	@ 0x70
 801dff0:	9119      	str	r1, [sp, #100]	@ 0x64
 801dff2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801dff6:	901d      	str	r0, [sp, #116]	@ 0x74
 801dff8:	6850      	ldr	r0, [r2, #4]
 801dffa:	6812      	ldr	r2, [r2, #0]
 801dffc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801dffe:	fb00 1303 	mla	r3, r0, r3, r1
 801e002:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e006:	930c      	str	r3, [sp, #48]	@ 0x30
 801e008:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e00a:	681b      	ldr	r3, [r3, #0]
 801e00c:	9312      	str	r3, [sp, #72]	@ 0x48
 801e00e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e010:	685e      	ldr	r6, [r3, #4]
 801e012:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801e016:	930d      	str	r3, [sp, #52]	@ 0x34
 801e018:	3604      	adds	r6, #4
 801e01a:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e01c:	2b00      	cmp	r3, #0
 801e01e:	dc03      	bgt.n	801e028 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801e020:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e022:	2b00      	cmp	r3, #0
 801e024:	f340 8388 	ble.w	801e738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801e028:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e02a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e02e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e032:	1e48      	subs	r0, r1, #1
 801e034:	1e57      	subs	r7, r2, #1
 801e036:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e038:	2b00      	cmp	r3, #0
 801e03a:	f340 8195 	ble.w	801e368 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e03e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e040:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e044:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e048:	d406      	bmi.n	801e058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e04a:	4584      	cmp	ip, r0
 801e04c:	da04      	bge.n	801e058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e04e:	2b00      	cmp	r3, #0
 801e050:	db02      	blt.n	801e058 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e052:	42bb      	cmp	r3, r7
 801e054:	f2c0 8189 	blt.w	801e36a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801e058:	f11c 0c01 	adds.w	ip, ip, #1
 801e05c:	f100 8177 	bmi.w	801e34e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e060:	4561      	cmp	r1, ip
 801e062:	f2c0 8174 	blt.w	801e34e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e066:	3301      	adds	r3, #1
 801e068:	f100 8171 	bmi.w	801e34e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e06c:	429a      	cmp	r2, r3
 801e06e:	f2c0 816e 	blt.w	801e34e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801e072:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e074:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801e076:	931a      	str	r3, [sp, #104]	@ 0x68
 801e078:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801e07a:	2b00      	cmp	r3, #0
 801e07c:	f340 8193 	ble.w	801e3a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801e080:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e082:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e086:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e088:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801e08c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e08e:	141b      	asrs	r3, r3, #16
 801e090:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e094:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e098:	f100 81d6 	bmi.w	801e448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e09c:	f100 38ff 	add.w	r8, r0, #4294967295
 801e0a0:	4543      	cmp	r3, r8
 801e0a2:	f280 81d1 	bge.w	801e448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e0a6:	f1bc 0f00 	cmp.w	ip, #0
 801e0aa:	f2c0 81cd 	blt.w	801e448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e0ae:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e0b2:	45c4      	cmp	ip, r8
 801e0b4:	f280 81c8 	bge.w	801e448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801e0b8:	b200      	sxth	r0, r0
 801e0ba:	fb0c 3300 	mla	r3, ip, r0, r3
 801e0be:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e0c0:	eb04 0803 	add.w	r8, r4, r3
 801e0c4:	5ce3      	ldrb	r3, [r4, r3]
 801e0c6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e0ca:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801e0ce:	2a00      	cmp	r2, #0
 801e0d0:	f000 81af 	beq.w	801e432 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801e0d4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801e0d8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801e0dc:	940e      	str	r4, [sp, #56]	@ 0x38
 801e0de:	0e24      	lsrs	r4, r4, #24
 801e0e0:	9415      	str	r4, [sp, #84]	@ 0x54
 801e0e2:	b179      	cbz	r1, 801e104 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e0e4:	eb08 0c00 	add.w	ip, r8, r0
 801e0e8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e0ec:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e0f0:	900a      	str	r0, [sp, #40]	@ 0x28
 801e0f2:	0e00      	lsrs	r0, r0, #24
 801e0f4:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e0f6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801e0fa:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e0fe:	900f      	str	r0, [sp, #60]	@ 0x3c
 801e100:	0e00      	lsrs	r0, r0, #24
 801e102:	9016      	str	r0, [sp, #88]	@ 0x58
 801e104:	b292      	uxth	r2, r2
 801e106:	b289      	uxth	r1, r1
 801e108:	fb02 f901 	mul.w	r9, r2, r1
 801e10c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e110:	0112      	lsls	r2, r2, #4
 801e112:	eba2 0809 	sub.w	r8, r2, r9
 801e116:	b289      	uxth	r1, r1
 801e118:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e11c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801e11e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e120:	fa1f f888 	uxth.w	r8, r8
 801e124:	1a52      	subs	r2, r2, r1
 801e126:	b292      	uxth	r2, r2
 801e128:	fb08 f000 	mul.w	r0, r8, r0
 801e12c:	fb02 000e 	mla	r0, r2, lr, r0
 801e130:	fb01 0004 	mla	r0, r1, r4, r0
 801e134:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e136:	fb09 0004 	mla	r0, r9, r4, r0
 801e13a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e13e:	2800      	cmp	r0, #0
 801e140:	f000 80fa 	beq.w	801e338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e144:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e148:	d01b      	beq.n	801e182 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801e14a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e14e:	fb0e fa0a 	mul.w	sl, lr, sl
 801e152:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e156:	fb0e fe03 	mul.w	lr, lr, r3
 801e15a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e15e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e162:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e166:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e16a:	4453      	add	r3, sl
 801e16c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e170:	0a1b      	lsrs	r3, r3, #8
 801e172:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e176:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e17a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e17e:	ea43 030c 	orr.w	r3, r3, ip
 801e182:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e184:	2cff      	cmp	r4, #255	@ 0xff
 801e186:	d021      	beq.n	801e1cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e188:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e18a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e18e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e190:	fb04 fb0b 	mul.w	fp, r4, fp
 801e194:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e196:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e19a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801e19c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e1a0:	fb04 fa0a 	mul.w	sl, r4, sl
 801e1a4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e1a8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e1ac:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e1b0:	44de      	add	lr, fp
 801e1b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e1b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1be:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e1c2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e1c6:	ea4e 040a 	orr.w	r4, lr, sl
 801e1ca:	940e      	str	r4, [sp, #56]	@ 0x38
 801e1cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e1ce:	2cff      	cmp	r4, #255	@ 0xff
 801e1d0:	d021      	beq.n	801e216 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801e1d2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e1d4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e1d8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e1da:	fb04 fb0b 	mul.w	fp, r4, fp
 801e1de:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e1e0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e1e4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801e1e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e1ea:	fb04 fa0a 	mul.w	sl, r4, sl
 801e1ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e1f2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e1f6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e1fa:	44de      	add	lr, fp
 801e1fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e200:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e204:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e208:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e20c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e210:	ea4e 040a 	orr.w	r4, lr, sl
 801e214:	940a      	str	r4, [sp, #40]	@ 0x28
 801e216:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e218:	2cff      	cmp	r4, #255	@ 0xff
 801e21a:	d021      	beq.n	801e260 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801e21c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e21e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801e222:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e224:	fb04 fb0b 	mul.w	fp, r4, fp
 801e228:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e22a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e22e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801e230:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e234:	fb04 fa0a 	mul.w	sl, r4, sl
 801e238:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e23c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e240:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e244:	44de      	add	lr, fp
 801e246:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e24a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e24e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e252:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e256:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e25a:	ea4e 040a 	orr.w	r4, lr, sl
 801e25e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801e260:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e262:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e266:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e268:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801e26c:	fb08 fc0c 	mul.w	ip, r8, ip
 801e270:	fb02 cc0e 	mla	ip, r2, lr, ip
 801e274:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e278:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801e27a:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e27e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801e282:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801e284:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e288:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801e28c:	fb08 f80e 	mul.w	r8, r8, lr
 801e290:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e294:	fb02 8303 	mla	r3, r2, r3, r8
 801e298:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e29a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e29c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e2a0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e2a2:	fb01 330a 	mla	r3, r1, sl, r3
 801e2a6:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801e2aa:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801e2ac:	fb09 3901 	mla	r9, r9, r1, r3
 801e2b0:	4342      	muls	r2, r0
 801e2b2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e2b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e2ba:	883b      	ldrh	r3, [r7, #0]
 801e2bc:	1c50      	adds	r0, r2, #1
 801e2be:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e2c2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e2c6:	ea4c 0c09 	orr.w	ip, ip, r9
 801e2ca:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e2ce:	1219      	asrs	r1, r3, #8
 801e2d0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e2d4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e2d8:	b2c0      	uxtb	r0, r0
 801e2da:	fb12 f204 	smulbb	r2, r2, r4
 801e2de:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e2e2:	fb01 2100 	mla	r1, r1, r0, r2
 801e2e6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e2ea:	10da      	asrs	r2, r3, #3
 801e2ec:	fa5f fc8c 	uxtb.w	ip, ip
 801e2f0:	00db      	lsls	r3, r3, #3
 801e2f2:	fb1c fc04 	smulbb	ip, ip, r4
 801e2f6:	b2db      	uxtb	r3, r3
 801e2f8:	b289      	uxth	r1, r1
 801e2fa:	fb03 c300 	mla	r3, r3, r0, ip
 801e2fe:	fa1f fc83 	uxth.w	ip, r3
 801e302:	1c4b      	adds	r3, r1, #1
 801e304:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e308:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e30c:	fb1e fe04 	smulbb	lr, lr, r4
 801e310:	f10c 0301 	add.w	r3, ip, #1
 801e314:	fb02 e200 	mla	r2, r2, r0, lr
 801e318:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e31c:	b292      	uxth	r2, r2
 801e31e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e322:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e326:	430b      	orrs	r3, r1
 801e328:	1c51      	adds	r1, r2, #1
 801e32a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e32e:	0952      	lsrs	r2, r2, #5
 801e330:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e334:	4313      	orrs	r3, r2
 801e336:	803b      	strh	r3, [r7, #0]
 801e338:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e33a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e33c:	441a      	add	r2, r3
 801e33e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e340:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e342:	441d      	add	r5, r3
 801e344:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801e346:	3b01      	subs	r3, #1
 801e348:	3702      	adds	r7, #2
 801e34a:	931a      	str	r3, [sp, #104]	@ 0x68
 801e34c:	e694      	b.n	801e078 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e34e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e350:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e352:	441c      	add	r4, r3
 801e354:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e356:	9429      	str	r4, [sp, #164]	@ 0xa4
 801e358:	441d      	add	r5, r3
 801e35a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e35c:	3b01      	subs	r3, #1
 801e35e:	9309      	str	r3, [sp, #36]	@ 0x24
 801e360:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e362:	3302      	adds	r3, #2
 801e364:	930c      	str	r3, [sp, #48]	@ 0x30
 801e366:	e666      	b.n	801e036 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e368:	d024      	beq.n	801e3b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801e36a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e36c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801e36e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e370:	3b01      	subs	r3, #1
 801e372:	fb00 4003 	mla	r0, r0, r3, r4
 801e376:	1400      	asrs	r0, r0, #16
 801e378:	f53f ae7b 	bmi.w	801e072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e37c:	3901      	subs	r1, #1
 801e37e:	4288      	cmp	r0, r1
 801e380:	f6bf ae77 	bge.w	801e072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e384:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801e386:	fb01 5303 	mla	r3, r1, r3, r5
 801e38a:	141b      	asrs	r3, r3, #16
 801e38c:	f53f ae71 	bmi.w	801e072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e390:	3a01      	subs	r2, #1
 801e392:	4293      	cmp	r3, r2
 801e394:	f6bf ae6d 	bge.w	801e072 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e398:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e39c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801e3a0:	f1bb 0f00 	cmp.w	fp, #0
 801e3a4:	dc70      	bgt.n	801e488 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801e3a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e3a8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e3ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e3ae:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801e3b2:	930c      	str	r3, [sp, #48]	@ 0x30
 801e3b4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e3b6:	2b00      	cmp	r3, #0
 801e3b8:	f340 81be 	ble.w	801e738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801e3bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e3c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e3c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e3c8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e3ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e3ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e3d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e3d6:	eef0 6a62 	vmov.f32	s13, s5
 801e3da:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e3de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e3e6:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801e3ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e3ee:	eef0 6a43 	vmov.f32	s13, s6
 801e3f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e3f6:	ee12 2a90 	vmov	r2, s5
 801e3fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e3fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801e402:	ee13 2a10 	vmov	r2, s6
 801e406:	932b      	str	r3, [sp, #172]	@ 0xac
 801e408:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e40a:	fb92 f3f3 	sdiv	r3, r2, r3
 801e40e:	932c      	str	r3, [sp, #176]	@ 0xb0
 801e410:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e412:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801e414:	3b01      	subs	r3, #1
 801e416:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e41a:	9319      	str	r3, [sp, #100]	@ 0x64
 801e41c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801e41e:	bf08      	it	eq
 801e420:	4613      	moveq	r3, r2
 801e422:	ee16 5a90 	vmov	r5, s13
 801e426:	9309      	str	r3, [sp, #36]	@ 0x24
 801e428:	eeb0 3a67 	vmov.f32	s6, s15
 801e42c:	eef0 2a47 	vmov.f32	s5, s14
 801e430:	e5f3      	b.n	801e01a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801e432:	2900      	cmp	r1, #0
 801e434:	f43f ae66 	beq.w	801e104 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e438:	f818 0000 	ldrb.w	r0, [r8, r0]
 801e43c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801e440:	900a      	str	r0, [sp, #40]	@ 0x28
 801e442:	0e00      	lsrs	r0, r0, #24
 801e444:	9013      	str	r0, [sp, #76]	@ 0x4c
 801e446:	e65d      	b.n	801e104 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801e448:	f113 0801 	adds.w	r8, r3, #1
 801e44c:	f53f af74 	bmi.w	801e338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e450:	4540      	cmp	r0, r8
 801e452:	f6ff af71 	blt.w	801e338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e456:	f11c 0801 	adds.w	r8, ip, #1
 801e45a:	f53f af6d 	bmi.w	801e338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e45e:	45c6      	cmp	lr, r8
 801e460:	f6ff af6a 	blt.w	801e338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e464:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801e466:	9302      	str	r3, [sp, #8]
 801e468:	b200      	sxth	r0, r0
 801e46a:	fa0f f38e 	sxth.w	r3, lr
 801e46e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e472:	e9cd c203 	strd	ip, r2, [sp, #12]
 801e476:	9301      	str	r3, [sp, #4]
 801e478:	9000      	str	r0, [sp, #0]
 801e47a:	4633      	mov	r3, r6
 801e47c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801e47e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801e480:	4639      	mov	r1, r7
 801e482:	f7ff fc62 	bl	801dd4a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801e486:	e757      	b.n	801e338 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e488:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e48a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801e48c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801e490:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801e492:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e496:	1427      	asrs	r7, r4, #16
 801e498:	142b      	asrs	r3, r5, #16
 801e49a:	fb01 7303 	mla	r3, r1, r3, r7
 801e49e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e4a0:	18e7      	adds	r7, r4, r3
 801e4a2:	5ce3      	ldrb	r3, [r4, r3]
 801e4a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801e4a8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e4ac:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e4b0:	2a00      	cmp	r2, #0
 801e4b2:	f000 8137 	beq.w	801e724 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e4b6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801e4ba:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801e4be:	9410      	str	r4, [sp, #64]	@ 0x40
 801e4c0:	0e24      	lsrs	r4, r4, #24
 801e4c2:	9417      	str	r4, [sp, #92]	@ 0x5c
 801e4c4:	b170      	cbz	r0, 801e4e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e4c6:	eb07 0e01 	add.w	lr, r7, r1
 801e4ca:	5c79      	ldrb	r1, [r7, r1]
 801e4cc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e4d0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e4d2:	0e09      	lsrs	r1, r1, #24
 801e4d4:	9114      	str	r1, [sp, #80]	@ 0x50
 801e4d6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801e4da:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e4de:	9111      	str	r1, [sp, #68]	@ 0x44
 801e4e0:	0e09      	lsrs	r1, r1, #24
 801e4e2:	9118      	str	r1, [sp, #96]	@ 0x60
 801e4e4:	b292      	uxth	r2, r2
 801e4e6:	b280      	uxth	r0, r0
 801e4e8:	fb02 f800 	mul.w	r8, r2, r0
 801e4ec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e4f0:	0112      	lsls	r2, r2, #4
 801e4f2:	eba2 0e08 	sub.w	lr, r2, r8
 801e4f6:	b280      	uxth	r0, r0
 801e4f8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e4fc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801e4fe:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e500:	fa1f fe8e 	uxth.w	lr, lr
 801e504:	1a12      	subs	r2, r2, r0
 801e506:	b292      	uxth	r2, r2
 801e508:	fb0e f101 	mul.w	r1, lr, r1
 801e50c:	fb02 110c 	mla	r1, r2, ip, r1
 801e510:	fb00 1104 	mla	r1, r0, r4, r1
 801e514:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e516:	fb08 1104 	mla	r1, r8, r4, r1
 801e51a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e51e:	2900      	cmp	r1, #0
 801e520:	f000 80f5 	beq.w	801e70e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e524:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e528:	d019      	beq.n	801e55e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801e52a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e52e:	fb0c fa0a 	mul.w	sl, ip, sl
 801e532:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e536:	fb0c fc03 	mul.w	ip, ip, r3
 801e53a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e53e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e542:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e546:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e54a:	4453      	add	r3, sl
 801e54c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e550:	0a1b      	lsrs	r3, r3, #8
 801e552:	0a3f      	lsrs	r7, r7, #8
 801e554:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e558:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e55c:	433b      	orrs	r3, r7
 801e55e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e560:	2cff      	cmp	r4, #255	@ 0xff
 801e562:	d020      	beq.n	801e5a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801e564:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e566:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e56a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e56c:	4367      	muls	r7, r4
 801e56e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e570:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e574:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e576:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e57a:	fb04 fa0a 	mul.w	sl, r4, sl
 801e57e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e582:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e586:	44bc      	add	ip, r7
 801e588:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e58c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e590:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e594:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e598:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e59c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e5a0:	ea4c 040a 	orr.w	r4, ip, sl
 801e5a4:	9410      	str	r4, [sp, #64]	@ 0x40
 801e5a6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e5a8:	2cff      	cmp	r4, #255	@ 0xff
 801e5aa:	d020      	beq.n	801e5ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801e5ac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e5ae:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e5b2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e5b4:	4367      	muls	r7, r4
 801e5b6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e5b8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e5bc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e5be:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e5c2:	fb04 fa0a 	mul.w	sl, r4, sl
 801e5c6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e5ca:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e5ce:	44bc      	add	ip, r7
 801e5d0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e5d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e5d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e5e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e5e8:	ea4c 040a 	orr.w	r4, ip, sl
 801e5ec:	940b      	str	r4, [sp, #44]	@ 0x2c
 801e5ee:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e5f0:	2cff      	cmp	r4, #255	@ 0xff
 801e5f2:	d020      	beq.n	801e636 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801e5f4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e5f6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e5fa:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e5fc:	4367      	muls	r7, r4
 801e5fe:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e600:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801e604:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801e606:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e60a:	fb04 fa0a 	mul.w	sl, r4, sl
 801e60e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e612:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e616:	44bc      	add	ip, r7
 801e618:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e61c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e620:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e624:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e628:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e62c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e630:	ea4c 040a 	orr.w	r4, ip, sl
 801e634:	9411      	str	r4, [sp, #68]	@ 0x44
 801e636:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e638:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801e63c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e63e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e642:	fb0e f707 	mul.w	r7, lr, r7
 801e646:	fb02 770c 	mla	r7, r2, ip, r7
 801e64a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e64e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801e650:	fb00 770c 	mla	r7, r0, ip, r7
 801e654:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e658:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801e65a:	fb08 770c 	mla	r7, r8, ip, r7
 801e65e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801e662:	fb0e fe0c 	mul.w	lr, lr, ip
 801e666:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e66a:	fb02 e303 	mla	r3, r2, r3, lr
 801e66e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e670:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e672:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e676:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801e678:	fb00 330a 	mla	r3, r0, sl, r3
 801e67c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801e680:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e684:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e686:	f8b9 0000 	ldrh.w	r0, [r9]
 801e68a:	434b      	muls	r3, r1
 801e68c:	0a3f      	lsrs	r7, r7, #8
 801e68e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e692:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e696:	1c59      	adds	r1, r3, #1
 801e698:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e69c:	ea47 070c 	orr.w	r7, r7, ip
 801e6a0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801e6a4:	1202      	asrs	r2, r0, #8
 801e6a6:	0c3b      	lsrs	r3, r7, #16
 801e6a8:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e6ac:	b2c9      	uxtb	r1, r1
 801e6ae:	fb13 f304 	smulbb	r3, r3, r4
 801e6b2:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e6b6:	fb02 3201 	mla	r2, r2, r1, r3
 801e6ba:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e6be:	10c3      	asrs	r3, r0, #3
 801e6c0:	b2ff      	uxtb	r7, r7
 801e6c2:	00c0      	lsls	r0, r0, #3
 801e6c4:	b292      	uxth	r2, r2
 801e6c6:	fb1c fc04 	smulbb	ip, ip, r4
 801e6ca:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801e6ce:	b2c0      	uxtb	r0, r0
 801e6d0:	fb17 f704 	smulbb	r7, r7, r4
 801e6d4:	fb03 c301 	mla	r3, r3, r1, ip
 801e6d8:	fb00 7001 	mla	r0, r0, r1, r7
 801e6dc:	f102 0c01 	add.w	ip, r2, #1
 801e6e0:	b280      	uxth	r0, r0
 801e6e2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801e6e6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801e6ea:	1c42      	adds	r2, r0, #1
 801e6ec:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e6f0:	b29b      	uxth	r3, r3
 801e6f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e6f6:	ea42 020c 	orr.w	r2, r2, ip
 801e6fa:	f103 0c01 	add.w	ip, r3, #1
 801e6fe:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e702:	095b      	lsrs	r3, r3, #5
 801e704:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e708:	431a      	orrs	r2, r3
 801e70a:	f8a9 2000 	strh.w	r2, [r9]
 801e70e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801e710:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e712:	441a      	add	r2, r3
 801e714:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e716:	9229      	str	r2, [sp, #164]	@ 0xa4
 801e718:	f109 0902 	add.w	r9, r9, #2
 801e71c:	441d      	add	r5, r3
 801e71e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e722:	e63d      	b.n	801e3a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e724:	2800      	cmp	r0, #0
 801e726:	f43f aedd 	beq.w	801e4e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e72a:	5c79      	ldrb	r1, [r7, r1]
 801e72c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801e730:	910b      	str	r1, [sp, #44]	@ 0x2c
 801e732:	0e09      	lsrs	r1, r1, #24
 801e734:	9114      	str	r1, [sp, #80]	@ 0x50
 801e736:	e6d5      	b.n	801e4e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801e738:	b01f      	add	sp, #124	@ 0x7c
 801e73a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e73e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801e73e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e742:	b089      	sub	sp, #36	@ 0x24
 801e744:	9101      	str	r1, [sp, #4]
 801e746:	9801      	ldr	r0, [sp, #4]
 801e748:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801e74c:	8800      	ldrh	r0, [r0, #0]
 801e74e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801e752:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801e756:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801e75a:	1206      	asrs	r6, r0, #8
 801e75c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801e760:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e764:	9602      	str	r6, [sp, #8]
 801e766:	10c6      	asrs	r6, r0, #3
 801e768:	00c0      	lsls	r0, r0, #3
 801e76a:	b2c0      	uxtb	r0, r0
 801e76c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801e770:	9004      	str	r0, [sp, #16]
 801e772:	2f00      	cmp	r7, #0
 801e774:	fb07 100c 	mla	r0, r7, ip, r1
 801e778:	9603      	str	r6, [sp, #12]
 801e77a:	eb02 0e00 	add.w	lr, r2, r0
 801e77e:	f2c0 810a 	blt.w	801e996 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e782:	45b8      	cmp	r8, r7
 801e784:	f340 8107 	ble.w	801e996 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801e788:	2900      	cmp	r1, #0
 801e78a:	f2c0 8102 	blt.w	801e992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e78e:	458c      	cmp	ip, r1
 801e790:	f340 80ff 	ble.w	801e992 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801e794:	5c12      	ldrb	r2, [r2, r0]
 801e796:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801e79a:	1c4a      	adds	r2, r1, #1
 801e79c:	f100 80fe 	bmi.w	801e99c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e7a0:	4594      	cmp	ip, r2
 801e7a2:	f340 80fb 	ble.w	801e99c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801e7a6:	2d00      	cmp	r5, #0
 801e7a8:	f000 80fa 	beq.w	801e9a0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801e7ac:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e7b0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801e7b4:	3701      	adds	r7, #1
 801e7b6:	f100 80f7 	bmi.w	801e9a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801e7ba:	45b8      	cmp	r8, r7
 801e7bc:	f340 80f4 	ble.w	801e9a8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801e7c0:	2c00      	cmp	r4, #0
 801e7c2:	f000 80f4 	beq.w	801e9ae <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801e7c6:	2900      	cmp	r1, #0
 801e7c8:	eb0e 020c 	add.w	r2, lr, ip
 801e7cc:	f2c0 80ea 	blt.w	801e9a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801e7d0:	458c      	cmp	ip, r1
 801e7d2:	f340 80e7 	ble.w	801e9a4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801e7d6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801e7da:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801e7de:	3101      	adds	r1, #1
 801e7e0:	f100 80e8 	bmi.w	801e9b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801e7e4:	458c      	cmp	ip, r1
 801e7e6:	f340 80e5 	ble.w	801e9b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801e7ea:	2d00      	cmp	r5, #0
 801e7ec:	f000 80e4 	beq.w	801e9b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801e7f0:	7852      	ldrb	r2, [r2, #1]
 801e7f2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801e7f6:	0e0b      	lsrs	r3, r1, #24
 801e7f8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801e7fc:	9300      	str	r3, [sp, #0]
 801e7fe:	b2a4      	uxth	r4, r4
 801e800:	b2ab      	uxth	r3, r5
 801e802:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801e806:	fb03 f904 	mul.w	r9, r3, r4
 801e80a:	fb0a f505 	mul.w	r5, sl, r5
 801e80e:	011b      	lsls	r3, r3, #4
 801e810:	eba3 0e09 	sub.w	lr, r3, r9
 801e814:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801e818:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801e81c:	0a28      	lsrs	r0, r5, #8
 801e81e:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801e822:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801e826:	4405      	add	r5, r0
 801e828:	0a2d      	lsrs	r5, r5, #8
 801e82a:	fb0a f303 	mul.w	r3, sl, r3
 801e82e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801e832:	9005      	str	r0, [sp, #20]
 801e834:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801e838:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801e83c:	0a1b      	lsrs	r3, r3, #8
 801e83e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801e842:	9306      	str	r3, [sp, #24]
 801e844:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801e848:	fb0b f303 	mul.w	r3, fp, r3
 801e84c:	0a1d      	lsrs	r5, r3, #8
 801e84e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801e852:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801e856:	fb0b f606 	mul.w	r6, fp, r6
 801e85a:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801e85e:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801e862:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e866:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e86a:	fb08 f707 	mul.w	r7, r8, r7
 801e86e:	441d      	add	r5, r3
 801e870:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801e874:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801e878:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801e87c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801e880:	fb08 fc0c 	mul.w	ip, r8, ip
 801e884:	0a1b      	lsrs	r3, r3, #8
 801e886:	9307      	str	r3, [sp, #28]
 801e888:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801e88c:	0e0b      	lsrs	r3, r1, #24
 801e88e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801e892:	435f      	muls	r7, r3
 801e894:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e898:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801e89c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801e8a0:	4460      	add	r0, ip
 801e8a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e8a6:	b2a4      	uxth	r4, r4
 801e8a8:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e8ac:	0a2d      	lsrs	r5, r5, #8
 801e8ae:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e8b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e8b6:	fa1f fe8e 	uxth.w	lr, lr
 801e8ba:	4359      	muls	r1, r3
 801e8bc:	1b12      	subs	r2, r2, r4
 801e8be:	9b05      	ldr	r3, [sp, #20]
 801e8c0:	44bc      	add	ip, r7
 801e8c2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e8c6:	b292      	uxth	r2, r2
 801e8c8:	fb05 f50e 	mul.w	r5, r5, lr
 801e8cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8d0:	fb03 5502 	mla	r5, r3, r2, r5
 801e8d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e8d8:	9b06      	ldr	r3, [sp, #24]
 801e8da:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801e8de:	0a36      	lsrs	r6, r6, #8
 801e8e0:	0a00      	lsrs	r0, r0, #8
 801e8e2:	fb0c 5509 	mla	r5, ip, r9, r5
 801e8e6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801e8ea:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e8ee:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801e8f2:	fb00 5504 	mla	r5, r0, r4, r5
 801e8f6:	fb0e f606 	mul.w	r6, lr, r6
 801e8fa:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801e8fe:	0a09      	lsrs	r1, r1, #8
 801e900:	9b07      	ldr	r3, [sp, #28]
 801e902:	fb02 6000 	mla	r0, r2, r0, r6
 801e906:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e90a:	fb09 0001 	mla	r0, r9, r1, r0
 801e90e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e912:	fb0e fe0b 	mul.w	lr, lr, fp
 801e916:	fb04 0003 	mla	r0, r4, r3, r0
 801e91a:	fb02 e20a 	mla	r2, r2, sl, lr
 801e91e:	9b00      	ldr	r3, [sp, #0]
 801e920:	fb04 2408 	mla	r4, r4, r8, r2
 801e924:	fb09 4903 	mla	r9, r9, r3, r4
 801e928:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801e92c:	9b02      	ldr	r3, [sp, #8]
 801e92e:	9a04      	ldr	r2, [sp, #16]
 801e930:	fa5f f989 	uxtb.w	r9, r9
 801e934:	fb03 f109 	mul.w	r1, r3, r9
 801e938:	9b03      	ldr	r3, [sp, #12]
 801e93a:	0a2d      	lsrs	r5, r5, #8
 801e93c:	0a00      	lsrs	r0, r0, #8
 801e93e:	fb03 f309 	mul.w	r3, r3, r9
 801e942:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801e946:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e94a:	4305      	orrs	r5, r0
 801e94c:	fb02 f909 	mul.w	r9, r2, r9
 801e950:	1c58      	adds	r0, r3, #1
 801e952:	1c4a      	adds	r2, r1, #1
 801e954:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801e958:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e95c:	0a2b      	lsrs	r3, r5, #8
 801e95e:	0c2a      	lsrs	r2, r5, #16
 801e960:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e964:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801e968:	00db      	lsls	r3, r3, #3
 801e96a:	0212      	lsls	r2, r2, #8
 801e96c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801e970:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e974:	4313      	orrs	r3, r2
 801e976:	f109 0201 	add.w	r2, r9, #1
 801e97a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801e97e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801e982:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801e986:	431d      	orrs	r5, r3
 801e988:	9b01      	ldr	r3, [sp, #4]
 801e98a:	801d      	strh	r5, [r3, #0]
 801e98c:	b009      	add	sp, #36	@ 0x24
 801e98e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e992:	2000      	movs	r0, #0
 801e994:	e701      	b.n	801e79a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801e996:	2600      	movs	r6, #0
 801e998:	4630      	mov	r0, r6
 801e99a:	e70b      	b.n	801e7b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e99c:	2600      	movs	r6, #0
 801e99e:	e709      	b.n	801e7b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e9a0:	462e      	mov	r6, r5
 801e9a2:	e707      	b.n	801e7b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801e9a4:	2700      	movs	r7, #0
 801e9a6:	e71a      	b.n	801e7de <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801e9a8:	2100      	movs	r1, #0
 801e9aa:	460f      	mov	r7, r1
 801e9ac:	e723      	b.n	801e7f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e9ae:	4621      	mov	r1, r4
 801e9b0:	4627      	mov	r7, r4
 801e9b2:	e720      	b.n	801e7f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e9b4:	2100      	movs	r1, #0
 801e9b6:	e71e      	b.n	801e7f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801e9b8:	4629      	mov	r1, r5
 801e9ba:	e71c      	b.n	801e7f6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801e9bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e9bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9c0:	b09b      	sub	sp, #108	@ 0x6c
 801e9c2:	9218      	str	r2, [sp, #96]	@ 0x60
 801e9c4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801e9c6:	9116      	str	r1, [sp, #88]	@ 0x58
 801e9c8:	9307      	str	r3, [sp, #28]
 801e9ca:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801e9ce:	9019      	str	r0, [sp, #100]	@ 0x64
 801e9d0:	6850      	ldr	r0, [r2, #4]
 801e9d2:	6812      	ldr	r2, [r2, #0]
 801e9d4:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801e9d6:	fb00 1303 	mla	r3, r0, r3, r1
 801e9da:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e9de:	930a      	str	r3, [sp, #40]	@ 0x28
 801e9e0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e9e2:	681b      	ldr	r3, [r3, #0]
 801e9e4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e9e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e9e8:	685e      	ldr	r6, [r3, #4]
 801e9ea:	3604      	adds	r6, #4
 801e9ec:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801e9ee:	2b00      	cmp	r3, #0
 801e9f0:	dc03      	bgt.n	801e9fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e9f2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e9f4:	2b00      	cmp	r3, #0
 801e9f6:	f340 8373 	ble.w	801f0e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801e9fa:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801e9fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ea00:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ea04:	1e48      	subs	r0, r1, #1
 801ea06:	1e57      	subs	r7, r2, #1
 801ea08:	9b07      	ldr	r3, [sp, #28]
 801ea0a:	2b00      	cmp	r3, #0
 801ea0c:	f340 8190 	ble.w	801ed30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ea10:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ea12:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ea16:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ea1a:	d406      	bmi.n	801ea2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ea1c:	4584      	cmp	ip, r0
 801ea1e:	da04      	bge.n	801ea2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ea20:	2b00      	cmp	r3, #0
 801ea22:	db02      	blt.n	801ea2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ea24:	42bb      	cmp	r3, r7
 801ea26:	f2c0 8184 	blt.w	801ed32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801ea2a:	f11c 0c01 	adds.w	ip, ip, #1
 801ea2e:	f100 8172 	bmi.w	801ed16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ea32:	4561      	cmp	r1, ip
 801ea34:	f2c0 816f 	blt.w	801ed16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ea38:	3301      	adds	r3, #1
 801ea3a:	f100 816c 	bmi.w	801ed16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ea3e:	429a      	cmp	r2, r3
 801ea40:	f2c0 8169 	blt.w	801ed16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ea44:	9b07      	ldr	r3, [sp, #28]
 801ea46:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ea48:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ea4a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ea4c:	2b00      	cmp	r3, #0
 801ea4e:	f340 818e 	ble.w	801ed6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801ea52:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ea54:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ea58:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ea5a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801ea5e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ea60:	141b      	asrs	r3, r3, #16
 801ea62:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ea66:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ea6a:	f100 81d1 	bmi.w	801ee10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ea6e:	f101 38ff 	add.w	r8, r1, #4294967295
 801ea72:	4543      	cmp	r3, r8
 801ea74:	f280 81cc 	bge.w	801ee10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ea78:	f1bc 0f00 	cmp.w	ip, #0
 801ea7c:	f2c0 81c8 	blt.w	801ee10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ea80:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ea84:	45c4      	cmp	ip, r8
 801ea86:	f280 81c3 	bge.w	801ee10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ea8a:	b209      	sxth	r1, r1
 801ea8c:	fb0c 3301 	mla	r3, ip, r1, r3
 801ea90:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ea92:	eb04 0803 	add.w	r8, r4, r3
 801ea96:	5ce3      	ldrb	r3, [r4, r3]
 801ea98:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ea9c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801eaa0:	2a00      	cmp	r2, #0
 801eaa2:	f000 81aa 	beq.w	801edfa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801eaa6:	f898 c001 	ldrb.w	ip, [r8, #1]
 801eaaa:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801eaae:	940b      	str	r4, [sp, #44]	@ 0x2c
 801eab0:	0e24      	lsrs	r4, r4, #24
 801eab2:	9412      	str	r4, [sp, #72]	@ 0x48
 801eab4:	b178      	cbz	r0, 801ead6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801eab6:	eb08 0c01 	add.w	ip, r8, r1
 801eaba:	f818 1001 	ldrb.w	r1, [r8, r1]
 801eabe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801eac2:	9108      	str	r1, [sp, #32]
 801eac4:	0e09      	lsrs	r1, r1, #24
 801eac6:	9110      	str	r1, [sp, #64]	@ 0x40
 801eac8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801eacc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ead0:	910c      	str	r1, [sp, #48]	@ 0x30
 801ead2:	0e09      	lsrs	r1, r1, #24
 801ead4:	9113      	str	r1, [sp, #76]	@ 0x4c
 801ead6:	b292      	uxth	r2, r2
 801ead8:	b280      	uxth	r0, r0
 801eada:	fb02 f900 	mul.w	r9, r2, r0
 801eade:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801eae2:	0112      	lsls	r2, r2, #4
 801eae4:	eba2 0809 	sub.w	r8, r2, r9
 801eae8:	b280      	uxth	r0, r0
 801eaea:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801eaee:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801eaf0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801eaf2:	fa1f f888 	uxth.w	r8, r8
 801eaf6:	1a12      	subs	r2, r2, r0
 801eaf8:	b292      	uxth	r2, r2
 801eafa:	fb08 f101 	mul.w	r1, r8, r1
 801eafe:	fb02 110e 	mla	r1, r2, lr, r1
 801eb02:	fb00 1104 	mla	r1, r0, r4, r1
 801eb06:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801eb08:	fb09 1104 	mla	r1, r9, r4, r1
 801eb0c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801eb10:	2900      	cmp	r1, #0
 801eb12:	f000 80f5 	beq.w	801ed00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801eb16:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801eb1a:	d01b      	beq.n	801eb54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eb1c:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801eb20:	fb0e fa0a 	mul.w	sl, lr, sl
 801eb24:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eb28:	fb0e fe03 	mul.w	lr, lr, r3
 801eb2c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801eb30:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801eb34:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801eb38:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801eb3c:	4453      	add	r3, sl
 801eb3e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801eb42:	0a1b      	lsrs	r3, r3, #8
 801eb44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb48:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801eb4c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801eb50:	ea43 030c 	orr.w	r3, r3, ip
 801eb54:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801eb56:	2cff      	cmp	r4, #255	@ 0xff
 801eb58:	d021      	beq.n	801eb9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801eb5a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eb5c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801eb60:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801eb62:	fb04 fb0b 	mul.w	fp, r4, fp
 801eb66:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801eb68:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801eb6c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801eb6e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb72:	fb04 fa0a 	mul.w	sl, r4, sl
 801eb76:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb7a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eb7e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eb82:	44de      	add	lr, fp
 801eb84:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb90:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eb94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eb98:	ea4e 040a 	orr.w	r4, lr, sl
 801eb9c:	940b      	str	r4, [sp, #44]	@ 0x2c
 801eb9e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801eba0:	2cff      	cmp	r4, #255	@ 0xff
 801eba2:	d021      	beq.n	801ebe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801eba4:	9c08      	ldr	r4, [sp, #32]
 801eba6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ebaa:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ebac:	fb04 fb0b 	mul.w	fp, r4, fp
 801ebb0:	9c08      	ldr	r4, [sp, #32]
 801ebb2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ebb6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ebb8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebbc:	fb04 fa0a 	mul.w	sl, r4, sl
 801ebc0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebc4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ebc8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ebcc:	44de      	add	lr, fp
 801ebce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ebd2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ebd6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebda:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ebde:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ebe2:	ea4e 040a 	orr.w	r4, lr, sl
 801ebe6:	9408      	str	r4, [sp, #32]
 801ebe8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ebea:	2cff      	cmp	r4, #255	@ 0xff
 801ebec:	d021      	beq.n	801ec32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ebee:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ebf0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801ebf4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ebf6:	fb04 fb0b 	mul.w	fp, r4, fp
 801ebfa:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ebfc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ec00:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ec02:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec06:	fb04 fa0a 	mul.w	sl, r4, sl
 801ec0a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec0e:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ec12:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ec16:	44de      	add	lr, fp
 801ec18:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec1c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec24:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ec28:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ec2c:	ea4e 040a 	orr.w	r4, lr, sl
 801ec30:	940c      	str	r4, [sp, #48]	@ 0x30
 801ec32:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ec34:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ec38:	9c08      	ldr	r4, [sp, #32]
 801ec3a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801ec3e:	fb08 fc0c 	mul.w	ip, r8, ip
 801ec42:	fb02 cc0e 	mla	ip, r2, lr, ip
 801ec46:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ec4a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801ec4c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ec50:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801ec54:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ec56:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ec5a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801ec5e:	fb08 f80e 	mul.w	r8, r8, lr
 801ec62:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801ec66:	fb02 8303 	mla	r3, r2, r3, r8
 801ec6a:	9a08      	ldr	r2, [sp, #32]
 801ec6c:	f8b7 8000 	ldrh.w	r8, [r7]
 801ec70:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801ec74:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ec76:	fb00 330a 	mla	r3, r0, sl, r3
 801ec7a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801ec7e:	fb09 3900 	mla	r9, r9, r0, r3
 801ec82:	43c9      	mvns	r1, r1
 801ec84:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ec88:	fa5f fe81 	uxtb.w	lr, r1
 801ec8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec90:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ec94:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ec98:	fb02 f20e 	mul.w	r2, r2, lr
 801ec9c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eca0:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801eca4:	ea4c 0c09 	orr.w	ip, ip, r9
 801eca8:	1c53      	adds	r3, r2, #1
 801ecaa:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ecae:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ecb2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ecb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ecba:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ecbe:	4a63      	ldr	r2, [pc, #396]	@ (801ee4c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ecc0:	fb00 f00e 	mul.w	r0, r0, lr
 801ecc4:	b2db      	uxtb	r3, r3
 801ecc6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ecca:	1c43      	adds	r3, r0, #1
 801eccc:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ecd0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ecd4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ecd8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ecdc:	b2c9      	uxtb	r1, r1
 801ecde:	00db      	lsls	r3, r3, #3
 801ece0:	fb01 f10e 	mul.w	r1, r1, lr
 801ece4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ece8:	4313      	orrs	r3, r2
 801ecea:	1c4a      	adds	r2, r1, #1
 801ecec:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ecf0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ecf4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ecf8:	ea4c 0c03 	orr.w	ip, ip, r3
 801ecfc:	f8a7 c000 	strh.w	ip, [r7]
 801ed00:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ed02:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801ed04:	441a      	add	r2, r3
 801ed06:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ed08:	9225      	str	r2, [sp, #148]	@ 0x94
 801ed0a:	441d      	add	r5, r3
 801ed0c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ed0e:	3b01      	subs	r3, #1
 801ed10:	3702      	adds	r7, #2
 801ed12:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ed14:	e699      	b.n	801ea4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ed16:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801ed18:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ed1a:	441c      	add	r4, r3
 801ed1c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ed1e:	9425      	str	r4, [sp, #148]	@ 0x94
 801ed20:	441d      	add	r5, r3
 801ed22:	9b07      	ldr	r3, [sp, #28]
 801ed24:	3b01      	subs	r3, #1
 801ed26:	9307      	str	r3, [sp, #28]
 801ed28:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ed2a:	3302      	adds	r3, #2
 801ed2c:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed2e:	e66b      	b.n	801ea08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801ed30:	d024      	beq.n	801ed7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801ed32:	9b07      	ldr	r3, [sp, #28]
 801ed34:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801ed36:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ed38:	3b01      	subs	r3, #1
 801ed3a:	fb00 4003 	mla	r0, r0, r3, r4
 801ed3e:	1400      	asrs	r0, r0, #16
 801ed40:	f53f ae80 	bmi.w	801ea44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ed44:	3901      	subs	r1, #1
 801ed46:	4288      	cmp	r0, r1
 801ed48:	f6bf ae7c 	bge.w	801ea44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ed4c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801ed4e:	fb01 5303 	mla	r3, r1, r3, r5
 801ed52:	141b      	asrs	r3, r3, #16
 801ed54:	f53f ae76 	bmi.w	801ea44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ed58:	3a01      	subs	r2, #1
 801ed5a:	4293      	cmp	r3, r2
 801ed5c:	f6bf ae72 	bge.w	801ea44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ed60:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ed64:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801ed68:	f1bb 0f00 	cmp.w	fp, #0
 801ed6c:	dc70      	bgt.n	801ee50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801ed6e:	9b07      	ldr	r3, [sp, #28]
 801ed70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ed74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ed76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ed7a:	930a      	str	r3, [sp, #40]	@ 0x28
 801ed7c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ed7e:	2b00      	cmp	r3, #0
 801ed80:	f340 81ae 	ble.w	801f0e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ed84:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ed88:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ed8c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ed90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ed92:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ed96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ed9a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ed9e:	eef0 6a62 	vmov.f32	s13, s5
 801eda2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eda6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801edaa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801edae:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801edb2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801edb6:	eef0 6a43 	vmov.f32	s13, s6
 801edba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edbe:	ee12 2a90 	vmov	r2, s5
 801edc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edc6:	fb92 f3f3 	sdiv	r3, r2, r3
 801edca:	ee13 2a10 	vmov	r2, s6
 801edce:	9327      	str	r3, [sp, #156]	@ 0x9c
 801edd0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801edd2:	fb92 f3f3 	sdiv	r3, r2, r3
 801edd6:	9328      	str	r3, [sp, #160]	@ 0xa0
 801edd8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801edda:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801eddc:	3b01      	subs	r3, #1
 801edde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ede2:	9316      	str	r3, [sp, #88]	@ 0x58
 801ede4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ede6:	bf08      	it	eq
 801ede8:	4613      	moveq	r3, r2
 801edea:	ee16 5a90 	vmov	r5, s13
 801edee:	9307      	str	r3, [sp, #28]
 801edf0:	eeb0 3a67 	vmov.f32	s6, s15
 801edf4:	eef0 2a47 	vmov.f32	s5, s14
 801edf8:	e5f8      	b.n	801e9ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801edfa:	2800      	cmp	r0, #0
 801edfc:	f43f ae6b 	beq.w	801ead6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ee00:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ee04:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ee08:	9108      	str	r1, [sp, #32]
 801ee0a:	0e09      	lsrs	r1, r1, #24
 801ee0c:	9110      	str	r1, [sp, #64]	@ 0x40
 801ee0e:	e662      	b.n	801ead6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ee10:	f113 0801 	adds.w	r8, r3, #1
 801ee14:	f53f af74 	bmi.w	801ed00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ee18:	4541      	cmp	r1, r8
 801ee1a:	f6ff af71 	blt.w	801ed00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ee1e:	f11c 0801 	adds.w	r8, ip, #1
 801ee22:	f53f af6d 	bmi.w	801ed00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ee26:	45c6      	cmp	lr, r8
 801ee28:	f6ff af6a 	blt.w	801ed00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ee2c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ee30:	b209      	sxth	r1, r1
 801ee32:	fa0f f38e 	sxth.w	r3, lr
 801ee36:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801ee3a:	9301      	str	r3, [sp, #4]
 801ee3c:	9100      	str	r1, [sp, #0]
 801ee3e:	4633      	mov	r3, r6
 801ee40:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801ee42:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801ee44:	4639      	mov	r1, r7
 801ee46:	f7ff fc7a 	bl	801e73e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801ee4a:	e759      	b.n	801ed00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ee4c:	fffff800 	.word	0xfffff800
 801ee50:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ee52:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ee54:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ee58:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ee5a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee5e:	1427      	asrs	r7, r4, #16
 801ee60:	142b      	asrs	r3, r5, #16
 801ee62:	fb01 7303 	mla	r3, r1, r3, r7
 801ee66:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ee68:	18e7      	adds	r7, r4, r3
 801ee6a:	5ce3      	ldrb	r3, [r4, r3]
 801ee6c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ee70:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ee74:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ee78:	2a00      	cmp	r2, #0
 801ee7a:	f000 8127 	beq.w	801f0cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801ee7e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801ee82:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801ee86:	940d      	str	r4, [sp, #52]	@ 0x34
 801ee88:	0e24      	lsrs	r4, r4, #24
 801ee8a:	9414      	str	r4, [sp, #80]	@ 0x50
 801ee8c:	b170      	cbz	r0, 801eeac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801ee8e:	eb07 0e01 	add.w	lr, r7, r1
 801ee92:	5c79      	ldrb	r1, [r7, r1]
 801ee94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ee98:	9109      	str	r1, [sp, #36]	@ 0x24
 801ee9a:	0e09      	lsrs	r1, r1, #24
 801ee9c:	9111      	str	r1, [sp, #68]	@ 0x44
 801ee9e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801eea2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801eea6:	910e      	str	r1, [sp, #56]	@ 0x38
 801eea8:	0e09      	lsrs	r1, r1, #24
 801eeaa:	9115      	str	r1, [sp, #84]	@ 0x54
 801eeac:	b292      	uxth	r2, r2
 801eeae:	b280      	uxth	r0, r0
 801eeb0:	fb02 f800 	mul.w	r8, r2, r0
 801eeb4:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801eeb8:	0112      	lsls	r2, r2, #4
 801eeba:	eba2 0e08 	sub.w	lr, r2, r8
 801eebe:	b280      	uxth	r0, r0
 801eec0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801eec4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801eec6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801eec8:	fa1f fe8e 	uxth.w	lr, lr
 801eecc:	1a09      	subs	r1, r1, r0
 801eece:	b289      	uxth	r1, r1
 801eed0:	fb0e f202 	mul.w	r2, lr, r2
 801eed4:	fb01 220c 	mla	r2, r1, ip, r2
 801eed8:	fb00 2204 	mla	r2, r0, r4, r2
 801eedc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801eede:	fb08 2204 	mla	r2, r8, r4, r2
 801eee2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801eee6:	2a00      	cmp	r2, #0
 801eee8:	f000 80e5 	beq.w	801f0b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801eeec:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801eef0:	d019      	beq.n	801ef26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801eef2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801eef6:	fb0c fa0a 	mul.w	sl, ip, sl
 801eefa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801eefe:	fb0c fc03 	mul.w	ip, ip, r3
 801ef02:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ef06:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ef0a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ef0e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801ef12:	4453      	add	r3, sl
 801ef14:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ef18:	0a1b      	lsrs	r3, r3, #8
 801ef1a:	0a3f      	lsrs	r7, r7, #8
 801ef1c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801ef20:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801ef24:	433b      	orrs	r3, r7
 801ef26:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ef28:	2cff      	cmp	r4, #255	@ 0xff
 801ef2a:	d020      	beq.n	801ef6e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801ef2c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ef2e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ef32:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ef34:	4367      	muls	r7, r4
 801ef36:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ef38:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ef3c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ef3e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef42:	fb04 fa0a 	mul.w	sl, r4, sl
 801ef46:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef4a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef4e:	44bc      	add	ip, r7
 801ef50:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef58:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef60:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef64:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef68:	ea4c 040a 	orr.w	r4, ip, sl
 801ef6c:	940d      	str	r4, [sp, #52]	@ 0x34
 801ef6e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ef70:	2cff      	cmp	r4, #255	@ 0xff
 801ef72:	d020      	beq.n	801efb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801ef74:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801ef76:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801ef7a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ef7c:	4367      	muls	r7, r4
 801ef7e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801ef80:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801ef84:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801ef86:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef8a:	fb04 fa0a 	mul.w	sl, r4, sl
 801ef8e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801ef92:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef96:	44bc      	add	ip, r7
 801ef98:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801ef9c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801efa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efa4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efa8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801efb0:	ea4c 040a 	orr.w	r4, ip, sl
 801efb4:	9409      	str	r4, [sp, #36]	@ 0x24
 801efb6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801efb8:	2cff      	cmp	r4, #255	@ 0xff
 801efba:	d020      	beq.n	801effe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801efbc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801efbe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801efc2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801efc4:	4367      	muls	r7, r4
 801efc6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801efc8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801efcc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801efce:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801efd2:	fb04 fa0a 	mul.w	sl, r4, sl
 801efd6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801efda:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801efde:	44bc      	add	ip, r7
 801efe0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801efe4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801efe8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efec:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eff0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801eff4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eff8:	ea4c 040a 	orr.w	r4, ip, sl
 801effc:	940e      	str	r4, [sp, #56]	@ 0x38
 801effe:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f000:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801f004:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801f006:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f00a:	fb0e f707 	mul.w	r7, lr, r7
 801f00e:	fb01 770c 	mla	r7, r1, ip, r7
 801f012:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f016:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f018:	fb00 770c 	mla	r7, r0, ip, r7
 801f01c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801f020:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f022:	fb08 770c 	mla	r7, r8, ip, r7
 801f026:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801f02a:	fb0e fe0c 	mul.w	lr, lr, ip
 801f02e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f032:	fb01 e303 	mla	r3, r1, r3, lr
 801f036:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f038:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f03c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f03e:	fb00 330a 	mla	r3, r0, sl, r3
 801f042:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f046:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f04a:	f8b9 3000 	ldrh.w	r3, [r9]
 801f04e:	43d2      	mvns	r2, r2
 801f050:	1218      	asrs	r0, r3, #8
 801f052:	b2d2      	uxtb	r2, r2
 801f054:	10d9      	asrs	r1, r3, #3
 801f056:	0a3f      	lsrs	r7, r7, #8
 801f058:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f05c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f060:	00db      	lsls	r3, r3, #3
 801f062:	4350      	muls	r0, r2
 801f064:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f068:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f06c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f070:	b2db      	uxtb	r3, r3
 801f072:	ea47 070c 	orr.w	r7, r7, ip
 801f076:	4351      	muls	r1, r2
 801f078:	4353      	muls	r3, r2
 801f07a:	1c42      	adds	r2, r0, #1
 801f07c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f080:	0c3a      	lsrs	r2, r7, #16
 801f082:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f086:	4a18      	ldr	r2, [pc, #96]	@ (801f0e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801f088:	b2c0      	uxtb	r0, r0
 801f08a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801f08e:	1c4a      	adds	r2, r1, #1
 801f090:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f094:	0a3a      	lsrs	r2, r7, #8
 801f096:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f09a:	00c9      	lsls	r1, r1, #3
 801f09c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f0a0:	4301      	orrs	r1, r0
 801f0a2:	1c58      	adds	r0, r3, #1
 801f0a4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801f0a8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801f0ac:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801f0b0:	4308      	orrs	r0, r1
 801f0b2:	f8a9 0000 	strh.w	r0, [r9]
 801f0b6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f0b8:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f0ba:	441a      	add	r2, r3
 801f0bc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f0be:	9225      	str	r2, [sp, #148]	@ 0x94
 801f0c0:	f109 0902 	add.w	r9, r9, #2
 801f0c4:	441d      	add	r5, r3
 801f0c6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f0ca:	e64d      	b.n	801ed68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801f0cc:	2800      	cmp	r0, #0
 801f0ce:	f43f aeed 	beq.w	801eeac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f0d2:	5c79      	ldrb	r1, [r7, r1]
 801f0d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801f0d8:	9109      	str	r1, [sp, #36]	@ 0x24
 801f0da:	0e09      	lsrs	r1, r1, #24
 801f0dc:	9111      	str	r1, [sp, #68]	@ 0x44
 801f0de:	e6e5      	b.n	801eeac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801f0e0:	b01b      	add	sp, #108	@ 0x6c
 801f0e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f0e6:	bf00      	nop
 801f0e8:	fffff800 	.word	0xfffff800

0801f0ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801f0ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0f0:	b085      	sub	sp, #20
 801f0f2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801f0f6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801f0fa:	9103      	str	r1, [sp, #12]
 801f0fc:	fb00 7406 	mla	r4, r0, r6, r7
 801f100:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801f104:	2800      	cmp	r0, #0
 801f106:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801f10a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801f10e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801f112:	9501      	str	r5, [sp, #4]
 801f114:	eb03 0904 	add.w	r9, r3, r4
 801f118:	f2c0 8150 	blt.w	801f3bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801f11c:	4583      	cmp	fp, r0
 801f11e:	f340 814d 	ble.w	801f3bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801f122:	2f00      	cmp	r7, #0
 801f124:	f2c0 8146 	blt.w	801f3b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801f128:	42be      	cmp	r6, r7
 801f12a:	f340 8143 	ble.w	801f3b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801f12e:	f813 c004 	ldrb.w	ip, [r3, r4]
 801f132:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801f136:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801f13a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801f13e:	4355      	muls	r5, r2
 801f140:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f144:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801f148:	fb0c f203 	mul.w	r2, ip, r3
 801f14c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801f150:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801f154:	441d      	add	r5, r3
 801f156:	f102 0320 	add.w	r3, r2, #32
 801f15a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f15e:	0a1b      	lsrs	r3, r3, #8
 801f160:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801f164:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f168:	431c      	orrs	r4, r3
 801f16a:	1c7b      	adds	r3, r7, #1
 801f16c:	f100 812b 	bmi.w	801f3c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801f170:	429e      	cmp	r6, r3
 801f172:	f340 8128 	ble.w	801f3c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801f176:	2900      	cmp	r1, #0
 801f178:	f000 8128 	beq.w	801f3cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801f17c:	9a01      	ldr	r2, [sp, #4]
 801f17e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801f182:	8855      	ldrh	r5, [r2, #2]
 801f184:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801f188:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801f18c:	fb08 f802 	mul.w	r8, r8, r2
 801f190:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f194:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801f198:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801f19c:	435d      	muls	r5, r3
 801f19e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f1a2:	44d0      	add	r8, sl
 801f1a4:	f105 0a20 	add.w	sl, r5, #32
 801f1a8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801f1ac:	0a2d      	lsrs	r5, r5, #8
 801f1ae:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801f1b2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f1b6:	432a      	orrs	r2, r5
 801f1b8:	3001      	adds	r0, #1
 801f1ba:	f100 810d 	bmi.w	801f3d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801f1be:	4583      	cmp	fp, r0
 801f1c0:	f340 810a 	ble.w	801f3d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801f1c4:	f1be 0f00 	cmp.w	lr, #0
 801f1c8:	f000 810b 	beq.w	801f3e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801f1cc:	2f00      	cmp	r7, #0
 801f1ce:	f2c0 8100 	blt.w	801f3d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801f1d2:	42be      	cmp	r6, r7
 801f1d4:	f340 80fd 	ble.w	801f3d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801f1d8:	9801      	ldr	r0, [sp, #4]
 801f1da:	f819 5006 	ldrb.w	r5, [r9, r6]
 801f1de:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801f1e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801f1e6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801f1ea:	fb0a fa00 	mul.w	sl, sl, r0
 801f1ee:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801f1f2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801f1f6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801f1fa:	fb05 f808 	mul.w	r8, r5, r8
 801f1fe:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801f202:	4482      	add	sl, r0
 801f204:	f108 0020 	add.w	r0, r8, #32
 801f208:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f20c:	0a00      	lsrs	r0, r0, #8
 801f20e:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801f212:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f216:	ea4b 0b00 	orr.w	fp, fp, r0
 801f21a:	3701      	adds	r7, #1
 801f21c:	f100 80e6 	bmi.w	801f3ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801f220:	42be      	cmp	r6, r7
 801f222:	f340 80e3 	ble.w	801f3ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801f226:	2900      	cmp	r1, #0
 801f228:	f000 80e3 	beq.w	801f3f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801f22c:	3601      	adds	r6, #1
 801f22e:	9801      	ldr	r0, [sp, #4]
 801f230:	f819 7006 	ldrb.w	r7, [r9, r6]
 801f234:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801f238:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801f23c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801f240:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f244:	fb09 f906 	mul.w	r9, r9, r6
 801f248:	fb07 f800 	mul.w	r8, r7, r0
 801f24c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801f250:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801f254:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801f258:	44d1      	add	r9, sl
 801f25a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801f25e:	f108 0020 	add.w	r0, r8, #32
 801f262:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801f266:	0a00      	lsrs	r0, r0, #8
 801f268:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f26c:	4330      	orrs	r0, r6
 801f26e:	b28e      	uxth	r6, r1
 801f270:	fa1f f98e 	uxth.w	r9, lr
 801f274:	fb06 f809 	mul.w	r8, r6, r9
 801f278:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801f27c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801f280:	0136      	lsls	r6, r6, #4
 801f282:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f286:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801f28a:	9601      	str	r6, [sp, #4]
 801f28c:	ea4a 0404 	orr.w	r4, sl, r4
 801f290:	fa1f f689 	uxth.w	r6, r9
 801f294:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f298:	fb11 f90e 	smulbb	r9, r1, lr
 801f29c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801f2a0:	9602      	str	r6, [sp, #8]
 801f2a2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f2a6:	4626      	mov	r6, r4
 801f2a8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f2ac:	f1ce 0410 	rsb	r4, lr, #16
 801f2b0:	1a64      	subs	r4, r4, r1
 801f2b2:	ea4a 0202 	orr.w	r2, sl, r2
 801f2b6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801f2ba:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f2be:	434a      	muls	r2, r1
 801f2c0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801f2c4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f2c8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f2cc:	fb04 2406 	mla	r4, r4, r6, r2
 801f2d0:	ea4a 0000 	orr.w	r0, sl, r0
 801f2d4:	fb09 4200 	mla	r2, r9, r0, r4
 801f2d8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801f2dc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801f2e0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801f2e4:	ea44 0b0b 	orr.w	fp, r4, fp
 801f2e8:	9c01      	ldr	r4, [sp, #4]
 801f2ea:	9e02      	ldr	r6, [sp, #8]
 801f2ec:	9903      	ldr	r1, [sp, #12]
 801f2ee:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801f2f2:	1ba4      	subs	r4, r4, r6
 801f2f4:	9e01      	ldr	r6, [sp, #4]
 801f2f6:	8808      	ldrh	r0, [r1, #0]
 801f2f8:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801f2fc:	eba6 0608 	sub.w	r6, r6, r8
 801f300:	b2b6      	uxth	r6, r6
 801f302:	b2a4      	uxth	r4, r4
 801f304:	4373      	muls	r3, r6
 801f306:	fb0c 3304 	mla	r3, ip, r4, r3
 801f30a:	9c02      	ldr	r4, [sp, #8]
 801f30c:	fb04 3505 	mla	r5, r4, r5, r3
 801f310:	fb08 5707 	mla	r7, r8, r7, r5
 801f314:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801f318:	b289      	uxth	r1, r1
 801f31a:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801f31e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f322:	434f      	muls	r7, r1
 801f324:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f328:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f32c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f330:	1c7b      	adds	r3, r7, #1
 801f332:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f336:	ea42 0e0e 	orr.w	lr, r2, lr
 801f33a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f33e:	fa1f f28e 	uxth.w	r2, lr
 801f342:	1203      	asrs	r3, r0, #8
 801f344:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801f348:	b2ff      	uxtb	r7, r7
 801f34a:	1215      	asrs	r5, r2, #8
 801f34c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f350:	fb13 f307 	smulbb	r3, r3, r7
 801f354:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f358:	fb05 3501 	mla	r5, r5, r1, r3
 801f35c:	10c3      	asrs	r3, r0, #3
 801f35e:	10d4      	asrs	r4, r2, #3
 801f360:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f364:	fb13 f307 	smulbb	r3, r3, r7
 801f368:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801f36c:	fb04 3401 	mla	r4, r4, r1, r3
 801f370:	00c3      	lsls	r3, r0, #3
 801f372:	00d2      	lsls	r2, r2, #3
 801f374:	b2db      	uxtb	r3, r3
 801f376:	fb13 f307 	smulbb	r3, r3, r7
 801f37a:	b2d2      	uxtb	r2, r2
 801f37c:	fb02 3101 	mla	r1, r2, r1, r3
 801f380:	b2ad      	uxth	r5, r5
 801f382:	b289      	uxth	r1, r1
 801f384:	b2a4      	uxth	r4, r4
 801f386:	1c6b      	adds	r3, r5, #1
 801f388:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f38c:	1c62      	adds	r2, r4, #1
 801f38e:	1c4b      	adds	r3, r1, #1
 801f390:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801f394:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801f398:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f39c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f3a0:	0964      	lsrs	r4, r4, #5
 801f3a2:	432b      	orrs	r3, r5
 801f3a4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f3a8:	9a03      	ldr	r2, [sp, #12]
 801f3aa:	4323      	orrs	r3, r4
 801f3ac:	8013      	strh	r3, [r2, #0]
 801f3ae:	b005      	add	sp, #20
 801f3b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f3b4:	f04f 0c00 	mov.w	ip, #0
 801f3b8:	4664      	mov	r4, ip
 801f3ba:	e6d6      	b.n	801f16a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801f3bc:	2300      	movs	r3, #0
 801f3be:	469c      	mov	ip, r3
 801f3c0:	461a      	mov	r2, r3
 801f3c2:	461c      	mov	r4, r3
 801f3c4:	e6f8      	b.n	801f1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f3c6:	2300      	movs	r3, #0
 801f3c8:	461a      	mov	r2, r3
 801f3ca:	e6f5      	b.n	801f1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f3cc:	460b      	mov	r3, r1
 801f3ce:	460a      	mov	r2, r1
 801f3d0:	e6f2      	b.n	801f1b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801f3d2:	2500      	movs	r5, #0
 801f3d4:	46ab      	mov	fp, r5
 801f3d6:	e720      	b.n	801f21a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801f3d8:	2700      	movs	r7, #0
 801f3da:	463d      	mov	r5, r7
 801f3dc:	4638      	mov	r0, r7
 801f3de:	46bb      	mov	fp, r7
 801f3e0:	e745      	b.n	801f26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f3e2:	4677      	mov	r7, lr
 801f3e4:	4675      	mov	r5, lr
 801f3e6:	4670      	mov	r0, lr
 801f3e8:	46f3      	mov	fp, lr
 801f3ea:	e740      	b.n	801f26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f3ec:	2700      	movs	r7, #0
 801f3ee:	4638      	mov	r0, r7
 801f3f0:	e73d      	b.n	801f26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801f3f2:	460f      	mov	r7, r1
 801f3f4:	4608      	mov	r0, r1
 801f3f6:	e73a      	b.n	801f26e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801f3f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f3f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3fc:	b097      	sub	sp, #92	@ 0x5c
 801f3fe:	9214      	str	r2, [sp, #80]	@ 0x50
 801f400:	9308      	str	r3, [sp, #32]
 801f402:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f404:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f408:	9312      	str	r3, [sp, #72]	@ 0x48
 801f40a:	9111      	str	r1, [sp, #68]	@ 0x44
 801f40c:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f410:	9015      	str	r0, [sp, #84]	@ 0x54
 801f412:	6850      	ldr	r0, [r2, #4]
 801f414:	6812      	ldr	r2, [r2, #0]
 801f416:	fb00 1303 	mla	r3, r0, r3, r1
 801f41a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f41e:	9309      	str	r3, [sp, #36]	@ 0x24
 801f420:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f422:	681b      	ldr	r3, [r3, #0]
 801f424:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f426:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f428:	685b      	ldr	r3, [r3, #4]
 801f42a:	930c      	str	r3, [sp, #48]	@ 0x30
 801f42c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801f430:	930a      	str	r3, [sp, #40]	@ 0x28
 801f432:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f434:	2b00      	cmp	r3, #0
 801f436:	dc03      	bgt.n	801f440 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f438:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f43a:	2b00      	cmp	r3, #0
 801f43c:	f340 83cb 	ble.w	801fbd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801f440:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f442:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f446:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f44a:	1e48      	subs	r0, r1, #1
 801f44c:	1e55      	subs	r5, r2, #1
 801f44e:	9b08      	ldr	r3, [sp, #32]
 801f450:	2b00      	cmp	r3, #0
 801f452:	f340 81a3 	ble.w	801f79c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801f456:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f458:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f45a:	1436      	asrs	r6, r6, #16
 801f45c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f460:	d406      	bmi.n	801f470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f462:	4286      	cmp	r6, r0
 801f464:	da04      	bge.n	801f470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f466:	2b00      	cmp	r3, #0
 801f468:	db02      	blt.n	801f470 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f46a:	42ab      	cmp	r3, r5
 801f46c:	f2c0 8197 	blt.w	801f79e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f470:	3601      	adds	r6, #1
 801f472:	f100 8184 	bmi.w	801f77e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f476:	42b1      	cmp	r1, r6
 801f478:	f2c0 8181 	blt.w	801f77e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f47c:	3301      	adds	r3, #1
 801f47e:	f100 817e 	bmi.w	801f77e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f482:	429a      	cmp	r2, r3
 801f484:	f2c0 817b 	blt.w	801f77e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801f488:	9b08      	ldr	r3, [sp, #32]
 801f48a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801f48c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f48e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f492:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f494:	2b00      	cmp	r3, #0
 801f496:	f340 81a4 	ble.w	801f7e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f49a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f49c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801f49e:	1418      	asrs	r0, r3, #16
 801f4a0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f4a2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801f4a6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f4a8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801f4ac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f4ae:	142d      	asrs	r5, r5, #16
 801f4b0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801f4b4:	f100 81f8 	bmi.w	801f8a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f4b8:	f102 3eff 	add.w	lr, r2, #4294967295
 801f4bc:	4575      	cmp	r5, lr
 801f4be:	f280 81f3 	bge.w	801f8a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f4c2:	2800      	cmp	r0, #0
 801f4c4:	f2c0 81f0 	blt.w	801f8a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f4c8:	f103 3eff 	add.w	lr, r3, #4294967295
 801f4cc:	4570      	cmp	r0, lr
 801f4ce:	f280 81eb 	bge.w	801f8a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f4d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f4d4:	b212      	sxth	r2, r2
 801f4d6:	fb00 5002 	mla	r0, r0, r2, r5
 801f4da:	fa1f fe81 	uxth.w	lr, r1
 801f4de:	eb03 0a00 	add.w	sl, r3, r0
 801f4e2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801f4e6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801f4ea:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f4ee:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801f4f2:	b29b      	uxth	r3, r3
 801f4f4:	f1bc 0f00 	cmp.w	ip, #0
 801f4f8:	f000 81b9 	beq.w	801f86e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801f4fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801f500:	940d      	str	r4, [sp, #52]	@ 0x34
 801f502:	eb0a 0b02 	add.w	fp, sl, r2
 801f506:	fa1f fa8c 	uxth.w	sl, ip
 801f50a:	fb0a fe0e 	mul.w	lr, sl, lr
 801f50e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801f512:	fa1f fa8a 	uxth.w	sl, sl
 801f516:	eba5 050e 	sub.w	r5, r5, lr
 801f51a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f51e:	940e      	str	r4, [sp, #56]	@ 0x38
 801f520:	eba3 030a 	sub.w	r3, r3, sl
 801f524:	b2ad      	uxth	r5, r5
 801f526:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f528:	b29b      	uxth	r3, r3
 801f52a:	fb08 f505 	mul.w	r5, r8, r5
 801f52e:	fb09 5303 	mla	r3, r9, r3, r5
 801f532:	fb0a 3304 	mla	r3, sl, r4, r3
 801f536:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f538:	fb0e 3304 	mla	r3, lr, r4, r3
 801f53c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f540:	2b00      	cmp	r3, #0
 801f542:	f000 810f 	beq.w	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f546:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f548:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f54c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801f550:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801f554:	f000 8190 	beq.w	801f878 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801f558:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f55c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f560:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f564:	fb09 f000 	mul.w	r0, r9, r0
 801f568:	fb0a fe0e 	mul.w	lr, sl, lr
 801f56c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801f570:	f100 0b20 	add.w	fp, r0, #32
 801f574:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f578:	44ce      	add	lr, r9
 801f57a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801f57e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f582:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f586:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f58a:	ea4e 0909 	orr.w	r9, lr, r9
 801f58e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f592:	8868      	ldrh	r0, [r5, #2]
 801f594:	d019      	beq.n	801f5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801f596:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801f59a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f59e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f5a2:	fb08 f800 	mul.w	r8, r8, r0
 801f5a6:	fb0a fe0e 	mul.w	lr, sl, lr
 801f5aa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801f5ae:	f108 0b20 	add.w	fp, r8, #32
 801f5b2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801f5b6:	4486      	add	lr, r0
 801f5b8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801f5bc:	0a00      	lsrs	r0, r0, #8
 801f5be:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801f5c2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f5c6:	ea4e 0000 	orr.w	r0, lr, r0
 801f5ca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801f5ce:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801f5d2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801f5d6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f5da:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f5de:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801f5e2:	ea4e 0909 	orr.w	r9, lr, r9
 801f5e6:	ea4a 0000 	orr.w	r0, sl, r0
 801f5ea:	f1bc 0f00 	cmp.w	ip, #0
 801f5ee:	f000 8145 	beq.w	801f87c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801f5f2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801f5f6:	3a01      	subs	r2, #1
 801f5f8:	0052      	lsls	r2, r2, #1
 801f5fa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801f5fc:	3202      	adds	r2, #2
 801f5fe:	2cff      	cmp	r4, #255	@ 0xff
 801f600:	eb05 0e02 	add.w	lr, r5, r2
 801f604:	5aaa      	ldrh	r2, [r5, r2]
 801f606:	d018      	beq.n	801f63a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801f608:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801f60c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f610:	fb04 fa02 	mul.w	sl, r4, r2
 801f614:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f618:	fb08 f805 	mul.w	r8, r8, r5
 801f61c:	f10a 0520 	add.w	r5, sl, #32
 801f620:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801f624:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801f628:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f62c:	4442      	add	r2, r8
 801f62e:	0a2d      	lsrs	r5, r5, #8
 801f630:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801f634:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f638:	432a      	orrs	r2, r5
 801f63a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801f63c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801f640:	2cff      	cmp	r4, #255	@ 0xff
 801f642:	d01a      	beq.n	801f67a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801f644:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801f648:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f64c:	fb04 fa05 	mul.w	sl, r4, r5
 801f650:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801f654:	fb08 f80e 	mul.w	r8, r8, lr
 801f658:	f10a 0e20 	add.w	lr, sl, #32
 801f65c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801f660:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801f664:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801f668:	4445      	add	r5, r8
 801f66a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f66e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801f672:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801f676:	ea45 050e 	orr.w	r5, r5, lr
 801f67a:	fb1c fe01 	smulbb	lr, ip, r1
 801f67e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801f682:	f1cc 0810 	rsb	r8, ip, #16
 801f686:	eba8 0801 	sub.w	r8, r8, r1
 801f68a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801f68e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801f692:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801f696:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801f69a:	4341      	muls	r1, r0
 801f69c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801f6a0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801f6a4:	ea4a 0202 	orr.w	r2, sl, r2
 801f6a8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801f6ac:	fb09 1108 	mla	r1, r9, r8, r1
 801f6b0:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f6b4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801f6b8:	fb0c 1102 	mla	r1, ip, r2, r1
 801f6bc:	ea4b 0505 	orr.w	r5, fp, r5
 801f6c0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801f6c4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801f6c8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801f6cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f6d0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801f6d4:	ea42 0e0e 	orr.w	lr, r2, lr
 801f6d8:	fa1f f28e 	uxth.w	r2, lr
 801f6dc:	2bff      	cmp	r3, #255	@ 0xff
 801f6de:	d103      	bne.n	801f6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801f6e0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801f6e2:	29ff      	cmp	r1, #255	@ 0xff
 801f6e4:	f000 80de 	beq.w	801f8a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801f6e8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801f6ea:	8838      	ldrh	r0, [r7, #0]
 801f6ec:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801f6ee:	434b      	muls	r3, r1
 801f6f0:	f103 0c01 	add.w	ip, r3, #1
 801f6f4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801f6f8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801f6fc:	fa5f fc83 	uxtb.w	ip, r3
 801f700:	1203      	asrs	r3, r0, #8
 801f702:	1215      	asrs	r5, r2, #8
 801f704:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801f708:	fb13 f30c 	smulbb	r3, r3, ip
 801f70c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801f710:	fb05 3501 	mla	r5, r5, r1, r3
 801f714:	10c3      	asrs	r3, r0, #3
 801f716:	10d1      	asrs	r1, r2, #3
 801f718:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801f71c:	fb13 f30c 	smulbb	r3, r3, ip
 801f720:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f724:	fb01 3104 	mla	r1, r1, r4, r3
 801f728:	00c3      	lsls	r3, r0, #3
 801f72a:	00d2      	lsls	r2, r2, #3
 801f72c:	b2db      	uxtb	r3, r3
 801f72e:	b2d2      	uxtb	r2, r2
 801f730:	fb13 f30c 	smulbb	r3, r3, ip
 801f734:	b2ad      	uxth	r5, r5
 801f736:	fb02 3304 	mla	r3, r2, r4, r3
 801f73a:	b29a      	uxth	r2, r3
 801f73c:	1c6b      	adds	r3, r5, #1
 801f73e:	b289      	uxth	r1, r1
 801f740:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801f744:	1c53      	adds	r3, r2, #1
 801f746:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f74a:	1c4a      	adds	r2, r1, #1
 801f74c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801f750:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801f754:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f758:	0949      	lsrs	r1, r1, #5
 801f75a:	432b      	orrs	r3, r5
 801f75c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801f760:	430b      	orrs	r3, r1
 801f762:	803b      	strh	r3, [r7, #0]
 801f764:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f766:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f768:	4413      	add	r3, r2
 801f76a:	9321      	str	r3, [sp, #132]	@ 0x84
 801f76c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f76e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f770:	441a      	add	r2, r3
 801f772:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f774:	9222      	str	r2, [sp, #136]	@ 0x88
 801f776:	3b01      	subs	r3, #1
 801f778:	3702      	adds	r7, #2
 801f77a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f77c:	e689      	b.n	801f492 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f77e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f780:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801f782:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801f784:	4433      	add	r3, r6
 801f786:	9321      	str	r3, [sp, #132]	@ 0x84
 801f788:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f78a:	441c      	add	r4, r3
 801f78c:	9b08      	ldr	r3, [sp, #32]
 801f78e:	9422      	str	r4, [sp, #136]	@ 0x88
 801f790:	3b01      	subs	r3, #1
 801f792:	9308      	str	r3, [sp, #32]
 801f794:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f796:	3302      	adds	r3, #2
 801f798:	9309      	str	r3, [sp, #36]	@ 0x24
 801f79a:	e658      	b.n	801f44e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801f79c:	d028      	beq.n	801f7f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f79e:	9b08      	ldr	r3, [sp, #32]
 801f7a0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801f7a2:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801f7a4:	3b01      	subs	r3, #1
 801f7a6:	fb00 5003 	mla	r0, r0, r3, r5
 801f7aa:	1400      	asrs	r0, r0, #16
 801f7ac:	f53f ae6c 	bmi.w	801f488 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f7b0:	3901      	subs	r1, #1
 801f7b2:	4288      	cmp	r0, r1
 801f7b4:	f6bf ae68 	bge.w	801f488 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f7b8:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801f7ba:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801f7bc:	fb01 0303 	mla	r3, r1, r3, r0
 801f7c0:	141b      	asrs	r3, r3, #16
 801f7c2:	f53f ae61 	bmi.w	801f488 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f7c6:	3a01      	subs	r2, #1
 801f7c8:	4293      	cmp	r3, r2
 801f7ca:	f6bf ae5d 	bge.w	801f488 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801f7ce:	9b08      	ldr	r3, [sp, #32]
 801f7d0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801f7d4:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f7d6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801f7da:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f7dc:	2b00      	cmp	r3, #0
 801f7de:	f300 8082 	bgt.w	801f8e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f7e2:	9b08      	ldr	r3, [sp, #32]
 801f7e4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801f7e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f7ea:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801f7ee:	9309      	str	r3, [sp, #36]	@ 0x24
 801f7f0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f7f2:	2b00      	cmp	r3, #0
 801f7f4:	f340 81ef 	ble.w	801fbd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801f7f8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f7fc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f800:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f804:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f806:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f80a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f80e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f812:	eef0 6a62 	vmov.f32	s13, s5
 801f816:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f81a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f81e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f822:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801f826:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f82a:	eef0 6a43 	vmov.f32	s13, s6
 801f82e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f832:	ee12 2a90 	vmov	r2, s5
 801f836:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f83a:	fb92 f3f3 	sdiv	r3, r2, r3
 801f83e:	ee13 2a10 	vmov	r2, s6
 801f842:	9323      	str	r3, [sp, #140]	@ 0x8c
 801f844:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f846:	fb92 f3f3 	sdiv	r3, r2, r3
 801f84a:	9324      	str	r3, [sp, #144]	@ 0x90
 801f84c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f84e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f850:	3b01      	subs	r3, #1
 801f852:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f856:	9311      	str	r3, [sp, #68]	@ 0x44
 801f858:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f85a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801f85e:	bf08      	it	eq
 801f860:	4613      	moveq	r3, r2
 801f862:	9308      	str	r3, [sp, #32]
 801f864:	eeb0 3a67 	vmov.f32	s6, s15
 801f868:	eef0 2a47 	vmov.f32	s5, s14
 801f86c:	e5e1      	b.n	801f432 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f86e:	fb08 f505 	mul.w	r5, r8, r5
 801f872:	fb09 5303 	mla	r3, r9, r3, r5
 801f876:	e661      	b.n	801f53c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801f878:	4681      	mov	r9, r0
 801f87a:	e688      	b.n	801f58e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f87c:	f1c1 0210 	rsb	r2, r1, #16
 801f880:	4341      	muls	r1, r0
 801f882:	fb09 1902 	mla	r9, r9, r2, r1
 801f886:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801f88a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801f88e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f892:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f896:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801f89a:	ea42 0909 	orr.w	r9, r2, r9
 801f89e:	fa1f f289 	uxth.w	r2, r9
 801f8a2:	e71b      	b.n	801f6dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801f8a4:	803a      	strh	r2, [r7, #0]
 801f8a6:	e75d      	b.n	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f8a8:	f115 0e01 	adds.w	lr, r5, #1
 801f8ac:	f53f af5a 	bmi.w	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f8b0:	4572      	cmp	r2, lr
 801f8b2:	f6ff af57 	blt.w	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f8b6:	f110 0e01 	adds.w	lr, r0, #1
 801f8ba:	f53f af53 	bmi.w	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f8be:	4573      	cmp	r3, lr
 801f8c0:	f6ff af50 	blt.w	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f8c4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801f8c6:	9502      	str	r5, [sp, #8]
 801f8c8:	b21b      	sxth	r3, r3
 801f8ca:	b212      	sxth	r2, r2
 801f8cc:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801f8d0:	9301      	str	r3, [sp, #4]
 801f8d2:	9200      	str	r2, [sp, #0]
 801f8d4:	e9cd c405 	strd	ip, r4, [sp, #20]
 801f8d8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801f8dc:	4639      	mov	r1, r7
 801f8de:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801f8e0:	f7ff fc04 	bl	801f0ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801f8e4:	e73e      	b.n	801f764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801f8e6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f8e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801f8ec:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f8ee:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801f8f2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f8f4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f8f8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801f8fa:	141f      	asrs	r7, r3, #16
 801f8fc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801f8fe:	141b      	asrs	r3, r3, #16
 801f900:	fb01 3707 	mla	r7, r1, r7, r3
 801f904:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f906:	fa1f fc82 	uxth.w	ip, r2
 801f90a:	eb03 0a07 	add.w	sl, r3, r7
 801f90e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801f912:	f813 9007 	ldrb.w	r9, [r3, r7]
 801f916:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801f91a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801f91e:	b29b      	uxth	r3, r3
 801f920:	2d00      	cmp	r5, #0
 801f922:	f000 813d 	beq.w	801fba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801f926:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801f92a:	940f      	str	r4, [sp, #60]	@ 0x3c
 801f92c:	eb0a 0b01 	add.w	fp, sl, r1
 801f930:	fa1f fa85 	uxth.w	sl, r5
 801f934:	fb0a fc0c 	mul.w	ip, sl, ip
 801f938:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801f93c:	fa1f fa8a 	uxth.w	sl, sl
 801f940:	eba0 000c 	sub.w	r0, r0, ip
 801f944:	eba3 030a 	sub.w	r3, r3, sl
 801f948:	b280      	uxth	r0, r0
 801f94a:	fb08 f000 	mul.w	r0, r8, r0
 801f94e:	b29b      	uxth	r3, r3
 801f950:	fb09 0303 	mla	r3, r9, r3, r0
 801f954:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801f956:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801f95a:	9410      	str	r4, [sp, #64]	@ 0x40
 801f95c:	fb0a 3300 	mla	r3, sl, r0, r3
 801f960:	fb0c 3304 	mla	r3, ip, r4, r3
 801f964:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f968:	2b00      	cmp	r3, #0
 801f96a:	f000 810b 	beq.w	801fb84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801f96e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801f970:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801f972:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801f976:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801f97a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801f97e:	f000 8114 	beq.w	801fbaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801f982:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f986:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801f98a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f98e:	fb09 f707 	mul.w	r7, r9, r7
 801f992:	fb0a fc0c 	mul.w	ip, sl, ip
 801f996:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801f99a:	f107 0b20 	add.w	fp, r7, #32
 801f99e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f9a2:	44cc      	add	ip, r9
 801f9a4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801f9a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f9ac:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f9b0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f9b4:	ea4c 0909 	orr.w	r9, ip, r9
 801f9b8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801f9bc:	8847      	ldrh	r7, [r0, #2]
 801f9be:	d019      	beq.n	801f9f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801f9c0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801f9c4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801f9c8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f9cc:	fb08 f807 	mul.w	r8, r8, r7
 801f9d0:	fb0a fc0c 	mul.w	ip, sl, ip
 801f9d4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801f9d8:	f108 0b20 	add.w	fp, r8, #32
 801f9dc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801f9e0:	44bc      	add	ip, r7
 801f9e2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801f9e6:	0a3f      	lsrs	r7, r7, #8
 801f9e8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801f9ec:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801f9f0:	ea4c 0707 	orr.w	r7, ip, r7
 801f9f4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801f9f8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801f9fc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801fa00:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801fa04:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fa08:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801fa0c:	ea4c 0909 	orr.w	r9, ip, r9
 801fa10:	ea4a 0707 	orr.w	r7, sl, r7
 801fa14:	2d00      	cmp	r5, #0
 801fa16:	f000 80ca 	beq.w	801fbae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801fa1a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801fa1e:	3901      	subs	r1, #1
 801fa20:	0049      	lsls	r1, r1, #1
 801fa22:	3102      	adds	r1, #2
 801fa24:	eb00 0c01 	add.w	ip, r0, r1
 801fa28:	5a41      	ldrh	r1, [r0, r1]
 801fa2a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801fa2c:	28ff      	cmp	r0, #255	@ 0xff
 801fa2e:	d019      	beq.n	801fa64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801fa30:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801fa32:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801fa36:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fa3a:	fb04 fa01 	mul.w	sl, r4, r1
 801fa3e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fa42:	fb08 f800 	mul.w	r8, r8, r0
 801fa46:	f10a 0020 	add.w	r0, sl, #32
 801fa4a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801fa4e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801fa52:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fa56:	4441      	add	r1, r8
 801fa58:	0a00      	lsrs	r0, r0, #8
 801fa5a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801fa5e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fa62:	4301      	orrs	r1, r0
 801fa64:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801fa66:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801fa6a:	2cff      	cmp	r4, #255	@ 0xff
 801fa6c:	d01a      	beq.n	801faa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801fa6e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801fa72:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fa76:	fb04 fa00 	mul.w	sl, r4, r0
 801fa7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801fa7e:	fb08 f80c 	mul.w	r8, r8, ip
 801fa82:	f10a 0c20 	add.w	ip, sl, #32
 801fa86:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801fa8a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801fa8e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fa92:	4440      	add	r0, r8
 801fa94:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa98:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801fa9c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801faa0:	ea40 000c 	orr.w	r0, r0, ip
 801faa4:	fb15 fc02 	smulbb	ip, r5, r2
 801faa8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801faac:	f1c5 0810 	rsb	r8, r5, #16
 801fab0:	eba8 0802 	sub.w	r8, r8, r2
 801fab4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801fab8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801fabc:	437a      	muls	r2, r7
 801fabe:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801fac2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801fac6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801faca:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801face:	fb09 2208 	mla	r2, r9, r8, r2
 801fad2:	ea4a 0101 	orr.w	r1, sl, r1
 801fad6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801fada:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801fade:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fae2:	fb05 2201 	mla	r2, r5, r1, r2
 801fae6:	ea4b 0000 	orr.w	r0, fp, r0
 801faea:	fb0c 2200 	mla	r2, ip, r0, r2
 801faee:	0d57      	lsrs	r7, r2, #21
 801faf0:	0952      	lsrs	r2, r2, #5
 801faf2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801faf6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fafa:	433a      	orrs	r2, r7
 801fafc:	2bff      	cmp	r3, #255	@ 0xff
 801fafe:	b292      	uxth	r2, r2
 801fb00:	d102      	bne.n	801fb08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801fb02:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801fb04:	29ff      	cmp	r1, #255	@ 0xff
 801fb06:	d063      	beq.n	801fbd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801fb08:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801fb0a:	f8be 1000 	ldrh.w	r1, [lr]
 801fb0e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fb10:	4343      	muls	r3, r0
 801fb12:	1c58      	adds	r0, r3, #1
 801fb14:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801fb18:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801fb1c:	1208      	asrs	r0, r1, #8
 801fb1e:	b2db      	uxtb	r3, r3
 801fb20:	1215      	asrs	r5, r2, #8
 801fb22:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801fb26:	fb10 f003 	smulbb	r0, r0, r3
 801fb2a:	10cf      	asrs	r7, r1, #3
 801fb2c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801fb30:	00c9      	lsls	r1, r1, #3
 801fb32:	fb05 0504 	mla	r5, r5, r4, r0
 801fb36:	b2c9      	uxtb	r1, r1
 801fb38:	10d0      	asrs	r0, r2, #3
 801fb3a:	00d2      	lsls	r2, r2, #3
 801fb3c:	fb11 f103 	smulbb	r1, r1, r3
 801fb40:	b2d2      	uxtb	r2, r2
 801fb42:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801fb46:	fb02 1204 	mla	r2, r2, r4, r1
 801fb4a:	fb17 f703 	smulbb	r7, r7, r3
 801fb4e:	b2ad      	uxth	r5, r5
 801fb50:	b292      	uxth	r2, r2
 801fb52:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fb56:	fb00 7004 	mla	r0, r0, r4, r7
 801fb5a:	1c6b      	adds	r3, r5, #1
 801fb5c:	1c57      	adds	r7, r2, #1
 801fb5e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fb62:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fb66:	b280      	uxth	r0, r0
 801fb68:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fb6c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801fb70:	433d      	orrs	r5, r7
 801fb72:	1c47      	adds	r7, r0, #1
 801fb74:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801fb78:	097f      	lsrs	r7, r7, #5
 801fb7a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801fb7e:	433d      	orrs	r5, r7
 801fb80:	f8ae 5000 	strh.w	r5, [lr]
 801fb84:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801fb86:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801fb88:	4413      	add	r3, r2
 801fb8a:	9321      	str	r3, [sp, #132]	@ 0x84
 801fb8c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801fb8e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fb90:	441a      	add	r2, r3
 801fb92:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801fb94:	9222      	str	r2, [sp, #136]	@ 0x88
 801fb96:	3b01      	subs	r3, #1
 801fb98:	f10e 0e02 	add.w	lr, lr, #2
 801fb9c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fb9e:	e61c      	b.n	801f7da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801fba0:	fb08 f000 	mul.w	r0, r8, r0
 801fba4:	fb09 0303 	mla	r3, r9, r3, r0
 801fba8:	e6dc      	b.n	801f964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801fbaa:	46b9      	mov	r9, r7
 801fbac:	e704      	b.n	801f9b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801fbae:	f1c2 0110 	rsb	r1, r2, #16
 801fbb2:	437a      	muls	r2, r7
 801fbb4:	fb09 2901 	mla	r9, r9, r1, r2
 801fbb8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801fbbc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801fbc0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801fbc4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fbc8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fbcc:	4302      	orrs	r2, r0
 801fbce:	e795      	b.n	801fafc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801fbd0:	f8ae 2000 	strh.w	r2, [lr]
 801fbd4:	e7d6      	b.n	801fb84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801fbd6:	b017      	add	sp, #92	@ 0x5c
 801fbd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fbdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801fbdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fbe0:	b085      	sub	sp, #20
 801fbe2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801fbe6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801fbea:	9103      	str	r1, [sp, #12]
 801fbec:	fb00 7406 	mla	r4, r0, r6, r7
 801fbf0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801fbf4:	2800      	cmp	r0, #0
 801fbf6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801fbfa:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801fbfe:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801fc02:	9501      	str	r5, [sp, #4]
 801fc04:	eb02 0904 	add.w	r9, r2, r4
 801fc08:	f2c0 8141 	blt.w	801fe8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801fc0c:	4583      	cmp	fp, r0
 801fc0e:	f340 813e 	ble.w	801fe8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801fc12:	2f00      	cmp	r7, #0
 801fc14:	f2c0 8137 	blt.w	801fe86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801fc18:	42be      	cmp	r6, r7
 801fc1a:	f340 8134 	ble.w	801fe86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801fc1e:	f812 c004 	ldrb.w	ip, [r2, r4]
 801fc22:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801fc26:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fc2a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801fc2e:	4355      	muls	r5, r2
 801fc30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fc34:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801fc38:	fb0c f203 	mul.w	r2, ip, r3
 801fc3c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801fc40:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801fc44:	441d      	add	r5, r3
 801fc46:	f102 0320 	add.w	r3, r2, #32
 801fc4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc4e:	0a1b      	lsrs	r3, r3, #8
 801fc50:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801fc54:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fc58:	431c      	orrs	r4, r3
 801fc5a:	1c7b      	adds	r3, r7, #1
 801fc5c:	f100 811c 	bmi.w	801fe98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801fc60:	429e      	cmp	r6, r3
 801fc62:	f340 8119 	ble.w	801fe98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801fc66:	2900      	cmp	r1, #0
 801fc68:	f000 8119 	beq.w	801fe9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801fc6c:	9a01      	ldr	r2, [sp, #4]
 801fc6e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801fc72:	8855      	ldrh	r5, [r2, #2]
 801fc74:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801fc78:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801fc7c:	fb08 f802 	mul.w	r8, r8, r2
 801fc80:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fc84:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801fc88:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801fc8c:	435d      	muls	r5, r3
 801fc8e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801fc92:	44d0      	add	r8, sl
 801fc94:	f105 0a20 	add.w	sl, r5, #32
 801fc98:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801fc9c:	0a2d      	lsrs	r5, r5, #8
 801fc9e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801fca2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801fca6:	432a      	orrs	r2, r5
 801fca8:	3001      	adds	r0, #1
 801fcaa:	f100 80fe 	bmi.w	801feaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fcae:	4583      	cmp	fp, r0
 801fcb0:	f340 80fb 	ble.w	801feaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801fcb4:	f1be 0f00 	cmp.w	lr, #0
 801fcb8:	f000 80fc 	beq.w	801feb4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801fcbc:	2f00      	cmp	r7, #0
 801fcbe:	f2c0 80f1 	blt.w	801fea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801fcc2:	42be      	cmp	r6, r7
 801fcc4:	f340 80ee 	ble.w	801fea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801fcc8:	9801      	ldr	r0, [sp, #4]
 801fcca:	f819 5006 	ldrb.w	r5, [r9, r6]
 801fcce:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801fcd2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801fcd6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801fcda:	fb0a fa00 	mul.w	sl, sl, r0
 801fcde:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801fce2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801fce6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801fcea:	fb05 f808 	mul.w	r8, r5, r8
 801fcee:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801fcf2:	4482      	add	sl, r0
 801fcf4:	f108 0020 	add.w	r0, r8, #32
 801fcf8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fcfc:	0a00      	lsrs	r0, r0, #8
 801fcfe:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801fd02:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fd06:	ea4b 0b00 	orr.w	fp, fp, r0
 801fd0a:	3701      	adds	r7, #1
 801fd0c:	f100 80d7 	bmi.w	801febe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801fd10:	42be      	cmp	r6, r7
 801fd12:	f340 80d4 	ble.w	801febe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801fd16:	2900      	cmp	r1, #0
 801fd18:	f000 80d4 	beq.w	801fec4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801fd1c:	3601      	adds	r6, #1
 801fd1e:	9801      	ldr	r0, [sp, #4]
 801fd20:	f819 7006 	ldrb.w	r7, [r9, r6]
 801fd24:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801fd28:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801fd2c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801fd30:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fd34:	fb09 f906 	mul.w	r9, r9, r6
 801fd38:	fb07 f800 	mul.w	r8, r7, r0
 801fd3c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801fd40:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801fd44:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801fd48:	44d1      	add	r9, sl
 801fd4a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801fd4e:	f108 0020 	add.w	r0, r8, #32
 801fd52:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801fd56:	0a00      	lsrs	r0, r0, #8
 801fd58:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fd5c:	4330      	orrs	r0, r6
 801fd5e:	b28e      	uxth	r6, r1
 801fd60:	fa1f f98e 	uxth.w	r9, lr
 801fd64:	fb06 f809 	mul.w	r8, r6, r9
 801fd68:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801fd6c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801fd70:	0136      	lsls	r6, r6, #4
 801fd72:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fd76:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801fd7a:	9601      	str	r6, [sp, #4]
 801fd7c:	ea4a 0404 	orr.w	r4, sl, r4
 801fd80:	fa1f f689 	uxth.w	r6, r9
 801fd84:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801fd88:	fb11 f90e 	smulbb	r9, r1, lr
 801fd8c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801fd90:	9602      	str	r6, [sp, #8]
 801fd92:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fd96:	4626      	mov	r6, r4
 801fd98:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801fd9c:	f1ce 0410 	rsb	r4, lr, #16
 801fda0:	1a64      	subs	r4, r4, r1
 801fda2:	ea4a 0202 	orr.w	r2, sl, r2
 801fda6:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801fdaa:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801fdae:	434a      	muls	r2, r1
 801fdb0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801fdb4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801fdb8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801fdbc:	fb04 2406 	mla	r4, r4, r6, r2
 801fdc0:	ea4a 0000 	orr.w	r0, sl, r0
 801fdc4:	fb09 4200 	mla	r2, r9, r0, r4
 801fdc8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801fdcc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801fdd0:	9801      	ldr	r0, [sp, #4]
 801fdd2:	9903      	ldr	r1, [sp, #12]
 801fdd4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801fdd8:	ea44 0b0b 	orr.w	fp, r4, fp
 801fddc:	9c02      	ldr	r4, [sp, #8]
 801fdde:	8809      	ldrh	r1, [r1, #0]
 801fde0:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801fde4:	1b00      	subs	r0, r0, r4
 801fde6:	9c01      	ldr	r4, [sp, #4]
 801fde8:	eba4 0608 	sub.w	r6, r4, r8
 801fdec:	b2b6      	uxth	r6, r6
 801fdee:	b280      	uxth	r0, r0
 801fdf0:	4373      	muls	r3, r6
 801fdf2:	fb0c 3300 	mla	r3, ip, r0, r3
 801fdf6:	9802      	ldr	r0, [sp, #8]
 801fdf8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801fdfc:	fb00 3505 	mla	r5, r0, r5, r3
 801fe00:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801fe04:	fb08 5707 	mla	r7, r8, r7, r5
 801fe08:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801fe0c:	120b      	asrs	r3, r1, #8
 801fe0e:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801fe12:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801fe16:	b2ff      	uxtb	r7, r7
 801fe18:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fe1c:	10c8      	asrs	r0, r1, #3
 801fe1e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801fe22:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801fe26:	00c9      	lsls	r1, r1, #3
 801fe28:	437b      	muls	r3, r7
 801fe2a:	ea42 0e0e 	orr.w	lr, r2, lr
 801fe2e:	b2c9      	uxtb	r1, r1
 801fe30:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fe34:	fa1f f28e 	uxth.w	r2, lr
 801fe38:	4378      	muls	r0, r7
 801fe3a:	434f      	muls	r7, r1
 801fe3c:	1c59      	adds	r1, r3, #1
 801fe3e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fe42:	1213      	asrs	r3, r2, #8
 801fe44:	f023 0307 	bic.w	r3, r3, #7
 801fe48:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fe4c:	1c41      	adds	r1, r0, #1
 801fe4e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fe52:	10d1      	asrs	r1, r2, #3
 801fe54:	f021 0103 	bic.w	r1, r1, #3
 801fe58:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801fe5c:	021b      	lsls	r3, r3, #8
 801fe5e:	00c9      	lsls	r1, r1, #3
 801fe60:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fe64:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801fe68:	430b      	orrs	r3, r1
 801fe6a:	1c79      	adds	r1, r7, #1
 801fe6c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801fe70:	00d2      	lsls	r2, r2, #3
 801fe72:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fe76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe7a:	431a      	orrs	r2, r3
 801fe7c:	9b03      	ldr	r3, [sp, #12]
 801fe7e:	801a      	strh	r2, [r3, #0]
 801fe80:	b005      	add	sp, #20
 801fe82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe86:	f04f 0c00 	mov.w	ip, #0
 801fe8a:	4664      	mov	r4, ip
 801fe8c:	e6e5      	b.n	801fc5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801fe8e:	2300      	movs	r3, #0
 801fe90:	469c      	mov	ip, r3
 801fe92:	461a      	mov	r2, r3
 801fe94:	461c      	mov	r4, r3
 801fe96:	e707      	b.n	801fca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fe98:	2300      	movs	r3, #0
 801fe9a:	461a      	mov	r2, r3
 801fe9c:	e704      	b.n	801fca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fe9e:	460b      	mov	r3, r1
 801fea0:	460a      	mov	r2, r1
 801fea2:	e701      	b.n	801fca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801fea4:	2500      	movs	r5, #0
 801fea6:	46ab      	mov	fp, r5
 801fea8:	e72f      	b.n	801fd0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801feaa:	2700      	movs	r7, #0
 801feac:	463d      	mov	r5, r7
 801feae:	4638      	mov	r0, r7
 801feb0:	46bb      	mov	fp, r7
 801feb2:	e754      	b.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801feb4:	4677      	mov	r7, lr
 801feb6:	4675      	mov	r5, lr
 801feb8:	4670      	mov	r0, lr
 801feba:	46f3      	mov	fp, lr
 801febc:	e74f      	b.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801febe:	2700      	movs	r7, #0
 801fec0:	4638      	mov	r0, r7
 801fec2:	e74c      	b.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801fec4:	460f      	mov	r7, r1
 801fec6:	4608      	mov	r0, r1
 801fec8:	e749      	b.n	801fd5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801fecc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fecc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fed0:	b093      	sub	sp, #76	@ 0x4c
 801fed2:	9210      	str	r2, [sp, #64]	@ 0x40
 801fed4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801fed6:	910e      	str	r1, [sp, #56]	@ 0x38
 801fed8:	9306      	str	r3, [sp, #24]
 801feda:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801fede:	9011      	str	r0, [sp, #68]	@ 0x44
 801fee0:	6850      	ldr	r0, [r2, #4]
 801fee2:	6812      	ldr	r2, [r2, #0]
 801fee4:	fb00 1303 	mla	r3, r0, r3, r1
 801fee8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801feec:	9307      	str	r3, [sp, #28]
 801feee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fef0:	681b      	ldr	r3, [r3, #0]
 801fef2:	9308      	str	r3, [sp, #32]
 801fef4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fef6:	685b      	ldr	r3, [r3, #4]
 801fef8:	9309      	str	r3, [sp, #36]	@ 0x24
 801fefa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801fefc:	2b00      	cmp	r3, #0
 801fefe:	dc03      	bgt.n	801ff08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ff00:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ff02:	2b00      	cmp	r3, #0
 801ff04:	f340 83b4 	ble.w	8020670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801ff08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ff0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ff0e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ff12:	1e48      	subs	r0, r1, #1
 801ff14:	1e55      	subs	r5, r2, #1
 801ff16:	9b06      	ldr	r3, [sp, #24]
 801ff18:	2b00      	cmp	r3, #0
 801ff1a:	f340 8163 	ble.w	80201e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801ff1e:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801ff20:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ff22:	1436      	asrs	r6, r6, #16
 801ff24:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ff28:	d406      	bmi.n	801ff38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ff2a:	4286      	cmp	r6, r0
 801ff2c:	da04      	bge.n	801ff38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ff2e:	2b00      	cmp	r3, #0
 801ff30:	db02      	blt.n	801ff38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ff32:	42ab      	cmp	r3, r5
 801ff34:	f2c0 8157 	blt.w	80201e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801ff38:	3601      	adds	r6, #1
 801ff3a:	f100 8144 	bmi.w	80201c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ff3e:	42b1      	cmp	r1, r6
 801ff40:	f2c0 8141 	blt.w	80201c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ff44:	3301      	adds	r3, #1
 801ff46:	f100 813e 	bmi.w	80201c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ff4a:	429a      	cmp	r2, r3
 801ff4c:	f2c0 813b 	blt.w	80201c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ff50:	9b06      	ldr	r3, [sp, #24]
 801ff52:	9f07      	ldr	r7, [sp, #28]
 801ff54:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ff56:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801ff5a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ff5c:	2b00      	cmp	r3, #0
 801ff5e:	f340 8164 	ble.w	802022a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ff62:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ff64:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801ff66:	1418      	asrs	r0, r3, #16
 801ff68:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801ff6a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801ff6e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801ff70:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801ff74:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ff76:	142d      	asrs	r5, r5, #16
 801ff78:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801ff7c:	f100 81ee 	bmi.w	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ff80:	f102 3eff 	add.w	lr, r2, #4294967295
 801ff84:	4575      	cmp	r5, lr
 801ff86:	f280 81e9 	bge.w	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ff8a:	2800      	cmp	r0, #0
 801ff8c:	f2c0 81e6 	blt.w	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ff90:	f103 3eff 	add.w	lr, r3, #4294967295
 801ff94:	4570      	cmp	r0, lr
 801ff96:	f280 81e1 	bge.w	802035c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801ff9a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ff9c:	b212      	sxth	r2, r2
 801ff9e:	fb00 5002 	mla	r0, r0, r2, r5
 801ffa2:	fa1f fe81 	uxth.w	lr, r1
 801ffa6:	eb03 0a00 	add.w	sl, r3, r0
 801ffaa:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801ffae:	f813 9000 	ldrb.w	r9, [r3, r0]
 801ffb2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ffb6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801ffba:	b29b      	uxth	r3, r3
 801ffbc:	f1bc 0f00 	cmp.w	ip, #0
 801ffc0:	f000 8179 	beq.w	80202b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ffc4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801ffc8:	940a      	str	r4, [sp, #40]	@ 0x28
 801ffca:	eb0a 0b02 	add.w	fp, sl, r2
 801ffce:	fa1f fa8c 	uxth.w	sl, ip
 801ffd2:	fb0a fe0e 	mul.w	lr, sl, lr
 801ffd6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801ffda:	fa1f fa8a 	uxth.w	sl, sl
 801ffde:	eba5 050e 	sub.w	r5, r5, lr
 801ffe2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801ffe6:	940b      	str	r4, [sp, #44]	@ 0x2c
 801ffe8:	eba3 030a 	sub.w	r3, r3, sl
 801ffec:	b2ad      	uxth	r5, r5
 801ffee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fff0:	b29b      	uxth	r3, r3
 801fff2:	fb08 f505 	mul.w	r5, r8, r5
 801fff6:	fb09 5303 	mla	r3, r9, r3, r5
 801fffa:	fb0a 3304 	mla	r3, sl, r4, r3
 801fffe:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020000:	fb0e 3304 	mla	r3, lr, r4, r3
 8020004:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020008:	2b00      	cmp	r3, #0
 802000a:	f000 80cf 	beq.w	80201ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802000e:	9c08      	ldr	r4, [sp, #32]
 8020010:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8020014:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8020018:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802001c:	f000 8150 	beq.w	80202c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020020:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8020024:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8020028:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802002c:	fb09 f000 	mul.w	r0, r9, r0
 8020030:	fb0a fe0e 	mul.w	lr, sl, lr
 8020034:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8020038:	f100 0b20 	add.w	fp, r0, #32
 802003c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8020040:	44ce      	add	lr, r9
 8020042:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8020046:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802004a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802004e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8020052:	ea4e 0909 	orr.w	r9, lr, r9
 8020056:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802005a:	8868      	ldrh	r0, [r5, #2]
 802005c:	d019      	beq.n	8020092 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802005e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8020062:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020066:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802006a:	fb08 f800 	mul.w	r8, r8, r0
 802006e:	fb0a fe0e 	mul.w	lr, sl, lr
 8020072:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8020076:	f108 0b20 	add.w	fp, r8, #32
 802007a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802007e:	4486      	add	lr, r0
 8020080:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8020084:	0a00      	lsrs	r0, r0, #8
 8020086:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802008a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802008e:	ea4e 0000 	orr.w	r0, lr, r0
 8020092:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8020096:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802009a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802009e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80200a2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80200a6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80200aa:	ea4e 0909 	orr.w	r9, lr, r9
 80200ae:	ea4a 0000 	orr.w	r0, sl, r0
 80200b2:	f1bc 0f00 	cmp.w	ip, #0
 80200b6:	f000 8105 	beq.w	80202c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80200ba:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80200be:	3a01      	subs	r2, #1
 80200c0:	0052      	lsls	r2, r2, #1
 80200c2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80200c4:	3202      	adds	r2, #2
 80200c6:	2cff      	cmp	r4, #255	@ 0xff
 80200c8:	eb05 0e02 	add.w	lr, r5, r2
 80200cc:	5aaa      	ldrh	r2, [r5, r2]
 80200ce:	d018      	beq.n	8020102 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80200d0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80200d4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80200d8:	fb04 fa02 	mul.w	sl, r4, r2
 80200dc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80200e0:	fb08 f805 	mul.w	r8, r8, r5
 80200e4:	f10a 0520 	add.w	r5, sl, #32
 80200e8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80200ec:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80200f0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80200f4:	4442      	add	r2, r8
 80200f6:	0a2d      	lsrs	r5, r5, #8
 80200f8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80200fc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020100:	432a      	orrs	r2, r5
 8020102:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020104:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8020108:	2cff      	cmp	r4, #255	@ 0xff
 802010a:	d01a      	beq.n	8020142 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802010c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8020110:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020114:	fb04 fa05 	mul.w	sl, r4, r5
 8020118:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802011c:	fb08 f80e 	mul.w	r8, r8, lr
 8020120:	f10a 0e20 	add.w	lr, sl, #32
 8020124:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8020128:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802012c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020130:	4445      	add	r5, r8
 8020132:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020136:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802013a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802013e:	ea45 050e 	orr.w	r5, r5, lr
 8020142:	fb1c fe01 	smulbb	lr, ip, r1
 8020146:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802014a:	f1cc 0810 	rsb	r8, ip, #16
 802014e:	eba8 0801 	sub.w	r8, r8, r1
 8020152:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020156:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802015a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802015e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8020162:	4341      	muls	r1, r0
 8020164:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020168:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802016c:	ea4a 0202 	orr.w	r2, sl, r2
 8020170:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8020174:	fb09 1108 	mla	r1, r9, r8, r1
 8020178:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802017c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8020180:	fb0c 1102 	mla	r1, ip, r2, r1
 8020184:	ea4b 0505 	orr.w	r5, fp, r5
 8020188:	fb0e 1e05 	mla	lr, lr, r5, r1
 802018c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020190:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020194:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020198:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802019c:	ea42 0e0e 	orr.w	lr, r2, lr
 80201a0:	fa1f f28e 	uxth.w	r2, lr
 80201a4:	2bff      	cmp	r3, #255	@ 0xff
 80201a6:	f040 80a1 	bne.w	80202ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 80201aa:	803a      	strh	r2, [r7, #0]
 80201ac:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80201ae:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80201b0:	4413      	add	r3, r2
 80201b2:	931d      	str	r3, [sp, #116]	@ 0x74
 80201b4:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80201b6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80201b8:	441a      	add	r2, r3
 80201ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80201bc:	921e      	str	r2, [sp, #120]	@ 0x78
 80201be:	3b01      	subs	r3, #1
 80201c0:	3702      	adds	r7, #2
 80201c2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80201c4:	e6c9      	b.n	801ff5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80201c6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80201c8:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80201ca:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 80201cc:	4433      	add	r3, r6
 80201ce:	931d      	str	r3, [sp, #116]	@ 0x74
 80201d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80201d2:	441c      	add	r4, r3
 80201d4:	9b06      	ldr	r3, [sp, #24]
 80201d6:	941e      	str	r4, [sp, #120]	@ 0x78
 80201d8:	3b01      	subs	r3, #1
 80201da:	9306      	str	r3, [sp, #24]
 80201dc:	9b07      	ldr	r3, [sp, #28]
 80201de:	3302      	adds	r3, #2
 80201e0:	9307      	str	r3, [sp, #28]
 80201e2:	e698      	b.n	801ff16 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80201e4:	d028      	beq.n	8020238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80201e6:	9b06      	ldr	r3, [sp, #24]
 80201e8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80201ea:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80201ec:	3b01      	subs	r3, #1
 80201ee:	fb00 5003 	mla	r0, r0, r3, r5
 80201f2:	1400      	asrs	r0, r0, #16
 80201f4:	f53f aeac 	bmi.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80201f8:	3901      	subs	r1, #1
 80201fa:	4288      	cmp	r0, r1
 80201fc:	f6bf aea8 	bge.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020200:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020202:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8020204:	fb01 0303 	mla	r3, r1, r3, r0
 8020208:	141b      	asrs	r3, r3, #16
 802020a:	f53f aea1 	bmi.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802020e:	3a01      	subs	r2, #1
 8020210:	4293      	cmp	r3, r2
 8020212:	f6bf ae9d 	bge.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8020216:	9b06      	ldr	r3, [sp, #24]
 8020218:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802021c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802021e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8020222:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020224:	2b00      	cmp	r3, #0
 8020226:	f300 80b6 	bgt.w	8020396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802022a:	9b06      	ldr	r3, [sp, #24]
 802022c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020230:	9b07      	ldr	r3, [sp, #28]
 8020232:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020236:	9307      	str	r3, [sp, #28]
 8020238:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802023a:	2b00      	cmp	r3, #0
 802023c:	f340 8218 	ble.w	8020670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8020240:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020244:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020248:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802024c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802024e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020252:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020256:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802025a:	eef0 6a62 	vmov.f32	s13, s5
 802025e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020262:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020266:	ee77 2a62 	vsub.f32	s5, s14, s5
 802026a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 802026e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020272:	eef0 6a43 	vmov.f32	s13, s6
 8020276:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802027a:	ee12 2a90 	vmov	r2, s5
 802027e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020282:	fb92 f3f3 	sdiv	r3, r2, r3
 8020286:	ee13 2a10 	vmov	r2, s6
 802028a:	931f      	str	r3, [sp, #124]	@ 0x7c
 802028c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802028e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020292:	9320      	str	r3, [sp, #128]	@ 0x80
 8020294:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020296:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020298:	3b01      	subs	r3, #1
 802029a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802029e:	930e      	str	r3, [sp, #56]	@ 0x38
 80202a0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80202a2:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 80202a6:	bf08      	it	eq
 80202a8:	4613      	moveq	r3, r2
 80202aa:	9306      	str	r3, [sp, #24]
 80202ac:	eeb0 3a67 	vmov.f32	s6, s15
 80202b0:	eef0 2a47 	vmov.f32	s5, s14
 80202b4:	e621      	b.n	801fefa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80202b6:	fb08 f505 	mul.w	r5, r8, r5
 80202ba:	fb09 5303 	mla	r3, r9, r3, r5
 80202be:	e6a1      	b.n	8020004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80202c0:	4681      	mov	r9, r0
 80202c2:	e6c8      	b.n	8020056 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80202c4:	f1c1 0210 	rsb	r2, r1, #16
 80202c8:	4341      	muls	r1, r0
 80202ca:	fb09 1902 	mla	r9, r9, r2, r1
 80202ce:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80202d2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80202d6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80202da:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80202de:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80202e2:	ea42 0909 	orr.w	r9, r2, r9
 80202e6:	fa1f f289 	uxth.w	r2, r9
 80202ea:	e75b      	b.n	80201a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80202ec:	f8b7 c000 	ldrh.w	ip, [r7]
 80202f0:	43db      	mvns	r3, r3
 80202f2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80202f6:	fa5f fe83 	uxtb.w	lr, r3
 80202fa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80202fe:	fb00 f00e 	mul.w	r0, r0, lr
 8020302:	1c41      	adds	r1, r0, #1
 8020304:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8020308:	1211      	asrs	r1, r2, #8
 802030a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802030e:	f021 0107 	bic.w	r1, r1, #7
 8020312:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020316:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802031a:	48d7      	ldr	r0, [pc, #860]	@ (8020678 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802031c:	fb05 f50e 	mul.w	r5, r5, lr
 8020320:	b2c9      	uxtb	r1, r1
 8020322:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8020326:	1c69      	adds	r1, r5, #1
 8020328:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802032c:	10d1      	asrs	r1, r2, #3
 802032e:	f021 0103 	bic.w	r1, r1, #3
 8020332:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8020336:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802033a:	b2db      	uxtb	r3, r3
 802033c:	00c9      	lsls	r1, r1, #3
 802033e:	fb03 f30e 	mul.w	r3, r3, lr
 8020342:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020346:	4301      	orrs	r1, r0
 8020348:	1c58      	adds	r0, r3, #1
 802034a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802034e:	00d2      	lsls	r2, r2, #3
 8020350:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020354:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020358:	430a      	orrs	r2, r1
 802035a:	e726      	b.n	80201aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802035c:	f115 0e01 	adds.w	lr, r5, #1
 8020360:	f53f af24 	bmi.w	80201ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020364:	4572      	cmp	r2, lr
 8020366:	f6ff af21 	blt.w	80201ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802036a:	f110 0e01 	adds.w	lr, r0, #1
 802036e:	f53f af1d 	bmi.w	80201ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020372:	4573      	cmp	r3, lr
 8020374:	f6ff af1a 	blt.w	80201ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020378:	b21b      	sxth	r3, r3
 802037a:	b212      	sxth	r2, r2
 802037c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8020380:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8020384:	9301      	str	r3, [sp, #4]
 8020386:	9200      	str	r2, [sp, #0]
 8020388:	4639      	mov	r1, r7
 802038a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802038e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020390:	f7ff fc24 	bl	801fbdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8020394:	e70a      	b.n	80201ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8020396:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020398:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802039c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802039e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80203a2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80203a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80203a8:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80203aa:	141f      	asrs	r7, r3, #16
 80203ac:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80203ae:	141b      	asrs	r3, r3, #16
 80203b0:	fb01 3707 	mla	r7, r1, r7, r3
 80203b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80203b6:	fa1f fc82 	uxth.w	ip, r2
 80203ba:	eb03 0a07 	add.w	sl, r3, r7
 80203be:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80203c2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80203c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80203ca:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80203ce:	b29b      	uxth	r3, r3
 80203d0:	2d00      	cmp	r5, #0
 80203d2:	f000 80fe 	beq.w	80205d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80203d6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80203da:	940c      	str	r4, [sp, #48]	@ 0x30
 80203dc:	eb0a 0b01 	add.w	fp, sl, r1
 80203e0:	fa1f fa85 	uxth.w	sl, r5
 80203e4:	fb0a fc0c 	mul.w	ip, sl, ip
 80203e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80203ec:	fa1f fa8a 	uxth.w	sl, sl
 80203f0:	eba0 000c 	sub.w	r0, r0, ip
 80203f4:	eba3 030a 	sub.w	r3, r3, sl
 80203f8:	b280      	uxth	r0, r0
 80203fa:	fb08 f000 	mul.w	r0, r8, r0
 80203fe:	b29b      	uxth	r3, r3
 8020400:	fb09 0303 	mla	r3, r9, r3, r0
 8020404:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8020406:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802040a:	940d      	str	r4, [sp, #52]	@ 0x34
 802040c:	fb0a 3300 	mla	r3, sl, r0, r3
 8020410:	fb0c 3304 	mla	r3, ip, r4, r3
 8020414:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020418:	2b00      	cmp	r3, #0
 802041a:	f000 80cc 	beq.w	80205b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802041e:	9808      	ldr	r0, [sp, #32]
 8020420:	9c08      	ldr	r4, [sp, #32]
 8020422:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8020426:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802042a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802042e:	f000 80d5 	beq.w	80205dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020432:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8020436:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802043a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802043e:	fb09 f707 	mul.w	r7, r9, r7
 8020442:	fb0a fc0c 	mul.w	ip, sl, ip
 8020446:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802044a:	f107 0b20 	add.w	fp, r7, #32
 802044e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8020452:	44cc      	add	ip, r9
 8020454:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8020458:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802045c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8020460:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8020464:	ea4c 0909 	orr.w	r9, ip, r9
 8020468:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802046c:	8847      	ldrh	r7, [r0, #2]
 802046e:	d019      	beq.n	80204a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8020470:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8020474:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8020478:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802047c:	fb08 f807 	mul.w	r8, r8, r7
 8020480:	fb0a fc0c 	mul.w	ip, sl, ip
 8020484:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8020488:	f108 0b20 	add.w	fp, r8, #32
 802048c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8020490:	44bc      	add	ip, r7
 8020492:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8020496:	0a3f      	lsrs	r7, r7, #8
 8020498:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802049c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80204a0:	ea4c 0707 	orr.w	r7, ip, r7
 80204a4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80204a8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80204ac:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80204b0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80204b4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80204b8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80204bc:	ea4c 0909 	orr.w	r9, ip, r9
 80204c0:	ea4a 0707 	orr.w	r7, sl, r7
 80204c4:	2d00      	cmp	r5, #0
 80204c6:	f000 808b 	beq.w	80205e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80204ca:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80204ce:	3901      	subs	r1, #1
 80204d0:	0049      	lsls	r1, r1, #1
 80204d2:	3102      	adds	r1, #2
 80204d4:	eb00 0c01 	add.w	ip, r0, r1
 80204d8:	5a41      	ldrh	r1, [r0, r1]
 80204da:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80204dc:	28ff      	cmp	r0, #255	@ 0xff
 80204de:	d019      	beq.n	8020514 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80204e0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80204e2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80204e6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80204ea:	fb04 fa01 	mul.w	sl, r4, r1
 80204ee:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80204f2:	fb08 f800 	mul.w	r8, r8, r0
 80204f6:	f10a 0020 	add.w	r0, sl, #32
 80204fa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80204fe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8020502:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020506:	4441      	add	r1, r8
 8020508:	0a00      	lsrs	r0, r0, #8
 802050a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802050e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020512:	4301      	orrs	r1, r0
 8020514:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020516:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802051a:	2cff      	cmp	r4, #255	@ 0xff
 802051c:	d01a      	beq.n	8020554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802051e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8020522:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020526:	fb04 fa00 	mul.w	sl, r4, r0
 802052a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802052e:	fb08 f80c 	mul.w	r8, r8, ip
 8020532:	f10a 0c20 	add.w	ip, sl, #32
 8020536:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802053a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802053e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020542:	4440      	add	r0, r8
 8020544:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020548:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802054c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020550:	ea40 000c 	orr.w	r0, r0, ip
 8020554:	fb15 fc02 	smulbb	ip, r5, r2
 8020558:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802055c:	f1c5 0810 	rsb	r8, r5, #16
 8020560:	eba8 0802 	sub.w	r8, r8, r2
 8020564:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020568:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802056c:	437a      	muls	r2, r7
 802056e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020572:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8020576:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802057a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802057e:	fb09 2208 	mla	r2, r9, r8, r2
 8020582:	ea4a 0101 	orr.w	r1, sl, r1
 8020586:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802058a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802058e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020592:	fb05 2201 	mla	r2, r5, r1, r2
 8020596:	ea4b 0000 	orr.w	r0, fp, r0
 802059a:	fb0c 2200 	mla	r2, ip, r0, r2
 802059e:	0d57      	lsrs	r7, r2, #21
 80205a0:	0952      	lsrs	r2, r2, #5
 80205a2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80205a6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80205aa:	433a      	orrs	r2, r7
 80205ac:	2bff      	cmp	r3, #255	@ 0xff
 80205ae:	b292      	uxth	r2, r2
 80205b0:	d127      	bne.n	8020602 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 80205b2:	f8ae 2000 	strh.w	r2, [lr]
 80205b6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80205b8:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 80205ba:	4413      	add	r3, r2
 80205bc:	931d      	str	r3, [sp, #116]	@ 0x74
 80205be:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80205c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80205c2:	441a      	add	r2, r3
 80205c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80205c6:	921e      	str	r2, [sp, #120]	@ 0x78
 80205c8:	3b01      	subs	r3, #1
 80205ca:	f10e 0e02 	add.w	lr, lr, #2
 80205ce:	930f      	str	r3, [sp, #60]	@ 0x3c
 80205d0:	e627      	b.n	8020222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80205d2:	fb08 f000 	mul.w	r0, r8, r0
 80205d6:	fb09 0303 	mla	r3, r9, r3, r0
 80205da:	e71b      	b.n	8020414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80205dc:	46b9      	mov	r9, r7
 80205de:	e743      	b.n	8020468 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80205e0:	f1c2 0110 	rsb	r1, r2, #16
 80205e4:	437a      	muls	r2, r7
 80205e6:	fb09 2901 	mla	r9, r9, r1, r2
 80205ea:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80205ee:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80205f2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80205f6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80205fa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80205fe:	4302      	orrs	r2, r0
 8020600:	e7d4      	b.n	80205ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 8020602:	f8be 7000 	ldrh.w	r7, [lr]
 8020606:	4c1c      	ldr	r4, [pc, #112]	@ (8020678 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8020608:	43db      	mvns	r3, r3
 802060a:	1238      	asrs	r0, r7, #8
 802060c:	fa5f fc83 	uxtb.w	ip, r3
 8020610:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020614:	10fd      	asrs	r5, r7, #3
 8020616:	fb00 f00c 	mul.w	r0, r0, ip
 802061a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 802061e:	fb05 f10c 	mul.w	r1, r5, ip
 8020622:	1c45      	adds	r5, r0, #1
 8020624:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8020628:	1215      	asrs	r5, r2, #8
 802062a:	f025 0507 	bic.w	r5, r5, #7
 802062e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8020632:	1c4d      	adds	r5, r1, #1
 8020634:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020638:	10d1      	asrs	r1, r2, #3
 802063a:	f021 0103 	bic.w	r1, r1, #3
 802063e:	00fb      	lsls	r3, r7, #3
 8020640:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8020644:	b2db      	uxtb	r3, r3
 8020646:	b2c0      	uxtb	r0, r0
 8020648:	00c9      	lsls	r1, r1, #3
 802064a:	fb03 f30c 	mul.w	r3, r3, ip
 802064e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020652:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8020656:	4308      	orrs	r0, r1
 8020658:	1c59      	adds	r1, r3, #1
 802065a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802065e:	00d2      	lsls	r2, r2, #3
 8020660:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8020664:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8020668:	4318      	orrs	r0, r3
 802066a:	f8ae 0000 	strh.w	r0, [lr]
 802066e:	e7a2      	b.n	80205b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8020670:	b013      	add	sp, #76	@ 0x4c
 8020672:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020676:	bf00      	nop
 8020678:	fffff800 	.word	0xfffff800

0802067c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802067c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020680:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8020684:	fb05 4c03 	mla	ip, r5, r3, r4
 8020688:	2d00      	cmp	r5, #0
 802068a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802068e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8020692:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8020696:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 802069a:	8808      	ldrh	r0, [r1, #0]
 802069c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 80206a0:	f2c0 80a7 	blt.w	80207f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80206a4:	45aa      	cmp	sl, r5
 80206a6:	f340 80a4 	ble.w	80207f2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 80206aa:	2c00      	cmp	r4, #0
 80206ac:	f2c0 809f 	blt.w	80207ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80206b0:	42a3      	cmp	r3, r4
 80206b2:	f340 809c 	ble.w	80207ee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 80206b6:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 80206ba:	1c62      	adds	r2, r4, #1
 80206bc:	f100 809c 	bmi.w	80207f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80206c0:	4293      	cmp	r3, r2
 80206c2:	f340 8099 	ble.w	80207f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80206c6:	f1b9 0f00 	cmp.w	r9, #0
 80206ca:	f000 8095 	beq.w	80207f8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80206ce:	f8be c002 	ldrh.w	ip, [lr, #2]
 80206d2:	3501      	adds	r5, #1
 80206d4:	f100 8094 	bmi.w	8020800 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80206d8:	45aa      	cmp	sl, r5
 80206da:	f340 8091 	ble.w	8020800 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80206de:	2f00      	cmp	r7, #0
 80206e0:	f000 808e 	beq.w	8020800 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80206e4:	2c00      	cmp	r4, #0
 80206e6:	f2c0 8089 	blt.w	80207fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80206ea:	42a3      	cmp	r3, r4
 80206ec:	f340 8086 	ble.w	80207fc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80206f0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80206f4:	3401      	adds	r4, #1
 80206f6:	f100 8086 	bmi.w	8020806 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80206fa:	42a3      	cmp	r3, r4
 80206fc:	f340 8083 	ble.w	8020806 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020700:	f1b9 0f00 	cmp.w	r9, #0
 8020704:	d07f      	beq.n	8020806 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8020706:	3301      	adds	r3, #1
 8020708:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802070c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8020710:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020714:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8020718:	fb19 fe07 	smulbb	lr, r9, r7
 802071c:	ea44 0808 	orr.w	r8, r4, r8
 8020720:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8020724:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8020728:	f1c7 0210 	rsb	r2, r7, #16
 802072c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020730:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020734:	ea44 0c0c 	orr.w	ip, r4, ip
 8020738:	eba2 0209 	sub.w	r2, r2, r9
 802073c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8020740:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8020744:	fb04 f40c 	mul.w	r4, r4, ip
 8020748:	fb02 4808 	mla	r8, r2, r8, r4
 802074c:	041a      	lsls	r2, r3, #16
 802074e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020752:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020756:	4313      	orrs	r3, r2
 8020758:	042a      	lsls	r2, r5, #16
 802075a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802075e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8020762:	fb0e 8303 	mla	r3, lr, r3, r8
 8020766:	432a      	orrs	r2, r5
 8020768:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802076c:	fb07 3202 	mla	r2, r7, r2, r3
 8020770:	0d53      	lsrs	r3, r2, #21
 8020772:	0952      	lsrs	r2, r2, #5
 8020774:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020778:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802077c:	431a      	orrs	r2, r3
 802077e:	b293      	uxth	r3, r2
 8020780:	b2b4      	uxth	r4, r6
 8020782:	1202      	asrs	r2, r0, #8
 8020784:	43f6      	mvns	r6, r6
 8020786:	b2f6      	uxtb	r6, r6
 8020788:	121d      	asrs	r5, r3, #8
 802078a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802078e:	fb12 f206 	smulbb	r2, r2, r6
 8020792:	10c7      	asrs	r7, r0, #3
 8020794:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020798:	00c0      	lsls	r0, r0, #3
 802079a:	fb05 2504 	mla	r5, r5, r4, r2
 802079e:	b2c0      	uxtb	r0, r0
 80207a0:	10da      	asrs	r2, r3, #3
 80207a2:	00db      	lsls	r3, r3, #3
 80207a4:	b2db      	uxtb	r3, r3
 80207a6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80207aa:	fb10 f006 	smulbb	r0, r0, r6
 80207ae:	b2ad      	uxth	r5, r5
 80207b0:	fb03 0004 	mla	r0, r3, r4, r0
 80207b4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80207b8:	fb17 f706 	smulbb	r7, r7, r6
 80207bc:	b280      	uxth	r0, r0
 80207be:	1c6b      	adds	r3, r5, #1
 80207c0:	fb02 7204 	mla	r2, r2, r4, r7
 80207c4:	b292      	uxth	r2, r2
 80207c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80207ca:	1c43      	adds	r3, r0, #1
 80207cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80207d0:	1c50      	adds	r0, r2, #1
 80207d2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80207d6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80207da:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80207de:	0952      	lsrs	r2, r2, #5
 80207e0:	432b      	orrs	r3, r5
 80207e2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80207e6:	4313      	orrs	r3, r2
 80207e8:	800b      	strh	r3, [r1, #0]
 80207ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80207ee:	4680      	mov	r8, r0
 80207f0:	e763      	b.n	80206ba <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80207f2:	4684      	mov	ip, r0
 80207f4:	4680      	mov	r8, r0
 80207f6:	e76c      	b.n	80206d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80207f8:	4684      	mov	ip, r0
 80207fa:	e76a      	b.n	80206d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80207fc:	4605      	mov	r5, r0
 80207fe:	e779      	b.n	80206f4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8020800:	4603      	mov	r3, r0
 8020802:	4605      	mov	r5, r0
 8020804:	e782      	b.n	802070c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8020806:	4603      	mov	r3, r0
 8020808:	e780      	b.n	802070c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802080a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802080a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802080e:	b093      	sub	sp, #76	@ 0x4c
 8020810:	461d      	mov	r5, r3
 8020812:	9210      	str	r2, [sp, #64]	@ 0x40
 8020814:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8020816:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 802081a:	920b      	str	r2, [sp, #44]	@ 0x2c
 802081c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8020820:	910a      	str	r1, [sp, #40]	@ 0x28
 8020822:	6859      	ldr	r1, [r3, #4]
 8020824:	681b      	ldr	r3, [r3, #0]
 8020826:	9011      	str	r0, [sp, #68]	@ 0x44
 8020828:	fb01 2707 	mla	r7, r1, r7, r2
 802082c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8020830:	9307      	str	r3, [sp, #28]
 8020832:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020834:	681b      	ldr	r3, [r3, #0]
 8020836:	9309      	str	r3, [sp, #36]	@ 0x24
 8020838:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802083a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802083e:	43db      	mvns	r3, r3
 8020840:	b2db      	uxtb	r3, r3
 8020842:	9308      	str	r3, [sp, #32]
 8020844:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020846:	2b00      	cmp	r3, #0
 8020848:	dc03      	bgt.n	8020852 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802084a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802084c:	2b00      	cmp	r3, #0
 802084e:	f340 8203 	ble.w	8020c58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020852:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020854:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020858:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802085c:	1e48      	subs	r0, r1, #1
 802085e:	f102 3cff 	add.w	ip, r2, #4294967295
 8020862:	2d00      	cmp	r5, #0
 8020864:	f340 80da 	ble.w	8020a1c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8020868:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802086c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020870:	d406      	bmi.n	8020880 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020872:	4586      	cmp	lr, r0
 8020874:	da04      	bge.n	8020880 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8020876:	2b00      	cmp	r3, #0
 8020878:	db02      	blt.n	8020880 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802087a:	4563      	cmp	r3, ip
 802087c:	f2c0 80cf 	blt.w	8020a1e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8020880:	f11e 0e01 	adds.w	lr, lr, #1
 8020884:	f100 80c1 	bmi.w	8020a0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020888:	4571      	cmp	r1, lr
 802088a:	f2c0 80be 	blt.w	8020a0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802088e:	3301      	adds	r3, #1
 8020890:	f100 80bb 	bmi.w	8020a0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8020894:	429a      	cmp	r2, r3
 8020896:	f2c0 80b8 	blt.w	8020a0a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802089a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802089e:	46a9      	mov	r9, r5
 80208a0:	f1b9 0f00 	cmp.w	r9, #0
 80208a4:	f340 80d8 	ble.w	8020a58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 80208a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80208aa:	1421      	asrs	r1, r4, #16
 80208ac:	ea4f 4026 	mov.w	r0, r6, asr #16
 80208b0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80208b4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80208b8:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80208bc:	f100 8111 	bmi.w	8020ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80208c0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80208c4:	4551      	cmp	r1, sl
 80208c6:	f280 810c 	bge.w	8020ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80208ca:	2800      	cmp	r0, #0
 80208cc:	f2c0 8109 	blt.w	8020ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80208d0:	f103 3aff 	add.w	sl, r3, #4294967295
 80208d4:	4550      	cmp	r0, sl
 80208d6:	f280 8104 	bge.w	8020ae2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80208da:	fa0f f38e 	sxth.w	r3, lr
 80208de:	fb00 1103 	mla	r1, r0, r3, r1
 80208e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80208e4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80208e8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80208ec:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80208f0:	f1bc 0f00 	cmp.w	ip, #0
 80208f4:	d007      	beq.n	8020906 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80208f6:	005b      	lsls	r3, r3, #1
 80208f8:	eb0a 0003 	add.w	r0, sl, r3
 80208fc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8020900:	930c      	str	r3, [sp, #48]	@ 0x30
 8020902:	8843      	ldrh	r3, [r0, #2]
 8020904:	930d      	str	r3, [sp, #52]	@ 0x34
 8020906:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802090a:	fb12 f30c 	smulbb	r3, r2, ip
 802090e:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8020912:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8020916:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802091a:	10db      	asrs	r3, r3, #3
 802091c:	ea40 000e 	orr.w	r0, r0, lr
 8020920:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020924:	f1cc 0e10 	rsb	lr, ip, #16
 8020928:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802092c:	ebae 0e02 	sub.w	lr, lr, r2
 8020930:	ea4a 0101 	orr.w	r1, sl, r1
 8020934:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020938:	4351      	muls	r1, r2
 802093a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802093c:	9f08      	ldr	r7, [sp, #32]
 802093e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8020942:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020946:	0410      	lsls	r0, r2, #16
 8020948:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802094c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020950:	4310      	orrs	r0, r2
 8020952:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020954:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8020956:	0412      	lsls	r2, r2, #16
 8020958:	fb03 e000 	mla	r0, r3, r0, lr
 802095c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020960:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8020964:	ea42 020e 	orr.w	r2, r2, lr
 8020968:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802096c:	fb03 0302 	mla	r3, r3, r2, r0
 8020970:	0d5a      	lsrs	r2, r3, #21
 8020972:	095b      	lsrs	r3, r3, #5
 8020974:	f8b8 0000 	ldrh.w	r0, [r8]
 8020978:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802097c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020980:	4313      	orrs	r3, r2
 8020982:	b29b      	uxth	r3, r3
 8020984:	1201      	asrs	r1, r0, #8
 8020986:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 802098a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802098e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020992:	fb11 f107 	smulbb	r1, r1, r7
 8020996:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802099a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802099e:	00c0      	lsls	r0, r0, #3
 80209a0:	fb0c 1c02 	mla	ip, ip, r2, r1
 80209a4:	b2c0      	uxtb	r0, r0
 80209a6:	10d9      	asrs	r1, r3, #3
 80209a8:	00db      	lsls	r3, r3, #3
 80209aa:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80209ae:	b2db      	uxtb	r3, r3
 80209b0:	fb10 f007 	smulbb	r0, r0, r7
 80209b4:	fa1f fc8c 	uxth.w	ip, ip
 80209b8:	fb03 0302 	mla	r3, r3, r2, r0
 80209bc:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80209c0:	fb1e fe07 	smulbb	lr, lr, r7
 80209c4:	fb01 e102 	mla	r1, r1, r2, lr
 80209c8:	b29a      	uxth	r2, r3
 80209ca:	f10c 0301 	add.w	r3, ip, #1
 80209ce:	b289      	uxth	r1, r1
 80209d0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80209d4:	1c53      	adds	r3, r2, #1
 80209d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80209da:	1c4a      	adds	r2, r1, #1
 80209dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80209e0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80209e4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80209e8:	0949      	lsrs	r1, r1, #5
 80209ea:	ea43 030c 	orr.w	r3, r3, ip
 80209ee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80209f2:	430b      	orrs	r3, r1
 80209f4:	f8a8 3000 	strh.w	r3, [r8]
 80209f8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80209fa:	441c      	add	r4, r3
 80209fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80209fe:	f108 0802 	add.w	r8, r8, #2
 8020a02:	441e      	add	r6, r3
 8020a04:	f109 39ff 	add.w	r9, r9, #4294967295
 8020a08:	e74a      	b.n	80208a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8020a0a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020a0c:	441c      	add	r4, r3
 8020a0e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020a10:	441e      	add	r6, r3
 8020a12:	9b07      	ldr	r3, [sp, #28]
 8020a14:	3302      	adds	r3, #2
 8020a16:	3d01      	subs	r5, #1
 8020a18:	9307      	str	r3, [sp, #28]
 8020a1a:	e722      	b.n	8020862 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020a1c:	d022      	beq.n	8020a64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8020a1e:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020a20:	1e6b      	subs	r3, r5, #1
 8020a22:	fb00 4003 	mla	r0, r0, r3, r4
 8020a26:	1400      	asrs	r0, r0, #16
 8020a28:	f53f af37 	bmi.w	802089a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020a2c:	3901      	subs	r1, #1
 8020a2e:	4288      	cmp	r0, r1
 8020a30:	f6bf af33 	bge.w	802089a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020a34:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8020a36:	fb01 6303 	mla	r3, r1, r3, r6
 8020a3a:	141b      	asrs	r3, r3, #16
 8020a3c:	f53f af2d 	bmi.w	802089a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020a40:	3a01      	subs	r2, #1
 8020a42:	4293      	cmp	r3, r2
 8020a44:	f6bf af29 	bge.w	802089a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8020a48:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8020a4c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8020a50:	46a8      	mov	r8, r5
 8020a52:	f1b8 0f00 	cmp.w	r8, #0
 8020a56:	dc5e      	bgt.n	8020b16 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8020a58:	9b07      	ldr	r3, [sp, #28]
 8020a5a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020a5e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8020a62:	9307      	str	r3, [sp, #28]
 8020a64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020a66:	2b00      	cmp	r3, #0
 8020a68:	f340 80f6 	ble.w	8020c58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020a6c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020a70:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020a74:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020a78:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020a7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020a7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020a82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020a86:	eef0 6a62 	vmov.f32	s13, s5
 8020a8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020a8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020a92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020a96:	ee16 4a90 	vmov	r4, s13
 8020a9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020a9e:	eef0 6a43 	vmov.f32	s13, s6
 8020aa2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020aa6:	ee12 2a90 	vmov	r2, s5
 8020aaa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020aae:	fb92 f3f3 	sdiv	r3, r2, r3
 8020ab2:	ee13 2a10 	vmov	r2, s6
 8020ab6:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020ab8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020aba:	fb92 f3f3 	sdiv	r3, r2, r3
 8020abe:	9320      	str	r3, [sp, #128]	@ 0x80
 8020ac0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020ac2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020ac4:	3b01      	subs	r3, #1
 8020ac6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020aca:	930a      	str	r3, [sp, #40]	@ 0x28
 8020acc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020ace:	ee16 6a90 	vmov	r6, s13
 8020ad2:	bf14      	ite	ne
 8020ad4:	461d      	movne	r5, r3
 8020ad6:	4615      	moveq	r5, r2
 8020ad8:	eeb0 3a67 	vmov.f32	s6, s15
 8020adc:	eef0 2a47 	vmov.f32	s5, s14
 8020ae0:	e6b0      	b.n	8020844 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8020ae2:	f111 0a01 	adds.w	sl, r1, #1
 8020ae6:	d487      	bmi.n	80209f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020ae8:	45d6      	cmp	lr, sl
 8020aea:	db85      	blt.n	80209f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020aec:	f110 0a01 	adds.w	sl, r0, #1
 8020af0:	d482      	bmi.n	80209f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020af2:	4553      	cmp	r3, sl
 8020af4:	db80      	blt.n	80209f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020af6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8020af8:	9101      	str	r1, [sp, #4]
 8020afa:	b21b      	sxth	r3, r3
 8020afc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8020b00:	9300      	str	r3, [sp, #0]
 8020b02:	e9cd c704 	strd	ip, r7, [sp, #16]
 8020b06:	fa0f f38e 	sxth.w	r3, lr
 8020b0a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020b0c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8020b0e:	4641      	mov	r1, r8
 8020b10:	f7ff fdb4 	bl	802067c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8020b14:	e770      	b.n	80209f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020b16:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020b18:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8020b1a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020b1e:	1430      	asrs	r0, r6, #16
 8020b20:	1423      	asrs	r3, r4, #16
 8020b22:	fb01 3000 	mla	r0, r1, r0, r3
 8020b26:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020b28:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8020b2c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8020b30:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020b34:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020b38:	8858      	ldrh	r0, [r3, #2]
 8020b3a:	f1be 0f00 	cmp.w	lr, #0
 8020b3e:	d00b      	beq.n	8020b58 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8020b40:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8020b44:	3901      	subs	r1, #1
 8020b46:	0049      	lsls	r1, r1, #1
 8020b48:	3102      	adds	r1, #2
 8020b4a:	eb03 0b01 	add.w	fp, r3, r1
 8020b4e:	5a5b      	ldrh	r3, [r3, r1]
 8020b50:	930e      	str	r3, [sp, #56]	@ 0x38
 8020b52:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8020b56:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020b58:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8020b5c:	fb12 f30e 	smulbb	r3, r2, lr
 8020b60:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020b64:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8020b68:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8020b6c:	10db      	asrs	r3, r3, #3
 8020b6e:	ea41 010c 	orr.w	r1, r1, ip
 8020b72:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020b76:	f1ce 0c10 	rsb	ip, lr, #16
 8020b7a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020b7e:	ebac 0c02 	sub.w	ip, ip, r2
 8020b82:	ea4b 0000 	orr.w	r0, fp, r0
 8020b86:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020b8a:	4350      	muls	r0, r2
 8020b8c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020b8e:	9f08      	ldr	r7, [sp, #32]
 8020b90:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8020b94:	fb0c 0c01 	mla	ip, ip, r1, r0
 8020b98:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8020b9c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8020ba0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8020ba2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8020ba4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020ba8:	0412      	lsls	r2, r2, #16
 8020baa:	ea4b 0101 	orr.w	r1, fp, r1
 8020bae:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020bb2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020bb6:	fb03 c101 	mla	r1, r3, r1, ip
 8020bba:	4302      	orrs	r2, r0
 8020bbc:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8020bc0:	fb03 1202 	mla	r2, r3, r2, r1
 8020bc4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8020bc8:	0952      	lsrs	r2, r2, #5
 8020bca:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8020bce:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8020bd2:	f8b9 2000 	ldrh.w	r2, [r9]
 8020bd6:	ea4b 0303 	orr.w	r3, fp, r3
 8020bda:	b29b      	uxth	r3, r3
 8020bdc:	1211      	asrs	r1, r2, #8
 8020bde:	1218      	asrs	r0, r3, #8
 8020be0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020be4:	fb11 f107 	smulbb	r1, r1, r7
 8020be8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8020bec:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020bf0:	00d2      	lsls	r2, r2, #3
 8020bf2:	fb00 100a 	mla	r0, r0, sl, r1
 8020bf6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8020bfa:	10d9      	asrs	r1, r3, #3
 8020bfc:	b2d2      	uxtb	r2, r2
 8020bfe:	00db      	lsls	r3, r3, #3
 8020c00:	fb1c fc07 	smulbb	ip, ip, r7
 8020c04:	fb12 f207 	smulbb	r2, r2, r7
 8020c08:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020c0c:	b2db      	uxtb	r3, r3
 8020c0e:	b280      	uxth	r0, r0
 8020c10:	fb01 c10a 	mla	r1, r1, sl, ip
 8020c14:	fb03 230a 	mla	r3, r3, sl, r2
 8020c18:	b29b      	uxth	r3, r3
 8020c1a:	b289      	uxth	r1, r1
 8020c1c:	1c42      	adds	r2, r0, #1
 8020c1e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020c22:	f101 0c01 	add.w	ip, r1, #1
 8020c26:	1c5a      	adds	r2, r3, #1
 8020c28:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8020c2c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020c30:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c32:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8020c36:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020c3a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020c3e:	4310      	orrs	r0, r2
 8020c40:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8020c44:	441c      	add	r4, r3
 8020c46:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c48:	ea40 000c 	orr.w	r0, r0, ip
 8020c4c:	f829 0b02 	strh.w	r0, [r9], #2
 8020c50:	441e      	add	r6, r3
 8020c52:	f108 38ff 	add.w	r8, r8, #4294967295
 8020c56:	e6fc      	b.n	8020a52 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8020c58:	b013      	add	sp, #76	@ 0x4c
 8020c5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020c5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8020c5e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8020c62:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8020c66:	fb0e 4703 	mla	r7, lr, r3, r4
 8020c6a:	f1be 0f00 	cmp.w	lr, #0
 8020c6e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8020c72:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8020c76:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8020c7a:	8808      	ldrh	r0, [r1, #0]
 8020c7c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8020c80:	db60      	blt.n	8020d44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020c82:	45f1      	cmp	r9, lr
 8020c84:	dd5e      	ble.n	8020d44 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8020c86:	2c00      	cmp	r4, #0
 8020c88:	db5a      	blt.n	8020d40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020c8a:	42a3      	cmp	r3, r4
 8020c8c:	dd58      	ble.n	8020d40 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8020c8e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8020c92:	1c62      	adds	r2, r4, #1
 8020c94:	d459      	bmi.n	8020d4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020c96:	4293      	cmp	r3, r2
 8020c98:	dd57      	ble.n	8020d4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020c9a:	2d00      	cmp	r5, #0
 8020c9c:	d055      	beq.n	8020d4a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8020c9e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8020ca2:	f11e 0e01 	adds.w	lr, lr, #1
 8020ca6:	d454      	bmi.n	8020d52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020ca8:	45f1      	cmp	r9, lr
 8020caa:	dd52      	ble.n	8020d52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020cac:	2e00      	cmp	r6, #0
 8020cae:	d050      	beq.n	8020d52 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8020cb0:	2c00      	cmp	r4, #0
 8020cb2:	db4c      	blt.n	8020d4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020cb4:	42a3      	cmp	r3, r4
 8020cb6:	dd4a      	ble.n	8020d4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8020cb8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8020cbc:	3401      	adds	r4, #1
 8020cbe:	d405      	bmi.n	8020ccc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020cc0:	42a3      	cmp	r3, r4
 8020cc2:	dd03      	ble.n	8020ccc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020cc4:	b115      	cbz	r5, 8020ccc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8020cc6:	3301      	adds	r3, #1
 8020cc8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8020ccc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020cd0:	fb15 f406 	smulbb	r4, r5, r6
 8020cd4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020cd8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020cdc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020ce0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020ce4:	ea43 0c0c 	orr.w	ip, r3, ip
 8020ce8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8020cec:	f1c6 0310 	rsb	r3, r6, #16
 8020cf0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8020cf4:	1b5b      	subs	r3, r3, r5
 8020cf6:	ea4e 0707 	orr.w	r7, lr, r7
 8020cfa:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8020cfe:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020d02:	437d      	muls	r5, r7
 8020d04:	fb03 5c0c 	mla	ip, r3, ip, r5
 8020d08:	0403      	lsls	r3, r0, #16
 8020d0a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020d0e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020d12:	4318      	orrs	r0, r3
 8020d14:	0413      	lsls	r3, r2, #16
 8020d16:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020d1a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020d1e:	4313      	orrs	r3, r2
 8020d20:	fb04 c000 	mla	r0, r4, r0, ip
 8020d24:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020d28:	fb06 0003 	mla	r0, r6, r3, r0
 8020d2c:	0d43      	lsrs	r3, r0, #21
 8020d2e:	0940      	lsrs	r0, r0, #5
 8020d30:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020d34:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020d38:	4318      	orrs	r0, r3
 8020d3a:	8008      	strh	r0, [r1, #0]
 8020d3c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8020d40:	4684      	mov	ip, r0
 8020d42:	e7a6      	b.n	8020c92 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8020d44:	4607      	mov	r7, r0
 8020d46:	4684      	mov	ip, r0
 8020d48:	e7ab      	b.n	8020ca2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020d4a:	4607      	mov	r7, r0
 8020d4c:	e7a9      	b.n	8020ca2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8020d4e:	4602      	mov	r2, r0
 8020d50:	e7b4      	b.n	8020cbc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8020d52:	4602      	mov	r2, r0
 8020d54:	e7ba      	b.n	8020ccc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08020d56 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020d56:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d5a:	b08f      	sub	sp, #60	@ 0x3c
 8020d5c:	461d      	mov	r5, r3
 8020d5e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8020d60:	920c      	str	r2, [sp, #48]	@ 0x30
 8020d62:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8020d66:	9107      	str	r1, [sp, #28]
 8020d68:	6859      	ldr	r1, [r3, #4]
 8020d6a:	681b      	ldr	r3, [r3, #0]
 8020d6c:	900d      	str	r0, [sp, #52]	@ 0x34
 8020d6e:	fb01 2707 	mla	r7, r1, r7, r2
 8020d72:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8020d76:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020d78:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8020d7c:	f8d3 8000 	ldr.w	r8, [r3]
 8020d80:	9b07      	ldr	r3, [sp, #28]
 8020d82:	2b00      	cmp	r3, #0
 8020d84:	dc03      	bgt.n	8020d8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8020d86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020d88:	2b00      	cmp	r3, #0
 8020d8a:	f340 8181 	ble.w	8021090 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8020d8e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020d90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d98:	1e48      	subs	r0, r1, #1
 8020d9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8020d9e:	2d00      	cmp	r5, #0
 8020da0:	f340 809b 	ble.w	8020eda <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8020da4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020da8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020dac:	d406      	bmi.n	8020dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020dae:	4586      	cmp	lr, r0
 8020db0:	da04      	bge.n	8020dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020db2:	2b00      	cmp	r3, #0
 8020db4:	db02      	blt.n	8020dbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8020db6:	4563      	cmp	r3, ip
 8020db8:	f2c0 8090 	blt.w	8020edc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020dbc:	f11e 0e01 	adds.w	lr, lr, #1
 8020dc0:	f100 8084 	bmi.w	8020ecc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020dc4:	4571      	cmp	r1, lr
 8020dc6:	f2c0 8081 	blt.w	8020ecc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020dca:	3301      	adds	r3, #1
 8020dcc:	d47e      	bmi.n	8020ecc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020dce:	429a      	cmp	r2, r3
 8020dd0:	db7c      	blt.n	8020ecc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8020dd2:	46aa      	mov	sl, r5
 8020dd4:	46b9      	mov	r9, r7
 8020dd6:	f1ba 0f00 	cmp.w	sl, #0
 8020dda:	f340 8099 	ble.w	8020f10 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8020dde:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020de0:	1421      	asrs	r1, r4, #16
 8020de2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020de6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020dea:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8020dee:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8020df2:	f100 80d0 	bmi.w	8020f96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020df6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8020dfa:	4559      	cmp	r1, fp
 8020dfc:	f280 80cb 	bge.w	8020f96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020e00:	2800      	cmp	r0, #0
 8020e02:	f2c0 80c8 	blt.w	8020f96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020e06:	f103 3bff 	add.w	fp, r3, #4294967295
 8020e0a:	4558      	cmp	r0, fp
 8020e0c:	f280 80c3 	bge.w	8020f96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8020e10:	fa0f fe8e 	sxth.w	lr, lr
 8020e14:	fb00 110e 	mla	r1, r0, lr, r1
 8020e18:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8020e1c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8020e20:	8841      	ldrh	r1, [r0, #2]
 8020e22:	f1bc 0f00 	cmp.w	ip, #0
 8020e26:	d00b      	beq.n	8020e40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8020e28:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8020e2c:	3b01      	subs	r3, #1
 8020e2e:	005b      	lsls	r3, r3, #1
 8020e30:	3302      	adds	r3, #2
 8020e32:	eb00 0e03 	add.w	lr, r0, r3
 8020e36:	5ac3      	ldrh	r3, [r0, r3]
 8020e38:	9308      	str	r3, [sp, #32]
 8020e3a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8020e3e:	9309      	str	r3, [sp, #36]	@ 0x24
 8020e40:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8020e44:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020e48:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8020e4c:	ea40 000b 	orr.w	r0, r0, fp
 8020e50:	fb12 f30c 	smulbb	r3, r2, ip
 8020e54:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8020e58:	10db      	asrs	r3, r3, #3
 8020e5a:	f1cc 0e10 	rsb	lr, ip, #16
 8020e5e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020e62:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8020e66:	ebae 0e02 	sub.w	lr, lr, r2
 8020e6a:	ea4b 0101 	orr.w	r1, fp, r1
 8020e6e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8020e72:	4351      	muls	r1, r2
 8020e74:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020e76:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8020e7a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8020e7e:	0410      	lsls	r0, r2, #16
 8020e80:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020e84:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020e88:	4310      	orrs	r0, r2
 8020e8a:	9a08      	ldr	r2, [sp, #32]
 8020e8c:	9908      	ldr	r1, [sp, #32]
 8020e8e:	0412      	lsls	r2, r2, #16
 8020e90:	fb03 e000 	mla	r0, r3, r0, lr
 8020e94:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8020e98:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8020e9c:	ea42 020e 	orr.w	r2, r2, lr
 8020ea0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8020ea4:	fb03 0302 	mla	r3, r3, r2, r0
 8020ea8:	0d5a      	lsrs	r2, r3, #21
 8020eaa:	095b      	lsrs	r3, r3, #5
 8020eac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020eb0:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020eb4:	4313      	orrs	r3, r2
 8020eb6:	f8a9 3000 	strh.w	r3, [r9]
 8020eba:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020ebc:	441c      	add	r4, r3
 8020ebe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020ec0:	f109 0902 	add.w	r9, r9, #2
 8020ec4:	441e      	add	r6, r3
 8020ec6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8020eca:	e784      	b.n	8020dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8020ecc:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020ece:	441c      	add	r4, r3
 8020ed0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020ed2:	3d01      	subs	r5, #1
 8020ed4:	441e      	add	r6, r3
 8020ed6:	3702      	adds	r7, #2
 8020ed8:	e761      	b.n	8020d9e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020eda:	d01d      	beq.n	8020f18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8020edc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8020ede:	1e6b      	subs	r3, r5, #1
 8020ee0:	fb00 4003 	mla	r0, r0, r3, r4
 8020ee4:	1400      	asrs	r0, r0, #16
 8020ee6:	f53f af74 	bmi.w	8020dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020eea:	3901      	subs	r1, #1
 8020eec:	4288      	cmp	r0, r1
 8020eee:	f6bf af70 	bge.w	8020dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020ef2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8020ef4:	fb01 6303 	mla	r3, r1, r3, r6
 8020ef8:	141b      	asrs	r3, r3, #16
 8020efa:	f53f af6a 	bmi.w	8020dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020efe:	3a01      	subs	r2, #1
 8020f00:	4293      	cmp	r3, r2
 8020f02:	f6bf af66 	bge.w	8020dd2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8020f06:	46a9      	mov	r9, r5
 8020f08:	46ba      	mov	sl, r7
 8020f0a:	f1b9 0f00 	cmp.w	r9, #0
 8020f0e:	dc5a      	bgt.n	8020fc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8020f10:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8020f14:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8020f18:	9b07      	ldr	r3, [sp, #28]
 8020f1a:	2b00      	cmp	r3, #0
 8020f1c:	f340 80b8 	ble.w	8021090 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8020f20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020f24:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020f28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020f2c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020f2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020f32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020f36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020f3a:	eef0 6a62 	vmov.f32	s13, s5
 8020f3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020f42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020f4a:	ee16 4a90 	vmov	r4, s13
 8020f4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020f52:	eef0 6a43 	vmov.f32	s13, s6
 8020f56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020f5a:	ee12 2a90 	vmov	r2, s5
 8020f5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f66:	ee13 2a10 	vmov	r2, s6
 8020f6a:	931b      	str	r3, [sp, #108]	@ 0x6c
 8020f6c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020f6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020f72:	931c      	str	r3, [sp, #112]	@ 0x70
 8020f74:	9b07      	ldr	r3, [sp, #28]
 8020f76:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020f78:	3b01      	subs	r3, #1
 8020f7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020f7e:	9307      	str	r3, [sp, #28]
 8020f80:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020f82:	ee16 6a90 	vmov	r6, s13
 8020f86:	bf14      	ite	ne
 8020f88:	461d      	movne	r5, r3
 8020f8a:	4615      	moveq	r5, r2
 8020f8c:	eeb0 3a67 	vmov.f32	s6, s15
 8020f90:	eef0 2a47 	vmov.f32	s5, s14
 8020f94:	e6f4      	b.n	8020d80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8020f96:	f111 0b01 	adds.w	fp, r1, #1
 8020f9a:	d48e      	bmi.n	8020eba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020f9c:	45de      	cmp	lr, fp
 8020f9e:	db8c      	blt.n	8020eba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020fa0:	f110 0b01 	adds.w	fp, r0, #1
 8020fa4:	d489      	bmi.n	8020eba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020fa6:	455b      	cmp	r3, fp
 8020fa8:	db87      	blt.n	8020eba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020faa:	b21b      	sxth	r3, r3
 8020fac:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8020fb0:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8020fb4:	9300      	str	r3, [sp, #0]
 8020fb6:	4642      	mov	r2, r8
 8020fb8:	fa0f f38e 	sxth.w	r3, lr
 8020fbc:	4649      	mov	r1, r9
 8020fbe:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8020fc0:	f7ff fe4d 	bl	8020c5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8020fc4:	e779      	b.n	8020eba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8020fc6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020fc8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8020fcc:	1420      	asrs	r0, r4, #16
 8020fce:	1431      	asrs	r1, r6, #16
 8020fd0:	fb03 0101 	mla	r1, r3, r1, r0
 8020fd4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8020fd8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8020fdc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8020fe0:	8841      	ldrh	r1, [r0, #2]
 8020fe2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8020fe6:	f1be 0f00 	cmp.w	lr, #0
 8020fea:	d00b      	beq.n	8021004 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8020fec:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8020ff0:	3b01      	subs	r3, #1
 8020ff2:	005b      	lsls	r3, r3, #1
 8020ff4:	3302      	adds	r3, #2
 8020ff6:	eb00 0b03 	add.w	fp, r0, r3
 8020ffa:	5ac3      	ldrh	r3, [r0, r3]
 8020ffc:	930a      	str	r3, [sp, #40]	@ 0x28
 8020ffe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8021002:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021004:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8021008:	fb12 f30e 	smulbb	r3, r2, lr
 802100c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8021010:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8021014:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8021018:	10db      	asrs	r3, r3, #3
 802101a:	ea40 000c 	orr.w	r0, r0, ip
 802101e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021022:	f1ce 0c10 	rsb	ip, lr, #16
 8021026:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802102a:	ebac 0c02 	sub.w	ip, ip, r2
 802102e:	ea4b 0101 	orr.w	r1, fp, r1
 8021032:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8021036:	4351      	muls	r1, r2
 8021038:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802103a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802103e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8021042:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8021046:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 802104a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802104c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802104e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021052:	0412      	lsls	r2, r2, #16
 8021054:	ea4b 0000 	orr.w	r0, fp, r0
 8021058:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802105c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8021060:	fb03 c000 	mla	r0, r3, r0, ip
 8021064:	ea42 0b0b 	orr.w	fp, r2, fp
 8021068:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802106c:	fb03 000b 	mla	r0, r3, fp, r0
 8021070:	0d43      	lsrs	r3, r0, #21
 8021072:	0940      	lsrs	r0, r0, #5
 8021074:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021078:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802107c:	4318      	orrs	r0, r3
 802107e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021080:	f82a 0b02 	strh.w	r0, [sl], #2
 8021084:	441c      	add	r4, r3
 8021086:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021088:	f109 39ff 	add.w	r9, r9, #4294967295
 802108c:	441e      	add	r6, r3
 802108e:	e73c      	b.n	8020f0a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8021090:	b00f      	add	sp, #60	@ 0x3c
 8021092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8021096:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802109a:	b085      	sub	sp, #20
 802109c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80210a0:	9102      	str	r1, [sp, #8]
 80210a2:	2c00      	cmp	r4, #0
 80210a4:	fb04 7103 	mla	r1, r4, r3, r7
 80210a8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80210ac:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80210b0:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80210b4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80210b8:	f2c0 811b 	blt.w	80212f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80210bc:	45a6      	cmp	lr, r4
 80210be:	f340 8118 	ble.w	80212f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80210c2:	2f00      	cmp	r7, #0
 80210c4:	f2c0 8113 	blt.w	80212ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80210c8:	42bb      	cmp	r3, r7
 80210ca:	f340 8110 	ble.w	80212ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80210ce:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80210d2:	1c7a      	adds	r2, r7, #1
 80210d4:	f100 8110 	bmi.w	80212f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80210d8:	4293      	cmp	r3, r2
 80210da:	f340 810d 	ble.w	80212f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80210de:	2e00      	cmp	r6, #0
 80210e0:	f000 810c 	beq.w	80212fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80210e4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80210e8:	3401      	adds	r4, #1
 80210ea:	f100 810b 	bmi.w	8021304 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80210ee:	45a6      	cmp	lr, r4
 80210f0:	f340 8108 	ble.w	8021304 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80210f4:	2800      	cmp	r0, #0
 80210f6:	f000 8108 	beq.w	802130a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80210fa:	2f00      	cmp	r7, #0
 80210fc:	f2c0 8100 	blt.w	8021300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021100:	42bb      	cmp	r3, r7
 8021102:	f340 80fd 	ble.w	8021300 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8021106:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802110a:	3701      	adds	r7, #1
 802110c:	f100 8100 	bmi.w	8021310 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021110:	42bb      	cmp	r3, r7
 8021112:	f340 80fd 	ble.w	8021310 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8021116:	2e00      	cmp	r6, #0
 8021118:	f000 80fc 	beq.w	8021314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802111c:	3301      	adds	r3, #1
 802111e:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8021122:	b2b6      	uxth	r6, r6
 8021124:	b280      	uxth	r0, r0
 8021126:	fb00 fe06 	mul.w	lr, r0, r6
 802112a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802112e:	0136      	lsls	r6, r6, #4
 8021130:	eba6 070e 	sub.w	r7, r6, lr
 8021134:	b280      	uxth	r0, r0
 8021136:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802113a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802113e:	b2bf      	uxth	r7, r7
 8021140:	1a1b      	subs	r3, r3, r0
 8021142:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021146:	b29b      	uxth	r3, r3
 8021148:	fb0a f607 	mul.w	r6, sl, r7
 802114c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021150:	fb0b 6603 	mla	r6, fp, r3, r6
 8021154:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021158:	fb00 6609 	mla	r6, r0, r9, r6
 802115c:	fb0e 6608 	mla	r6, lr, r8, r6
 8021160:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021164:	9600      	str	r6, [sp, #0]
 8021166:	2e00      	cmp	r6, #0
 8021168:	f000 80be 	beq.w	80212e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802116c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021170:	fb0b fc0c 	mul.w	ip, fp, ip
 8021174:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8021178:	fb0b f505 	mul.w	r5, fp, r5
 802117c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021180:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8021184:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021188:	44dc      	add	ip, fp
 802118a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802118e:	9501      	str	r5, [sp, #4]
 8021190:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8021194:	9503      	str	r5, [sp, #12]
 8021196:	9d01      	ldr	r5, [sp, #4]
 8021198:	9e02      	ldr	r6, [sp, #8]
 802119a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802119e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80211a2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80211a6:	fb0a fc0c 	mul.w	ip, sl, ip
 80211aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80211ae:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80211b2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80211b6:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80211ba:	4465      	add	r5, ip
 80211bc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80211c0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80211c4:	fb09 fc0c 	mul.w	ip, r9, ip
 80211c8:	fb09 f904 	mul.w	r9, r9, r4
 80211cc:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80211d0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80211d4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80211d8:	fb08 f404 	mul.w	r4, r8, r4
 80211dc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80211e0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80211e4:	fb08 f802 	mul.w	r8, r8, r2
 80211e8:	fb0a fa01 	mul.w	sl, sl, r1
 80211ec:	0a22      	lsrs	r2, r4, #8
 80211ee:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80211f2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80211f6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80211fa:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80211fe:	4414      	add	r4, r2
 8021200:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021204:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8021208:	0a2d      	lsrs	r5, r5, #8
 802120a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802120e:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021212:	9a03      	ldr	r2, [sp, #12]
 8021214:	8836      	ldrh	r6, [r6, #0]
 8021216:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802121a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802121e:	437d      	muls	r5, r7
 8021220:	4461      	add	r1, ip
 8021222:	0a24      	lsrs	r4, r4, #8
 8021224:	fb02 5503 	mla	r5, r2, r3, r5
 8021228:	0a09      	lsrs	r1, r1, #8
 802122a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802122e:	fb04 540e 	mla	r4, r4, lr, r5
 8021232:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021236:	fb01 4100 	mla	r1, r1, r0, r4
 802123a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802123e:	0a09      	lsrs	r1, r1, #8
 8021240:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021244:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8021248:	fb07 f70a 	mul.w	r7, r7, sl
 802124c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021250:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8021254:	fb03 7101 	mla	r1, r3, r1, r7
 8021258:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802125c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8021260:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021264:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8021268:	fb00 e101 	mla	r1, r0, r1, lr
 802126c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8021270:	9a00      	ldr	r2, [sp, #0]
 8021272:	b287      	uxth	r7, r0
 8021274:	437a      	muls	r2, r7
 8021276:	0a09      	lsrs	r1, r1, #8
 8021278:	1c53      	adds	r3, r2, #1
 802127a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802127e:	4321      	orrs	r1, r4
 8021280:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021284:	1235      	asrs	r5, r6, #8
 8021286:	0c0a      	lsrs	r2, r1, #16
 8021288:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802128c:	b2db      	uxtb	r3, r3
 802128e:	fb12 f207 	smulbb	r2, r2, r7
 8021292:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021296:	fb05 2503 	mla	r5, r5, r3, r2
 802129a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802129e:	10f2      	asrs	r2, r6, #3
 80212a0:	b2c8      	uxtb	r0, r1
 80212a2:	00f6      	lsls	r6, r6, #3
 80212a4:	fb14 f407 	smulbb	r4, r4, r7
 80212a8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80212ac:	b2f6      	uxtb	r6, r6
 80212ae:	fb10 f007 	smulbb	r0, r0, r7
 80212b2:	fb02 4203 	mla	r2, r2, r3, r4
 80212b6:	b2ad      	uxth	r5, r5
 80212b8:	fb06 0303 	mla	r3, r6, r3, r0
 80212bc:	b299      	uxth	r1, r3
 80212be:	b294      	uxth	r4, r2
 80212c0:	1c6b      	adds	r3, r5, #1
 80212c2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212c6:	1c62      	adds	r2, r4, #1
 80212c8:	1c4b      	adds	r3, r1, #1
 80212ca:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80212ce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80212d2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80212d6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80212da:	0952      	lsrs	r2, r2, #5
 80212dc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80212e0:	432b      	orrs	r3, r5
 80212e2:	4313      	orrs	r3, r2
 80212e4:	9a02      	ldr	r2, [sp, #8]
 80212e6:	8013      	strh	r3, [r2, #0]
 80212e8:	b005      	add	sp, #20
 80212ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80212ee:	2500      	movs	r5, #0
 80212f0:	e6ef      	b.n	80210d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80212f2:	2100      	movs	r1, #0
 80212f4:	460d      	mov	r5, r1
 80212f6:	e6f7      	b.n	80210e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80212f8:	2100      	movs	r1, #0
 80212fa:	e6f5      	b.n	80210e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80212fc:	4631      	mov	r1, r6
 80212fe:	e6f3      	b.n	80210e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8021300:	2400      	movs	r4, #0
 8021302:	e702      	b.n	802110a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8021304:	2200      	movs	r2, #0
 8021306:	4614      	mov	r4, r2
 8021308:	e70b      	b.n	8021122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802130a:	4602      	mov	r2, r0
 802130c:	4604      	mov	r4, r0
 802130e:	e708      	b.n	8021122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021310:	2200      	movs	r2, #0
 8021312:	e706      	b.n	8021122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8021314:	4632      	mov	r2, r6
 8021316:	e704      	b.n	8021122 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08021318 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021318:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802131c:	b09d      	sub	sp, #116	@ 0x74
 802131e:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8021322:	9219      	str	r2, [sp, #100]	@ 0x64
 8021324:	9307      	str	r3, [sp, #28]
 8021326:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8021328:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 802132c:	931a      	str	r3, [sp, #104]	@ 0x68
 802132e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8021330:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8021334:	901b      	str	r0, [sp, #108]	@ 0x6c
 8021336:	6850      	ldr	r0, [r2, #4]
 8021338:	6812      	ldr	r2, [r2, #0]
 802133a:	fb00 1303 	mla	r3, r0, r3, r1
 802133e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021342:	930a      	str	r3, [sp, #40]	@ 0x28
 8021344:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021346:	681b      	ldr	r3, [r3, #0]
 8021348:	9310      	str	r3, [sp, #64]	@ 0x40
 802134a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802134e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021350:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021352:	2b00      	cmp	r3, #0
 8021354:	dc03      	bgt.n	802135e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8021356:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8021358:	2b00      	cmp	r3, #0
 802135a:	f340 8375 	ble.w	8021a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802135e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8021360:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021364:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021368:	1e48      	subs	r0, r1, #1
 802136a:	1e57      	subs	r7, r2, #1
 802136c:	9b07      	ldr	r3, [sp, #28]
 802136e:	2b00      	cmp	r3, #0
 8021370:	f340 818e 	ble.w	8021690 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8021374:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021378:	ea4f 4326 	mov.w	r3, r6, asr #16
 802137c:	d406      	bmi.n	802138c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802137e:	4584      	cmp	ip, r0
 8021380:	da04      	bge.n	802138c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021382:	2b00      	cmp	r3, #0
 8021384:	db02      	blt.n	802138c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8021386:	42bb      	cmp	r3, r7
 8021388:	f2c0 8183 	blt.w	8021692 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802138c:	f11c 0c01 	adds.w	ip, ip, #1
 8021390:	f100 8173 	bmi.w	802167a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021394:	4561      	cmp	r1, ip
 8021396:	f2c0 8170 	blt.w	802167a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802139a:	3301      	adds	r3, #1
 802139c:	f100 816d 	bmi.w	802167a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80213a0:	429a      	cmp	r2, r3
 80213a2:	f2c0 816a 	blt.w	802167a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80213a6:	9b07      	ldr	r3, [sp, #28]
 80213a8:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80213aa:	9318      	str	r3, [sp, #96]	@ 0x60
 80213ac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80213ae:	2b00      	cmp	r3, #0
 80213b0:	f340 818c 	ble.w	80216cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 80213b4:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 80213b6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80213b8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80213bc:	689b      	ldr	r3, [r3, #8]
 80213be:	1422      	asrs	r2, r4, #16
 80213c0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80213c4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80213c8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80213cc:	f100 81cd 	bmi.w	802176a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80213d0:	f103 38ff 	add.w	r8, r3, #4294967295
 80213d4:	4542      	cmp	r2, r8
 80213d6:	f280 81c8 	bge.w	802176a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80213da:	f1bc 0f00 	cmp.w	ip, #0
 80213de:	f2c0 81c4 	blt.w	802176a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80213e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80213e6:	45c4      	cmp	ip, r8
 80213e8:	f280 81bf 	bge.w	802176a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80213ec:	b21b      	sxth	r3, r3
 80213ee:	fb0c 2203 	mla	r2, ip, r3, r2
 80213f2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80213f4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80213f8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80213fc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021400:	2800      	cmp	r0, #0
 8021402:	f000 81a9 	beq.w	8021758 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8021406:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802140a:	950c      	str	r5, [sp, #48]	@ 0x30
 802140c:	0e2d      	lsrs	r5, r5, #24
 802140e:	9513      	str	r5, [sp, #76]	@ 0x4c
 8021410:	b181      	cbz	r1, 8021434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8021412:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8021416:	3b01      	subs	r3, #1
 8021418:	009b      	lsls	r3, r3, #2
 802141a:	3304      	adds	r3, #4
 802141c:	eb08 0c03 	add.w	ip, r8, r3
 8021420:	f858 3003 	ldr.w	r3, [r8, r3]
 8021424:	9308      	str	r3, [sp, #32]
 8021426:	0e1b      	lsrs	r3, r3, #24
 8021428:	9311      	str	r3, [sp, #68]	@ 0x44
 802142a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802142e:	930d      	str	r3, [sp, #52]	@ 0x34
 8021430:	0e1b      	lsrs	r3, r3, #24
 8021432:	9314      	str	r3, [sp, #80]	@ 0x50
 8021434:	b280      	uxth	r0, r0
 8021436:	b289      	uxth	r1, r1
 8021438:	fb00 f901 	mul.w	r9, r0, r1
 802143c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021440:	0100      	lsls	r0, r0, #4
 8021442:	eba0 0809 	sub.w	r8, r0, r9
 8021446:	b289      	uxth	r1, r1
 8021448:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802144c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802144e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021450:	fa1f f888 	uxth.w	r8, r8
 8021454:	1a5b      	subs	r3, r3, r1
 8021456:	b29b      	uxth	r3, r3
 8021458:	fb08 f000 	mul.w	r0, r8, r0
 802145c:	fb03 000e 	mla	r0, r3, lr, r0
 8021460:	fb01 0005 	mla	r0, r1, r5, r0
 8021464:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021466:	fb09 0005 	mla	r0, r9, r5, r0
 802146a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802146e:	2800      	cmp	r0, #0
 8021470:	f000 80fa 	beq.w	8021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021474:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8021478:	d01b      	beq.n	80214b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802147a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802147e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021482:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021486:	fb0e fe02 	mul.w	lr, lr, r2
 802148a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802148e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021492:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021496:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802149a:	4452      	add	r2, sl
 802149c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80214a0:	0a12      	lsrs	r2, r2, #8
 80214a2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80214a6:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80214aa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80214ae:	ea42 020c 	orr.w	r2, r2, ip
 80214b2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80214b4:	2dff      	cmp	r5, #255	@ 0xff
 80214b6:	d021      	beq.n	80214fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 80214b8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80214ba:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80214be:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80214c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80214c4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80214c6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80214ca:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80214cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80214d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80214d4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80214d8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80214dc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80214e0:	44de      	add	lr, fp
 80214e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80214e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80214ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80214ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80214f2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80214f6:	ea4e 050a 	orr.w	r5, lr, sl
 80214fa:	950c      	str	r5, [sp, #48]	@ 0x30
 80214fc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80214fe:	2dff      	cmp	r5, #255	@ 0xff
 8021500:	d021      	beq.n	8021546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8021502:	9d08      	ldr	r5, [sp, #32]
 8021504:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021508:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802150a:	fb05 fb0b 	mul.w	fp, r5, fp
 802150e:	9d08      	ldr	r5, [sp, #32]
 8021510:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021514:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8021516:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802151a:	fb05 fa0a 	mul.w	sl, r5, sl
 802151e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021522:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021526:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802152a:	44de      	add	lr, fp
 802152c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021530:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021534:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021538:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802153c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021540:	ea4e 050a 	orr.w	r5, lr, sl
 8021544:	9508      	str	r5, [sp, #32]
 8021546:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021548:	2dff      	cmp	r5, #255	@ 0xff
 802154a:	d021      	beq.n	8021590 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802154c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802154e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021552:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021554:	fb05 fb0b 	mul.w	fp, r5, fp
 8021558:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802155a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802155e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8021560:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021564:	fb05 fa0a 	mul.w	sl, r5, sl
 8021568:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802156c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021570:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021574:	44de      	add	lr, fp
 8021576:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802157a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802157e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021582:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021586:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802158a:	ea4e 050a 	orr.w	r5, lr, sl
 802158e:	950d      	str	r5, [sp, #52]	@ 0x34
 8021590:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021592:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021596:	9d08      	ldr	r5, [sp, #32]
 8021598:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802159c:	fb08 fc0c 	mul.w	ip, r8, ip
 80215a0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80215a4:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80215a8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80215aa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80215ae:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80215b2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80215b4:	fb09 cc0e 	mla	ip, r9, lr, ip
 80215b8:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80215bc:	fb08 f80e 	mul.w	r8, r8, lr
 80215c0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80215c4:	fb03 8202 	mla	r2, r3, r2, r8
 80215c8:	9b08      	ldr	r3, [sp, #32]
 80215ca:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80215cc:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 80215d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80215d2:	fb01 220a 	mla	r2, r1, sl, r2
 80215d6:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 80215da:	fb09 2901 	mla	r9, r9, r1, r2
 80215de:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80215e0:	883b      	ldrh	r3, [r7, #0]
 80215e2:	4342      	muls	r2, r0
 80215e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80215e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80215ec:	1c50      	adds	r0, r2, #1
 80215ee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80215f2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80215f6:	ea4c 0c09 	orr.w	ip, ip, r9
 80215fa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80215fe:	1219      	asrs	r1, r3, #8
 8021600:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021604:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021608:	b2c0      	uxtb	r0, r0
 802160a:	fb12 f205 	smulbb	r2, r2, r5
 802160e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021612:	fb01 2100 	mla	r1, r1, r0, r2
 8021616:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802161a:	10da      	asrs	r2, r3, #3
 802161c:	fa5f fc8c 	uxtb.w	ip, ip
 8021620:	00db      	lsls	r3, r3, #3
 8021622:	fb1c fc05 	smulbb	ip, ip, r5
 8021626:	b2db      	uxtb	r3, r3
 8021628:	b289      	uxth	r1, r1
 802162a:	fb03 c300 	mla	r3, r3, r0, ip
 802162e:	fa1f fc83 	uxth.w	ip, r3
 8021632:	1c4b      	adds	r3, r1, #1
 8021634:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021638:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802163c:	fb1e fe05 	smulbb	lr, lr, r5
 8021640:	f10c 0301 	add.w	r3, ip, #1
 8021644:	fb02 e200 	mla	r2, r2, r0, lr
 8021648:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802164c:	b292      	uxth	r2, r2
 802164e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8021652:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021656:	430b      	orrs	r3, r1
 8021658:	1c51      	adds	r1, r2, #1
 802165a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802165e:	0952      	lsrs	r2, r2, #5
 8021660:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021664:	4313      	orrs	r3, r2
 8021666:	803b      	strh	r3, [r7, #0]
 8021668:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802166a:	441c      	add	r4, r3
 802166c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802166e:	441e      	add	r6, r3
 8021670:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021672:	3b01      	subs	r3, #1
 8021674:	3702      	adds	r7, #2
 8021676:	9318      	str	r3, [sp, #96]	@ 0x60
 8021678:	e698      	b.n	80213ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802167a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802167c:	441c      	add	r4, r3
 802167e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021680:	441e      	add	r6, r3
 8021682:	9b07      	ldr	r3, [sp, #28]
 8021684:	3b01      	subs	r3, #1
 8021686:	9307      	str	r3, [sp, #28]
 8021688:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802168a:	3302      	adds	r3, #2
 802168c:	930a      	str	r3, [sp, #40]	@ 0x28
 802168e:	e66d      	b.n	802136c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8021690:	d023      	beq.n	80216da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8021692:	9b07      	ldr	r3, [sp, #28]
 8021694:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8021696:	3b01      	subs	r3, #1
 8021698:	fb00 4003 	mla	r0, r0, r3, r4
 802169c:	1400      	asrs	r0, r0, #16
 802169e:	f53f ae82 	bmi.w	80213a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80216a2:	3901      	subs	r1, #1
 80216a4:	4288      	cmp	r0, r1
 80216a6:	f6bf ae7e 	bge.w	80213a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80216aa:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 80216ac:	fb01 6303 	mla	r3, r1, r3, r6
 80216b0:	141b      	asrs	r3, r3, #16
 80216b2:	f53f ae78 	bmi.w	80213a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80216b6:	3a01      	subs	r2, #1
 80216b8:	4293      	cmp	r3, r2
 80216ba:	f6bf ae74 	bge.w	80213a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80216be:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80216c2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80216c6:	f1bb 0f00 	cmp.w	fp, #0
 80216ca:	dc6c      	bgt.n	80217a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80216cc:	9b07      	ldr	r3, [sp, #28]
 80216ce:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80216d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80216d4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80216d8:	930a      	str	r3, [sp, #40]	@ 0x28
 80216da:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80216dc:	2b00      	cmp	r3, #0
 80216de:	f340 81b3 	ble.w	8021a48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80216e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80216e6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80216ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80216ee:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80216f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80216f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80216f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80216fc:	eef0 6a62 	vmov.f32	s13, s5
 8021700:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021704:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021708:	ee77 2a62 	vsub.f32	s5, s14, s5
 802170c:	ee16 4a90 	vmov	r4, s13
 8021710:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021714:	eef0 6a43 	vmov.f32	s13, s6
 8021718:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802171c:	ee12 2a90 	vmov	r2, s5
 8021720:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021724:	fb92 f3f3 	sdiv	r3, r2, r3
 8021728:	ee13 2a10 	vmov	r2, s6
 802172c:	9329      	str	r3, [sp, #164]	@ 0xa4
 802172e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021730:	fb92 f3f3 	sdiv	r3, r2, r3
 8021734:	932a      	str	r3, [sp, #168]	@ 0xa8
 8021736:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021738:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802173a:	3b01      	subs	r3, #1
 802173c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021740:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021742:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8021744:	bf08      	it	eq
 8021746:	4613      	moveq	r3, r2
 8021748:	ee16 6a90 	vmov	r6, s13
 802174c:	9307      	str	r3, [sp, #28]
 802174e:	eeb0 3a67 	vmov.f32	s6, s15
 8021752:	eef0 2a47 	vmov.f32	s5, s14
 8021756:	e5fb      	b.n	8021350 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8021758:	2900      	cmp	r1, #0
 802175a:	f43f ae6b 	beq.w	8021434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802175e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8021762:	9308      	str	r3, [sp, #32]
 8021764:	0e1b      	lsrs	r3, r3, #24
 8021766:	9311      	str	r3, [sp, #68]	@ 0x44
 8021768:	e664      	b.n	8021434 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802176a:	f112 0801 	adds.w	r8, r2, #1
 802176e:	f53f af7b 	bmi.w	8021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021772:	4543      	cmp	r3, r8
 8021774:	f6ff af78 	blt.w	8021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021778:	f11c 0801 	adds.w	r8, ip, #1
 802177c:	f53f af74 	bmi.w	8021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021780:	45c6      	cmp	lr, r8
 8021782:	f6ff af71 	blt.w	8021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8021786:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8021788:	9201      	str	r2, [sp, #4]
 802178a:	fa0f f28e 	sxth.w	r2, lr
 802178e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8021792:	e9cd c002 	strd	ip, r0, [sp, #8]
 8021796:	9200      	str	r2, [sp, #0]
 8021798:	b21b      	sxth	r3, r3
 802179a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802179c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802179e:	4639      	mov	r1, r7
 80217a0:	f7ff fc79 	bl	8021096 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80217a4:	e760      	b.n	8021668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80217a6:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 80217a8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80217aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217ae:	1427      	asrs	r7, r4, #16
 80217b0:	1433      	asrs	r3, r6, #16
 80217b2:	fb01 7303 	mla	r3, r1, r3, r7
 80217b6:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 80217ba:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80217be:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80217c2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80217c6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80217ca:	2a00      	cmp	r2, #0
 80217cc:	f000 8133 	beq.w	8021a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80217d0:	687d      	ldr	r5, [r7, #4]
 80217d2:	950e      	str	r5, [sp, #56]	@ 0x38
 80217d4:	0e2d      	lsrs	r5, r5, #24
 80217d6:	9515      	str	r5, [sp, #84]	@ 0x54
 80217d8:	b178      	cbz	r0, 80217fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80217da:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 80217de:	3901      	subs	r1, #1
 80217e0:	0089      	lsls	r1, r1, #2
 80217e2:	3104      	adds	r1, #4
 80217e4:	eb07 0e01 	add.w	lr, r7, r1
 80217e8:	5879      	ldr	r1, [r7, r1]
 80217ea:	9109      	str	r1, [sp, #36]	@ 0x24
 80217ec:	0e09      	lsrs	r1, r1, #24
 80217ee:	9112      	str	r1, [sp, #72]	@ 0x48
 80217f0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80217f4:	910f      	str	r1, [sp, #60]	@ 0x3c
 80217f6:	0e09      	lsrs	r1, r1, #24
 80217f8:	9116      	str	r1, [sp, #88]	@ 0x58
 80217fa:	b292      	uxth	r2, r2
 80217fc:	b280      	uxth	r0, r0
 80217fe:	fb02 f800 	mul.w	r8, r2, r0
 8021802:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021806:	0112      	lsls	r2, r2, #4
 8021808:	eba2 0e08 	sub.w	lr, r2, r8
 802180c:	b280      	uxth	r0, r0
 802180e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8021812:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8021814:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021816:	fa1f fe8e 	uxth.w	lr, lr
 802181a:	1a12      	subs	r2, r2, r0
 802181c:	b292      	uxth	r2, r2
 802181e:	fb0e f101 	mul.w	r1, lr, r1
 8021822:	fb02 110c 	mla	r1, r2, ip, r1
 8021826:	fb00 1105 	mla	r1, r0, r5, r1
 802182a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802182c:	fb08 1105 	mla	r1, r8, r5, r1
 8021830:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021834:	2900      	cmp	r1, #0
 8021836:	f000 80f5 	beq.w	8021a24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802183a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802183e:	d019      	beq.n	8021874 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8021840:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8021844:	fb0c fa0a 	mul.w	sl, ip, sl
 8021848:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802184c:	fb0c fc03 	mul.w	ip, ip, r3
 8021850:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021854:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021858:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802185c:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8021860:	4453      	add	r3, sl
 8021862:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021866:	0a1b      	lsrs	r3, r3, #8
 8021868:	0a3f      	lsrs	r7, r7, #8
 802186a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802186e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021872:	433b      	orrs	r3, r7
 8021874:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021876:	2dff      	cmp	r5, #255	@ 0xff
 8021878:	d020      	beq.n	80218bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802187a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802187c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021880:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8021882:	436f      	muls	r7, r5
 8021884:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021886:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802188a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802188c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021890:	fb05 fa0a 	mul.w	sl, r5, sl
 8021894:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021898:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802189c:	44bc      	add	ip, r7
 802189e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80218a2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80218a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218aa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80218b2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80218b6:	ea4c 050a 	orr.w	r5, ip, sl
 80218ba:	950e      	str	r5, [sp, #56]	@ 0x38
 80218bc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80218be:	2dff      	cmp	r5, #255	@ 0xff
 80218c0:	d020      	beq.n	8021904 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80218c2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80218c4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80218c8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80218ca:	436f      	muls	r7, r5
 80218cc:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80218ce:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80218d2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80218d4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80218d8:	fb05 fa0a 	mul.w	sl, r5, sl
 80218dc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80218e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80218e4:	44bc      	add	ip, r7
 80218e6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80218ea:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80218ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80218f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80218f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80218fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80218fe:	ea4c 050a 	orr.w	r5, ip, sl
 8021902:	9509      	str	r5, [sp, #36]	@ 0x24
 8021904:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021906:	2dff      	cmp	r5, #255	@ 0xff
 8021908:	d020      	beq.n	802194c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802190a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802190c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021910:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8021912:	436f      	muls	r7, r5
 8021914:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021916:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802191a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802191c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021920:	fb05 fa0a 	mul.w	sl, r5, sl
 8021924:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021928:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802192c:	44bc      	add	ip, r7
 802192e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021932:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021936:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802193a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802193e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021942:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021946:	ea4c 050a 	orr.w	r5, ip, sl
 802194a:	950f      	str	r5, [sp, #60]	@ 0x3c
 802194c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802194e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8021952:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8021954:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8021958:	fb0e f707 	mul.w	r7, lr, r7
 802195c:	fb02 770c 	mla	r7, r2, ip, r7
 8021960:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021964:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021966:	fb00 770c 	mla	r7, r0, ip, r7
 802196a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802196e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8021970:	fb08 770c 	mla	r7, r8, ip, r7
 8021974:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8021978:	fb0e fe0c 	mul.w	lr, lr, ip
 802197c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021980:	fb02 e303 	mla	r3, r2, r3, lr
 8021984:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021986:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021988:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 802198c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802198e:	fb00 330a 	mla	r3, r0, sl, r3
 8021992:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8021996:	fb08 3c0c 	mla	ip, r8, ip, r3
 802199a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802199c:	f8b9 0000 	ldrh.w	r0, [r9]
 80219a0:	4359      	muls	r1, r3
 80219a2:	0a3f      	lsrs	r7, r7, #8
 80219a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80219a8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80219ac:	1c4b      	adds	r3, r1, #1
 80219ae:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80219b2:	ea47 070c 	orr.w	r7, r7, ip
 80219b6:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80219ba:	1202      	asrs	r2, r0, #8
 80219bc:	0c3b      	lsrs	r3, r7, #16
 80219be:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80219c2:	b2c9      	uxtb	r1, r1
 80219c4:	fb13 f305 	smulbb	r3, r3, r5
 80219c8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 80219cc:	fb02 3201 	mla	r2, r2, r1, r3
 80219d0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80219d4:	10c3      	asrs	r3, r0, #3
 80219d6:	b2ff      	uxtb	r7, r7
 80219d8:	00c0      	lsls	r0, r0, #3
 80219da:	b2c0      	uxtb	r0, r0
 80219dc:	fb17 f705 	smulbb	r7, r7, r5
 80219e0:	fb00 7001 	mla	r0, r0, r1, r7
 80219e4:	b292      	uxth	r2, r2
 80219e6:	fb1c fc05 	smulbb	ip, ip, r5
 80219ea:	b280      	uxth	r0, r0
 80219ec:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80219f0:	fb03 c301 	mla	r3, r3, r1, ip
 80219f4:	1c51      	adds	r1, r2, #1
 80219f6:	f100 0c01 	add.w	ip, r0, #1
 80219fa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80219fe:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8021a02:	b29b      	uxth	r3, r3
 8021a04:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8021a08:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8021a0c:	ea4c 0202 	orr.w	r2, ip, r2
 8021a10:	f103 0c01 	add.w	ip, r3, #1
 8021a14:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021a18:	095b      	lsrs	r3, r3, #5
 8021a1a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021a1e:	431a      	orrs	r2, r3
 8021a20:	f8a9 2000 	strh.w	r2, [r9]
 8021a24:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8021a26:	441c      	add	r4, r3
 8021a28:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8021a2a:	f109 0902 	add.w	r9, r9, #2
 8021a2e:	441e      	add	r6, r3
 8021a30:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021a34:	e647      	b.n	80216c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8021a36:	2800      	cmp	r0, #0
 8021a38:	f43f aedf 	beq.w	80217fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021a3c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8021a40:	9109      	str	r1, [sp, #36]	@ 0x24
 8021a42:	0e09      	lsrs	r1, r1, #24
 8021a44:	9112      	str	r1, [sp, #72]	@ 0x48
 8021a46:	e6d8      	b.n	80217fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8021a48:	b01d      	add	sp, #116	@ 0x74
 8021a4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021a4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8021a4e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a52:	b085      	sub	sp, #20
 8021a54:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8021a58:	9102      	str	r1, [sp, #8]
 8021a5a:	2c00      	cmp	r4, #0
 8021a5c:	fb04 7103 	mla	r1, r4, r3, r7
 8021a60:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8021a64:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8021a68:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8021a6c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8021a70:	f2c0 810c 	blt.w	8021c8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021a74:	45a6      	cmp	lr, r4
 8021a76:	f340 8109 	ble.w	8021c8c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8021a7a:	2f00      	cmp	r7, #0
 8021a7c:	f2c0 8104 	blt.w	8021c88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021a80:	42bb      	cmp	r3, r7
 8021a82:	f340 8101 	ble.w	8021c88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8021a86:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8021a8a:	1c7a      	adds	r2, r7, #1
 8021a8c:	f100 8101 	bmi.w	8021c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021a90:	4293      	cmp	r3, r2
 8021a92:	f340 80fe 	ble.w	8021c92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8021a96:	2e00      	cmp	r6, #0
 8021a98:	f000 80fd 	beq.w	8021c96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8021a9c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8021aa0:	3401      	adds	r4, #1
 8021aa2:	f100 80fc 	bmi.w	8021c9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021aa6:	45a6      	cmp	lr, r4
 8021aa8:	f340 80f9 	ble.w	8021c9e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8021aac:	2800      	cmp	r0, #0
 8021aae:	f000 80f9 	beq.w	8021ca4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8021ab2:	2f00      	cmp	r7, #0
 8021ab4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8021ab8:	f2c0 80ef 	blt.w	8021c9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021abc:	42bb      	cmp	r3, r7
 8021abe:	f340 80ec 	ble.w	8021c9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8021ac2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8021ac6:	3701      	adds	r7, #1
 8021ac8:	f100 80ef 	bmi.w	8021caa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021acc:	42bb      	cmp	r3, r7
 8021ace:	f340 80ec 	ble.w	8021caa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8021ad2:	2e00      	cmp	r6, #0
 8021ad4:	f000 80eb 	beq.w	8021cae <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8021ad8:	6852      	ldr	r2, [r2, #4]
 8021ada:	b2b6      	uxth	r6, r6
 8021adc:	b280      	uxth	r0, r0
 8021ade:	fb00 fe06 	mul.w	lr, r0, r6
 8021ae2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021ae6:	0136      	lsls	r6, r6, #4
 8021ae8:	eba6 070e 	sub.w	r7, r6, lr
 8021aec:	b280      	uxth	r0, r0
 8021aee:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8021af2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8021af6:	b2bf      	uxth	r7, r7
 8021af8:	1a1b      	subs	r3, r3, r0
 8021afa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021afe:	b29b      	uxth	r3, r3
 8021b00:	fb07 f60a 	mul.w	r6, r7, sl
 8021b04:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021b08:	fb0b 6603 	mla	r6, fp, r3, r6
 8021b0c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8021b10:	fb00 6609 	mla	r6, r0, r9, r6
 8021b14:	fb0e 6608 	mla	r6, lr, r8, r6
 8021b18:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021b1c:	9600      	str	r6, [sp, #0]
 8021b1e:	2e00      	cmp	r6, #0
 8021b20:	f000 80af 	beq.w	8021c82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8021b24:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021b28:	fb0b fc0c 	mul.w	ip, fp, ip
 8021b2c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8021b30:	fb0b f505 	mul.w	r5, fp, r5
 8021b34:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8021b38:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8021b3c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021b40:	44dc      	add	ip, fp
 8021b42:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b46:	9501      	str	r5, [sp, #4]
 8021b48:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8021b4c:	9503      	str	r5, [sp, #12]
 8021b4e:	9d01      	ldr	r5, [sp, #4]
 8021b50:	9e02      	ldr	r6, [sp, #8]
 8021b52:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8021b56:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8021b5a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8021b5e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021b62:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8021b66:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8021b6a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021b6e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021b72:	4465      	add	r5, ip
 8021b74:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021b78:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8021b7c:	fb09 fc0c 	mul.w	ip, r9, ip
 8021b80:	fb09 f904 	mul.w	r9, r9, r4
 8021b84:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8021b88:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021b8c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8021b90:	fb08 f404 	mul.w	r4, r8, r4
 8021b94:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021b98:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021b9c:	fb08 f802 	mul.w	r8, r8, r2
 8021ba0:	fb0a fa01 	mul.w	sl, sl, r1
 8021ba4:	0a22      	lsrs	r2, r4, #8
 8021ba6:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8021baa:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021bae:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8021bb2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8021bb6:	4414      	add	r4, r2
 8021bb8:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8021bbc:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8021bc0:	0a2d      	lsrs	r5, r5, #8
 8021bc2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021bc6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021bca:	9a03      	ldr	r2, [sp, #12]
 8021bcc:	8836      	ldrh	r6, [r6, #0]
 8021bce:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021bd2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021bd6:	437d      	muls	r5, r7
 8021bd8:	4461      	add	r1, ip
 8021bda:	0a24      	lsrs	r4, r4, #8
 8021bdc:	fb02 5503 	mla	r5, r2, r3, r5
 8021be0:	0a09      	lsrs	r1, r1, #8
 8021be2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8021be6:	fb04 540e 	mla	r4, r4, lr, r5
 8021bea:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021bee:	fb01 4100 	mla	r1, r1, r0, r4
 8021bf2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021bf6:	0a09      	lsrs	r1, r1, #8
 8021bf8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021bfc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8021c00:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021c04:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8021c08:	fb07 f70a 	mul.w	r7, r7, sl
 8021c0c:	fb03 7101 	mla	r1, r3, r1, r7
 8021c10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021c14:	9b00      	ldr	r3, [sp, #0]
 8021c16:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8021c1a:	fb0e 1e08 	mla	lr, lr, r8, r1
 8021c1e:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8021c22:	fb00 e101 	mla	r1, r0, r1, lr
 8021c26:	43da      	mvns	r2, r3
 8021c28:	1233      	asrs	r3, r6, #8
 8021c2a:	b2d2      	uxtb	r2, r2
 8021c2c:	10f0      	asrs	r0, r6, #3
 8021c2e:	0a09      	lsrs	r1, r1, #8
 8021c30:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021c34:	00f6      	lsls	r6, r6, #3
 8021c36:	4353      	muls	r3, r2
 8021c38:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8021c3c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021c40:	b2f6      	uxtb	r6, r6
 8021c42:	4321      	orrs	r1, r4
 8021c44:	4350      	muls	r0, r2
 8021c46:	4356      	muls	r6, r2
 8021c48:	1c5a      	adds	r2, r3, #1
 8021c4a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021c4e:	0c0b      	lsrs	r3, r1, #16
 8021c50:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021c54:	1c42      	adds	r2, r0, #1
 8021c56:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021c5a:	0a0a      	lsrs	r2, r1, #8
 8021c5c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021c60:	021b      	lsls	r3, r3, #8
 8021c62:	00d2      	lsls	r2, r2, #3
 8021c64:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021c68:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021c6c:	4313      	orrs	r3, r2
 8021c6e:	1c72      	adds	r2, r6, #1
 8021c70:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8021c74:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8021c78:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8021c7c:	4319      	orrs	r1, r3
 8021c7e:	9b02      	ldr	r3, [sp, #8]
 8021c80:	8019      	strh	r1, [r3, #0]
 8021c82:	b005      	add	sp, #20
 8021c84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021c88:	2500      	movs	r5, #0
 8021c8a:	e6fe      	b.n	8021a8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8021c8c:	2100      	movs	r1, #0
 8021c8e:	460d      	mov	r5, r1
 8021c90:	e706      	b.n	8021aa0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021c92:	2100      	movs	r1, #0
 8021c94:	e704      	b.n	8021aa0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021c96:	4631      	mov	r1, r6
 8021c98:	e702      	b.n	8021aa0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8021c9a:	2400      	movs	r4, #0
 8021c9c:	e713      	b.n	8021ac6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8021c9e:	2200      	movs	r2, #0
 8021ca0:	4614      	mov	r4, r2
 8021ca2:	e71a      	b.n	8021ada <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021ca4:	4602      	mov	r2, r0
 8021ca6:	4604      	mov	r4, r0
 8021ca8:	e717      	b.n	8021ada <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021caa:	2200      	movs	r2, #0
 8021cac:	e715      	b.n	8021ada <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8021cae:	4632      	mov	r2, r6
 8021cb0:	e713      	b.n	8021ada <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08021cb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cb8:	b09b      	sub	sp, #108	@ 0x6c
 8021cba:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8021cbe:	9218      	str	r2, [sp, #96]	@ 0x60
 8021cc0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8021cc2:	9116      	str	r1, [sp, #88]	@ 0x58
 8021cc4:	9307      	str	r3, [sp, #28]
 8021cc6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8021cca:	9019      	str	r0, [sp, #100]	@ 0x64
 8021ccc:	6850      	ldr	r0, [r2, #4]
 8021cce:	6812      	ldr	r2, [r2, #0]
 8021cd0:	fb00 1303 	mla	r3, r0, r3, r1
 8021cd4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021cd8:	930a      	str	r3, [sp, #40]	@ 0x28
 8021cda:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021cdc:	681b      	ldr	r3, [r3, #0]
 8021cde:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021ce0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8021ce2:	2b00      	cmp	r3, #0
 8021ce4:	dc03      	bgt.n	8021cee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021ce6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021ce8:	2b00      	cmp	r3, #0
 8021cea:	f340 8386 	ble.w	80223fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8021cee:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021cf0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021cf4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021cf8:	1e48      	subs	r0, r1, #1
 8021cfa:	1e57      	subs	r7, r2, #1
 8021cfc:	9b07      	ldr	r3, [sp, #28]
 8021cfe:	2b00      	cmp	r3, #0
 8021d00:	f340 8166 	ble.w	8021fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8021d04:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8021d08:	ea4f 4326 	mov.w	r3, r6, asr #16
 8021d0c:	d406      	bmi.n	8021d1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021d0e:	4584      	cmp	ip, r0
 8021d10:	da04      	bge.n	8021d1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021d12:	2b00      	cmp	r3, #0
 8021d14:	db02      	blt.n	8021d1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8021d16:	42bb      	cmp	r3, r7
 8021d18:	f2c0 815b 	blt.w	8021fd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021d1c:	f11c 0c01 	adds.w	ip, ip, #1
 8021d20:	f100 814b 	bmi.w	8021fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021d24:	4561      	cmp	r1, ip
 8021d26:	f2c0 8148 	blt.w	8021fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021d2a:	3301      	adds	r3, #1
 8021d2c:	f100 8145 	bmi.w	8021fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021d30:	429a      	cmp	r2, r3
 8021d32:	f2c0 8142 	blt.w	8021fba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8021d36:	9b07      	ldr	r3, [sp, #28]
 8021d38:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8021d3a:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021d3c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021d3e:	2b00      	cmp	r3, #0
 8021d40:	f340 8165 	ble.w	802200e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8021d44:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8021d46:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021d48:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8021d4c:	689b      	ldr	r3, [r3, #8]
 8021d4e:	1422      	asrs	r2, r4, #16
 8021d50:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8021d54:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8021d58:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8021d5c:	f100 81d5 	bmi.w	802210a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021d60:	f103 38ff 	add.w	r8, r3, #4294967295
 8021d64:	4542      	cmp	r2, r8
 8021d66:	f280 81d0 	bge.w	802210a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021d6a:	f1bc 0f00 	cmp.w	ip, #0
 8021d6e:	f2c0 81cc 	blt.w	802210a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021d72:	f10e 38ff 	add.w	r8, lr, #4294967295
 8021d76:	45c4      	cmp	ip, r8
 8021d78:	f280 81c7 	bge.w	802210a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8021d7c:	b21b      	sxth	r3, r3
 8021d7e:	fb0c 2203 	mla	r2, ip, r3, r2
 8021d82:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8021d84:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8021d88:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8021d8c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8021d90:	2900      	cmp	r1, #0
 8021d92:	f000 8182 	beq.w	802209a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8021d96:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8021d9a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8021d9c:	0e2d      	lsrs	r5, r5, #24
 8021d9e:	9512      	str	r5, [sp, #72]	@ 0x48
 8021da0:	b180      	cbz	r0, 8021dc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8021da2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8021da6:	3b01      	subs	r3, #1
 8021da8:	009b      	lsls	r3, r3, #2
 8021daa:	3304      	adds	r3, #4
 8021dac:	eb08 0c03 	add.w	ip, r8, r3
 8021db0:	f858 3003 	ldr.w	r3, [r8, r3]
 8021db4:	9308      	str	r3, [sp, #32]
 8021db6:	0e1b      	lsrs	r3, r3, #24
 8021db8:	9310      	str	r3, [sp, #64]	@ 0x40
 8021dba:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8021dbe:	930c      	str	r3, [sp, #48]	@ 0x30
 8021dc0:	0e1b      	lsrs	r3, r3, #24
 8021dc2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021dc4:	b289      	uxth	r1, r1
 8021dc6:	b280      	uxth	r0, r0
 8021dc8:	fb01 f900 	mul.w	r9, r1, r0
 8021dcc:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8021dd0:	0109      	lsls	r1, r1, #4
 8021dd2:	eba1 0809 	sub.w	r8, r1, r9
 8021dd6:	b280      	uxth	r0, r0
 8021dd8:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8021ddc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8021dde:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021de0:	fa1f f888 	uxth.w	r8, r8
 8021de4:	1a09      	subs	r1, r1, r0
 8021de6:	b289      	uxth	r1, r1
 8021de8:	fb08 f303 	mul.w	r3, r8, r3
 8021dec:	fb01 330e 	mla	r3, r1, lr, r3
 8021df0:	fb00 3305 	mla	r3, r0, r5, r3
 8021df4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021df6:	fb09 3305 	mla	r3, r9, r5, r3
 8021dfa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021dfe:	2b00      	cmp	r3, #0
 8021e00:	f000 80d2 	beq.w	8021fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8021e04:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8021e08:	d01b      	beq.n	8021e42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8021e0a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8021e0e:	fb0e fa0a 	mul.w	sl, lr, sl
 8021e12:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021e16:	fb0e fe02 	mul.w	lr, lr, r2
 8021e1a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8021e1e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021e22:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021e26:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8021e2a:	4452      	add	r2, sl
 8021e2c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8021e30:	0a12      	lsrs	r2, r2, #8
 8021e32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021e36:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8021e3a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021e3e:	ea42 020c 	orr.w	r2, r2, ip
 8021e42:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021e44:	2dff      	cmp	r5, #255	@ 0xff
 8021e46:	d021      	beq.n	8021e8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8021e48:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021e4a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021e4e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021e50:	fb05 fb0b 	mul.w	fp, r5, fp
 8021e54:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021e56:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021e5a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8021e5c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021e60:	fb05 fa0a 	mul.w	sl, r5, sl
 8021e64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021e68:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021e6c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021e70:	44de      	add	lr, fp
 8021e72:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021e76:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021e7a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e7e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021e82:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021e86:	ea4e 050a 	orr.w	r5, lr, sl
 8021e8a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8021e8c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021e8e:	2dff      	cmp	r5, #255	@ 0xff
 8021e90:	d021      	beq.n	8021ed6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8021e92:	9d08      	ldr	r5, [sp, #32]
 8021e94:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021e98:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021e9a:	fb05 fb0b 	mul.w	fp, r5, fp
 8021e9e:	9d08      	ldr	r5, [sp, #32]
 8021ea0:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8021ea4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8021ea6:	fb05 fa0e 	mul.w	sl, r5, lr
 8021eaa:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021eae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021eb2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021eb6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021eba:	44de      	add	lr, fp
 8021ebc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021ec0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ec4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021ec8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021ecc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021ed0:	ea4e 050a 	orr.w	r5, lr, sl
 8021ed4:	9508      	str	r5, [sp, #32]
 8021ed6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021ed8:	2dff      	cmp	r5, #255	@ 0xff
 8021eda:	d021      	beq.n	8021f20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8021edc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021ede:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8021ee2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021ee4:	fb05 fb0b 	mul.w	fp, r5, fp
 8021ee8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021eea:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8021eee:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8021ef0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021ef4:	fb05 fa0a 	mul.w	sl, r5, sl
 8021ef8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021efc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021f00:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021f04:	44de      	add	lr, fp
 8021f06:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021f0a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021f0e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021f12:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021f16:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021f1a:	ea4e 050a 	orr.w	r5, lr, sl
 8021f1e:	950c      	str	r5, [sp, #48]	@ 0x30
 8021f20:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021f22:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8021f26:	9d08      	ldr	r5, [sp, #32]
 8021f28:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8021f2c:	fb08 fc0c 	mul.w	ip, r8, ip
 8021f30:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021f34:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021f38:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8021f3a:	fb00 cc0e 	mla	ip, r0, lr, ip
 8021f3e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8021f42:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8021f44:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021f48:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8021f4c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8021f50:	fb08 f80e 	mul.w	r8, r8, lr
 8021f54:	fb01 8202 	mla	r2, r1, r2, r8
 8021f58:	9908      	ldr	r1, [sp, #32]
 8021f5a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8021f5e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8021f60:	fb00 220a 	mla	r2, r0, sl, r2
 8021f64:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8021f68:	fb09 2900 	mla	r9, r9, r0, r2
 8021f6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021f74:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021f78:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8021f7c:	ea4c 0c09 	orr.w	ip, ip, r9
 8021f80:	2bff      	cmp	r3, #255	@ 0xff
 8021f82:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8021f86:	f040 8091 	bne.w	80220ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021f8a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8021f8e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8021f92:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021f96:	f022 0207 	bic.w	r2, r2, #7
 8021f9a:	431a      	orrs	r2, r3
 8021f9c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021fa0:	ea4c 0c02 	orr.w	ip, ip, r2
 8021fa4:	f8a7 c000 	strh.w	ip, [r7]
 8021fa8:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021faa:	441c      	add	r4, r3
 8021fac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021fae:	441e      	add	r6, r3
 8021fb0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8021fb2:	3b01      	subs	r3, #1
 8021fb4:	3702      	adds	r7, #2
 8021fb6:	9317      	str	r3, [sp, #92]	@ 0x5c
 8021fb8:	e6c0      	b.n	8021d3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8021fba:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021fbc:	441c      	add	r4, r3
 8021fbe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021fc0:	441e      	add	r6, r3
 8021fc2:	9b07      	ldr	r3, [sp, #28]
 8021fc4:	3b01      	subs	r3, #1
 8021fc6:	9307      	str	r3, [sp, #28]
 8021fc8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8021fca:	3302      	adds	r3, #2
 8021fcc:	930a      	str	r3, [sp, #40]	@ 0x28
 8021fce:	e695      	b.n	8021cfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021fd0:	d024      	beq.n	802201c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8021fd2:	9b07      	ldr	r3, [sp, #28]
 8021fd4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8021fd6:	3b01      	subs	r3, #1
 8021fd8:	fb00 4003 	mla	r0, r0, r3, r4
 8021fdc:	1400      	asrs	r0, r0, #16
 8021fde:	f53f aeaa 	bmi.w	8021d36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021fe2:	3901      	subs	r1, #1
 8021fe4:	4288      	cmp	r0, r1
 8021fe6:	f6bf aea6 	bge.w	8021d36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021fea:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8021fec:	fb01 6303 	mla	r3, r1, r3, r6
 8021ff0:	141b      	asrs	r3, r3, #16
 8021ff2:	f53f aea0 	bmi.w	8021d36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021ff6:	3a01      	subs	r2, #1
 8021ff8:	4293      	cmp	r3, r2
 8021ffa:	f6bf ae9c 	bge.w	8021d36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8021ffe:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8022002:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8022006:	f1bb 0f00 	cmp.w	fp, #0
 802200a:	f300 809a 	bgt.w	8022142 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802200e:	9b07      	ldr	r3, [sp, #28]
 8022010:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022014:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022016:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802201a:	930a      	str	r3, [sp, #40]	@ 0x28
 802201c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802201e:	2b00      	cmp	r3, #0
 8022020:	f340 81eb 	ble.w	80223fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8022024:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022028:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802202c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022030:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022032:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022036:	ee31 1a05 	vadd.f32	s2, s2, s10
 802203a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802203e:	eef0 6a62 	vmov.f32	s13, s5
 8022042:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802204a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802204e:	ee16 4a90 	vmov	r4, s13
 8022052:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022056:	eef0 6a43 	vmov.f32	s13, s6
 802205a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802205e:	ee12 2a90 	vmov	r2, s5
 8022062:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022066:	fb92 f3f3 	sdiv	r3, r2, r3
 802206a:	ee13 2a10 	vmov	r2, s6
 802206e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8022070:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022072:	fb92 f3f3 	sdiv	r3, r2, r3
 8022076:	9328      	str	r3, [sp, #160]	@ 0xa0
 8022078:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802207a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802207c:	3b01      	subs	r3, #1
 802207e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022082:	9316      	str	r3, [sp, #88]	@ 0x58
 8022084:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022086:	bf08      	it	eq
 8022088:	4613      	moveq	r3, r2
 802208a:	ee16 6a90 	vmov	r6, s13
 802208e:	9307      	str	r3, [sp, #28]
 8022090:	eeb0 3a67 	vmov.f32	s6, s15
 8022094:	eef0 2a47 	vmov.f32	s5, s14
 8022098:	e622      	b.n	8021ce0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802209a:	2800      	cmp	r0, #0
 802209c:	f43f ae92 	beq.w	8021dc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80220a0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80220a4:	9308      	str	r3, [sp, #32]
 80220a6:	0e1b      	lsrs	r3, r3, #24
 80220a8:	9310      	str	r3, [sp, #64]	@ 0x40
 80220aa:	e68b      	b.n	8021dc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 80220ac:	8839      	ldrh	r1, [r7, #0]
 80220ae:	4dd4      	ldr	r5, [pc, #848]	@ (8022400 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80220b0:	43db      	mvns	r3, r3
 80220b2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 80220b6:	fa5f f883 	uxtb.w	r8, r3
 80220ba:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80220be:	fb0e fe08 	mul.w	lr, lr, r8
 80220c2:	10c8      	asrs	r0, r1, #3
 80220c4:	00cb      	lsls	r3, r1, #3
 80220c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80220ca:	f10e 0101 	add.w	r1, lr, #1
 80220ce:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80220d2:	fb00 f008 	mul.w	r0, r0, r8
 80220d6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80220da:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80220de:	f100 0e01 	add.w	lr, r0, #1
 80220e2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80220e6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80220ea:	b2db      	uxtb	r3, r3
 80220ec:	b2c9      	uxtb	r1, r1
 80220ee:	00d2      	lsls	r2, r2, #3
 80220f0:	fb03 f308 	mul.w	r3, r3, r8
 80220f4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80220f8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80220fc:	430a      	orrs	r2, r1
 80220fe:	1c59      	adds	r1, r3, #1
 8022100:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022104:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8022108:	e748      	b.n	8021f9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802210a:	f112 0801 	adds.w	r8, r2, #1
 802210e:	f53f af4b 	bmi.w	8021fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022112:	4543      	cmp	r3, r8
 8022114:	f6ff af48 	blt.w	8021fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022118:	f11c 0801 	adds.w	r8, ip, #1
 802211c:	f53f af44 	bmi.w	8021fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022120:	45c6      	cmp	lr, r8
 8022122:	f6ff af41 	blt.w	8021fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022126:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802212a:	fa0f f28e 	sxth.w	r2, lr
 802212e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8022132:	9200      	str	r2, [sp, #0]
 8022134:	b21b      	sxth	r3, r3
 8022136:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022138:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802213a:	4639      	mov	r1, r7
 802213c:	f7ff fc87 	bl	8021a4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8022140:	e732      	b.n	8021fa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022142:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022144:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022146:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802214a:	1421      	asrs	r1, r4, #16
 802214c:	1433      	asrs	r3, r6, #16
 802214e:	fb07 1303 	mla	r3, r7, r3, r1
 8022152:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8022154:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8022158:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802215c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022160:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022164:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8022168:	2a00      	cmp	r2, #0
 802216a:	f000 8107 	beq.w	802237c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802216e:	684d      	ldr	r5, [r1, #4]
 8022170:	950d      	str	r5, [sp, #52]	@ 0x34
 8022172:	0e2d      	lsrs	r5, r5, #24
 8022174:	9514      	str	r5, [sp, #80]	@ 0x50
 8022176:	b178      	cbz	r0, 8022198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022178:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 802217c:	3f01      	subs	r7, #1
 802217e:	00bf      	lsls	r7, r7, #2
 8022180:	3704      	adds	r7, #4
 8022182:	eb01 0e07 	add.w	lr, r1, r7
 8022186:	59c9      	ldr	r1, [r1, r7]
 8022188:	9109      	str	r1, [sp, #36]	@ 0x24
 802218a:	0e09      	lsrs	r1, r1, #24
 802218c:	9111      	str	r1, [sp, #68]	@ 0x44
 802218e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8022192:	910e      	str	r1, [sp, #56]	@ 0x38
 8022194:	0e09      	lsrs	r1, r1, #24
 8022196:	9115      	str	r1, [sp, #84]	@ 0x54
 8022198:	b292      	uxth	r2, r2
 802219a:	b280      	uxth	r0, r0
 802219c:	fb02 f900 	mul.w	r9, r2, r0
 80221a0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 80221a4:	0112      	lsls	r2, r2, #4
 80221a6:	eba2 0e09 	sub.w	lr, r2, r9
 80221aa:	b280      	uxth	r0, r0
 80221ac:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 80221b0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80221b2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80221b4:	fa1f fe8e 	uxth.w	lr, lr
 80221b8:	1a09      	subs	r1, r1, r0
 80221ba:	b289      	uxth	r1, r1
 80221bc:	fb0e f202 	mul.w	r2, lr, r2
 80221c0:	fb01 220c 	mla	r2, r1, ip, r2
 80221c4:	fb00 2205 	mla	r2, r0, r5, r2
 80221c8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80221ca:	fb09 2205 	mla	r2, r9, r5, r2
 80221ce:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80221d2:	2a00      	cmp	r2, #0
 80221d4:	f000 80c9 	beq.w	802236a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80221d8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80221dc:	d019      	beq.n	8022212 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80221de:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80221e2:	fb0c fa0a 	mul.w	sl, ip, sl
 80221e6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80221ea:	fb0c fc03 	mul.w	ip, ip, r3
 80221ee:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80221f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80221f6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80221fa:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80221fe:	4453      	add	r3, sl
 8022200:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8022204:	0a1b      	lsrs	r3, r3, #8
 8022206:	0a3f      	lsrs	r7, r7, #8
 8022208:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802220c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8022210:	433b      	orrs	r3, r7
 8022212:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8022214:	2dff      	cmp	r5, #255	@ 0xff
 8022216:	d020      	beq.n	802225a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8022218:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802221a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802221e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8022220:	436f      	muls	r7, r5
 8022222:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8022224:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8022228:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802222a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802222e:	fb05 fa0a 	mul.w	sl, r5, sl
 8022232:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022236:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802223a:	44bc      	add	ip, r7
 802223c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022240:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022244:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022248:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802224c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022250:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022254:	ea4c 050a 	orr.w	r5, ip, sl
 8022258:	950d      	str	r5, [sp, #52]	@ 0x34
 802225a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802225c:	2dff      	cmp	r5, #255	@ 0xff
 802225e:	d020      	beq.n	80222a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8022260:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8022262:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8022266:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8022268:	436f      	muls	r7, r5
 802226a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802226c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8022270:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8022272:	fb05 fa0c 	mul.w	sl, r5, ip
 8022276:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802227a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802227e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8022282:	44bc      	add	ip, r7
 8022284:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022288:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802228c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022290:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022294:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022298:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802229c:	ea4c 050a 	orr.w	r5, ip, sl
 80222a0:	9509      	str	r5, [sp, #36]	@ 0x24
 80222a2:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80222a4:	2dff      	cmp	r5, #255	@ 0xff
 80222a6:	d020      	beq.n	80222ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 80222a8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80222aa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80222ae:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80222b0:	436f      	muls	r7, r5
 80222b2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80222b4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80222b8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80222ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80222be:	fb05 fa0a 	mul.w	sl, r5, sl
 80222c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80222c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80222ca:	44bc      	add	ip, r7
 80222cc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80222d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80222d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80222d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80222dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80222e0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80222e4:	ea4c 050a 	orr.w	r5, ip, sl
 80222e8:	950e      	str	r5, [sp, #56]	@ 0x38
 80222ea:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80222ec:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80222f0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80222f2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80222f6:	fb0e f707 	mul.w	r7, lr, r7
 80222fa:	fb01 770c 	mla	r7, r1, ip, r7
 80222fe:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022302:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022304:	fb00 770c 	mla	r7, r0, ip, r7
 8022308:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802230c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802230e:	fb09 770c 	mla	r7, r9, ip, r7
 8022312:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8022316:	fb0e fe0c 	mul.w	lr, lr, ip
 802231a:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802231e:	fb01 e303 	mla	r3, r1, r3, lr
 8022322:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8022324:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8022328:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802232a:	fb00 330a 	mla	r3, r0, sl, r3
 802232e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8022332:	fb09 3c0c 	mla	ip, r9, ip, r3
 8022336:	0a3f      	lsrs	r7, r7, #8
 8022338:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802233c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8022340:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8022344:	ea47 070c 	orr.w	r7, r7, ip
 8022348:	2aff      	cmp	r2, #255	@ 0xff
 802234a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802234e:	d11e      	bne.n	802238e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8022350:	097a      	lsrs	r2, r7, #5
 8022352:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8022356:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802235a:	f023 0307 	bic.w	r3, r3, #7
 802235e:	4313      	orrs	r3, r2
 8022360:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8022364:	431f      	orrs	r7, r3
 8022366:	f8a8 7000 	strh.w	r7, [r8]
 802236a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802236c:	441c      	add	r4, r3
 802236e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022370:	f108 0802 	add.w	r8, r8, #2
 8022374:	441e      	add	r6, r3
 8022376:	f10b 3bff 	add.w	fp, fp, #4294967295
 802237a:	e644      	b.n	8022006 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802237c:	2800      	cmp	r0, #0
 802237e:	f43f af0b 	beq.w	8022198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8022382:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8022386:	9109      	str	r1, [sp, #36]	@ 0x24
 8022388:	0e09      	lsrs	r1, r1, #24
 802238a:	9111      	str	r1, [sp, #68]	@ 0x44
 802238c:	e704      	b.n	8022198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802238e:	f8b8 1000 	ldrh.w	r1, [r8]
 8022392:	43d2      	mvns	r2, r2
 8022394:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8022398:	fa5f fe82 	uxtb.w	lr, r2
 802239c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80223a0:	fb0c fc0e 	mul.w	ip, ip, lr
 80223a4:	10c8      	asrs	r0, r1, #3
 80223a6:	00ca      	lsls	r2, r1, #3
 80223a8:	f10c 0101 	add.w	r1, ip, #1
 80223ac:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80223b0:	0c39      	lsrs	r1, r7, #16
 80223b2:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80223b6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80223ba:	4911      	ldr	r1, [pc, #68]	@ (8022400 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 80223bc:	fb00 f00e 	mul.w	r0, r0, lr
 80223c0:	fa5f fc8c 	uxtb.w	ip, ip
 80223c4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80223c8:	b2d2      	uxtb	r2, r2
 80223ca:	1c41      	adds	r1, r0, #1
 80223cc:	fb02 f20e 	mul.w	r2, r2, lr
 80223d0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80223d4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80223d8:	1c51      	adds	r1, r2, #1
 80223da:	00c0      	lsls	r0, r0, #3
 80223dc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80223e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80223e4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80223e8:	ea4c 0c00 	orr.w	ip, ip, r0
 80223ec:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80223f0:	ea47 0c0c 	orr.w	ip, r7, ip
 80223f4:	f8a8 c000 	strh.w	ip, [r8]
 80223f8:	e7b7      	b.n	802236a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80223fa:	b01b      	add	sp, #108	@ 0x6c
 80223fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022400:	fffff800 	.word	0xfffff800

08022404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8022404:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022408:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 802240c:	2d00      	cmp	r5, #0
 802240e:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8022412:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8022416:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 802241a:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802241e:	fb05 0e03 	mla	lr, r5, r3, r0
 8022422:	f2c0 808c 	blt.w	802253e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8022426:	45a9      	cmp	r9, r5
 8022428:	f340 8089 	ble.w	802253e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802242c:	2800      	cmp	r0, #0
 802242e:	f2c0 8084 	blt.w	802253a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8022432:	4580      	cmp	r8, r0
 8022434:	f340 8081 	ble.w	802253a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8022438:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802243c:	f01e 0f01 	tst.w	lr, #1
 8022440:	5d16      	ldrb	r6, [r2, r4]
 8022442:	bf0c      	ite	eq
 8022444:	f006 060f 	andeq.w	r6, r6, #15
 8022448:	1136      	asrne	r6, r6, #4
 802244a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802244e:	b2f6      	uxtb	r6, r6
 8022450:	1c44      	adds	r4, r0, #1
 8022452:	d477      	bmi.n	8022544 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8022454:	45a0      	cmp	r8, r4
 8022456:	dd75      	ble.n	8022544 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8022458:	2f00      	cmp	r7, #0
 802245a:	d075      	beq.n	8022548 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802245c:	f10e 0a01 	add.w	sl, lr, #1
 8022460:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022464:	f01a 0f01 	tst.w	sl, #1
 8022468:	5d14      	ldrb	r4, [r2, r4]
 802246a:	bf0c      	ite	eq
 802246c:	f004 040f 	andeq.w	r4, r4, #15
 8022470:	1124      	asrne	r4, r4, #4
 8022472:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022476:	b2e4      	uxtb	r4, r4
 8022478:	3501      	adds	r5, #1
 802247a:	d469      	bmi.n	8022550 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802247c:	45a9      	cmp	r9, r5
 802247e:	dd67      	ble.n	8022550 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8022480:	f1bc 0f00 	cmp.w	ip, #0
 8022484:	d067      	beq.n	8022556 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8022486:	2800      	cmp	r0, #0
 8022488:	db60      	blt.n	802254c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802248a:	4580      	cmp	r8, r0
 802248c:	dd5e      	ble.n	802254c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802248e:	eb03 090e 	add.w	r9, r3, lr
 8022492:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022496:	f019 0f01 	tst.w	r9, #1
 802249a:	5d55      	ldrb	r5, [r2, r5]
 802249c:	bf0c      	ite	eq
 802249e:	f005 050f 	andeq.w	r5, r5, #15
 80224a2:	112d      	asrne	r5, r5, #4
 80224a4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 80224a8:	b2ed      	uxtb	r5, r5
 80224aa:	3001      	adds	r0, #1
 80224ac:	d456      	bmi.n	802255c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80224ae:	4580      	cmp	r8, r0
 80224b0:	dd54      	ble.n	802255c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 80224b2:	2f00      	cmp	r7, #0
 80224b4:	d054      	beq.n	8022560 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 80224b6:	3301      	adds	r3, #1
 80224b8:	449e      	add	lr, r3
 80224ba:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80224be:	f01e 0f01 	tst.w	lr, #1
 80224c2:	5cd0      	ldrb	r0, [r2, r3]
 80224c4:	bf0c      	ite	eq
 80224c6:	f000 000f 	andeq.w	r0, r0, #15
 80224ca:	1100      	asrne	r0, r0, #4
 80224cc:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80224d0:	b2c3      	uxtb	r3, r0
 80224d2:	b2ba      	uxth	r2, r7
 80224d4:	fa1f fc8c 	uxth.w	ip, ip
 80224d8:	fb02 f00c 	mul.w	r0, r2, ip
 80224dc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80224e0:	0112      	lsls	r2, r2, #4
 80224e2:	fa1f fc8c 	uxth.w	ip, ip
 80224e6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80224ea:	1a12      	subs	r2, r2, r0
 80224ec:	eba7 070c 	sub.w	r7, r7, ip
 80224f0:	b292      	uxth	r2, r2
 80224f2:	b2bf      	uxth	r7, r7
 80224f4:	4362      	muls	r2, r4
 80224f6:	fb06 2207 	mla	r2, r6, r7, r2
 80224fa:	fb0c 2505 	mla	r5, ip, r5, r2
 80224fe:	fb00 5303 	mla	r3, r0, r3, r5
 8022502:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022506:	b1b3      	cbz	r3, 8022536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8022508:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 802250c:	435a      	muls	r2, r3
 802250e:	1c53      	adds	r3, r2, #1
 8022510:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022514:	4a2d      	ldr	r2, [pc, #180]	@ (80225cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8022516:	121b      	asrs	r3, r3, #8
 8022518:	6812      	ldr	r2, [r2, #0]
 802251a:	2bff      	cmp	r3, #255	@ 0xff
 802251c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8022520:	d120      	bne.n	8022564 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8022522:	4b2b      	ldr	r3, [pc, #172]	@ (80225d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8022524:	0950      	lsrs	r0, r2, #5
 8022526:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802252a:	4033      	ands	r3, r6
 802252c:	4318      	orrs	r0, r3
 802252e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022532:	4302      	orrs	r2, r0
 8022534:	800a      	strh	r2, [r1, #0]
 8022536:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802253a:	2600      	movs	r6, #0
 802253c:	e788      	b.n	8022450 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802253e:	2400      	movs	r4, #0
 8022540:	4626      	mov	r6, r4
 8022542:	e799      	b.n	8022478 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8022544:	2400      	movs	r4, #0
 8022546:	e797      	b.n	8022478 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8022548:	463c      	mov	r4, r7
 802254a:	e795      	b.n	8022478 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802254c:	2500      	movs	r5, #0
 802254e:	e7ac      	b.n	80224aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8022550:	2300      	movs	r3, #0
 8022552:	461d      	mov	r5, r3
 8022554:	e7bd      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8022556:	4663      	mov	r3, ip
 8022558:	4665      	mov	r5, ip
 802255a:	e7ba      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802255c:	2300      	movs	r3, #0
 802255e:	e7b8      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8022560:	463b      	mov	r3, r7
 8022562:	e7b6      	b.n	80224d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8022564:	880d      	ldrh	r5, [r1, #0]
 8022566:	b29f      	uxth	r7, r3
 8022568:	122c      	asrs	r4, r5, #8
 802256a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802256e:	43db      	mvns	r3, r3
 8022570:	b2db      	uxtb	r3, r3
 8022572:	fb10 f007 	smulbb	r0, r0, r7
 8022576:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802257a:	fb04 0403 	mla	r4, r4, r3, r0
 802257e:	b2f6      	uxtb	r6, r6
 8022580:	10e8      	asrs	r0, r5, #3
 8022582:	b2d2      	uxtb	r2, r2
 8022584:	00ed      	lsls	r5, r5, #3
 8022586:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802258a:	fb12 f207 	smulbb	r2, r2, r7
 802258e:	fb16 f607 	smulbb	r6, r6, r7
 8022592:	b2ed      	uxtb	r5, r5
 8022594:	b2a4      	uxth	r4, r4
 8022596:	fb00 6603 	mla	r6, r0, r3, r6
 802259a:	fb05 2303 	mla	r3, r5, r3, r2
 802259e:	b29a      	uxth	r2, r3
 80225a0:	1c63      	adds	r3, r4, #1
 80225a2:	b2b0      	uxth	r0, r6
 80225a4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 80225a8:	1c53      	adds	r3, r2, #1
 80225aa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80225ae:	1c42      	adds	r2, r0, #1
 80225b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80225b4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80225b8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80225bc:	0940      	lsrs	r0, r0, #5
 80225be:	4323      	orrs	r3, r4
 80225c0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80225c4:	4303      	orrs	r3, r0
 80225c6:	800b      	strh	r3, [r1, #0]
 80225c8:	e7b5      	b.n	8022536 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80225ca:	bf00      	nop
 80225cc:	20002f3c 	.word	0x20002f3c
 80225d0:	00fff800 	.word	0x00fff800

080225d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80225d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80225d8:	b097      	sub	sp, #92	@ 0x5c
 80225da:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 80225de:	9214      	str	r2, [sp, #80]	@ 0x50
 80225e0:	9309      	str	r3, [sp, #36]	@ 0x24
 80225e2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80225e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80225e8:	910d      	str	r1, [sp, #52]	@ 0x34
 80225ea:	930f      	str	r3, [sp, #60]	@ 0x3c
 80225ec:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80225f0:	9015      	str	r0, [sp, #84]	@ 0x54
 80225f2:	6850      	ldr	r0, [r2, #4]
 80225f4:	6812      	ldr	r2, [r2, #0]
 80225f6:	fb00 1303 	mla	r3, r0, r3, r1
 80225fa:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80225fe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022600:	689b      	ldr	r3, [r3, #8]
 8022602:	3301      	adds	r3, #1
 8022604:	f023 0301 	bic.w	r3, r3, #1
 8022608:	930a      	str	r3, [sp, #40]	@ 0x28
 802260a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802260c:	681f      	ldr	r7, [r3, #0]
 802260e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022610:	2b00      	cmp	r3, #0
 8022612:	dc03      	bgt.n	802261c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022614:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022616:	2b00      	cmp	r3, #0
 8022618:	f340 8287 	ble.w	8022b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802261c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802261e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022622:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022626:	1e48      	subs	r0, r1, #1
 8022628:	f102 3cff 	add.w	ip, r2, #4294967295
 802262c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802262e:	2b00      	cmp	r3, #0
 8022630:	f340 80c4 	ble.w	80227bc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8022634:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022638:	ea4f 4326 	mov.w	r3, r6, asr #16
 802263c:	d406      	bmi.n	802264c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802263e:	4586      	cmp	lr, r0
 8022640:	da04      	bge.n	802264c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022642:	2b00      	cmp	r3, #0
 8022644:	db02      	blt.n	802264c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022646:	4563      	cmp	r3, ip
 8022648:	f2c0 80b9 	blt.w	80227be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802264c:	f11e 0e01 	adds.w	lr, lr, #1
 8022650:	f100 80aa 	bmi.w	80227a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8022654:	4571      	cmp	r1, lr
 8022656:	f2c0 80a7 	blt.w	80227a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802265a:	3301      	adds	r3, #1
 802265c:	f100 80a4 	bmi.w	80227a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8022660:	429a      	cmp	r2, r3
 8022662:	f2c0 80a1 	blt.w	80227a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8022666:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022668:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802266c:	930e      	str	r3, [sp, #56]	@ 0x38
 802266e:	46c8      	mov	r8, r9
 8022670:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022672:	2b00      	cmp	r3, #0
 8022674:	f340 80c3 	ble.w	80227fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8022678:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802267a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802267e:	1423      	asrs	r3, r4, #16
 8022680:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022684:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022688:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802268c:	f100 814d 	bmi.w	802292a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8022690:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022694:	455b      	cmp	r3, fp
 8022696:	f280 8148 	bge.w	802292a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802269a:	2800      	cmp	r0, #0
 802269c:	f2c0 8145 	blt.w	802292a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80226a0:	f10e 3bff 	add.w	fp, lr, #4294967295
 80226a4:	4558      	cmp	r0, fp
 80226a6:	f280 8140 	bge.w	802292a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80226aa:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80226ac:	fb00 3305 	mla	r3, r0, r5, r3
 80226b0:	0858      	lsrs	r0, r3, #1
 80226b2:	07dd      	lsls	r5, r3, #31
 80226b4:	f817 c000 	ldrb.w	ip, [r7, r0]
 80226b8:	bf54      	ite	pl
 80226ba:	f00c 0c0f 	andpl.w	ip, ip, #15
 80226be:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80226c2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80226c6:	fa5f fc8c 	uxtb.w	ip, ip
 80226ca:	2a00      	cmp	r2, #0
 80226cc:	f000 80db 	beq.w	8022886 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80226d0:	1c58      	adds	r0, r3, #1
 80226d2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80226d6:	07c0      	lsls	r0, r0, #31
 80226d8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80226dc:	bf54      	ite	pl
 80226de:	f00e 0e0f 	andpl.w	lr, lr, #15
 80226e2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80226e6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80226ea:	fa5f f08e 	uxtb.w	r0, lr
 80226ee:	9010      	str	r0, [sp, #64]	@ 0x40
 80226f0:	b1c9      	cbz	r1, 8022726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80226f2:	4453      	add	r3, sl
 80226f4:	0858      	lsrs	r0, r3, #1
 80226f6:	07dd      	lsls	r5, r3, #31
 80226f8:	5c38      	ldrb	r0, [r7, r0]
 80226fa:	bf54      	ite	pl
 80226fc:	f000 000f 	andpl.w	r0, r0, #15
 8022700:	1100      	asrmi	r0, r0, #4
 8022702:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022706:	3301      	adds	r3, #1
 8022708:	b2c0      	uxtb	r0, r0
 802270a:	900b      	str	r0, [sp, #44]	@ 0x2c
 802270c:	0858      	lsrs	r0, r3, #1
 802270e:	07dd      	lsls	r5, r3, #31
 8022710:	f817 e000 	ldrb.w	lr, [r7, r0]
 8022714:	bf54      	ite	pl
 8022716:	f00e 030f 	andpl.w	r3, lr, #15
 802271a:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802271e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022722:	b2db      	uxtb	r3, r3
 8022724:	9311      	str	r3, [sp, #68]	@ 0x44
 8022726:	b292      	uxth	r2, r2
 8022728:	b289      	uxth	r1, r1
 802272a:	fb02 f301 	mul.w	r3, r2, r1
 802272e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8022732:	0112      	lsls	r2, r2, #4
 8022734:	b289      	uxth	r1, r1
 8022736:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802273a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802273c:	1ad2      	subs	r2, r2, r3
 802273e:	1a40      	subs	r0, r0, r1
 8022740:	b292      	uxth	r2, r2
 8022742:	436a      	muls	r2, r5
 8022744:	b280      	uxth	r0, r0
 8022746:	fb0c 2c00 	mla	ip, ip, r0, r2
 802274a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802274c:	fb01 c102 	mla	r1, r1, r2, ip
 8022750:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8022752:	fb03 1302 	mla	r3, r3, r2, r1
 8022756:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802275a:	b1db      	cbz	r3, 8022794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802275c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802275e:	4353      	muls	r3, r2
 8022760:	1c5a      	adds	r2, r3, #1
 8022762:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022766:	4ac6      	ldr	r2, [pc, #792]	@ (8022a80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8022768:	121b      	asrs	r3, r3, #8
 802276a:	6812      	ldr	r2, [r2, #0]
 802276c:	2bff      	cmp	r3, #255	@ 0xff
 802276e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8022772:	f040 8099 	bne.w	80228a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8022776:	0953      	lsrs	r3, r2, #5
 8022778:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802277c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022780:	f02c 0c07 	bic.w	ip, ip, #7
 8022784:	ea43 0c0c 	orr.w	ip, r3, ip
 8022788:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802278c:	ea4c 0202 	orr.w	r2, ip, r2
 8022790:	f8a8 2000 	strh.w	r2, [r8]
 8022794:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022796:	441c      	add	r4, r3
 8022798:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802279a:	441e      	add	r6, r3
 802279c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802279e:	3b01      	subs	r3, #1
 80227a0:	f108 0802 	add.w	r8, r8, #2
 80227a4:	930e      	str	r3, [sp, #56]	@ 0x38
 80227a6:	e763      	b.n	8022670 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80227a8:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80227aa:	441c      	add	r4, r3
 80227ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80227ae:	441e      	add	r6, r3
 80227b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80227b2:	3b01      	subs	r3, #1
 80227b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80227b6:	f109 0902 	add.w	r9, r9, #2
 80227ba:	e737      	b.n	802262c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80227bc:	d024      	beq.n	8022808 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80227be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80227c0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80227c2:	3b01      	subs	r3, #1
 80227c4:	fb00 4003 	mla	r0, r0, r3, r4
 80227c8:	1400      	asrs	r0, r0, #16
 80227ca:	f53f af4c 	bmi.w	8022666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80227ce:	3901      	subs	r1, #1
 80227d0:	4288      	cmp	r0, r1
 80227d2:	f6bf af48 	bge.w	8022666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80227d6:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80227d8:	fb01 6303 	mla	r3, r1, r3, r6
 80227dc:	141b      	asrs	r3, r3, #16
 80227de:	f53f af42 	bmi.w	8022666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80227e2:	3a01      	subs	r2, #1
 80227e4:	4293      	cmp	r3, r2
 80227e6:	f6bf af3e 	bge.w	8022666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80227ea:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80227ee:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80227f2:	930e      	str	r3, [sp, #56]	@ 0x38
 80227f4:	46c8      	mov	r8, r9
 80227f6:	f1bb 0f00 	cmp.w	fp, #0
 80227fa:	f300 80b7 	bgt.w	802296c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80227fe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022800:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8022804:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022808:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 802280a:	2b00      	cmp	r3, #0
 802280c:	f340 818d 	ble.w	8022b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8022810:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022814:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022818:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802281c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802281e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022822:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022826:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802282a:	eef0 6a62 	vmov.f32	s13, s5
 802282e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022832:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022836:	ee77 2a62 	vsub.f32	s5, s14, s5
 802283a:	ee16 4a90 	vmov	r4, s13
 802283e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022842:	eef0 6a43 	vmov.f32	s13, s6
 8022846:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802284a:	ee12 2a90 	vmov	r2, s5
 802284e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022852:	fb92 f3f3 	sdiv	r3, r2, r3
 8022856:	ee13 2a10 	vmov	r2, s6
 802285a:	9323      	str	r3, [sp, #140]	@ 0x8c
 802285c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802285e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022862:	9324      	str	r3, [sp, #144]	@ 0x90
 8022864:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8022866:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8022868:	3b01      	subs	r3, #1
 802286a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802286e:	930d      	str	r3, [sp, #52]	@ 0x34
 8022870:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022872:	bf08      	it	eq
 8022874:	4613      	moveq	r3, r2
 8022876:	ee16 6a90 	vmov	r6, s13
 802287a:	9309      	str	r3, [sp, #36]	@ 0x24
 802287c:	eeb0 3a67 	vmov.f32	s6, s15
 8022880:	eef0 2a47 	vmov.f32	s5, s14
 8022884:	e6c3      	b.n	802260e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022886:	2900      	cmp	r1, #0
 8022888:	f43f af4d 	beq.w	8022726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802288c:	eb0a 0003 	add.w	r0, sl, r3
 8022890:	0843      	lsrs	r3, r0, #1
 8022892:	07c0      	lsls	r0, r0, #31
 8022894:	5cfb      	ldrb	r3, [r7, r3]
 8022896:	bf54      	ite	pl
 8022898:	f003 030f 	andpl.w	r3, r3, #15
 802289c:	111b      	asrmi	r3, r3, #4
 802289e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80228a2:	b2db      	uxtb	r3, r3
 80228a4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80228a6:	e73e      	b.n	8022726 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80228a8:	f8b8 e000 	ldrh.w	lr, [r8]
 80228ac:	fa1f fb83 	uxth.w	fp, r3
 80228b0:	ea4f 202e 	mov.w	r0, lr, asr #8
 80228b4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80228b8:	43db      	mvns	r3, r3
 80228ba:	b2db      	uxtb	r3, r3
 80228bc:	fb11 f10b 	smulbb	r1, r1, fp
 80228c0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80228c4:	fb00 1003 	mla	r0, r0, r3, r1
 80228c8:	fa5f fc8c 	uxtb.w	ip, ip
 80228cc:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80228d0:	b2d2      	uxtb	r2, r2
 80228d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80228d6:	b280      	uxth	r0, r0
 80228d8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80228dc:	fb1c fc0b 	smulbb	ip, ip, fp
 80228e0:	fa5f fe8e 	uxtb.w	lr, lr
 80228e4:	fb12 fb0b 	smulbb	fp, r2, fp
 80228e8:	fb01 cc03 	mla	ip, r1, r3, ip
 80228ec:	fb0e bb03 	mla	fp, lr, r3, fp
 80228f0:	1c43      	adds	r3, r0, #1
 80228f2:	fa1f fc8c 	uxth.w	ip, ip
 80228f6:	fa1f fb8b 	uxth.w	fp, fp
 80228fa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80228fe:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8022902:	f10c 0101 	add.w	r1, ip, #1
 8022906:	f10b 0001 	add.w	r0, fp, #1
 802290a:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802290e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022912:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8022916:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802291a:	4318      	orrs	r0, r3
 802291c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022920:	ea40 000c 	orr.w	r0, r0, ip
 8022924:	f8a8 0000 	strh.w	r0, [r8]
 8022928:	e734      	b.n	8022794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802292a:	f113 0b01 	adds.w	fp, r3, #1
 802292e:	f53f af31 	bmi.w	8022794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022932:	45dc      	cmp	ip, fp
 8022934:	f6ff af2e 	blt.w	8022794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022938:	f110 0b01 	adds.w	fp, r0, #1
 802293c:	f53f af2a 	bmi.w	8022794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022940:	45de      	cmp	lr, fp
 8022942:	f6ff af27 	blt.w	8022794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8022946:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8022948:	9302      	str	r3, [sp, #8]
 802294a:	fa0f f38e 	sxth.w	r3, lr
 802294e:	9301      	str	r3, [sp, #4]
 8022950:	fa0f f38c 	sxth.w	r3, ip
 8022954:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8022958:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802295c:	9300      	str	r3, [sp, #0]
 802295e:	463a      	mov	r2, r7
 8022960:	4653      	mov	r3, sl
 8022962:	4641      	mov	r1, r8
 8022964:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8022966:	f7ff fd4d 	bl	8022404 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802296a:	e713      	b.n	8022794 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802296c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802296e:	1422      	asrs	r2, r4, #16
 8022970:	1433      	asrs	r3, r6, #16
 8022972:	fb05 2303 	mla	r3, r5, r3, r2
 8022976:	085a      	lsrs	r2, r3, #1
 8022978:	07dd      	lsls	r5, r3, #31
 802297a:	5cba      	ldrb	r2, [r7, r2]
 802297c:	bf54      	ite	pl
 802297e:	f002 020f 	andpl.w	r2, r2, #15
 8022982:	1112      	asrmi	r2, r2, #4
 8022984:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8022988:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802298c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8022990:	b2d2      	uxtb	r2, r2
 8022992:	2900      	cmp	r1, #0
 8022994:	d076      	beq.n	8022a84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022996:	f103 0e01 	add.w	lr, r3, #1
 802299a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802299e:	f01e 0f01 	tst.w	lr, #1
 80229a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80229a6:	bf0c      	ite	eq
 80229a8:	f00c 0c0f 	andeq.w	ip, ip, #15
 80229ac:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 80229b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80229b4:	fa5f f58c 	uxtb.w	r5, ip
 80229b8:	9512      	str	r5, [sp, #72]	@ 0x48
 80229ba:	b300      	cbz	r0, 80229fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 80229bc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80229be:	442b      	add	r3, r5
 80229c0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80229c4:	07dd      	lsls	r5, r3, #31
 80229c6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80229ca:	bf54      	ite	pl
 80229cc:	f00c 0c0f 	andpl.w	ip, ip, #15
 80229d0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80229d4:	3301      	adds	r3, #1
 80229d6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80229da:	fa5f f58c 	uxtb.w	r5, ip
 80229de:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 80229e2:	950c      	str	r5, [sp, #48]	@ 0x30
 80229e4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80229e8:	07dd      	lsls	r5, r3, #31
 80229ea:	bf54      	ite	pl
 80229ec:	f00c 0c0f 	andpl.w	ip, ip, #15
 80229f0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80229f4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80229f8:	fa5f f38c 	uxtb.w	r3, ip
 80229fc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80229fe:	b289      	uxth	r1, r1
 8022a00:	b280      	uxth	r0, r0
 8022a02:	fb01 f300 	mul.w	r3, r1, r0
 8022a06:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8022a0a:	0109      	lsls	r1, r1, #4
 8022a0c:	b280      	uxth	r0, r0
 8022a0e:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8022a12:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8022a14:	1ac9      	subs	r1, r1, r3
 8022a16:	ebac 0c00 	sub.w	ip, ip, r0
 8022a1a:	b289      	uxth	r1, r1
 8022a1c:	4369      	muls	r1, r5
 8022a1e:	fa1f fc8c 	uxth.w	ip, ip
 8022a22:	fb02 120c 	mla	r2, r2, ip, r1
 8022a26:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8022a28:	fb00 2001 	mla	r0, r0, r1, r2
 8022a2c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8022a2e:	fb03 0302 	mla	r3, r3, r2, r0
 8022a32:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022a36:	b1d3      	cbz	r3, 8022a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8022a38:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022a3a:	4353      	muls	r3, r2
 8022a3c:	1c5a      	adds	r2, r3, #1
 8022a3e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022a42:	4a0f      	ldr	r2, [pc, #60]	@ (8022a80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8022a44:	121b      	asrs	r3, r3, #8
 8022a46:	6812      	ldr	r2, [r2, #0]
 8022a48:	2bff      	cmp	r3, #255	@ 0xff
 8022a4a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8022a4e:	d12d      	bne.n	8022aac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8022a50:	0953      	lsrs	r3, r2, #5
 8022a52:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8022a56:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022a5a:	f02c 0c07 	bic.w	ip, ip, #7
 8022a5e:	ea43 0c0c 	orr.w	ip, r3, ip
 8022a62:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022a66:	ea4c 0202 	orr.w	r2, ip, r2
 8022a6a:	f8a8 2000 	strh.w	r2, [r8]
 8022a6e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8022a70:	441c      	add	r4, r3
 8022a72:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022a74:	f108 0802 	add.w	r8, r8, #2
 8022a78:	441e      	add	r6, r3
 8022a7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8022a7e:	e6ba      	b.n	80227f6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8022a80:	20002f3c 	.word	0x20002f3c
 8022a84:	2800      	cmp	r0, #0
 8022a86:	d0ba      	beq.n	80229fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022a88:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8022a8a:	442b      	add	r3, r5
 8022a8c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8022a90:	07db      	lsls	r3, r3, #31
 8022a92:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8022a96:	bf54      	ite	pl
 8022a98:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022a9c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022aa0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022aa4:	fa5f f38c 	uxtb.w	r3, ip
 8022aa8:	930c      	str	r3, [sp, #48]	@ 0x30
 8022aaa:	e7a8      	b.n	80229fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8022aac:	f8b8 e000 	ldrh.w	lr, [r8]
 8022ab0:	fa1f fa83 	uxth.w	sl, r3
 8022ab4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8022ab8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8022abc:	43db      	mvns	r3, r3
 8022abe:	b2db      	uxtb	r3, r3
 8022ac0:	fb11 f10a 	smulbb	r1, r1, sl
 8022ac4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022ac8:	fb00 1003 	mla	r0, r0, r3, r1
 8022acc:	b2d2      	uxtb	r2, r2
 8022ace:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8022ad2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022ad6:	fa5f fe8e 	uxtb.w	lr, lr
 8022ada:	fb12 f20a 	smulbb	r2, r2, sl
 8022ade:	fb0e 2203 	mla	r2, lr, r3, r2
 8022ae2:	fa5f fc8c 	uxtb.w	ip, ip
 8022ae6:	b280      	uxth	r0, r0
 8022ae8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022aec:	b292      	uxth	r2, r2
 8022aee:	fb1c fc0a 	smulbb	ip, ip, sl
 8022af2:	fb01 cc03 	mla	ip, r1, r3, ip
 8022af6:	1c43      	adds	r3, r0, #1
 8022af8:	1c51      	adds	r1, r2, #1
 8022afa:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022afe:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8022b02:	fa1f fc8c 	uxth.w	ip, ip
 8022b06:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022b0a:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8022b0e:	4308      	orrs	r0, r1
 8022b10:	f10c 0101 	add.w	r1, ip, #1
 8022b14:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8022b18:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022b1c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022b20:	ea40 000c 	orr.w	r0, r0, ip
 8022b24:	f8a8 0000 	strh.w	r0, [r8]
 8022b28:	e7a1      	b.n	8022a6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8022b2a:	b017      	add	sp, #92	@ 0x5c
 8022b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022b30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8022b30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022b34:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8022b38:	2d00      	cmp	r5, #0
 8022b3a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8022b3e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8022b42:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022b46:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8022b4a:	fb05 0e03 	mla	lr, r5, r3, r0
 8022b4e:	f2c0 80b0 	blt.w	8022cb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022b52:	45a9      	cmp	r9, r5
 8022b54:	f340 80ad 	ble.w	8022cb2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8022b58:	2800      	cmp	r0, #0
 8022b5a:	f2c0 80a8 	blt.w	8022cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8022b5e:	4580      	cmp	r8, r0
 8022b60:	f340 80a5 	ble.w	8022cae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8022b64:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8022b68:	f01e 0f01 	tst.w	lr, #1
 8022b6c:	5d16      	ldrb	r6, [r2, r4]
 8022b6e:	bf0c      	ite	eq
 8022b70:	f006 060f 	andeq.w	r6, r6, #15
 8022b74:	1136      	asrne	r6, r6, #4
 8022b76:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8022b7a:	b2f6      	uxtb	r6, r6
 8022b7c:	1c44      	adds	r4, r0, #1
 8022b7e:	f100 809b 	bmi.w	8022cb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022b82:	45a0      	cmp	r8, r4
 8022b84:	f340 8098 	ble.w	8022cb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8022b88:	2f00      	cmp	r7, #0
 8022b8a:	f000 8097 	beq.w	8022cbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8022b8e:	f10e 0a01 	add.w	sl, lr, #1
 8022b92:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8022b96:	f01a 0f01 	tst.w	sl, #1
 8022b9a:	5d14      	ldrb	r4, [r2, r4]
 8022b9c:	bf0c      	ite	eq
 8022b9e:	f004 040f 	andeq.w	r4, r4, #15
 8022ba2:	1124      	asrne	r4, r4, #4
 8022ba4:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8022ba8:	b2e4      	uxtb	r4, r4
 8022baa:	3501      	adds	r5, #1
 8022bac:	f100 808a 	bmi.w	8022cc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022bb0:	45a9      	cmp	r9, r5
 8022bb2:	f340 8087 	ble.w	8022cc4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8022bb6:	f1bc 0f00 	cmp.w	ip, #0
 8022bba:	f000 8086 	beq.w	8022cca <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8022bbe:	2800      	cmp	r0, #0
 8022bc0:	db7e      	blt.n	8022cc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022bc2:	4580      	cmp	r8, r0
 8022bc4:	dd7c      	ble.n	8022cc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8022bc6:	eb03 090e 	add.w	r9, r3, lr
 8022bca:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8022bce:	f019 0f01 	tst.w	r9, #1
 8022bd2:	5d55      	ldrb	r5, [r2, r5]
 8022bd4:	bf0c      	ite	eq
 8022bd6:	f005 050f 	andeq.w	r5, r5, #15
 8022bda:	112d      	asrne	r5, r5, #4
 8022bdc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8022be0:	b2ed      	uxtb	r5, r5
 8022be2:	3001      	adds	r0, #1
 8022be4:	d474      	bmi.n	8022cd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022be6:	4580      	cmp	r8, r0
 8022be8:	dd72      	ble.n	8022cd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8022bea:	2f00      	cmp	r7, #0
 8022bec:	d072      	beq.n	8022cd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8022bee:	3301      	adds	r3, #1
 8022bf0:	449e      	add	lr, r3
 8022bf2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8022bf6:	f01e 0f01 	tst.w	lr, #1
 8022bfa:	5cd0      	ldrb	r0, [r2, r3]
 8022bfc:	bf0c      	ite	eq
 8022bfe:	f000 000f 	andeq.w	r0, r0, #15
 8022c02:	1100      	asrne	r0, r0, #4
 8022c04:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022c08:	b2c3      	uxtb	r3, r0
 8022c0a:	b2ba      	uxth	r2, r7
 8022c0c:	fa1f fc8c 	uxth.w	ip, ip
 8022c10:	fb02 f00c 	mul.w	r0, r2, ip
 8022c14:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8022c18:	0112      	lsls	r2, r2, #4
 8022c1a:	fa1f fc8c 	uxth.w	ip, ip
 8022c1e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8022c22:	1a12      	subs	r2, r2, r0
 8022c24:	eba7 070c 	sub.w	r7, r7, ip
 8022c28:	b292      	uxth	r2, r2
 8022c2a:	b2bf      	uxth	r7, r7
 8022c2c:	4362      	muls	r2, r4
 8022c2e:	fb06 2207 	mla	r2, r6, r7, r2
 8022c32:	fb0c 2505 	mla	r5, ip, r5, r2
 8022c36:	fb00 5303 	mla	r3, r0, r3, r5
 8022c3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022c3e:	b3a3      	cbz	r3, 8022caa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8022c40:	4a25      	ldr	r2, [pc, #148]	@ (8022cd8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8022c42:	880e      	ldrh	r6, [r1, #0]
 8022c44:	6815      	ldr	r5, [r2, #0]
 8022c46:	1234      	asrs	r4, r6, #8
 8022c48:	b29a      	uxth	r2, r3
 8022c4a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8022c4e:	43db      	mvns	r3, r3
 8022c50:	b2db      	uxtb	r3, r3
 8022c52:	fb10 f002 	smulbb	r0, r0, r2
 8022c56:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8022c5a:	fb04 0403 	mla	r4, r4, r3, r0
 8022c5e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8022c62:	10f0      	asrs	r0, r6, #3
 8022c64:	b2ed      	uxtb	r5, r5
 8022c66:	00f6      	lsls	r6, r6, #3
 8022c68:	fb17 f702 	smulbb	r7, r7, r2
 8022c6c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022c70:	fb15 f202 	smulbb	r2, r5, r2
 8022c74:	b2f6      	uxtb	r6, r6
 8022c76:	b2a4      	uxth	r4, r4
 8022c78:	fb00 7003 	mla	r0, r0, r3, r7
 8022c7c:	fb06 2303 	mla	r3, r6, r3, r2
 8022c80:	b29a      	uxth	r2, r3
 8022c82:	1c63      	adds	r3, r4, #1
 8022c84:	b280      	uxth	r0, r0
 8022c86:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8022c8a:	1c53      	adds	r3, r2, #1
 8022c8c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022c90:	1c42      	adds	r2, r0, #1
 8022c92:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022c96:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8022c9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022c9e:	0940      	lsrs	r0, r0, #5
 8022ca0:	4323      	orrs	r3, r4
 8022ca2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022ca6:	4303      	orrs	r3, r0
 8022ca8:	800b      	strh	r3, [r1, #0]
 8022caa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022cae:	2600      	movs	r6, #0
 8022cb0:	e764      	b.n	8022b7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8022cb2:	2400      	movs	r4, #0
 8022cb4:	4626      	mov	r6, r4
 8022cb6:	e778      	b.n	8022baa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022cb8:	2400      	movs	r4, #0
 8022cba:	e776      	b.n	8022baa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022cbc:	463c      	mov	r4, r7
 8022cbe:	e774      	b.n	8022baa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8022cc0:	2500      	movs	r5, #0
 8022cc2:	e78e      	b.n	8022be2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8022cc4:	2300      	movs	r3, #0
 8022cc6:	461d      	mov	r5, r3
 8022cc8:	e79f      	b.n	8022c0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022cca:	4663      	mov	r3, ip
 8022ccc:	4665      	mov	r5, ip
 8022cce:	e79c      	b.n	8022c0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022cd0:	2300      	movs	r3, #0
 8022cd2:	e79a      	b.n	8022c0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022cd4:	463b      	mov	r3, r7
 8022cd6:	e798      	b.n	8022c0a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8022cd8:	20002f3c 	.word	0x20002f3c

08022cdc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022cdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ce0:	b093      	sub	sp, #76	@ 0x4c
 8022ce2:	461d      	mov	r5, r3
 8022ce4:	920c      	str	r2, [sp, #48]	@ 0x30
 8022ce6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8022ce8:	9107      	str	r1, [sp, #28]
 8022cea:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8022cee:	9011      	str	r0, [sp, #68]	@ 0x44
 8022cf0:	6850      	ldr	r0, [r2, #4]
 8022cf2:	6812      	ldr	r2, [r2, #0]
 8022cf4:	fb00 1303 	mla	r3, r0, r3, r1
 8022cf8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8022cfc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022cfe:	689b      	ldr	r3, [r3, #8]
 8022d00:	3301      	adds	r3, #1
 8022d02:	f023 0301 	bic.w	r3, r3, #1
 8022d06:	9306      	str	r3, [sp, #24]
 8022d08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022d0a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8022d0e:	681f      	ldr	r7, [r3, #0]
 8022d10:	9b07      	ldr	r3, [sp, #28]
 8022d12:	2b00      	cmp	r3, #0
 8022d14:	dc03      	bgt.n	8022d1e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8022d16:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022d18:	2b00      	cmp	r3, #0
 8022d1a:	f340 8267 	ble.w	80231ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022d1e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022d20:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022d24:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022d28:	1e48      	subs	r0, r1, #1
 8022d2a:	f102 3cff 	add.w	ip, r2, #4294967295
 8022d2e:	2d00      	cmp	r5, #0
 8022d30:	f340 80b8 	ble.w	8022ea4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022d34:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022d38:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022d3c:	d406      	bmi.n	8022d4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022d3e:	4586      	cmp	lr, r0
 8022d40:	da04      	bge.n	8022d4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022d42:	2b00      	cmp	r3, #0
 8022d44:	db02      	blt.n	8022d4c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022d46:	4563      	cmp	r3, ip
 8022d48:	f2c0 80ad 	blt.w	8022ea6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8022d4c:	f11e 0e01 	adds.w	lr, lr, #1
 8022d50:	f100 80a0 	bmi.w	8022e94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022d54:	4571      	cmp	r1, lr
 8022d56:	f2c0 809d 	blt.w	8022e94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022d5a:	3301      	adds	r3, #1
 8022d5c:	f100 809a 	bmi.w	8022e94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022d60:	429a      	cmp	r2, r3
 8022d62:	f2c0 8097 	blt.w	8022e94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8022d66:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8022d6a:	9509      	str	r5, [sp, #36]	@ 0x24
 8022d6c:	46c8      	mov	r8, r9
 8022d6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022d70:	2b00      	cmp	r3, #0
 8022d72:	f340 80b6 	ble.w	8022ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8022d76:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8022d7a:	9308      	str	r3, [sp, #32]
 8022d7c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022d7e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8022d82:	1423      	asrs	r3, r4, #16
 8022d84:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022d88:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022d8c:	f100 813e 	bmi.w	802300c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022d90:	f10c 3bff 	add.w	fp, ip, #4294967295
 8022d94:	455b      	cmp	r3, fp
 8022d96:	f280 8139 	bge.w	802300c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022d9a:	2800      	cmp	r0, #0
 8022d9c:	f2c0 8136 	blt.w	802300c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022da0:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022da4:	4558      	cmp	r0, fp
 8022da6:	f280 8131 	bge.w	802300c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8022daa:	9a06      	ldr	r2, [sp, #24]
 8022dac:	fb00 3302 	mla	r3, r0, r2, r3
 8022db0:	0858      	lsrs	r0, r3, #1
 8022db2:	07da      	lsls	r2, r3, #31
 8022db4:	f817 c000 	ldrb.w	ip, [r7, r0]
 8022db8:	9a08      	ldr	r2, [sp, #32]
 8022dba:	bf54      	ite	pl
 8022dbc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8022dc0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8022dc4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8022dc8:	fa5f fc8c 	uxtb.w	ip, ip
 8022dcc:	2a00      	cmp	r2, #0
 8022dce:	f000 80cb 	beq.w	8022f68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8022dd2:	1c58      	adds	r0, r3, #1
 8022dd4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8022dd8:	07c0      	lsls	r0, r0, #31
 8022dda:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8022dde:	bf54      	ite	pl
 8022de0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8022de4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8022de8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8022dec:	fa5f fe8e 	uxtb.w	lr, lr
 8022df0:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8022df4:	b1b9      	cbz	r1, 8022e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8022df6:	4453      	add	r3, sl
 8022df8:	0858      	lsrs	r0, r3, #1
 8022dfa:	07da      	lsls	r2, r3, #31
 8022dfc:	5c38      	ldrb	r0, [r7, r0]
 8022dfe:	bf54      	ite	pl
 8022e00:	f000 000f 	andpl.w	r0, r0, #15
 8022e04:	1100      	asrmi	r0, r0, #4
 8022e06:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8022e0a:	b2c0      	uxtb	r0, r0
 8022e0c:	900a      	str	r0, [sp, #40]	@ 0x28
 8022e0e:	1c58      	adds	r0, r3, #1
 8022e10:	0843      	lsrs	r3, r0, #1
 8022e12:	07c2      	lsls	r2, r0, #31
 8022e14:	5cfb      	ldrb	r3, [r7, r3]
 8022e16:	bf54      	ite	pl
 8022e18:	f003 030f 	andpl.w	r3, r3, #15
 8022e1c:	111b      	asrmi	r3, r3, #4
 8022e1e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022e22:	b2db      	uxtb	r3, r3
 8022e24:	930e      	str	r3, [sp, #56]	@ 0x38
 8022e26:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8022e2a:	b289      	uxth	r1, r1
 8022e2c:	fb02 f301 	mul.w	r3, r2, r1
 8022e30:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8022e34:	0112      	lsls	r2, r2, #4
 8022e36:	b289      	uxth	r1, r1
 8022e38:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8022e3c:	1a40      	subs	r0, r0, r1
 8022e3e:	fa1f fe80 	uxth.w	lr, r0
 8022e42:	1ad2      	subs	r2, r2, r3
 8022e44:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8022e46:	b292      	uxth	r2, r2
 8022e48:	4342      	muls	r2, r0
 8022e4a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8022e4e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022e50:	fb01 c102 	mla	r1, r1, r2, ip
 8022e54:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8022e56:	fb03 1302 	mla	r3, r3, r2, r1
 8022e5a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022e5e:	2bff      	cmp	r3, #255	@ 0xff
 8022e60:	f040 8093 	bne.w	8022f8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8022e64:	4bbe      	ldr	r3, [pc, #760]	@ (8023160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022e66:	681a      	ldr	r2, [r3, #0]
 8022e68:	4bbe      	ldr	r3, [pc, #760]	@ (8023164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8022e6a:	0951      	lsrs	r1, r2, #5
 8022e6c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8022e70:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022e74:	430b      	orrs	r3, r1
 8022e76:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022e7a:	4313      	orrs	r3, r2
 8022e7c:	f8a8 3000 	strh.w	r3, [r8]
 8022e80:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022e82:	441c      	add	r4, r3
 8022e84:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022e86:	441e      	add	r6, r3
 8022e88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022e8a:	3b01      	subs	r3, #1
 8022e8c:	f108 0802 	add.w	r8, r8, #2
 8022e90:	9309      	str	r3, [sp, #36]	@ 0x24
 8022e92:	e76c      	b.n	8022d6e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022e94:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022e96:	441c      	add	r4, r3
 8022e98:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022e9a:	3d01      	subs	r5, #1
 8022e9c:	441e      	add	r6, r3
 8022e9e:	f109 0902 	add.w	r9, r9, #2
 8022ea2:	e744      	b.n	8022d2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022ea4:	d021      	beq.n	8022eea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8022ea6:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8022ea8:	1e6b      	subs	r3, r5, #1
 8022eaa:	fb00 4003 	mla	r0, r0, r3, r4
 8022eae:	1400      	asrs	r0, r0, #16
 8022eb0:	f53f af59 	bmi.w	8022d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022eb4:	3901      	subs	r1, #1
 8022eb6:	4288      	cmp	r0, r1
 8022eb8:	f6bf af55 	bge.w	8022d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022ebc:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8022ebe:	fb01 6303 	mla	r3, r1, r3, r6
 8022ec2:	141b      	asrs	r3, r3, #16
 8022ec4:	f53f af4f 	bmi.w	8022d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022ec8:	3a01      	subs	r2, #1
 8022eca:	4293      	cmp	r3, r2
 8022ecc:	f6bf af4b 	bge.w	8022d66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8022ed0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8022ed4:	9308      	str	r3, [sp, #32]
 8022ed6:	46a8      	mov	r8, r5
 8022ed8:	46ce      	mov	lr, r9
 8022eda:	f1b8 0f00 	cmp.w	r8, #0
 8022ede:	f300 80b5 	bgt.w	802304c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022ee2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022ee6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8022eea:	9b07      	ldr	r3, [sp, #28]
 8022eec:	2b00      	cmp	r3, #0
 8022eee:	f340 817d 	ble.w	80231ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8022ef2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ef6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022efa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022efe:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022f00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f0c:	eef0 6a62 	vmov.f32	s13, s5
 8022f10:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022f14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f18:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022f1c:	ee16 4a90 	vmov	r4, s13
 8022f20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022f24:	eef0 6a43 	vmov.f32	s13, s6
 8022f28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022f2c:	ee12 2a90 	vmov	r2, s5
 8022f30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022f34:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f38:	ee13 2a10 	vmov	r2, s6
 8022f3c:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022f3e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022f40:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f44:	9320      	str	r3, [sp, #128]	@ 0x80
 8022f46:	9b07      	ldr	r3, [sp, #28]
 8022f48:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022f4a:	3b01      	subs	r3, #1
 8022f4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022f50:	9307      	str	r3, [sp, #28]
 8022f52:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022f54:	ee16 6a90 	vmov	r6, s13
 8022f58:	bf14      	ite	ne
 8022f5a:	461d      	movne	r5, r3
 8022f5c:	4615      	moveq	r5, r2
 8022f5e:	eeb0 3a67 	vmov.f32	s6, s15
 8022f62:	eef0 2a47 	vmov.f32	s5, s14
 8022f66:	e6d3      	b.n	8022d10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8022f68:	2900      	cmp	r1, #0
 8022f6a:	f43f af5c 	beq.w	8022e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8022f6e:	eb0a 0003 	add.w	r0, sl, r3
 8022f72:	0843      	lsrs	r3, r0, #1
 8022f74:	07c0      	lsls	r0, r0, #31
 8022f76:	5cfb      	ldrb	r3, [r7, r3]
 8022f78:	bf54      	ite	pl
 8022f7a:	f003 030f 	andpl.w	r3, r3, #15
 8022f7e:	111b      	asrmi	r3, r3, #4
 8022f80:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8022f84:	b2db      	uxtb	r3, r3
 8022f86:	930a      	str	r3, [sp, #40]	@ 0x28
 8022f88:	e74d      	b.n	8022e26 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8022f8a:	2b00      	cmp	r3, #0
 8022f8c:	f43f af78 	beq.w	8022e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8022f90:	4a73      	ldr	r2, [pc, #460]	@ (8023160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8022f92:	f8b8 c000 	ldrh.w	ip, [r8]
 8022f96:	6810      	ldr	r0, [r2, #0]
 8022f98:	fa1f fe83 	uxth.w	lr, r3
 8022f9c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8022fa0:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8022fa4:	43db      	mvns	r3, r3
 8022fa6:	b2db      	uxtb	r3, r3
 8022fa8:	fb12 f20e 	smulbb	r2, r2, lr
 8022fac:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022fb0:	fb01 2103 	mla	r1, r1, r3, r2
 8022fb4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8022fb8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8022fbc:	b2c0      	uxtb	r0, r0
 8022fbe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022fc2:	fb1b fb0e 	smulbb	fp, fp, lr
 8022fc6:	b289      	uxth	r1, r1
 8022fc8:	fb10 fe0e 	smulbb	lr, r0, lr
 8022fcc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022fd0:	fa5f fc8c 	uxtb.w	ip, ip
 8022fd4:	fb02 b203 	mla	r2, r2, r3, fp
 8022fd8:	1c48      	adds	r0, r1, #1
 8022fda:	fb0c e303 	mla	r3, ip, r3, lr
 8022fde:	b292      	uxth	r2, r2
 8022fe0:	b29b      	uxth	r3, r3
 8022fe2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8022fe6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8022fea:	f102 0b01 	add.w	fp, r2, #1
 8022fee:	1c59      	adds	r1, r3, #1
 8022ff0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8022ff4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8022ff8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8022ffc:	0952      	lsrs	r2, r2, #5
 8022ffe:	4301      	orrs	r1, r0
 8023000:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023004:	4311      	orrs	r1, r2
 8023006:	f8a8 1000 	strh.w	r1, [r8]
 802300a:	e739      	b.n	8022e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802300c:	f113 0b01 	adds.w	fp, r3, #1
 8023010:	f53f af36 	bmi.w	8022e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023014:	45dc      	cmp	ip, fp
 8023016:	f6ff af33 	blt.w	8022e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802301a:	f110 0b01 	adds.w	fp, r0, #1
 802301e:	f53f af2f 	bmi.w	8022e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023022:	45de      	cmp	lr, fp
 8023024:	f6ff af2c 	blt.w	8022e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023028:	9a08      	ldr	r2, [sp, #32]
 802302a:	9302      	str	r3, [sp, #8]
 802302c:	fa0f f38e 	sxth.w	r3, lr
 8023030:	9301      	str	r3, [sp, #4]
 8023032:	fa0f f38c 	sxth.w	r3, ip
 8023036:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802303a:	9105      	str	r1, [sp, #20]
 802303c:	9300      	str	r3, [sp, #0]
 802303e:	463a      	mov	r2, r7
 8023040:	4653      	mov	r3, sl
 8023042:	4641      	mov	r1, r8
 8023044:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8023046:	f7ff fd73 	bl	8022b30 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802304a:	e719      	b.n	8022e80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802304c:	9906      	ldr	r1, [sp, #24]
 802304e:	1422      	asrs	r2, r4, #16
 8023050:	1433      	asrs	r3, r6, #16
 8023052:	fb01 2303 	mla	r3, r1, r3, r2
 8023056:	085a      	lsrs	r2, r3, #1
 8023058:	07d9      	lsls	r1, r3, #31
 802305a:	5cba      	ldrb	r2, [r7, r2]
 802305c:	bf54      	ite	pl
 802305e:	f002 020f 	andpl.w	r2, r2, #15
 8023062:	1112      	asrmi	r2, r2, #4
 8023064:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023068:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802306c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8023070:	b2d2      	uxtb	r2, r2
 8023072:	2800      	cmp	r0, #0
 8023074:	d062      	beq.n	802313c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8023076:	f103 0a01 	add.w	sl, r3, #1
 802307a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802307e:	f01a 0f01 	tst.w	sl, #1
 8023082:	5c79      	ldrb	r1, [r7, r1]
 8023084:	bf0c      	ite	eq
 8023086:	f001 010f 	andeq.w	r1, r1, #15
 802308a:	1109      	asrne	r1, r1, #4
 802308c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023090:	b2c9      	uxtb	r1, r1
 8023092:	910f      	str	r1, [sp, #60]	@ 0x3c
 8023094:	f1bc 0f00 	cmp.w	ip, #0
 8023098:	d019      	beq.n	80230ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802309a:	9908      	ldr	r1, [sp, #32]
 802309c:	440b      	add	r3, r1
 802309e:	0859      	lsrs	r1, r3, #1
 80230a0:	f013 0f01 	tst.w	r3, #1
 80230a4:	5c79      	ldrb	r1, [r7, r1]
 80230a6:	bf0c      	ite	eq
 80230a8:	f001 010f 	andeq.w	r1, r1, #15
 80230ac:	1109      	asrne	r1, r1, #4
 80230ae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80230b2:	b2c9      	uxtb	r1, r1
 80230b4:	3301      	adds	r3, #1
 80230b6:	910b      	str	r1, [sp, #44]	@ 0x2c
 80230b8:	0859      	lsrs	r1, r3, #1
 80230ba:	07db      	lsls	r3, r3, #31
 80230bc:	5c79      	ldrb	r1, [r7, r1]
 80230be:	bf54      	ite	pl
 80230c0:	f001 010f 	andpl.w	r1, r1, #15
 80230c4:	1109      	asrmi	r1, r1, #4
 80230c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80230ca:	b2c9      	uxtb	r1, r1
 80230cc:	9110      	str	r1, [sp, #64]	@ 0x40
 80230ce:	b280      	uxth	r0, r0
 80230d0:	fa1f fc8c 	uxth.w	ip, ip
 80230d4:	fb00 f30c 	mul.w	r3, r0, ip
 80230d8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80230dc:	0100      	lsls	r0, r0, #4
 80230de:	fa1f fc8c 	uxth.w	ip, ip
 80230e2:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80230e6:	eba1 010c 	sub.w	r1, r1, ip
 80230ea:	fa1f fa81 	uxth.w	sl, r1
 80230ee:	1ac0      	subs	r0, r0, r3
 80230f0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80230f2:	b280      	uxth	r0, r0
 80230f4:	4348      	muls	r0, r1
 80230f6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80230f8:	fb02 020a 	mla	r2, r2, sl, r0
 80230fc:	fb0c 2c01 	mla	ip, ip, r1, r2
 8023100:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8023102:	fb03 c302 	mla	r3, r3, r2, ip
 8023106:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802310a:	2bff      	cmp	r3, #255	@ 0xff
 802310c:	d12c      	bne.n	8023168 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802310e:	4b14      	ldr	r3, [pc, #80]	@ (8023160 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8023110:	681a      	ldr	r2, [r3, #0]
 8023112:	4b14      	ldr	r3, [pc, #80]	@ (8023164 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8023114:	0951      	lsrs	r1, r2, #5
 8023116:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802311a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802311e:	430b      	orrs	r3, r1
 8023120:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023124:	4313      	orrs	r3, r2
 8023126:	f8ae 3000 	strh.w	r3, [lr]
 802312a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802312c:	441c      	add	r4, r3
 802312e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023130:	f10e 0e02 	add.w	lr, lr, #2
 8023134:	441e      	add	r6, r3
 8023136:	f108 38ff 	add.w	r8, r8, #4294967295
 802313a:	e6ce      	b.n	8022eda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802313c:	f1bc 0f00 	cmp.w	ip, #0
 8023140:	d0c5      	beq.n	80230ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8023142:	9908      	ldr	r1, [sp, #32]
 8023144:	440b      	add	r3, r1
 8023146:	0859      	lsrs	r1, r3, #1
 8023148:	07db      	lsls	r3, r3, #31
 802314a:	5c79      	ldrb	r1, [r7, r1]
 802314c:	bf54      	ite	pl
 802314e:	f001 010f 	andpl.w	r1, r1, #15
 8023152:	1109      	asrmi	r1, r1, #4
 8023154:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8023158:	b2c9      	uxtb	r1, r1
 802315a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802315c:	e7b7      	b.n	80230ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802315e:	bf00      	nop
 8023160:	20002f3c 	.word	0x20002f3c
 8023164:	fffff800 	.word	0xfffff800
 8023168:	2b00      	cmp	r3, #0
 802316a:	d0de      	beq.n	802312a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802316c:	4a21      	ldr	r2, [pc, #132]	@ (80231f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802316e:	f8be c000 	ldrh.w	ip, [lr]
 8023172:	6810      	ldr	r0, [r2, #0]
 8023174:	fa1f fa83 	uxth.w	sl, r3
 8023178:	ea4f 212c 	mov.w	r1, ip, asr #8
 802317c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8023180:	43db      	mvns	r3, r3
 8023182:	b2db      	uxtb	r3, r3
 8023184:	fb12 f20a 	smulbb	r2, r2, sl
 8023188:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802318c:	fb01 2103 	mla	r1, r1, r3, r2
 8023190:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8023194:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8023198:	b2c0      	uxtb	r0, r0
 802319a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802319e:	fa5f fc8c 	uxtb.w	ip, ip
 80231a2:	fb10 f00a 	smulbb	r0, r0, sl
 80231a6:	fb0c 0003 	mla	r0, ip, r3, r0
 80231aa:	b289      	uxth	r1, r1
 80231ac:	fb1b fb0a 	smulbb	fp, fp, sl
 80231b0:	b280      	uxth	r0, r0
 80231b2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80231b6:	fb02 b203 	mla	r2, r2, r3, fp
 80231ba:	1c4b      	adds	r3, r1, #1
 80231bc:	f100 0b01 	add.w	fp, r0, #1
 80231c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80231c4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80231c8:	b292      	uxth	r2, r2
 80231ca:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80231ce:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80231d2:	ea4b 0101 	orr.w	r1, fp, r1
 80231d6:	f102 0b01 	add.w	fp, r2, #1
 80231da:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80231de:	0952      	lsrs	r2, r2, #5
 80231e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80231e4:	4311      	orrs	r1, r2
 80231e6:	f8ae 1000 	strh.w	r1, [lr]
 80231ea:	e79e      	b.n	802312a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80231ec:	b013      	add	sp, #76	@ 0x4c
 80231ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80231f2:	bf00      	nop
 80231f4:	20002f3c 	.word	0x20002f3c

080231f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80231f8:	b570      	push	{r4, r5, r6, lr}
 80231fa:	1208      	asrs	r0, r1, #8
 80231fc:	b29e      	uxth	r6, r3
 80231fe:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8023202:	1213      	asrs	r3, r2, #8
 8023204:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8023208:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 802320c:	fb13 f305 	smulbb	r3, r3, r5
 8023210:	fb10 f006 	smulbb	r0, r0, r6
 8023214:	4418      	add	r0, r3
 8023216:	10cc      	asrs	r4, r1, #3
 8023218:	10d3      	asrs	r3, r2, #3
 802321a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802321e:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023222:	fb13 f305 	smulbb	r3, r3, r5
 8023226:	fb14 f406 	smulbb	r4, r4, r6
 802322a:	00c9      	lsls	r1, r1, #3
 802322c:	00d2      	lsls	r2, r2, #3
 802322e:	441c      	add	r4, r3
 8023230:	b2d2      	uxtb	r2, r2
 8023232:	b2cb      	uxtb	r3, r1
 8023234:	fb12 f205 	smulbb	r2, r2, r5
 8023238:	b280      	uxth	r0, r0
 802323a:	fb13 f306 	smulbb	r3, r3, r6
 802323e:	4413      	add	r3, r2
 8023240:	1c42      	adds	r2, r0, #1
 8023242:	b29b      	uxth	r3, r3
 8023244:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023248:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802324c:	1c58      	adds	r0, r3, #1
 802324e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8023252:	b2a4      	uxth	r4, r4
 8023254:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023258:	4310      	orrs	r0, r2
 802325a:	1c62      	adds	r2, r4, #1
 802325c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8023260:	0964      	lsrs	r4, r4, #5
 8023262:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8023266:	4320      	orrs	r0, r4
 8023268:	bd70      	pop	{r4, r5, r6, pc}
	...

0802326c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802326c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023270:	b08f      	sub	sp, #60	@ 0x3c
 8023272:	461c      	mov	r4, r3
 8023274:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8023278:	9004      	str	r0, [sp, #16]
 802327a:	460d      	mov	r5, r1
 802327c:	4616      	mov	r6, r2
 802327e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023280:	2f00      	cmp	r7, #0
 8023282:	f000 80f6 	beq.w	8023472 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8023286:	6820      	ldr	r0, [r4, #0]
 8023288:	6861      	ldr	r1, [r4, #4]
 802328a:	aa0a      	add	r2, sp, #40	@ 0x28
 802328c:	c203      	stmia	r2!, {r0, r1}
 802328e:	6818      	ldr	r0, [r3, #0]
 8023290:	6859      	ldr	r1, [r3, #4]
 8023292:	aa0c      	add	r2, sp, #48	@ 0x30
 8023294:	c203      	stmia	r2!, {r0, r1}
 8023296:	a80a      	add	r0, sp, #40	@ 0x28
 8023298:	f7ee fdd4 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802329c:	4621      	mov	r1, r4
 802329e:	a80c      	add	r0, sp, #48	@ 0x30
 80232a0:	f7ee fdf8 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80232a4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80232a8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80232ac:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80232b0:	f002 0301 	and.w	r3, r2, #1
 80232b4:	9306      	str	r3, [sp, #24]
 80232b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80232ba:	f003 0101 	and.w	r1, r3, #1
 80232be:	9105      	str	r1, [sp, #20]
 80232c0:	9805      	ldr	r0, [sp, #20]
 80232c2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80232c6:	4403      	add	r3, r0
 80232c8:	fb01 2303 	mla	r3, r1, r3, r2
 80232cc:	f04f 0802 	mov.w	r8, #2
 80232d0:	fb93 f3f8 	sdiv	r3, r3, r8
 80232d4:	441d      	add	r5, r3
 80232d6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80232da:	441a      	add	r2, r3
 80232dc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80232e0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80232e4:	4419      	add	r1, r3
 80232e6:	4b64      	ldr	r3, [pc, #400]	@ (8023478 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80232e8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80232ec:	6818      	ldr	r0, [r3, #0]
 80232ee:	6803      	ldr	r3, [r0, #0]
 80232f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80232f2:	4798      	blx	r3
 80232f4:	4a61      	ldr	r2, [pc, #388]	@ (802347c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80232f6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80232fa:	8813      	ldrh	r3, [r2, #0]
 80232fc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8023300:	2fff      	cmp	r7, #255	@ 0xff
 8023302:	fb03 a404 	mla	r4, r3, r4, sl
 8023306:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802330a:	f106 0604 	add.w	r6, r6, #4
 802330e:	4611      	mov	r1, r2
 8023310:	fb03 fb0b 	mul.w	fp, r3, fp
 8023314:	d06b      	beq.n	80233ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8023316:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802331a:	9303      	str	r3, [sp, #12]
 802331c:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8023320:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8023324:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8023328:	9b07      	ldr	r3, [sp, #28]
 802332a:	42a3      	cmp	r3, r4
 802332c:	f240 809c 	bls.w	8023468 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8023330:	9b06      	ldr	r3, [sp, #24]
 8023332:	2b00      	cmp	r3, #0
 8023334:	d039      	beq.n	80233aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8023336:	782b      	ldrb	r3, [r5, #0]
 8023338:	8822      	ldrh	r2, [r4, #0]
 802333a:	9804      	ldr	r0, [sp, #16]
 802333c:	f003 030f 	and.w	r3, r3, #15
 8023340:	f105 0801 	add.w	r8, r5, #1
 8023344:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8023348:	9b03      	ldr	r3, [sp, #12]
 802334a:	9300      	str	r3, [sp, #0]
 802334c:	463b      	mov	r3, r7
 802334e:	f7ff ff53 	bl	80231f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023352:	f824 0b02 	strh.w	r0, [r4], #2
 8023356:	f109 3bff 	add.w	fp, r9, #4294967295
 802335a:	f1bb 0f01 	cmp.w	fp, #1
 802335e:	46a2      	mov	sl, r4
 8023360:	f104 0404 	add.w	r4, r4, #4
 8023364:	dd24      	ble.n	80233b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8023366:	f898 3000 	ldrb.w	r3, [r8]
 802336a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802336e:	9804      	ldr	r0, [sp, #16]
 8023370:	091b      	lsrs	r3, r3, #4
 8023372:	f1ab 0b02 	sub.w	fp, fp, #2
 8023376:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802337a:	9b03      	ldr	r3, [sp, #12]
 802337c:	9300      	str	r3, [sp, #0]
 802337e:	463b      	mov	r3, r7
 8023380:	f7ff ff3a 	bl	80231f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8023384:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023388:	f818 3b01 	ldrb.w	r3, [r8], #1
 802338c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8023390:	9804      	ldr	r0, [sp, #16]
 8023392:	f003 030f 	and.w	r3, r3, #15
 8023396:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802339a:	9b03      	ldr	r3, [sp, #12]
 802339c:	9300      	str	r3, [sp, #0]
 802339e:	463b      	mov	r3, r7
 80233a0:	f7ff ff2a 	bl	80231f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80233a4:	f824 0c02 	strh.w	r0, [r4, #-2]
 80233a8:	e7d7      	b.n	802335a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80233aa:	46a8      	mov	r8, r5
 80233ac:	46cb      	mov	fp, r9
 80233ae:	e7d4      	b.n	802335a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 80233b0:	d10e      	bne.n	80233d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 80233b2:	f898 3000 	ldrb.w	r3, [r8]
 80233b6:	f8ba 2000 	ldrh.w	r2, [sl]
 80233ba:	9804      	ldr	r0, [sp, #16]
 80233bc:	091b      	lsrs	r3, r3, #4
 80233be:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80233c2:	9b03      	ldr	r3, [sp, #12]
 80233c4:	9300      	str	r3, [sp, #0]
 80233c6:	463b      	mov	r3, r7
 80233c8:	f7ff ff16 	bl	80231f8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80233cc:	f82a 0b02 	strh.w	r0, [sl], #2
 80233d0:	9b08      	ldr	r3, [sp, #32]
 80233d2:	9a05      	ldr	r2, [sp, #20]
 80233d4:	881c      	ldrh	r4, [r3, #0]
 80233d6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80233da:	eba4 0409 	sub.w	r4, r4, r9
 80233de:	4413      	add	r3, r2
 80233e0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80233e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80233e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80233ea:	441d      	add	r5, r3
 80233ec:	e79c      	b.n	8023328 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80233ee:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80233f2:	45a3      	cmp	fp, r4
 80233f4:	d938      	bls.n	8023468 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80233f6:	9b06      	ldr	r3, [sp, #24]
 80233f8:	b1f3      	cbz	r3, 8023438 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80233fa:	782b      	ldrb	r3, [r5, #0]
 80233fc:	f003 030f 	and.w	r3, r3, #15
 8023400:	1c6a      	adds	r2, r5, #1
 8023402:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023406:	8023      	strh	r3, [r4, #0]
 8023408:	f109 30ff 	add.w	r0, r9, #4294967295
 802340c:	3402      	adds	r4, #2
 802340e:	2801      	cmp	r0, #1
 8023410:	4623      	mov	r3, r4
 8023412:	f104 0404 	add.w	r4, r4, #4
 8023416:	dd12      	ble.n	802343e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8023418:	7813      	ldrb	r3, [r2, #0]
 802341a:	091b      	lsrs	r3, r3, #4
 802341c:	3802      	subs	r0, #2
 802341e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023422:	f824 3c04 	strh.w	r3, [r4, #-4]
 8023426:	f812 3b01 	ldrb.w	r3, [r2], #1
 802342a:	f003 030f 	and.w	r3, r3, #15
 802342e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8023432:	f824 3c02 	strh.w	r3, [r4, #-2]
 8023436:	e7ea      	b.n	802340e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8023438:	462a      	mov	r2, r5
 802343a:	4648      	mov	r0, r9
 802343c:	e7e7      	b.n	802340e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802343e:	d106      	bne.n	802344e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8023440:	7812      	ldrb	r2, [r2, #0]
 8023442:	0912      	lsrs	r2, r2, #4
 8023444:	3302      	adds	r3, #2
 8023446:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802344a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802344e:	880c      	ldrh	r4, [r1, #0]
 8023450:	9a05      	ldr	r2, [sp, #20]
 8023452:	eba4 0409 	sub.w	r4, r4, r9
 8023456:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802345a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802345e:	4413      	add	r3, r2
 8023460:	fb93 f3f8 	sdiv	r3, r3, r8
 8023464:	441d      	add	r5, r3
 8023466:	e7c4      	b.n	80233f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8023468:	4b03      	ldr	r3, [pc, #12]	@ (8023478 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802346a:	6818      	ldr	r0, [r3, #0]
 802346c:	6803      	ldr	r3, [r0, #0]
 802346e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023470:	4798      	blx	r3
 8023472:	b00f      	add	sp, #60	@ 0x3c
 8023474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023478:	20002f34 	.word	0x20002f34
 802347c:	20002f2e 	.word	0x20002f2e

08023480 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8023480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023482:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8023486:	2dff      	cmp	r5, #255	@ 0xff
 8023488:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802348c:	d10c      	bne.n	80234a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802348e:	2bff      	cmp	r3, #255	@ 0xff
 8023490:	d10a      	bne.n	80234a8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8023492:	4b25      	ldr	r3, [pc, #148]	@ (8023528 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8023494:	0948      	lsrs	r0, r1, #5
 8023496:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802349a:	403b      	ands	r3, r7
 802349c:	4318      	orrs	r0, r3
 802349e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80234a2:	4308      	orrs	r0, r1
 80234a4:	b280      	uxth	r0, r0
 80234a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80234a8:	fb15 f503 	smulbb	r5, r5, r3
 80234ac:	b2ab      	uxth	r3, r5
 80234ae:	1c5d      	adds	r5, r3, #1
 80234b0:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80234b4:	1214      	asrs	r4, r2, #8
 80234b6:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80234ba:	fa1f fc85 	uxth.w	ip, r5
 80234be:	10d6      	asrs	r6, r2, #3
 80234c0:	00d0      	lsls	r0, r2, #3
 80234c2:	43ed      	mvns	r5, r5
 80234c4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80234c8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80234cc:	b2eb      	uxtb	r3, r5
 80234ce:	b2c0      	uxtb	r0, r0
 80234d0:	fb12 f20c 	smulbb	r2, r2, ip
 80234d4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80234d8:	fb04 2403 	mla	r4, r4, r3, r2
 80234dc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80234e0:	b2c8      	uxtb	r0, r1
 80234e2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80234e6:	b2fd      	uxtb	r5, r7
 80234e8:	fb10 f00c 	smulbb	r0, r0, ip
 80234ec:	b2a4      	uxth	r4, r4
 80234ee:	fb02 0003 	mla	r0, r2, r3, r0
 80234f2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80234f6:	fb15 f50c 	smulbb	r5, r5, ip
 80234fa:	fb06 5503 	mla	r5, r6, r3, r5
 80234fe:	b283      	uxth	r3, r0
 8023500:	1c60      	adds	r0, r4, #1
 8023502:	b2ad      	uxth	r5, r5
 8023504:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8023508:	1c58      	adds	r0, r3, #1
 802350a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802350e:	1c6b      	adds	r3, r5, #1
 8023510:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023514:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8023518:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802351c:	096d      	lsrs	r5, r5, #5
 802351e:	4320      	orrs	r0, r4
 8023520:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023524:	4328      	orrs	r0, r5
 8023526:	e7be      	b.n	80234a6 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8023528:	00fff800 	.word	0x00fff800

0802352c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802352c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023530:	461c      	mov	r4, r3
 8023532:	b08d      	sub	sp, #52	@ 0x34
 8023534:	460d      	mov	r5, r1
 8023536:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023538:	6861      	ldr	r1, [r4, #4]
 802353a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802353e:	4680      	mov	r8, r0
 8023540:	6820      	ldr	r0, [r4, #0]
 8023542:	4616      	mov	r6, r2
 8023544:	aa08      	add	r2, sp, #32
 8023546:	c203      	stmia	r2!, {r0, r1}
 8023548:	6818      	ldr	r0, [r3, #0]
 802354a:	6859      	ldr	r1, [r3, #4]
 802354c:	aa0a      	add	r2, sp, #40	@ 0x28
 802354e:	c203      	stmia	r2!, {r0, r1}
 8023550:	a808      	add	r0, sp, #32
 8023552:	f7ee fc77 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023556:	4621      	mov	r1, r4
 8023558:	a80a      	add	r0, sp, #40	@ 0x28
 802355a:	f7ee fc9b 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802355e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8023562:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8023566:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802356a:	f002 0301 	and.w	r3, r2, #1
 802356e:	9303      	str	r3, [sp, #12]
 8023570:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8023574:	f003 0101 	and.w	r1, r3, #1
 8023578:	9102      	str	r1, [sp, #8]
 802357a:	9802      	ldr	r0, [sp, #8]
 802357c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8023580:	4403      	add	r3, r0
 8023582:	fb01 2303 	mla	r3, r1, r3, r2
 8023586:	f04f 0a02 	mov.w	sl, #2
 802358a:	fb93 f3fa 	sdiv	r3, r3, sl
 802358e:	441d      	add	r5, r3
 8023590:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8023594:	441a      	add	r2, r3
 8023596:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802359a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802359e:	4a3f      	ldr	r2, [pc, #252]	@ (802369c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80235a0:	9205      	str	r2, [sp, #20]
 80235a2:	4419      	add	r1, r3
 80235a4:	6810      	ldr	r0, [r2, #0]
 80235a6:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80235aa:	6803      	ldr	r3, [r0, #0]
 80235ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80235ae:	4798      	blx	r3
 80235b0:	4b3b      	ldr	r3, [pc, #236]	@ (80236a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80235b2:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80235b6:	8819      	ldrh	r1, [r3, #0]
 80235b8:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 80235bc:	fb01 c404 	mla	r4, r1, r4, ip
 80235c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80235c4:	434f      	muls	r7, r1
 80235c6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80235ca:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80235ce:	3604      	adds	r6, #4
 80235d0:	9204      	str	r2, [sp, #16]
 80235d2:	9b04      	ldr	r3, [sp, #16]
 80235d4:	429c      	cmp	r4, r3
 80235d6:	d258      	bcs.n	802368a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80235d8:	9b03      	ldr	r3, [sp, #12]
 80235da:	2b00      	cmp	r3, #0
 80235dc:	d034      	beq.n	8023648 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80235de:	782b      	ldrb	r3, [r5, #0]
 80235e0:	f003 030f 	and.w	r3, r3, #15
 80235e4:	1c6f      	adds	r7, r5, #1
 80235e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80235ea:	0e0b      	lsrs	r3, r1, #24
 80235ec:	d006      	beq.n	80235fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80235ee:	8822      	ldrh	r2, [r4, #0]
 80235f0:	9300      	str	r3, [sp, #0]
 80235f2:	4640      	mov	r0, r8
 80235f4:	464b      	mov	r3, r9
 80235f6:	f7ff ff43 	bl	8023480 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80235fa:	8020      	strh	r0, [r4, #0]
 80235fc:	3402      	adds	r4, #2
 80235fe:	f10b 3aff 	add.w	sl, fp, #4294967295
 8023602:	f1ba 0f01 	cmp.w	sl, #1
 8023606:	dd22      	ble.n	802364e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8023608:	783b      	ldrb	r3, [r7, #0]
 802360a:	091b      	lsrs	r3, r3, #4
 802360c:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8023610:	0e0b      	lsrs	r3, r1, #24
 8023612:	d006      	beq.n	8023622 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8023614:	8822      	ldrh	r2, [r4, #0]
 8023616:	9300      	str	r3, [sp, #0]
 8023618:	4640      	mov	r0, r8
 802361a:	464b      	mov	r3, r9
 802361c:	f7ff ff30 	bl	8023480 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8023620:	8020      	strh	r0, [r4, #0]
 8023622:	f817 3b01 	ldrb.w	r3, [r7], #1
 8023626:	f003 030f 	and.w	r3, r3, #15
 802362a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802362e:	0e0b      	lsrs	r3, r1, #24
 8023630:	d006      	beq.n	8023640 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8023632:	8862      	ldrh	r2, [r4, #2]
 8023634:	9300      	str	r3, [sp, #0]
 8023636:	4640      	mov	r0, r8
 8023638:	464b      	mov	r3, r9
 802363a:	f7ff ff21 	bl	8023480 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802363e:	8060      	strh	r0, [r4, #2]
 8023640:	3404      	adds	r4, #4
 8023642:	f1aa 0a02 	sub.w	sl, sl, #2
 8023646:	e7dc      	b.n	8023602 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8023648:	462f      	mov	r7, r5
 802364a:	46da      	mov	sl, fp
 802364c:	e7d9      	b.n	8023602 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802364e:	d10d      	bne.n	802366c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8023650:	783b      	ldrb	r3, [r7, #0]
 8023652:	091b      	lsrs	r3, r3, #4
 8023654:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8023658:	0e0b      	lsrs	r3, r1, #24
 802365a:	d006      	beq.n	802366a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802365c:	8822      	ldrh	r2, [r4, #0]
 802365e:	9300      	str	r3, [sp, #0]
 8023660:	4640      	mov	r0, r8
 8023662:	464b      	mov	r3, r9
 8023664:	f7ff ff0c 	bl	8023480 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8023668:	8020      	strh	r0, [r4, #0]
 802366a:	3402      	adds	r4, #2
 802366c:	9b06      	ldr	r3, [sp, #24]
 802366e:	9a02      	ldr	r2, [sp, #8]
 8023670:	881b      	ldrh	r3, [r3, #0]
 8023672:	eba3 030b 	sub.w	r3, r3, fp
 8023676:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802367a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802367e:	4413      	add	r3, r2
 8023680:	9a07      	ldr	r2, [sp, #28]
 8023682:	fb93 f3f2 	sdiv	r3, r3, r2
 8023686:	441d      	add	r5, r3
 8023688:	e7a3      	b.n	80235d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802368a:	9b05      	ldr	r3, [sp, #20]
 802368c:	6818      	ldr	r0, [r3, #0]
 802368e:	6803      	ldr	r3, [r0, #0]
 8023690:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8023692:	4798      	blx	r3
 8023694:	b00d      	add	sp, #52	@ 0x34
 8023696:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802369a:	bf00      	nop
 802369c:	20002f34 	.word	0x20002f34
 80236a0:	20002f2e 	.word	0x20002f2e

080236a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80236a4:	b570      	push	{r4, r5, r6, lr}
 80236a6:	1214      	asrs	r4, r2, #8
 80236a8:	788d      	ldrb	r5, [r1, #2]
 80236aa:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80236ae:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80236b2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80236b6:	fb15 f503 	smulbb	r5, r5, r3
 80236ba:	fb04 5506 	mla	r5, r4, r6, r5
 80236be:	10d0      	asrs	r0, r2, #3
 80236c0:	784c      	ldrb	r4, [r1, #1]
 80236c2:	7809      	ldrb	r1, [r1, #0]
 80236c4:	00d2      	lsls	r2, r2, #3
 80236c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80236ca:	b2d2      	uxtb	r2, r2
 80236cc:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80236d0:	fb14 f403 	smulbb	r4, r4, r3
 80236d4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80236d8:	fb11 f303 	smulbb	r3, r1, r3
 80236dc:	fb00 4406 	mla	r4, r0, r6, r4
 80236e0:	fb02 3306 	mla	r3, r2, r6, r3
 80236e4:	b2ad      	uxth	r5, r5
 80236e6:	b29b      	uxth	r3, r3
 80236e8:	b2a4      	uxth	r4, r4
 80236ea:	1c68      	adds	r0, r5, #1
 80236ec:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80236f0:	1c62      	adds	r2, r4, #1
 80236f2:	1c58      	adds	r0, r3, #1
 80236f4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80236f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80236fc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8023700:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8023704:	0964      	lsrs	r4, r4, #5
 8023706:	4328      	orrs	r0, r5
 8023708:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802370c:	4320      	orrs	r0, r4
 802370e:	bd70      	pop	{r4, r5, r6, pc}

08023710 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8023710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023714:	b08f      	sub	sp, #60	@ 0x3c
 8023716:	461c      	mov	r4, r3
 8023718:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 802371c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802371e:	4682      	mov	sl, r0
 8023720:	460e      	mov	r6, r1
 8023722:	4615      	mov	r5, r2
 8023724:	2f00      	cmp	r7, #0
 8023726:	f000 8142 	beq.w	80239ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802372a:	6820      	ldr	r0, [r4, #0]
 802372c:	6861      	ldr	r1, [r4, #4]
 802372e:	aa0a      	add	r2, sp, #40	@ 0x28
 8023730:	c203      	stmia	r2!, {r0, r1}
 8023732:	6818      	ldr	r0, [r3, #0]
 8023734:	6859      	ldr	r1, [r3, #4]
 8023736:	aa0c      	add	r2, sp, #48	@ 0x30
 8023738:	c203      	stmia	r2!, {r0, r1}
 802373a:	a80a      	add	r0, sp, #40	@ 0x28
 802373c:	f7ee fb82 	bl	8011e44 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8023740:	4621      	mov	r1, r4
 8023742:	a80c      	add	r0, sp, #48	@ 0x30
 8023744:	f7ee fba6 	bl	8011e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8023748:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802374c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8023750:	f002 0301 	and.w	r3, r2, #1
 8023754:	9306      	str	r3, [sp, #24]
 8023756:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802375a:	f003 0101 	and.w	r1, r3, #1
 802375e:	9105      	str	r1, [sp, #20]
 8023760:	9805      	ldr	r0, [sp, #20]
 8023762:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8023766:	4403      	add	r3, r0
 8023768:	fb01 2303 	mla	r3, r1, r3, r2
 802376c:	f04f 0802 	mov.w	r8, #2
 8023770:	fb93 f3f8 	sdiv	r3, r3, r8
 8023774:	441e      	add	r6, r3
 8023776:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802377a:	441a      	add	r2, r3
 802377c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8023780:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8023784:	4419      	add	r1, r3
 8023786:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802378a:	9303      	str	r3, [sp, #12]
 802378c:	4b89      	ldr	r3, [pc, #548]	@ (80239b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802378e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8023792:	6818      	ldr	r0, [r3, #0]
 8023794:	6803      	ldr	r3, [r0, #0]
 8023796:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8023798:	4798      	blx	r3
 802379a:	4a87      	ldr	r2, [pc, #540]	@ (80239b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802379c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80237a0:	8813      	ldrh	r3, [r2, #0]
 80237a2:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 80237a6:	2fff      	cmp	r7, #255	@ 0xff
 80237a8:	fb03 9404 	mla	r4, r3, r4, r9
 80237ac:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80237b0:	f105 0504 	add.w	r5, r5, #4
 80237b4:	4694      	mov	ip, r2
 80237b6:	fb03 f30b 	mul.w	r3, r3, fp
 80237ba:	d071      	beq.n	80238a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 80237bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80237c0:	43f9      	mvns	r1, r7
 80237c2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80237c6:	b2c9      	uxtb	r1, r1
 80237c8:	9104      	str	r1, [sp, #16]
 80237ca:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80237ce:	9b07      	ldr	r3, [sp, #28]
 80237d0:	42a3      	cmp	r3, r4
 80237d2:	f240 80e7 	bls.w	80239a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80237d6:	9b06      	ldr	r3, [sp, #24]
 80237d8:	2b00      	cmp	r3, #0
 80237da:	d03d      	beq.n	8023858 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80237dc:	7831      	ldrb	r1, [r6, #0]
 80237de:	9b04      	ldr	r3, [sp, #16]
 80237e0:	8822      	ldrh	r2, [r4, #0]
 80237e2:	9300      	str	r3, [sp, #0]
 80237e4:	f001 010f 	and.w	r1, r1, #15
 80237e8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80237ec:	463b      	mov	r3, r7
 80237ee:	4429      	add	r1, r5
 80237f0:	4650      	mov	r0, sl
 80237f2:	f7ff ff57 	bl	80236a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80237f6:	9b03      	ldr	r3, [sp, #12]
 80237f8:	f824 0b02 	strh.w	r0, [r4], #2
 80237fc:	f106 0801 	add.w	r8, r6, #1
 8023800:	f103 3bff 	add.w	fp, r3, #4294967295
 8023804:	f1bb 0f01 	cmp.w	fp, #1
 8023808:	46a1      	mov	r9, r4
 802380a:	f104 0404 	add.w	r4, r4, #4
 802380e:	dd27      	ble.n	8023860 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8023810:	f898 1000 	ldrb.w	r1, [r8]
 8023814:	9b04      	ldr	r3, [sp, #16]
 8023816:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802381a:	9300      	str	r3, [sp, #0]
 802381c:	0909      	lsrs	r1, r1, #4
 802381e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023822:	463b      	mov	r3, r7
 8023824:	4429      	add	r1, r5
 8023826:	4650      	mov	r0, sl
 8023828:	f7ff ff3c 	bl	80236a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802382c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8023830:	f818 1b01 	ldrb.w	r1, [r8], #1
 8023834:	9b04      	ldr	r3, [sp, #16]
 8023836:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802383a:	9300      	str	r3, [sp, #0]
 802383c:	f001 010f 	and.w	r1, r1, #15
 8023840:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023844:	463b      	mov	r3, r7
 8023846:	4429      	add	r1, r5
 8023848:	4650      	mov	r0, sl
 802384a:	f7ff ff2b 	bl	80236a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802384e:	f1ab 0b02 	sub.w	fp, fp, #2
 8023852:	f824 0c02 	strh.w	r0, [r4, #-2]
 8023856:	e7d5      	b.n	8023804 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8023858:	46b0      	mov	r8, r6
 802385a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802385e:	e7d1      	b.n	8023804 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8023860:	d10f      	bne.n	8023882 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8023862:	f898 1000 	ldrb.w	r1, [r8]
 8023866:	9b04      	ldr	r3, [sp, #16]
 8023868:	f8b9 2000 	ldrh.w	r2, [r9]
 802386c:	9300      	str	r3, [sp, #0]
 802386e:	0909      	lsrs	r1, r1, #4
 8023870:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8023874:	463b      	mov	r3, r7
 8023876:	4429      	add	r1, r5
 8023878:	4650      	mov	r0, sl
 802387a:	f7ff ff13 	bl	80236a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802387e:	f829 0b02 	strh.w	r0, [r9], #2
 8023882:	9b08      	ldr	r3, [sp, #32]
 8023884:	9a05      	ldr	r2, [sp, #20]
 8023886:	881c      	ldrh	r4, [r3, #0]
 8023888:	9b03      	ldr	r3, [sp, #12]
 802388a:	1ae4      	subs	r4, r4, r3
 802388c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8023890:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023894:	4413      	add	r3, r2
 8023896:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023898:	fb93 f3f2 	sdiv	r3, r3, r2
 802389c:	441e      	add	r6, r3
 802389e:	e796      	b.n	80237ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 80238a0:	4f46      	ldr	r7, [pc, #280]	@ (80239bc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80238a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80238a6:	42a3      	cmp	r3, r4
 80238a8:	d97c      	bls.n	80239a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80238aa:	9a06      	ldr	r2, [sp, #24]
 80238ac:	2a00      	cmp	r2, #0
 80238ae:	d054      	beq.n	802395a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 80238b0:	7830      	ldrb	r0, [r6, #0]
 80238b2:	f000 000f 	and.w	r0, r0, #15
 80238b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80238ba:	eb05 0e00 	add.w	lr, r5, r0
 80238be:	5c28      	ldrb	r0, [r5, r0]
 80238c0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80238c4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80238c8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80238cc:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80238d0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80238d4:	ea42 020e 	orr.w	r2, r2, lr
 80238d8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80238dc:	f824 2b02 	strh.w	r2, [r4], #2
 80238e0:	9a03      	ldr	r2, [sp, #12]
 80238e2:	1c71      	adds	r1, r6, #1
 80238e4:	f102 3eff 	add.w	lr, r2, #4294967295
 80238e8:	f1be 0f01 	cmp.w	lr, #1
 80238ec:	4620      	mov	r0, r4
 80238ee:	f104 0404 	add.w	r4, r4, #4
 80238f2:	dd36      	ble.n	8023962 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80238f4:	7808      	ldrb	r0, [r1, #0]
 80238f6:	0900      	lsrs	r0, r0, #4
 80238f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80238fc:	eb05 0a00 	add.w	sl, r5, r0
 8023900:	f1ae 0e02 	sub.w	lr, lr, #2
 8023904:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8023908:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802390c:	00d2      	lsls	r2, r2, #3
 802390e:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023912:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023916:	ea49 0202 	orr.w	r2, r9, r2
 802391a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802391e:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023922:	f824 2c04 	strh.w	r2, [r4, #-4]
 8023926:	f811 0b01 	ldrb.w	r0, [r1], #1
 802392a:	f000 000f 	and.w	r0, r0, #15
 802392e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8023932:	eb05 0a00 	add.w	sl, r5, r0
 8023936:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802393a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802393e:	00d2      	lsls	r2, r2, #3
 8023940:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8023944:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023948:	ea49 0202 	orr.w	r2, r9, r2
 802394c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8023950:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8023954:	f824 2c02 	strh.w	r2, [r4, #-2]
 8023958:	e7c6      	b.n	80238e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 802395a:	4631      	mov	r1, r6
 802395c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8023960:	e7c2      	b.n	80238e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8023962:	d111      	bne.n	8023988 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8023964:	7809      	ldrb	r1, [r1, #0]
 8023966:	0909      	lsrs	r1, r1, #4
 8023968:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802396c:	186c      	adds	r4, r5, r1
 802396e:	5c69      	ldrb	r1, [r5, r1]
 8023970:	78a2      	ldrb	r2, [r4, #2]
 8023972:	7864      	ldrb	r4, [r4, #1]
 8023974:	00e4      	lsls	r4, r4, #3
 8023976:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802397a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802397e:	4322      	orrs	r2, r4
 8023980:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8023984:	f820 2b02 	strh.w	r2, [r0], #2
 8023988:	9a03      	ldr	r2, [sp, #12]
 802398a:	f8bc 4000 	ldrh.w	r4, [ip]
 802398e:	9905      	ldr	r1, [sp, #20]
 8023990:	1aa4      	subs	r4, r4, r2
 8023992:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8023996:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802399a:	440a      	add	r2, r1
 802399c:	fb92 f2f8 	sdiv	r2, r2, r8
 80239a0:	4416      	add	r6, r2
 80239a2:	e780      	b.n	80238a6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 80239a4:	4b03      	ldr	r3, [pc, #12]	@ (80239b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80239a6:	6818      	ldr	r0, [r3, #0]
 80239a8:	6803      	ldr	r3, [r0, #0]
 80239aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80239ac:	4798      	blx	r3
 80239ae:	b00f      	add	sp, #60	@ 0x3c
 80239b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80239b4:	20002f34 	.word	0x20002f34
 80239b8:	20002f2e 	.word	0x20002f2e
 80239bc:	fffff800 	.word	0xfffff800

080239c0 <CRC_Lock>:
 80239c0:	b530      	push	{r4, r5, lr}
 80239c2:	4a2d      	ldr	r2, [pc, #180]	@ (8023a78 <CRC_Lock+0xb8>)
 80239c4:	6813      	ldr	r3, [r2, #0]
 80239c6:	f023 0301 	bic.w	r3, r3, #1
 80239ca:	6013      	str	r3, [r2, #0]
 80239cc:	4b2b      	ldr	r3, [pc, #172]	@ (8023a7c <CRC_Lock+0xbc>)
 80239ce:	681c      	ldr	r4, [r3, #0]
 80239d0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80239d4:	4014      	ands	r4, r2
 80239d6:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80239da:	42ac      	cmp	r4, r5
 80239dc:	d005      	beq.n	80239ea <CRC_Lock+0x2a>
 80239de:	681c      	ldr	r4, [r3, #0]
 80239e0:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80239e4:	4014      	ands	r4, r2
 80239e6:	42ac      	cmp	r4, r5
 80239e8:	d125      	bne.n	8023a36 <CRC_Lock+0x76>
 80239ea:	4b25      	ldr	r3, [pc, #148]	@ (8023a80 <CRC_Lock+0xc0>)
 80239ec:	681b      	ldr	r3, [r3, #0]
 80239ee:	2b00      	cmp	r3, #0
 80239f0:	d139      	bne.n	8023a66 <CRC_Lock+0xa6>
 80239f2:	4b24      	ldr	r3, [pc, #144]	@ (8023a84 <CRC_Lock+0xc4>)
 80239f4:	681a      	ldr	r2, [r3, #0]
 80239f6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80239fa:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80239fe:	d00d      	beq.n	8023a1c <CRC_Lock+0x5c>
 8023a00:	681a      	ldr	r2, [r3, #0]
 8023a02:	f240 4483 	movw	r4, #1155	@ 0x483
 8023a06:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8023a0a:	42a2      	cmp	r2, r4
 8023a0c:	d006      	beq.n	8023a1c <CRC_Lock+0x5c>
 8023a0e:	681b      	ldr	r3, [r3, #0]
 8023a10:	f240 4285 	movw	r2, #1157	@ 0x485
 8023a14:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8023a18:	4293      	cmp	r3, r2
 8023a1a:	d124      	bne.n	8023a66 <CRC_Lock+0xa6>
 8023a1c:	4b1a      	ldr	r3, [pc, #104]	@ (8023a88 <CRC_Lock+0xc8>)
 8023a1e:	2201      	movs	r2, #1
 8023a20:	601a      	str	r2, [r3, #0]
 8023a22:	681a      	ldr	r2, [r3, #0]
 8023a24:	2a00      	cmp	r2, #0
 8023a26:	d1fc      	bne.n	8023a22 <CRC_Lock+0x62>
 8023a28:	4b18      	ldr	r3, [pc, #96]	@ (8023a8c <CRC_Lock+0xcc>)
 8023a2a:	6018      	str	r0, [r3, #0]
 8023a2c:	6818      	ldr	r0, [r3, #0]
 8023a2e:	1a43      	subs	r3, r0, r1
 8023a30:	4258      	negs	r0, r3
 8023a32:	4158      	adcs	r0, r3
 8023a34:	e00e      	b.n	8023a54 <CRC_Lock+0x94>
 8023a36:	681b      	ldr	r3, [r3, #0]
 8023a38:	4013      	ands	r3, r2
 8023a3a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8023a3e:	4293      	cmp	r3, r2
 8023a40:	d111      	bne.n	8023a66 <CRC_Lock+0xa6>
 8023a42:	4b13      	ldr	r3, [pc, #76]	@ (8023a90 <CRC_Lock+0xd0>)
 8023a44:	681b      	ldr	r3, [r3, #0]
 8023a46:	f240 4286 	movw	r2, #1158	@ 0x486
 8023a4a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8023a4e:	4293      	cmp	r3, r2
 8023a50:	d001      	beq.n	8023a56 <CRC_Lock+0x96>
 8023a52:	2000      	movs	r0, #0
 8023a54:	bd30      	pop	{r4, r5, pc}
 8023a56:	4b0f      	ldr	r3, [pc, #60]	@ (8023a94 <CRC_Lock+0xd4>)
 8023a58:	2201      	movs	r2, #1
 8023a5a:	601a      	str	r2, [r3, #0]
 8023a5c:	681a      	ldr	r2, [r3, #0]
 8023a5e:	2a00      	cmp	r2, #0
 8023a60:	d1fc      	bne.n	8023a5c <CRC_Lock+0x9c>
 8023a62:	4b0d      	ldr	r3, [pc, #52]	@ (8023a98 <CRC_Lock+0xd8>)
 8023a64:	e7e1      	b.n	8023a2a <CRC_Lock+0x6a>
 8023a66:	4b0d      	ldr	r3, [pc, #52]	@ (8023a9c <CRC_Lock+0xdc>)
 8023a68:	2201      	movs	r2, #1
 8023a6a:	601a      	str	r2, [r3, #0]
 8023a6c:	681a      	ldr	r2, [r3, #0]
 8023a6e:	2a00      	cmp	r2, #0
 8023a70:	d1fc      	bne.n	8023a6c <CRC_Lock+0xac>
 8023a72:	4b0b      	ldr	r3, [pc, #44]	@ (8023aa0 <CRC_Lock+0xe0>)
 8023a74:	e7d9      	b.n	8023a2a <CRC_Lock+0x6a>
 8023a76:	bf00      	nop
 8023a78:	e0002000 	.word	0xe0002000
 8023a7c:	e000ed00 	.word	0xe000ed00
 8023a80:	e0042000 	.word	0xe0042000
 8023a84:	5c001000 	.word	0x5c001000
 8023a88:	58024c08 	.word	0x58024c08
 8023a8c:	58024c00 	.word	0x58024c00
 8023a90:	46008ff0 	.word	0x46008ff0
 8023a94:	46024c08 	.word	0x46024c08
 8023a98:	46024c00 	.word	0x46024c00
 8023a9c:	40023008 	.word	0x40023008
 8023aa0:	40023000 	.word	0x40023000

08023aa4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8023aa4:	6101      	str	r1, [r0, #16]
 8023aa6:	4770      	bx	lr

08023aa8 <_ZN8touchgfx8Gestures4tickEv>:
 8023aa8:	7b83      	ldrb	r3, [r0, #14]
 8023aaa:	b14b      	cbz	r3, 8023ac0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8023aac:	8903      	ldrh	r3, [r0, #8]
 8023aae:	3301      	adds	r3, #1
 8023ab0:	b29b      	uxth	r3, r3
 8023ab2:	2b07      	cmp	r3, #7
 8023ab4:	8103      	strh	r3, [r0, #8]
 8023ab6:	bf81      	itttt	hi
 8023ab8:	2300      	movhi	r3, #0
 8023aba:	8143      	strhhi	r3, [r0, #10]
 8023abc:	8183      	strhhi	r3, [r0, #12]
 8023abe:	7383      	strbhi	r3, [r0, #14]
 8023ac0:	4770      	bx	lr
	...

08023ac4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8023ac4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8023ac8:	4698      	mov	r8, r3
 8023aca:	8883      	ldrh	r3, [r0, #4]
 8023acc:	f8ad 3006 	strh.w	r3, [sp, #6]
 8023ad0:	eba8 0303 	sub.w	r3, r8, r3
 8023ad4:	b21b      	sxth	r3, r3
 8023ad6:	4604      	mov	r4, r0
 8023ad8:	2b00      	cmp	r3, #0
 8023ada:	4617      	mov	r7, r2
 8023adc:	4a18      	ldr	r2, [pc, #96]	@ (8023b40 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8023ade:	9200      	str	r2, [sp, #0]
 8023ae0:	bfb8      	it	lt
 8023ae2:	425b      	neglt	r3, r3
 8023ae4:	8aa2      	ldrh	r2, [r4, #20]
 8023ae6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8023aea:	f8ad 800a 	strh.w	r8, [sp, #10]
 8023aee:	b21b      	sxth	r3, r3
 8023af0:	460e      	mov	r6, r1
 8023af2:	4293      	cmp	r3, r2
 8023af4:	88c1      	ldrh	r1, [r0, #6]
 8023af6:	f8ad 1008 	strh.w	r1, [sp, #8]
 8023afa:	f04f 0000 	mov.w	r0, #0
 8023afe:	f88d 0004 	strb.w	r0, [sp, #4]
 8023b02:	f8ad 500c 	strh.w	r5, [sp, #12]
 8023b06:	dc07      	bgt.n	8023b18 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8023b08:	1a69      	subs	r1, r5, r1
 8023b0a:	b209      	sxth	r1, r1
 8023b0c:	2900      	cmp	r1, #0
 8023b0e:	bfb8      	it	lt
 8023b10:	4249      	neglt	r1, r1
 8023b12:	b209      	sxth	r1, r1
 8023b14:	428a      	cmp	r2, r1
 8023b16:	da10      	bge.n	8023b3a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8023b18:	6920      	ldr	r0, [r4, #16]
 8023b1a:	6803      	ldr	r3, [r0, #0]
 8023b1c:	4669      	mov	r1, sp
 8023b1e:	685b      	ldr	r3, [r3, #4]
 8023b20:	4798      	blx	r3
 8023b22:	eba8 0606 	sub.w	r6, r8, r6
 8023b26:	2300      	movs	r3, #0
 8023b28:	1bef      	subs	r7, r5, r7
 8023b2a:	2001      	movs	r0, #1
 8023b2c:	8123      	strh	r3, [r4, #8]
 8023b2e:	8166      	strh	r6, [r4, #10]
 8023b30:	81a7      	strh	r7, [r4, #12]
 8023b32:	f8a4 8004 	strh.w	r8, [r4, #4]
 8023b36:	80e5      	strh	r5, [r4, #6]
 8023b38:	73a0      	strb	r0, [r4, #14]
 8023b3a:	b004      	add	sp, #16
 8023b3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023b40:	08027284 	.word	0x08027284

08023b44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8023b44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8023b46:	461e      	mov	r6, r3
 8023b48:	1e4b      	subs	r3, r1, #1
 8023b4a:	2b01      	cmp	r3, #1
 8023b4c:	b085      	sub	sp, #20
 8023b4e:	4604      	mov	r4, r0
 8023b50:	460d      	mov	r5, r1
 8023b52:	4617      	mov	r7, r2
 8023b54:	d84b      	bhi.n	8023bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8023b56:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8023b5a:	1cd3      	adds	r3, r2, #3
 8023b5c:	b29b      	uxth	r3, r3
 8023b5e:	2b06      	cmp	r3, #6
 8023b60:	d916      	bls.n	8023b90 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8023b62:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8023c04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023b66:	f8cd c004 	str.w	ip, [sp, #4]
 8023b6a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023b6e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023b72:	6900      	ldr	r0, [r0, #16]
 8023b74:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023b78:	f04f 0c00 	mov.w	ip, #0
 8023b7c:	f88d c008 	strb.w	ip, [sp, #8]
 8023b80:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023b84:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023b88:	6803      	ldr	r3, [r0, #0]
 8023b8a:	a901      	add	r1, sp, #4
 8023b8c:	689b      	ldr	r3, [r3, #8]
 8023b8e:	4798      	blx	r3
 8023b90:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8023b94:	1cd3      	adds	r3, r2, #3
 8023b96:	b29b      	uxth	r3, r3
 8023b98:	2b06      	cmp	r3, #6
 8023b9a:	d916      	bls.n	8023bca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023b9c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8023c04 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8023ba0:	f8cd c004 	str.w	ip, [sp, #4]
 8023ba4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8023ba8:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8023bac:	6920      	ldr	r0, [r4, #16]
 8023bae:	f8ad 100c 	strh.w	r1, [sp, #12]
 8023bb2:	f04f 0c01 	mov.w	ip, #1
 8023bb6:	f88d c008 	strb.w	ip, [sp, #8]
 8023bba:	f8ad 200a 	strh.w	r2, [sp, #10]
 8023bbe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023bc2:	6803      	ldr	r3, [r0, #0]
 8023bc4:	a901      	add	r1, sp, #4
 8023bc6:	689b      	ldr	r3, [r3, #8]
 8023bc8:	4798      	blx	r3
 8023bca:	4b0d      	ldr	r3, [pc, #52]	@ (8023c00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8023bcc:	9301      	str	r3, [sp, #4]
 8023bce:	6920      	ldr	r0, [r4, #16]
 8023bd0:	f88d 5008 	strb.w	r5, [sp, #8]
 8023bd4:	2300      	movs	r3, #0
 8023bd6:	f8ad 700a 	strh.w	r7, [sp, #10]
 8023bda:	f8ad 600c 	strh.w	r6, [sp, #12]
 8023bde:	f8ad 300e 	strh.w	r3, [sp, #14]
 8023be2:	6803      	ldr	r3, [r0, #0]
 8023be4:	a901      	add	r1, sp, #4
 8023be6:	681b      	ldr	r3, [r3, #0]
 8023be8:	4798      	blx	r3
 8023bea:	b005      	add	sp, #20
 8023bec:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023bee:	2900      	cmp	r1, #0
 8023bf0:	d1eb      	bne.n	8023bca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023bf2:	80a2      	strh	r2, [r4, #4]
 8023bf4:	80c6      	strh	r6, [r0, #6]
 8023bf6:	60a1      	str	r1, [r4, #8]
 8023bf8:	81a1      	strh	r1, [r4, #12]
 8023bfa:	73a1      	strb	r1, [r4, #14]
 8023bfc:	e7e5      	b.n	8023bca <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8023bfe:	bf00      	nop
 8023c00:	08027270 	.word	0x08027270
 8023c04:	08027298 	.word	0x08027298

08023c08 <__aeabi_atexit>:
 8023c08:	460b      	mov	r3, r1
 8023c0a:	4601      	mov	r1, r0
 8023c0c:	4618      	mov	r0, r3
 8023c0e:	f000 b991 	b.w	8023f34 <__cxa_atexit>

08023c12 <_ZdlPvj>:
 8023c12:	f000 b812 	b.w	8023c3a <_ZdlPv>

08023c16 <__cxa_guard_acquire>:
 8023c16:	6802      	ldr	r2, [r0, #0]
 8023c18:	07d2      	lsls	r2, r2, #31
 8023c1a:	4603      	mov	r3, r0
 8023c1c:	d405      	bmi.n	8023c2a <__cxa_guard_acquire+0x14>
 8023c1e:	7842      	ldrb	r2, [r0, #1]
 8023c20:	b102      	cbz	r2, 8023c24 <__cxa_guard_acquire+0xe>
 8023c22:	deff      	udf	#255	@ 0xff
 8023c24:	2001      	movs	r0, #1
 8023c26:	7058      	strb	r0, [r3, #1]
 8023c28:	4770      	bx	lr
 8023c2a:	2000      	movs	r0, #0
 8023c2c:	4770      	bx	lr

08023c2e <__cxa_guard_release>:
 8023c2e:	2301      	movs	r3, #1
 8023c30:	6003      	str	r3, [r0, #0]
 8023c32:	4770      	bx	lr

08023c34 <__cxa_pure_virtual>:
 8023c34:	b508      	push	{r3, lr}
 8023c36:	f000 f80f 	bl	8023c58 <_ZSt9terminatev>

08023c3a <_ZdlPv>:
 8023c3a:	f000 b8c5 	b.w	8023dc8 <free>

08023c3e <_ZN10__cxxabiv111__terminateEPFvvE>:
 8023c3e:	b508      	push	{r3, lr}
 8023c40:	4780      	blx	r0
 8023c42:	f000 f88d 	bl	8023d60 <abort>
	...

08023c48 <_ZSt13get_terminatev>:
 8023c48:	4b02      	ldr	r3, [pc, #8]	@ (8023c54 <_ZSt13get_terminatev+0xc>)
 8023c4a:	6818      	ldr	r0, [r3, #0]
 8023c4c:	f3bf 8f5b 	dmb	ish
 8023c50:	4770      	bx	lr
 8023c52:	bf00      	nop
 8023c54:	2000009c 	.word	0x2000009c

08023c58 <_ZSt9terminatev>:
 8023c58:	b508      	push	{r3, lr}
 8023c5a:	f7ff fff5 	bl	8023c48 <_ZSt13get_terminatev>
 8023c5e:	f7ff ffee 	bl	8023c3e <_ZN10__cxxabiv111__terminateEPFvvE>
 8023c62:	0000      	movs	r0, r0
 8023c64:	0000      	movs	r0, r0
	...

08023c68 <floor>:
 8023c68:	ec51 0b10 	vmov	r0, r1, d0
 8023c6c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8023c70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8023c74:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8023c78:	2e13      	cmp	r6, #19
 8023c7a:	460c      	mov	r4, r1
 8023c7c:	4605      	mov	r5, r0
 8023c7e:	4680      	mov	r8, r0
 8023c80:	dc34      	bgt.n	8023cec <floor+0x84>
 8023c82:	2e00      	cmp	r6, #0
 8023c84:	da17      	bge.n	8023cb6 <floor+0x4e>
 8023c86:	a332      	add	r3, pc, #200	@ (adr r3, 8023d50 <floor+0xe8>)
 8023c88:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023c8c:	f7dc fb16 	bl	80002bc <__adddf3>
 8023c90:	2200      	movs	r2, #0
 8023c92:	2300      	movs	r3, #0
 8023c94:	f7dc ff58 	bl	8000b48 <__aeabi_dcmpgt>
 8023c98:	b150      	cbz	r0, 8023cb0 <floor+0x48>
 8023c9a:	2c00      	cmp	r4, #0
 8023c9c:	da55      	bge.n	8023d4a <floor+0xe2>
 8023c9e:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8023ca2:	432c      	orrs	r4, r5
 8023ca4:	2500      	movs	r5, #0
 8023ca6:	42ac      	cmp	r4, r5
 8023ca8:	4c2b      	ldr	r4, [pc, #172]	@ (8023d58 <floor+0xf0>)
 8023caa:	bf08      	it	eq
 8023cac:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8023cb0:	4621      	mov	r1, r4
 8023cb2:	4628      	mov	r0, r5
 8023cb4:	e023      	b.n	8023cfe <floor+0x96>
 8023cb6:	4f29      	ldr	r7, [pc, #164]	@ (8023d5c <floor+0xf4>)
 8023cb8:	4137      	asrs	r7, r6
 8023cba:	ea01 0307 	and.w	r3, r1, r7
 8023cbe:	4303      	orrs	r3, r0
 8023cc0:	d01d      	beq.n	8023cfe <floor+0x96>
 8023cc2:	a323      	add	r3, pc, #140	@ (adr r3, 8023d50 <floor+0xe8>)
 8023cc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023cc8:	f7dc faf8 	bl	80002bc <__adddf3>
 8023ccc:	2200      	movs	r2, #0
 8023cce:	2300      	movs	r3, #0
 8023cd0:	f7dc ff3a 	bl	8000b48 <__aeabi_dcmpgt>
 8023cd4:	2800      	cmp	r0, #0
 8023cd6:	d0eb      	beq.n	8023cb0 <floor+0x48>
 8023cd8:	2c00      	cmp	r4, #0
 8023cda:	bfbe      	ittt	lt
 8023cdc:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8023ce0:	4133      	asrlt	r3, r6
 8023ce2:	18e4      	addlt	r4, r4, r3
 8023ce4:	ea24 0407 	bic.w	r4, r4, r7
 8023ce8:	2500      	movs	r5, #0
 8023cea:	e7e1      	b.n	8023cb0 <floor+0x48>
 8023cec:	2e33      	cmp	r6, #51	@ 0x33
 8023cee:	dd0a      	ble.n	8023d06 <floor+0x9e>
 8023cf0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8023cf4:	d103      	bne.n	8023cfe <floor+0x96>
 8023cf6:	4602      	mov	r2, r0
 8023cf8:	460b      	mov	r3, r1
 8023cfa:	f7dc fadf 	bl	80002bc <__adddf3>
 8023cfe:	ec41 0b10 	vmov	d0, r0, r1
 8023d02:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8023d06:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8023d0a:	f04f 37ff 	mov.w	r7, #4294967295
 8023d0e:	40df      	lsrs	r7, r3
 8023d10:	4207      	tst	r7, r0
 8023d12:	d0f4      	beq.n	8023cfe <floor+0x96>
 8023d14:	a30e      	add	r3, pc, #56	@ (adr r3, 8023d50 <floor+0xe8>)
 8023d16:	e9d3 2300 	ldrd	r2, r3, [r3]
 8023d1a:	f7dc facf 	bl	80002bc <__adddf3>
 8023d1e:	2200      	movs	r2, #0
 8023d20:	2300      	movs	r3, #0
 8023d22:	f7dc ff11 	bl	8000b48 <__aeabi_dcmpgt>
 8023d26:	2800      	cmp	r0, #0
 8023d28:	d0c2      	beq.n	8023cb0 <floor+0x48>
 8023d2a:	2c00      	cmp	r4, #0
 8023d2c:	da0a      	bge.n	8023d44 <floor+0xdc>
 8023d2e:	2e14      	cmp	r6, #20
 8023d30:	d101      	bne.n	8023d36 <floor+0xce>
 8023d32:	3401      	adds	r4, #1
 8023d34:	e006      	b.n	8023d44 <floor+0xdc>
 8023d36:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8023d3a:	2301      	movs	r3, #1
 8023d3c:	40b3      	lsls	r3, r6
 8023d3e:	441d      	add	r5, r3
 8023d40:	4545      	cmp	r5, r8
 8023d42:	d3f6      	bcc.n	8023d32 <floor+0xca>
 8023d44:	ea25 0507 	bic.w	r5, r5, r7
 8023d48:	e7b2      	b.n	8023cb0 <floor+0x48>
 8023d4a:	2500      	movs	r5, #0
 8023d4c:	462c      	mov	r4, r5
 8023d4e:	e7af      	b.n	8023cb0 <floor+0x48>
 8023d50:	8800759c 	.word	0x8800759c
 8023d54:	7e37e43c 	.word	0x7e37e43c
 8023d58:	bff00000 	.word	0xbff00000
 8023d5c:	000fffff 	.word	0x000fffff

08023d60 <abort>:
 8023d60:	b508      	push	{r3, lr}
 8023d62:	2006      	movs	r0, #6
 8023d64:	f000 fa3c 	bl	80241e0 <raise>
 8023d68:	2001      	movs	r0, #1
 8023d6a:	f7de f895 	bl	8001e98 <_exit>
	...

08023d70 <__assert_func>:
 8023d70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8023d72:	4614      	mov	r4, r2
 8023d74:	461a      	mov	r2, r3
 8023d76:	4b09      	ldr	r3, [pc, #36]	@ (8023d9c <__assert_func+0x2c>)
 8023d78:	681b      	ldr	r3, [r3, #0]
 8023d7a:	4605      	mov	r5, r0
 8023d7c:	68d8      	ldr	r0, [r3, #12]
 8023d7e:	b954      	cbnz	r4, 8023d96 <__assert_func+0x26>
 8023d80:	4b07      	ldr	r3, [pc, #28]	@ (8023da0 <__assert_func+0x30>)
 8023d82:	461c      	mov	r4, r3
 8023d84:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8023d88:	9100      	str	r1, [sp, #0]
 8023d8a:	462b      	mov	r3, r5
 8023d8c:	4905      	ldr	r1, [pc, #20]	@ (8023da4 <__assert_func+0x34>)
 8023d8e:	f000 f983 	bl	8024098 <fiprintf>
 8023d92:	f7ff ffe5 	bl	8023d60 <abort>
 8023d96:	4b04      	ldr	r3, [pc, #16]	@ (8023da8 <__assert_func+0x38>)
 8023d98:	e7f4      	b.n	8023d84 <__assert_func+0x14>
 8023d9a:	bf00      	nop
 8023d9c:	200000ac 	.word	0x200000ac
 8023da0:	08027607 	.word	0x08027607
 8023da4:	080275d9 	.word	0x080275d9
 8023da8:	080275cc 	.word	0x080275cc

08023dac <atexit>:
 8023dac:	2300      	movs	r3, #0
 8023dae:	4601      	mov	r1, r0
 8023db0:	461a      	mov	r2, r3
 8023db2:	4618      	mov	r0, r3
 8023db4:	f000 bac2 	b.w	802433c <__register_exitproc>

08023db8 <malloc>:
 8023db8:	4b02      	ldr	r3, [pc, #8]	@ (8023dc4 <malloc+0xc>)
 8023dba:	4601      	mov	r1, r0
 8023dbc:	6818      	ldr	r0, [r3, #0]
 8023dbe:	f000 b82d 	b.w	8023e1c <_malloc_r>
 8023dc2:	bf00      	nop
 8023dc4:	200000ac 	.word	0x200000ac

08023dc8 <free>:
 8023dc8:	4b02      	ldr	r3, [pc, #8]	@ (8023dd4 <free+0xc>)
 8023dca:	4601      	mov	r1, r0
 8023dcc:	6818      	ldr	r0, [r3, #0]
 8023dce:	f000 bb11 	b.w	80243f4 <_free_r>
 8023dd2:	bf00      	nop
 8023dd4:	200000ac 	.word	0x200000ac

08023dd8 <sbrk_aligned>:
 8023dd8:	b570      	push	{r4, r5, r6, lr}
 8023dda:	4e0f      	ldr	r6, [pc, #60]	@ (8023e18 <sbrk_aligned+0x40>)
 8023ddc:	460c      	mov	r4, r1
 8023dde:	6831      	ldr	r1, [r6, #0]
 8023de0:	4605      	mov	r5, r0
 8023de2:	b911      	cbnz	r1, 8023dea <sbrk_aligned+0x12>
 8023de4:	f000 fa4c 	bl	8024280 <_sbrk_r>
 8023de8:	6030      	str	r0, [r6, #0]
 8023dea:	4621      	mov	r1, r4
 8023dec:	4628      	mov	r0, r5
 8023dee:	f000 fa47 	bl	8024280 <_sbrk_r>
 8023df2:	1c43      	adds	r3, r0, #1
 8023df4:	d103      	bne.n	8023dfe <sbrk_aligned+0x26>
 8023df6:	f04f 34ff 	mov.w	r4, #4294967295
 8023dfa:	4620      	mov	r0, r4
 8023dfc:	bd70      	pop	{r4, r5, r6, pc}
 8023dfe:	1cc4      	adds	r4, r0, #3
 8023e00:	f024 0403 	bic.w	r4, r4, #3
 8023e04:	42a0      	cmp	r0, r4
 8023e06:	d0f8      	beq.n	8023dfa <sbrk_aligned+0x22>
 8023e08:	1a21      	subs	r1, r4, r0
 8023e0a:	4628      	mov	r0, r5
 8023e0c:	f000 fa38 	bl	8024280 <_sbrk_r>
 8023e10:	3001      	adds	r0, #1
 8023e12:	d1f2      	bne.n	8023dfa <sbrk_aligned+0x22>
 8023e14:	e7ef      	b.n	8023df6 <sbrk_aligned+0x1e>
 8023e16:	bf00      	nop
 8023e18:	20003988 	.word	0x20003988

08023e1c <_malloc_r>:
 8023e1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8023e20:	1ccd      	adds	r5, r1, #3
 8023e22:	f025 0503 	bic.w	r5, r5, #3
 8023e26:	3508      	adds	r5, #8
 8023e28:	2d0c      	cmp	r5, #12
 8023e2a:	bf38      	it	cc
 8023e2c:	250c      	movcc	r5, #12
 8023e2e:	2d00      	cmp	r5, #0
 8023e30:	4606      	mov	r6, r0
 8023e32:	db01      	blt.n	8023e38 <_malloc_r+0x1c>
 8023e34:	42a9      	cmp	r1, r5
 8023e36:	d904      	bls.n	8023e42 <_malloc_r+0x26>
 8023e38:	230c      	movs	r3, #12
 8023e3a:	6033      	str	r3, [r6, #0]
 8023e3c:	2000      	movs	r0, #0
 8023e3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8023e42:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8023f18 <_malloc_r+0xfc>
 8023e46:	f000 f869 	bl	8023f1c <__malloc_lock>
 8023e4a:	f8d8 3000 	ldr.w	r3, [r8]
 8023e4e:	461c      	mov	r4, r3
 8023e50:	bb44      	cbnz	r4, 8023ea4 <_malloc_r+0x88>
 8023e52:	4629      	mov	r1, r5
 8023e54:	4630      	mov	r0, r6
 8023e56:	f7ff ffbf 	bl	8023dd8 <sbrk_aligned>
 8023e5a:	1c43      	adds	r3, r0, #1
 8023e5c:	4604      	mov	r4, r0
 8023e5e:	d158      	bne.n	8023f12 <_malloc_r+0xf6>
 8023e60:	f8d8 4000 	ldr.w	r4, [r8]
 8023e64:	4627      	mov	r7, r4
 8023e66:	2f00      	cmp	r7, #0
 8023e68:	d143      	bne.n	8023ef2 <_malloc_r+0xd6>
 8023e6a:	2c00      	cmp	r4, #0
 8023e6c:	d04b      	beq.n	8023f06 <_malloc_r+0xea>
 8023e6e:	6823      	ldr	r3, [r4, #0]
 8023e70:	4639      	mov	r1, r7
 8023e72:	4630      	mov	r0, r6
 8023e74:	eb04 0903 	add.w	r9, r4, r3
 8023e78:	f000 fa02 	bl	8024280 <_sbrk_r>
 8023e7c:	4581      	cmp	r9, r0
 8023e7e:	d142      	bne.n	8023f06 <_malloc_r+0xea>
 8023e80:	6821      	ldr	r1, [r4, #0]
 8023e82:	1a6d      	subs	r5, r5, r1
 8023e84:	4629      	mov	r1, r5
 8023e86:	4630      	mov	r0, r6
 8023e88:	f7ff ffa6 	bl	8023dd8 <sbrk_aligned>
 8023e8c:	3001      	adds	r0, #1
 8023e8e:	d03a      	beq.n	8023f06 <_malloc_r+0xea>
 8023e90:	6823      	ldr	r3, [r4, #0]
 8023e92:	442b      	add	r3, r5
 8023e94:	6023      	str	r3, [r4, #0]
 8023e96:	f8d8 3000 	ldr.w	r3, [r8]
 8023e9a:	685a      	ldr	r2, [r3, #4]
 8023e9c:	bb62      	cbnz	r2, 8023ef8 <_malloc_r+0xdc>
 8023e9e:	f8c8 7000 	str.w	r7, [r8]
 8023ea2:	e00f      	b.n	8023ec4 <_malloc_r+0xa8>
 8023ea4:	6822      	ldr	r2, [r4, #0]
 8023ea6:	1b52      	subs	r2, r2, r5
 8023ea8:	d420      	bmi.n	8023eec <_malloc_r+0xd0>
 8023eaa:	2a0b      	cmp	r2, #11
 8023eac:	d917      	bls.n	8023ede <_malloc_r+0xc2>
 8023eae:	1961      	adds	r1, r4, r5
 8023eb0:	42a3      	cmp	r3, r4
 8023eb2:	6025      	str	r5, [r4, #0]
 8023eb4:	bf18      	it	ne
 8023eb6:	6059      	strne	r1, [r3, #4]
 8023eb8:	6863      	ldr	r3, [r4, #4]
 8023eba:	bf08      	it	eq
 8023ebc:	f8c8 1000 	streq.w	r1, [r8]
 8023ec0:	5162      	str	r2, [r4, r5]
 8023ec2:	604b      	str	r3, [r1, #4]
 8023ec4:	4630      	mov	r0, r6
 8023ec6:	f000 f82f 	bl	8023f28 <__malloc_unlock>
 8023eca:	f104 000b 	add.w	r0, r4, #11
 8023ece:	1d23      	adds	r3, r4, #4
 8023ed0:	f020 0007 	bic.w	r0, r0, #7
 8023ed4:	1ac2      	subs	r2, r0, r3
 8023ed6:	bf1c      	itt	ne
 8023ed8:	1a1b      	subne	r3, r3, r0
 8023eda:	50a3      	strne	r3, [r4, r2]
 8023edc:	e7af      	b.n	8023e3e <_malloc_r+0x22>
 8023ede:	6862      	ldr	r2, [r4, #4]
 8023ee0:	42a3      	cmp	r3, r4
 8023ee2:	bf0c      	ite	eq
 8023ee4:	f8c8 2000 	streq.w	r2, [r8]
 8023ee8:	605a      	strne	r2, [r3, #4]
 8023eea:	e7eb      	b.n	8023ec4 <_malloc_r+0xa8>
 8023eec:	4623      	mov	r3, r4
 8023eee:	6864      	ldr	r4, [r4, #4]
 8023ef0:	e7ae      	b.n	8023e50 <_malloc_r+0x34>
 8023ef2:	463c      	mov	r4, r7
 8023ef4:	687f      	ldr	r7, [r7, #4]
 8023ef6:	e7b6      	b.n	8023e66 <_malloc_r+0x4a>
 8023ef8:	461a      	mov	r2, r3
 8023efa:	685b      	ldr	r3, [r3, #4]
 8023efc:	42a3      	cmp	r3, r4
 8023efe:	d1fb      	bne.n	8023ef8 <_malloc_r+0xdc>
 8023f00:	2300      	movs	r3, #0
 8023f02:	6053      	str	r3, [r2, #4]
 8023f04:	e7de      	b.n	8023ec4 <_malloc_r+0xa8>
 8023f06:	230c      	movs	r3, #12
 8023f08:	6033      	str	r3, [r6, #0]
 8023f0a:	4630      	mov	r0, r6
 8023f0c:	f000 f80c 	bl	8023f28 <__malloc_unlock>
 8023f10:	e794      	b.n	8023e3c <_malloc_r+0x20>
 8023f12:	6005      	str	r5, [r0, #0]
 8023f14:	e7d6      	b.n	8023ec4 <_malloc_r+0xa8>
 8023f16:	bf00      	nop
 8023f18:	2000398c 	.word	0x2000398c

08023f1c <__malloc_lock>:
 8023f1c:	4801      	ldr	r0, [pc, #4]	@ (8023f24 <__malloc_lock+0x8>)
 8023f1e:	f000 b9fc 	b.w	802431a <__retarget_lock_acquire_recursive>
 8023f22:	bf00      	nop
 8023f24:	20003ad0 	.word	0x20003ad0

08023f28 <__malloc_unlock>:
 8023f28:	4801      	ldr	r0, [pc, #4]	@ (8023f30 <__malloc_unlock+0x8>)
 8023f2a:	f000 b9f7 	b.w	802431c <__retarget_lock_release_recursive>
 8023f2e:	bf00      	nop
 8023f30:	20003ad0 	.word	0x20003ad0

08023f34 <__cxa_atexit>:
 8023f34:	b510      	push	{r4, lr}
 8023f36:	4604      	mov	r4, r0
 8023f38:	4804      	ldr	r0, [pc, #16]	@ (8023f4c <__cxa_atexit+0x18>)
 8023f3a:	4613      	mov	r3, r2
 8023f3c:	b120      	cbz	r0, 8023f48 <__cxa_atexit+0x14>
 8023f3e:	460a      	mov	r2, r1
 8023f40:	2002      	movs	r0, #2
 8023f42:	4621      	mov	r1, r4
 8023f44:	f000 f9fa 	bl	802433c <__register_exitproc>
 8023f48:	bd10      	pop	{r4, pc}
 8023f4a:	bf00      	nop
 8023f4c:	0802433d 	.word	0x0802433d

08023f50 <std>:
 8023f50:	2300      	movs	r3, #0
 8023f52:	b510      	push	{r4, lr}
 8023f54:	4604      	mov	r4, r0
 8023f56:	e9c0 3300 	strd	r3, r3, [r0]
 8023f5a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8023f5e:	6083      	str	r3, [r0, #8]
 8023f60:	8181      	strh	r1, [r0, #12]
 8023f62:	6643      	str	r3, [r0, #100]	@ 0x64
 8023f64:	81c2      	strh	r2, [r0, #14]
 8023f66:	6183      	str	r3, [r0, #24]
 8023f68:	4619      	mov	r1, r3
 8023f6a:	2208      	movs	r2, #8
 8023f6c:	305c      	adds	r0, #92	@ 0x5c
 8023f6e:	f000 f906 	bl	802417e <memset>
 8023f72:	4b0d      	ldr	r3, [pc, #52]	@ (8023fa8 <std+0x58>)
 8023f74:	6263      	str	r3, [r4, #36]	@ 0x24
 8023f76:	4b0d      	ldr	r3, [pc, #52]	@ (8023fac <std+0x5c>)
 8023f78:	62a3      	str	r3, [r4, #40]	@ 0x28
 8023f7a:	4b0d      	ldr	r3, [pc, #52]	@ (8023fb0 <std+0x60>)
 8023f7c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8023f7e:	4b0d      	ldr	r3, [pc, #52]	@ (8023fb4 <std+0x64>)
 8023f80:	6323      	str	r3, [r4, #48]	@ 0x30
 8023f82:	4b0d      	ldr	r3, [pc, #52]	@ (8023fb8 <std+0x68>)
 8023f84:	6224      	str	r4, [r4, #32]
 8023f86:	429c      	cmp	r4, r3
 8023f88:	d006      	beq.n	8023f98 <std+0x48>
 8023f8a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8023f8e:	4294      	cmp	r4, r2
 8023f90:	d002      	beq.n	8023f98 <std+0x48>
 8023f92:	33d0      	adds	r3, #208	@ 0xd0
 8023f94:	429c      	cmp	r4, r3
 8023f96:	d105      	bne.n	8023fa4 <std+0x54>
 8023f98:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8023f9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023fa0:	f000 b9ba 	b.w	8024318 <__retarget_lock_init_recursive>
 8023fa4:	bd10      	pop	{r4, pc}
 8023fa6:	bf00      	nop
 8023fa8:	080240f9 	.word	0x080240f9
 8023fac:	0802411b 	.word	0x0802411b
 8023fb0:	08024153 	.word	0x08024153
 8023fb4:	08024177 	.word	0x08024177
 8023fb8:	20003990 	.word	0x20003990

08023fbc <stdio_exit_handler>:
 8023fbc:	4a02      	ldr	r2, [pc, #8]	@ (8023fc8 <stdio_exit_handler+0xc>)
 8023fbe:	4903      	ldr	r1, [pc, #12]	@ (8023fcc <stdio_exit_handler+0x10>)
 8023fc0:	4803      	ldr	r0, [pc, #12]	@ (8023fd0 <stdio_exit_handler+0x14>)
 8023fc2:	f000 b87b 	b.w	80240bc <_fwalk_sglue>
 8023fc6:	bf00      	nop
 8023fc8:	200000a0 	.word	0x200000a0
 8023fcc:	08024b31 	.word	0x08024b31
 8023fd0:	200000b0 	.word	0x200000b0

08023fd4 <cleanup_stdio>:
 8023fd4:	6841      	ldr	r1, [r0, #4]
 8023fd6:	4b0c      	ldr	r3, [pc, #48]	@ (8024008 <cleanup_stdio+0x34>)
 8023fd8:	4299      	cmp	r1, r3
 8023fda:	b510      	push	{r4, lr}
 8023fdc:	4604      	mov	r4, r0
 8023fde:	d001      	beq.n	8023fe4 <cleanup_stdio+0x10>
 8023fe0:	f000 fda6 	bl	8024b30 <_fflush_r>
 8023fe4:	68a1      	ldr	r1, [r4, #8]
 8023fe6:	4b09      	ldr	r3, [pc, #36]	@ (802400c <cleanup_stdio+0x38>)
 8023fe8:	4299      	cmp	r1, r3
 8023fea:	d002      	beq.n	8023ff2 <cleanup_stdio+0x1e>
 8023fec:	4620      	mov	r0, r4
 8023fee:	f000 fd9f 	bl	8024b30 <_fflush_r>
 8023ff2:	68e1      	ldr	r1, [r4, #12]
 8023ff4:	4b06      	ldr	r3, [pc, #24]	@ (8024010 <cleanup_stdio+0x3c>)
 8023ff6:	4299      	cmp	r1, r3
 8023ff8:	d004      	beq.n	8024004 <cleanup_stdio+0x30>
 8023ffa:	4620      	mov	r0, r4
 8023ffc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024000:	f000 bd96 	b.w	8024b30 <_fflush_r>
 8024004:	bd10      	pop	{r4, pc}
 8024006:	bf00      	nop
 8024008:	20003990 	.word	0x20003990
 802400c:	200039f8 	.word	0x200039f8
 8024010:	20003a60 	.word	0x20003a60

08024014 <global_stdio_init.part.0>:
 8024014:	b510      	push	{r4, lr}
 8024016:	4b0b      	ldr	r3, [pc, #44]	@ (8024044 <global_stdio_init.part.0+0x30>)
 8024018:	4c0b      	ldr	r4, [pc, #44]	@ (8024048 <global_stdio_init.part.0+0x34>)
 802401a:	4a0c      	ldr	r2, [pc, #48]	@ (802404c <global_stdio_init.part.0+0x38>)
 802401c:	601a      	str	r2, [r3, #0]
 802401e:	4620      	mov	r0, r4
 8024020:	2200      	movs	r2, #0
 8024022:	2104      	movs	r1, #4
 8024024:	f7ff ff94 	bl	8023f50 <std>
 8024028:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802402c:	2201      	movs	r2, #1
 802402e:	2109      	movs	r1, #9
 8024030:	f7ff ff8e 	bl	8023f50 <std>
 8024034:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8024038:	2202      	movs	r2, #2
 802403a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802403e:	2112      	movs	r1, #18
 8024040:	f7ff bf86 	b.w	8023f50 <std>
 8024044:	20003ac8 	.word	0x20003ac8
 8024048:	20003990 	.word	0x20003990
 802404c:	08023fbd 	.word	0x08023fbd

08024050 <__sfp_lock_acquire>:
 8024050:	4801      	ldr	r0, [pc, #4]	@ (8024058 <__sfp_lock_acquire+0x8>)
 8024052:	f000 b962 	b.w	802431a <__retarget_lock_acquire_recursive>
 8024056:	bf00      	nop
 8024058:	20003ad2 	.word	0x20003ad2

0802405c <__sfp_lock_release>:
 802405c:	4801      	ldr	r0, [pc, #4]	@ (8024064 <__sfp_lock_release+0x8>)
 802405e:	f000 b95d 	b.w	802431c <__retarget_lock_release_recursive>
 8024062:	bf00      	nop
 8024064:	20003ad2 	.word	0x20003ad2

08024068 <__sinit>:
 8024068:	b510      	push	{r4, lr}
 802406a:	4604      	mov	r4, r0
 802406c:	f7ff fff0 	bl	8024050 <__sfp_lock_acquire>
 8024070:	6a23      	ldr	r3, [r4, #32]
 8024072:	b11b      	cbz	r3, 802407c <__sinit+0x14>
 8024074:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8024078:	f7ff bff0 	b.w	802405c <__sfp_lock_release>
 802407c:	4b04      	ldr	r3, [pc, #16]	@ (8024090 <__sinit+0x28>)
 802407e:	6223      	str	r3, [r4, #32]
 8024080:	4b04      	ldr	r3, [pc, #16]	@ (8024094 <__sinit+0x2c>)
 8024082:	681b      	ldr	r3, [r3, #0]
 8024084:	2b00      	cmp	r3, #0
 8024086:	d1f5      	bne.n	8024074 <__sinit+0xc>
 8024088:	f7ff ffc4 	bl	8024014 <global_stdio_init.part.0>
 802408c:	e7f2      	b.n	8024074 <__sinit+0xc>
 802408e:	bf00      	nop
 8024090:	08023fd5 	.word	0x08023fd5
 8024094:	20003ac8 	.word	0x20003ac8

08024098 <fiprintf>:
 8024098:	b40e      	push	{r1, r2, r3}
 802409a:	b503      	push	{r0, r1, lr}
 802409c:	4601      	mov	r1, r0
 802409e:	ab03      	add	r3, sp, #12
 80240a0:	4805      	ldr	r0, [pc, #20]	@ (80240b8 <fiprintf+0x20>)
 80240a2:	f853 2b04 	ldr.w	r2, [r3], #4
 80240a6:	6800      	ldr	r0, [r0, #0]
 80240a8:	9301      	str	r3, [sp, #4]
 80240aa:	f000 fa17 	bl	80244dc <_vfiprintf_r>
 80240ae:	b002      	add	sp, #8
 80240b0:	f85d eb04 	ldr.w	lr, [sp], #4
 80240b4:	b003      	add	sp, #12
 80240b6:	4770      	bx	lr
 80240b8:	200000ac 	.word	0x200000ac

080240bc <_fwalk_sglue>:
 80240bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80240c0:	4607      	mov	r7, r0
 80240c2:	4688      	mov	r8, r1
 80240c4:	4614      	mov	r4, r2
 80240c6:	2600      	movs	r6, #0
 80240c8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80240cc:	f1b9 0901 	subs.w	r9, r9, #1
 80240d0:	d505      	bpl.n	80240de <_fwalk_sglue+0x22>
 80240d2:	6824      	ldr	r4, [r4, #0]
 80240d4:	2c00      	cmp	r4, #0
 80240d6:	d1f7      	bne.n	80240c8 <_fwalk_sglue+0xc>
 80240d8:	4630      	mov	r0, r6
 80240da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80240de:	89ab      	ldrh	r3, [r5, #12]
 80240e0:	2b01      	cmp	r3, #1
 80240e2:	d907      	bls.n	80240f4 <_fwalk_sglue+0x38>
 80240e4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80240e8:	3301      	adds	r3, #1
 80240ea:	d003      	beq.n	80240f4 <_fwalk_sglue+0x38>
 80240ec:	4629      	mov	r1, r5
 80240ee:	4638      	mov	r0, r7
 80240f0:	47c0      	blx	r8
 80240f2:	4306      	orrs	r6, r0
 80240f4:	3568      	adds	r5, #104	@ 0x68
 80240f6:	e7e9      	b.n	80240cc <_fwalk_sglue+0x10>

080240f8 <__sread>:
 80240f8:	b510      	push	{r4, lr}
 80240fa:	460c      	mov	r4, r1
 80240fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024100:	f000 f898 	bl	8024234 <_read_r>
 8024104:	2800      	cmp	r0, #0
 8024106:	bfab      	itete	ge
 8024108:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802410a:	89a3      	ldrhlt	r3, [r4, #12]
 802410c:	181b      	addge	r3, r3, r0
 802410e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8024112:	bfac      	ite	ge
 8024114:	6563      	strge	r3, [r4, #84]	@ 0x54
 8024116:	81a3      	strhlt	r3, [r4, #12]
 8024118:	bd10      	pop	{r4, pc}

0802411a <__swrite>:
 802411a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802411e:	461f      	mov	r7, r3
 8024120:	898b      	ldrh	r3, [r1, #12]
 8024122:	05db      	lsls	r3, r3, #23
 8024124:	4605      	mov	r5, r0
 8024126:	460c      	mov	r4, r1
 8024128:	4616      	mov	r6, r2
 802412a:	d505      	bpl.n	8024138 <__swrite+0x1e>
 802412c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024130:	2302      	movs	r3, #2
 8024132:	2200      	movs	r2, #0
 8024134:	f000 f86c 	bl	8024210 <_lseek_r>
 8024138:	89a3      	ldrh	r3, [r4, #12]
 802413a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802413e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8024142:	81a3      	strh	r3, [r4, #12]
 8024144:	4632      	mov	r2, r6
 8024146:	463b      	mov	r3, r7
 8024148:	4628      	mov	r0, r5
 802414a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802414e:	f000 b8a7 	b.w	80242a0 <_write_r>

08024152 <__sseek>:
 8024152:	b510      	push	{r4, lr}
 8024154:	460c      	mov	r4, r1
 8024156:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802415a:	f000 f859 	bl	8024210 <_lseek_r>
 802415e:	1c43      	adds	r3, r0, #1
 8024160:	89a3      	ldrh	r3, [r4, #12]
 8024162:	bf15      	itete	ne
 8024164:	6560      	strne	r0, [r4, #84]	@ 0x54
 8024166:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802416a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802416e:	81a3      	strheq	r3, [r4, #12]
 8024170:	bf18      	it	ne
 8024172:	81a3      	strhne	r3, [r4, #12]
 8024174:	bd10      	pop	{r4, pc}

08024176 <__sclose>:
 8024176:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802417a:	f000 b839 	b.w	80241f0 <_close_r>

0802417e <memset>:
 802417e:	4402      	add	r2, r0
 8024180:	4603      	mov	r3, r0
 8024182:	4293      	cmp	r3, r2
 8024184:	d100      	bne.n	8024188 <memset+0xa>
 8024186:	4770      	bx	lr
 8024188:	f803 1b01 	strb.w	r1, [r3], #1
 802418c:	e7f9      	b.n	8024182 <memset+0x4>

0802418e <_raise_r>:
 802418e:	291f      	cmp	r1, #31
 8024190:	b538      	push	{r3, r4, r5, lr}
 8024192:	4605      	mov	r5, r0
 8024194:	460c      	mov	r4, r1
 8024196:	d904      	bls.n	80241a2 <_raise_r+0x14>
 8024198:	2316      	movs	r3, #22
 802419a:	6003      	str	r3, [r0, #0]
 802419c:	f04f 30ff 	mov.w	r0, #4294967295
 80241a0:	bd38      	pop	{r3, r4, r5, pc}
 80241a2:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80241a4:	b112      	cbz	r2, 80241ac <_raise_r+0x1e>
 80241a6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80241aa:	b94b      	cbnz	r3, 80241c0 <_raise_r+0x32>
 80241ac:	4628      	mov	r0, r5
 80241ae:	f000 f865 	bl	802427c <_getpid_r>
 80241b2:	4622      	mov	r2, r4
 80241b4:	4601      	mov	r1, r0
 80241b6:	4628      	mov	r0, r5
 80241b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80241bc:	f000 b84c 	b.w	8024258 <_kill_r>
 80241c0:	2b01      	cmp	r3, #1
 80241c2:	d00a      	beq.n	80241da <_raise_r+0x4c>
 80241c4:	1c59      	adds	r1, r3, #1
 80241c6:	d103      	bne.n	80241d0 <_raise_r+0x42>
 80241c8:	2316      	movs	r3, #22
 80241ca:	6003      	str	r3, [r0, #0]
 80241cc:	2001      	movs	r0, #1
 80241ce:	e7e7      	b.n	80241a0 <_raise_r+0x12>
 80241d0:	2100      	movs	r1, #0
 80241d2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80241d6:	4620      	mov	r0, r4
 80241d8:	4798      	blx	r3
 80241da:	2000      	movs	r0, #0
 80241dc:	e7e0      	b.n	80241a0 <_raise_r+0x12>
	...

080241e0 <raise>:
 80241e0:	4b02      	ldr	r3, [pc, #8]	@ (80241ec <raise+0xc>)
 80241e2:	4601      	mov	r1, r0
 80241e4:	6818      	ldr	r0, [r3, #0]
 80241e6:	f7ff bfd2 	b.w	802418e <_raise_r>
 80241ea:	bf00      	nop
 80241ec:	200000ac 	.word	0x200000ac

080241f0 <_close_r>:
 80241f0:	b538      	push	{r3, r4, r5, lr}
 80241f2:	4d06      	ldr	r5, [pc, #24]	@ (802420c <_close_r+0x1c>)
 80241f4:	2300      	movs	r3, #0
 80241f6:	4604      	mov	r4, r0
 80241f8:	4608      	mov	r0, r1
 80241fa:	602b      	str	r3, [r5, #0]
 80241fc:	f7dd fe90 	bl	8001f20 <_close>
 8024200:	1c43      	adds	r3, r0, #1
 8024202:	d102      	bne.n	802420a <_close_r+0x1a>
 8024204:	682b      	ldr	r3, [r5, #0]
 8024206:	b103      	cbz	r3, 802420a <_close_r+0x1a>
 8024208:	6023      	str	r3, [r4, #0]
 802420a:	bd38      	pop	{r3, r4, r5, pc}
 802420c:	20003acc 	.word	0x20003acc

08024210 <_lseek_r>:
 8024210:	b538      	push	{r3, r4, r5, lr}
 8024212:	4d07      	ldr	r5, [pc, #28]	@ (8024230 <_lseek_r+0x20>)
 8024214:	4604      	mov	r4, r0
 8024216:	4608      	mov	r0, r1
 8024218:	4611      	mov	r1, r2
 802421a:	2200      	movs	r2, #0
 802421c:	602a      	str	r2, [r5, #0]
 802421e:	461a      	mov	r2, r3
 8024220:	f7dd fea5 	bl	8001f6e <_lseek>
 8024224:	1c43      	adds	r3, r0, #1
 8024226:	d102      	bne.n	802422e <_lseek_r+0x1e>
 8024228:	682b      	ldr	r3, [r5, #0]
 802422a:	b103      	cbz	r3, 802422e <_lseek_r+0x1e>
 802422c:	6023      	str	r3, [r4, #0]
 802422e:	bd38      	pop	{r3, r4, r5, pc}
 8024230:	20003acc 	.word	0x20003acc

08024234 <_read_r>:
 8024234:	b538      	push	{r3, r4, r5, lr}
 8024236:	4d07      	ldr	r5, [pc, #28]	@ (8024254 <_read_r+0x20>)
 8024238:	4604      	mov	r4, r0
 802423a:	4608      	mov	r0, r1
 802423c:	4611      	mov	r1, r2
 802423e:	2200      	movs	r2, #0
 8024240:	602a      	str	r2, [r5, #0]
 8024242:	461a      	mov	r2, r3
 8024244:	f7dd fe33 	bl	8001eae <_read>
 8024248:	1c43      	adds	r3, r0, #1
 802424a:	d102      	bne.n	8024252 <_read_r+0x1e>
 802424c:	682b      	ldr	r3, [r5, #0]
 802424e:	b103      	cbz	r3, 8024252 <_read_r+0x1e>
 8024250:	6023      	str	r3, [r4, #0]
 8024252:	bd38      	pop	{r3, r4, r5, pc}
 8024254:	20003acc 	.word	0x20003acc

08024258 <_kill_r>:
 8024258:	b538      	push	{r3, r4, r5, lr}
 802425a:	4d07      	ldr	r5, [pc, #28]	@ (8024278 <_kill_r+0x20>)
 802425c:	2300      	movs	r3, #0
 802425e:	4604      	mov	r4, r0
 8024260:	4608      	mov	r0, r1
 8024262:	4611      	mov	r1, r2
 8024264:	602b      	str	r3, [r5, #0]
 8024266:	f7dd fe07 	bl	8001e78 <_kill>
 802426a:	1c43      	adds	r3, r0, #1
 802426c:	d102      	bne.n	8024274 <_kill_r+0x1c>
 802426e:	682b      	ldr	r3, [r5, #0]
 8024270:	b103      	cbz	r3, 8024274 <_kill_r+0x1c>
 8024272:	6023      	str	r3, [r4, #0]
 8024274:	bd38      	pop	{r3, r4, r5, pc}
 8024276:	bf00      	nop
 8024278:	20003acc 	.word	0x20003acc

0802427c <_getpid_r>:
 802427c:	f7dd bdf4 	b.w	8001e68 <_getpid>

08024280 <_sbrk_r>:
 8024280:	b538      	push	{r3, r4, r5, lr}
 8024282:	4d06      	ldr	r5, [pc, #24]	@ (802429c <_sbrk_r+0x1c>)
 8024284:	2300      	movs	r3, #0
 8024286:	4604      	mov	r4, r0
 8024288:	4608      	mov	r0, r1
 802428a:	602b      	str	r3, [r5, #0]
 802428c:	f7dd fe7c 	bl	8001f88 <_sbrk>
 8024290:	1c43      	adds	r3, r0, #1
 8024292:	d102      	bne.n	802429a <_sbrk_r+0x1a>
 8024294:	682b      	ldr	r3, [r5, #0]
 8024296:	b103      	cbz	r3, 802429a <_sbrk_r+0x1a>
 8024298:	6023      	str	r3, [r4, #0]
 802429a:	bd38      	pop	{r3, r4, r5, pc}
 802429c:	20003acc 	.word	0x20003acc

080242a0 <_write_r>:
 80242a0:	b538      	push	{r3, r4, r5, lr}
 80242a2:	4d07      	ldr	r5, [pc, #28]	@ (80242c0 <_write_r+0x20>)
 80242a4:	4604      	mov	r4, r0
 80242a6:	4608      	mov	r0, r1
 80242a8:	4611      	mov	r1, r2
 80242aa:	2200      	movs	r2, #0
 80242ac:	602a      	str	r2, [r5, #0]
 80242ae:	461a      	mov	r2, r3
 80242b0:	f7dd fe1a 	bl	8001ee8 <_write>
 80242b4:	1c43      	adds	r3, r0, #1
 80242b6:	d102      	bne.n	80242be <_write_r+0x1e>
 80242b8:	682b      	ldr	r3, [r5, #0]
 80242ba:	b103      	cbz	r3, 80242be <_write_r+0x1e>
 80242bc:	6023      	str	r3, [r4, #0]
 80242be:	bd38      	pop	{r3, r4, r5, pc}
 80242c0:	20003acc 	.word	0x20003acc

080242c4 <__errno>:
 80242c4:	4b01      	ldr	r3, [pc, #4]	@ (80242cc <__errno+0x8>)
 80242c6:	6818      	ldr	r0, [r3, #0]
 80242c8:	4770      	bx	lr
 80242ca:	bf00      	nop
 80242cc:	200000ac 	.word	0x200000ac

080242d0 <__libc_init_array>:
 80242d0:	b570      	push	{r4, r5, r6, lr}
 80242d2:	4d0d      	ldr	r5, [pc, #52]	@ (8024308 <__libc_init_array+0x38>)
 80242d4:	4c0d      	ldr	r4, [pc, #52]	@ (802430c <__libc_init_array+0x3c>)
 80242d6:	1b64      	subs	r4, r4, r5
 80242d8:	10a4      	asrs	r4, r4, #2
 80242da:	2600      	movs	r6, #0
 80242dc:	42a6      	cmp	r6, r4
 80242de:	d109      	bne.n	80242f4 <__libc_init_array+0x24>
 80242e0:	4d0b      	ldr	r5, [pc, #44]	@ (8024310 <__libc_init_array+0x40>)
 80242e2:	4c0c      	ldr	r4, [pc, #48]	@ (8024314 <__libc_init_array+0x44>)
 80242e4:	f000 fd64 	bl	8024db0 <_init>
 80242e8:	1b64      	subs	r4, r4, r5
 80242ea:	10a4      	asrs	r4, r4, #2
 80242ec:	2600      	movs	r6, #0
 80242ee:	42a6      	cmp	r6, r4
 80242f0:	d105      	bne.n	80242fe <__libc_init_array+0x2e>
 80242f2:	bd70      	pop	{r4, r5, r6, pc}
 80242f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80242f8:	4798      	blx	r3
 80242fa:	3601      	adds	r6, #1
 80242fc:	e7ee      	b.n	80242dc <__libc_init_array+0xc>
 80242fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8024302:	4798      	blx	r3
 8024304:	3601      	adds	r6, #1
 8024306:	e7f2      	b.n	80242ee <__libc_init_array+0x1e>
 8024308:	0805ddb4 	.word	0x0805ddb4
 802430c:	0805ddb4 	.word	0x0805ddb4
 8024310:	0805ddb4 	.word	0x0805ddb4
 8024314:	0805ddcc 	.word	0x0805ddcc

08024318 <__retarget_lock_init_recursive>:
 8024318:	4770      	bx	lr

0802431a <__retarget_lock_acquire_recursive>:
 802431a:	4770      	bx	lr

0802431c <__retarget_lock_release_recursive>:
 802431c:	4770      	bx	lr

0802431e <memcpy>:
 802431e:	440a      	add	r2, r1
 8024320:	4291      	cmp	r1, r2
 8024322:	f100 33ff 	add.w	r3, r0, #4294967295
 8024326:	d100      	bne.n	802432a <memcpy+0xc>
 8024328:	4770      	bx	lr
 802432a:	b510      	push	{r4, lr}
 802432c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8024330:	f803 4f01 	strb.w	r4, [r3, #1]!
 8024334:	4291      	cmp	r1, r2
 8024336:	d1f9      	bne.n	802432c <memcpy+0xe>
 8024338:	bd10      	pop	{r4, pc}
	...

0802433c <__register_exitproc>:
 802433c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024340:	4d27      	ldr	r5, [pc, #156]	@ (80243e0 <__register_exitproc+0xa4>)
 8024342:	4607      	mov	r7, r0
 8024344:	6828      	ldr	r0, [r5, #0]
 8024346:	4691      	mov	r9, r2
 8024348:	460e      	mov	r6, r1
 802434a:	4698      	mov	r8, r3
 802434c:	f7ff ffe5 	bl	802431a <__retarget_lock_acquire_recursive>
 8024350:	4a24      	ldr	r2, [pc, #144]	@ (80243e4 <__register_exitproc+0xa8>)
 8024352:	6814      	ldr	r4, [r2, #0]
 8024354:	b93c      	cbnz	r4, 8024366 <__register_exitproc+0x2a>
 8024356:	4b24      	ldr	r3, [pc, #144]	@ (80243e8 <__register_exitproc+0xac>)
 8024358:	6013      	str	r3, [r2, #0]
 802435a:	4a24      	ldr	r2, [pc, #144]	@ (80243ec <__register_exitproc+0xb0>)
 802435c:	b112      	cbz	r2, 8024364 <__register_exitproc+0x28>
 802435e:	6812      	ldr	r2, [r2, #0]
 8024360:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8024364:	4c20      	ldr	r4, [pc, #128]	@ (80243e8 <__register_exitproc+0xac>)
 8024366:	6863      	ldr	r3, [r4, #4]
 8024368:	2b1f      	cmp	r3, #31
 802436a:	dd06      	ble.n	802437a <__register_exitproc+0x3e>
 802436c:	6828      	ldr	r0, [r5, #0]
 802436e:	f7ff ffd5 	bl	802431c <__retarget_lock_release_recursive>
 8024372:	f04f 30ff 	mov.w	r0, #4294967295
 8024376:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802437a:	b32f      	cbz	r7, 80243c8 <__register_exitproc+0x8c>
 802437c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8024380:	b968      	cbnz	r0, 802439e <__register_exitproc+0x62>
 8024382:	4b1b      	ldr	r3, [pc, #108]	@ (80243f0 <__register_exitproc+0xb4>)
 8024384:	2b00      	cmp	r3, #0
 8024386:	d0f1      	beq.n	802436c <__register_exitproc+0x30>
 8024388:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802438c:	f7ff fd14 	bl	8023db8 <malloc>
 8024390:	2800      	cmp	r0, #0
 8024392:	d0eb      	beq.n	802436c <__register_exitproc+0x30>
 8024394:	2300      	movs	r3, #0
 8024396:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802439a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802439e:	6863      	ldr	r3, [r4, #4]
 80243a0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80243a4:	2201      	movs	r2, #1
 80243a6:	409a      	lsls	r2, r3
 80243a8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80243ac:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80243b0:	4313      	orrs	r3, r2
 80243b2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80243b6:	2f02      	cmp	r7, #2
 80243b8:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80243bc:	bf02      	ittt	eq
 80243be:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80243c2:	4313      	orreq	r3, r2
 80243c4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80243c8:	6863      	ldr	r3, [r4, #4]
 80243ca:	6828      	ldr	r0, [r5, #0]
 80243cc:	1c5a      	adds	r2, r3, #1
 80243ce:	3302      	adds	r3, #2
 80243d0:	6062      	str	r2, [r4, #4]
 80243d2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80243d6:	f7ff ffa1 	bl	802431c <__retarget_lock_release_recursive>
 80243da:	2000      	movs	r0, #0
 80243dc:	e7cb      	b.n	8024376 <__register_exitproc+0x3a>
 80243de:	bf00      	nop
 80243e0:	200000fc 	.word	0x200000fc
 80243e4:	20003b60 	.word	0x20003b60
 80243e8:	20003ad4 	.word	0x20003ad4
 80243ec:	08027608 	.word	0x08027608
 80243f0:	08023db9 	.word	0x08023db9

080243f4 <_free_r>:
 80243f4:	b538      	push	{r3, r4, r5, lr}
 80243f6:	4605      	mov	r5, r0
 80243f8:	2900      	cmp	r1, #0
 80243fa:	d041      	beq.n	8024480 <_free_r+0x8c>
 80243fc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8024400:	1f0c      	subs	r4, r1, #4
 8024402:	2b00      	cmp	r3, #0
 8024404:	bfb8      	it	lt
 8024406:	18e4      	addlt	r4, r4, r3
 8024408:	f7ff fd88 	bl	8023f1c <__malloc_lock>
 802440c:	4a1d      	ldr	r2, [pc, #116]	@ (8024484 <_free_r+0x90>)
 802440e:	6813      	ldr	r3, [r2, #0]
 8024410:	b933      	cbnz	r3, 8024420 <_free_r+0x2c>
 8024412:	6063      	str	r3, [r4, #4]
 8024414:	6014      	str	r4, [r2, #0]
 8024416:	4628      	mov	r0, r5
 8024418:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802441c:	f7ff bd84 	b.w	8023f28 <__malloc_unlock>
 8024420:	42a3      	cmp	r3, r4
 8024422:	d908      	bls.n	8024436 <_free_r+0x42>
 8024424:	6820      	ldr	r0, [r4, #0]
 8024426:	1821      	adds	r1, r4, r0
 8024428:	428b      	cmp	r3, r1
 802442a:	bf01      	itttt	eq
 802442c:	6819      	ldreq	r1, [r3, #0]
 802442e:	685b      	ldreq	r3, [r3, #4]
 8024430:	1809      	addeq	r1, r1, r0
 8024432:	6021      	streq	r1, [r4, #0]
 8024434:	e7ed      	b.n	8024412 <_free_r+0x1e>
 8024436:	461a      	mov	r2, r3
 8024438:	685b      	ldr	r3, [r3, #4]
 802443a:	b10b      	cbz	r3, 8024440 <_free_r+0x4c>
 802443c:	42a3      	cmp	r3, r4
 802443e:	d9fa      	bls.n	8024436 <_free_r+0x42>
 8024440:	6811      	ldr	r1, [r2, #0]
 8024442:	1850      	adds	r0, r2, r1
 8024444:	42a0      	cmp	r0, r4
 8024446:	d10b      	bne.n	8024460 <_free_r+0x6c>
 8024448:	6820      	ldr	r0, [r4, #0]
 802444a:	4401      	add	r1, r0
 802444c:	1850      	adds	r0, r2, r1
 802444e:	4283      	cmp	r3, r0
 8024450:	6011      	str	r1, [r2, #0]
 8024452:	d1e0      	bne.n	8024416 <_free_r+0x22>
 8024454:	6818      	ldr	r0, [r3, #0]
 8024456:	685b      	ldr	r3, [r3, #4]
 8024458:	6053      	str	r3, [r2, #4]
 802445a:	4408      	add	r0, r1
 802445c:	6010      	str	r0, [r2, #0]
 802445e:	e7da      	b.n	8024416 <_free_r+0x22>
 8024460:	d902      	bls.n	8024468 <_free_r+0x74>
 8024462:	230c      	movs	r3, #12
 8024464:	602b      	str	r3, [r5, #0]
 8024466:	e7d6      	b.n	8024416 <_free_r+0x22>
 8024468:	6820      	ldr	r0, [r4, #0]
 802446a:	1821      	adds	r1, r4, r0
 802446c:	428b      	cmp	r3, r1
 802446e:	bf04      	itt	eq
 8024470:	6819      	ldreq	r1, [r3, #0]
 8024472:	685b      	ldreq	r3, [r3, #4]
 8024474:	6063      	str	r3, [r4, #4]
 8024476:	bf04      	itt	eq
 8024478:	1809      	addeq	r1, r1, r0
 802447a:	6021      	streq	r1, [r4, #0]
 802447c:	6054      	str	r4, [r2, #4]
 802447e:	e7ca      	b.n	8024416 <_free_r+0x22>
 8024480:	bd38      	pop	{r3, r4, r5, pc}
 8024482:	bf00      	nop
 8024484:	2000398c 	.word	0x2000398c

08024488 <__sfputc_r>:
 8024488:	6893      	ldr	r3, [r2, #8]
 802448a:	3b01      	subs	r3, #1
 802448c:	2b00      	cmp	r3, #0
 802448e:	b410      	push	{r4}
 8024490:	6093      	str	r3, [r2, #8]
 8024492:	da08      	bge.n	80244a6 <__sfputc_r+0x1e>
 8024494:	6994      	ldr	r4, [r2, #24]
 8024496:	42a3      	cmp	r3, r4
 8024498:	db01      	blt.n	802449e <__sfputc_r+0x16>
 802449a:	290a      	cmp	r1, #10
 802449c:	d103      	bne.n	80244a6 <__sfputc_r+0x1e>
 802449e:	f85d 4b04 	ldr.w	r4, [sp], #4
 80244a2:	f000 bb6d 	b.w	8024b80 <__swbuf_r>
 80244a6:	6813      	ldr	r3, [r2, #0]
 80244a8:	1c58      	adds	r0, r3, #1
 80244aa:	6010      	str	r0, [r2, #0]
 80244ac:	7019      	strb	r1, [r3, #0]
 80244ae:	4608      	mov	r0, r1
 80244b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80244b4:	4770      	bx	lr

080244b6 <__sfputs_r>:
 80244b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80244b8:	4606      	mov	r6, r0
 80244ba:	460f      	mov	r7, r1
 80244bc:	4614      	mov	r4, r2
 80244be:	18d5      	adds	r5, r2, r3
 80244c0:	42ac      	cmp	r4, r5
 80244c2:	d101      	bne.n	80244c8 <__sfputs_r+0x12>
 80244c4:	2000      	movs	r0, #0
 80244c6:	e007      	b.n	80244d8 <__sfputs_r+0x22>
 80244c8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80244cc:	463a      	mov	r2, r7
 80244ce:	4630      	mov	r0, r6
 80244d0:	f7ff ffda 	bl	8024488 <__sfputc_r>
 80244d4:	1c43      	adds	r3, r0, #1
 80244d6:	d1f3      	bne.n	80244c0 <__sfputs_r+0xa>
 80244d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080244dc <_vfiprintf_r>:
 80244dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80244e0:	460d      	mov	r5, r1
 80244e2:	b09d      	sub	sp, #116	@ 0x74
 80244e4:	4614      	mov	r4, r2
 80244e6:	4698      	mov	r8, r3
 80244e8:	4606      	mov	r6, r0
 80244ea:	b118      	cbz	r0, 80244f4 <_vfiprintf_r+0x18>
 80244ec:	6a03      	ldr	r3, [r0, #32]
 80244ee:	b90b      	cbnz	r3, 80244f4 <_vfiprintf_r+0x18>
 80244f0:	f7ff fdba 	bl	8024068 <__sinit>
 80244f4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80244f6:	07d9      	lsls	r1, r3, #31
 80244f8:	d405      	bmi.n	8024506 <_vfiprintf_r+0x2a>
 80244fa:	89ab      	ldrh	r3, [r5, #12]
 80244fc:	059a      	lsls	r2, r3, #22
 80244fe:	d402      	bmi.n	8024506 <_vfiprintf_r+0x2a>
 8024500:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8024502:	f7ff ff0a 	bl	802431a <__retarget_lock_acquire_recursive>
 8024506:	89ab      	ldrh	r3, [r5, #12]
 8024508:	071b      	lsls	r3, r3, #28
 802450a:	d501      	bpl.n	8024510 <_vfiprintf_r+0x34>
 802450c:	692b      	ldr	r3, [r5, #16]
 802450e:	b99b      	cbnz	r3, 8024538 <_vfiprintf_r+0x5c>
 8024510:	4629      	mov	r1, r5
 8024512:	4630      	mov	r0, r6
 8024514:	f000 fb72 	bl	8024bfc <__swsetup_r>
 8024518:	b170      	cbz	r0, 8024538 <_vfiprintf_r+0x5c>
 802451a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802451c:	07dc      	lsls	r4, r3, #31
 802451e:	d504      	bpl.n	802452a <_vfiprintf_r+0x4e>
 8024520:	f04f 30ff 	mov.w	r0, #4294967295
 8024524:	b01d      	add	sp, #116	@ 0x74
 8024526:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802452a:	89ab      	ldrh	r3, [r5, #12]
 802452c:	0598      	lsls	r0, r3, #22
 802452e:	d4f7      	bmi.n	8024520 <_vfiprintf_r+0x44>
 8024530:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8024532:	f7ff fef3 	bl	802431c <__retarget_lock_release_recursive>
 8024536:	e7f3      	b.n	8024520 <_vfiprintf_r+0x44>
 8024538:	2300      	movs	r3, #0
 802453a:	9309      	str	r3, [sp, #36]	@ 0x24
 802453c:	2320      	movs	r3, #32
 802453e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8024542:	f8cd 800c 	str.w	r8, [sp, #12]
 8024546:	2330      	movs	r3, #48	@ 0x30
 8024548:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80246f8 <_vfiprintf_r+0x21c>
 802454c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8024550:	f04f 0901 	mov.w	r9, #1
 8024554:	4623      	mov	r3, r4
 8024556:	469a      	mov	sl, r3
 8024558:	f813 2b01 	ldrb.w	r2, [r3], #1
 802455c:	b10a      	cbz	r2, 8024562 <_vfiprintf_r+0x86>
 802455e:	2a25      	cmp	r2, #37	@ 0x25
 8024560:	d1f9      	bne.n	8024556 <_vfiprintf_r+0x7a>
 8024562:	ebba 0b04 	subs.w	fp, sl, r4
 8024566:	d00b      	beq.n	8024580 <_vfiprintf_r+0xa4>
 8024568:	465b      	mov	r3, fp
 802456a:	4622      	mov	r2, r4
 802456c:	4629      	mov	r1, r5
 802456e:	4630      	mov	r0, r6
 8024570:	f7ff ffa1 	bl	80244b6 <__sfputs_r>
 8024574:	3001      	adds	r0, #1
 8024576:	f000 80a7 	beq.w	80246c8 <_vfiprintf_r+0x1ec>
 802457a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802457c:	445a      	add	r2, fp
 802457e:	9209      	str	r2, [sp, #36]	@ 0x24
 8024580:	f89a 3000 	ldrb.w	r3, [sl]
 8024584:	2b00      	cmp	r3, #0
 8024586:	f000 809f 	beq.w	80246c8 <_vfiprintf_r+0x1ec>
 802458a:	2300      	movs	r3, #0
 802458c:	f04f 32ff 	mov.w	r2, #4294967295
 8024590:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8024594:	f10a 0a01 	add.w	sl, sl, #1
 8024598:	9304      	str	r3, [sp, #16]
 802459a:	9307      	str	r3, [sp, #28]
 802459c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80245a0:	931a      	str	r3, [sp, #104]	@ 0x68
 80245a2:	4654      	mov	r4, sl
 80245a4:	2205      	movs	r2, #5
 80245a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80245aa:	4853      	ldr	r0, [pc, #332]	@ (80246f8 <_vfiprintf_r+0x21c>)
 80245ac:	f7db fe30 	bl	8000210 <memchr>
 80245b0:	9a04      	ldr	r2, [sp, #16]
 80245b2:	b9d8      	cbnz	r0, 80245ec <_vfiprintf_r+0x110>
 80245b4:	06d1      	lsls	r1, r2, #27
 80245b6:	bf44      	itt	mi
 80245b8:	2320      	movmi	r3, #32
 80245ba:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80245be:	0713      	lsls	r3, r2, #28
 80245c0:	bf44      	itt	mi
 80245c2:	232b      	movmi	r3, #43	@ 0x2b
 80245c4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80245c8:	f89a 3000 	ldrb.w	r3, [sl]
 80245cc:	2b2a      	cmp	r3, #42	@ 0x2a
 80245ce:	d015      	beq.n	80245fc <_vfiprintf_r+0x120>
 80245d0:	9a07      	ldr	r2, [sp, #28]
 80245d2:	4654      	mov	r4, sl
 80245d4:	2000      	movs	r0, #0
 80245d6:	f04f 0c0a 	mov.w	ip, #10
 80245da:	4621      	mov	r1, r4
 80245dc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80245e0:	3b30      	subs	r3, #48	@ 0x30
 80245e2:	2b09      	cmp	r3, #9
 80245e4:	d94b      	bls.n	802467e <_vfiprintf_r+0x1a2>
 80245e6:	b1b0      	cbz	r0, 8024616 <_vfiprintf_r+0x13a>
 80245e8:	9207      	str	r2, [sp, #28]
 80245ea:	e014      	b.n	8024616 <_vfiprintf_r+0x13a>
 80245ec:	eba0 0308 	sub.w	r3, r0, r8
 80245f0:	fa09 f303 	lsl.w	r3, r9, r3
 80245f4:	4313      	orrs	r3, r2
 80245f6:	9304      	str	r3, [sp, #16]
 80245f8:	46a2      	mov	sl, r4
 80245fa:	e7d2      	b.n	80245a2 <_vfiprintf_r+0xc6>
 80245fc:	9b03      	ldr	r3, [sp, #12]
 80245fe:	1d19      	adds	r1, r3, #4
 8024600:	681b      	ldr	r3, [r3, #0]
 8024602:	9103      	str	r1, [sp, #12]
 8024604:	2b00      	cmp	r3, #0
 8024606:	bfbb      	ittet	lt
 8024608:	425b      	neglt	r3, r3
 802460a:	f042 0202 	orrlt.w	r2, r2, #2
 802460e:	9307      	strge	r3, [sp, #28]
 8024610:	9307      	strlt	r3, [sp, #28]
 8024612:	bfb8      	it	lt
 8024614:	9204      	strlt	r2, [sp, #16]
 8024616:	7823      	ldrb	r3, [r4, #0]
 8024618:	2b2e      	cmp	r3, #46	@ 0x2e
 802461a:	d10a      	bne.n	8024632 <_vfiprintf_r+0x156>
 802461c:	7863      	ldrb	r3, [r4, #1]
 802461e:	2b2a      	cmp	r3, #42	@ 0x2a
 8024620:	d132      	bne.n	8024688 <_vfiprintf_r+0x1ac>
 8024622:	9b03      	ldr	r3, [sp, #12]
 8024624:	1d1a      	adds	r2, r3, #4
 8024626:	681b      	ldr	r3, [r3, #0]
 8024628:	9203      	str	r2, [sp, #12]
 802462a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802462e:	3402      	adds	r4, #2
 8024630:	9305      	str	r3, [sp, #20]
 8024632:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8024708 <_vfiprintf_r+0x22c>
 8024636:	7821      	ldrb	r1, [r4, #0]
 8024638:	2203      	movs	r2, #3
 802463a:	4650      	mov	r0, sl
 802463c:	f7db fde8 	bl	8000210 <memchr>
 8024640:	b138      	cbz	r0, 8024652 <_vfiprintf_r+0x176>
 8024642:	9b04      	ldr	r3, [sp, #16]
 8024644:	eba0 000a 	sub.w	r0, r0, sl
 8024648:	2240      	movs	r2, #64	@ 0x40
 802464a:	4082      	lsls	r2, r0
 802464c:	4313      	orrs	r3, r2
 802464e:	3401      	adds	r4, #1
 8024650:	9304      	str	r3, [sp, #16]
 8024652:	f814 1b01 	ldrb.w	r1, [r4], #1
 8024656:	4829      	ldr	r0, [pc, #164]	@ (80246fc <_vfiprintf_r+0x220>)
 8024658:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802465c:	2206      	movs	r2, #6
 802465e:	f7db fdd7 	bl	8000210 <memchr>
 8024662:	2800      	cmp	r0, #0
 8024664:	d03f      	beq.n	80246e6 <_vfiprintf_r+0x20a>
 8024666:	4b26      	ldr	r3, [pc, #152]	@ (8024700 <_vfiprintf_r+0x224>)
 8024668:	bb1b      	cbnz	r3, 80246b2 <_vfiprintf_r+0x1d6>
 802466a:	9b03      	ldr	r3, [sp, #12]
 802466c:	3307      	adds	r3, #7
 802466e:	f023 0307 	bic.w	r3, r3, #7
 8024672:	3308      	adds	r3, #8
 8024674:	9303      	str	r3, [sp, #12]
 8024676:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024678:	443b      	add	r3, r7
 802467a:	9309      	str	r3, [sp, #36]	@ 0x24
 802467c:	e76a      	b.n	8024554 <_vfiprintf_r+0x78>
 802467e:	fb0c 3202 	mla	r2, ip, r2, r3
 8024682:	460c      	mov	r4, r1
 8024684:	2001      	movs	r0, #1
 8024686:	e7a8      	b.n	80245da <_vfiprintf_r+0xfe>
 8024688:	2300      	movs	r3, #0
 802468a:	3401      	adds	r4, #1
 802468c:	9305      	str	r3, [sp, #20]
 802468e:	4619      	mov	r1, r3
 8024690:	f04f 0c0a 	mov.w	ip, #10
 8024694:	4620      	mov	r0, r4
 8024696:	f810 2b01 	ldrb.w	r2, [r0], #1
 802469a:	3a30      	subs	r2, #48	@ 0x30
 802469c:	2a09      	cmp	r2, #9
 802469e:	d903      	bls.n	80246a8 <_vfiprintf_r+0x1cc>
 80246a0:	2b00      	cmp	r3, #0
 80246a2:	d0c6      	beq.n	8024632 <_vfiprintf_r+0x156>
 80246a4:	9105      	str	r1, [sp, #20]
 80246a6:	e7c4      	b.n	8024632 <_vfiprintf_r+0x156>
 80246a8:	fb0c 2101 	mla	r1, ip, r1, r2
 80246ac:	4604      	mov	r4, r0
 80246ae:	2301      	movs	r3, #1
 80246b0:	e7f0      	b.n	8024694 <_vfiprintf_r+0x1b8>
 80246b2:	ab03      	add	r3, sp, #12
 80246b4:	9300      	str	r3, [sp, #0]
 80246b6:	462a      	mov	r2, r5
 80246b8:	4b12      	ldr	r3, [pc, #72]	@ (8024704 <_vfiprintf_r+0x228>)
 80246ba:	a904      	add	r1, sp, #16
 80246bc:	4630      	mov	r0, r6
 80246be:	f3af 8000 	nop.w
 80246c2:	4607      	mov	r7, r0
 80246c4:	1c78      	adds	r0, r7, #1
 80246c6:	d1d6      	bne.n	8024676 <_vfiprintf_r+0x19a>
 80246c8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80246ca:	07d9      	lsls	r1, r3, #31
 80246cc:	d405      	bmi.n	80246da <_vfiprintf_r+0x1fe>
 80246ce:	89ab      	ldrh	r3, [r5, #12]
 80246d0:	059a      	lsls	r2, r3, #22
 80246d2:	d402      	bmi.n	80246da <_vfiprintf_r+0x1fe>
 80246d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80246d6:	f7ff fe21 	bl	802431c <__retarget_lock_release_recursive>
 80246da:	89ab      	ldrh	r3, [r5, #12]
 80246dc:	065b      	lsls	r3, r3, #25
 80246de:	f53f af1f 	bmi.w	8024520 <_vfiprintf_r+0x44>
 80246e2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80246e4:	e71e      	b.n	8024524 <_vfiprintf_r+0x48>
 80246e6:	ab03      	add	r3, sp, #12
 80246e8:	9300      	str	r3, [sp, #0]
 80246ea:	462a      	mov	r2, r5
 80246ec:	4b05      	ldr	r3, [pc, #20]	@ (8024704 <_vfiprintf_r+0x228>)
 80246ee:	a904      	add	r1, sp, #16
 80246f0:	4630      	mov	r0, r6
 80246f2:	f000 f879 	bl	80247e8 <_printf_i>
 80246f6:	e7e4      	b.n	80246c2 <_vfiprintf_r+0x1e6>
 80246f8:	0802760c 	.word	0x0802760c
 80246fc:	08027616 	.word	0x08027616
 8024700:	00000000 	.word	0x00000000
 8024704:	080244b7 	.word	0x080244b7
 8024708:	08027612 	.word	0x08027612

0802470c <_printf_common>:
 802470c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024710:	4616      	mov	r6, r2
 8024712:	4698      	mov	r8, r3
 8024714:	688a      	ldr	r2, [r1, #8]
 8024716:	690b      	ldr	r3, [r1, #16]
 8024718:	f8dd 9020 	ldr.w	r9, [sp, #32]
 802471c:	4293      	cmp	r3, r2
 802471e:	bfb8      	it	lt
 8024720:	4613      	movlt	r3, r2
 8024722:	6033      	str	r3, [r6, #0]
 8024724:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8024728:	4607      	mov	r7, r0
 802472a:	460c      	mov	r4, r1
 802472c:	b10a      	cbz	r2, 8024732 <_printf_common+0x26>
 802472e:	3301      	adds	r3, #1
 8024730:	6033      	str	r3, [r6, #0]
 8024732:	6823      	ldr	r3, [r4, #0]
 8024734:	0699      	lsls	r1, r3, #26
 8024736:	bf42      	ittt	mi
 8024738:	6833      	ldrmi	r3, [r6, #0]
 802473a:	3302      	addmi	r3, #2
 802473c:	6033      	strmi	r3, [r6, #0]
 802473e:	6825      	ldr	r5, [r4, #0]
 8024740:	f015 0506 	ands.w	r5, r5, #6
 8024744:	d106      	bne.n	8024754 <_printf_common+0x48>
 8024746:	f104 0a19 	add.w	sl, r4, #25
 802474a:	68e3      	ldr	r3, [r4, #12]
 802474c:	6832      	ldr	r2, [r6, #0]
 802474e:	1a9b      	subs	r3, r3, r2
 8024750:	42ab      	cmp	r3, r5
 8024752:	dc26      	bgt.n	80247a2 <_printf_common+0x96>
 8024754:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8024758:	6822      	ldr	r2, [r4, #0]
 802475a:	3b00      	subs	r3, #0
 802475c:	bf18      	it	ne
 802475e:	2301      	movne	r3, #1
 8024760:	0692      	lsls	r2, r2, #26
 8024762:	d42b      	bmi.n	80247bc <_printf_common+0xb0>
 8024764:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8024768:	4641      	mov	r1, r8
 802476a:	4638      	mov	r0, r7
 802476c:	47c8      	blx	r9
 802476e:	3001      	adds	r0, #1
 8024770:	d01e      	beq.n	80247b0 <_printf_common+0xa4>
 8024772:	6823      	ldr	r3, [r4, #0]
 8024774:	6922      	ldr	r2, [r4, #16]
 8024776:	f003 0306 	and.w	r3, r3, #6
 802477a:	2b04      	cmp	r3, #4
 802477c:	bf02      	ittt	eq
 802477e:	68e5      	ldreq	r5, [r4, #12]
 8024780:	6833      	ldreq	r3, [r6, #0]
 8024782:	1aed      	subeq	r5, r5, r3
 8024784:	68a3      	ldr	r3, [r4, #8]
 8024786:	bf0c      	ite	eq
 8024788:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802478c:	2500      	movne	r5, #0
 802478e:	4293      	cmp	r3, r2
 8024790:	bfc4      	itt	gt
 8024792:	1a9b      	subgt	r3, r3, r2
 8024794:	18ed      	addgt	r5, r5, r3
 8024796:	2600      	movs	r6, #0
 8024798:	341a      	adds	r4, #26
 802479a:	42b5      	cmp	r5, r6
 802479c:	d11a      	bne.n	80247d4 <_printf_common+0xc8>
 802479e:	2000      	movs	r0, #0
 80247a0:	e008      	b.n	80247b4 <_printf_common+0xa8>
 80247a2:	2301      	movs	r3, #1
 80247a4:	4652      	mov	r2, sl
 80247a6:	4641      	mov	r1, r8
 80247a8:	4638      	mov	r0, r7
 80247aa:	47c8      	blx	r9
 80247ac:	3001      	adds	r0, #1
 80247ae:	d103      	bne.n	80247b8 <_printf_common+0xac>
 80247b0:	f04f 30ff 	mov.w	r0, #4294967295
 80247b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80247b8:	3501      	adds	r5, #1
 80247ba:	e7c6      	b.n	802474a <_printf_common+0x3e>
 80247bc:	18e1      	adds	r1, r4, r3
 80247be:	1c5a      	adds	r2, r3, #1
 80247c0:	2030      	movs	r0, #48	@ 0x30
 80247c2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80247c6:	4422      	add	r2, r4
 80247c8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80247cc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80247d0:	3302      	adds	r3, #2
 80247d2:	e7c7      	b.n	8024764 <_printf_common+0x58>
 80247d4:	2301      	movs	r3, #1
 80247d6:	4622      	mov	r2, r4
 80247d8:	4641      	mov	r1, r8
 80247da:	4638      	mov	r0, r7
 80247dc:	47c8      	blx	r9
 80247de:	3001      	adds	r0, #1
 80247e0:	d0e6      	beq.n	80247b0 <_printf_common+0xa4>
 80247e2:	3601      	adds	r6, #1
 80247e4:	e7d9      	b.n	802479a <_printf_common+0x8e>
	...

080247e8 <_printf_i>:
 80247e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80247ec:	7e0f      	ldrb	r7, [r1, #24]
 80247ee:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80247f0:	2f78      	cmp	r7, #120	@ 0x78
 80247f2:	4691      	mov	r9, r2
 80247f4:	4680      	mov	r8, r0
 80247f6:	460c      	mov	r4, r1
 80247f8:	469a      	mov	sl, r3
 80247fa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80247fe:	d807      	bhi.n	8024810 <_printf_i+0x28>
 8024800:	2f62      	cmp	r7, #98	@ 0x62
 8024802:	d80a      	bhi.n	802481a <_printf_i+0x32>
 8024804:	2f00      	cmp	r7, #0
 8024806:	f000 80d2 	beq.w	80249ae <_printf_i+0x1c6>
 802480a:	2f58      	cmp	r7, #88	@ 0x58
 802480c:	f000 80b9 	beq.w	8024982 <_printf_i+0x19a>
 8024810:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8024814:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8024818:	e03a      	b.n	8024890 <_printf_i+0xa8>
 802481a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 802481e:	2b15      	cmp	r3, #21
 8024820:	d8f6      	bhi.n	8024810 <_printf_i+0x28>
 8024822:	a101      	add	r1, pc, #4	@ (adr r1, 8024828 <_printf_i+0x40>)
 8024824:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8024828:	08024881 	.word	0x08024881
 802482c:	08024895 	.word	0x08024895
 8024830:	08024811 	.word	0x08024811
 8024834:	08024811 	.word	0x08024811
 8024838:	08024811 	.word	0x08024811
 802483c:	08024811 	.word	0x08024811
 8024840:	08024895 	.word	0x08024895
 8024844:	08024811 	.word	0x08024811
 8024848:	08024811 	.word	0x08024811
 802484c:	08024811 	.word	0x08024811
 8024850:	08024811 	.word	0x08024811
 8024854:	08024995 	.word	0x08024995
 8024858:	080248bf 	.word	0x080248bf
 802485c:	0802494f 	.word	0x0802494f
 8024860:	08024811 	.word	0x08024811
 8024864:	08024811 	.word	0x08024811
 8024868:	080249b7 	.word	0x080249b7
 802486c:	08024811 	.word	0x08024811
 8024870:	080248bf 	.word	0x080248bf
 8024874:	08024811 	.word	0x08024811
 8024878:	08024811 	.word	0x08024811
 802487c:	08024957 	.word	0x08024957
 8024880:	6833      	ldr	r3, [r6, #0]
 8024882:	1d1a      	adds	r2, r3, #4
 8024884:	681b      	ldr	r3, [r3, #0]
 8024886:	6032      	str	r2, [r6, #0]
 8024888:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802488c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8024890:	2301      	movs	r3, #1
 8024892:	e09d      	b.n	80249d0 <_printf_i+0x1e8>
 8024894:	6833      	ldr	r3, [r6, #0]
 8024896:	6820      	ldr	r0, [r4, #0]
 8024898:	1d19      	adds	r1, r3, #4
 802489a:	6031      	str	r1, [r6, #0]
 802489c:	0606      	lsls	r6, r0, #24
 802489e:	d501      	bpl.n	80248a4 <_printf_i+0xbc>
 80248a0:	681d      	ldr	r5, [r3, #0]
 80248a2:	e003      	b.n	80248ac <_printf_i+0xc4>
 80248a4:	0645      	lsls	r5, r0, #25
 80248a6:	d5fb      	bpl.n	80248a0 <_printf_i+0xb8>
 80248a8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80248ac:	2d00      	cmp	r5, #0
 80248ae:	da03      	bge.n	80248b8 <_printf_i+0xd0>
 80248b0:	232d      	movs	r3, #45	@ 0x2d
 80248b2:	426d      	negs	r5, r5
 80248b4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80248b8:	4859      	ldr	r0, [pc, #356]	@ (8024a20 <_printf_i+0x238>)
 80248ba:	230a      	movs	r3, #10
 80248bc:	e011      	b.n	80248e2 <_printf_i+0xfa>
 80248be:	6821      	ldr	r1, [r4, #0]
 80248c0:	6833      	ldr	r3, [r6, #0]
 80248c2:	0608      	lsls	r0, r1, #24
 80248c4:	f853 5b04 	ldr.w	r5, [r3], #4
 80248c8:	d402      	bmi.n	80248d0 <_printf_i+0xe8>
 80248ca:	0649      	lsls	r1, r1, #25
 80248cc:	bf48      	it	mi
 80248ce:	b2ad      	uxthmi	r5, r5
 80248d0:	2f6f      	cmp	r7, #111	@ 0x6f
 80248d2:	4853      	ldr	r0, [pc, #332]	@ (8024a20 <_printf_i+0x238>)
 80248d4:	6033      	str	r3, [r6, #0]
 80248d6:	bf14      	ite	ne
 80248d8:	230a      	movne	r3, #10
 80248da:	2308      	moveq	r3, #8
 80248dc:	2100      	movs	r1, #0
 80248de:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80248e2:	6866      	ldr	r6, [r4, #4]
 80248e4:	60a6      	str	r6, [r4, #8]
 80248e6:	2e00      	cmp	r6, #0
 80248e8:	bfa2      	ittt	ge
 80248ea:	6821      	ldrge	r1, [r4, #0]
 80248ec:	f021 0104 	bicge.w	r1, r1, #4
 80248f0:	6021      	strge	r1, [r4, #0]
 80248f2:	b90d      	cbnz	r5, 80248f8 <_printf_i+0x110>
 80248f4:	2e00      	cmp	r6, #0
 80248f6:	d04b      	beq.n	8024990 <_printf_i+0x1a8>
 80248f8:	4616      	mov	r6, r2
 80248fa:	fbb5 f1f3 	udiv	r1, r5, r3
 80248fe:	fb03 5711 	mls	r7, r3, r1, r5
 8024902:	5dc7      	ldrb	r7, [r0, r7]
 8024904:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8024908:	462f      	mov	r7, r5
 802490a:	42bb      	cmp	r3, r7
 802490c:	460d      	mov	r5, r1
 802490e:	d9f4      	bls.n	80248fa <_printf_i+0x112>
 8024910:	2b08      	cmp	r3, #8
 8024912:	d10b      	bne.n	802492c <_printf_i+0x144>
 8024914:	6823      	ldr	r3, [r4, #0]
 8024916:	07df      	lsls	r7, r3, #31
 8024918:	d508      	bpl.n	802492c <_printf_i+0x144>
 802491a:	6923      	ldr	r3, [r4, #16]
 802491c:	6861      	ldr	r1, [r4, #4]
 802491e:	4299      	cmp	r1, r3
 8024920:	bfde      	ittt	le
 8024922:	2330      	movle	r3, #48	@ 0x30
 8024924:	f806 3c01 	strble.w	r3, [r6, #-1]
 8024928:	f106 36ff 	addle.w	r6, r6, #4294967295
 802492c:	1b92      	subs	r2, r2, r6
 802492e:	6122      	str	r2, [r4, #16]
 8024930:	f8cd a000 	str.w	sl, [sp]
 8024934:	464b      	mov	r3, r9
 8024936:	aa03      	add	r2, sp, #12
 8024938:	4621      	mov	r1, r4
 802493a:	4640      	mov	r0, r8
 802493c:	f7ff fee6 	bl	802470c <_printf_common>
 8024940:	3001      	adds	r0, #1
 8024942:	d14a      	bne.n	80249da <_printf_i+0x1f2>
 8024944:	f04f 30ff 	mov.w	r0, #4294967295
 8024948:	b004      	add	sp, #16
 802494a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802494e:	6823      	ldr	r3, [r4, #0]
 8024950:	f043 0320 	orr.w	r3, r3, #32
 8024954:	6023      	str	r3, [r4, #0]
 8024956:	4833      	ldr	r0, [pc, #204]	@ (8024a24 <_printf_i+0x23c>)
 8024958:	2778      	movs	r7, #120	@ 0x78
 802495a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 802495e:	6823      	ldr	r3, [r4, #0]
 8024960:	6831      	ldr	r1, [r6, #0]
 8024962:	061f      	lsls	r7, r3, #24
 8024964:	f851 5b04 	ldr.w	r5, [r1], #4
 8024968:	d402      	bmi.n	8024970 <_printf_i+0x188>
 802496a:	065f      	lsls	r7, r3, #25
 802496c:	bf48      	it	mi
 802496e:	b2ad      	uxthmi	r5, r5
 8024970:	6031      	str	r1, [r6, #0]
 8024972:	07d9      	lsls	r1, r3, #31
 8024974:	bf44      	itt	mi
 8024976:	f043 0320 	orrmi.w	r3, r3, #32
 802497a:	6023      	strmi	r3, [r4, #0]
 802497c:	b11d      	cbz	r5, 8024986 <_printf_i+0x19e>
 802497e:	2310      	movs	r3, #16
 8024980:	e7ac      	b.n	80248dc <_printf_i+0xf4>
 8024982:	4827      	ldr	r0, [pc, #156]	@ (8024a20 <_printf_i+0x238>)
 8024984:	e7e9      	b.n	802495a <_printf_i+0x172>
 8024986:	6823      	ldr	r3, [r4, #0]
 8024988:	f023 0320 	bic.w	r3, r3, #32
 802498c:	6023      	str	r3, [r4, #0]
 802498e:	e7f6      	b.n	802497e <_printf_i+0x196>
 8024990:	4616      	mov	r6, r2
 8024992:	e7bd      	b.n	8024910 <_printf_i+0x128>
 8024994:	6833      	ldr	r3, [r6, #0]
 8024996:	6825      	ldr	r5, [r4, #0]
 8024998:	6961      	ldr	r1, [r4, #20]
 802499a:	1d18      	adds	r0, r3, #4
 802499c:	6030      	str	r0, [r6, #0]
 802499e:	062e      	lsls	r6, r5, #24
 80249a0:	681b      	ldr	r3, [r3, #0]
 80249a2:	d501      	bpl.n	80249a8 <_printf_i+0x1c0>
 80249a4:	6019      	str	r1, [r3, #0]
 80249a6:	e002      	b.n	80249ae <_printf_i+0x1c6>
 80249a8:	0668      	lsls	r0, r5, #25
 80249aa:	d5fb      	bpl.n	80249a4 <_printf_i+0x1bc>
 80249ac:	8019      	strh	r1, [r3, #0]
 80249ae:	2300      	movs	r3, #0
 80249b0:	6123      	str	r3, [r4, #16]
 80249b2:	4616      	mov	r6, r2
 80249b4:	e7bc      	b.n	8024930 <_printf_i+0x148>
 80249b6:	6833      	ldr	r3, [r6, #0]
 80249b8:	1d1a      	adds	r2, r3, #4
 80249ba:	6032      	str	r2, [r6, #0]
 80249bc:	681e      	ldr	r6, [r3, #0]
 80249be:	6862      	ldr	r2, [r4, #4]
 80249c0:	2100      	movs	r1, #0
 80249c2:	4630      	mov	r0, r6
 80249c4:	f7db fc24 	bl	8000210 <memchr>
 80249c8:	b108      	cbz	r0, 80249ce <_printf_i+0x1e6>
 80249ca:	1b80      	subs	r0, r0, r6
 80249cc:	6060      	str	r0, [r4, #4]
 80249ce:	6863      	ldr	r3, [r4, #4]
 80249d0:	6123      	str	r3, [r4, #16]
 80249d2:	2300      	movs	r3, #0
 80249d4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80249d8:	e7aa      	b.n	8024930 <_printf_i+0x148>
 80249da:	6923      	ldr	r3, [r4, #16]
 80249dc:	4632      	mov	r2, r6
 80249de:	4649      	mov	r1, r9
 80249e0:	4640      	mov	r0, r8
 80249e2:	47d0      	blx	sl
 80249e4:	3001      	adds	r0, #1
 80249e6:	d0ad      	beq.n	8024944 <_printf_i+0x15c>
 80249e8:	6823      	ldr	r3, [r4, #0]
 80249ea:	079b      	lsls	r3, r3, #30
 80249ec:	d413      	bmi.n	8024a16 <_printf_i+0x22e>
 80249ee:	68e0      	ldr	r0, [r4, #12]
 80249f0:	9b03      	ldr	r3, [sp, #12]
 80249f2:	4298      	cmp	r0, r3
 80249f4:	bfb8      	it	lt
 80249f6:	4618      	movlt	r0, r3
 80249f8:	e7a6      	b.n	8024948 <_printf_i+0x160>
 80249fa:	2301      	movs	r3, #1
 80249fc:	4632      	mov	r2, r6
 80249fe:	4649      	mov	r1, r9
 8024a00:	4640      	mov	r0, r8
 8024a02:	47d0      	blx	sl
 8024a04:	3001      	adds	r0, #1
 8024a06:	d09d      	beq.n	8024944 <_printf_i+0x15c>
 8024a08:	3501      	adds	r5, #1
 8024a0a:	68e3      	ldr	r3, [r4, #12]
 8024a0c:	9903      	ldr	r1, [sp, #12]
 8024a0e:	1a5b      	subs	r3, r3, r1
 8024a10:	42ab      	cmp	r3, r5
 8024a12:	dcf2      	bgt.n	80249fa <_printf_i+0x212>
 8024a14:	e7eb      	b.n	80249ee <_printf_i+0x206>
 8024a16:	2500      	movs	r5, #0
 8024a18:	f104 0619 	add.w	r6, r4, #25
 8024a1c:	e7f5      	b.n	8024a0a <_printf_i+0x222>
 8024a1e:	bf00      	nop
 8024a20:	0802761d 	.word	0x0802761d
 8024a24:	0802762e 	.word	0x0802762e

08024a28 <__sflush_r>:
 8024a28:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8024a2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8024a30:	0716      	lsls	r6, r2, #28
 8024a32:	4605      	mov	r5, r0
 8024a34:	460c      	mov	r4, r1
 8024a36:	d454      	bmi.n	8024ae2 <__sflush_r+0xba>
 8024a38:	684b      	ldr	r3, [r1, #4]
 8024a3a:	2b00      	cmp	r3, #0
 8024a3c:	dc02      	bgt.n	8024a44 <__sflush_r+0x1c>
 8024a3e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8024a40:	2b00      	cmp	r3, #0
 8024a42:	dd48      	ble.n	8024ad6 <__sflush_r+0xae>
 8024a44:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8024a46:	2e00      	cmp	r6, #0
 8024a48:	d045      	beq.n	8024ad6 <__sflush_r+0xae>
 8024a4a:	2300      	movs	r3, #0
 8024a4c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8024a50:	682f      	ldr	r7, [r5, #0]
 8024a52:	6a21      	ldr	r1, [r4, #32]
 8024a54:	602b      	str	r3, [r5, #0]
 8024a56:	d030      	beq.n	8024aba <__sflush_r+0x92>
 8024a58:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8024a5a:	89a3      	ldrh	r3, [r4, #12]
 8024a5c:	0759      	lsls	r1, r3, #29
 8024a5e:	d505      	bpl.n	8024a6c <__sflush_r+0x44>
 8024a60:	6863      	ldr	r3, [r4, #4]
 8024a62:	1ad2      	subs	r2, r2, r3
 8024a64:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8024a66:	b10b      	cbz	r3, 8024a6c <__sflush_r+0x44>
 8024a68:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8024a6a:	1ad2      	subs	r2, r2, r3
 8024a6c:	2300      	movs	r3, #0
 8024a6e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8024a70:	6a21      	ldr	r1, [r4, #32]
 8024a72:	4628      	mov	r0, r5
 8024a74:	47b0      	blx	r6
 8024a76:	1c43      	adds	r3, r0, #1
 8024a78:	89a3      	ldrh	r3, [r4, #12]
 8024a7a:	d106      	bne.n	8024a8a <__sflush_r+0x62>
 8024a7c:	6829      	ldr	r1, [r5, #0]
 8024a7e:	291d      	cmp	r1, #29
 8024a80:	d82b      	bhi.n	8024ada <__sflush_r+0xb2>
 8024a82:	4a2a      	ldr	r2, [pc, #168]	@ (8024b2c <__sflush_r+0x104>)
 8024a84:	410a      	asrs	r2, r1
 8024a86:	07d6      	lsls	r6, r2, #31
 8024a88:	d427      	bmi.n	8024ada <__sflush_r+0xb2>
 8024a8a:	2200      	movs	r2, #0
 8024a8c:	6062      	str	r2, [r4, #4]
 8024a8e:	04d9      	lsls	r1, r3, #19
 8024a90:	6922      	ldr	r2, [r4, #16]
 8024a92:	6022      	str	r2, [r4, #0]
 8024a94:	d504      	bpl.n	8024aa0 <__sflush_r+0x78>
 8024a96:	1c42      	adds	r2, r0, #1
 8024a98:	d101      	bne.n	8024a9e <__sflush_r+0x76>
 8024a9a:	682b      	ldr	r3, [r5, #0]
 8024a9c:	b903      	cbnz	r3, 8024aa0 <__sflush_r+0x78>
 8024a9e:	6560      	str	r0, [r4, #84]	@ 0x54
 8024aa0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8024aa2:	602f      	str	r7, [r5, #0]
 8024aa4:	b1b9      	cbz	r1, 8024ad6 <__sflush_r+0xae>
 8024aa6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8024aaa:	4299      	cmp	r1, r3
 8024aac:	d002      	beq.n	8024ab4 <__sflush_r+0x8c>
 8024aae:	4628      	mov	r0, r5
 8024ab0:	f7ff fca0 	bl	80243f4 <_free_r>
 8024ab4:	2300      	movs	r3, #0
 8024ab6:	6363      	str	r3, [r4, #52]	@ 0x34
 8024ab8:	e00d      	b.n	8024ad6 <__sflush_r+0xae>
 8024aba:	2301      	movs	r3, #1
 8024abc:	4628      	mov	r0, r5
 8024abe:	47b0      	blx	r6
 8024ac0:	4602      	mov	r2, r0
 8024ac2:	1c50      	adds	r0, r2, #1
 8024ac4:	d1c9      	bne.n	8024a5a <__sflush_r+0x32>
 8024ac6:	682b      	ldr	r3, [r5, #0]
 8024ac8:	2b00      	cmp	r3, #0
 8024aca:	d0c6      	beq.n	8024a5a <__sflush_r+0x32>
 8024acc:	2b1d      	cmp	r3, #29
 8024ace:	d001      	beq.n	8024ad4 <__sflush_r+0xac>
 8024ad0:	2b16      	cmp	r3, #22
 8024ad2:	d11e      	bne.n	8024b12 <__sflush_r+0xea>
 8024ad4:	602f      	str	r7, [r5, #0]
 8024ad6:	2000      	movs	r0, #0
 8024ad8:	e022      	b.n	8024b20 <__sflush_r+0xf8>
 8024ada:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8024ade:	b21b      	sxth	r3, r3
 8024ae0:	e01b      	b.n	8024b1a <__sflush_r+0xf2>
 8024ae2:	690f      	ldr	r7, [r1, #16]
 8024ae4:	2f00      	cmp	r7, #0
 8024ae6:	d0f6      	beq.n	8024ad6 <__sflush_r+0xae>
 8024ae8:	0793      	lsls	r3, r2, #30
 8024aea:	680e      	ldr	r6, [r1, #0]
 8024aec:	bf08      	it	eq
 8024aee:	694b      	ldreq	r3, [r1, #20]
 8024af0:	600f      	str	r7, [r1, #0]
 8024af2:	bf18      	it	ne
 8024af4:	2300      	movne	r3, #0
 8024af6:	eba6 0807 	sub.w	r8, r6, r7
 8024afa:	608b      	str	r3, [r1, #8]
 8024afc:	f1b8 0f00 	cmp.w	r8, #0
 8024b00:	dde9      	ble.n	8024ad6 <__sflush_r+0xae>
 8024b02:	6a21      	ldr	r1, [r4, #32]
 8024b04:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8024b06:	4643      	mov	r3, r8
 8024b08:	463a      	mov	r2, r7
 8024b0a:	4628      	mov	r0, r5
 8024b0c:	47b0      	blx	r6
 8024b0e:	2800      	cmp	r0, #0
 8024b10:	dc08      	bgt.n	8024b24 <__sflush_r+0xfc>
 8024b12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024b16:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8024b1a:	81a3      	strh	r3, [r4, #12]
 8024b1c:	f04f 30ff 	mov.w	r0, #4294967295
 8024b20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8024b24:	4407      	add	r7, r0
 8024b26:	eba8 0800 	sub.w	r8, r8, r0
 8024b2a:	e7e7      	b.n	8024afc <__sflush_r+0xd4>
 8024b2c:	dfbffffe 	.word	0xdfbffffe

08024b30 <_fflush_r>:
 8024b30:	b538      	push	{r3, r4, r5, lr}
 8024b32:	690b      	ldr	r3, [r1, #16]
 8024b34:	4605      	mov	r5, r0
 8024b36:	460c      	mov	r4, r1
 8024b38:	b913      	cbnz	r3, 8024b40 <_fflush_r+0x10>
 8024b3a:	2500      	movs	r5, #0
 8024b3c:	4628      	mov	r0, r5
 8024b3e:	bd38      	pop	{r3, r4, r5, pc}
 8024b40:	b118      	cbz	r0, 8024b4a <_fflush_r+0x1a>
 8024b42:	6a03      	ldr	r3, [r0, #32]
 8024b44:	b90b      	cbnz	r3, 8024b4a <_fflush_r+0x1a>
 8024b46:	f7ff fa8f 	bl	8024068 <__sinit>
 8024b4a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024b4e:	2b00      	cmp	r3, #0
 8024b50:	d0f3      	beq.n	8024b3a <_fflush_r+0xa>
 8024b52:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8024b54:	07d0      	lsls	r0, r2, #31
 8024b56:	d404      	bmi.n	8024b62 <_fflush_r+0x32>
 8024b58:	0599      	lsls	r1, r3, #22
 8024b5a:	d402      	bmi.n	8024b62 <_fflush_r+0x32>
 8024b5c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024b5e:	f7ff fbdc 	bl	802431a <__retarget_lock_acquire_recursive>
 8024b62:	4628      	mov	r0, r5
 8024b64:	4621      	mov	r1, r4
 8024b66:	f7ff ff5f 	bl	8024a28 <__sflush_r>
 8024b6a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8024b6c:	07da      	lsls	r2, r3, #31
 8024b6e:	4605      	mov	r5, r0
 8024b70:	d4e4      	bmi.n	8024b3c <_fflush_r+0xc>
 8024b72:	89a3      	ldrh	r3, [r4, #12]
 8024b74:	059b      	lsls	r3, r3, #22
 8024b76:	d4e1      	bmi.n	8024b3c <_fflush_r+0xc>
 8024b78:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8024b7a:	f7ff fbcf 	bl	802431c <__retarget_lock_release_recursive>
 8024b7e:	e7dd      	b.n	8024b3c <_fflush_r+0xc>

08024b80 <__swbuf_r>:
 8024b80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024b82:	460e      	mov	r6, r1
 8024b84:	4614      	mov	r4, r2
 8024b86:	4605      	mov	r5, r0
 8024b88:	b118      	cbz	r0, 8024b92 <__swbuf_r+0x12>
 8024b8a:	6a03      	ldr	r3, [r0, #32]
 8024b8c:	b90b      	cbnz	r3, 8024b92 <__swbuf_r+0x12>
 8024b8e:	f7ff fa6b 	bl	8024068 <__sinit>
 8024b92:	69a3      	ldr	r3, [r4, #24]
 8024b94:	60a3      	str	r3, [r4, #8]
 8024b96:	89a3      	ldrh	r3, [r4, #12]
 8024b98:	071a      	lsls	r2, r3, #28
 8024b9a:	d501      	bpl.n	8024ba0 <__swbuf_r+0x20>
 8024b9c:	6923      	ldr	r3, [r4, #16]
 8024b9e:	b943      	cbnz	r3, 8024bb2 <__swbuf_r+0x32>
 8024ba0:	4621      	mov	r1, r4
 8024ba2:	4628      	mov	r0, r5
 8024ba4:	f000 f82a 	bl	8024bfc <__swsetup_r>
 8024ba8:	b118      	cbz	r0, 8024bb2 <__swbuf_r+0x32>
 8024baa:	f04f 37ff 	mov.w	r7, #4294967295
 8024bae:	4638      	mov	r0, r7
 8024bb0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024bb2:	6823      	ldr	r3, [r4, #0]
 8024bb4:	6922      	ldr	r2, [r4, #16]
 8024bb6:	1a98      	subs	r0, r3, r2
 8024bb8:	6963      	ldr	r3, [r4, #20]
 8024bba:	b2f6      	uxtb	r6, r6
 8024bbc:	4283      	cmp	r3, r0
 8024bbe:	4637      	mov	r7, r6
 8024bc0:	dc05      	bgt.n	8024bce <__swbuf_r+0x4e>
 8024bc2:	4621      	mov	r1, r4
 8024bc4:	4628      	mov	r0, r5
 8024bc6:	f7ff ffb3 	bl	8024b30 <_fflush_r>
 8024bca:	2800      	cmp	r0, #0
 8024bcc:	d1ed      	bne.n	8024baa <__swbuf_r+0x2a>
 8024bce:	68a3      	ldr	r3, [r4, #8]
 8024bd0:	3b01      	subs	r3, #1
 8024bd2:	60a3      	str	r3, [r4, #8]
 8024bd4:	6823      	ldr	r3, [r4, #0]
 8024bd6:	1c5a      	adds	r2, r3, #1
 8024bd8:	6022      	str	r2, [r4, #0]
 8024bda:	701e      	strb	r6, [r3, #0]
 8024bdc:	6962      	ldr	r2, [r4, #20]
 8024bde:	1c43      	adds	r3, r0, #1
 8024be0:	429a      	cmp	r2, r3
 8024be2:	d004      	beq.n	8024bee <__swbuf_r+0x6e>
 8024be4:	89a3      	ldrh	r3, [r4, #12]
 8024be6:	07db      	lsls	r3, r3, #31
 8024be8:	d5e1      	bpl.n	8024bae <__swbuf_r+0x2e>
 8024bea:	2e0a      	cmp	r6, #10
 8024bec:	d1df      	bne.n	8024bae <__swbuf_r+0x2e>
 8024bee:	4621      	mov	r1, r4
 8024bf0:	4628      	mov	r0, r5
 8024bf2:	f7ff ff9d 	bl	8024b30 <_fflush_r>
 8024bf6:	2800      	cmp	r0, #0
 8024bf8:	d0d9      	beq.n	8024bae <__swbuf_r+0x2e>
 8024bfa:	e7d6      	b.n	8024baa <__swbuf_r+0x2a>

08024bfc <__swsetup_r>:
 8024bfc:	b538      	push	{r3, r4, r5, lr}
 8024bfe:	4b29      	ldr	r3, [pc, #164]	@ (8024ca4 <__swsetup_r+0xa8>)
 8024c00:	4605      	mov	r5, r0
 8024c02:	6818      	ldr	r0, [r3, #0]
 8024c04:	460c      	mov	r4, r1
 8024c06:	b118      	cbz	r0, 8024c10 <__swsetup_r+0x14>
 8024c08:	6a03      	ldr	r3, [r0, #32]
 8024c0a:	b90b      	cbnz	r3, 8024c10 <__swsetup_r+0x14>
 8024c0c:	f7ff fa2c 	bl	8024068 <__sinit>
 8024c10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024c14:	0719      	lsls	r1, r3, #28
 8024c16:	d422      	bmi.n	8024c5e <__swsetup_r+0x62>
 8024c18:	06da      	lsls	r2, r3, #27
 8024c1a:	d407      	bmi.n	8024c2c <__swsetup_r+0x30>
 8024c1c:	2209      	movs	r2, #9
 8024c1e:	602a      	str	r2, [r5, #0]
 8024c20:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8024c24:	81a3      	strh	r3, [r4, #12]
 8024c26:	f04f 30ff 	mov.w	r0, #4294967295
 8024c2a:	e033      	b.n	8024c94 <__swsetup_r+0x98>
 8024c2c:	0758      	lsls	r0, r3, #29
 8024c2e:	d512      	bpl.n	8024c56 <__swsetup_r+0x5a>
 8024c30:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8024c32:	b141      	cbz	r1, 8024c46 <__swsetup_r+0x4a>
 8024c34:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8024c38:	4299      	cmp	r1, r3
 8024c3a:	d002      	beq.n	8024c42 <__swsetup_r+0x46>
 8024c3c:	4628      	mov	r0, r5
 8024c3e:	f7ff fbd9 	bl	80243f4 <_free_r>
 8024c42:	2300      	movs	r3, #0
 8024c44:	6363      	str	r3, [r4, #52]	@ 0x34
 8024c46:	89a3      	ldrh	r3, [r4, #12]
 8024c48:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8024c4c:	81a3      	strh	r3, [r4, #12]
 8024c4e:	2300      	movs	r3, #0
 8024c50:	6063      	str	r3, [r4, #4]
 8024c52:	6923      	ldr	r3, [r4, #16]
 8024c54:	6023      	str	r3, [r4, #0]
 8024c56:	89a3      	ldrh	r3, [r4, #12]
 8024c58:	f043 0308 	orr.w	r3, r3, #8
 8024c5c:	81a3      	strh	r3, [r4, #12]
 8024c5e:	6923      	ldr	r3, [r4, #16]
 8024c60:	b94b      	cbnz	r3, 8024c76 <__swsetup_r+0x7a>
 8024c62:	89a3      	ldrh	r3, [r4, #12]
 8024c64:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8024c68:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8024c6c:	d003      	beq.n	8024c76 <__swsetup_r+0x7a>
 8024c6e:	4621      	mov	r1, r4
 8024c70:	4628      	mov	r0, r5
 8024c72:	f000 f83f 	bl	8024cf4 <__smakebuf_r>
 8024c76:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024c7a:	f013 0201 	ands.w	r2, r3, #1
 8024c7e:	d00a      	beq.n	8024c96 <__swsetup_r+0x9a>
 8024c80:	2200      	movs	r2, #0
 8024c82:	60a2      	str	r2, [r4, #8]
 8024c84:	6962      	ldr	r2, [r4, #20]
 8024c86:	4252      	negs	r2, r2
 8024c88:	61a2      	str	r2, [r4, #24]
 8024c8a:	6922      	ldr	r2, [r4, #16]
 8024c8c:	b942      	cbnz	r2, 8024ca0 <__swsetup_r+0xa4>
 8024c8e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8024c92:	d1c5      	bne.n	8024c20 <__swsetup_r+0x24>
 8024c94:	bd38      	pop	{r3, r4, r5, pc}
 8024c96:	0799      	lsls	r1, r3, #30
 8024c98:	bf58      	it	pl
 8024c9a:	6962      	ldrpl	r2, [r4, #20]
 8024c9c:	60a2      	str	r2, [r4, #8]
 8024c9e:	e7f4      	b.n	8024c8a <__swsetup_r+0x8e>
 8024ca0:	2000      	movs	r0, #0
 8024ca2:	e7f7      	b.n	8024c94 <__swsetup_r+0x98>
 8024ca4:	200000ac 	.word	0x200000ac

08024ca8 <__swhatbuf_r>:
 8024ca8:	b570      	push	{r4, r5, r6, lr}
 8024caa:	460c      	mov	r4, r1
 8024cac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8024cb0:	2900      	cmp	r1, #0
 8024cb2:	b096      	sub	sp, #88	@ 0x58
 8024cb4:	4615      	mov	r5, r2
 8024cb6:	461e      	mov	r6, r3
 8024cb8:	da0d      	bge.n	8024cd6 <__swhatbuf_r+0x2e>
 8024cba:	89a3      	ldrh	r3, [r4, #12]
 8024cbc:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8024cc0:	f04f 0100 	mov.w	r1, #0
 8024cc4:	bf14      	ite	ne
 8024cc6:	2340      	movne	r3, #64	@ 0x40
 8024cc8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8024ccc:	2000      	movs	r0, #0
 8024cce:	6031      	str	r1, [r6, #0]
 8024cd0:	602b      	str	r3, [r5, #0]
 8024cd2:	b016      	add	sp, #88	@ 0x58
 8024cd4:	bd70      	pop	{r4, r5, r6, pc}
 8024cd6:	466a      	mov	r2, sp
 8024cd8:	f000 f848 	bl	8024d6c <_fstat_r>
 8024cdc:	2800      	cmp	r0, #0
 8024cde:	dbec      	blt.n	8024cba <__swhatbuf_r+0x12>
 8024ce0:	9901      	ldr	r1, [sp, #4]
 8024ce2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8024ce6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8024cea:	4259      	negs	r1, r3
 8024cec:	4159      	adcs	r1, r3
 8024cee:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8024cf2:	e7eb      	b.n	8024ccc <__swhatbuf_r+0x24>

08024cf4 <__smakebuf_r>:
 8024cf4:	898b      	ldrh	r3, [r1, #12]
 8024cf6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8024cf8:	079d      	lsls	r5, r3, #30
 8024cfa:	4606      	mov	r6, r0
 8024cfc:	460c      	mov	r4, r1
 8024cfe:	d507      	bpl.n	8024d10 <__smakebuf_r+0x1c>
 8024d00:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8024d04:	6023      	str	r3, [r4, #0]
 8024d06:	6123      	str	r3, [r4, #16]
 8024d08:	2301      	movs	r3, #1
 8024d0a:	6163      	str	r3, [r4, #20]
 8024d0c:	b003      	add	sp, #12
 8024d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024d10:	ab01      	add	r3, sp, #4
 8024d12:	466a      	mov	r2, sp
 8024d14:	f7ff ffc8 	bl	8024ca8 <__swhatbuf_r>
 8024d18:	9f00      	ldr	r7, [sp, #0]
 8024d1a:	4605      	mov	r5, r0
 8024d1c:	4639      	mov	r1, r7
 8024d1e:	4630      	mov	r0, r6
 8024d20:	f7ff f87c 	bl	8023e1c <_malloc_r>
 8024d24:	b948      	cbnz	r0, 8024d3a <__smakebuf_r+0x46>
 8024d26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8024d2a:	059a      	lsls	r2, r3, #22
 8024d2c:	d4ee      	bmi.n	8024d0c <__smakebuf_r+0x18>
 8024d2e:	f023 0303 	bic.w	r3, r3, #3
 8024d32:	f043 0302 	orr.w	r3, r3, #2
 8024d36:	81a3      	strh	r3, [r4, #12]
 8024d38:	e7e2      	b.n	8024d00 <__smakebuf_r+0xc>
 8024d3a:	89a3      	ldrh	r3, [r4, #12]
 8024d3c:	6020      	str	r0, [r4, #0]
 8024d3e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8024d42:	81a3      	strh	r3, [r4, #12]
 8024d44:	9b01      	ldr	r3, [sp, #4]
 8024d46:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8024d4a:	b15b      	cbz	r3, 8024d64 <__smakebuf_r+0x70>
 8024d4c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8024d50:	4630      	mov	r0, r6
 8024d52:	f000 f81d 	bl	8024d90 <_isatty_r>
 8024d56:	b128      	cbz	r0, 8024d64 <__smakebuf_r+0x70>
 8024d58:	89a3      	ldrh	r3, [r4, #12]
 8024d5a:	f023 0303 	bic.w	r3, r3, #3
 8024d5e:	f043 0301 	orr.w	r3, r3, #1
 8024d62:	81a3      	strh	r3, [r4, #12]
 8024d64:	89a3      	ldrh	r3, [r4, #12]
 8024d66:	431d      	orrs	r5, r3
 8024d68:	81a5      	strh	r5, [r4, #12]
 8024d6a:	e7cf      	b.n	8024d0c <__smakebuf_r+0x18>

08024d6c <_fstat_r>:
 8024d6c:	b538      	push	{r3, r4, r5, lr}
 8024d6e:	4d07      	ldr	r5, [pc, #28]	@ (8024d8c <_fstat_r+0x20>)
 8024d70:	2300      	movs	r3, #0
 8024d72:	4604      	mov	r4, r0
 8024d74:	4608      	mov	r0, r1
 8024d76:	4611      	mov	r1, r2
 8024d78:	602b      	str	r3, [r5, #0]
 8024d7a:	f7dd f8dd 	bl	8001f38 <_fstat>
 8024d7e:	1c43      	adds	r3, r0, #1
 8024d80:	d102      	bne.n	8024d88 <_fstat_r+0x1c>
 8024d82:	682b      	ldr	r3, [r5, #0]
 8024d84:	b103      	cbz	r3, 8024d88 <_fstat_r+0x1c>
 8024d86:	6023      	str	r3, [r4, #0]
 8024d88:	bd38      	pop	{r3, r4, r5, pc}
 8024d8a:	bf00      	nop
 8024d8c:	20003acc 	.word	0x20003acc

08024d90 <_isatty_r>:
 8024d90:	b538      	push	{r3, r4, r5, lr}
 8024d92:	4d06      	ldr	r5, [pc, #24]	@ (8024dac <_isatty_r+0x1c>)
 8024d94:	2300      	movs	r3, #0
 8024d96:	4604      	mov	r4, r0
 8024d98:	4608      	mov	r0, r1
 8024d9a:	602b      	str	r3, [r5, #0]
 8024d9c:	f7dd f8dc 	bl	8001f58 <_isatty>
 8024da0:	1c43      	adds	r3, r0, #1
 8024da2:	d102      	bne.n	8024daa <_isatty_r+0x1a>
 8024da4:	682b      	ldr	r3, [r5, #0]
 8024da6:	b103      	cbz	r3, 8024daa <_isatty_r+0x1a>
 8024da8:	6023      	str	r3, [r4, #0]
 8024daa:	bd38      	pop	{r3, r4, r5, pc}
 8024dac:	20003acc 	.word	0x20003acc

08024db0 <_init>:
 8024db0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024db2:	bf00      	nop
 8024db4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024db6:	bc08      	pop	{r3}
 8024db8:	469e      	mov	lr, r3
 8024dba:	4770      	bx	lr

08024dbc <_fini>:
 8024dbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024dbe:	bf00      	nop
 8024dc0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8024dc2:	bc08      	pop	{r3}
 8024dc4:	469e      	mov	lr, r3
 8024dc6:	4770      	bx	lr
